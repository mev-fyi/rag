00:00:01.770 - 00:00:37.818, Speaker A: Okay everyone, so this is the secondboost community call. We'll call it Medboost community call number one because I started zero indexing them and the agenda is in the chat. Let's see here. Not well, we'll see how much we get through. Could be a lot depending on the conversations we get into. The first thing we want to do is go know upcoming hard fork readiness for capella. So we just had the Sepolia hard fork and I think it went pretty well.
00:00:37.818 - 00:00:47.660, Speaker A: I don't know if anyone here wants to add anything else to how that went. Maybe Chris, if you have any color on that?
00:00:49.550 - 00:00:51.200, Speaker B: Sorry, can you repeat the question?
00:00:51.730 - 00:00:56.298, Speaker A: Yeah, just how did things go for the Sepolio fork?
00:00:56.474 - 00:01:37.180, Speaker B: Yeah, for Sepolio it went well. Our stacked worked from our end. On the relay main branch, everything is working. Mafboost has a release out, an alpha release that is also linked. I will post a link in the chat here too. We had an issue setting the correct Shanghai override, so it only worked a few hours later. And I will also link that document again where we summarize the Capella changes.
00:01:37.180 - 00:01:49.280, Speaker B: But all is in order from our stack. We are in the process of merging like Builder and Prism into the default branches, but both Mapboost and this is already done.
00:01:52.050 - 00:02:01.570, Speaker A: Okay, great. So yeah, after we fix the coordination issues or sorry, configuration issues, everything seemed to be working fine with Sepolia.
00:02:03.190 - 00:02:23.450, Speaker B: Yeah, and we expect it will be on Gurley too. Everything code wise is already predefined. We are investigating updating to the latest GEF version, but that's not necessary on the Builder. But you need to set the Shanghai overwrite then manually. I will post an update about this at latest on Monday.
00:02:24.990 - 00:03:11.820, Speaker A: Okay, sounds good. So yeah, I think that's probably it for Sepulia. So we'll just keep moving right into Gorley. Yeah. So this hard fork is on the 14th, so just a few days here and yeah, again, any relay operators in the crowd? On the last call we had said basically we'd use this call to do any coordination required for Gurley. Are there any relays here who want to chime in about that? Do you feel ready? Do you not know what you need to do? It sounds like Chris has notes on which releases to use and how to do the upgrade if you're using the flashbots relay. Anything anyone wants to add?
00:03:13.230 - 00:03:36.510, Speaker C: Hey, sure. Yeah, so it seems. Yeah, this is Austin Asus relay. So it sounds like the boost relay code is good to go. I've been following that pretty closely. I'm a little more uncertain about the block validation geth status. I saw there is a CHAPELLA fork or branch.
00:03:36.510 - 00:03:50.678, Speaker C: So hearing from Chris now that it's not necessarily necessary to have geth updated for that. Just wondering. Little more details there.
00:03:50.844 - 00:04:30.450, Speaker B: Yeah, I can add to that. On our testnets, we are using the Builder code base as a validation node and a builder at the same time so you can enable the validation logic in the builder project itself. I will double check if the validation gaff repository is also updated. But what is for sure working is the builder repository, in particular the Capella Tree. Let me link that here so you can use the capillary of the builder to run it as a block validation gaff.
00:04:31.590 - 00:04:43.080, Speaker C: Okay, got it. Will this be the main source for validation moving ahead? Should I consider block validation GAF to be kind of deprecated at this point?
00:04:43.690 - 00:05:06.720, Speaker B: We have internal debates going on whether we want to maintain two repositories that are largely overlapping but not quite, or if we are fine with having the additional builder overhead in the code also running as part of the validation gaff, which would simplify the maintenance and upgrading, but it's not decided yet.
00:05:07.730 - 00:05:08.238, Speaker A: Okay.
00:05:08.324 - 00:05:14.240, Speaker B: I will certainly post an update once it's going forward, but for Gurley, I would recommend Randy builder project.
00:05:15.330 - 00:05:28.662, Speaker A: Got it. Thank you. And Chris, you said you'll put together a document, or at least maybe it's already put together and you'll share a link to the document with what exactly relays need to do. Okay, great. Yeah.
00:05:28.716 - 00:05:58.110, Speaker B: I will try to write this up a bit more concisely even just for Relay operator. Specifically, keep in mind that you also need the Flashbots Prism fork because we implemented the Get withdrawals endpoint that you kind of wanted really to validate that the withdrawals are correct and this is a temporary solution until the SSE events are implemented in hopefully a few weeks. Until then, our really codebase at least needs this Prism fork to provide the withdrawals.
00:06:02.460 - 00:06:12.750, Speaker A: Okay. And to be clear, will anyone need to supply like a Shanghai override or something like that? Or if they use the right branches and releases, then everything will be good to go.
00:06:17.440 - 00:06:19.710, Speaker B: On Prism. It's good to go.
00:06:21.620 - 00:06:29.376, Speaker A: I thought you mentioned something with the builder, but that might not yeah, I.
00:06:29.398 - 00:06:43.220, Speaker B: Will post more updates. We are currently not yet on the latest gaff release that wouldn't require the Shanghai override. I will certainly post an update tomorrow about the details.
00:06:44.620 - 00:07:12.144, Speaker A: Okay, yeah, that works. Yeah. So just to elaborate, basically the Gorely configuration is hard coded in later Geth releases. The bladder code sounds like is know using that yet? Chris will make it clear it sounds like how to have the configuration done in. Yeah. Okay, so sounds like the code is pretty ready to go. Again.
00:07:12.144 - 00:07:56.046, Speaker A: If you're a really operator, hopefully you are listening and you feel prepared. If you don't, I guess reach out to me or someone at Flashbots or someone else you trust to help with this. And yeah, I mean, it should be pretty exciting. One question I could ask is how we want to think about testing this. Will we just look at the usual Webboost metrics and see that it works? I don't know if anyone has thoughts on that. I guess relays will know quickly if everything stops working at the fork. Yeah, right.
00:07:56.068 - 00:08:16.798, Speaker B: The relays internally will throw errors if there is something not working or below. Submission is not accepted. And I think Paritosh runs a large number of girly proposers. So whatever relays are configured there, we should also be quick to know any issues that arise through Paritosh.
00:08:16.974 - 00:08:35.354, Speaker A: Right? Yeah, that's a good point. I don't think Perry's on his call, is he? No, that's okay. But I can follow up with him. Yeah. Okay, great. So I don't know anything else for Goreley. Does everyone feel ready? I think that's pretty much it.
00:08:35.354 - 00:08:59.566, Speaker A: It sounds like there might be a few more details on the exact software releases and how to run them that Chris will work on, but otherwise, sounds like we're ready to go. I have a question. What's the best communication channel for the relayer these days, say, today, if I have an alert system, it's going off, I see a bunch of missing block.
00:08:59.678 - 00:09:02.046, Speaker D: I want to look at some relayer.
00:09:02.078 - 00:09:53.460, Speaker A: Channel to see whether they have recorded anything. Where is the best place for that? Where are the relayers hanging out? Yeah, that's a good question if someone here wants to chime in. My understanding is that most relays have some sort of web interface, like just their website and perhaps there's like a status page link from there. But I think it's pretty up to the relays as how they communicate. Some of them may not separately. If you see something and want to just alert everyone, I suggest using maybe the ETH R D discord channel or maybe the Flashbots channel, one of these to try and get in front of relays. But that being said, do any relays on the call have anything more specific here?
00:09:56.630 - 00:10:01.490, Speaker E: There is a relay channel on the flashboards discord that I constantly monitor.
00:10:04.150 - 00:10:06.280, Speaker F: Yeah, that's where is this hour as well.
00:10:12.840 - 00:10:13.252, Speaker A: Yeah.
00:10:13.306 - 00:10:21.770, Speaker B: Also I think the block construction Eve R D channel is also a place that all the relays are aware of.
00:10:26.590 - 00:10:36.366, Speaker A: Okay, so, yeah, flashboss relay channel. Do we know exactly the name of that one relay? Okay.
00:10:36.548 - 00:10:37.600, Speaker E: On the general.
00:10:41.250 - 00:11:12.566, Speaker A: Anyway. Okay, great. I can grab a link to that in the notes after and I'll grab a link to the ether and D channel block construction. And one thing to consider, I mean, this might just be some async coordination we can do, but we could consider like a mailing list of sorts for sort of critical issues. I know this is something a lot of the client teams do both at the El and Co layer. And this could be just like one quick way to get very urgent things in front of everyone as we need to. Thanks, Max.
00:11:12.566 - 00:12:15.644, Speaker A: There's a link in the chat. Cool. So anything else on ChappellA? Alex asked in the chat about this email list. We would just need to make one and people could subscribe as they want. Ah, the name I'll let you come up with, so okay, that sounds pretty good. I think the next point we'll move to is the optimistic relay. I don't know if Justin or Mike, if you want to give an update on where things are at there.
00:12:15.644 - 00:12:20.910, Speaker A: I think there's been a lot of progress since last call. Maybe something is on the way to be rolled out.
00:12:25.940 - 00:13:17.760, Speaker G: Yeah, I can give a quick update here. I'm on the road, so hopefully there's not too much background noise. I'm in an Uber, but yeah, I guess just so everyone's on the same page, let me link to the PR here. So this is kind of the context here again, for anyone who wasn't in the last call. This is a change we're proposing for relays where instead of validating the block submissions as they come in and before marking those bids eligible to win the auction, we defer that block validation till later. This should hopefully improve the block submission have, I guess in terms of status, we're getting close to launching in Prod. We've been running in Gorely quite smoothly.
00:13:17.760 - 00:14:03.170, Speaker G: We're just working out the last details of getting the code rebased onto the capella changes. We've been in contact with a few builders who are interested in kind of piloting for us and have some kind of initial interest there. Yeah, I guess one other link I wanted to kind of plug justin linked the Builder onboarding Doc so that can show what the process is, I guess, on the Builder side as far as posting collateral and kind of signing up for this role of optimistic relaying. And the last thing I wanted to share was a kind of broader roadmap. Let me copy this link in.
00:14:05.060 - 00:14:05.376, Speaker A: That.
00:14:05.398 - 00:14:33.720, Speaker G: We'Ve been working on, and this hopefully should help contextualize what we think of optimistic relaying and how it fits in the broader enshrined PBS landscape. So, yeah, that's kind of the update on our end. We're thinking hopefully next week we'll have some optimistic begin that might shift depending on if we can make sure that everything is working on the software side. But I guess that's the main update. Do you have anything to add there, Justin?
00:14:35.020 - 00:15:19.304, Speaker E: Yeah, I guess one thing that we've been doing is trying to dramatically reduce the amount of simulation errors that we're seeing on the relay. And there's kind of two things that we've done. Number one is that we've found various edge cases in the relay infrastructure that lead to simulation errors which shouldn't happen. So, for example, there was an artificial constraint on the block size. There were blocks that were valid blocks that were just being kind of considered to be invalid because of their size. So that should kind of actually improve the liveness of ethereum. It means that these bigger blocks will make it on chain more easily going forward.
00:15:19.304 - 00:16:26.750, Speaker E: But there's kind of a long tail of such edge cases that we found maybe ten or so that we're in the process of fixing or have already fixed, and we're pushing some PRS upstream to the flashbots repo as well to reduce these edge cases. And then another set of edge cases is on the builder side. So it turns out that various builders have bugs in the sense that when they create their blocks, there's just some issues with them. And so what we've done is we've very meticulously gone through every single error on the builder side and kind of told them about these errors. I'm in contact with most builders, but there's a few builders I don't have contact details of. So if you're a builder that I haven't approached yet, please contact me because it's more likely than not that you are producing some invalid blocks. And so this should kind of help the whole ecosystem, I guess, because it means that there's less spam on the relays and things kind of run smoother and then generally speaking, the signal to noise is higher.
00:16:26.750 - 00:17:22.220, Speaker E: And all of this work is kind of part of the legwork to get optimistic relaying running, where basically we don't want any simulation errors. But one thing I do want to highlight again is that if there is a build a bug, more likely than not, it will be caught extremely early and lead to an early demotion without kind of a bad block ever winning the auction. So I'm still not expecting bad bids to lead to on chain incidents with a missed lot. But if that were to happen, as described in the doc that I linked, we're going to write a post mortem which will be public. So basically we're trying to be as transparent as possible about these on chain events and they should happen exceedingly rarely.
00:17:28.920 - 00:17:34.810, Speaker A: And from experiments on Gurley, it sounds like you haven't really run into too many issues yet.
00:17:36.220 - 00:18:07.270, Speaker G: Right, so basically we've been running, addressing some of these simulation errors either on the relay end or on the builder end, and now we have several days worth of blocks, thousands and thousands of submissions without any simulation errors. So we're pretty confident that the fixes are working as intended. And yeah, just kind of upstreaming which ones seem relevant, making tweaks on the relay on our end and kind of communicating with builders if it seems to be on the builder end.
00:18:12.040 - 00:18:34.110, Speaker A: Yeah, I mean, that approach sounds good, I think at a high level, definitely. I think if one of you can call out these different PRS to the relay code at least, that would be really good just so that we could get more eyes on it. I understand there can be edge cases, but should just make sure there are reasons to remove these edge cases and they weren't there for a good reason in the first place.
00:18:35.760 - 00:18:42.130, Speaker G: For sure. Yeah, I'm away from my computer, but I'll follow up with you and have a link of those PRS so you can share them.
00:18:43.060 - 00:19:15.050, Speaker A: Okay, yeah, great. Yeah. So that's all exciting to hear. I think another big question is like upstreaming the whole optimistic relay into the mainstream flashbots relay code. Last time there is, I think, maybe some discussion around was this a good idea, is this not a good idea? I don't know if anyone here on the call wants to chime in further on that. I believe that's still the plan of the ultrasound team is to upstream this code.
00:19:18.060 - 00:19:51.364, Speaker E: So one data point that I want to put forward, so if you go on relay network builders, it's a new dashboard that's been built by the rated network guys. And basically what they do is that for every builder, they show the relay distribution of winning blocks. And it's very interesting. And one data point that really stands out to me is the fourth row blocks route. If you look at blocks route 96.6%.
00:19:51.482 - 00:19:53.350, Speaker A: Sorry, Justin, what was the link?
00:19:54.620 - 00:19:57.688, Speaker E: Let me put it in the okay.
00:19:57.854 - 00:20:02.730, Speaker A: I tried to go to what you I thought you said. Okay, thank you.
00:20:03.900 - 00:20:14.108, Speaker E: Yeah, rated network, which generally speaking is an amazing website, and they have this new data on builders. So the data point I want to.
00:20:14.114 - 00:20:25.330, Speaker A: Highlight is actually I'll just share this so people can see. I think that might be helpful. Can people see my screen there?
00:20:26.100 - 00:20:26.850, Speaker E: Yes.
00:20:27.540 - 00:20:28.290, Speaker A: Okay.
00:20:30.420 - 00:21:21.280, Speaker E: We can see on this fourth row blocks route, it's very different from the other rows. So blocks route, the builder is connected to many different relays. It's connected to flashbot, to ultrasound, to Agnostic and to their own relay. But as you can see, the blue portion, which is the blocks route portion, it's 96.6%. Most of their blocks are actually being won by their own relay. Now, I don't know 100% for sure, but my suspicion is that there is some vertical integration going on whereby the relay is not simulating or I should say resimulating the blocks that come from the builder. And so basically they're running in optimistic mode, essentially.
00:21:21.280 - 00:22:03.520, Speaker E: And that's kind of the reason why I want to bring this up, is I just want to highlight the power of optimistic relaying. It just really dramatically changes the equation. So what I think will happen is that once we set up optimistic relaying for some of these builders, the ultrasound relay is basically going to be winning most of the auctions. And so it's kind of almost going to be a forcing function for the whole ecosystem to move on to optimistic relaying. And so that might be a good reason to eventually at least merge in the optimistic relaying logic in the flashboards repo.
00:22:08.180 - 00:23:06.160, Speaker D: So at least from my perspective, I think we're definitely open to having the conversation about upstreaming. I think it's like an early stage conversation to me. Like, I think the work and the experimentation that's going on is super interesting. I think our worry or concerns would be more from the market integrity and market structure side and we kind of view our role in the mevboost ecosystem and mev in general as kind of standard setting in some way. And so we have to think through what are all the possible effects on market structure. And the key kind of vector that I would be thinking about that through myself is like centralization, what are the additional centralization pressures of capital requirements and also possibly opening new games versus by making certain changes to the relay. So I think we do need to do that analysis and have those conversations.
00:23:06.160 - 00:23:54.608, Speaker D: But we've just started thinking about this stuff and putting out content and engaging with the people who are working on it. So I see it as like a starting point. We're definitely not against upstreaming it, especially if some of these concerns can be mitigated or resolved. A few practical concerns I have that are low hanging fruit. One is I would still very strongly advocate for including a path to win a full block without needing collateral. I think preserving the one off permissionless nature of block construction and allowing for resimulation is an important market property to allow for new entrants basically and people who have edges that are not latency related, et cetera, to enter the market. So I think that's like a low hanging fruit.
00:23:54.608 - 00:24:46.580, Speaker D: But then there's some deeper questions around collateral latency upstreaming into L, one, et cetera. And I think those are still early researchy kind of questions and I do appreciate everyone who's been providing content. I am reading it and thinking about this myself now also. Yeah, I guess is there anything else to say on that front? Not really. I guess my long term dream this is somewhat relevant for mevboost is to move towards a relayless system is like my meme, and that's not obviously, there will always be relays from a network perspective, but I don't think we should have trusted parties that exert any centralization pressure in a network role called, quote, unquote, relay. And that includes flashbots. Eventually the goal would be to deprecate that functionality.
00:24:46.580 - 00:25:13.550, Speaker D: So the other angle, other than decentralization pressure that I would want to reason about this through is like does this require any changes that would obviate our ability to later upstream this role or whatever else we want to do with it? Does it kind of remove any flexibility from mevboost development there? So those are kind of my angles. I wish I had a better answer, but I'm thinking about it very hard and I'm sure the next month will be interesting in exploring these things.
00:25:15.360 - 00:26:08.552, Speaker E: So, a couple of points on what you brought up. I think number one is the low hanging fruit that you highlighted has already been picked. So by default builders are in the non optimistic mode, meaning that they don't need any collateral and that will always be the case. You can think of the optimistic mode as being kind of an ultra high priority queue, so we already have the low priority, high priority, and then there's kind of this optimistic priority, which is kind of a new priority setting almost, and it's opt in. And right now we're capping the amount of collateral to one E to try and keep the collateral requirements very low and one E is actually sufficient to capture the vast majority of blocks from a quantitative standpoint.
00:26:08.696 - 00:26:46.490, Speaker D: Yeah, I think that's great and I think the low hanging fruit great to hear that. And I think the low hanging fruit approach is great. We do also need to take into account mev is super spiky and there'll be many black swan blocks for which the validator does really want to check with high assurance because there's significant incentive to cheat them. So I would want to preserve that just for network robustness, but it sounds like that's already in there, so I think that's good. I do still worry about the centralizing effect of having this more privileged set. That's like my vague fear, but I don't think it's like a total deal breaker or anything, just something to reason through.
00:26:47.820 - 00:27:57.920, Speaker E: Right, so on the point of the spikiness, whenever there is a block with more than one E for value in the bid that gets simulated the current way, it's not optimistically relayed. Right, okay. And I guess the thing that we're trying to optimize for is more blocks being relayed by non censoring relays. And one of the reasons why you're talking about changes in market structure, optimistic relaying is pretty bad for censoring relays. And the reason is that in order to know whether or not you want to censor a block, you need to simulate it. I mean, you can do some string matching and look at sender addresses and recipient addresses without simulation, but that won't give you the deep call stack inspection that is currently happening on sensoring relays. And then there's an optimistic version, V Two, where basically we will optimistically relay bids without even downloading the data.
00:27:57.920 - 00:28:44.732, Speaker E: So it turns out that it takes about 100 milliseconds just to download the block, the bits and bytes. And so with optimistic relaying V Two, which has already been implemented, you're saving 100 milliseconds. And that really completely removes the censorship opportunity even for the easy string matching on the sender and recipient addresses. Now, another kind of big market structure that we want to push for, and it's the one you've highlighted is this dream of removing the relays altogether. And from an EF recess perspective, the way that we achieved this dream is through Enshrined PBS. And actually we made a hire recently. We hired Mike to join the firm foundation.
00:28:44.732 - 00:29:58.276, Speaker E: His first day was on the 1 March 9 days ago, and his title is Enshrined PBS Coordinator. So his sole mission is in a way to remove the need for relays. And we kind of see optimistic relaying as steps towards Enshrine PBS because what is enshrined PBS is basically just the removal of the relays and optimistic relaying is the partial removal of relays. So the removal of the relay from the simulation standpoint in V One, the removal of the relay and even downloading the data and verifying the availability of the payload is V Two. And then we have this V Three version of optimistic relaying where the critical path from a networking perspective doesn't even involve the relay. There can be a direct TCP connection from the Builder to the proposer and the relay only acts as a data availability Oracle and as a mediator and a custodian of the collateral. But in no way is it in the critical path.
00:29:58.276 - 00:30:30.892, Speaker E: And that's essentially what Enshrine PBS is except that with Enshrine PBS the custodian is the beacon chain itself and the data availability Oracle is a committee, a trustless committee instead of being a trusted relay that access the Oracle. And so we kind of see optimistic relaying as being an accelerationism for Enshrine PBS and the removal of relays.
00:30:31.036 - 00:31:31.684, Speaker D: Yeah, I mean, I fully buy into the narrative. I just worry more about the practical details of it. So for example, I agree it's great to kind of make changes that make censorship more difficult. I think if we were to actually entrench ourselves, let's say we're in a world where mevboost reaches some suboptimal Molok the way Bitcoin development has or like ETH l One did for a while and we're stuck with the mev boost status quo and Enshrined PBS takes a long time. We still do need to consider the current market structure and I'm not sure if we freeze that game theory if this change actually does necessarily penalize is good for market structure like Visa vis censorship. I think maybe it is, maybe it's not. I'm less strongly convinced than you are because for example, it may just let's say the censoring actors cannot comply with anything other than censorship, right? I'm not saying this is the case.
00:31:31.684 - 00:31:35.444, Speaker D: This is not flashbot's opinion. I'm just gaming out some game theory with you here.
00:31:35.482 - 00:31:35.876, Speaker A: Right?
00:31:35.978 - 00:32:06.864, Speaker D: Then you may in this change kind of require more of a permissionless or side channel validation of censored transactions or something like that or like different forms of liability on the builder or et cetera. Regulators may look at different aspects of the stack. So I think from a technical perspective it does make censorship harder in some ways. It's like, from my analysis, I'm very hesitant to project that out. So we end up in an economic game with less actual censorship. And again, I'm not saying it will have more censorship. That's also not what I'm saying.
00:32:06.864 - 00:33:05.828, Speaker D: I'm just saying the effect seems less clear to me than it would to you. I do think we will analyze this. So I will commit to the next month I'll work on this and kind of come up with some opinion on are there any clear centralization risks for the market structure or anything like that. If there aren't and I don't see any, I would personally support upstreaming the Change and my North Star there would be like, let's make sure we don't remove any optionality from Enshrined PBS. Because I think Enshrined PBS, we all agree on this call is the most important thing that we're iterating towards as a mev. Boost community and protecting that is by far the most important goal, at least for me. So yeah, assuming I'll do some thinking on it, and I would at least support it, if it does kind of play out in the game theory I see as this path to enshrined PBS, and it does make censorship more difficult.
00:33:05.828 - 00:33:07.590, Speaker D: I think those are all great things.
00:33:10.920 - 00:34:10.040, Speaker E: On the topic of censorship, the ultrasound team has recently deployed some new dashboards that provide kind of insights. So if you go to relay ultrasound money and you scroll down a little bit there's relay censorship dashboard, lido operator censorship dashboard. We started with lido because lido had a grant, but we will expand this to more operators and builder censorship. So, for example, on the builder side of things, we tell you how many pub keys each builder has and also how many of these pub keys are censoring, and we tell you the dominance and things like that. And we also look at the impact of censorship on the network. So in the last seven days, 326 transactions suffered a delay from censorship, and the average delay was 48.8 seconds.
00:34:10.040 - 00:34:24.476, Speaker E: So it's like from in the grand scheme of things, the actual impact of censorship is very low nowadays. But at least now we have the data so that we can how do.
00:34:24.498 - 00:34:26.700, Speaker A: You calculate the delay?
00:34:27.360 - 00:34:51.940, Speaker E: So we have mempool data which basically looks at when a transaction is first seen on the mempool in three different geographies. So Asia, US and EU. And then we look at the timestamp of when the transaction was actually confirmed, and we take the delta between these timestamps.
00:34:52.440 - 00:35:15.736, Speaker D: I would say that's not an entirely accurate statistic, and actually the delay is probably much better than that because what you really need to look at is when would it otherwise have been mined? So I would suggest refining the statistic as when is there a different bid for that relay slot that would have had that transaction that got beaten by a censored block, and then what's the delta from that block being mined to the block where the censored transaction eventually gets mined?
00:35:15.768 - 00:35:16.350, Speaker A: Basically.
00:35:16.800 - 00:35:27.836, Speaker E: Yeah, that's exactly right. So what you're saying is that the delay should be computed in blocks basically, where the transaction could have been included, but for some reason it was not included.
00:35:27.948 - 00:35:31.170, Speaker D: I also like doing it in seconds, but just like at the block level.
00:35:31.620 - 00:35:41.396, Speaker E: Yeah, for sure. So we actually prioritize in one of the widgets, if you search for TX delay on the right, it tells you one block, two block, one.
00:35:41.418 - 00:35:41.616, Speaker F: Block.
00:35:41.648 - 00:36:10.560, Speaker E: So we actually measure the delay in blocks and we also tell you the delay in seconds. And then if you scroll towards the bottom of the website, you actually can see the delay in blocks. So if you unselect the unsanctioned and you only have the sanctioned ones, you'll see the delayed transactions. There are 326 transactions and for each one you have a delay in blocks.
00:36:15.620 - 00:36:16.370, Speaker A: Cool.
00:36:20.340 - 00:36:21.756, Speaker D: I think that's super interesting.
00:36:21.878 - 00:36:28.656, Speaker A: Thanks for building that's.
00:36:28.768 - 00:37:07.280, Speaker E: Yeah. So now, at least from a data standpoint, we have built a database which has all the metadata that we could think could be relevant. We have for each block, who was the proposer, who was the builder, which relays relay that block. And we also know if it contains ofax Zans or other transactions that may be censored. And we also have all the mempool data. So if you want to do some data analysis, we've done the heavy lifting of building the database and we can give you access to the database to run your own queries.
00:37:12.100 - 00:37:15.110, Speaker A: Yeah, that's really exciting. Jelen, you had a hand?
00:37:18.100 - 00:38:01.390, Speaker H: Yes. So I remember on the last call we had some relay operators who kind of expressed concerns about the additional responsibilities that upstreaming this change would incur for them. So things like holding collateral, managing that, and potential legal implications because of that. So I was just wondering if any of those people are here today and would like to talk about what this change would mean for them. That seems to me like something that should be taken into consideration whether streaming this is going to kind of affect who is able to run relays at the moment.
00:38:05.550 - 00:38:06.250, Speaker A: Hi, everyone.
00:38:06.320 - 00:38:51.222, Speaker F: I can probably pick that up. Max from asus we've been thinking about the or stuff pretty carefully. We've had a couple of chats with Justin about it. I think similar to others, I feel this is inevitable because that latency path wants to be optimized. And in many ways we're supportive because it will reduce a relay's operating cost, much of which is the simulation stuff. On the other hand, there are some dynamics at play here which Phil pointed out to do around Centralization. Some of them are pretty difficult to reason about at the moment, but certainly on the relay side, we effectively become a financial entity which is responsible for some kind of collateral.
00:38:51.222 - 00:39:37.100, Speaker F: And are there AML? Are there KYC requirements? We're not really clear about that. We're not lawyers. So on one hand you can see that it can reduce censorship, but on the other it puts the relay in a bit of a bind of a position because it's not really clear who the builders are. So what we think will likely happen here is that you'll end up forming quite tight coupling relationships between relays and builders in order to try and navigate some of these additional responsibilities. And that does have a tendency to kind of create barriers to entry on both sides of this and it may reduce some of the network resilience. We've seen where a builder is shooting out blocks to multiple relays at once, but we haven't got to the end of this and we're thinking about it a lot still. We'll publish something soon.
00:39:46.220 - 00:40:35.770, Speaker D: Phil yeah, I think those are great points. Would just love to point out some potential collaborations that I think we'd love on our side. One of them is on the data that you were talking about, Justin, which is like, can we help analyze, refine, create more dashboards, collaborate somehow on that? I think we're doing many things on the data side, so happy to see if that makes sense. And also I think Max was the one who was just talking about the relay and I think we should definitely I think those are all amazing points on the market structure, the different requirements for the roles. I was speaking more from like a technologist network point of view, but I think those things also need to be carefully thought through and would be happy to have more conversations about that too.
00:40:41.760 - 00:41:56.020, Speaker E: So, full disclosure, we've been talking to a lot of builders about this and so far on the builder side of things, there's a lot of excitement. But there was one exception. So one of the builders, one of the smaller builders in, I'd say, a more conservative jurisdiction, told us that from their perspective, it might create more accounting headaches and or there's some legal questions precisely around this idea of sending collateral to us. And they kind of suggested that in order to send money to us, there would need to be some sort of contract, legal contract. Now, the ultrasound relay operators is not incorporated with just a bunch of random people on the Internet. So in terms of setting up contracts, it's not necessarily straightforward and it's not necessarily something that we want to do. But yeah, I just wanted to point that out that actually this concern on the relay side is also an existing concern for at least one of the builders.
00:41:57.320 - 00:42:09.956, Speaker D: Yeah, so we wouldn't want to make it harder for a bunch of random dudes on the Internet to start a new relay, which is what you all have done. And I think it's been super valuable and I definitely want to protect that ability on both the relay and builder.
00:42:09.988 - 00:42:10.570, Speaker A: Side.
00:42:12.960 - 00:42:18.296, Speaker C: Maybe along these lines. In the current Optimistic Relaying Builder onboarding.
00:42:18.328 - 00:42:18.940, Speaker A: Guide.
00:42:20.800 - 00:43:23.490, Speaker C: It seems like it's a pretty manual process right now, which involves the Builder just posting one ETH of collateral to relay ultrasound ETH. I haven't checked if that's just a regular address or if there's some kind of contract there. What are the current thoughts around the long term future of this? If Enshrined PBS is a long ways out, are there some kinds of solutions that would involve some more complicated system, like some sort of a multi SIG that's accessible from multiple relays or a contract of some sort that maybe is some of the responsibility for holding the collateral or authorizing the payouts to proposers. If that were offloaded to some other group of entities could there be some reduction in the legal concerns or possibly make things simpler from a technically onboarding more relays into the process?
00:43:26.980 - 00:44:53.426, Speaker E: Right, so right now, relay or sound, if doesn't point to anything, it will point to a simple EOA, not a contract. In terms of fancy things, yes, you can have a multi SIG. You can also have very simply a standard address. No multisig, it's just that the custodian is some third party custodian and if someone wants to step up, someone with reputation, maybe ether scan or I don't know, rocket pool or I have no idea, they're just trusted entities who want to step up as relay custodians. I think that could be a new role which is created which could help reduce some of the concerns for the relay operators that don't want to touch the financial side at all. On that note, we're actually also happy to be a custodian for other relays so we're happy to hold custody of funds for your relay. And I think what I also told you is we're actually happy to be a guarantor for most of the builders.
00:44:53.426 - 00:46:05.514, Speaker E: So what do I mean by guarantor? I mean that we would actually provide collateral for the builder using our own funds. So we wouldn't be receiving funds externally, we'd just be putting our own collateral just because we trust most of the builders. We believe that the reputation of a builder is worth orders of magnitude more than one ETH. And so if and when there is an event, for example, a builder bug, then the builder would be more than happy to directly refund the proposer as opposed to burning their reputation and running away with this one bad block. So we're happy to be a guarantor, which means that if you trust us then you actually don't need to receive collateral from the builders. And if and when a bad block happens again, you don't need to touch any money. And the reason is that the builder can directly refund the proposer fee recipient.
00:46:05.514 - 00:46:13.710, Speaker E: So it's a direct transfer from the builder to the proposer and the relay does not need to be a financial intermediary in that transaction.
00:46:16.470 - 00:46:51.322, Speaker A: And I think it's worth calling out. There are smart contract designs, different things we could do on chain that move a lot of this responsibility away from centralized parties like for example, the ultrasound team. And yeah, that being said, I think it then comes down to jurisdiction as to what it actually means to custody funds here or there. And anyway, yeah, it's definitely an interesting question. There are two hands, I think. Alex was up and then we'll go to Phil. Thanks.
00:46:51.322 - 00:47:11.540, Speaker A: I guess this is a question for Justin and Mike. I'm looking at the Towards Enshrined PBS an optimistic roadmap from mike, I'm trying to ascertain at which point would you not have this escrow anymore, this centralized escrow anymore? It sounds like it exists in multiple steps, right?
00:47:13.270 - 00:48:15.654, Speaker G: Yeah. So we would need the escort in all three of, I guess V one, V two and V three as described in that document there. The reason being even in V three where the optimistic relay is just behaving as essentially an oracle for both the header appearing the signed header appearing on time and then the block body appearing on time if the builder commits a header that wins but doesn't publish the block on time, then the proposer is still missing that slot. So they need to be refunded. So basically, even in that case, where the messages are happening over the gossip channel, over the PTP layer and the relay is just observing the mempool at this point, or the PTP layer, the relay still needs to hold that collateral in case that the block isn't published on time. So, yeah, kind of all three of the iterations require that collateral still being there.
00:48:15.772 - 00:48:19.818, Speaker A: So maybe excuse this stupid question and follow up here, but once you go.
00:48:19.824 - 00:48:21.734, Speaker I: To EPBs and you have a committee.
00:48:21.862 - 00:48:24.490, Speaker A: Do you expect the committee to be holding the collateral?
00:48:25.710 - 00:48:48.740, Speaker G: So in EPBs, I guess this behaves slightly differently in that there'll need to be some form of unconditional payment, basically. And if the builder submits a block or a bid that gets signed and doesn't get produced, then.
00:48:50.630 - 00:48:51.618, Speaker F: That'S only going.
00:48:51.624 - 00:49:10.586, Speaker G: To damage the builder. Right. So whatever mechanism we end up doing in the EPBs, the proposer won't necessarily need to be refunded, it'll just be an unconditional payment from the builder. Does that answer your question? I'm not sure if I'm understanding it quite right, but in other words, the.
00:49:10.608 - 00:49:15.770, Speaker E: Beacon chain is holding the collateral, the beacon chain itself is a trustless custodian.
00:49:18.030 - 00:49:40.114, Speaker A: Okay, I have more questions, but I guess there's others on the call. I'll ask Anthony. Thank you both. Yeah, and I think we can again have a follow up call. We can probably dig into some more of these details specifically there, but that being said, let's keep things moving. Phil, I think you had a hand up, but you took it down. Did you have anything you want?
00:49:40.152 - 00:49:40.434, Speaker F: I did.
00:49:40.472 - 00:49:42.194, Speaker D: I forgot what I wanted to say.
00:49:42.392 - 00:49:48.340, Speaker A: Great. Sorry. I'm sure it'll come back. The queue is here.
00:49:48.870 - 00:50:02.700, Speaker B: Chris, I just wanted to ask POTUS for your opinion because you have been commenting on the PRS too and seemed to have strong opinions and I would love to hear you maybe outline your way of thinking about this.
00:50:03.390 - 00:51:02.262, Speaker I: Sure. I'm not sure if I am muted or not. Yeah, so I have a personal and an arbitram different opinion on this. So let me tell you what, I think it healed this. If we didn't have PBS at all, if we didn't have flashboards and we didn't have Medboost, and I wanted to submit a block with a transaction that someone didn't want it to be on chain, then unless you hold a lot of stake, and I am proposing and I am proposing this transaction. You need to hold a lot of stake to be able to fork it out. So for my block to not appear on chain, you either are the next proposer with a lot of stake and try to fork it out, or you hold a lot of stake to be able to fork out several blocks in a row with flashpots.
00:51:02.262 - 00:52:13.598, Speaker I: Now, with the sort of PBS that we have at this moment, the relayer can cheat you and the relayer can tell you I'm going to produce for you a block that is going to not trigger whatever form you have of going back to local execution. For example, we would go back to local execution if the local payload would pay us more. So if there is a transaction that wants to be censored and it's paying a lot and the builder wants to censor it, it won't be able because the relayer will just check that the bid has to be high enough, but the relayer can lie to us and the relay cannot produce the block. And then we're placing a trust assumption on the relay. With optimistic relay, this trust assumption goes to the builder. And this is the killer for many reasons, because now any builder that wants to censor a transaction will just have to stake one. It pay whatever bid is or trigger whatever save salvage we have on our clients to go fall back to local execution.
00:52:13.598 - 00:53:05.058, Speaker I: It would just produce an invalid block, slash himself one ETH and eclipse a block. That would not be possible otherwise. So this is in general, and this kills a lot of statistical analysis that we want to do on chain for L one. But now, speaking as an employee of an L two, let me tell you what is the application that we want to have this and why roll ups need this? Yes, you could do that one off. And let me tell you why one off is already good enough. A very simple statistical analysis says that if you hold 60% or less of the stake, which is already a lot, so that means 60% of people are willing to fork blocks and 90% of people are willing to censor. So these are very strong numbers.
00:53:05.058 - 00:54:03.138, Speaker I: Even under those circumstances, in less than half an hour, under those circumstances, only 10% of people are not censoring and 40% of people or less or more are not willing to fork. Under those circumstances, you would see two blocks in a row missing in a period of less than half an hour. This is without optimistic relay. With optimistic relay. This does not need to happen because just the builder would just slash himself one e and just produce another builder and slash himself one e. And the problem with this is that if a roll up wants to reduce the challenge period by this statistical analysis to say half an hour, 1 hour then the sequencer himself can actually just produce himself as a builder, slash himself just a couple of feet and take out a billion dollars from the roll up. So this, I think, is something that kills.
00:54:03.138 - 00:54:08.630, Speaker I: It moves trans assumptions from the relayer at this moment to the builder. And this is unacceptable.
00:54:12.730 - 00:54:40.914, Speaker E: I mean, I don't completely understand, because if a builder wants to basically censor one block, the next block they just need to pay a bribe to be the top bid, and then they can make an empty block or whatever. Or even better, they create a block which does extract mev and doesn't include the one transaction that they want to censor. So it just seems very suboptimal to create a bad correct.
00:54:40.952 - 00:55:14.640, Speaker I: But they need to do this. They need to avoid triggering the local execution changes that we want. So, for example, if we had inclusion lists on flashboards, then we would want them to be enforced. That would be one thing. The other one would be just if we see a transaction, we see that a transaction is paying a lot or that the bid is paying I'm sorry, the local payload is paying a lot, then the bidder is going to have to pay more than whatever the local payload is paying.
00:55:17.970 - 00:55:23.754, Speaker E: Okay, so you're assuming a world where there's some sort of inclusion list which is implemented.
00:55:23.802 - 00:55:45.558, Speaker I: Oh, that would be optimal, but even without inclusion list, already this would work. Just I want to fall back whenever the bid is not high enough. This would force the builder to pay as high as the censoring transaction is willing to pay at least this much.
00:55:45.644 - 00:55:46.742, Speaker E: That is already the case.
00:55:46.796 - 00:55:47.400, Speaker A: No?
00:55:47.930 - 00:56:14.320, Speaker I: Well, now, if the builder doesn't want to pay this and he cannot get away with this, but with your system, the builder is going to have to pay up to one E because he can just lie what is the bid and not produce any block. And since the block or produce an invalid block, and since the block has not been checked, this puts a bound on the amount of money that he has to pay.
00:56:15.750 - 00:56:33.886, Speaker E: I don't completely understand. Even with optimistic relaying, if the sensor transaction is willing to pay X e to be included, then the bid needs to be at least greater than X E. Correct. With optimistic relaying, I think with optimistic.
00:56:33.918 - 00:56:40.918, Speaker I: Relayers, the builder can send you the bid and say, I'm going to pay 32 E, but then never pay it.
00:56:41.084 - 00:56:56.106, Speaker E: No, that does not work. And the reason is because if X is greater than one, if one if being the amount of collateral that we're capping at at the moment, then we fall back to the full simulation. So in that case so you would.
00:56:56.128 - 00:57:05.838, Speaker I: Not accept okay, so this is better. So we're putting a cap on the amount on the bid that the builder had.
00:57:06.004 - 00:57:14.242, Speaker E: Well, this is necessary because if someone bids a million e, then we need a guarantee that they can pay the million e. Okay.
00:57:14.296 - 00:57:44.910, Speaker I: At least this kills that. And it leaves me with the point that it's impossible to implement inclusion lists, but at least that kills one of the attacking the grieving vectors. But you see what my endpoint is that with this system, a builder can eclipse a block, which I'm hoping that we would eventually have systems that a builder cannot arbitrarily prevent a block from being produced.
00:57:50.750 - 00:58:25.560, Speaker E: Right. I understand your end game. I also understand your use case as a layer two and arbitram. My understanding is that arbitram has a seven day challenge period, and if even 10% of the validators don't use mefboost, then you're going to get inclusion of your fraud proof extremely quickly. But, yeah, I do understand your goal now and I'll think about it.
00:58:28.250 - 00:58:28.566, Speaker A: But.
00:58:28.588 - 00:59:36.898, Speaker I: I think it's not even for this. This is about creating a censorship on chain, a sensor oracle on chain. And there's a big difference between like 700 or 800 blocks missing assuming arbitrary forking to 130 blocks missing assuming not arbitrary forking, but also for concepts that would be very useful on chain. The notion of safe head also is much better without builders. Without the trust assumption of builders versus validators being able to eclipse arbitrary blocks, it's much easier to prove that the last head is actually not forkable without optimistic relay. So these kind of things, I think, should be thought more and there should be a public discussion and not in channels with 24 people like this one about optimistic relay. There should be the full community involved on this because I do think that actually it may decrease the censoring of offac transactions and we might see tornado cash transactions getting earlier.
00:59:36.898 - 00:59:45.630, Speaker I: But I think it doesn't help on censorship where censoring particular transactions might be more expensive.
00:59:48.610 - 00:59:57.860, Speaker E: So I don't think it changes anything. If we were to have it tomorrow, it wouldn't change anything, but happy to hear counterarguments for sure.
01:00:07.840 - 01:00:43.356, Speaker A: And to chime in with your other point, POTUS like this is a public call. Anyone can attend. We're recording them, trying to get them as widely distributed as possible. So I think this is a good forum for having these conversations. Yeah. If there are other people you think should be involved or see this, feel free to direct them here. Okay, so we have about 30 minutes left.
01:00:43.356 - 01:01:34.444, Speaker A: Are there any other topics on the optimistic relay we want to discuss right now? It sounds like there's been a lot of thought around the design. There's a rollout on Gurley and it sounds like there'll be a gradual scale up and we'll just gather more data, see how that goes. Yeah, it's been a really great conversation and obviously it looks like there are other things to consider and that's why we're here is to find those points and make that happen. There was one other point to bring up. Again, this is maybe more for the relays and I'm not sure what representation we have and it was essentially around relay sustainability. So right now relays basically run this as just a pure cost. There's no funding model or sustainability model.
01:01:34.444 - 01:01:59.350, Speaker A: And many of the relay teams have reached out to me wanting to discuss this and, yeah, brainstorm ways to make this sustainable in the long run. Because while we all are working towards EPBs, it could very much be the case that we have the medboost market structure we have today for the next year, if not several years. So it's definitely important are any relays on the call who wanted to chime in on this point.
01:02:02.860 - 01:03:07.864, Speaker E: So my point of view is that I try and make an assessment of the cost. I agree that it is a public good that needs to be funded by public good funding. And then the question is how much does it cost? And my rough estimate is $100,000 per year per relay. So if we have ten relay operators, which we don't, we have a bit less than that and it takes three years, which I think is reasonably conservative. Okay, let's be extra conservative. Let's say it takes five years to get to enshrine PBS, then five times ten times $100,000, that's $5 million, which in the grand scheme of things is not a large amount of public goods funding, especially if it's a cost that's spread out over five years. And I think what we've seen is that we already have funders, right? We already have, for example, Flashbots, which is funding its own relay and effectively is providing public good funding for its own relay.
01:03:07.864 - 01:03:41.140, Speaker E: Same for Ultrasound, same for Estes, same for Agnostic and these could be different entities for Agnostic, it turns out it's Gnosis who has a large treasury and in some cases it's individuals funding this, in some cases it's institutions. But I don't think we have a public's good funding problem partly because the amounts are relatively small for our space and because empirically we've seen that for several months now these relays are being funded.
01:03:43.800 - 01:03:58.110, Speaker A: Yeah, I think that makes a lot of sense. Justin, do you have any thoughts on relays charging for their services? Because then at that point we can move out of the domain and public goods have this be know, a very typical business charge for API access or something like this.
01:04:01.280 - 01:05:21.030, Speaker E: Yeah, I think it's very difficult because there is this race to zero in terms of fees and if you start charging then you have fewer builders and you start losing. And I think some of the relay operators kind of don't want to charge, we don't want to charge, maybe flashboards doesn't want to charge and then it becomes very difficult to compete versus a relay that doesn't want to charge. I also think that just going through the work of being a financial institution that's to the previous point around AML and KYC now you need to start receiving funds from these unknown builders, blah, blah, blah. I think this is a much more relevant point than the collateral which is just meant to be sitting there and returned after a period of time, basically not going to a third party, it's just being returned to the sender. And also just the engineering work of setting up all everything sounds a little worth. Not worth the effort. And also from our perspective, the ultrasound project is about building public goods and it's not really in our e force to be charging for this.
01:05:21.960 - 01:06:06.900, Speaker A: Yeah, I mean, I think that all makes sense. To the extent that different organizations will want to provide this as a public good, then there will be really options that do not charge and then it does also enforce a sort of ceiling almost of zero of what a relay could charge. That being said, I think we'll want to keep an eye on how things evolve because I think we get to a place where there are some relays today that view this more as a for profit, another arm of their business and we could get to a place where they decide, hey, this is not worth our time. And in the long run that means there are fewer relays and that might not be a world we want. But again, I guess it's just this trade off. We will just keep exploring. There are two hands up, phil, I think you had yours and then we'll go to max.
01:06:11.560 - 01:07:11.064, Speaker D: Yeah, so I both agree and disagree with like I think it's not necessarily a burning issue and I agree with the market dynamic analysis of charging fees being difficult. Also, the reason that we've kind of avoided ourselves going in this direction is because my meta game theory is like it's easier to upstream a public good than a business. Just from an evolutionary point of view if we are stuck with this market structure for a long time. That being said, I don't think it's totally outside the scope of relays and or if people want to experiment with that, it's whatever. That's just my flashbots native analysis of it so far. I do think it's still worth asking the question of can we do better? Even though there are parties that are interested and aligned with running this infrastructure. What if a new entrant wants to come in and they're super aligned but they just don't have the means? It seems to me that there's no path for them right now.
01:07:11.064 - 01:08:18.850, Speaker D: That's super obvious and maybe that's like a low hanging fruit that we can fix if we do want to view it and promote it as a public good. I'm even thinking know you Justin, the ultrasound money team or even Agnostic. It took some time for agnostic to run a relay and we were even trying to kind of prod them into that for a while and there was resistance there and it's understandable. It's a lot of DevOps work, it's distracting, it's like infrastructure heavy work that a lot of teams aren't set up to do even if they want to or would be aligned with it. Plus it's expensive and plus it's politically sometimes complex in the limit of having to come and present positions to other relays and things like that. So I think there are barriers and maybe we can reduce these more and maybe that would be good so that teams like ultrasound don't rely on a big external treasury or ultrasound doesn't have to make as much of or sorry, Agnostic doesn't have to make as much of a business decision on how distracting is this from our core focus? Kind of just lessen that burden to get started. Maybe it is worth doing.
01:08:24.240 - 01:08:25.100, Speaker A: Max.
01:08:27.680 - 01:09:51.990, Speaker F: Hey, Justin, I think $100,000 a year is probably right if you take people away from that, but I'll give you the Asus perspective, which is that Austin and I are funding this directly with no funding at the moment and our time is quite dedicated as well. We have looked for public goods funding for this from a variety of sources and have been turned down at every ask because I think there's a real fear from funding bodies that they might somehow impact the market here. I guess I'd say that actually the role of a relay here is ideally to be as neutral as possible. And the issue that we have is that if we start accepting money from builders then who are sometimes keen to pay on side channel, then we would compromise that neutrality. And I think if you look through the list of relays at the moment, most of them are either being funded by a builder or by a side channel deal or by a company that are making profit through their own ERC, 20 token anywhere. And if we want to get past that, we're going to have to have this conversation at some point. At the same time, I acknowledge that the engineering here is tricky and that you could actually just incentivize some kind of centralization again, which might be difficult.
01:09:51.990 - 01:10:09.180, Speaker F: I don't know what the answer is, but it's a struggle for Astus. I know that when Austin was at East Denver, Blocks, Root and Block native were both talking about this as being a burning issue for them as well and I think we should explore it further.
01:10:10.880 - 01:10:44.250, Speaker D: I think another way to get around this is to have alternate paths so you could provide funding, but maybe it comes with strings or requires a certain organizational structure for accepting that kind of funding. So then new entrants have a choice of do we want to kind of get immediately into the market, take this funding and run a public good and structure. Ourselves that way, or we don't want to run a public good, and then we have to find some other path to make this work. But I do agree that public good option seems very hard to make work today.
01:10:49.770 - 01:11:35.110, Speaker E: One side note here on public good funding, I've been invited to be a so called badge holder for optimism, and they basically have this retroactive public goods funding round number two, and it's roughly $25 million. Maybe some of those $25 million could be routed towards relay. That's like five lifetimes worth of funding for all the relays across five years. So I'd say I acknowledge that maybe getting funding so far has been difficult, but this could change very quickly with things like the optimism public school funding.
01:11:39.690 - 01:12:13.570, Speaker D: It is also an option to be more activist about this on the Mevboo side, which not to derail the conversation completely, but it relates to the early precursor conversations of this call of should there be a foundation specifically for Mev public goods? How do we govern mevboost, et cetera? I think these are all kind of like intertwined questions, because there are some universes where the Mevboost community leaders play more of an activist role in kind of building these funding rails and distributing the capital and things like that. And there are worlds where the governance and that side of things are more separate.
01:12:25.520 - 01:12:53.270, Speaker F: Yeah, relays are in a privileged position. Right. And it would be ideal if all the relays were clear about how they were funded, because if they're making side channels with builders, then the rest of the Ethereum community, and the Validators in particular, might suspect that that comes with some compromises and it would be ideal to get all of that out there. So having a public channel for funding these things just seems far preferential to putting relays in a position where they need to go and ask.
01:13:00.430 - 01:13:48.540, Speaker C: Yeah, kind of building on that just a little more. I know, talking with Block Native, this is one of their big concerns right now is that the lack of a universal, kind of unified charge, all the builders equally public kind of funding model means that relays are pushed to create these side channel deals. And Lock Native actually shared a couple of those with me. They've made deals with certain builders to get prioritized access. This is an incentive that occurs because of the lack of a more universal funding method. And I guess yeah, just reiterating it's worth considering the impact on neutrality that that may have.
01:13:54.880 - 01:14:27.224, Speaker A: Yeah, these are all really interesting. That so one vision I think Phil was kind of painting was basically yeah, there's some entity that is going around going to Optimism, going to Gitcoin with their quadratic funding rounds, these like, different public good services and saying, hey, relays need X per year to run the relays. Here's why this is important. And sort of doing that fundraising. Yeah, it's a really interesting point. Probably preferable to keep it, quote, more decentralized. Right.
01:14:27.224 - 01:14:45.180, Speaker A: So if relays could kind of figure it out on their own how to do this independently, that might be preferable. But yeah, that being said, if the Metboost community would greatly benefit from having some more precise coordination there, then I think that's very important to explore.
01:14:48.190 - 01:14:49.050, Speaker D: I agree.
01:14:49.200 - 01:14:49.722, Speaker F: I will.
01:14:49.776 - 01:15:24.900, Speaker D: Asterisk with, I don't think just creating a sustainable funding model with relays is enough to sidestep a lot of these side channel incentives block native mentioned. Like if the side channels offer you way more than the fees, right, then there's no incentive not to still take the side channels. Especially if it becomes like if the current status quo or a lot of these are housed in either for profit or more ad hoc entities continues, there's no obligation not to make those deals. So I do think it would help a little, but I don't think it completely solves the problem.
01:15:25.750 - 01:16:12.400, Speaker A: Yeah, it certainly doesn't solve it for the reasons you gave, but maybe it can make it easier for either new relays to enter or for existing relays to maintain just covering their base cost. Okay. Anything else? This has been a great call. There's been a lot of good conversation. I suppose we'll just open it up. Unless there's more on the relay funding point, then we can just open it up to open discussion and if there's nothing there, then we can go ahead and wrap up a little bit early.
01:16:18.190 - 01:17:10.730, Speaker E: I do have one question around the validation nodes right now, the Oshan relay only runs kind of a fork of GEF as a validation node simulation node, and I'm not sure, but I think the Flashbot code base has only been built with GEF in mind. And so at the relay level, it seems like if there's some sort of consensus bug on GEF, then we don't benefit from the client diversity that we've managed to establish at the validator level. So I guess is it correct that the flashback code base only supports GEF? And if so, are there steps to have more diversity in terms of execution clients for simulation?
01:17:11.870 - 01:17:39.460, Speaker B: Yeah, this is a great topic. The flashboards infrastructure is only built on GEF. The validation logic itself though is rather straightforward and it's a single additional JSON RPC method that would conceivably be relatively easily ported to other clients like Nethermind or others. I think any of the teams could do that with kind of low effort and it would be great to have more diversity here.
01:17:41.350 - 01:18:16.606, Speaker D: Just to give some additional color. The reason this is the case, and it was built that way is because when we were looking at the merge landscape, it was looking like get would be like by far the dominant execution layer client. And so the ad hoc logic was like, it's less severe than the resulting network break would be and you probably want to be conforming to the dominant logic in that chain split scenario anyway. But I do think given that a lot of people have written execution clients and things like that, it's probably time to multiplex that. But that's historically why it kind of.
01:18:16.628 - 01:18:17.760, Speaker A: Was built that way.
01:18:24.470 - 01:19:05.134, Speaker E: One reason why Relays might be especially interested in having other clients is performance. I think GEF is one of the, I guess, slower simulation execution clients. And so whenever you're not in optimistic mode, whenever the value is greater than the collateral or the builder just doesn't have collateral, then having a very fast execution client is important. And I know Re, for example, or Ref, I don't know how it's pronounced, is quite a bit faster than GEF and maybe never mind as well, I don't really know. Or Aragon, I think ref is like.
01:19:05.172 - 01:19:18.520, Speaker D: Being purposely kind of designed for that speed. And so, yeah, I do agree it'll be useful to swap in with the asterisk of consensus failures being possible if some of the optimizations shouldn't really be there.
01:19:19.290 - 01:19:20.040, Speaker A: Right?
01:19:25.290 - 01:20:27.290, Speaker E: I mean, one of the things that we've been thinking about is a multi execution client system whereby when a bit comes in, you immediately simulate it with your ultra fast simulation engine, which could be ref, and then a few hundreds of milliseconds later, you also simulate it on GEF. But that's kind of outside of the critical path. And if for whatever reason there's a mismatch between ref and GEF, then for the next slots going forward, you disable ref and you just use GEF. So in the worst case, there would be one slot with a bad block. So it's kind of like optimistic relaying but for the execution clients.
01:20:30.350 - 01:20:31.740, Speaker A: Yeah, that's a good idea.
01:20:41.820 - 01:20:53.070, Speaker D: So I guess to make this concrete is the action item here support this RPC to various clients and does anyone want to do that work? Who is going to do that work?
01:21:00.780 - 01:21:56.530, Speaker A: I can definitely take the charge here. Yeah, I mean, there's a couple of things. So Chris has been pushing for block validation and there's this SSC endpoint for building the block and yeah, agree with everything we've said that it's important to have client diversity at these other parts of the stack. So yeah, I can definitely see what's there. I've also been talking some with Georgios about this use case with ref and yeah, I think it'd be really cool to see through. And yeah, this sort of multi client, almost multi proof thing Justin just described all sounds like good ideas. Okay.
01:21:56.530 - 01:22:04.230, Speaker A: Anything else anyone has? I was not sure we'd go for the hour and a half, but there's a lot to talk about.
01:22:07.950 - 01:22:20.606, Speaker D: Maybe I want to pump my post about geographic decentralization. I'm trying to spread the meme and probably a broader conversation to be had there, but curious to hear people's feedback on the post. Also if you have some time to.
01:22:20.628 - 01:22:52.280, Speaker A: Read, is that okay? Thanks Chris. Yeah, there's a forum post in the chat that Chris just dropped. So please take a look. Okay, I think I'll go ahead and call it. Thank you, everyone, for participating. I think this is a really interesting call. We covered all sorts of things.
01:22:52.280 - 01:23:23.060, Speaker A: Again, as we can see, there's a lot here, a lot to work through and discuss. Thanks, everyone, for being orderly with the Zoom decorum and using hands and things. That was helpful just in terms of moderating and yeah, thanks again. Here's hoping that quarrely goes well. I feel pretty hopeful for it. And, yeah, I think we will keep having these calls as we need them. So I'll see some of you around in the future calls.
01:23:24.840 - 01:23:25.872, Speaker G: Thanks, Alex.
01:23:26.016 - 01:23:28.070, Speaker D: Thanks for moderating, Alex. Great call.
01:23:28.920 - 01:23:29.396, Speaker C: Thank you.
01:23:29.418 - 01:23:30.368, Speaker E: Thanks, Alex.
01:23:30.544 - 01:23:33.490, Speaker B: Thanks, Ozia. Great job, Alex. Thanks for making this happen.
