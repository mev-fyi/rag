00:00:17.600 - 00:00:48.760, Speaker A: All right, I think we can get right into it. So welcome, everyone, to our second Brewerado podcast. We're very excited today to have with us three special guests to talk about security and defi. So this topic may be one that people usually don't think is being important as it is, but, you know, it plays a major role in the industry. Without these experts, we wouldn't have such a mercury ecosystem. We wouldn't. We'd be exposed to many more hacks than there is today.
00:00:48.760 - 00:01:31.500, Speaker A: So we're joined today with Costas and Yanis from DDAO and, and, sorry, Adrian from Immunefi. So today's podcast will be an open agenda of questions related to security and defi. So, Adrian, Yannis, Costas, feel free to jump in anytime and offer up your thoughts or speak freely about anything related to the field you're working in. So we can kind of kick things off with an introduction from you guys, a background on your company, maybe how you got involved in this industry. So did the team from DDOB want to go first on the introductions, then?
00:01:32.680 - 00:02:03.476, Speaker B: Sure. Absolutely. So, I'm Yanis. I'm a co founder of dDob. We started about four years ago to maintain an explorer for contract code based on a decompiler that's on contractlibrary.com. and that was the beginning of ddob. So it was a public service that people could visit and see their code, their deployed contracts being decompiled and analyzed, and we slowly built up some reputation.
00:02:03.476 - 00:02:37.200, Speaker B: And as a security company, so we do contract audits. We find bounties. We have found four bounties. Through immunify, for instance, we've gotten a total of nine separate bug bounties in the past 14 months. So we do just a lot of security work in this space. And this is both leveraging our technology, our analysis technology that's automated and monitors contracts. And at the same time, we also do a lot of manual audits.
00:02:37.200 - 00:02:43.760, Speaker B: And, yeah, I don't know, Costas, if you want to say a couple of things about yourself.
00:02:44.660 - 00:02:46.652, Speaker C: Yeah, so, hi, all.
00:02:46.676 - 00:02:47.140, Speaker B: I'm Costas.
00:02:47.180 - 00:03:14.270, Speaker C: So I'm. I'm an academic, work on security and privacy, also proud member of DDOB for some time now. And so, yeah, participating in all activities of DDOB, a lot of audits, which is, like, one of the main activity, but also advancing all the technology and trying to do cool stuff in the defi security space.
00:03:15.850 - 00:03:25.950, Speaker A: Awesome. Thanks for the introduction. So has DDAO been around for, you know, since the inception of crypto here, or, like, how did you guys get started?
00:03:26.530 - 00:03:58.770, Speaker B: No, not really. Since the inception of crypto. Certainly not since the inception of crypto. And as a company, we are basically a year old, so we're not too old as a company, but as individuals. We've worked in the space for about four years now. So we started with academic research, actually. So we had some technology, we built some analysis of programs for vulnerabilities, and then we built a decompiler, which we released publicly.
00:03:58.770 - 00:04:30.342, Speaker B: Again, that's in contractlibrary.com, comma, contract dash library.com. and we released that in September of 2018. So that's three and a half years. And since then, we've just maintained that site, and it's become a blockchain explorer that's code centered. So you can go and see what a contract looks like at the low level. What are the memory contents, like the storage contents, what are the past transactions? Things like that.
00:04:30.342 - 00:05:04.906, Speaker B: So we've been maintaining, tooling, and doing consulting in this space for a while, and eventually this got consolidated into a company. And, yeah, we got into the space because it's intellectually extremely interesting. It has lots of interesting challenges. One can build really cool technology and have it have real impact on actual programs, on actual contracts that manage a lot of money. So there is real world importance in having good technology in this space. Yes.
00:05:04.938 - 00:05:17.360, Speaker C: I must say, it doesn't happen all the time to be able to do good research and have a real world impact at the same time. Definitely the case here. So very happy to be part of this.
00:05:18.980 - 00:05:36.320, Speaker A: Yeah, for sure. No, that's awesome. Well, thanks you both for being here. We'll pop over to Adrian here. So, Adrian's from Immunefi. Feel free, Adrian, to introduce yourself, maybe provide a background on, you know, immunefi in the company and how you got involved in this industry.
00:05:37.270 - 00:06:42.610, Speaker D: Sure thing. So my name is Adrian Hetman. I'm working for immunify. Immunify is a bug bounty platform, meaning that whenever somebody finds a bug in a software and don't want to exploit that bug for their own benefit, but want to inform the project and want to earn money when doing so well, immunify, easy platform. Basically, we paid out over 40 million in bounties since our inception, and we started at the end of December 2020. I believe that's the official date of starting of the immunify. And we're hosting the biggest smart contract bounties and also web bounties in the industry itself, meaning that we have right now two projects, Warren hall and Makerdao, who will pay out up to $10 million per critical bug.
00:06:42.610 - 00:07:35.390, Speaker D: We paid what was the biggest recently. I mean, the polygon one was, I think is still the biggest one, meaning that we paid over $2 million in that bounty. But Polygon paid that twice, and we writing content around that, and I'm responsible for that. And also I'm responsible for triaging all the incoming reports. And one of the great benefits of triaging such reports is encountering really bright minds like DDAP, because as they also mentioned, that they earned some money when. When analyzing some projects, and they provided an excellent bug reports. And I even wrote one post mortem out of that.
00:07:35.390 - 00:08:06.114, Speaker D: That was for the harvest finance. And I really recommend everybody reading about that. It can be found on medium page. But in general, how I got into the crypto, well, I got into 2017. I started working as a smart contract developer for various icos. But before that, I was really into bitcoin. I basically wanted to see what I can do with that technology.
00:08:06.114 - 00:09:00.830, Speaker D: But I quickly saw that it is very limited in a sense, that I cannot write much of basic software over that. But I quickly realized that bitcoin is really a first application of blockchain, and blockchain is the real innovation here. So I started pursuing that, and that's how I got into smart contract development. And during smart contract development, I saw that. Yeah, it's cool that I were writing all of the software, but how can we write it securely? What happens if somebody hides that and how much money people can get actually hack and steal from the project? And when I saw the numbers and started thinking about that, I started improving myself into that direction. I joined one auditing company for which I work over a year and currently admonify. I'm nearly nine months.
00:09:00.830 - 00:09:03.510, Speaker D: And. Yeah, and that's how I appear.
00:09:04.210 - 00:09:27.418, Speaker A: Awesome. Awesome. Thank you for the introduction there, Adrian. Yeah, immunefi is pretty cool. Like, you know, without it, we wouldn't have this platform to kind of, you know, turn these potential hackers into white hats and, you know, just provide them a bounty away of, you know, ensuring that they can get their information out without, you know, exploiting the hack. So it's. It's great.
00:09:27.418 - 00:10:04.190, Speaker A: I think that platform's, you know, been utilized by a lot of protocols, and it's great to see that in the industry. So happy to have you all with us here today. So we can kind of, you know, we got five questions set here in the panel. We can kind of talk about each one as long or as short as we want to, and then if there's any kind of AMA questions, from the community, we can get through those. So, you know, feel free to jump in and, you know, display your thoughts on these ones. So the first kind of question was, you know, how do audit firms play a part in the growth of the blockchain industry?
00:10:05.570 - 00:10:58.054, Speaker B: Okay, maybe we should. We should go ahead. I mean, this is one of the few areas where auditing is almost obvious. It's almost self evident that you want to have auditing for some security assurance on your project. So obviously, there are very high security requirements in the DeFi space, in the whole blockchain space. And the best way to ensure that the project is as secure as can be is auditing. Auditing will not find necessarily all the bugs, but it has a pretty unique combination of finding bugs or vulnerabilities that no other technique can find, something that will combine protocol level threats together with code level threats.
00:10:58.054 - 00:11:29.660, Speaker B: That's the kind of thing that requires human intelligence. You know, it's very hard to beat auditing in this respect. I mean, audited projects are much less likely to be hacked, so they're typically just statistically much more secure, I would say. And it is pretty much a given these days, that most high profile projects, if they're not clones, if they are, if they do have original code, that they will go through a couple of rounds of auditing.
00:11:30.560 - 00:12:42.850, Speaker D: Yeah, I agree with the statement. Auditing is really important. I mean, if it wouldn't be for an audit, the number of hikes and how much money would be stolen would be much, much, much greater. Because please remember, in the web two space, when there is a security breach, most of the cases, what happening is that your personal information, like users password, emails, maybe your city where you're living, et cetera, are leaked. But it's really hard to put a price on that information, on that data. In the web3, world, when a project is hacked, you know exactly how much is at stake and how much was stolen, because we are dealing mostly with a lot of money, and auditing helps protect such projects. And as Jani has told us, that if it is an original code, not a fork, and even if it is a fork, but with some major addition and changes, and it goes for an audit, multiple audits.
00:12:42.850 - 00:14:08.360, Speaker D: I, as a user, would be much more certain that kind of a project doesn't have most of the bugs, which can only be found through auditing. Because yes, you can apply some statical analysis tools or any other automations, but if an audit is done and human being is looking through your code, checking the logic of your protocol, looking at the thread modeling what can possibly go wrong and verifies that, then, yeah, even the project will be much more secure after that, after such procedures. And also remember, that audit is mostly done for the developers, for the project to secure their code. But it's also not last resort of security approval. It doesn't really. It mostly means that if someone went through an audit, that project has a high quality code. Most of the issues were probably found and you can expect a certain level of security guarantee, but that security guarantee is never 100%.
00:14:08.360 - 00:14:16.120, Speaker D: If it would be 100%, then immunify wouldn't exist and we wouldn't host such big bounties.
00:14:16.580 - 00:14:52.330, Speaker A: Yeah, for sure. That's definitely interesting. As an investor, looking for projects that have been audited is key. And checking to make sure that they've. As an investor, I never thought I would be opening audit reports, checking the problems in the audit reports that they've been verifiably fixed or anything like that. So web3 is definitely an interesting space that way. And even with the, you know, the forks still good to have an audit.
00:14:52.330 - 00:15:39.010, Speaker A: You know, you never know what the devs have changed. And even in some cases, you know, when these things get forked onto different networks, they still have the, you know, different attack vectors. I know recently we saw in the gnosis chain there that some of the platforms were hacked through a reentrancy attack because of the way that the tokens were kind of listed on the, on the network, which wasn't. Wasn't something that anyone had really thought about with just forking, say, like an Aave protocol. So, you know, there's, there's always, you know, unique, interesting ways that people are looking at ways of exploiting these things. And, you know, it's. It's definitely good to have someone on your side of things to be working with the, the protocol and the, the code to ensure that it's safe.
00:15:39.010 - 00:15:47.370, Speaker A: So I think, you know, it's definitely super important the role that audit firms are playing in kind of the growth of this industry.
00:15:47.450 - 00:16:37.708, Speaker B: So if I could add something though, I think it's important to emphasize what Adrian said before, which is that audits are for the benefit of developers and not for the benefit of clients, of investors, of anyone else, pretty much. So that's something that investors should keep in mind that the audits are done for the security of the project based on the interests of the developers. So, specific example, we may list 15 different issues in an audit report. If the developers tell us, just dismiss those dismissed. Those are not serious issues. That's fine. The auditors gave the warning.
00:16:37.708 - 00:17:30.946, Speaker B: The developers decide that for one or another reason, environmental reason or different safeguards, they don't think that this warning is serious enough, then that's going to be dismissed in the audit report. So the audit report is not there to protect investors from the protocol owners, even though it may have some warnings about centralization, about possible rug pools, etcetera. But the audit report is there to ensure the security of the code when developers really want the code to be secure. So that's something to keep in mind. So when you're reading an audit report, as an investor, it's important to keep in mind that you are not the intended audience of this audit report. So you're looking at the code vulnerabilities, fine. But take this in context.
00:17:30.946 - 00:17:36.812, Speaker B: The developers took that warning and did whatever they wanted with it. Yeah.
00:17:36.836 - 00:18:29.358, Speaker C: And a quick follow up to this is that not only it's up to the developers to basically use the findings of the audit as they see fit. So it's important to have this in mind. Also keep in mind that an audit basically speaks about a specific point in time, the code that we saw a specific commit in the repository. But code is a live thing. So, I mean, so not only the developers should basically inspect the findings and address them, but also, you know, if they keep making changes, then new audits are needed and. Or continuous audits are needed. Or they need to also understand what the findings are about and think in the interchanges that they do later.
00:18:29.358 - 00:18:46.170, Speaker C: Whether they do not introduce, like, they do not regress or, you know, it's. Yeah, it's not like a stamp. You got the stamp now you're okay, you do whatever you want, you get funding and life is easy.
00:18:47.030 - 00:18:49.022, Speaker A: Yeah, yeah.
00:18:49.046 - 00:18:54.530, Speaker B: So audits are very useful, but some caveats are good to have in mind when you're reading them.
00:18:55.370 - 00:19:50.810, Speaker D: Yeah, exactly. Audit is not a silver bullet for all security issues, and it's not intended to an investor audience. I mean, nowadays most of the audit reports have a summary section that anybody can read and don't need to go into the depths of reading the technicality of every bug there is. But the intended audience for an audit is developers, and what developers will do with that audit report is up to them. And there were cases in the history, I can remember which projects did that, but, and they went through an audit, they announced that, well, an auditing company x audited us. Everybody was happy. But the code that was pushed to the main end was completely different.
00:19:50.810 - 00:20:24.140, Speaker D: Wasn't the one which was audited. So you need to look at the audits like, yes, they are really necessary for keeping the security of the project, but you as a user, you need to take them somehow with a grain of salt. Meaning you need to look at some potential caveats and some edge cases that can happen with the project because it's still up to the project if they're going to apply all the recommendations or not.
00:20:24.800 - 00:20:51.850, Speaker A: Right? Yeah, that's a very good point. So more emphasis on the team and kind of who's building these contracts, you know, how these contracts are being deployed or changed as time goes on is something interesting to look at as well, and important. So, DDAl, you guys have a kind of a continuing auditing program built into your auditing service, is that right?
00:20:53.670 - 00:21:47.600, Speaker B: I'm not sure whether you mean our automated system for monitoring or just the regular auditing business that's continuing. We do have a technology assisted continuous monitoring, continuous auditing system that we call watchdog. So we do have the DDOB watchdog as a program, and you can define protocols in it and watch both the code and transactions and current state of the blockchain. And it issues warnings for human inspection. But that's separate from our manual auditing. So this is a different product from our manual auditing. So when we go to a product and we actually do manual audits, this is just a traditional code inspection by experienced senior auditors and we try to find vulnerabilities by hand.
00:21:47.600 - 00:22:07.398, Speaker B: But so these are two different things. We have technology for automatically finding vulnerabilities and continuously monitoring a project that's watchdog. And we have manual audits, which still are the main part of our business. Most of what we do is manual auditing to this day. Yeah.
00:22:07.414 - 00:22:20.758, Speaker C: But also the manual auditing can also be continuous. We have clients that ask for regular audits. Like every month they have a delta in their code and they ask us to review it. So that's another useful thing.
00:22:20.854 - 00:23:17.040, Speaker B: Yeah, yeah. So we do have some retainer contracts where we review incrementally the code either every month or every two months. And by the way, just to say something about immunify, every one of our audit reports says the project should have a bug bounty. That's part of our security recommendations. We are big fans of bug bounties and immunify. It's spectacular what immunify has accomplished in this space. It's spectacular that this space, in the whole context of the software space, Defi and smart contracts are a tiny part of software, and still immunify right now has bug bounties that are higher than any other bug bounties in any software context whatsoever.
00:23:17.040 - 00:23:30.180, Speaker B: And not just individuals, but also as in total volume. So immunify has become the number one service not just for bug bounties, for Defi or for smart contracts, but for software as a whole.
00:23:30.920 - 00:24:21.454, Speaker D: Thank you very much for these kind words. We are really proud of what we have accomplished. But yeah, we are not yet done. We are only getting started. And as Mitchell, one of our co founders, has said multiple times, and I totally agree with that, bug bounties are the rust last security resource for you, meaning after you go through an audit. And even if you do an audit on a retainer, having a bug bounty can incentivize white hats and even some black hats to turn white hat. Instead of exploiting the vulnerability themselves and stealing potentially millions of dollars from your protocol, we'll just report it through imminify and your project will be saved for sure.
00:24:21.502 - 00:24:36.370, Speaker A: For sure. No, that's awesome. Cool. That's how audit firms play a part in the growth of the blockchain industry. The next one we have on our podcast is, what are the challenges when trying to audit new protocols?
00:24:40.790 - 00:25:31.610, Speaker B: I don't think there's a clear answer. When one is trying to audit code, one is trying to understand something very complex, typically, and get into the mind of the developer. So it's always a challenge. I mean, when, for instance, at least for me personally, when I do back to back audits, I have at least for the first couple of days when I switch projects, I have this distinct impression that now I'm trying to enter someone, I'm trying to enter the mind of someone completely different from, uh, from the person I was trying to read the code of last week. So it's, it's a little shocking to, to just see completely different styles of code, completely different ways of expressing fairly similar things. So it's always a challenge. You're trying to understand something complex.
00:25:31.610 - 00:26:36.720, Speaker B: Complex, because software is complex, and you're trying to not just understand how it functions, but also how it should function and how it can be abused, how it can be misused for benefit. So it's always a challenge. And there are also challenges that have to do with new technologies like auditing has definitely changed in the past few years. I mean, you know, two and a half, three years ago, most of what was being audited Washington, fairly simple protocols, some tokens, icos, et cetera. I mean, now they are very complex protocols, DeFi protocols. Sometimes with complex financials, sometimes we need to employ a finance expert well, we've become finance experts to some degree ourselves. There are definitely things that we know today, I guess, as auditors, that probably we didn't know two years ago in terms of finance.
00:26:36.720 - 00:26:54.520, Speaker B: And, you know, if you combine finance together with protocol level complexity, together with code level complexity, because there could be very, very shallow, low level bugs that lead to vulnerabilities, it becomes very, very complex.
00:26:54.980 - 00:26:55.660, Speaker D: Yeah, yeah.
00:26:55.700 - 00:27:43.810, Speaker C: So definitely just understanding this is the challenge. Understanding what the code is doing, what the developers wanted to do in different contexts. I mean, this is hard. And also understanding that the different attacker models, it's not always clear what the attacker model is, who might try to exploit the. Some vulnerability. I mean, sometimes it's clear, but sometimes, you know, there are bugs just because you didn't think that, you know, some attack vector, not. Not from a technical perspective, but from the perspective of who the attacker might be and what they might try to do.
00:27:44.310 - 00:29:13.698, Speaker D: And let's not forget what DeFi really means. It's decentralized finance, meaning that when the new protocols, new type of protocols come up, there are mostly more complex iterations on what was really happening in the DeFi space, or there are just implementation of standard financial stuff that is happening, for example, on Wall street, and moving that into the DeFi, that means that, yeah, you need have a pretty big financial understanding, economic understanding, apart from understanding how the code works, how it's supposed to work, what protocol is really supposed to be doing. And there are multiple things that can go wrong in that, either on from handling of the governance, or how user can, for example, by mistakenly sending something different, can I. To probably something dangerous to the protocol. Maybe the internal accounting is wrong. And let's also not forget that the DeFi is also. There is this term defi legos, meaning that everything interconnects, which is nice from a user perspective, but it's a nightmare from security perspective, because something on its own can be secure.
00:29:13.698 - 00:30:13.000, Speaker D: But when taking into consideration, for example, a different protocol, or maybe some flashlights or whatever, then the completely secure thing on its own isn't secure anymore. And if it comes to the new protocols, you cannot be 100% sure how something will behave until you see it live on chain. So it's really difficult and it's really challenging to audit such new protocols. But all auditors are having an awesome in house knowledge, and sometimes they're referring to an external financial advisor or math advisors, because mathematics are really also important in the DeFi itself. So, yeah, it's really challenging, but it's also very fun and it's also not the reason why I'm always bold.
00:30:16.220 - 00:30:53.580, Speaker A: Yeah, for sure. So it sounds like things are getting more kind of difficult, maybe as the industry matures, things are building on top of each other, and then you kind of think of how these integrations are working together. So, you know, it'll be interesting to see how things progress in the future, you know, whether we see. I can kind of sort of see a world where you're getting kind of these larger conglomerations, maybe, of people working together or audit firms kind of providing like a full area service because you're looking at so many different factors. Right?
00:30:54.920 - 00:31:53.320, Speaker D: Yeah. And I think in the future we will see specializations with an auditing because I don't say that it will be impossible for one auditing company to do full audit of one protocol because this will be still possible, but things getting more and more complex, I think we will see some specialization happening within our auditing space that maybe if you want to do some governance testing, you should talk to that company because they know really their stuff about that. If you want to talk about tokenomics and how did that in general, your economics of the protocol, maybe you should talk to a different company, etcetera. As of now, it's still possible for one auditing company to audit everything. But looking how things are progressing and how fast are progressing, I wouldn't be surprised if the specialization will happen.
00:31:54.350 - 00:32:01.870, Speaker A: Right, right. Okay. Did you have any closing thoughts on that or we'll move to the next question?
00:32:01.910 - 00:32:14.894, Speaker B: No, not really. I mean, I think we agree with everything we heard. Yeah, I mean, it's not. There could be specialization in the future. Maybe, maybe not. We're not sure. I wouldn't be surprised.
00:32:14.894 - 00:32:18.130, Speaker B: It's exactly the way Adrian put it.
00:32:18.680 - 00:32:31.540, Speaker A: Perfect. Perfect. Okay. So that was challenges when trying to find or audit new protocols. Next one is, is there difficulty in finding qualified auditors?
00:32:32.760 - 00:32:33.540, Speaker D: Yes.
00:32:36.840 - 00:32:40.100, Speaker A: The short and sweet answer. That's really all you need to say, eh?
00:32:41.080 - 00:32:42.380, Speaker D: Yeah, exactly.
00:32:44.290 - 00:33:14.892, Speaker B: Yeah. I mean, there is high demand right now for audits, and at the same time, it's the kind of thing that's very hard to know the qualifications of the auditor. So people tend to go with people with auditing companies or people who have extensive past background, and that makes you conservative. And it's a conservative area overall. Right. This is security. You have to be conservative.
00:33:14.892 - 00:33:57.956, Speaker B: You are trying to be defensive here. So I think the combination of those two means that there is a shortage of auditors. I wouldn't say a shortage of qualified auditors. It could be that ten times more people are qualified, but they don't have the experience or the credentials to prove it. So it's very hard for customers to find out that they could trust someone else. So people trust auditors who have been vetted by one of the top companies or who have extensive experience in auditing similar protocols in the past. And that by itself creates a lot of demand for a pretty small pool of people.
00:33:57.956 - 00:34:00.800, Speaker B: So of course there is a shortage.
00:34:02.220 - 00:35:19.180, Speaker D: Yeah. Just to add to that, and also add to my previous answer, is that finding people who understand blockchain, because it doesn't really refer to solidity or EVM, because there are many different types of blockchain, like, for example, rust ones, and finding good rust auditors and people who know how to write really great rust code is really hard on its own. And finding those people who know how to be a good developer and know about the blockchain is even harder. And finding in that pool, people who are really interested in the security and are thinking about security in a way that auditors should be, meaning approaching problem from a very different perspective, it's even harder. And yes, we having a shortage of really great auditors in Defi in general. And that's why when talking to different auditing companies, you can get an answer that, yes, we can audit your project, but let's wait six months.
00:35:19.680 - 00:35:46.680, Speaker A: Yeah, so, I mean, it sounds like experience right now, maybe Trump's more the educational side, but do you guys see the educational side building or how, how do you determine, okay, this guy's taken, you know, these courses on auditing, you know, is, are they ready to be part of your team or audit these protocols or have trust or, you know, it's a combination of both. Or how do you look at, you know, the educational side versus experience?
00:35:48.100 - 00:36:51.902, Speaker B: Well, so we definitely, I mean, the educational side goes without without mentioning. So at least for us at DDOB, if someone doesn't have a top education in computing, they need to demonstrate a lot of programming experience. So they need to show that technically they are really, really top in order to be even beginner auditors and start getting some experience. So, goes without saying there should be education. There should be a very, very strong technical background for someone to become an auditor. To start on the journey towards becoming an auditor, I would say it doesn't have to be formal experience, but typically that's the easiest way. So there are lots of top people, top white hat hackers that don't have any degree or anything, but they have shown that they're the extremely good programmers by participating in many projects in the past.
00:36:51.902 - 00:37:41.648, Speaker B: Now once someone is a top technical person, then the experience in the auditing itself comes in and there. I think that it doesn't necessarily take that much experience. Compared to developing technical skills. One is something that requires, I don't know, I'll just give some figures, but let's say technical skills requires at least five years of strong background, but auditing experience. Once you've done a few audits like mere months, and you know the basics of DeFi protocols and of course the principles of blockchain technology, you can be an extremely good auditor. But. So technical background is very important.
00:37:41.648 - 00:37:47.166, Speaker B: Experience is important, of course, but only follows the technical background.
00:37:47.318 - 00:38:19.800, Speaker C: I would say it's also kind of a necessity because if you want to hire like a Java programmer, you can easily like put an ad saying, I want someone with five years or ten years of experience. If you're serving with someone with five years of experience in defi security auditing, good luck. This thing is impossible. So. Yeah, but definitely so you need someone who's strong and then make sure you train them well. And this doesn't take too long if someone is good.
00:38:20.500 - 00:38:44.790, Speaker B: Yeah. So the experience takes less than the actual development of technical competence, at least from my standpoint. We want to start with people who have shown that they can program really well or are otherwise extremely strong. Technically, I mean, maybe they do the finance part or something else, but technically they should be very, very strong.
00:38:45.130 - 00:40:14.388, Speaker D: Yeah, I agree with that. And from my perspective, people who want to audit, of course they need to have a strong technical background, no matter if it comes from a university or working for one company and really gaining that experience in years. But the people need to be a great problem solvers, because when you are audit, when you are doing an audit, you're facing a problem, meaning your main problem. And my question to answer is, okay, how I can break this, what can go wrong? Is this working properly as it should be? Okay, documentation is saying that should be working as in the documentation or is it working as intended or under documentation is right. And there is many different aspects of how you need to approach an audit. How do you need to stop thinking as a developer or a user and start thinking as an attacker? Because what you want to do, you want to find edge cases, you want to find some loopholes where a potential attacker can sink in. And that perspective, that way of thinking, I think is really hard to teach, but I think it's not that hard to gain.
00:40:14.388 - 00:40:54.900, Speaker D: I mean, for me it would be very hard to teach somebody how to think critically. But if I present him a few of challenges or for example, he would do some of the audits, then he could pick up and start to see certain patterns, ways of thinking that produces the best results. So that's why the experience in auditing isn't that much required. But the technical background, as DDAP team has said, is really needed. Plus five years of DeFi experience, does that count over time or not?
00:40:58.160 - 00:41:08.220, Speaker B: Yeah, I think in this space almost everyone works overtime. So yeah, if you count over time, then it may be achievable.
00:41:08.880 - 00:41:16.784, Speaker A: Five years, that's what I. Yeah, five years in crypto is like 25 years in the regular industry.
00:41:16.872 - 00:41:46.424, Speaker C: So yeah, I should also add that of course, security training is part of what, you know, university students are trained in, you know, in top universities. So I mean, I'm teaching the security course here in the University of Athens and of course this is, you know, a good place to find good students, but also, you know, train them yourself.
00:41:46.512 - 00:41:47.140, Speaker A: And.
00:41:48.840 - 00:42:25.650, Speaker C: You know, it's an important part of the training. Of course, DeFi security is new, so it is starting to being added to in the courses. I guess in the near future you will see many more students that are, as part of the standard curriculum is already trained, at least in some aspects of DeFi security. I have a little bit in my undergraduate course, not much, but slowly we're getting there.
00:42:26.060 - 00:42:46.164, Speaker A: Awesome. Thanks for your answers on that, guys. That's really informative I think for everyone. So if you're definitely interested in becoming an auditor, you know, start with the education and see how you can get involved in, you know, a protocol and start creating some contracts. So definitely the education side is important though.
00:42:46.212 - 00:43:14.370, Speaker B: So education or experience, but not necessarily auditing experience, it could be development experience. The point is that someone probably would start from having strong technical skills, either through formal education or through actual development. But first be a strong developer, strong engineer, then consider experience in auditing specifically. That would be my advice.
00:43:16.390 - 00:44:25.120, Speaker D: And if you have a really strong programming experience and want to and already are doing some work in the Webfree, in the smart contact space, but want to look at the security space more for v, then I would suggest to read some update reports, try to see the write ups for certain hacks, see post more terms of that hacks, and also read some backfix review that we are releasing on in minify where we really dive deep into explaining the issue, the underlying issue and teaching community by that. Because it all comes down to the fundamentals. If you don't have fundamentals, then you wouldn't be a good auditor. You need to really understand the blockchain, the underlying technology. You need to understand DeFi, how is it working? You don't need to understand every project, how is it working in the space, but you need to know, for example, how lending and borrowing protocols work, how different amms are working, etc. Etcetera.
00:44:25.820 - 00:44:48.850, Speaker A: Great, great. Awesome. Thank you. Okay, so that was difficulty in finding qualified auditors. We'll go to one more panel question and then we'll open it up. We got a few AMA questions. So the last one on the podcast, or the questions here is with how fast the industry moves, how are you guys staying ahead of the curve?
00:44:49.430 - 00:44:52.250, Speaker B: I think we already talked about overtime, didn't we?
00:44:53.670 - 00:44:55.170, Speaker D: Yeah, we did.
00:44:56.790 - 00:45:40.870, Speaker B: Yeah. I think we are so busy that just naturally in the flow of things we're catching up. And also kind of, it's the old adage of the easiest way to predict the future is to invent it. We audit most of the upcoming protocols, all the innovative finance or not most, many. We look at a lot of innovative protocols. So I think we're staying ahead of the curve just through our auditing and at the same time we're building technology. So we are staying on top of that because we have to keep up with all the new changes, all the new changes to solidity, all the new changes to the underlying blockchain technologies.
00:45:40.870 - 00:46:07.672, Speaker B: We hack Geth and ergon nodes. We hack our own analysis of EVM bytecode and solidity source code. So we are kind of in the middle of everything. So just speaking as Ddob, we're kind of in the middle of everything. So I think it's a. It's not hard for us to keep up. It's hard to do what we do.
00:46:07.856 - 00:46:32.646, Speaker C: Yeah, definitely doing auditing helps you keep up. It's not that hard because you are forced to. The new things come to you. It's a bit like when you're an academic and you review papers, this is mainly the way to stay up to date. You see the new papers, you have to review them. So you are forced to learn about new things. So that's not the hard thing.
00:46:32.646 - 00:46:46.370, Speaker C: It's hard because you have deadlines and you have to meet them. But it's not like you have to figure out what's new and have to learn it. The new things come to you and you're forced to learn them.
00:46:47.190 - 00:48:08.762, Speaker D: For me, I'm in a very special place. Meaning that we as minify as a back bounty platform and me working as a tree azure. I get all the cool reports from all the great hackers and I read them first before. Gives me an interesting perspective into how certain protocols are certain about what other companies are doing and what they are putting out. For example, on the multi chain, if I remember the title correctly, that was an awesome article. And I learned a few interesting things, things from that and just looking at different discord groups, trying to see what is happening in terms of the hacks and trying to understand those hacks that were happening on chain and reading some post mortems out of that, that really helps you also to stay in the loop, stay ahead of the curve.
00:48:08.946 - 00:48:30.608, Speaker B: Yeah. Thank you for the kind words about our article. Yes, exactly. These are good pieces of advice. I agree. Definitely channels for developers Twitter also just pursue follow links to articles on cutting edge developments. Yeah, all of that is very good advice.
00:48:30.608 - 00:48:32.380, Speaker B: Post more terms for sure.
00:48:33.120 - 00:49:01.350, Speaker A: So in terms of the industry, is there like a consortium or group of auditors? Are you guys reaching out to other companies, kind of compiling this data and information and, you know, working together with, with everyone else to kind of share what you guys have learned and what they have learned and kind of coming together as a whole to ensure that the space is generally further along or moving ahead?
00:49:03.210 - 00:50:27.998, Speaker B: Yeah, there are channels that security experts use and most of those actually, I mean, they're very useful for making sure that we keep ahead of the developments. So generally there are communities, there are discord communities and telegram communities of security minded engineers, and through those, as well as through more closed groups, but also that include people from multiple companies, we get a lot of expertise. I mean, one doesn't need to be extremely well connected. If you are connected to like three or four sources outside a single company that are in other good companies, pretty much you hear very quickly everything that happens. And if you add to that, making some connections in developer conferences, and now developer conferences have started being in person again, so you meet some people, you connect to them. There is an informal network that very quickly gets you all the information you need. And not to mention that these days, just Twitter may only have small summaries of the information, but it has links to almost everything one needs.
00:50:27.998 - 00:50:35.072, Speaker B: So that's also a very good way to keep on top of developments. Yeah.
00:50:35.096 - 00:51:16.230, Speaker D: And Twitter is really powerful tool for web3 security and in web3 in general, because as Janice has just said, even if the Twitter threads are lacking, in most cases they are linking to a full articles or just linking to different resources that you can use to read the full story. And the security group in web3 we are all basically like a big hive mind. We are all connected. And even if you know just couple of people, those couple of people know another couple of people, and suddenly, you know, you can, you almost have access to everyone.
00:51:17.090 - 00:51:42.480, Speaker A: Perfect. That's awesome. Okay, so that was the fourth podcast question there. We have a few AMA questions. I don't want to keep you guys any longer than about an hour here, so we'll get to those questions. One for ddalp. Specifically, how does a project keep proactively monitor their code projects can't do audits every time they modify an update.
00:51:42.480 - 00:51:50.880, Speaker A: How does the audit firm keep monitoring on this and kind of warn projects before malicious attacks happen? Is that possible?
00:51:53.280 - 00:52:47.628, Speaker B: Okay, I have to say I did not pay the person who asked that question, but that's exactly the story for our watchdog. Continuous monitoring tool. So this is a semi automated service. So it uses over 80 different analysis based on patterns that we've seen in our audits, based on our understanding of what constitutes fundamental vulnerabilities. And it can watch continuously a specific protocol for contracts being deployed by the same deployers or that interact with past contracts of the protocol, and it can issue warnings for someone to inspect. So we have an engineer, and every project that's on subscription with us with the Whatsdub service gets someone to inspect the warnings every week. So that's our proposal.
00:52:47.628 - 00:53:12.000, Speaker B: Is that the only way to do it? I don't know, but certainly the space needs some way to do more continuous auditing, because just auditing every three months, six months, that's not enough for projects that deploy new code every month or even more regularly, that's certainly not enough.
00:53:12.690 - 00:53:24.070, Speaker A: Great. Okay, and then we have one other question here. Do audit firms guarantee their audit result? Is there any insurance or responsibility on their result?
00:53:24.690 - 00:53:56.024, Speaker B: No. The answer is no. Every audit report comes with a disclaimer that says, this is best effort, state of the art right now. That's what we know about vulnerabilities right now. And that was our understanding of the code of we made a good faith effort within the time that we had, and this is what we found. It is certainly no guarantee of any kind. So what's the impact if an audit firm gets it wrong? It's a bad impact on the reputation.
00:53:56.024 - 00:54:32.540, Speaker B: One would like to hope that it's the market that's going to enforce it. Is there security? Well, security, it's kind of an independent thing. There is DeFi security. There are multiple providers of defi security with. With different ways, very different technologies there, and investors are advised to also seek insurance if they can. So that's also one way to feel a little more secure to get insurance. But yeah, an audit is not a guarantee of correctness.
00:54:32.540 - 00:55:17.860, Speaker B: Nothing is a guarantee of correctness. There are extremely well audited protocols. There are protocols that have proofs of correctness, formal proofs of correctness, that have had multi hundred million dollar vulnerabilities. So there is no real way one can be 100% sure that something is correct. It's just that statistically, auditing raises the state quite a bit, and a protocol becomes a lot more secure because a security minded individual has looked into the code and has tried to break it in the past. But an audit is not a guarantee of security, is not insurance, does not come with insurance, does not come with a warranty of any kind.
00:55:20.120 - 00:56:32.320, Speaker D: Yeah, I just want reiterate that because that's exactly the answer that I wanted to give, especially regarding the formal verification, because there were cases where some protocols were formally verified which supposed to give you the best security guarantee of the protocol, but still not 100% security guarantee that the protocol is safe. But still such projects and protocols were hacked. And it all comes back to the previous conversation. Auditing is not a silver bullet, and the intended audience of an audit are developers, not investors and the users. The auditing became so public because web3 is so public and so decentralized, and the projects wanting to gather more potential users started to say, well, we were audited, our code were audited by X company, and suddenly the auditing report started to become public. It started to become a public good. But still, the intended audience of an audit is our developers and the project itself.
00:56:32.320 - 00:57:17.420, Speaker D: And yeah, I cannot think of a way that an auditing company or even a single auditor would be responsible for later that project being hacked. Because audit represents an potential security guarantee in best. I mean, it provides a security guarantee at the specific spot in time, and an auditing company doesn't have any assurance that the project won't release anything different.
00:57:18.050 - 00:57:51.144, Speaker B: And not only that, but we really, I cannot read a long piece of software, a long piece of code, and promise you that I found all the bugs. And yeah, maybe we'll have two auditors look at it, but this just makes it a little more difficult. But there's no promise, no human can promise that there are no bugs remaining in a piece of code. If the piece of code is of a certain size and complexity.
00:57:51.232 - 00:58:51.700, Speaker C: Yeah, especially given the timeframe. I mean, these are complex protocols that took months to develop and then the auditing happens within a couple of weeks. And then within these weeks, you need to understand what the protocol is doing to understand the math, the problem, the adversary, model the code and find the bags. It's very hard. I mean, sometimes even, even the small bugs, at least I would say that I'm confident that auditing will find at least the easy bugs and a good percentage of the more deep ones. But even the easy bug, sometimes it's amazing. I mean, that's why you need at least two auditors for every audit, because you know you have a protocol with a simple bug, right? So the fact that the simple bug is there means that that competent developers that developed this code, you know, saw this many times and didn't figure out that the bug is there.
00:58:51.700 - 00:59:11.260, Speaker C: So why necessarily the auditor, like one auditor will see it, maybe he won't. So you need many others. Couple of weeks and then even then you cannot be 100% sure that all bugs are found. Is this possibilities? This is what is.
00:59:11.640 - 00:59:28.060, Speaker A: Yeah, I think that makes sense. It's just to give you that kind of level of verifiability and like you said, the statistical edge. And once it's been audited, there's a lower propensity of being hacked. Right. So, definitely makes sense.
00:59:29.570 - 00:59:40.510, Speaker D: I think if every auditor and every auditing company would be hold responsible for every hack, then there wouldn't be any auditing company left.
00:59:41.770 - 01:00:13.800, Speaker B: Oh, there would be, but they would all become kind of insurance companies. Then the only auditors you would have would be whoever has the deeper pockets to cover the losses. Not whoever can audit code more competently, but whoever can take the damage when it happens. So that's the problem. That's the kind of model you don't want. Auditing is not insurance. It's not a way that if it goes wrong, you get back damages.
01:00:13.800 - 01:00:56.170, Speaker B: It's a way to make sure that things do not go wrong. There are analogs in software. I don't want to name large companies, but obviously there are companies that tell you we don't develop the best software, but we have the deepest pockets. So if something goes wrong, we can cover projects that did not pan out. That's what would happen in auditing if you were to say, well, let's hold auditors financially responsible anyway. I don't think this is a realistic model anyway for the industry. So auditing is not insurance is something we should repeat is not insurance.
01:00:56.170 - 01:00:59.934, Speaker B: No guarantee, no warranty, no nothing.
01:01:00.102 - 01:01:00.382, Speaker A: Yeah.
01:01:00.406 - 01:01:25.404, Speaker C: These are two different tools, right? You can use both if you want. Like if you want to keep the bad guys out of your house. You want the competent person to install an alarm and then maybe buy some insurance. You don't want the insurance guy to install your alarm and you don't want to have like the alarm installer being financially accountable for any breaking right? These are different things.
01:01:25.572 - 01:02:12.610, Speaker A: Yep, totally makes sense. I can agree 100% with that. So those are the AMA questions we had. I don't think we have any other ones so furu combo super happy to be working with deepdaob and immunefi so look forward to our future relationships and thanks Costas and giannis and Adrian for taking the time to be here today. Definitely check them out. Check out immunefi and their bug bounty system and ddalb if you need any auditing needs there or continuous monitoring and if you're new to furu combo definitely check us out as well and thank you everyone and our special guests for being here at this second radio event.
01:02:13.510 - 01:02:18.890, Speaker B: Thank you for hosting us. This was fun. Thanks for the excellent hosting. Take care everyone.
01:02:19.590 - 01:02:20.490, Speaker C: Thank you.
