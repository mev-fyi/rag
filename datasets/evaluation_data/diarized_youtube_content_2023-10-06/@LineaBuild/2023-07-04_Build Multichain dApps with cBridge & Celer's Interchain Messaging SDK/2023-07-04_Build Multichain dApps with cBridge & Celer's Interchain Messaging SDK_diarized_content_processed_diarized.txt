00:00:00.170 - 00:00:28.850, Speaker A: Live pending. Hopefully no technical difficulties. But anyways, hello, everybody. I'm Emily, developer advocate for linear. If you haven't been into one of these sessions before, this is episode three of our developer workshop series. So specifically going over the tools and developer infrastructure that have integrated with linear and the really cool things that you can build with bit. So today we have Michael from Seller.
00:00:28.850 - 00:00:31.080, Speaker A: Michael, do you want to introduce yourself?
00:00:31.770 - 00:01:18.402, Speaker B: Hey, everyone, this is Michael from Seller. Sorry, my cam isn't quite working. I've used the backup. And thanks for the invitation by linear. And thanks, Samuel, for hosting this. And today I'm very happy to be here to share some of our work that we did within the cross chain interaction field. And I just want to share our SDK how you're able to just write smart contracts and also integrate with our SDK so that you can build this one click multi chain application specifically for between linear and other blockchains, other layers.
00:01:18.402 - 00:01:19.970, Speaker B: So that would be very exciting.
00:01:20.130 - 00:01:52.446, Speaker A: Yeah, no, it's really cool. Number one, no worries about the backup camera. Your side profile is amazing. The slope of your nose is very smooth. But then, yeah, the other piece is, I think, a lot when I talk to my friends who actually also work on other layer twos. Also, for a surprise, I'm friends with the other shades. I think our thesis is always like, what do you call it? Cross chain infrastructure are going to be like the real winners in the space, not the l two s.
00:01:52.446 - 00:02:15.398, Speaker A: We're going to fade into the background. But you guys are the real powerhouses. But anyways, I think circling back, let's actually just start off with a very simple question like what is seller and what do you enable? I guess maybe twofold because you guys also have your own bridge. Right? So what does seller enable users to do? And what does seller enable developers to do?
00:02:15.564 - 00:03:04.360, Speaker B: Sure. Yeah. So we're actually a blockchain interoperability protocol, we say, basically, as you said, we have sort of like both a product, which is the Sea bridge, what we call, and it's both for fungible tokens and for nfts. And I can actually switch to the UI a little bit. Yeah. So this is actually a testnet view of the Seabridge interface. And as you can see, we offer transfer interface for fungible tokens and also a tab for don't have, we don't actually have NFT bridge for linear yet, but you can always build one and we can probably add it to the.
00:03:04.360 - 00:04:17.630, Speaker B: So basically that is the product part of our, like all of this is built on our SDK. So that's more for the developer facing side of our product. The SDK is for developers to just build one click user experience for any sort of blockchain application, be it deFi, Gamefi, NFTs, or if you have a governance part of a protocol, for example, you have governance tokens on multiple chains and you kind of want users to be able to vote on any of the chains. Then you can use our SDK to build this cross chain governance framework for users to participate in the governance process. So yeah, all of that is enabled by our SDK, and you're able to just build what we call interchange native D apps with our interchange messaging SDK. So yeah, it's kind of mouthful, but it is what our product and SDK, the two parts are focused.
00:04:18.130 - 00:04:27.060, Speaker A: See, I see. Okay, this is actually because you mentioned NFT bridging. Kind of a question for myself, how does NFT bridging exactly work?
00:04:28.070 - 00:05:25.522, Speaker B: So yeah, it's interesting because if you think of tokens, right, so essentially there are actually two ways of how you can bridge fungible tokens. I'll get into the details later when I get to the technical part. So that's how our fungible tokens work. But for nfTs, if you sum it up, it's just like you have the original entity, for example, on Ethereum, and you have people trading on open seal blur or whatever, and then you can have this mirrored NFT that gets minted on the linear. Right? And whenever you lock your original NFT on a smart contract on Ethereum, and we, as an interchange protocol, we monitor that you've already locked this NFT with us. Then we can mint the corresponding we call mirror or pegged NFT linear on another chain. So that's essentially how it works.
00:05:25.522 - 00:05:50.540, Speaker B: Basically you have this copy that follows the original, where the original gets locked and the copy gets circulated on the other chain, and it works the other way around as well. So you have the copy that gets burned or whatever, just like temporarily destroyed on the other chain. Then your original is freed on ethereum. So that's just simply how this NFT bridging thing.
00:05:51.650 - 00:06:07.940, Speaker A: I see. Okay, so I guess for people trying getting inspired by seller, I guess two questions. Can you tell us about popular use cases or applications that seller has powered before?
00:06:08.950 - 00:07:14.680, Speaker B: Yeah, definitely. The most straightforward use case of our interchange protocol is just the Seabridge, which is like a product that's built on top of the SDK. So we've operated this noncustodial and decentralized asset bridge, and we support, I believe, over close to, I think, about 200 different fungible tokens and across about 40 different blockchains, including blockchains and layer two, like linear. So we consider all of them are like different chains and layers. So I think we've processed about, last time I checked, like close to $15 billion in terms of total cross chain asset transfer volume. And we are supporting close to 500k unique users. So I think we've done quite a lot of support for all the users interchange needs.
00:07:14.680 - 00:08:11.942, Speaker B: I think that is our flagship product. And on top of that, we also have the interchange messaging systems, not just for fungible tokens, but also for any sorts of generic messaging. So we have supported the cross chain yield farming with pancakeswap, which is like a very popular Dex in the EVM ecosystem. And we also did a very interesting use case for a project called Tofu NFT, which is like a cross chain, like NFT bidding and purchasing. So like users can actually submit bidding for a particular NFT say on theorem from another chain. So they don't have to actually spend gas on Ethereum to just bid for the NFT. So the process can be much cheaper for users when they do cross chain NFT bidding.
00:08:11.942 - 00:08:54.082, Speaker B: So yeah, that is something. A very comprehensive use case that kind of combines NFT bridging and also the interchange messaging for generic messaging to support that use case. And yeah, we have other smaller projects and also we're not just building on the EVM ecosystem, we're also expanding to other non EVM ecosystems. So yeah, that's like our vision to just build this interchange, like one click interchange operating system for every user to be able to use any dip on any blockchain.
00:08:54.226 - 00:09:08.440, Speaker A: I see that's very cool. I guess kind of my question when I think about cross chain infrastructure, where does the decision come in when integrating a new chain, is it just like, yeah, there's a new one, let's bring it in.
00:09:09.970 - 00:09:57.286, Speaker B: Yeah, I think that's more like the business style. Like our marketing and business team, developer team. When the new chain pops up, they'll obviously evaluate their say. For example, obviously, first off, the technical foundation has to be kind of like solid. For example, linear is like one of the consider, it's like a very solid project technology wise. It's like very solid project. And in terms of user, in terms of market, I guess we kind of evaluate, say for example, how many users are potentially going to use that chain, like how many projects, how many developers going to potentially build on that chain.
00:09:57.286 - 00:10:29.474, Speaker B: So all those metrics kind of evaluate and then we decide obviously, we're not going to integrate with any new chain that pops up, even though the market isn't that very ideal. There are still a lot of new projects, new chains popping up every single day. Obviously, we're not going to integrate with every single one of them. So there are different dimensions, metrics we kind of evaluate when we look at new chain. And I think obviously linear is one of the flagship projects we call, and we're very happy, very eager to kind of support linear.
00:10:29.602 - 00:10:45.466, Speaker A: Yeah, thank you. No, I'm excited, actually. We have a question from the community. So here's question. Can you talk about solutions, problems related to the development of multichain dapps, specifically security and scalability issues?
00:10:45.648 - 00:11:38.838, Speaker B: Yeah, I think it's a great question. I guess when blockchain first came around, it was just like bitcoin, then Ethereum came around, which added to incompleteness, like EVM. So you can build many more interesting stuff on that. But now we fast forward to, say, 2019, 2020. We have this world of multichain D apps, and it obviously brings lots of new challenges in terms of both security and scalability. Well, I think scalability wise, actually, the multichain world is one solution to the general scalability problem. If you don't focus on just like Ethereum, if you kind of broaden your definition of scalability by having different side chains and different layers actually help scalability for Ethereum, people don't have to always compete for the very limited block space on Ethereum.
00:11:38.838 - 00:12:40.362, Speaker B: So I think any kind of multichain Dapp is actually helping with scalability. And obviously, in terms of development, you have its own scalability issue. You have to have the deployments on different chains, you have to managing your smart contract for users, you have to manage your addresses on different chains. For example, if you were just interacting with ethereum, you only have to worry about your ether balance, right? But then if you also have to interact with BNB chain, whatever, you have tenfold more complexity as a user. So I consider that as also a part of scalability issue, not just for a developer, but also for user and for security. Obviously, when you enter a multichain world, you have this. How do you verify a transaction that happened on another chain? And this is like the very core of any cross chain bridging or cross chain interoperability protocol.
00:12:40.362 - 00:13:12.250, Speaker B: You have to ensure that you don't get fooled by some fake transaction, some fabricated transaction on other chain. You have to build this very complicated and very comprehensive sort of monitoring framework for that kind of issue. So, yeah, obviously we tackle both security and scalability. When we build Seabridge and we build the setter interchange messaging SDK, we obviously have to solve a lot of those issues in our development.
00:13:13.470 - 00:13:25.520, Speaker A: That's a really good point. I like that you brought up the scalability in terms of, I'm going to call it scalability of the mind, being able to manage all of that. That's really interesting.
00:13:26.050 - 00:13:54.454, Speaker B: It's like your attention span has like ten x. If you're interacting with linear, BNB, like Polygon, whatever, it's very easy for users to lose track. I think Metamask has improved a lot. In terms of multichain support, it wasn't as good. I think back in 2019, 2020 it wasn't as good. And there were lots of sources of confusion. For example, one token can have different.
00:13:54.454 - 00:14:36.562, Speaker B: Obviously a token is going to have different addresses on different chains, but then there were confusions. For example, sometimes when you switch between binance chain and ether, it still show the BNB token as eth on the BNB chain in terms of. So there were little bugs here and there for multi chain support, but I think it has came a long way from that. I'm talking about metamask. All the wallets, block explorer, like all the infrastructure, all the developer two chains, they all have to address this multichain issue. So yeah, I would consider that some kind of scalability issue on its own.
00:14:36.696 - 00:15:12.970, Speaker A: Yeah, that's interesting. This is kind of maybe a question for you personally, since you brought that up. What are your thoughts on, do you think that will change in the future? Everyone will just transact in their own currency, right? I guess with the power of maybe interchange applications, I'll just be trading in USDC or somebody will be doing the euro. And then in the background you're handling all the like, oh, this is actually linear, this is actually blah blah blah. But for a user, the only thing they need to keep track of is their actual wallet or their account balance, that is also maps to whatever is in their local currency.
00:15:13.050 - 00:15:56.122, Speaker B: Yeah, I do think that is going to be a very ideal situation, especially with newer developments like account abstraction, for example. Plus this interchange messaging, we don't have a standard yet, we don't have interchange standards, unlike, say, for example, the Cosmos role. They have IBC or ICS 20, those interchange standard. But in the EVM world, we don't have a standard yet. But with a combination of account abstraction and interchange messaging, I think we'll be able to achieve what you talk about. People shouldn't worry too much about their different gas on different chains and different layers and they don't have to. Essentially the bridging interface should be very minimal and even intangible for users.
00:15:56.122 - 00:16:16.190, Speaker B: They don't have to keep interacting with bridge uis and everything should just happen under the hood and for them to be able to just use any application. So yeah, that would be very ideal, but I think we're still a few years from that, but we're working towards that.
00:16:16.360 - 00:16:45.680, Speaker A: Okay, yeah, very cool. So I'm going to wrap up the introduction part about seller so we can get to building with one last question. So obviously this is for our developers on linear, whether it be like, I guess, developers on their own time or hackers at hackathons. Do you have a dream dap on seller or inspiration ideas for the people leveraging your product?
00:16:47.490 - 00:17:36.154, Speaker B: That's a good question. I think a cross chain portal thing would be very useful. There are a bunch of portfolio management d apps out there, for example, for people to just view their balances on different chains. And I think it's already quite useful. But if that kind of portal can interact with interchange messaging, you're able to just within that portal to be able to manage your assets on different chains. For example, view nfts, view new empty projects on different chains and be able to purchase them. I think that would be quite useful.
00:17:36.154 - 00:18:17.610, Speaker B: So it's kind of like a one stop hub for, how should I say, for example, when I use Robinhood, for example, in tradfi, you have access to different kind of products, whether it be, for example, stocks or futures options, whatever, all built in just like one place. I think it will be quite useful in not just viewing your balances, but also interact with different assets, different protocols on different chains, all managed by this hub. That would be quite useful. Yeah, I think it would be kind of complicated to build, but it should be doable.
00:18:19.390 - 00:18:50.746, Speaker A: Okay, I guess this is kind of inspiring. Another question. Do you see, it feels sometimes maybe like cross chain infrastructure is more suitable for things like defi, right? Because I think when we talk about gaming, for example, I think, correct me if I'm wrong, it feels like the narrative for gaming sits more around app chains and just like specific ecosystems. And the cross chain part of it is not as important as compared to use cases.
00:18:50.798 - 00:19:58.650, Speaker B: I would say they have different focuses, I would say, yeah, for defi it's more like natural because you're more like, how should I say? It's like asset centric. When you talk about USDC, obviously they're doing CTP on their own, so it's more like asset centric, but, yeah, for games, it's more like application centric. And games tend to kind of have trying to build out their own ecosystem centered around the game itself, and then it's very natural for them to kind of just fork EVM, have their own chain, like, have everyone interacting with that particular application specific chain. So, yeah, that is obviously a very kind of obvious distinction between the two. But I think for games, we've worked with lots of gamefi projects, and I think the most common use case is for their token to be able to trade on a larger decks. For example, I think there are some gamefis that are based on, for example, the binance application smart chain thing. And then there are tokens that want to be traded on Pancakeswap, for example.
00:19:58.650 - 00:21:04.820, Speaker B: And they came to us and asked, can you bridge our token to the main BNB chain, the BSC chain, so that their tokens can be traded on pancake swap for games, I think it's more limited to their own tokens to be able to bridge back think. But for DeFi, we've seen more comprehensive, more complicated interchange d apps that build around the defi. For example, crosschain lending and cross chain decks. Crosschain swap, like, you issue a buy order from one chain, and then you get the token back via all the back and forth. We handle it for you. Yeah, I think that's a very great observation, but I think gamefire is kind of like, even newer field than DFI. So maybe newer cross chain games will pop up and it'll be cool, like, if someone has a great idea of how a crosschain game should look like and build one of those.
00:21:05.830 - 00:21:23.766, Speaker A: Okay, so we have another question from the audience. Wow, you're so popular. Cool. How can you use SDK tools? I guess this is probably going into our next presentation, or, I mean, you can talk about it, and then we can go into your demo.
00:21:23.868 - 00:22:06.450, Speaker B: Yeah, I think this will be covered by my presentation, but I think it's interesting. They mentioned the microservice architectures and how to provide them for organizations. Yeah, I think it's definitely feasible, but the entire blockchain space is kind of new. Right. And for organizations, we're still kind of a little bit far away. I say we're to operate as more like a two b business. For example, we kind of tailor this entire, have this entire tailored interchange messaging solution for some organization.
00:22:06.450 - 00:22:25.660, Speaker B: I think that would be possible, but for now, we're still more facing the retail, for the retail users to be able to interact with the blockchain as opposed to organizations or businesses. But yeah, I think that's a good future to be living.
00:22:28.030 - 00:22:37.360, Speaker A: Okay, very cool. So I know you set up some slides, I'll let you take it away from here.
00:22:38.610 - 00:23:11.260, Speaker B: All right. Yeah. Then I'll switch to the few slides I prepared. Yeah. So the topic for today's presentation is build one click ux multi chain dapps on linear. So we have actually like two parts of the SDK. So we have the CBridge SDK, which is more focused on the fungible token bridge, and we have the more generic interchange messaging SDK for any other applications that you want to build.
00:23:11.260 - 00:24:15.210, Speaker B: And first off, I guess little bit like another round of introduction of what Seabridge is. And this is more on the more technical side of things. So the entire Seabridge is based on this thing called SGN, which is what we'll call state guardian network. So basically it is a independent application specific chain that is like the application will be crosschain interaction, like crosschain transaction. So it's just like application specific relay chain that's built on the cosmos tendermint consensus. And we use the seller token as the staking token so users can stake seller token on theorem and then it gets reflected on the SGN to kind of represent the stake they devoted for a particular validator. And then the network has to achieve the two thirds majority for any event to be processed.
00:24:15.210 - 00:25:10.794, Speaker B: So that is where the security comes from. And Emily mentioned, how does token bridging work? So we do have two modes of operation for token bridging. So the first one will be what we call liquidity based bridge. So for example, for tokens with higher market cap, for example USDC, USDT and ether, they're operated more often in the liquidity pool based model. So basically you have this different versions of the same token on different chains. And then we set up a amm kind of structure on Seabridge, and then users can provide liquidity on different chains and then people can move liquidity around by sending bridge requests. So that's like the liquidity pool based operation mode.
00:25:10.794 - 00:26:10.530, Speaker B: And I think for the majority of tokens which are of smaller market cap, we actually do this second mode of operation which is one to one tech bridge. So basically it's kind of similar to the NFT bridge I talk about. Basically you lock this original token on one chain and then the SGN mints packed token on mirror token on the other chain. So that way you can maintain this one to one pack mapping between the original token and the minted token so that everything is secure. You don't just mint out of nowhere, or you don't burn without tracking where the original token went. So this is our second mode of operation. And then we have this, what we call seller IM, which is the generalized interchange messaging framework.
00:26:10.530 - 00:27:29.260, Speaker B: And we connect to many EVM chains, including obviously Vineyard, which is a very flagship like layer two. And we're also expanding to non EVM chains. This slide is more of like an architectural view of how this entire thing works. Like the user via your crosschain application, you submit a cross chain transfer request and then the SJN process all that validates that a cross chain request has happened on the source chain, and then issues a signature of all the validators on the destination chain. And then the Seabridge contract on the destination chain is going to validate all those validator signatures and release the assets on the destination chain. So that's like 20,000 view of how this entire thing works. This slide mentions the two bridging modes I just talked about.
00:27:29.260 - 00:28:45.140, Speaker B: And for the liquidity pool based model, we offer liquidity providers some seller incentives so that people can deposit their assets on the liquidity pools and earn both the transaction fee, both the crosschain transaction fee, and also the adequate incentives. Okay, so let's get into some of the links. So we have this Seabirdge SDK which is more focused on the fungible token side of things. So I'll just share it. Yes. So here is the doc link for the Seabridge SDK, and we have instructions for you to install it. It's based on typescript JavaScript, so it should most of the text that people use, and you can use either GRPC, which is a more advanced API, or you can use the traditional rest API for interacting with it.
00:28:45.140 - 00:30:10.908, Speaker B: And we provide some example for you to just get started. And these are the two modes of transfer and how they operate. And x security is the liquidity pool based model, and X asset is just the lock and minked model, like the one to one like lock and mint model. And we have SDK methods to integrate with either of those models. And here we have an example to how you're going to send a cross chain transfer via the Seabridge SDK. Yeah, I won't get into too much of the details, but the docket is quite clear how you're able to send a cross transfer, and you can definitely try it out. And here as well, like how you interact with the second mode of operation, I think this one will be more relevant to linear, just because we don't yet have the pool based mode for linear yet.
00:30:10.908 - 00:31:08.108, Speaker B: And obviously linear isn't on main net yet. So everything is on Testnet. But I think you can already interact with the canonical token or, sorry, we have multiple terms for the same thing, but this is like the one on one packed model for cross chain transfers and you can already interact with that on linear. All right. And finally, we have this interchange messaging framework, which is the most generalized version of crosschain interaction. So not just for fungible tokens but also for nfts. And we can go back to the, go back to our UI.
00:31:08.108 - 00:32:27.090, Speaker B: And this NFT tab is actually based on this interchange messaging framework. And you can have select your NFT. We don't have any on testnet yet, but yeah, you can build something akin to this kind of application with the interchange messaging framework. So this is like a pretty daunting diagram, but you don't have to know the details of everything. But essentially it's the same idea as the fungible token transfer. So a user, via this message sender app, which is a smart contract on the source chain, and they're going to send a cross chain message request to Seabridge and DSGN, which is the validator network, is going to validate that cross chain message and again issue all their signatures to the destination chain, which is going to deliver that message to the message receiver app on the destination chain. So yeah, even though this is like a huge diagram involving multiple steps, it's actually very straightforward and very easy to understand underneath.
00:32:27.090 - 00:32:43.640, Speaker B: The interesting thing is that we kind of combined the two because we think that most of the time when people want to send a message, they also want to kind of attach a phone.
00:33:00.000 - 00:33:10.260, Speaker A: Wait, Michael, can I interrupt you? I feel like your sound went off. Michael.
00:33:30.800 - 00:33:31.550, Speaker B: It.
00:33:35.200 - 00:34:04.216, Speaker A: Hello? Can you hear me okay? Yeah, it died. No, I don't know if you hit your thing and then it went on mute or something. I think the last thing I heard you say was when you send messages, you sometimes also want to send.
00:34:04.318 - 00:34:39.650, Speaker B: Oh yeah, not too bad, not too bad. I died for like. Okay, yeah. So, yeah, what we observe is like, people tend to send funds along with their message. For example, imagine you're building this cross chain lending app, right? You say the message could be, I want to collateralize my ether on this source chain and then receive, for example, USDC on the destination chain. And that's actually, I think if Avi had that kind of functionality, it would be great. Now I have to switch between back and forth, and it's not very.
00:34:39.650 - 00:35:56.380, Speaker B: So with this messaging with fund transfer workflow, you can actually send your ether along with this message and then DSGn the Sebridge is going to process all that request and send your USDC back along with the receipt of the message. So that's actually very cool. You can have message with fund transfer and the second flow is just a simpler version of that. Without fund transfer, it's just like a plain message that just states your intention, like what you're going to do with that message. And on the destination app it's going to process that message and do act accordingly. And that's just like a simpler version of the first workflow. We have kind of like a separate SDK for this interchange messaging framework and we have this separate doc site that walks through all the architecture and you can skip all that and you can just go into the developer guide and look at one of the examples.
00:35:56.380 - 00:36:57.440, Speaker B: So this is like what a message sending and receiving app contract will look like. And we also have an example, more complicated example with the sending funds along with your message. So we have example for both and we also have a very simple sample. So basically this is what we call like a batch transfer. So if you want to transfer to multiple receivers on destination chain, because Sebridge only kind of allows one recipient on destination chain for a regular cbridge transfer. But with this transfer app which leverages this interesting messaging framework, you can actually send to multiple recipients on the destination chain. So this is actually quite powerful.
00:36:57.440 - 00:38:29.468, Speaker B: And we also have this integration guide which kind of, it's more of like a complete walkthrough of entire process. I think it assumes just like a very basic knowledge of how to develop the app and kind of goes step by step how you're going to deploy the contracts and call our back end and to kind of complete the entire process. It's very comprehensive guide for integration. I think that's pretty much the slides I prepared for this. Obviously we have discord and there is a dedicated dev channel on our Discord server and you can click on that link and join our discord server and either me or our group of community developers will be able to be active on that server and answer any question you might have. I think that's pretty much it for my presentation and I'm happy to take any further questions, particularly like technical questions or any confusions or any concerns about our security model. I can take any questions.
00:38:29.554 - 00:38:44.210, Speaker A: Yeah, we have a few questions. I don't know if you can see these questions when I bring them on screen. How cost effective is the use of these tools, what possible way can you reduce cost of integration on existing web three platform?
00:38:44.820 - 00:39:38.980, Speaker B: Yeah, I think that's a good question. So obviously with cross chain apps, the entire cost model becomes a little bit more complicated than, for example, a single chain app, because for single chain, usually you pay the blockchain, you pay the gas fee, and that's it. And for crosschain, it's a little bit more complicated than that. For example, for a Sebru transfer, you still have to cover the gas cost that validators pay to relay your Transaction on the destination chain. For example, when you go from ethereum to linear, you still have to kind of pay that cost for, even though it's a very low, you still kind of have to recover that cost for transaction on linear. So that gets reflected whenever you do a cross chain. For example, USDC transfer, you get a little bit less amount.
00:39:38.980 - 00:40:27.616, Speaker B: For example, if you transfer 100 USDC, you only get say like 99.7 on decimation chain. And that difference, most of that goes into covering the gas costs. On linear, I wouldn't say it's cost effective just because we can't make things. We could cover some gas for users in the beginning, but as we ramp up the application, the users still have to pay that part of gas cost. And yeah, there are obviously ways for us to reduce the cost. For now, we use a multi sick way of validating transactions and there are potential savings.
00:40:27.616 - 00:41:20.740, Speaker B: If we say for switch to the threshold signatures or those more advanced, I guess, signature schemes, we might be able to reduce the gas cost when we validate a cross chain transaction. When we relay a cross chain transaction. So those are some possible future optimizations we might use. But for developers, I don't think it should incur any extra cost other than, I guess there's a little bit learning curve of knowing, learning how everything works. But I don't think there should be any additional cost for integrating with us. And I think we do have grant programs for people to integrate with our SDK. We can do it on a case by case basis and we might be able to issue grants.
00:41:20.740 - 00:41:23.956, Speaker B: Yes, that's my answer.
00:41:24.138 - 00:41:34.840, Speaker A: Okay, awesome. Yeah, there is another question, I think similar to it. I'm pretty sure you answered what he just asked, unless you had anything you wanted to add.
00:41:34.990 - 00:41:37.268, Speaker B: Yeah, I think that's already answered.
00:41:37.444 - 00:42:01.570, Speaker A: Right. Okay, cool. Yeah, I guess with regards to gas costs and cross chain transfers, kind of my question then is I know relayers are common, like sponsoring gas costs. So not necessarily on the Seabridge side, but on the application side. Right. Do you guys have that functionality built in. How would a developer go around about doing that if they wanted to, like integrating multiple tools together, building their own?
00:42:02.340 - 00:42:54.384, Speaker B: I think that's a great question. Let me just stop. Never mind. Here. So on both of these diagrams, I don't know how you highlight those, but there's like this component called executor, which is just the back end, like the server component, the demon process, what we call in tech terms, that kind of executes the cross chain transfer. So that is the one that actually pays the gas costs on destination chain. So yeah, if an app wants to, for example, do like a gas fee subsidy or any sort of that, they can just not charge the user for that part.
00:42:54.384 - 00:43:38.892, Speaker B: They pay their own gas, typically the destination, the D app would charge a little bit of fee. So we don't have that logic built in. It's completely up to the app developer to be able to assess. They're able to choose how much fee they're going to assess for any cross chain messaging. So yeah, I think it's definitely possible for a multichain D app to just charge whatever or even don't charge for users in the beginning. So that's also an option from a UX perspective. It's definitely great if the app can subsidize users in terms of gas costs.
00:43:38.892 - 00:43:52.390, Speaker B: And I think many projects, they have built some kind of incentivization with their tokens. I think that's definitely something, an option here, as I would say.
00:43:53.720 - 00:44:04.090, Speaker A: Okay, yeah, very cool. So I guess to wrap up, first off, are these slides public? Can I make them available? There's a lot of help.
00:44:06.860 - 00:44:12.684, Speaker B: All of those are public info and I can share the link offline with you.
00:44:12.722 - 00:44:25.570, Speaker A: Yeah, that would be super helpful. Any call to actions for the community. Last thoughts you wanted to add. Otherwise I will close with some various things to say.
00:44:26.100 - 00:44:52.884, Speaker B: Yeah, I would just say again, thank you for inviting us to this workshop and very happy to chat with you. Like great questions from both you and the audience. And we're eager to see developers, I guess, talking to those built on linear, built on setter. So just welcome and happy Hacking.
00:44:53.012 - 00:45:15.276, Speaker A: Yeah, awesome. So I wanted to close with a few things I noticed in the chat. I think people are always asking like, gas fees on linear are high. How does this deal with scalability? I think I want to say two things right. It's actually intentional. Right now we put a cap because we don't want to affect real developers. I believe in our NFT voyage, our very first week seller was one of our partners.
00:45:15.276 - 00:45:16.204, Speaker A: Right, Bridget?
00:45:16.332 - 00:45:18.210, Speaker B: It was a kind of hectic week.
00:45:22.980 - 00:45:52.248, Speaker A: Went to the gas fees on Gurley were insane. Right. Which is really problematic because real developers building use Gurley. So I think from that point we recognize that the purpose of the voyages are to highlight awesome partners like Seller. Right. Our job is to not cause disruption to the external ecosystem. Especially since this is all like Testnet.
00:45:52.248 - 00:46:23.220, Speaker A: Right? So yeah. If you want to learn more about why gas fees are high, we actually did talk about it on our community call last week. Let me see if I can find the link. It's at the end. So I want to say community, do not worry. When we get on like once the voyages end, everything should cool down. We'll remove those artificial caps.
00:46:23.220 - 00:47:00.000, Speaker A: So yeah, that's just on our YouTube channel. The other piece, and this is why I was highlighting hackathon projects and why Michael keeps saying happy hacking if you don't know. Consensus is hosting a virtual hackathon. So this is open to the public. It's called not another virtual hackathon. We have $115,000 in prizes and the hackathon lasts for six weeks. So we're definitely looking for more robust projects like projects that can.
00:47:00.000 - 00:47:34.664, Speaker A: We also want to give a lot of money too because I think there's a difference between a hackathon that lasts two days and then people just join teams and then they disappear. And they're cool because they exemplify new use cases but never really go past a hackathon. And I think that's why, number one, the prize pool is really big. Number two, there's a longer time period. Number three, actually. So there's a linear prize. Specifically, we are awarding bonus points for integrating developer tooling because just building an app on linear is very boring.
00:47:34.664 - 00:47:59.890, Speaker A: It's not powerful unless you have projects like seller. So definitely encourage you guys to register. Our opening ceremony is this Thursday, I think July 6. But you can register throughout the entire two months. But yeah, I think that's all I have to say. This was really insightful. Thank you super much.
00:47:59.890 - 00:48:04.150, Speaker A: Are you going to be in Paris at all?
00:48:06.680 - 00:48:53.520, Speaker B: I'm not in Paris personally, but I think our CT is actually in Paris for ECC and he would be given a talk. But that's more on the other aspect of our project, which some people might know. We are also expanding to the area of ZK, which linear is obviously expert in. And we are also expanding into exploring what we can do within the ZK space. And we going to talk about our new effort called Brevis Network, which is a ZK based data attestation. So it's less about crosschain. But we do have already, like, a demo of a crosschain bridge built with ZK based, like, client verification.
00:48:53.520 - 00:49:30.688, Speaker B: So the one the sea bridge I talked about was more, for example, validators voting to verify a cross chain transaction. But for our new ZK bridge, it's more of a tech demo than actual product. But that thing is based on a snark based lite client verification. So technique, it's more we call trustless or less trust based. You don't have to trust any third party. You can always believe in math. The math does the magic verification for you.
00:49:30.688 - 00:49:38.324, Speaker B: Yeah. So that is the thing we're going to be talking about at ECC, and I think our CTO is going to give a talk on that.
00:49:38.522 - 00:49:50.432, Speaker A: Okay. Yeah. Very cool. Yeah. With regards to Paris, definitely. Linea will also be there. We have two events, so we have a happy hour we're hosting just to kind of celebrate linear.
00:49:50.432 - 00:50:05.836, Speaker A: And then we have another piece called Linear unconference, which is kind of more of like a developer focused event, but also for the community. I don't know. You tell me if this is crazy. I'm organizing an unconference of. Not panels. Maybe it's, like, too kitschy, but I.
00:50:05.858 - 00:50:08.780, Speaker B: Think the cats are right. You have, like, unconference knock.
00:50:09.360 - 00:50:27.004, Speaker A: Yeah. Conference and panel. I think my vibe is like, conferences are really cool. You get to meet super smart people like you. Right. But it ends up being like, you sit and just listen to a lot of people. So I think when I think, like, community event vibes, I was going for a not panel.
00:50:27.004 - 00:50:49.512, Speaker A: So, yeah, we'll still have subject matter experts there, but I think the idea is more audience participation, them adding their thoughts, keeping it, like, no stage. We're all on the same level. Yeah. And I think there's a part of it, too. So those will both be hosted on July 19. The registration links are up. I don't have the links for them.
00:50:49.512 - 00:51:17.564, Speaker A: I'll post them on Twitter later. But for the unconference, there's going to be 2 hours of vc office hours. So we have vcs coming in specifically for the linear ecosystem to talk about your projects. Talk about what cool things, what kind of cool cross chain, what one click, multi chain dapps you're building, and various things. So keep an eye out for that. I think that's the end of my announcements. Thank you so much, Michael, for joining.
00:51:17.564 - 00:51:28.164, Speaker A: This was super. Yeah, yeah. Awesome. So have a good rest of your day. I don't know if it's like nighttime for you or where you're at.
00:51:28.202 - 00:51:29.068, Speaker B: Daytime.
00:51:29.264 - 00:51:30.552, Speaker A: Oh, it's daytime. Okay.
00:51:30.606 - 00:51:31.304, Speaker B: Yeah.
00:51:31.502 - 00:51:43.688, Speaker A: Cool. Same. I don't know, because sometimes I talk to people who are in Australia, Asia, and I'm just like, ah, yeah, thanks for joining the decentralized world. Yeah.
00:51:43.854 - 00:51:46.008, Speaker B: We still have to work with time, I guess.
00:51:46.174 - 00:51:55.116, Speaker A: Yeah. Okay, cool. Well, thanks again. I'm going to end the stream. Goodbye, community. Goodbye, Michael.
00:51:55.308 - 00:51:55.984, Speaker B: Thanks again.
00:51:56.022 - 00:51:56.430, Speaker A: This was fun.
