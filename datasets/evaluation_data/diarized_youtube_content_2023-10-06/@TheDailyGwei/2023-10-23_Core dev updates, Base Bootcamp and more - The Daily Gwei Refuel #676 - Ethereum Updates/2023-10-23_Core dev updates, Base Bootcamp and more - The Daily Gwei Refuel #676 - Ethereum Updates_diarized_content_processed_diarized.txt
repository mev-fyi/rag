00:00:00.240 - 00:00:24.822, Speaker A: Hello, everyone. Welcome to another episode of the Daily Way refuel, where I recap the latest news in the Ethereum ecosystem. I'm your host, and this is the 23 October 2023. All right, everyone, let's get into it. So I did go over this last week, but just wanted to give you an update on this. The Invesco Galaxy spot ETH ETF was kind of put forward. There was an application put forward last week and James gave an update about this shortly after that that I didn't cover because it happened on the weekend.
00:00:24.822 - 00:01:09.590, Speaker A: He said that the final deadline is unknown for this, but likely to be somewhere around the first week of July for the SEC to approve this. Now, you know, there's no guarantee they're going to approve it by then, of course. And I discussed this last week about the chances of this happening and stuff like that and how the BTC spot ETF still needs to get approved. But I think pretty much like everyone in crypto at this point, I think, is convinced that it's getting approved, like sometime in the next 80 days, I think is until the Gen 10th deadline for the Ark ETF. And, you know, someone in the deadly gray discord channel actually mentioned this as well. And I don't know if I mentioned this last, on last week's episode, but the, there is a holiday period, right, where the US government differently kind of bodies run on skeleton crews and things like that during the holiday period. And I think that goes until January 15.
00:01:09.590 - 00:01:57.606, Speaker A: So I'm not sure if that impacts the SEC because if it does, it means the SEC would have to approve this or deny, I guess, this arC ETF way before the January 10 deadline. Because if the holiday period starts sometime in like mid December or something like that, mid to late December, they would probably have to approve it around there, so. Or deny it. I mean, I'm saying approved because I assume they're going to approve it. But it's going to be kind of funny to see what happens around that. Like, because I don't, I don't know if there's like a deferral that happens because maybe one of you guys know where, if the date, if the deadline runs to where into a holiday period, for example, does it get automatically extended because of that? I'm not sure. But generally, I mean, yeah, from what I've seen, people think either the end of this year or January next year is when, when it's kind of getting approved.
00:01:57.606 - 00:02:37.508, Speaker A: And, and as I said before, they probably all going to be approved at once. Yeah. And then I guess like the, the narrative starts around when ETH is going to get its own spot ETF approved because there is already, I believe I covered this last week, but in James's tweet here, there's already five issuers so far they've put in an application. But really it's going to probably take Blackrock to, to really get people excited about it. And I don't know, I can't imagine Blackrock not already having thought about this and going to make their move probably sometime in the next few months around this. But as I mentioned last week, I don't think they'd want to do it unless they had relative certainty that it would get approved because obviously it is a different asset to BTC. There are different considerations here.
00:02:37.508 - 00:03:18.086, Speaker A: And it really begs the question about what the ETH ETF looks like, because obviously with ETH you get, you can get a native yield through staking. So are they going to have eight staked ETF's as well as just normal eat spot ETF's? Because the spot ETF will technically be yielding less, I guess, like price wise, I mean, the price would be the same, like you get, still get exposure to the same ethics. But returns wise, technically it'd be yielding less than the staked ETH. So does every ETH spot etf just become a staked ETH ETF? I don't know. I don't think so because there's different considerations, different risks, stuff like that. And I don't even know if the legal apparatus is set up in the ETF world to allow for this to happen. So we're going to have to see how that all shakes out there.
00:03:18.086 - 00:03:58.758, Speaker A: But that might be another reason why these issuers such as Blackrock are waiting as well, just to see some clarity there. But yeah, we're going to have to see, it's probably going to happen sometime next year at this point. But yeah, figured I'd just update you guys on the fact that the, the deadline here for this, for invest goes, seems to be the final week, sorry, the first week of July. All right, we have a new all core dev update from Christine Kim today, talking about all things, I guess, like all core devs, of course, Devnet Ten was going to be launched, I think, last week on Friday. And I think I discussed this, but apparently it's, it's been pushed to today the 23rd. So Monday the 23 October. So we can expect to see Devnet ten go live today.
00:03:58.758 - 00:04:25.016, Speaker A: So that's den kun devnet ten. And also there was a bit of coverage from the core devs around Kijinder's tweet that we, that I covered, I think last week or the week before about the propagation of blocks containing blob style transactions. And there's a few other things in this write up as well. And you can check out the full write up. As usual, Christine has it linked here. I'll link that in the YouTube description below. But yeah, I think as I've said before, Devnet tens the final devnet before they start looking at Testnet.
00:04:25.016 - 00:04:50.248, Speaker A: So I guess like the next all core devs call, they're probably going to start scheduling, or at least kind of talking about scheduling a testnet, which, which will be girly first for a fork. And as I said before, that was targeting kind of like, I guess like mid, sorry, early to mid November for that. That's probably still on target there. And then after that, the other test nets, as I've discussed before, I'm not going to rehash that one there as well. But yeah, we're getting close, guys. Like, it's only a few months away now. I mean, not even probably.
00:04:50.248 - 00:05:59.120, Speaker A: We could probably say dank Kooten January. I'm hopeful at this point, especially if the test nets run well and nothing goes wrong there. It doesn't seem like there's any major blockers in place at this point in time. All right, speaking of core dev related things, there was this interesting little tweet thread from Peter, the team lead at Goetherium or Geth today, where he spoke about how Nethermind and Besu have stopped storing historical Ethereum data by default and apparently want to standardize this as the kind of like the way to do it, right? Instead of serving up historical data by default, you would by default just, you know, stop storing it and stop kind of serving it to the network here. Now, Peter's pretty and admitted pretty and kind of like understandably pissed about this or pissed off about this because what ends up happening is that Nethermine and base who are just leeching off of Geth because Geth by default still serves this data and still syncs this data. And you can actually see here what this looks like. He says allowing users to not store historical chains is a very disingenuous marketing trick because users can switch to, you know, another client because it's smaller, they can still access the old data because Geth serves it and users and Geth devs are none the wiser.
00:05:59.120 - 00:06:48.016, Speaker A: And then, yeah, I mean, you can read Peter's tweets, I'll link them in the YouTube description below. But he goes on a little bit colorfully here, kind of, kind of saying that he's, you know, he's really pissed off at this and this is not the way to do things. And I don't necessarily disagree with him here, but I think this opens up the broader discussion that's been had in the ethereum ecosystem for quite a while now around how far back in history are we expecting clients to store, right. Or to serve, essentially? Because at some point it becomes redundant, like there, like for most people out there, there's no need for them to know what happened, like, let's just say a year ago or two years ago on the network. Right. As long as you can sync the network and not have to have access to the historical data at that point in time. As long as you can sync the network and have a secure full node that's synced and all well and good.
00:06:48.016 - 00:07:27.072, Speaker A: The actual historical data only matters for archival purposes or for, I guess, like tax related purposes. But as I said, this opens up a broader discussion around storing historical data, not just at layer one but at L2, and how different kind of services can pop up around this as well. Like there can be services that literally just run clients that store this data and then serve this data to the network or to customers and stuff like that. And we already have things like that in place. You know, for example, Etherscan does it. They, they obviously provide a lot of historical data for people to, to, to look at on their block explorer. You know, there are other block explorers that, I mean, block explorers are the perfect example here of the services that do this.
00:07:27.072 - 00:08:18.144, Speaker A: But if you want to kind of, I guess, like do an analogy here to Web two and what it looks like in Web two. For example, in Australia, I believe it's a legal requirement for banks to only have to store the data that they have of your transaction history for seven years because that's as long as I believe the tax office has, in the normal case, to look back and go after you or kind of investigate. Right. Our past seven years, they can't investigate that data because it's considered just like too old, too long in the past. And I, and obviously in different jurisdictions, it's going to be different there. But I'm just speaking from the australian perspective here. So for banks, it's like, well, if we don't install this past seven years and our users aren't even requesting this because they don't need it unless they're getting audited by the tax office, for example, which is in that seven year period, or they're applying for, you know, for kind of some mortgage, which usually doesn't even take that.
00:08:18.144 - 00:08:58.484, Speaker A: Like a mortgage application will take the last six months or something like that. And I mean, it can go up to two years. But you see, my point here is that when it comes to storing historical data, especially when it comes to, like, financial data, it depends on the entity. It depends if it's a company or an individual, it depends on what they actually need the data for and when they'll need it and how often they'll need it. It depends on the cost to store it, of course. Like, for the banks, it's a cost thing for them. Like, they don't want to have to store this data on all of their customers past a certain point and then serve it as well, because you'll notice that, like, depending on the data, for example, in social media websites, they'll let you access all of your data going back to basically day one.
00:08:58.484 - 00:09:32.668, Speaker A: But it's not instant. They actually have to dig that out, because the way it works in the backend is that they basically have hot buckets of data and cold buckets of data. And the cold buckets are things that are not always online, not always accessible, because obviously, having them always online or always accessible costs money. So in order to preserve that, they basically have these things offline and they only access them when users request it to be accessed. And they have this whole pipeline in the background that handles this. But users are not requesting access to their data all the time, right? They're probably doing it once in a blue moon, if ever. I think most users probably wouldn't even request access to it.
00:09:32.668 - 00:10:03.728, Speaker A: I mean, I have, before with Facebook, I've requested access to, I think I created my Facebook account in like, 2008 or something like that. So it's a lot of data to go back, but I requested it because I wanted to see if they actually had everything. And they did. They had absolutely everything. They had all of my messages that I had sent from day one, that all of my Facebook statuses, all of my photos, absolutely everything. And the social media sites will store this for one reason or another, I think. Like, they like doing it for data mining purposes, but also it's just kind of something that they probably just don't want to delete.
00:10:03.728 - 00:11:01.026, Speaker A: And if it costs them basically nothing to store there, then they do that. But it just depends on the service, right, when it comes to and bringing this all back to how blockchains handle this and how Ethereum handles this. Well, I mean, if we want people to run full nodes, then we can't make the full nodes be terabytes in size, right? Because then it would just kind of like price people out of running them. Because if we want to keep Ethereum as decentralized and distributed as possible, then we need to keep the blockchain size manageable, right? And I know that storage space is always getting cheaper over time, but the thing is, is that the blockchain is a perpetually growing thing, right? It was always going to get bigger. Unless you prune things like the actual chain, non pruned for, for anything out there will always be get bigger, right? It will always. I think that an archive node for Ethereum, completely unpruned, is probably up at like the 20 terabyte level. And if you look at other chains out there that are, you know, are doing kind of like not worried about constraining how much data is stored at layer one.
00:11:01.026 - 00:11:43.386, Speaker A: Like for example, Solana. I mean, if you take the non pruned Solana chain, I'm sure it would be like thousands of terabytes, at least at this point in time. Probably more than that. But as I said, like it just depends on what, who wants access to that data? What, you know, do you actually need access to that data? Do, what do you need to actually look at? And this, and this goes back to what Peter was saying here about the fact that Geth is still serving this, but the other clients are. So the other clients are basically piggybacking off geth and basically cheating in a sense, and using it as a marketing trick. So, yeah, I mean, I totally, I kind of sympathize with his argument here. But as I said, it falls back to discussion around like how long are we actually going to store the data for? And there are AIP's around this as well.
00:11:43.386 - 00:12:26.600, Speaker A: The most famous one is AIP quadruple, for which you can actually see him. I'm going to bring it up here because it was linked in the daily grade discord channel. So this is the IP here, ERP quadruple four, which is a pretty good ERP number, right. But this talks about bounding historical data in execution clients. So basically prune historical data in clients older than one year. So if this EIP was implemented, from my understanding, what would happen is that all execution layer clients, no matter what they do on their, on the client level, but all of them will by default prune historical data that is older than one year. So that's, you know, that's one year, right? That's not like seven years, that's one year where it will prune that historical data and then it won't, it won't keep anything older than one year here.
00:12:26.600 - 00:12:52.292, Speaker A: And this is basically the, I guess, one of the official eips around historical data and one of the ones that is most kind of considered for inclusion. So. So yeah, but anyway, you can go read Peter's tweet thread and the replies to it to get a better idea here. But this is an open discussion that's been going on for quite a while now. Guys. This is not something new. This is, I mean, this EIP alone, it was created in on, if I'm reading this correctly, it's in 2021.
00:12:52.292 - 00:13:11.550, Speaker A: But I don't know if this is american date format or Australia or, you know, non american date format. So it's either the 2 November 2021 or the 11 February 2021. I don't know, maybe I'm reading that wrong there. But regardless, it was talked about before then. I mean, if you go to the discussion link here on Ethereum magicians. So it was November 2021. Yep.
00:13:11.550 - 00:13:43.842, Speaker A: So, and, but even before then, I believe there were discussions around this going far back as like 2017. I remember this being talked about. So definitely not something new, but definitely something that is going to be implemented into the network at some point. I mean, it's already implemented at the client level, but like this is more at the network level because obviously it's an AIP here. But yeah. Anyway, moving on from that one just to a more positive tweet that Peter put out about clients over the weekend where he said, been thinking about multi client ness of Ethereum. For me, the most awesome is that each client mostly is written in a different language.
00:13:43.842 - 00:14:11.414, Speaker A: If someone's interested in contributing, there's probably a project they can get into without learning a new language. So that, and that equals a very nice talent pool. So for those of you who don't know, it's pretty self explanatory, but geth is written in the go programming language. You know, Nethermind is written in Java. I believe I may be getting that wrong. I don't know, off the top of my head, Reth the new client is written in rust, I think Aragon, because it's a fork of geth, is still written in go. Besu, I think is written in, I think Beisu's Java.
00:14:11.414 - 00:14:23.416, Speaker A: One of them is Java. I don't remember which one. Which one is written in that. But as Peter says here, they're written in different languages. Same is true. For the consensus layer clients as well, obviously. But because of that, it's a very nice talent pool.
00:14:23.416 - 00:15:07.624, Speaker A: You get pool, you get talent from different areas and different kind of like schools of expertise from people who are basically developing maybe in go, you know, they go, they can work on geth or they can work on Aragon, in Russ, they can work on Reth, in Netherland or whatever. They can work in, I believe it's Java or c sharp or anything. I mean, it's listed here, some of the languages. But. But yeah, I think it's really cool that the client diversification leads to developer diversification, which leads to a wider talent pool for a theorem to kind of like pull out of four, four core dev, because at the end of the day, there's only going to be so many core devs ever like because core dev is very specialized field. So the more, I guess. Sorry, the bigger talent pool that we can tap into, the better it is overall, I believe.
00:15:07.624 - 00:15:38.828, Speaker A: All right, moving on to some news out of the polygon ecosystem. So you can see here, this is a long tweet from Harry Rook, who works in governance at Polygon Polygon here, where he recapped the recent Polygon governance call. Now, normally I wouldn't cover governance calls for projects, but the reason I'm covering this one is because this is all about the poll token. So I've talked to you guys before about how the Matic token is becoming the poll token. Well, it's actually, the poll token is launching a lot earlier than I thought it was. So it's launching on October 25, which is this week. It's like two days from now.
00:15:38.828 - 00:16:08.098, Speaker A: So they're actually going to launch this onto mainnet this week. There is not going to be a mandatory conversion or anything like that. As I said before, the, I guess, like, timeline to convert your Matic tokens into poll tokens is going to be quite long. And I think exchanges will probably just do this automatically if you're storing your matic on exchanges or anything like that. But with this, this kind of like upgrade is like one of the first upgrades of Polygon 2.0. Right. Which is that whole kind of whole roadmap that they're doing there.
00:16:08.098 - 00:16:36.776, Speaker A: But yeah, I think I said once that I believe that this would be happening in Q one of next year, but it seems to be happening a lot, happening a lot earlier than that. But right now, I don't think there's any action points for people. I think that, as I said, like the Matic and Pol tokens will exist side by side. They will have the same price. They're not going to be different in price because they're for all intents and purposes the exact same asset. Right. But eventually everyone will have to migrate Matic to poll and there'll be like a migration front end and contract and everything like that.
00:16:36.776 - 00:17:17.388, Speaker A: So it'll all be done there in the background for you. And as I said, usually with these token kind of conversions, if you're storing it on a centralized exchange, they'll just do it for you. They'll basically just issue you the kind of, they'll basically do the transaction on chain in the background on their own and then just issue it, issue you the new tokens, the exact same balance that you have on their front end there. But yeah, you can go check out the full tweet. I'll link it in the YouTube description below for you to do so. All right, so as you guys know, with optimistic roll ups, there is that seven day withdrawal window. And now I have said in the past and discussed this in the past about how this seven day withdrawal window, it's not arbitrary, but it's not a set in stone thing.
00:17:17.388 - 00:17:45.582, Speaker A: It was decided upon based on a number of different factors. One of them, and I guess the biggest factor, the main factor is being safety. You know, how long do we give for people to submit fraud proofs? And is seven days long enough? Well, seven days is probably more than enough. So let's, let's make it seven days. Now that kind of became the, the industry standard, I guess. But there's only really two major optimistic roll up, I guess, like platforms right now. There's the albatrum platform, obviously, and then there's the op stack, which includes a bunch of other chains falling off of that.
00:17:45.582 - 00:18:14.662, Speaker A: But if you're talking about the actual code bases, it's really arbitrum in the op stack and I guess like some smaller ones out there. But in this new post from Masa, who works at off chain labs as an integration engineer, it's titled fast and furious withdrawals from optimistic rollups, which covers three different ways that they're thinking about doing faster withdrawals. On Arbitrum's optimistic rollout print. The first way is atomic swaps. So swap your pending exits for ETH on layer one. Tradable exits. Trade your exits directly on l one before they're finalized and hedged.
00:18:14.662 - 00:19:06.178, Speaker A: Exit exits combine tradable exits with prediction markets where l one contracts can accept withdrawn tokens before the dispute period ends. So these things sound a little bit similar to what we already have within bridging today, where you can like bridge a number of these different protocols like hop and connect and across where essentially the risk, or I guess the withdrawal time risk is, is moved to the LP's, especially when it's like hop, you know, that people put up the LP and then the LP just represents the asset in the contract and it's not withdrawn from the contract. There's not really any need to because the IOU is, is collateralized by that essentially right in the LP pool here. So yeah, this is very similar to that. But I think that there is trying to be solutions that not just economic but also cryptographic, where essentially you get the stronger cryptographic guarantees without relying solely on economic guarantees. So if you want to read the paper, you can. I'll link it in the YouTube description below.
00:19:06.178 - 00:19:19.586, Speaker A: It is quite dense and technical. I believe it's not that long. It's about 17 pages, probably less than that if you get rid of all the citations at the bottom here. No, yeah, I mean, there's not that many references here. So. Yeah, about 17. But yeah, you can go give this a read.
00:19:19.586 - 00:20:07.052, Speaker A: I'll link it in the YouTube description below. But as I've said in the past, this seven day withdrawal thing, I mean, it's already a non issue for most users, or pretty much like all users, but it can be brought down at the protocol level and it can be brought down in theory. I've seen some work out of, I believe maybe Terrence has posted about this before, but I've seen some work that they could actually potentially bring it down to the same block. So a twelve, you know, twelve second withdrawal time, same ethereum block here, but that's probably a little bit further away or maybe within the finality with theorem, like a twelve minute or whatever it is, 30 minutes kind of finality period there. But yeah, anyway, you can go give this paper a read. I'll link it in the YouTube description below for you to do so. All right, so Base has introduced something called Base Bootcamp, which is an eight week program designed to turn experienced developers into smart contract developers.
00:20:07.052 - 00:20:42.356, Speaker A: Base Bootcamp will make learning interactive and collaborative with support from experienced engineers and dedicated mentors. They continue with less than 30,000 on chain developers compared to 30 million software devs. We need to empower more to build on. Chain Base Bootcamp offers dedicated mentorship, access to base engineers, a gated discord channel and learning materials developed by base. So you can apply to this, I think applications close October 27. You have a few days to apply to this, if you are a software developer out there that wants to learn all about smart contract development, if you haven't yet, of course, and this is an eight week course, as I mentioned. But this is pretty, this is pretty cool.
00:20:42.356 - 00:21:14.532, Speaker A: Like 30,000 on chain developers compared to 30 million software developers. That's a huge pool of developers that aren't in crypto yet. Not I guess, like an on chain developer yet. Right. Aren't working with languages like solidity and Cairo and Noir, that's from, from aztec and other languages out there as well that are being built within crypto. But also at the same time, there are a lot of initiatives bringing people into crypto with languages that they already know, obviously arbitrary is doing it with stylists. They're trying to make it so you can code up smart contracts in like c and things like that.
00:21:14.532 - 00:21:52.650, Speaker A: So eventually it's going to be to the point where we can bring those 30 million software developers in without having to retool them in the language. But obviously there's a lot of crypto specific things. There's a lot of on chain specific things that you have to consider. There's different ways of dealing with things, different ways of dealing with synchrony and asynchrony within a crypto context, within on chain context. And I guess that's what something like base bootcamp aims to kind of bridge the gap between, it's not just getting these people to learn a new programming language like solidity, but also getting them to learn how to actually develop on chain. So if this sounds like something that's interesting to you, you can go check this out. I'll link it in the YouTube description below.
00:21:52.650 - 00:22:38.714, Speaker A: As I said, applications close on October 27, so you can go apply today. All right. I introduced this retro PGF community account, I believe last week or the week before on the refuel, but they've introduced something called the retro PGF Community newsletter. So this is a place for you to dive into a vibrant mix of community updates, engaging educational content and expiring project showcases all from the optimism kind of ecosystem here. So if you're interested in following along with the optimism ecosystem and all the retroactive public goods funding that they're doing and all the projects that they're funding as well, should go check out this newsletter. I'll link it in the YouTube description below for you to subscribe to. And I just wanted to shout it out because I figured it was another interesting newsletter for you guys to check out.
00:22:38.714 - 00:23:31.324, Speaker A: All right, finally here I have a tweet that I put out over the weekend that I wanted to rant a little bit about today on the refuel. So I said, it frustrates me when people say that ethereums only care about ETH price and not, and don't care about building. If this were the case, I wouldn't have been able to do 300 plus hours worth of daily refuel episodes and counting, where 99% of the content has nothing to do with the price of ETH. So if I actually count all the content that I've done on the refuel, on the drive thru episodes, on all the into the Ether podcast I've done, on all the bankless podcasts I've done as well, like whether it's filling in for the roll up or live streams and everything else in between, it's probably easily over 500 hours, I would, I would have to say of, of content, um, probably more, you know, probably more than that. Maybe 6700 hours or something like that. Not to mention the newsletter that I haven't written in a while, admittedly. Um, but I used to write right it there.
00:23:31.324 - 00:24:01.682, Speaker A: Not to mention all the stuff I've done on Twitter. Right? So, like what, what puzzles me is that, as I said, 99% of that content had nothing to do with the price of ETH. This, and this isn't bitcoin, where the most interesting thing to talk about and focus on is the price of BTC. It. Ethereum is so much more expressive than that. So I don't understand why people, or how people can say that ethereums only care about the price of ETH. And maybe I should give some context here around why people say this and whether they're saying this as a genuine thing, or maybe they're just trying to troll.
00:24:01.682 - 00:24:53.096, Speaker A: I think it's rather irrelevant. But the reason why I believe they say this is because what they see is they see memes, like ultrasound money. They see people kind of talking about the ETH burn and Mev burn, or, sorry, the AIP 1559 burn and Mev Burn. And they see Justin Drake on Bankless podcast talking about these sorts of stuff and talking about value accrual for ETH. But the point is, is that there's just one kind of aspect of Ethereum as an ecosystem, right? And that's been talked about for years. And it's not necessarily about, uh, trying to pump ETH up as much as possible and to make everyone rich. What it's about is making sure that ETH can accrue value so the network can be secure, so that people can build on Ethereum with confidence and not just people building applications on Ethereum layer one, or users on Ethereum layer one, but L2 is building on a theorem and having confidence as a secure settlement layer.
00:24:53.096 - 00:26:16.586, Speaker A: Right? So when you kind of look at what, look at that kind of holistically, it, as I said, it's not about trying to pump ETH up to, to get rich here. And I hate when people kind of imply that. Now the other kind of side of this is the people spreading this message in a disingenuous way because they're doing it to spread, to spread, I guess, like, or to promote their own things, whether that's another layer one chain out there, or whether that's to kind of fight Ethereum because they're into bitcoin or anything like that. And they, and there are certain communities out there that do this because they say, well, we're, the chain that people build on Ethereum is just a chain that tries to make, tries to gouge users with high gas fees to pump ETH in order to make everyone rich, which couldn't be further from the truth, because if that was, if that was true, ethereum layer one wouldn't be being constructed in order to essentially help L2s scale and bring their fees down as much as possible, which over, at least over the short to medium term, will more than likely reduce the amount of fees that are paid on layer one ethereum, until the, I guess, like activity picks up on L2s and it flows back down to layer one, which would in turn decrease the burn of ETH, which would in turn decrease the value capture of ETH to an extent, right? So if all we cared about was accruing as much value as possible to ETH, we wouldn't be doing that, right, as a community. So it doesn't even make sense when people talk about this. But of course they do it for different reasons. They, they want to promote their own thing and they want to fight Ethereum in some way.
00:26:16.586 - 00:26:58.196, Speaker A: And it's just utterly bizarre to me because we have these L2s today that are incredibly cheap to use compared to layer one, and they're only getting cheaper over time. As I said post 48 44, you can expect some of these L2s to have sub $0.01 transaction fees. And as I said as well, because the fee market isn't shared, the 48 44 blob style transaction fee market is not shared with the normal layer one fee market. There's not going to be spikes. You know, layer one fees can be hundred way for everything except blobs and blob fees could still be like one way, right? So you're not gonna see a spike. So that means that the, the user experience on L2 is going to be consistent, it's going to be cheap, and there's plenty of stuff on there for people to do now.
00:26:58.196 - 00:27:40.422, Speaker A: There's plenty of liquidity on there as plenty of ways to bridge in and out. There's interoperability, there's exchange integrations. So, yeah, I mean, I just don't understand where people say that there's, there's no building going on, and Ethereum is not about building, it's just about pumping ETH. I don't know where this kind of bad narrative kind of came from, but yeah, it just frustrates me seeing that, because as I said in the tweet as well, there is absolutely no way I would have been able to do the amount of content I've done if all I was doing was talking about the price of ETH. Could you imagine that? Like, you don't probably don't have to imagine that. What you can do is you can go look at the technical analysis youtubers who only talk about the price of assets and see how repetitive their content is. It's the exact same thing pretty much every day.
00:27:40.422 - 00:28:22.974, Speaker A: Because the, from day to day, if they're doing like daily content, the price doesn't change that much, the outlook doesn't change that much, the lines on their charts don't change that much, and they repeat themselves over and over and over again. And it's all about just talking about the price, right? There is absolutely no way that I personally would be able to do that. Just from a mental capacity perspective, I'd be bored out of my brain doing that. But at the same time, like, the episodes of the refuel wouldn't be 30 minutes long, that'd be like five minutes long. Right. Um, so when you look at that and look at all the stuff that I talk about on the refuel, 99% of it is all about the project stuff. Yes, I sometimes talk about the price of ETH and I talk about, I have bullish rants from time to time, but the majority of content is not that.
00:28:22.974 - 00:28:53.056, Speaker A: And the reason why I use the deli Gwei as an example is because I believe the Daily Gwei is really the, um, the. The content that covers the Ethereum building ecosystem the most out of everything. I mean, bankless covers a lot of stuff too, but they focus on other ecosystems as well, not just Ethereum and there's a few other out there. But in terms of the amount of content that I put out about Ethereum, every, you know, every day almost, I know that there are some daily gray rug fuels that I do from, from time to time, but for the most part, I'm pretty good. Right. Um, and that, in that content, just talking about the, the building going on. Yeah.
00:28:53.056 - 00:29:23.736, Speaker A: It just, it's utterly bizarre to me that people can say that ethereums only care about the price of ETH. Maybe if you're just on crypto Twitter and you followed people who only talk about the price of ETH, maybe that's what you get. But hey, all you have to do is listen to the refuel for even a week, right? And you get five episodes for 30 minutes each of me just talking about the fundamentals of Ethereum and the building going on within the Ethereum ecosystem. But anyway, that's enough ranting there from me on that topic. On that note, that's going to be it for today, so thank everyone for listening and watching. Be sure to subscribe to the channel. If you haven't yet, give it a thumbs up.
00:29:23.736 - 00:29:27.704, Speaker A: Subscribe to the newsletter, join the Discord Channel, and I'll catch you all tomorrow. Thanks, everyone.
