00:00:01.370 - 00:00:31.640, Speaker A: Hey guys, how's it going? It's blockar here and I'm with Antonio Vigano and he's here because he has some alpha for us. There's something coming and we thought that it's good to record this video and have it presented for you guys. And I don't know, let's see. For those of you that don't know, Antonio, maybe what? Welcome first. And what if you tell us a bit of your history and of yourself.
00:00:33.130 - 00:01:04.446, Speaker B: Yeah. So, hi everyone. Thanks for the opportunity. Bakar. Just a quick intro about myself. I been working in software development for the past ten years and I started working crypto in 2017, but with solidity in 2021, I had my own web3 gaming company. But then last year I decided to leave because I wanted something more technically challenging.
00:01:04.446 - 00:01:55.058, Speaker B: So that's when I landed in security. And I've been doing that full time since the beginning of this year and more specifically with fuss testing. So this all happened because the protocol invited me to improve their echidna tests. So I started studying, I reviewed a bunch of great resources from turfbeats, read a bunch of blog posts, videos, and then I started to specialize on that. And I've been working with environment testing with different clients throughout the year. That's why I had the idea of starting to post more about it and to share the knowledge while I'm learning it. And that's the whole thing about this new project.
00:01:55.058 - 00:01:58.174, Speaker B: So I'll be launching.
00:01:58.222 - 00:02:00.260, Speaker A: Tell us more about it. Tell us more.
00:02:00.710 - 00:02:51.620, Speaker B: Yeah, so the idea is that I'll be launching like a blog and a newsletter to talk about fuz testing and related technologies. So it'll be called all things fuzzy. And yeah, the ideas that we'll post about fuzz testing, environment testing, property based testing, symbolic testing and formal verification. So I think these strategies to help with security, they are very interconnected and usually protocols. They don't know how to start or maybe it's too complex or maybe they don't know why this is useful. So we wanted to talk more about that and kind of spread the word. So that's the idea.
00:02:51.620 - 00:02:58.354, Speaker B: We will share the URL, the newsletter, the blog so that you can learn more about that.
00:02:58.552 - 00:03:06.760, Speaker A: Yeah. And who's going to be involved? Is it going to be you publishing those articles or how is it going to look?
00:03:07.470 - 00:04:01.660, Speaker B: Yeah, so the idea is that I will be kind of the editor of this newsletter and blog and I'll invite security researchers and kind of experts to share what they know about the subject. And sometimes I have some ideas of things that I would like to learn, to learn and to know more. So I'll try to invite people that can talk about those subjects in depth. And yeah, the idea is that this will be focused on these subjects, but there will be different writers. And the first writer would be blockaros. He has a very good kind of introduction to. So I think this will help protocols that are still maybe unsure how to start, maybe they don't know how to work with it.
00:04:01.660 - 00:04:05.740, Speaker B: And later we'll have other types of content as well.
00:04:06.750 - 00:04:50.986, Speaker A: Yeah, it's nice also to be involved because fussing is super, well, not only interesting but useful. And as I mentioned, I've sweared a few times before that I would get deep into that and I would try to learn as much as possible. But this is the perfect excuse to be, well, to force myself to learn. It's a good collaboration with you for sure. And you've mentioned that it's going to be fussing and formal verification, so on. But what kind of content? What is it going to be about? Because it's very general, right? Those terms we know, but how?
00:04:51.088 - 00:06:20.040, Speaker B: Yeah, so the idea is that there will be different kind of levels of complexity so that everybody can get, can gain out of it. So there will be introductory posts, maybe some more advanced stuff. Maybe we'll talk about some configuration parameters that you can adjust and can make the fuzzing step or run faster. I'm very also interested in benchmarks. So maybe trying different fuzzers, maybe comparing different fuzzers, maybe comparing different tools, especially comparing in terms of kind of performance, but also time that you need to implement these tools so that kind of protocols can have an informed decision of how to implement, what to implement, what are the benefits? And maybe also some case studies. That's also something that I have posted myself, one case study that we worked with Badger Dao on the EBTC project. So I think these are nice views of real life applications of like there will be a bit of everything and different levels of complexity so that both a beginner and an expert can enjoy the content.
00:06:21.450 - 00:07:02.180, Speaker A: Okay, nice. I'm wondering, how often are you actually going to post because you chose well, not very specific, but you want to focus on something, right? Fasting in general and all these variants. So is there enough content, let's say, to keep it going for long, or is this something that you're going to be posting or you have material for every day, which obviously it's not possible, but I'm wondering maybe you can share how often it's a plan to share.
00:07:02.550 - 00:07:57.350, Speaker B: So the idea is that this will be like a weekly newsletter and weekly posts, but that doesn't mean that I would be posting every week. And the reason is exactly that it takes time to create kind of meaningful content. So that's why I wanted to invite other security researchers to post about different subjects. And I think in terms of ideas of things that I wanted to explore, the list is never ending. So yeah, there is always something you can try and it's a very iterative process so you can get different results or different ways to work with buzzing, for example. So I think there is a lot to talk about, but it takes time to create good content. And this is why I want to have kind of the help of other writers.
00:07:57.350 - 00:08:36.450, Speaker B: Eventually I want to also open the opportunity for other security researchers to kind of apply and maybe apply as a guest writer, but I still need to, maybe we will try with people that, yeah, we kind of kick it off and later we can maybe have a place for guest writers and other people that are also interested in the subject and want to share what they've been doing, want to share a different strategy, a different kind of approach.
00:08:38.550 - 00:08:52.646, Speaker A: Okay. And do you know if fasting is at the moment a commonly used approach by protocol? Like are you aware or have you, because I'm sure you've been in contact with different. So what can you tell us about it?
00:08:52.828 - 00:09:44.466, Speaker B: Yeah, so I think there is a big variability of, I don't know, protocols using fuzzing. So I think the more mature they are in terms of security practices, the more likely they are to use fuzzing. But I think the vast majority of protocols that are launching are still not using fuzzing and they are probably using kind of fuzz tests from foundry. And that's probably because foundry made it super easy to start. You just change, like, you just pass parameters to your function and they will work out of the box. But even so, some projects don't use it. So I think there's kind of like a ladder.
00:09:44.466 - 00:10:37.586, Speaker B: Some projects use fuz tests, like the stateless fuz tests, and maybe fewer projects will climb up the ladder and start using variant tests. Maybe even fewer will start using formal verification. So I think there is still a lot that projects can do and protocols can do to help with security. One of the goals of this newsletter is to show them how to get why they should do it and how to start doing it so that we can hopefully increase this number and increase the number of protocols that are implementing fuzzing. Yeah, so I think some projects are doing that, but there's still a lot more that we can do.
00:10:37.708 - 00:11:20.998, Speaker A: Yeah, I guess it needs more awareness. And also likewise, are you aware of how much security researchers, like independent auditors or researchers are utilizing fussing in their audits or do you think it's closer to most of them, or rather a few of them? I know that it might be like a feeling of, yeah, actually some are using it because I've heard what I've seen, but maybe those are the most like the top auditors that we all know and that share all the knowledge. So what do you think? It's something that is mainly yours or not yet?
00:11:21.164 - 00:12:40.010, Speaker B: Yeah, I think only not many auditors are using fuzzing and probably the reason is that it takes some time to implement fuz testing, for example. And obviously like trail fits, they've been doing that for years. I saw garden audits also doing buzzing for some of their audits and that's kind of great. Some independent security researchers are also working only with that. But I think we should be able to implement this strategy more as a whole, like the security community, because I think this can prevent certain types of errors and certain types of attacks. Many security researchers are asking me how to start and what are the best resources. I've been seeing a big increase in people looking for that, both protocols and also security researchers.
00:12:40.010 - 00:12:42.670, Speaker B: But I think we are in the beginning of the journey.
00:12:45.030 - 00:13:38.820, Speaker A: Well, we all try to keep learning, right. So there's probably a moment where most of the people that are here for a few months, yes, they have been auditing and so on, but they feel like they could do better or at least like for instance, that's how I feel. And you want more then, right? And wanting more is to actually being able to improve your testing approach. One of the common things that you see people asking is how to write the best pocs and so on, right. Then how these posts that are going to be in the blog, how are they going to help others? How is going to change their life now, but how is going to help people?
00:13:39.510 - 00:14:23.838, Speaker B: Yeah. So I think they will be targeted both towards security researchers and also towards protocol developers. Because I think if you are a security aware developer or if you are interested, if you want to know about it, there is a lot you can do by yourself. You don't need to hire an auditor to start implementing environment tests. So I think we can help with that. So there is a lot you can do by yourself and you can go a long way improving the security of your protocol. If you learn kind of the right mindset.
00:14:23.838 - 00:15:32.680, Speaker B: And if you start implementing since the beginning of the development process, kind of this shift left approach, you should start working in security earlier. So instead of developing the whole thing and then going for an audit, you can start implementing that since the beginning. So I think protocol developers will hopefully start shifting their mindset and starting thinking about security earlier. And also auditors, we hope they will also learn new strategies, they will learn new, learn from case studies, from other security researchers and they will kind of be better security researchers in the end. So they should be able to also get better at finding bugs. At the end of the day, that's the goal. Kind of spreading the word, raising awareness and also equipping people with the right tools and mindset to implement these tools on their work.
00:15:33.530 - 00:16:32.460, Speaker A: Yeah, to start finishing this, because you mentioned something interesting and I want to show what people can reach, like giving you as an example, I know that you've been sharing that you started to work closely with a company or that it's developing something new. And I think it's been even today or yesterday you shared how you're starting to add even comments while the developers are doing the implementing the code and so that it can be easier to after that adding the invariant tests and so on. Right. So why don't you tell us about the approach so people can see what you have got to after lots of time of fussing and a few years, so that there is some motivation out there.
00:16:32.830 - 00:18:18.566, Speaker B: Yeah. So right now I've been working as a kind of internal security researcher for a protocol and their idea is to kind of implement or implement, start the development of their protocol since the beginning implementing security practices. So I'm trying to help them with the properties descriptions and also with the implementation so that we can make it easier to implement fuzz testing so that it's not like a burden that involves a lot of discussing with the protocol, like making sure that the white paper describes how the system should behave and then also making sure that the function implementations, they are also making the correct state updates or making the correct checks, making the correct verifications. So of that I think you can start very lightly, very easily just by writing kind of plain English what this function should do. And then at the second step, implementing the actual first test would be much, much easier because you don't need to think about your checks, you just implement the ones that you are taking notes along the way. So this is a new thing that I'm trying out right now. Hopefully, maybe eventually we'll have automated generate AI generated invariant tests just based on your descriptions.
00:18:18.566 - 00:19:05.370, Speaker B: Maybe like someday soon you can do that automatically. But right now I think there's a way that if you think about the properties and if you have this fuzzing experience, you can also catch some bugs just while you are reviewing. If your notes are correctly implemented by the protocol, I think everything helps. If you are a security researcher and you know a bit about fuzzing, it will also help while you are auditing, while you are doing a manual review. So I think everything helps and that's something that maybe the readers will also learn a bit about.
00:19:05.520 - 00:19:48.280, Speaker A: I'm sure everyone will find this useful. So yeah, it was nice chat. It was nice to go through this new plan of yours. And yeah, I think soon it's going to be the first article and then from then on, probably a weekly content. Right. Thanks for the chat, thanks for the alpha, and thanks for providing this blog so that most of us and most of people can keep learning and improving. Because I think while we've had some content there, I think there is so much more needed.
00:19:48.280 - 00:19:54.660, Speaker A: Okay, nice. Yeah. Bye. Thanks.
