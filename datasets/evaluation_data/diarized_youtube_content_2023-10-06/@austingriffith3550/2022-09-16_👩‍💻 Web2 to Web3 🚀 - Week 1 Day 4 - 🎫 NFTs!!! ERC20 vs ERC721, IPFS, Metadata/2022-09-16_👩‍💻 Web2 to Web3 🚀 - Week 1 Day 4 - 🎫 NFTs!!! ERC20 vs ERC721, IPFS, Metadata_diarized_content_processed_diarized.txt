00:00:01.850 - 00:00:18.266, Speaker A: Boom. We are starting day four. Austin, Edda, Carlos, today is NFT day. Day four of week one of becoming a power user on ethereum. So today we're just going to buy some nfts. We're going to send some nfts around. We're going to learn about non fungible tokens.
00:00:18.266 - 00:00:46.380, Speaker A: I think the best way to start is Edda, just to share your screen. And we'll have our character Sanford, Sanford Stout, and maybe Sanford could go buy some nfts. And Sanford already owns an NFT actually, because their ens that they registered is already an NFT. So you want to share Edda? And we'll dive into minting and buying and trading nfts. NFT day. It's NFT day.
00:00:47.230 - 00:00:48.570, Speaker B: It's an exciting.
00:00:52.190 - 00:01:17.026, Speaker A: So. So you. Let's see, what have we done already? We've picked up a metamask, we've traded ETh to die, and we've made some transactions. We've interacted. So you should know this part. You should know about your chrome extension wallet. And we have all, there's all Zoom, right? That's Sanford, right? Yeah, Zoom is Sanford.
00:01:17.026 - 00:01:40.490, Speaker A: Okay, we've got our account. They only have 230 usd of ETH, so we'll have to find a cheap NFT. But here's our wallet. We do have some die if we need to swap back, that's for sure. I don't know. You want to keep that dye right now? And here's Stanford. So here we are on Openc.
00:01:40.490 - 00:02:26.330, Speaker A: In the last episode we talked about how your inventory and identity follow you from service to service. Here is another web three service, Openc. It's an NFT marketplace where people can buy and sell and auction their nfts. But also we can see this is our account and our identity and inventory have followed us here and it shows. Our first NFT is an ethereum name service ens. And if we send that ens to someone else, like if we send this NFT to someone else, does that mean they own the NFT and they can register like, I bet they own the name if we send them the NFT, right? The same thing happens. Yeah, I think the same thing happens on uniswap.
00:02:26.330 - 00:02:51.700, Speaker A: If we were to store our liquidity in the contract and create a liquidity position, we get an NFT minted to us. I think if you send that NFT around, it represents the actual ownership of the liquidity reserves that you've staked. So I'll bet you if you send this ens to someone, they will then be able to own it and control where it's pointed. But here it is. Here's our first.
00:02:55.910 - 00:03:06.840, Speaker B: Refreshed, but it is the Stanford stout one. So on our main page we could actually see it. This automatically came. But, yeah, we have our ens over here.
00:03:07.310 - 00:03:11.770, Speaker A: Awesome. Let's go buy a crypto punk.
00:03:14.350 - 00:03:15.580, Speaker B: Starting on the.
00:03:21.390 - 00:04:10.234, Speaker A: I mean, I want to dive in and kind of look at the code of an NFT, but before we do all of that, we should just interact with service. Let's just interact with one of these marketplaces and let's just buy some cheap nft. You can see there's tons of nfts out here, non fungible tokens. They are kind of like digital ownership, right? There's this on chain provenance that happens where an artist mints a collection and everyone can tell on chain that that specific artist minted that collection. And if we took some of this artwork and we minted our own NFT, the market sort of selects which one of those is valid. It's kind of like if I painted a knockoff painting, you could tell right away, even if it looks close to the same, it's just not the same thing. Right.
00:04:10.234 - 00:04:45.400, Speaker A: It's the original artwork from the original artist on chain, and you can see that they minted it. And so what gives these collections value is kind of like the subjective nature, right? There's also a ton of garbage. Again, we have to go and give the disclaimer that this is a permissionless environment. Anyone can deploy anything. And so you're going to see a lot of people deploying a lot of things, just trying to make a buck. And that's sad, but it's a reality of a permissionless environment. Right? So which one of these are you going to pick, Etta? What are you going.
00:04:47.450 - 00:05:19.474, Speaker B: It's always, there is so many NFT collections that you can buy from, and every now and then it's like, oh, this is like the next big NFt collection. You should buy it right now. But it isn't generally the case, at least didn't happen to be. So you can see the different categories as well over here, like collectibles. These are the ones with normally a capped supply. So like 10,000 board apes or crypto punks. But yeah, we could just try click one.
00:05:19.474 - 00:05:21.262, Speaker B: Hope it fits our price range.
00:05:21.326 - 00:05:56.154, Speaker A: And yeah, the ladies, that's a good point, is the limit, right. There's this digital scarcity that happens with these, where the artist creates a contract for the collectibles and the artist specifies a specific amount. Only this amount can ever be minted in this contract. And this is the artwork that goes with each one. And then there's kind of like basically a registry of who owns which one. Right. And so there's this scarcity that kind of happens when you have that limit.
00:05:56.154 - 00:06:34.762, Speaker A: Like, there's only so many crypto punks. Even if we were to redeploy the crypto punks to a new contract, even if the artist redeployed the crypto punks to a new contract, the market would not buy those. Well, the market three weeks ago probably would have bought those, but the market's not going to buy a knockoff version. They're looking for that authenticity. They're looking for the provenance. I said that before, of the history of the artist minting it and other people owning it and the community around it. Do any of these have any utility, though? Are we looking at just artwork or are there some with.
00:06:34.762 - 00:06:56.610, Speaker A: I noticed up at the top there was a utility section. I'd be interested to know when you went to the sections, there was. I don't even know where that. Oh, here we go. Okay, so this is really cool, though. We should show this off. So each nft kind of has these properties, right? If we scroll down, we see the, there's a whole auction and everything happening.
00:06:56.610 - 00:07:31.050, Speaker A: But these properties are something that we can show in ipfs a little bit later. But we can see not only the property, whatever these things are, they have a top layer as a circle, and it's not torn. And you can see the percentages of the other ones within that limited collection that have those traits or how rare those traits are. You can even filter by those. Like if we wanted to find one that was torn, there's so many cool things you can do. This is an interesting collection. Alien DNA.
00:07:32.430 - 00:07:52.820, Speaker B: I just went to Artblocks. They have a lot of collections. And Artblocks Playground is a bit more like more rising artists. There's also art blocks created where you can find already artists that are very popular, which is a bit higher price. But these are kind of cool experiments that they do. And this looks pretty nice. Yeah.
00:07:54.710 - 00:08:58.410, Speaker A: And so one thing that NFTs have really empowered are artists to connect directly to their audience. There was always a middleman before, right? I mean, if we look at Spotify or something like that, right? If you try as an artist to release your own art and make money off of it, there's almost always a middleman that makes most of the money. And so NFTs have allowed content creators to permissionlessly get in here and deploy their art and then directly sell those to their supporters. And it's more like instead of 100,000 sort of fans, it's sort of like they want to find the 1000 or the 100 superfans and kind of monetize their superfans. And NFTs have been a really good way for artists to do that. Where was that when you went to explore? Maybe. How did you find that list? I'm stuck on this idea of utility and I want to know what.
00:08:58.410 - 00:09:31.570, Speaker A: So if you go to, where did you go? I don't know where we were. What utility? Show us. Show us some utility. So some examples of NFTs with utility would be token gating, where you have to own the NFT to be able to get into a chat room. The other day on the build guild, someone deployed an NFT that you used on tally to vote. So maybe you have to hold the NFT to be able to vote on some other thing. Look at chicken derby.
00:09:31.570 - 00:09:48.966, Speaker A: So much utility. Was this in the utility section? Yeah, chicken derby. You know, I don't know. I don't know if it actually has utility. You guys. Brought to you by the makers of Ganja farmer. Oh, man.
00:09:48.966 - 00:10:04.220, Speaker A: How much are these? Can we buy a chicken derby? Oh, don't do, let's see. Oh, they're like 100. What is happening? It looks like it's a whole game where you have to buy different things. Oh, man.
00:10:05.230 - 00:10:09.738, Speaker B: There was like Zed run, which was more popular. I think you could buy a horse.
00:10:09.834 - 00:10:19.300, Speaker A: Oh, yeah. It was a horse in the stable. Yeah. How much are these chickens? Let's scroll down. It's sorted by lowest to highest, right?
00:10:19.750 - 00:10:20.402, Speaker B: Yeah.
00:10:20.536 - 00:10:23.454, Speaker A: Oh, yeah. Can we afford one? Can Sanford afford?
00:10:23.502 - 00:10:25.618, Speaker B: They're on Polygon, right?
00:10:25.704 - 00:10:41.642, Speaker A: Oh, I see. Is that the purple e thing? Is that why it's. How do you tell? It's on Polygon. Okay. Which is a whole nother discussion about different l two s. Let's try to stick to just Ethereum and let's go buy an Ethereum openc. And then we'll open it up to.
00:10:41.642 - 00:10:59.614, Speaker A: There's other l two s. Openc has partnered with some of these l two s, so you can see some of them on chain. And it's like other marketplaces will have other chains that they partner with and whatever. We can get into that in a little bit. We just want to buy and collect some nfts. Which ones should we buy?
00:10:59.812 - 00:11:03.760, Speaker C: Is there a way that we can filter by price or something?
00:11:04.210 - 00:11:06.900, Speaker A: Probably, yeah.
00:11:09.110 - 00:11:21.334, Speaker B: So I think there was like a place where you could see all the upcoming ones, recent ones, but you could filter by collection. But that's not what we're looking for. Right.
00:11:21.532 - 00:11:26.642, Speaker C: Maybe like all nfts, or you click on all and then you can filter.
00:11:26.706 - 00:11:30.070, Speaker A: From there, like the cheapest possible nfts.
00:11:30.730 - 00:11:32.780, Speaker C: Like, start accending by.
00:11:33.550 - 00:11:36.842, Speaker A: Yeah, there's going to be so much noise there, though.
00:11:36.976 - 00:11:37.898, Speaker C: Yeah, that's true.
00:11:37.984 - 00:11:41.194, Speaker A: Yeah. I don't even know if we want to scroll through this.
00:11:41.392 - 00:11:44.006, Speaker B: Yeah, there are so many nfts.
00:11:44.198 - 00:12:24.762, Speaker A: Okay. I think you said that you had some friends that might be minting something or, you know, of people. Let's say that we have an artist friend or content creator or a social media person that we would like to support, and they were putting out an NFT. So instead of maybe buying them off of here, maybe we would go to a mint website and they would have their particular decentralized app that we would go to and we would connect our metamask to. We certainly could connect our metamask here and we could buy one of these garbage nfts. But let's go try to support an artist or someone we know. Right.
00:12:24.762 - 00:12:35.840, Speaker A: There we go. Okay, cool. This is something that you had found earlier. Do you want to explain it? Is it just a random. No, go ahead, you go. You go.
00:12:36.610 - 00:12:53.042, Speaker B: Yeah, sure. Yeah, these are actually pretty cool. So they're meta avatar on chain nfts. I do have one as well. And yeah, they're my Twitter friends. So shout out to shiv as well for creating these collections. And I think they're super cool.
00:12:53.042 - 00:13:17.398, Speaker B: So they're still up for minting. So we could show the mint process and then come back also to buy on opensea as well. But when you basically go to meta vatar on chain, you can see they're pretty cool generative designs. So they're created by the code. Like when you click mint, it automatically generates you a design and then gives you back these. What is it called? I don't know, like colorful pfds.
00:13:17.494 - 00:13:20.102, Speaker A: It's like a gradient. Yeah, gradient.
00:13:20.166 - 00:13:20.874, Speaker B: That was a better word.
00:13:20.912 - 00:13:55.554, Speaker A: And on chain is something we can get into, too, just like the difference between on chain and off chain. And really everything's on chain in terms of the ownership. Right. The ownership of the thing is on chain, but what you're actually owning most of the time is usually just a hash to a manifest that lives in ipfs. And we'll talk about that in a little bit. But in this case, the smart contract is doing all the rendering, and you go to the smart contract, and it gives you that manifest back. And then you go back to the smart contract and it actually gives you the artwork out of the smart contract.
00:13:55.554 - 00:14:32.402, Speaker A: The smart contract is rendering the SVG and giving it back to you instead of going to a different storage element. It's all on chain, which is super expensive. And it's kind of a cool flex. It's kind of just like an artistic thing to do right now to have svgs on chain, but it allows you to do a bunch of gaming and cool things. Once all that information is on chain, you could have that gradient change depending on some other on chain variable. Like if more people were buying this collection, it could heat up and turn orange or something weird like that. So let's buy one.
00:14:32.402 - 00:14:44.120, Speaker A: What does it take to buy one? Thanks. Yeah. And also the difference between minting one on the website versus buying one on Opensea, we should talk to. Can we mint one right on the website first?
00:14:45.290 - 00:14:45.942, Speaker C: Yeah.
00:14:46.076 - 00:14:46.822, Speaker A: Are we logged in?
00:14:46.876 - 00:14:55.450, Speaker B: Pretty cool website. Oh, yeah, I'm logged in, but just the same process connected my. Let's see if it's Stanford stout, like our zoom account that's connected.
00:14:56.270 - 00:15:06.554, Speaker A: Make sure it's Sanford. Yeah. Okay. Sanford is eight a nine. Cool. But it doesn't show ens. Okay, so hold on.
00:15:06.554 - 00:15:34.440, Speaker A: Like if you scroll up to the top, as the builders of this website, they should have done reverse ens and they should have detected that we are Sanford and they should have showed our name at the top. Right? But they haven't gotten to that as builders of their website. And that's just something you'll notice in web three since it is decentralized and tons of people are building different apps. Some people integrate that Ens and some people don't. And that's just how it works. Let's mint one. Let's go.
00:15:34.440 - 00:15:57.374, Speaker A: Here we go. Okay, so there's 1200 out of their 10,000 minted. And they're going to let us do a mint right here. And we want to mint one. What happens? Here we go. Okay, so we are trusting some smart contract here, right? We're sending money into zero x eight a zero. But in a lot of ways there's a lot of trust going on.
00:15:57.374 - 00:16:19.762, Speaker A: Can we click that address real quick and see if it takes us to ether scan? Yeah. Let's go view the address of this smart contract. We're about to send money into this smart contract and we know nothing about it. Right? Okay, so we at least know it's a smart contract. Right. We can see it here. We can see other people are sending money into it and we can go to that contract tab up there and we could actually see the code of the smart contract.
00:16:19.762 - 00:17:11.750, Speaker A: And this is an interesting part of web three, is everything's open source and everything is very public, and we can actually get in here and see the code of the smart contract. Now, at first, this is probably way too much. We don't want to hit folks with that, but we just want to show off the fact that all of this stuff is open source and everything is out in the open, even though there's garbage things that happen all the time and people are able to steal money, that happens kind of alongside a lot of really cool innovation, a lot of really cool tech. And we have to kind of trust this code here that we're looking at, and we're not auditors. Right. Like you as the user, you're getting in here and you're interacting with this contract. There's a fair amount of trust that goes into this, but you're kind of trusting that the ecosystem has parsed through this.
00:17:11.750 - 00:17:33.430, Speaker A: Right, or that other people have gotten through this. If we wanted to, we could sit down and we could look through line by line of this contract. Right now, we're not going to do that. We're just aping into some nfts. Not the best practice, but let's expose that to everyone and expose that to you at home as the user. You've got your metamask, you've swapped a few things. Now we're going to go buy an NFT.
00:17:33.430 - 00:17:47.300, Speaker A: There's a fair amount of trust here that has to happen, but we're going to send our money into this smart contract and hopefully get an NFT back. So we're going to pay $10 in fees and we're going to pay $90 to the project. No, $90 total.
00:17:48.630 - 00:17:51.860, Speaker B: It's just updating the price, but yeah.
00:17:52.710 - 00:18:16.506, Speaker A: And that price update is from gas, right? Gas prices are fluctuating. We need to get our block mined quickly. We'll probably cover gas more and more as we run into problems. But most of the time you say, yes, I would like to make that transaction, and within a minute or two, that transaction goes through. If it doesn't go through, you can speed it up, which I think. Have we done speeding up transactions yet? We didn't even need to. Right.
00:18:16.506 - 00:18:17.418, Speaker A: It just went through.
00:18:17.504 - 00:18:18.140, Speaker B: Yeah.
00:18:19.550 - 00:18:20.300, Speaker A: Okay.
00:18:21.810 - 00:18:23.630, Speaker B: Someone has minted a token.
00:18:24.050 - 00:18:57.634, Speaker A: There we go. There's ours. So we were on their website and we minted the token, but it follows the 721 NFT standard. So that NFT works everywhere. Again, our inventory and our identity follow us from site to site. So here is on a different site, here is on openc. Here is that NFT? And it's a cool blue gradient with some kind of, I don't know, some white to know.
00:18:57.634 - 00:18:58.890, Speaker A: It's artistic.
00:19:00.110 - 00:19:14.010, Speaker B: It's on chain blue and white. Yeah, you can see that the number has increased. So now they have like one less NFD since we took one. Well minted one and minting, basically creating it from the smart contract.
00:19:15.390 - 00:19:44.054, Speaker A: Very cool. Okay, so what about on another platform can we go look at, or what if we go look at Sanford on Zapper? Now if we go to Zapper Phi, I think is what it's called. And we put in Sanford stout into our ens, right. We could connect, our wallet works. No, that works fine. Yeah, just connect all Sanford and it should work the same way. You could just type in Sanford stout ens there.
00:19:44.054 - 00:19:55.740, Speaker A: But this should work too. This should. Yep, it's Sanfordstout eth. Their portfolio is some dai and now less eth because we spin it. But if we go to NFTs, we should now have.
00:19:59.150 - 00:20:00.502, Speaker B: Maybe it's updating.
00:20:00.646 - 00:20:18.370, Speaker A: Yeah, their indexer probably hasn't found it. Maybe give it a reload and see if it wants to get a good second try at it. This is a really hard thing to do in the ecosystem because you have to parse. There's so much to parse. But there it is. There is our meta avatar. Metavar.
00:20:18.370 - 00:20:25.502, Speaker A: Metavatar. Metavatar. Is that how you say it? Metavatar.
00:20:25.566 - 00:20:28.786, Speaker B: I always said meta avatar. Now that you pointed out, I realized.
00:20:28.818 - 00:20:56.178, Speaker A: It was, I don't know, meta avatar is easier to say. But they mix it all together. Okay? They compress it. Okay, so here is our cool NFT. We were able to buy this NfT using our metamask on their website. We could also buy it on another service like a different marketplace like Opensea. We can even take it now and go to a third party marketplace like Zora or rarible.
00:20:56.178 - 00:21:21.234, Speaker A: Let's go to rarible. Could we sell it on wearable? Right? Could we put it up for auction on wearable? This would be really interesting. So we'd have to sign in. And again, this is just another marketplace where our web three identity and inventory follow us in. Here we are at least 13. Sanford. Are you Sanford again? Idk.
00:21:21.234 - 00:21:59.458, Speaker A: What just happened there? All right, we're logged in as Sanford now. Do they show, they don't show our name. Everybody shows Ens a little different. Why don't they show the account address but not Sanford? Really doing kind of a terrible job doing Ens resolution here. Yeah, that's too bad. This is like a major marketplace and they don't show our ens. I mean, they show that we own the Ens NFT, but they still show our ugly account number.
00:21:59.458 - 00:22:37.390, Speaker A: That's sad. Okay. And it's not showing that we own the other one either. This is a great discussion about web two versus web three. In web two, there's a lot of censorship, right? Like, every platform gets to decide what they want to show. And in a way, this is very much web two censorship in a web three arena. We went and bought an NFT that adheres to the standard and they could easily have it on their website, but they either haven't indexed it yet or they are choosing not to show that NFT kind of centering that piece.
00:22:37.390 - 00:23:05.830, Speaker A: Right. And web three is about censorship resistance. It's about if this NFT follows the standard, it should be here and we should be able to buy and sell it. I don't know what's going on here, but sadly, we can't make a good demo where we can mint an NFT on a website, see it on Opensea, and then sell it on wearable because rarible is not seeing it, sadly, and also not respecting ens fist shake.
00:23:06.650 - 00:23:16.250, Speaker B: We could try another marketplace. Like, the two I use are like Opensea and sometimes check wearable, but they're like, I don't know, a couple of popular ones, like foundation, think that.
00:23:16.320 - 00:23:19.562, Speaker A: Let's go to foundation. Let's check out foundation. Yeah.
00:23:19.616 - 00:23:20.700, Speaker B: Is it found?
00:23:21.390 - 00:23:22.140, Speaker A: Yeah.
00:23:26.100 - 00:23:27.590, Speaker B: Foundation app.
00:23:28.040 - 00:23:50.232, Speaker A: You search foundation and rarible came up before foundation in the search for foundation. Okay, so we can connect our wallets now. In this case, we'd be buying. I think they definitely kind of curate heavily what NFTs they show. I think Openc is probably the least curated. Like, it's just very open. These guys are very curated.
00:23:50.232 - 00:24:06.610, Speaker A: So we're definitely not going to find our meta avatars in here. How about this log? How about this 3D log? Do you like 3d logs? This 3d log is $600.
00:24:08.740 - 00:24:09.730, Speaker B: Right now.
00:24:11.300 - 00:24:13.330, Speaker A: Could be more, could be less.
00:24:14.900 - 00:24:18.720, Speaker B: I see a lot of photographers on foundation.
00:24:23.640 - 00:24:56.800, Speaker A: Yeah. I don't know. The process of collecting NFT so far is pretty easy. We just basically go to a website and we hit mint and it brings up a dialogue and we buy that NFT and then it exists and we can buy it and sell it on different platforms based on the standard. It should work everywhere. The problem is most of these handful of these platforms we've looked at are basically web two companies that are curating and not showing everything. Anybody who thinks web two and web three are mutually exclusive are wrong.
00:24:56.800 - 00:25:40.830, Speaker A: Right? We've just touched more web two than we have web three because we've seen a bunch of censorship already across these platforms just in the ten minutes we've been tinkering with these nfts. Okay, so we were able to purchase an NFT. This NFT happens to be on chain. We should look at an NFT that uses ipfs and we should talk through ipfs and how storage works, I think. Carlos, did you have one minted that we could look at? Or what's the best way to explore ipfs? Or how could Sanford maybe mint an IPFS version of an NFT instead of an on chain version? Just so we could see that?
00:25:41.440 - 00:25:48.768, Speaker C: Yeah, like I created one for today as an example on Rinkabi, so maybe we can mint one of those.
00:25:48.934 - 00:25:49.600, Speaker A: Okay.
00:25:49.750 - 00:26:31.084, Speaker C: Like Eda, you should be the owner of that contract. So I'm going to send you the contract. Mean, if I wanted people to mint my NFT, maybe I should do like a website, for example, to show the one we did with the mint button. But in this case, I didn't do any website. But we can use either scan to mint the NFT directly from ediscan to the contract they have like this. It's not super fancy, but it's enough to interact with the contract. So maybe we can try that and see how that works and also how ipfs works.
00:26:31.282 - 00:27:09.864, Speaker A: This is a really good demo, proving that sometimes if people are willing to talk directly to your smart contract, they'll go straight to etherscan and just poke at your smart contract. And loot was like that. One of the most famous and successful SVG NFTs didn't have a minting page. You had to actually go to ether scan and mint these. And at one point they were worth like 30 grand or something like that. So a lot of people minted those and enjoyed the collecting experience. You can see how simple these are.
00:27:09.864 - 00:28:00.532, Speaker A: It's just like a black background with white text, and the white text gives you these items that are in loot, right? It's very much like items in a game. And this is meant to really lean into the composability of web three. Instead of building a whole game, Dom created these loot NFTs. And really you basically have some loot here. Like you have an amulet and a titanium ring and it's just saying, hey, you can buy this NFT and have this loot, but the rest of the game and the gaming universe around it is up to the collectors to sort of create the game. He's just making this one composable piece and letting people kind of run with it and do what they want with it. So yeah, this is an example of an on chain NFT.
00:28:00.532 - 00:28:10.028, Speaker A: But let's go back to our ipfs. NFT. Here we go. So we're actually talking straight to the contract here. So this is a contract that you deployed Carlos, is that right? Yes.
00:28:10.194 - 00:28:28.884, Speaker C: On a testnet? Yes. Rinkaby. So you can also check the code if you want. It's like a super simple ERC 20 extension. So maybe if you want to comment on the code, it's like super simple. I think it's like the minimum, super clear amount of code that you can deploy, right?
00:28:29.002 - 00:29:01.276, Speaker A: Yes. So this is an NFT. We see the total supply is 100. And there's probably some require statement in here that line 23 says if we get to the total supply, then we don't let anybody mint anymore. Basically, to get past this line, the counter has to be less than the total supply and that counter increments on the next line. So that little counter is going to keep track of our current supply. And as soon as that reaches 100, no one will be able to ever mint again.
00:29:01.276 - 00:29:17.916, Speaker A: And if it's less than 100, then it goes ahead and mints that token to the message sender. That's pretty awesome. Oh, and you have a withdraw. So money that goes into the contract, you as the owner. There's an only owner there and you can withdraw those funds?
00:29:18.108 - 00:29:22.304, Speaker C: Yes. And also like the online Celtic, I created that function. Like the owner.
00:29:22.352 - 00:29:27.556, Speaker A: What is this owner mint? Yeah, it's like a heavy handed allows you to mint. Is that right?
00:29:27.658 - 00:29:32.328, Speaker C: Yeah. If you check the previous sanction, it's like the same thing, but without the price.
00:29:32.414 - 00:29:33.832, Speaker A: Oh, the price. Okay.
00:29:33.966 - 00:29:39.256, Speaker C: So you can mean for free if you want, as the owner, but you.
00:29:39.278 - 00:30:15.396, Speaker A: Still have the total supply. There's a really neat thing here about trust, where no matter what, even if the owner can heavy handedly mint some of these, that total supply of 100 is respected and it's in the contract. And even the person who owns it can't get around that 100 limit. And everyone can get in here and see that code and they can know. Sure, the owner does have this special owner mint function, but that total supply is coded in here and no one can get around it. And we can trust that the code is going to do exactly what it's going to do. So it's kind of like a neat little thing to lean into there.
00:30:15.396 - 00:30:16.310, Speaker A: Go ahead.
00:30:16.680 - 00:30:25.960, Speaker C: You have to check that the contract doesn't have a function like set total supply. Right. Because maybe they can have a function and change the total supply.
00:30:26.300 - 00:30:46.432, Speaker A: Yes. And they don't here. So I think we can trust it as coders, right? We can look at this code and I think we know what it's going to do. We're importing a lot of other code from a lot of other places. We're kind of assuming that a lot of that is trusted. But technically, we should be able to owner mint ourselves one without paying any money. Right.
00:30:46.432 - 00:30:58.864, Speaker A: If we just go to that owner mint. Okay, so this is fun. This is fun. We're minting an NFT on ether scan on a testnet. This is very, like, developery. Right? We're really getting in here. Yeah.
00:30:58.864 - 00:31:23.816, Speaker A: And so etherscan lets us connect our wallet and even wallet connect. Oh, doesn't like that. We're not on rinkabee. See, we're learning things here. So our wallet is actually on main net, but we just switched it to Rinkabee. And your wallet works the same on any of these different networks as long as they're EVM compatible. So now Sanford is logged into Rinkabee, which is kind of like a copy of Ethereum.
00:31:23.816 - 00:31:31.020, Speaker A: It's like a cheaper testnet version of Ethereum. And now we should be able to connect our wallet.
00:31:31.680 - 00:31:50.390, Speaker C: But we are going to need some money, even if the mint is going to be free. Right. But that is going to spend some gas running the transaction. If you go search for faucet Rinkabee. I think the first one is good on Google.
00:31:51.080 - 00:31:56.870, Speaker A: Yeah. Instead of me just sending you some Rinkabee, let's go through the faucet process. That's a great idea.
00:31:59.880 - 00:32:02.020, Speaker C: This was working. These are just minutes ago.
00:32:02.090 - 00:32:02.432, Speaker A: Yeah.
00:32:02.506 - 00:32:03.784, Speaker C: I hope it works.
00:32:03.982 - 00:32:08.616, Speaker A: Send me e. Let's see what happens. There we go.
00:32:08.638 - 00:32:09.370, Speaker B: And it just.
00:32:10.460 - 00:32:30.268, Speaker A: Wow. So now we need to just check our address on the Rinkabee. Oh, we're just waiting for it there. Yes. So it should take about 15 seconds. But we got a transaction id right away, so I bet it hit the mempool pretty quickly. And hopefully.
00:32:30.268 - 00:32:49.624, Speaker A: Oh, it's still pending. Still pending. Tada. We have Rinkabee E. Okay, so now we have money for gas or to mint our owner mint, and we should mint it to ourselves, right? Yeah. Cool. All right, let's see what happens here.
00:32:49.624 - 00:33:05.244, Speaker A: Yes. And again, we're going to some random contract. Zero x 62. Right. And that's a random contract that Carlos deployed. And so it's pretty hard here. It's pretty hard to really know what's going to go on.
00:33:05.244 - 00:33:43.560, Speaker A: We know that we're sending money into a contract and we know the code of the contract, so we kind of know what's going to happen here. But given if you don't completely explore the code of the contract, it's hard to know what's going to happen as a user and that's just kind of part of this. You really should get in and learn what the contract is going to do before you put money into it. But I would say generally most NFT collectors we see are probably not scouring the solidity each time we minted one on a testnet. So now does that show up on Rinkabee Opensea? I think you testnets openc.
00:33:44.380 - 00:33:45.130, Speaker C: Yes.
00:33:47.100 - 00:33:54.684, Speaker A: Yep, there it is. And then we'll log in as I think you're logged in as you here. We want to be logged in as.
00:33:54.882 - 00:33:56.616, Speaker B: I have a lot of hellos.
00:33:56.808 - 00:34:01.144, Speaker A: Good job. That's awesome. Looks like a cool SVG NFT. Edda.
00:34:01.192 - 00:34:02.632, Speaker B: It is an SVG NFT.
00:34:02.696 - 00:34:03.630, Speaker A: Let it go.
00:34:05.680 - 00:34:16.240, Speaker B: But you can say like these are all just tests, so I didn't pay anything. They were all on reincubate. But yeah, let's connect to zoom. Oh, this is a way cooler.
00:34:20.040 - 00:34:33.908, Speaker A: No, it's not an SVG and Ft. Cool. So this will give us a chance to explore ipfs and talk through immutability and content, addressable information and stuff like that. Cool. Awesome.
00:34:33.994 - 00:34:48.300, Speaker B: So how do we get in from the contract? That was pretty cool. This page was hard for me to use in the start. It's like, where do I even go? But you don't generally use that. It's good to know. But not used every day.
00:34:48.450 - 00:34:51.464, Speaker A: So let's look at the ahead. Go ahead, Carlos.
00:34:51.512 - 00:35:25.050, Speaker C: I was going to say that you can only do this if the owner of the contract, the creator of the contract, verified the contract because then that means that the API is sent to addresscant to see that it matched the bytecode of the contract. So it will give you the green checkmark verified so you can actually read the contract and interact with the contract. In some cases, people are sending a lot of money to contracts that are not verified. And that's like a complete everything.
00:35:25.420 - 00:35:56.800, Speaker A: Yeah. Kind of brings up the whole discussion of security by obscurity. And sometimes that would work in web one and web two, but that just does not work in web three, you need to be very open. You want your code to be very open source. You want your contract to be verified. You want lots of people to have their eyes on that verified contract and using it. If you go to a contract that has a lot of money in it and it's not verified, that's a huge red flag and you should run in the other direction.
00:35:56.800 - 00:36:21.028, Speaker A: Okay, cool. We can see it here. What I was thinking was we could do some reads. So if we go back to the ether scan page for this NFT and we go to the contract and instead of going to write, let's go to read. And what I want to read is something like balance of. Maybe we just check our balance real quick. Right, balance of the Sanford stout.
00:36:21.028 - 00:36:52.452, Speaker A: But eventually what I want to do is get in and look at the token information. But let's go ask the contract what our balance is. It should be one, right? Yeah, cool. Okay, so if we keep scrolling down, we're looking for the Token Uri. The token Uri is sort of like the metadata, right? What happens if we just do token id? Zero. Is it zero indexed or one indexed? Let's find out. Okay, that's nothing.
00:36:52.452 - 00:37:09.640, Speaker A: So nonexistent token. But let's ask for one and query that. There we go. What is this? Okay, cool. Now we get into ipfs. Okay, so the stuff that's in the contract is basically just the ownership. We're keeping track of who owns token number one.
00:37:09.640 - 00:37:42.416, Speaker A: And then there's another read function in the contract that says token number one is related to this data. And this is what we get. So really in the grand scheme of things, the thing that you own is this little string right here. It's more like on chain. You own a receipt to the information. And if we go to that information, can we grab that ipfs? What happens if you throw that in the browser? Let's just paste it in, see what it does. Yes.
00:37:42.416 - 00:38:01.560, Speaker A: Okay, so what we need to do is now go ahead and go up to the URL with ipfs, IO there and do ipfs and then paste in that thing. And we probably will need to get rid of the, and like the colon.
00:38:04.480 - 00:38:05.260, Speaker B: These ones.
00:38:05.330 - 00:38:28.050, Speaker A: No, yeah, but we just need a slash there. We want to go to that hash. So ipfs, oh man, it'll actually work. Just take the colon out, this colon to the left. Two. So you have ipfs. Get that colon out of there.
00:38:28.050 - 00:38:39.856, Speaker A: One more. There we go. Now slash. And I think there's a slash one there that we probably want to get rid of the two slashes, it'll ignore, I think. Then there's a slash one. Oh wait, that's it. No, that's it.
00:38:39.856 - 00:39:03.630, Speaker A: There it is. Right. Okay, so this is the information that's stored in ipfs. It's basically an object, right? We have a name and we have some kind of image. Okay, so now let's go look at the image, grab the Baf Kre, that thing, and let's paste that into ipfs. There we go. Without the slash one there at the end.
00:39:03.630 - 00:39:10.780, Speaker A: And this should be the picture maybe. Yes, there it is.
00:39:10.930 - 00:39:12.028, Speaker B: This is awesome.
00:39:12.194 - 00:40:02.352, Speaker A: Yes. Okay, so kind of to zoom back out again, our NFT that we own, there's this smart contract that says token number one is owned by Sanford Stout. And this is weird because the actual NFT is named Sanford Stout too, but our account owns token number one. And we can also go to the smart contract and say, well, what the heck is token number one? And it says, well, it's this stuff in ipfs. And then we go to ipfs and we get that object and then we say, well, what is the image? And we go to ipfs and we get that. So there's this settlement layer, which is the smart contract that says who owns what? And then there's this storage layer that's separate, that's ipfs that kind of holds the content. And it's not really holding the content either.
00:40:02.352 - 00:40:53.996, Speaker A: IPFS is what? Interplanetary file system. And it goes into kind of how web three is very peer to peer. And so when you host something in ipfs, you basically store it on your computer, but other people can get to it peer to peer. And again, web three is all about incentives, right? If you build an incentive system that has someone else store your information, then it starts to propagate across the web and you incentivize other folks to store this information. So it's not in like a single server and it's not just on your server, it's spread across the web using incentives to have other people store these things. Not all of that is in place right now. A lot of stuff that's on ipfs disappears because people forget to have it pinned and people forget to have it stored.
00:40:53.996 - 00:41:31.070, Speaker A: So even though all of this is kind of happening peer to peer, it still falls over because there's not enough incentives to keep the assets up, right? And there are pinata and rweave and all sorts of different web three services that help you keep your ipfs content pinned. But it's still not perfect yet, right? And we still don't have, like, a great Incentive system. Content addressable. Right. Can I steal the screen for a little bit and talk about content addressable stuff? Okay, let me see what I have going on here. Where can I get. Yeah, here we go.
00:41:31.070 - 00:41:41.712, Speaker A: Here we go. I'm going to steal the screen. There we go. So we're looking. Oh, man. Sorry again about my really messy desktop. Try to focus on this stuff here.
00:41:41.712 - 00:42:16.664, Speaker A: Let's see if I even make this a little bit bigger. So this is an example. As you go through this curriculum, probably in about ten days from now, you will be working on your first NFT. And this is that metadata. This is that same metadata where we have a name and an image and some other stuff here and even some attributes. We saw those attributes on the other one. And I can upload this to ipfs, and it's just going to give me this cool hashback, the same thing that you saw that same hash that we were looking at on ipfs.
00:42:16.664 - 00:42:31.676, Speaker A: And, in fact, I can go ipfs, IO ipfs, and then this. And it will find this bison, right? It's actually a bison. Yeah, it's a buffalo. It's this guy right here. It's this little collectible.
00:42:31.868 - 00:42:36.000, Speaker C: So that has. Is actually the hash of the content, right?
00:42:36.070 - 00:42:51.128, Speaker A: Yes, exactly. It's content addressable. And if we change anything here, right, if we change this to. Well, it's actually not a buffalo. It's a bison. Okay, so let's look at the last four characters here. H nine 1d.
00:42:51.128 - 00:43:14.460, Speaker A: Right. If I save this information and I upload it. Oh, it's a different hash right. Now. If I change this back to buffalo and I upload iffs, we've got h one 9d again. Right. If I change this to bison and I upload that, we get the XCXQ.
00:43:14.460 - 00:43:42.584, Speaker A: Right. So the information in ipfs is content addressable, meaning that if the content changes at all, the address to the content changes, which is a really neat thing. When you're setting up an NFT and you're uploading the metadata, you're basically saying, this is the metadata, and it's never going to change. And it's at this address, and this is the image that goes with it. And it's never going to change. It's immutable. And here's the address.
00:43:42.584 - 00:44:07.760, Speaker A: And if it ever changes, it won't be at this address anymore. And that's how that content addressable idea works. And let's go do an IPFS download. Right. This one's going to take longer because I bet that bison was out on ipfs because other people were running this demo. But by switching it or buffalo, but by switching it to Bison, it's got to look a lot farther. Yeah, see, it's taken it a lot longer.
00:44:07.760 - 00:44:16.928, Speaker A: It's got to find basically my machine. Yeah, there it is. Now it found it. And it actually is bison. Right. Name is Bison. And the image, look at this.
00:44:16.928 - 00:44:24.980, Speaker A: The image is actually on a web server. And you can do that. It's not great. But there is the image out on a web server.
00:44:25.320 - 00:45:06.316, Speaker C: Is it the same thing on the contract? On the Sanford stout contract, we used ipfs, Uri. But you can also use your own server if you want. But that's tricky because you can change the image if you want or you can stop your server. So this way you make sure that you will be sure that the content will be there and it will be the same. And you can change, because if you change the content, it's going to change the id. Right. So can we say that there are no duplicates on ipfs? Because if you try to update the same, it can be no duplicates.
00:45:06.316 - 00:45:07.964, Speaker C: But maybe if you have folders.
00:45:08.012 - 00:45:08.224, Speaker A: Right.
00:45:08.262 - 00:45:15.856, Speaker C: Because there are also the concept of folders. So then you can have duplicates inside folders and they will have different ids.
00:45:15.888 - 00:45:16.036, Speaker A: Right.
00:45:16.058 - 00:45:23.210, Speaker C: Like the same thing that we did on the contract that you have the base Uri. One, two, three. Right.
00:45:24.060 - 00:45:53.856, Speaker A: Yes, exactly. The fact that it's content addressable makes it like, you can't have a dupe. There is the folders, but that content addressable nature of things really makes ipfs interesting. And also, of course, the peer to peer sharing and eventually the incentive layer that gets people to kind of host this stuff on their machine and kind of creating a decentralized storage network. Let's see, we've gone through. They totally could switch out their website. Right.
00:45:53.856 - 00:47:04.280, Speaker A: So we're talking a lot about artists, like supporting artists. And let's say an artist deployed an NFT that just has an NFT pointed to their website and a bunch of people buy it and they support the artist. And then the artist gets on and doesn't have their information and they don't have their content in ipfs. They just have it on their web server and they decide to change a bunch of things and the community could support it or they might not support it, and then maybe the value of the NFT goes way down or something like that. Right? So there's this weird thing where you want to check the metadata, right? You want to understand what you're actually owning. And the best way to do that is look at that token Uri and look at where that information points and inspect it and see, does this go to a web server? Like, how decentralized is this really? Is it at least in ipfs where the content is immutable, or is this some dude's web server and they're just going to switch it out on you, right? So you can totally get rugged by buying an NFT that is just on a web server. You're using this fancy decentralized technology to show that you bought this and you own this thing.
00:47:04.280 - 00:47:57.880, Speaker A: And then that thing that you own is just something that some random human could swap in and out, right? You don't want that. That's a weak link in the chain of things. So you really want to see that you own that particular thing and that particular thing cannot change ever. And that's the interesting part of owning these nfTs. And just like going back to censorship, right? If you had a game and you had swords in that game, and I got a really magical sword, and then the game creator decided that sword is too powerful, we're going to destroy it from the game and you take it away from me, then it's like, I don't want to play that anymore, right? So this allows us to create these rules in smart contracts that say this sword is yours and you can use this sword in minigames and no one can take it away from you. And that's pretty powerful.
00:48:01.440 - 00:48:04.190, Speaker B: You could send it to someone though, right? Yes.
00:48:06.560 - 00:49:05.308, Speaker A: Or you could sell it on a marketplace, right? Like any developer could build a dutch auction that says the price starts here and it goes down over time and ends here, and you can buy it at any time for that price, right? One other thing I wanted to go through is just like, look, just a tiny little bit. I know we've dove into the code a little bit. I wanted to show just a tiny little bit of the difference between fungible and a non fungible asset in solidity, just to peek at it. And this is like an oversimplified example, but I have a fungible asset here and I have a non fungible asset, and I've taken out everything that's like extra and just created. What does it create? So this is like an ERC 20, right? This is similar to ERC 20 and this is similar to ERC 721. Okay. Basically, what does it take? So there's native eth, right? We can send ETH around and EtH has value.
00:49:05.308 - 00:49:29.556, Speaker A: We use eth to pay gas. Then if you want to create a currency on top of ETH, you create a token, which is just a smart contract that keeps track of everyone's balance. Right. And then you have a transfer function that lets someone move their balance from them to someone else. And notice we do this require here. It's actually, you don't even need that. Basically this will fail if they don't have enough.
00:49:29.556 - 00:50:03.728, Speaker A: But I added this in just to be very explicit about it. So the way we track a fungible asset is we basically just have a big array of, any given address has some balance. And when you transfer, you basically take some of that balance from the sender and give it to the receiver. And that's how a fungible asset works. If I have 100 and I send 50 to somewhere else, I have 50 there and they have 50. But those 50 are all exactly the same. They kind of mix together, thinking of like gold or oil or something.
00:50:03.728 - 00:50:23.272, Speaker A: Right. It's a fungible asset. A non fungible asset is kind of like a baseball card. It's a very unique item that only exists right here. This has very unique metadata. Right. And so the method of how we keep track of it is different.
00:50:23.272 - 00:50:55.820, Speaker A: Instead of a balance and you add and subtract from the balance, it's flipped around. The array is, now we have all of these objects. We have token number one, we have token number two, we have token number three. And each one of those tokens has an owner. So instead of tracking the balance, we track the owner of each non fungible asset. And to transfer those assets, you require that. If I want to transfer asset one to Sanford, first we make sure that I am the owner of that asset.
00:50:55.820 - 00:51:24.424, Speaker A: Right. And if I am the owner of the asset, then we update the owner to whoever we wanted to send it to. So just like a quick recap, fungible assets we keep track of as a balance, and it's just an amount. Non fungible assets, we keep track of who owns each one. And each one is its own index. And there's also probably going to be some function here. It's called token Uri in a lot of places, but we could just call it metadata.
00:51:24.424 - 00:52:14.040, Speaker A: Right. And you would send in some UN 256 asset id and this thing would return you back some information about what that thing is that you actually own either an ipfs or maybe it's actually like an SVG and it actually renders the stuff in a smart contract. But just wanted to show the difference between fungible and non fungible assets and expose you at home the builder, to a little bit of solidity as we start talking about writing smart contracts. We'll be doing that soon, but today we're just collecting garbage NFTs and sending them around. And have we talked about artist royalties? We talked about supporting artists, but we haven't talked about royalties. And you can actually build those into the platform. I've been talking too much.
00:52:14.040 - 00:52:15.820, Speaker A: Someone else talk about artists.
00:52:16.240 - 00:52:46.336, Speaker C: I was going to say first, I wanted to say that that was like a big aha moment for me. Like the sending tokens. I don't know. In my mind at the beginning when you were sending tokens or NFt or whatever, I don't know. I imagine the tokens traveling through the wires of the Internet to the other address or whatever. And it is just like an array, like keeping track, like the state and, yeah, I'm going to subtract ten tokens from here and adding ten tokens here. And that's like the transfer and that's how you send tokens.
00:52:46.336 - 00:52:47.750, Speaker C: That was like, oh, okay.
00:52:48.120 - 00:53:27.424, Speaker A: It's like a big database, right? Like it's a big, expensive, asynchronous database, and these are just entries in a database, and it's how those entries work and kind of work with each other. Totally. That totally is a good point. When I send you a token, it's not coming through the wire or anything. Basically, I'm signing a transaction that has this, there's sort of like this settlement layer, right? There's this kind of book of who owns what NFT. And we all keep that book and we all update it at the same time. But when you want to transfer an asset from Carlos to would, you would sign a transaction that says, I own this thing and now I want Etta to own it.
00:53:27.424 - 00:53:55.390, Speaker A: And all of us would flip through our book and find that specific asset, and we'd mark off Carlos and we'd say, now Edda owns it, and all of us would do that. And that's how this ownership works. Same thing with like sending a bitcoin, right? It's not like going through the just, it's just a big ledger of who owns what. And you take some off of one person's and put it on the other one, and everyone's ledger is exactly the same. That's a good aha moment to talk through.
00:53:56.640 - 00:54:38.856, Speaker B: Yeah, I think to add to Carlos's point, I definitely agree. It was so cool that you could see where in the transaction it was like you could go to ether scan and you can see, okay, that's not transferring it through the wire, but at what process it is, you could see that transaction is indexing. I don't know the other names, but it's going through on ether scan where you can see everything that's happening. And again, the address you put there. It's very important when you're transferring a token, again, double check who you're sending, where you're sending it to. I remember one time by accident I sent my same NFT from the same wallet to that same wallet. So you could see that from address to the same address.
00:54:38.856 - 00:54:43.176, Speaker B: So when you're inputting, be careful and.
00:54:43.198 - 00:55:01.280, Speaker A: You don't want to send tokens to the token address. That's where some people really get. And then if it gets stuck, then it's stuck forever. Like basically setting the ownership layer. So the token contract owns the token and now there's no function within the token contract to send the token out of the token. It's complicated.
00:55:02.020 - 00:55:16.870, Speaker C: At some point maybe we want to show how to cancel a transaction. Sometimes you can cancel a transaction without the same nons and a higher gas price. You can cancel your own transaction when you mess up.
00:55:17.240 - 00:55:50.770, Speaker A: And it's basically speeding it up. The way we would demonstrate that is we would make a transaction and we'd manually set the gas too low and then we'd notice that it doesn't get mined. We could probably do that. Maybe that might be for another day, but we should definitely do that soon. To show a transaction slowing down how you speed up a transaction. And even you can do the thing where you speed the transaction up, but you actually change the transaction to be a non transaction or a transaction yourself. And that's canceling a transaction by speeding it up and changing the two from stuff.
00:55:50.770 - 00:56:18.772, Speaker A: We definitely should do that. I don't know if we could do it today. I think we might be almost out of time on NFT day, but maybe we should do that tomorrow or the next day for another, I have another smart contract to show off here. This is the SVG NFT. Yeah, this is a lugie. So going back to, there's a manifest on chain. There's a manifest, right? There's that JSON file in IPFs.
00:56:18.772 - 00:57:08.264, Speaker A: So in this case we're building the manifest, right? In solidity we're doing an Abi encode which does like a string concatenation and a base 64 encode. And we're basically making a JSON file by bringing the name right out of the contract and the description and the id and the color. So the color of this NFT is actually stored in the smart contract. And when you ask for the metadata, it actually pulls it out of a variable in the smart contract and gives you back the metadata. So instead of going the ipfs to get the metadata, you're actually asking the smart contract itself for the metadata. On chain. Svgs are really just like a huge flex and really cool, but they're also pretty expensive and it's kind of more like probably an artsy trend, but also really fun that you can do.
00:57:08.264 - 00:57:47.700, Speaker A: Really cool. Interesting. The color of the NFT is stored in the contract, not on ipfs. So if someone wanted to build a breeding contract, they could say that these two loogies breed and they mix their color and their chubbiness or something like that. And that could happen on chain as an on chain interaction rather than some kind of off chain thing. So having this information in the smart contract is pretty powerful because you can do things that are more composable going back to Dom's loot. I could send in my loot and I could get my divine robe and I could have my divine robe work in some other game or something like that.
00:57:47.700 - 00:58:08.840, Speaker A: The composability is very open and permissionless, and just having it on chain is really cool. And there's a lot of fun gaming things that could happen from this. So just showing this off to. Yeah, and here's the actual SVG. Right. You recognize these tags. Basically, this is an eyeball and this is a head, and this is another eyeball.
00:58:08.840 - 00:58:39.236, Speaker A: And it renders the whole thing in a 400 x 400 svg. But this all happens in the smart contract. And it's setting its color right. It's doing an ellipse fill, and then it's grabbing the color from the smart contract and it's creating the size of the circle is based on the chubbiness of the thing. Right, on chain. So this is just getting everyone exposed to all the different weird nfts. And hopefully you, as the developer, getting you exposed to the code.
00:58:39.236 - 00:59:41.870, Speaker A: I've been talking way too much, but I really think we should talk about royalties just a little bit because this is like a fun thing that you can do as an artist. You can release an NFT and the platform can have some royalties built in where going back to, if you were a coder that built a dutch auction, and it starts at one price and ends at another price. These are just like a couple of lines of solidity that you write. You can write in one more line of solidity that says when this sells, 10% of the sales go to this artist and 90% go to the platform or something like that, and you can code those rules into your smart contract. So then everyone can go to ether scan and see exactly the rules that are going to happen. And you can build those royalties into your systems and build these incentives into the systems to get people to kind of act the way you want them to within the system and also give artists royalties and let creators get the biggest cut of their work and not some middleware platform.
00:59:44.080 - 01:00:13.190, Speaker B: I think that's really powerful. Yeah. So as a creator, you rely, let's say, on Instagram, so you have your followers there, but you can say, I want to make an NFT collection. And that kind of gives you like a one to one relationship with your community. Like, I don't want to say fans, because you can have extra utility. I don't know. With your NFT, you can have your own conference, and people owning your NFT can come to that conference, for example.
01:00:13.190 - 01:00:17.348, Speaker B: And it's really like you and the.
01:00:17.354 - 01:01:05.156, Speaker A: Community member, and there's a ton of noise in the space. And if you want to hate on nfts, it's probably really easy to find a ton of content and reasons why they're terrible. But I promise there's some really cool innovation happening here, and there's a lot of neat things giving agency to a lot of creators that didn't have that before. So dig through the garbage and find the cool innovation that's happening and use your metamask and go to some of these platforms and buy some nfts. And in a couple of weeks, we'll show you how to create your own NFT and start building some of this code and writing some of these incentives into your next platform. All right, NFT day. We did it.
01:01:05.156 - 01:01:12.550, Speaker A: We bought an NFT. All right, thanks, guys. Thanks for hanging out. See you.
01:01:12.920 - 01:01:13.570, Speaker B: Thanks, everyone.
