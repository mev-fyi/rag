00:00:00.970 - 00:00:33.286, Speaker A: Hey, what's up? I'm Austin Griffith. While I was out at Blockchain week, I presented a lot of different problems we're running into with metatransactions. And one of those was talking about standardization. We found out that we all kind of had something a little bit different. So as we tried to build out this relayer network, it would be really cool if we kind of had this standard smart contract call. And so what that kind of led to is that we all have a little bit of different arguments. And I think that we're going to meet tomorrow and Alex van Dezan is probably going to tell us how it is and show us how we're going to do it.
00:00:33.286 - 00:01:15.490, Speaker A: But I wanted to get this cool trick that I learned from my budy Steve Ellis out just to kind of show how it works. So basically you can do so if you're familiar with encode Abi, it takes the function name and then the arguments that would go into it and packs it into a byte array. Well, it'd be really cool if you could do a decode Abi on chain. And I bet you will be able to soon. If you can't now, I haven't figured out a way to do so. I bet it's going to be built into solidity soon. But this is kind of like a neat little hack that allows you to do decode Abi in solidity.
00:01:15.490 - 00:01:58.018, Speaker A: Let's go look at the smart contract real quick. So basically I set up this hello function, right? It takes in bytes 32, a number and an address. And then just emits an event to prove that that worked. Right? Here's the event. Well that's fine. You can call it normally, right? We can say string ASDF number 1234 and then my address and I'll just hit send and that will just send that on chain and we'll see a message come up and it goes through fine, right? Basically that's just calling it normally. So what if you wanted to actually pack those in to a simple bytes array, right? And that's what we're doing here.
00:01:58.018 - 00:02:54.546, Speaker A: So the trick is, the heart of the trick is basically to call yourself like you call address this with the byte array as the call data. So basically, just like we do with kind of the bouncer proxy and a lot of the metatransaction stuff where you would normally call somewhere else with the call data, you actually call yourself with the call data. And if it's crafted correctly, it will call this function and the arguments will get parsed out and probably a lot of people know about this, but I didn't know about it, so I wanted to share it with everybody. And Steve and I called it the poor man's abid code, which I really like. So let's just do something else over here. Let's take the string and let's do HJKL and 5678, right? And this time, instead of sending it, we'll craft it into a string. And basically these first four bytes are the hash of the function that it's going to call that hello.
00:02:54.546 - 00:03:33.258, Speaker A: And then the rest of them are the arguments that go into the hello. But what's cool here is we can submit just a single bytes array. And if we say send crafted, obviously it's going to cost just a little bit more gas because it's going to have to do a little bit more, but it's going to save you a lot of time. And in the long run, this is going to help with standardization. When we're talking about metatransactions, we have all these different relayers that can all work on all the different networks. We just need a standard way to do that. And I remember it resonated with me.
00:03:33.258 - 00:04:15.566, Speaker A: Pioter said, how about from chronologic? He said that it would be cool if we had basically a byte array for call data and a byte array for condition data. And then you can put whatever conditions you wanted to in that byte array, and this method would allow for that. You would basically put your conditions in one and it would pass in. And then you could do whatever you want with this method here. You could cut it up into whatever arguments you wanted to and check to see if the conditions are true. And if they are true, you return true. So then the relayer can just have the same exact arguments for every everyone and say, is this metatransaction ready? And if it is, then execute it.
00:04:15.566 - 00:04:27.450, Speaker A: So there it is. I'll put the repo in the notes, but that's the poor man's abid code. Thanks to my dude Steve Ellis for teaching me that. See ya.
