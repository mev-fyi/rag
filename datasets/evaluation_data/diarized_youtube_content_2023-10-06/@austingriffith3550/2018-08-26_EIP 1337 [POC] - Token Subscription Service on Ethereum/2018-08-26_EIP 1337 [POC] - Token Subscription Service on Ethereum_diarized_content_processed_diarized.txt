00:00:00.570 - 00:00:39.560, Speaker A: Hey, what's up? I'm Austin Griffith and I've been exploring how to build a really simple proof of concept for a token subscription service. So basically the TLDR is you've got a publisher that has some kind of service or content, and then you have one or more subscribers that want to send ETH or some kind of token actually in particular a token at this point. But I think it will evolve to eth. Maybe. Basically they want send a token in on some kind of interval, and they don't want to have to get in and submit a transaction every time. So we're going to leverage metatransactions. If you want to learn more, check out EIP 948 or EIP 1337.
00:00:39.560 - 00:01:09.662, Speaker A: They're going to be more advanced than what I'm building. This is just a proof concept. You can jump on the repo to check out the abstract, or just jump on sub MetatX IO. That's where the hands on demo is available. It kind of builds off of meta TX, my other metatransaction demo. And the first thing we're going to do is deploy a contract. So whether you're a publisher or a subscriber, you should probably deploy your own contract.
00:01:09.662 - 00:01:37.542, Speaker A: It's cheap, it's easy. What did that cost? Like, get this contract out there and it almost acts as your identity. You can charge it up with ETH or tokens, and then you can subscribe to multiple things. Just by filling this out, you could use the one that's live right on the site to start subscribing. It's on Rinkabee. There's only like one meta transaction, like one desktop worker, so it'll break if you mess with it too hard. So here is our contract that's deployed.
00:01:37.542 - 00:02:10.038, Speaker A: I own it. Here we can go look at the source code. It's all open and available on Rinkabee. Alongside of this contract, I've also deployed a stablecoin, so we're going to grab that. Okay, so let's say we're a publisher. So like I said, subscribers should probably deploy their own contracts. But I'm going to kind of go at this at a different angle a little bit and say, what if I'm a publisher? How do I very easily get someone who's sort of on board with moving ERC 20 tokens, but maybe not my particular website.
00:02:10.038 - 00:02:35.950, Speaker A: So I'm going to set up in this gross nerd Ui of mine. I really need a designer. So we're going to go 1 minute. And so instead of like once a month we're going to say once a minute we're going to throw that stable coin in. And it's good to have a stable coin so you don't have to worry about the fluctuations of price over a year. If you're doing like a twelve month subscription or something like that. Let's say we're going to send one token.
00:02:35.950 - 00:03:21.558, Speaker A: So I'm the publisher here and I'm going to send this to a subscriber. So I'm just going to set this form up. I'm not actually going to submit it, so I'm thinking of what I want them to do. So I want them to send me one of these stable coins once a minute for the next like five minutes, right? And so the two address is actually going to be me, this little yellow dude here, and let's not worry about gas. We'll talk about that in a second. You can incentivize that secondary off chain relayer network to put your meta transactions up on chain, but we're going to assume that basically the publisher could do it or anybody can post it up. So we're going to assume that the economics at play are solid and this is going to get submitted.
00:03:21.558 - 00:04:00.918, Speaker A: So what I can do is go down to this share URL once all of this is there. And so let's say this other dude on the Internet is like, bro, I want to subscribe to your service. So I shoot him this URL, or probably shorten it, maybe hit it with a QR code, right? I'm not a Ux expert here, so this is kind of pretty gross looking. We're going to make it look a lot better. So he pastes that URL in and basically everything is ready to go for him. He can clearly see that. Okay, so once a minute I'm going to send this token one at a time to this address.
00:04:00.918 - 00:04:29.262, Speaker A: What I need to do right now, I don't have any approved, but I have a balance of 17. Let's just say he's like, okay, well, let's spend the next ten minutes sending these one at a time. Maybe it'd be better if that was ten months. Okay, let's do twelve months. Once a month, our minutes are going to be months here. So this is the one time that the subscriber has to do something on chain. He needs to approve the subscription contract to move these tokens.
00:04:29.262 - 00:05:02.582, Speaker A: So nothing is being moved. Right now. He's just saying, I trust the code on this subscription contract to move these one at a time, once a month. With an upper bound of twelve and he can get in here at any time. So you can kind of control how the subscription works in terms of like maybe you want to pause it for a month, maybe you want to cancel it altogether. You can just jump in here and change that approval and that's going to keep it from running more and more. And that's why you want to have your own contract because the approval works per contract.
00:05:02.582 - 00:05:24.834, Speaker A: So if you were to use the public contract and you had multiple subscriptions going, it would get messy. It's good to deploy your own contract for your subscriptions, basically. Okay, so the tokens in there, we've approved twelve, it's ready to go. We're not going to worry about the incentive layer. We are ready to subscribe. So this is going to be off chain. I'm going to sign this transaction once and that's the key.
00:05:24.834 - 00:05:53.386, Speaker A: I sign that once and I'm done. And basically from now on for the next twelve months or twelve minutes, it is going to take care of it for me and I don't have to worry about it. I can basically sit back and let that subscription go. And on the other side we should be able to see that. Yeah, so this guy can kind of get some analytics into who's subscribing to his service. So he's got one active subscriber, he can sign it. This is another incentive layer thing that you don't need to worry about right now.
00:05:53.386 - 00:06:29.970, Speaker A: If you get into the contracts, there's reasons for the contract owner to sign these certain things, to give more privileges and it has to do with this gas token stuff. But for now we're going to slowly earn tokens over here and these tokens are going to slowly spend. So now that twelve is down to eleven, we're 1 minute into it, one month into it, we've paid one time. Okay, so basically this is going to work. We can walk away, we can go to the bar, have a little wine. Basically things are running and working. But let's talk about that secondary incentive layer.
00:06:29.970 - 00:07:19.606, Speaker A: So what if it's not the publisher posting the transactions? What if there's this peer to peer network and you need to incentivize them to push your stuff up once a month, right. Because someone's got to pay the gas for that. Someone's got to be paying attention, someone's got to get it when the block comes along that says, okay, it's been a month, you're live now. You want that to get submitted because you want your publisher to catch the funds. Right. So if we were to let's change this up a little bit and say let's send, so we're sending one token each month to the publisher, but let's send maybe zero one tokens to the minor, the desktop minor, and let's send it from us. So we'll throw our, it's purple guy.
00:07:19.606 - 00:07:56.050, Speaker A: Yeah. Okay, so purple guy is the payer. So now in this situation we can go ahead and subscribe and we've already set up an allowance so that's going to go. So now we actually have two subscriptions running at once and they're going to be battling. But basically now that's like an incentivized set of transactions and they're all ready to go, they're stored in a centralized server. It'd be better to have like a peer to peer network, but that's the incentive layer. And let's say, okay, instead of paying them in this dumb token I just created, I mean it should just be a nice stable coin that's going to be a perfect value.
00:07:56.050 - 00:08:35.394, Speaker A: But let's say instead of my dumb coin, let's pay them in ether, right? So you would set your gas token to zero, you would say maybe 0.8 or I think five was what I used in my meta TX demo and it seemed to cover the cost. You can see the minor down here and you can see the miner's gas kind of slowly going down. By the way, if you're ever running this demo and the miner doesn't seem to be doing anything, it gets locked every once in, have to get in and unlock it still. So my demos are still pretty taped together with duct tape. The payer this time would actually be this contract. Okay, so this is where we're going to kind of get into some of the details here.
00:08:35.394 - 00:09:08.940, Speaker A: So the contract is owned by yellow guy and I'm saying I want the contract. So I'm actually going to just trash the gas payer. You can put in the contract address or you can leave the gas payer empty. And I'm going to say I want to incentivize that second layer with five e for each transaction they submit for me over the next twelve months or whatever it's going to be. I want the contract to pay for it and I can hit subscribe. That's totally fine. Basically I'm just signing this and shipping it off.
00:09:08.940 - 00:09:44.774, Speaker A: So now on the publisher side, I've got this new active subscription that shows up and what I need to do here is sign that and there's not a lot of details here. We'll need a better dashboard, we'll need a better analytics, we'll need to understand what am I actually looking at here? What am I agreeing to? But I'm going to go ahead and just kind of sign the fact that this dude looks legit. I'm okay with my contract paying for his gas fees because he's sending me a token that's worth way more. Right. And so I'm okay with that. I hit sign on the next mine block. We can see that that transaction is going in.
00:09:44.774 - 00:10:25.750, Speaker A: It's going to blow. The problem is our contract doesn't have any ETh in there, so let's go ahead and send some eth to that real quick. But basically that's it. We're sending, on a periodic basis tokens from one or more subscribers to a publisher. We're doing it sort of with metatransactions so we can submit them over and over again with kind of a little nunce trick that goes on there. You can check out the contracts there in the GitHub, jump on the demo and play around with it. If anything breaks or anything's not working, hit me up on Twitter, check out the leaked EIP, and check out nine four eight EIP.
00:10:25.750 - 00:10:35.090, Speaker A: Thanks a lot. Check it out. Hit me up. Let's work on some token subscription services. Bye.
