00:00:09.130 - 00:00:34.742, Speaker A: All right, so good afternoon everyone. Thanks Barnaby, very much for the introduction and for the invitation to speak. Really happy to be participating in economics. I'm also extremely bummed I can't be there in person. I had my plane ticket, I had my hotel, but but just COVID went through my whole family over the past week, week and a half or so. So international travel was going to be totally impossible. So I was really looking forward to meeting a lot of you in person.
00:00:34.742 - 00:01:29.798, Speaker A: Very disappointed I can't be there, but I'm glad I still get some time to chat about EIP 1559. And like Barnaby said, I've tried to keep the talk short so that if people want to have sort of longer, more wide ranging discussions, there'll be some time for that. Also, obviously you should feel free to reach out in general in the future by email or Twitter, DMs or whatever, if there's stuff you want to discuss. Obviously I'm very happy to chat through scientific ideas with sort of the broad community. Okay, so I failed to talk mechanism design for Ethereum and beyond. I will talk largely about EIP 1559 in particular, but just for sort of context, I thought it might be good to situate the work that's being done on the analysis of EIP 1559 sort of in a broader context, specifically in the context of mechanism design. So what's mechanism design? It's a very old field, over half century old, part of microeconomics.
00:01:29.798 - 00:02:41.246, Speaker A: And broadly it studies a very general problem, which is if you're trying to make a good decision or if good in some sense means like best collectively for everybody, how can you do that when you don't even know what good means? Meaning you don't in advance know actually what people prefer, what they want. And so the reason this is a hard problem is because you have to sort of do two things simultaneously. You have to simultaneously figure out people's preferences, what it is they want, and then also figure out the decision you're going to make based on those preferences. And of course the concern is that given that you're simultaneously getting preferences and making a decision based on them, you worry that participants in your mechanism may try to manipulate your decision by misrepresenting their preferences. And at this level, generality, this covers all kinds of stuff, right? So in particular, the design of a voting system in a Dow would be totally a mechanism design problem in this sense. Now there's a special class of mechanism design problems which is going to be what we're interested in, which is the allocation of scarce resources, where you've got stuff, people want it, you don't have enough for everybody. So you have to sort of allocate it in some quote unquote optimal way.
00:02:41.246 - 00:03:21.962, Speaker A: You have to figure out who gets the scarce resource and who doesn't. And so this is a special case of mechanism design. Here the preferences are just something like how much are people willing to pay to have the resource? Or how valuable is the resource to them? And the decision you're trying to make is just how are you going to allocate that scarce resource? And this type of mechanism design, you see examples of it all the way up and down the blockchain stack. So we're going to be talking about the lowest layer, layer one, the consensus layer. That's where you see transaction fee mechanism design. But there's interesting work to be done here, all up and down. So for example, at layer two, thinking about transaction fee mechanisms there and how they interact with layer one.
00:03:21.962 - 00:04:34.062, Speaker A: And then sort of most obviously, frankly, at the application layer there's just sort of a zillion canonical applications of mechanism design, right? Like you're designing sort of an NFT marketplace or some other kind of marketplace, very squarely a mechanism design problem. And so what's sort of super fun about Ethereum and sort of the blockchain space more generally for kind of a lifelong mechanism design nerd like me is how prevalent these opportunities are. Because for a contrast, like think of the internet, right? So for the Internet, obviously the application layer, there's like lots of sort of opportunities for mechanism design, right? Like you're designing upwork or some kind of two sided market. It's clearly a mechanism design problem. But in the plumbing beneath the application layer, mechanism design has not really influenced the internet, right? So like the BGP routing does not use a mechanism design approach for picking routes or TCP IP does not use a mechanism design approach to think about congestion control. So somehow in blockchains like Ethereum, you actually see mechanism design embedded even at the lowest, most primitive level, which is just sort of really fun, really cool. Okay, so allocation of scarce resources, hopefully it's clear to everybody here what is the scarce resource.
00:04:34.062 - 00:05:13.710, Speaker A: Scarce resource is just getting a share of the computation being done by the Ethereum virtual machine. So ignoring sort of scalability solutions, if you're just talking about layer one, we're talking about one block every 13 seconds or so. Current block size 15 million gas at least on average. So that's maybe sort of 1020 ballpark transactions per second, something like that. And I think demand sort of comes and goes, but I think we're all well aware that it tends to be much higher than that. On a good day, demand is higher than supply. On a bad day, demand is really higher than supply.
00:05:13.710 - 00:05:45.626, Speaker A: So that means we have a scarce resource, sort of just an Ethereum block space. And again, we don't have enough for everybody who should get access to that resource, what should be the people for whom it's the most valuable? And so that's really the point of a transaction fee mechanism. That's why there's a usage fee for a congested blockchain like Ethereum. The protocol has no idea. Remember the sort of general sort of problem of mechanism design. You don't know in advance people's preferences. You don't know in advance what people are willing to pay.
00:05:45.626 - 00:06:43.280, Speaker A: So you need to elicit that information so that you can privilege the sort of high value transactions. And allowing transactions to express a bid or a fee is a way for high value transactions to differentiate themselves. I can prove to you I'm high value by offering to sort of basically pay this much to have my transaction executed. And so one kind of Econ 101 observation, but that's just really important to remember, is that it may well be that congested blockchain like Ethereum generates an enormous amount of transaction fees and we'll talk later about where those transaction fees go, but it's generating a ton of revenue in that sense. But that's not inconsistent with it being a public good. It's not because the design is to maximize anybody's profit. It's literally just an inevitable consequence of having a scarce resource and wanting to allocate it in an economically efficient manner that just will automatically generate revenue whether you wanted it or not.
00:06:43.280 - 00:07:48.974, Speaker A: All right, so that's mechanism design at layer one, as manifested in transaction fee mechanisms, scarce resources, is block space, want a mechanism to figure out which are the highest value transactions. So this should sound like Mechanism Design 101, at least if you don't think about it too hard, it feels like you should be able to pick up a book, maybe one of my books or some other book and just sort of on page 17, read some sort of off the shelf solution that can do exactly this. Okay? And one of the things that's been really fun about working on blockchains is that they have a bunch of unique idiosyncrasies which really mechanism designers have never had to grapple with before. So you really get even for seemingly super basic problems, you get fundamentally new research questions because of the constraints imposed by the blockchain setup. So let me just sort of spell those out here on this slide. So this is what makes this really interesting mechanism design. So challenge zero is sort of not a new challenge.
00:07:48.974 - 00:08:32.474, Speaker A: That's just this issue that people can misrepresent their preferences. So in our context, that would mean submitting a bid or a transaction fee, which is something different than what would be a truthful bid, what would be your maximum willingness to pay. And this is exactly the challenge that is actually handled by the textbook solutions. But in public blockchains you have to make much weaker trust assumptions. So in particular in traditional mechanism design, you trust that the mechanism is going to be run correctly by somebody, for example, by the government or some trusted third party. And in effect, in the public blockchain, these decisions are being made by a block producer. So it depends on the exact sort of consensus mechanism.
00:08:32.474 - 00:09:22.298, Speaker A: But let's say in sort of basic longest chain, every block is really a unilateral, kind of dictated unilaterally by whoever has the privilege of producing that block. So you can as a mechanism designer, come up with some mechanism that you'd really love for black producers to actually carry out, but there's no way that they just do not have to do that. They can do whatever they want. And in general, one thinks of black producers typically as just maximizing their own profit. And if they can get higher profit by messing around with your mechanism, we should assume that they will do that. Let me skip the second challenge actually. So the third challenge is similar is sort of another aspect of the first one, which is in addition to block producers being able to choose who gets included, who gets excluded, they can also, for example, fabricate their own transactions and include them in the block.
00:09:22.298 - 00:10:26.638, Speaker A: Which for things like sort of mev, we've seen lots of examples of why miners might do that. This is also the reason, challenge number three here, this is also the reason why if you've taken a first course in mechanism design, your automatic thought for these kinds of scarce allocation problems is like a second price auction or the VCG mechanism. And it's exactly this challenge that makes those just completely untenable. So the reason you basically never hear about second price auctions or ascending auctions or the VCG mechanism in a blockchain context is because those really require sort of trust on who's carrying out the mechanism and in particular they're very easy to manipulate. So for example, to boost the seller's revenue or the miner's revenue through the inclusion of sort of just fabricated transactions. So that already rules out kind of a lot of the traditional solutions. And then finally, and this is really, I'd say, a broad theme in sort of what's different in traditional mechanism design applications and what you see in blockchain applications, which is collusion.
00:10:26.638 - 00:11:40.250, Speaker A: So in traditional mechanism design settings where you might have sort of a government of a nation sort of running some big auction, sell wireless spectrum licenses, you don't generally worry that much about collusion, at least not within the mechanism itself, because if you're the government running that auction, you can basically make it illegal. You just declare that it's illegal to collude in the mechanism and then you basically kick the can down the road to whatever legal system you have for sort of enforcing your rules. And even putting that aside, even if you do worry about collusion between different participants in an auction, traditionally maybe you usually don't, you might usually don't, you would never be thinking about collusion between sort of participants in the mechanism and the person running the mechanism at the same time. That's just never been an issue in the very traditional mechanism design settings. Whereas here a block producer and sort of submitters of transactions, they can certainly collude. And as we'll talk about, there are certain formats that are ruled out because they would be so vulnerable to that type of collusion. So these are what make mechanism design for the blockchain hard and to someone like me, extremely interesting scientifically.
00:11:40.250 - 00:12:45.780, Speaker A: Now, you can also ask the question, are there any sort of unique benefits that the blockchain setting offers? So sort of additional levers we have in our design space that we're maybe not totally used to? And there are, and there's two that are important for EIP 1559. So the first benefit is that it's not like this auction just happens once, right? It's not like a big spectrum auction where there's not going to be another one in two years or something like that. Like clockwork, every 13 seconds there's going to be another sort of auction for space in the current block. What that means is, and of course the outcomes of all of the previous blocks are just part of the public record. So there's a tremendous opportunity for a mechanism design, for a mechanism to take advantage in some way of the past, meaning auctions that already took place for previous blocks on the longest chain to in some way influence the way you run the mechanism right now for the current block. And maybe the most natural idea here, which is what EIP 59 uses, is a type of reserve price. That's a function of what's happened in the past.
00:12:45.780 - 00:13:46.262, Speaker A: The second thing which is sort of unusual is in the blockchain setting is how you have such programmatic control over the flow of payments. So a user submits sort of a transaction fee, they sort of pony up some cryptocurrency to cover what they said they're willing to pay. And then really, it's the protocol that handles where that money goes. And so in particular, traditionally with first price auctions, that revenue would just be given to the block producer, which is natural enough, but that's programmatic and you could change the program and you could redirect it elsewhere. And as I'm sure most of you know, EP 59 indeed directs all of the revenue from the reserve price, actually redirects it into the sort of the dev null. So it just sort of burns those transaction fees. These are the challenges and the benefits that make sort of mechanism design for sort of blockchain, especially at layer one, really a fundamentally different design problem than people have thought about for the last 50 years.
00:13:46.262 - 00:14:26.558, Speaker A: So it's really great opportunity for mechanism designers. All right. Okay, there we go. So what I want to do next, and I sort of debated how much to talk through EIP 1559 because I know there's some real experts out there, but I decided to err on the side of accessibility. I want people who don't have much exposure to this. I want the talk to still be kind of very accessible. Also, I noticed that there are, I believe, three other talks on EIP 1559 today, all of which are after this talk, none of which have happened before.
00:14:26.558 - 00:15:02.166, Speaker A: So maybe I can also sort of save the later speakers a little bit of effort if I just sort of give a thorough review. Also, frankly, it's just like a super cool design. So it's also fun for me to talk about. I hope it's fun for you to listen about too, even if you more or less know all of the following. Okay, so recap EIP 1559. I'm just going to really basically follow Vitalik's original design for this transaction fee mechanism. And again, just for context, what existed before EIP 1559 was a first price auction that was really just copy and pasted from Bitcoin, where it's kind of the most natural thing to do users.
00:15:02.166 - 00:15:23.966, Speaker A: You submit a transaction, you include a bid. If your transaction gets included in a block, that bid gets transferred to the producer of that block. So that's what came before first price auction. EIP 1559, frankly, is radically different. It makes multiple changes all at the same time, and they're closely interlocking. Really. If you made a subset of these changes, you would not get a good transaction fee mechanism.
00:15:23.966 - 00:16:02.910, Speaker A: So you really need to make this kind of global move in the sort of landscape of transaction fee designs to get the new properties. So three main ideas. Main idea number one is a reserve price, which in this context we will call a base fee. But it serves the role of reserve price in the sense that transactions unwilling to pay the base fee are just ineligible for inclusion in the block. They'll be regarded as an invalid transaction if you try to include them in the block. This base fee is very important that it can't be manipulated by the current block producer. So the base b is going to be a deterministic function of all of the previous blocks that have happened.
00:16:02.910 - 00:16:29.622, Speaker A: So this is exactly where so right out of the gate, the mechanism uses this unique advantage of the blockchain setting where you have all this public history which can inform how you run the mechanism. First price auctions notice, do not take advantage of that. First price auctions is just literally every single block is the same. You just sort of have users sort of pay whatever they bid. So that's right out of the gate. It's really interesting in that it's using that advantage of the blockchain setting. Okay, good.
00:16:29.622 - 00:16:57.202, Speaker A: So now a couple of questions that we need to answer. That's fine. It's fine to say there's a reserve price. If the base fee is 100 guay, any transaction that is less than 100 GWe per unit of gas is not going to be included. So the people who are included are going to be paying the base fees. There's a question of where do those revenues go? Then maybe the even more obvious question is like, how is that base fee going to be set? How exactly is it going to be computed? And so one thing I guess. Actually, let me back up a second.
00:16:57.202 - 00:17:41.978, Speaker A: So why have a base fee? Like, where does this come from? Well, there's this sort of notion in mechanism design of a truthful auction. And this is sort of what the second price auction has. And in a truthful auction, basically, it's just totally obvious as a participant what you should do. So truthful auctions completely minimize the cognitive burden of participating in the mechanism. Okay, so basically you just sort of figure out what would be the maximum you'd be willing to pay and you declare it and you're done. Or sort of a different version is like a posted price mechanism, which is like shopping on Amazon, right? So like, if you go and you think about buying a book or whatever, the book is $40, either buy it or don't to take it or leave it offer. You just have to decide, is your willingness to pay for this $40 or above.
00:17:41.978 - 00:18:16.394, Speaker A: And in any case, it's clear what you should do. The answer is yes, buy the book. The answer is no, don't buy the book. Participating in a first price auction is not like that. You're trying to be included, but you're trying to be included. You're trying to pay as little as possible subjects to inclusion, which means there's a big cognitive burden on you or on your wallet, as the case may be, which is to figure to try to reason about what your competitors are bidding, right? So you need to know what your competitors are bidding to know the minimum bid you yourself will be able to get away with and still be included. Okay, so bidding in first price auctions is hard.
00:18:16.394 - 00:18:56.614, Speaker A: We've known that for a half century, supported by lots of experiments. And there's nothing about the blockchain setting that makes first price auctions any easier to participate in. Wallets can try to suggest transaction fees, but they make mistakes because it's just a hard problem, demand is changing quickly, et cetera. So the idea of the base fee is like, well, wouldn't it be nice if ethereum, if sort of the consensus layer actually just suggested to you a posted price, just like you were looking at a book on Amazon? So if it just told you, look, the current base fee is 60 GWe, take it or leave it. So if you're willing to pay it, you're going to be included. Don't worry about it. If you're not willing to pay it, sorry, we don't have room for you.
00:18:56.614 - 00:19:40.840, Speaker A: Maybe sort of wait a little while and hopefully the base fee goes down in the future. So that's where this base fee comes from. You want to make the sort of experience of figuring out the appropriate bid as trivial as possible. So it's kind of a UX or user experience motivation in that sense. What's super interesting is that even coming just purely from that motivation, coming purely from the motivation of wanting to help bidding be easy. You game theoretically arrive at the conclusion that you have to do something different with revenue than you were doing before. The obvious first thought as far as where do the base fee revenues go? Would be, well, why not to the block producer, right? That's always where transaction fees have gone.
00:19:40.840 - 00:20:42.698, Speaker A: But if you try to do that if you pass base fee revenues through to a block producer actually because of that same collusion that we talked about earlier this sort of non standard collusion you can have between users of a mechanism and the person running the mechanism. That type of collusion can be used to circumvent a reserve price if the revenues are generated are passed on to the block producer. So basically, if the current base fee is 100 GWe and there's somebody who wants to be included but only wants to pay 50 GWe, basically the block producer can say, hey, go ahead and bid 100 GWe on chain so that you're eligible and I'll refund you 50 GWe per unit of gas off chain. And then it's basically like there's no reserve price at all. Okay, so as many of you know, the way EFP 1559 works is it actually burns all of the revenue generated by the base fee. And the game theory does not dictate burning, but it does dictate it cannot go to the producer of that block. So it has to be redirected in some way.
00:20:42.698 - 00:21:36.886, Speaker A: So, for example, by burning it, for example, by paying it forward to miners of future blocks, for example, by redirection into a treasury, all of those sort of are game theoretically fine. All right. But just coming from this goal of wanting a really seamless biding experience, you find yourself actually taking advantage of the programmatic control you have over payments. Remember, that was the second benefit we talked about. So you find yourself needing that second benefit of the blockchain setting in order to have good game theoretic properties really for the base fee to be economically meaningful. Okay, the first question when the base fee was where does it go? And so it needs to go somewhere other than the block producer, for example, burning it. Second question is how is the base fee computed? And probably the most obvious idea is just to have it.
00:21:36.886 - 00:22:13.750, Speaker A: Well, let's kind of adjust it over time based on demand. Okay? Right. If it seems like not that many people are willing to pay the current base fee, like, I guess it's too high, so we should lower it. If it seems like there's a glut of people willing to pay the current base fee, I guess it's too low and we should increase it. So that's a really natural idea. But the question in the blockchain setting now is how do you know whether demand is sort of too high or too low or whatever? I guess you would know if the base fee was too high, right? Because then very few transactions would be eligible. And you'd have a block that was not very full.
00:22:13.750 - 00:23:05.954, Speaker A: So maybe only 5 million gas worth of transactions are willing to pay a base fee of 100, whereas meanwhile, you have 15 million gas to work with. You're like, oh, guess we really should kind of decrease the base fee so that more people are eligible. The problem, at least with the original sort of protocol design of just having fixed size 15 million gas blocks is if you see a block which is full, you don't have any signal over whether the base fee is exactly right or whether it's too low. In other words, you don't know how much excess demand above and beyond the 15 million packed in the block there is. And you really need to know that information to know whether you should keep the base fee the same or whether you should increase it to reduce demand. So the way this is solved is through variable size blocks. So this is the second big idea in the mechanism.
00:23:05.954 - 00:23:58.302, Speaker A: So now, instead of 15 million being a hard cap on a per block basis, it's more of a constraint in an amortized sense and a long term average sense. So blocks are now available to go up to two X, up to 30 million gas. You could imagine using factors other than two X, but the current design is two X. And now you just use previous block sizes as your on chain signal about whether your base fee is too high or too low. If you see a block smaller than your target, you conclude the base fee is too high and you reduce it. If you see a block size which is too big, meaning more than 15 million gas, then you conclude that the base fees too low and you increase it. There's also some really neat I mean, you could imagine having variable size blocks without any of the other stuff in some way because they do have a bunch of other really nice consequences.
00:23:58.302 - 00:24:43.640, Speaker A: And the empirical analysis you'll be hearing immediately after this talk, this very nice work by Fan and Liao does a very nice empirical study of exactly these topics as well as a number of other things. So you should absolutely stay and watch that talk right after this one. Okay, so those are two of the three ideas. For ideas number three, let me point out a couple of other questions you probably should have. So one question is, well, wait a minute. If all the transaction fees are just being burned and not going to the miner at all, the block reward is independent of the contents of a block. So, like, as a block producer, why would I not just mine empty blocks if there's no actual payment for including transactions? So that's an issue.
00:24:43.640 - 00:25:22.878, Speaker A: The second thing you should be wondering is, well, what if actually, what if the base fee is so low that not only is there not room in 15 million gas for all of the eligible transactions, but there's not even room with a double full block of 30 million gas for all of the eligible transactions. Your base fee is just way off. It's just way too low. Then you're back in the sort of canonical conundrum where you don't have enough space for everybody eligible. You have to somehow decide between the people competing for that 30 million gas. So the third key idea is known here as tips. I just call it sort of an emergency backup first price auction.
00:25:22.878 - 00:26:12.130, Speaker A: So the mechanics are is that as a user, on the one hand you're going to be paying the base fee, the base fee will be burned, but there's also a user specified tip. So this plays the previous role of the bid. So a user specified tip that a user is willing to pay up above and beyond the base fee and this tip that all gets transferred to the miner. Okay? And so the hope is that in terms of normal operation where sort of demand has been fairly steady and the base fee is kind of like stabilized, so that there's typically roughly 15 million gas of eligible transactions for each block at that point. This first price auction is literally just used to give block producers the minimal incentive to not leave the block empty. And so that's going to be some non zero but nominal amount. So maybe like two to three GWe would be a typical tip.
00:26:12.130 - 00:27:00.402, Speaker A: If you're in a period where you have a relatively stable base fee, there are going to be these exceptional situations, right? Like if there's suddenly like a new NFT mint or whatever and demand suddenly goes up super high, the base fee only adjusts gradually. It only can go up or down so much from block to block. So if there's a super sudden spike in demand, there will be this transitory period where it takes a little while for the base fee to catch up to the new demand level. And so in that transitory period, you still got to allocate block space. And so this emergency backup first price auction is basically how that allocation happens in these what should be rather rare intervals of sort of sudden demand shocks. All right, good. So that's the review of EFP 1559.
00:27:00.402 - 00:27:27.900, Speaker A: So again, the three big ideas are there's. A base fee acts as a reserve price. Game theory says that the base fee revenues cannot go to the block producer. In EFP 1559, the choice was to burn them, in effect pass them on prorata to holders of the ethereum currency. You need to adjust the base fee because demand goes up and down. The way you track demand going up and down is through this trick with variable size blocks. So you have a target block size.
00:27:27.900 - 00:28:35.938, Speaker A: Large blocks indicate a low base fee. Small blocks indicate an overly high. Base fee and then you have this emergency backup sort of first price auction just to handle these cases of these sudden demand shocks. Okay? So that's EIP 1559. That is really basically just Vitalik's original design. So I did some work trying to really take the understanding that the Ethereum community, I think really already had of EIP 1559, but really making it precise and formal and mathematical to really having mathematical definitions and mathematical theorems, which basically I think of it as really kind of justifying the design and also justifying the ethereum community's sort of intuition about why the design was a good design. I think this is a real, I think, testament to the Ethereum community that I really think pretty much all of the main issues you might have with this mechanism were, I think, anticipated by the core builders in Ethereum who had been talking and discussing this for a couple of years.
00:28:35.938 - 00:29:12.362, Speaker A: I really think the understanding was very good. Was very good. All right, so basically three types of guarantees. And so again, let me sort of just review briefly when I talked about sort of the challenges of mechanism design in the blockchain setting. So we had the old non unique challenge which is a mechanism can be manipulated by its users through the misrepresentation of preferences, which in our context means sort of a false bid, a bid other than your maximum value. So that's sort of the first guarantee. We would like robustness to manipulations by users or a truthful mechanism.
00:29:12.362 - 00:30:03.290, Speaker A: That's the standard one. But then we have the two sort of totally new types of guarantees. The first one is just remember that miners have dictatorial or block producers have dictatorial control over what's in their blocks, both as far as what transactions are included, which ones are excluded, and also they can insert their own fake transactions if they want. This is the reason why second price auctions are just a complete non starter kind of in the blockchain. So, you know, as part of my work, I sort of defined a notion of myopic minor incentive compatibility or MMiC, which analogous to how Truthfulness says you want to be robust to manipulations by users. This MMiC condition says you'd want to be robust to manipulations by block producers. So that's the first really new definition, new type of incentive compatibility guarantee which is as far as I know, had not been considered previously.
00:30:03.290 - 00:31:12.434, Speaker A: And then the other sort of really new challenge is collusion between not just participants with each other, but also between participants with the person actually running the mechanism with the actual block producer. So there, there's another sort of new mathematical definition that I gave, which I called OCA proofness. OCA here stands for agreement. And again, just like Truthfulness says you want to be robust to manipulations by users, just like MMiC says you want to be robust to manipulations by miners or block producers, OCA proofness says you want to be robust to manipulations by cartels of users and block producers. So those are the three types of manipulations we want to argue are sort of no benefit. So there's no point to any of these parties actually engaging in these kinds of funny games. And I guess let me also just mention, right, just to take a step back a little bit, what we're in the middle of seeing happening, which is really cool, is we're seeing how designs that were really invented in the sort of Ethereum trenches really by people building this protocol, trying to solve real problems.
00:31:12.434 - 00:32:15.910, Speaker A: We are seeing how the ideas that arose in the trenches are going to becoming standard notions that academics and researchers really think about. So in the papers I've written, so I've sort of made these definitions, I've made them in a way so that other researchers can use them and build on them and it's slow, things go slow in academia. But I mean, this is actually happening relatively rapidly as academia goes where we're seeing all of these sort of issues that were really kind of articulated by the Ethereum community around sort of the EIP 1559 discussion. We're seeing those become really formal concepts that an academic research literature is going to be built around over the next several years. So that's just sort of a really cool thing. We're really seeing kind of the practice influence just kind of the academic research which is really cool. All right, so back to EIP 1559 and these three kinds of guarantees, right? Robustness to manipulation by users, robustness to manipulation by miners, robustness to cartels.
00:32:15.910 - 00:32:59.106, Speaker A: So the good news is it has complete robustness against the latter two things. So in fact, because base fee revenues cannot be manipulated by the producer of the current block and because those base fee revenues are burned, it is the case that block producers have no incentive to deviate from their intended behavior. In EIP 1559, the expected behavior of a miner is just to pack a block as full as possible with eligible transactions in a way that maximizes their tip revenue. That's exactly what block producers are in fact incentivized to do. So that's great. And then it's also OCA proof. So it's also robust to collusions between miners and users.
00:32:59.106 - 00:33:59.786, Speaker A: And for this to be true, it's totally crucial that the base c revenues are burned. Otherwise, as we discussed, you would actually be manipulable by cartels of this form. Another fun fact is that if you were someone who was just like a big fan of the burning aspect of VIP 1559 you cared about so called ultrasound money but nothing else, your first thought might be let's just keep the first price revenue but actually burn some fraction of the revenue that it generates. That also fails miserably. And it fails miserably for the same reason because cartels of block producers and users can actually basically steal money from the protocol and keep it from themselves. So really the two biggest things about EIP 1559 the ease of fee estimation offered by the base fee and the kind of reduction in inflation caused by fee burning, you can't have one without the other. They're really inextricably linked in a game theoretic sense.
00:33:59.786 - 00:34:51.030, Speaker A: So that's just sort of worth remembering. All right, so that's great. And now the final thing. What about the traditional goal of truthfulness where it should be sort of trivial for participants to sort of figure out how to bid? And here EIP 1559 isn't perfect, but it's still very good. So I mentioned when I talked about tips, the emergency backup first price auction, that basically it should play effectively no role except in these transitory periods where you have these sudden demand shocks and the base fee is just way too low and needs some time to sort of catch up. And indeed, you can prove a theorem which says unless you're in one of those weird transitory periods where the base fee is just like crazy low, unless you're in one of those sort of demand shock periods. In fact, it is obvious to figure out how you should bid in EIP 1559.
00:34:51.030 - 00:35:23.358, Speaker A: So there's two parameters you have to set as a user. You have to set the tip and you have to set a fee cap. Fee cap is just the maximum you're willing to pay overall between the base fee and the tip combined. And so the obvious bid is you set the fee cap to your maximum willingness to pay, which would be sort of your bid in a second price auction. If you can run a second price auction, sort of same idea. And then the tip should just be whatever minimal nominal amount is sort of necessary to encourage miners to include a transaction as opposed to leaving the block empty. And again, two to three GWe seems like sort of a reasonable amount for that tip.
00:35:23.358 - 00:36:10.318, Speaker A: Okay, so just to sort of recap the report card. So the status quo had been first price auctions, which on the one Elect conceptually were sort of unsatisfying because they made no use of the idiosyncratic advantages of the blockchain setting. They were robust to manipulations by block producers and by cartels. That was good, but it's very cognitively difficult to figure out how to bid in them. So there's never a situation in which it's easy to figure out how you should bid in a first price auction. It doesn't matter if demand is stable or not, it's really just never easy to figure out what you should be biding. And so EIP 1559, in making this big set of coupled changes, it retains the robustness to miners and robustness to cartels.
00:36:10.318 - 00:37:09.186, Speaker A: It has those properties for quite different reasons than a first price option, but it does have both of those two properties. And also in normal operation, you also have that third property that we really want, that we had a truthful mechanism where there's an obvious bid, it's kind of trivial to figure out how you should participate in that first price option. There is this usually qualifier because again, you lose the truthfulness condition if there's a sudden demand shock. And then the design is also sort of very satisfying in that it really does take advantage of the two sort of things we had going for us in the blockchain setting. It heavily uses the past that's in order to tune the base fee over time, and then it heavily uses the programmatic control over where transaction fee revenue goes. As we saw, it really needed to be burned or otherwise withheld from the block's producer. In my work, I've also pointed out a variation of the mechanism which I like to call the tipless mechanism.
00:37:09.186 - 00:38:05.138, Speaker A: And this is basically where you replace the tipping system just with a hard coded tip that goes from the submitter of a transaction to the producer of that block. And if you do that, then if you look at the EIP 1559 report card, it moves the usually from the third term to the second term. So it's also always robust to minor to block producer manipulation for the tipless variance, where it's not user specified, where it's hard coded in the protocol, what the minor tip is, it's actually always truthful. Doesn't matter whether or not you're in a time of demand shock, but in a time of demand shock, you do lose this robustness to cartels. You do lose OCA proofness, not in normal operating conditions, but in these transitory periods. That's where you sort of pay the price instead. So those are two mechanisms that you might speculate that they're on the pareto frontier in the sense that they almost get all three properties.
00:38:05.138 - 00:38:41.838, Speaker A: There's one property they once in a while won't have. And those two mechanisms sort of choose different guarantees for which one to give up on in these sort of unusual demand shock periods. But any good builder and any good researcher, you're greedy, you always want more. Whatever you prove for some mechanism, you want to know is there a better mechanism that has even better? Like we have these three things we want. Let's have it all. Let's have all three properties all the time. And so I wanted to advertise a kind of very exciting theoretical result by Hao Chung and Ling Xi at CMU.
00:38:41.838 - 00:39:29.486, Speaker A: This, I notice, is not on the program today, which is too bad, because this is a really nice paper. And among many other things, they prove formally an impossibility result, showing that there literally does not exist. So the reason we have these usually is not because the community hasn't been smart enough, it's because it's fundamentally impossible to not make those compromises. There literally does not exist in a mathematical sense. There does not exist a transaction fee mechanism that always in all cases has all three of those guarantees robustness to users, robustness to BOC producers and robustness to cartels. So compromises like the type that we see in EIP 1559 or the tipless variant that I mentioned, they are inevitable. They are provably necessary.
00:39:29.486 - 00:39:54.300, Speaker A: Okay, so this paper is on archive. I encourage you to check it out. It's really nice work. All right, so this is my last slide. Let me just say a little bit about open directions, which then could segue perhaps into the Q A session. So what is there to be done? Well, there's a lot to be done. Pretty much no matter where you look in the blockchain world, there's just an enormous amount of hard and important work that still needs to happen.
00:39:54.300 - 00:40:39.382, Speaker A: So one thing I didn't talk about at all is the formula by which the base fee is increased or decreased if the recent blocks have been too big or too small, respectively. And so the EIP 1559 spec, it has a specific formula that's used. So basically it's a max change of twelve and a half percent in either direction and you just sort of linearly interpolate depending on how the block size compares to the target of 15 million gas. I think everybody would agree that that's fairly arbitrary. I mean, I think it's a perfectly natural sort of place to start. I wouldn't have necessarily launched the mechanism with anything different. But I also think it's clear that the community should refine our understanding of this choice over time and in particular maybe tweak it a little bit.
00:40:39.382 - 00:41:24.898, Speaker A: One thing, I'm very interesting to see how it plays out. If you look at the you can find these charts about the evolution of the base fee over time and it's a little choppy, it's kind of thing. I think maybe a priori one might have hoped for expected a little bit of a smoother kind of evolution of the bass speak. Whereas you see these twelve and a half percent jumps actually fairly frequently. Now what I'm super curious so there's something I'm super curious about and once the merge happens, I'll know my answer. So I'm very excited to see how this plays out. One conjecture would be that the primary cause for the current choppiness and base fee evolution is in fact the variability in time between consecutive blocks.
00:41:24.898 - 00:42:06.118, Speaker A: And this is really a consequence of the proof of work civil resistance that the original ethereum has always used. Right? It's a poisson process for when sort of a crypto puzzle gets solved and someone gets to publish a new block. And so while it's tuned, so that on average you'll see a block every 13 seconds. Sometimes you'll see two in rapid successions, sometimes pretty frequently there'll be a 32nd gap between consecutive blocks. And if there's a really long gap between consecutive blocks, well, in the meantime, even if demand is normal, a ton of transactions may have come in. And so all of a sudden, you're going to have this super big block after 30 seconds. In effect, making up for the fact that you were missing a block 13 seconds ago.
00:42:06.118 - 00:42:43.786, Speaker A: And so it's unclear to me right now whether the choppiness in the base evolution is primarily caused by variability in block production or if there's really sort of an issue with the update rule. So with a merge going to proof of stake there, you're going to have fairly regular block production. It's going to be basically once every 12 seconds. You will have people missing their slot presumably once in a while, so that'll lead to sort of the similar bursts. But I could easily imagine that things will smooth out automatically post merge. If they don't, I think then that would be a really interesting thing to iterate on. Okay, so next open direction.
00:42:43.786 - 00:43:44.862, Speaker A: This is something I talk about actually at length in my long public report about IP 50 59, which is sort of understanding the prospects of long term collusion by block producers. Like you might be worried about block producers keeping the base fee low over time by sort of publishing sort of smaller blocks periodically than they should. And so in my paper I draw an analogy to sort of sustaining collusion in the repeated prisoners dilemma. But it's fairly anecdotal I would say, in my work and it's really something which you should be able to have a formal game theoretic analysis around and so I'd really love to see someone carry that out. I'm very excited about the development this year around multidimensional EIP 50 59. Oh, I should have said on the first point on the point of the update rules, there's a talk in the afternoon a little bit later by Stefanos Leonardos and so that's a good place to sort of get an intro to dynamics around the base fee update rule. That's one of the main points of that talk.
00:43:44.862 - 00:45:03.690, Speaker A: Multidimensional EP 1559 that again, there's a talk later today by Ensgar Dietrich. And this is definitely I think this is a really natural and interesting evolution of sort of the basic EP 1559 where you have multiple resources that you're trying to price. At the same time, I think there's really interesting theoretical questions about to what extent should the different dimensions interact with each other. As soon as I get a little bit of free time, I'm definitely planning on spending some time thinking about this. I think this is a really nice direction. And now just to tie this back to sort of slide number one where I tried to sort of situate this sort of work in ethereum transaction fee mechanism design in the broader mechanism design context, transaction fee mechanisms have been a great excuse to really drill down and think hard about what should a theory of mechanism design look like at the consensus layer? And I think some of what we've learned is specific to it being layer one, to it being the consensus layer. Some of what we learned, I think is true much more broadly up and down the think, you know, moving forward over the next year or two, I would love to see many people thinking seriously about mechanism design higher up the stack.
00:45:03.690 - 00:45:40.460, Speaker A: So, for example, interactions between layer twos and layer ones. So Barnaby actually, Barnaby Mino just had a nice write up about the economics of layer twos a few weeks ago. I would encourage you to start there, to start to start reading about how the two layers might interact. For example, layer two is going to be responsible for sort of paying for call data published at layer one and sort of how should that be handled kind of inside the way pricing is done at layer two. Really interesting question, I think. And then there's no question at the application layer. There's just tons of opportunities for mechanism design.
00:45:40.460 - 00:46:40.794, Speaker A: But for example, some of the issues at layer one percolate up this idea of kind of block producers sort of manipulating the allocation, that basically the same issue that manifests itself differently at the application layer through what we call mev, through extraction of value by block producers. So those are all there's an enormous amount of work to do in mechanism design, both specific to Ethereum. And I think because the problems that are rising in Ethereum are also sort of so fundamental, they're forcing us to kind of come up with solutions, to come up with mathematical definitions that are relevant kind of much beyond Ethereum, certainly to other blockchains, but even perhaps more broadly than that. So that's a big part of the reason why I'm having a lot of fun just spending a lot of time thinking about mechanism design in this context. So let me wrap up there this way. We have a good ten minutes for Q and A. And again, let me apologize for not being there in person.
00:46:40.794 - 00:46:51.760, Speaker A: I would have loved to meet so many people I know only from Twitter, would have loved to meet you in person. But we do what we can given the circumstances. So I'll stop there. Happy to take questions. Thanks very much.
00:46:58.550 - 00:47:25.266, Speaker B: Thank you, Tim, for the very nice talk. I think we're all meeting a lot of our Twitter friends for the first time as well, and we hope you were here. But next time we'll have some time for questions. We have two microphones that are going around the room. Just raise I see one here. Hello. So on your slide you say MFV aware mechanisms design at the application layer.
00:47:25.266 - 00:47:28.280, Speaker B: Could you name like a hello world over that?
00:47:31.490 - 00:48:41.906, Speaker A: Let's see. Well, there's a lot of this happening in sort of, I'd say in sort of research discussions, right? So one example would be work done by Angaris and Chitra and Evans around basically having automated market makers in effect reshuffle the ordering around trades. So if you have access to reliable randomness at the consensus layer, then you can play tricks where you basically make it much more difficult for block producers to figure out how an ordering of transactions would benefit them directly. So that's kind of an example of a specific solution. I mean, there's definitely other specific solutions that people are thinking about, like so called fair ordering consensus. I'm not aware of anything in production which I would really necessarily call this, and I also think we don't have a mathematical definition of what this means exactly. We have these couple of examples, but I think we don't yet have definition 1.1
00:48:41.906 - 00:48:50.118, Speaker A: about robustness at the application layer to block producer manipulation. I think that's doable. I just don't think it's been done yet.
00:48:50.284 - 00:48:51.782, Speaker B: Okay, thank you very much.
00:48:51.916 - 00:48:53.240, Speaker A: No, thanks for the question.
00:48:56.890 - 00:49:11.820, Speaker B: Hi, Tim. So other than transaction fee mechanisms and these mev aware mechanisms, are there any other mechanism design stuff in blockchains and around blockchains that you've been looking into and find interest in?
00:49:12.850 - 00:50:29.362, Speaker A: Yeah, I guess I've been thinking more about the application layer lately. I don't have anything mind blowing to report, but when I see extremely poorly designed NFT drops, for example, my Pavlovian response is to start thinking about what's the right way to do this. For example, I've thought a fair amount about AMM design automated market makers, which just kind of like what would be a notion of optimality for automated market makers? How would you argue that one choice of a trading curve would be different than another? It's a slightly different problem. It's a little less about elicitation, and it's more about kind of a more narrow problem, but still, it has the flavor of mechanism design. So, yeah, those are some of the things I'm looking at. I would say even in putting together this slide, I was reminded that it would be fun to go back to the lower layers for a little bit. Again, I think the sort of pricing multiple resources at layer one I think is a great question.
00:50:29.362 - 00:50:35.720, Speaker A: And this L one, L two interaction, I think is also a great question. But I haven't had a chance, really, to think about either of those very deeply so far.
00:50:36.650 - 00:51:05.598, Speaker B: Hi, I wanted to ask something a bit beyond the scape of your talk, I guess, but I think blockchains have a real image problem, and I'm aware that is a problem that persists across a lot of academia as well. So I'm really interested, as an academic from established academia background, is that changing? What's your experience of all of that, and how should the community approach that problem?
00:51:05.684 - 00:51:49.374, Speaker A: I guess that's a great question. Yeah, this is exactly the kind of question why I thought it would be good to leave a long Q and A thing for it. I agree with you. I definitely wouldn't generalize. There's a wide range of opinions in academia, sort of among academic researchers about this space. There's plenty of people that are big fans. There's plenty of people that are neutral and as you say, there are plenty of people that are fairly hostile and in a way that I haven't necessarily had to deal with directly myself in my previous work.
00:51:49.374 - 00:52:51.122, Speaker A: So it is sort of a new aspect of the challenge. And certainly I view just because at this point I'm fairly senior and so on, so I do regard part of my responsibility as not just leading by research but also education, making sure people understand what does this technology actually do and just trying to focus on the image problem. I do think about this quite a bit. Let's see. So what concretely can I say? Okay, you asked if it's improving. I would say what I'm really encouraged by is I'm seeing all of the foundations being laid which will inevitably lead to it improving. So like, if you literally sampled computer science professors now versus 2020, I'm not sure you would have any more enthusiasm or any less hostility now than you did two years ago.
00:52:51.122 - 00:53:37.886, Speaker A: So in that sense, I think there's still a lot of work to do. On the other hand, honestly, the number one thing which would really be a game changer would be sort of breakthroughs at the application layer. Now, the breakthroughs at the application layer may require breakthroughs at the infrastructure layer, right? So you may need, for example, great scalability solutions before you can really sort of enable what are going to be the sort of world changing applications. But once we have those, it's not a foregone conclusion we will. But I personally do strongly believe that just the functionality you get from Blockchains is sufficiently unique that there's no way that all of the smart people in the world are not going to figure out amazing things to do with it. That's my belief. It's a belief.
00:53:37.886 - 00:54:28.210, Speaker A: It's not a fact, but it's a belief. And once we see those big changing kind of applications where everybody knows what they are, everybody uses them, everybody thinks their life is better because it exists and they really wouldn't want to go back to a world of 2005 when those options weren't available. At that point, people become very willing to overlook the problems, right? Because an analogy I keep going back to over and over and over again, but it just serves so well is the internet. So I did this briefly at the beginning of my talk, right, where I said there's very little mechanism design in the plumbing of the internet, whereas it's so cool that there is in the blockchain world. And honestly, I don't know how old you are. I'm 46. So I started using Internet in college in the mid ninety s.
00:54:28.210 - 00:55:40.834, Speaker A: And I got to tell you, you could not really find non nerds that had good things to say about the Internet in the mid ninety s. I mean you could sort of send emails, you could transfer files. Static web pages had just been invented. If it ever showed up on a TV show, it would just be to sort of say how weird somebody was that they use the Internet. Other people in my generation will probably claim to not even remember this era, right? Because at this point, any random person you pick on Earth, they'd be like, oh my God, what would I do without the internet? It's like inconceivable, right? I think the hard version of your question is how do we work on the image problem before having the big breakthroughs of the application layer? Because honestly, I do feel like those may be I don't think that's 2023 that we get the big breakthrough. I mean, we make progress toward it, I'm guessing, but I'm thinking more five, even eight or even eight years or something before it's really obvious to almost everybody kind of what the applications are. So before that time, my first answer to the question is long time frame.
00:55:40.834 - 00:56:53.162, Speaker A: As long as the application stuff works itself out, which I believe it does will, just seeing how many smart people are sort of working on this, I think it'll sort of take care of itself prior to that. The thing that I really try to hammer on, especially when I'm talking to sort of computer science researchers, and frankly, this is clearly going to have to hammer on this for a really long time. But somehow it's sort of a testament to the power of first impressions, right? Because most people's first impression and second impression and third impression of this technology was kind of as a currency, right? In some sense, you go back to the Satoshi Nakamoto white paper, and it really did seem like it was part of their primary motivation may have really been to have a digital currency that could seriously compete with fiat currencies. That may well have been Nakamoto's primary. So this focus on cryptocurrency as currency has ever since really dominated the conversation. And my view is that maybe cryptocurrency winds up challenging fiat currencies. I don't know.
00:56:53.162 - 00:57:45.018, Speaker A: But that is not a prerequisite for the massive success of this technology, of the complete takeover of the Internet by blockchain enabled applications, cryptocurrency. It's going to keep existing just because it's so convenient, like from an implementation perspective, like to have a native currency, like either in your L one, or if you have sort of an application layer ecosystem, you want to sort of incentivize people to contribute and want to maybe charge for usage. You could imagine doing that not in a native currency, but man, is it convenient to do it in a native currency. But it's very easy to imagine a world where everybody is using kind of web3 applications, nobody even knows there's a cryptocurrency under the hood, but there is a cryptocurrency. And that's what helps sort of make everything work the same way that a typical use of the Internet has no idea that there's congestion control, that there's some algorithm sort. Of controlling sort of how fast they can send traffic to the Internet. They don't know that they're just using the Internet.
00:57:45.018 - 00:58:35.870, Speaker A: And so I could imagine cryptocurrency in the end being totally under the hood or not. Bitcoin obviously, it seems pretty stable as a store of value. I don't know if you'd call it a currency per se, but you'd certainly call it an asset in a very legitimate way. So I don't want to limit the impact of blockchain technology just to applications where the currency part is hidden, but that, I think, is inevitable. That's what I'm kind of betting the farm on, right? Even if cryptocurrency fails in the sense of Nakamoto, still, blockchain enabled technology will take over the world. That I believe very strongly as far as how much will it change kind of the way people do, how will it change kind of where people store their store value? That I think will be interesting to play out. I could see that going in a lot of different directions.
00:58:35.870 - 00:59:36.040, Speaker A: So in the short term, what I'm really trying to do is when I talk to computer scientists, I try to get them to not think about digital currencies per se, and to think about the remarkable, novel computing functionality that this technology enables. So I say think of it as a computational model. In the implementation of this model, this virtual machine that lives on the Internet, in the implementation, there may well be these currencies that you've heard about, but I do not want you to focus on that. I want you to focus on this is what the technology enables. What can we do with it? How can we make that as robust as possible? So how can we make the virtual machine sitting on top of the Internet as fast and as kind of reliable as possible? And how can we take the functionality that it gives us and design really amazing things on top? So I have to say, it's very hard to get people to turn their attention away from the payment currency angle, but that's what I'm trying very hard to do these days. Thanks for the question.
00:59:36.490 - 00:59:37.046, Speaker B: Hello.
00:59:37.148 - 00:59:37.462, Speaker A: Yeah.
00:59:37.516 - 00:59:44.040, Speaker B: Thank you, Tim. We won't have time for more questions, but thanks again for the talk. Let's give a round of applause to Tim.
00:59:46.250 - 00:59:46.740, Speaker A: Thanks, everybody.
