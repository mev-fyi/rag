00:00:05.280 - 00:00:55.030, Speaker A: First I'm Lee. My discord handle is Altourell. You can find me on metrics discord. And also I came here initially through flipside, so I'm there quite often as well. So first I'll just start a bit with a little bit of introduction and motivation and goals for this series and then we can kind of go through things and see how it goes. So first, this series is a bit different than the ones previously. I'm hoping it to be more interactive and kind of I guess a learning experience, almost like a little mini course.
00:00:55.030 - 00:01:36.930, Speaker A: Not saying that the other ones weren't, but just saying that I'm not an expert in these topics. I'm learning as we go with everyone else. Maybe I just have a slight bit more experience with some of these things. So yeah, I'm hoping that we can all interact with each other and talk on discord or during the sessions and I'll be learning. So some background for me. I'm a python coder and kind of self taught and self taught data scientist. So I have experience using python tools like pandas and Matplotlib and Jupiter and all that stuff for a few years now.
00:01:36.930 - 00:02:14.730, Speaker A: And then kind of over the years I looked at some different packages like Streamlit and Altair, which we're going into this course because I want to. Matplotlib is great. You can make a lot of visualizations, but they're static images for the most part, or to make them interactive, it's a pain. And Altair lets you make really cool interactive things. Like the first time I played around with it I was amazed. You can do a few lines of code and then run it, and then your figures let you zoom in and hover over things and you can see what's happening. It's cool.
00:02:14.730 - 00:03:21.800, Speaker A: For a non web developer, my path to here I guess is I've been doing data science. Then a few months back I saw flip side crypto bounties. I can't even remember how I got started there, but I have no SQL experience or anything like that, or JavaScript or anything. But I learned some of that stuff to be able to at least attempt to make bounty submissions. And then over time I started using, instead of just using the dashboarding tools they have, I wanted to do a little bit more analysis and since I'm not good at SQL, I switched to Python. So I was doing a lot of analysis in Python and then taking screenshots or stuff like that and posting it in a dashboard on flip side. Then I was like maybe I should go back and learn other tools that Python has to make dashboards and make it a little bit nicer.
00:03:21.800 - 00:04:33.252, Speaker A: So that's my goal here with this course. My motivation is to kind of go from these, uh, more, um, I guess the default tooling there are on sites like flip side and Dune, which is great. But if you want to do, uh, if you're not a SQL expert or if you want to do more complex or custom things, uh, using something like python or other tools, um, helps you, uh, helps you do a bit more, um. Yeah. So, uh, the goal for this is to learn something new and improve bounty submissions and then have some sort of community or interaction that we can, other people can learn together and all try and level up our bounty submission skills or just learn something new. And even though this stuff is initially for looking at crypto data or anything like that, it's all relevant to other sorts of data analysis. Pretty much any sort of data can be visualized and used in the same way.
00:04:33.252 - 00:05:45.242, Speaker A: So it's great for other career building activities too, and hoping to hear any suggestions or discussions as we go along and either in the sessions or on discord in between the weeks. So yeah, that's all I have for the intro right now. Does anyone have any questions or comments or anything they'd like to say before we get started? And I'll be looking periodically, at least at the workshop's discord channel. But yeah, you can also just unmute yourself and say something if you have any questions or comments. Cool. So I'll start with going through the first notebook and it looks like you can still, let's see, I'll zoom in a little bit. Whoops.
00:05:45.242 - 00:06:27.646, Speaker A: Zoom in a little bit more. Maybe it's a little bit small for you. Okay, cool. Yeah, so going back to, I guess kind of what I said before, like I, like I played around with these interactive visualizations, but never kind of dove into actually learning how to do it. So I feel comfortable to do it without basically, without googling every single time and to figure out how to even do basic things. So there's this course. So the first few weeks of this course, I guess I'll go into some of that.
00:06:27.646 - 00:07:53.360, Speaker A: The first few weeks we're going through this data visualization curriculum, which is created by University of Washington and it's all free and open source and you can just play around with these notebooks and it's pretty great. All the, everything, it's kept up to date with the latest version, so all the documentation and code works still, even though it's a few years old now. So yeah, I saw this and just kind of been putting it off for a while to actually go through it. So yeah, now why not do it with try and get a bunch of people to do it all at once so then have some, I guess, people going through it together and a reason to continue. So after and then after the first few weeks of going through this course, we'll do a overview of getting started with streamlit or right now that part is. We'll announce some more details in the coming, probably next week or the week after, definitely with enough time to prepare for what that part of the course will be. It's still in the works, but we'll start with this data visualization curriculum to go through everything.
00:07:53.360 - 00:08:50.792, Speaker A: Altera works basically by. It works really well with pandas, which is the python, I guess, data frame library. So it makes it really easy to like load pandas data frame and interact with, and use like the column names and that sort of thing to create your figures. So I'm just going to go through, and the intro notebook kind of just goes through an overview of some basic things. It has a bunch of links on if you want to read more on how Altair works. And a lot of this thing will be going into details later. As a side note, all the docs on Altair are pretty good.
00:08:50.792 - 00:09:44.654, Speaker A: If you google things, you can usually find some good answers in the docs. And then there's also quite a good amount of user feedback. Or answers on stack overflow or GitHub are really useful if you're trying to grab something and can't figure out how to do it. So I found it pretty good for being a relatively new library to have support. So we'll just do the first graph, or the first part is just kind of loading in the data. So it's nothing specific to Altair, so we'll just skip through it quickly. And one thing to know about, um, that's as mentioned in this, um, uh, this notebook is the way you want to set up your data.
00:09:44.654 - 00:11:04.520, Speaker A: It's called a tidy format or, um, sorry, let me pull up my note. What, what they use for the other term, um, uh, tidy or uh, long form as opposed to wide form. And that just makes it easier to, for, to work with Altair. Either way works for, you know, having your data frame to store your data. But if you're working with data in Altair, having the long form is easier where it's one row per observation, where wide form is one row per independent variable and an example would be if you're looking at stock price data for a bunch of different stocks in a long form data set, you'll have something. The columns would be like date, company, and price. Each row would be like one pair of, one observation of this company's price on this date.
00:11:04.520 - 00:11:57.512, Speaker A: Excuse me. And wide form would be something like, there'd be one, there'd be a date, price columns, and then also one column per different company. So if you were looking at a few different companies, you'd have like company, one company, two as different columns. And there's some links here in how to, to go back and forth between the different data types or data frame formats, I guess, if you need to, when you're going through your data. So the first thing is, it's just looking at. The first example is looking at some weather data in Seattle, and that's where they're based. And it goes over the basics of how to set up a chart.
00:11:57.512 - 00:12:37.010, Speaker A: So this chart object is the main, the main thing you'll be working with. You just set it out by calling a chart. And then you have the source of your data, or your data as the argument to the chart object. And then you use these various mark, I guess, attributes of the chart to actually do your plotting. And it goes through. Starting with, you can just chart the most basic thing, which is all the points in one location, which is not very useful. Then you add some x and Y.
00:12:37.010 - 00:13:15.292, Speaker A: You encode it with the X and Y channels, is what they call it. And we'll go more into details of what the channels are. So then you have actual, the data is actually usable. And you can see the different information. Like these are the different rainfall amounts during different times of the year. And you can see that seattle has both the highest and lowest amount, which is a little bit interesting, this one. And you can use this like x parameter, or you can also.
00:13:15.292 - 00:14:04.330, Speaker A: So X equals whatever. Then you can also use these alt X, Alt Y. And you'll see later that this allows you to have a lot more options on, like what you can do. For example, if you don't want to have it show precip on the x axis label, you can make it go away or change it to whatever you want. And then when you load data from pandas, it can infer the data type properly if you load it from other sources. So you can load it from JSON or URL or something like that. You need to tell Altair what data type you're looking at.
00:14:04.330 - 00:14:53.580, Speaker A: And we'll go over that in the next notebook a little bit more. There's different types like nominal, um, ordinal, quantitative, temporal, those are the different types. Um, you can also aggregate your data. So right now we're doing the same thing, but now we can show the average quite easily by just doing the, uh, there's a few different, uh, aggregation functions built in. So you just kind of use a, so these are just strings of the, the name of the column in, in your data frame. And then you can also put like these different functions around the name and it will do the aggregation function for you. So instead of encoding a point, you can also encode a bar to do the same thing.
00:14:53.580 - 00:15:33.820, Speaker A: And if you switch around which column is your x and Y, it will make it horizontal and vertical. And excuse me, there's a lot of customizations you can do. And this is just an example. You can tell it what scale to use. So if you want to use log scale, you can tell it, give the axis a different title. Like this is showing log scale values. You can give the points, different colors and all that sort of things as you would expect from a different library that lets you make visualizations.
00:15:33.820 - 00:16:27.366, Speaker A: And then if we want to show the line graph, you can a line graph with the points. So right here we're just showing the average of this data set for each year in a line. But we can also show the points overlaid over that using these shorthands. For if you do a two different alt charts and use a plus sign, it overlays them on top of each other, which is quite convenient. And then this is some more, I guess, more convenient ways it shows you how to do it. Instead of having to copy and paste a lot of the stuff, you can just also add a different, use the same alt char object, but just mark a different symbol. And that's quite convenient.
00:16:27.366 - 00:17:23.350, Speaker A: There's concatenation. This lets you do either use this, I guess, pipe to make them horizontally concatenated. You can also change it to do vertical concatenation using the ampersand sign. And something you can get quite easily if you want to. All you have to do is add this interactive method and then it automatically lets you get this scrolling in, scrolling out, moving, zooming, panning, that sort of thing. And using tooltips is another, it's quite simple to do that. This tooltip is just listing names in the pandas data frame and you can hover over each point and then you get some, some information on that.
00:17:23.350 - 00:18:44.220, Speaker A: Um, and this will, well, this is a more complex graph, just kind of showing what you can do um, where, uh, cool, cool, sounds good. Um, yeah, so this uh, yeah, so since this is an intro notebook is just kind of showing some of the features, you don't need to understand all, all of this right now, it'll start making more sense later. And they do have some good docs if you want to go into it in more detail. So it lets you make this really simple amount of code to do this kind of complex graph of, you can highlight different years using this histogram and then it overlays onto this scatter plot of different points. So that's quite cool to make relatively complex things with a relatively small amount of code. And then this is just showing that all this Altair code and plots are basically using this Vega lite JSON format. So Vega and Vega Lite are a JavaScript based, I guess, visualization library.
00:18:44.220 - 00:20:23.810, Speaker A: Since I don't really know JavaScript, I don't really know much too much details on that, but it does output this to all your figure into JSON, which is then used by the renderers to plot your figure. And yeah, just skip over that, but we can just see that it stores the different information like average that you want to do an average of this field and you can save your char as an HTML file which then can be loaded as long on any browser that has access to the JavaScript because it does have to download some JavaScript packages to visualize it. And yeah, that's a basic overview. Any quick questions for now and then we can move on to the next notebook afterwards. And yeah, we'll start going into more details as we go along. Cool. Yeah, so maybe I'll get started with going through the second notebook and then we can, yeah, take any questions as we go.
00:20:23.810 - 00:22:02.658, Speaker A: So this one, so now we are going more into details on the different types of marks and encoding that Altair has and looking at different ways of visualizing things. Let me just start by running the intro stuff. Yeah, so we're looking at this, the example they're using is this global development data, which has some information on year country, a cluster column, the population of that country, the life expects expectancy of that year in fertility, which I believe is the number of children per women in that year. Since it has data for a bunch of different countries in every five years, they are doing, the first thing they want to do is first thing we want to do is create a subset. So we're just looking at one year, so 2000 for example, and this is just using pend, the, I guess normal way to subset a dataset using pandas. And I found this is a really good overview of different types of data that you would want to visualize. And these are also encoded in how Altair works.
00:22:02.658 - 00:22:38.840, Speaker A: So nominal is just kind of like names with no, like, no ordering. So, for example, this, in this data set, it's country. There's no, like, greater than or equal to. You can just tell whether the country one is equal to country two. And you can do different things like use position, color, and shape to kind of differentiate between them. And ordinal is like a year field where it has. It's a.
00:22:38.840 - 00:23:13.646, Speaker A: It's a value that has a specific order. So ordering matters in how you present it. Or you can tell, like, one item one is greater than or less than item two. And quantitative is kind of what you expect that to be. It's like numbers with all the different operations you would expect on them. So that's like, if you want to plot life expectancy or fertility for each year, that those would be. Those would be quantitative data types.
00:23:13.646 - 00:24:31.902, Speaker A: And temporal is a, I guess, a specific type of a quantitative value where it's a string, or I guess it could be a number, but that has a bunch of different features to use for dates, such as you can get time differences and figure out the month or year from a string, like 2019, one, four. So it just adds some extra features that may be useful. And we'll start by going through the different encoding channels. So the term channel is kind of like different, like, I guess, features of the chart. So you have your x and y axis, which are kind of, I guess, what you expect in a graph. Then you can also use different things to. So each of the marks or points on your figure have, these have a value for the different channels that altair presents.
00:24:31.902 - 00:25:40.102, Speaker A: So xy coordinate, then the size, color, opacity, what shape you want to make it. And then there's a tooltip, which helps you with the interactive visualization and getting information on there, and then the ordering of the different marks. And then we'll go into faceting later. You can make a multifaceted graph instead of just overlying different, different marks on the same one. Okay, so first is just doing some basic things, showing that we can plot the x and y of these different fields. Um, uh, and then we can see what happens if we swap the o and the q, just to show what happens if we make this kind of, um, this cluster, which is nicely divided into seven different numbers. And then fertility is kind of like floats, like it's a continuous range.
00:25:40.102 - 00:26:48.722, Speaker A: And if we swap them, it kind of looks, uh, looks weird where it has like each one of these small, each one of these specific values is treated as like a category and look quite strange, at least on the x axis. And if you want to do a scatter plot, you just plot two quantitative variables against each other. And sometimes you don't care about showing the zero in the axis. For example, life expectancy, you don't like the average life expectancy wouldn't be zero, so you'd kind of want to just show around the minimum. So if you use this alt scale, you can get rid of the zero in that axis. Now we'll go into size encoding. So you can also encode each of the points using a size.
00:26:48.722 - 00:27:57.216, Speaker A: And this is saying use a population column of your data frame and kind of divide that up into different size ranges. And by default it can come up with the, it does it for you. You can also set which scale your size range by something that makes it look a little more meaningful. So here you can kind of see the differences in population more clearly. When we, we pass in this scale with a, with a range, we can add another, another channel, which would be color here, where we're also labeling what the cluster in the same plot. So we're now showing the sizes of various different populations, and the cluster is marked by a different color. And sometimes you don't want, sometimes you might want it to be filled in so it looks a bit nicer.
00:27:57.216 - 00:28:53.030, Speaker A: You can do this filled equals true. And a shortcut thing is also to do mark, I think it's marked circle and oops, because it's so common. They made a kind of short, sorry, extra parentheses problem with live demos there. So then, yeah, it's just a convenience. Instead of filled equals true and a marks point, you can do mark circle now where you can also change the opacity. So if you want things, you can set that by using this one for every single value. It kind of does some things by default when there's points overlaying each other, like you can see in this previous figure, but you might want to set it yourself.
00:28:53.030 - 00:29:44.950, Speaker A: And it goes into redundant encoding, which is using two different channels to show the same, same, different, same column. So here we show cluster with both a different color and a different shape. So there's two ways to identify it, which may be useful. And in general, maybe we just want to show shape as different things. So alt shape is another channel we can play around with. And now we'll start doing some more interactive things. We can see hover over the points and get the country name right now using this alt tooltip.
00:29:44.950 - 00:30:31.420, Speaker A: And right now the, I guess, larger circle that represents India is covering the smaller circle. So we can't hover over that and see what's there. And that's where the order channel comes in, where we can use alt order and it's ordering the population in descending order. So now the smaller point, smaller mark, I guess, is on top of the larger one. And we can see both of them. And tooltips are great since you can basically just say, I want instead of just one tooltip, we can give a list of tooltips. So now each, now when you hover over, you see a bunch of different information for each tool, each point that you hover.
00:30:31.420 - 00:31:29.790, Speaker A: And instead of having all the different clusters in one plot over here, one thing you can do, instead of just overlaying the data in one plot, you can use facets. So that's where column and row facets come in with Altair. Right now we're. So this is now showing, and one way to call that is a Trellis plot, which has a different, so this cluster channel is used. So each value in there is used to make a different column. And you can see that zero is all in this one. And then as if you scroll over, you can see continuous thing that each cluster has its own, I guess, mini plot or subplot.
00:31:29.790 - 00:32:07.990, Speaker A: And there's features you can use to customize it since this is very hard to kind of see. And you have to scroll over and there's some redundant information with this. It gives you some more details on how you can make it look nicer. So, for example, the properties is a very useful thing. You can set the width and height of the plot. So we make it nice so that it fits into your single screen. You can also move the legend.
00:32:07.990 - 00:32:50.040, Speaker A: So anywhere, any column, sorry. Here you see an alt size, you can use this legend parameter and move it to the bottom and put it on the left. You can also get rid of the legend by setting legend equals none and that sort of thing. And these are all things like over time, when you're making, actually making your own figures, you'll want to do something and can't remember how. And you can always. Yeah, a lot of times I refer to this notebook or on their documents page, they have a gallery of different things. And I always go back and refer to those to get information on how to do things.
00:32:50.040 - 00:33:53.972, Speaker A: And some of these, I think if you use a text editor like versus code or maybe even in Jupyter notebook, you can start typing and it might auto complete the different fields you can use like legend. If you start typing that, you can get some information there. And this is showing a more, more advanced figure, just showing the features of what Altair can do. And over time, well, I think in the interactive notebook that we'll go over in a week or two, it goes into more details on these things. So now it's just showing, instead of looking at just the year 2000, we can now actually say select which year to use. And now we get all the interesting information where you hover over and see what's available for that year. And if we want to just kind of play around and see how it looks like it's shifting over time, we can do that.
00:33:53.972 - 00:35:09.706, Speaker A: So these are very cool for dashboard to see how to let the user select what they want to look at and see how things change. So mostly we've been looking at points or circles. So far there's a ton of different graphical marks, as we call it, to use, which are all using this mark something method of a chart object. So first it's going to look at points again quickly and goes into the shape where we're just using shape instead of the default circle, we can now use this cluster to symbolize different shapes. And then you can set a lot of times, if you want all your points or different things to be the same size, you can usually set it inside the mark, underscore whatever. And then there's you can use size equals whatever you want it to be. And there's different parameters that some of these mark methods have.
00:35:09.706 - 00:35:53.414, Speaker A: And if you look at the documentation, it's quite good. If we take a quick look there, we can see the different types it has. And then it also gives some examples which are very useful to look at how people use them. Okay, and we'll skip quickly through this. Circles are the same thing except just filled in. And squares are the same as points, but instead of a marked circle, instead of using a circle, square. And these are just convenience because, you know, they're, they might be quite common things that people use.
00:35:53.414 - 00:36:43.326, Speaker A: Instead of having to write markpoint field equals true shape square or something, it's just a convenience. And point this one doing, oops, did I, I think I changed my code. Mark tick just does the same thing, except it uses a tick mark instead of a circle or square, just a different way of visualizing the same thing. And bar plots are something that very common and that's probably what we'll use quite often. Another quite often thing we'll use. Sorry, do you have a question, a.
00:36:43.358 - 00:36:44.890, Speaker B: Question about the tick one?
00:36:45.350 - 00:36:46.014, Speaker A: Yeah.
00:36:46.142 - 00:36:54.630, Speaker B: What's the difference on the shapes? I tried it, I couldn't say any difference. Is it just like the width of the tick or something where you have.
00:36:54.670 - 00:37:16.640, Speaker A: All, I think mark. Tick. So each of these, I guess, on the y axis has a default like, like width. So I'll do something like make a vertical line or a line of the width of this, I guess zero. So I think it might be useful for seeing like frequency of something.
00:37:17.540 - 00:37:24.640, Speaker B: Yeah, it's just the thickness of the tick mark, basically. Right. The shape.
00:37:26.420 - 00:37:32.814, Speaker A: Yeah. Or it's basically like at point, at the point it's just going to have a vertical line instead of a circle.
00:37:33.012 - 00:37:41.714, Speaker B: No, no, what I mean is you have, you have a shape, you have alt shape, cluster, colon n, meaning that there's, and I think it's the thickness of the.
00:37:41.762 - 00:37:48.110, Speaker A: Oh, sorry. Yes, alt shape. So if we, let's see what I'll show. Sorry, I was a bit confused on that.
00:37:49.330 - 00:37:52.590, Speaker B: Kind of the same. I'm not sure that shaping really matters.
00:37:53.450 - 00:38:17.204, Speaker A: Yeah, that's a good point. Yeah. Maybe they're just showing like you can use the same and let's just try. What happens if we get rid of that in this one? Yeah, that's a good point. That the shape doesn't, it's not actually changing what.
00:38:17.332 - 00:38:24.108, Speaker B: It works great when you have markers where it makes a star and all that stuff. It doesn't seem to matter with this, but maybe it's subtle.
00:38:24.164 - 00:39:25.700, Speaker A: Yeah, well, actually maybe that's showing something that using this marked point, which is the generic one, and we use this alt shape, then it does each different cluster, it uses this column. So say each of the values in this column has a different shape. But then if you use these more, these, I guess, shortcut ones, it's kind of showing that the shape you don't need, actually need this. Or if you wanted to show extra information, it's not being used. So that's a good point that if you want actual different shapes, you have to use like the, I guess, default mark, dot point and then these more convenience, like mark, circle, mark, square, mark, tick. It doesn't seem to be using the alt shape channel because this mark square is telling everything, all the different marks to be a square. If that makes sense.
00:39:29.520 - 00:39:31.260, Speaker B: Yeah, that's good. That makes sense.
00:39:33.720 - 00:39:44.340, Speaker A: Yeah, that's my interpretation at least. Maybe. Yeah, maybe we'll find something later where it might be clarified more.
00:39:45.760 - 00:39:55.710, Speaker B: Maybe if it's bigger, it might look different, like maybe the tick marks have different widths, but you can't really see them when it's. Oh yeah, but anyway, let's move on. It's not that important.
00:39:56.410 - 00:41:14.960, Speaker A: Okay. Yeah, so bar plots are another common thing. So this is quite, you can use, it uses a mark bar for both, you know, these more traditional bar plots where it's showing like population by country and also uses Mark bar for histograms, which I think there's an example later. But yeah, I found that a little bit confusing at first because like in Matplotlib and other libraries, they might have different like functions or different ways to do bar plots versus histograms. But yeah, we'll just go through here. So by default it will do something like, if you say so, it's using the cluster as the x axis, the population as a y axis, and the color to say like basically categorize the different countries and it by default stacks them so that each cluster. So it's kind of like, you know, this is a sum, this total height of the bar is a sum of all the different things in the cluster.
00:41:14.960 - 00:42:48.804, Speaker A: And something, if you, one example, they say, what if we do stack equals none in the y? It kind of does something you wouldn't expect, which is they're kind of put in some order and you only see the max and then, so we'll see that since India is the highest and then it looks like Pakistan is the next highest, and then all the other countries are kind of behind these two countries, so you can't really see them. It's not necessarily clear, but maybe you want to do something like this and you would do something with opacity in order to make it so you can see the rest of the countries. And if we go back to this now we see all the countries again. And we can also use a bar to, with, I guess, this x and x two, you can, the same thing works for y and y two that we show. We want to start the bar at the minimum of this life expect column of the data frame and end at the max with this x one and x two. And that's, that's very useful if you have the, if you want to show a range. And I didn't try playing around with this.
00:42:48.804 - 00:43:32.050, Speaker A: Alternatively, you can use part of the that it suggests. But I guess maybe you can do something where you can just use an x with a XDE. Yeah, I'm not exactly, or actually I think you can do something like, let's just say this may not work. Oh, sorry. Yeah. Can go back to that if anyone has questions. But I didn't try playing around with that.
00:43:32.050 - 00:44:38.484, Speaker A: And line plots, if we want to track this, is showing the fertility over time with the different countries colored in a different color. And we can see that kind of just looks like a relatively negative downtrend. One annoying thing I find with Altair is that even though this line is continuous, the tooltip only works if you put it exactly at the x axis column, only at that one pixel. I think there's more complex ways to play around with it to make it so you can hover over any point and it shows up. But with this default alt tool tip, it doesn't work. And sometimes you. So this is a little kind of, I guess, jagged at the years.
00:44:38.484 - 00:45:28.858, Speaker A: You can use these interpolate methods so it looks a little bit more smooth about how the plot's going. And it's playing with some, these parameters of mark line where we can change the width opacity and make it look a bit nicer. And you can also use that to, you can also use lines to make a slope. So it's using, this is saying, look at the data. This data is only from year 1995 and 2000. And we're plotting the. Just the, sorry, 1955 and 2000, and we're just plotting those two points.
00:45:28.858 - 00:45:59.652, Speaker A: And the step is the, I guess, the width between these two. So if we switch it to five, I believe it will just look really, really close together. Or if we did 500, it's too far. Apartheid. Yeah. And Popmo's message in the channel that. Yeah.
00:45:59.652 - 00:46:56.820, Speaker A: The line is actually a sequence of segments instead of actually one continuous line, which is something to keep in mind. And actually, that's shown nicely here in this chart, where the width is the only thing setting the length of the line, not the. So it's kind of user defined how much is between this, spaces, between this, these different values. Okay, so area is kind of like showing some feature has some of the usefulness of both bar and line. So if we want to just look at the. This is showing fertility over years. We can see that we get, I guess, filled in between the zero and the value for each year.
00:46:56.820 - 00:48:00.510, Speaker A: And again, we can use an interpolate so it looks a little bit smoother instead of this more jagged cutoff at each year. And, whoops. This example is just showing north american data with the different countries in North America and how they are. Their population is changing over the time period. By default, they're kind of stacked on top of each other, but there's other ways you can stack, such as center. So it starts at the first point is I guess baseline and then it shows how, how it changed over time to the last year. And that might be useful if you want to show, I guess they call it a steam graph.
00:48:00.510 - 00:49:04.638, Speaker A: That's kind of interesting if you want to see how it expands over time in a different way. And there's other ways you can do normalize. So if you wanted to see for example in the, what percentage of North America is made up by the United States? The overall percentage seems to be going down. The percentage that's made of the percentage of the population for Mexico is increasing. And Canada looks to be like around the same percentage of North America's population throughout the 50 years in this data set. And you can also do no stacking, which is looks kind of nice too, if you just depending on how you want to show your data. And we can also, this is just showing we can use the min and max to get a range for each of the years and we can use the y and y two as well instead of just xdev.
00:49:04.638 - 00:50:48.700, Speaker A: Yeah, so that was just a pretty rapid tour of the different marks and encodings that Altair has. And I usually you probably will need to refer to the docs over time to figure out like how you want to do different things. There's also these, this information from the course where we can show how to, different ways to, I guess they call it a taxonomy of visual encoding channels where you can do the points aligns area and then you can change the size of the different points and you can, I guess the, this is like the texture of the different points based on values. And then you can use color and orientation and shape as well as other to represent different categories of the same, I guess for example like the different clusters or that sort of thing. So yeah, there's a lot of, I guess, research and focus on ways to visualize data and they have some links there. So yeah, sorry, that was a lot of talking for me. Anyone else have any questions or anything you want to go over and you can also leave.
00:50:48.700 - 00:51:23.904, Speaker A: I'm very open to suggestions. I'm trying to make this, improve this over the coming weeks. So if you want to dm me or also post in the workshop channel, that works too. Oh, there's a question in the chat about pros and cons of alter versus plotly. That's a great question that I don't know the answer to because I heard a plotly, but I've just never used it. So yeah, if you have anything. If you.
00:51:23.904 - 00:51:50.540, Speaker A: In your course of going through this, if you have any things like, oh, Altair sucks, plotly is better. Definitely bring that up. I just. Yeah, I heard of them about the same time, but just started playing with Altair first. And I think if you're comfortable with. Yeah, I guess anything that you're comfortable in to make your figures. I'm not trying to say Alter is the one thing you should use.
00:51:50.540 - 00:52:27.310, Speaker A: I just thought it was kind of interesting way to think of data where you start with a chart object which has your data, then you are marking it with something and then you're encoding those marks with different channels. So you're taking those points and giving it something for a Y value, an X value, color, shape. So it's a slightly different way of thinking about things. Then. I'm coming from Matplotlib background, so it's like a different way of thinking about how to plot data.
00:52:31.970 - 00:52:50.240, Speaker C: Well, I just want to say thank you. Thank you for this. This is wonderful. A ton of fantastic information. I appreciate it. We're looking like we're getting towards the 30 minutes or the hour mark on the workshop. So do we have any last minute questions? Questions.
00:53:00.340 - 00:53:04.480, Speaker A: Cool. Well, thanks a lot for attending, everyone.
00:53:05.260 - 00:53:10.280, Speaker C: Do you know if we have. Is there a date set for the follow up yet?
00:53:10.820 - 00:53:38.220, Speaker A: Oh, yes, yes. The date is one week, same time, same place, next week. I'll post another message and maybe start a thread in the channel today or tomorrow. But yeah, same time, same place next week. Oh, and someone asks if the notebooks will be shared. These are all linked in the workshop. Get book page.
00:53:41.160 - 00:53:45.640, Speaker C: Thank you, everybody. Thank you for coming. I think that's all we got for today. Thanks.
