00:00:00.330 - 00:00:01.210, Speaker A: Not a dividend.
00:00:01.290 - 00:00:02.474, Speaker B: It's a tale of two quan.
00:00:02.522 - 00:00:05.162, Speaker C: Now your losses are on someone else's balance sheet.
00:00:05.226 - 00:00:07.722, Speaker A: Generally speaking, airdrops are kind of pointless anyways.
00:00:07.866 - 00:00:10.570, Speaker C: Unnamed trading firms who are very involved.
00:00:10.650 - 00:00:12.762, Speaker B: Alec ETH is the ultimate thumbnail.
00:00:12.826 - 00:00:15.840, Speaker D: DeFi protocols are the antidote to this problem.
00:00:17.090 - 00:00:35.090, Speaker C: Hello, everybody. Welcome to the Chopping blog. Every couple weeks, the four of us get together and give the industry insiders perspective on the topics of the day. So quick intros. First up we've got Tom, the DeFi maven and master of Memes. Next we have Robert, crypto, connoisseur and captain of Compound. Then we have Tarun, the gigabrain and grandpubad Gauntlet.
00:00:35.090 - 00:00:57.822, Speaker C: And then we have myself Aseeb I'm head Hype man at Dragonfly. And today we have joining us a special guest, long in demand, finally was able to come on the show, anatoly Yakovanko, Tsar at Solana. So quick caveat. The four of us are early stage investors in Crypto. But I want to caveat that nothing we say here is investment advice or legal advice or even life advice. Anatoly, welcome.
00:00:57.956 - 00:01:04.400, Speaker B: First off, all of your things have alliteration except Tsar. Do we spell tsar with an SV? Now.
00:01:06.370 - 00:01:30.790, Speaker C: I was originally going to interim as CTO of Solana, but Anatoly specifically requested Tsar Or, Senior Staff Engineer. And so we went with Czar because it had a little more punch to it. But don't blame me, blame Anatoly. Anyway, but Anatoly, it's great to have you on. I have to tell you, we have been talking about Solana almost every other episode. It's pretty hard to run a show in Crypto without talking about Solana constantly.
00:01:31.290 - 00:01:36.090, Speaker E: That's been our goal, really. That's it? Just like, how do we get people to talk about it?
00:01:36.240 - 00:01:38.906, Speaker C: That's why you're constantly having to deal with crap like this.
00:01:39.008 - 00:01:43.470, Speaker D: And you have a perfect track record of 50% positive and 50% negative.
00:01:44.690 - 00:01:51.246, Speaker C: That's very true. That's very true. We have it many times gotten pretty heated in our discussions about truly an.
00:01:51.268 - 00:02:03.300, Speaker E: Ethereum killer then, because I think that was Ethereum's place when Bitcoin was the only game in town, and that really split the conversation into people that were either pro or against it.
00:02:03.830 - 00:02:39.086, Speaker C: Solana is officially the most contentious blockchain today, that is for sure. So you might remember we had a guest a little while back, Andre Cronier, who's I guess now kind of semi retired but doing his own thing, but used to be kind know, chief guy at Phantom, among a bunch of other projects. And the original impetus for us bringing you on was that there was a, quote, tweet of a snippet from the show where he claimed that I think it was like, Solana is not even a blockchain, and he was talking all the about Solana and we were like, okay, well, we should get Anatole on for the counterpoint. Do you know Andre by any chance?
00:02:39.188 - 00:03:13.910, Speaker E: Yeah, he's awesome. Yeah, I've talked to him. A bunch. Would have loved for him to work on Solana in those early days when we were trying to bootstrap, you know, he was doing his own thing and we were doing our own thing. Learning Rust for like, a solidity dev is really tough because they went through a lot of in those early ethereum days. And when you do that as a developer, you kind of become a master of your domain, right? You know, the nooks and crannies and throwing all that away and moving to a new system, it hurts. Like, you have to kind of give up a part of your brain.
00:03:13.910 - 00:03:44.690, Speaker E: It takes years for you to get to that point. So after ten years, you'll be like, why is half my brain occupied with these useless details? I'm just going to remove that entire part and throw it out. But it'll take some time for that to happen. It happened with me in C plus plus for a decade. I knew every nook and cranny in C plus plus. And then at one point, it was like, why is half of my brain occupied with useless details? And just like snip amputated, it was all gone.
00:03:44.760 - 00:04:21.706, Speaker C: I have to ask you directly, I remember you commented on the Tweet thread when the snippet of him claiming that Solana is not a real blockchain. And I think that there are kind of two things that I think have been the crux of what people argue about on Twitter about Solana. The one thing is, how decentralized is Solana? The second thing is how stable or how live or how much uptime does Solana have? So right off the bat, I think those are probably the two things that we should jump into. What is your response to the critics, the naysayers about those subjects?
00:04:21.818 - 00:05:06.602, Speaker E: Both of those are kind of the same thing. If you look at fundamentally, what do these systems provide? It's extreme security. And the extreme part comes from the fact that in a catastrophic failure, yellowstone blows up something like that, that there's at least one copy of the state that survives, and it's provably that that's a copy. Because there's cryptographic signatures from the quorum that we can validate, and from that single copy, we can recover the whole state machine. And it continues. That's really what the system is supposed to do, and it provides some ways for people to update their state and continue running. The fact that there's uptime issues is kind of irrelevant because they're all temporary.
00:05:06.602 - 00:05:19.666, Speaker E: Doesn't really matter if there's a four hour period between blocks, because that doesn't really impact the fundamental thing that this thing provides, which is catastrophic failure, like security against catastrophic failure, but it does.
00:05:19.688 - 00:05:21.780, Speaker D: Impact the applications built on top.
00:05:24.390 - 00:06:11.540, Speaker E: That is us eating it and dealing with those problems. And it sucks, and it's 100% bad, and obviously all the engineering effort is on that. But when you think about it, from what is the purpose of these systems? It's this massive amount of security that is so massive that you trust it more than Google. That's like the really cool thing. And when you kind of dig into it, like, do I trust that Google will lose my state? Or even a combination of Google, Microsoft and Amazon. Is it possible for all of them to fuck up and lose my state? That's more likely than a network like Solana with thousands of participants. They're all running different servers, different configurations all over the world, right? That's the cool thing about it.
00:06:11.540 - 00:06:39.820, Speaker E: The uptime thing definitely sucks. But that's like day to day business for applications and we each for it. Not just on Twitter, right? Like users, folks like Magic Eden companies with real revenues step in, right? Like had like $100 million third quarter or whatever second quarter, they depend on the network running to generate those dollars. Right?
00:06:40.910 - 00:07:23.500, Speaker A: That is all true when we contrast like centralized systems with decentralized systems, being able to verify backup state is all true. I think the criticisms or maybe the comparisons are more across blockchains, right? Because any blockchain has a lot of those principles, right? Even like something random like Ethereum classic. It's true that you could recreate the state and anybody can sort of audit it. The question is for day to day use cases of this product. It's like where in that spectrum is acceptable to lie, right? Is it acceptable for this to have one transaction per day and it's sort of guaranteed uptime but unusable for pretty much anybody? Or there's a salana end of the spectrum. I'm curious how you sort of think about that component of the trade off.
00:07:24.270 - 00:08:50.280, Speaker E: There's a lot of people already working on the other quadrant, which is they built a system like proof of work based one that has really nice properties that allow to have basically infinite uptime because there's no definition of Bitcoin or POW system being down 2 hours between blocks, right? Like last year nobody said bitcoin was down, they're just like, oh, people are moving miners and now it's going to take a little longer for blocks, sometimes 2 hours between blocks and Solana it's down, right? So there is a definition of being down on Solana because we're now in a different ballgame altogether. It's providing a block every four to milliseconds. There's literally no gaps between blocks by design. So when there are gaps that are even like ten minutes, everyone's pager duty is off and we're trying to figure out what the fuck is happening and why. So I think this is where I think things are just different in these new class of chains that have that need, this constant uptime and constant throughput for. There's no way we can be service the world if there's downtime. But also if the solution is let's increase fees for everyone and the network is effectively only up for a very small percentage of users at that point.
00:08:51.290 - 00:09:43.078, Speaker C: So that brings us to fee markets but before we get there, I kind of want to drill in on this point a little bit deeper. So when we had Kyle on, on a previous show, we sort of asked him, like, hey, so this was right after, I think, the last kind of notable period of solana downtime. And Kyle's answer to like, okay, what's the deal with all the downtime that we've had this year? His answer was like, look, solana made some very explicit trade offs about trying to eke out very high performance at the expense of stability. And they went to market faster, they got things out the door quicker, and now they're paying the cost. And that cost has to be paid down one way or another. And look, it is unique among blockchains. It's pretty clear that there are no other major blockchains that have the stability issues that solana has, but there's also no other blockchains that have the adoption that solana has or the throughput that solana has.
00:09:43.078 - 00:09:52.050, Speaker C: But his framing of it was that this is basically a choice that solana made, that it's now paying down. Do you agree with that characterization, or do you think that that's not the.
00:09:52.060 - 00:09:58.218, Speaker E: Way you describe we didn't do it intentionally, we made the wrong decisions at the right time, but it wasn't what.
00:09:58.224 - 00:09:58.986, Speaker C: Do you mean by that?
00:09:59.088 - 00:10:36.690, Speaker E: When we were designing this thing, literally, the use case we were designing for was basically serum. It was a central limit order book. Our benchmark that we had internally was basically a very dumb central limit order book. And the idea was that all the transactions are going to be very small because limit orders buy bids, asks, cancels, they don't take any compute. The biggest part of that whole computationally pipeline is the signature verification. So our fee model is very dumb. Most transactions are going to be extremely fast to process, and the system should charge per signature.
00:10:36.690 - 00:11:09.886, Speaker E: And if the number of signatures per second that it's processing exceeds some threshold, we double the fees for everyone. And then that forces, like spam to back off. That's a very rudimentary design for a system that mostly runs something like serum. We actually got serum was like the first major use case, right, that we were like, right. Surprisingly, it never happens in startups. But what we were wrong about was all the complexity around composable. DeFi didn't just call serum.
00:11:09.886 - 00:12:16.130, Speaker E: They wanted to call the lending protocol plus the AMM plus serum at the same time and do these complicated swaps and radium, build an AMM on top of serum that really took the limits of computational what the system can do. And now you ended up with really heavy transactions that had hotspots on particular parts of the state that were just really expensive to handle. And all the bots and everybody in the world that wanted to take that like $5 or whatever, ARB would just slam them immediately. And this is something that we didn't expect that use case and what we built were chrysirum and just totally didn't work for everything else. So that technical debt was unintentionally there. The mistake that we made or the not mistake that we make is we let the design be open for these other use cases to spring up with the ideas like, okay, people are going to try random. We don't know what actual product market fit is in crypto.
00:12:16.130 - 00:12:35.434, Speaker E: So we didn't lock down the system to the point that it only works for serum because that would have been a disaster. None of the stuff that you see on Solana right now would have been possible. That would have been, I think, a bigger mistake than allowing this stuff to flourish and then obviously blow up in our face a couple times that we had to hustle to fix.
00:12:35.632 - 00:12:52.690, Speaker C: That kind of brings us to one of the things that we've talked about on the show as well, is about fee markets on Solana. And I know that in the past you were relatively opposed to the idea of imposing fee markets because you've described it as wanting Solana to be the nasdaq of blockchains. I think that's the quote that I've.
00:12:52.840 - 00:13:02.326, Speaker E: That all comes from that idea, that what we're going to run is mostly central limited book transactions by volume. And those don't need fee markets really.
00:13:02.508 - 00:13:30.442, Speaker C: Right. And the fee markets mean that you need something approaching a mempool. You'd be ordering transactions and you'd be doing all this stuff that if it's just a giant stream of things that are happening, you don't need to do that amount of work. But it seems like the fee market has been the approach that you guys have landed on, although a version of a fee market that's quite different than most other blockchains. Talk us through what made you change your mind and or the community change their mind about the fee market approach and what is the approach that you're taking? How does it differ from other blockchains?
00:13:30.586 - 00:14:13.102, Speaker E: So this is, again, had we not made those early mistakes, we wouldn't have discovered this, right? Like it wouldn't have been obvious to me at that time because I'm an engineer that is very learned, practically. I have to see the data, like, see how the system works, how it's broken. And that was something that we just couldn't foresee. And basically what we discovered, and this is obvious to me now in retrospect, is that these systems have very traditional database hotspot problems. You have a whole bunch of state in Solana. The state is organized as a key value store. Each key represents a public key effectively and each value is an account with data.
00:14:13.102 - 00:14:45.878, Speaker E: And those accounts represent both user state and program state. There's really no distinction. So you have like an AMM. There's a program that doesn't have any state that processes these key values. And the value would be the AMM market and the key would point to that AMM market. So when you have a hotspot, it means everybody's calling the exact same AMM key value, and they're constantly hitting that one market because they want to swap those arps or the same serum market. So it's not like a smart contract specific.
00:14:45.878 - 00:15:06.046, Speaker E: It's specific to a single state. And that hotspot. It doesn't matter how fast we make it. Like, imagine it's a switch and everybody wants to flip the same switch in the room. Doesn't matter how fast you flip that switch. If we made it split in 1, wouldn't really matter. If we could flip a million switches in parallel, it wouldn't really matter.
00:15:06.046 - 00:16:05.922, Speaker E: What matters is if you have 100 people that all want to flip that switch, first you have a hotspot, and everyone throws a whole bunch of transactions, only one of which can actually go through. And that problem is solved by a mempool, but it's solved in a way that creates one giant heap of requests to all access a single global state machine. And that means when you have an you know, or AirDrop to all the ape holders and all of a sudden fees go up, you still have DeFi protocols that are like, I need to land this liquidation. I have a chain link Oracle that needs to land this liquidation. Now I have to outbid all these stupid NFT people to land to do my day to day process. And now you have a bidding war between hotspots that create these really bad scenarios right on ethereum, and the only way to fix that is to isolate them. And this is my bearish argument against generic l two S.
00:16:05.922 - 00:16:52.866, Speaker E: L two S segregate state logically, right? Different l two S have different states that they own, but they're all generic, so they're not going to solve fees because you're still going to have an L two that has NFTs and DFI at the same time. And if you have an NFT drop and liquidations that all need to occur at the same time, the mempool for that L two is going to blow up. The only way to do this is to actually isolate these transactions by normal database transaction isolation, make sure that stuff that's processing Hotspot A does not impact Hotspot B. So there's no way I could have predicted that this is what we needed to build before we actually saw this problem, right? I don't know, maybe smarter people have seen it.
00:16:52.888 - 00:17:23.866, Speaker B: But I would say one thing. Your description of this problem does seem to be very pro app chain, because in the sense of Cosmos, cosmos actually has mainly been built around trying to isolate these types of state congestion issues. So I guess from knowing what you know now, what design decisions would you have changed in, say, yeah, we would.
00:17:23.888 - 00:18:15.900, Speaker E: Have built this fee model, I think, from the start. And the model is pretty simple because we already know we already did all the hard work, which means before steps to specify in their transaction which accounts they're going to need to read, which accounts are going to need to write. So that's actually the hard work is forcing that design onto all the applications. Once you have that information, all you're doing is sorting the transactions into buckets and then making sure that priority is based on some kind of fee. So both of those things we added, it's just that once the network is matured, releases and moving shit out into an ecosystem takes longer than us. YOLOing a change in March 2020. It was pretty easy to make changes like that.
00:18:16.430 - 00:18:43.522, Speaker B: So there was this paper in the last six months by this sort of famous cryptographer, Victor Schup, about proof of history, kind of like not quite having a lot of the desired properties. And also, I think in some of the downtime scenarios, the proof of history module was sort of one of the things that seemed to have a lot more trouble if you went back in time. Would you still have proof of history?
00:18:43.656 - 00:18:49.430, Speaker C: Tarun, can you very briefly explain what proof of history is and how it figures in solana?
00:18:49.770 - 00:19:21.870, Speaker B: So proof of history is effectively a way of doing sort of a minimal proof of work like system of doing a repeated hash that someone can verify that allows you to sort of have some notion of sequencing of slots in a more linear fashion. The problem is it sort of doesn't have certain guarantees and also can cause a lot of extra traffic on the network. At the worst times, at the times when things have the most general traffic.
00:19:22.470 - 00:19:27.922, Speaker E: What was the extra traffic? What's the extra traffic? The proof sizes? Yeah.
00:19:27.976 - 00:19:38.322, Speaker B: Basically people spamming the proofs effectively when they can't get any other slots and any other transactions that they're gossiping. At least that was sort of the argument.
00:19:38.386 - 00:20:26.580, Speaker E: We haven't seen that being like a major bottleneck. So if the chain gets into a state where blocks are getting dropped by propagations just not happening currently, the nodes just retry. It doesn't really matter, they just retry their previous block and the chain on proof history kind of stalls. In effect, what happens during an outage is you have a complicated system. It's a database, right? It's trying to run in constant memory because that's a requirement. And you have a scenario where there's like these people have built bots that spam it with like 100 gigabits worth of traffic. Bitfinex calls that a denial DDoS, right? But that's not really DDoS level at this point.
00:20:26.580 - 00:21:01.050, Speaker E: DDoS are much, much higher now. It's just normal bot traffic. People really, really motivated to get early in an NFT drop. This is not even for liquidations or complex finance or HFT. This is purely to get an NFT drop. And this 4 million or 5 million packets per second that are being processed are moving through these queues and stages and if one of those queues has unbounded allocation, the queue blows up, memory grows really, really quickly, and the validator just runs out of memory and crashes. And then it tries to restart.
00:21:01.050 - 00:21:57.570, Speaker E: And to restart, it takes time to process the current state, hash a bunch of stuff, verify hashes, and catch up with the network. If a third of the nodes run out of memory in that condition, you basically are in a situation where it becomes really hard for them to catch up with the block producers that are still trying to produce blocks. And the network then is in a state that's like, it's easier for the validators to decide that, okay, we can let it run and see if it catches up. Eventually it could. Or we just get everyone together and we kill this particular Shred version, which is like a network ID for the current, how we currently propagate blocks, increment it, and then continue. That means all the old proposed blocks get dropped automatically and then people continue from the last known slot. And that's just a decision that they make whenever they feel like.
00:21:57.570 - 00:22:06.020, Speaker E: But we haven't seen proof or anything like that fail, like cause a catastrophic failure or cascading effects yet.
00:22:07.350 - 00:22:14.278, Speaker C: Well, I assume everybody followed that. What you just described sounded super obvious. I don't even know why we had to discuss it.
00:22:14.444 - 00:22:28.380, Speaker E: So the bugs that we have are like dumb out of memory programming bugs. It's a complicated database. Somebody somewhere, probably me, if you could blame it, wrote that code and didn't correctly manage the state.
00:22:28.830 - 00:22:54.366, Speaker C: But I want to go back to the point you're making about isolation. I remember back before Solana was live, before all these all cell ones was live. I remember you did it was you and Alex Skidanov from near. You guys were sitting on a couch. I think it was like Eat Denver or something. And you were arguing about basically vertical scaling versus horizontal scaling, right? And the meme at that time was that salana is vertical scaling. Salana is you take a big beefy server and you run it all on the same machine.
00:22:54.366 - 00:23:24.590, Speaker C: And near and E 2.0, at some point in that moment in time, we thought E 2.0 was going to actually have shards. The sharded approach is you have a lot of small machines and you horizontally scale as when you're talking about isolation, isolation is almost kind of to the dot description of what horizontal scaling gives you versus vertical scaling. How have your thoughts about sharding versus the Solana just big beefy machine approach? How has that evolved over time? Or are you basically like, look, I think we made the right choice, so.
00:23:24.660 - 00:24:13.870, Speaker E: I think we made the right choice. I think the problem with the other choice when kind of described it is unless you have app specific chains, you're not really isolating anything. And with app specific chains, you're breaking composability that becomes really hard on all the really cool, weird DeFi use cases. That's like the trade off, right? Like you stick NFTs in a separate thing, you stick your lending protocol in another thing so its liquidations don't touch any other lending protocol. You'd have to have compound and Ave in separate app chains because what if both need to be liquidated at the same time, right? That's the issue there. That sucks. I think fundamentally that sucks from the magic of crypto, the magic of smart contracts.
00:24:14.610 - 00:24:44.630, Speaker C: No, that makes sense. At the same time it also seems surprising know Solana. It's very clear, especially from your description that when you guys were designing Solana, you were designing it around the use case that you were imagining was serum the Nasdaq of blockchains. Right? Like you guys see very clearly this is going to be the DeFi chain and it's not NFTs and pictures of monkeys that has ended up being the predominant thing that keeps taking down Solana. How do you think about that? How does that strike you if anything?
00:24:44.780 - 00:25:19.300, Speaker E: I think it's awesome, honestly. I think the internet is like typically the best versions of the internet is just sharing pictures of cats, right? Like doing funny. And I think it's awesome to see that NFTs are basically like people having fun with this stuff and not really taking it too seriously. That's been, I think, more interesting to me than trying to convince, I don't know, the Goldman Sachs of the world that their borrowed lending books should be on chain. Robert can do that.
00:25:23.190 - 00:25:24.226, Speaker C: I'm happy to do that.
00:25:24.248 - 00:25:25.390, Speaker D: I love that conversation.
00:25:25.470 - 00:25:29.570, Speaker C: I don't get to enjoy the pictures. You enjoy plenty of pictures.
00:25:29.730 - 00:25:30.294, Speaker E: That's true.
00:25:30.332 - 00:25:31.314, Speaker D: I do enjoy the pictures.
00:25:31.362 - 00:26:16.274, Speaker E: Like the Nasdaq use case was interesting to me because I like high performance systems. So that needs a lot of throughput. DeFi that doesn't need a lot of throughput was just not something that I was super interested in because it can run somewhere else. Right. So there's no need for Solana if the only DeFi use cases are borrow and lending. But if central limit order books exist, then I think it's obviously that you need something like Salana and now that NFTs are a thing. I think when you're talking about Minting, we see 100 to 200,000 NFTs Minted per day on the network and that's with like few million humans out there messing around with this stuff.
00:26:16.274 - 00:26:26.294, Speaker E: If we go to hundreds of millions of users and now we're talking 510 million NFTs Minted per day, you need a network like Salana to support that. And that's interesting.
00:26:26.492 - 00:27:13.574, Speaker C: So speaking of different use cases for Salana, one of the big news stories from the last from it was a couple of weeks ago, but we figured we were having you on. We should talk about it when you're here is the Saga phone. So the Saga phone is a Solana branded phone that is going to have native Solana support from the get go. And there's been a lot of conversation about the Saga phone, how likely it is to succeed, whether long ago this was conceived of, whether it was intentionally announced into the bottom of a bear. If you look on chain, it looks like there are a couple thousand pre orders for this thing already. So I'm first of all really curious of just how do these things happen? Is this like a Solana Foundation is like, hey guys, we should do a phone. Is it a third party that's like, hey guys, we're thinking about doing a Solana phone.
00:27:13.574 - 00:27:20.490, Speaker C: And you guys are like, cool, here's some branding. And you guys are, was this your idea? Was this someone else's idea? How did this happen?
00:27:20.640 - 00:28:05.926, Speaker E: It was my idea and it happened because I met through do you know Race Capital guys, edith, Chris, McCann through them, like Alfred on their just I think what the space needs is like Apple and Google to really open up to crypto that would really, I think, accelerate everything. And the only way that's going to happen is if somebody builds an alternative model and shows that it works. And this is what I would do. And they're like, you should go talk to Jason. He was like the first employee to Essential, basically first or second architect at iPad Pro. Awesome entrepreneur, awesome builder, like super hardware nerd. And they built an awesome phone.
00:28:05.926 - 00:28:55.442, Speaker E: And when I talked to him, I was like, we should go do this. And it was because of him that this happened, right? I just met the right person to do it. There's no way I think I could push this idea through a big corporation. Like, you can, right? You can make deals and do all this other stuff, but you really need a driven CEO that kind of gets division and is willing to push through this. Because it's not just like, we don't want this to be like the previous crypto phones where it's just a wallet or something like that. There's a fundamental difference with sticking the signing infrastructure inside the trusted element. So the high level operating system Android and the wallets cannot steal your keys, right? Like, you create an environment where phantom doesn't know your seed phrase.
00:28:55.442 - 00:29:23.786, Speaker E: And that means that we can have things like tap to Pay. Like, you go to a store and you hit the button to pay. Load whatever wallet you want that developers can innovate with. And you know that that wallet can never steal your funds and that wallet's UI can now be used to pay for whatever purchases you want. And that opens up a whole new channel of innovation, right? Devs can build cool shit. They can integrate with merchants. It could be bi directional channels.
00:29:23.786 - 00:29:53.978, Speaker E: Every time you buy something, you get NFTs or whatever. All that stuff that people dream about with crypto and programmable money is now possible because the software that you're using and interacting with. Never has access to the seed phrase, right? And that level of security, I think is necessary. And this is something that when I was at Qualcomm, this is like, what this .6 years ago, all this existed. Trust zone existed. All the application stuff you can build in trust zones, all that stuff is there.
00:29:53.978 - 00:30:22.820, Speaker E: They just don't enable it because there's no provable product market fit for it. So we want to drive that forward. I don't know when this is going to break out, like, when is it going to be relevant? But I do believe somewhere in the next three to five years, we're going to see a moment where every mobile phone out there has signing inside the trusted element that has web Three enabled natively. It's just obvious to me, right?
00:30:23.270 - 00:31:00.110, Speaker C: Well, that is one thing that you guys have been amazingly effective at, is breaking out of the cold start problem. And I mean, that's the struggle that every layer one goes through. And there's also the struggle that any new line of hardware goes through is, okay, it's one thing to have, okay, I have my beautiful Solana phone. I can look at it and pet it. But if nobody actually, if there are no merchants, if there are no applications, if there's blah, blah, blah, that if there aren't enough people who own this phone, then you're not going to have enough developers who are creating experiences that are native for this phone. Like, everyone's going to assume you're on mobile web. Not enough people are going to integrate whatever SDK you need in order to interact with the trusted element.
00:31:00.110 - 00:31:05.586, Speaker C: So how do you think about that? How does this phone break out of that no man's land?
00:31:05.768 - 00:32:03.602, Speaker E: So I worked on every phone that failed the webOS phones. You guys remember those? The Amazon Fire, the Metro, the Windows Metro one, a couple other ones that were just code names, basically. It's really, really hard. And the thing that I think how we can possibly succeed and it's not guaranteed is that I think the big store marketplaces right now are so bad to Web Three, that 50,000 Web Three users that have this device with no restrictions in the store, with how web3 apps can talk to them, is a better distribution channel for crypto native developers. And the big app stores like Magic Eden can't really ship an awesome marketplace on mobile because Google wants 20% of fees on user generated content that Magic Eaten doesn't control. A $10,000 NFT. Magic Eaten cannot charge the user 12,000 in their mobile experience when it's listed for 10,000 on the web.
00:32:03.602 - 00:32:38.670, Speaker E: That just doesn't make sense. Nor can they eat that cost, right? Because they don't own that property. Right. All of the big App Store business models around the idea that the mobile app is owned by the content provider. The content provider is the creator, and they can charge wherever they want, and then Google can put a tax on that, and that doesn't work in a digital owned economy. You have to treat digital objects the same way that you do physical ones. Like ebay, right? You're not going to charge 20% markup on the Ebay mobile app.
00:32:38.670 - 00:33:20.730, Speaker E: And that model is just they have a lot of VPs, a lot of layers of decision making. I don't know what's it going to take for that to percolate to the top and for them to change their policies. My hope is that maybe we make enough noise that that happens and that's a good outcome. Right? Like, I think for the space is that even if we fail commercially, but we change both how Google and Apple treat Web three, that's a win. But how we succeed, I think, is we get it to hardcore crypto, devs it's open source. So, like Robert, if you still code, go submit the Ethereum integration. Okay, I've never coded.
00:33:24.130 - 00:33:28.750, Speaker B: A secret is Robert used to make Ti 83 games.
00:33:29.570 - 00:33:30.350, Speaker E: That's true.
00:33:30.420 - 00:33:32.582, Speaker B: And that was programming in basic.
00:33:32.666 - 00:33:35.314, Speaker E: Basically, if there's still Ethereum founders that.
00:33:35.352 - 00:33:43.060, Speaker C: Code, I think they're mostly retired now after prices have come down.
00:33:44.890 - 00:33:53.640, Speaker E: If there's still Ethereum founders, that code, it is honestly open source. We'll literally take more changes than MetaMask would take Solana changes.
00:33:55.370 - 00:34:28.466, Speaker C: Fair enough, fair enough. Okay. I have another Solana based question, kind of changing gears a little bit. By the way, we got a lot of questions about the Saga phone. So I think people it's a good grounding for that story. One of the questions we also got from a bunch of people is comparisons with Aptos and Mistin, which are the new Slash move based chains. I think you responded in some of the Twitter comments that you weren't super familiar with what they're doing, but I think I see them as the most common comparison to you guys.
00:34:28.466 - 00:34:50.220, Speaker C: And I spoke with someone from Solana Labs who was telling me that internally at Solana, you guys don't see Avalanche or BSc or any of these guys as your primary competitor. You see Aptos and Mistin as your primary competitor. Is that true? And please elaborate on that if it so.
00:34:50.830 - 00:35:46.010, Speaker E: I think I have this theory that it's a little controversial, that and obviously the reason behind Solana's design comes from that, is that execution is like the really hard part in all these systems. Consensus is relatively simple compared to the runtime. And this is why you've seen a lot of innovation in consensus, because you can build all these consensus systems. The security failure in consensus is extremely unlikely. One, it requires collusion from a large set of participants and then partition the network and then do a double spend everybody. That's just not going to happen right now because the number of participants in crypto that don't want to collude, that rather make money the traditional way, is much, much larger than the number of attackers that are willing to stake. And it's just extremely unlikely.
00:35:46.010 - 00:36:28.394, Speaker E: In the execution land. Building a VM, any bug could be a catastrophic failure. You're running untrusted user code with untrusted inputs, and any exploit in that virtual machine can blow the whole thing up. And they can blow up it from a total loss of funds. Catastrophic or application specific one, or like a reliability failure like you saw with the Shanghai attacks. But building EVM was, I think, the hardest problem in launching Ethereum. And that's why I think you've seen a lot of stickiness for EVM because when you're building a new consensus engine, you can go to market much, much faster by bolting EVM on top of it.
00:36:28.394 - 00:37:03.330, Speaker E: And look, you've got an environment that's secure. You're using gas, right? Everyone trusts it. You don't have to go reimplement this extremely complex wheel, right? And that's actually where all the innovation and the cool this is where you can actually innovate and build cool shit and capture. A lot of value is in the execution layer. Consensus systems, nobody devs don't care about what they do. They just care that they work. They hate us if something fails, right? But what they wanted to do is just work.
00:37:03.330 - 00:37:31.462, Speaker E: The execution environment is where devs play. They innovate. And developers need new tools, like, I think every two years because they're curious bunch. So when somebody actually the team that built Move is extremely awesome. They're like really smart folks. The design is really good. I think Move itself is a really good attempt at building a more secure way to build smart contracts.
00:37:31.462 - 00:37:56.420, Speaker E: So I think there's an opportunity for them to actually build their own ecosystem because it's new and it's going to attract a bunch of curious devs. And if it's good, that could be enough for them to get stickiness. I'm not worried about yet another EVM chain. It's just like, okay, they're all splitting themselves up, right? They're fighting over the same group of developers. They're not creating anything new.
00:37:57.370 - 00:38:27.680, Speaker A: I was going to ask going kind of back to the app chain bit for a moment. Why do you think we haven't seen other chains with the Solana VM using different consensus mechanisms yet, the same way we have with EVM? If we think, hey, it was great developer experience, people love Rust. Why is Solana the only one? Especially when if I have an app chain, I don't necessarily need the colocation, I might want to run my own decks, even like step in. Why am I paying a premium for this colocation block space versus just running it myself?
00:38:28.130 - 00:38:57.174, Speaker E: Transactions in salon are so cheap that it's going to be more expensive to run your own app chain. That part is true, I think, for Stefan. Stefan, even though being like having, I don't know, seven times more transaction volume and user volume than uniswap, it'd be more expensive for them to host all those servers. It's also like a pain in the ass. I think to do that. So I'm not sure. I don't know.
00:38:57.174 - 00:39:04.170, Speaker E: There's like one or two I've heard, but they're pretty low credibility, I think, or haven't really gotten traction.
00:39:05.470 - 00:39:18.634, Speaker C: I mean, it took a long time for there to be other really upstanding EVM chains. Obviously. Ethereum Classic was the first. Ethereum was quite a bit simpler and earlier back then in its life. And Ethereum Classic, of course, had tons of stumbles.
00:39:18.762 - 00:39:38.200, Speaker E: It took two years to go from literally people to build a whole blockchain. It took Avalanche binance, smart chain, all those guys, the same amount of time to build whatever they built, like their EVM based chain, we had to build consensus plus a runtime in that same amount of time.
00:39:38.890 - 00:40:00.746, Speaker A: Yeah, definitely a heavier lift. I'm thinking of something almost like XDI, right? Maybe Audius is a good example where it's, like, started out in XDI, migrate to salana, better performance, cheaper block space. But I feel like that's kind of the trend that we've seen, right? Like even dYdX moving from Ethereum L One, Starkware now to Cosmos, people just sort of shopping around for block space.
00:40:00.928 - 00:40:05.018, Speaker E: What would you get by launching your own salana chain?
00:40:05.194 - 00:40:19.730, Speaker A: Well, I mean, I think sort of the argument would be, hey, maybe there's a premium to having your own token do validation, or being able to capture mev, or I think especially when fees going up, maybe there's an argument that, hey, we can have cheaper fees, I think, in our own chain.
00:40:20.230 - 00:40:59.566, Speaker E: So the way that salana fees are designed is that there is no advantage to moving to an L2. The fee problem isn't a block space constraint problem, it's a hotspot problem. So when you have ten people that want to flip the same switch, it doesn't matter if that switch is flipped in a zero knowledge environment in an L2, in an app chain, you still have ten people that want to flip the same switch. So they will bid up to flip it. If you isolate them, they don't impact anyone else's and any other switches that are also doing their own thing. And if we can achieve that at Salon, at the L One, there's no advantage to launching an appchain. The only reason you might want to.
00:40:59.668 - 00:41:41.340, Speaker C: Do that is, yeah, that's true to an extent, right? It's not true. Let's say there are five hotspots simultaneously, or let's assume that you've got one of these crazy NFT drops and people are just absolutely bombarding all the RPC endpoints. They're bombarding all of the leaders, and the leaders are basically being DDoS with all the crazy requests that are going through. Certainly one can imagine that, look, if we just spin up a new Solana now, look, it's hard because Solana is a moving target. Solana is not like Ethereum, where basically it changes once every six months. So that, I think, is another element of like, look, you just have to constantly know how to do the DevOps for Solana without being tied to Solana. That's just really hard.
00:41:42.430 - 00:41:50.266, Speaker E: I think those reliability issues would come with you, right? So whatever you spin up, it's the same code base, same architecture.
00:41:50.298 - 00:42:28.618, Speaker C: Yeah, except worse because you don't know how to run. Be I think there will be a time, almost certainly if Solana continues to be successful, that Solana's code base will solidify and there will be people who run Solana Classic or know, there will be other versions of Solana, and some of them will gain legitimacy. Some of them might even be run by exchanges and some gate IO or something will run their chain and will be based on Solana, and they'll make the same arguments and you'll have the same combination of flattery and annoyingness that will come from having another chain based on your code base.
00:42:28.704 - 00:42:57.380, Speaker E: So if somebody's listening to this, there's a pull request that removed the Move loader from the network before Mainet launched. The reason why we removed it is because running Move as a native loader would have exposed that runtime meant that if there's a bug in that runtime, it's a bug in all of the state machine, and that's a catastrophic failure. But you could literally take Run, your own version of Solana with Move and launch before Aptos and.
00:43:01.190 - 00:43:47.030, Speaker B: Think and sorry, again, my Internet's. I actually think the idea of Solana roll ups is an actually good idea in that you could imagine a roll up where the fee structure is different based on the use case. So basically it's still running the Solana VM. So any bridging is at least guaranteed to have certain execution properties to be bitwise identical, at least in the actual execution. Maybe not in the fees. But the fees can be adjusted to which parts of the runtime are more used in certain applications or cellular applications. And in general, I think there's a lot of the modularity in the networking stack in the Solana code base actually lends itself quite well to basically having rollups that are running the Solana runtime.
00:43:47.030 - 00:43:58.890, Speaker B: I actually kind of imagine that. I know Haseeb was thinking more on the Adversarial Solana runtime, like Hubi does BNB, but does it with Solana or something.
00:43:58.960 - 00:44:03.034, Speaker E: That'd be fine. Anatoly's Vision? Yeah.
00:44:03.232 - 00:44:09.542, Speaker C: Anatoly's vision. Oh my goodness. We need to create a bounty for Anatoly's Vision.
00:44:09.686 - 00:44:12.800, Speaker E: It only runs serum and that's it.
00:44:13.410 - 00:44:59.626, Speaker B: I think, for instance, a Solana runtime, that's special purpose to do certain ZK things a lot better than the current runtime or these things that at least guarantee that, hey, bitwise compatibility is easier and you don't have to have all of the problems we've seen with basically every bridge to Solana. And really the translation layer, where the translation layer is the part that between multiple virtual machines that aren't bitwise identical, leads to these kind of nuanced bugs. Right? So I don't know, I could see a world where Solana roll ups are there is such a thing because if there's already that much developer interest, people will start trying to specialize it in some way, shape or form. I mean, how do you feel about that? If say, people started?
00:44:59.808 - 00:45:17.220, Speaker E: Sure, that'd be cool. If there's system calls that they need or hooks into the VM, I don't think we have an eval where you can tell the runtime to go evaluate itself. But that's relatively easy to add. If people need that, we'll definitely add it.
00:45:17.990 - 00:45:21.250, Speaker C: Or terrifying, you heard it here first.
00:45:21.320 - 00:45:23.940, Speaker B: Solana roll up coming at some point.
00:45:24.550 - 00:45:27.640, Speaker E: I mean, if people want to build it, I don't want to stop them.
00:45:28.090 - 00:46:03.658, Speaker C: Sure. Speaking of roll ups, though, I think last year there was a lot of hullabaloo around Neon Labs, which is supposed to be this roll up. It's unclear if it's actually a roll up or more just like a virtualized instance of the EVM on top of Solana. And I've heard through the grapevine this is total speculation. I don't know if this is true, but I've heard through the grapevine that people are writing off whether they're ever going to come to market it or whether even that was the right approach. And people are know, whatever, people made a big deal out of it. But that's not the direction that you want to be focusing your what say anatoly about the prospects for EVM on Solana.
00:46:03.658 - 00:46:06.580, Speaker C: Does it make sense? Does it not make sense? Do you even care about it?
00:46:07.110 - 00:46:47.006, Speaker E: I think there's two projects. One is Neon, and I think it's live on testnet, so you can go and mess around with it. I don't know what's blocking them from mainnet, but it should be pretty close. But the hard challenge is like, you're taking Ethereum, a version of Ethereum that was built in Rust, and you compiled it as a Solana program. And then you're hooking up all the APIs that MetaMask expects Gaeth to implement against that thing. Right. And the problem is that you take an Ethereum transaction and you submit it to Solana and it takes more time than is allowed for Solana transaction to take.
00:46:47.006 - 00:47:18.342, Speaker E: So you have to create a continuation where you cache the partial computation of this EVM as it's churning and you tell it to like, okay, stop, and then I'm going to go send another continuation for you to continue and then crank in until it's over. And you have to make that system to be compatible with whatever MetaMask expects. So how that fits, I think is pretty close. But I think there's like a little I don't know if they gotten everything right, but I think they're getting closer and closer to it.
00:47:18.396 - 00:47:24.060, Speaker C: If I recall, they had like a super tight gas limit for transactions that could execute in reasonable time.
00:47:24.590 - 00:48:06.274, Speaker E: That's a hard approach and I think if it's not live yet, it's pretty close. Go mess around with it and see what's broken. I'm sure they need people to just play with it and tell them what sucks. There's another one that is one that I like more personally because this is just part of the stack that I like and that's taking Solidity and implementing it as an LLVM front end and then going through LLVM, just generating a native Solana program. But that approach means that the result is not going to be compatible with EVM, right? It's a different state model. You should re audit that code failure.
00:48:06.402 - 00:48:24.640, Speaker B: Of the eWASM project perhaps you could argue is a project management failure on the behalf of the Ethereum Foundation. On the other hand, you could also argue that the LLVM runtime and the EVM just have too many thorns that don't quite fit together and that was really the.
00:48:30.050 - 00:49:05.238, Speaker E: But again, the reason why they needed that to work byte for byte be exactly compatible. That's the same challenge that Niana is working on. That's a really hard problem with Solang. We're kind of like saying it's not EVM compatible, so don't even worry about that. But it compiles Solidity and runs as you expect, right? It's just not EVM compatible. And that I think is a pretty cool approach that's pretty flexible. And if you're a Solidity dev, you can go use that right now and you can go get started and build native Solana programs in Solidity.
00:49:05.238 - 00:49:53.782, Speaker E: And that's actually something that I think I would like to see move implemented as native Solana through Lovm Pass. I think this is something that whenever there's a new runtime or a new language, that's the approach that I want to use to keep adding the support for these systems. There's a grant, I think, from the Solana Foundation to the Ziglang team. Zig is like you talk about like C and then Rust and then Zig. Zig is like this. It's a very small Nerdy community on building high performance, like next version of C, basically. So stuff like this I think is awesome to enable for devs because these are new tools and devs are curious.
00:49:53.782 - 00:50:20.100, Speaker E: They need new stuff to go play around and innovate with. So do I care about EVM on solana? I care about Solidity on Solana more so than EVM, because I want devs to have tools to do stuff with. That's the long story, but not specifically because I care about trying to get Ethereum dumps to move over. I just want to have the tools there for them to go do whatever they want.
00:50:21.750 - 00:50:51.286, Speaker B: So I will say one thing you do actually care about EVM and not Solana because the EVM semantics, and we've already seen this with all the ETH roll ups where the fact that you can't just redeploy on some of them and it actually gives you Bitwise compatible liquidations. It turns out there's some condition under which ZKsync doesn't do the correct liquidation in compound. That type of stuff you really want to prevent people from doing. And you do want the bytecode level semantics to have the same, or you're.
00:50:51.318 - 00:51:08.818, Speaker E: Just honest about it. Right. And it's something like solang. You recompile it, it's a new program, and you re audit it. You actually rethink about it and see in this new environment what actually happens. And that may mean that you may need to maintain two versions of compound. That's fine.
00:51:08.818 - 00:51:12.370, Speaker E: Right. But you should just understand that behavior.
00:51:14.230 - 00:51:30.694, Speaker B: I do think it does get hairy from keeping track of what changes correspond to what audit. And the kind of overload for developers will mean that mistakes will be made no matter what. In such a scenario, though, and it's.
00:51:30.742 - 00:51:37.702, Speaker C: Of course always true in crypto that developers are surprisingly lazy, or that some developers, I should say, are surprisingly lazy.
00:51:37.766 - 00:51:40.250, Speaker E: And will the best developers are lazy?
00:51:41.390 - 00:52:18.166, Speaker C: Well, the worst developers are lazy in different ways than the best developers are lazy. I will say that. Okay, so this whole episode, we've kind of done a really deep dive on Salana and kind of your thinking and how Salana has evolved as a blockchain. I want to shift gears a little bit, talk more about kind of your journey. So I remember back in the 2018, 2019 bear market when you were just first fundraising for Salana. I remember actually one of the very first talks I went to as an investor. I just started my career as an investor, and I went to I think it was like 500 Startups talk.
00:52:18.166 - 00:52:31.334, Speaker C: And you were up there and you were like, I used to be at Qualcomm. I did all this low level stuff with whatever it was you were working on, super low level stuff related to phones and whatnot. And I was just like, wow, this guy is like super legit.
00:52:31.382 - 00:52:33.260, Speaker E: This is like, that worked.
00:52:33.790 - 00:52:45.342, Speaker C: Yeah, exactly. And I remember back in the day, Solana, you guys really struggled to get allies and to build a coalition behind.
00:52:45.396 - 00:52:47.710, Speaker E: You guys struggled to get funding.
00:52:48.310 - 00:53:34.078, Speaker C: Absolutely. Absolutely. You went from basically being the ugly duckling that was struggling to really get funding and attention and energy and resources to having you talked about serum kind of putting the wind at your back and creating this tremendous momentum. Behind Solana to now make you when I look on the block, it's funny enough they have four tickers at the top and Solana is one of them. Solana is not the number four cryptocurrency, but in most people's minds, it is. And what have you learned from that transformation that you would not have expected when you first started being like, I'm going to build a blockchain. If you could go back and tell your previous self, like, hey, guess what, Anatoly, here's what happens when you build one of the biggest blockchains in the world.
00:53:34.078 - 00:53:36.340, Speaker C: What would you have been surprised to hear back then?
00:53:36.710 - 00:53:57.606, Speaker E: The more success you have, the more work you have to do? I guess. I don't know. I think what I would have put I'm really surprised that the biggest use case is going to be pictures of apes. It would just not have made any sense to me, right? Like, if I went back in time, like, four years ago, and I was.
00:53:57.628 - 00:54:00.680, Speaker B: Like, look, does it make sense to you now?
00:54:03.690 - 00:54:50.840, Speaker E: I've become a PhD collector, and it does make sense to me, and it puts me back in a state of playing Ultima online in those super early days of mass MMOs. Where for the first time, you kind of had community on the Internet that was interactive on the Internet itself, and you could customize stuff and you were doing things. These were, like, the first guilds that were being formed and things like that. And I remember geeking out about that and feeling like I was part of something. And I kind of feel the same way about PFPs. I don't know if that's like most people feel that way, but I kind of do. So that's, like, my reason for enjoying them.
00:54:51.470 - 00:55:47.258, Speaker C: I have to know. So we talk a lot of shit about Solana. We also admire Solana because that's part of the reason why we talk about it so much. But most of all, I think I admire you for one, not only having gone through that hero's journey of building something that with nobody on your side not nobody, but not a ton of people on your side, to building one of the giants of the industry, but also the spirit with which you've done it. We were talking before about how most l one founders, as they become more and more successful, they become more rambunctious, they turn into assholes, they start picking fights. And you've somehow managed to carry yourself and Solana, despite the company in which Solana obviously has got now its fair share of shills and crazy people and whatever just because it's so big that that's what happens. But you carry yourself with a vitalikesque level of grace and thoughtfulness, which has been amazing to see you.
00:55:47.344 - 00:56:00.320, Speaker E: That's a huge compliment. Thank you. Yeah, thank you. That's a huge compliment. I think I got lucky in that I was older when I started. This surpassed my Rambunctious age.
00:56:03.730 - 00:56:09.090, Speaker C: I should ask that if Anatoly had started Salana in his 20s, how do you think Salana would have gone differently?
00:56:09.590 - 00:56:11.026, Speaker E: I don't know if it would have.
00:56:11.048 - 00:56:51.374, Speaker B: Made it actually a related question right now. There's actually this kind of narrative that I won't say from who, but there's many people who are doing this of like, hey, we need to have 18 year olds building everything, or, like, 17 year olds or twelve year olds. How do you feel about who could this be? Narrative of like, how do you feel about this current narrative of, like, oh, yeah, we should only have kids building any crypto project. Because I kind of feel like it ignores the fact that these things are hard to build. You can't just only have people with a lot of excitement. You also have to have a lot of different types of people.
00:56:51.572 - 00:57:12.870, Speaker E: I would trust dads over 18 year olds, especially somebody that has been through with a two year old that's been through that, and there's four moms. Yeah, or moms. Moms. Yeah, or moms. Like anyone that has raised kids has gone through some shit, but they are able to power through a startup.
00:57:16.330 - 00:58:11.242, Speaker D: I want to reaffirm that statement because I actually also believe it. I think one of the things that most people forget is that when we're building an industry like crypto, where in a lot of cases, people's entire net worth is at stake, it requires a level of seriousness in the approach to engineering systems that are stable enough that you're not going to vaporize someone's life savings. And there's many ways to go about this, but I think in general, not always the case. In general, the older you are, I think the more seriously you take that sort of sacred requirement of duty towards building. Not that there's not 18 year olds who feel the same way, but I think in general, the older you are, the more seriously you take that. And it's one of the reasons why I think that in many cases we'll see older founders and teams building things.
00:58:11.376 - 00:58:14.906, Speaker C: Tom, as the resident 19 year old, what's your take on this question?
00:58:15.008 - 00:58:27.070, Speaker A: I think it's different, specialties. It's like enders game. You can take the children and you can morph them to build amazing mev bots. But if you need to do something responsible, then you'd be a bit older. So you got to just sort of segment.
00:58:28.450 - 00:59:08.026, Speaker C: It's true, it's true. It takes all types. And Vitalik was obviously a very, very young man when he first came up with the idea for Ethereum. And it seems very clear that he needed to be young and bright eyed and to not be able to understand the objections that more seasoned people were telling him about why this wasn't possible. But it also seems true that it was important that Satoshi was probably not a young man, and that Satoshi, whoever he or she or they were, had a steadiness to them that allowed them to shepherd this thing into existence. That required, to your point, Robert, a lot of seriousness and a lot of poise in order to build something of that nature. So I think, yeah, I like that view.
00:59:08.026 - 00:59:14.430, Speaker C: Tom It takes different types of energy and different types of people in different stages of their lives to usher in different kinds of innovations.
00:59:15.170 - 00:59:40.118, Speaker B: Yeah, and again, I think my main point here is just more like there is sort of this youth fetishization aspect of this that seems to be occurring a I just generally, anytime I see that, kind of feel a little weird. And so because Anatoly was sort of like he brought up the fact that because he was older, it was helpful, I think. That's like, a good message in some ways. You don't have to be some 19 year old.
00:59:40.284 - 01:00:23.460, Speaker E: I think you have survivor bias, right? You have a lot of young kids try it, and the ones that make it are the outliers, the vitaliks. And he would have made it in anything, I think, given the size of his brain. But most startups, I think, tend to succeed when they're founded and driven and led by more seasoned folks with, like, ten with ten year plus experience in whatever industry they're in. Because you need more than just bright at enthusiasm, right? You need a network of people to hire from. You need expertise, you need gut instincts that are honed by that experience and that the only way to do that, is by spending your butt in the seat for that much time.
01:00:25.350 - 01:00:52.730, Speaker C: So I want to close out on one last thing. So I think a lot of people in Crypto look up to you, Anatolia, as being one of the preeminent founders in the space and a real success story, for obvious reasons. What would be your advice to I mean, look, right now, it's obviously a trying time, it's a bear market. A lot of people have lost confidence about their prospects to be able to build something in Crypto. What would be your advice to the entrepreneur who might be listening to this?
01:00:52.880 - 01:01:51.918, Speaker E: I think right now, it's really hard to actually, I think, launch a company in the middle of a Bull Run because there's so much noise and it's really hard to get a product market fit in a Bull Run because of that noise. And this is why, post Bull Run, you see a lot of those companies fail despite them raising money, despite everything else maybe going seemingly going their way, they actually miss the most important part, which is product market fit. But in a bear market, there's a lot less noise and if you can iterate and build and create, like get those hundred users, that's actually a much stronger signal than anything else. So right now is the best time to build and you're building for the next Bull Run with the hope that it was like four d five projects compound ave uniswap that caused the DeFi summer and the real of the Bull Run. Right. It only took four. Right, that's it.
01:01:51.918 - 01:02:00.640, Speaker E: So four entrepreneurs that joined now and build something really good are going to cause the next cycle. That's all you need.
01:02:02.290 - 01:02:20.390, Speaker C: Well, that's a beautiful note to end on. Anatoli, thank you for coming and sharing your wisdom with us and bearing with our bratty questions about Solana. Until next time. Thank you, sir. Please keep Solana up because we've got a lot of need for it and we look forward to seeing the next stage of evolution.
01:02:20.890 - 01:02:22.680, Speaker E: Yeah. Thank you so much.
01:02:23.050 - 01:02:25.700, Speaker C: Awesome. All right, thanks, everybody. Yeah, that's it.
