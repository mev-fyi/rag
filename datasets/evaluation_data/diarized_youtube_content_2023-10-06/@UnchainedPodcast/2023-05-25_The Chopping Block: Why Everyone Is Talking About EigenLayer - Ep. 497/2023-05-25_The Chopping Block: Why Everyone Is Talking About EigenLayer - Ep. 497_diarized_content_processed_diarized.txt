00:00:00.330 - 00:00:02.474, Speaker A: Not a dividend, it's a tale of two quan.
00:00:02.522 - 00:00:05.162, Speaker B: Now your losses are on someone else's balance sheet.
00:00:05.226 - 00:00:07.722, Speaker C: Generally speaking, airdrops are kind of pointless anyways.
00:00:07.866 - 00:00:10.618, Speaker B: Unnamed trading firms who are very involved.
00:00:10.714 - 00:00:12.782, Speaker A: Alec ETH is the ultimate on this.
00:00:12.836 - 00:00:15.840, Speaker D: DeFi protocols are the antidote to this problem.
00:00:16.690 - 00:00:32.898, Speaker B: Hello everybody. Welcome to the chopping block. Every couple weeks, the four of us get together and give the industry insider's perspective on the crypto topics of the day. So, quick intros. First we got the DeFi maven and master of memes. Next we've got Robert, the Crypto connoisseur and Captain of Compound. Then we've got tarun, the gigabrain and Grandpubad Comet.
00:00:32.898 - 00:01:04.110, Speaker B: And today we've got special guest Sriram, the luminary leader of Eigen Layer. And finally there's myself, I'm haseeb the head hug man at Dragonfly. So we're early stage investors in crypto, but I want to caveat that nothing we say here is investment advice, legal advice, or even life advice. Please see Choppingblock XYZ for more disclosures. Sriram, it's great to have you. For those of you who don't know, Sriram is a longtime professor at UW at the University of Washington and he's also a crypto founder, founder of one of the hottest new projects called Eigen Layer. Full disclosure, I think Robot Ventures, you guys are investors in Eigen Layer, dragonfly is not.
00:01:04.110 - 00:01:26.806, Speaker B: But Eigen Layer right now is kind of the talk of the town. Like everybody is talking about Eigen Layer to the point where you even got shouted out by Vitalik yesterday. So, first question, moving from academia into being now full on crypto founder, center of attention in the center of the maelstrom, how has that been for you, transitioning from the academic world to the crypto world?
00:01:26.908 - 00:02:29.930, Speaker E: It's been utter craziness. I think nothing I could have done would have prepared me for this. It is, I think, one thing to be a startup founder where you're basically off in your quiet startup trying to go build your thing. It's a completely different thing to be a founder of a crypto project which is much more community driven have start to interact with a lot more people much early on. In fact, so much so that is critical or essential to the success of the project even before you build anything. So I learned these lessons through doing a project where it was only technology focused four years back when haseeb knows the story with a couple of other professors and when the feeling was exactly the opposite, it was pretty much similar to my professor life where we were just inventing new protocols, algorithms and making them work. And I think this is a very different experience for sure.
00:02:30.080 - 00:02:40.222, Speaker A: Maybe you want to give people a bit of your background of how you got to crypto because obviously you have a unique story in terms of all the different fields you worked in and stuff.
00:02:40.356 - 00:03:16.470, Speaker E: Yeah, totally. My PhD was in information theory, but particularly we were looking at how to build peer to peer wireless systems. Wireless usually has infrastructure like base stations or access points. Can you build a kind of infrastructure free wireless networks? Just nodes, talk to each other, form connections on their own, and multi hop and send information across. So that was my PhD. And at the end of which I realized that this was a pretty cool academic project. We ended up solving some theoretical problems in it, long standing problems, but ended up not having any real impact.
00:03:16.470 - 00:04:02.090, Speaker E: I didn't even know what I was expecting, that suddenly we all give up our infrastructure and now move to peer to peer filers because we were doing purely theoretical things at that point. But after doing that, I got into computational genomics because I was looking for what are some of the most impactful things that we could be working on. And this is around 2011 and twelve and worked on algorithms in computational genomics over several years. Had a bunch of really good collaborators. Several of them went on to win prizes, like the breakthrough prize. But I got a call from my advisor in 2018 around, hey, you know this peer to peer thing that we were working on, that seems to be a thing again. There's this thing called bitcoin.
00:04:02.090 - 00:04:43.330, Speaker E: Yeah, I've heard of bitcoin, and I was very much concerned that previous time we worked on peer to peer, it was all like ben nowhere, and I didn't want to enter into another thing like that. So it took a long time to actually understand what was going on, even though it was very good fit for me technically. It was not something that I wanted to enter without actually having a long term belief in. And the thing that clicked for me is that crypto is our coordination superhighway. Just like the internet is the information superhighway. You need to coordinate across individuals. You need mechanisms for long term memory, long term enforcement.
00:04:43.330 - 00:05:26.706, Speaker E: You need mechanisms for just like we say, bitcoin's main role is to prevent double spend, right? Civilization is one of the main role is to prevent double speak. I say one thing to you and another thing to somebody else. I say one thing to you today and one thing to you tomorrow. And essentially crypto is a commitment engine that can actually enforce keep people's commitments. This I see as kind of like a basic evolutionary advantage for humans, because if we coordinate better together, we can actually build a lot more things together. So that was my core thesis. And once I kind of got into that, I said, okay, no, I'm okay to give up working on genomics and work on so that's how I got in.
00:05:26.888 - 00:06:06.306, Speaker B: It's funny because as you were telling that story, I was remembering when I first got into crypto full time in 2017. I remember so much of the context in which I was taught about all the ideas in crypto were around the history of peer to peer technologies, BitTorrent, like mesh, networking, all that stuff was kind of part of the soup that crypto was born in. And people don't talk about that stuff anymore. Right. It's sort of become, I don't know, sort of passe to make comparisons between crypto and BitTorrent or something. It was very much a moment in time when this very direct line was drawn between this lineage of technologies. But now crypto has kind of become its own thing.
00:06:06.306 - 00:06:08.766, Speaker B: People don't really talk about that connection much anymore.
00:06:08.878 - 00:06:30.280, Speaker A: What do you think the pivotal things that caused that break were? Because at least to me, it's not so obvious why that happened because yeah, 2018, I feel like people were still saying things like that, but I think this last bull market, 2020, kind of was like the clear cut off point. Like, maybe DFI was the thing that.
00:06:30.650 - 00:07:06.294, Speaker B: It feels like the fact that we have applications now is probably the defining difference, is that in 2017, you really had to just tell stories, and the stories could be like, oh, well, this is just like, remember peer to peer file sharing was so big. This is like the money version of that, that maybe had something to do with it. And I think also it was just that the tent got so much bigger that you had to tell a story that resonated with a much broader set of people, especially young people. Right. If you're 20, there's a good chance you don't even know what bitcoin is. You're past the generation. You don't even remember itunes if you're 20.
00:07:06.332 - 00:07:22.554, Speaker A: Today, I asked some Gen Z crypto person who joined, like, last year or something if they knew what a rhinestone was, and they just gave me blank. They gave me this blank look like, are you a fucking alien? What language are you speaking?
00:07:22.752 - 00:07:46.850, Speaker B: If you don't know the reference, you should Google. Rhystone. Back when I got into crypto, you could not be in crypto without knowing what a rhinestone was. That is probably the single biggest calling card of what generation of crypto you came into. But that is another thing that's interesting about cryptoshiram is that in crypto, professors are rock stars. Like, it's a very different kind of thing than in most other technology fields. Right.
00:07:46.850 - 00:08:00.550, Speaker B: It's not just like, oh, you're very smart, and there's an annual Nobel Prize ceremony thing for the smartest professor. It's more like, no, the biggest professors are just awesome and they command hordes of people at will and they fight each other.
00:08:00.700 - 00:08:06.950, Speaker A: Wait, that's true in AI, too. I don't know what you're talking that's true in biology.
00:08:07.790 - 00:08:10.426, Speaker E: Actually, I have the precisely opposite feeling here.
00:08:10.528 - 00:08:11.546, Speaker B: Is that right?
00:08:11.728 - 00:08:40.386, Speaker E: Yes. I think my own experience is basically that it doesn't matter you're a professor or anybody else. It almost is a negative credential to be a professor. So I completely don't play it because in fact, I got asked in another interview where they said, oh, you remember 2018? Like, there was this whole generation of prof coins. First I thought prof coins must be.
00:08:40.408 - 00:08:45.880, Speaker A: Like, something positive, and then you remembered Algorand right.
00:08:47.290 - 00:08:50.070, Speaker B: Come on. Hey. Above the belt.
00:08:52.570 - 00:09:34.018, Speaker E: Yeah. And then my reaction to that is actually that professors build infrastructure, and infrastructure, unfortunately, needed to go with creating both new ecosystems and new tokens of value. Otherwise you couldn't build infrastructure. And I think particularly what I'm addressing in our project is basically how to let professors or innovators in general build new things without having to build pros coins. So that is a short summary of what Eigenveous we talked about this a.
00:09:34.024 - 00:09:56.054, Speaker B: Little bit last time when we talked about bitcoin and religiosity is that every new project in crypto is part technology, part movement, and you kind of have to build both. You have to build the movement, and you have to build the technology, which is not always necessarily done in the same person, but it's most effective when it is in the same person. So you're getting into now the movement building part of your career.
00:09:56.182 - 00:09:58.794, Speaker E: It is. That is the crazy yeah.
00:09:58.912 - 00:10:20.210, Speaker B: Yes. Yes. Well, you've done remarkably well at it so far because everybody is talking about Eigenv. So a lot of people who are listening, they probably don't know what Eigen layer is, or maybe they've heard of it. They have a vague idea what it is. And so I wanted to do an exercise. You know those videos where it's like those buzfeed videos or something, where it's know this physicist explains quantum physics in five levels of complexity.
00:10:20.210 - 00:10:56.154, Speaker B: So we're going to do that, and so we're going to go around, and we're going to explain Eigen layer to a five year old, to a high schooler, to a day trader, to a developer, and then we're going to have you explain it to a crypto professor. Okay. And we're going to try to keep these relatively short just so that we can sort of build up in understanding. So I'll start how I would explain Eigenlaire to a five year old. So if I was talking to a five year old, I would say on ethereum, we have policemen who protect the town. And those policemen, they only protect the government buildings because they're only allowed to protect the government buildings. But with Eigen Lair, they can use the same badges to protect all the stores in the town.
00:10:56.154 - 00:11:00.382, Speaker B: And that's why Eigen layer is so useful. Right. All right. That's my explanation to a five year old.
00:11:00.436 - 00:11:02.400, Speaker A: When's your children's book coming out?
00:11:02.930 - 00:11:05.680, Speaker B: I'm working on it. I'm working on it right now. Please don't leak anything.
00:11:06.050 - 00:11:16.086, Speaker A: I just bought my niece a book by the Stanford professor called Algorithms for Babies. So I'm looking forward to comparing Hasib wait to run.
00:11:16.108 - 00:11:17.462, Speaker B: Do you have an announcement to make?
00:11:17.596 - 00:11:18.280, Speaker A: No.
00:11:20.170 - 00:11:21.702, Speaker D: It'S for a niece, right?
00:11:21.836 - 00:11:22.518, Speaker A: Yeah.
00:11:22.684 - 00:11:28.440, Speaker B: Okay. Of course. All right, Robert, explain to a high schooler. Okay.
00:11:29.130 - 00:12:13.042, Speaker D: If you remember back in the days of your when there was this concept called merged mining for all of the different Shaw 256 cryptocurrencies that came out, people were mining for bitcoin, and while they were mining for bitcoin, they were taking the same hashes and they were mining all of the other bitcoin clones. They were mining litecoin and feathercoin and pure coin and all these things that don't really exist anymore. And the same concept applies for all of the new generations of blockchains, which is, while you're validating Ethereum, you can also be validating new l, two S and optimistic roll ups and sequencer based things and all these other additional blockchains using the same validation resources.
00:12:13.186 - 00:12:14.022, Speaker C: Pretty good.
00:12:14.156 - 00:12:17.550, Speaker B: Very advanced. High schooler. That high schooler knows a lot about merge mining.
00:12:17.570 - 00:12:19.260, Speaker C: That's merge mining. Yeah.
00:12:22.510 - 00:12:28.970, Speaker A: High schooler knows about merge mining and feather forking, but doesn't know about the Rhinestone.
00:12:29.310 - 00:12:37.098, Speaker B: Yeah, we might be hiring if you're a high schooler and you know about feather forking and feather coin. All right, Tom, explain it to day trader.
00:12:37.194 - 00:13:15.270, Speaker C: I'm going to try to work some coinage kind of stuff. All right. There's this chicken and egg problem when you want to start your new coin, if you want to start tron or Tom chain or whatever, where if you're using proof of stake or some sort of stake based consensus, you want your token, your coin to be valuable, but it's not going to be valuable until people are transacting on it. But people aren't going to transact on it until it's safe and you have some sort of way securing the network. What if instead you could use something like Ethereum, which is already live and mature and has a lot of stake behind it, to bootstrap your own network or maybe even replace some of this coinage, and that's sort of the idea with eigen layer.
00:13:15.430 - 00:13:18.922, Speaker B: Okay, Tarun, explain it to a dev median dev.
00:13:18.976 - 00:13:57.110, Speaker A: Yeah. Suppose you're a developer. You've made a smart contract before you've deployed it. The smart contract acts sort of as like you have this sort of magical service in the cloud that is Ethereum, that runs your contract and ensures that the state transitions that you want to have happen, happen, or the ones are forbidden, don't happen. The problem is, not all contracts work exactly the same in the Ethereum environment than on an environment you completely control. And that's because the validators who are putting up sort of some stake have some extra rights. They can add transactions, they can reorder transactions, they can remove transactions.
00:13:57.110 - 00:14:43.426, Speaker A: They have some extra rights that don't guarantee you exactly what you want. Now, in order for you to do that, you would have to run your own infrastructure, create a new l, one that you had to run nodes for, and then have those rules enforced in the consensus for those nodes. But suppose you don't want to have a new l one, but you have an application whose security relies on these guarantees that have to be enforced at the validator level. Eigenv is a way for you to have economic guarantees that the validators enforce these covenants that are stronger than the ones that your contract itself enforces by giving the validators extra rules. And they get economic rewards if they kind of enforce your rules and they get slashed or have penalties if they don't.
00:14:43.618 - 00:14:50.918, Speaker B: Okay. Now, Sriram, can you explain this to a very crypto, knowledgeable academic colleague?
00:14:51.094 - 00:15:35.414, Speaker E: Yeah. At the root of everything we do in a blockchain, whether we think of something as a crypto solution or not, I think the boundary decision boundary is whether it's based on decentralized trust or not based on decentralized trust. So you can think of decentralized trust as the raw material of everything that we build in crypto. And what blockchains like Ethereum do is to take this decentralized trust and refine them into particular products, for example, block space. So you take decentralized trust, you have a group of nodes, they all work together, they arrive at consensus, they run a particular scaling and a particular execution environment and everything. And then out comes a block. Every block there is some amount of space.
00:15:35.414 - 00:17:05.602, Speaker E: And what happens in typical applications that build on smart contract platforms is they consume block space, which is they are consuming this refined version of decentralized trust and then paying for it. So the economy is, if I'm an application and I want to borrow trust from, say, Ethereum, I'm basically buying block space, or my users are buying block space and therefore paying for the decentralized trust that is being shared. But this trust, the decentralized trust underpinning Ethereum, has been refined in particular ways using a particular consensus protocol, using a particular execution engine and so on, using a particular block limit. All of these together give rise to the particular economy of the block space. What if instead, we can go all the way down and get you the raw decentralized trust and create a marketplace for it? What do I mean by raw, decentralized trust? Decentralized trust emerges out of the combination of really two components in most platforms. One is staking, which is I'm putting down a bunch of capital node validators put down a bunch of capital and make a credible commitment that they are going to run this Ethereum block production service according to the rules and the covenants laid out in the protocol. And the second aspect of decentralized trust is decentralization itself, which is that not only I'm putting down a bunch of one guy, put down 1 billion is still different from thousand people put down $1 million each.
00:17:05.602 - 00:18:20.166, Speaker E: So in the second attribute of decentralized trust is decentralization, which is how many different nodes are there? How many different perspectives have been integrated in coming up with this block production? So Eigen layer is a mechanism to allow anybody to consume raw, decentralized trust. So imagine instead of having the ability to program Ethereum at the level of I can write an EVM contract. What if we give you a hook and say that you can go and tell each Ethereum node what particular node software they should run? Very low level programmability, so you have full control of programming the entire distributed system. So Eigen Layer is a marketplace for decentralized trust. It allows you, allows validators node validators on Ethereum to opt in and use their same stake. They already put down 32 ETH and then committed to validating Ethereum blocks. They take the same 32 ETH and then say, oh, I am going to now take this 32 ETH and I'm making a covenant or a commitment not only to validate Ethereum blocks correctly, but also to validate a new service Tom chain correctly, or like haseeb's Oracle correctly or Robert's data storage service correctly.
00:18:20.166 - 00:19:18.910, Speaker E: So I can make all these covenants. And since I am the one who's actually running the node software for all of these different things, I can hold to all of them equally well, because I know I'm running this, I'm also going to run that in the proper way so I won't break any of the covenants of these many different software. So essentially, Eigen layer is a marketplace where we let the trust suppliers, which is nodes who have put down stakers, meet trust consumers, which is, for example, distributed service. Builders like you want to go build a new bridge, a new Oracle, a new chain, a new service which requires end nodes to come together to consensus and have some amount of economic security backing it. Now, anybody who wants to build any of these services, instead of going and wanting their own new decentralized trust ecosystem, can just borrow aspects of decentralized trust from this common framework that alti echoes.
00:19:19.330 - 00:20:21.650, Speaker B: So, Shiram, we were having a conversation a few weeks ago and the obvious objection which led to a very interesting conversation between us was that, okay, the idea of restaking, it's very beautiful, it's very elegant, it's very efficient. This idea that instead of having 5000 tokens, there's an Oracle token, there's a this token and that token and all those tokens are all getting staked separately. Instead you have sort of one group of stakers who are the most trustworthy and they have a lot of stake and they're all using the same stake, sort of rehypothecating across multiple protocols. The obvious objection to that is like, well, look, we're VCs, right? Four of us here, we invest in protocols. And if you are starting a project, it's really hard. What do you raise money for if you don't have a token? If you're like, well, I'm going to pay Ethereum stakers to do this and then my thing will just, I don't know, collect a toll on layer one every time you use it. It's like, how do they raise money? Like, where's the shitcoin? You kind of need this shitcoin economy, don't you? In order for this stuff to work.
00:20:21.650 - 00:20:25.380, Speaker B: What is your objection to that? Objection? Yes.
00:20:27.210 - 00:21:27.942, Speaker E: My objection is that it doesn't stand empirical evaluation. Why do I say that? Like, you go back to 2014, 2015 and say that, hey, you could go raise money and instead of all apps starting to congregate around a platform like Ethereum, they could all go and do the same thing and start their own chains. And we talk about DAP chains today, but DAP chains were the only thing that were possible before Ethereum. Like, you just had a bunch of DAP chains. And Ethereum, by creating a shared security substrate, by reducing the actual cost of security, actually made it more viable for all of these different services to be built. They were all built on a par security standard, like, everybody's sharing the security, which means they inherit several aspects of composability. And all of these effects basically made more and more people build on Ethereum till, to some extent, people realize that, oh, Ethereum doesn't have block space anymore for me to build new things.
00:21:27.942 - 00:22:07.010, Speaker E: That's the only reason you could go start a new L. One is this story has run its course. Oh, there's no more block space to build on top of Ethereum. And then you say, oh, no, I'm going to create a new blockchain that is doing the same thing, but now produces block space in abundance, and then go and create new layer ones like all the other layer ones that we know of. But to me, the logic of aggregation is much more powerful than the logic of segregation. But to actually answer your question in more practical terms, we have thousands of DApps that you guys have funded. We have maybe like ten layer ones that you guys have funded.
00:22:07.010 - 00:23:01.526, Speaker E: Why is that? That's because it's much easier for adapt to establish its use, case and value. And there are many more DApps that are likely to be actually viable than there are, like, layer ones that are likely to be viable. Most layer ones like our own, my own previous startup called Trifecta, which was dead on arrival, right? It's dead on arrival not because it's bad technology. It's dead on arrival because the bar to have a layer one is pretty high. It's pretty steep job to go that. So another analogy that I would like to draw on here is what happened in the Internet in 94. If you want to go build your own Internet Web application, you need to build your own server, you need to build your own identity stack, you need to build your own payment stack, you need to build your own DB, and then you build whatever application you were building.
00:23:01.526 - 00:23:39.474, Speaker E: That's how all the old applications were, like, hotmail or whatever. But in 2023, if you want to go build your application, you go use AWS, you go use OAuth for authorization. You use, like, a stripe for payments. You use some other DB for just tie all these together and then you're really focusing on the thing that you really value. And if you look at it, if you think of things like middleware, nobody really made money on middleware, but like all the VCs over the last 20 years made money on SaaS. Why? Because SaaS is SaaS. Services that built on top of AWS were highly profitable because you can focus on one narrow thing and kill it.
00:23:39.474 - 00:24:19.930, Speaker E: And it's much, much easier to predict whether somebody can focus on a narrow slice and kill it than it is to figure out if they've solved the whole monolith from top to bottom. So I think the modularity that Eigen layer empowers basically makes it feasible for many people to come in and focus on narrow slices and kill it. Like I come in and come up with a secret sharing. That's just a secret sharing layer. Somebody else comes up with a data layer, somebody comes up with an Oracle layer, somebody comes up with an authentication layer. Now, if you're building an application, just tie all these together. And so as a VC, it's much easier to calibrate on sharp focused bets.
00:24:19.930 - 00:25:07.294, Speaker E: Is this the best team to build the secret sharing layer? Is this the best team to build the Oracle layer? And DAP tokens exist in plenty and they're also valuable and because they provide valuable services. And so that's the same thing I would say just because your tokens used for security doesn't mean it's more valuable. And also if you build two systems, one system has a much higher cost basis and another systems actually has a much lower cost basis. Systems, the lower cost basis just wins. In a free market, you can't wish it away. The existence of a shared security system means that the cost of security has gone down. And that means that systems building on top of this leverage an economy of scale that's not available to systems that have to emit a 20% emission annually to keep their security going.
00:25:07.294 - 00:25:41.354, Speaker E: So all those factors together lean towards actually building an aggregated systems. And we are very friendly. Tokens like you can design very complex token incentives even inside something like Eigenve. You can have the tokens absorb a portion of the fees that go into your system. You can have your token be used as the payment token. You can use your token as an artificial staking token in addition to ethereum, giving rise to dual staking models. So you can build all kinds of complex things and it really depends on the applications and use case rather than a one size fits all.
00:25:41.472 - 00:26:42.682, Speaker A: Yeah, I guess another tiny thing I'd add is if we look at the last five years, one of the things we've seen is sort of like the unbundling of how transactions are propagated and how transactions move between chains. And that unbundling is like a one way function, right? It's like second law of thermodynamics of blockchains of modular. Modularity. There's always some extra complexity that comes from hyper specialization and in some ways bootstrapping that specialization. As these things get more complicated from nothing is much harder than trying to build it on an existing network. The simplest example is comparing value extracted on ethereum versus value extracted everywhere else and how that entire supply chain works. It's just actually easier to do it at the place where there's the most liquidity and the most volume versus trying to restart.
00:26:42.682 - 00:26:46.506, Speaker A: And you could argue that namecoin failed but ENS succeeded.
00:26:46.538 - 00:26:46.734, Speaker B: Right?
00:26:46.772 - 00:27:03.378, Speaker A: This is kind of in the same vein. Like a bunch of L ones may fail, but the roll ups that proceed may succeed. It's not that, like all L ones will fail, but I think there's a lot of L ones whose value prop over ethereum roll ups is just a lot lower.
00:27:03.544 - 00:28:00.280, Speaker B: One of the things that was an AHA moment for me in our conversations for on was this idea that you alluded to again, that look, the sort of hundred IQ take is if I'm a founder and I use restaked ETH instead of using my own token to secure my chain, then I can't really have a token. My token has less utility and therefore I'm going to get punished by the market because my token is going to be not very useful. And I think in a way the market is kind of conditioned right now to think that way. Is that like, look, if this token is not used for security, then what the hell is the point of this token? Throw it away, this thing's not worth anything. But it's kind of a nonsensical view because ultimately, in a world where you use restaked ETH instead of using your own token, like your own token can still be the governance token that ultimately governs the protocol and in. Some way is attributable whatever boons the protocol ultimately accrues. Go to the token holders in one way or another.
00:28:00.280 - 00:29:02.678, Speaker B: If it allows you to reward those stakers with less marginal inflation than you would otherwise need. At the end of the day, the only thing that really matters for the value of your protocol is how valuable it is in terms of how much money you can make, how much rake you can actually take in as a protocol and then two, how much you're paying for it, like how much emissions you're getting out. And those two numbers are really the only numbers that matter, which is sort of the cost of administering the service and the price that you receive for giving the service. If you want to really dumb it down at the lowest level and ultimately paying for security with rehypothecated less volatile collateral like ether, as opposed to paying for security with one single use collateral that you invented that's super volatile, you're always going to have to pay more in super volatile, low liquidity collateral, which is I. Think to me that feels like the most robust, non obvious argument for why it is that this is a better equilibrium for how people buy security. Right now with tokens, people are bundling, I want to buy security and I want to govern my protocol using the same token. But you don't need to bundle them.
00:29:02.678 - 00:29:24.420, Speaker B: There's no reason in principle why they should be bundled just because they are bundled for other layer ones and for many other protocols. But at the application layer, I feel like if eigen layer succeeds at this mission, it's going to do so by breaking that link in the mind of honestly many traders. This idea that oh well, that's what gives a token value, which is that it's used for staking, which doesn't really make sense.
00:29:25.430 - 00:30:13.038, Speaker E: Yeah, I think we are already starting to see this with the layer twos commanding some value. Like the layer two tokens are not necessarily the security tokens and don't even have a path to be staking tokens for some of these. But still people have started. I think there's a flippening in the mind or the narrative which is that okay, these tokens have value because these systems create value and there are some fees that gets attributed eventually back to these token holders. So I completely agree with that. In fact, that was the dominant way in which we ended up with the protocols. In fact, there is that other perverse thing with that bundling that you talked about haseep, which is that the total amount of security you can buy is bounded by your token market cap.
00:30:13.038 - 00:31:17.170, Speaker E: Like what is this thing? This is a very weird thing. If you stake your own token for security, the total economic security you can buy is bounded by your token's market cap. Those two things should have no relationship. There's no web two company which cannot serve a bigger web two company because there is no relationship between your company's market cap or value or whatever and who you can serve. But when you rely on things like economic security, the smaller you are, the less people you can serve because you don't have much security and kind of like it's like shooting you yourself in the foot. On day one when you're starting a protocol, you might as well like if you are successful in building a protocol even with restaking, eventually you may decide not to use restaking because of whatever reason and you can go ahead and be your own layer one or just your own security token or whatever. These options are all available if the marginal advantage of using a lower cost of security is not dominant at that point.
00:31:17.170 - 00:31:54.906, Speaker E: But I think for most protocols there is a kind of like a bootstrapping problem that Tom alluded to earlier, which is that you can't even get started because if your token market cap is like 100 million, your economic security is at most 100 million. If everybody stakes this seems to be like a very bad association. And DApps have clearly avoided this. And I was just thinking about how did DAPs avoid this fate? Like DApps have the entire ethereum's economic security, even in their market cap is zero, right? Uni system is not as secure as the uni token and that is roughly what we want to emulate for all these other systems.
00:31:55.098 - 00:33:10.730, Speaker B: So speaking of security, that brings us to the post that I was alluding to earlier that Vitalik wrote earlier this week. So the title of the post, and I'd love to just get everybody's reaction to it title of the post is don't Overload Ethereum's Consensus. So there's a few kind of big themes in the post, but the main thrust of it is basically to say there's a lot of experiments that are taking place of trying to leverage ethereum's security model and ethereum security through all of its stakers, but also some implicit assumptions about ethereum's social consensus. Meaning that when things go wrong, is ethereum potentially going to fork? Is ethereum going to favor one thing or another? Is it going to do a soft fork? Is it reasonable to expect ethereum to bend in certain ways in order to protect its overall ecosystem or protect individual players? Or even if you're doing something that's not directly affecting the normal operations of ethereum, applying certain kinds of pressure to stakers and making it so that stakers should be a little bit more likely to do X or Y. Or just even be thinking in a certain direction. More may be ultimately deleterious to the protocol, being neutral and being unappinionated about the applications that are living underneath it. So what were your guys'reactions reading this post? It got a lot of attention, a lot of conversation going before I jump over to Sriram.
00:33:11.070 - 00:33:53.014, Speaker D: Well, my super high level take was that I think the post only focuses on the risk and not the potential benefits. The risk being, hey, this is a total distraction for ethereum validators. And if you I'll use this word corrupt them with outside economic incentives, it could maybe mess up the economics of ethereum at the core foundation without saying, hey, if this supercharges ethereum validators, isn't that a really good thing for ethereum if there's even more use where this is the super collateral? So I think it's just focused on.
00:33:53.052 - 00:34:29.540, Speaker B: Risk and downside and not, okay, let me give you a sort of counter analogy, is like somebody's like, yeah, okay, you might be worried about money in politics and that sounds really negative, but what if you gave so much money to politicians that all the best people became politicians? Maybe it's like on the upside, I think what Vitalik's pointing to is like the risk of corrupting validators. It's like something like ethereum is a public good if we throw too much money at it is kind of like money in politics, right? It's sort of corrupting by its nature now you can't stop it, right? Like, how do you stop it? I don't really know other than just like know kind of upbringing posts. Like.
00:34:31.590 - 00:35:25.822, Speaker C: Of I think in Singapore they have some of the highest paid sort of public servants kind of for this reason. I mean, they're not politicians, but it's like you track really great talent and it sort of reminds me of the Trump quote like, I'm too rich, they can't bribe me. I think there is some kind of merit in specific applications, but I don't know, I think a lot of it the poster focuses on consensus and overall I think I agree with the design philosophy of keeping core consensus very simple. I think a lot of other chains have experimented with sort of adding a lot more at the base layer. But at the same time, I guess I sort of zoom out and think a bit more like application sort of social consensus capture. And I think CB had this post from a while ago around Ethereum being unforkable because of DeFi and specifically talking about USDC. And I think that in my mind feels kind of similar here, where it's like people don't want to use Ethereum, they want to use the applications that are on Ethereum.
00:35:25.822 - 00:36:09.010, Speaker C: And if there are fundamental problems with the applications that are on Ethereum, of course social consensus is going to direct it to a new fork. If there's a vulnerability in uniswap and all the value is drained, I think people are going to move to the fork of Ethereum where the bug is fixed and uniswap is not drained. And so I empathize a little bit with sort of the sort of design philosophy point of view here, but I don't think it feels kind of like, again, like a moot point. Like people are going to go to the chain where there is stuff that they want to use. And so if that stuff that they want to use is going to use Ethereum consensus, that is kind of the end of the show, I think.
00:36:09.160 - 00:36:56.770, Speaker A: I think in some ways Ethereum already made sort of the FauciAn bargain by moving to proof of stake in the sense that you can't get a lot of the same risk guarantees anyway. There's this availability trade off. There's kind of the idea that people can't join and leave as easily as you can in proof of work. This idea that geographic distribution is much worse, right? There's like a ton of known trade offs. Those trade offs probably have higher economic value than a lot of the application level risks in my mind. And you already made those decisions. So from my perspective it's like, well, you chose a system that allows this extra functionality, takes on this other risk.
00:36:56.770 - 00:37:28.620, Speaker A: You can't really stop it from happening. In the same way that the last time there was a don't overload consensus style post, it was like, hey, we're never going to allow delegation in Ethereum. Lo and behold, what happened was lido. So I just think the inevitable hand of capitalism and market forces will inevitably drive these things into existence, whether decided or desirable or not. Because validators are not really honest, they are rational. And those rational validators want more money.
00:37:29.710 - 00:38:24.906, Speaker B: Okay, that feels very fatalistic. Tarun and I don't totally agree with it because I think let's use the analogy of like money and politics. I think that actually is a relatively good analogy because it is in a total free market, you would just be able to bribe politicians to do whatever you wanted, right? And people talk all the time about bribery attacks being one of the fundamental issues in any kind of democratic system that has to be overcome in one way or another through anti bribery mechanisms such as strong laws against bribery in crypto. Obviously we are in a permissionless system or whatever modulo more or less permissionless. And that sort of means that you can take the view of like, okay, well then because permissionless, whatever, there's going to be bribery attacks and there's going to be people just making validators, there's going to be feather forking, there's going to be all this other stuff. For the most part we don't see a lot of these behaviors. And I think the reason why we don't see a lot of these behaviors is twofold.
00:38:24.906 - 00:39:07.820, Speaker B: One is that a lot of the people who are actually running the big validators on Ethereum, they're not purely market oriented. They are actually relatively ideologically aligned with Ethereum just because, look, if you are a total ruthless capitalist, you're just not going to, I don't know, it's like a weird line of business to get into. It's not the most profitable thing in the world to run Ethereum validation services. It's like kind of a weird nerdy business to get into. Maybe it's a little bit more true in the proof of work mining days, but in the world of proof of stake validation, there's no random guy who just happens to have a retired power plant next to your house. You're in the same footing as everybody else since you just love running validators and those kinds of people don't want to watch the world war.
00:39:08.590 - 00:39:29.198, Speaker A: On the other hand, the reason you have staking derivatives and mev is redistributed to many people who could never capture it themselves is because the ruthless nature of this led to this securitization. That securitization let less sophisticated actors gain access to those returns for a small fee.
00:39:29.294 - 00:39:29.694, Speaker B: Totally.
00:39:29.742 - 00:39:36.050, Speaker A: And some excess risk. Right? And I'm saying that this is just the same march, we're going in the same direction.
00:39:37.190 - 00:40:24.050, Speaker B: The question is not is it marching in that direction? Totally agree with you that all markets tend toward efficiency over time, but the difference is in what way are the institutions behind Ethereum and the culture that is enshrined in Ethereum? In what way are those things modulated by the institutions that are held up by Ethereum. And Vitalik, of course, has a large role in that because he's like kind of the religious leader or whatever forefather of Ethereum. And I think what he's doing in this post is not just saying like, guys, please don't be totally self interested, but I know you're going to anyway. It's not like saying, hey guys, please don't extract any V. Like if you do that, it's really going to hurt Ethereum. Why are you hurting me? I feel like it's very different than what he's doing. What he's doing is he is advocating for a certain set of institutions.
00:40:24.050 - 00:41:06.846, Speaker B: And that set of institutions is enforced collectively by almost everybody. I think it's very clear that Ethereum does have institutions, right? And these institutions have been conveyed through both leaders like Vitalik, but also just like the kind of ever present culture that is everywhere in Ethereum, that even random people at DevCon you will find them and they'll just have these beliefs and they'll be walking around with them, even though they also want to make money. And they also are self interested in different ways. And the maintenance of those institutions is really subtle and complex. And I feel like that's what this piece is ultimately about. If it was really just, hey, don't extract any V because that makes you an asshole, then it wouldn't work. And I would say, okay, well, this is doomed.
00:41:06.846 - 00:41:15.140, Speaker B: This is obviously just a futile attempt to delay the inevitable. But I wouldn't say that that's true of what Vitalik is doing here.
00:41:15.450 - 00:41:38.694, Speaker A: I'm not saying that the post said that as much as there was a little bit of tis tiskness to it, right? They had this tone of little like, you shouldn't have done that. I find that to be the part that I'm like, well, this happened before. I don't know what you're fool me once, I'm the idiot.
00:41:38.742 - 00:41:43.034, Speaker B: Fool me twice, maybe you're let's bring you what is your take on this whole thing?
00:41:43.072 - 00:42:03.570, Speaker E: Okay, I have a somewhat different take. Maybe it integrates all of your things and adds a different dimension to it. I think the first thing is the title of the post. The title of the post was do Not Overload Ethereum Consensus. But actually, if you read the content, it is do not overload Ethereum social Consensus. It's. Do not overload ethereum social consensus.
00:42:03.570 - 00:42:47.186, Speaker E: And he's basically trying to do what Haseeb was pointing out, I think in my view, is basically saying to take the government type analogy, what he's saying is don't build a bank, take too much risk and then come to the government for a bailout. That's what he's saying. You go do your thing. You go do build restaking, you go build crazy things. Don't rely on Ethereum is going to fork and save your ass if something goes wrong. Basically that's the shelling point he's trying to kind of get everybody to agree on. There may be a big project, there may be uniswap, there may be comfort, maybe ion layer is big, doesn't matter.
00:42:47.186 - 00:43:22.734, Speaker E: If you get screwed on a different layer, go deal with that layer. We're not forking ethereum for you. That's the boundary. The boundary is basically what is the core concerns of the protocol. So to answer Hasid's analogy of politicians and bribing politicians, you can pay politician to write computer programs in addition to whatever they're doing in their office. So the concern of the government is to make sure that when they're in office they do the thing that they're supposed to do. And that's why we are slashing at the ethereum core layer to protect it.
00:43:22.734 - 00:44:29.698, Speaker E: And the slashing at the ethereum core layer protects against safety faults and protects against liveness faults. Will fork ethereum and safety faults are like programmatic, right? You sign two blocks, you're going to get slashed, it's programmatic. But liveness faults are non programmatic and that needs the use of social consensus. He's basically saying we're reserving social consensus for the one fault that is at the core of the protocol, not for all the other things that you may want to use it for. And I think it's a really good, really good boundary setting, which is what is the concerns of the protocol and what is the concerns of the free market. Concerns of the free market and don't externalize risk from the free market into the core protocol? That is basically what I think the article is trying to say. And I think the shelling point or the equilibrium that it's trying to set is when somebody comes and claims that oh, we are so big that if we go wrong like ethereum is going to come fork for us, that's not going to happen.
00:44:29.698 - 00:45:12.570, Speaker E: I think it's a really good demarcation of boundaries. And if you look at the article and read casually, he's explaining all the things that are low risk. Things like staking for a new chain he's saying is low risk, specifically called out like take Deutsche Coin, run it and validate it. So the way we view it, in fact, we have internalized all of these inputs for the last like 15 months. The way we build our protocol is already assuming that this is how things are going to be. We cannot rely on ethereum's like social consensus. So all mediations happen in protocol on agonair and this made us think much more carefully about the various risks and how we handle it all in our layer.
00:45:12.570 - 00:46:01.342, Speaker E: We can't say throw our hands up and say ethereum is going to handle it for us. And I think it's really good that he wrote this up because now when other people look at restaking they're like oh, it's such a simple idea. It's as simple as just take a liquid staking token, put it in fork solana and build it on ethereum, right? And we didn't do this. We could have done this like one year back we took a lot of efforts in minimizing all kinds of risks and externalities to Ethereum. We have to worry about what are the slashing risks and how it affects validated. We have to worry about what are the centralization risks to Ethereum, how do we minimize that. We have to worry about what kinds of slashing can we allow on protocols, how to make these slashings all objective and attributable rather than subjective and let Ethereum deal with it.
00:46:01.342 - 00:46:30.658, Speaker E: So all of these things have been internalized into the construction of the Eigen layer protocol and how we approach the services that have been built on top of Eigen layer. But somebody else from the outside may not know or understand that these are the boundaries that we've tried to maintain. But so that's why I was actually quite happy to see that kind of a boundary setting as to what is the concern of the protocol, what risks have to be internalized into the systems that are being built versus externalized into broader ethics.
00:46:30.834 - 00:47:28.780, Speaker B: So I love that analogy, especially given how timely it is given all the stuff going on with the banking crisis of this idea of like, hey, it's almost in a way a self fulfilling prophecy that if you build something and you assume that Ethereum is going to bail you out, right? If you sort of you get this culture of people thinking in their mind that we're going to get bailed out if something goes wrong, then you get collective risk taking. You get basically this sort of moral hazard where everybody takes on lots and lots of risk and then when things blow up, the pressure to try to bail something out becomes really strong, right? If anything, it becomes almost self fulfilling that people kind of expect that this will get bailed out because everyone's been saying that it's going to get bailed out. And so in some way you need to sort of stop that spiral before it begins and say, hey guys, just so you know, we're not going to bail any of this shit out. If this thing fails, you guys are on your own and you're fucked. Now that being said, you can say that all day long. If optimism gets hacked or if, let's say, God forbid, uniswap gets hacked, all the money uniswap gets drained. I think there's a good chance that Ethereum would.
00:47:33.170 - 00:47:56.502, Speaker E: But it does serve the purpose that you exactly said, which does not encourage excessive risk taking. This is basically by setting the selling point, is basically driving people towards be more conservative and then of course something happens, then we figure out what to do about it, right? But you can't go with the A priority assumption that everybody's going to get bailed out. So you go do your fun stuff.
00:47:56.636 - 00:48:35.934, Speaker A: Although I think there was even some more stuff written that says even that might not have might not happen or at least intimated that when Vitalik talked about the difference between tyco, which is like a small L two. And optimism and arbitram and with the argument that, hey, the developers and optimism arbitram overlap more with the ethereum core developers than tyco. So they will, in theory, have this ability to kind of cause their fork, their preferred fork. But we have to resist that. I thought there was a very distinct thing that even in this unit say that right.
00:48:35.972 - 00:48:45.830, Speaker B: That's the thing is know, if you're Janet Yellen, you got to go up and say we're not going to bail out any banks before the bank failures start. But then once the bank failure started, you're like, all right, let's go, fuck it, let's bail know, let's bail the banks.
00:48:47.770 - 00:48:49.880, Speaker A: I wouldn't compare the two of them.
00:48:50.650 - 00:49:03.334, Speaker B: Okay, so Turu, do you think that if optimism was hacked, all the money was drained that Ethereum would fork? Where would you put place the ODS at 55, 45? See, more likely than not it would fork.
00:49:03.382 - 00:49:14.560, Speaker A: No, more likely it would fork, but not by much. I think it would actually be quite a contentious issue. I don't think it's like 100% chance thing at all.
00:49:15.090 - 00:50:11.454, Speaker D: I think the best historical context for this is the Dow, right? The Dow happened to be roughly the only major application on Ethereum when it was hacked. So it's not like it was like one of many. It was roughly the only actual application with substantial assets and it was consequential enough that it was the first and only crisis response hard fork for Ethereum. And now we have Ethereum classic and its years in the historical rear view mirror. I actually think if something like optimism were hacked or a different L two, right? I don't know if it's as consequential as the Dow, to be honest. The Dow was one of one, it's not one of five. And I just think the total impact is less.
00:50:11.454 - 00:50:26.578, Speaker D: It would be a brutal, brutal, brutal learning experience. But I actually don't really think Ethereum would fork. I think it's like a 3% chance really. And obviously it's all spitball, but I don't think the magnitude of the event would be as serious as when the Dow was hacked.
00:50:26.674 - 00:50:28.200, Speaker B: I think that's definitely true.
00:50:29.290 - 00:51:10.820, Speaker E: Interesting variation of the question is whether it'll fork for lido just in terms of percentage TVL of what is going on. I think the Dow was 15% of all ETH. That is the level. I don't think we have any applications kind of reaching that even something like lido is not yet at like 15% off ETH. But I think that's the number to look at is what percentage of ETH is basically at risk and whether there was any kind of soft or other assurances that we are behind.
00:51:12.710 - 00:51:47.674, Speaker B: So here's the thing going back to the idea of institutions and politics, I think in a way Ethereum would actually be kind of glad to see lido get hacked because like, AHA, we told you guys you shouldn't have. Like, this is why you shouldn't play with fire. We didn't build this in the protocol for a reason. Don't overload consensus, don't overload consent. Exactly. Don't start getting too confident in your little playthings that you build on the beach what it represents for the ethereum core developers, or just not the core developers, the intelligentsia, let's say, of ethereum. What it represents is that Lido is a financialized protocol.
00:51:47.674 - 00:51:57.326, Speaker B: Like, lido is basically like these guys, like Tarun said, look, it's the market forces. You try to get yield, mev, blah, blah, blah. We want staked ETH to be I'm.
00:51:57.358 - 00:52:08.050, Speaker A: Saying this in a positive way, right? They literally democratized access to mev returns. Sure. You as the random ethereum holder, had no way of even realizing them, right.
00:52:08.120 - 00:52:09.906, Speaker B: Other than Staking, which is what they want you to do, right?
00:52:09.928 - 00:52:31.334, Speaker A: They want you to stake no, but you needed to kind of use a staking derivative because you yourself, even if you ran a home staker, very unlikely, would have been a good flashbots auction participant. Right? My point is, they did actually serve this democratizing yield thing, which is important. But my point is, if that exists, the market will find a way to make it happen. I just don't believe that anything other than that will be the outcome.
00:52:31.382 - 00:52:48.162, Speaker B: But let me just finish. My point is that for lido, lido is, I think, somewhat ancillary to ethereum's goals. In a way. It's almost like a little bit of a thorn in their side. Whereas the L two S are the story. Like, that is the point. We are going to scale ethereum through L two S and these are the anointed ones.
00:52:48.162 - 00:53:14.490, Speaker B: Basically, optimism and arbitram. Mostly optimism is anointed because it's all ex EF people. And if that goes under, it's not just that, oh, there's this amount of money that was lost. I think it actually would be less about the overall number, like the amount of ETH, because from the perspective of lido holders, like, oh, you took a 30% haircut. Oh, so what? Boohoo, you shouldn't have been fucking around with derodas. Whereas with the layer twos, it's like, oh, I thought this was trustless. There's like all sorts of things on the L2, not just ether.
00:53:14.490 - 00:53:23.146, Speaker B: The kinds of stories would just be so much worse. I feel like, if an L2 exploded and that's why I think it'd be different, even though in monetary terms.
00:53:23.168 - 00:54:09.340, Speaker C: It'D be yeah, I kind of disagree. I think an L two is effectively like a bridge and we've had really big bridge hacks and we have not done a fork and so whatever. Whereas Lido 30% of all ETH, you could cause some serious mayhem with consensus and overall chain stability. Again, I do feel like this is kind of like young man yells at cloud, like it doesn't actually matter because let's say Lido gets hacked, someone is going to try to do a fork that reverts the hack. The question then is, well, which chain are USDC and USDT going to accept withdrawals on or that's application value capture? And so, you know, no one really cares what Vitalik thinks. It's like, who can basically anoint the chain? And there's other actors, there's application level actors that can do that. It's your.
00:54:11.950 - 00:54:25.566, Speaker B: No, no. It's bringing around full circle. It's very true. It's very true. So, again, I guess the reality is that we're all under the cult of Jeremy Alair, whether we know it or ultimately he's behind the scenes pulling the levers to decide.
00:54:25.598 - 00:54:52.018, Speaker A: End of the day, I think Vitalik, like any religious leader, as you pointed out, who's successful, has to write sermons. This was a good sermon, right? In some sense, I just am more pointing out that I think there have been a lot of platitudes and diatribes about on both sides of it, whereas I just feel like it's just saying kind of the obvious thing of like, well, this is probably going to happen. Here are some road rules. Don't do the bad ones.
00:54:52.204 - 00:54:56.506, Speaker B: Exactly. Which is I mean, that's kind of the role of a sermon, right, is like you say something that's already been.
00:54:56.528 - 00:54:59.370, Speaker A: Said asop's fables for proof of stake.
00:55:00.990 - 00:55:21.762, Speaker B: The point of it is you got to say the sermon at the right time. Right. It's like the perfect moment to give the sermon, which is the characteristic of a good preacher, is not that they innovate on the source text, right. They don't. They shouldn't. But rather that they pull out the right lesson at the right time. That the congregation that the congregation needs to hear at that given moment.
00:55:21.762 - 00:55:28.130, Speaker B: And I guess this is the time that we're all messing around with consensus. So it's a good time for us to get those rules of the road read back to us.
00:55:28.200 - 00:55:48.586, Speaker A: Wait, Triumph, I have one question I've wanted to ask you, but I figured since now is recorded, I can make other people have to listen to this answer, which is, why does your logo looks like 2D error correcting code, but it's too correlated? What is this tree thing? Is that forking? Is that bring the T shirt up.
00:55:48.608 - 00:55:49.434, Speaker B: Closer so we can see?
00:55:49.472 - 00:55:50.060, Speaker A: Yeah.
00:55:51.390 - 00:55:56.794, Speaker B: How would you describe that? I don't even know how to describe it. It's like an L with, like a pixelated Y sticking.
00:55:56.842 - 00:55:57.440, Speaker E: No.
00:55:59.810 - 00:56:01.630, Speaker D: It'S an eigen layer.
00:56:02.710 - 00:56:03.630, Speaker B: Eigen layer.
00:56:03.710 - 00:56:31.674, Speaker E: Obviously, it's obvious. But what we did is actually this logo goes with how the symbol is written, the word mark is written. And there are many ways to write this word mark because we want to just eigen is in German means your own. So Eigen layer is your own layer. You can make many things out of it. So you can write the Eigen layer word mark. Actually, we have many, many ways of writing the word mark.
00:56:31.674 - 00:56:43.130, Speaker E: And there's an algorithmic relationship between how. To write the word mark and how this symbol automatically changes. So we have a family of symbols and they're all like but there's an underlying principle behind the color of them.
00:56:43.200 - 00:56:43.820, Speaker A: Yeah.
00:56:44.270 - 00:56:47.674, Speaker E: Chat, security, modularity, open. Innovation.
00:56:47.802 - 00:56:57.566, Speaker B: Good. You got the beginning of religion going. I like that. That's very important. Christianity, there was, like, 17 different symbols you can use to identify yourself as a Christian.
00:56:57.758 - 00:57:00.530, Speaker E: This is Calvin's Brainchild.
00:57:01.670 - 00:57:03.214, Speaker B: You guys are calvinists. You guys are calvinists.
00:57:03.262 - 00:57:05.220, Speaker A: I see. Very nice.
00:57:05.590 - 00:57:18.390, Speaker B: Okay. Speaking of predestination, I think it's time for us to wrap up. But Sriram is great pleasure having you on the show and looking forward to see it's not live yet. Right. When do we get to see Mainnet?
00:57:19.370 - 00:57:36.046, Speaker E: We're going through a staged Mainet where we are basically going to turn on just Staking first. Then we turn on delegation and node operators, and then we turn on new services. So we expect the first turn on to be in the coming months.
00:57:36.228 - 00:57:46.986, Speaker B: Okay. Sounds very controlled, very pious. I'm glad to hear that. I'm sure Daddy Vitalik is appreciative of your guys conservatism. Awesome. All right, siram. It was a pleasure.
00:57:46.986 - 00:57:47.982, Speaker B: Thanks, everybody.
00:57:48.116 - 00:57:50.490, Speaker E: See you on the next thank you so much, asik.
