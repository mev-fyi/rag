00:00:04.640 - 00:00:40.373, Speaker A: Hi everyone. Welcome to Unchained, your no hype resource for all things crypto. I'm your host Laura Shin, author of the Cryptopians. I started covering crypto nine years ago and as the Senior editor at Forbes, was the first mainstream media reporter to cover cryptocurrency full time. This is the August 27, 2024 episode of Unchained. Get ready for the world's largest Crypto event token 2049 Singapore September 18th to 19th Balaji Srinivasan RA, Richard Tang, Arthur Hayes and 300 others will hit the stage joining 20,000 attendees. Visit token2049.com
00:00:40.373 - 00:01:15.445, Speaker A: for 15% off with the code unchained link in the description. Mantle's Emeth is now the fourth largest LST with $1.3 billion in TVL. Emeth offers holders cumulative incentives and airdrops in addition to native eth pos yields. This includes exclusive rewards like Aigan and Cook. Check it out at Meath mantle XYZ campaigns Polkadot is the original and leading layer 0 blockchain with over 2000 plus developers and the Polkadot 2.0 upgrade will be a massive accelerator for the ecosystem, making it faster, more secure and adaptable.
00:01:15.445 - 00:01:55.055, Speaker A: Perfect for gamefi and DEFI to build, grow and scale. Join the community@p Polkadot.net ecosystem community today's topic is next generation parallelized EVMs. Instead of our usual format, I'll be conducting mini interviews about three innovative blockchains sei, Monad and Eclipse, each of which employs distinct methods and faces unique trade offs in their quest to achieve high scalability. First up we have Keone Han, co Founder and CEO at Monad Labs. Next we'll speak with Jay Jogue, Co Founder of SEI Labs. And finally we'll hear from Vijay Chetty, CEO of Eclipse Labs.
00:01:55.055 - 00:02:01.425, Speaker A: First I'm talking to Keoni Han, Co Founder and CEO at Monad Labs. Welcome Keoni.
00:02:01.555 - 00:02:02.757, Speaker B: Thanks for having me Laura.
00:02:02.861 - 00:02:23.021, Speaker A: Monad is an Ethereum virtual machine compatible blockchain that features what is being called a pipelined architecture that enables a high throughput of 10,000 transactions a second and it also has one second block times. So tell us how Monad got started and what problem you were trying to solve with it.
00:02:23.213 - 00:03:02.135, Speaker B: Monad started in the beginning of 2022. There are three co founders, Eunice Garda, James Hunsaker and myself. So James and I are former co workers from JUMP Trading. We worked together for about eight years building performant trading systems and then spent a little bit of time in the crypto team at jump, mostly working On Solana Defi when we realized that there was a need for much more performant EVM execution and decided to leave jump and start Monad along with the third co founder, Yunus Giarda, who has a technical product management background.
00:03:02.295 - 00:03:11.515, Speaker A: And when you were saying a more performant evm, you just mean like faster or what were some of the other things you wanted to try to push forward?
00:03:11.975 - 00:03:45.565, Speaker B: Yeah, the core focus of Monad is to get the maximal performance out of really minimal hardware. And in order to do that, we need to build new software from the ground up and introduce new architectural improvements. So kind of the premise of Monad is stacking four major improvements on top of each other that each have a bit of a multiplier effect on the overall efficiency of the system. And by stacking those together, we can deliver really exceptional performance.
00:03:46.225 - 00:03:47.769, Speaker A: And what are those features?
00:03:47.897 - 00:04:44.805, Speaker B: Right. Just to mention them really quickly, from sort of lowest level to highest level within the stack. Those improvements are a custom state database for storing Ethereum Merkle tree data natively on SSD and enabling much more efficient access to that state utilizing all of the capabilities of the ssd. The second improvement is optimistic parallel execution for running many transactions in parallel while still ultimately getting to the same end state as if those transactions were run serially. The third improvement is asynchronous execution, which is creating separate swim lanes between consensus and execution, thus allowing execution to occupy the full block time as opposed to only a small fraction of it. And then the final improvement is Monad bft, which is a performant consensus mechanism for keeping hundreds of nodes that are globally distributed in sync with each other.
00:04:44.965 - 00:05:01.269, Speaker A: Okay, so I think the part that probably a lot of people might have questions about is parallel processing. Just seeing that immediately sparks the question of, for instance, how you would keep defi composability while having parallel processing.
00:05:01.437 - 00:05:49.289, Speaker B: Yeah, that's a great question. Just to emphasize, in Monad, the blocks are still linear and the transactions within a block are still defined in a in a linear fashion. Like there's a total ordering between the transactions still. So everything is exactly the same as in Ethereum. From that perspective, the parallel processing is all done under the hood. It does not affect the outcome of running those transactions. And that's the guarantee of optimistic parallel execution is it's running, it's doing a bunch of work in parallel and doing enough bookkeeping so that when the results of that parallel processing can be committed serially, that is in the original order of those transactions, we could be safe.
00:05:49.289 - 00:05:57.445, Speaker B: Like, we could be sure that every single Commitment is correct and re execute if there's any any inputs that have changed since then.
00:05:57.985 - 00:06:06.125, Speaker A: And the other features you mentioned, you mentioned a custom state database. I'm assuming this is to address issues like blockchain bloat.
00:06:06.435 - 00:07:13.783, Speaker B: Yeah, that's a great question. Agreed that the single biggest bottleneck for execution is state access. And then a very related topic is as the state gets bigger and bigger, the cost of accessing state, like the latency to access any particular piece of state, grows in existing Ethereum clients. And the reason for that is that the databases that Ethereum clients use, whether that's Geth or Wrath or Aragon or other ones, they're basically defining a database, but they're embedding it inside of another database. And the actual database that is being used has a separate tree structure. Therefore, when data is being stored in the Ethereum Merkle tree and someone's trying to navigate to read one of the pieces of state within that tree, there's actually a huge amount of interaction that happens because each of those individual nodes in the Merkle tree are being stored inside of another database structure. So basically the we call it monadDB.
00:07:13.783 - 00:07:32.687, Speaker B: It's this custom database restoring state and it's specifically optimized for the problem of storing Ethereum Merkle tree data. But it's a very significant undertaking because building a database from scratch is. It's a very complex process to build that entire thing and define how all the storage is used.
00:07:32.871 - 00:07:39.235, Speaker A: And so why build this as a separate blockchain rather than as a layer 2 decentralization?
00:07:39.535 - 00:08:36.269, Speaker B: At the end of the day, we think it's really important that there is decentralized block production with many nodes that are participating in consensus. We think that's important for censorship resistance. We think that's really important for decentralizing control over the network overall. And with existing L2 solutions that we see even today, they pretty much all still have a centralized sequencer. The other major reasons are performance and cost, which go hand in hand. But at the end of the day, in order to build a really performant system, one needs to optimize all layers of the stack, whether that's the execution component, whether that's the consensus component which is keeping all these nodes in sync with each other, or other considerations like the data availability consideration. And so Monad is an effort to tackle all parts of the problem and build a really efficient singular system that delivers maximal performance.
00:08:36.437 - 00:08:41.477, Speaker A: You also mentioned asynchronous execution as another feature. Tell us more about that.
00:08:41.581 - 00:09:31.115, Speaker B: The first thing to know about in Order to understand asynchronous execution is to know that, for example, in ethereum, although they're 12 second blocks, the actual budget for execution is roughly 100 milliseconds, which is only 1% of the block time. And so it's kind of like that. I think there's a movie Limitless which has its premise of like, you only use, quote unquote, 10% of your brain. What happened? If you could use 100% of your brain, how much smarter would you be? And there's this pill that people take and a bunch of hijinks that ensue from doing that. So asynchronous execution is kind of the same concept. It's the idea of trying to utilize the full block time for execution. And the way that that's accomplished is by creating two separate swim lanes for consensus and execution.
00:09:31.115 - 00:10:06.075, Speaker B: And when producing a block, the consensus mechanism only involves communication between different nodes in the network to come to agreement about the official ordering of transactions without executing it. And then as soon as that consensus completes on a block, then two things can happen in parallel, the first of which is consensus over the next block. And the other thing of which is execution over that block, which just got consensused. So it's basically the idea of creating this pipeline of two phases which ultimately allows the full block time to get used for execution.
00:10:06.595 - 00:10:14.215, Speaker A: Okay. Oh, interesting. And then you also mentioned Monad BFT as another characteristic. Can you describe that?
00:10:14.715 - 00:11:06.335, Speaker B: Monad BFT is a high performance consensus mechanism that is responsible for keeping hundreds of nodes that are fully globally distributed in sync with each other. Monad BFT is a derivative of the hot stuff consensus mechanism and it has linear communication overhead, meaning that nodes basically, instead of having to all communicate all to all to each other, which results in a huge amount of traffic, instead there's only direct communication between each leader and all of the other participating nodes in the network. So it's really efficient and it can carry a very high bandwidth in terms of the overall payload. And both of these are really characteristics that are needed in order to allow the consensus mechanism of Monad to keep up with the high performance execution capabilities.
00:11:06.995 - 00:11:22.935, Speaker A: And so since Monad will be or is its own blockchain, but then is also EVM compatible, how would you pitch this to developers who want to be in an EVM environment, but then, you know, could also just go on Ethereum itself?
00:11:23.635 - 00:12:11.199, Speaker B: Right. I think that Monad at this moment, right now, is delivering sort of the best of both worlds for developers, both performance and portability. As you said, most Developers are building for the EVM like they're building in solidity. They're using existing tools and libraries. People don't think about the applied cryptography research component, but almost all of the research is being done in the context of the EVM as well. So there's this really significant network effect around this existing virtual machine architecture. And Monad being fully EVM compatible allows developers to reuse existing components or even when they're building new things to build them, knowing that they're backward compatible with this really like well defined standard.
00:12:11.199 - 00:12:18.675, Speaker B: But then at the same time developers get really significant performance improvements from deploying their applications in the Monad environment.
00:12:19.375 - 00:12:27.021, Speaker A: But because there are already network effects on Ethereum, then how do you deal with that in your pitch?
00:12:27.173 - 00:13:02.835, Speaker B: Yeah, I think there's a variety of different network effects. I would say that the benefit of being able to use existing libraries, tools, many other applications that have already been built for the evm, upon which new applications can compose, all of that is really significant. But the other part is that ultimately the Monad environment, with many applications that are already in existence in other EVM environments that are migrating over to Monad, there's a network effect from all of those applications and users as well.
00:13:03.295 - 00:13:10.275, Speaker A: And so I did see Monad described by Coinesk as, quote, an Ethereum killer. And I wondered what you thought of that description.
00:13:10.895 - 00:14:04.035, Speaker B: I, yeah, definitely. I'm not a, not a fan of that description. I think that at the end of the day the Monad project is an effort to focus on orthogonal directions of research that haven't been focused on as much. Our team is really focused on, you know, exploring a vertical in the Ethereum scaling space that I think is really needed. I think of, you know, there's many different pillars like some people are focusing on data availability, some are focusing on roll up design and optimistic mechanisms or zero knowledge mechanisms. We're just exploring another vertical in the Ethereum scaling space. I think the other thing to mention is that, you know, our team really hopes to contribute back to the Ethereum scaling roadmap overall by proposing improvements as EIPs and just more generally collaborating with other researchers in the space.
00:14:04.035 - 00:14:12.695, Speaker B: So it's really not by any means an effort to try to kill Ethereum. It's really an effort to try to enhance the capabilities of Ethereum.
00:14:12.855 - 00:14:36.555, Speaker A: Well, that's so interesting. So you would submit proposals, EIPs to the Ethereum community which would be, you know, if they're adopted, would then go to Ethereum itself. Right, but then is that more just because you would like to see more compatibility between Ethereum and Monad. Is that because it's not going to like create a change in Monad?
00:14:36.865 - 00:14:55.865, Speaker B: Correct. I think that you could think of Monad as a vanguard environment for certain Ethereum improvements that our team thinks are needed and that over time can evolve to pioneer certain improvements that might then also find their way into Ethereum or other environments.
00:14:56.025 - 00:15:02.111, Speaker A: Huh. Okay. And are there certain types of applications that you think are best suited to Monad?
00:15:02.273 - 00:15:48.285, Speaker B: I think that any application that is aspiring or any developer that's building an application aspiring to cross the chasm to mainstream adoption will benefit from some of the improvements in Monad. Like, if you think about an app that is number one on the iOS app store, that means it has hundreds of thousands or millions of daily active users. You know, it's not really a lot of math required to say a million daily active users. 50 transactions per user per day is 50 million transactions per day, but that would already be 500 TPS, which is far more than what Ethereum L1 directly can offer right now. So it's just performance improvements that are really needed to scale even to support a single application that's really achieving mainstream adoption.
00:15:48.585 - 00:15:59.805, Speaker A: So Monad has had the largest fundraising of 2024, I believe, at least at the time, $225 million. How do you plan to use that money?
00:16:00.105 - 00:16:32.757, Speaker B: It's a lot of money. It definitely puts our team in a great position to grow the team and to add folks that can really help push the Monad effort forward and hopefully the space forward. We're growing not only by recruiting crypto natives, but also bringing just really talented low level engineers who have not worked in crypto before and kind of crypto pilling them and enlisting them in this effort. But yeah, we're very well resourced and just appreciative of all the support of our investors and the show of confidence there.
00:16:32.941 - 00:16:47.133, Speaker A: There's also been a surge of interest from VCs in funding apps in the Monad ecosystem. I saw that Apriority, Kintsu and Kuru are all Monad apps that have received funding recently.
00:16:47.309 - 00:16:47.609, Speaker B: And.
00:16:47.647 - 00:16:59.805, Speaker A: And I wondered what you thought was drawing attention already to. Because I mean, you guys haven't even launched, so your Testnet I guess is coming out later this year. So what do you think is drawing attention already?
00:16:59.925 - 00:17:30.884, Speaker B: Yeah, I think it's a reflection of those individual teams capabilities. There's some really talented builders in the Monad ecosystem already and then also a reflection of the fact that the investing community is excited about what's possible with much higher throughput, much lower fees, full EVM compatibility, and then also any other improvements that our team continues to push to help embrace and extend the EVM over a longer period of time.
00:17:31.184 - 00:17:43.920, Speaker A: I also noticed that Monad has a very strong community. There's a lot of memes. People seem to love your purple frog mascot and I wondered how Monad developed this strong community and meme game.
00:17:44.112 - 00:18:47.735, Speaker B: Yeah, I think it's a reflection of a couple of things. First of all, it's just amazing contributions from individual members of the community as well as individuals within our team. I think community growth, honestly, ultimately is just driven by community members that individually feel that they have something to add. And the only thing that our team really does is just to try to cultivate a fun environment where people are welcomed and policing spam and sort of setting the tone in the right way. So I'm really grateful to honestly like individual members of the community that have stepped up a lot in terms of setting really high bar, creating incredible memes, incredible artwork, organizing initiatives. So for example, we have the Monad Run club, which is a Strava group that a number of members are just recording their runs in with a goal of getting healthier. There's mon lingo, which is an effort to learn a new language together.
00:18:47.735 - 00:19:20.155, Speaker B: There's so many different community led initiatives that ultimately I think are just really fun and show the right, set the right tone that it's not all about farming and you know, all of the financial aspect that sometimes you see in early projects and instead is more about building friends, building relationships, taking on more leadership opportunities and building that social fabric that's ultimately really, really important to a successful blockchain community.
00:19:21.855 - 00:19:26.055, Speaker A: All right, and so when do you expect to launch your testnet and then your main net?
00:19:26.215 - 00:19:34.377, Speaker B: Pretty soon, Honestly. There's a lot of the team is working really hard. We don't have exact dates to share, but it's coming up soon.
00:19:34.561 - 00:19:44.765, Speaker A: And what about a Mon token? I guess the name had been leaked in some documents but then was retracted. Any news on when we might see a token and what it would be used for?
00:19:46.025 - 00:19:48.393, Speaker B: Unfortunately, can't really comment on that right now.
00:19:48.529 - 00:19:53.617, Speaker A: All right, what have I not asked you that you think we should mention?
00:19:53.801 - 00:19:56.161, Speaker B: Nothing, really, honestly, I think we covered a lot.
00:19:56.313 - 00:19:58.857, Speaker A: Okay, all right, great. Well, thank you so much.
00:19:59.041 - 00:20:00.125, Speaker B: Thanks, Laura.
00:20:01.385 - 00:20:06.065, Speaker A: Hi everyone. I'm here with Jay Zhoug, co founder of SEI Labs. Welcome, Jay.
00:20:06.225 - 00:20:07.845, Speaker C: Hello. Thanks for having me on.
00:20:08.585 - 00:20:10.633, Speaker A: How did you come to launch SEI?
00:20:10.809 - 00:20:42.729, Speaker C: Yeah, yeah. So I guess our story with SEI started back in 2021. At that time I was an engineering lead back at Robinhood and I was there when the entire Gamestop saga happened, which I'm sure you must have been following along with. Yeah, I mean, as you can imagine, it was just a total shit show internally when that happened. Like, I mean everything was essentially on fire. There was all that negative public kind of sentiment when they turned off buys on Gamestop and several other stocks. And as an insider it just felt really bad because you have no idea what was actually happening behind the scenes.
00:20:42.729 - 00:21:13.051, Speaker C: Right. Like you have no context on anything, but it's essentially your reputation on the line if something goes wrong. So after going through that experience, my co founder Jeff and I, we initially wanted to build something like Robinhood, except build it in a decentralized way. And that led us down the journey for what eventually became sei. So initially we wanted to build an on chain Dex. Then we're like, wait a minute, there's no ecosystem where you can actually build an on chain order book based exchange, so let's go and build it as its own chain. And that was like the initial inspiration for sei.
00:21:13.051 - 00:21:18.915, Speaker C: And then eventually it's become what it is now, which is a fully general purpose layer, one blockchain.
00:21:19.295 - 00:21:21.807, Speaker A: Okay, and your co founder is? Jeff Deng.
00:21:21.911 - 00:21:22.983, Speaker C: Jeff Feng. Yeah.
00:21:23.119 - 00:21:31.327, Speaker A: Okay. And so you were looking basically to try to create that sort of just like a trading environment, but in a decentralized way.
00:21:31.431 - 00:21:56.707, Speaker C: Yeah, yeah. I mean initially that's exactly what we wanted to do. Since then, I mean there's a lot of things we've learned in the past few years since we started building. I think the biggest learning that we've had, the biggest thing that we built up conviction around, is that the EVM is here to stay. And for any listeners that might not be as familiar, the EVM is the Ethereum virtual machine. It was initially introduced by Ethereum. It's what's used to process transactions on Ethereum and several other chains.
00:21:56.707 - 00:22:43.401, Speaker C: And if you look at kind of developers out there in crypto right now, around 80 to 90% of them are EVM developers. So a huge majority of devs right now are EVM devs. And if you actually ask them to go to a new execution environment, and I mean we actually went through this with Cosmos last year, most of them are very strongly opposed to going from the EVM to a different execution environment. And it's not just like technical reasons, like part of it is technical. If you're writing code for a new execution environment, then it's easier to introduce bugs if you don't understand how things work. And a bug in a smart contract can result in your entire project getting drained, your entire company essentially shutting down. So it is scary from a technical side, but even beyond that it's more for ideological reasons.
00:22:43.401 - 00:24:01.501, Speaker C: Like the EVM is not just a tech stack, it is more fundamentally an ecosystem. And there's all the tooling, the developer mind chair, like everything else that is there around the EVM that really makes it sticky. So we don't think the EVM is going to be replaced by, I mean we don't think it's going to be replaced by SVM or MOVE or any other type of execution environment out there right now. And the question from our side just became like, what is the biggest thing that can be approved about the EVM right now? And the, I mean, essentially what we saw is that the biggest limitation for the EVM is a lack of throughput, like when you're not able to process too many transactions that results in a poor user experience because users have to pay a lot of money in gas fees. And it also results in a more restricted developer experience. So from the user experience side, if it's like 50 transactions per second, which is what Ethereum L1 most layer 2s on top are currently supporting, if you have 50 TPS, then let's say there's like 10,000 people that are each trying to submit a transaction, it suddenly becomes a very competitive kind of atmosphere where you need to keep increasing the amount of money you're willing to pay for gas fees. And we saw this earlier this year when gas prices crossed 100 gwei, it just becomes completely inaccessible for most of the human population to be actually doing stuff on chain.
00:24:01.501 - 00:24:37.065, Speaker C: So that was a pretty significant thing that stood out to us. And in addition to that, if you're a developer and you need to build for 50 transactions per second, it's really restrictive and it results in you having to make use of anti patterns. One example of an anti pattern here would be the concept of an automated market maker like an AMM. AMMs don't exist in traditional finance. The only reason they exist on chain is because they fit the limitations of Ethereum. So yeah, I mean, we think that a lack of throughput is the biggest thing that can be improved right now. And the way that we're approaching that is by paralyzing the evm.
00:24:37.065 - 00:25:12.013, Speaker C: So the way the EVM is built right now is it's single. Threaded. So if you have a bunch of Transactions that are submitted, they'll all get processed one after the other. This is like really, really simple to implement from the, I guess, EVM core developer side. But the downside is, is you're not taking advantage of modern hardware like the laptops that we're recording this on, the laptops that people might watch the video on later. These are all multicore machines and they're able to process multiple work streams at the same time. Like you're able to be on the Internet, you're able to have like a browser extension open while you're also having like Spotify running in the background, for example.
00:25:12.013 - 00:25:44.535, Speaker C: So you're able to process multiple work streams at the same time. And it's just like super inefficient to not be taking advantage of that hardware to be able to process multiple transactions at the same time. So that was kind of the core insight that we had and that's exactly why we decided to build SEI the way it is right now. It's the first paralyzed evm. And yeah, I mean it essentially results in us being able to get the best of both Ethereum and Solana in a way. You're able to get the EVM and all the mindshare that is there with that and all the tooling and all the developers, while also getting the kind of performance you see with the chain like Solana.
00:25:45.075 - 00:26:12.935, Speaker A: Yeah, so it feels like there's kind of a whole wave of these types of blockchains that are using this parallelized processing in an EVM environment. But as you kind of alluded to say, did start on Cosmos and you also started using the Rust language. So tell us, you know, what initially led you to that and then you know, you launched your V2, which is this EVM. So just tell us like about that journey.
00:26:13.355 - 00:26:57.129, Speaker C: Yeah, so the initial I was initially describing like the more application specific chain that we wanted to build. When we initially got started, like the most straightforward way to build an application specific chain was by making use of the Cosmos SDK. It was undoubtedly the most battle tested type of framework out there and it made it much easier to get started. Afterwards we decided to become more and more general purpose and the Cosmos SDK still continued to be one of the best tools to get started. There were a lot of things that were inefficient about it and we ended up making a lot of different kind of improvements on that side. One part of this would be a long tendermint, which was the consensus mechanism. We initially got started with more vanilla tendermint and Then there were a lot of things to be optimized around the way that block propagation works, around the way that block processing works.
00:26:57.129 - 00:27:13.575, Speaker C: And that ultimately led to Twin Turbo Consensus, which helped us be the fastest chain just point blank out there. We're currently getting 400 millisecond finality, which is faster than Solana, which has multiple seconds for blocks to be finalized and faster than essentially any other chain out there right now.
00:27:13.735 - 00:27:17.479, Speaker A: And can you explain the features of Twin Turbo Consensus?
00:27:17.607 - 00:27:45.619, Speaker C: Yeah, yeah. So the way that something like Tendermint would work. So one part of it is around block processing. In order to process a block, you would first have two rounds of voting. So there'd be a pre vote step of voting, then a pre commit step of voting, and then afterwards you start to process the block. It's really weird though, because you get the block before the pre vote steps, you get the block, then there's two rounds of voting and then you start processing the block. The insight that we had is that what if you just start concurrently processing that block while the two rounds of voting are happening.
00:27:45.619 - 00:28:41.267, Speaker C: And this is something that no one had surprisingly done before, even though it's a really straightforward idea once I kind of explain it to people. But that was super helpful in terms of improving performance because you're able to just whatever time it takes to process those two rounds of voting, let's say it's 300 milliseconds, you're able to benefit from those 300 milliseconds and just process the block at that time. So that's one improvement on twinturbo consensus. The other one is around block propagation, where when you're submitting a block, the way it would work normally with Tendermint is you would have to send the entire block across the network, even if every validator already had most of the transactions for all the transactions in their mempool locally. So the insight that we had is what if we just send transaction hashes which are each 32 bytes, so it's like around, like around 10% or even less than that of what you would see with the actual transaction. Like full transaction lets you send a list of order transaction hashes and then validators can look at their local mempool and then reconstruct the block locally. So this also led to a ton of performance improvements.
00:28:41.267 - 00:29:16.769, Speaker C: And this was just like one of the insights that we had like around Twin Turbo Consensus. There are other things we did, such as introducing parallelization that also helped improve performance at the execution layer as well. But yeah, I mean this is what we got started with. And I think your question was, like, what led us down the path of, like, starting to focus on. Yeah, so I think all these improvements that we just talked about around Twin Turbo, consensus around parallelization, like, those were fantastic. The issue when we went live in August of last year was that we only supported Cosmos and Smart contracts. So Cosmos smart contracts are in rust and you can't really write them in solidity.
00:29:16.769 - 00:30:02.181, Speaker C: So, like, trying to take something from the EVM, like from Ethereum L1 and trying to deploy it on SEI would just not work back in the day. And people didn't want to learn how to rewrite smart contracts for Cosmos. And the overall community of Cosmos and developers out there was really, really small. So we had this issue where we had built this incredible tech that was like the fastest chain out there, but there wasn't really anyone that was using it. And we're like, okay, let's talk to developers and understand why. And the kind of consistent feedback that people from the foundation were getting is that developers want EVM support. And once we got enough of that feedback from the foundation, we're like, okay, we'll go ahead and support the EVM and we'll try to understand what actual secret sauce we can have to make it even better.
00:30:02.181 - 00:30:30.295, Speaker C: And that's where the idea of paralyzing the EVM came from. That also led to us looking down what are the trade offs over here? And then adding in CDB to help with both the state storage side of things and then also the state access side of things, which I can go into as well. But yeah, overall I would say it's been just fantastically received. Like, we put out the announcement for V2 last November. It ended up going live at the end of May. So a little bit over two months ago is when it went live on mainnet. And currently we're the only paralyzed EVM that is live on mainnet.
00:30:30.295 - 00:31:12.531, Speaker C: And since then, there's been a ton of things we started seeing in the ecosystem. The first is there's been a lot of new applications that have started to deploy. One of the examples over here would be yay Finance. EA Finance was able to get, I want to say it's like 60, 70 mil of TVL right now, but it contributed to, say, crossing 100 mil of TBL, which was pretty insane just to see that kind of growth happening because it's only been a couple of months since most of that activity started to take place. So there's been a huge spike in tvl There's a lot of new projects launching and now there's also a lot more investor interest in the ecosystem. So, like one project called Silo, it's building an LST plus MEV software onset. They recently closed around with the Tier 1 VC, which, I mean, I won't spoil it for them.
00:31:12.531 - 00:31:23.585, Speaker C: They'll announce it from their own site pretty soon. But yeah, I mean, it's just there's a huge amount of activity that started to happen, and I think that's only because we've been able to support, like improving the performance on VPN like that.
00:31:24.205 - 00:31:37.493, Speaker A: Okay, and so just so I understand, when you have this V1 and the V2, is it like the same with Uniswap or whatever, where it just is like a totally different environment or are they connected?
00:31:37.669 - 00:31:45.825, Speaker C: Yeah, so it's just. It's just one chain. It was just a network upgrade from v1 to v2, so in that sense the exact same blockchain.
00:31:46.325 - 00:32:00.381, Speaker A: And so did that create issues like in terms of either fragmentation or security or usability? It just feels like if you're making that type of. It's like almost like swapping out the operating system or something. It feels like it could create issues.
00:32:00.533 - 00:32:24.133, Speaker C: Yeah. So the way that we made it, it was a purely additive change, so it wasn't getting rid of anything that already existed. So it made that upgrade a lot easier. From the technical side, I would say the upgrade so far has been extremely stable. There have been no major issues on mainnet, so that's been fantastic. I would say the biggest difference from the user standpoint is previously there were only CauseWASM smart contracts. Now there's Cosmos and EVM smart contracts.
00:32:24.133 - 00:32:49.133, Speaker C: So each user has both an EVM address and kind of a SEI native address. So that's. I believe SEI is only the only major chain out there right now that has something like that on mainnet. So I think that's been like one thing that users have had to adjust to a little bit. If you only use the EVM side, it's totally fine. If you only use the like, say, native side, it's totally fine. If you want to do things between both of them, it becomes different than what the experience you've had to deal with before.
00:32:49.133 - 00:33:04.381, Speaker C: But I mean, overall it's like fully interoperable. Like if you have an NFT on your EVM side, it's accessible from the safe side and vice versa. So from that standpoint, it's like just. There's no fragmentation of liquidity or fragmentation of assets happening because of that, you.
00:33:04.413 - 00:33:09.283, Speaker A: Mentioned earlier that you could also talk about state storage and something else.
00:33:09.419 - 00:33:52.625, Speaker C: Oh yeah, yeah. So basically when you paralyze transactions or when you have higher throughput, the side effect of that is that there's a lot more data that is being written to the blockchain. And when you have more data getting written, this leads to the idea of state bloat, which is one of the biggest reasons why chains outside of trying to keep things simple, that's one of the biggest reasons that chains like Ethereum haven't necessarily introduced parallelization at the base layer yet. That's because when there's more data that's being written, there's more states that needs to be stored. This increases full node requirements. If you're not thoughtful about how that state growth will be happening, it also makes it more difficult for you to sync a new node. If you want to start running a new node and you need to Import, let's say 10 terabytes of data across the network, that's going to take a while to do.
00:33:52.625 - 00:34:29.527, Speaker C: And it could also end up becoming a pretty significant issue for the network if enough nodes go down, enough validators go down and they're not able to recover in time. Like you could have issues around voting as well. So the way that we've approached this is with cdb and CDB has two core ideas. The first is a memory mapped IVL tree. So the way that we were previously doing things with V1 is we had an entire tree that was stored on disk with V2. And to keep things at a higher level, we basically split it up into different files and removed a lot of metadata. The result of that is that there's less data that is being stored, around 60% less data, which is a huge win.
00:34:29.527 - 00:35:16.155, Speaker C: Like it allows you to scale much more quickly and it makes it much easier to run a full node and kind of pushes back issues until the future around that when disk space will have grown a lot anyway. So that's one side of it, it reduces state storage and then the other side of it is we have asynchronous writes to disk. I guess for a simpler explanation around that, like you're just having everything get like a state route gets created in memory, you don't need to write it to disk and because of that you're able to just have much faster like 287x improvement in speed when you're writing, like when you're committing a block. So that helped improve performance a lot. And both of those two things I think have helped contribute to the type of both latency like the time to finality we're continuing to see and also the throughput of around 5,000 TPS that we observed in the internal load test cluster.
00:35:16.935 - 00:35:44.485, Speaker A: Okay. And so there was something that I thought when I was reading this, and you can correct me if I'm wrong, but from my understanding of sanedb, it sort of felt like it was combining the functions of data availability as well as the long term storage. And I wondered, as you know, I'm sure you're seeing there are a lot more chains that are going this more modular route. So why spin up your own solution as opposed to using something, you know, a more modular.
00:35:44.965 - 00:35:45.461, Speaker D: Yeah.
00:35:45.533 - 00:36:29.569, Speaker C: So I guess 2 thoughts in this case this was more focused on data storage. Data availability happens in a different way like because we're a layer one and validators and full nodes need to process transactions to be able to generate a state route. Data availability has to happen implicitly. Like you can't really have a data withholding attack if you're expecting people to publish state routes. So I think that was less of a concern with the approach we took. And then I guess to the core question around like why monolithic instead of a modular solution? It's actually really interesting because there's a ton of I guess things you can see in web two that are pretty similar to what we have happening in Web three and in Web two there's this entire microservice architecture kind of push where instead of having like one monolithic service, you have a bunch of different microservices. And I saw this play out firsthand at Robinhood.
00:36:29.569 - 00:36:58.525, Speaker C: When you have a bunch of microservices like let's say there could be one service like that one team manages. It might just be for trading. There could be another one that's for kyc, another service for something else. It introduces a lot more complexity to the overall system. Like with a monolithic service, it's just one thing that you need to be thoughtful about when you have any modular approach. And in the case of crypto, let's say there's a separate execution layer, separate settlement layer, separate DA layer when you have all these different systems that are all relying on each other. First of all, it increases overall complexity of the ecosystem.
00:36:58.525 - 00:37:38.679, Speaker C: Secondly, it increases the blast scope for any liveness issues that could happen. If one of these parts go down, then it could impact the other parts and then you won't be able to have finality happening as quickly. That's another downside. And then the third thing is the end to end performance is just strictly worse with a modular system because there's communication that needs to happen between every single part of the stack, in this case the execution, settlement and DA layers. And if you were to just combine all of them into one chain, then there wouldn't be any of that communication complexity. So the top end performance you're able to get is always strictly better with the monolithic chain. And that's why we're like, okay, if we want to focus on top end performance, we have to go down the modular route.
00:37:38.679 - 00:37:48.515, Speaker C: And I think there's like other use cases where modular chains make more sense, such as if you're trying to have your own dedicated block space, for example. I think in that case, from a technical standpoint, a modular chain makes much more sense.
00:37:49.015 - 00:38:05.325, Speaker A: And since you are your own blockchain, how are you finding it trying to pitch developers who either already are working in Ethereum, but also benefit from the network effects there? You know, how is it trying to pitch them on sei?
00:38:05.665 - 00:38:46.701, Speaker C: Yeah, I would say that overall it's hard, but I would also say it's like 100x easier than it was like last year because as soon as you introduce the evm, it makes it much more accessible for developers. But yeah, with any L1 like Kendley, I think it's much harder to get, especially TVL and liquidity, like getting more assets on the chain and having people start trading more. I think things like that are just much, much harder to do on a new L1. And I think every L1 that gets started has similar issues around that. That's why it's been like, honestly, pretty incredible to see the kind of growth that we've had happen since V2 went live. Like, crossing 100 mil TVL is a pretty big deal. And it just happened really fast after V2 went live.
00:38:46.701 - 00:39:28.377, Speaker C: And like, I mean, I was mentioning a lot of the other indicators of like, projects deploying VC interest, things like that. So I do think it's trending in a very positive direction. And it's still so early for V2. Like it's only been a couple of months that I'm like, honestly quite optimistic around the direction it's going in. One other thing that we've noticed, Safe foundation put out creator grants. So there was this $10 million creator grant program with Gitcoin that Safe foundation announced a few months ago. And it's been interesting because there's multiple rounds as part of this program and right now the second round is kind of coming To I guess in a week or two it'll be coming to a completion point and there's a lot of community interest, like support projects that are building on SEI right now.
00:39:28.377 - 00:39:36.845, Speaker C: So yeah, I mean from that standpoint, I would say that it's actually been going much, much better than like you would expect for any alt L1 that is getting started.
00:39:37.265 - 00:39:48.529, Speaker A: Okay, yeah, I see that the TVL is roughly 80 million right now, but yeah, it had been about 100 million I guess just a few weeks ago actually.
00:39:48.697 - 00:40:03.105, Speaker C: Yeah, yeah. I mean TBL is a function of the token price, like of token prices for different assets on the chain. But if you normalize for token price, there's actually been an increase in the number of assets that are coming in. So I think that's like one of the things that is like really trending in this wrong direction.
00:40:03.685 - 00:40:10.765, Speaker A: Right, right. Oh, okay, I see that. And so are there any particular types of applications that you think are best suited to say?
00:40:10.925 - 00:40:54.843, Speaker C: Yeah, yeah. So whenever you have a high performance chain, I mean fundamentally any application that benefits from higher performance does. Well, one example of this would be an order book based exchange. So Bancor launched Carbon Defi Onsei, which is an order book based exchange where everything happens on chain. And currently Bancor launched carbon on seven different chains including Ethereum L1, five other chains and then SEI in terms of volume, SEI was able to get the same amount of volume in two months as Ethereum was able to get in a year and a half. And that makes sense if you think about it because it's just much easier to have trading activity happen on chain if gas fees are a lot lower. So from that standpoint it's been pretty incredible just to see the kind of traction Carbon Defi has been able to get on say versus any other chain.
00:40:54.843 - 00:41:19.053, Speaker C: And I mean if you. There's also another thing that they launched which was the. I think it's called like arb, Fast Lane Bot or something, but it's the bot that arbs between the different carbon D5DExes across multiple chains. And 80% of the activity that bot was doing was on SEI. And there's like seven different chains that it's on, including Ethereum L1. I think for anything related to trading chains like SEI just fundamentally end up being much better. And like we're seeing this play out on Mainnet on SEI right now.
00:41:19.053 - 00:41:43.067, Speaker C: So that's, I mean, pretty surreal to see. Outside of that, there's a social application that's going to be launching pretty soon. It's in stealth and it's. I mean there's a phenomenal team behind it. But that specific application, like we've been supporting them and they have every single thing that's happening, every single action that a user performs actually happens on chains. Like if someone posts something, it happens on Chain. If there's like that happens, it happens on chain.
00:41:43.067 - 00:42:11.851, Speaker C: And this is pretty different than what you see with like Most types of web3social applications. Most of them don't write things to the base layer at all. They either have it be completely centralized or they have a separate network of like, with greater trust assumptions that they've created where all that data gets stored. So in the case of sei, it's actually really incredible to see that playing out firsthand. And I would say another use case would be games. When games have a lot of like token movements that are happening, it just becomes much more accessible. When gas prices are lower.
00:42:11.851 - 00:42:33.615, Speaker C: There's actually several games that will be launching on say in the next few months and in their case they're not having every single action happen on Chain. Like in their case, the 400 millisecond finality is good for token transfers, but if like the actual gameplay mechanics, if you're like moving around on the map, you don't want that to take 400 milliseconds. They have stuff like that happening on Chain, but at least the token transfers end up being much, much more efficient happening, I'd say.
00:42:34.245 - 00:42:41.317, Speaker A: All right, are there any particular topics or questions that we didn't cover that you would want my audience to know?
00:42:41.501 - 00:42:46.385, Speaker C: I think this was pretty comprehensive, so nothing else comes to mind for me right now. Laura.
00:42:46.845 - 00:42:49.025, Speaker A: Okay, great. Well, thank you so much.
00:42:49.365 - 00:42:50.477, Speaker C: Perfect. Thank you.
00:42:50.621 - 00:43:42.815, Speaker A: All right, so in a moment we're going to talk about Eclipse Labs, but first a quick word from the sponsors who make the show possible. Mantel LSP is a permissionless and non custodial Ether liquid staking protocol deployed on Ethereum and governed by Mantle Emeth, serves as the value accumulating receipt token of Mantle LSP and is now the fourth largest ETH LST with $1.3 billion in TVL. In addition to native ETH pos staking yields, EMETH holders can access various yield opportunities across Dapps on Mantle Network L2 integrations and more. ETH holders have previously received over 1 million in icon token airdrops. With the upcoming October 2024 launch of Cook, the new governance token of Mantle LSP Emmeeth holders can start accruing powder rewards under season one meth amorphosis, which will be convertible to cook. Visit Meath Mantle XYZ campaigns to learn more.
00:43:42.815 - 00:44:36.487, Speaker A: Polkadot is the original and largest layer 0 blockchain with over 2000 developers and the anticipated Polkadot 2.0 upgrade will be a massive accelerator for the ecosystem system, upgrading the infrastructure with eight times higher transaction throughput and twice as fast block times. Perfectly tailored core time for the needs of every protocol. Trustless bridges internally and into Ethereum Cosmos near Binance, Smart Chain and revised Tokenomics and the implementation of a token burn to reduce inflation. Perfect for gamefi and Defi to build, grow and scale with one of the most active crypto communities in the space. Polkadot recently announced a partnership with Mythical Games, bringing top games like NFT rivals with over 650,000 players and 43 million transactions to pave the way for GameFi and the Polkadot ecosystem. Get your web 3 ideas to market fast with economics that work for you.
00:44:36.487 - 00:45:38.571, Speaker A: Think big, build bigger with Polkadot Join the community@ Polkadot.net Join 20,000 attendees for the world's largest crypto event token 2049 Singapore, September 18th to 19th Anatoly from Solana, Kyle Simone, Ahmad Mostak and 300 others will hit the stage for an immersive festival experience ahead of the Formula One Grand Prix weekend. Singapore will transform into a buzzing crypto hub from September 16th to 22nd, with over 500 side events taking over the city. This is an event you've never seen before, with paddle courts to rock climbing, monoliths and mixed martial arts shows as the global crypto community takes over the iconic Marina Bay sands. To spark connections and define the future, visit token2049.com for 15% off tickets with the code Unchained link in the description. Hi everyone, I'm here with Vijay Chetty, CEO of Eclipse Labs.
00:45:38.571 - 00:45:40.931, Speaker A: Welcome Vijay, it's great to be here.
00:45:41.043 - 00:45:42.415, Speaker D: Thanks for having me. Laura.
00:45:42.755 - 00:45:54.375, Speaker A: Eclipse is an Ethereum L2 running a Solana virtual machine or SVM. What is the vision for Eclipse? How did you come to launch it and what problem were you trying to solve?
00:45:54.755 - 00:46:57.499, Speaker D: Yes, so the vision for Eclipse, simply put, is to build the highest throughput L2 on Ethereum by an order of magnitude. So an L2 fundamentally is in the act of selling block space and so it should be doing it as efficiently as possible. And so for us that really means optimizing around the execution environment. And so that led us very naturally to the SVM as the preferred VM on which to really launch Eclipse and continue to optimize from a performance and throughput standpoint. So if you look at the existing EVM L2 landscape, there's been a lot of great innovation there from Optimism, Arbitrum and other teams, but they've really been trying to also manage against the decentralization aspect. Right. Whereas as an L2 you can uniquely do things that an L1 is not able to because you don't need to worry about the shared security and validator set component, it's extremely difficult to spin up a new validator network for an L1.
00:46:57.499 - 00:48:24.777, Speaker D: But as an L2 you can uniquely lean into what makes an L2 and L2, and that's optimizing around the execution piece. So as a part of this whole modular wave of the last one to two years or so, we really saw an opportunity to take the svm, which offers native parallelization and an order of magnitude higher throughput than what the EVM does, and use that to settle to Ethereum. So you're still tapping into Ethereum users and assets and inheriting a shared security and then posting the data blocks to Celestia. So as a result, we're able to offer an L2 that has the highest throughput and lowest cost out there. And the motivation to build this was really from the perspective for me personally, having been in the space for the last 10 years and launched DYDX and Uniswap X and these other kind of blue chip defi protocols, you really started to see a trend towards moving the transaction process off chain due to the inherent limitations of the EVM and keeping things fully on chain. So I saw an opportunity with the vision and idea of clips to really enable being able to build institutional grade DEFI and other use cases, but keep them fully on chain. Right, because the alternative right now is what's happened with in the broader Ethereum landscape where you've started to see fragmentation to a variety of different RFQ and intense players and that starts to introduce a lot more coordination problems.
00:48:24.777 - 00:48:42.765, Speaker D: It sort of recentralizes because now you have teams building centralized backends and then centralized solvers providing liquidity for transactions. So this is really a compelling alternative to build one general purpose L2 that can support the needs of 99% of apps out there.
00:48:43.665 - 00:49:24.329, Speaker A: Yeah, it's interesting because. So this is part of a show where there's going to be a couple of other projects that are doing parallel processing, but they are modad and sei. And so as you are probably aware, they're their own chains. So this is the only one where it's an L2, but it seems like so both of them are EVM environments because of that need to like draw developers. And so you're sort of going where they are and yet you're importing this svm, which is really interesting. So Eclipse is using. So Eclipse is like all in on this modular kind of approach.
00:49:24.329 - 00:49:40.457, Speaker A: It's using Celestia for availability, Ethereum for consensus and settlement. It's also using Risk zero for fraud proofs, which it's like a ZK thing as far as I understand. So can you explain kind of that whole setup and why you chose this architecture? Yeah.
00:49:40.481 - 00:49:59.041, Speaker D: So the motivation for that was to build what we saw as the best stack from a first principles perspective. Right. So just starting from the top at the execution level, and that's really the piece that Eclipse is building and innovating on. The SVM offers the highest throughput of any VM out there currently.
00:49:59.153 - 00:49:59.425, Speaker B: Right.
00:49:59.465 - 00:50:31.795, Speaker D: And there's a very well established Rust developer base in web3 thanks to a lot of the great work that Solano has done. And Rust is also a very popular language in the Web2world. Right. So there's a big opportunity to onboard Web2 devs who are interested in building really interesting applications that take advantage of that high throughput. So that was the motivation in terms of selecting the svm. And I can talk a bit more about the work that we're doing to continue to accelerate that and reach even higher tps than say Solana can. But that's the execution layer.
00:50:31.795 - 00:51:17.075, Speaker D: And then if you go down to the settlement and consensus layer of Ethereum, Ethereum is still the largest user asset base in crypto by a wide margin. Right. There's a lot of interesting assets and user types there, from kind of standard tokens to RWAs to Interesting Consumer apps. And so that's created kind of a very vibrant user base that could benefit a lot from being able to take advantage of the developer experience in the UX that Solana offers. Right. The UX of using a Solana app or something built on the SVM is much smoother than the UX of traditional Ethereum apps. And that's slowly changing, but I think there's a lot to learn there.
00:51:17.075 - 00:51:49.529, Speaker D: Maybe the one catch is still around the Block Explorer piece, right. Where using a Block Explorer around Solana or the SVM is still definitely more complex. But there's some interesting work that we're doing there with the Etherscan team. And so that's at the settlement and consensus layer. Right. And being able to tap into Ethereum users assets but do that with Solana type apps or the experience of the svm. So that's a very compelling combination to us and one that has not been explored to date.
00:51:49.529 - 00:52:28.415, Speaker D: And I think there's a very interesting design space around that, especially in tandem with some of the leading wallets out there. So with the Celestia piece at the data availability layer, we chose Celestia because they're the most trying to proven modular DA solution out there. They have led the way for a lot of other players now and they also offer the best in class, lowest cost of publishing blocks of data. And that's something that we've directly seen in production since we launched our mainnet for developers on Tuesday of this week. So that's been a great choice for us. And Celestia is a great partner and one that we think is really going to be at the forefront of modular da.
00:52:28.575 - 00:52:39.755, Speaker A: And just for listeners, we're recording this a few weeks before this comes out. So we're recording this on Friday, August 2nd. So by the time this comes out, this will be three weeks later.
00:52:40.215 - 00:53:09.925, Speaker D: Yeah. So hopefully we'll add a lot more Flock data from solicitor at that point to also talk about. And then the last piece is at the fraud proof layer. Right. So ZK fraud proofs are an important part of creating a trust minimized L2 with Eclipse. And ultimately we think all kind of optimistic approaches will transition to ZK fraud proofs. And so we want to be at the forefront of that.
00:53:09.925 - 00:53:21.045, Speaker D: And so that's a piece that we haven't yet implemented in our main app for developers, but that's something that we'll start to work on over the next few months as well.
00:53:21.705 - 00:53:37.085, Speaker A: And one issue with modularity is that when you have that setup, it can create a little bit of friction in the sense that all these different layers have to communicate with each other. So how do you deal with that to still maintain efficiency?
00:53:37.585 - 00:54:31.089, Speaker D: Yeah, so there's a lot of internal and dev work our team did to really test out that environment and work closely with Celestia to make sure that we were publishing data as efficiently as possible. And even now I think there continue to be learnings around that. For example, Eclipse has saw the largest daily amount of data that was published to Celestia in one day, yesterday or a couple days ago. And that's a stat that we're very proud of. But it's also a function of the fact that there was a lot of other metadata that was included in the compressed Solana block beyond just a list of transactions and A vote. Right. So I think continuing to reduce the amount of metadata that's being included and work to increase or to decrease the ratio of the amount of data that's published versus the amount of activity over time, as well as activity increases.
00:54:31.089 - 00:54:54.091, Speaker D: But we make the publishing of data more efficient. So I think that's an example of a design area that we can continue to optimize on. But we spent a lot of time ensuring that, you know, the Celestium that we built was the best in class. And, you know, now I think there's other players who are voting versions of that as well. So it's sort of this collective battle testing that we've done with Celestia and then other partners in the ecosystem as well.
00:54:54.283 - 00:55:14.555, Speaker A: And so something that I was curious about. So this is an svm, but it's, you know, on this L2 on Ethereum. So how do people transact in Sol on Eclipse? Do you need a bridge? And if so, is it like a wrapped Sol token and is it decentralized or centralized or how does that part work?
00:55:14.975 - 00:55:42.245, Speaker D: Yeah, exactly. So you need a bridge. Eclipse will be operating a canonical bridge specifically for purposes of moving ETH onto Eclipse. But beyond that, we partnered with other players like Hyperlane and other Earth Bridge partners that we'll soon announce to really help to facilitate the bridging of assets from other L1s and Dell twos. But you're right in that Seoul is basically a wrapped version of Seoul that's bridged.
00:55:43.505 - 00:56:20.873, Speaker A: Okay. And so you recently came in as CEO after the former CEO, Neil Simone resigned after multiple people accused him of sexually harassing them. This actually all unfolded on Twitter OR X and CoinDesk also later reported that he had also pledged a stake in eclipse tokens worth $13 million to Niraj Pant, who formerly used to work at Polychain Capital. And it was part of a. Of a little deal to actually obtain the funding from Polychain. So since you've come in, how have you been trying to reset the foundation at Eclipse post Neil Simone?
00:56:21.049 - 00:57:05.823, Speaker D: Yeah, so I think first and foremost I've been focused on the future and the product and the roadmap for what we're building. Right. And ensuring that we have a very strong team in place that's moving towards that in a united fashion. Some 99% of my focus has really been on the product, the team and board facing. And that's mostly what I think about, you know, I won't speak to Neil or his actions. You know, the veracity of these allegations is not it's not my place to speak about those, but definitely support the voices that have spoken out and their right to do that. But I think for me it's really been focused purely on the company and the product that we're building.
00:57:05.823 - 00:57:20.399, Speaker D: Right. Ultimately, these sagas that unfolded on Twitter are largely a personal matter for Neil and so he stepped away from the company and the team has continued to focus on the good work that we have been focused on.
00:57:20.567 - 00:57:41.085, Speaker A: And so what's your pitch to developers who are trying to figure out where to build? Because obviously we've seen there's a huge community in Ethereum, there is a burgeoning community of developers on Solana and so you're sort of this hybrid. So what is your pitch to the two different groups?
00:57:41.625 - 00:58:16.491, Speaker D: Yeah, so it's interesting, I think Eclipse is. When Eclipse first came out, a lot of people didn't know how to think about it and sort of elicited these very kind of passionate, tribalistic reactions. But I think now it's sort of been a lot more refined and people appreciate it more. But there's sort of a couple of lenses through which to view it. Right. I think first is really from the lens of existing established Solana developers. Eclipse offers them a way to easily port over their applications to tap into Ethereum users and Ethereum assets.
00:58:16.491 - 00:58:49.963, Speaker D: Right. So this is a growth story for protocols deploying like Orca, Mango Solend and so on. And it's really about tapping into more users and assets and bringing Solana grade application experiences to those Ethereum users. And then of course, if you look at the Ethereum developer set, like I think Solidity and Rust have always been kind of these separate islands. Right. You have Rust devs and Solana Solidity devs in Ethereum and EVM land. And there hasn't really been a ton of crossover until very recently.
00:58:50.019 - 00:58:50.187, Speaker C: Right.
00:58:50.211 - 00:59:13.639, Speaker D: I think part of that was tribalistic, part of that was just ease of developers working with these languages. Right. Solidity and Rust are very different. The smart contract environment on both is very different. So it's only recently that Theorem Dev just started exploring Rust and Solana and vice versa. Right. And you're starting to see tools like Rev to enable developing with Rust on Ethereum, for example.
00:59:13.639 - 01:00:26.007, Speaker D: So I think they're starting to become more crossover there. But to me, the really interesting opportunity is you had a lot of these Ethereum developers have moved, you know, moved a lot of their defi transaction processes off chain or to totally siloed app chains as a result of the limitations of Ethereum So if you look at a lot, a lot of what Ethereum developers have done with their app experiences, they've moved transaction processes off chain due to the limitations of Ethereum. Right. So you have these RFQ and intent systems where a lot of the actual transaction flow and transaction data is moved off chain or to proprietary back ends as a result of the limitations of scalability. And then you've also had some developers, even dydx, where it previously was moving towards more of an app chain or app specific roll up model in order to deal with these limitations of scalability on Ethereum. But the end result of that is you have these very fragmented experiences and it's really hard to get to a unified pool of liquidity or to realize kind of the benefits of transparency and composability, which was a part of the on chain vision in the first place for crypto. Right.
01:00:26.007 - 01:00:39.675, Speaker D: So I think Eclipse offers an interesting solution for those developers where they can deploy institutional grade clubs, they can deploy seamless RQ systems, but have that be entirely on chain.
01:00:39.835 - 01:00:42.655, Speaker A: And I'm sorry, just, just explain what a clob is.
01:00:43.035 - 01:01:14.675, Speaker D: A club is a central limit order book. So yeah, so DYDX is an example of that. Right. And so I think the being able to bring these kind of institutional grade tier 1 DeFi app experiences to users, but keeping them fully on chain is what Eclipse helps enable. Right. And so I think we run counter to a lot of the recent development where these intense and RFQ systems have moved off chain.
01:01:15.615 - 01:01:37.595, Speaker A: Okay. So by the time the show comes out, it will be after your recently announced hackathon, which is from August 7th to 21st. So I know where I'm going to ask you to prognosticate. But since this will come out at that period, what are some things you would like to have seen by the time the hackathon finishes?
01:01:38.015 - 01:02:10.071, Speaker D: Yeah, so we've got a few tracks. So there's a defi track, a gaming track, consumer meme coins and infrastructure. Right. So I think I'm definitely excited to see some institutional break defi experiences come out. Right. So a central network order book and an RQ system I think would be great to see on the defi side, especially the one that has a really good accessible UX for retail users. And then you know, obviously with meme coins, there's been a ton of activity on Solana to date.
01:02:10.071 - 01:02:40.961, Speaker D: I think there's some really interesting things to do with kind of fair launches and community ownership that can come out of that and be applied to kind of venture back crypto companies. As well. So excited for some of the stuff that our community and developers have been talking about there. And then with consumer, you know, I think there's a huge opportunity to take advantage of the throughput of Eclipse to build best in class consumer experiences. Right. And so this is an area that we're really focusing on because of that high throughput. Right.
01:02:40.961 - 01:03:03.627, Speaker D: If you look at mainstream kind of web two social apps out there, they have an insane amount of transactions per second. Right. Or interactions. So being able to power all those with Eclipse is I think a very interesting, kind of interesting design space that we're excited to see what comes out. Right. And I think there have been some strong recent examples of this. Right.
01:03:03.627 - 01:03:25.271, Speaker D: With FriendTech Forecaster and Lens, which have really set kind of, I think early precedents for what's possible. But building something that like can tap into a much more mainstream audience is something I'm excited to see from the consumer track. And then lastly, in terms of infrastructure, if you've kept up with the deep end space.
01:03:25.303 - 01:03:25.447, Speaker C: Right.
01:03:25.471 - 01:03:47.125, Speaker D: So decentralized physical infrastructure, I think there's a lot of interesting stuff going on there right now with decentralized sensor networks, decentralized AI and computer and obviously it's important to separate kind of substance from hype there, but I think there is really interesting design spaces around being able to power these large scale sensor and deep end networks with Eclipse.
01:03:48.385 - 01:03:51.925, Speaker A: Okay, and so when do you think you'll have your mainnet launch?
01:03:52.265 - 01:04:10.307, Speaker D: Yeah, so we, we recently launched mainnet for developers. Right. So what that means is we have not been active or encouraging of front end or other tools that retail users can use and it's very much not something that we want to actively facilitate yet.
01:04:10.371 - 01:04:10.547, Speaker C: Right.
01:04:10.571 - 01:04:47.055, Speaker D: Of course there's been some organic activity, but our focus for right now is largely on helping developers and infra partners deploy their apps into the main net environment. We plan to do a public mainnet launch around September roughly is what we're targeting. And so when we do that, we'll be launching for retail users. There'll be a variety of different interfaces and then quests and kind of gamified experience for users to go through all those interfaces. So that's our rough timing right now. And in the meantime we're doing a lot of developer education, answering questions on discord and just kind of handholding anybody who's interested in building.
01:04:47.475 - 01:05:07.795, Speaker A: Okay. And you have said that the initial launch will be quote, full of training wheels. And by that what you meant was a centralized bridge, no functioning fraud proofs, what's raws so can you just talk a little bit about kind of what your roadmap will be after launch and the priority in getting some of these training wheels removed?
01:05:08.575 - 01:05:56.617, Speaker D: Yeah, so before we do the public mainnet launch in September, we will allow for withdrawals of course that's table stakes. And then beyond that, once we launch we plan to transition to a phase one roll up over the subsequent months going to end of year. And so that will include launching permissionless fraud proofs, a trust minimized bridge and forced inclusion. So that will really get us to that stage one milestone. And then over the course of next year we'll work on becoming a stage two roll up so becoming fully permissionless. And in addition we'll progressively open source parts of our stack. So for right now there are a few key pieces that we've launched with the Apache 2.0
01:05:56.617 - 01:06:40.541, Speaker D: license, so academic and allowing for open usage and repurposing. And then there's some pieces that will launch source available and our goal is to transition all that to open source over time as well. And then governance will play a role with Eclipse as well. So decentralization is something that's in our future. And so the Eclipse foundation is working through timelines around that. And then the last piece I'll mention in terms of roadmap is how Eclipse can continue to remain competitive and innovate over the longer arc of time. So right now there's, we've talked a lot about the early opportunity in terms of bringing an order of magnitude higher throughput to Ethereum users assets.
01:06:40.541 - 01:07:31.023, Speaker D: Beyond that there's an opportunity to be the first to implement Fired Answer, which is an independent validator client that the JUMP team is building for Solana. And there's also Agave is kind of another solution there. So bringing hardware accelerated throughput to Ethereum is something that we're very excited about. Specifically if you maintain a more minimized sequencer set, you can inherit hardware improvements through chip technology. So for example firedancer is using FPGAs. There's an opportunity to also use ASICS to accelerate throughput even further. So Eclipse plans to really move in that direction of implementing Firedancer and doing a lot of research work around hardware acceleration and hardware enabled throughput because we're maintaining that smaller sequencer set.
01:07:31.023 - 01:07:43.353, Speaker D: So that's an area of research that we're very excited about. And the eventual goal is to bring throughput on the order of hundreds of thousands of transactions per second so that we can really power Web two scale apps in Web three.
01:07:43.529 - 01:07:52.737, Speaker A: Okay. And just to ask you about the comment that you made about decentralization and the foundation moving toward that. I presume that means that you'll be.
01:07:52.761 - 01:08:02.005, Speaker D: Launching a token, so I can't speak to specifics of that at this time, but governance and decentralization are definitely a part of the roadmap for Eclipse.
01:08:02.425 - 01:08:10.857, Speaker A: Okay, and then last quick question. Are there any particular types of applications that you feel like Eclipse is best suited for? Yeah.
01:08:10.881 - 01:08:40.165, Speaker D: So in particular, a few things I'm very excited about are on chain central limit order books and RFQ systems on the defi side, mainstream consumer apps that can reach millions of users and potentially have some gamification embedded in them. And then lastly is Deepin and these large scale sensor networks that have, you know, distributed networks of mobile sensors or temperature sensors or AI capacity as well.
01:08:41.225 - 01:08:44.445, Speaker A: All right, great. Well, thank you so much for coming on Unchained.
01:08:45.545 - 01:08:46.233, Speaker D: Thanks for having me.
01:08:46.249 - 01:09:20.455, Speaker A: Laura, thanks so much for joining us today. To learn more about next generation parallelized EVMs, check out the show notes for this episode. Unchained is produced by me, Laura Shin, with help from Matt Pilchard, Juan Aranovich, Megan Gavis, Pama Jemdar, and Market Correa. Thanks for listening. Unchained is now a part of the Coindesk Podcast Network for the latest in digital assets. Check out markets daily five days a week with host Noel Atchison. Follow the Coindesk Podcast Network for some of the best shows in crypto.
