00:00:00.250 - 00:00:04.190, Speaker A: Welcome to good game. Your no BS insights for crypto founders.
00:00:07.490 - 00:00:27.122, Speaker B: Dex aggregators, or Uniswap, their front end already enables intent. So on uniswap you can specify how much slippage. To me this is a pretty okay solution to my intent. What is exactly the problem that we're trying to solve with this intent architecture? Like what is the specific problem that we haven't solved that can be solved?
00:00:27.186 - 00:01:12.590, Speaker C: To me it's always the decentralization problem. You can do everything in a centralized way if you wanted to. You can go on centralized exchanges, do your limit orders there. But the reason why we're doing this on the blockchain is because we all share this vision of decentralization. And when you submit a transaction on Uniswap, the inputting your order actually goes through the Uniswap solver router that decides how to split your order into uniswap pools. In a sense, that's like a tiny version of an intent architecture, and it is a centralizing point. You're sending all the orders to the Uniswap router API first, and then it tells you the transaction that you're going to be submitting to the blockchain.
00:01:12.670 - 00:01:47.662, Speaker A: Looking for your next startup idea in crypto? Check out our request for startups list and get inspired at Alliance XYZ ideas. Welcome to good game. Today we're going to be talking about intents. Recently Anoma announced their round and that had us dig deeper about what is intent based transactions versus just transactions, just generally. And so maybe the question I'll ask what are intents? We're also joined by David, who just joined alliance as one of our researchers. And so maybe David, if you want to do a quick introduction and then talk about what intents are, and then we'll go from there.
00:01:47.796 - 00:02:19.190, Speaker C: Yeah, for sure. Yeah, I'm super excited to join alliance. It's been a very fun few weeks and I'm very happy to be diving deep into crypto topics. In fact, I've been doing this part time for many, many years. Some people that know me from the Internet know that I've been working at two Sigma at first and then did a startup in AI. I do have a claim to fame with lots of views with my brother Jomatek.
00:02:21.070 - 00:02:22.458, Speaker A: His videos are great.
00:02:22.624 - 00:02:28.410, Speaker C: Yeah, thank you for that. Hopefully I can pull in some viewers to the Gigi podcast.
00:02:29.710 - 00:02:34.426, Speaker B: Fun fact, David is a childhood friend of mine.
00:02:34.458 - 00:02:39.710, Speaker C: I've known David for at least 20 years, if not more. At least 20 years.
00:02:39.860 - 00:03:01.878, Speaker B: And also I think in hindsight, David played a pivotal role in my crypto career because it was the time when I built true conviction in bitcoin, when I saw that YouTube video by Andreas Antonopoulos. Everyone should know Andreas. If you don't know him, look him up. He was important people in the early days.
00:03:02.044 - 00:03:04.406, Speaker C: He's been much less vocal these days.
00:03:04.508 - 00:03:05.814, Speaker B: He's less vocal these days.
00:03:05.852 - 00:03:06.246, Speaker C: That's right.
00:03:06.268 - 00:03:20.390, Speaker B: But he was one of the first evangelists for bitcoin in the 2013 2014 era. And David sent me that video, and that video was what convinced me to build real conviction in bitcoin.
00:03:20.550 - 00:03:28.880, Speaker C: Yeah, it definitely took a while. We had lots of late night chats back then. We were on gchat. I still have, like, logs from the back then.
00:03:29.810 - 00:03:30.560, Speaker B: Same.
00:03:30.930 - 00:03:44.978, Speaker A: So, David, what are intents? Is it just a marketing buzword, like, of the many trends that we see in crypto? Is this something that our viewers should actually care about and where do you think the space is going to go?
00:03:45.064 - 00:04:24.286, Speaker C: Yeah, that's a lot of many questions to answer, but I guess we'll unpack all of this. So, from what I saw, intense is a new word. It does get easily confused with transactions. It gets easily confused with limit orders. A lot of people do seem to think that it's a buzword. And by the end, I think I want to argue that even though it is just a new word, it's kind of important to introduce new words to bring people together to work on hard problems. And we'll see that ultimately, the word is not what's important, it's the problems that are getting solved.
00:04:24.286 - 00:04:52.826, Speaker C: So right now, the vibe definition of intents is that the difference between a transaction and intent is that transactions are imperative. They tell you how to change state in the VM, like, very precisely. You can run it, either it's valid or invalid, and the clients can decide immediately and they can just claim your gas fee. Right.
00:04:52.928 - 00:04:54.442, Speaker A: What's a good example of this?
00:04:54.576 - 00:04:55.702, Speaker C: Of a transaction?
00:04:55.846 - 00:05:00.890, Speaker A: Yeah, just the typical transaction. Just like doing something on uniswap as an example.
00:05:01.040 - 00:05:17.234, Speaker C: Yeah, doing something on uniswap. When you click sign a transaction, every time you click sign a transaction and you send it over to a node, that's a transaction. It's either going to fail or it's going to do the state changes on the EVM. Right.
00:05:17.352 - 00:05:32.200, Speaker D: So that's actually a good point, actually, David, because anything before that is not transaction. Right? Anything before signed transaction is not a transaction. It's like exactly as a moon. When you click submit to a transaction, it is a transaction at this point, right.
00:05:32.810 - 00:06:17.186, Speaker C: And there's a very clear path from a transaction to a state change. It gets compiled, you compile it with the contracts, and it becomes like opcodes and it gets run by the VM, right? So that's a transaction. And intents right now are instead of specifying how to run the VM, they specify ultimately what's the state change that's desired. They specify what's the state change that's desired. So it's declarative, but it doesn't specify how to get there. Right. So intents require somebody like a solver to tell you how that intent should be executed.
00:06:17.298 - 00:06:31.866, Speaker A: So maybe digging deeper into the intents. So intents are just a bunch of execution parameters that you want to be executed with some constraints. Right. So what would be a very good example of this that we use today?
00:06:31.968 - 00:07:07.234, Speaker C: So if you've ever used Dex aggregator recently, you sign something that's like, let's say that's gasless, right? You sign some sort of transaction, but it's not being sent to a client immediately. So they basically help you kind of refine what you want to do, your intent, and you kind of send it over and then you hope that it gets solved and matched correctly and in your favor, so that ultimately it gets turned into a transaction. So that's like a very common example.
00:07:07.432 - 00:07:34.526, Speaker A: So an example is like if you're using macha, you could put, I want to buy one eth, and this is the most I'll pay for it. And then you hit the transaction. And what you would hope is that someone on the other side, whether it's an off chain market maker or if there's liquidity on some amm pools, that is able to execute that transaction based on the constraints or limit orders that you put in to matcha. Is that like the way to think about.
00:07:34.708 - 00:07:36.000, Speaker C: Right, right.
00:07:36.770 - 00:08:28.666, Speaker D: But I think actually intents can go bigger than, like I think David described what we do now that can be classified as intents. But I think the market for the intent or the word intent was described to actually describe even more general behavior. Like you can come and say, I have some east, I want to transform this east to USDC at the highest possible value. I want to get the most USDC. I don't care actually, if I can do it now or I can do it within the next hour, or I can do it over a day or a week. But the goal here is to get me the most maximum eth. So you can actually do something as general as this and you can even go even wilder, you say, I don't care if you give this eth me on east main net, or optimism or arbitram, I don't care where the venue, like, I don't care at all, but just gave me the most amount of USDC.
00:08:28.666 - 00:08:38.594, Speaker D: So I think intents can actually go bigger and describe really general behaviors that cannot be executed today.
00:08:38.712 - 00:09:36.482, Speaker C: Right? Yeah. Ultimately, they describe a state change on the VM blockchains are ultimately a data availability solution. So if you can just specify the end result and have somebody give you the best result as possible, that's like a great user experience. And it's like a user experience abstraction from the current way of doing things. And the more you can throw away constraints, the better execution you would be able to get on your intent. So the reason why I say that is a transaction is like, I want to swap 100 e to a certain amount of USDC on uniswap in this specific pool, right? That would be like a transaction and an intent. You can start throwing away things like, okay, where do I actually want to swap that? I don't care if it's uniswap or other things.
00:09:36.482 - 00:09:43.126, Speaker C: I don't need it to be now. I just want it to be like in the next 30 minutes or something like that.
00:09:43.228 - 00:10:10.030, Speaker B: I still want to clarify this. I understand at a high level, but there's one little thing that really bugs me. So, David, what you describe sounds like a limit order to me. So I want to buy, let's say, five e at a maximum price of like one, $800. But Fuda, what you just described is something very different. Even if they sound similar, it's very different. What you described is, I want to get as much eth as possible.
00:10:10.030 - 00:10:34.374, Speaker B: The thing that you are describing, the outcome of that is stochastic, is probabilistic, right? You don't know exactly where you're going to get. It's an optimization problem for whoever executes the transaction, and you don't know exactly where you're going to get. But in the case of David, the outcome is not probabilistic, the outcome is deterministic. If this price doesn't exist, I won't get it. But if this price does exist, I will get it at this precise price.
00:10:34.492 - 00:11:22.262, Speaker C: Okay, it's actually the same thing, right? So in traditional market, when you put a market order, it's like, okay, just give me the best price. I'm just going to buy whatever you want to buy. Right? But a limit order is on traditional markets is the same thing, right? You put a limit order past the current price of the current spot price. That's technically a market order because you expect it to be filled immediately and it gets filled at the best price possible. And that's insured by the exchange, like matching things in the right order. When you give a limit order that's past the market, in traditional markets, you don't automatically get the worst price. You get the market price.
00:11:22.262 - 00:12:04.142, Speaker C: In defi, if you submit a limit order that's past the spot price, and you submit that order to, let's say, to searcher, and that searcher is the only person that has your limit order, he's going to make sure that you're going to get the worst possible price right. And where intents are getting at is to replicate the ability of a marketplace, like a traditional marketplace, where you can submit your order into the wild and then let competition take care of the execution for you so that you get a better price than the worst limit price that you've set up initially. Was that kind of roundabout?
00:12:04.286 - 00:12:06.338, Speaker A: Yeah, I think that's a good way to explain it.
00:12:06.424 - 00:13:13.978, Speaker D: I can actually explain what I mean by having that. By the way, today when you do exchange on uniswap, you are executing an intent, and here is how your intent is to get the maximum or the best exchange rate possible. And uniswap front end gives you a minimum, right? Say your transaction will fail if it gets below this minimum, but it doesn't give you a maximum, which means that if you get more money, you will be happily taking it, right? And so you are kind of doing this intent, I think what that word intent means that you can actually add more demands or more conditions or more wishes, let's say. Actually, I prefer the term that swap uses, which is preferences. As a user, you can say, I prefer to have the USDCs that I get from the EtH swap on Ethereum, but if you can give me more on polygon, I am fine with it. You can actually make a very complex reference, and this is what make it a nice intent. I think intents that are not well defined will be vague and will actually subject the user to a worse user experience.
00:13:13.978 - 00:13:31.658, Speaker D: But this is, I would say, the side, the backside or the flip side of intents that intense can actually be really exploited to give you shitty response if you don't define it well. But again, this is what is the counter side of the argument of intents.
00:13:31.754 - 00:13:42.194, Speaker B: I think I understand intents and the examples, but why is it a big deal? Why is everyone in the Ethereum community talking about it. Why should our audience care?
00:13:42.312 - 00:14:47.842, Speaker A: So here's a good example I want to give before I pass it off to David or Fuda. But I was recently listening to Zaki's talk. Zaki is one of the core contributors at Cosmos, and there was a research day that was held in New York somewhere, and Zaki only spoke for nine minutes. And all he said was like, if you think about getting millions of users into crypto, it's going to be incredibly hard. No one's going to want use metamask or transact from one bridge to another or swaps or. All of these elements are confusing. He also said, if your assets get stuck in one chain to another, it's just going to be too hard for users to actually use the product, right? And so he said, imagine if a user comes into crypto and all they do is express what they want, right, very intuitively, and the product will then give them what they want, like, very simply, without having to execute any transactions, metamask, et cetera, similar to what we do in web two, right? Like, you go onto Google and you hit search and you get the results.
00:14:47.842 - 00:15:15.998, Speaker A: And he made those types of examples because what intense could ultimately do is take all the difficulties and abstract away all the transactions in the background and give the user the best possible outcome based on what they're looking for in crypto. And so there's like an order of magnitude experience upgrade from a UIux perspective, and then also from an onboarding perspective. So it was just an interesting element I wanted to add, but it was a pretty good talk.
00:15:16.084 - 00:15:16.586, Speaker D: But, yeah.
00:15:16.628 - 00:15:17.666, Speaker A: Curious what your thoughts on that.
00:15:17.688 - 00:15:35.398, Speaker D: David Fuda, I will follow on this, actually thread. I think Zach's point is on point here. Like, yes, intents can make it easier for mainstream users who are not crypto native to come to crypto. But I will argue, actually, intent can make even our life as crypto native folks easier. Right?
00:15:35.484 - 00:15:35.830, Speaker C: Yeah.
00:15:35.900 - 00:15:54.538, Speaker D: Imagine that you have all your funds on ETh, but this new NFT hot NFT project launched on Solana, for example, and you want to actually be getting some of that. So now you have to personally find an exchange or a bridge that will take your ETH, convert it to USDC.
00:15:54.634 - 00:15:55.920, Speaker A: It's a pain in the ass.
00:15:57.650 - 00:16:49.210, Speaker D: Put your orders on tensor to get the NFD. There is a flow, right? But what if you can just say, go to a website or front end, say, oh, please, make as many beds as possible to get me at least ten of these hot nfds, and the system will take care of that for you and do all this in the back end and give you your NFD and maybe even bridge them back to ethereum if you want, right? So it will make our lives easier. And I think intent become a hot word because we now have the technologies or we have the ideas to build that. Before, like two years back, we didn't have any of that infrastructure available. We didn't have bridges, we didn't have good decentralized networks to actually execute intents. But I think now we have multiple pieces that can put the puzle together and we can do this activities. So this is my view, it will make us happier.
00:16:49.370 - 00:16:59.454, Speaker B: I have a bigger issue with this. It's really annoying because what you just described as what intent is, it's just a different word for better user experience, removing all the friction.
00:16:59.582 - 00:17:03.986, Speaker A: But the technology that is bringing this is completely different on the back end.
00:17:04.088 - 00:17:31.322, Speaker B: But the whole point of intent is for the users. I don't care about the technology. The purpose of intent is to solve a problem for the user. What you just described is simply saying, I want to remove all these points of friction for the user. And if we do that, if you manage to do that, the user experience is strictly better. However, in the case, in the example that David gave earlier, intent is a limit order. And limit order is not strictly better than market order.
00:17:31.322 - 00:17:35.998, Speaker B: It just gives you more options. There is a trade off between the limit order and the market order.
00:17:36.164 - 00:17:37.918, Speaker D: I think these two things are completely.
00:17:38.004 - 00:17:45.214, Speaker C: Different, better than the market order, because a limit order, if you set the price to infinity, becomes a market order.
00:17:45.332 - 00:17:55.102, Speaker B: No, but the downside of the limit order is you have to put in one more number, which is why sometimes I don't use a limit order. If the market is liquid, I'll just set a fucking market order.
00:17:55.176 - 00:17:56.520, Speaker A: So you ape in.
00:17:57.290 - 00:17:58.200, Speaker D: Yeah, exactly.
00:17:59.690 - 00:18:03.480, Speaker C: So you go on uniswap and you set your slippage to infinite, right?
00:18:05.370 - 00:18:07.800, Speaker A: I've seen people get wrecked on pepe for that.
00:18:09.130 - 00:18:20.262, Speaker B: So I'm confused by the terminology again. Like, what does intent even mean? Does it just mean removing friction for the user? If so, I mean, it's just a buzzword.
00:18:20.406 - 00:18:40.226, Speaker D: It's one of the use cases of intent. Like maybe you can consider intent is like this, Victor. My description of it is use case that to make the user experience better. It depends on your intent. You can make your intent details very detailed, like very detailed, that it's only executed the way that you want, but without friction from your side.
00:18:40.408 - 00:19:00.982, Speaker A: So I think this is like a perfect segue into talking about how our intents constructed from an infrastructure perspective, because then I think it'll give our audience a better idea of how this works in the background. There are a couple startups that are working on this, right? There's anoma and suave. So maybe we could start with anoma.
00:19:01.046 - 00:19:03.290, Speaker C: David, can I just add something before we.
00:19:03.360 - 00:19:25.038, Speaker D: Yes, this is the bigger companies or the bigger startups that work as intent as the whole systems, but I see that there are maybe tens or whatever of companies working on kind of intent related stuff, but they are not filling the whole picture. They don't want to build a system from the ground up to execute intent. Anoma and swab are, you're talking about.
00:19:25.044 - 00:19:27.298, Speaker A: Like account abstraction, right? Like 4237.
00:19:27.384 - 00:20:08.222, Speaker D: Not just account abstraction, account abstraction, mav solutions that give money back to the user. Like suave and all this stuff, bridging and trustless bridging that you don't need to. Maybe I'm looking holistically more than I should, but there are many, many startups that fill part of the intents. Because as to David's point, intents exist. Now actually, when you go front to end to uniswap, that's an intent, right? But now we are taking this primitive or simple intents into really a more complex vision. So there is startups along this curve as we go to the holistic vision, there are many startups. So this is just a quick introduction, right?
00:20:08.276 - 00:21:14.020, Speaker C: Yeah, I think I want to do like a segue to motivate suave and anoma. So just to go back on point, is it just about user experience and intents are already here? What's the big deal? Why are we making a new name for this? So first point, intents are still already here. Limit orders on Dex aggregators exist and they do improve user experience. Because if you've tried to put in an order on a Dex prior to intent limit orders, it wasn't fun. Like you would click get the price, it would show you a price for like 1 second, and then sometimes it would just fail, and then sometimes you can end up submitting the transaction and then it fails on chain and the price changes every second and you're just like, okay, just give me a slightly worse price. But I just want it to go through, right. And in this particular case, the intent, the limit order was useful in bringing a better user experience.
00:21:14.020 - 00:22:24.614, Speaker C: Okay, so now you got slightly better user experience, but I think it's like at what cost? And the cost of this was that when you submitted this limit order, it was either one inch or paraswap or matcha, they held your limit order in their system. It was not something that was public in the mempool. It was something very specific to their systems. And if they end up gathering a monopoly on this, they do kind of have the incentive to screw you over at some point, right? If they get enough of a monopoly. And just to motivate the upcoming conversation a little bit, if we take the simple limit order and we think about how much work we've been doing across the decade to decentralize the limit order, we can think about, the first problem we had was ownership. What did we even trade? Right? And bitcoin solved that by providing a simple way to check provenance. Whatever you're receiving is not fake.
00:22:24.614 - 00:23:20.990, Speaker C: Right? It was not double spent and things like that. When you're making a trade, that's an important component. The other important component is when you're making a trade, you want to make sure that you receive the other thing that you're going to trade with your counterparty. You don't want to give out your asset, and then your counterparty say, oh, thanks, peasing out. And ethereum was the first one that solved this problem with smart contracts. And now the last component of a limit order is that the price? How do you make sure that you're not totally getting screwed on price? And the way to do that is to broadcast your price, to shop for price first and get the best price that the market gives you. And to do that in a decentralized way, I don't think has been solved yet.
00:23:20.990 - 00:23:42.020, Speaker C: And that's what all these intent projects are ultimately solving or trying to solve. In traditional markets, this role is solved by an exchange. Like, you trust the exchange to do order matching for you so that everybody gets the information at the same time so that the market can work for you.
00:23:42.550 - 00:23:47.960, Speaker D: So are we rebuilding trend pie on web3 now?
00:23:49.210 - 00:24:02.970, Speaker C: Ultimately, all of this is rebuilding traditional components, but we're decentralizing each and every part slowly. Right. And it's going to be a better world. That's why we're here. Right.
00:24:03.120 - 00:24:24.610, Speaker D: Okay, so we are moving to Tradefi in the terms of goals. We are kind of getting the same goals, but the infrastructure is different. Instead of the New York exchange, we are not trusting anyone. We are just trusting that the system will work, essentially.
00:24:26.070 - 00:24:57.180, Speaker A: I saw a good example, and it was something akin to paying for order flow with, like that pays for order flow with Robinhood. And now you have order flow that is essentially broadcasted to everyone or whoever are the solvers. And we'll talk more about the infrastructure side of, like, suave and noma, but essentially, you're broadcasting this order, flow, whatever it is, and you have a bunch of solvers that are going to find the best execution path based on what the intent or ask is.
00:25:00.750 - 00:25:07.870, Speaker C: The most important part is that you want them to be motivated to give you the best price because they are in competition with other solvers.
00:25:08.850 - 00:25:14.446, Speaker B: Can we talk about solvers? Because you guys have been mentioning this word for the last 20 minutes. I don't know what it is.
00:25:14.548 - 00:25:15.386, Speaker C: Let's talk about the infrastructure.
00:25:15.418 - 00:25:16.290, Speaker B: I know what it is.
00:25:16.440 - 00:25:18.994, Speaker A: Let's talk about suave and anoma and how they work.
00:25:19.112 - 00:25:38.662, Speaker D: To start, I can start with suave and David and cover anoma. So suave is an extension of what we know now as flashpots or reserves the next product. Flashbots started from a different problem, but they are moving now into the intent space. So they started as a mev solution. They saw that mev and gas auctions can destroy Ethereum. Right.
00:25:38.716 - 00:25:42.422, Speaker A: And can you explain what MeV is? Just, again, just so that for our audience.
00:25:42.566 - 00:25:43.834, Speaker C: Okay, MeV is.
00:25:43.872 - 00:26:28.758, Speaker D: That is an inherent activity in any blockchain, especially Ethereum, because it has a lot of financial activity, which means that I can actually extract value from the network without it having a directional position, so I don't have to trade hold the eth to get value. But instead I can see a transaction, and I can run a transaction that goes after this one or before it, or sandwich this transaction to make value. And all my extraction happens in one block and done. So I make money quickly. So it's a kind of bot activity. And a simple example is that someone goes to uniswap to trade big volume. I want to convert $1 million from USDC to ETH.
00:26:28.758 - 00:27:02.126, Speaker D: So, Uniswap is a stupid market maker system. It's an automatic market maker. So when you do the size of the trade, the price of uniswap will change significantly depending on how big is your trade. But once it changed, it actually mismatches decentralized changes. So there is an opportunity for arbitrage. So you can run an arbitrage transaction between Uniswap and SX, or you can actually just backrun this transaction with another transaction to make money. You can extract MeV.
00:27:02.126 - 00:27:31.370, Speaker D: MeV is that maximum extractive value. So that is the whole term for MeV. So Mev used to happen in a very bad way, which is people used to bid on gas. I will submit a transaction to the network with more gas, more fees, essentially to have my transaction run before you. So let's say, imran, you found a good arbitrage opportunity. So you submitted a transaction on Ethereum. Now I want to beat you to this arbitrage opportunity.
00:27:31.370 - 00:27:55.118, Speaker D: So I will submit the exact same transaction, but with higher gas. And now we ended up by many competing transactions. Only one of them will succeed. All of them. All the rest will fail, but the network performance will deteriorate anyway. So Flashpot came with this idea of, okay, let's take this fight off a chain. Let's make this gas auction fight off a chain.
00:27:55.118 - 00:28:09.958, Speaker D: We will create a marketplace where people who are actually capturing MeV can compete off a chain by submitting bids, and whoever wins will win the opportunity. But we didn't destroy the network. We didn't keep submitting bad transactions to.
00:28:09.964 - 00:28:12.774, Speaker B: The network, to be clear. Why would that destroy the network?
00:28:12.902 - 00:28:47.294, Speaker D: Remember that every transaction submitted to the network have to be communicated between all the nodes of the network, all the peer to peer nodes. So you submit a transaction, I see this transaction, but I am obligated to basse it to the network. So all the network consume bandwidth and processing to understand transaction. Then the same transaction comes again 100 times, and we are circulating as a network. This 100 transaction, at the end, only one of them are valuable, the one that will succeed. 99 are just garbage that will destroy the network. So that's why when we take this off a chain, this battle can happen off a chain, and only the winning transaction will be broadcasted on a chain.
00:28:47.294 - 00:29:23.710, Speaker D: So this was the Miv auction, or the flashpot auction product. So they started that, and it got successful, and they captured millions of dollars, hundreds of millions of dollars of MeV. But the question became, who is actually getting this merv? Is it the user? Is the user making more money? No, it's actually these hundreds of millions were split between two entities. First is searchers. People who look for MeV and validators are now called builders, who actually order the transactions in this block. This kind of gave a sour taste for developers.
00:29:24.130 - 00:29:25.834, Speaker A: Sorry, what are searchers for?
00:29:25.892 - 00:30:05.966, Speaker D: Audience searchers are someone like David, who are like financial traders and can actually identify that they can make money, free money, essentially by doing arbitrage or liquidations of assets or stuff like that. So they run financial system smart system to the side that actually monitors a chain and sees these transactions and say, oh, this is a good opportunity. Let me quickly submit a transaction to capture this money. So we're speaking about good mav. Let's not speak about bad mav, like front running and sandwich attacks. Okay, so assuming that chow and David are good people, they will do good.
00:30:06.068 - 00:30:16.820, Speaker B: Only there's no such thing as good, never bad. It's exactly market. It's not an ethical thing. I'm done with this discussion. It's not a moral thing.
00:30:17.190 - 00:30:23.954, Speaker D: Okay, good point, good argument. But okay, let's say mev. I will not add good mev in front of it just for you.
00:30:23.992 - 00:30:24.526, Speaker C: Cha.
00:30:24.638 - 00:31:02.714, Speaker D: Okay, so someone found opportunity and is running a sophisticated system on the side to capture this. That's the term of we give to these people are merf searchers. Okay, so we have the MEF searchers, who are smart traders, and we have the validators who, at the end of the day, this is the ultimate authority of which transactions will be included on a chain. And what is the order of these transactions? So these two entities have compete or, like, actually collaborate to capture MEP. So the revenue from that map is split between these two entities, searchers and validators or proposals.
00:31:02.762 - 00:31:12.130, Speaker B: Now, after, by the way, we now know for a fact that some of the top searchers are also validating blocks because that gives them a huge advantage.
00:31:12.630 - 00:31:59.538, Speaker D: Yes. And this is what Flashpoint expected, that because of the financial incentive, I can be a searcher and I can be a block builder, and I can be validator. Why not? The more centralization, the more power I will have. And that's what ultimately led Tom to the point that we started all of this discussion about swap. So what's swap? Swab is an effort or a vision to decentralize this even further. How? Instead of just splitting this myth between the searcher and the validator, let's create a system which actually gives some value back to the user. If a user is creating a transaction that will create the merv, let's actually reward the user for this transaction by giving them some part of this merv back.
00:31:59.704 - 00:32:01.426, Speaker A: Or just giving his money back.
00:32:01.528 - 00:32:11.862, Speaker D: Okay. Yeah. Like cash back. Like when you go shop at whatever for a give you $1 back. Right. Your credit card will give you $1 back. So you can consider it like that.
00:32:11.916 - 00:32:13.366, Speaker A: Wait, David had something to.
00:32:13.548 - 00:32:24.298, Speaker C: Wait. So what motivates the searchers plus the builders, plus the validators? What motivates them to give back to the awesome question.
00:32:24.464 - 00:32:55.170, Speaker D: Because the user, when they get best about losing this money, they can actually go to a certain block builders and actually cut the searcher out. They can say, you deal with a searcher. I will make my flow private. I will make all my transaction flow private. This transaction flow will not touch the main bolt. It will not go even into a private marketplace, it will be just private. And we are seeing so many startups doing this, we call them bay for order flow.
00:32:56.330 - 00:32:58.920, Speaker A: You could also change your RPC node, right?
00:33:01.130 - 00:33:03.110, Speaker D: You mean flashboard protect, for example?
00:33:03.260 - 00:33:05.750, Speaker A: Yeah, exactly. And box route.
00:33:06.410 - 00:34:12.700, Speaker D: Flashboard protect is essentially that you are protecting your transaction from being in the mempool, but you don't necessarily protect it from being in the private mempool of flashboard. They can see it, or unless you have guarantees that. I think flashboard protect doesn't include it in the private mempool, but many products actually include it in the private mem pool to backrun it. Example here is blocksrawit. They have a product called Backrun meme that your transaction will not touch the public meme pool, but it will go to a private meme pool where searchers will actually back run this transaction, will make another transaction that goes after this transaction, and they capture some value from this smear, and then share part of it to the user. So the user will have an incentive to make their order flow private. So instead of having this dynamic where it's a winner takes all, if someone person, if some entity becomes a destination to get all the order flow, now we end in a centralized scheme, right?
00:34:13.550 - 00:34:24.350, Speaker A: I feel like right now we're in the fight for order flow, right? Like apps are fighting for order flow, wallets are fighting for order flow. You have new extensions that are coming out that are fighting for order flow.
00:34:27.170 - 00:36:10.142, Speaker C: I think the whole swab anoma and all this stuff is to make sure that the order flow gets distributed as widely as possible. And the first implementation of suave is MeV share, right? And the way they do that is through a central matchmaker where the user, through flashbot protect, would send their order flow to this flashbot API called the centralized market matchmaker. And the matchmaker will start talking to searchers and block builders and reveal, I think, like certain information and kind of gossip around so that it's in the best interest of the user. And us user are trusting this centralized component because it's like Flashbot and it's not like a searcher to distribute this as widely as possible and like, and make the searchers compete to give you back as much mev as possible. Because if a particular searcher says like, okay, I'll give him back like $1, and then the other searcher said, I'll, I'll give him back $2, this bid will benefit the end user. And decentralized matchmaker is not ideal, but this kind of shows the difficulties in creating a system that solves decentralization of intents. There's another component inside of Mev share that's kind of weird.
00:36:10.142 - 00:36:44.070, Speaker C: There's like a document that's called the fair market principles that searchers and bundlers have to follow. And it's kind of like a pinky promise of like, hey, you will not unbundle this thing. And there's like a few other things. But to their credit, it's like, this is a very hard problem to solve. Right? So this is like their current iteration and they have more plans to suave is like a huge plan to solve decentralization of intents.
00:36:44.150 - 00:37:11.506, Speaker D: Yeah. So chow we went for holds aside to be able to answer your question, right? You asked it, what is solvers? Right? This was your question. We are awesome. Right? So this whole story is to explain what is server. Server now is exactly at this point. Now you have users submitting their transaction to a private pool for searchers. At this exact moment, user doesn't have to submit a transaction anymore.
00:37:11.506 - 00:38:07.800, Speaker D: They can submit an intent instead. At this point, instead of a transaction saying, go to uniswap, exchange one east to whatever, at this exact moment, they say, no, I don't need to even specify the transaction. I can see an intent and someone in this private pool will solve this intent for me. So I can say swap one eth to the largest USDC amount possible within the next five minutes, and I would throw this intent, one of the searchers or one of their solvers. Now they have been upgraded from searcher to a solver will actually solve this intent to give you your maximum amount of eth that they can while capturing also some of the MeV, pocketing some money and sharing some money with the validator. So a solver is kind of an entity that can actually solve your intent and make money in the process.
00:38:08.330 - 00:38:10.550, Speaker B: It's just a different word for searcher.
00:38:10.890 - 00:38:31.054, Speaker D: Yeah, but the searcher has to do more. In this case, the searcher is not just back running the transaction. The searcher now has to actually caress your transaction. To begin with, you didn't submit a transaction, so as a user, you didn't submit a transaction. You just gave some vague requirement. It is the searcher now who drafts the transaction for you.
00:38:31.252 - 00:38:36.802, Speaker B: It's like an OTC desk. I tell the OTC desk, do this for me, and then they'll do whatever.
00:38:36.856 - 00:38:47.378, Speaker D: They can to a decentralized OTC deck. Maybe you can coin this term. Why not? Solver is a bad term. So decentralized, why can't we just reuse.
00:38:47.394 - 00:38:54.790, Speaker B: The same tradfi terms? It'll be much. MEV is really arbitrage and searchers is just trading market makers.
00:38:55.930 - 00:38:57.320, Speaker C: This is a new world.
00:38:58.490 - 00:39:00.630, Speaker D: We have to be unique. Come on.
00:39:00.780 - 00:39:10.826, Speaker A: So for our audience, just so that we have like a summary of what's been happening. So intents are what users express what they want, not how they get it, right?
00:39:10.928 - 00:39:11.434, Speaker D: Yes.
00:39:11.552 - 00:39:28.626, Speaker A: And intents are ultimately programmatic solvers are essentially searchers that will execute your intent and they will conduct the transaction on your behalf. I would say that's where we're at so far.
00:39:28.728 - 00:39:31.394, Speaker D: That's we are going mean. Yeah.
00:39:31.432 - 00:39:39.640, Speaker A: In terms of our conversation right now, this is kind of where we're at. We still have a lot to peel back, right? Yes, but that's kind of where we are right now.
00:39:40.410 - 00:39:48.902, Speaker B: So where does Anoma fit into the picture? How is it different from swap? I know the white paper is extremely hand wavy, but let's do our best.
00:39:48.956 - 00:40:23.982, Speaker C: To make sense of it. Yeah. So earlier when I said ultimately the problem is in decentralizing this process. Anoma is a very ambitious project which aims to do generalized intents. So Dex aggregators right now do a very specific intent. It's like ERC 20 limit orders. But you can imagine limit orders for nfts, or you can imagine cross chain limit orders.
00:40:23.982 - 00:41:09.198, Speaker C: And account abstraction with EIP 43 37 can also be seen as intents. And they have like a very specific format of intents. Anoma wants to first have a generalized definition of intents. So I think one of their GitHub repos is Jupix. And that's like a language to specify intents with the ability to decide which part of the intent is private, because that will determine the balance of powers in users, between users and searchers. So there's like a lot of ZK tech that's being integrated into the intent specification language Juvix.
00:41:09.294 - 00:41:11.282, Speaker A: And they also have like threshold encryption, right?
00:41:11.336 - 00:41:13.410, Speaker C: I don't even know what threshold encryption.
00:41:13.990 - 00:41:14.900, Speaker B: Me neither.
00:41:15.670 - 00:41:18.174, Speaker A: I can explain it, but fude, if you want to explain it too.
00:41:18.232 - 00:41:26.642, Speaker D: Imran, if you have the blood diagram of Anoma handy, you can bring it up and we can actually take a step in explaining what's anoma, because it's quite complicated.
00:41:26.706 - 00:41:40.262, Speaker C: I guess I'll continue a little bit, because I just talked about Juvix, the language for specifying what intents are and integrating privacy parts into it.
00:41:40.336 - 00:41:44.362, Speaker B: When you say language, you mean actually a programming language like Java.
00:41:44.426 - 00:42:58.334, Speaker C: It's ultimately going to be the declarative language like specifying what you even want. They're like very mega brain, right? Like a generalized intent specification. And then there's like Tyga, a project like a sub project of Onoma, that specifies like, the system or the protocol that resolves intents into atomic state transitions, aka transactions. It's like their specification of how to distribute these intents, how to do gossiping between searcher solvers, and how do they incentivize the propagation of your intents and stuff like that. And then there's like Namada, another subproject of anoma, and that's like an l, one that's related to privacy. And I don't really know where it fits in. But ultimately anoma is supposed to be able to be a layer above all of the settlement layers, like Ethereum, Solana, whatever, where you can solve the intents and then settle on these blockchains.
00:42:58.334 - 00:43:02.966, Speaker C: So I'm not super sure where Nabada comes in. I'll have to do more research there.
00:43:03.068 - 00:43:28.766, Speaker A: But I guess the interesting part about anoma is that they're creating this generalized intent platform, right? And you have solvers, and then they have private mem pools, which is like threshold encryption, right? They encrypt, decrypt intents, they order intents, and then they execute the intents. So Fuda is sharing a screen. So maybe Fuda, this is the best part to talk about, is just like, how does this all look like?
00:43:28.948 - 00:43:31.054, Speaker D: Yeah, talk about this.
00:43:31.092 - 00:43:31.438, Speaker C: Yeah.
00:43:31.524 - 00:44:07.126, Speaker D: This is one of the few block diagrams in anoma white paper. But actually it captures the whole story here. The part that David explained is exactly what the first part, which is called the counterpart discovery. As a user, you bring intent, and this intent can be a private transaction, transparent transaction or whatever, right? So it can be even private or transparent. Then you have some network that will actually share this intent between them together. So they will gossip this intent for everyone to know about it. And then comes the beloved entity for Cha, which is the solvers.
00:44:07.126 - 00:44:43.346, Speaker D: Solvers will take this intent and create transaction. After that comes a part that you mentioned, Imran, which is a threshold encryption. The solver now have decoded the intent and created a transaction that executes intent. Now we want to kind of hide these details, after all, to prevent anyone from reordering these transactions. So what happened is that use something called threshold encryption using distributed key cryptography, they encrypt the transactions. No one can see the transactions anymore. And then they put this in the membol.
00:44:43.346 - 00:44:54.970, Speaker D: They put these transactions in the transaction membool. The proposer will take CC transactions, they don't know what is the content, but CC transactions with some fees. So they order them, they send it to the validator to execute.
00:44:57.630 - 00:45:07.610, Speaker B: Mempool validators proposal. These are not Ethereum mempool or proposer validators. These are noma mempool proposal and validators, correct?
00:45:07.680 - 00:45:08.022, Speaker C: Yeah.
00:45:08.096 - 00:45:33.670, Speaker D: Threshold encryption is not compatible with Ethereum right now. So in this poll diagram, this is anoma transaction, membrane proposal and validator. If you want to use Ethereum, then you will have to give away the encryption. You will have to give this transaction as transparent to be able to use Ethereum. So yes, for business. Blue diagram. These are onoma proposal, validator, everything.
00:45:33.820 - 00:45:35.640, Speaker B: So onoma is its own.
00:45:38.570 - 00:45:42.010, Speaker D: So. So swab as well is its own blockchain.
00:45:43.070 - 00:45:44.534, Speaker C: Will settle to Ethereum.
00:45:44.662 - 00:45:48.060, Speaker A: This reminds me of the Oprah meme layer. One's for everyone.
00:45:50.450 - 00:45:56.174, Speaker D: We decentralize and increase Ruby by adding more blockchains. Right? We started just before.
00:45:56.292 - 00:46:08.142, Speaker B: So if I were Ethereum user and assign an Ethereum transaction or not transaction, but intent. Can the intent go through anoma and then ultimately settle on Ethereum?
00:46:08.286 - 00:46:25.330, Speaker D: Yes, it can go, but until only the solver phase. So the solver phase will convert the intent into an Ethereum transaction. And instead of using the rest of this block diagram, they will can broadcast this transaction now into the Ethereum mempool.
00:46:25.490 - 00:46:34.422, Speaker B: So in that scenario on this picture, the consensus and execution verification, these are replaced by Ethereum consensus, Ethereum execution.
00:46:34.566 - 00:47:05.460, Speaker D: Exactly. But the catch here is that you need some guarantees that the builder and validator will not reorder these transactions or they will not front run this transaction. So they will not maybe change the intent even further. But this is kind of where the guarantee anoma in this block diagram, by encrypting the transactions, they prevent anyone from messing with them after that because they don't see what's happening. They will have to just reorder them the way they come to the proposal. Right.
00:47:06.710 - 00:47:09.378, Speaker A: The combination happens on the intent side then, right?
00:47:09.544 - 00:47:39.918, Speaker D: Yeah, exactly. Like the mef capture, creating the transaction, all of this happens at the solver. So the solver is the main character in this system. The proposal just submits the blocks, get the inflation reward from the book, end of the story. So this is the Enorma vision. So this is kind of where the enorma system kind of works, or at least the high level of it, because David actually did a great detail of each component of these components and how it.
00:47:40.084 - 00:48:38.690, Speaker C: Yeah, it's, there is not that much publicly consumable details on each of these components. So it's hard to, unless you're very active, part of the research team and part of the group, then it's hard to exactly understand how it works. And also, it's probably years away too. But just to illustrate, the difficulty of what they're trying to do is on the other side, account abstraction also has a very specific format of intents. And they also have this problem of solvers. And the way they solve these problems is to really restrict what their version of intents can do. And in the account abstraction world, these are called user ops.
00:48:38.690 - 00:49:11.130, Speaker C: So they remove the ability to specify a few opcodes, they remove the ability for you to access state that is changeable and things like that, so that your user ops cannot ddos the solvers. Because if you want a permissionless pool of user ops intents, the two parties have to work together. The user cannot ddos the system, and the system has to compete to solve your intent, to get your intents.
00:49:11.210 - 00:49:14.522, Speaker B: Wait, so account abstraction is also part of anoma?
00:49:14.586 - 00:49:39.480, Speaker C: Or is it separate account abstraction, like ERC 43 37, I think was specified long time ago, before the word intent even was even a thing. I think the word intent just captures the general concept of specifying a desired state change without a concrete transaction. Okay.
00:49:40.250 - 00:50:06.830, Speaker D: But I think account abstraction is critical for intents, because if you craft a transaction on behalf of the user, the user have to go and sign it, but you don't want any interaction from the user anymore. So I think account abstraction is the way for you to, after you get the intent and solve it, to craft the transaction and use the signature from the user to sign the transaction without the user resigning the transaction.
00:50:07.970 - 00:50:14.398, Speaker B: Can we define account abstraction first? Because I don't think we've ever talked about account abstraction before.
00:50:14.484 - 00:50:14.986, Speaker C: Yes.
00:50:15.108 - 00:50:27.130, Speaker B: So the audience needs to know what it means. And then we could spend as much time as we need, but we need to understand what it is and then how it relates to intents.
00:50:27.230 - 00:50:38.646, Speaker D: Account abstraction is a big term, actually. I think I can give the umbrella explanation and then we can go to the details of 43 37 because it's important.
00:50:38.828 - 00:50:47.562, Speaker A: And then we should also talk about. Sorry, Vitalik's paper. He talks about smart contract wallets as one of the big paradigm shifts for Ethereum. So maybe touching on what this all means at the end.
00:50:47.696 - 00:50:48.970, Speaker C: Okay, sorry.
00:50:49.040 - 00:51:20.098, Speaker D: Accounts on Ethereum has two types. There was a type that we know which is externally owned account that has a private key and beautiful. You import this private key into metamask, and then you sign every transaction from your externally, externally owned account. Okay. That's the problem with this type is that you cannot actually delegate actions to user. You cannot say, oh, this user can create a transaction for me or can do this action on my behalf. Because this account is not programmable.
00:51:20.098 - 00:51:49.674, Speaker D: It just signs. That's it. So account abstraction means that you want a little bit more smart wallet or a smart account that can program, that can be a program that you can actually say, oh, I will delegate Imran to vote for me. I delegate Chow to transact on my behalf on uniswap. I can delegate David to buy nfts for me. And all of this is part of the wallet. I want to define all of this logic in the wallet.
00:51:49.674 - 00:52:22.118, Speaker D: So luckily enough, we have smart contracts. So you can make a smart contract wallet where you can actually, your wallet is a smart contract. You put your money in smart contract and you can define this logic or conditions or whatever you want in the smart contract itself. So you can add programmable wallet. There is some technical details that I don't want to touch, but essentially speaking, like smart contracts also are limited. They cannot pay for their own gas, which is funny. Smart contracts need an account to pay for their gas.
00:52:22.118 - 00:52:58.680, Speaker D: So this is how ethereum started, and this is how ethereum operates until today. So if you want programmability, you need an account to pay for the gas. If you want to have private key, then you don't have programmability. It is this situation. So account abstraction is an effort to abstract all this mess and give you an account that is programmable, that can actually delegate action, that can actually define functionalities that other people do in your behalf. So this is how I define account abstraction. So David, do you agree with that?
00:52:59.130 - 00:54:43.986, Speaker C: Yeah. So account abstraction was originally a very user experience focused EIP, right? And the result of this, of trying to get to this goal, was that transactions would not like things that come out of the user would not be transactions anymore because they would not have a ECDSA signature, they would not pay gas, possibly, right? So the fact that these things were not transactions anymore is why right now we kind of say user ops are intense because these things have to be turned into transactions at some point. And just because these things are not transactions anymore, it revealed a lot of difficulties in how do you integrate with the rest of the ethereum system? Because who turns these things into transactions? It's like solvers or bundlers or whatever you want to call them. And it turns out that if you specify your user ops in a weird way, these solvers might not want to take in your transactions because you could ddos them and do things that grief them. Right? And the solution that ERC 43 37 came up is pretty complicated. Like, they had to restrict what can go into a user op, restrict what data it can access, and it also introduced a reputation system and staking, like all these components just to solve the problem of decentralizing the user op pool. Instead of the mempool, you have the user op pool.
00:54:43.986 - 00:54:47.574, Speaker C: It's like a different pool of which.
00:54:47.612 - 00:54:48.386, Speaker A: Is called a bundler.
00:54:48.418 - 00:54:48.806, Speaker C: Right?
00:54:48.908 - 00:55:18.734, Speaker A: Yeah, I just thought of something. I don't know if this is going to move the conversation a bit, but how does this impact security? Because I know security is such a big problem in the space from phishing scams and et cetera. How does a contraction and more broadly intense solve this problem of security? Because right now, if you think about hackers, they can phish users and force them to conduct a transaction that would ultimately give them access to their entire wallet.
00:55:18.782 - 00:55:19.138, Speaker C: Right?
00:55:19.224 - 00:55:24.078, Speaker A: So I'm just thinking from like a UIux perspective, how does it impact security generally?
00:55:24.174 - 00:55:25.778, Speaker D: So you're speaking about security of smart.
00:55:25.794 - 00:55:45.046, Speaker A: Contract wallets or what exactly of smart contract wallets? Intents also like generally speaking, intents, because now that the user isn't conducting the actual transaction and the solvers are, how does that impact security at a broader scale and security meaning like phishing scams and et cetera?
00:55:45.238 - 00:56:38.610, Speaker C: For phishing scams particularly, I think intents are a lot easier to kind of verify and display because ultimately you're looking at, what do I want? The starting state, the end state, is this what your intent is? And then you can say yes or no. You're not like signing a transaction that is possibly complicated and then trying to tell if that's going to have the effect that you want. On the other side, account abstraction enables non ECDSA permissions, so you can use a secure enclave in your iPhone or Android to sign transactions. You can have two factor authentication. Basically whatever security methods that are out there, you could technically implement.
00:56:38.770 - 00:56:57.938, Speaker B: Okay, so just to touch on this account abstraction enables better security through features like signing with your two factor authentication from your phone or from the secure enclave of the phone. Aside from security, what else does it enable in terms of user experience?
00:56:58.104 - 00:57:38.954, Speaker D: There's more things for me, I think it enables defining of intents. You remember, you know, when you go to a website and you sign a message saying, I am the owner of this account, you can actually sign your intent from your account abstraction, saying that I want to do that activity. And here is my condition. And you sign this and this becomes assigned intent, so it cannot be fetched. Someone cannot fix the intent for you. And then solvers will take this intent that is signed by you and execute it, but because you will have to give them validity to create transaction on your behalf. So I think that is a critical.
00:57:39.002 - 00:57:42.320, Speaker C: Part that I security, right?
00:57:43.990 - 00:57:53.026, Speaker B: This is still security. I think account abstraction enables some. It can help to remove friction as well.
00:57:53.128 - 00:58:05.014, Speaker D: Account abstraction can enable a lot of stuff like if you are speaking about the user experience in general, you can forget about private keys as a user will not see private keys or seed phases anymore. That's one aspect. I think David touched on that because.
00:58:05.052 - 00:58:15.354, Speaker B: I've seen people talk about account abstraction better. Enabling gasless transactions or batching know, these things will fundamentally improve user experience, right?
00:58:15.472 - 00:58:16.140, Speaker C: Yes.
00:58:16.590 - 00:58:29.790, Speaker B: It's better if you don't have to sign every transaction, like sign a transaction upon every action. It's better if you don't have to have a small amount of eth in your wallet in order to sign a transaction, that kind of stuff, right?
00:58:29.860 - 00:58:30.190, Speaker C: Yeah.
00:58:30.260 - 00:58:34.960, Speaker A: The Dapps could pay for the gas fees for the user and so that could be also abstracted away.
00:58:35.330 - 00:58:35.754, Speaker C: Yeah.
00:58:35.812 - 00:59:11.274, Speaker D: It all comes to the implementation of the smart contract wallet. The account abstraction approach is just to create a framework for how people can just create their smart contract wallet to enable some of these features or other. It's not one size fits all. Smart contract wallet can actually have different implementation that some of them will enable features that are not supported by the other, like social recovery, using secure enclaves, stuff like using baymasters or stuff like that. It depends. Or being in other currency other than ETH. I think that comes down to the implementation of the smart contract wallet itself.
00:59:11.392 - 00:59:32.642, Speaker A: So now I think our users have a good understanding of account abstraction. We talked about anoma and suave. Where do we go from here? What should founders be thinking about in the space? And if we've missed any conversation about anoma and suave that you'd like to add, please feel free to do not. You know, maybe we can segue into how founders should be thinking about building the space.
00:59:32.776 - 01:00:10.846, Speaker C: Yeah, I can say a few things there for DAP builders seeing the evolution of trading Dapps Dex aggregators. One thing that paradigm article at the end mentioned is that when you go towards this system of using intents instead of transactions to interact with your DAP, you're inevitably going to run into the problem of either centralizing the solver component or trying to decentralize it. And your decision there is going to impact, I guess, the way blockchains grow in the future.
01:00:10.948 - 01:00:16.734, Speaker B: Why does it centralize the solvers? Why does the intent based system centralize solvers?
01:00:16.862 - 01:00:24.826, Speaker C: It's not like you have the choice. It's always easy to go towards a centralized solution.
01:00:24.958 - 01:00:28.360, Speaker B: I see, yeah, the natural tendency of centralizing things.
01:00:28.970 - 01:00:52.766, Speaker C: And when you permission specific solvers to do this job, you are basically giving away all of the value to them. And if your app is super successful, it gives an edge into part of the network. It's a pretty far out concern it is there.
01:00:52.868 - 01:01:05.218, Speaker A: So what you're saying is essentially Dapps would lose their stickiness to solvers and solvers will have more of a mode or control of where transactions can flow through, right?
01:01:05.384 - 01:01:26.950, Speaker C: Is what you're saying. Dapps that generate a lot of MeV have the ability to funnel that towards particular solvers if they choose the centralized and those solvers, builders, validators grow. And that's not the ethos of crypto.
01:01:27.930 - 01:01:38.650, Speaker B: They do something fairly sophisticated. So there is a natural tendency for one or few of them to stand out, to do much better than everyone else.
01:01:38.800 - 01:01:39.354, Speaker C: Right.
01:01:39.472 - 01:01:40.538, Speaker B: For better service.
01:01:40.704 - 01:01:54.018, Speaker C: Right. But you don't want Dapps to be the ones choosing who is allowed to even attempt the solving. You want the solving to be free and open to anyone who wants to try it out.
01:01:54.184 - 01:02:17.574, Speaker B: The analogy I can think of is before FTX, Genesis was basically the de facto solver of the entire crypto, centralized crypto. The retail users don't interact directly with Genesis, but they interact with, let's say blockfi or some other lending platform. But the flow ultimately all goes to.
01:02:17.612 - 01:02:22.554, Speaker C: Genesis, which is the decentralized solver because.
01:02:22.592 - 01:02:28.278, Speaker B: They offer better service. But anyway, I don't know if it's a perfect analogy, but it might be a helpful analogy.
01:02:28.374 - 01:02:42.506, Speaker A: Puda, your thoughts on how builders should be thinking about the space? Let's say I'm building my own dap right now in Defi. How should this concern me? What should I be thinking about as.
01:02:42.548 - 01:03:23.126, Speaker D: Builders, especially application builders, not infrastructure builders. Actually, you need to be very aware of all the strengths. Like if you are building an app now that doesn't support account structure, you are in a bad spot. If you are building a DeFi protocol, an NFT protocol, you have to have it in your head to support smart contract wallets and account abstraction from the get go. Maybe you can even run your own Baymaster that users pay you to sponsor their smart contracts transaction. That is one. Maybe even start educating your users about intents and MeV and how to capture this MeV.
01:03:23.126 - 01:04:30.546, Speaker D: And I think many protocols are starting to work on that. We have seen protocols integrating with solutions like wallet chain to capture the MEV and give it back to the user. We have seen companies come together to build MIF blocker, which is an RPC node that users can actually use to capture part of their MeV. We have seen Mev share from flashpots, so I think this is a major change of the user experience. So getting users used to this solution gets us one step closer to using intents, when the user will not submit transactions anymore, but will submit intents. So again, as an app developer, find what is the best solution that can give the best execution to your users and integrate it with your app, whether it's a deFi protocol or an NFT protocol or whatever. For builders who are starting to build something new in this space, we have actually seen a lot of, we are seeing a lot of opportunities in this space about decentralizing MeV, actually building the best implementations for account abstractions or solvers, all that stuff.
01:04:30.546 - 01:04:43.590, Speaker D: So there is a lot of opportunities for builders coming into the space to build the protocols. And we continuously add these ideas to our request for startups because we need builders who are actually tackling real problems.
01:04:43.740 - 01:05:10.362, Speaker B: I'm actually playing devil's advocate because I don't have a strong opinion, but the example that David gave earlier about Dex aggregators or Uniswap, their front end already enables intent. So on uniswap, you can specify how much slippage. To me this is a pretty okay solution to my intent. What is exactly the problem that we're trying to solve with this intent architecture? What is a specific problem that we haven't solved that can be solved?
01:05:10.426 - 01:06:04.890, Speaker C: To me it's always the decentralization problem. You can do everything in a centralized way if you wanted to, right? You can go on centralized exchanges, do your limit orders there. But the reason why we're doing this on the blockchain is because we all share this vision of decentralization. And just to expound the Uniswap thing, when you submit a transaction on Uniswap right now with V three, the inputting your order actually goes through the Uniswap solver router that decides how to split your order into uniswap pools. So in a sense, that's like a tiny version of an intent architecture, and it is a centralizing point, right? You're sending all the orders to the Uniswap router API first, and then it tells you the transaction that you're going to be submitting to the blockchain.
01:06:04.970 - 01:06:07.394, Speaker B: But if Uniswap wanted to fuck you, how do they fuck you?
01:06:07.432 - 01:06:12.850, Speaker C: They could give you a horrible routing literally right now. They could if they wanted to.
01:06:12.920 - 01:06:14.594, Speaker B: But there's very little incentive for them.
01:06:14.632 - 01:06:19.062, Speaker C: To do this, right, based on reputation, right?
01:06:19.196 - 01:06:35.450, Speaker D: Solvers will have a bigger intent because they can run transactions on their own that amend your transaction. So the worse your execution gets, the better money they will make on Merv. So that is where solvers like outside of Uniswap can be actually more dangerous.
01:06:35.870 - 01:07:00.980, Speaker A: I also think intents are composable, right? Which I think is a very important part since they are like decentralized limit orders. And the way I see this is like going from one layer one to another layer one and getting the best pricing for it. You can't do that right now on Uniswap in these localized intent based platforms like Uniswap. So I do think more largely it's going to solve larger, more complex problems that we don't see today.
01:07:01.350 - 01:07:27.114, Speaker B: I just don't see a strong pain point. I don't see what pain point is. Solving my pain point with Uniswap is not losing like $100 on mev. Uniswap is a perfectly fine product to me. What decentralization enables for me personally is if I have this amount of eth on chain, I know that no one else can steal it. And if I want to swap it for some other token, I can use Uniswap without KYC. And that removes friction for me.
01:07:27.114 - 01:07:32.058, Speaker B: These are the two things that decentralization solves for me. It's not a mev, I don't care.
01:07:32.144 - 01:08:05.110, Speaker A: And I think we just have to wait more for the ecosystem to mature to see actual more broadly the use cases that come out of intent based products. But maybe we could leave this for part two as more and more builders are building in the space and see where this goes. Because I think this conversation can go on for hours, and I would love it for it to go on for hours. But I think our audience will just get sick of our voices. So we could probably take this offline chow. Outside of that, I know we're at time listeners. Thank you again for joining us.
01:08:05.110 - 01:08:12.180, Speaker A: Hit subscribe if you haven't. We'll see you next time. Thanks for listening to good game. Don't forget to subscribe. We'll see you next week.
