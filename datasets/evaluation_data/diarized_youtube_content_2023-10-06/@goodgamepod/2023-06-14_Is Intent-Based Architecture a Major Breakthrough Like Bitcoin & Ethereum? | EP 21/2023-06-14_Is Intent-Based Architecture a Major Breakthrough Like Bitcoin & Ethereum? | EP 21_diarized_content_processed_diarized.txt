00:00:00.320 - 00:00:04.140, Speaker A: Welcome to goodgame. Your no BS insights for crypto founders.
00:00:07.440 - 00:00:27.080, Speaker B: DexAggregators or Uniswap, their front end already enables intent. So on Uniswap, you can specify how much slippage. To me, this is a pretty okay solution to my intent. What is exactly the problem that we're trying to solve with this intent architecture? Like, what is a specific problem that we haven't solved that can be solved?
00:00:27.160 - 00:01:12.570, Speaker C: To me it's always the decentralization problem. Like you can do everything if in a centralized way if you want it to, right? Like you can go on centralized exchanges, do your limit orders there. Right. But the reason why we're doing this on the blockchain is because we all share this vision of decentralization. And when you submit a transaction on Uniswap, the inputting your order actually goes through the Uniswap solver router that decides how to split your order into Uniswap pools. In a sense, like that's, that's like a tiny version of an intent architecture and, and it is a centralizing point. You're sending all the orders to the Uniswap router API first and then it tells you the transaction that you're going to be submitting to the blockchain.
00:01:12.650 - 00:01:47.568, Speaker A: Looking for your next startup idea in crypto? Check out our request for startups list and get inspired at alliance xyz. Forward slash ideas. Welcome to Goodgame. Today we're going to be talking about intents. Recently Anoma announced their round and that had us like digging deeper about, you know, what is intent based transactions versus just transactions, just generally. And so maybe the question they'll ask, what are intents? We're also joined by David, who just joined alliance as one of our researchers. And so maybe David, if you want to do a quick introduction and then talk about what intents are and then we'll go from there.
00:01:47.704 - 00:02:22.372, Speaker C: Yeah, for sure. Yeah. I'm super excited to join Alliance. It's been a very fun few weeks and I'm very happy to be diving deep into crypto topics. In fact, I've been doing this part time for many, many years. Some people that know me from the Internet know that I've been working at two Sigma at first and then did a startup in AI. I do have a claim to fame with lots of views with my brother Jomatek, so hopefully his videos are great.
00:02:22.372 - 00:02:28.440, Speaker C: Yeah, thank you for that. Hopefully I can pull in some viewers to the GG podcast.
00:02:29.740 - 00:03:01.784, Speaker B: Fun fact, David is a childhood friend of mine. I've known David for at least 20 years, if not more. At least 20 years. And also I think in hindsight, David played a pivotal role in my crypto career because it was the time when I built true conviction in bitcoin, when I saw that YouTube video by Andreas Antonopoulos. Everyone should know Andreas. If you don't know him, look him up. He was willing to be important people in the early days.
00:03:01.952 - 00:03:04.360, Speaker C: He's been much less vocal these days.
00:03:04.480 - 00:03:05.800, Speaker B: He's less vocal these days.
00:03:05.840 - 00:03:06.200, Speaker C: That's right.
00:03:06.240 - 00:03:20.272, Speaker B: But he was one of the first evangelists for bitcoin in the 2013, 2014 era. And David sent me that video and that video was what convinced me to build real conviction in bitcoin.
00:03:20.416 - 00:03:28.780, Speaker C: Yeah, it definitely took a while. We had lots of late night chats back then. We were on Gchat. I still have logs from the back then.
00:03:29.800 - 00:03:30.540, Speaker B: Same.
00:03:31.160 - 00:03:44.932, Speaker A: So, David, what are intents? Is it just a marketing buzzword of the many trends that we see in crypto, is this something that our viewers should actually care about? And where do you think this space is going to go?
00:03:45.036 - 00:03:50.644, Speaker C: Yeah, those are. That's a lot of many, many questions to answer. But I guess we'll unpack all of this.
00:03:50.732 - 00:03:51.396, Speaker A: Yep.
00:03:51.508 - 00:04:24.302, Speaker C: So from what I saw, intense is a new word. It does get easily confused with transactions. It gets easily confused with limit orders. A lot of people do seem to think that it's a. It's a buzzword. And by the end, I think I want to argue that even though it is just a new word, it's kind of important to introduce new words to bring people together to work on hard problems. And we'll see that ultimately the word is not what's important, it's the problems that are getting solved.
00:04:24.302 - 00:04:52.450, Speaker C: So right now the vibe definition of intents is that the difference between a transaction and intent is that transactions are imperative. They tell you how to change state in the vm, like very precisely. You can run it either it's valid or invalid and the clients can decide immediately and they can just claim your gas fee.
00:04:52.790 - 00:04:54.174, Speaker A: What's a good example of this?
00:04:54.262 - 00:04:55.662, Speaker C: Of a transaction?
00:04:55.806 - 00:05:00.142, Speaker A: Yeah, just a typical transaction. Just like doing something on Uniswap as.
00:05:00.166 - 00:05:17.208, Speaker C: An example, doing something on Uniswap, like when you click sign a transaction. Every time you click sign a transaction and you send it over to a node that's a transaction, it's either going to fail or it's going to do the state changes on the evm. Right.
00:05:17.344 - 00:05:32.140, Speaker D: So that's actually a good point actually, David, like, because anything before that is not transaction Right. Anything before signed transaction is not a transaction. It's like exactly as a moon, when you click submit to a transaction, it is a transaction at this point. Right.
00:05:32.760 - 00:06:17.242, Speaker C: And there's a very clear path from a transaction to a state change. Like it gets compiled, you know, you compile it with the contracts and it becomes like opcodes and it gets run by the vm, right? So that's the transaction and intents right now are instead of specifying like how to run the vm, they specify ultimately what's the state change that's desired. They specify what's the state change that's desired. So it's declarative, but it doesn't specify how to get there. So intents require somebody like a solver to tell you how that intent should be executed.
00:06:17.386 - 00:06:31.928, Speaker A: So maybe digging deeper into the intents. So intents are just a bunch of execution parameters that you want to be executed with some constraints. Right. So what would be like a very good example of this that we use today?
00:06:32.064 - 00:07:07.326, Speaker C: So if you've ever used Dex aggregator recently, you sign something that's like, let's say that's gasless, right? You sign some sort of transaction, but it's not being sent to a client immediately. So they basically help you kind of refine what you want to do, your intent and you kind of send it over and then you hope that it gets solved and like matched correctly and in your favor so that ultimately it gets turned into a transaction. So that's like a very common example.
00:07:07.518 - 00:07:34.604, Speaker A: So it's an example is like if you're using Matcha, you could put I want to buy one eth and this is the most, I'll pay for it. And then you hit this transaction and then, and what you would hope is that someone on the other side, whether it's an off chain market maker or if there's liquidity on some AMM pools that is able to execute that transaction based on the constraints or limit orders that you put in Tamacha. Is that like the way to think about it?
00:07:34.772 - 00:07:36.040, Speaker C: Right, right.
00:07:36.740 - 00:08:14.286, Speaker D: But I think actually intents can go bigger than that. Like now that's like, I think David described what we do now as, that can be classified as intents. But I think the mark, the market for the intent or that the word intent was described to actually describe even more general behavior. Like you can come and say, I have some eth, I want to transform this ETH to USDC as the highest possible value. I want to get the most usdc. I don't care actually if I can do it now, or I can do it within the next hour, or I can do it over a day or a week. But the goal here is to get me the most, the maximum eth, so you can actually do something as general as this.
00:08:14.286 - 00:08:38.550, Speaker D: And you can even go even wilder. Say, I don't care if you give this ETH me on East Mainnet, or Optimism or Arbitrum, I don't care. Where's the venue? Like, I don't care at all. But just gave me the most amount of usdc. So I think intents can actually go bigger and describe really, really like general behaviors that cannot be executed today.
00:08:38.670 - 00:09:25.556, Speaker C: Right? Yeah. Ultimately they describe a state change on the vm. Blockchains are ultimately a data availability solution. So if you can just specify the end result and have somebody give you the best result as possible, that's a great user experience. And it's like a user experience abstraction from the current way of doing things. And the more you can throw away constraints, the better execution you would be able to get on your intent. So the reason why I say that is like a transaction is like, I want to swap 100 ETH to a certain amount of USDC on Uniswap in this specific pool.
00:09:25.556 - 00:09:43.080, Speaker C: Right? That would be like a transaction and an intent would, you know, you can start throwing away things like, okay, where do I actually want to swap that? Like, I don't care if it's Uniswap or other things. I don't need it to be now. I just want it to be like in the next 30 minutes or something like that.
00:09:43.200 - 00:10:10.016, Speaker B: I still want to clarify this. I understand at a high level, but there's one little thing that really bugs me. So, David, what you described sounds like a limit order to me. So I want to buy, let's say, 5 ETH at a maximum price of like $1,800. The Fuda, what you just described is something very different. Even if they sound similar, it's very different. What you described is I want to get as much ETH as possible.
00:10:10.016 - 00:10:26.672, Speaker B: The thing that you are describing the outcome of that is stochastic. It's probabilistic. Right. You don't know exactly where you're going to get. It's an optimization problem for whoever executes the transaction. And you don't know exactly what you're going to get. But in the case of David, the outcome is not probabilistic.
00:10:26.672 - 00:10:34.330, Speaker B: The outcome is deterministic. If this price doesn't exist, I won't get it. But if this price does Exist, I will get it at this precise price.
00:10:34.450 - 00:11:20.696, Speaker C: Okay. It's actually the same thing, right? So in traditional market, when you put a market order, right, it's like, okay, just give me the best price. I'm just going to buy whatever you want to buy. Right? But a limit order is on traditional markets is the same thing, right? You put a limit order past the current price of the current spot price. That's technically a market order because you expect it to be filled immediately and it gets filled at the best price possible. And that's insured by the exchange matching things in the right order. When you give a limit order that's past the market in traditional markets, you don't automatically get the worst price.
00:11:20.696 - 00:12:04.072, Speaker C: You get the market price in defi. If you submit a limit order that's past the spot price and you submit that order to, let's say to a searcher, and that searcher is the only person that has your limit order, he's going to make sure that you're going to get the worst possible price. Right? And where intents are getting at is to like to replicate the ability of a marketplace, like a traditional marketplace, where you can submit your order into the wild and then let competition take care of the execution for you so that you get a better price than the worst limit price that you've set up initially. Was that kind of roundabout?
00:12:04.216 - 00:12:06.264, Speaker A: Yeah, I think that's a good way to explain it.
00:12:06.352 - 00:12:44.096, Speaker D: I can actually explain what I mean by having that. By the way, today when you do exchange on Uniswap, you are executing an intent. And here is how. Your intent is to get the maximum or the best exchange rate possible. And Uniswap front end gives you a minimum, right? So your transaction will fail if it gets through below this minimum, but it doesn't give you a maximum, which means that if you get more money, you will be happily taking it. Right? And so you are kind of doing this intent. I think what that word intents means that you can actually add more demands or more conditions or more wishes, let's say.
00:12:44.096 - 00:13:19.124, Speaker D: Actually like, I prefer the term that Suave uses, which is preferences. As a user, you can say I prefer to have my. The USDC that I get from the ETH swap on Ethereum. But if you can give me more on Polygon, I am fine with it. Like you can actually make a very complex preference and this what make it like a nice intent. I think intents that are not well defined will be vague and will actually subject the user to a worse user experience. But this Is I would say the side, the backside or the flip side of intents.
00:13:19.124 - 00:13:31.636, Speaker D: That intents can actually be really exploited to give you like shady response if you don't define it well. But again, this is what is the counter side of the argument of intents.
00:13:31.748 - 00:13:42.208, Speaker B: I think I understand intents and examples, but why is it a big deal? Why is everyone in the Ethereum community talking about it? Why should our audience care?
00:13:42.344 - 00:15:12.286, Speaker A: So here's a good example I want to give before I pass it off to David or Futa, but I was recently listening to Zaki's talk. Zaki is one of the core contributors at Cosmos and there was a research day that was held in New York somewhere and Zaki only spoke for nine minutes and all he said was today, like if you think about getting millions of users into crypto, it's going to be incredibly hard. No one's going to one use MetaMask or transact from one bridge to another or swaps or all of these like elements are confusing. He also said like, you know, if your assets get stuck in one like chain to another like you know, user, it's just gonna be too hard for users to actually use a product, right? And so he said like imagine if a user comes into crypto and all they do is express what they want, right, very intuitively and the product will then give them what they want, like very simply without having to execute any transactions, metamask, et cetera. Similar to like what we do in Web two, right? Like you, you go onto Google and you hit search and you get the results. And he made those types of examples because what intents could ultimately do is take all the difficulties and abstract away all the transactions in the background and give the user the best possible outcome based on what they're looking for in crypto. And so there's like an order of magnitude experience upgrade from a UI UX perspective and then also from an onboarding perspective.
00:15:12.286 - 00:15:17.454, Speaker A: So it was just an interesting element I wanted to add, but it was a pretty good talk. But yeah, curious what your thoughts on.
00:15:17.462 - 00:15:35.336, Speaker D: That David Fuda I will follow on this actually thread. I think Zaki's point is on point here. Like you, yes, intents can make it easier for mainstream users who are not crypto native to come to crypto. But I will argue actually intent can make even our life as crypto native folks easier. Right?
00:15:35.408 - 00:15:35.752, Speaker C: Yeah.
00:15:35.816 - 00:15:54.538, Speaker D: Imagine that you want, you have all your funds on eth, but this new NFT hot NFT project launched on Solana for example, and you want to actually be Getting some of that. So now you have to personally find an exchange or a bridge that will take your eth, convert it to usdc.
00:15:54.634 - 00:15:55.910, Speaker A: It's a pain in the ass.
00:15:57.650 - 00:16:46.440, Speaker D: Put your orders on Tensor to get the nft. There is a flow, right? But what if you can just say, go to a website or front and say, oh please make as many bids as possible to get me at least 10 of this hot NFTs and the system will take care of that for you and can do all this in the back end and give you your NFT and maybe even bridge them back to Italian if you want. Right. So it will make our lives easier. And I think intent become a hot world because we now have the technologies or we have the ideas to build that. Before like two years back, we didn't have any of that infrastructure available, we didn't have bridges, we didn't have good decentralized networks to actually execute intents. But I think now we have multiple pieces that can put the puzzle together and we can do this activities.
00:16:46.440 - 00:16:49.016, Speaker D: So this is my view. It will make us happier.
00:16:49.128 - 00:16:59.464, Speaker B: I have a big issue with this. It's really annoying because what you just described as what intent is, it's just a different word for better user experience, removing all the friction.
00:16:59.592 - 00:17:03.992, Speaker A: But the technology that is bringing this is completely different on the back end.
00:17:04.096 - 00:17:31.297, Speaker B: But the whole point of intent is for the users. I don't care about the technology. The purpose of the intent is to solve a problem for the user. What you just described is simply saying I want to remove all these points of friction for the user. And if we do that, if you manage to do that, the user experience is strictly better. However, in the case in the example that David gave earlier, intent is a limit order. And limit order is not strictly better than market order.
00:17:31.297 - 00:17:38.593, Speaker B: It just gives you more options. There's a trade off between the limit order and the market order. I think these two things are completely different.
00:17:38.761 - 00:17:45.180, Speaker C: Better than the market order. A limit order, if you set the price to infinity, becomes a market order.
00:17:45.300 - 00:17:55.052, Speaker B: No, but the downside of the limit order is you have to put in one more number. Which is why sometimes I don't use the limit order. If the market is liquid, I'll just sell a fucking market order.
00:17:55.156 - 00:17:56.360, Speaker A: So you ape in.
00:17:57.220 - 00:17:58.320, Speaker B: Yeah, exactly.
00:17:59.700 - 00:18:03.400, Speaker C: So you go on uniswap and you set your slippage to infinite. Right?
00:18:05.380 - 00:18:07.720, Speaker A: I've seen people get wrecked on Pepe for that.
00:18:09.240 - 00:18:20.224, Speaker B: So I'm confused by the terminology here again. What does intent even mean? Does it just mean removing friction for the user if so, I mean it's just a buzzword.
00:18:20.352 - 00:18:40.150, Speaker D: It's one of the use cases of intent. Maybe you can consider Intent is like this vector. My description of it is use case to make the user experience better. It depends on your intent. You can make your intent details very detailed, like very detailed. That it's only executed the way that you want but without friction from your side.
00:18:40.450 - 00:19:00.954, Speaker A: So I think this is like a perfect segue into talking about how our intents constructed from a infrastructure perspective. Because then I think it'll give our audience a better idea of how this works. In the background. There are a couple startups that are working on this, right? There's Anoma and Suave. So maybe we could start with Anoma.
00:19:01.002 - 00:19:03.256, Speaker D: David, can I just add something before we.
00:19:03.328 - 00:19:03.720, Speaker A: Yes.
00:19:03.800 - 00:19:24.216, Speaker D: This is the bigger companies or the bigger startups that work as intent as a whole systems. But I see that there are maybe tens of twenties or whatever of companies works on kind of intent related stuff. Yeah, but they are not filling the whole picture. They don't want to build a system from the ground up to execute. Execute intense. Anoma and swap.
00:19:24.248 - 00:19:27.254, Speaker A: Are you're talking about like account abstraction, right? Like 4237.
00:19:27.352 - 00:19:53.670, Speaker D: Not just account abstraction, account abstraction. MEV solutions that give money back to the user. Like Suave and all this stuff. Bridging and like trustless bridging that you don't need to like. I maybe I'm looking holistically more than I should, but there are many, many startups that fill part of the intents. Because as to David's point, intents exist now. Actually when you go front to end to uniswap, that's an intent, right? Or to.
00:19:53.670 - 00:20:08.188, Speaker D: But now we are taking this primitive or simple intents into really a more complex vision. So there is startups along this curve as we go to the holistic vision. There are many startups. So this is just a quick interruption, right?
00:20:08.244 - 00:21:04.272, Speaker C: Yeah, I think I want to do like a segue to motivate Suave and Anoma. So just to go back on Tiao's point, like is it just about user experience and intents are already here. What's the big deal? Why are we making a new name for this? So first point, intents are still already here. Limit orders on Dex aggregators exist and they do improve user experience. Because if you've tried to put in an order on a Dex prior to intent limit orders, it wasn't fun. You would click the get the price. It would show you a price for like one second and then Sometimes it would just fail and then sometimes you, you can end up submitting the transaction and then it fails on chain and the price like changes every second and you're just like, okay, like just, just give me a slightly worse price, just.
00:21:04.272 - 00:21:37.708, Speaker C: But like I just want it to get go through. Right. And in this particular case, the intent, the limit order was useful in bringing a better user experience. Okay, so now you got like slightly better user experience. But I think it's like at what cost? And the cost of this was that when you submitted this limit order, it was either, you know, 1 inch or Paraswap or matchup. They held your limit order in their system. It was not something that was public in the mempool.
00:21:37.708 - 00:22:40.386, Speaker C: It was something very specific to their systems. And if they end up gathering a monopoly on this, they do kind of have the incentive to screw you over at some point if they get enough of a monopoly. And just to motivate the upcoming conversation a little bit, if we take the simple limit order and we think about how much work we've been doing across the decade to decentralize the limit order, we can think about the first problem we had was ownership. What did we even trade? And Bitcoin solved that by providing a simple way to check provenance. Whatever you're receiving is not fake, it was not double spent and things like that. When you're making a trade, that's an important component. The other important component is when you're making a trade, you want to make sure that you receive the other thing that you're going to trade with your counterparty.
00:22:40.386 - 00:23:27.300, Speaker C: You don't want to give out your asset. And then your counterparts say, oh, thanks, peace out. And Ethereum was the first one that solved this problem with smart contracts. And now the last component of a limit order is that is the price. Like how do you make sure that you're not totally getting screwed on price? And the way to do that is to broadcast your price, to shop for price first and get the best price that the market gives you. And to do that in a decentralized way I don't think has been solved yet. And that's what all these intent projects are ultimately solving or trying to solve.
00:23:27.300 - 00:23:41.900, Speaker C: In traditional markets, this role is solved by an exchange. Like you trust the exchange to do order matching for you so that everybody gets the information at the same time so that the market can work for you.
00:23:42.680 - 00:23:47.888, Speaker D: So are we rebuilding trendspy on Web three now?
00:23:48.024 - 00:24:02.886, Speaker C: I mean, yeah, ultimately all of this is rebuilding traditional components, but like we're decentralizing Each and every part slowly. Right. And it's going to be a better world. That's. That's why we're here. Right?
00:24:03.038 - 00:24:03.814, Speaker D: Okay.
00:24:03.942 - 00:24:04.726, Speaker C: Yeah.
00:24:04.918 - 00:24:24.790, Speaker D: So we are moving to trade fight in this. In the terms of goals. We are kind of getting the same goals, but the infrastructure is different. Instead of trusting the. Instead of trying like the New York Exchange, we are trust. We are not trusting anyone. We are just trusting that the system will work, essentially.
00:24:26.010 - 00:24:57.140, Speaker A: I saw a good example, and it was something akin to paying for order flow with Citadel, that pays for order flow with Robinhood. And now you have order flow that is essentially broadcasted to everyone or whoever are the solvers. And we'll talk more about the infrastructure side of Suave and Noma. But essentially you're broadcasting this order flow, whatever it is, and you have, you know, a bunch of solvers that are going to find the best execution path based on what the intent or ask is.
00:24:59.280 - 00:25:08.856, Speaker C: And they are. And the. The most important part is that you want them to be motivated to give you the best price because they are in competition with other solvers. Yeah, yeah.
00:25:08.968 - 00:25:14.360, Speaker B: Can we talk about solvers? Because you guys have been mentioning this word for the last 20 minutes. I don't know what it is.
00:25:14.480 - 00:25:15.336, Speaker D: Let's talk about the infrastructure.
00:25:15.368 - 00:25:16.248, Speaker B: I know what it is.
00:25:16.384 - 00:25:18.968, Speaker A: Let's talk about Suave and Anoma and how they work.
00:25:19.104 - 00:25:38.648, Speaker D: To start, I can start with Suave, and David can cover Anoma. So Suave is an extension of what we know now as Flashbots or there's the next product. Flashbots started from a different problem, but they are moving now into the intent space. So they started as a MEV solution. They saw that MEV and gas auctions can destroy Ethereum. Right.
00:25:38.704 - 00:25:42.352, Speaker A: And can you explain what MEV is just. Again, just so that for our audience?
00:25:42.496 - 00:26:16.566, Speaker D: Okay. MEV is. That is an inherent activity in any blockchain, especially Ethereum, because it has a lot of financial activity, which means that I can actually extract value from the network without having a directional position. So I don't have to trade hold ETH to get value, but instead I can see a transaction and I can run a transaction that goes after this one or before it or. Or sandwich this transaction to make value. And all my extraction happens in one block and done. So I make money quickly.
00:26:16.566 - 00:26:46.442, Speaker D: So it's a kind of bot activity. And a simple example is that someone goes to Uniswap to trade big volume. I want to convert $1 million from USDC to ETH. So Uniswap is a stupid market maker. System, it's a automatic market maker. So when you do the size of the trade, the price of Uniswap will change significantly depending on how big is your trade. But once it change, it actually mismatches decent centralized exchanges.
00:26:46.442 - 00:27:23.048, Speaker D: So there is an opportunity for arbitrage. So you can run an arbitrage transaction between Uniswap and asx, or you can actually just background this transaction with another transaction to make money. You can extract mev. MEV is that maximum extractive value. So that is the whole term for mev. So MEV used to happen in a very bad way, which is people used to bid on gas. I will submit a transaction to the network with more gas, more fees essentially to have my transaction run before you.
00:27:23.048 - 00:28:02.544, Speaker D: So let's say Imran, you found a good arbitrage opportunity, so you submitted a transaction on Ethereum. Now I want to beat you to this arbitrage opportunity. So I will submit the exact same transaction but with higher gas. And now we ended up buying many, many competing transactions. Only one of them will succeed. All of them, all the rest will fail, but the network performance will deteriorate anyway. So Flashbot came with this idea of okay, let's take this fight of a chain, let's make this gas auction pipe off a chain will create a marketplace where people who are actually capturing MEV can compete off a chain by submitting bids.
00:28:02.544 - 00:28:10.240, Speaker D: And whoever wins will win the opportunity. But we didn't destroy the network, we didn't keep submitting bad transactions to the network.
00:28:10.280 - 00:28:12.656, Speaker B: To be clear, why would that destroy the network?
00:28:12.808 - 00:28:51.370, Speaker D: Remember that every transaction submitted to the network have to be communicated between all the nodes of the network, all the peer to peer nodes. So you submit a transaction, I see this transaction, but I am obligated to pass it to the network. So all the network consume bandwidth and processing to understand the action. Then the same transaction comes again hundred times and we are circulating as a network this 100 transactions at the end, only one of them are valuable. The ones that will succeed 99 are just garbage that destroy the network. So that's why when we take this off a chain, this battle can happen off a chain and only the winning transaction will be broadcasted on a chain. So this was the MIV auction or the flashpot auction product.
00:28:51.370 - 00:29:23.630, Speaker D: So they started that and it got successful and they captured millions of dollars, hundreds of millions of dollars of miv. But the question became, who is actually getting this merv? Is it the user? Is the user making more money? No, it's actually this hundreds of millions were split between two entities. First is searchers, people who look for MERV and validators are now pool builders who actually order the transactions in this block. This kind of give a sour taste for developers.
00:29:24.130 - 00:29:25.770, Speaker A: Sorry, what are searchers for?
00:29:25.810 - 00:30:06.376, Speaker D: Audience Searchers are someone like David who are like financial traders and can actually identify that they can make money, free money essentially by doing arbitrage or liquidations of assets or stuff like that. So they run a financial system, smart system, to the side that actually monitors a chain and sees these transactions and saying, oh, this is a good opportunity. Let me quickly submit a transaction to capture this money. So while speaking about good math, let's not speak about bad mav like front running and sandwich attacks. Okay, so assuming that Ciao and David are good people, they will do good MERV only.
00:30:06.448 - 00:30:06.692, Speaker A: So.
00:30:06.736 - 00:30:09.756, Speaker B: So there's no such thing as good nev or bad nev.
00:30:09.788 - 00:30:11.148, Speaker C: It's market.
00:30:11.284 - 00:30:16.840, Speaker B: It's not an ethical thing. I'm really, I'm done with this discussion. It's not a moral thing.
00:30:17.140 - 00:30:45.530, Speaker D: Okay, good point, good arguments. But okay, let's say mev. I will not add good MEV in front of it just for you chat. Okay, so someone founds opportunity and run is running a sophisticated system on the side to capture this. That's weak. The term we give this to these people are math searchers. Okay, so we have the MEV searchers who are smart traders and we have the validators who at the end of the day, this is the ultimate authority of which transactions will be included on a chain.
00:30:45.530 - 00:31:02.634, Speaker D: And what is the order of these transactions? So these two entities have, compete or like actually collaborate to capture mev. So the revenue from that MEV is split between just two entities, searchers and validators or proposals.
00:31:02.682 - 00:31:12.030, Speaker B: Now, after, by the way, we now know for a fact that some of the top searchers are also validating blocks because that gives them a huge advantage.
00:31:12.610 - 00:31:58.844, Speaker D: Yes, and this is what flashbook expected, that because of the financial incentive, I can be a searcher and I can be a block builder and I can be validator. Why not? The more centralization, the more power I will have. And that's what ultimately led to the point that we started all of this discussion about swap. So what's swap? Swap is an effort or a vision to decentralize this even further. How instead of just splitting this myth between the searcher and the validator, let's create a system which actually gives some value back to the user. If a user is creating a transaction, that will create the myth, let's actually reward the user for this transaction by giving them some part of this mail.
00:31:58.892 - 00:32:01.324, Speaker A: Back or just giving his money back.
00:32:01.412 - 00:32:11.788, Speaker D: Okay, so yeah, like cash back. Like when you go shop at whatever for 100 bucks, they give you $1 back, right? Your credit card will give you $1 back. So you can consider it like that.
00:32:11.844 - 00:32:13.400, Speaker A: Wait, David had something to say.
00:32:13.780 - 00:32:24.292, Speaker C: So what motivates the searchers plus the builders, plus the validators, like what motivates them to give back to the awesome question.
00:32:24.476 - 00:32:55.216, Speaker D: Because the user, when they get pissed about losing this money, they can actually go to a certain broadband and actually cut the searcher out. They can say, you deal with a searcher, I will make my flow private. I will make all my transaction flow private. This transaction flow will not touch the main bool. It will not see go even to a private marketplace. It will be just private. And we are seeing so many startups doing this, we call them pay for order flow.
00:32:55.408 - 00:32:58.860, Speaker A: So you could also like change your RPC node, right?
00:33:01.080 - 00:33:03.072, Speaker D: You mean Flashbot protect for example.
00:33:03.216 - 00:33:05.620, Speaker A: Yeah, exactly. And box route.
00:33:06.360 - 00:34:12.640, Speaker D: Flashbot protect is essentially that you are protecting your transaction from being in the mempool, but you don't necessarily protect it from being in the private mempool of Flashbot. Like they can see it or like unless you have guarantees that it's not. I think Flashboard protect doesn't include it in the private mempool, but many products actually include it in the private meme pool to back run it. Example here is Blocks rawit. They have a product called background meme that your transaction will not touch the public meme pool, but it will go to a private meme pool where searchers will actually background this transaction will make another decision that goes after this transaction and they capture some value from this smell and then share part of it to the user. So the user will have an incentive to make their order flow private. So instead of having this dynamic where it's a winner takes all if someone, if some entity becomes a destination to get all the order flow, now we end up in a centralized scheme, Right?
00:34:13.580 - 00:34:27.934, Speaker A: I feel like right now we're in the fight for order flow. Right? Like apps are fighting for order flow, wallets are fighting for order flow, you have new extensions that are coming out that are fighting for order flow. Yes. So I guess where does, I think.
00:34:28.102 - 00:35:51.390, Speaker C: The whole Suave anoma and all this stuff is to make sure that the order flow gets distributed as widely as possible. And the first implementation of Suave is MEV share. And the way they do that is through a central matchmaker where the user through Flashbot Protect would send their order flow to this Flashbot API called the centralized market matchmaker. And the matchmaker will start talking to searchers and block builders and reveal I think like certain information and kind of gossip around so that it's in the best interest of the user. And us user are trusting this centralized component because it's like Flashbot and it's not like, it's not. It's not like a searcher to distribute this as widely as possible and like and make the searchers compete to give you back as much MEV as possible. Because if a particular searcher says, okay, I'll give them back $1 and then the other searcher says I'll give them back $2, this bid will benefit the end user.
00:35:51.390 - 00:36:32.852, Speaker C: And there's like this centralized matchmaker is not ideal, but this kind of shows the difficulties in creating a system that solves decentralization of intents. Right. Like there's another component inside of MEV Share that's kind of weird. There's like a document that says that's called a fair market principles that searchers and bundlers have to have to follow. And it's kind of like a pinky promise of like, hey, you will not unbundle this this thing and you will not. There's like a few other things, but like to their credit, it's like this is a very hard problem to solve. Right.
00:36:32.852 - 00:36:44.020, Speaker C: So this is like their current iteration and they have like more plans to, you know, suave is like a huge plan to solve decentralization of intents.
00:36:44.100 - 00:37:26.466, Speaker D: Yeah. So ciao. We went for holds aside to be able to answer your question, right? You asking what is solvers, right? This was your question. We are awesome, right? So like this whole story is to explain what is server solver now is exactly at this point now you have user submitting the transaction to a private pool for searchers at this exact moment, searchers user doesn't have to submit a transaction anymore. They can submit an intent instead. At this point, instead of a transaction saying go to Uniswap, exchange one east to whatever at this exact moment, they say, no, no, no, I don't need to even specify the transaction. I can see an intent.
00:37:26.466 - 00:38:07.716, Speaker D: And someone in this private pool will solve this intent for me. So I can say swap 1 ETH to the largest USDC amount possible within the next 5 minutes and I would throw this intent one of the searchers or one of their solvers. Now they have been upgraded from searcher to a solver will actually solve this event to give you your maximum amount of eth that they can while capturing also some of the merv, pocketing some money and sharing some money with the validator. So a solver is kind of an entity that can actually solve your intent and make money in the process.
00:38:07.868 - 00:38:10.964, Speaker B: So I mean, it's just a different word for searcher basically.
00:38:11.012 - 00:38:30.702, Speaker D: Yes, but the searcher has to do more. In this case, the searcher is not just back running the transaction. The searcher now has to actually get draft your transaction to begin with. Yeah, you didn't submit a transaction. So as a user you didn't submit a transaction. You just give some big requirement. It is a searcher now who drafts the transaction for you.
00:38:30.806 - 00:38:36.766, Speaker B: So like it's like a OTC desk. I tell the OTC desk do this for me and then they'll do whatever.
00:38:36.798 - 00:38:45.490, Speaker D: They can to I decentralized OTC desk. Maybe, maybe you can coin this term. Why not like, like solver is a bad term. So decentralized.
00:38:45.830 - 00:38:54.690, Speaker B: Why can't we just reuse the same tradfi terms? It'll be much. MEV is really arbitrage and the searchers is just market makers.
00:38:55.910 - 00:38:57.290, Speaker C: This is a new world.
00:38:58.470 - 00:39:00.574, Speaker D: We have to be unique. Come on.
00:39:00.742 - 00:39:10.782, Speaker A: So for our audience, just so that we have like a summary of what's been happening. So intents are what users express what they want, not how they get it, right?
00:39:10.886 - 00:39:11.406, Speaker D: Yes.
00:39:11.518 - 00:39:28.604, Speaker A: And intents are ultimately like programmatic. Solvers are essentially searchers that will execute your intent and they will put in the trans. They will conduct the transaction on your behalf. And yeah, so I would say that's where we're at so far.
00:39:28.692 - 00:39:29.932, Speaker D: That's we are going to.
00:39:30.036 - 00:39:39.480, Speaker A: Yeah, I mean, I mean, yeah. In terms of our conversation right now, this is like kind of where we're at. We still have a lot to peel back, right? Yes, but that's kind of where we are right now.
00:39:40.530 - 00:39:50.950, Speaker B: So where does Anoma fit into the picture and how is it different from Suave? I know the white paper is extremely hand wavy, but let's do our best to make sense of it.
00:39:51.250 - 00:40:17.114, Speaker C: Yeah, yeah. So earlier when I said ultimately the problem is in decentralizing this process. Anoma is a very ambitious project which aims to do like generalized intents. Right. So like Dex aggregators right now do a very specific intent. It's like the, it's like ERC 20 limit orders. Right.
00:40:17.114 - 00:41:09.922, Speaker C: But you can imagine limit orders for NFTs or you can like imagine cross chain limit orders and you know, account abstraction with EIP 4337 can also be seen as intense and they have like a very specific format of intents. Anoma wants to like first have a generalized definition of intents. So I think One of their GitHub repos is Juvix and that's like a language to specify intents with the ability to decide which part of the intent is private because that's. That will determine the balance of powers and in users between users and searchers. So there's like a lot of ZK tech that's being integrated into the intent specification language, Juvix, and they also have.
00:41:09.946 - 00:41:11.266, Speaker A: Like threshold encryption, right?
00:41:11.338 - 00:41:13.550, Speaker C: I don't even know what threshold encryption is.
00:41:13.930 - 00:41:14.870, Speaker B: Me neither.
00:41:15.610 - 00:41:17.842, Speaker A: I can explain it. But if you want to explain it.
00:41:17.866 - 00:41:26.682, Speaker D: Too, Imran, if you have a look at the gram of Anoma handy, you can bring it up and we can actually take a step in explaining what's anomaly because it's quite complicated.
00:41:26.786 - 00:41:40.234, Speaker C: I guess I'll continue a little bit because Anoma was, you know, I just talked about Juvix, the language for specifying what intents are. Right. And like integrating privacy parts into it.
00:41:40.322 - 00:41:44.330, Speaker B: When you say language, you mean actually a programming language like Java.
00:41:44.410 - 00:42:58.288, Speaker C: It's ultimately going to be the declarative language, like specifying what you even want, right? Yeah, they're like very mega brain, right? Like a generalized intent specification. And then there's like Taiga, a project, like a sub project of Onoma that specifies like the system or the protocol that resolves intents into atomic state transitions, AKA transactions. It's like their specification of how to distribute these intents, how to do gossiping between searcher solvers. And how do they, how do they incentivize the propagation of your intents and stuff like that. And then there's like Namada, another sub project of Anoma, and that's like an L1 that's related to privacy. And I don't really know where it fits in. But ultimately like Anoma is supposed to be able to be a layer above all of the settlement layers like Ethereum, Solana, whatever, where you can like solve the intents and then settle on these blockchains.
00:42:58.288 - 00:43:02.880, Speaker C: So I'm. I'm not super sure where Nevada comes in. I'll have to do more research there.
00:43:03.000 - 00:43:09.940, Speaker A: But the, I guess the interesting part about Anoma is that they're creating this generalized like intent platform, right?
00:43:10.040 - 00:43:10.828, Speaker D: Mm.
00:43:11.004 - 00:43:28.828, Speaker A: And you have solvers and then they have like private mem pools, which is like threshold encryption, right. They encrypt, decrypt intents, they order Intents and then they execute the intents. So Fuda is sharing a screen. So maybe Fuda, this is like the best part to talk about is just like, how does this all look like on.
00:43:28.964 - 00:43:30.332, Speaker D: Yeah, this is actually.
00:43:30.436 - 00:43:30.972, Speaker A: Talk about this.
00:43:30.996 - 00:43:50.880, Speaker D: Yeah, this is one of the few block diagrams in Anoma white paper, but actually it captures the whole story here. Yeah, the part that David explained is exactly what the first part, which is they call the counterpart discovery. As a user, you bring intent. And this intent can be a private transaction, transparent transaction or whatever.
00:43:50.960 - 00:43:51.248, Speaker C: Right.
00:43:51.304 - 00:44:03.200, Speaker D: So it can be even private or transparent. Then you have some network that will actually share this intent between them together. So they will gossip this intent for everyone to know about it.
00:44:03.320 - 00:44:03.558, Speaker C: And.
00:44:03.584 - 00:44:39.032, Speaker D: And then comes the beloved intent for chat with the solvers. Solvers will take this intent and create transaction. After that comes a port that you mentioned, Imran, which is a threshold encryption. The solver now have decoded the intent and created a transaction that executes intent. Now we want to kind of hide these details after all to provide anyone from reordering these transactions. So what happens is that the user comes something called threshold encryption. Using this distributed key cryptography, they encrypt the transactions.
00:44:39.032 - 00:44:54.894, Speaker D: No one can see the transactions anymore. And then they put this in the mempool. They put this transaction in the transaction mempool. The proposer will take CC transactions. They don't know what the content, but they see transactions with some fees. So they order them, they send it to the validator to execute.
00:44:55.072 - 00:45:07.554, Speaker B: So now Mempool validators, proposer. These are not Ethereum Mempool or Proposer validators. These are Anoma Mempool proposal validators. Correct?
00:45:07.602 - 00:45:33.626, Speaker D: Yes. Threshold encryption is not compatible with Ethereum right now. So in this pro diagram, this is Anoma transaction, Mempool proposal and validator. If you want to use Ethereum, then you will have to give away the encryption. You will have to give this transaction as transparent to be able to use Ethereum. So yes, for this block diagram, these are Onoma, proposer, validator, everything.
00:45:33.778 - 00:45:36.110, Speaker B: So Onoma is its own blockchain?
00:45:36.770 - 00:45:37.338, Speaker D: Yes.
00:45:37.434 - 00:45:37.754, Speaker C: Yeah.
00:45:37.802 - 00:45:44.474, Speaker D: And so as a swap, so. And swap as well is its own blockchain will settle to Ethereum.
00:45:44.602 - 00:45:47.990, Speaker A: This reminds me of the opera meme layer one's for everyone.
00:45:50.360 - 00:45:56.224, Speaker D: We decentralized and increased throughput by adding more blockage chains. Right. We started just before.
00:45:56.392 - 00:46:03.152, Speaker B: So if I were Ethereum user and assign an Ethereum transaction or not transaction, but intent.
00:46:03.296 - 00:46:03.920, Speaker D: Okay.
00:46:04.000 - 00:46:08.080, Speaker B: Can the intent go through Anoma and then ultimately settle on Ethereum?
00:46:08.240 - 00:46:25.406, Speaker D: Yes, it can Go, but until only the solver phase. So the solver phase will convert the intent into an Ethereum transaction and instead of using the rest of this block diagram, they will can broadcast this transaction now into the Ethereum mempool.
00:46:25.598 - 00:46:34.414, Speaker B: So in that scenario on this picture, the consensus and execution verification, these are replaced by Ethereum consensus, Ethereum execution.
00:46:34.542 - 00:47:04.668, Speaker D: Exactly. But the catch here is that you need some guarantees that the builder and validator will not reorder these transactions or they will not front transist transactions. So they will not maybe change the intent even further. But this is kind of where the guarantee anoma in this block diagram, by encrypting the transactions, they prevent anyone from messing with them after that. Like because they don't see what's happening, they will have to just re order them the way they come to to the, to the proposal.
00:47:04.764 - 00:47:09.352, Speaker A: Right, and this is combination happens on the intent side then, right?
00:47:09.536 - 00:47:40.070, Speaker D: Yeah, exactly. Like the Merv capture creating the transaction, all of this happens at the solver. So the solver is the main character in this system. The proposal just submits the blocks, get the information reward from the book, end of the story. So this is the anoma vision. So this is kind of where the Enuma system kind of works, or at least the high level of it, because David actually did a great detail of which each component of this component and how it works.
00:47:40.230 - 00:48:32.824, Speaker C: Yeah, it's. There is not that much like publicly consumable details on each of these components. So it's hard to like unless you're very active part of the research team and like part of the group, then it's hard to exactly understand how it works. And also it's probably years away too. But just to illustrate the difficulty of what they're trying to do is on the other side, account abstraction also has a very specific format of intents. And they also have this problem of, of solvers. And the way they solve these problems is to really restrict what their version of intents can do.
00:48:32.824 - 00:49:11.026, Speaker C: And in the account abstraction world it's called, these are called user ops. So they remove the ability to specify a few opcodes, they remove the ability for you to access state that is changeable or and things like that. So that your user ops cannot DDoS the solvers. Because if you want a permissionless pool of user Ops intents, the two parties have to work together. The user cannot DDoS the system and the system has to compete to solve your intent to get your intents.
00:49:11.138 - 00:49:16.040, Speaker B: Wait, so account abstraction is also part of Anoma, or is it a separate.
00:49:16.120 - 00:49:38.504, Speaker C: Account abstraction like ERC4337 is like was was I think was specified a long time ago, before, before the word intent was even a thing. I think like the word intent just captures the general concept of specifying a desired state change without a concrete transaction.
00:49:38.632 - 00:50:06.770, Speaker D: Okay, so, so, but I think, I think account abstraction is critical for intents because if you craft a transaction on behalf of the user, the user have to go and sign it, but you don't want any interaction from the user anymore. So I think account abstraction is the way for you to, after you get the intent and solve it, to craft the transaction and use the signature from the user to sign the transaction without the user resigning the transaction.
00:50:07.110 - 00:50:14.326, Speaker B: Can we, can we define account abstraction first? Because I don't think we've ever talked about account abstraction before.
00:50:14.398 - 00:50:15.062, Speaker D: Yes.
00:50:15.206 - 00:50:27.046, Speaker B: So the audience needs to know what it means and then we could spend as much time as we need, but we need to understand what it is and then how it relates to intents.
00:50:27.158 - 00:50:38.572, Speaker D: Account abstraction is a big term actually. I think I can give the umbrella term explanation and then we can go to the details of 4337 because it's important.
00:50:38.756 - 00:50:47.468, Speaker A: And then we should also talk about, sorry, Vitalik's paper. He talks about smart contract wallets as one of the big paradigm shifts for Ethereum. So maybe touching on what this all means at the end.
00:50:47.604 - 00:51:22.520, Speaker D: Okay, sorry. Accounts on Ethereum has two types. There was a type that we know which is externally owned account that has a private key and beautiful, you import this private key into Metamask and then you sign every transaction from your externally email owned account. Okay, that's the problem with this type is that you cannot actually delegate actions to user. You cannot say, oh, this user can create a transaction for me or can do this action on my behalf because you cannot this con, this account is not programmable. It just signs. That's it.
00:51:22.520 - 00:52:06.580, Speaker D: So account abstraction means that you want a little bit more smart wallet or a smart account that can program, that can be a program that you can actually say, oh, I will delegate Imran to vote for me. I delegate Chow to transact on my behalf on Uniswap, I can delegate David to buy NFTs for me. And all of this is part of the wallet. I want to define all of this logic in the wallet. So luckily enough we have smart contracts. So you can make a smart contract wallet where you can actually, your wallet is a smart contract. You put your money in smart contract and you can define this logic or conditions or whatever you Want in the smart contract itself.
00:52:06.580 - 00:52:27.122, Speaker D: So you can add programmable wallet. There is some technical details that I don't want to touch. But essentially speaking like smart contracts also are limited. They cannot pay for their own gas, which is funny. Smart contracts need an account to pay for their gas. So this is how Ethereum started, and this is how Ethereum operates until today.
00:52:27.306 - 00:52:27.794, Speaker C: Right.
00:52:27.882 - 00:52:58.600, Speaker D: So if you want vulnerability, you don't, you need an account to pay for the gas. If you want to have private key, then you don't have programmability. It is this situation. So account abstraction is an effort to abstract all this mess and give you an account that is programmable, that can actually delegate action, that can actually define functionalities that other people do on your behalf. So this is how I define account abstraction. So David, you disagree with that?
00:52:59.060 - 00:54:21.450, Speaker C: Yeah. So account abstraction was originally a very user experience focused vip, right. And the result of this, of trying to get to this goal was that transactions would not like things that come out of the user would not be transactions anymore because they would not have a ECDSA signature, they would not pay gas, possibly. So the fact that these things were not transactions anymore is why right now we kind of say user ops are intense because these things have to be turned into transactions at some point. And just because these things are not transactions anymore, it revealed a lot of difficulties in how do you integrate with the rest of the Ethereum system? Because who turns these things into transactions? It's like solvers or bundlers or whatever you want to call them. And it turns out that if you specify your user ops in a weird way, these solvers might not want to take in your transactions because you could DDoS them and do things that grief them. And the solution that ERC4337 came up is pretty complicated.
00:54:21.450 - 00:54:47.522, Speaker C: They had to restrict what can go into a user op, restrict what data it can access. And it also introduced a reputation system and staking all these components just to solve the problem of decentralizing the user op pool. Instead of the mempool, you have the user op pool. It's like a different pool of which.
00:54:47.546 - 00:54:48.274, Speaker A: Is called a bundler.
00:54:48.322 - 00:54:48.722, Speaker C: Right?
00:54:48.826 - 00:55:24.036, Speaker A: Yeah, I just thought of something. I don't know if this is going to move the conversation a bit, but how does this impact security? Because I know security is such a big problem in the space from phishing, scams and et cetera. How does like a construction and more broadly intents solve this problem of security? Because right now, like if you think about hackers, they can phish, you know, Users and force them to conduct a transaction that would ultimately give them access to their entire wallet. Right. So I'm just thinking from like a UI UX perspective, does how does it impact security generally?
00:55:24.148 - 00:55:27.828, Speaker D: So you are speaking about security of smart contract wallets or what exactly?
00:55:27.924 - 00:55:45.018, Speaker A: Of smart contract wallets. Intents also like generally speaking, intense. Because now that the user isn't conducting the actual transaction and the solvers are, how does that impact security at a broadly broader scale? And security meaning like phishing scams and et cetera.
00:55:45.194 - 00:56:38.528, Speaker C: For phishing scams particularly, I think intents are a lot more, a lot easier to kind of verify and display because ultimately you're looking at what do I want? It's like the starting state, the end state. Like is this what your intent is? And then you can say yes or no. You're not like signing a transaction that is possibly complicated and then trying to tell if that's going to have the effect that you want. On the other side, like account abstraction enables non ECDSA permissions so you can use a secure enclave in your iPhone or Android to sign transactions. You can have two factor authentication. Basically whatever security methods that are out there, you could technically implement.
00:56:38.704 - 00:57:00.782, Speaker B: Okay, and just to touch on this, account abstraction enables better security through features like signing with your two factor authentication from your phone or from the secure enclave of the phone. Aside from security, what else does it enable in terms of user experience? There's more things for me, I think.
00:57:00.806 - 00:57:36.510, Speaker D: It enables defining of intents. You remember, you know when you go to a website and you send a message saying I am the owner of this account, you can actually sign your intent from your wallet from your account abstraction saying that I am, I want to do that activity and here is my condition. And you sign this and this is becomes assigned intent. So it cannot be fetched, it cannot be. Someone cannot fix the intent for you. And then solvers will take this intent that is signed by you and execute it. But because you give them, you will have to give them validity to create transaction on your behalf.
00:57:36.510 - 00:57:39.910, Speaker D: So I think that is a critical part that I.
00:57:40.370 - 00:57:52.962, Speaker B: But this is still security, right? This is still security. I think account abstraction enables some, it can help to remove friction as well.
00:57:53.066 - 00:58:05.010, Speaker D: Account abstraction can enable a lot of stuff. Like if you are speaking about the user experience in general, you can forget about private keys as a user will not see private keys or seed phrases anymore. That's one aspect. I think David touched on that because.
00:58:05.050 - 00:58:15.314, Speaker B: I've seen people talk about account abstraction better enabling gasless transactions or batching Transactions. These things will fundamentally improve user experience, right?
00:58:15.402 - 00:58:16.070, Speaker D: Yes.
00:58:16.490 - 00:58:29.404, Speaker B: It's just better if you don't have to sign every transaction, like sign a transaction upon every action. It's better if you don't have to have a small amount of ETH in your wallet in order to sign a transaction. That kind of stuff.
00:58:29.452 - 00:58:29.756, Speaker C: Right?
00:58:29.828 - 00:58:34.840, Speaker A: Yeah. The dapps could pay for the gas fees for the user and so that could be also abstracted away.
00:58:35.380 - 00:59:07.718, Speaker D: Yeah. It all comes to the implementation of the Smart Contract Wallet. The account abstraction approach is just to create a framework for how people can just create their smart Contract wallet to enable some of these features or. Or other like it's not one size fits all. Like Smart Contract Wallet can actually have different implementation that some of them will enable features that are not supported by the other, like social recovery using secure enclaves, stuff like using Paymasters or stuff like that. It depends. Or paying in other currency other than eth.
00:59:07.718 - 00:59:11.302, Speaker D: I think this comes down to the implementation of the smart Contract Wallet itself.
00:59:11.446 - 00:59:32.568, Speaker A: So now I think our users have a good understanding of account abstraction. We talked about Anoma and Suave. Where do we go from here? What should founders be thinking about in the space? And if we've missed any conversation about Anoma Swap that you'd like to add, please feel free to do so. If not, maybe we can segue into how founders should be thinking about building the space.
00:59:32.704 - 01:00:10.840, Speaker C: Yeah, I can say a few things there for DAPP builders seeing the evolution of trading Dapps Dex aggregators. You know one thing that paradigm article at the end mentioned is that when you go towards this system of using intents instead of transactions to interact with your dapp, you're inevitably going to run into the problem of either centralizing the solver component or trying to decentralize it. And your decision there is going to impact, I guess, the way blockchains grow in the future.
01:00:10.960 - 01:00:16.664, Speaker B: Why does this centralize the solvers? Why does the intent based system centralize solvers?
01:00:16.792 - 01:00:24.744, Speaker C: It's not like you have the choice. It's always easy. It's always easy to go towards a centralized solution.
01:00:24.872 - 01:00:27.032, Speaker B: I see, yeah, the natural tendency of.
01:00:27.056 - 01:00:52.770, Speaker C: Centralizing things and when you permission specific solvers to do this job, you are basically giving away all of the value to them. And if your app is super successful, it gives an edge into part of the network. It's a pretty far out concern. It is there.
01:00:52.890 - 01:01:06.244, Speaker A: So what you're saying is essentially dapps would lose their stickiness to solvers and solvers will have more of a moat or control of where transactions can flow through. Right is what you're saying.
01:01:06.332 - 01:01:27.972, Speaker C: Dapps have the ability to like dapps that generate a lot of mev, have the ability to funnel that towards particular solvers if they choose this centralized and those solvers slash builders, validators, you know, grow. And that's like not some, that's like not the ethos of crypto solvers.
01:01:28.036 - 01:01:40.544, Speaker B: They do something fairly sophisticated. So there is a natural tendency for one or few of them to stand out to do much better than everyone else. Right, but you don't offer better service.
01:01:40.712 - 01:01:53.984, Speaker C: Right, but you don't want dapps to be the ones choosing who is allowed to even attempt the solving. You want the solving to be free and open to anyone who wants to try it out.
01:01:54.152 - 01:02:28.242, Speaker B: The analogy I can think of is before ftx, Genesis was basically the de facto solver of the entire crypto centralized crypto. The retail users don't interact directly with Genesis, but they interact with let's say blockfi or some other lending platform. But the flow ultimately all goes to Genesis which is the centralized solver because they offer better service. But anyway, I don't know if it's a perfect analogy, but it might be a helpful analysis analogy.
01:02:28.306 - 01:02:42.402, Speaker A: Puda, your thoughts on how builders should be thinking about the space? Let's say I'm building my own DAP right now in DeFi. How should this concern me? What should I be thinking about as.
01:02:42.426 - 01:03:23.072, Speaker D: Builders, especially application builders, not infrastructure builders. Actually you need to be very aware of all the strengths. If you are building an app now that doesn't support account structure, you are in a bad spot. You have to. If you are building a DEFI protocol, an NFT protocol, you have to have it in your head to support smart contract wallets and account abstraction from the get go. Maybe you can even run your own paymaster that users pay you to sponsor their smart contracts transaction. That is one maybe even start educating your users about intents and how MEV and how to capture this mev.
01:03:23.072 - 01:04:15.208, Speaker D: And I think many protocols are starting to work on that. We have seen protocols integrating with solutions like Wallet chain to capture the MIV and give it back to the user. We have seen companies come together to build Myth Blocker which is an RPC node that users can actually use to capture part of their mev. We have seen MIF share from Flashbots. So I think this is a major change of the user experience. So getting users used to the solution is one step gets us one step closer to using intents when the user will not submit transactions anymore, but will submit Intents. So again, as a app developer, find what is the best solution that can give the best execution to your users and integrate it with your app, whether it's a DEFI protocol or an NFT protocol or whatever.
01:04:15.208 - 01:04:43.658, Speaker D: For builders who are starting to build something new in space, we have actually seen a lot of, we are seeing a lot of opportunities in this space about decentralizing mev, actually building the best implementations for account abstractions or solvers, all that stuff. So there is a lot of opportunities for builders coming into the space to build the protocols. And we continuously add these ideas to our request for startups because we need builders who are actually tackling real problems.
01:04:43.754 - 01:05:10.270, Speaker B: I'm actually playing devil's advocate because I don't have a strong opinion, but the example that David gave earlier about Dex aggregators or Uniswap, their front end already enables intent. So on Uniswap, you can specify how much slippage. To me, this is a pretty okay solution to my intent. What is exactly the problem that we're trying to solve with this intent architecture? Like, what is a specific problem that we haven't solved that can be solved?
01:05:10.350 - 01:06:04.828, Speaker C: To me, it's always the decentralization problem. Like you can do everything in a centralized way if you wanted to, right? Like you can, you can go on centralized exchanges, do your limit orders there, right? But the reason why we're doing this on the blockchain is because we all share this vision of decentralization. And just to take to expound the Uniswap thing, when you submit a transaction on Uniswap right now with V3, the inputting your order actually goes through the Uniswap solver router that decides how to split your order into Uniswap pools. So in a sense, like that's, that's like a tiny version of an intent architecture and it is a centralizing point, right? You're sending all the orders to the Uniswap router API first, and then it tells you the transaction that you're going to be submitting to the blockchain.
01:06:04.924 - 01:06:07.212, Speaker B: But if Uniswap wanted to fuck you, how do they fuck you?
01:06:07.236 - 01:06:13.052, Speaker C: They, they could give you a horrible routing literally right now. They could if they wanted to, but.
01:06:13.076 - 01:06:15.980, Speaker B: There'S very little incentive for them to do this, right?
01:06:16.020 - 01:06:19.068, Speaker C: Like based on reputation, right?
01:06:19.204 - 01:06:35.360, Speaker D: Solvers will have a bigger intent because they can run transactions on their own that amend your transaction. So the worse your execution gets, the better money they will make on merv. So that is where solvers, like outside of Uniswap can be actually more dangerous.
01:06:35.780 - 01:07:00.920, Speaker A: I also think intents are composable, right? Which I think is a very important part since they are decentralized limit orders. And the way I see this is going from one layer one to another layer one and getting the best pricing for it. You can't do that right now on Uniswap and these localized intent based platforms like Uniswap. So I do think more largely it's going to solve larger, more complex problems that we don't see today.
01:07:01.320 - 01:07:27.100, Speaker B: I just don't see a strong pain point. I don't see what pain point is. Solving my pain point with Uniswap is not losing like $100 on MEV. Uniswap is a perfectly fine product to me. What decentralization enables for me personally is if I have this amount of ETH on chain, I know that no one else can steal it. And if I want to swap it for some other token, I can use Uniswap without kyc. And that removes friction for me.
01:07:27.100 - 01:07:32.052, Speaker B: These are the two things that decentralization solves for me. It's not a hundred dollars of mev. I don't care.
01:07:32.156 - 01:08:06.756, Speaker A: And I think we just have to wait more for the ecosystem to mature to see actual more broadly the use cases that come out of intent based products. But maybe we could leave this for part two as more and more builders are building this space and see where this goes. Because I think this conversation can go on for hours and I would love for it to go on for hours, but I think our audience will just get sick of our voices. So we could probably take this offline. Ciao. Outside of that, I know we're at Time listeners, thank you again for joining us. Hit subscribe if you haven't.
01:08:06.756 - 01:08:12.140, Speaker A: We'll see you next time. Thanks for listening to Good Game. Don't forget to subscribe. We'll see you next week.
