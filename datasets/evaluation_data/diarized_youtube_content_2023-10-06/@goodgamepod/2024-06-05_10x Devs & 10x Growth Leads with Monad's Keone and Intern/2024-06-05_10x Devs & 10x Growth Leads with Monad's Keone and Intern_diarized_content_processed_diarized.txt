00:00:00.320 - 00:00:04.074, Speaker A: Welcome to good game. Your no B's insights for crypto founders.
00:00:07.854 - 00:00:16.662, Speaker B: Do you see any L2 that can compete with Monad performance wise and fees wise, or even has a path towards competing with Monad?
00:00:16.798 - 00:00:34.684, Speaker C: Our team is just writing software. So at the end of the day, like we always say this, within our team, everything is a software. So, yes, any other team could pull in the effort to write really performant software that allows that blockchain, whether it's a L2 or a layer one or layer three.
00:00:34.764 - 00:00:40.108, Speaker B: Do you see any team that's really focusing on performance today among the L2 teams?
00:00:40.196 - 00:00:40.764, Speaker C: I don't.
00:00:40.844 - 00:00:42.036, Speaker A: What about Mega Eth?
00:00:42.140 - 00:00:54.260, Speaker C: I think that they've stated a desire to do that. Okay. I think it's still super early right now, so it's really hard to judge anything that they've done so far, but I think they have the right goal in mind.
00:00:54.332 - 00:00:56.484, Speaker A: Looking for your next startup idea in crypto?
00:00:56.604 - 00:00:58.236, Speaker C: Check out our request for startups list.
00:00:58.260 - 00:01:02.264, Speaker A: And get inspired at Alliance XYZ ideas.
00:01:02.724 - 00:01:04.904, Speaker B: Are they going to pull out fake news this time?
00:01:05.604 - 00:01:12.340, Speaker A: Oh, do you remember that sec they hacked? Gary Gensler, right? Oh, no, the SEC's twitter handle.
00:01:12.412 - 00:01:13.252, Speaker B: Yeah, yeah.
00:01:13.388 - 00:01:17.364, Speaker A: And then they hacked the SEC's right afterwards or something.
00:01:17.484 - 00:01:20.224, Speaker D: Cointelegraph intern was the first to push it.
00:01:20.674 - 00:01:21.458, Speaker C: Yeah, someday.
00:01:21.506 - 00:01:23.298, Speaker A: They hated him at first, but every.
00:01:23.346 - 00:01:24.346, Speaker C: Brand will have an intern.
00:01:24.450 - 00:01:27.054, Speaker A: Yeah. That's the future.
00:01:27.474 - 00:01:27.834, Speaker C: Yeah.
00:01:27.874 - 00:01:28.610, Speaker D: Biden's hiring.
00:01:28.682 - 00:01:30.658, Speaker C: That Internet gonna be crazy.
00:01:30.706 - 00:01:31.074, Speaker D: Yeah.
00:01:31.154 - 00:01:34.774, Speaker A: Yeah. So did you start this whole new trend?
00:01:36.794 - 00:01:38.890, Speaker D: I think I was the only intern.
00:01:39.002 - 00:01:40.338, Speaker A: Yes. For CMS, right, Dan?
00:01:40.386 - 00:01:41.042, Speaker D: Yeah.
00:01:41.218 - 00:01:48.390, Speaker C: Yeah. And then Mev intern kind of made it a right. Mev intern was like, the second.
00:01:48.502 - 00:01:49.486, Speaker A: Is it all recording, by the way?
00:01:49.510 - 00:02:00.982, Speaker D: There was. So mine was CMS intern, and then I want to say, like, within maybe two months, a few others popped up. And then there was like this.
00:02:01.118 - 00:02:06.394, Speaker A: And there's a lot of fake interns because then companies would create their own interns and we knew there weren't. Yeah.
00:02:07.174 - 00:02:08.206, Speaker B: All interns.
00:02:08.310 - 00:02:09.034, Speaker A: Yeah.
00:02:09.534 - 00:02:26.242, Speaker D: Yeah. That's like, that's one thing I've put out there before where it's like, it actually works better if you truly have. We say intern, but just young person kind of running it in general because. Yeah. When it's like the boomer.
00:02:26.338 - 00:02:26.546, Speaker C: Yeah.
00:02:26.570 - 00:02:34.614, Speaker D: The guy who's just used to running social media accounts since, like, 2010, and he's like, oh, I'm an intern now. Like, it just. It flows less naturally, I feel like.
00:02:35.114 - 00:03:07.602, Speaker A: But there's also, like this, you know, we'll talk about Monet X this is actually pretty interesting. But I mentioned this on our talk with Ansem yesterday. But a lot of large b, two b companies are advertising through meme channels now, and that's becoming a huge inbound for customer acquisition, a funnel for them. And so, like, memes interns, like, this new generation is coming up and kind of like, changing the flow of how you acquire new customers now, which I find to be very interesting.
00:03:07.768 - 00:03:13.662, Speaker D: Yeah, I've thought about this probably way too much, honestly, way more than anything.
00:03:13.678 - 00:03:25.430, Speaker A: I wrote a really long tweet about this, too. I shared it with Joe, who's our intern. Our intern. But, like, the person that leads all of our media. But, yeah, yeah, if you want to touch on that a bit.
00:03:25.542 - 00:04:22.536, Speaker D: Yeah, I think there's just, like, a shift in, like, user acquisition following, just, like, moving up in the attention economy. Marketing for the last 50 years has very much been, oh, you create advertisements that talk about your product, and you put them in places where people expect ads, and that's just kind of how it works. Social media has changed that a bit, and probably in the last five years, it's become very apparent. But there were brand accounts, and they would just post whatever announcements or big events that they're doing, or you would have. One thing I pointed out is there's Super bowl commercials. That's like, ironically, that's the Super bowl of commercials. That's the biggest stage for any advertisement, but they're all competing with each other, so they're not trying to compete with the actual Super bowl.
00:04:22.536 - 00:05:10.130, Speaker D: The entertainment people came to watch, they're like, we need to be the best ad during that. And on Twitter specifically, that dynamic is completely flipped on its head. If you are putting out advertisements, you just scroll right past. Like, people hate ads in general, so you need to actually be putting out content that you're actually competing with influencers and what the people are coming to the platform to see instead of other advertisements. So you kind of have to change your content strategy and the way that you're getting attention. And I think intern is kind of like one angle that people have taken on that. But I think the bigger shift is just your brand needs to put out content that people actually want to consume instead of just talking about products and features and how marketing and ads have been done in the past.
00:05:10.322 - 00:05:38.854, Speaker C: I mean, in some senses, it's still similar to how the best ads have always worked. The best ads are always about feelings rather than about specific facts. Like, I'm gonna really butcher this, but it's like, if you look just like Google for, like, the best ads out there. They're, you know, like these full page newspaper ads where. But it's not. It's not like touting the features of the car. It's like talking about.
00:05:38.854 - 00:05:42.682, Speaker C: I don't like giving a clever, like, thought.
00:05:42.778 - 00:05:44.770, Speaker B: Like Nike. Impossible is nothing.
00:05:44.882 - 00:05:46.658, Speaker A: Yeah, just do it.
00:05:46.706 - 00:05:49.854, Speaker B: Just do it. Wait, that's Adidas. Just so he's no Nike.
00:05:49.894 - 00:05:50.494, Speaker D: That's Nike.
00:05:50.614 - 00:05:53.342, Speaker B: Okay, so what's impossible is nothing. Is that also Nike?
00:05:53.398 - 00:05:57.630, Speaker D: No Nike competitor. They fell away. We can't remember.
00:05:57.822 - 00:05:59.154, Speaker A: Puma? I don't know.
00:06:01.374 - 00:06:27.684, Speaker C: But, yeah, also the speed, like the. You need to keep up with the trends. Like crypto Twitter moves really fast, and you need to have a velocity that reflects that as well. I feel like a lot of the, while some of the tweets that have done really well are, like, fast responses to. What was it? The pie chart brutalization.
00:06:28.064 - 00:06:29.864, Speaker D: Yeah, that was a good one.
00:06:30.024 - 00:06:30.816, Speaker B: Oh, yeah.
00:06:30.960 - 00:06:33.376, Speaker A: That was Renzo. Was it Renzo?
00:06:33.480 - 00:06:34.164, Speaker B: Yeah.
00:06:34.784 - 00:06:35.844, Speaker A: Rest in peace.
00:06:37.384 - 00:06:39.564, Speaker D: They live on in infamy forever.
00:06:41.284 - 00:06:47.532, Speaker B: So aside from memes, like, in the early days of. By the way, so you say Monad?
00:06:47.588 - 00:06:48.188, Speaker C: We say monad.
00:06:48.236 - 00:06:48.588, Speaker B: Monad.
00:06:48.636 - 00:06:49.748, Speaker A: Oh, so it's not Monad.
00:06:49.876 - 00:06:52.724, Speaker B: Yeah, I've been saying Monad for two years.
00:06:52.764 - 00:06:53.084, Speaker A: Same.
00:06:53.164 - 00:06:54.748, Speaker B: I heard you say Monad today.
00:06:54.796 - 00:06:55.268, Speaker C: Yeah.
00:06:55.396 - 00:06:55.972, Speaker A: Okay.
00:06:56.068 - 00:06:59.860, Speaker D: They're both technically right. I think one's, like, a british and one's an american.
00:06:59.972 - 00:07:04.660, Speaker A: But Monad, which is american. Monad is american, right?
00:07:04.772 - 00:07:06.344, Speaker C: I think so, yeah.
00:07:06.644 - 00:07:07.372, Speaker A: Monad.
00:07:07.468 - 00:07:09.484, Speaker C: Or maybe not. That might be british. Monad.
00:07:09.564 - 00:07:10.124, Speaker B: Monad.
00:07:10.204 - 00:07:10.888, Speaker D: Yeah.
00:07:11.076 - 00:07:11.640, Speaker B: Monad.
00:07:11.712 - 00:07:12.368, Speaker A: Maned.
00:07:12.496 - 00:07:13.456, Speaker C: We say Monad.
00:07:13.600 - 00:07:15.484, Speaker A: Okay, well, I will try to.
00:07:16.904 - 00:07:29.244, Speaker B: So in the early days of Monad memes, aside from the meme game, what else was crucial to building the community? The hype around the project?
00:07:30.104 - 00:08:15.944, Speaker D: I would say, honestly, not just saying it, because Keone is sitting right here, but there was a small team of us kind of working together, and most people that are trying to build a professional brand that will grow a lot. Keone gave us a lot of freedom to basically say, hey, yeah, if we think this is a good idea, run with it, see what happens. So that kind of lets the memes flow freely, and then that kind of sets a culture within the community that like, hey, these guys embrace what we actually like to talk about. They're personable, they're relatable, and we can kind of get behind this movement. Right. It seems like a brand that you can relate with and touch and maybe have an impact on. There are a few early day bootstrapping things on the community front.
00:08:15.944 - 00:08:55.758, Speaker D: The discord was locked, so it was invite only. And we found that just by having exclusivity, that actually created demand, which was something we didn't expect usually like, oh, there's this project, I want to join the discord. The second you can't join the discord, you're like, you, you want to join ten times more. You're like, just cause I can't get in, I really want to. So that was one of the really early things. And then during the first fundraise announcement, in like, February or March of 2023, you put the announcement out and opened the discord. So, like, now finally everyone could flood in.
00:08:55.758 - 00:09:43.340, Speaker D: Big attention. Event Bill Monday, who, like, leads everything on the community front at Monad has been massive. I think that early on, that hire has had one of the biggest impacts on the culture of Monad. So him kind of leading the charge, setting a lot of the tone, being very organic and talking person to person and doing no questing or things that bots can do has been super important. Now there's a locked telegram, so the discord's open, but the telegram kind of has this exclusive feel. So I think just having a bunch of different outlets, letting the community run free, and then when they do create something that's awesome, making sure that you highlight that. So if anyone posts something awesome in the community, we might put that out on our own twitter.
00:09:43.340 - 00:10:07.944, Speaker D: Keone is going to comment or quote, tweet and say, hey, this is awesome. I appreciate that. There's a lot of projects in crypto that there's just the community that sits over there, and then they do their own thing. But in this sense, the community is building the lore, they're building the culture that exists in Monad. So when we post it off main, they're like, oh, this is interactive. Actually, I'm not just watching a show, I'm actually playing a video game. I'm a part of this.
00:10:07.944 - 00:10:09.692, Speaker D: And I think that that's helped a lot.
00:10:09.708 - 00:10:34.730, Speaker A: On the growth side, one interesting insight that I've learned about Monad's growth strategy versus others is that interactivity. I've seen the community bring up more different types of artistic memes. I've seen people build. I saw like a purse, or was it a purse or like a Monad character in a purse or something that shipped it to your office. Do you know what I'm talking about?
00:10:34.762 - 00:10:35.010, Speaker D: Yeah, yeah.
00:10:35.042 - 00:10:36.346, Speaker C: Oh, yeah. The airpod cases.
00:10:36.450 - 00:10:54.652, Speaker A: Yeah. I mean, you start to see these things that I haven't seen from other communities where they actually are building stuff and they're shipping it to you guys. Is that what you're talking about? Like building that trust with the community such that you let them kind of bring and surface up different types of creative ways to get connected with Monad.
00:10:54.828 - 00:11:57.268, Speaker C: I think that's kind of a later stage effect, but in the early days, we couldn't necessarily expect that that was going to happen and still are consistently blown away by the contribution of individual community members. People are really creative. They really contribute very heavily. I would say the community was really built by the community first and foremost. And it's just the addition of people joining the community and being like, oh, I have something to contribute, like, oh, I want to make some art that is capturing this funny thing that happened in discord. The inside jokes, the nature of them doesn't specifically matter, but it's more like just having shared lore, having an environment where people can make friends and hang out, it's also very path dependent. I think our community started growing during the bear market when it was a pretty tough time.
00:11:57.268 - 00:13:13.096, Speaker C: A lot of people were a little bit demoralized by the state of the market and all these bad headlines coming out about Terra and FTX and so on, and just having an environment where they could go hang out and commiserate, have fun and make friends and be creative. That ultimately meant that when new people would join, sometimes they would decide to stick around. It's like from the team perspective, we're just trying to make the tree an attractive tree for birds to build a nest. But it's like, how do you attract birds? I don't know, maybe put out some birds. But it's ultimately the community's choice about whether to come and try things out and contribute, be creative. But what, from a team perspective, we could do is just appreciate when someone does do something that's really high quality and also be good about not rewarding things that are not high quality. Like one, I talked about this just a second ago, but, like, one thing that happened was when we opened the discord on day one, I thought, oh, you know, it's important to reward people who joined on day one, so I'll give them all a role.
00:13:13.096 - 00:13:55.400, Speaker C: So I gave them this role called the pioneer role, and then everyone was like, awesome, I got a role. I'm really excited. And then they stopped doing anything because they already got a role. So then they were like, okay, I got it. And then new people would join and they'd be like, oh, how come I don't have this role? This other person has it, and they're not doing anything, but I'm contributing, but I'm not getting it. So then the existence of the role was actually actively negative for people, discouraging people from doing things that would have been good, like just hanging out and vibing and, you know, spending time there. So then eventually, like, I had to kind of, like, remove the role or at least remove any, like, recognition of the role since not separate it out.
00:13:55.400 - 00:14:31.534, Speaker C: Eventually, we did actually get rid of it completely, but it was just having, like, too low of standards initially was the mIstake. Or similarly, like, people would make these awful memes that, or just copy paste. Like, these make the same meme in every discord. Just like putting, substituting, like, your project's name in place of the other ones. The same one. Like Andy discarding Woody because he wants buzz lightyear. Or the, you know, these memes are all like, there's CeRtAIn templates and people would come and they kind of are trained from other projects to do that.
00:14:31.534 - 00:14:58.732, Speaker C: And it just, if you acknowledge that and you're tempted to initially because you have no traction and you're like, oh, that person. They're excited about Monad. They put Monad's name on the discord, or they put my face on the meme. Sorry, I messed up those words. But yeah, they created memes that were, like, Monad related. That's so great. It's really not actually so just having a higher standard, and then if you do that, then you actually discourage people from being more creative.
00:14:58.732 - 00:15:02.104, Speaker C: I see that as a common problem in a lot of discords.
00:15:02.604 - 00:15:07.864, Speaker B: And what's with giving Cl a free credit or credit card? What's with that?
00:15:08.764 - 00:15:26.624, Speaker C: Oh, what was with that? Yeah, I don't know. I think he was just dming different people as a joke, saying, can, can you give me your credit card number? And I think people were just not really responding to him. And then I just did because I was like, okay, sure.
00:15:27.084 - 00:15:32.886, Speaker B: I mean, you get free marketing from him. I mean, is it free actually? Like, yeah, he has access to $8. $8. Okay.
00:15:32.950 - 00:15:35.574, Speaker C: He's paid, yeah, he paid for Twitter premium with that.
00:15:35.734 - 00:15:43.034, Speaker D: I think he's truly unbanked, too. So it was like a joke, but he's like, I actually don't have a credit card, to be honest with.
00:15:44.614 - 00:15:56.156, Speaker A: So you actually really thought deeply about building the foundational layers of your community. Like, I don't think a lot of founders do that. They just kind of open up their discord telegram and just kind of, like, let it rage.
00:15:56.260 - 00:16:13.772, Speaker C: Well, I think it's understandable. Because there's a lot to do. Like, there's. You're building a product, you're growing the team, you're interviewing people, you're maybe, like, trying to get some publicity. There's a million things to do. And so I think it's understandable that people would low prioritize it.
00:16:13.908 - 00:16:41.998, Speaker A: So let's dive deep into Monad. Obviously, I think there's a lot of news about the work that you're doing. Right. As a layer one, paralyze EvM. I guess the question I want to start with is, how did you, like, come up with this, like, this problem set and then this as a solution? Like, why did you think this was the right angle into building this layer one up? What problems did you see and how did you identify this as the right problem to solve?
00:16:42.166 - 00:17:46.790, Speaker C: Yeah. Prior to Monad, James, Hans Aker, and I, two of the co founders of Monad, were working together at jump trading for eight years starting in 2014. We built a high frequency trading team, built a trading platform from scratch. We had a lot of experience building really performant systems where packet would come in from the exchange and you'd have to decide whether to send an order and get the order out in less than a microsecond, um, which is just requires extreme attention to detail with respect to system design, architecture, just squeezing latency out of any possible place. And that's the way it is because of competitive forces. Like, if a packet comes in and your competitor can react faster than you, then the, you know, they're the bird that gets the worm. Um, so there's just this incredible force, competitive pressure to be fast, and then fast forward to 2021.
00:17:46.790 - 00:19:12.768, Speaker C: James and I ended up joining the crypto team at jump, along with the rest of our trading team, and immediately pivoted and started working on Solana, Defi in particular. So it was learning about Solana itself, learning about some of the existing protocols, and then finding ways to help support some of these protocols, that there were portfolio companies of JMP, and during that time, it was really just about six months. That was all we got, a kind of whirlwind tour of the state of the world with respect to Solana. We could see that there was a lot of low hanging fruit in terms of optimizing Solana, and it seemed like the team had a plan for how to do that, but it was still, there's a lot of work that's going into optimizing Solana. And then when we looked at EVM land, which was actually the dominant smart contract platform by a long shot, 96% to 97% of all TVL on chain is in EVM applications, so very much the dominant standard. And there is even more stark in terms of the performance optimizations that seemed possible just intuitively as people who have built performance systems. But I think anyone would understand that EVM or Ethereum at ten TPS is very slow relative to what you'd expect to get out of a computer.
00:19:12.768 - 00:19:23.192, Speaker C: Like, you know, my MacBook Pro has like 100 tabs open and is running Spotify and like, I don't know, has discord, you know, memes coming in like 1000 memes per minute.
00:19:23.248 - 00:19:24.656, Speaker A: Yes, all that stuff pump that fun.
00:19:24.760 - 00:20:10.734, Speaker C: Yeah, right. Like all of this stuff happening all on one computer, that's, you know, just like a normal consumer grade. So we inherently all understand that the system should be capable of much more, but it's just like having the confidence from previous experience to know, okay, these are probably where some of the bottlenecks are. So we just left jump and started Monad at the beginning of 2022, along with the third co founder, Eunice, who has a technical product management background. And it was just like we knew from day one that there would be a lot of opportunities to improve the execution of Ethereum. And at that time also a lot of like, the focus is really on roll ups. It's kind of interesting.
00:20:10.734 - 00:20:53.722, Speaker C: 2022, everyone asked us, like, great sounds, we love what you're doing. It makes sense, but why not do it as a roll up? And so I think that there's just so much social pressure that actually meant that, like, everyone converged on the same thing. Pressure, yeah, but, but also, like, just market perception of like, yeah, it's really important for your project to be successful, to be a roll up. And I don't know. I mean, we have a lot of respect for teams that are working on roll up technology or working on data availability. You're working on different other verticals within the Ethereum ecosystem. Like, those all have merit as well, but someone has to work on performance execution.
00:20:53.722 - 00:21:22.632, Speaker C: Like, someone has to go and figure out how do we make the state database faster, how do we make smart contract execution much more performant? And at that time, it seemed like very few people were working on that. So it was really a case of the stars aligning in terms of our previous experience, the state of the world, the problem to be solved, and then the lack of people working on that problem just made it a really amazing opportunity at that time.
00:21:22.808 - 00:22:07.050, Speaker B: But what's the trade off between building Monad as a layer one versus as a L2. Because the advantage of building as a L2 is, from the end user's point of view, when they bridge, they basically just deposit eth to a smart contract. Whereas if you build Monad as a layer one, when the users bridge, they go from one chain to another, it's much higher friction. And this ultimately matters to how you push up the liquidity at the early stage. So that's, I guess, the downside of building as a layer one. But then you must have thought that there are some upsides of building it as a layer one that would outweigh downsides like this. What are the trade offs?
00:22:07.162 - 00:22:49.124, Speaker C: Yeah, I think to mention really briefly, three major trade offs. Number one, decentralization. Number two, performance, and number three, cost. So at the end of the day, Monad is a very decentralized network, meaning that there are hundreds of nodes globally, fully globally distributed, all participating in consensus, all alternating, whose turn it is to produce blocks. And so as a result of that, there's a much greater degree of censorship resistance, and more generally, decentralization coming from that decentralized block production. And L2s right now don't have that. Every L2 that I've seen has a centralized sequencer.
00:22:49.124 - 00:23:44.424, Speaker C: It means that one sequencer literally has complete authority on how they're going to order transactions, whether they're going to censor transactions. And so it's just we're still in a state of the world where the prevailing L2s have a high degree of centralization. And you see that sometimes with extreme cases where like the, you know, Degen chain had a reorg and 500 block, 500,000 block, 500,000, 500,000 blocks were reorged because there was an issue with the centralized sequencer that was provided by conduit. Yeah, or like, there was another thing. There's like twelve different chains that all have the same multisig address that's controlling, you know, the upgrade authority, that's conduit. They're all using caldera. This was yesterday, I think.
00:23:44.544 - 00:23:45.944, Speaker A: No, it was conduit. I think.
00:23:46.104 - 00:23:46.992, Speaker B: I think it's conduit.
00:23:47.048 - 00:23:47.632, Speaker A: It's conduit.
00:23:47.688 - 00:23:51.016, Speaker C: Okay, sorry. Yeah, well, regardless, like, there's.
00:23:51.160 - 00:23:51.992, Speaker A: But, yeah, sorry.
00:23:52.048 - 00:24:53.458, Speaker C: There's many examples of like, you know, we're just not in, at the current state of the world. And yes, like, everyone is working to try to make these systems more decentralized, more robust, more performant, et cetera. But we just really felt at that point in time and still feel now that we can contribute substantially to the goal of decentralization by delivering really high performance while preserving a high degree of decentralization. That's actually important because then we're ultimately giving people a better point on the, you know, if you imagine like a two dimensional curve of like decentralization and performance, we're actually moving like up and to the right, finding a better ISO client on that spectrum of decentralization and performance by getting much more out of the hardware. So that was the first reason, the second and third reasons. Performance and cost are very tied to each other. But with Monad, Monad is really performant and really cheap.
00:24:53.458 - 00:25:10.854, Speaker C: And it's that way because we control all layers of the stack, both execution and consensus. We're not worrying about like what you. Is there a data availability layer that's sufficiently cheap that can then give cheap transactions?
00:25:11.874 - 00:25:28.966, Speaker B: So how about this yesterday, if you remember, but it sounds like it's actually easier to build a high performance chain as a layer one than as a ethereum L2. Because when you build as an ethereum L2, you have to work around the constraints of the EVM and the database, all that stuff.
00:25:29.130 - 00:25:31.398, Speaker A: Is that an ethereum dependency too?
00:25:31.446 - 00:25:34.354, Speaker B: Dependencies, yeah.
00:25:34.694 - 00:26:15.600, Speaker C: So with Monad we have actually rebuilt the database. We have rebuilt the EVM. So everything was built from scratch and still is compliant with EVM. I think from a standards perspective, that's always been a constraint, but it's always been the first order. Most important thing is delivering full bytecode compatibility so that developers don't have to worry about whether the system is actually still compatible. But yeah, I think it's like we say with everything else, there's no shortcuts to deliver a really performant system, there's no shortcuts. You just have to go straight at where the bottlenecks are and address them.
00:26:15.792 - 00:26:19.280, Speaker A: So how easy is it to port over an app to Monad?
00:26:19.392 - 00:26:33.440, Speaker C: Monad, it's completely trivial. It's completely easy. Monad is fully byte code compatible. So any app that you have the byte code that's already deployed to Ethereum, you could redeploy that byte code to Monad without any change.
00:26:33.472 - 00:26:36.776, Speaker B: I think the hard part is porting the liquidity, not the code.
00:26:36.880 - 00:26:38.896, Speaker A: Well, liquidity. Liquidity. Farming.
00:26:39.000 - 00:27:11.684, Speaker C: Farming, yeah, on the point about bridging, because you were talking about how I think of a L2 as a blockchain. It's still a blockchain. It still has blocks, it still has transactions in the block. It still has an execution system for processing those. I think of it as a blockchain. That right now has one node, that one sequencer that's running the blockchain and then is pushing data back to layer one. And by pushing data back to layer one enables an enshrined bridge.
00:27:11.684 - 00:28:00.956, Speaker C: That bridge, in some senses, has some nice properties. The layer one is holding state commitment, which is a summary of all the state on the L2. So you can be sure that if the L2 disappears, people can still withdraw money out of that bridge contract subject to certain, you know, terms and conditions, like wait seven days, things like that. Um, but the UX of these bridges is still not that great either. Like you can bridge into an optimistic roll up like immediately, but then to withdraw, you wait seven days. That's like crazy long. So then in practice, people just end up using fast bridge solutions, like layer zero has, what do you call it? What's the liquidity pool solution built on top of? Stargate.
00:28:00.956 - 00:28:13.944, Speaker C: Yeah, Stargate, layer zero, Stargate or Axelar has squid. People just end up in practice using these liquidity pools anyway, that's going to be true whether you're bridging to layer one or L2.
00:28:14.604 - 00:28:33.976, Speaker B: Conceptually, yes. But when you're on a L2, you can actually use EtH, native Eth on a L2. But if you want to use Monad, you don't have native ether, so you would have to use the native token monad or something. I think this is the biggest friction.
00:28:34.080 - 00:28:48.764, Speaker C: Yeah, that's true, but there are ways of addressing that as well. People could just have the ability to swap from native token on one chain to native token on another chain, like that's enabled by some of these fast bridges as well.
00:28:49.464 - 00:29:05.884, Speaker B: But my point is, ETH is a battle tested asset. It has a lot of liquidity, less volatility than the newer assets, the newer native tokens. And people are comfortable with the idea of using ETH for sure. Yeah.
00:29:06.184 - 00:29:36.134, Speaker D: I would just point out too, there's certainly one crypto asset that is more battle tested and has more liquidity, which is bitcoin. And people use rapbit coin on eth too. So there's no direct solution for that. But there are certainly ways that people are comfortable using new chains. Now. I feel like when we think about a lot of the risks and making sure the user experience is great, that's maybe on the list, but not one of the top issues I feel like people need to have addressed to use Monad.
00:29:36.874 - 00:31:01.014, Speaker C: I would also just say regarding the more general line of questioning about being a part of the Ethereum ecosystem, and there's certain things that are very conventional ways of being a participant in the ethereum ecosystem as a separate blockchain. And one of those is having the enshrined L2 bridge with either the optimistic roll up mechanism or the ZK roll up mechanism. That's one thing. And then a sub component of that is whether L2 uses Ethereum as data availability or whether it does not, there's a bunch of L2s that are now using celestia or eigada or maybe even avail as their DA solutions. They're not actually paying for Eth DA. So there's a spectrum of ways that L2s are following the initial quote unquote ground rules of being a part of the Ethereum ecosystem, and it's shifting over time. But I believe that there are other ways to be a part of the Ethereum ecosystem, and I think in particular contributing to the Ethereum research community by going really deep and doing deep focused research into scaling improvements that ultimately are needed by Ethereum and are beneficial to Ethereum.
00:31:01.014 - 00:31:56.346, Speaker C: That's another way to contribute as well. And I think that just in general, we shouldn't always just take the obvious route as the way to be a participant or as the solution to anything. Like with a lot of things we've done in Monad, it's like don't just follow the playbook. Like think about what actually makes sense, what can add value to whoever the other participant is. Like, in the context of community, it was not just following the playbook of using questing platforms and outsourcing the community development to a marketing agency, not doing that, but instead starting from first principles and being like, well, this is why people would want to be in the Monad community. This is like what we think people want and let's talk to them and listen and adapt and give a high quality product. We always said the community is the product.
00:31:56.346 - 00:32:25.798, Speaker C: So that means we had a focus on actually coming up with a playbook from scratch that we just thought would make sense and resulting in a high quality product. So I would say the same thing kind of applies here with respect to involvement in the Ethereum ecosystem. Like yeah, the playbook is build be a L2, utilize ETH for DA and that that's fine. Like it's fine for people to do that, but it doesn't mean that's the only way. Like there are other ways to actually contribute mean in fully to Ethereum.
00:32:25.846 - 00:32:35.606, Speaker B: Do you see any L2 that can compete with Monad performance wise and fees wise, or even has a path towards competing with Monad?
00:32:35.750 - 00:32:55.654, Speaker C: Our team is just writing software. So at the end of the day, we always say this, within our team, everything is a software. So, yes, any other team could put in the effort to write really performant software that allows that blockchain, whether it's a L2 or a layer one or a layer three.
00:32:55.734 - 00:33:01.068, Speaker B: Do you see any team that, that's really focusing on performance today among the L2 teams?
00:33:01.156 - 00:33:01.764, Speaker C: I don't.
00:33:01.844 - 00:33:04.892, Speaker A: What about Mega Eth? Have you heard about them?
00:33:04.948 - 00:33:06.076, Speaker C: I've heard of them. Okay.
00:33:06.220 - 00:33:09.544, Speaker A: Do you see them finding this achievable path?
00:33:10.244 - 00:33:24.360, Speaker C: I think that they've stated a desire to do that. Okay. I think it's still super early right now, so it's really hard to judge any. Yeah. Anything that they've done so far, but I think they have the right goal in mind.
00:33:24.452 - 00:33:25.032, Speaker A: Okay.
00:33:25.168 - 00:33:36.712, Speaker B: Do you think when Monad launches on Mainnet, can it compete with, is it on the same order of magnitude as Solana Aptos, sue, in terms of performance?
00:33:36.848 - 00:34:02.714, Speaker C: I think so, yeah. Yeah. I think that the three that you mentioned are all really performance systems that have put a ton of effort into systems engineering and addressing bottlenecks. Um, Solana in particular, I know, has, you know, a lot of, uh, areas where they proactively determine, like, oh, this is actually really inefficient. We can do something way better and are, you know, on the path to making it better?
00:34:02.754 - 00:34:06.654, Speaker B: I'm sure, yeah. Even with the fire dancer, do you think mana can't compete?
00:34:07.194 - 00:34:08.414, Speaker C: I think so, yeah.
00:34:09.554 - 00:34:32.074, Speaker A: So what camp are you in? Are you in the modular camp like Vitalik, or are you in the monolithic camp like Anatole? Because, I mean, even without, I mean, obviously everything's permissionless and we're starting to see L2s around Solana. That's regardless. But I guess, how do you view the two schools of thoughts and where do you kind of side with?
00:34:32.374 - 00:35:25.132, Speaker C: I mostly reject the question because I think they're not really in opposition. I think that the goal of any blockchain system design team should be to get as much performance and as many useful features as possible out of the hardware, which maybe you would characterize as a monolithic skew. But I don't really think that's true. I think that's just common sense. If we have a system that has a couple hundred nodes or 1000 nodes, there's literally 1000 people paying for server costs. And the requirement is like 32 gigs of ram and this network bandwidth. If we're going to invest all of that cost into all this infrastructure, we should want to get as much performance out of that as possible.
00:35:25.132 - 00:36:45.440, Speaker C: And that's just true regardless of whether that system is portrayed as a layer one or a data availability solution or a L2. I think there is merit in fractal scaling, aka roll ups. So I think there is merit in saying there's separate blockchains that push some sort of commitment back to some other blockchain and thus make the bridge between those blockchains more secure in some sense. I think there's totally merit to that, but I think that's a completely separate concern from how efficient is each one of those layers. And I think that, yeah, it would be like saying, I'm going to have to conjure it analogy out of my butt right now. But yeah, I don't know, it's just like saying, do we want our cities to be very efficient? Do we want to have really good subway system and highways and thriving businesses within the city? Or do we want to have the airplane travel be really efficient between cities? And then, you know, like those are not at odds with each other. Like, we should want to have really efficient cities and also have very seamless travel bracelet, all, you know, really cheap travel between the different cities so that people can be world travelers when they go to a city like that.
00:36:45.440 - 00:36:47.536, Speaker C: City should be a pleasant place to hang out.
00:36:47.680 - 00:36:49.048, Speaker D: That was a good one, out of thin air.
00:36:49.096 - 00:37:12.658, Speaker C: Thank you. Good. Thank you. Yeah, yeah. So then, you know, it's like, you know, the talking head is like, well, you know, like, do you like airplanes more? Should we invest more in airplanes or should we invest more in subway systems? And, yeah, I guess if we have a limited budget, then you'd have to decide. But the amazing thing about this startup ecosystem is that there's room for both and people can focus on different things.
00:37:12.706 - 00:37:27.932, Speaker A: So I think Anatoly's doing the right thing. He's just focusing on scaling the layer one and then permissionlessly you have L2's that are building on its own and they could build their own, like communities and subsidies. Right. How did you guys come up with the meme, the actual character for Monad?
00:37:28.098 - 00:37:28.792, Speaker C: Which one?
00:37:28.888 - 00:37:31.720, Speaker D: The purple one, probably the Mallandak.
00:37:31.792 - 00:37:32.184, Speaker A: Yes.
00:37:32.264 - 00:37:33.992, Speaker D: Looks like a hedgehog. Porcupine.
00:37:34.048 - 00:37:55.044, Speaker A: Yes, yes. Yeah, because, you know, we have founders that are looking for. I'm switching topics here because we have a lot of founders that want to embrace the community and they want to have some sort of like, character that represents their company. Right. How did you tap into that and create this kind of character?
00:37:55.204 - 00:38:15.484, Speaker D: I would actually say that dependent on like the right strategy for a team that's trying to build a community, like the character, what people rally around changes depending on what stage you're at. So, like, really early on, Molondak didn't exist. And there's, like, a whole farm of mon animals now.
00:38:15.524 - 00:38:15.700, Speaker C: Right?
00:38:15.732 - 00:38:17.464, Speaker D: There's Molondak. Moyaki.
00:38:18.084 - 00:38:20.900, Speaker A: Mooch. Yeah, there's a fly.
00:38:21.052 - 00:38:21.956, Speaker D: Yeah. Mooch is the first.
00:38:21.980 - 00:38:22.500, Speaker A: Is that Mooch?
00:38:22.532 - 00:38:28.676, Speaker D: Yeah. French nads came up with him recently and forced him upon the community. So now it's not bad.
00:38:28.700 - 00:38:29.584, Speaker A: I like it.
00:38:30.844 - 00:38:41.100, Speaker D: He's a good underdog, but, yeah. So early on, like, when you're bootstrapping is different from when you're kind of in, like, this scale up phase.
00:38:41.172 - 00:38:41.824, Speaker A: Yep.
00:38:42.404 - 00:38:51.478, Speaker D: So really early on, there was actually just, like, normal Pepe, and we made them purple because no one knows what Monad is. Everyone knows what Pepe is.
00:38:51.526 - 00:38:53.046, Speaker A: Oh, that's right. You had a purple pepe.
00:38:53.150 - 00:39:15.208, Speaker D: So that was actually the kind of the first iteration we knew. Eventually, once we got big enough, we kind of have to move away from that. It's not really that original. It's hard to rally around that with a large amount of people might come to you. It's a good one where you're like, oh, I recognize the character. And then if you see it purple enough, you're like, oh, I relate to it. And I know that this is Monad.
00:39:15.208 - 00:39:49.014, Speaker D: So early on, that was actually kind of like the rallying call or the character that was in a lot of the art that was being created. Mallandac sprung completely bottom up out of the community, specifically out of Indonesia. Landac means porcupine in Indonesia, which I didn't realize until four months after the Malondac has been a character. So they just created him and started memeing him, and the community just fell in love with it. They're like, this character's awesome. They started putting him on pictures. They had him do different things.
00:39:49.014 - 00:40:27.674, Speaker D: It was almost like flat Stanley, where he's traveling around the world, and he's just in a lot of the art. And at that stage, a lot of the art coming out of the community is definitely better than anything I can create or anyone on the team can create. So the best art that's being made is coming straight from the community. They're putting Molon dak in all of it. So then it kind of goes back into our, like, positive feedback loop of if we're tweeting off of main and encouraging from all of, like, the team accounts, the community's like, oh, my God. We just memed this character into, like, the centerpiece of Monad. This is awesome.
00:40:27.674 - 00:40:37.062, Speaker D: They feel, like, more encouraged and more motivated. It's just a lot more fun for everyone. So it honestly just grew directly out of the community, completely made by them.
00:40:37.078 - 00:40:37.990, Speaker A: And that's great.
00:40:38.142 - 00:41:37.004, Speaker C: Yeah, yeah. I think specifically we should give a shout out to a person in the community, Sapphire, who just uploaded this photo to discord, and it was called Mallandac JPEG. And it was a little bit of a mic drop. He just uploaded it and then didn't say anything. And then people were like, what is it called? I think it's called Molodac. That was Maldack dot JPeg. But, yeah, I mean, the way I think about community is it's like the contributions of a number of incredible individuals who each bring different, like, unexpected moments of joy and are also, like, appreciators of that and are just having a good time, like, spending time with each other again in the bear market, like, commiserating with each other a little bit.
00:41:37.004 - 00:42:40.564, Speaker C: And ultimately, that has resulted in incredible strength that we could not have predicted. The strength of the Monad community at this point now is beyond wildest expectations, at least for me personally. And I think it's just the result of incredible individuals, like, just being creative and putting themselves out there and then riffing on each other and like, so, yeah, the reason why Molondak. If you search Molondak on Google images, you'll actually get a bunch of memes of Molondak doing different. And they're really good, they're really high quality. This is not just one person creating all the memes, it's people responding to each other and the lore getting increasingly complex. And I'm just really appreciative of it and feel like all that we could do is just put in place, make the community an environment that is conducive to that.
00:42:40.564 - 00:42:52.564, Speaker C: Kick out spammers, don't encourage bots, showcase great work that people have done, and just try to keep up and try to appreciate what's going on.
00:42:53.104 - 00:43:24.874, Speaker D: I think on that point, too, there's a lot of overlap in the ideology or what we talk about as a team, from the engineering side to the community side. Like Keone talked about when they were coming up with Monad, everyone was like, go and do an l two. There was a playbook. They're like, hey, if you want to build something that has value in crypto, this is the playbook. Follow that. Keone and James basically looked at. And they're like, it's not really the best way to do it.
00:43:24.874 - 00:44:07.132, Speaker D: We see the true bottlenecks, let's go and do the hard stuff, even though no one else is doing it. And then if you do it well, you're actually going to create something that has a meaningful impact on the community front. I think community marketing being intertwined and working together is very much the same thing. They're like, oh, you're trying to get people in the discord, run a galaxy quest, tweet out this thing, try to get as many people in there as possible. We looked at it, and I credit bill Monday with a ton of this, but we have two meetings every week. We probably talk about community more than any other team in crypto, but we're talking through this. We're like, I actually don't think doing these quests.
00:44:07.132 - 00:44:43.826, Speaker D: Yeah, you might get the fire might burn really bright for a second, you get a bunch of likes on a tweet, but I actually don't think that that creates a good community experience. If you were in the community, would you want to do that? So, like, yeah, all right. This is going to be a longer path that's going to require a lot more effort and bandwidth. But if you want to build something lasting and important, like, don't just follow this playbook that everyone else has done. Right, like, make it make sense from first principles. Make it fun and interactive, and then expand from there. I think once there are so many things in crypto, it's like, once the playbook has been written, it's obsolete.
00:44:43.970 - 00:44:58.340, Speaker A: We just talked about this this morning, that every, especially for consumer founders, any consumer app you're building has to follow a new playbook. Otherwise you're just one of them. Right. And you're comped against that app or that company. So that's a really good point.
00:44:58.492 - 00:45:19.660, Speaker C: Yeah, I think people in crypto are smart. That's maybe something that sounds obvious but is just, like, worth contemplating for a second. So if they see you, like, just following a playbook, just copying someone else, they're going to realize, like, oh, that's not original. So that's not something that really catches my attention.
00:45:19.812 - 00:45:49.970, Speaker D: The first person to do it always works the best, too. There are so many different things in crypto. The first airdrops were all the most successful. Now it's like, exactly the first thing about when Arbitrum was doing their l two, there wasn't a playbook, so they had to create this. And now look at who's the most successful l two. Arbitrum is dominating on most metrics from a community standpoint. I'm sure whoever was the first one to do questing, I don't know who it was, but I bet they got a lot of really good engagement.
00:45:49.970 - 00:46:07.894, Speaker D: And now that it's just been done so many times, points programs, the first team I remember when Friendtech started doing points, it's like margin five, Frontech and maybe one other that were labeler. Yeah, doing points, it's like it worked really well. And now it's almost like if someone announces a points program, they're like, oh.
00:46:09.074 - 00:46:12.010, Speaker A: All right, fine, it should be part of it, right? Yeah, don't do it.
00:46:12.042 - 00:46:28.564, Speaker D: So I think these are good ideas that stack on top of each other, make a better ecosystem overall. But you can't just like hang your hat on some. Like if you, if you, everything you're doing is playbook, like there's going to be nothing that's interesting or, you know, creating value.
00:46:29.344 - 00:46:44.812, Speaker B: Technical question, um, I'm sure you're building a lot of uh, you're doing a lot of optimizations to make the, the chain really, really fast. But what would you say is the number one or top top one or top two most important areas of optimization you're making?
00:46:44.988 - 00:47:25.084, Speaker C: Yeah, I'll give you two. Number one is the state database. So we've built a database from scratch for storing Ethereum merkle tree data and utilizing the full bandwidth of the SSD much more efficiently than when embedding the merkle tree inside of another database. So SSD's are quite powerful nowadays. They get better every year by quite a significant margin. A high quality two terabyte SSD with a million IOP's, aka a million I o operations per second. You can get it for dollar 200.
00:47:25.084 - 00:48:22.748, Speaker C: It's an amazing piece of technology and we should be maximizing the capabilities of that because the single biggest bottleneck for execution is state access, and the state lives on the SSD. With this piece of software, MonadDB, we are storing Ethereum Merkle tree data natively on the disk in a custom format. That makes it really efficient to read pieces of data from that merkle tree and also to read in parallel. Thus utilizing that high bandwidth that's on the SSD, that's what accelerates execution the most. Of course, parallel execution on top of that is really important because then we can run many threads in parallel to surface many dependencies, pull a lot of data from disk in parallel, but the actual software has to utilize that bottleneck really efficiently. That's the first thing. And then the other thing is asynchronous execution.
00:48:22.748 - 00:49:39.736, Speaker C: I think that ultimately every blockchain will utilize asynchronous execution because it's a better model for splitting up the work between consensus and execution to enable execution to use the full amount of block time. So for context, in Ethereum and most other blockchains, execution and consensus are interleaved. So in particular, usually what will happen is the leader chooses a list of transactions somehow, and then executes all those transactions, gets to the end state after executing those, and only after that goes and messages the block out to all the other validating nodes, and then all the other validating nodes receive that block. So they receive that list of transactions and then has to go execute it and get the end state before voting on whether that block was valid or not. So as you can see in this entire story, this was kind of a description of the full production and consensus of one block. And in that story, you have multiple rounds of execution happening that are all squeezed into a larger amount of work being done. And the problem is that work involves communication among nodes, which are potentially on opposite sides of the world.
00:49:39.736 - 00:50:32.876, Speaker C: So that's going to be very expensive, which means that the budget for execution is actually very limited in these interleaved systems. So for context, Ethereum has twelve second block times, but the budget for execution is roughly 100 milliseconds, which is 1% of the block time. So what that means is that there's this huge shrinking factor of time where although there's like within that twelve second period, we're only having a very small amount of time to do work, so just can't do very much work. So with Monad, with asynchronous execution, what happens is the nodes come to consensus first. So you can think of that as like consensus is in one swim lane. Then once that consensus completes on that block, then two things can happen in parallel. The first is consensus can happen on the next block, but in parallel, execution can happen over that first block.
00:50:32.876 - 00:51:15.204, Speaker C: So thus the execution budget is now the full block time, which is a massive unlock for the overall execution throughput of the system. Like I was saying, I think that every blockchain will ultimately adopt this. It requires some tweaks to how consensus and execution interact with each other. There's like some safety checks still that are needed. There's some spam prevention checks. But at the end of the day, this is a way better system that can utilize all the capabilities of the hardware much in a much greater way. And I think that everyone, for example, Solana, I think Tolly has been tweeting about how he thinks asynchronous execution makes sense.
00:51:15.204 - 00:51:19.844, Speaker C: Solana may adopt this, like, I think every blockchain will be like this at some point.
00:51:20.824 - 00:51:38.176, Speaker B: I mean, correct me if I'm wrong, but it sounds like the whole parallel EVM is kind of a meme. Because the second part, the second thing you mentioned has nothing to do with the parallel execution. And the first thing is not directly parallel execution either. It enables parallel execution.
00:51:38.240 - 00:52:07.784, Speaker C: Right, right. Yeah. We have a blog post, actually, that's in progress, which is actually called parallel EVM as a meme. And it's a reflection of the fact that consistently, the thing that resonated the most with people was parallel EVM, because that makes sense. And it is important. It is important to get the most out of the hardware. And computers have many processors, and they have the ability to run many threads.
00:52:07.784 - 00:52:50.382, Speaker C: Don't get me wrong, parallelism is important. But I think when someone's just learning about Monad or Solana or whatever, it's just the thing that sticks in their brain. I think consistently, if you ask people why is Solana more performant than Ethereum, what they'll say is because it can run transactions in parallel. Yeah, that's true. But that's also only one small part of the story. The other part is that Solana has a team of engineers who originally worked at Qualcomm who were building high performance systems, who made the system really performant in all these other ways. So it's true, but it's only a small part of the whole story.
00:52:50.518 - 00:52:54.594, Speaker B: Does suing and naptos use asynchronous execution?
00:52:55.214 - 00:52:56.514, Speaker C: I don't think so.
00:52:56.814 - 00:52:59.670, Speaker B: Okay, so you're the only one that's doing it?
00:52:59.782 - 00:53:00.590, Speaker C: I think so.
00:53:00.662 - 00:53:01.886, Speaker B: Okay, interesting flow.
00:53:01.950 - 00:53:08.464, Speaker C: Does that also actually flow? Yeah, flow blockchain from dapper Labs writing the playbook.
00:53:09.284 - 00:53:27.024, Speaker B: Because I'm not entirely familiar with how asynchronous execution works, but I remember reading, I remember seeing a chart of a diagram of that with move with Libra. So they definitely thought about it, designed it, maybe they haven't implemented it yet.
00:53:28.124 - 00:53:49.506, Speaker C: Yeah, I'm not the expert. I think they definitely do some other really interesting things, like moving some of the work out of the hot path, and there's also aptos and SwE, and they do different things, so I probably shouldn't comment it, but, yeah, I mean, if either they do and then that makes sense, or they don't, and they probably will at some point.
00:53:49.610 - 00:53:56.562, Speaker B: And also parallel execution, some of the L2s already do that too. Polygon has parallel execution, does it?
00:53:56.658 - 00:54:19.094, Speaker C: Yeah. Yeah. So they have parallel execution, but don't have a performant state database. So the magnitude of the improvement just from the parallel execution without a performance state database that can serve requests from all these transactions running in parallel efficiently is going to be much more limited.
00:54:19.554 - 00:54:45.684, Speaker D: I think the marketing guys on their team probably deserve a raise on a lot of those teams because if it's the easiest thing to understand, if you can say, but everyone just thinks that that's the key, you can just say, oh, we're just going to do this one part. And then everyone's like, oh, well, that's Monad. It's a good trick, is probably the wrong word, but it's a good thing to be able to push out. I respect their game. Yeah.
00:54:46.144 - 00:54:48.124, Speaker B: So when Mainnet.
00:54:50.584 - 00:54:56.636, Speaker C: Yeah, we can't commit to it publicly to a specific date, but team's working on it really hard.
00:54:56.740 - 00:55:02.824, Speaker B: Okay, but ballpark, is it one year or two years? Three years? Ballpark.
00:55:03.604 - 00:55:07.396, Speaker C: It's not two years or three years.
00:55:07.460 - 00:55:09.204, Speaker B: Okay. Lesser than two or three years.
00:55:09.244 - 00:55:10.984, Speaker C: For sure. Yeah, for sure.
00:55:11.444 - 00:55:35.376, Speaker A: Going back to your earlier question on incentives on why, you know, like if you think about what blast did they release? Blast gold and blast points as a way to encourage developers to build and users to use their products. If you were to, as you're designing, probably internally, the incentive systems, how would you think about it for users and builders that are thinking about building a monad?
00:55:35.560 - 00:55:52.788, Speaker D: I'll probably let Keanu comment on it, but I would say if we're following this whole playbook theme throughout, if you're writing a playbook and you can't use it for a number of months, you're probably not going to discuss it too much in case someone else hops in to take it. It's a really important thing to get right.
00:55:52.836 - 00:55:53.284, Speaker A: Okay.
00:55:53.364 - 00:56:29.336, Speaker D: I don't know if Kyuni has anything else to add, but I would say there's a mix of things that obviously definitely work and are kind of tried and true in crypto, and there's a lot of untapped things that are worth experimenting with. I think it would follow the same do the right thing, even if it's the hard thing. There's no shortcuts to getting people on. But I don't know right now in terms of people coming on to build, there's just a lot of general excitement. That's good. There's two places of crypto blockchains right now. You have EVM and then you have performant and there's just nothing in the middle.
00:56:29.336 - 00:57:12.020, Speaker D: So people that want to build really performant apps, they have to choose SVM and movie. I'm really dominate that side. So they have to choose one of these blockchains because their app requires it to function. And then on the other side, you have EVM, which has the vast majority of devs. 90% plus of people are building for the EVM, but they don't have the opportunity to actually build applications that require high performance. So I think when you mesh those together, people's imaginations kind of spark the same way. When people first start building on the Solana, they're like, oh, there's all this awesome stuff that now I can do, that I can optimize for and create these cool new features that just hasn't existed for the EVM yet.
00:57:12.020 - 00:57:33.804, Speaker D: So I think it's. And, like, very smart people's imaginations is a really cool thing to tap into. So, like, we. We talked to a lot of devs who have built awesome things in the past, and they're like, I honestly, I haven't been given a new design space to look at for a very long time. So, like, I'm excited about Monad just for that. Yep.
00:57:34.224 - 00:57:37.696, Speaker A: So it seems like the tech is already bringing the people in, so you don't really have to.
00:57:37.800 - 00:57:38.404, Speaker D: Yeah.
00:57:38.544 - 00:57:39.140, Speaker A: Okay.
00:57:39.252 - 00:57:40.504, Speaker D: Tech and Mallandac.
00:57:41.004 - 00:57:43.948, Speaker A: Yeah, of course. Yeah, go ahead.
00:57:44.036 - 00:58:16.154, Speaker B: Sorry. I still want to go back to an earlier question about how you see yourself against the Ethereum L2 s in terms of performance. What would you say is the. Or what are the top five, maybe top three to five. Ethereum L2 s, how would you rank the top five in terms of performance? So I'll give you a few options. There's eclipse that's trying to move the SVM to Ethereum. I know why you're smiling, but there's also movement.
00:58:16.154 - 00:58:34.110, Speaker B: Who tries to move to Ethereum? And then there's arbitram working on stylus. What else is there? I mean, there's a bunch of ZK rollups as well. How would you rank them performance wise, or. It's hard to say.
00:58:34.222 - 00:58:43.074, Speaker C: I think it's very hard to say. Yeah, I think that they're kind of optimizing for different things, but I think that.
00:58:43.774 - 00:58:56.514, Speaker B: Do you think bringing the SVM or the moviem to Ethereum can reach within one order of magnitude to Monad in terms of performance?
00:58:57.154 - 00:59:26.824, Speaker C: No, I think that at the end of the day, the EVM is extremely important. It's important because most developers are building for the EVM. They want to build for a common standard. They don't want to have the vendor lock in problem of building for an alternative standard and then being very limited in where they can redeploy. And also the EVM is really powerful. It's very battle tested. It's getting better every day.
00:59:26.824 - 00:59:54.212, Speaker C: There's better tooling every day. And also for Monad and for other research orgs, there's an effort to make the EVM better over time by adding support for new precompilers or opcodes or behaviors. It's not just a static thing, but it is, in my opinion, the most important thing. It's like where the developers want to be. Therefore it's important thing.
00:59:54.268 - 01:00:03.024, Speaker B: Can eclipse be as fast and cheap as Solana? And can movement be as fast and as cheap as aptos and sui?
01:00:03.404 - 01:00:35.660, Speaker C: I think so. I mean, there's no inherent reason that they couldn't. And in some senses there is an advantage in the sense that they don't have to have consensus. So that removes overhead. But on the other hand, they are limited by the cost and availability of the DA, which we really haven't seen battle tested in any significant way. And das are really just. Or like a good DA, like a good decentralized data availability layer is really kind of like a layer one itself.
01:00:35.660 - 01:01:14.684, Speaker C: Like it has consensus. It has globally distributed nodes. There's fault tolerance, there's byzantine fault tolerance. So, you know, so there's some bad actors amongst the nodes. System can still stay up and still serve the purpose. It's basically a layer one. So we would need to see those DA systems be performant to the degree of a high performance layer one with high performance consensus, which I'm actually a little bit skeptical about because the DA also has to be performant and decentralized globally distributed, which means high performance consensus, which to my knowledge doesn't really exist right now.
01:01:14.684 - 01:01:59.430, Speaker C: The das are using tendermint under the hood. That's a very limited consensus mechanism that can support up to 100 nodes. Often the nodes end up getting co located. They're very close to each other. There are issues. Anyway, that's one specific thread of thought I have about high performance L2s and the bottleneck B and Da. I think the other thing though, which actually I feel is more important, is what do users ultimately want? Like where will users ultimately go and to what extent? Like you're asking, like, will eclipse be more performant than Solana? But I think the more interesting question is why would users go to eclipse instead of going to Solana, given that it's the same apps.
01:01:59.430 - 01:02:07.162, Speaker C: And the answer that people have given is like, oh, it's because eclipse is more ethereum aligned. And I. Yeah, I just have a.
01:02:07.178 - 01:02:20.374, Speaker B: Hard time imagining my answer is native ETh. EtH, the asset can go to eclipse natively, and it cannot go to Solana natively. And ETH is a great asset that a lot of people hold.
01:02:21.354 - 01:02:22.214, Speaker C: I see.
01:02:23.114 - 01:02:24.538, Speaker D: Solana is a pretty good asset.
01:02:24.626 - 01:02:27.374, Speaker B: Salana is a pretty good asset. It's getting there.
01:02:27.834 - 01:03:02.942, Speaker C: There are trade offs. Yeah. I mean, I do think that for any layer one, building a brand is like. The brand is a very important part, and the brand is like the community. It's the feelings that people have about being in that environment, using apps there. So I would say right now, the challenge of being something that is a little bit something, a little bit something else is actually building a coherent brand, if that makes sense. Oh, actually, one thing.
01:03:02.942 - 01:03:15.494, Speaker C: Yes. I tweeted the other day, like, what's your favorite meme template? And I was hoping that I could bait intern into replying with his favorite meme template.
01:03:15.574 - 01:03:17.046, Speaker D: Yeah, I didn't see.
01:03:17.150 - 01:03:19.474, Speaker C: But I know what your favorite meme is.
01:03:20.574 - 01:03:21.554, Speaker D: Which one?
01:03:22.314 - 01:03:24.614, Speaker C: It has to be the bell curve.
01:03:26.594 - 01:03:28.666, Speaker B: It's the meme template of the decade.
01:03:28.810 - 01:03:29.642, Speaker C: It has to be the bell curve.
01:03:29.658 - 01:03:52.630, Speaker D: It is one of the best memes of all time. So my favorite thing with meme templates is when you get a good template and then you remix it. So it still is the same template, but it's a different variation of it. My little brother was the first person I ever saw doing this. I'm like, these are the best things I've ever seen.
01:03:52.702 - 01:03:52.998, Speaker A: Wow.
01:03:53.046 - 01:04:07.710, Speaker D: Like, please keep doing this. Cause these will hit. Because you get used to seeing the meme format. And then when you see the same format, it's like the purple Pepe, where you're like, I get it. This is a new take on it. And I love that you have some.
01:04:07.742 - 01:04:15.750, Speaker A: Affiliation, just like dog wif hat. Right. You see the hat and you're like, oh, okay. And then it's on someone else, like Trump or Biden or whatever.
01:04:15.942 - 01:04:29.966, Speaker D: Yeah. Remixed popular formats. Remixed means my favorite. It's a little esoteric of an answer, but mashups. Yeah. I like the chess one. That Sherlock Hodls was the first guy I ever saw post it.
01:04:30.110 - 01:04:31.870, Speaker C: Oh, that one. That was a good one.
01:04:31.902 - 01:04:32.310, Speaker D: That's a really.
01:04:32.342 - 01:04:33.394, Speaker B: The chess one.
01:04:35.014 - 01:04:36.702, Speaker D: We don't have to dive too far into that one.
01:04:36.718 - 01:04:37.646, Speaker C: Yeah, we don't need to.
01:04:37.670 - 01:04:39.554, Speaker D: It's on my timeline a little bit ago.
01:04:40.054 - 01:04:58.682, Speaker A: Oh, well, I forgot to ask you this. What do you think about hyper liquid? I didn't look into it, but everyone's just like, oh, you know, you know, a Monad competitor. I haven't looked into it at all. They're trying to meme this. I'm just trying to understand what if you have looked into it, if you can comment on it? Thoughts?
01:04:58.818 - 01:05:03.114, Speaker C: I would say that's middle of the bell curve thinking, perfect.
01:05:03.234 - 01:05:06.586, Speaker A: I haven't looked into it, but, and.
01:05:06.610 - 01:05:18.934, Speaker D: I'll say I like them in case they watch this so that you can have both sides of it. A lot of people that I know that I really respect their opinion, think that it's a cool thing that's worth pursuing.
01:05:19.634 - 01:05:26.666, Speaker A: I don't even know what they're doing. So that's why I was curious in terms of why they're comparing Monad to hyper liquid at all.
01:05:26.770 - 01:05:30.346, Speaker D: If I was on the hyper liquid team, I would for sure be doing, that's a great show.
01:05:30.370 - 01:05:31.034, Speaker A: It's a good meme.
01:05:31.114 - 01:05:31.402, Speaker D: Yeah.
01:05:31.458 - 01:05:38.608, Speaker A: Oh, okay. So it's a meme. Okay, perfect. All right, we'll leave it at that. Thanks for tuning in, and we'll catch you guys next time.
01:05:38.786 - 01:05:39.476, Speaker D: Thanks for having us.
01:05:39.500 - 01:05:39.724, Speaker A: Yep.
01:05:39.764 - 01:05:40.436, Speaker C: Thanks.
01:05:40.620 - 01:05:54.788, Speaker A: As always, the views expressed in the good game podcast are personal to the speakers and do not necessarily reflect the views of any other person or entity. Nothing here should be construed or relied upon as investment, legal, tax, or other advice.
01:05:54.956 - 01:05:56.260, Speaker B: Thanks for listening to good game.
01:05:56.332 - 01:05:58.644, Speaker A: Don't forget to subscribe. We'll see you next week.
