00:00:00.400 - 00:00:04.085, Speaker A: Welcome to Goodgame. Your no BS insights for crypto founders.
00:00:07.825 - 00:00:16.657, Speaker B: Do you see any L2 that can compete with Monad performance wise and fees wise or even has a path towards competing with Monad?
00:00:16.801 - 00:00:34.687, Speaker C: Our team is just writing software. So at the end of the day, like we always say this, within our team, everything is a software. So yes, any other team could put in the effort to write really performant software that allows that blockchain, whether it's a L2 or layer one or layer three.
00:00:34.751 - 00:00:40.103, Speaker B: Do you see any team that's really focusing on performance today among the L2 teams?
00:00:40.199 - 00:00:40.775, Speaker C: I don't.
00:00:40.855 - 00:00:42.047, Speaker A: What about Mega Eth?
00:00:42.151 - 00:00:54.279, Speaker C: I think that they've stated a desire to do that. Okay. I think it's still super early right now, so it's really hard to judge anything that they've done so far, but I think they have the right early goal in mind.
00:00:54.367 - 00:00:56.535, Speaker A: Looking for your next startup idea in crypto?
00:00:56.655 - 00:00:58.231, Speaker C: Check out our request for startups list.
00:00:58.263 - 00:01:02.275, Speaker A: And get inspired at Alliance XYZ Ideas.
00:01:02.695 - 00:01:04.915, Speaker B: Are they going to pull up fake news this time?
00:01:05.615 - 00:01:06.895, Speaker A: Oh, do you remember that?
00:01:07.015 - 00:01:08.035, Speaker C: Oh, they.
00:01:08.415 - 00:01:12.367, Speaker A: They hacked Gary Gensler, right? Oh no, the SEC's website Twitter handle.
00:01:12.431 - 00:01:13.287, Speaker B: Yeah, yeah.
00:01:13.431 - 00:01:17.375, Speaker A: And then they hacked the secs right afterwards or something.
00:01:17.495 - 00:01:20.195, Speaker D: Cointelegraph Intern was the first to push it.
00:01:20.615 - 00:01:21.423, Speaker C: Yeah, someday.
00:01:21.479 - 00:01:22.959, Speaker A: They hated him at first, but he was vilified.
00:01:23.047 - 00:01:24.335, Speaker C: Every brand will have an intern.
00:01:24.415 - 00:01:27.095, Speaker A: Yeah, that's the future.
00:01:27.475 - 00:01:28.691, Speaker D: Yeah. Biden's hiring one.
00:01:28.723 - 00:01:30.659, Speaker C: That intern. Yeah. It's gonna be crazy.
00:01:30.707 - 00:01:31.051, Speaker D: Yeah.
00:01:31.123 - 00:01:34.815, Speaker A: Yeah. So did you start this whole new trend?
00:01:36.835 - 00:01:38.907, Speaker D: I think I was the only intern.
00:01:39.011 - 00:01:40.323, Speaker A: Yes. For cms. Right down.
00:01:40.379 - 00:01:41.019, Speaker D: Yeah.
00:01:41.187 - 00:01:48.403, Speaker C: Yeah. And then MEV Intern kind of made it a right. MEV Intern was like the second.
00:01:48.499 - 00:01:49.491, Speaker A: Is it all recording, by the way?
00:01:49.523 - 00:02:00.979, Speaker D: There was. So mine was CMS Intern. And then I want to say like within maybe two months a few others popped up. And then there was like this.
00:02:01.107 - 00:02:06.695, Speaker A: And there's a lot of fake interns because then companies would create their own interns and we knew there weren't interns.
00:02:07.155 - 00:02:08.203, Speaker B: All interns.
00:02:08.299 - 00:02:23.211, Speaker D: Yeah, yeah. That's like. That's one thing I've put out there before where it's like, it actually works better if you truly have like, it in. We say intern, but like just young person kind of running it in general.
00:02:23.283 - 00:02:23.715, Speaker A: Yeah.
00:02:23.795 - 00:02:23.987, Speaker B: Because.
00:02:24.011 - 00:02:34.615, Speaker D: Yeah, when it's like the, the guy. Yeah, the guy who's just used to running social media accounts since like 2010 and he's like, oh, I'm an intern now. Like, it just. It flows less naturally, I feel like.
00:02:35.155 - 00:03:07.565, Speaker A: But there's also like this, you know, you know, we'll talk about Monet, but this is actually pretty interesting, but I mentioned this on our talk with Anom yesterday, but a lot of large B2B companies are advertising through meme channels now, and that's becoming a huge inbound for customer acquisition, a funnel for them. And so, like, memes, interns, like, this new generation is coming up and kind of like, you know, changing the flow of how you acquire new customers now, which I find to be very interesting.
00:03:07.725 - 00:03:13.637, Speaker D: Yeah, I've thought about this probably way too much, honestly, like, way more. Way more than anything.
00:03:13.661 - 00:03:25.417, Speaker A: I wrote a really long tweet about this, too. I shared it with Joe, who's our intern. Our intern, but like, the person that leads all of our media. But yeah, yeah, if you want to touch on that a bit.
00:03:25.521 - 00:04:05.789, Speaker D: Yeah, I think it's. There's just like a shift in, like, user acquisition following, just, like, moving up in the attention economy. Like, marketing for the last 50 years has very much been, oh, you create advertisements that talk about your product and you put them in places where people expect ads. And that's just kind of how it works. Social media has changed that a bit, and probably in the last, like, five years, it's become very apparent. But it's. You know, there were brand accounts and they would just, like, post whatever announcements or big events that they're doing or you would have.
00:04:05.789 - 00:04:32.760, Speaker D: Like, one thing I pointed out is, like, there's super bowl commercials, right? That's like, yeah. You know, ironically, that's the super bowl of commercials. Right. That's like the biggest stage for any advertisement. But they're all competing with each other, right? So they're not trying to compete with the actual Super Bowl. The entertainment people came to watch, they're like, we need to be the best ad during that. And on Twitter specifically, that dynamic is completely flipped on its head.
00:04:32.760 - 00:05:10.173, Speaker D: If you are putting out advertisements, you just scroll right past. Like, people hate ads in general. So you need to actually be putting out content that you're actually competing with, like, influencers and what the people are coming to the platform to see instead of other advertisements. So you kind of have to change your content strategy and the way that you're getting attention. And I think, like, intern is kind of like one angle that people have taken on that, but it's real. I think the bigger shift is just your brand needs to put out content that people actually want to consume instead of just talking about products and features and kind of how marketing and ads have been done in the past.
00:05:10.349 - 00:05:42.733, Speaker C: I mean, in some senses it's still similar to how the best ads have always worked. Like, the best ads are always about feelings rather than about specific facts. Like, I'm going to really butcher this. But it's like if you look just like Google for like the best ads out there, they're, you know, like these full page newspaper ads where. But it's not, it's not like touting the features of the car. It's like talking about, I don't know, just like giving a clever, like, thought.
00:05:42.829 - 00:05:44.757, Speaker B: Like Nike Impossible is nothing.
00:05:44.861 - 00:05:46.653, Speaker A: Yeah, just do it.
00:05:46.709 - 00:05:49.373, Speaker B: Just do it. Wait, that's Adidas. Just always.
00:05:49.469 - 00:05:49.869, Speaker A: No, Nike.
00:05:49.917 - 00:05:50.501, Speaker D: That's Nike.
00:05:50.613 - 00:05:53.357, Speaker B: Okay, so what's impossible is nothing. Is that also Nike?
00:05:53.421 - 00:05:58.325, Speaker D: No, Nike's competitor. They fell away. We can't remember Puma?
00:05:58.365 - 00:05:59.105, Speaker A: I don't know.
00:06:01.405 - 00:06:27.675, Speaker C: But yeah, also the speed. You need to keep up with the trends. Crypto. Twitter moves really fast and you need to have a velocity that reflects that as well. I feel like a lot of the. While some of the tweets that have done really well are like fast responses to. What was it the pie chart? Brutalization.
00:06:28.095 - 00:06:29.879, Speaker D: Yep. That's a good one.
00:06:30.047 - 00:06:33.383, Speaker A: Oh, yeah, that was Renzo. Was it Renzo?
00:06:33.479 - 00:06:34.831, Speaker B: Yeah, yeah, yeah.
00:06:34.903 - 00:06:35.875, Speaker A: Rest in peace.
00:06:37.375 - 00:06:39.555, Speaker D: They live on an infamy forever.
00:06:41.295 - 00:06:48.583, Speaker B: So aside from memes, like in the early days of. By the way, so you say monad, we say monad. Monad.
00:06:48.639 - 00:06:49.735, Speaker A: Oh, so it's not monad.
00:06:49.855 - 00:06:52.711, Speaker B: Yeah, I've been saying monad for two years.
00:06:52.783 - 00:06:53.087, Speaker A: Same.
00:06:53.151 - 00:06:54.751, Speaker B: I heard you say monad today.
00:06:54.783 - 00:06:55.263, Speaker C: Yeah.
00:06:55.399 - 00:06:55.991, Speaker A: Okay.
00:06:56.103 - 00:06:59.887, Speaker D: They're both technically right. I think one's like a British and one's an American.
00:06:59.991 - 00:07:04.725, Speaker A: But so which, which is America. Monad is American, right?
00:07:04.845 - 00:07:06.345, Speaker C: I think so, yeah.
00:07:06.645 - 00:07:07.373, Speaker A: Monad.
00:07:07.469 - 00:07:09.485, Speaker C: Or maybe not. That might be British. Monad.
00:07:09.565 - 00:07:10.141, Speaker B: Monad.
00:07:10.213 - 00:07:10.877, Speaker D: Yeah.
00:07:11.061 - 00:07:11.621, Speaker B: Monad.
00:07:11.693 - 00:07:12.133, Speaker A: Monad.
00:07:12.189 - 00:07:12.525, Speaker B: Monad.
00:07:12.565 - 00:07:13.189, Speaker C: We say monad.
00:07:13.237 - 00:07:13.949, Speaker A: Monad. Okay.
00:07:13.997 - 00:07:14.325, Speaker B: Monad.
00:07:14.365 - 00:07:16.805, Speaker A: Well, I will try to change my.
00:07:16.965 - 00:07:29.275, Speaker B: So in the early days of Monad memes, aside from the meme game, what else was crucial to, you know, building the community? The hype around the project?
00:07:30.055 - 00:08:15.799, Speaker D: I would say the like, honestly, not just saying it because Keoni's sitting right here, but like there was a small team of us kind of working together. And most people that are trying to build like a professional brand that will grow a lot, like Keoni gave us a lot of freedom to basically say, you know, hey, yeah, if we think this is a good idea, like, run with it, see what happens. So that kind of lets the memes flow freely and then that kind of Sets a culture within the community that, like, hey, these guys embrace what we actually like to talk about. They're personable, they're relatable, and we can kind of get behind this movement. Right. It seems like a brand that you can, you know, relate with and touch and maybe have an impact on. There are a few, like, early day bootstrapping things on the community front.
00:08:15.799 - 00:08:19.975, Speaker D: Like the. The Discord was locked, right? So it was invite only.
00:08:20.055 - 00:08:20.539, Speaker C: Okay.
00:08:20.647 - 00:08:53.667, Speaker D: Um, and we found that just by having exclusivity that actually created demand, which was something we didn't expect. We usually like, oh, there's this project. I want to join the Discord. The second you can't join the Discord, you're like, you want to join ten times more. You're like, just because I can't get in, I really want to. So that was one of the really early things. And then during the first fundraise announcement in like February or March of 2023, you put the announcement out and open the Discord.
00:08:53.667 - 00:09:36.985, Speaker D: So, like, now finally everyone could flood in. Big attention event. Bill Monday, who, like, leads everything on the community front at Monad, has been, like, massive. I think that early on that hire has had, like, one of the biggest impacts on the culture of Monad. So, like, him kind of leading the charge, setting a lot of the tone, being very organic and talking person to person and doing note questing or things that, like, bots can do has been super important. Now there's a locked telegram, right? So, like, the Discord's open, but the telegram kind of has this exclusive feel. So I think just having a bunch of different outlets, letting the community run free, and then when they do create something that's awesome, like, making sure that you highlight that.
00:09:36.985 - 00:10:06.595, Speaker D: So, like, if anyone posts something awesome in the community, like, like, we might put that out on our own Twitter, like, Keoni's going to comment or quote, tweet and say, like, hey, this is awesome. I appreciate that. Like, there's a lot of projects in crypto that there's just kind of the community that sits over there and then like, they do their own thing. But in this sense, the community is like building the lore, right? They're building the culture that exists in Monad. So when we posted off main, they're like, oh, this is interactive. Actually, I'm not just watching a show. I'm actually, like, playing a video game.
00:10:06.595 - 00:10:10.315, Speaker D: Like, I'm a part of this. Um, and I think that that's helped a lot on the growth side.
00:10:10.355 - 00:10:34.691, Speaker A: One interesting insight that I. I've learned about monad's growth strategy versus other others. Is that that interactivity? I've seen the community like bring up more different types of artistic memes. I've seen people build. I saw like a purse or was it a purse or a, like a Monad character in a purse or something that shipped it to your office. Do you, do you know what I'm talking about?
00:10:34.723 - 00:10:35.011, Speaker D: Yeah, yeah.
00:10:35.043 - 00:10:36.379, Speaker C: Oh yeah, the airpod cases.
00:10:36.467 - 00:10:53.711, Speaker A: Yeah. I mean like I'm. You start to see these things that I haven't seen from other communities where they actually are building stuff and they're shipping it to you guys. Is that what you're talking about? Like building that trust with the community such that you let them kind of bring and surface up different types of creative ways to get connected.
00:10:53.743 - 00:11:43.431, Speaker C: With Monad, I think that's kind of a later stage effect. But in the early days we couldn't necessarily expect that that was going to happen and still are consistently blown away by the contribution of individual community members. People are really creative. They really, you know, contribute very heavily. I would say the community was really built by the community first and foremost. And it's just, you know, the addition of people joining the community and being like, oh, I have something to contribute, like, oh, I want to make some art that, you know, is like capturing this funny thing that happened in Discord. The inside jokes, the nature of them doesn't specifically matter, but it's more like just having shared lore.
00:11:43.431 - 00:12:31.479, Speaker C: Having an environment where like people can make friends and hang out. It's also very path dependent. Like I think our community started growing when, during the bear market when it was like, you know, pretty tough time. A lot of people were a little bit like demoralized by the state of the market and all these bad headlines coming out about Terra and FTX and so on and just having an environment where they could go hang out and commiserate and have fun and make friends and be creative. That ultimately meant that when new people would join, sometimes they would decide to stick around. It's like, you know, the. From the team perspective we're just, you know, trying to make the tree an attractive tree for birds to build a nest.
00:12:31.479 - 00:13:18.855, Speaker C: But it's like how do you, how do you attract birds? I don't know, like maybe put out some birds but, but you. It's like it's ultimately the community's choice about whether to come and try things out and contribute, be creative. But what from a team perspective we could do is just appreciate when someone does do something that's really High quality. And also be good about not rewarding things that are not high quality. I talked about this just a second ago, but one thing that happened was when we opened the Discord on day one, I thought, oh, it's important to reward people who joined on day one, so I'll give them all a role. So I gave them this role called the pioneer role. And then everyone was like, awesome, I got a role.
00:13:18.855 - 00:13:39.587, Speaker C: I'm really excited. And then they stopped doing anything because they already got a role. So then they were like, okay, I got it. And then. And then new people would join and they'd be like, oh, how come I don't have this role? Like, this other person has it and they're not doing anything. But I'm contributing, but I'm not getting it. So then the existence of the role was actually actively negative for people.
00:13:39.587 - 00:14:22.041, Speaker C: Just discouraging people from doing things that would have been good, like just hanging out and vibing and, you know, spending time there. So then eventually, like, I had to kind of remove the role or at least remove any recognition of the roles and just not separate it out. Eventually we did actually get rid of it completely, but it was just having too low of standards initially was the mistake. Or similarly, people would make these awful memes that are just copy paste. They make the same meme in every discord, just substituting your project's name in place of the other ones. The same one. Andy discarding Woody because he wants Buzz Lightyear or the, you know.
00:14:22.041 - 00:14:31.321, Speaker C: Yeah, these memes are all like, there's certain templates and people would come and they. They kind of are trained from other projects to do that.
00:14:31.393 - 00:14:31.849, Speaker A: Yeah.
00:14:31.937 - 00:14:51.093, Speaker C: And it just, you know, if you, like, acknowledge that and you're tempted to initially because you have no traction and you're like, oh, that person, like, they. They're excited about Monad. They put my name. They put Monad's name on the discord or they put my face on the meme. Sorry, I messed up those words. But yeah, they created memes that were like, monad related. That's so great.
00:14:51.093 - 00:15:02.065, Speaker C: It's really not actually. So just having a higher standard. And then if you do that, then you actually discourage people from being more creative. I see that as a common problem in a lot of discords.
00:15:02.605 - 00:15:07.905, Speaker B: And what's with giving CL a free credit or credit card? What's with that?
00:15:08.805 - 00:15:26.665, Speaker C: Oh, what was with that? Yeah, I don't know. I think he was just dming different people as a joke, saying, can you give me your credit card number? And I Think like, you know, people were just not really responding to him. And then I, I just did because I was like, okay, sure.
00:15:27.085 - 00:15:32.861, Speaker B: I mean, you get free marketing from him. I mean, is it free actually? Like, yeah, he, he has access to $8. Okay.
00:15:32.933 - 00:15:35.565, Speaker C: He's, yeah, he paid for Twitter premium with that.
00:15:35.725 - 00:15:43.025, Speaker D: I think he's truly unbanked too. So it was like a joke. But he's like, I actually don't have a credit card to buy this with.
00:15:44.655 - 00:15:56.159, Speaker A: So you actually really thought deeply about building the foundational layers of your community. Like, I don't think a lot of founders do that. They just kind of open up their discord telegram and just kind of like let it rage.
00:15:56.247 - 00:16:13.783, Speaker C: Well, I think it's understandable because there's a lot to do. Like there's, you're building a product, you're growing the team, you're interviewing people, you're maybe like trying to get some publicity. There's a million things to do. And so I think it's understandable that people would low prioritize it.
00:16:13.919 - 00:16:42.005, Speaker A: So let's dive deep into Monad. You know, obviously I think there's a lot of news about what the work that you're doing. Right. As a layer one paralyzed evm. I guess the question I want to start with is how did you like come up with this, like this problem set and then this as a solution? Like, why did you think this was the right angle into building this layer one up? What problems did you see and how did you identify this as the right problem to solve?
00:16:42.165 - 00:17:38.705, Speaker C: Yeah. Prior to Monad, James Hunsaker and I, two of the co founders of Monad, were working together at jump trading for eight years. Starting in 2014, we built a high frequency trading team, built a trading platform from scratch. So we had a lot of experience building really performant systems where, you know, packet would come in from the exchange and we'd have to decide whether to send an order and get the order out in less than a microsecond, which is just requires extreme attention to detail with respect to system design architecture. Just squeezing latency out of any possible place. And that's the way it is because of competitive forces. Like if a packet comes in and your competitors can react faster than you, then the, you know, they're the bird that gets the worm.
00:17:38.705 - 00:18:34.225, Speaker C: So there's just this incredible force, competitive pressure to be fast. And then Fast forward to 2021. James and I ended up joining the crypto team at JUMP along with the rest of our trading team and immediately kind of pivoted and started working on Solana Defi in particular. So it was learning about Solana itself, learning about some of the existing protocols, and then finding ways to help support some of these protocols that there were portfolio companies of Jump. And during that time, it was really just about six months, that was all. We got a kind of whirlwind tour of the state of the world with respect to Solana. We could see that there was a lot of low hanging fruit in terms of optimizing Solana and it seemed like the team had a plan for how to do that, but it was still, there's a lot of work that's going into optimizing Solana.
00:18:34.225 - 00:19:23.927, Speaker C: And then when we looked at EVM land, which was actually, you know, the dominant smart contract platform by a long shot, 96 to 97% of all TVL on chain is in EVM applications, so very much the dominant standard. And there that, you know, is even more stark in terms of the performance optimizations that seemed possible just intuitively as people who like have built performance systems and. But I think anyone would Understand that like EVM or Ethereum at 10 tps is like very slow relative to what you'd expect to get out of a computer. Like, you know, my MacBook Pro has like 100 tabs open and is running Spotify and like, I don't know, has discord, you know, memes coming in like a thousand memes per minute. Yes, all that stuff.
00:19:23.951 - 00:19:24.615, Speaker A: Pump that fun.
00:19:24.695 - 00:20:10.773, Speaker C: Yeah, right. Like all this stuff happening all on one computer that's just like a normal consumer grade. So we inherently all understand that the system should be capable of much more, but it's just having the confidence from previous experience to know, okay, these are probably where some of the bottlenecks are. So we just left Jump and started Monad at the beginning of 202022 along with the third co founder Eunice, who has a technical product management background. And it was just like we knew from day one that there would be a lot of opportunities to improve the execution of Ethereum. And at that time also a lot of like the focus is really on rollups. It's kind of interesting.
00:20:10.773 - 00:21:02.337, Speaker C: 2022, everyone asked us like great sounds, we love what you're doing, it makes sense. But why not do it as a roll up? And so I think that there is just so much social pressure that actually meant that like everyone converged on the same thing. Pressure, yeah, but, but also like just, you know, market perception of like, yeah, it's really important for your project to be successful to Be a roll up and I don't know, I mean we have a lot of respect for teams that are working on roll up technology or working on data availability. You're working on different other verticals within the Ethereum ecosystem. Like those all have merit as well. But someone has to work on performant execution. Like someone has to go and figure out how do we make the state database faster, how do we make smart contract execution much more performant.
00:21:02.337 - 00:21:22.623, Speaker C: And at that time it seemed like very few people were working on that. So it was really a case of the stars aligning in terms of our previous experience, the state of the world, like the problem to be solved and then the lack of people working on that problem just made it a really amazing opportunity at that time.
00:21:22.799 - 00:22:07.037, Speaker B: But what's the trade off between building monad as a layer 1 versus as a layer 2? Because the advantage of building as a layer 2 is from the end user's point of view, when they bridge, they basically just deposit eth to a smart contract. Right? Whereas if you build Monad as a layer one when the users bridge, they go from one chain to another, it's much higher friction. And this ultimately matters to how you push up the liquidity at the early stage. So that's I guess the downside of building as a layer one. But then you must have thought that there is some upsides of building it as a layer one that would outweigh downsides like this. What are the trade offs?
00:22:07.141 - 00:22:58.915, Speaker C: Yeah, I think, you know, to mention really briefly, like three major trade offs. Number one, decentralization, number two performance and number three, cost. So at the end of the day, Monad is a very decentralized network, meaning that there are hundreds of nodes globally, fully globally distributed, all participating in consensus, all alternating who is whose turn it is to produce blocks. And so as a result of that there is a much greater degree of censorship, resistance and more generally decentralization coming from that decentralized block production. And L2s right now don't have that. Like every L2 that I've seen has a centralized sequencer. You know, it means like that one sequencer literally has complete authority on how they're going to order transactions, whether they're going to censor transactions.
00:22:58.915 - 00:23:42.997, Speaker C: And so it's just, you know, we're still in a state of the world where the prevailing L2s have a high degree of centralization. And you see that sometimes with extreme cases where like the, you know, degen chain had a reorg and 500 block, 500,000 blocks, 500,000 500,000 blocks were reorged because there is an issue with the centralized sequencer that was provided by conduit. Yeah, or like the. There was another thing like there's like 12 different chains that all have the same multisig address that's controlling, you know, the upgrade authority. That's for Conduit because they're all using Caldera.
00:23:43.021 - 00:23:45.941, Speaker A: This was yesterday, I think. Oh, was that called? No, it was Conduit, I think.
00:23:46.093 - 00:23:46.989, Speaker B: I think it's conduit.
00:23:47.037 - 00:23:47.637, Speaker A: It's conduit.
00:23:47.701 - 00:24:49.967, Speaker C: Okay, sorry. Yeah, well regardless, like there's. But yeah, sorry, there's many examples of like, you know, we're just not in at the current state of the world. And yes, like everyone is working to try to make these systems more decentralized, more robust, more performant, et cetera, but we just really felt at that point in time and still feel now that we can contribute substantially to the goal of decentralization by delivering really high performance while preserving a high degree of decentralization. And that's actually important because then we're ultimately giving people a better point on the, you know, if you imagine like a two dimensional curve of like decentralization and performance, we're actually moving like up and to the right, finding a better ISO client on that spectrum of decentralization and performance by making, by getting much more out of the hardware. Yeah, so that was the first reason. The second and third reasons, performance and cost are very tied to each other.
00:24:49.967 - 00:25:10.815, Speaker C: But with Monad, Monad is really performant and really cheap. And it's that way because we control all layers of the stack, both execution and consensus. We're not worrying about is there a data availability layer that's sufficiently cheap that can then give cheap transactions.
00:25:11.915 - 00:25:28.949, Speaker B: Talk about this yesterday, if you remember, but it sounds like it's actually easier to build a high performance chain as a layer one then as an Ethereum layer too. Because when you build as an Ethereum layer 2, you have to wall work around the constraints of the EVM and the database, all that stuff.
00:25:29.117 - 00:25:31.413, Speaker A: Is that an Ethereum dependency too?
00:25:31.469 - 00:25:32.825, Speaker B: Dependencies and.
00:25:33.565 - 00:25:44.245, Speaker C: Yeah, well, I. So with Monad we have actually rebuilt the database like we have rebuilt the evm. So everything was built from scratch and still is compliant with the evm.
00:25:44.325 - 00:25:44.781, Speaker D: Right.
00:25:44.893 - 00:26:15.587, Speaker C: So I think from a standards perspective that's always been a constraint, but it's always been the first order. Like most important thing is delivering full bytecode compatibility so that developers don't have to like worry about whether the system is actually still compatible. Right. But yeah, I think it's like we say with everything else, there's no shortcuts, like to deliver a really performant system, there's no shortcuts. You just have to go, you know, straight at the, where the bottlenecks are and address them.
00:26:15.771 - 00:26:19.195, Speaker A: So how easy is it to port over an app to Monad?
00:26:19.275 - 00:26:33.411, Speaker C: A monad, it's completely trivial, it's completely easy. Monad is fully bytecode compatible. So any app that you have, the bytecode that's already deployed to Ethereum, you could redeploy that bytecode to Monad without any change.
00:26:33.443 - 00:26:36.747, Speaker B: I think the hard part is porting the liquidity, not the code.
00:26:36.851 - 00:26:38.905, Speaker A: Well, liquidity, Liquidity. Farming.
00:26:39.035 - 00:27:15.565, Speaker C: Farming, yeah. Oh, on the point about bridging, because you were talking about how. Yeah, like I think of a L2 as a blockchain. Like it's still a blockchain, it still has like blocks, it still has transactions in the block, it still has an execution system for processing those. I think of it as a blockchain that right now has like one node, that one sequencer that's running the blockchain and then is pushing data back to layer one. And by pushing data back to layer one enables an enshrined bridge. And so that bridge in some senses has some nice properties.
00:27:15.565 - 00:28:08.719, Speaker C: Like the layer one is holding state commitment, which is like a summary of all the state on the layer 2. So you can be sure that if the layer 2 disappears, people can still withdraw money out of that bridge contract subject to certain terms and conditions like wait seven days, things like that. But the UX of these bridges is still not that great either. You can bridge into an optimistic roll up immediately, but then to withdraw you wait seven days, that's crazy long. So then in practice people just end up using fast bridge solutions. Like layer zero has, what do you call it, what's the liquidity pool solution built on top of layers? Stargate. Yeah, Layer zero has Stargate or Axelar has Squid or Yeah, there's like people just end up in practice using these liquidity pools.
00:28:08.719 - 00:28:13.955, Speaker C: Liquidity pools anyway, and that's going to be true whether you're bridging to layer one or L2.
00:28:14.375 - 00:28:33.953, Speaker B: I mean conceptually yes, but when you're on a L2 you can actually use eth, native ETH on a L2. But if you want to use Monad, you don't have native ether, so you would have to use native monad, the native token on monad or something. I think this is the biggest friction.
00:28:34.049 - 00:28:48.765, Speaker C: Yeah, that's true. But There are ways of addressing that as well. People could just have the ability to swap from native token on one chain to native token on another chain that's enabled by some of these fast bridges as well.
00:28:49.505 - 00:29:05.265, Speaker B: But my point is ETH battle tested asset has a lot of liquidity, less volatility than the newer assets, the newer native tokens and people are comfortable with the idea of using ETH for sure.
00:29:05.305 - 00:29:36.003, Speaker D: Yeah, I would just point out too, right? Like there's certainly one crypto asset that is more battle tested and has more liquidity, right, which is Bitcoin. And people use wrapped Bitcoin on eth too. So there's no direct solution for that. But there are certainly ways that people are comfortable using new chains now like I, when we think, I feel like when we think about a lot of the risks and making sure the user experience is great, you know, that's maybe on the list but not like some of the, like one of the top issues I feel like people need to have addressed to use Monad.
00:29:36.139 - 00:29:36.747, Speaker B: Right.
00:29:36.891 - 00:30:38.485, Speaker C: I would also just say regarding the more general like line of questioning about you know, being a part of the Ethereum ecosystem and you know, there's certain things that are very conventional ways of being a participant in the Ethereum ecosystem as a separate blockchain and one of those is having the enshrined Layer two bridge with either the optimistic roll up mechanism or the ZK roll up mechanism. That's one thing. And then a sub component of that is whether the layer 2 uses Ethereum as data availability or whether it does not. Like, you know, there's a bunch of layer 2s that are now using Celestia or Eigda or maybe even avail as their DA solution. So they're not actually paying for ethday. So you know, like there's a spectrum of like ways that L2s are following the initial like quote unquote ground rules of utilize being a part of the Ethereum ecosystem. And that's shifting over time.
00:30:38.485 - 00:31:56.409, Speaker C: But you know, I believe that there are other ways to be a part of the Ethereum ecosystem and I think in particular contributing to the Ethereum research community by going really deep and doing deep focused research into scaling improvements that ultimately are needed by Ethereum and are beneficial to Ethereum. That's another way to contribute as well. And I think that just in general we shouldn't always just take the obvious route as the way to be a participant or as the solution to anything. Like with a lot of things we've done in Monad, it's like don't just follow the playbook, think about what actually makes sense, what can add value to whoever the other participant is. In the context of community, it was not just following the playbook of using questing platforms and outsourcing the community development to a marketing agency, not doing that, but instead starting from first principles and being like, well, this is why people would want to be in the Monad community. This is like what we think people want and let's talk to them and listen and you know, adapt and give a high quality product. We always said the community is the product.
00:31:56.409 - 00:32:25.773, Speaker C: So that means we had a focus on actually like coming up with a playbook from scratch that we just thought would make sense in resulting in a high quality product. So I would say the same thing kind of applies here with respect to involvement in the Ethereum ecosystem. Like, yeah, the Playbook is build, be a L2, utilize Eth for da and that, that's fine. Like it's fine for people to do that, but it doesn't mean that's the only way. Like there are other ways to actually contribute meaningfully to Ethereum.
00:32:25.829 - 00:32:35.583, Speaker B: Do you see any L2 that can compete with Monad performance wise and fees wise or even has a path towards competing with Monad?
00:32:35.719 - 00:32:55.655, Speaker C: Our team is just writing software. So at the end of the day, like we always say this within our team, everything is a software. So yes. Any other team could put in the effort to write really performant software that allows that blockchain, whether it's a L2 or a layer one or layer three.
00:32:55.735 - 00:33:01.103, Speaker B: Do you see any team that, that that's really focusing on performance today among the L2 teams?
00:33:01.199 - 00:33:01.755, Speaker C: I don.
00:33:01.855 - 00:33:04.899, Speaker A: What about Mega Eth? Have you heard about them?
00:33:04.947 - 00:33:05.475, Speaker C: I've heard of them.
00:33:05.515 - 00:33:09.535, Speaker A: Okay. Do you see them finding this achievable path?
00:33:10.275 - 00:33:24.355, Speaker C: I think that they've stated a desire to do that. Okay. I think it's still super early right now, so it's really hard to judge any. Yeah. Anything that they've done so far, but I think they have the right, right goal in mind.
00:33:24.435 - 00:33:25.003, Speaker A: Okay.
00:33:25.139 - 00:33:36.721, Speaker B: Do you think when Monat launches on mainnet, can it compete with. Is it on the same order of magnitude as Solana Aptos Sui in terms of performance?
00:33:36.873 - 00:34:03.811, Speaker C: I think so, yeah. Yeah. I think that the three that you mentioned are all really performance systems that have put a ton of effort into systems engineering and addressing bottlenecks. Solana in particular, I know, has, you know, a lot of areas where they proactively determine like, oh, this is actually really inefficient we can do something way better and are, you know, on the path to making it better, I'm sure, yeah.
00:34:03.923 - 00:34:06.655, Speaker B: Even with the Fire Dancer, do you think mana can compete?
00:34:07.195 - 00:34:08.415, Speaker C: I think so, yeah.
00:34:09.595 - 00:34:32.065, Speaker A: So what camp are you in? Are you in the modular camp like Vitalik, or are you in the monolithic camp like Anatoly? Because, I mean, even without. I mean, obviously everything's permissionless and we're starting to see L2s around Solana. That's regardless. But I guess how do you view the two schools of thoughts and where do you kind of side with?
00:34:32.365 - 00:35:35.295, Speaker C: I mostly reject the question because I think they're not really in opposition. I think that the goal of any blockchain system design team should be to get as much performance and as many useful features as possible out of the hardware, which maybe you would characterize as a monolithic skew. But I don't really think that's true. I think that's just common sense. If we have a system that has a couple hundred nodes or a thousand nodes, so there's literally a thousand people paying for server costs and the requirement is like 32 gigs of Ram and this network bandwidth, if we're going to invest all of that cost into all this infrastructure, we should want to get as much performance out of that as possible. And that's just true. Regardless of how that system is, whether that system is portrayed as like a layer one or a data availability solution or a L2.
00:35:35.295 - 00:36:47.503, Speaker C: I think there is merit in fractal scaling, AKA roll ups. So I think there is merit in saying, you know, there's separate blockchains that push some sort of commitment back to some other blockchain and thus make the bridge between those blockchains more secure. In some sense, I think there's totally merit to that, but I think that's a completely separate concern from how efficient is each one of those layers. And I think that, yeah, it would be like saying, I'm going to have to conjure an analogy out of my butt right now. But yeah, I don't know, it's just saying, you know, do we want our cities to be very efficient? You know, do we want to have like, really good, like subway system and highways and like thriving businesses within the city? Or do we want to have the airplane travel be really efficient between cities and, you know, then, you know, like, those are not at odds with each other. Like, we should want to have really efficient cities and also have very seamless travel, know, really cheap travel between the different cities so the people can be world travelers. When they go to a city like that city should be a pleasant place to hang out.
00:36:47.639 - 00:36:49.439, Speaker D: That was a good one. Out of thin air. Thank you.
00:36:49.487 - 00:36:49.719, Speaker A: Good.
00:36:49.767 - 00:37:12.635, Speaker C: Thank you. Yeah, yeah. So then, you know, it's like, you know, the. The talking head is like, well, you know, like, do you like airplanes more? Should we invest more in airplanes or should we invest more in subway systems? And yeah, I guess if we have a limited budget, then you'd have to decide. But the amazing thing about this startup ecosystem is that there's room for both and people can focus on different things.
00:37:12.675 - 00:37:27.963, Speaker A: So I think Anatoly is doing the right thing. He's just focusing on scaling the layer one, and then permissionlessly, you have L2s that are building on its own and they could build their own, like, communities and subsidies. Right. How did you guys come up with the meme, the actual character for Monad?
00:37:28.139 - 00:37:28.803, Speaker C: Which one?
00:37:28.899 - 00:37:29.895, Speaker A: The purple one.
00:37:30.635 - 00:37:31.803, Speaker D: Probably the mallen deck.
00:37:31.859 - 00:37:32.195, Speaker A: Yes.
00:37:32.275 - 00:37:34.027, Speaker D: Looks like a hedgehog. Porcupine.
00:37:34.091 - 00:37:34.707, Speaker A: Yes. Yes.
00:37:34.771 - 00:37:35.301, Speaker D: Yeah.
00:37:35.443 - 00:37:55.041, Speaker A: Because, you know, we have founders that are looking for. I'm switching topics here because we have a lot of founders that want to embrace the community and they want to have some sort of like, character that represents their company. Right. How did you tap into that and create this kind of character?
00:37:55.193 - 00:38:15.521, Speaker D: I would actually say that dependent on, like the right strategy for a team that's trying to build a community. Like, the character, what people rally around changes depending on what stage you're at. So, like, really early on, Molendac didn't exist and there's like a whole farm of mon animals now.
00:38:15.553 - 00:38:15.697, Speaker C: Right.
00:38:15.721 - 00:38:17.525, Speaker D: There's Malondak, Moyaki.
00:38:18.065 - 00:38:20.873, Speaker A: Mooch. Yeah, there's a fly.
00:38:21.009 - 00:38:21.937, Speaker D: Yeah, Mooch is a fly.
00:38:21.961 - 00:38:22.481, Speaker A: Is that Mooch?
00:38:22.513 - 00:38:25.409, Speaker D: Yeah. French Nads came up with him recently.
00:38:25.497 - 00:38:25.809, Speaker A: Okay.
00:38:25.857 - 00:38:28.697, Speaker D: And forced him upon the community. So now it's not bad.
00:38:28.721 - 00:38:29.565, Speaker A: I like it.
00:38:29.905 - 00:38:32.013, Speaker C: Yeah, he's a good underdog.
00:38:32.109 - 00:38:41.133, Speaker D: But yeah. So I. So early on, like, when you're bootstrapping is different from when you're kind of in like this scale up phase.
00:38:41.189 - 00:38:41.865, Speaker A: Yep.
00:38:42.445 - 00:38:51.509, Speaker D: So really early on there was actually just like normal Pepe and we made them purple because no one knows what Monad is. Everyone knows what Pepe is.
00:38:51.557 - 00:38:53.101, Speaker A: Oh, that's right. You had a purple Pepe.
00:38:53.213 - 00:39:04.095, Speaker D: So that was actually the kind of the first iteration. We knew eventually once we got big enough, we kind of have to move away from that. Right. It's not really that original. It's hard to rally around that with a large amount of people.
00:39:04.435 - 00:39:05.975, Speaker A: But it might come to you.
00:39:06.315 - 00:39:35.155, Speaker D: It's a good It's a good one where you're like, oh, I recognize the character. And then if you see it purple enough, you're like, oh, I relate to it. And I know that this is Monad. So early on, that was actually the kind of like the rallying call or the character that was in a lot of the art that was being created. Malindak sprung completely bottom up out of the community, specifically out of Indonesia. Landak means porcupine in Indonesia. So they.
00:39:35.155 - 00:40:04.429, Speaker D: Which I didn't realize until, like, four months after the Maldak has been a character. So they just created him and started memeing him. And the community just, like, fell in love with it, right? They're like, this character's awesome. They started putting him on pictures. They had him do different things. It was almost like Flat Stanley, where he's traveling around the world and, like, he's just in a lot of the art. And at that stage, a lot of the art coming out of the community is like, definitely better than anything I can create or anyone on the team can create.
00:40:04.429 - 00:40:30.433, Speaker D: So the best art that's being made is coming straight from the community. They're putting molandac in all of it. So then it kind of goes back into our, like, positive feedback loop of if we're tweeting off of Main and encouraging. From all of the team accounts, the community's like, oh, my God. We just memed this character into the centerpiece of Monad. This is awesome. They feel more encouraged and more motivated.
00:40:30.433 - 00:40:37.185, Speaker D: It's just a lot more fun for everyone. So it honestly just grew directly out of the community, completely made by them.
00:40:37.265 - 00:40:37.985, Speaker A: That's great.
00:40:38.145 - 00:41:02.147, Speaker C: Yeah, Yeah. I think specifically we should give a shout out to a person in the community, Sapphire. Sapphire, who just uploaded this. This photo to the Discord, and it was called Mallendack jpeg. And it was a little. It was a little bit of a, you know, like a mic drop. Like, he just uploaded it and then didn't say anything.
00:41:02.147 - 00:42:19.223, Speaker C: And then people were like, what. What is it called? I think it's called Molodac because that was Malindak jpeg. But, yeah, I mean, the way I think about community is it's like the contributions of a number of incredible individuals who each bring different unexpected moments of joy and are also appreciators of that and are just having a good time spending time with each other again in the bear market, like, commiserating with each other a little bit. And ultimately, you know, that has resulted in incredible strength that we could not have predicted, you know, the strength of the Monad community at this point now is beyond wildest expectations, at least for me personally. And I think it's just the result of incredible individuals, like, just, you know, being creative and putting themselves out there and then riffing on each other and like. So, yeah, the reason why Mullen dac Like, if you search molandac on Google Images, like, you'll actually get a bunch of memes of Malondak doing different. And they're really good, they're really high quality.
00:42:19.223 - 00:42:52.555, Speaker C: This is not just, you know, one person creating all the memes. It's like, it's people, like, responding to each other and the lore getting increasingly complex. And I'm just really appreciative of it and feel like, you know, all that we could do is just, you know, put in place, like, make the community an environment that is conducive to that. Like, you know, kick out spammers, don't encourage bots, showcase great work that people have done and, you know, just try to, like, keep up and try to, you know, appreciate what's, what's going on.
00:42:53.135 - 00:43:36.305, Speaker D: I think on, on that point too, there's a lot of overlap in the ideology or like what we talk about as a team, from the engineering side to the community side. Like Keoni talked about when they were like, coming up with Monad, everyone was like, go and do an L2. There was like a playbook, right? They're like, hey, if you want to build something that has value in crypto, like, this is the playbook, follow that. And Keoni and James basically looked at and they, it's not really the best way to do it. We see the true bottlenecks. Let's go and do the hard stuff, even though no one else is doing it. And then if you do it well, you're actually going to create something that has a meaningful impact on the community front.
00:43:36.305 - 00:44:07.097, Speaker D: I think community marketing being intertwined and working together is very much the same thing. They're like, oh, you're trying to get people in the discord, Run a Galaxy quest, tweet out this thing, try to get as many people in there as possible. And we, we looked at it and I like, credit Bill Monday with a ton of this. But like, we talk about, we have two meetings every week. We probably talk about community more than any other team in crypto. But, like, we're talking through this. We're like, I actually don't think doing these quests.
00:44:07.097 - 00:44:43.817, Speaker D: Like, yeah, you might get, you know, the fire might burn really bright for a second. You Get a bunch of likes on a tweet, but I actually don't think that that creates a good community experience. Like, if you were in the community, would you want to do that? So we're like, yeah, all right. This is going to be a longer path that's going to require a lot more effort and bandwidth. But if you want to build something lasting and important, don't just follow this playbook that everyone else has done. Right? Make it make sense from first principles, make it fun and interactive, and then expand from there. I think once there are so many things in crypto, it's like once the playbook has been written, it's obsolete.
00:44:43.961 - 00:44:58.345, Speaker A: We just talked about this this morning, that especially for consumer founders, any consumer app you're building has to follow a new playbook. Otherwise you're just one of them, right. And you're comped against that person, that app or that company. So that's a really good point.
00:44:58.465 - 00:45:19.721, Speaker C: Yeah. I think people in crypto are smart. That's maybe something that sounds obvious, but it's just, like, worth contemplating for a second. So if they see you just following a playbook, just copying someone else, they're going to realize, like, oh, that's not original. So that's not something that really, like, catches my attention.
00:45:19.873 - 00:45:22.329, Speaker D: The first person to do it always works the best, too.
00:45:22.377 - 00:45:22.737, Speaker A: Yeah, right.
00:45:22.761 - 00:45:55.779, Speaker D: Like, there are so many different things in crypto, right? Like, the first airdrops were all the most successful. Now it's like, exactly the first. Like, think about when Arbitrum was doing their L2, right? There wasn't a playbook, so they had to kind of create this. And now look at who's, like, the most successful L2, right? Like, Arbitrum's kind of dominating on most metrics from a community standpoint. Like, I'm sure whoever was the first one to do questing, I don't know who it was, but I bet they got a lot of really good engagement. And now that it's just been done so many times, it, like points programs. The first team.
00:45:55.779 - 00:46:09.779, Speaker D: Like, I remember when Friend tech started doing points, I don't. It was like Margin five, Friend Tech and maybe one other that were blah, blah, blur. Yeah, doing points. It's like, it worked really well. And now it's almost like if someone announces a points program, they're like, oh, like, all right, fine.
00:46:09.827 - 00:46:12.003, Speaker A: It should be part of it, right? Yeah, don't do it.
00:46:12.059 - 00:46:28.675, Speaker D: So I think these are good ideas that stack on top of each other and make a better ecosystem overall. But you can't just hang your hat on some. If everything you're doing is playbook, there's going to be nothing that's interesting or creating value.
00:46:29.415 - 00:46:44.819, Speaker B: Technical question. I'm sure you're doing a lot of optimizations to make the chain really, really fast, but what would you say is the number one or top one or top two most important areas of optimization you're making?
00:46:44.987 - 00:47:37.285, Speaker C: Yeah, I'll give you two. So number one is the state database. So we've built a database from scratch for storing Ethereum Merkle tree data and utilizing the full bandwidth of the SSD much more efficiently than when embedding the Merkle tree inside of another database. So SSDs are quite powerful nowadays. They get better every year by quite a significant margin. A high quality 2 terabyte SSD with a million IOPS, aka a million IO operations per second, you can get it for $200. It's an amazing piece of technology and we should be maximizing the capabilities of that because the single biggest bottleneck for execution is state accessibility and the state lives on the SSD.
00:47:37.285 - 00:48:45.845, Speaker C: So with this piece of software, MonadDB, we are storing Ethereum Merkle tree data natively, like on the disk, in a custom format. That makes it really efficient to read pieces of data from that Merkle tree and also to read in parallel, thus utilizing that high bandwidth that's on the ssd and that's what accelerates execution the most. Of course, parallel execution on top of that is really important because then we can run many threads in parallel to surface many dependencies, pull a lot of data from disk in parallel, but the actual software has to utilize that bottleneck really efficiently. So that's the first thing. And then the other thing is asynchronous execution. I think that ultimately every blockchain will utilize asynchronous execution because it's a better model for splitting up the work between consensus and execution to enable execution to use the full amount of block time. So for context, in Ethereum and most other blockchains, execution and consensus are interleaved.
00:48:45.845 - 00:49:56.479, Speaker C: So in particular, usually what will happen is the leader chooses a list of transactions somehow and then executes all those transactions, gets to the end state after executing those, and only after that goes and messages the block out to all the other validating nodes, and then all the other validating nodes receive that block, so they receive the list of transactions and then has to go execute it and get the end state before voting on whether that block was valid or not. So as you can see in this Entire story, this was kind of a description of the full production and consensus of one block. And in that story, you have multiple rounds of execution happening that are all squeezed into a larger amount of work being done. And the problem is that work involves communication among nodes, which are potentially on opposite sides of the world. So that's going to be very expensive. Which means that the budget for execution is actually very limited in these interleaved systems. So for Context, Ethereum has 12 second block times, but the budget for execution is roughly 100 milliseconds, which is 1% of the block time.
00:49:56.479 - 00:50:41.895, Speaker C: So what that means is that there's this huge shrinking factor of time where although there's like within that 12 second period, we're only having a very small amount of time to do work. We just can't do very much work. So with Monad, with asynchronous execution, what happens is the nodes come to consensus first. So you can think of that as consensus is in one swim lane. And then once that consensus completes on that block, then two things can happen in parallel. The first is consensus can happen on the next block, but in parallel execution can happen over that first block. So thus the execution budget is now the full block time, which is a massive unlock for the overall execution throughput of the system.
00:50:41.895 - 00:51:19.875, Speaker C: And so, like I was saying, I think that every blockchain will ultimately adopt this. It requires some tweaks to how consensus and execution interact with each other. There's like some safety checks still that are needed, there's some spam prevention checks, but at the end of the day, this is a way better system that can utilize all the capabilities of the hardware much in a much greater way. And I think that everyone, for example, Solana, I think Tolle, has been tweeting about how he thinks asynchronous execution makes sense. And Solana may adopt this. Like, I think every blockchain will be like this at some point.
00:51:20.855 - 00:51:38.711, Speaker B: I mean, correct me if I'm wrong, but it sounds like the whole parallel EVM is kind of a meme. Because the second part, the second thing you mentioned has nothing to do with the parallel execution. And the first thing is not directly parallel execution either. It enables parallel execution. Right?
00:51:38.823 - 00:52:07.735, Speaker C: Right. Yeah. We have a blog post actually that's in progress, which is actually called parallel EVM as a meme. And it's, you know, it's a reflection of the fact that consistently the thing that resonated the most with people was parallel evm. Because that makes sense and it is important. Like it is important to get the most out of the hardware. And hardware, you know, computers have many processors and they have the ability to run many threads.
00:52:07.735 - 00:52:50.421, Speaker C: Like, don't get me wrong, parallelism is important, but I think when someone's just learning about Monad or Solana or whatever, it's just the thing that sticks in their brain. I think consistently, if you ask people, why is Solana more performant than Ethereum? What they'll say is, oh, because it can run transactions in parallel. And it's like, yeah, that's true, but that's also only one small part of the story. The other part is that Solana has a team of engineers who originally worked at Qualcomm who were building high performance systems, who made the system really perform it in all these other ways. So it's like, it's true, but it's only a small part of the whole story.
00:52:50.533 - 00:52:54.585, Speaker B: Does SUI and aptos use asynchronous execution?
00:52:55.245 - 00:52:56.545, Speaker C: I don't think so.
00:52:56.845 - 00:52:59.685, Speaker B: Okay, so you're the only one that's doing it.
00:52:59.805 - 00:53:00.621, Speaker C: I think so.
00:53:00.693 - 00:53:01.469, Speaker B: Okay, interesting.
00:53:01.557 - 00:53:03.233, Speaker C: Flow. Does that also actually.
00:53:03.389 - 00:53:03.913, Speaker B: Flow?
00:53:04.009 - 00:53:08.485, Speaker C: Yeah, flow. Blockchain from Dapper Labs, writing the Playbook.
00:53:09.345 - 00:53:27.085, Speaker B: Because I'm not entirely familiar with how asynchronous execution works, but I remember seeing a chart of a diagram of that with Move with Libra. So they definitely thought about it, designed it, maybe they haven't implemented it yet.
00:53:28.145 - 00:53:49.527, Speaker C: Yeah, I'm not the expert. I think they definitely do some other really interesting things like moving some of the work out of the hot path. And there's also like two, like aptos and swe and they do different things, so I probably shouldn't comment it, but yeah, I mean, if either they do and then that makes sense or they don't, and they probably will at some point.
00:53:49.631 - 00:53:56.039, Speaker B: And also parallel execution, like some of the L2s already do that too. Polygon has parallel execution.
00:53:56.087 - 00:53:56.559, Speaker A: Does it?
00:53:56.647 - 00:54:03.831, Speaker C: Yeah, yeah. So they have parallel execution but don't have a performant state database.
00:54:03.943 - 00:54:04.383, Speaker B: Right.
00:54:04.479 - 00:54:18.879, Speaker C: So you know, the magnitude of the improvement just from the parallel execution, without a performance state database that can serve requests from all these transactions running in parallel efficiently is going to be much more limited.
00:54:18.967 - 00:54:45.705, Speaker D: Yeah, I think the marketing guys and their team probably deserve a raise on a lot of those teams because it's like if it's the easiest thing to understand, if you can say. But like, everyone just thinks that that's the key. Yeah, you're going to say, oh, we're just going to do this one part, and then everyone's like, oh, well, that's Monad. It's a good trick is probably the wrong word, but it's a good thing to be able to push out. I respect their game. Yeah.
00:54:46.125 - 00:54:48.145, Speaker B: So when. When Mainet.
00:54:50.565 - 00:54:56.667, Speaker C: Yeah. We can't commit to publicly to a specific date, but team's working on it really hard.
00:54:56.771 - 00:55:02.855, Speaker B: Okay, but ballpark, is it one year or two years? Three years? Ballpark.
00:55:03.635 - 00:55:07.395, Speaker C: It's not two years or three years.
00:55:07.475 - 00:55:09.203, Speaker B: Okay. Lesser than two or three years.
00:55:09.259 - 00:55:11.015, Speaker C: For sure. Yeah, for sure.
00:55:11.475 - 00:55:35.393, Speaker A: Going back to your earlier question on incentives, on why, you know, like, if you think about what blast did they release? Blast Gold and Blast Points as a way to encourage developers to build and users to use their products. If you were to, as you're designing, probably internally, the incentive systems, how would you think about it for users and builders that are thinking about building on Monad?
00:55:35.569 - 00:55:52.797, Speaker D: I'll probably let Keone comment on it, but I would say if we're following this whole playbook theme throughout, if you're writing a playbook and you can't use it for a number of months, you're probably not going to discuss it too much in case someone else hops in to take it. It's a really important thing to get right.
00:55:52.861 - 00:55:53.221, Speaker A: Okay.
00:55:53.293 - 00:56:17.983, Speaker D: I don't know if Kony has anything else to add, but I would say there's a mix of things that obviously definitely work and are kind of tried and true in crypto and there's a lot of untapped things that are worth experimenting with. So, yeah, I think it would follow the same. Do the right thing. Even if it's the hard thing. There's no shortcuts to getting people on. But I don't know right now in terms of people coming on to build, there's just a lot of general excitement.
00:56:18.069 - 00:56:18.691, Speaker C: That's good, right?
00:56:18.723 - 00:57:12.075, Speaker D: There's like there's kind of two places of crypto blockchains right now, right? You have EVM and you. Then you have like performant, and there's just nothing in the middle. So people that want to build really performant apps, they like, have to choose either like SVM and Movie. I really kind of dominate that side. So they have to choose one of these blockchains because their app requires it to function. And then on the other side, you have EVM, which has like the vast majority of devs, like 90% plus of people are building for the EVM, but they don't have the opportunity to actually build applications that require high performance. So I think when you mesh those together, people's imaginations kind of Spark the same way when people first start building on the Solana, they're like, oh, there's all this awesome stuff that now I can do that I can optimize for and create these cool new features that just hasn't existed for the EVM yet.
00:57:12.075 - 00:57:33.035, Speaker D: So I think it's like very smart people's imaginations is a really cool thing to tap into. So like we, we, we talked to a lot of devs who have built awesome things in the past and they're like, I honestly I haven't been given a new design space to look at for a very long time. So like I'm excited about Mana just for that.
00:57:33.115 - 00:57:39.125, Speaker A: Yep. Um, so it seems like the tech is already bringing the people in, so you don't really have to. Yeah, okay.
00:57:39.245 - 00:57:41.093, Speaker D: Tech and Mollendac and then Mullen dac.
00:57:41.149 - 00:57:43.965, Speaker A: Yeah, of course, yeah, go ahead.
00:57:44.045 - 00:58:22.995, Speaker B: Sorry. I still want to go back to an earlier question about how you see yourself against the Ethereum L2s in terms of performance. What would you say is the. Or what are the top five? Maybe top three to five Ethereum L2s. How would you rank the top five in terms of performance? So I'll give you a few options. There's Eclipse that's trying to move the SVM to Ethereum. I don't know why you're smiling, but there is also Movement who tries to move to Ethereum? And then there's Arbitrum working on Stylus.
00:58:22.995 - 00:58:34.113, Speaker B: What else is there? I mean there's a bunch of ZK roll ups as well. How would you rank them? Performance wise or. It's hard to say.
00:58:34.209 - 00:58:43.125, Speaker C: I think it's very hard to say. Yeah, I think that they're kind of optimizing for different things, but I think that.
00:58:43.745 - 00:58:56.565, Speaker B: Do you think bringing the SVM or the moviem to Ethereum can reach within one order of magnitude to Monad in terms of performance?
00:58:57.275 - 00:59:25.083, Speaker C: No. I think that at the end of the day the EVM is extremely important. It's important because most developers are building for the evm. They want to build for a common standard. They don't want to have the vendor lock in problem of building for an alternative standard and then being very limited in where they can redeploy. And also the EVM is really powerful. It's very battle tested.
00:59:25.083 - 00:59:54.227, Speaker C: It's getting better every day. There's better tooling every day. And also for Monad and for other research orgs, there's an effort to make the EVM better over time by adding support for new pre compiles or opcodes or behaviors. So it's not just a static thing. But it is in my opinion the most important thing. It's like where the developers want to be, therefore it's important thing.
00:59:54.291 - 01:00:03.055, Speaker B: Can Eclipse be as fast and cheap as Lana? And can movement be as fast and as cheap as Aptos and Suic?
01:00:03.435 - 01:00:35.715, Speaker C: I think so. I mean there's no inherent reason that they couldn't. And in some senses there is an advantage in the sense that they don't have to have consensus. So that removes overhead. But on the other hand they're limited by the cost and availability of the da, which we really haven't seen battle tested in any significant way. And DAs are really just. Or like a good DA, like a good decentralized data availability layer is really kind of like a layer one itself.
01:00:35.715 - 01:01:17.965, Speaker C: Like it has consensus, it has globally distributed nodes. There's fault tolerance, there's byzantine fault tolerance. So you know, so there's some bad actors amongst the nodes. System can still stay up and still serve the purpose. It's basically a layer one. So we would need to see those DA systems be performant to the degree of a high performance layer one with high performance consensus, which I'm actually a little bit skeptical about because the DA also has to be performant and decentralized, globally distributed, which means high performance consensus, which to my knowledge doesn't really exist right now. Like the DAs are using tendermint under the hood.
01:01:17.965 - 01:02:08.061, Speaker C: That's a very limited consensus mechanism that can support up to a hundred nodes. Often the nodes end up getting co located, they're very close to each other, there are issues. So anyway, that's one specific thread of thought I have about high performance L2s and the bottleneck B and da. I think the other thing though, which actually I feel is more important is what do users ultimately want? Like what, where will users ultimately go and to what extent? Like you're asking, like, will Eclipse be more performant than Solana? But I think the more interesting question is why would users go to Eclipse instead of going to Solana given that it's the same apps and the answer that people have given is like, oh, it's because Eclipse is more Ethereum aligned. And I, yeah, I just have a hard time imagining.
01:02:08.133 - 01:02:20.425, Speaker B: My answer is native eth. The eth. Eth. The asset can go to Eclipse natively and it cannot go to Solana natively. And ETH is a great asset that a lot of people hold.
01:02:21.365 - 01:02:24.501, Speaker D: I see Salon is a pretty good asset.
01:02:24.573 - 01:02:27.385, Speaker B: Salana is a pretty good asset. It's getting there.
01:02:27.885 - 01:03:01.015, Speaker C: There are trade offs. Yeah. I mean, it's. I do think that for any layer one, building a brand is like, the brand is a very important part and the brand is like the community. It's the feelings that people have about, like, being in that environment, using apps there. So, you know, I would say right now, like, the challenge of being something that is a little bit something, a little bit something else is actually building a coherent brand, if that makes sense.
01:03:01.095 - 01:03:01.663, Speaker A: Yeah.
01:03:01.799 - 01:03:02.943, Speaker C: Oh, actually, one thing.
01:03:02.999 - 01:03:03.359, Speaker A: Yes.
01:03:03.447 - 01:03:19.475, Speaker C: I. I tweeted the other day, like, what's your favorite meme template? And I was hoping that I could bait intern into replying with his favorite meme template. Yeah, I didn't see, but I know what your favorite meme is.
01:03:20.615 - 01:03:21.515, Speaker D: Which one?
01:03:22.345 - 01:03:24.605, Speaker C: It has to be the bell curve.
01:03:26.625 - 01:03:28.657, Speaker B: It's the meme template of the decade.
01:03:28.801 - 01:03:29.641, Speaker C: It has to be the bell curve.
01:03:29.673 - 01:03:52.655, Speaker D: It is one of the best memes of all time. So my favorite thing with meme templates is when you get a good. When you get a good template and then you remix it. So it still is the same template, but it's like a different variation of it. My little brother was the first person I ever saw doing this. I'm like, these are the best things I've ever seen.
01:03:52.735 - 01:03:53.047, Speaker A: Wow.
01:03:53.111 - 01:04:07.735, Speaker D: Like, please keep doing this because these will hit. Because, like, you. You get used to seeing the meme format, and then when you see the same format, it's like the purple Pepe. Right. You're like, I get it. This is a new take on it. And I love that you have some.
01:04:07.775 - 01:04:15.741, Speaker A: Affiliation just like dog with hat. Right. Like, you see the hat and you're like, oh, okay. And then it's on someone else, like Trump or Biden or whatever.
01:04:15.933 - 01:04:22.589, Speaker D: Yeah. Remixed, Popular formats Remix. Like my favorite. It's a little esoteric.
01:04:22.637 - 01:04:22.861, Speaker A: Yeah.
01:04:22.893 - 01:04:29.997, Speaker D: Of an answer, but Mashups. Yeah. I like the Chess one. That Sherlock Hoddles was the first guy I ever saw post it.
01:04:30.141 - 01:04:31.845, Speaker C: Oh, that one. That was a good one.
01:04:31.885 - 01:04:32.285, Speaker D: That's a really.
01:04:32.325 - 01:04:33.385, Speaker B: The Chess one.
01:04:35.005 - 01:04:36.613, Speaker D: We don't have to dive too far into that.
01:04:36.669 - 01:04:37.589, Speaker C: Yeah, we don't need.
01:04:37.637 - 01:04:39.585, Speaker D: It's on my timeline a little bit ago.
01:04:40.115 - 01:04:50.739, Speaker A: Oh, well, I forgot to ask you this. What about. What do you think about hyperliquid? I didn't look into it, but everyone's just like, oh, you know, a monad competitor. I haven't looked into it at all.
01:04:50.787 - 01:04:51.851, Speaker B: That's the new meme.
01:04:52.003 - 01:04:58.659, Speaker A: They're trying to meme this. So I'm just trying to understand what if you have looked into it. If you can comment on it. Thoughts?
01:04:58.787 - 01:05:03.155, Speaker C: I would say that's middle of the bell curve thinking perfect.
01:05:03.275 - 01:05:04.815, Speaker A: I haven't looked into it, but.
01:05:06.325 - 01:05:18.985, Speaker D: And I'll say I like them in case they watch this so that you can have both sides of it. A lot of people that I know that I really respect their opinion think that it's. It's a cool thing that's worth pursuing.
01:05:19.565 - 01:05:26.661, Speaker A: I don't even know what they're doing, so that's why I was curious in terms of why they're comparing Monad to hyperliquid at all.
01:05:26.773 - 01:05:30.277, Speaker D: If I was on the hyperliquid team, I would for sure be doing. That's a great.
01:05:30.341 - 01:05:31.021, Speaker A: It's a good meme.
01:05:31.093 - 01:05:31.421, Speaker D: Yeah.
01:05:31.493 - 01:05:38.575, Speaker A: Oh, okay. So it's a meme. Okay, perfect. All right, we'll leave it at that. Thanks for tuning in and we'll catch you guys next time.
01:05:38.735 - 01:05:39.447, Speaker D: Thanks for having us.
01:05:39.471 - 01:05:40.471, Speaker C: Yep, thanks.
01:05:40.663 - 01:05:54.799, Speaker A: As always, the views expressed in the Good Game podcast are personal to the speakers and do not necessarily reflect the views of any other person or entity. Nothing here should be construed or relied upon as investment, legal, tax, or other advice.
01:05:54.967 - 01:05:56.335, Speaker B: Thanks for listening to Good Game.
01:05:56.415 - 01:05:58.655, Speaker A: Don't forget to subscribe. We'll see you next week.
