00:00:00.400 - 00:00:04.085, Speaker A: Welcome to Goodgame. Your no BS insights for crypto founders.
00:00:08.025 - 00:00:21.577, Speaker B: Most people you'll talk to have this thesis, which is the next billion users and crypto will probably come through web 2.5 gaming. The thought being that they have distribution. People are excited. Why are you laughing?
00:00:21.641 - 00:00:22.265, Speaker A: Why are you laughing?
00:00:22.345 - 00:00:23.889, Speaker C: I just can't stand that thesis.
00:00:24.017 - 00:00:24.685, Speaker A: But.
00:00:26.775 - 00:00:33.663, Speaker C: We'Ve talked about this before. The Web 2.5. This whole narrative is so annoying. It just rubs me the wrong way.
00:00:33.719 - 00:00:45.071, Speaker B: It rubs me the wrong way too, but I have to admit, it's plausible. Right? What people forget is it takes four years to make a video game today. Right? And we haven't been making serious attempts at crypto video games for four years yet.
00:00:45.143 - 00:01:28.415, Speaker A: Looking for your next startup idea in crypto? Check out our request for startups list and get inspired at Alliance XYZ Ideas. Welcome to goodgame. Today we're in Berlin. We brought on Will, who is our on chain gaming expert, and we thought today we could dive deep into on chain gaming, especially given the fact that Paradigm recently published an article and there's been a lot of new activities around on chain gaming with startups like Primodium that came out of our recent batch. And so why did we bring Will here to speak about on chain gaming? And so maybe, Will, you should give a quick background on your history of games.
00:01:29.235 - 00:01:52.245, Speaker B: Sure. Like background on me. So I'm a PhD in game design. I did eight years masters and then PhD. The focus was on mechanism design and games. How do you design games and their rules specifically to get players to do the things you want them to do. And I left that world.
00:01:52.245 - 00:02:30.617, Speaker B: I fell in love with crypto, and crypto had no place for games. In 2017, how'd you get into crypto? So it was a speakeasy in New York and my cousin Dan, who's at Paradigm handling the people who wrote that paper, he tells me about Bitcoin and he's like, there's no future for you in games, Will. You have to leave that industry. The salaries are. They don't want to hire you anyway. Like, I tried to go to Ubisoft for a job and they're like, would you like to do Q and A? You could walk into a wall over and over again for eight hours a day until you've paid your dues.
00:02:30.681 - 00:02:31.605, Speaker A: Sounds exciting.
00:02:32.025 - 00:02:50.597, Speaker B: Please, no. I thought I paid my dues with this stupid doctoral degree. And so he starts explaining how SHA256 works and ECDSA, and I'm like, oh boy. And he's like, some of These black boxes will. You don't want to open them. Just pretend like they work. I'm like, there's no way I'm going to pretend these things work.
00:02:50.597 - 00:03:12.285, Speaker B: So he recommends mastering bitcoin. I read it cover to cover four times because I'm non technical. Brutally. I'm just texting him, how does this work? How does this work? I think I broke bitcoin. Did I break bitcoin? He's like, no, you didn't break bitcoin. Yeah. So then I go to meetups, every meetup I can find in crypto.
00:03:12.285 - 00:03:15.813, Speaker B: And it's just like shitcoin peddlers after Ponzi scheme artists.
00:03:15.869 - 00:03:16.749, Speaker A: I mean, nothing's changed.
00:03:16.797 - 00:03:48.257, Speaker B: Everybody, everybody wants me to run a dash node, like 400k for dash. No, no, thank you, sir. I don't. And then this, this one meetup, I hear that Catalaxy, a startup in Montreal that's helping auditors audit financial statements, is hiring someone to do marketing, someone to start, like, selling crypto to the masses and grow their funnel. I'm like, well, I know how to say things. I can market this for you. I know how it works.
00:03:48.257 - 00:04:13.043, Speaker B: And kind of like how I got my job with alliance, the fact that I knew Dan Easy in. So that was it. Started working there, did three and a half years. All my bosses were bitcoin maxis. And it turns out that those don't play so nice in enterprise. So I got promoted by default to head consultant researcher in crypto. And then, yeah, then I joined you.
00:04:13.059 - 00:04:39.581, Speaker A: Guys, maybe diving deeper here. So your love of on chain or, sorry, gaming. Right. You did your PhD in gaming, got into crypto, and now there's this new convergence of gaming and crypto. And you know, we've seen many iterations of crypto gaming, right. You have Axie, Infinity and others that are more web two, Web two and a half. And now there's bleeding edge tech.
00:04:39.581 - 00:04:49.741, Speaker A: And that starts with Dark Forest, I think was one of the first on chain games. And so the question is, what is on chain games? And then we could talk a bit about Dark Forest.
00:04:49.853 - 00:05:16.915, Speaker B: Yeah, so the big distinction that you want to make in the crypto world is between games that are partially on chain and games that are fully on chain. So thinking about great successes, Step and Axie, these are games that really use crypto in interesting ways. But the logic of those games is off chain. It's run on a centralized server, which gives it massive scaling and the ability to build and update in interesting ways.
00:05:18.655 - 00:05:22.727, Speaker A: Let's Compare it to Web2World of Warcraft, sure.
00:05:22.791 - 00:06:06.693, Speaker B: So in World of Warcraft you play the game in these dungeons, you bring your XP in the form of your level and your loot and you fight the dragon and everything happens on a centralized server. And at the end of the day you can take your loot and you go to Orgrimmar, right? Which is like the auction house for the hoard, and you can list the items you found, try and make some money off them, maybe buy things you needed. And all of that happens on Blizzard servers. And as like Vitalik famously complained, you're at the mercy of Blizzard in this way. So if they nerf the items you've bought, they no longer have the same value you had when you got them. You get rugged by Blizzard on the axie front. That game part in the dungeon, that's still in the central server.
00:06:06.693 - 00:06:11.477, Speaker B: But Orgrimmar and all the trading that happens, the marketplace, the auction house, that's.
00:06:11.501 - 00:06:13.445, Speaker A: On chain along with their NFTs. Right.
00:06:13.485 - 00:06:43.891, Speaker B: And along with the NFTs. So the idea here is that you've taken away some of the power of the builders and the promise was that these items would be permanent, that these items would be owned by you and you could get all the financial benefit of any kind you wanted. You could use them in defi to lend, you could borrow them, you could rent them. And the idea was that we'd have a new financial paradigm for games. And so far this seems like at least plausible.
00:06:44.043 - 00:06:51.459, Speaker A: Yeah, I mean it seems like that's a great way to acquire users. And scaling wise, the logic is still on a centralized server, right?
00:06:51.547 - 00:07:06.617, Speaker B: Yeah. And most people you'll talk to have this thesis, which is the next billion users in crypto will probably come through web 2.5 gaming. The thought being that they have distribution. People are excited. Why are you laughing?
00:07:06.681 - 00:07:07.305, Speaker A: Why are you laughing?
00:07:07.385 - 00:07:08.929, Speaker C: I just can't stand that thesis.
00:07:09.057 - 00:07:09.725, Speaker A: But.
00:07:11.825 - 00:07:19.633, Speaker C: We'Ve talked about this before. The Web 2.5. This whole narrative is so annoying, it rubs me the wrong way.
00:07:19.689 - 00:07:27.707, Speaker B: It rubs me the wrong way too. But I have to admit, it's plausible. Right. What people forget is it takes four years to make a video game today.
00:07:27.801 - 00:07:28.167, Speaker A: Okay?
00:07:28.231 - 00:07:33.015, Speaker B: Right. And we haven't been making serious attempts at crypto video games for four years yet. Right.
00:07:33.135 - 00:07:39.399, Speaker A: Are there any like anyone that you could point to today that you could say, well, you know, maybe these guys?
00:07:39.567 - 00:08:04.921, Speaker B: No, because they're all under NDA. I'm under NDA, so I can't. But like for the ones I know about and for the ones I don't, know about. I mean these video game studios are so tight lipped because they actually understand how to market products a lot better than crypto games do. Which is like you have a very narrow window to hype up your game, a very narrow window to then sell it immediately after. And then it's long tail and you get almost nothing afterwards.
00:08:05.033 - 00:08:07.273, Speaker A: The shelf life for these games are very short.
00:08:07.329 - 00:08:13.865, Speaker B: Yeah, I mean Diablo 4, all the pump and hype happens like in a very narrow range. They sell and now sales are gone.
00:08:13.905 - 00:08:16.793, Speaker C: Wait, what happened to it? Diablo 4 came out like a few months ago.
00:08:16.849 - 00:08:19.929, Speaker B: Yeah, I mean, and it had its moment in the sun and they stopped talking about it.
00:08:19.977 - 00:08:20.633, Speaker C: It's dead already.
00:08:20.689 - 00:08:28.089, Speaker B: Yeah, but it's not dead, but like it's dying. It's, it's pretty sad. The game wasn't fun. I mean it's too bad. I liked it to a certain extent.
00:08:28.137 - 00:08:29.881, Speaker A: But was it just the logic of the game?
00:08:29.913 - 00:08:35.793, Speaker B: It just didn't have the soul of Diablo 2. And I think that they haven't reinvented the system in any meaningful way.
00:08:35.929 - 00:08:40.605, Speaker C: Side question, which game has the longest shelf life in the history of gaming?
00:08:40.985 - 00:08:44.409, Speaker B: I mean they still sell Tetris. That's old as shit.
00:08:44.497 - 00:08:46.553, Speaker C: The triple A games. I'm on the AAA games.
00:08:46.609 - 00:08:50.779, Speaker B: Oh, oh, oh, oh, Good question. Starcraft.
00:08:50.827 - 00:08:51.579, Speaker C: Starcraft.
00:08:51.707 - 00:08:52.859, Speaker A: I mean I still play Starcraft.
00:08:52.907 - 00:08:53.587, Speaker C: I still do.
00:08:53.691 - 00:08:54.867, Speaker B: But you play Starcraft 2.
00:08:54.971 - 00:08:57.655, Speaker C: No, I wouldn't play 2. Sucks.
00:08:58.675 - 00:09:25.925, Speaker B: People keep playing Ocarina of Time. Like they keep re upgrading the graphics a bit and relaunching on all the new platforms because that was such a great Zelda game. But generally you should think about games like any other tech. Right. They're not like paintings, right, where like this painting is timeless and will be a good painting forever. Like we get better at making games every year and if you're playing an older game, you're playing with worse tech. It's like saying, nah, I prefer Ms.
00:09:25.925 - 00:09:29.181, Speaker B: DOS to Windows 95. Like no you don't.
00:09:29.253 - 00:09:54.191, Speaker C: You see the reason why Starcraft has lasted so long. Starcraft 1. Yeah, lasted so long, is they continuously improved. Like every month they release a new version to balance the games. So in Starcraft you have three races, right? Like Terrence, Protoss and Zergs. And when Starcraft first came out, the three races weren't balanced in terms of like attack, defense, et cetera. But they spent like years to balance out the three races.
00:09:54.191 - 00:09:58.647, Speaker C: And once they're balanced, the games just becomes much more fun.
00:09:58.711 - 00:10:02.319, Speaker B: Yeah, and you have to keep rebalancing and this will be important for our conversation later.
00:10:02.407 - 00:10:02.887, Speaker C: Yeah.
00:10:02.991 - 00:10:04.135, Speaker B: Because metas evolve.
00:10:04.215 - 00:10:04.567, Speaker C: Yes.
00:10:04.631 - 00:10:09.447, Speaker B: Right. And what you think is a balanced game isn't when someone discovers a new way to play it.
00:10:09.471 - 00:10:10.195, Speaker A: Yeah, yeah.
00:10:10.295 - 00:10:41.065, Speaker B: And this is actually really tough for Starcraft 2 because on launch in North America, Protoss is considered OP, like overpowered. But in Asia, Protoss is considered underpowered. And that Zerg needs a Nerf. And because players have different player behaviors in these different micro communities, the game was on balance for each one based on player preference. Dota has the same problem with balance at different skill caps. So like pro Dota players, the game needs to be balanced for them.
00:10:41.105 - 00:10:43.165, Speaker A: And Dota is what Dota is.
00:10:43.465 - 00:11:15.085, Speaker B: Okay. DotA is a MOBA multiplayer online battle arena. It was a mod from Warcraft 3. It spawned League of Legends and Dota 2 and Heroes of the Storm and Heroes of New Earth and like several others in this genre. And Dota think of it as like an RPG that lasts 45 minutes and you play five versus five. So you're going to level up, you're going to buy items, it's going to be super fun, you're going to kill the enemy base and then the game's over. You got to restart with a new team.
00:11:15.085 - 00:11:43.745, Speaker B: And like, there's 120 heroes, they all behave radically differently. No two games are ever the same because of that various mix. And the problem is just like it has to be balanced for pros, and yet the vast majority of people are not pros. And so a lot of heroes are just unplayable at a lower levels because they're tuned to people who can click way faster than you and think way faster than you. Anyway, so balance is tricky.
00:11:44.045 - 00:12:07.583, Speaker A: So going back to Crypto, so what we talked about here was the shelf life of games and how games are resilient over time. Certain games are. Certain games aren't like Diablo. And you know, I don't think that we have spent enough time in crypto on gaming. Right. You know, Axie Infinity maybe came out two years ago, Right?
00:12:07.679 - 00:12:08.135, Speaker B: Longer.
00:12:08.215 - 00:12:09.435, Speaker A: Longer. So.
00:12:10.015 - 00:12:11.207, Speaker B: But more gameplay updates.
00:12:11.271 - 00:12:20.007, Speaker A: Yeah, yeah. And so let's say Axie was one. You know, there are a couple other web two, two and a half games, web 2.5 games and CryptoKitties. CryptoKitties.
00:12:20.071 - 00:12:21.199, Speaker C: That also counts as a game.
00:12:21.287 - 00:12:34.695, Speaker B: I think so, yeah. Yeah. And the vast majority of the game was on chain. Yeah. But the interesting part about breeding cats to get interesting visuals, the visuals engine was off chain. Sure. So which makes sense.
00:12:34.815 - 00:12:37.751, Speaker A: But what was the game behind it, outside of Breeding and getting.
00:12:37.863 - 00:12:43.431, Speaker B: So, yeah, no different types of cats. Yeah, no, I take my cat, I fuck your cat. Our new cat has a sailor hat. That's the goal. Right?
00:12:43.463 - 00:12:46.239, Speaker A: Like, right, but then you try to sell that cat for more money.
00:12:46.287 - 00:12:50.783, Speaker B: Yeah, well then I put up my sailor cat hat for fucking. Right. It can be. It can sire your future cats.
00:12:50.839 - 00:12:51.359, Speaker A: Right, right.
00:12:51.407 - 00:12:55.865, Speaker B: But you only get a certain number of generations out of it and then it gets old and you have to put it at the pasture.
00:12:55.945 - 00:13:11.977, Speaker C: Okay, so there's a very fundamental question here. What is the definition of a fully on chain game? Because in CryptoKitties you just said that the graphics is off chain. So let's define. But you still consider cryptokitties as a fully on chain game. So let's define fully on chain games.
00:13:12.001 - 00:13:51.045, Speaker B: Yeah, yeah, yeah. So we need to have the entire game state, so all the relevant things to who is going to win on chain. And we have to have all the game logic on chain so that all the moves happen fairly and in a transparent way on chain. So game logic, game state on chain. That's the general view, because we're after trustlessness as like a core principle. The problem, so to speak, with a game like Axie is that Sky Mavis can mint unlimited axies if it wanted, because it controls the server that tells the blockchain what to mint and what to burn. Right.
00:13:51.045 - 00:14:13.911, Speaker B: And cryptokitties didn't have that power. It couldn't change the nature of the smart contracts that were built theoretically, assuming there was no admin controls. The tricky part though is what made CryptoKitties interesting to play was that you didn't know how the genetics engine worked. You didn't know.
00:14:13.943 - 00:14:15.155, Speaker A: Yeah, it was randomized.
00:14:15.615 - 00:14:57.917, Speaker B: Well, you would have this long ad like string that would represent your cryptokitty. It's like a 32 bit thing. And that string would be interpreted by some engine at DAPR and would push to a front end a kitty with a sailor hat if you were lucky. And the logic of how that string turns into that hat was off chain because they didn't want to let people reverse engineer it, game it and game it. And so if the game is to breed sailor hats, that piece of game was sadly off chain. Even though the logic was on chain. Yeah.
00:14:57.917 - 00:15:05.421, Speaker B: I mean, you could do it in maybe some ZK or some fully homomorphic encryption or some like enclave on a TE.
00:15:05.493 - 00:15:07.437, Speaker A: But back then, this was 2017, right.
00:15:07.621 - 00:15:08.503, Speaker C: Nothing was ready.
00:15:08.589 - 00:15:17.067, Speaker A: And funny enough, 50% of all the transactions that happen on Ethereum happened because of cryptokitties I think it was 75% actually.
00:15:17.131 - 00:15:21.499, Speaker B: Yeah, I mean we broke Ethereum. Right. And that was the, that that's when.
00:15:21.547 - 00:15:23.691, Speaker C: You know that's the first impetus for scaling Ethereum.
00:15:23.723 - 00:15:32.815, Speaker B: Yeah, first impetus for scaling. And when my heart broke. It's like great games, crypto, they're coming together. Oh no. Like we found PMF and then we just. And then we broke. And then we broke it.
00:15:32.815 - 00:15:40.729, Speaker B: And people today often keep trying to make games, not realizing that if you do find pmf, you'll break the chain. Just like cryptokitties.
00:15:40.777 - 00:15:41.129, Speaker C: Right.
00:15:41.217 - 00:15:47.977, Speaker A: Well, I mean now you have like roll ups and things like that that can semi scale. But I mean there are other inherent issues with that which we'll talk about later.
00:15:48.121 - 00:15:53.913, Speaker B: But like even if you put cryptokitties on optimism or Arbitrum and you get 40x, you get 10x scaling.
00:15:54.049 - 00:15:55.697, Speaker A: So spinning up their own roll up. Yeah, yeah.
00:15:55.721 - 00:15:56.129, Speaker B: So these people.
00:15:56.177 - 00:15:56.641, Speaker C: We'll talk about this.
00:15:56.673 - 00:15:57.393, Speaker A: Yeah, we'll talk about this.
00:15:57.449 - 00:15:58.625, Speaker C: To summarize the definition.
00:15:58.705 - 00:15:59.345, Speaker B: Yeah.
00:15:59.505 - 00:16:08.695, Speaker C: The states are on chain. The game logic is on chain. But the graphics, the front end can be off chain. Off chain and probably should be off chain at this time.
00:16:08.735 - 00:16:21.167, Speaker B: Just think about Uniswap. Right? Like any front end can interact with Uniswap. In fact, you can interact with Uniswap in the command line if you have the right interface. Right? That's right. It's just totally irrelevant how you touch the contracts and the moves are unchanged.
00:16:21.351 - 00:16:44.981, Speaker C: Okay, so just diving deeper into the nuance of this definition. Let's take Counter Strike first shooter game. So hypothetically, if we're to put Counter Strike as a fully on chain game, does it mean that every single move, like the shooting and the moving, like the infinitesimal movements are on chain? Is that what it means to be fully on chain?
00:16:45.053 - 00:16:46.205, Speaker B: Yes, unfortunately.
00:16:46.325 - 00:16:49.989, Speaker C: And therefore Counter Strike is not a good game to be put on chain today.
00:16:50.117 - 00:16:58.755, Speaker B: It's very sadly. No, because think about it. Every frame of Counter Strike is a new tick in the game state. And so you need to update everything.
00:16:58.835 - 00:17:04.939, Speaker A: The movement of the character. I feel like the movement is mostly visual. Right. And then like. No, the action.
00:17:05.067 - 00:17:09.099, Speaker B: No, no, because you're where your character is, is where it can be shot. So you need to make sure.
00:17:09.187 - 00:17:09.571, Speaker A: Yeah.
00:17:09.643 - 00:17:16.043, Speaker B: And not just where your character is and where you're shooting, but where you're looking. Right.
00:17:16.099 - 00:17:17.819, Speaker A: So see like an item because you.
00:17:17.827 - 00:17:37.647, Speaker B: Need to be like. And that's really hard because how do you hide from the player what they can't see? Right. It's easy when you have a centralized server doing it, but it's super hard on a blockchain to say you only get this 90 degree cone of vision on the map. Right. And if you turn then you get that 90 degree vision on the map. Like it's just like.
00:17:37.831 - 00:17:52.331, Speaker C: So when you play Counter Strike, the client almost like continuously, like every like 10 milliseconds or something like that, sends some information about where you are to the server so that the server continuously receives your location so that it can.
00:17:52.363 - 00:18:00.843, Speaker B: Have other players know where your location is. Except not know. Right. Like, because if you're behind somebody, the central server has to know you're behind them.
00:18:00.899 - 00:18:01.379, Speaker C: Right.
00:18:01.507 - 00:18:04.955, Speaker B: The other person has to be able to shoot you. Theoretically. But can't see you.
00:18:05.035 - 00:18:05.459, Speaker C: Yeah.
00:18:05.547 - 00:18:19.645, Speaker B: So like that's, that's a really tricky situation. And on top of it there's an optimistic piece in the games to make them feel smoother. There's guessing about where you're going to go and where you're going to be to make everything feel better. And then when things don't align, there's rollback.
00:18:19.725 - 00:18:22.021, Speaker A: Yeah. What do you mean by making it feel better?
00:18:22.093 - 00:18:27.437, Speaker B: So like you want the game to be fluid and move super smoothly. Right. But like to handle latency.
00:18:27.501 - 00:18:27.877, Speaker A: Okay.
00:18:27.941 - 00:18:37.865, Speaker B: It's almost like there's a proactive prediction on where the next thing's going to happen. And then if that isn't true or if optimistically that doesn't happen, you have like a stutter and you go backwards. Right.
00:18:38.725 - 00:18:40.997, Speaker C: That's why building AAA games is so hard.
00:18:41.061 - 00:18:41.677, Speaker B: Oh my God.
00:18:41.781 - 00:18:56.083, Speaker C: The two toughest computer science problems I've seen in like consumer applications or in the real world is gaming and high frequency trading. And in both cases the software is written in C or C. Yeah, you.
00:18:56.099 - 00:18:56.931, Speaker B: Need really fast shit.
00:18:56.963 - 00:18:58.095, Speaker C: You need really fast shit.
00:18:58.635 - 00:19:14.505, Speaker B: And if you think about. Okay, we'll talk about that problem. Remember to talk about this when we talk about fully unchained games because the same problem happens with trying to synchronize clients across multiple players. Okay. So Counter Strike is a no go. Pick another one.
00:19:16.285 - 00:19:17.341, Speaker C: What's another good game?
00:19:17.373 - 00:19:18.225, Speaker B: Starcraft.
00:19:18.645 - 00:19:24.629, Speaker C: Well, starcraft is the same thing. The movements are like you need to continuously update the server, so it's slow.
00:19:24.677 - 00:19:25.585, Speaker B: StarCraft.
00:19:25.885 - 00:19:26.621, Speaker C: Yeah.
00:19:26.773 - 00:19:29.385, Speaker B: So chess, right.
00:19:29.725 - 00:19:32.125, Speaker C: What about, what's that game? Civilization.
00:19:32.245 - 00:19:32.885, Speaker B: Civilization.
00:19:33.005 - 00:19:33.749, Speaker C: Turn based game.
00:19:33.797 - 00:19:34.333, Speaker B: Yeah. Great.
00:19:34.389 - 00:19:37.357, Speaker C: Or Total War. The turn based part of Total war.
00:19:37.381 - 00:19:46.069, Speaker B: Yeah. So Civilization I think is a good one to go with because most people have played it or at least heard of it. I mean we're in iteration six. It's a masterpiece of a genre.
00:19:46.237 - 00:19:47.525, Speaker C: Three isn't the masterpiece.
00:19:47.645 - 00:20:05.665, Speaker B: Yeah, a lot of people love Civ 3. I think that's probably right. Like, I think they made Civ like easier for casual audiences over time. But there's some nice ideas in the later ones still. Like, okay, and I'm probably. If you played three today, you'd be like, fuck, it's not that good. I'm misremembering how good this game was.
00:20:05.665 - 00:20:51.175, Speaker B: Okay, so what's wrong with Civ? It has great features, it's turn based. I even like that Civ is single player because you don't have to wait for everybody to make the moves. But you can play civ multiplayer and then be open to other people making moves. You just kind of need to be live and in sync and hope the blockchain doesn't slow down or break. So if you have a pretty reasonable blockchain system, that's pretty good. The problem is the sheer amount of compute that Civ does. So I don't know if you've ever made a move in like late game Civ, but sometimes you have to wait like two minutes really, for all the bases to move, all the different units to do their things, all the fog of war to disappear or reappear.
00:20:51.175 - 00:21:33.847, Speaker B: And that compute, each one of those is effectively a transaction right on chain. So there's no way you can put something as complicated as civilization on chain because there's just not enough computational space. And so what could you do? You could maybe roll it up like in a ZK circuit and just push that. This is the new state after all of these moves were made. And the compute is done off chain. So we have a cohort company called Nexus that does off chain compute. We have other projects that are being built out there that are built to do stateless off chain compute so that you can just use the state on chain, do the compute, push the result back to chain.
00:21:33.847 - 00:21:39.035, Speaker B: And people have said, like, what are things even going to be for? Well, they could be for civilization, theoretically.
00:21:39.655 - 00:22:00.821, Speaker C: We give our audience a couple of examples of potentially putting some games on chain or why it would not work, or why putting them on chain does not work. But let's motivate the idea of a fully on chain game. Why do we want to put games on chain in a full way? Like putting all the states and logic on chain? What's the point of that?
00:22:00.893 - 00:22:38.097, Speaker B: Yeah, so far the point has been to nerd snipe engineers who are just bored at work. Right? And I'VE spoken to them in my DMs, right? Like they really should be working on their other companies, but they want to put this on chain. No, the, the, the. There are several reasons, but there are two dominant ones and it's good to like split the conversation and they'll reconnect later. The first one is clearly financialization, right? So it's the same difference between like CEFI versus DeFi, right? Like why do we want Uniswap so badly to be on chain and not just like run on Hayden's personal computer and then he pushes the result.
00:22:38.161 - 00:22:49.637, Speaker A: Let's talk about financialization. Yeah, please. In Web two there is financialization, right? You talked about the marketplace and others. So in Ogrimar, how big are these markets today?
00:22:49.761 - 00:23:05.349, Speaker B: Yeah, they can be big. And at one point Steam with its skins was doing 8 billion in volume. Now that was because people were gambling with the skins illegally online and using it to skirt KYC law. But there's real skin value volume for Web2Assets and Roblox.
00:23:05.397 - 00:23:16.477, Speaker A: I think the last I read, one third of their entire gross revenue comes from third party assets, which is insane. Like skins and all of the other.
00:23:16.661 - 00:23:47.191, Speaker B: Gaming assets, even, even the not fully unchained games like Axie, like we were saying, like those NFTs were worth a lot of money and they're moving around. So it's, it's this financialization which is very big, which is already big, plus trustlessness. Right? So you can be sure that the NFTs coming out of this game and the gold or the tokens coming out of this game were fairly obtained, that there was no way to mint more. Right?
00:23:47.263 - 00:23:49.975, Speaker A: So scarcity, right? You have that element as well.
00:23:50.015 - 00:24:10.497, Speaker B: Like, let's say Vitalik really did have a masternode and whenever he felt like it, he could print more eth for himself. Who would trust Ethereum? Right? Who would build on top of Ethereum? Right? No one. Right. That's scary because you can get rugged at any time. But with a fully on chain game, with the trustlessness that comes with these assets, now everyone has an even playing.
00:24:10.521 - 00:24:12.321, Speaker A: Field because they all know the logic is on Chain.
00:24:12.433 - 00:24:18.937, Speaker B: Even the developers, even if they wanted to do something couldn't, right. They're beholden to the protocol they made. The protocol's alive.
00:24:19.041 - 00:24:23.977, Speaker A: But I mean it's the same thing as saying, well, I trust Blizzard. And Blizzard hasn't really rugged anyone, right?
00:24:24.161 - 00:24:25.785, Speaker C: Outside of they rugged metallic.
00:24:25.865 - 00:24:29.337, Speaker B: I mean, yeah, famously they rugged metallic. They got rid of his face.
00:24:29.441 - 00:24:48.777, Speaker A: But I mean that's minute, right? Compared to. So what I'm trying to get at is why is this important and how is this more, you know, like, why should we have on chain gaming from that perspective of like, you know, Blizzard has built games, they haven't rugged their users. So what's the edge here? I guess it's the question.
00:24:48.881 - 00:24:58.441, Speaker B: So with Blizzard, no one got to build really on top of Blizzard in meaningful ways and monetize in meaningful ways. It's a very closed ecosystem.
00:24:58.553 - 00:25:01.753, Speaker A: Well, others, right. Like there's modding. Right. And modding is pretty big.
00:25:01.889 - 00:25:11.151, Speaker B: Yeah. But the. We had a company in our cohort, Primodium, it used to be called Critters. They built an NFT game on Minecraft. Right. This is a great example. Right.
00:25:11.151 - 00:25:31.061, Speaker B: Minecraft has lots of people building mods on top of it, and some of those mods could maybe monetize. But when they tried to monetize the NFTs, Minecraft said, no, we're deplatforming you. Right. We're just rugging this project. We have control over this ip. This is not yours to work with. Right.
00:25:31.061 - 00:25:34.229, Speaker B: But when you have a game that's fully on chain, the IP is gone.
00:25:34.357 - 00:25:36.309, Speaker A: No one can tell you what to do. You could do whatever you want.
00:25:36.357 - 00:25:38.797, Speaker B: Do whatever you want, build whatever you want on top of it.
00:25:38.821 - 00:25:39.517, Speaker A: This is big.
00:25:39.621 - 00:26:02.273, Speaker B: And then the financing is all built in. Right. Any mod you make, you can just charge tax to use it to play through. You think about how Uniswap can be an underlying layer for a protocol and that protocol can charge fees. Right. And then you could build a protocol on top. And so like, this is a game, this is a mod on top of the game.
00:26:02.273 - 00:26:06.345, Speaker B: And that mod charges fees to play through it to the underlying game.
00:26:06.425 - 00:26:16.521, Speaker A: So maybe give our audience an example and let's start with Dark Forest. Like, what is Dark Forest? And then talk about what does modding mean on top of Dark Forest.
00:26:16.673 - 00:26:44.595, Speaker B: Let's do it. So Dark Forest is based off a Web2 game called Galcon. And you may have played some version of it, which is you start with one planet in space, it has some ships on it. You can send those ships to take over a nearby planet. And now your original planet and this new planet are making more ships for you. You take these ships on these two planets and you can go take over more planets. And like this, your surface area keeps exponentially growing.
00:26:44.595 - 00:27:23.707, Speaker B: And eventually you run into enemies who are also trying to take over planets. And then it's a question of sending resources in the right place, the right time to conquer Space. This game was built fully on chain and it was a phenomenon. People were playing it 24, 7 for a week at a time, trying to win NFT prizes and trying to explore what it means. We had really great people like for instance Ansgaard Dietrichs, one of the Ethereum foundation researchers, rebuild the client for this game just so he could make moves faster than his opponents. Right. That's really powerful.
00:27:23.707 - 00:27:53.803, Speaker B: Nerd sniping Georgios, the CTO at Paradigm, rewrote the client to be headless and in rust so that you could have bots play the game way faster than humans and not go through any front end at all because the front end was actually painfully slow to work through. You had me and my team, Dark Forest Dao, build a smart contract on top of the game that would let people who were bad at it band together and share their points and act as a single player.
00:27:53.939 - 00:27:59.531, Speaker A: So you're actually bad at a game? Yeah, I mean every board game we play, you're pretty good.
00:27:59.723 - 00:28:14.653, Speaker B: To be good at Dark Forest is to be ansgardietrich. It's to be a killer dev. Right. Who can just build a better bot. And for the people who just are not that good, you can come with alternative solutions. So this was the, and this is.
00:28:14.669 - 00:28:20.269, Speaker A: Like the beauty about on chain gaming. It's like you don't have to be really good at it, but you can contribute in other ways.
00:28:20.357 - 00:28:43.271, Speaker B: Yeah. And look, people were really mad when I brought together hundreds of people to play as one player. That's pretty smart because like they're like, no, this is a game for like individual brilliant programming artists to prove their worth. And I was like, nuh, I'm going to simply, I'm going to brute force. Yeah, the code is law. Whatever I do is fair.
00:28:43.423 - 00:28:45.807, Speaker A: Well, I mean you could argue the same thing about bots. Right.
00:28:45.871 - 00:28:52.155, Speaker C: I was going to say that it reminds me that the telegram groups where a bunch of retail just work together to liquidate a whale.
00:28:53.535 - 00:29:25.623, Speaker B: So in or unibot. Exactly. So in season two we were like close to winning, but we weren't winning. And I came up with this last minute idea called the Remembered and I said, hey, I would go to people individually because their telegrams would be connected to their game wallet. Say hey, if you give me your empire, which is not going to win the game, I'll remember you. And I put remember in quotation marks and like to anybody in like 2022, that's like. Or 2021, that's a, that's an airdropper.
00:29:25.623 - 00:29:40.473, Speaker B: An NFT. That's the first thing I thought of. I want to be remembered. And so we created Discord. We had a Discord channel called the Remembered. Everyone who's remembered got invited to the Discord Channel. And we pumped our score and we made it to first place.
00:29:40.473 - 00:29:59.265, Speaker B: And this was done just. There's no smart contracts here. This is just social engineering. Right. And then we smart contracted it to be trustless to do the same thing with the Remembered. But as we got to first, one of the like devs of Dart Forest was like fuck these guys. Like this is not in the spirit of the game.
00:29:59.265 - 00:30:12.217, Speaker B: And they gave really good open source code and pointed our opponent ordng this different guild to like here's a high powered way of playing the game that you weren't using before. And then they just like leapfrogged us and crushed us.
00:30:12.321 - 00:30:13.281, Speaker A: Is that fair though?
00:30:13.393 - 00:30:17.457, Speaker B: I mean it's all fair. Code is law. You do what you want.
00:30:17.561 - 00:30:18.617, Speaker A: I guess it is.
00:30:18.801 - 00:30:26.223, Speaker B: And that's what's interesting because it's a new kind of play and so people are really excited. But you still can only have a thousand players at Dark Forest before you break X die.
00:30:26.329 - 00:30:37.555, Speaker C: Okay. To drive this point home, why a Web2 game, a non fully launching game, not able to achieve the experience you've had with your players.
00:30:37.715 - 00:30:56.893, Speaker B: Right. So the key piece was I was able to build a trustless smart contract on top of Dark Forest to allow players to give us their empires and prove that they gave us their empires. And then when we won a prize, have that prize be fractionalized to all the people who helped us to the.
00:30:56.909 - 00:30:57.693, Speaker A: Planet would be the.
00:30:57.749 - 00:31:17.949, Speaker B: Yeah. So like whatever, whatever final NFT prize we got would go into this contract. The contract would distribute and we got like 90% of the way there. Like we. Theoretically it was possible admittedly like you know, you have to move fast and break things. But we got most of the way there with this contract. And we did come in 33rd place the second time using this thing by banding 75 people together.
00:31:17.949 - 00:31:45.805, Speaker B: Even the first place player, Ordon GG, once it knew it had secured first place, started donating Empire pieces to us so they could have a bigger share and fraction of our prize too. They were going to win first and half of second smart. Right. And that kind of behavior of trustless banding together is impossible. It's never happened. Because no developer treats accounts as non human. Right? It wants only humans playing the game.
00:31:45.805 - 00:32:11.175, Speaker B: And here it was many humans pretending to be one smart contract. Right? Like one player yeah, yeah. These all became fictionally one player and the smart contract was dumb as shit. It's like when you receive points, score them and then keep track of who gave you points, right? But it. And so it had a planet, one tiny planet in the middle of space that no one really knew where it was. That planet never scored points. It just like it would be given someone else's planet.
00:32:11.175 - 00:32:31.135, Speaker B: That planet would have some points on it. It would score the points and then give back the planet for them to like make this valuable again for me, people give back the planet, it would score the points. So like we just did really funny, strange behaviors and more than that. So after we did that round, we hosted a contest in our DAO to rewrite the rules of Dark Forest.
00:32:32.755 - 00:32:42.283, Speaker A: Tell me more because like, well, once it's on chain, right, how do you petition everyone to approve the next layer of updates?
00:32:42.379 - 00:32:52.035, Speaker B: So Dark Force was played in like a week at a time, like a season. And every time the game was relaunched, it was launched with new rules to try new things to iterate.
00:32:52.155 - 00:32:54.091, Speaker C: Who launches the new game? Is it the dev or is it.
00:32:54.123 - 00:33:07.431, Speaker B: So the core devs were launching the new game, but they were like, we don't want this power anymore. We're going to give you like socially the power and we're going to teach you how to launch the next version of the game. So they gave our dao like the right to launch the next version.
00:33:07.463 - 00:33:09.087, Speaker A: Well, they gave everyone or just you?
00:33:09.151 - 00:33:56.423, Speaker B: So they. Well, they gave everybody the right. Everyone always could fork it open source and available, but they gave us the knowledge, know how and support and community support and their own discord servers direction to play our community around. And when we said, okay, with this opportunity, what are we going to do with it? Right? It's like it's a lot of power we get to design the new rules. So we asked everybody, what rules would you like to see? And then after everybody contributed their new rule ideas, the top thumbs up rules. So three of them got pushed to snapshot and we ran a snapshot where you got to vote on the rules that you wanted included based on your scores in the past versions of the game. That was cool because we had this open source, composable readable data on chain of your past scores and snapshot was connected to them pretty easily.
00:33:56.423 - 00:34:08.755, Speaker B: And so snapshot connects to these scores. People vote. And they decided ultimately to pick the rule set I had designed, which was that planets were destroyable and that the universe was collapsing.
00:34:09.095 - 00:34:12.751, Speaker C: The actual Dark Forest and the. Yeah, I was so Mad in the trilogy.
00:34:12.823 - 00:34:31.237, Speaker B: Exactly. Because you couldn't destroy planets. Like, that's the whole point of Dark Forest is you can destroy planets. Yeah, yeah. So we called it Death of the Universe and the community round went swimmingly. And then they gave more communities in Dark Forest the ability to launch the game. And the idea is like, we don't own this ip, we don't own this code.
00:34:31.237 - 00:34:33.785, Speaker B: You can fork it and do what you want with it, build with it, whatever.
00:34:34.925 - 00:34:40.837, Speaker C: So what happens if there's two teams building or proposing two different versions for the next season?
00:34:40.901 - 00:34:44.545, Speaker B: Yeah, I think you need to build social consensus on which one you'll do first and which one you'll do next.
00:34:45.325 - 00:34:46.077, Speaker A: Or work together.
00:34:46.141 - 00:35:11.117, Speaker B: Or work together. And what's interesting is what prize do you give? So the core team had the ability to mint NFTs that were not tied to the game. They're just like these commemorative NFTs, like a PO app. But they used this fancy Valhalla front end thing to do it, and it was really nice. And we weren't given the ability to create Valhalla commemorative NFTs for a community round. Right. That wasn't ours.
00:35:11.117 - 00:35:42.015, Speaker B: We didn't have the legitimacy that the core team had. So what did we do? We took our own Valhalla plans that we had won and we put those up as the prize. And so all of a sudden These Valhalla planet NFTs got this new utility no one had ever seen before, which is they could legitimize a community realm. Right. So that there is some core set of shelling point NFTs that you can buy, pay for stake, and direct players to play this round because. Because they'll win those. That was pretty cool.
00:35:42.015 - 00:35:43.559, Speaker B: Never seen that behavior either.
00:35:43.647 - 00:35:47.995, Speaker A: I mean, all of what you're saying, I could not imagine this happening in a Web2 game.
00:35:48.455 - 00:35:53.655, Speaker B: No. No way. So people do fork World of Warcraft and build like, community servers.
00:35:53.775 - 00:35:54.175, Speaker A: Right?
00:35:54.255 - 00:36:11.347, Speaker B: Illegally. And like, the games are janky as heck because, like, you need to patch it a lot and there's not enough, like, server support. And. But like, when I was like 18 and poor. No, 16 and poor. I was like, I'd rather play on this Russian community server and not pay $12.99 a month.
00:36:11.347 - 00:36:18.803, Speaker B: And I did that for a month. I was like, actually, no, I need to go. I need to go back to paying whatever it is because, like, this is just not good enough service.
00:36:18.899 - 00:36:36.157, Speaker C: Okay, but. But just to play Devil's Habit. Count on what you just said. Okay. In, I mean, League of Legends, And Dota, they came out as they were mods of World of Warcraft and Warcraft 3. Warcraft 3, sorry. So you can't do modding in Web2 games.
00:36:36.341 - 00:36:36.797, Speaker B: Yeah.
00:36:36.861 - 00:36:40.821, Speaker C: And so in what ways is that different from on Chain games?
00:36:40.933 - 00:37:27.359, Speaker B: So let's look at the Dota League of Legends example. It's a really good one. It's one of my favorite. And I was playing Dota at the time on Warcraft 3 and part of that community of people that were iterating different possible heroes and different possible maps, there's these competing versions of it and the player base got really excited, but it was hard to coordinate some pieces of this. For one, the client was never built. The Warcraft 3 client was never built to have like matchmaking rankings in custom maps and it was never built to do all these features that you would need to make this a fully fleshed game. So Dota had to leave that space.
00:37:27.359 - 00:37:38.807, Speaker B: Right. It had to spin out and become its own app. But when it spun out, it had a hard time bringing its players with it. They were owned by Blizzard. Right. You didn't get the email addresses of the players playing. Right.
00:37:38.807 - 00:37:57.917, Speaker B: You didn't get their accounts. But if you're building something fully on chain, those players are there, you have their information. You can airdrop them. The new token, if there's a token already, you can migrate them. This is the new token. The other thing is Blizzard made them give up all their ip. You don't get any of the art assets we were letting you play with.
00:37:57.917 - 00:38:20.905, Speaker B: You have to change all the names of your heroes because those are our names in our copyright. And still Blizzard wasn't able to capture any value, which is important. They captured some value in selling of Warcraft 3 copies because people bought Warcraft 3 to play Dota the mod. And they made a bit of money because they were able to build Heroes of the Storm, which was their version of Dota, which sucked and went nowhere in my.
00:38:21.565 - 00:38:29.053, Speaker A: So modding for Blizzard was a net negative because they ended up losing their customers, right?
00:38:29.109 - 00:38:29.785, Speaker B: Yeah.
00:38:30.805 - 00:38:33.605, Speaker A: And they weren't able to monetize except for that short amount of time.
00:38:33.645 - 00:38:36.549, Speaker B: It increased the shelf Life of Warcraft 3 and probably sold a few more copies.
00:38:36.637 - 00:38:37.309, Speaker A: Okay.
00:38:37.477 - 00:39:03.109, Speaker B: And if they were smart, they would have bought that team right away. Yeah, right. They shouldn't have let Riot run away while they were and build League of Legends alone. They shouldn't have let Valve, right, go and take Ice Frog from Dota and have him build Dota inside of Valve alone. Right. That was real Talent with real legitimacy as leaders of those communities. And they didn't know how to like, capitalize and absorb.
00:39:03.277 - 00:39:18.005, Speaker A: So let's replay this with crypto on chain. Like if World of Warcraft was on chain, let's say hypothetically, Warcraft 3. Yes. And all the mods that sit on top, how would that look on chain and then how would that be monetizable?
00:39:18.345 - 00:39:49.135, Speaker B: Great question. It'll be really hard to imagine, but let's say you built all of the logic of Warcraft 3 on chain. So all the heroes are there, all their combat stats are there, all the way towers work and things. And then someone goes and remixes all of that, forks that code and relaunches it in a new package where the relationships are different. And then they let people play it and it's free and open source and they have a community that emerges around it.
00:39:49.555 - 00:39:50.571, Speaker A: Where does the value go?
00:39:50.643 - 00:39:51.475, Speaker B: Where does the value go?
00:39:51.515 - 00:39:59.811, Speaker A: Yeah. So I guess what I'm trying to get at is, would World of Warcraft on Chain capture any value that sits on top of like, Dota and others? Right?
00:39:59.883 - 00:40:29.045, Speaker B: Yeah, yeah, yeah. Is there a way to do that in this case? I don't think in this case where you would fork the code and build something new, there would be much value capture if. Okay, so I do imagine a world where you have some game. Like there's a common game practice called speedrunning. And in speedrunning you try and complete a game as fast as possible, right? And there's a big speedrunning community around it. There's also another community that's like a pacifist community. Can you beat the game without killing anyone? Right.
00:40:29.165 - 00:40:30.585, Speaker A: Sounds like a woke.
00:40:31.845 - 00:41:04.195, Speaker B: No, no, no. Actually the people who do pacifist runs are anything but, right. It's like really extra hardcore without killing anyone. So you can beat Halo without killing a single monster, get out and like that. Like the amount of workarounds and hacking and figuring out how to do it and like mess with the enemy, you know, AI's okay to do that. It's like its own game, right? And when you think about these kinds of games, that's a rule layered on top of a game, right? So the game fully exists. And then you came and you add one more rule on top.
00:41:04.195 - 00:41:21.527, Speaker B: And so let's say there's an underlying crypto game that's like recording who's played it, who's won it, what people's XP and score are. And then somebody comes in with a smart contract on top that changes the interface. So you can still Play that entire game but you can't kill anybody.
00:41:21.671 - 00:41:24.207, Speaker A: Like so some additional logic that sits on top.
00:41:24.271 - 00:41:24.703, Speaker B: Exactly.
00:41:24.759 - 00:41:25.719, Speaker A: And this is a new front end.
00:41:25.767 - 00:41:31.399, Speaker B: And this is like a new. Or well, it's actually a new middleware because you have a front end client.
00:41:31.487 - 00:41:31.823, Speaker A: Okay.
00:41:31.879 - 00:41:32.311, Speaker B: Right.
00:41:32.423 - 00:41:34.071, Speaker A: Which is the same logic which is.
00:41:34.103 - 00:41:43.015, Speaker B: Going to direct to this new smart contract. And that smart contract is just going to hobble you so that you can actually ask to kill.
00:41:43.135 - 00:41:43.343, Speaker A: Right.
00:41:43.359 - 00:41:50.975, Speaker B: Like you're missing that move. Right. And now you have a score on the pacifist contract and a score being formed on the underlying contract.
00:41:51.055 - 00:41:51.471, Speaker A: Got it.
00:41:51.543 - 00:42:05.003, Speaker B: Right. And so now you're playing two different games. Games and being recorded on both. Now you could also just fork the original game. Right. And change the code so you can't kill people. Here there's a choice, right? We can either 4k or just build on top.
00:42:05.003 - 00:42:05.803, Speaker B: Or build on top.
00:42:05.899 - 00:42:22.115, Speaker C: I'll give you a defi analogy. So in the fork example you'll be Uniswap getting forked into sushi. Vampire attack. Uniswap didn't capture any value. Sushi captured some of the value through the vampire attack. So that's the fork analogy.
00:42:22.155 - 00:42:22.675, Speaker A: Good analogy.
00:42:22.715 - 00:42:36.889, Speaker C: And the build on top of analogy is one where let's say hypothetically you have a yarn vault that sits on top of Uniswap, like a vault for the LPs to generate yield. So it's one way to play Uniswap but as a layer above.
00:42:36.977 - 00:42:48.633, Speaker B: Yeah. And you'll make money at the vault layer and you'll make money at the uniswap layer. That's right. And here in the game example, you'll win NFTs and gold and prizes and reputation.
00:42:48.769 - 00:42:54.659, Speaker A: Well, yeah, you could. That's cool. Like earn double the tokens. I mean from a speculative.
00:42:54.827 - 00:43:13.067, Speaker B: Because you're earning the pacifist tokens and you're earning the real tokens. And the pacifist tokens have value because they're truly connected and provably connected to the original meaningful game. Right. It's like when you. The more you fork bitcoin, the more you realize that none of the forks are valuable. Right. There's only the original one, the shell.
00:43:13.171 - 00:43:19.815, Speaker A: He thought, which I fell for that trip.
00:43:20.915 - 00:43:22.363, Speaker B: Don't fork bitcoin.
00:43:22.539 - 00:43:24.723, Speaker A: Was it Bitcoin cash? No, it was Ethereum.
00:43:24.899 - 00:43:25.507, Speaker C: Etc.
00:43:25.571 - 00:43:26.699, Speaker A: Etc is what I fell for.
00:43:26.747 - 00:43:28.283, Speaker B: Oh yeah, yeah.
00:43:28.299 - 00:43:30.667, Speaker A: There needs to be an immutable original.
00:43:30.731 - 00:43:56.213, Speaker B: Like anyways, so okay, so with Dark Forest, you know, theoretically we could have charged people to band together to win the Final prize. Right. Like you'll win the final prize and split it. But we take 10%. Right. And for providing this service and for organizing you, you're ready to accept that? And because we're the original, so we could capture value because we've added an extra game on top of Dark Forest. Right.
00:43:56.213 - 00:44:18.085, Speaker B: It's funny, there's. I'm always reminded of this other game scholars named Phelan Parker and he. Who's Phelan? He's. He was just a colleague and researcher in game studies when I was doing my PhD and he. He wrote about Foucault and how Foucault talks about being in prison. He says when you're in prison, you lose all control over your life. Right.
00:44:18.085 - 00:44:43.213, Speaker B: They sort of decide what you do and when you do it. And the only way you can escape without breaking out of the prison is to just add more rules. So pray three times a day in this direction. Eat vegetarian. Be nice to your neighbors. Right. And then all of a sudden, although you're trapped, you've actually restructured your life to have more rules, even more trapped.
00:44:43.213 - 00:44:59.845, Speaker B: But now it's your. You've defined your life again. You've redefined your life inside this conflict. And that's what players do with games. They redefine it creates purpose. Yeah, you can create purpose, and you can't do that with defi as easily, and you can't do that with products. Generally, products are about reducing friction.
00:44:59.845 - 00:45:12.301, Speaker B: They're about removing obstacles and getting towards your actual goal. But games, the whole point is to add obstacles and to overcome them. Adding friction is not a bug, it's a feature.
00:45:12.453 - 00:45:20.635, Speaker A: Well, there's some purpose in defi. Black hats, white hats, Right? That's like one element of finding purpose.
00:45:21.335 - 00:45:41.685, Speaker B: Yeah, yeah. I mean, you can find purpose in the activity, but look, a black hat. Okay, so here's the definition of games that people don't often think about. So Wittgenstein, this philosopher, famously said, games don't have a definition. There's just a bunch of different things. They kind of have a family resemblance. And he uses games to prove his thesis of family resemblance.
00:45:41.685 - 00:46:08.361, Speaker B: Garbage idea. Terrible philosopher, in my opinion. Later, amazing philosopher. Bernhard Suits, Canadian, 1978, writes this great book, Utopia, the Grasshopper Games, Life and Utopia. He talks about how there's a very clear definition of games. I'm only going to take 200 pages to explain it to you. And it goes, games have a goal and they have obstacles, and you have people who are trying to overcome those obstacles to reach that goal.
00:46:08.361 - 00:46:10.377, Speaker B: And the reason defi.
00:46:10.561 - 00:46:11.553, Speaker C: So you're a.
00:46:11.609 - 00:46:39.885, Speaker B: No, no, no, no, no. And the final piece and the reason they are overcoming those obstacles to reach that goal is because they find that activity intrinsically valuable. So if you're going to do the dishes, right, okay, you're going to do the dishes. They're dirty. You got to use soap and a sponge and your body to do it. And if somebody said, okay, I know you have these obstacles, which is dirty dishes, and you want clean dishes as your goal, I'll wash the dishes for you, you'd say, please do that. Wash the dishes for me.
00:46:39.885 - 00:47:04.327, Speaker B: I don't want to wash the dishes. I don't find this activity extrinsically valuable. But if you were going to go climb a mountain, get to the top, and that was like your hike for the day, and someone said, hey, Imran, I'll walk to the top of the mountain for you. Will you be like, no, I want to get to the top of the mountain. Say, okay, I'll carry you to the top of the mountain. Like, no, I want to get to the top of the mountain with my own legs. Because this is an obstacle I want to overcome.
00:47:04.327 - 00:47:22.383, Speaker B: If you tell a defi trader looking to make money, hey, I'll remove the constraints around MEV and around block time, and you can just place your transactions anywhere you want. Be like, yeah, please, I want that. Take away all the friction. I want to make pure money.
00:47:22.479 - 00:47:24.111, Speaker C: No, that's not how I think.
00:47:24.183 - 00:47:24.807, Speaker B: Oh, cool.
00:47:24.911 - 00:47:38.159, Speaker C: I think metamask. The friction associated with metamask, the signing transactions. That's a feature, not a bug. Because that causes so many of my potential competitors to not play this game. Yeah, I can take all the profit for myself.
00:47:38.207 - 00:48:04.455, Speaker B: Oh, but okay, but look, I'll offer you something. I will gag, muzzle, trap, put in codes, and cut off the Internet of all the competing traders for the next hour. Would you take it? Yeah. You would, right? Because for Bernard Shoots, this is not a game, this is a profession. You're trying to make money. You don't care about the process of making the money. Ultimately, you would rather just have the money than overcome.
00:48:04.455 - 00:48:12.675, Speaker B: It's not a game for you. Right. It's the desire to overcome obstacles that's important, not the. Yeah.
00:48:13.295 - 00:48:24.471, Speaker C: Okay. To summarize the motivations of putting a game on chain, there are two. First one is financialization.
00:48:24.583 - 00:48:25.999, Speaker B: Yeah, A trustless financialization.
00:48:26.047 - 00:48:32.035, Speaker C: Trustless financialization. And the second one is modding, basically composition modding.
00:48:33.615 - 00:48:34.279, Speaker A: Very clear.
00:48:34.367 - 00:48:38.927, Speaker B: And if you want to read more about it, the paradigm paper that just came out is exactly on those two topics.
00:48:39.031 - 00:48:43.435, Speaker A: So we talked a lot about, I feel like modding not enough about financialization.
00:48:44.335 - 00:48:56.931, Speaker B: Right. Well, the hope is that the two come together. We talked about how are you going to extract value? Where are you going to charge for your mods? Right. How are NFTs that are valuable going to legitimize new launches of the game? Right.
00:48:56.963 - 00:49:10.455, Speaker A: Well, like, you know, like lending. I mean, when I think about financialization outside of what we just talked about, I think about defi also. Right. Like could there be this entire, you know, defi ecosystem that is primarily focused on chain gaming?
00:49:10.835 - 00:49:41.045, Speaker B: Yeah. So when you look at World of Warcraft, not Warcraft 3, when people would go to the dungeons and get their gear, they would go to the auction house and they'd sell it. And then some people wouldn't leave the auction house. Like they would just be like, wait a second, this is the game I want to play. I want to buy silk at this price and I want to sell it at that one. I have enough money, I'm going to corner the market because I realize there's not enough liquidity. I'm going to buy all of this shit and then just like repost it at a higher price.
00:49:41.045 - 00:49:43.539, Speaker B: Right. Set a new floor, you know, sweep.
00:49:43.717 - 00:49:46.231, Speaker A: Similar to what's happening, what has happened with NFTs.
00:49:46.303 - 00:49:47.751, Speaker B: Yeah. And that's its own game, Dr. Burry.
00:49:47.783 - 00:49:51.395, Speaker A: That came out of nowhere and started becoming the de facto market maker.
00:49:52.255 - 00:50:12.237, Speaker B: Yeah. And people did that. And that was an interesting game in and of itself. And the issue was always, well, what if Blizzard changed the emission rates of Silk? Right. The scarcity piece. Right, Right. And even if Blizzard didn't mint it for itself, it can change just the game logic.
00:50:12.237 - 00:50:14.985, Speaker B: And then the market, you've been making changes, right?
00:50:15.065 - 00:50:15.513, Speaker A: Yeah.
00:50:15.609 - 00:50:37.979, Speaker B: And so the trustlessness of the fully on chain game lets at least the financialization people feel more comfortable and rational about what they're doing with their assets in a meaningful way. I think about we want to put more assets on chain. Right. And real world assets is like this dream. Right.
00:50:37.987 - 00:50:39.355, Speaker C: But real world, not my dream.
00:50:39.435 - 00:50:47.403, Speaker B: Yeah, it's okay. Not your dream because they have this problem. It's an Oracle problem. Like if there was no Oracle problem for RWAs Oracle.
00:50:47.499 - 00:50:52.163, Speaker A: I mean interacting with the real world, meaning like the KYC and aml.
00:50:52.259 - 00:51:06.945, Speaker B: And also censorship like a government just be like fuck your Treasury, I'm taking everything. Right. Your rwas worthless are no longer tied to your token. Right. You don't have that trustlessness. And the same goes for Tokenizing game items. Right.
00:51:06.945 - 00:51:41.233, Speaker B: But if the asset was born on chain in the way that like the Uniswap token is, right. Or any other governance token or any other asset on chain, you lose that risk. All of a sudden it becomes like, born on chain. And no longer is there an Oracle problem, no longer is there a censorship problem. This asset class has way more power. And so game items that are born on chain are like RWAs, but that actually mean something, mean something on chain that can't be taken away. Right.
00:51:41.233 - 00:51:52.045, Speaker B: And that's exciting. The more of our culture we can move onto the blockchain, the more of our digital selves move onto the blockchain, the more they get to interact and compose with each other in meaningful ways.
00:51:52.545 - 00:51:54.281, Speaker C: Can I just simplify what I just said?
00:51:54.353 - 00:51:55.001, Speaker B: Please do.
00:51:55.113 - 00:52:01.463, Speaker C: Financialization for me really is just the possibility for players to make money. It's that simple.
00:52:01.519 - 00:52:02.155, Speaker B: Yeah.
00:52:03.335 - 00:52:07.287, Speaker C: If there's no money to be made in Axie or Stephan, I will not play the game.
00:52:07.391 - 00:52:08.575, Speaker B: Yeah, well, there's also.
00:52:08.655 - 00:52:31.673, Speaker A: Well, but that's the future though, right? I mean, we talked about in our last pod, which is speculation is what is our product market fit. We need to embrace that. And I think people are starting to come around to that idea of embracing speculation, especially in gaming with Scrabble or what was called Words three. And so let's talk a little bit about that element of speculation.
00:52:31.809 - 00:52:46.085, Speaker B: So Words three is a new fully on chain game. It's been in the works for about a year. Think it was like a year. Yeah, I think the idea started almost a year ago, but it was a passive hobby. I forget the dev's name. I feel really bad about that.
00:52:46.665 - 00:52:49.129, Speaker C: How did it all of a sudden become so popular in the last.
00:52:49.177 - 00:52:52.909, Speaker B: I think they just launched the official version of it. Like, it was like in a sort of test mode.
00:52:52.957 - 00:52:53.585, Speaker C: Okay.
00:52:53.965 - 00:53:13.869, Speaker B: Like, they just made a push. So like think of like an infinitely large, like, Scrabble board, right? And you can. And instead of just drawing tiles out of a bag, you can just pay for any tile you want. But the tiles are all in a marketplace with scarcity. So you're competing with other people. Buy that to buy that tile. Right.
00:53:13.869 - 00:53:19.375, Speaker B: And so the way they do it is they use a gradual Dutch auction. This is the.
00:53:19.755 - 00:53:22.363, Speaker A: And explain what Dutch auction means for users.
00:53:22.459 - 00:53:36.411, Speaker B: Right. So a gradual Dutch auction, okay, So a normal Dutch auction is you start the price at like $100 and you drop it by a dollar every minute until a buyer says, nope, that's the price I want. Stop the auction. Right. That's a normal one.
00:53:36.483 - 00:53:37.563, Speaker A: It's a reverse auction bid.
00:53:37.619 - 00:54:06.815, Speaker B: Yeah. In a gradual Dutch auction you have a emission rate. This is talked about by Dave White in his paradigm paper, where you say, I'm going to try and sell like 50 of these a day. 50, let's call them tulips for fun. I'm selling 50 tulips a day. NFT tulips. And if people buy 50 tulips a day, the price is 10 per tulip.
00:54:06.815 - 00:54:33.345, Speaker B: If on one given day people only bought 30 tulips, my function is going to make it so the tulips are cheaper. We're going to try to retarget 50 tulips. So instead of 10, they're going to be five. If the next day we end up selling 55, we're going to retarget to a higher price, the group buy. And we're just going to keep retargeting the price to some normal. And if there's too much demand at that price, we're just going to adjust it. It's kind of like a bonding curve that adjusts the supply and demand.
00:54:33.345 - 00:54:53.953, Speaker B: It's a different way to make a market when there's no liquidity provider, really. Like when there's no. And it's perfect for games. And I pointed out to Dave White that like, he didn't invent this. Like these have existed in board games for a very long time. A great example is Power grid, which has like a gradual Dutch auction built for resources that you burn in power plants.
00:54:54.009 - 00:54:56.121, Speaker A: And this was used for the NFT project they launched.
00:54:56.153 - 00:54:57.177, Speaker B: Yeah, for Art gobblers.
00:54:57.201 - 00:54:57.849, Speaker A: Art gobblers.
00:54:57.897 - 00:55:13.505, Speaker B: Yeah. Gobble, gobble, gobble, gobble. So the beauty of Words three is that you want an X, but everybody wants an X. Right. And at a certain point an X is just unaffordable. Right. And you're just not going to make.
00:55:13.545 - 00:55:14.465, Speaker A: False and come up with a different.
00:55:14.545 - 00:55:47.841, Speaker B: You're going to come with a different word that doesn't use an X. Because the whole point of the game is to score points with your letters in a way that while spending as least amount of money as possible on those letters. And so everybody is looking for that arbitrage moment where they find that great word that fits in the right spot with letters that were undervalued at that moment. Right. And if you do, you'll get a payout that's larger than what you put in. Right. You're better at this multiplayer online financialized Scrabble.
00:55:47.841 - 00:55:49.049, Speaker B: You make the money.
00:55:49.217 - 00:55:49.913, Speaker A: That's cool.
00:55:50.009 - 00:55:50.673, Speaker B: That's Just cool.
00:55:50.729 - 00:55:51.497, Speaker A: That's so cool.
00:55:51.601 - 00:55:52.445, Speaker B: It's cool.
00:55:53.585 - 00:55:55.973, Speaker A: I mean, I would have an incentive to play online.
00:55:56.169 - 00:55:57.437, Speaker B: Yeah. If you were good at Scrabble.
00:55:57.501 - 00:55:59.813, Speaker A: Yeah, I don't know if I am or not.
00:55:59.949 - 00:56:20.085, Speaker B: But then your immediate reaction, right, it's like, okay, well, traders trading on Uniswap in 2019 or whatever, next step is make bots, right? Let's start making bots to play this game. Let's make them smarter, better, faster. Let's invest. Let's have bots compete against bots. And this is the future. Well, this is the future of fully on chain games. And this is what scares people.
00:56:20.085 - 00:56:36.953, Speaker B: People aren't ready to say that we're going to make games for robots, Right? One of my games for people, Mid Curve Chow. And I agree, like, it's cool if AIs play games or bots play games. And like you can support and root for your bots the way you root for Man United or the Patriots.
00:56:37.009 - 00:56:38.505, Speaker A: Well, I mean, you're still building something, right?
00:56:38.545 - 00:56:39.777, Speaker B: And you're building the bot.
00:56:39.921 - 00:56:47.761, Speaker A: Exactly. So I mean, there is still sweat. Like I think what people worry about is like when I play a video game today, it's like you're putting the sweat by playing.
00:56:47.873 - 00:56:48.337, Speaker B: Right.
00:56:48.441 - 00:56:53.639, Speaker A: But being able to automate that through a bot is still sweat. It's just done in a different way.
00:56:53.687 - 00:57:03.807, Speaker B: But then, okay, then the midwits from like the gaming industry come and say, how many players do you think you're going to be able to target doing that? Right? Like, is that going to be a meaningful audience?
00:57:03.911 - 00:57:12.687, Speaker A: I think we're just reformatting our audience and our users right now it's about attracting a complete set of new users that weren't in gaming.
00:57:12.751 - 00:57:16.217, Speaker B: And are you going to get enough of them and are they going to spend enough money? Right.
00:57:16.281 - 00:57:19.753, Speaker A: Well, speculation is where it would attract them. Sorry, go ahead.
00:57:19.809 - 00:57:23.577, Speaker C: I'll give you an example. In the, in the real world, which is go.
00:57:23.681 - 00:57:23.921, Speaker B: Yeah.
00:57:23.953 - 00:57:55.665, Speaker C: So the East Asian most complex game of all time, like the number of possibilities in that game is greater than the number of atoms in the universe. So that game. So Google created AlphaGo, which is the bot that beat every single human on the planet. The best players on the planet. And that's fine because today the way the humans still like that didn't destroy the game. The fact that the bot beat everyone didn't destroy the game. The way that the game works today is the players, the human players, they just use the bot to train themselves.
00:57:55.665 - 00:58:06.581, Speaker C: And so they basically have social consensus among each other that they got better. It's got to be the humans that play each other. And then the bots simply help the humans to get better.
00:58:06.773 - 00:58:17.679, Speaker B: Right, but the problem with crypto is it's permissionless. Right. And so you can't say like no humans play this round, right? You never get to say no humans play this round.
00:58:17.727 - 00:58:22.671, Speaker A: Well, you can. Okay, hypothetical world coin, right?
00:58:22.703 - 00:58:27.075, Speaker B: Let's say I'm going to give my eyeballs to a robot. Just so it's clear.
00:58:27.935 - 00:58:37.183, Speaker A: Whoa, whoa. Hypothetical, right? Let's say that I build a permissionless game and I say the people that can log in to this game are, have to have a real coin identity.
00:58:37.239 - 00:58:39.155, Speaker B: Uh huh. They still have a robot behind them.
00:58:39.935 - 00:58:42.471, Speaker C: Like I think, I think this is a solvable problem.
00:58:42.543 - 00:58:43.155, Speaker B: Yeah.
00:58:43.535 - 00:58:47.839, Speaker A: Like can't you, you can't. Like it's not. You can't delegate that identity to not a robot.
00:58:47.887 - 00:58:49.623, Speaker C: You can, you can use to solve this problem.
00:58:49.679 - 00:58:50.903, Speaker A: In theory, yes you can today.
00:58:50.959 - 00:58:52.275, Speaker B: In practice you can.
00:58:52.815 - 00:58:54.039, Speaker A: But can you?
00:58:54.207 - 00:59:06.109, Speaker B: Because the front end, like you said, is agnostic to the front end. So if I just replace the front end with a robot, right. Like even though I've logged in with my credentials, I get to choose what the front end is. So the front end can't do any anti cheat.
00:59:06.157 - 00:59:08.533, Speaker A: Okay, so you're talking about front ends. Oh, okay.
00:59:08.629 - 00:59:15.305, Speaker B: So my robot can always directly interface with the contract on my behalf. There's no way to prove humanity at every interaction. None.
00:59:15.925 - 00:59:17.557, Speaker A: And there's no constraints.
00:59:17.581 - 00:59:32.091, Speaker B: You could put, you could do like what they do with a Dota tournament. You put five players in glass boxes on each side and have 10,000 people watch them play. Right. And you make sure there's no Internet interference. And they play with keyboards and mice. And you can run a tournament that way.
00:59:32.163 - 00:59:32.815, Speaker A: Yeah.
00:59:34.675 - 00:59:56.815, Speaker B: Okay, so it's more like BattleBots, right? People build robots. The robots fight each other in a cage match, people in an audience watch. It's fucking cool to watch robots fight each other. You just have to make a game that's interesting to watch for robots to play. I mean, what's the difference between a robot and a football player or a soccer player? Player.
00:59:56.895 - 00:59:57.555, Speaker A: Yeah.
00:59:57.895 - 01:00:04.735, Speaker C: So while we're on this topic of bots, let's talk about the challenges and the limitations in bouncing games.
01:00:04.855 - 01:00:05.159, Speaker B: Right.
01:00:05.207 - 01:00:06.959, Speaker C: Because bots is one of them, is one of the concerns.
01:00:07.007 - 01:00:07.967, Speaker B: One of the biggest.
01:00:08.151 - 01:00:09.615, Speaker C: And there's two others.
01:00:09.695 - 01:00:11.039, Speaker B: Yeah, Scalability.
01:00:11.167 - 01:00:12.095, Speaker C: Scalability. Go ahead.
01:00:12.135 - 01:00:25.371, Speaker B: It's so bad. Right. So we talked about, we couldn't even put Civilization, a turn based game on chain because it was too complicated. So what is a kind of game that doesn't have too many actions?
01:00:25.563 - 01:00:34.971, Speaker A: One more thought is what's the transaction TPS for crypto on average, and what's the TPS that's needed to build an on chain?
01:00:35.003 - 01:01:13.865, Speaker B: Yeah. So an average chain today is going to have a TPS of 15, right? Like if you look at Arbitrum or Optimism or starkware, let's use orders of magnitude. Right? That's like not that great. Maybe 100 if you juice things up, maybe 1,000 if you juice them a lot and accept that your blockchain is going to bloat and that you'll have to kill it. So what Lattice did with Minecraft is they built Minecraft on chain. They called it Opcraft after Optimism. They built it on a version of Optimism that processes more transactions per second.
01:01:13.865 - 01:01:41.955, Speaker B: And they just bloated the chain. Right. And they did it on a fork. So it's like there's no security. And they ran the chain into the ground with an incredible number of transactions and then they killed the chain. But let's just say for today's sake, you have a chain with 100 TPS and you're playing chess, you and me, and we want to make a chess move roughly every 30 seconds. So that's like two moves a minute.
01:01:41.955 - 01:02:07.697, Speaker B: Right. The number of people that 100 chain TPS can handle concurrently is well under 5,000. Right. So we're in a problem here because even if we put chess on chain, slow game. Right. We can only have about 5,000 players playing at the same time. And for a successful video game today like Counter Strike, that's close to a million concurrent users.
01:02:07.801 - 01:02:20.201, Speaker C: Okay, just. Okay. Why can't you scale the blockchain in parallel by just spawning? Spinning. Yeah, by spinning up more L2s. And on each L2 there's 5,000 players.
01:02:20.313 - 01:02:27.081, Speaker B: Oh no. Because each L2 has to eventually write to chain. So Ethereum can only handle like 100 more optimisms.
01:02:27.273 - 01:02:27.889, Speaker C: Is that right?
01:02:27.937 - 01:02:28.217, Speaker B: Yeah.
01:02:28.281 - 01:02:28.625, Speaker A: Really?
01:02:28.705 - 01:02:31.005, Speaker B: Yeah, because they have to push data to chain.
01:02:31.145 - 01:02:31.805, Speaker A: But I mean, don't you.
01:02:31.845 - 01:02:33.749, Speaker B: There's only room for the block for so many.
01:02:33.797 - 01:02:35.237, Speaker A: But if you have like Egan layer and others.
01:02:35.341 - 01:02:40.741, Speaker B: Right, right. So then you start saying, I'm going to use data availability layers and change my security model.
01:02:40.813 - 01:02:41.141, Speaker A: Right.
01:02:41.213 - 01:03:03.159, Speaker B: But there's still limits. Right? And let's say you. So let's say you do 100x right, by like making tons of more roll ups. Now instead of 5,000 players, you get 500,000 players. That's awesome. But that's one successful game that can be supported on chain. Right, because the number of gamers we have playing right now is close to a billion.
01:03:03.159 - 01:03:03.975, Speaker B: It's a billion.
01:03:04.095 - 01:03:07.783, Speaker C: No, but concurrently, 500,000 concurrent players.
01:03:07.839 - 01:03:13.751, Speaker B: 500,000 concurrent players is one. It's like a top three game on Steam. One top three Steam game.
01:03:13.823 - 01:03:16.047, Speaker C: Right. So isn't that good enough to have.
01:03:16.071 - 01:03:18.751, Speaker B: One video game in all of blockchain land?
01:03:18.903 - 01:03:26.775, Speaker C: Okay, what is the biggest game today? And what like traditional game? And how many concurrent players are there?
01:03:27.195 - 01:03:32.267, Speaker B: Yeah, I don't know. Like Counter Strike is a big one on Steam for Steam charts. Like a million concurrent players.
01:03:32.371 - 01:03:38.595, Speaker C: A million, yeah. So blockchain, like hypothetically support half of Counter Strike.
01:03:38.635 - 01:03:40.415, Speaker B: Yeah, yeah, that's it.
01:03:41.635 - 01:03:42.451, Speaker C: Reasonable.
01:03:42.603 - 01:03:45.611, Speaker A: But that's if you paralyze, right, like by spinning up more blockchains.
01:03:45.763 - 01:03:48.643, Speaker B: But you could paralyze further on Cosmos, you get infinite chains.
01:03:48.739 - 01:03:49.413, Speaker C: Yeah, right.
01:03:49.429 - 01:03:50.781, Speaker B: And just use validators.
01:03:50.933 - 01:03:54.061, Speaker A: But then how do you sync the state? Because they're.
01:03:54.173 - 01:03:55.621, Speaker B: Yeah, no, they all need to be fragmented.
01:03:55.653 - 01:03:56.589, Speaker A: They need to be fragmented.
01:03:56.637 - 01:04:04.101, Speaker B: But even World of Warcraft had to do that, right? World of Warcraft has had 10 million players across thousand servers. Right. So you have to split.
01:04:04.173 - 01:04:05.413, Speaker A: So you have to split it no matter what.
01:04:05.469 - 01:04:14.725, Speaker B: Like no server architecture really does handle that many players playing on the same game state at the same time. It doesn't make sense. Okay, so then you need to have bridges and move assets between them.
01:04:14.765 - 01:04:15.837, Speaker A: Yeah, it just becomes very complicated.
01:04:15.861 - 01:04:33.935, Speaker B: But it's hard. So my personal view is that the way you have to scale fully on chain games is to accept that what you wanted wasn't that they were fully on chain, is that they were trustless. And how do you get trustlessness besides putting the entire state on chain? Use ZK circuits.
01:04:35.995 - 01:04:38.055, Speaker A: Can you explain what ZK circuits are?
01:04:38.715 - 01:05:21.707, Speaker B: You had an episode on this. No one can explain what ZK circuits are. It's just dark magic. Okay, so okay, look, you can program your game in a kind of mathematics such that at the end of your play session you can prove that you played the game correctly. So let's say we could rewrite Axie Infinity, our server based game, in a ZK circuit and that after you were done playing with it and you push to chain the result of your gameplay, the chain could validate you played correctly and then mint you the correct assets. We've gotten rid of this problem, which is Sky Mavis can print whatever it wants. Right.
01:05:21.707 - 01:05:58.105, Speaker B: Because now we always have a proof that the game was played correctly. And the nice thing about ZK Proofs like Starquares or Polygons. No Star Quiz or ZK Syncs is that they only push a difference. So after you've played 10,000 moves, you just push a tiny difference and a tiny proof to the chain. So you get 10,000x scaling, millionx scaling if you want. You just have to run the proofs on your local hardware or delegate to some central server that runs the proofs for you. And I think that's a huge opportunity going forward when we run out of blockchain space again.
01:05:58.105 - 01:06:04.947, Speaker B: So like the next time we find PMF and we shut down Ethereum, that'll be when we realize, oh no, we have to go there.
01:06:05.081 - 01:06:06.687, Speaker A: So there is a world where it's.
01:06:06.711 - 01:06:09.719, Speaker B: Going to have to be hybrid but still trustless.
01:06:09.847 - 01:06:10.975, Speaker A: Okay, with zk?
01:06:11.055 - 01:06:12.215, Speaker B: Yeah, with ZK it's trustless.
01:06:12.255 - 01:06:20.183, Speaker A: Well, I mean we have that a bit now with Dark Forest. Right, like with the no information. So where you have to compute a hash to find.
01:06:20.359 - 01:06:22.503, Speaker B: Yeah. Can you force use two privacy things?
01:06:22.559 - 01:06:22.847, Speaker A: Right.
01:06:22.911 - 01:06:55.753, Speaker B: One was the entire map starts as undiscovered by players, right. The way you find out what's on a square is by hashing that square using their special hash function. And so it costs energy and time to review. You got to mine the map, right. And so the map is hidden to you. And when I started playing Dark Forest alone as a noob, well, I'd turn on my computer and I'd just like mine away and I'd leave it on overnight, right? And then I even get a second computer in and I'd start mining away overnight so that I could get more of the map.
01:06:55.809 - 01:06:58.279, Speaker A: They should, they should have like tokenize this thing.
01:06:58.407 - 01:07:35.125, Speaker B: So then I went to Omar, Omar Bosali, who is an entrepreneur in residence now founder of Center.dev and I was like, Omar, I need you to help me mine this map faster. And he's like, great, because I've been meaning to use Terraform more, which is like this, like UX over Amazon. So he spun up like a dozen servers that were like high powered, like CPUs. And we just mined the map for a couple hundred bucks, like overnight, right. And then we were able to out compete our opponents because we saw everything, right. And this was like, so this is stupid privacy, right? And this is what they talk about in the paradigm paper.
01:07:35.165 - 01:07:36.349, Speaker A: You really didn't have to put this in.
01:07:36.397 - 01:07:39.149, Speaker B: You didn't have this. It was cute, but it doesn't actually work.
01:07:39.197 - 01:07:39.597, Speaker A: Yeah.
01:07:39.701 - 01:07:45.557, Speaker B: Okay. The other piece is every time you move in Dark Forest, it's A ZK proof of your move.
01:07:45.741 - 01:07:47.493, Speaker A: Because the idea, it's like attestation, right?
01:07:47.549 - 01:07:56.185, Speaker B: Yeah. So you basically just guarantee what you did was a valid move, but not from where you moved or where you moved to.
01:07:56.305 - 01:07:56.849, Speaker A: Got it.
01:07:56.937 - 01:08:22.359, Speaker B: And that way when you don't have any map, you basically have no idea where people are or what they're doing, just that they're playing correctly. And then when you do hash that space, you replay the entire blockchain state that you had been collecting of everybody's moves and see, ah, this is the current state of this move. Right. So only once you discover where they had moved from do you ever learn that it's like Battleship. Yeah, it's kind of like Battleship. Right. So you're like figuring out what's going on.
01:08:22.359 - 01:08:24.943, Speaker B: But okay, so this is ZK for privacy.
01:08:25.039 - 01:08:25.519, Speaker A: Okay.
01:08:25.607 - 01:08:28.599, Speaker B: Which is another problem that I don't even want to talk about.
01:08:28.727 - 01:08:30.835, Speaker A: Don't talk about it. Let's move on.
01:08:31.415 - 01:08:35.671, Speaker B: Hidden information in games is essential and we haven't even solved that problem for on chain games.
01:08:35.823 - 01:08:36.495, Speaker A: Let's worry about scale.
01:08:36.535 - 01:08:47.824, Speaker B: Let's just hope we don't have a hidden information problem yet. So yeah, for scale, basically we're using ZK not to for privacy, but for scaling. We're proving correctness of compute.
01:08:48.764 - 01:08:59.060, Speaker C: Okay, but so yes, in theory ZK can solve this, but in practice, how many years are we from this?
01:08:59.212 - 01:09:07.784, Speaker B: So right now the Dojo team, which is a collection of three different projects on starkware, is building a provable game engine.
01:09:08.084 - 01:09:09.756, Speaker A: So are these a cartridge guys?
01:09:09.820 - 01:09:19.579, Speaker B: So it's cartridge plus brick plus. I think the Argent folks like getting together and actually I'll be judging the first hackathon on Dojo September 1st.
01:09:19.667 - 01:09:20.295, Speaker A: Cool.
01:09:21.035 - 01:09:42.309, Speaker B: And so they've built a game engine for Cairo. And the thing about Cairo is it's a provable language. So if you build a game on Cairo, you can ZK prove that it was correctly played and push that proof to Chain with one big giant asterisk, which is that starkware hasn't open sourced the provers yet. So we actually can't prove to starkware.
01:09:42.397 - 01:09:46.905, Speaker A: Didn't they just announce something where you could they have decentralized provers?
01:09:47.325 - 01:09:51.709, Speaker B: Yeah, I don't know. I haven't seen that it's possible. So like Lambda Works is trying to.
01:09:51.837 - 01:09:54.341, Speaker A: Produce an open source starkware proverb.
01:09:54.373 - 01:10:11.871, Speaker B: And it's not like starkware is being malicious about it. It's just that it's really time consuming to open source and build the documentation and to help people with the hardware to run the Provers and they just have bigger fish to fry right now. So I don't think it's a question of if, it's a question of when we're going to get open source provers.
01:10:11.983 - 01:10:19.167, Speaker C: Okay, so more pragmatic question. Given the constraints we have on the scalability side of things, what kind of games can we actually build today?
01:10:19.271 - 01:10:27.991, Speaker B: Yeah, so the game I'm the turn based strategy games, that's the genre, right?
01:10:28.063 - 01:10:29.155, Speaker C: What's an example?
01:10:29.935 - 01:10:32.275, Speaker B: Into the breach is a good example.
01:10:32.725 - 01:10:34.305, Speaker C: Name something more popular.
01:10:38.725 - 01:10:39.825, Speaker B: Xcom?
01:10:40.325 - 01:10:41.093, Speaker C: No.
01:10:41.269 - 01:10:44.749, Speaker B: Okay, Civilization. But dumb or dumb like simplest.
01:10:44.917 - 01:10:45.945, Speaker C: Monopoly.
01:10:46.805 - 01:10:51.741, Speaker B: Yeah, you can do Monopoly any board game. All board games have low tps.
01:10:51.773 - 01:10:53.765, Speaker A: How about your favorite board game? Werewolf?
01:10:53.845 - 01:10:56.549, Speaker B: Yeah, Werewolf. You could do Werewolf. Yeah, I mean a mug but it.
01:10:56.557 - 01:10:59.947, Speaker C: Requires decay because privacy information is true.
01:11:00.061 - 01:11:02.391, Speaker A: But I mean, but it's not that much compute, right?
01:11:02.543 - 01:11:35.695, Speaker B: No, it's not. So like there's lots of. And that's actually why I've written so many pieces about board games that would be appropriate for on chain 18xx. So the 18xx genre, which is about building train companies in the 1800s. Star Wars X Wing, which is about collecting minis and dogfighting them. Now like most people haven't heard of these board games because most people live in places that just sell Monopoly on loop catan if they're lucky. But there's like this enormous genre of board games being built out of Germany actually for a large part of it where we are today.
01:11:36.115 - 01:11:45.043, Speaker C: But I'm so surprised. All these games, why haven't people tried to just put them on chain? Like you can't ask GPT to write the game in solidity.
01:11:45.139 - 01:12:06.969, Speaker B: So we have. So I made 0x. Hank put star Wars X Wing on chain and we made like with boats instead of X Wing fighters. But it's the same game and it was the most fun game loop I've played on chain yet. But you need funding, you need a team, you need a ux, you need a ui like once. Even putting on chain is actually the easy part. It's all the ux.
01:12:07.097 - 01:12:07.985, Speaker C: Yeah, the front end is hard.
01:12:08.025 - 01:12:09.377, Speaker B: Oh it's so hard.
01:12:09.561 - 01:12:13.457, Speaker C: But turn based games, the UX doesn't have to be that fancy.
01:12:13.641 - 01:12:49.833, Speaker B: Doesn't have to be. But like look, the most popular turn based game today like launch this year in my opinion is Marvel Snap, made by the guy who made Hearthstone. It's incredible game design, beautiful game, very addictive. I've played hundreds of hours maybe. But the problem and the thing is they designed the game in two days, got the Game idea, two days, he says about an interview. Four years to build the app, to make the slick UX ui, to get the monetization right, to get the distribution right, get the marketing right, get the team right.
01:12:50.009 - 01:12:56.929, Speaker C: And the beauty of on chain games is you build a smart contracts and you let the crowd build a front all clients for you.
01:12:56.977 - 01:13:01.145, Speaker B: But who's incentivized to do it? How do you motivate them to start building all these front ends?
01:13:01.265 - 01:13:01.929, Speaker C: The nerds.
01:13:02.017 - 01:13:04.825, Speaker A: Yeah, they'll figure it out. Tokenize. Tokenize it.
01:13:04.865 - 01:13:05.345, Speaker C: Yeah.
01:13:05.465 - 01:13:07.521, Speaker B: Yeah, that's it. Launch a token.
01:13:07.713 - 01:13:09.161, Speaker A: That's the best way to be quite frank.
01:13:09.233 - 01:13:11.017, Speaker B: And I mean look, this is why.
01:13:11.081 - 01:13:16.285, Speaker A: Okay, why hasn't anyone launched a token for on chain gaming? Because I feel like.
01:13:16.445 - 01:13:18.665, Speaker B: So I tried to launch a Dark Forest token.
01:13:19.085 - 01:13:20.469, Speaker A: Yes, I remember you talking about this.
01:13:20.557 - 01:13:27.885, Speaker B: I went to Brian, I'm like, brian, I'm going to launch a token. If you don't launch a token, he's like, will, please, please don't launch a token. Don't do this.
01:13:27.925 - 01:13:30.837, Speaker A: Why is it looked down upon? I feel like it's looked down because.
01:13:30.901 - 01:13:34.025, Speaker B: Greedy vcs like you, Ibrahim exits to community.
01:13:34.525 - 01:13:38.637, Speaker A: Not really. It's a go to market strategy. Right. And the customer acquisition strategy, Dart for.
01:13:38.661 - 01:13:39.813, Speaker C: It doesn't have VCs.
01:13:39.949 - 01:13:40.973, Speaker A: Yeah, and no.
01:13:40.989 - 01:13:46.277, Speaker B: And VCs wished it had VCs. Like the valuation for Dark Forest, last peak I heard was 100 million.
01:13:46.341 - 01:13:47.109, Speaker A: Wait, they raised money?
01:13:47.157 - 01:13:54.665, Speaker B: No, the VCs wanted to come in, okay, they were term sheets. They would invite the founders to dinner tables and just like slide term sheets at them.
01:13:55.165 - 01:14:02.045, Speaker A: I mean they could have fully monetized this, dropped a token. I mean ultimately they didn't want to. And that's fine.
01:14:02.085 - 01:14:09.605, Speaker B: One wanted to go back to school, one wanted to focus on ZK research. One was like burnt out. One wanted to build something bigger.
01:14:11.025 - 01:14:26.673, Speaker A: I mean that's totally understandable. I'm just curious as to why it's looked down upon. Because once you add a speculative piece to it, similar to what's happened with frontech and maybe we should talk about this on our next pod. But once you add a speculative component, people are going to keep using it.
01:14:26.729 - 01:14:32.129, Speaker B: I agree, I agree. But you need a legitimate person to launch. You needed gubb sheep.
01:14:32.297 - 01:14:35.517, Speaker A: We need a gub sheep. That is, that is looking to monetize.
01:14:35.581 - 01:14:43.645, Speaker B: Yeah, but the reason he's gubchup is because he's not looking to monetize. That's the problem. It's a chicken and egg or whatever. Catch 22. That's it.
01:14:43.765 - 01:14:57.365, Speaker C: So turn based games make sense or they're feasible today given the scalability constraints. What other constraints do we have? What is the other major constraint?
01:14:57.525 - 01:14:58.373, Speaker B: Well, ux.
01:14:58.469 - 01:15:00.001, Speaker C: Yes. Want to talk about it?
01:15:00.133 - 01:15:19.881, Speaker B: So like, okay, the naive UX is I sign for every transaction, every time I move my pawn, whip out the metamask, whip out my treasure, make my booth unacceptable. Right. So what Dark Forest did was it just built you a burner wallet and kept the private key in your browser and it just let you know.
01:15:19.993 - 01:15:21.825, Speaker A: Right. Really too risky. Yeah.
01:15:21.945 - 01:15:57.877, Speaker B: As soon as you get a valuable resource, you better move it somewhere safe because, like, you don't know how compromised you are. That's not appropriate either. Obviously, we need to go towards account abstraction and smart contract wallets. So we need players to have a secure vault on chain, but they can use fancy things like session keys to give control to the game client that they're currently using to make moves on their behalf. Right. So for the next 30 minutes, anytime I use this interface, consider that sign for Right. And then push that information to change and make it web2experience feel the same.
01:15:57.901 - 01:16:04.181, Speaker C: So you would sign per session every time you log in and play, you sign once at the beginning of that session.
01:16:04.253 - 01:16:07.985, Speaker B: Exactly. And then that's the thing. And then it's fine for the rest of the session.
01:16:09.285 - 01:16:14.357, Speaker A: It's like a public key. Right. And so the public key would regenerate every time you log into a new session.
01:16:14.461 - 01:16:25.125, Speaker B: Yeah, it's kind of like. Yeah, it's what the Web2 uses right now. Yeah. Every time you log into your video game, you're basically creating a session key, giving yourself the right to tell the server.
01:16:25.245 - 01:16:26.509, Speaker A: But the private key stays the same.
01:16:26.597 - 01:16:48.505, Speaker B: Yeah. And the fundamental structure stays the same. Now you can go further. We don't need you to sign with a private key to start a session because it's arbitrary logic. We say log in with Google, like give us a signature from Google and now your session's active. And so we can build an entirely web 2 experience on top of this web 3 game and reach a very smooth user experience.
01:16:49.775 - 01:16:53.835, Speaker C: There's no other way. You were saying account abstraction is the only way.
01:16:54.895 - 01:17:18.095, Speaker B: Yeah, almost certainly. I don't think maybe you could use MPC in some funny way and use an EOA instead of with MPC to try and get things done, but I just think it'll be too clumsy. You definitely want smart contract wallets, which is why Argent and Cartridge and Brick are getting together to make on chain games, because they know Argent is a smart contract well, they know that that's where the value add has to be. Right.
01:17:18.395 - 01:17:35.755, Speaker A: But I feel like those are the constraints for Ethereum and evm, right? Well, there's a couple of constraints. Right. One is like solidity. Right. And the data structures behind solidity. Right, right. And then you also have the frameworks that are in place.
01:17:35.755 - 01:17:38.859, Speaker A: Right. Like there aren't really gaming on chain gaming frameworks.
01:17:38.907 - 01:17:42.455, Speaker B: Oh, you trying to talk about MUD right now? Because it sounds like you're trying to talk about MUD right now.
01:17:42.555 - 01:17:50.383, Speaker A: Pretty much, I'm. You know, and maybe we could do this high level, we don't have to go deep. But you know there are constraints on building on evm, right?
01:17:50.479 - 01:17:52.223, Speaker B: Totally. So right now.
01:17:52.279 - 01:17:53.583, Speaker A: And why, why not Solana?
01:17:53.719 - 01:17:54.527, Speaker B: Oh, good question.
01:17:54.591 - 01:17:55.935, Speaker A: So that's where I'm trying to go.
01:17:55.975 - 01:17:59.127, Speaker B: Like we talked about. You want to go there, but like.
01:17:59.151 - 01:18:00.615, Speaker A: You know, where are we with.
01:18:00.655 - 01:18:02.195, Speaker C: Are you trying to FUD Ethereum?
01:18:03.255 - 01:18:04.303, Speaker B: Okay, wait, chill.
01:18:04.359 - 01:18:10.645, Speaker A: I'm not, but what I'm saying is like, if you're thinking about like all the development that's happening, you know, you have a construction.
01:18:10.685 - 01:18:12.309, Speaker B: So I have a perfect example for you.
01:18:12.357 - 01:18:13.501, Speaker A: Yes, give me the example.
01:18:13.573 - 01:18:19.501, Speaker B: So MUD is like the Ruby on Rails for building games on Ethereum.
01:18:19.533 - 01:18:20.661, Speaker A: What does MUD stand for?
01:18:20.773 - 01:18:22.173, Speaker B: Multi User Dungeon. Oh, okay.
01:18:22.189 - 01:18:23.101, Speaker A: It's the same terminology.
01:18:23.173 - 01:18:41.043, Speaker B: Yeah, but it's like a joke name. Like it doesn't really mean anything. They basically built a framework to solve the data structures of Ethereum so that the games are way more indexable. Like it's really hard for your front end client to index the. To index the state of the game. Yeah, like Ethereum wasn't meant to be built that way.
01:18:41.099 - 01:18:42.579, Speaker A: From a latency perspective.
01:18:42.667 - 01:19:24.115, Speaker B: Yeah, from like querying a node and actually getting the game state, it's just no good. So what MUD does is it changes the way games represent state to clients by changing the backend and changing how the front end reads and also fixes the netcode. So like when I make a move in my game, normally I'd have to wait some time for the chain to register my move and then wait for your client to read it and then your client update. No one's wants that. That is a shitty user experience. So what MUD does is, let me just tell you directly, I move like this, update your client and then if the chain doesn't clear, roll back. Do you remember how we talked before about how even web2games have to optimistically move the state forward and then roll back when it doesn't work.
01:19:24.115 - 01:19:26.359, Speaker B: Do that for blockchain so now MUD.
01:19:26.407 - 01:19:28.431, Speaker A: Is like that framework is that framework and that.
01:19:28.463 - 01:20:06.347, Speaker B: NET code making all of this user development way better. And what's cool is they're finding that you can even do cool defi things on top of mud because you get new user interface experiences. Like what? I don't know. But their vision is that with Ruby on Rails you can build more than just games. And what's interesting too is they're building a smart contract collection that's upgradable underneath. So you build on top of MUD and you can get upgrades from underneath, like the way Windows 95 or, or whatever iOS today can like upgrade to the next version. And all the developers benefit because they built on that underlying structure.
01:20:06.347 - 01:20:36.377, Speaker B: Now a lot of risk too, because if your underlying contracts get compromised or changed in a way that breaks you, it's a rip. And that happens to apps all the time in the Windows and Microsoft and Apple world. But it's cool. But with Solana, where I make a transaction and a half second later the state is updated and then you can read that state super quickly, there's way less pressure to build a peer to peer gossip network where we're updating state between ourselves because the change is faster.
01:20:36.441 - 01:20:37.385, Speaker A: Yeah, you don't need mud.
01:20:37.465 - 01:20:42.005, Speaker B: Like I don't need it. Right. And that's why there isn't a MUD for Solana.
01:20:42.465 - 01:20:45.641, Speaker A: They tried, but there's no point, at least for now.
01:20:45.673 - 01:21:17.535, Speaker B: Yeah, so some people built arc, which is like a framework that is different from mud, that's more adapted to Solana for building games. Because the other thing that mud's trying to offer is like a world contract where you can list all the behaviors that games pre commute. It's not really it's thing like a directory like flying. So we're going to say there's a contract that has flying and flying means obstacles don't block you.
01:21:17.625 - 01:21:18.083, Speaker A: Okay.
01:21:18.179 - 01:21:44.593, Speaker B: Right. And so if you want to use flying, you point to the world contract and say this game has flying. And in fact these objects in the game have flying. And now we get better composability because when this game over here wants to introduce flying, it uses the same logic of flying. And so if my character from this game with flying comes to your game, it will continue to fly in the same way. Right. And this was the promise that interoperability of NFTs had early on.
01:21:44.593 - 01:22:16.891, Speaker B: Like we were trying to pitch games as you're going to get an NFT and that NFT is going to go work in someone else's game. Fuck no, your NFT is not going to work in someone else's game in Web2 because they have to have the same underlying code to program it the same way and make it behave the same way. And they've got different logic and different team and they don't have the time to program the logic of items in this game when they're programming the logic in that game. So we haven't seen that happen. It could happen, but it's just so here. Imagine a world where we can have all these behaviors in one repository and we can all share them. That's cool.
01:22:16.963 - 01:22:17.547, Speaker A: That's cool.
01:22:17.651 - 01:22:41.231, Speaker B: It becomes like the Warcraft 3 mod map making engine. Right? Because all the behaviors are pre planned and you just point to them and script around them. So that's why people are also very excited about mod and why it's so well funded by 0x PARC and Ethereum Foundation. Because they're not going the VC funding route either. They want to be a public good for now. See what happens.
01:22:41.383 - 01:23:01.595, Speaker A: Two more things I want to talk about and then where it goes from there. Can we have a Jared from Subway type of behavior on where someone's like pedophilic. Okay, sorry, let me be more, more clear here. Jared from Subway is a very well known Sandwich attacker.
01:23:01.945 - 01:23:07.673, Speaker B: Oh that one. Oh that one. I think about the real Jared from Subway.
01:23:07.769 - 01:23:13.765, Speaker A: Oh, that's historic, man. I mean that guy's gone locked up away. But sorry, I should have been more clear.
01:23:14.625 - 01:23:20.217, Speaker B: I was like, okay, some guy who lost a lot of weight, you know, eating Subway sandwiches.
01:23:20.401 - 01:23:30.225, Speaker A: Well, I mean you have this guy or whoever, guy or girl runs a bot called Jared from Subway. All he does is he or she does this sandwich attacks every transaction.
01:23:30.265 - 01:23:31.045, Speaker B: Yeah, yeah.
01:23:32.525 - 01:23:45.373, Speaker A: And then when we think about MEV and you think about like, you know, gamified transaction incentives, et cetera. Could we see something similar like that in games?
01:23:45.469 - 01:24:29.171, Speaker B: Totally. So when I was, I was pissed at Ordng when I was playing Dark Forest because they beat us and they beat us with the help of people building Dark Forest itself. And I was like, that's so unfair. I'm going to be as unfair to them as they were to us. And so I start thinking about how we're competing for block space. And you look at the blocks of Xdai where we're playing the game now called Gnosis Chain and we were each taking half the block and outpaying in gas fees to get included in the block. And I thought, well, what if I just told the miners not to include their transactions? So I Talked to Igor who built xdai, and he says every miner has a blacklist and if you can get their address on that blacklist, this is great.
01:24:29.171 - 01:25:08.147, Speaker B: They won't process their transactions. I said, okay, how much do I have to pay them to do that? Or how many do I have to convince? And so I started working on a prototype of a smart contract that will pay miners a bounty if they haven't included Ord and Gigi's transactions in the block. Right. So what if you could just systematically pay to censor a specific address? Because normally in defi it doesn't work so well. Right. You could just like they could change addresses, they could move their money to another address and then it's hard to keep track of who's who and who to censor. Also it's like against the ethos of Ethereum and maybe there'd be like repercussions.
01:25:08.147 - 01:25:49.427, Speaker B: But here, Ordnance locked that address on that game account, right? That's their character that they're playing, their empire. So yeah, I just need to like somehow convince miners not to let them process and then thought, well, how do we even run our own miners? How do we like just attack the underlying infrastructure? Because that's the problem with scaling horizontally, right? Is that okay? Xdai and Gnosis are pretty decentralized, but if you want to have hundreds, thousands of roll ups with like small sets of validators, and I really care about winning, I mean, I can start messing with the validators, right?
01:25:49.531 - 01:25:50.707, Speaker A: Or the sequencers in this case.
01:25:50.731 - 01:26:10.465, Speaker B: Yeah, yeah, whatever it is. Like if we're using Cosmos, it's validators. If we're using rollups, it's sequencers. At a certain point I get the incentive to fuck my opponent and win A big prize is greater than the incentive of the validator to keep things legit. So you really do need actual blockchain features and not make believe security.
01:26:10.845 - 01:26:12.869, Speaker A: So sequencers have to be trusted then.
01:26:12.997 - 01:26:16.597, Speaker B: Yeah, I mean that's why we're building on chain in the first place. We need trustlessness all the way down.
01:26:16.621 - 01:26:32.141, Speaker A: Well, I mean, if you're thinking about spinning up roll ups, right, and these roll ups are ran by sequencers. In Arbitrum's case, it could be arbitrum. Optimism. Optimism. So we have to trust those sequencers because they could reorder transactions if they wanted to, right?
01:26:32.213 - 01:26:43.559, Speaker B: Yeah. And we need to fraud proofs as well. Been waiting for fraud proofs. But the reason they don't reorder is because their entire business dies if they do. Right. So like they make A lot of revenue. Arbitrum sequencing correctly.
01:26:43.559 - 01:27:03.945, Speaker B: If people start showing that they're sequencing incorrectly or censoring on purpose, or getting bribed to censor, they kill their whole business, right? So they have a larger incentive not to cheat. So if they are running the roll ups right, as a centralized entity, it's actually safer because game theoretically they're punishable. It's unknown sequencers and anonymous sequencers, right.
01:27:04.025 - 01:27:15.873, Speaker A: So espresso, right. They decentralize the sequencer set, right? So they could be individual actors that could collude with others that could reorder just so they can get.
01:27:15.969 - 01:27:17.193, Speaker B: So I can win my NFTs.
01:27:17.249 - 01:27:19.209, Speaker A: And they get more, they get a bounty for it, right.
01:27:19.257 - 01:28:00.825, Speaker B: I don't know. Well, and this is actually why it's funny. So I got this idea from Patrick McQuarrie who's a crypto researcher and he talked about in a paper how you could attack Monero using Ethereum or any blockchain for that matter, by just having a contract that rewards miners for proving that they created an empty block. You create an empty block on Monero, you push the proof to Ethereum saying look, I created this empty block, use some kind of light client to validate it. I don't know how you do it really, but then the smart contract on Ethereum will pay. You probably made an empty Monero block and it'll pay you just more than whatever the fees are in Monero currently. Right.
01:28:00.825 - 01:28:29.591, Speaker B: And so you can just like kill a chain by paying on another one to kill it. You can like censor itself and you could do the same with Ethereum. Ethereum could attack itself. You could build a smart contract on Ethereum that pays miners to have empty blocks. Right now there's no way to do it because it's too expensive. But when I talk to Bitcoiners about why they don't want roll ups on top of Bitcoin and like introduce that complexity. Because it'd be great if we could build roll ups on top of Bitcoin.
01:28:29.591 - 01:28:35.975, Speaker B: It's so secure. Just change a couple of opcodes and then accept proofs for roll ups. Like you could build fucked up incentive.
01:28:36.015 - 01:28:39.215, Speaker A: Structures or just roll ups availability later, right? Yeah, that's all it is.
01:28:39.255 - 01:28:55.245, Speaker B: And, but they're like, what if you built something that could attack us from there? Like what if you could build mess with the incentives at this higher level that would undermine the security of Bitcoin itself? Like we don't know what you could make there. Yeah. Anyway, maybe that's not relevant.
01:28:55.545 - 01:29:01.953, Speaker A: Cool. Any Final Questions Comments Points Summary Are.
01:29:01.969 - 01:29:03.405, Speaker C: There any fun games today?
01:29:04.465 - 01:29:06.057, Speaker B: I had fun playing Primodium.
01:29:06.201 - 01:29:06.673, Speaker C: Oh yeah?
01:29:06.729 - 01:29:09.937, Speaker B: Yeah, yeah, I did. I think the UX is getting really nice.
01:29:10.081 - 01:29:13.513, Speaker A: Can you explain what the game the logic behind Primodium?
01:29:13.569 - 01:29:48.795, Speaker B: Sure. So Primodium is a fork of Factorio or Factorio, also called mindustry is the open source version of Factorio. It's basically a game about automating mining. So at first you click to mine and then you build the machine that mines for you. Then you start moving the mined goods over and then you build a ramp to move the mined goods for you over and then you want to mine this new thing, you need a new factory and you keep just. It's about crafting. You just mine and craft and build automated crafting and it's an automated craft and mine thing and then you build weapons and you fight shit.
01:29:48.795 - 01:30:17.503, Speaker B: And it's not a popular game. Factorio, it's an indie cult classic with a very niche audience. It has no monetization besides buying up front indie games. So it doesn't have the marketing appeal. I don't think it's its fault but. And Factorio is fun, but to a point for me some people have a lot of fun, play forever and meet a couple hours and I'm done with Factorio. But they made that.
01:30:17.503 - 01:30:43.945, Speaker B: They put Factorio on chain and it's a couple hours of fun and they had to make some interesting sacrifices in the back end because Factorio has too much state moving and to get things going you have to do interesting shenanigans and they're using a burner wallet and browser because they haven't built. There's no reason to build all the account abstraction yet until you have product, market fit and actually fun. But it's getting there. They've managed to put it on chain.
01:30:44.065 - 01:30:44.465, Speaker A: Nice.
01:30:44.545 - 01:30:58.753, Speaker B: And they've only just started. Right. And now what's next is to make the game more fun but also more build onable. That's what Dark Forest spent a lot of time doing is giving the keys to the community, teaching the community how to build on it. And they haven't started that process yet.
01:30:58.929 - 01:30:59.465, Speaker A: Awesome.
01:30:59.545 - 01:31:00.565, Speaker C: Any other games?
01:31:00.925 - 01:31:04.517, Speaker B: I don't want to insult all my friends who are building games on chain right now.
01:31:04.581 - 01:31:06.157, Speaker C: But you are going to insult, I'm.
01:31:06.181 - 01:31:16.917, Speaker B: Afraid even Primodium, which is our bags and who we like as people. It's not a perfect game yet. Right. Everything in Web2 is still better. Right.
01:31:17.021 - 01:31:19.541, Speaker A: But I mean you could say that about most of crypto, right?
01:31:19.613 - 01:31:20.605, Speaker B: Yeah, right.
01:31:20.725 - 01:31:23.349, Speaker A: It's too early outside of Uniswap and.
01:31:23.437 - 01:31:40.261, Speaker B: It'S just too early. Unibot and Harry Potter, even Dark Forest, which was fun. I like Dark Forest. But it only worked in seasons. Right? Like you had to play with. You had to make sure everyone was coordinated to play over a period of time. And you needed like, you know, bull market vibes to get everybody jazzed to win some NFTs.
01:31:40.261 - 01:31:41.701, Speaker B: And it's just hard to get.
01:31:41.733 - 01:31:42.861, Speaker A: I remembered NFTs.
01:31:42.933 - 01:32:20.311, Speaker B: Yeah. But what we did was like, we needed people to see what a fully unchained game was, even when a round wasn't live. And so we forked Dark Forest into a single player mode called Dark Forest arena. And you can play it. It's like arena dfdao xyz. And there you can try what Dark Forest was, but as a single player. And we make like a time challenge or how few moves can you do this? We turned Dark Forest's logic and structure into a puzzle game instead of like a massive multiplayer space battle game, because we could.
01:32:20.311 - 01:32:31.091, Speaker B: And it was like a proof of composability and a proof of building a new front end on the same kind of logic. And that was kind of nice. And it's kind of fun, but not addictive fun.
01:32:31.203 - 01:32:34.763, Speaker C: I've always argued that we already have a fully on chain game and that's defi.
01:32:34.819 - 01:32:36.615, Speaker A: Yeah, yeah.
01:32:36.955 - 01:33:07.195, Speaker C: Fair by definition. It's hyper financialized and there's a lot of modding. Right. Sushi vampire attacking Uniswap yarn building vaults on top of other defi primitives. You have bots playing the game and humans playing the game and they both have fun. The bots make money and the humans just enjoy losing the money and the memes. Harry Potter, Obama, Sonic.
01:33:07.195 - 01:33:16.507, Speaker C: There's constantly new metas, new memes. That's why the game lasts so long. The Defi game, it never ends because there's constantly new shitcoins.
01:33:16.611 - 01:33:27.103, Speaker B: No, I 100% agree. I mean, that's the product market fit of Crypto and why we've grown as a community. Right. Without specul. It's like, you know, speculation is the porn of our industry. Right. Like that's what pushed the vcr.
01:33:27.279 - 01:33:29.927, Speaker A: There's also modding in Defi. Defi Kingdom.
01:33:30.071 - 01:33:33.495, Speaker B: Yeah. Oh yeah. Well, the games on top of defi. Well, that's Defi Kingdom.
01:33:33.535 - 01:33:34.183, Speaker A: That's modding.
01:33:34.239 - 01:33:43.687, Speaker B: We didn't even talk about gamefi. There's a whole genre of fully on chain games which is just yield with more steps. We'll talk about that.
01:33:43.711 - 01:33:44.427, Speaker A: Next podcast.
01:33:44.481 - 01:33:48.115, Speaker B: Yeah. Yeah, that's what Meltem called it, I think.
01:33:48.535 - 01:34:07.623, Speaker A: And one last question for me. Is any attack vectors in on chain gaming? Like, you know you have attack vectors with defi, right? Like composability. Right. So let's say, I don't know, Aave and Uniswap are chainlink. Right. With the chainlink and the oracles.
01:34:07.719 - 01:34:11.359, Speaker B: Or would you manipulate something in the real world?
01:34:11.407 - 01:34:19.791, Speaker A: Because, Mango, you just bought a bunch of assets. Like, I'm trying to understand if there's like, any attack vectors similar to Defi.
01:34:19.943 - 01:34:22.455, Speaker C: For me, the biggest attack vector is getting rocked by the death.
01:34:22.535 - 01:34:24.983, Speaker A: Yes. I. Yeah, like bald.
01:34:25.079 - 01:34:26.119, Speaker C: Yeah, exactly.
01:34:26.247 - 01:34:27.695, Speaker A: I got wrecked. Yeah.
01:34:27.815 - 01:35:13.091, Speaker B: So one interesting thing that we discovered while trying to attack Xdai to attack Dark Forest was that there's a Black hats become gray hats, which is very interesting. So there are some people who can attack and hack today that don't because they don't want to be bad and they don't want to risk going to jail. If I steal your eth, that's bad. That's a crime. But if I steal your in game nft and beat you in game because I broke consensus and the underlying chain, that isn't as bad. Do you understand the difference? I can do really evil things to the ecosystem in order to win the game.
01:35:13.203 - 01:35:17.267, Speaker A: But that's the same thing with Defi, right? You're doing evil. I mean, it's just a game. Right, but really.
01:35:17.371 - 01:35:39.129, Speaker B: Right, but there are a lot of people who won't do evil things in defi because they don't want to be criminals. Right? Like, to steal from you. To like, I'm ready to send you a virus in Dark Forest. Like, hey, I mine the entire map of Dark Forest. Do you want the map file? I give you the map file and like, takes your private keys and gives me your empire. I'm ready to do that. Right.
01:35:39.129 - 01:35:44.745, Speaker B: Because it's a game. I'm not ready to do that to take your money because I don't want to go to jail and I don't want to commit crimes.
01:35:44.785 - 01:35:47.025, Speaker A: What if that empire was worth a lot of money?
01:35:47.145 - 01:35:49.937, Speaker B: So, okay, then things change. Yeah, but.
01:35:50.041 - 01:35:50.713, Speaker A: Which is what's.
01:35:50.769 - 01:35:54.193, Speaker B: But I might still do it because it's a game. Well, defi is a game.
01:35:54.289 - 01:35:55.009, Speaker C: Defi is a game.
01:35:55.057 - 01:35:57.601, Speaker B: Right, Right. But the regulators might not think so.
01:35:57.673 - 01:35:59.997, Speaker A: Yeah, I think that's the. The difference.
01:36:00.101 - 01:36:37.385, Speaker B: So what we realize is that actually games are really good stress tests on chains for defi. And that's why every time a new roll up goes on xdai. They ask us to launch Dark Forest again and to stress test it. With Dark Forest, it's like people are motivated to attack games at a greater frequency in some degree or a different set of people are motivated to attack games. And so it's a different way to like live test your new blockchain by bringing game people on. That was kind of cool realizing that. Cool.
01:36:37.465 - 01:36:40.965, Speaker A: Well, any other final thoughts before we end?
01:36:41.625 - 01:37:00.023, Speaker B: Well, what do we talk about? We talked about Dojo. We talked about Mud. We talked about the games. Dark Forest, Primodium. I mean, there are other cool ones too. Sorry, I'm not mentioning them. There's AAA titles that are coming in the future that will not be fully on Chain, I don't think.
01:37:00.023 - 01:37:05.855, Speaker B: I think fully on Chain is truly the indie experimental scene no major studio can risk.
01:37:06.015 - 01:37:14.575, Speaker A: So this is like what Chris Dixon said, like what people nerds are doing on the weekends. This is where we are in the on chain game world.
01:37:14.615 - 01:37:16.743, Speaker B: Which means in 10 years, they'll be successful.
01:37:16.799 - 01:37:17.503, Speaker A: Very successful.
01:37:17.599 - 01:37:19.115, Speaker B: 10 years is a long way.
01:37:20.665 - 01:37:29.125, Speaker A: Well, we're. We're at time. It was great chatting. For those that want to subscribe, hit subscribe. But thanks for tuning in.
01:37:30.305 - 01:37:31.405, Speaker B: Bye, everybody.
01:37:32.025 - 01:37:35.745, Speaker A: Thanks for listening to Good game. Don't forget to subscribe. We'll see you next week.
