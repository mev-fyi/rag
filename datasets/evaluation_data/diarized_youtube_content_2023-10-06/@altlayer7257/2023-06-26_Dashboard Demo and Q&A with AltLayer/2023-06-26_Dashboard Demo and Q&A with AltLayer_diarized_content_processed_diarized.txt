00:00:00.410 - 00:00:45.346, Speaker A: SA hello, this is Amrit and Yauchi again, hope you enjoyed the talks. In case you missed any, the entire video will be available on YouTube and we'll also be segmenting it so that you can jump directly to the talk that you may have missed. Now we are towards the end of this virtual event. This segment will be the last bit on our agenda today and therefore we'll.
00:00:45.378 - 00:00:47.810, Speaker B: Keep this segment as A-Q-A session.
00:00:47.970 - 00:01:15.700, Speaker A: We have received several questions from the committee before hand. We'll start with those but please post your questions in the YouTube chat box and we'll try to pick as many as we can. But before we start, I would like to ask Yauchi to give us a quick demo of our roll up launchpad. We have been building this for quite a while now and we did a couple of campaigns around this as well. And so let's go through that first and then we'll open the floor for a broader Q A yaoshi over to.
00:01:19.190 - 00:02:37.390, Speaker B: So I believe, like most of the audience already know, we have this service dashboard platform, right? So easily you can just log into this dashboard technology and once you enter this page with a single sign on typical your Google account, you can see roughly the same sort of structure and setup as I'm showing to you. So here I will just show you how to quickly set up a roll up or flash layer in our context. So there are two ways actually. The fastest way is to use the flash GPT. So we integrate GPT with our dashboard. So in that case, as you can see, you can just describe what kind of flash layer you want and then within a few seconds it will generate the configuration file for you since it's chatbot, right? So you can just tap what kind of configuration parameters you want to change. Example we want to change the name to Rust Day and token symbol to Rust.
00:02:37.390 - 00:03:35.422, Speaker B: So after that it will directly change the corresponding parameters and yeah, after that you can change the token symbol again to so after that, right, you can basically later deploy the flash layer where the generated configuration file. Or we can just use default one here you just click the deploy the flash layer. It will just deploy within two minutes. And there is an alternative way. If you are a developer you want to choose the parameters sort of with some precision, right? So you can go to this second tab called Crate flash layer. And then by default there are two modes for you. One is first.
00:03:35.422 - 00:04:32.660, Speaker B: Comfort serve. The second one is the typical gas mechanism and then you can just input your flash layer name, for example, Rusty again. And then you can configure the gas limit and also the blood time aphrodite. You can also define your token symbol and also the currency name Aphrodite. You define the Genesis account you want it and by default we have this Block Explorer and also token foresight for your roll up, or we call Flash Layer. After that you can just click Create typical, take two minutes to generate the sort of the flash layer. As you can see, right, it's already generated one.
00:04:32.660 - 00:05:17.060, Speaker B: And basically you can look at the Block Explorer. All the blocks are generated and also you can go to the token for set and claim the tokens you sort of have. Beyond that, right, as we can see, there are also IDE. So you can deploy your contract to the Flash Layer or the roll up you just deploy. And by default, we already have some token contract template. You can basically go to the first tab there's Contract Generator. You can just choose what kind of 721 contract you want to use.
00:05:17.060 - 00:06:26.818, Speaker B: And beyond that, if you launch multiple roll ups, right, you can manage your roll up via this tab called Manage Tab. And then you can decide what kind of operations you want to apply on these flash layers or Labs. And as amre mentioned at the beginning of this conference, we have a very special feature called Flash Layer Settlement. So that means when you do anti Mint or some events, right, so you can deploy contract on the L2, but once the event is done, you can leverage this tab we call Roll Up tab and then slide the contract on the L2. And then in one shot, the product automatically roll up all the NFTs and also assets within this contract back to the selected L1. Yeah, this is roughly the sort of the roll up as a service platform can provide for you. And later, as I just mentioned at the beginning, we'll provide more services and for example, the DAP tier with the persistent roll up with fraud proof and voltage sequencer.
00:06:26.818 - 00:06:36.810, Speaker B: And meanwhile, we are also integrating the Arbitrage orbit. So later on you can have more choices to launch for your dedicated rollout.
00:06:37.150 - 00:07:23.370, Speaker A: Yeah, thank you. Yochi, let's open. So by the way, a gentle reminder, if you have any questions that you want us to answer, you can post them on the YouTube chat box and we are monitoring that chat box and we pick questions from there directly as well. In the meantime, we have received questions, I think from Twitter and I would like to take one question and I'll pass it to yauchi first and I'll take another one myself. So let's start with this. Okay, maybe I will start with this one and then I'll pass the second one to Yaoji. So the question is, can you explain the advantages of your technology in comparison to other competitors out there in the crypto space? This is something that I addressed in my first talk.
00:07:23.370 - 00:08:16.682, Speaker A: So basically, there are different types of providers out there, in particular Ras providers that are building similar solutions. By the way, when we started building this I don't think there was anyone or even the term roll up as a service wasn't quite there used in the space. But yeah, since then there have been a couple of at least four or five similar vendors or people building similar solutions. So here are the comparisons. So the first thing is we are the only ones that has fraud proof enabled at the moment using our own tech stack. So this currently on the testnet but we'll hopefully go mainnet very soon after that once we have happy with the results from the testnet. The second thing is that we support decentralized sequencing from the get go.
00:08:16.682 - 00:09:21.582, Speaker A: So again, people are and you heard talks about decentralized sequencing from several speakers today, but decentralized sequencing is still not enabled in any platform as far as we know. And in fact the roll ups that you launch through dashboard could have multiple sequencer if you wanted to. We already have a multiple sequencer testnet already live that you transact with already. And there's other thing that is which is mostly around different kind of like a WASM based because the entire stack is based in WASM, it kind of gives you a multi chain multi VM support from the get go, right? It allows people to kind of have different choices in terms of EVM that they can have. And finally which is we are the only ones that provide this unique type of execution layer that we call flash layer. So this disposable layer where you spin up the flash layer, you use it for as long as you want and when you feel like you're done with it, you don't need that anymore. You can take the entire network down, all the infrastructure that was supporting it will be taken down as well.
00:09:21.582 - 00:09:42.520, Speaker A: So it's very resource optimized and we're the only ones to offer this. Let me pass the second question to Yao Chi. This is more of a experience question which is someone asks could you share some unique challenges that you faced while developing roll ups and model of blockchains at allfair and how you overcame them?
00:09:44.090 - 00:11:05.118, Speaker B: Yeah, it's a great question. So as Amre just mentioned, right, so earlier side, we are providing a lot of unique and brand new features for this space. For example, this decentralized sequencing multi sequencers and also this multivm apart from EVM support, we also support like Wazan and later on for different programming language, they can also compile you to Wasan for execution. And beyond that, regarding this disposable execution layer with proper proof system, all this stuff I would say are quite new to the interior sort of blockchain space. And today I also share about this instrument roll up interlayer the beacon layer, right? And I believe this is also the first time for us to explain what's beginner and how it can really benefit the entire roll up space. So to implement and actually to design these features in a comprehensive way it takes a lot of time and a lot of efforts from the entire team to really make it possible. So the implementation side is already very tough.
00:11:05.118 - 00:12:32.842, Speaker B: And beyond that, for the other challenges, it's really about the automation compared to some other public blockchains or a lot of these general purpose L1s l Two S, right? So you don't need to build your tech stack and most generally to run the infrastructure for your chain itself. But for us, we are building this roll up as a service platform which is quite similar to AWS in the Web Two space, right? So in that case, we need to handle tons of dozens roll ups. Give you one example for the current flash layer spin off, right? We already got over 12,000 free tier spin off via the dashboard. So in that case, we really need to build a full automatic infrastructure to really launch these roll ups, manage these roll ups and also coordinate these roll ups. So that's also very challenging compared to for most of the general purpose L1s L2 designed to manage their own chain. For us, we need a completely automatic system to handle all these automatically instead of doing it in a manual way. And beyond that, right, as just mentioned, because in the long run we want to decentralize the entire infrastructure.
00:12:32.842 - 00:13:54.230, Speaker B: So it's not like pure AWS in web3. We want to have a decentralized this kind of roll up as a service platform. So that's why we come up with beacon layer, try to manage like for sequencing, verification, staging, governance and upgrading, right? So we only with beacon layer to basically help us to coordinate all the rollouts and customers. So this being the roll up via the bikini and in the end all the sort of the sequencers of FRS are from the community, in that way we can make it decentralized and at the same time everything is automatic. So that's why it's not a single challenge like for example, just to achieve consensus protocol or some algorithm. It's like a systematic challenge in general. So from the design implementation for particular features and then for the infrastructure design building and then to the decentralization of the entire infrastructure, as you can see, we need to make a lot of these steps one by one to really make it work in the long run.
00:13:54.230 - 00:14:05.850, Speaker B: So in the future you can see a very decentralized rollaback service platform with the sequencers of WiFi from the community and powered by all layer.
00:14:08.190 - 00:14:57.530, Speaker A: Okay, let's take a question and I will answer this. This is a question that came beforehand, I think via Twitter. And I also saw a question, it's a very similar question on YouTube as well, which is basically the question around can we expand beyond Ethereum? Or one is can we expand to other EVM chains beyond Ethereum? And then the second question or follow up question is can we expand beyond EVM chains. So can we go to non EVM chains? The answer is yes. So the first part about the EVM part, we already support EVM chains. So it's not just ethereum. For example, we did an event, a paid Mint event where you could actually go and bridge assets from BNB chain, Polygon and Ethereum, right? So non EVM chains are already supported and almost any of them can be easily supported because all you need is a basic bridge.
00:14:57.530 - 00:15:26.206, Speaker A: For non EVM chains, the answer is yes. It should also be possible. And the reason is that we have this stack that is built in WASM that allows us to basically support any chain. And I think Ed Felton was talking about something like this as well during his talk, that because you have a warsm base, anything that compiles down to warsm can be supported. So the answer to both questions is yes, the EVM part is already supported. So right now if you want to have a flash lane, you can actually go and connect it to any chain you want, any EVM chain you want. Non EVM chains, it's in the pipeline.
00:15:26.206 - 00:16:03.460, Speaker A: But first you want to finish the EVM components completely. Let's take another question that I saw on I think YouTube somewhere, which is there were talks around Eigenve, there were talks around with Espresso. Will it be possible to integrate Espresso and let's say Eigen layer in roll up as service offering, given that Allclay already has some of the big bits already built? Yaji, you want to take that?
00:16:04.550 - 00:17:09.526, Speaker B: Yeah. So for Eigen layer, as Sriram mentioned in this morning's talk, right, so the Eigen DA is basically quite balanced DA. So it's sort of like it balances the cost and also the performance. So in that case, that's Ryan's platform. So later on for the new version, we will have multiple options for the developers to choose regarding DA. So either you can use your own node as the option DA system, or you can choose probably like Eigenair or even Celestia as your DA system, which are quite professional in building DA network. Or if as a project, right, for example, as a DeFi project, you really feel that your data should be posted to Ethereum to make sure all the data available at this Ethereum security level, then we also provide the option that you can post your data to.
00:17:09.526 - 00:18:40.290, Speaker B: Ethereum is quite costly, and beyond that it's also open to barriers like EVM chains and also some other decentralized storage projects. Regarding expresso Espresso, actually previously we had a bunch of conversations with Ben and we feel that Espresso is really like this pre execution DA. So it helps you to basically fetch and aggregate the transactions on the Espresso platform. After that it gives you ordered list of transactions for your Goluk to execute. Synagogues is also a non intrusive platform for us to integrate to. Actually, for both of these projects, we already have some team members to look at their co based and documentation, to look at how we can plug in Eigen layer, use them as eigen DA at the beginning. And also for the Expresso, we can look at how to leverage Expresso network as this pre execution DA to order these transactions sent to some of our rollabs, if the roll apps really choose Expresso as sort of the share sequencing layer at the beginning.
00:18:43.110 - 00:19:20.270, Speaker A: Okay, let's take another question, which is around Arbitrum Orbit. So the question is explain the integration with Arbitrum Orbit and the tech stack. What is its relevance and why facilitate L3s, how it facilitates L3s app development. So let me take that question for a little bit of context. So those who listen to the talk from Ed Felton, he gave a talk on Arbitrum in general, but also had quite a few bits and pieces on Arbitrum Orbit. So Arbitrum Orbit is basically a tech stack that allows people to deploy application specific instances of Arbitrum code bases. Actually Arbitrum Tech Stack, essentially.
00:19:20.270 - 00:20:16.394, Speaker A: And again, for context, Arbitrum is today the largest L2 or the largest roll up provider today in the market. It has a TVL about 5.8 billion in TVL, it has a market share about 60%. So Arbitrum One is one of the biggest providers in the market for roll up, our biggest roll up today. And so it's really interesting for us to kind of help people who are building on Arbitrum to give them a choice to build the application specific infrastructure that uses the same stack, the same tech stack that Arbitrum offers as a part of Arbitrum One, for example. So it's really relevant because there are people, and Ed Felton mentioned that as well, there are people who really want customizability, there are people who want their stack to be much more scalable, and that you can do that only if you have your own application specific infrastructure. And that's why it's important for us to support Arbitrum Orbit in terms of integration.
00:20:16.394 - 00:20:46.154, Speaker A: It will look very similar to what Yauchi demonstrated at the start of the Q A. We basically will have the same kind of dashboard. You'll have the same experience. You'll be able to just pick and say, okay, I want a flash layer, or I want an Arbitrum Orbit or I want a flash layer connected to Arbitrum One. You'd have all these different choices. You can pick the right kind of stack that makes sense, most sense for your business and application use case. Hope that answers your question around Arbitrum Orbit and why it's important for us.
00:20:46.154 - 00:21:18.920, Speaker A: And obviously it will help anyone wanting to build on Arbitrum Orbit. And basically we will provide the entire, let's say, managed service that would run behind Arbitrum Orbit. Let's take a follow up question, and this is something around Mean. You actually gave a great talk on Beacon Lay and some of all the benefits that Beacon layer provides you. But I think it's good to summarize and this is a question that kind of pertains to that as well, which is why do we refer beaker layer as an interlay? Like what's the significance of an interlayer and why this interlay is important?
00:21:23.530 - 00:22:57.110, Speaker B: Yeah, so why we need beacon layer? So from the system evolving perspective, right, so as we can see, we can divide this roll up category into multiple stages. The first stage we need basically single sequencer and also the proof, either this fraud proof or validity proof. And this proof just need to verify the execution of the transactions via this EVM, right? So in that case, the proof they need to verify the logic for the EVM and also the EVM instructions. And then in the stage two, since there are a lot of requirements from the community or projects, the one is multi sequencer to make it relatively decentralized to avoid single point failure and to mitigate mev or some other issues. Right? In that case we need to have multiple sequencer. And once we have multiple sequencer, we need some sort of agreement protocol within these sequencers to make sure they agree on the same block of transaction to be executed and generated. So in that case, for the proving system, they also need to take the agreement protocol into consideration beyond this execution of the instructions.
00:22:57.110 - 00:24:05.094, Speaker B: Then we need some extra implementation and logic for the proof system to support this extra agreement protocol, among other sequencers. And on top of that, so since we have multiple sequencer, we know who behaving wrongly and who are behaving in a good manner the proof system, right? So we need staking and slicing basically a penalty mechanism to basically punish some of the sequencers who behave maliciously. And that's sort of the stage two SC. Three is sort of like why we are proposing this beacon layer because right now we have probably five major roll ups. But granularly when more games, social applications, DeFi applications who are capturing a lot of users, they will definitely spin off their own roll ups or app chains. In that case, we can foresee tons of thousands of roll ups in the world. And in that case we really need sort of decentralized layer to manage these roll ups.
00:24:05.094 - 00:24:38.250, Speaker B: That's something we are building our layer. Right, the first step, we provide this no code run platform for developer to quickly spin off the roll ups within two minutes. But after that we want to make it decentralized. So that's why we need this enshrine roll up interlayer between the roll up and also the ethereum. So once we have this decentralized layer, it can help us to handle a bunch of things. First one is the decentralized sequencing. So as we just mentioned, ROLAP may want to have multiple sequencers.
00:24:38.250 - 00:25:02.410, Speaker B: Where to find these sequencers. We need a decentralized network. And after that, we also want decentralized verification. Where to find these verifiers. We need this network. And beyond that, how we do governance, how we do message passing across different rollabs, how we do the upgrading, and even how we do this on chain governance. All this we need a decentralized protocol.
00:25:02.410 - 00:25:56.954, Speaker B: So in the adult case, it should be Ethereum. That's why in my talk I mentioned about the best case for infrared roll up is to light all the roll ups in front to Ethereum. But we just create too much responsibility for Ethereum in that case. So that's why we need something like this beacon layer to help to coordinate or castrate all these roll apps. At the same time, provide is a decentralized sequencing, verification, staging, slashing, governance, upgrading, all this stuff. In that case, we can provide the entire decentralized platform for all the developers, especially game developers, NFT, or the social developers, which they are not familiar with how to smear up, roll up or blockchain. Right? So they can just focus on their business logic.
00:25:56.954 - 00:26:18.920, Speaker B: So that's why we need Bittener, basically. It's sort of like we follow the evolution of the technology in the rollab space, but at the same time it's definitely needed when we have more and more rollouts in this ecosystem and space.
00:26:20.410 - 00:27:11.830, Speaker A: Thanks, Yachi. Let's take this question I'll take this question which came on YouTube just now. Any plans to have your blocks pro that look like Ether scan but built on allclair Block Scout Explorer scan is somehow confusing? So the answer is, first of all, thank you for the feedback around Block Scout. And so the idea is, yes, we would love to support multiple different types of explorers, but at the moment we mostly focus on integrating those explorers that are kind of open source. It's easier for us to kind of integrate that quite easily with our rest of the stack. At some point, if we feel like it's not good enough for our clients, we'd be happy to go and build separate blocks. For hopefully at that point, maybe someone else will build a much better Block Explorer and that we could just use and integrate.
00:27:11.830 - 00:28:14.106, Speaker A: But for those and some people might, those people who are looking to have persistent Block Explorer persistent roll up, they might actually want to have a proper Ether scan like tool. So in that model, basically you have to contact Ether scan and Ether Scan can build a blocksproof just for your specific use case. As you can imagine, it comes with a cost and it may not be interesting for, let's say, short term usage. And that's kind of why we are using something which comes open sourced and free. But yeah, for those that are clients that are looking for, let's say a longer term persistent roll up, then I think something like Ether scan could make sense. And yeah, at some point, once we have a little bit more time on hand, we might be able to might be interested in kind of building our own blocks port as well. Let's take another question which is on yeah, so let's take a question more on the non tech side this time.
00:28:14.106 - 00:28:23.280, Speaker A: So this is for Yao Chi. What are some of the real world use cases or applications where Allclass solutions have been successfully implemented? Would you take that?
00:28:25.090 - 00:29:50.034, Speaker B: Yeah, there are a bunch of partners we've collaborated recently. I believe some of the successful examples we show like for the past few months, one is this Ft Mint. As we all know, we minted this OG badge and also this Ort empty and also this carriers cool. And for this empty mint, right, typically it's quite straightforward for users to use and basically all the empty minted within a few seconds or a few minutes. So it's quite smooth. And in the end the protocol automatically settled all the NFT back to ethereum and people can easily trade over the open sea. And beyond that, we also have the partners who are organizing events using some tickets and this successfully sort of run this empty system for some of these events, like the football events recently in Malaysia and with some smart wallet, we provide this really seamless user experience for the users.
00:29:50.034 - 00:31:06.898, Speaker B: So they don't need to set up MetaMask, they can just click on the page to mint the NFT as the ticket and everything is done automatically on the back end. On the other side, it's related to the big partnership announcement and basically some of the firms we already set up the partnership and they will start to use our layer, I mean our Ros platform to set up these different rollouts for different famous game and game studios. So, as you all know, right, for game and also social applications, the latency is very important. So we got a lot of feedback from the game developers either from the web two or from web3. Of course, their requests are quite different. Some of them request for 15 billion gas limit, some of them request for subsecond blood time and some of them want to be quite user friendly with zero gas. So in that case they're not possible for a general purpose how to achieve that.
00:31:06.898 - 00:31:49.534, Speaker B: And so they seek the help and support from us. And then later for all these sort of parameters or configurations, you can just set it up via the dashboard yourself, so no need this manual support anymore. And these are sort of the examples we've done for the past few months. And of course we continuously receive the demands from DeFi projects. For DeFi projects they want the security to be as high as possible. In that case they want the multi sequencer and meanwhile proof system is a must. And also some other governance project.
00:31:49.534 - 00:32:45.280, Speaker B: The one is multi sequencer, basically as many sequencer as possible because it's for governance. So it will be great to have quite decentralized system compared to single sequencer or it's rightly centralized roll up system. So as you can see right, the requests and also the requirements from different project are quite different but in the end we clearly see that there's a lot of demand for customization and a lot of demand for this dedicated roll up just for the applications. So it's a quite clear trend at least for us to provide this no code rust platform for these projects as they can just focus on their main business logic and underlying infrastructure can just being requested via all layers platform.
00:32:47.570 - 00:33:16.406, Speaker A: Thank you Yauchi. Let's take a couple more questions. We are pretty close running out of time so let's take two more questions. So I'm seeing a question on YouTube all kids team, thank you for such a great event. A lot of insights and deep dive into the role of landscape and developments. Are you planning to onboard third party validator companies and testnet? The answer is yes. We are at a stage where the nodes are still run by us so it would be kind of staged release.
00:33:16.406 - 00:33:46.050, Speaker A: The next stage we'll be opening up the testnet in a kind of whitelisted manner so if you whitelist then you'll be able to come and join the network and the second stage would be a completely permissionless testnet where anyone could come and become a node operator. If you go back to Yautchi's presentation, he has a list of upcoming, I guess milestones that he touches upon. There's another related question that I will pass to Yauchi which is what is the system requirements for running validate and node?
00:33:48.010 - 00:35:05.760, Speaker B: The cool part based on our experiments like the specs for running either a sequencer for a roll up or running a validator for the beacon layer it's minimum typically for some of our internal machines it's like two CPU core and 4G Ram but we recommend at least you have the machine with laptop specs, right? But in general it will be sort of the minimum machine requirement. So that's why we always emphasize that we want to have this decentralized infrastructure as early as possible so we can welcome as many community members to join the network to provide their sort of machines for becoming sequencers or becoming the big invalidators. So in that case, as I just mentioned right it's no longer like the AWS in web3 it's truly decentralized infrastructure system to provide roll up as a system product for the rollab space.
00:35:24.810 - 00:36:30.838, Speaker A: It so let's take one. More question from I will take one more question I will leave the last question which be a simple question for Yaoji to close off. So one last question for me which I'm picking from YouTube which is how do these technologies address scalability, cost, efficiency and user experience challenges commonly faced in decentralized applications? The answer is actually when you have imagine for example when you are interacting today with a uniswap on ethereum you are basically as a user you're paying two fees. One fee is. What you pay to Ethereum as gas fee and the second fee is what you pay to the application itself, right? So there are two fees that you pay and this is not great for user experience, right? And that's kind of why people are developing and building account abstraction where you could say, okay, I don't want to pay user doesn't have to pay the gas fee, user only pays the application fee, for example, the fee for trading, for example. And all of this could be very easily adjusted. This is very hard to do on a base chain and that's why you need layers and layers of abstraction on top to be built.
00:36:30.838 - 00:37:14.390, Speaker A: But if you have something like an application specific roll up, you could actually do and build all of this quite easily. For example, you could have a completely gasless experience and not in the form of account abstraction because someone else is paying a gas. But here the model could be completely gasless where there's no gas at all, even at the protocol level and you can prove that and that's why that actually helps you in one way at least from user experience in terms of user experience, so users don't have to worry about acquiring gas token and paying for gas. And the other thing that you can do, for example, you can improve your latency and scalability, which obviously gives a lot more benefit to people interacting with the blockchain. One last question and we'll close off as we are running out of time. Yaoji when mainnet.
00:37:18.990 - 00:38:34.990, Speaker B: So we are progressing step by step. So right now if you look at the dashboard, right, so for a lot of these rollout services, they are sort of production ready. If you want to launch this FP campaign or some gaming sessions, you can quickly launch via the dashboard. So basically all the operations and activities can be done on the flash layer alpha diet you can settle on the selected ethereum, polygon and beambachen. So that part is already production ready but for the beacon layer side, right? That's why we are running a lot of campaigns on the testing the features for the beacon layer recently, like for the past two we already tested sort of like this multi sequencer and also staking mechanism and later on we will test this no joining and challenging mechanism. So granularly, we will roll out these features once this production ready. And meanwhile, as you can see, we want to build all this stuff ready before we launch at midnight.
00:38:34.990 - 00:38:53.350, Speaker B: In that case, I believe you will see a lot of good news and partnership along this way and hope the community can basically join us and together we witness the progress of the entire development.
00:38:54.650 - 00:39:10.586, Speaker A: Well, thank you. Yo Chi. With this we have reached the end of the Rasp day, the roll up as a service day. Hope you enjoyed the talks from the amazing speakers and this Q A in particular for those who didn't notice, it was a live Q A. So we are picking questions live from people, posting them on YouTube, and we.
00:39:10.608 - 00:39:11.994, Speaker B: Are answering them in live.
00:39:12.192 - 00:39:37.702, Speaker A: We also thank all the speakers for making time to prepare for the talk, given their busy schedules and time zone differences and whatnot. So, yeah, that's the end of this Rast day. A gentle reminder that several of our team members will be in Paris for ECC. It's an event that will happen in mid July this year. We'll also have a roll up day side event there. So if you will be in town, come and say hello. Up until then, goodbye and have a very good day ahead.
00:39:37.702 - 00:39:38.020, Speaker A: Thank you.
