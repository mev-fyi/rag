00:00:10.090 - 00:00:35.640, Speaker A: So today we have Matt from Arbitrum and like Lumi from ZK sync and Nash from Rokit and Osman from Polygon. So we will discuss the ROS and also scaling for ether. I'm Louis from seven x Ventures. I think the first question to all the panelists will be, can you help to introduce yourself and the project we are working at?
00:00:37.050 - 00:00:37.800, Speaker B: Hello.
00:00:38.410 - 00:01:04.850, Speaker C: Okay, hey guys, I'm Matt. I run the product team at offchain Labs. We're focused on scaling Ethereum, but also just making blockchains more accessible to everyone generally. So that's through obviously optimistic rollup solutions like Arbitram one, antitrust or alternate data availability committee solutions like Arbitrum Nova, and kind of a newer path for launching your own chain orbit, and then also kind of a separate WaSm VM operating alongside the EVM and arbitrum chains, which we're calling stylus.
00:01:05.430 - 00:01:30.140, Speaker B: Hi, my name is Daniel Lumi. I'm the senior product manager in charge of Zkstack at Zksync. We are also focused on scaling blockchain. We just sprinkle a little bit of ZK in it. Zkstack is our modular framework for anyone to deploy their own chains with actually trustless trust, minimize bridge as well as interoperability. And you need some ZK magic for that bit.
00:01:31.390 - 00:02:22.250, Speaker D: Hi, my name is Nash. I'm a research engineer at Celestial Labs and a contributor to Rollkit. What is Rollkit? Rollkit is a modular framework to build sovereign roll ups. You can choose any execution layer, any DA layer, and any shared sequencer and keep sovereignty over your chain without underlying infrastructure. Yeah, so any combination could be working. For example using Celestia or avail as a da layer, then using Astria as the shared sequencer and for example an EVM chain or cosmosm chain as the execution environment and the rocket node in the middle, communicating with all the other roll up nodes to basically follow the canonical chain and decide on the fog choice role.
00:02:23.070 - 00:02:58.600, Speaker E: Hey guys, this is Osman. I'm at Polygon Labs leading infrastructure partnerships. Probably less of an engineer than other folks in the panel, but working very much on our Polygon CDK, which is our app chain effort, and trying to get as many infrastructure providers as possible to adopt the stack and make the developer experience of building polygon CDK based chains much better. And Altlayer is one of the teams that closely collaborating with.
00:03:00.410 - 00:03:37.738, Speaker A: Yeah, thank you so much. I think the first question will be quite opinionated. So I think everyone here already hearing about Op ROF and ZK Roth for a long time for more two to three years. And then currently we still want to understand what's current progress. Like the obscaling theorem, if we rate from one to ten, and how do you guys rate what's current status? And then also can we elaborate more how your project, your research, like the collaborate, contribute to the scaling for the Ethereum? Yeah, Matt, sure.
00:03:37.844 - 00:03:41.102, Speaker C: This is rate how far we've come in terms of scaling Ethereum.
00:03:41.166 - 00:03:41.780, Speaker A: Yeah.
00:03:42.630 - 00:04:25.290, Speaker C: And then what are we doing to help with that? Yeah, I think we're at like a three right now. If you look at general usage on blockchains, right, there's a lot of speculative trading and interesting transactions happening. But generally compared to consumer applications, we're like getting destroyed, which is fine because that's how you build technology. I think the nice thing is the reason why we're at a three is because we have solutions available today that significantly reduce transaction costs while maintaining security. Primitives that you're used to, like optimistic roll ups and ZK roll ups that are coming out. But we still have a long way to go. I think obviously what we're doing is kind of at offchain labs we're focused on kind of continuing to increase the efficiency of the execution layer.
00:04:25.290 - 00:04:56.570, Speaker C: Right now we've got interactive fraud proofs. There are multiple chains in deployment. There's a lot of chains in Testnet now that are exploring, kind of launching their own execution environment. But there's a lot of work that needs to be done to continue to make the state transition functions and the vms that you're working with cheaper and cheaper and more accessible. And then obviously, I think yesterday I was at some account abstraction event. There's a lot that needs to be done at the kind of Ux level for users to make it actually easy to use blockchain. So obviously there's cost at the infrastructure level and there's also ease of use for users.
00:04:56.910 - 00:05:43.798, Speaker B: Yeah, I mean, what are we in 1997 now as far as. No, I mean, the reality is, it's funny, people give layer two, can I say shit, give them shit for focusing on infrastructure. The reality though is if we had any application with even close to usage of Instagram, it would all crash and burn, right? Blockchain doesn't scale. And we tried to fix it, including Salana. So we tried to fix this with execution sharding in Ethereum originally, right? The idea was let's split Ethereum into 64 different shards. The problem is each of those shards would have 160 fourth of the level of security of all of Ethereum. Right? And then there's no real good concrete plans on how to do interoperability between those shards.
00:05:43.798 - 00:06:20.070, Speaker B: This is essentially execution sharding 2.0, right? Or at least with the fractal stack idea. The idea is now every single ZK stack chain or CDK chain or whatever chain that deploys is another shard on this network. And then we can use ZK for the interoperability. So essentially we're figuring out how to sort of dynamically scale Ethereum to the level that we could actually have consumer level applications, right? So it's going to take us a bit of time. And the UX is super important. This is why we're investing so heavily in account abstraction, signing with trusted elements.
00:06:20.070 - 00:06:53.182, Speaker B: And from the interoperability point of view, there's a lot we can do to make sure that you don't even have to think of what shard you're on or what the stack chain you're on. You can just use our application. And then there's future research. That is very exciting that the thing I like about ZK sync is we don't really market shit that is not out yet or not heavily been developed. So stay tuned. We have really exciting things coming. And the hope of this is that we can get blockchain to the point that your grandma can use it.
00:06:53.182 - 00:07:05.410, Speaker B: Well, your grandma might not be able to shoot my grandma still doesn't know how to use the Internet. But your girlfriend or your boyfriend, that's not technical. Could use blockchain without even having to think of the underlying layer.
00:07:06.810 - 00:07:50.386, Speaker D: Yeah, if we want to achieve that, I think one of the scaling bottlenecks will be the DA throughput. I think Ethereum is going to the right direction with proto Denk sharding. But the scaling will come first only after Denk sharding. And I think roll up frameworks contribute to that in a sense that they will put it, I guess, more incentive, more pressure to increase the velocity of development because it will be much much easier to develop a new roll up. And how we at rollkit contribute to that is by trying to standardize interfaces. Right. There are a lot of blockchains now possibly communicating with each other.
00:07:50.386 - 00:08:14.810, Speaker D: You have the a layers or shit sequencers and all of those frameworks. Communicating and interacting with each other will be a hassle to develop one on one solutions. And this will just have an exponential cost and too many permutations. Like we don't have that many engineers. So we got to figure out some standard interfaces to make that interoperable.
00:08:16.190 - 00:08:36.578, Speaker E: The original question was from one to ten, how far we are in scaling. Actually this is probably the last time. I will agree Matt, but when I was coming here I was thinking like okay, what number? I gave it three as well, but I was thinking like 2021 one. 2022 two.
00:08:36.744 - 00:08:39.774, Speaker B: Then I'll say four. Just so ZK stack is one step further.
00:08:39.822 - 00:09:47.570, Speaker E: Sure. But yeah, I think still quite early and less of a technical perspective. From my side, with all the roll up as a service providers, what I am seeing and what our team, what Polygon Labs business team is seeing is that enterprises, companies, web, three native startups that are interested in the space now have a much easier way of testing out, testing their use cases, testing their projects and things like that. So I think from a scaling perspective, experiments are being scaled right now. There are many more experiments that are going to happen. I think in the next year, I won't say none of these, but majority of these will not be like mainstream adoption type things. But still, from an experimentation perspective of real use cases, I think these roll up frameworks are going to simplify that process much more and help the scaling of Ethereum from a business perspective.
00:09:47.650 - 00:10:16.020, Speaker B: I mean, people forget that 1015 years ago you still kind of had to spin, if you had any serious website, you had to spin up your own servers in your closet or at your office. There weren't really like cdns were not great. You had to do everything manually. These days you rent, manage WordPress hosting and you spin up a website and you can actually focus on the thing that you're good at. Right. Or you want to do your business use case rather than focusing on the infrastructure. And that's kind of where we're trying to get to.
00:10:17.030 - 00:10:34.120, Speaker A: Yeah, as we all like to only rate three or four likes for the current row of scaling ethereum situation. So I would like to ask, what challenges do you foresee right now for the adoption? Probably we can start from Polygon, from Osman, from Polygon first. Yeah.
00:10:35.210 - 00:11:29.306, Speaker E: From an adoption perspective, I think one big aspect is, again, I'm going to give a business perspective. I think technical complexities is an important factor. I think you were thinking of two years ago, you were thinking of launching a simple dap on a general purpose blockchain, and now all of a sudden you're thinking about launching your own chain, which brings in different way of thinking, different considerations and all that. So I think that's one of the roadblocks. All of a sudden you're starting to think about, okay, how am I going to manage this whole chain myself? Or we don't have the skill set for something like this. So I think that's one there. I think many, but I'll just keep it short.
00:11:29.306 - 00:11:35.210, Speaker E: I'll just say complexities of managing your own chain is a roadblock.
00:11:36.030 - 00:12:40.394, Speaker D: Yeah, and I believe the other part would probably be the infrastructure side, where I as a developer now have to manage infrastructure. And now I want to use different kind of software solutions. But the combination is very isolated. Right. Different roll up stacks have different kind of deployment procedures, different roll up stacks have different kind of interactions with the DA layer, with shared sequencers, and without standardization, you will probably have good solutions per roll up framework, but not much interactivity throughout the ecosystem. And you have to think about if you're now being not held hostage, but coupled into a solution that it's very difficult to get out of. So you can think about the slow mev.
00:12:40.394 - 00:12:57.620, Speaker D: There was a great talk by Chris Gos at Research day in New York that goes deep into that where solutions can now extract mev just by increasing the cost, because it's so difficult to move to a different.
00:13:00.390 - 00:13:44.500, Speaker B: I mean, I think all what you guys said is true for stack specifically like ZK stack. We have this great division of, we're a programming heavy company, it's all tech first. We're extremely focused on that. But one of the things that that angle lets us sort of do is we can also make the UX really easy, right? So you don't have to have different frameworks, different tools for deploying your chain. You can just like out of box solution, you choose whether you want Eigen layer, whether you want like validium Eigen layer. Do you want volition? So you can have both, you can have validium and normal roll up transactions on the same chain. You can have other things that we're announcing hopefully soon.
00:13:44.500 - 00:14:33.300, Speaker B: And you can just sort of click and choose. You deploy it, you run it up, and now you can focus on your application, and then we can remove some of the UX complexity from both the developers as well as the users by providing certain frameworks and certain tools to make it easy. And this is sort of like, this should be the focus of every sort of modular framework to make it as easy as possible, where you don't have to worry about at least the setup process. Of course, the lock in this is true with any technology stack. You build on any framework and programming, it's not super easy to move. But if we do this right, then hopefully that's not too hard either, because we want people to stay on us, not because they're locked in, but because they have the best experience and they can focus on their product market fit.
00:14:36.310 - 00:15:23.762, Speaker C: I think there's three areas that I would focus on if I had to give advice to some random person that was working in this space. I think deploying your own chain just like RPCs is going to become such an easy, frictionless, commoditized thing that I'm not actually worried about the challenge there. The more important thing is actually enabling developers to have a very good developer experience on chain you. If you're looking at solidity or you're looking at kind of what the risk zero folks were talking about, you have to have this totally different environment. If you want to use kind of starknet, you have to learn an entirely new language. So our bet with example, stylus is to kind of bring the existing devs that know other languages kind of arbitrarily, that compile to wasm over into the existing ecosystem, being able to interoperate with EBN. So I think getting that right is very difficult.
00:15:23.762 - 00:15:48.214, Speaker C: And anything that teams can do to make it easier for people to just port their business logic that already exists into whatever the framework they need to put it on chain, where the liquidity is or where the users they want to reach are, is really important. I don't know what the exact solve for that is, but that's going to be one important thing. Probably the next two things, I think are actually much more important. So the second one, I would say, for adoption of blockchains generally is ossification.
00:15:48.342 - 00:15:49.830, Speaker B: In general or for stacks.
00:15:49.910 - 00:16:16.130, Speaker C: Okay. I think generally, yeah, many things. Yeah, sorry. I think ossification around the value of decentralization is going to be really important in Ethereum. I think core devs us, and a lot of the teams here probably agree on the value most users don't care or know. I think a lot of people don't even understand that. If you're using a roll up like arbitrage one, you have security rooted in Ethereum, and if you're using other roll ups, you don't.
00:16:16.130 - 00:17:03.342, Speaker C: It's not something that users think about when they're paying someone. Right? And so as nations start to get more involved in not only regulating, but also kind of deploying tokenized assets on chains, a kind of consensus at a global level that is not just developers, they're actually decision makers at the institutional level, understanding kind of where that trade off they want to make around decentralization is because eventually blockchains don't have a military to enforce their rules. So it is important to understand kind of how other people are. Yeah. So I think the value of decentralization is going to be important. The last thing I think is related to this is accurately pricing storage. So on Ethereum, there's obviously a pricing mechanism.
00:17:03.342 - 00:17:44.894, Speaker C: On alternative data availability solutions like Celestia, there's a separate pricing mechanism if you're using a committee. There's also kind of your own. It's subsidized right now, but you can drive these costs to zero if you're running the chain yourself. But figuring out kind of where that perfect price point is for. Okay, this is storage that's going to live on chain, but the value that users are getting on average is some amount of money and making sure that the cost for storage generally is below that value that users are getting, say, with kind of the emergence of interest bearing stablecoins. I think then we're going to see kind of mass adoption once we don't have to worry about, well, is what I'm paying actually worth it at an aggregate level? We'll start to see mass adoption.
00:17:45.022 - 00:18:09.378, Speaker B: Just address your second point, because I agree as a programmer and a security maxi and I do want decentralization. There's a reason I don't work on other layers. Right. It's not compromises that I think are very smart, or scalable for that matter. Our job as engineers in this space is to build it to the point that users don't have to choose. Right. Smart money cares.
00:18:09.378 - 00:19:05.514, Speaker B: JPMorgan cares about what the level of security of the blockchain is because they have significant money. Right. We can build it in a way in l two ecosystems, and we still need some time to develop, really the worst case scenario circuit breakers. But we can build it in a way where users have cheap transaction fees, they have quote unquote fast blockchain, and they have maximal decentralization, they have security. And this way no one has to choose because we can't really. I was hosting a privacy event, right? And after my speech, we had a round discussion, and after this, I asked them, someone asked me, how do we get people to adopt privacy? I'm like, okay, how many of you use Instagram? Everyone puts up their hand. How many of you use telegram for crypto work? Not encrypted, by the way.
00:19:05.514 - 00:19:07.674, Speaker B: Everybody. How many of you run your own?
00:19:07.712 - 00:19:10.700, Speaker A: Sorry, we need to mind off time. We have three more questions.
00:19:11.390 - 00:19:19.870, Speaker B: Sorry there. The point is, we can't rely on people choosing it. We have to make the decision in a way that they get the best of everything. Without deciding?
00:19:20.770 - 00:19:40.822, Speaker A: Yeah, I think so. We are all talking about security and scaling. And for next question, a lot of people are talking about op ROF and ZK ro up. Probably you guys already asked so many times about what's the benefits of oproaf and ZK ROF. So I won't skip that question. So I want to ask more about. Because there are more latest trends right now.
00:19:40.822 - 00:20:24.740, Speaker A: For example, arbitram is building flyers, can run some ZKD app on top of that, because the power of the computing for both Wasam and also the EVM, for example, we have Zkop hybrid roll up, like the optimism doing, trying to do the ZK fraud proof all. For example, with Polygon and ZK sync. You guys are building like those kind of hyper layer to do the proof aggregation layer for all the l three s on top of that. So I probably will ask more about what kind of pros and cons for each kind of the new approach you guys are trying to do, and then probably give the developers builder here the new update for the newer research, newer projects you guys are working on.
00:20:26.630 - 00:20:35.954, Speaker C: Okay, so the question is, don't talk about the differences between optimistic roll ups and ZK roll ups, but in terms of our projects and what we're offering, what is the differentiator?
00:20:36.002 - 00:20:41.506, Speaker A: Yeah, it's more like for the Stylus, for example, what's the pros and cons for Stylus for current builders?
00:20:41.618 - 00:20:42.038, Speaker B: Right?
00:20:42.124 - 00:20:42.566, Speaker A: Yeah.
00:20:42.668 - 00:21:01.118, Speaker C: So Stylus is pretty awesome. If you have any questions about it, Austin, who is kind of our product manager on Stylus, is in the audience. You can ask him about this after. I think the biggest unlock for. There's two big unlocks for stylus. One, you can use languages that you couldn't use in the EVM before to directly call EVM contracts on chains with existing users and liquidity. This is huge.
00:21:01.118 - 00:21:21.154, Speaker C: There was an active report published yesterday. There's 20 something thousand solidity developers. Great. There's 30 million developers in the world, so let's get them on our chains. That's one big unlock. The other thing is, generally because of developments in compilers over the years with Rust C, C go, all of those teams doing great work. There's actually efficiency benefits when you use those native compilers down to WASM.
00:21:21.154 - 00:21:36.906, Speaker C: So actually running the instructions on chain is much, much cheaper than solidity. Not all the time, but in certain instances. So that's one big benefit. I think. Generally, though, if you're using arbitram chains, you want to launch your own l three, you can do whatever you want with the tech, which is flexibility is key.
00:21:37.008 - 00:21:37.322, Speaker E: Okay.
00:21:37.376 - 00:21:44.174, Speaker A: Understand and sing for the Lumi from Zk sync. Tell us more about the new hyperchain that Zk sync building.
00:21:44.372 - 00:21:55.780, Speaker B: Okay. For hyperchain, we have a lot of value adds also, just to address. Stylus is great, by the way. It really is nice. I'm an engineer. I'm not going to lie about that. That's a cool program.
00:21:55.780 - 00:22:35.578, Speaker B: We made some different decisions at Zksync. Right? We optimized for performance. It's not entirely perfect equivalents, which does have trade offs, but the thing that lets us do it, the type 1234, I'm not even going to name the types. The point is, essentially, if you optimize for performance, you can have both performance and you can come closer to equivalence and have that running at the same time. Right? And essentially this way, again, we need to scale blockchain as much as we can. Pretend like five to 15 tps is not going to get you anywhere. Right? So we optimize for performance.
00:22:35.578 - 00:22:52.686, Speaker B: We're building up the devex in a way that you don't notice much of a difference. Right. And that's the core value that we provide. And we're building a lot of. Again, we're engineering first. We're not going to market things that aren't out, like wasm. Sorry, ckwasm.
00:22:52.686 - 00:23:29.950, Speaker B: That's really far off, mate. So you'll start seeing, I promise you, in the next three to six months, it'll start coming more and more clear the vision of why we went this path of optimizing for performance and how that affects every chain's ability to run. We really believe in a decentralized community that can scale. I know we all do. But it's really the performance that is the underlying key cut point for us. And then we can add things that help with developer experience. I want to say so much that I'm not allowed to say right now.
00:23:29.950 - 00:23:32.414, Speaker B: Understand? Come talk to our team.
00:23:32.612 - 00:23:32.974, Speaker E: Yeah.
00:23:33.012 - 00:23:48.840, Speaker A: I think for Nash, my question will be like, what's the pros and cons for rocades? Because everyone talking about the op stack as the Rokates, also a raw framework. What do you think the pros and cons comparing the op stack comparing with our layer and other guys?
00:23:50.970 - 00:25:00.058, Speaker D: So I would say that at rocket, what we are prioritizing is credible neutrality and optionality of the developer choosing their own infrastructure stack. Because of the DA interface, we were able to integrate Celestia, avail, and bitcoin. We were the first to implement bitcoin as a DA layer back in February, and then there was this whole hype around, okay, let's build l two s on bitcoin. And there's, I guess, a new narrative for bitcoin happening now. And the idea here is that with more DA layers coming out, they can still implement the same interface and everything will still work out of the box. And this also goes for shared sequencers in the future where the a layer can also be a shared sequencer, which is called base sequencing. And using also the AbcI interface from cosmos where you can use and build app specific chains and just any cosmos SDK native chain can then port.
00:25:00.058 - 00:25:17.310, Speaker D: And instead of paying high inflation for their availed data set, they can delegate consensus and data availability and focus on capturing the user experience and the scalability through a DA layer.
00:25:17.730 - 00:25:28.114, Speaker A: Okay, great. I understand. I think for Polygon, the exciting thing is Polygon 2.0, the ZKum framework. Rob framework like Osman. Can you share more about that?
00:25:28.312 - 00:26:31.830, Speaker E: Yeah, for sure. First of all, we have our ZKum engineers in the audience as well, so more questions to them also. But I think big focus for Polygon CDK stack is essentially using our learnings from the DKVM general purpose blockchain and kind of modularizing that stack into different configurations and allowing developers to essentially pick and choose whichever component they want to use for their own use. Case and I think a big focus right now, and for us, we're constantly trying to solve problems, high level problems with regards to app chains and interoperability. And fragmenting liquidity is a big issue that we're constantly talking about. And engineers are constantly researching, working with researchers to figure that out as well. So I would say, like, very big focus on interoperability.
00:26:31.830 - 00:27:00.020, Speaker E: Okay, we have these CDK custom blockchains. How can we have them talk to each other in a seamless way? So there's going to be a lot of updates on that, particularly February is going to be a bigger timeline, more important time when we have more updates, and 2024 is where we want to essentially have these chains work seamlessly together, basically.
00:27:00.470 - 00:27:17.622, Speaker A: Okay, thank you so much. Yeah, thank you so much for your time. Really excited to say, like, in next six months, everyone has a new update for their new research. And also, I'll be glad if next year we came across each other again, everyone will say, oh, it's six or seven points rather than three points.
00:27:17.676 - 00:27:19.766, Speaker E: Right now I'm going to have my.
00:27:19.788 - 00:27:23.602, Speaker C: Own chain of smart chain wind token.
00:27:23.746 - 00:27:26.518, Speaker E: Yeah, we can talk about it.
00:27:26.684 - 00:27:30.862, Speaker A: Okay, thank you so much. And thank you again for Olayer, for guiding us.
00:27:30.996 - 00:27:31.840, Speaker C: Thank you.
00:27:32.530 - 00:27:32.940, Speaker B: Thank you.
