00:00:11.610 - 00:00:46.650, Speaker A: Hello everyone. Welcome to Allview. At Allview, we chat with industry leaders, get to know their opinions and insights, and hear their views. May they be popular, unpopular, brand new alternative, or anything in between. I'm your host, Yao Chi from earlier and elastic execution layer on Ethereum for web three today, I'm super glad to have Arnold from the block research. Arnold has been involved in crypto research since 2020. His research mainly focuses on blockchain scaling technology and also zero knowledge projects.
00:00:46.650 - 00:00:58.510, Speaker A: Hi Arnold, thanks for joining us, all of you. I really appreciate, and why don't you start off by telling us a little bit more about your background and also your research at the blog.
00:01:01.570 - 00:01:43.562, Speaker B: Hi Yaosi. Yeah, thanks for the introduction. And first, I would just like to say that it's a great honor to be invited here and share my opinion with you guys. Yeah, so a bit about me. I started my crypto journey in 2020 when I first bought my first bitcoin. And then from there, I started delving into the technological aspects of blockchain technology as well as cryptography. And afterwards, somewhere in mid 2020, I managed to land an intern role at the block as an intern researcher.
00:01:43.562 - 00:02:10.950, Speaker B: And from there, I guess my research career just kind of grew. And at the block, I slowly found myself gravitating towards blockchain scaling solutions because I'm very interested in them. And yeah, I just started to look at roll ups, sharding and just basically the different mechanisms in which blockchains can scale.
00:02:12.250 - 00:02:35.280, Speaker A: Yeah, sounds great. And as we know, right, two weeks ago, you released the article called roll up as a service. Right. Which is sort of one of the very first few articles talking about Ras. And basically the roll up as service got a lot of traction these days. And in your opinion, how do you define Ras and why do we need Ras in general?
00:02:37.890 - 00:03:46.334, Speaker B: Right. So that's a deep question. I would say that the term Ras wasn't actually coined by me. I've actually heard it from some of the other analysts that I talked to. And basically a lot of them were just talking about different roll ups projects and how all these projects allow a developer to just spin up their own roll up and just utilize their framework as a form of baseline and share common settlement layer so they don't have to worry about security. Basically, the idea of RAS, or at least from what I gather, is that they're just trying to abstract away all the complexities of having to run your own blockchain, trying to bootstrap your own network, and just letting a developer just build up on the execution environment itself. So I guess that's how I would define RAS, right? Basically you're providing all the services required for a developer to just run an execution environment.
00:03:46.334 - 00:04:39.190, Speaker B: And if you can do all that for a developer, then yeah, I guess that makes you a rust. As for why we need them, I think based off the traction that you started to see late last year and early this year, it's quite obvious that many of the use cases in blockchains are very narrow because of the speed at which the speeds as well as the fees of transacting on chain. So I think when it comes to things like perp trading or games, some developers might choose to have a more optimal design and therefore they want to have an execution environment that suits their needs as well as the needs of their users. So inevitably they will turn to Ras as like a solution for scaling their applications.
00:04:40.730 - 00:05:19.970, Speaker A: Yeah, that's so true, especially in your article you mentioned a bunch of projects also, including us. I think for us the angle probably, as you mentioned, is just to build some easy or convenient to use for developers to quickly spin off. Sort of like the l two infrastructure for them to build some scalable applications on top of it. Once we have rust or roll up as a service, are there any new use cases or applications we can expect in the future by using these kind of raw systems?
00:05:21.830 - 00:06:48.906, Speaker B: Well, I think generally speaking, the new use cases so far would be very difficult to tell. Although my best guess would be you're looking at a lot of web two applications that are trying to decentralize themselves. Now, for example, social media, right? In general, I would say that the state of web two media is set for disruption. A lot of these social media companies are huge places where there are venues where advertisers go to, and all of most, if not all, most of the revenue sometimes don't get passed on to the content creators. And I guess while that's not necessarily a bad thing or a good thing, I think the industry is so called ripe for disruption. However, if you were just to run like a decentralized version of Instagram or Facebook on Ethereum, that would be very costly, right? And if you were to put it on some generic roll up like arbitram or optimism, you're going to clog up the blockchain for a lot of the other users. So I would expect these applications will eventually move on to their own roll up, where they can settle on a secure layer like Ethereum.
00:06:48.906 - 00:07:37.600, Speaker B: So maybe they will build a roll up on top of Ethereum. But with this call we're discussing roll ups as a service. It might also turn to this ras to build their own roll ups, right? Because it might be so much more easier for them to just leverage ras instead of building their own roll up on Ethereum. And I think to answer the question, what are some of these new applications? I would say that they are generally applications that require fast throughput and they are currently looking to be decentralized. So I give them an example. But as for whether more of them might pop up in the future, it's hard for me to say today.
00:07:38.850 - 00:08:43.570, Speaker A: Yeah, that's true. I would say, especially for social application, right. These days, either Jack Dorsey or even Elon Musk, they are trying to find new ways to either do decentralized existing social infrastructure or basically trying to sponsor some new protocols to help to build the next generation social applications. I believe with Russ or this kind of platform, right, we can sort of like a similar experience of AWS in the web three. So application developers can just focus on their business logic development instead of really bootstrap or build the infrastructure from scratch. So it will be super convenient for them to have a dedicated layer to handle the request from the users and at the same time to provide better user experience. For example, the account abstraction, or can even get rid of the gas for some of the application like social application or games.
00:08:43.570 - 00:09:01.814, Speaker A: Yeah, beyond that, we know that in your article. Right. You also mentioned about this customizable execution environment, because I believe for a lot of these l two s, they also provide some other virtual machine or environment to execute a contract or programs.
00:09:01.862 - 00:09:02.314, Speaker B: Right.
00:09:02.432 - 00:09:16.320, Speaker A: So how can this customizable execution environment help the web? Three applications and what should one look out for in this case? And what are the pros and cons?
00:09:18.770 - 00:10:45.974, Speaker B: Yeah, so the term customizable execution environments was something that I thought about and I used because I think it's a good summary for what a lot of these roll ups actually are. So basically when we talk about just spinning up like a roll up, basically what you're trying to build is a place where environment where applications can just execute the code. And why these customizable execution environments are important is because if you were to have a single execution environment, you're not going to get the most optimal performance, right? Because you might have a Dex like uniswap that facilitates large volumes and large trades on Ethereum. And because of that, gas fees, even though they can go really high, it's a small percentage of trade volume. But if you were to run like per decks on Ethereum, if you're running like a small trade with a very small margin that has a high leverage. Well, that doesn't make sense to run Ethereum because the high Es fee is going to eat into the small margin that you put in. So what I've just said is a good example of why a single execution environment is not going to work out for all the different applications.
00:10:45.974 - 00:11:32.826, Speaker B: So what should one look out for in this case? Well, you're going to be looking out for environments that are built to withstand the demand of the application. So I believe generic roll apps, they are pretty straightforward. But you have roll apps, I think, from there's a dimension by Cosmos. A lot of them are just building a framework in which basically you can spin up, like an execution environment and customize it to the way you want. Now, I would say Ras is like a bigger version of this. Right. Because Ras actually talks about settlement, but cee, I'm just going to shorten it.
00:11:32.826 - 00:12:15.222, Speaker B: CEE for short is a place where a framework where you talk about how you tweak the parameters of an execution layer so that the application can perform best. And if we were to talk about the pros and cons, I think I've been talking about the pros, about CE so far. Right. As for the cons, the one greatest con that come with using CDE is that you're going to pass off all of the security assumptions to the underlying settlement layer. And that is very important. Right. That's why RAs is so important, because when you just spin up an execution environment, you assume that the settlement layer will be secure enough.
00:12:15.222 - 00:12:44.050, Speaker B: But as a developer, I can't just assume. Right. So where Ras steps in is that if we build a common settlement layer for these different roll ups, we abstract away that concern. Multiple roll ups can have a shared settlement layer and not worry about it, because that settlement layer has a certain amount of economic value that's securing it. So I guess that's where CE and Ras are tied in together.
00:12:44.120 - 00:12:44.354, Speaker A: Right.
00:12:44.392 - 00:12:46.180, Speaker B: Like they complement each other.
00:12:47.990 - 00:13:04.706, Speaker A: I see, yeah. So, as we all know right now, you're doing a lot of research around these rollab solutions. And in the current space, we have two directions. One is optimistic rollab, and the other one is ZK rollab.
00:13:04.738 - 00:13:05.126, Speaker B: Right.
00:13:05.228 - 00:13:27.950, Speaker A: What do you think about the progress of these two directions so far? I'm sure you've been following all the onchain activities or different l twos. Right. Optimism, arbitrage or ZK sync. Yeah. Based on these on chain activities, what kind of trends are we sort of uncovering from this, about the growth of this ecosystem.
00:13:30.770 - 00:14:13.946, Speaker B: Yeah, I think the debate between optimistic roll ups and ZK roll ups have been very hotly debated. I would say deeply researched space. I think that the progress of the two of them have been very clear in the sense that optimistic rollouts are going for compatibility. Right. They're just trying to make sure that optimism have the EVM equivalent. Arbitram is trying to make it easy for app developers to onboard. Basically it's just to become a cheaper, faster version of Ethereum.
00:14:13.946 - 00:14:51.114, Speaker B: Right? As for ZK rollouts, I think it's very clear that they are going with a more optimized approach. They want to make sure that we can handle scaling at the highest levels. You can look at DydX, you can look at ZK sync. They are all trying to reach a level at which we say, you know, what we can to rival the traditional institutions in terms of transaction per second. And the best way to do it is to have a very robust ZK tech underlying the roll up. That's the best way they can see.
00:14:51.232 - 00:14:51.658, Speaker A: Right.
00:14:51.744 - 00:15:49.254, Speaker B: So I think when we look at these things, I would say that the trends that evolve from these directions for the optimistic roll up side, it's hard to say, right. Because many of them are just going with the call data compression methods they're going with. I think optimism has their bitrock upgrade and it's just to make the environment, the op stack more customizable. So I guess when we talk about the trends in the optimistic roll up space, it's hard to say for now exactly where they're going to go. It's still pretty much an open book. But I think when it comes to ZK roll up, the trend is very obvious that many of them are going for the ZKE EVM narrative. You have a lot of ZK roll ups that are trying to build like EVM compatible version and try to onboard applications from Ethereum.
00:15:49.254 - 00:16:53.540, Speaker B: But I guess in the long run these trends can change. And in general, I would say that when the narrative is there, it makes sense for these roll up developers to follow the narrative. Because at the end of the day, a roll up is only as robust as the tech, as well as the size of its community, size of the ecosystem, which is dependent on the users. So if you choose to go against the narrative, you're taking the risk that you set a new trend or you fade out into the background. So with that, I think that for both optimistic rollups and ZDK rollups, the trends will continue to diverge and we'll likely see more vibrant divergence of approach in which these rollouts develop as we move ahead.
00:16:54.790 - 00:17:28.410, Speaker A: Yeah, that's so true. Especially when you are mentioning about sort of the community friendly approach. Right. For both directions, it'll be great. Like we can really make it a developer friendly. That's why either for optimistic roll up or ZK roll up, everyone wants to be EVM compatible or even EVM equivalent. So in that case, basically it's quite non intrusive for developer to migrate their solid contracts to the l two solutions.
00:17:28.410 - 00:17:53.940, Speaker A: Yeah. Another thing, as you just mentioned. Right, as we all know, security and the decentralization are basically the basic properties for most of the l one l two s. But in your article about roll ups, right, you say that decentralization is not necessarily always optimal. Yeah. Can you elaborate a little bit on this part?
00:17:55.770 - 00:18:59.850, Speaker B: Right. So when I say that decentralization is not necessarily optimal, it's because I think it has been shown over time that no matter how much you try to speed up a blockchain, there will always be some form of trade off. So we can see, I think the best example is Solana with its fast block speed and fast confirmation times. But eventually they had issues whereby the blockchain goes down because the validators are just not able to support the throughput of the transactions. Now, I think this is not to say that Solana doesn't work. I think Solana is a great blockchain and they have its own target audience. But I think we must understand that in order for Solana to deliver on that level of speed, it needed to sacrifice some form of decentralization.
00:18:59.850 - 00:20:44.940, Speaker B: And if we were to actually look closer at some of the scaling solutions today, whether you look at Polygon, if you look at arbitrum, if you look at DyBX, all of them have certain level of centralization. Now, does that make it bad? I don't think so. I think that the users who are using these roll ups or solutions, they understand, or at least they will eventually understand after using. If you want these speed, then you need to be okay with a certain level of trade off, right? So if you want for leverage trading and you want that of self custody, then you're going to have to face the fact that sequencer is relatively centralized, right? If you want to use polygon for its cheap fees, well, then you're also having to deal with the fact that the polygon validator pool is a lot smaller than Ethereum. So I'm not saying that you should always be okay with centralization, but I think that if we're talking about scaling blockchains, at some point in time we'll need to trade up, we'll need to sacrifice centralization, we need to sacrifice decentralization. I mean, and we have to be okay with that. As a user, we have to evaluate is the trade off in decentralization worth the reduction in cost, the increase in speed? I think these are things that a user, a developer should think about when they make their choices in terms of which roll ups they want to use or how they want to design the roll up.
00:20:45.790 - 00:21:11.506, Speaker A: Yeah. So basically there is no silver bullet on the scaling solutions. There always a compromise among sort of security, decentralization and also the performance. Right. So what we can do basically is provide more options for the users or developers so they can choose based on their use case or scenarios. And regarding the scaling solutions. Right.
00:21:11.506 - 00:21:57.410, Speaker A: We all know that they are sharding appchains and also roll up. Right. How do you feel about them regarding the progress of the deliverables for the past few years? So we know that a lot of these terms, they came up like six or even seven years ago. And right now, if you look at the current blockchain space, right. Probably only like the appchains and rollab sort of deliver some of the sort of sdks or source code. Right. But in general, based on your experience and also your observations overall, how do you feel about the progress for all different approaches?
00:22:00.070 - 00:23:11.030, Speaker B: Well, I think that all the approaches have their own merits in terms of their progress. How I feel is that it's great to see l two roll up starting to gain some level of attention, some level of traction in terms of shark chains or app chains, also starting to see some degree of traction. But I think roll ups definitely take center stage here. And the reason for that is because app chains are still a relatively newer idea. So I don't think that there are app chains out there which have started to become dominant in their market share. As for shard chains, I think just to be blunt, most of the sharding solutions today still very much rely on having one shard that handles most of the transactions.
00:23:11.110 - 00:23:11.594, Speaker A: Right.
00:23:11.712 - 00:24:14.080, Speaker B: So I think that sharding itself is a very useful concept and is going to be very crucial for ethereum 2.0 when they start launching their shark chain for data availability. Like the shark chains of today will serve as a very good precursor for what might happen. But if we're just talking about the shark chains that have already been implemented and existing today, I would say that by and far most of them do follow the l one narrative, right? They had a period of a lot of activity. And then afterwards, when the bull market comes down, the TVL as well as the on chain activity, on chain metrics all just start spiraling with most other elements. It is not like chains are worse. It's pretty much the same.
00:24:14.080 - 00:24:25.940, Speaker B: I think with regards to that, how I feel is that roll ups will most likely take the center stage moving forward.
00:24:27.830 - 00:24:55.850, Speaker A: Yeah, that's so true. Especially right now, we have so many teams or projects working on new solutions, either for a general purpose or application specific roll up solutions. And as you can see, with more application chains or roll ups coming out, what are the extra or new features do you like to see from them? Apart from the high TPS or EVM compatibility?
00:24:57.950 - 00:25:53.050, Speaker B: Yeah. So I actually think because some of my research have actually gone into the space of KYC, or you could have for more privacy, you say ZKYC, whereby you can prove your identity with a validity proof instead of having to show your identity. And I think that it'll be very interesting to see roll ups, having ZkYC opt in kind of function whereby you have roll ups that maybe all of these roll ups under a single umbrella. Right. And then some of them you can only assess if you have a ZKYC from a particular jurisdiction. Right. So in order to get that true, you probably need some form of regulatory body to come in to attest that the KYC is indeed true.
00:25:53.050 - 00:26:41.786, Speaker B: And I think that is actually a very careful way in which regulations can come in without exposing much of a user's privacy. And it's a very opt in, opt out basis. Basically, if you want access to a roll up and it's ecosystem, right. And there's requirement for KYC, then you have to adhere. But otherwise you always have the option of going to a non KYC required roll up. And why that's so important, I feel, is because let's just say, for example, you are a regulator and you want to enter space. You can't just say, oh, I want to do this, I want to do that, and then expect everything to work out.
00:26:41.786 - 00:26:56.494, Speaker B: Right. If you have a KYC roll up environment, I think it's more practicable, it's a more achievable goal, and you can actually enforce the regulations in such an environment.
00:26:56.622 - 00:26:57.250, Speaker A: Right.
00:26:57.400 - 00:27:22.860, Speaker B: I feel like that might be the first step towards actually having some form of on chain regulation. And I think that would be something that would be very interesting because I for one, believe that the blockchain space should be regulated. It's not with an iron fist, but more of like a step by step basis, and I think this might be a very good way to do that.
00:27:24.110 - 00:28:08.410, Speaker A: Yeah. This view is quite sort of new to a lot of these developers in space, because we've been discussion with a lot of projects, especially the privacy project. Right. They want to provide some sort of verifiable computation environment for a lot of applications in that case. So either sort of the contract or the program can be verified by developers, can probably also by some authorities. As you mentioned, QiC is definitely one of the applications in their scope. Yeah.
00:28:08.410 - 00:28:25.680, Speaker A: So we always end with one more question. Do you perhaps have any sort of alternative or overview of the existing l two or roll up space right now or perhaps for the industry in general?
00:28:28.050 - 00:29:04.954, Speaker B: Right. I'm not sure if this is an alt view. Right. But it's definitely a less common view, which is, I think optimistic roll ups won't die. When I talk to other analysts, many of them would be like, oh, optimistic roll ups wins for now, but eventually ZK roll ups will catch up and overtake them. Well, I personally don't think so, because from what I've researched thus far, I think that the idea of using fraud proof is pretty much arbitrary. Right.
00:29:04.954 - 00:29:53.434, Speaker B: In the sense that you're just trying to find fraudulent transactions over a specific window. But I think there is a bunch of research that goes into how we can have hybrid rollouts. Basically, you could have proof window until the ZK proof is generated and then posted on chain. And then once the ZK proof is posted on chain, it becomes valid. So then you don't have to wait for the fraud proof to, you don't have to wait for seven days to withdraw. You only need to wait for the proof generation times. And then if you don't want to wait for that, you can always withdraw earlier for maybe like a fee, and there could be a market for that.
00:29:53.434 - 00:30:51.630, Speaker B: But with respect to that, I think in general, it's just that a lot of people are looking at as if it's like an optimistic roll up versus ZK roll up. But I don't think that's the case. Right. I think that if you were to view roll ups as a general concept and fraud proofs and validity proofs as another type of concept, then it becomes clear that, okay, moving forward, you might see roll ups leveraging both fraud proofs and validity proofs now, then that becomes like what Zkor? I would say it's just like a more interesting way of looking at how you use technology instead of just saying, oh, arbitram is going to win ZK Singh or ZK Singh will eventually overtake arbitram things. But I don't feel like that's the case. It's not a competition in that sense. It's more of like a collaboration.
00:30:51.630 - 00:31:06.098, Speaker B: All of this is just to increase to advance blockchain technology. So I guess that is my view. I don't know if it's really an OD view, but it's just like a less common view.
00:31:06.264 - 00:31:40.910, Speaker A: Yeah, but I think it's a really nice view, I would say, because especially right now for ZK Rollab, the proof generation time is a little bit long. It probably can take a few hours or even a few days. During that window, as you mentioned, we can just combine optimistic roll up and also ZK roll up. Just make sure either if you really believe in the proof, ZK proof, you can just wait for the proof to be generated and verified on chain, or you can just in an optimistic way.
00:31:40.980 - 00:31:41.214, Speaker B: Right.
00:31:41.252 - 00:32:40.830, Speaker A: So you just assume all the sequencers can generate the right blocks. And in addition, Vitali also mentioned, we can also put some extra governance if there are some extra dispute on this proof of verification on the l one. Yeah, but in general, I think it's a really cool view. And yeah, to all the listeners, I really appreciate your time and thanks again. Thanks Arnold for coming here and to give us a lot of nice sharings about the Jola service and also the progress in the rolap space in general. In the coming months we will be talking about more experts on the industry, l two scaling solutions, and just feel free to subscribe our channel. And meanwhile, we are waiting sort of for the next guest to share a little bit more on either the roll up or on some other new topics.
00:32:40.830 - 00:32:46.000, Speaker A: Yeah, thanks again. And we are signing off to the next time.
00:32:51.090 - 00:32:51.660, Speaker B: You close.
