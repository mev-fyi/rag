00:00:14.250 - 00:00:30.482, Speaker A: Hello, everyone. My name is Amit Kumar and I'm the CEO of Altlair. And this is all view. And we are today very happy to welcome Shanav from Jump. And we are going to discuss about gaming and particularly blockchain gaming. So games that are built on chain. So welcome, shauna.
00:00:30.482 - 00:00:31.894, Speaker A: Thank you for joining us.
00:00:32.092 - 00:00:33.526, Speaker B: Thank you for having me.
00:00:33.708 - 00:00:44.986, Speaker A: So let's start with a very quick intro. So tell us a little bit about yourself. What's your background, what brought you to the blockchain space and what you do at jump, essentially, and what excites you?
00:00:45.168 - 00:01:59.282, Speaker B: Yeah, absolutely. So I actually got introduced to bitcoin and read the white paper back in 2017 while I was still in college, got really fascinated with the space. And while I spent the next couple of years out of college working with a consulting group that specialize in due diligence for private equity hedge fund transactions, I spent most of my time outside of work, sort of coming back to the space. I sort of was moonlighting as a researcher, publishing a bunch of stuff and investing most of my personal capital in the space. I think that's a story that most people can relate to, and I don't think mine was any different in that regard. And so then come summer 2020 was fortunate, as I think were a lot of folks, to see capital appreciation in all of the investments made through that time and was spending so much more time with the space than I was with my day job that I decided to go out and start a small fund of my own with little friends and family capital. And then again, fortunate with timing, was investing largely in the liquid markets through 2021, doing a lot of angel investing on the side.
00:01:59.282 - 00:03:04.210, Speaker B: And through that period, got in touch with one of the folks that was building out the venture business at Jump and saw the opportunity to do something bigger and work with a group that was doing things at a much larger scale and sort of haven't looked back since. So that's sort of how I got into the space. I now sit on Jump's investments and partnerships team, and where I personally have been spending a lot of my time recently is looking specifically at the application layer, the space and also sub application infrastructure that can help facilitate these application use cases. Jump specifically has a lot of folks looking at core infrastructure, which is our bread and butter and where we thrive. And personally, I've been looking more at the application layer because I believe that for all that infrastructure to have value over time, it requires some of these applications that sort of break through and reach not just the people who are interested in the technology for technology's sake, but who genuinely want to use these applications. So that's why I spend a lot of my time personally.
00:03:04.290 - 00:03:13.420, Speaker A: And when you mentioned application layer, is it like broadly sweeping the application layer or is there any sector that you feel more inclined towards, like D five?
00:03:14.350 - 00:03:23.322, Speaker B: Totally. We look across the spectrum. I do as well. But the one place that I've been spending a lot more time recently is on the gaming space for sure.
00:03:23.376 - 00:04:15.022, Speaker A: Okay, well, it fits our agenda today. So let's move to the next question, which is basically when you look back in, let's say 2020, during DFI summer, we saw compound Ave and bunch of other very promising protocols and applications being launched, and they were very successful. You started to see the product market fit in those segments and that actually brought in a lot of users were interested and excited about the promise of DeFi. But some people would argue that they would say, okay, yeah, DeFi is great, but it's becoming more and more complicated by the know. Previously you were just using spot trading and now you have all sorts of derivatives popping up, structured products and whatnot, to a point where you're kind of alienating regular, average users. It's very difficult, for example, for average user to go and use Uniswap, not the swap part, but more like the LP part. Right.
00:04:15.022 - 00:04:31.170, Speaker A: It's very complicated for an average user to do so. So would you agree with some of these critiques who say that the next wave would not be DeFi, the next wave that would bring the next wave of users would not be DeFi, would be something else? Would you agree with this statement?
00:04:31.910 - 00:05:13.760, Speaker B: Yeah, I think there's some level of nuance there. I do think a lot of the financial applications make a lot of sense. I've been having this debate with a lot of people is, what are the specific use cases for the blockchain? What's going to bring more users to the blockchain? I actually think that's the wrong way of framing the question. I think the right way of framing the question is like, what is a blockchain good at doing? I think we reached a point in the hype cycle where there was this thesis that blockchain is going to eat everything. Every application requires a blockchain. And I think that sort of led to this view of what's going to bring users to the blockchain. I think a lot of people in this space get very tribal about the things they support, and it tends to lend well towards that view.
00:05:13.760 - 00:06:14.686, Speaker B: But when you zoom back, in my opinion, and would love to hear your thoughts as well. But in my opinion, the blockchain is good at doing three things specifically. One is instant peer to peer settlement. The second is verifiable programmable ownership. And the third is, which I think has been pretty interesting in gaming, which we can get to later, is being a shared database for non financial information. And so if you think about these are the three things that the blockchain is good at doing, I think there are a lot of financial applications for which it's going to make a lot of sense, and we can maybe keep that to a different conversation. I do think games are particularly well suited to leverage all three of those, right? So if you think about more feature rich games like mmorpgs and so on, which require high compute capacity and will really live from a game loop perspective on unreal five or one of these rendering engines, the asset layer and programmability makes a lot of sense because you can now have part of your game, specifically the application layer, living on chain.
00:06:14.686 - 00:07:12.214, Speaker B: You can introduce various forms of asset programmability, cross access and those sorts of things. And then when you look at stuff like hyper casual games, which don't really require as much of the asset layer to live on chain, they can leverage stuff like instant peer to peer settlement. When you have stuff like escrow based tournaments and all of these things which you would otherwise need to have financial rails in every single country to be able to access those users, you can now start doing that stuff on chain, right? And then you have this category of fully on chain games which can use this shared immutable database property which is uncorrelated with assets or financial information. And so going back to the earlier question, I think there's a lot of interesting financial applications that will come through. I do think when you ask the question of what can blockchains do for each specific application category, games actually can use all of those properties depending on the category of games we're talking.
00:07:12.252 - 00:07:58.218, Speaker A: I agree. I completely agree with your statement. And I also feel like even if you go back to the early computer age, right, when I first bought my first computer, the first thing I did was basically play games because I think it's a fun way to also introduce and bring a technology to a crowd. Right. Of course, the part is, of course about how you can leverage the properties of a blockchain in a much easier, better way. But I also feel there's a fun element that I don't think you can eliminate that fact, I feel, because technology can be very complex, right. And for example, if you look at compare, let's say, chat GBT with something like, let's say, tech blockchain, I feel like blockchain has become way too much techie.
00:07:58.218 - 00:09:00.780, Speaker A: I would say, for example, if you look at even the marketing of Chat GPT, right, it's very focused towards what value it offers rather than about the BFT protocols, rather than, let's say, how the underlying consensus protocol works and the peer to peer network and whatnot. So I feel like if we can see what we can offer to people that gets benefited from the blockchain infrastructure, that I think is super powerful. So I do agree with you that games, and by the way, I played Dark Forest as a fully on chain game, I won't say that it's any different from any other block. If it's actually hosted on a proper blockchain network with, let's say, decent latency, you actually don't even feel like it's any different from a web two game. I feel from a user perspective, and you get all the benefits, as you mentioned, of programmable ownership and whatnot from the underlying infrastructure. So I do agree with you that games are one of the sectors that really take out all the benefits of blockchain in a true sense of it.
00:09:01.150 - 00:09:02.220, Speaker B: Yeah, absolutely.
00:09:03.870 - 00:09:31.220, Speaker A: But of course, we are not quite there, I feel. And of course, blockchain games are not new. Right. We started back with, I guess, cryptokitties was arguably probably the first game that became popular to a point where people were interested in owning some of the kitties. But what do you think has happened over time? Could you give a sense of history of blockchain games, where we are today and where are we coming from? Basically, what have we built so far?
00:09:31.590 - 00:10:03.274, Speaker B: Yeah, totally. So I think when we look back at this specific moment in time, I think we'll feel like we're still in the discovery phase. If we look back at this time several years down the line, I think today we're still in the discovery phase of what really works. There have been a lot of shots on goal and I think that's helped move the ball forward. I think we're still trying to figure out what specific approach to building games on chain works and what makes it fun, what makes the user experience frictionless. And I'm sure we'll get into some of this later in the conversation.
00:10:03.322 - 00:10:03.920, Speaker A: Right.
00:10:04.690 - 00:10:51.386, Speaker B: But I think, as you rightly mentioned, cryptokitties was the first blockchain game that you could say, sort of crossed the chasm and reached a lot of people hit around 8 million in daily trading volume at its peak. And so you could certainly say that it captured the imagination of a lot of people. And I think that was the first one. And I think this happens with any new innovation, right? The first iteration will always sort of hyper focus on one specific benefit that that underlying technology can offer. And in this case it was asset programmability and offering game mechanics that you couldn't really do elsewhere. Obviously, the downfall of that sort of thing, and I think this is something that happens in the discovery phase of any technology, is that it was extremely narrow in its use case. And the fact that it was extremely narrow in its use case, I.
00:10:51.386 - 00:11:58.990, Speaker B: E. Like the core mechanic of the game, was breedability, which led to increasing supply, which led to dilution of uniqueness. And those sorts of things eventually lead to the demise of that sort of application. I think it set the groundwork of like these are interesting mechanics that you can't do with any other type of technology, right? And so then obviously axie builds on top of that, introduces stuff like your PvP and all of these other economic paradigms around the game. I think this is what a lot of traditional gamers hate, is that it took that core mechanic and really financialized it to the extreme, where everything, all of the benefits were tied to the financialization of the underlying assets. And obviously any game where your customer acquisition cost is way higher than anything that the user eventually spends in the game and you're paying out more than you get in, it's not going to survive. But again, I think it took that mechanic one level further and got more people to start interacting with the sort of technology, right? And then I think you mentioned Dark Forest, which to me is like a completely different paradigm.
00:11:58.990 - 00:13:04.434, Speaker B: It doesn't really look as much at the programmable asset part of things, which it does to some extent, but it looks more at this aspect of distributed serverless compute, where everything is on chain. And now you can build interesting mechanics that weren't really possible before. Right? And I think we're now starting to see people experiment with different parts of it. And then going back to the thing that I was talking about earlier, is that every game is not going to use the same sort of advantages that the underlying technology offers, right? Some folks will use peer to peer settlement for payments, some folks will use asset programmability, some folks will use serverless compute. But I think we're starting to see more interesting experiments that aren't exclusively cash grabs. And so then that gets kind of interesting. And I think to me, the thing that's most interesting now is that what these experiments have done is not only gotten a bunch of users that try out and use the underlying technology, not only gotten a lot of people to start building infrastructure to support these kinds of applications, but I think what it's really done is gotten a lot of really high quality game developers.
00:13:04.434 - 00:13:34.270, Speaker B: And this includes everything from small indie studios to some of the largest studios in the world starting to build on chain over the past year. And I think we're going to see some of those games start to come out. And so to summarize, we've had all of these shots on goal that look like failures to date, but I think what they've enabled is getting users accustomed to playing these types of games and interested in playing these types of games. And more importantly, got the real developers to sort of come to the party.
00:13:34.770 - 00:14:17.070, Speaker A: To ask you a follow up question. Do you feel like each of these game scripts are kitties to start with and then Axio? I mean, again, we can hate and love all these games, but do you feel like each one of these games actually brought out some interesting aspect that was not so apparent initially? For example, back in the day, if you're building a fully on chain game around the time when cryptokitties was there, people would say it's not going to work. What's the point of trying anything? While dark force actually showed you that you could build a fully on chain game with every single move, that happens as an on chain transaction. So do you feel like each of these games, even though some people may call it's a crap game or whatever, but you actually brought out the unique feature that blockchain offers to users and to the blockchain developers.
00:14:17.410 - 00:14:38.546, Speaker B: Yeah, absolutely. And I think this is, if you look back at any technology over time, the first folks that start tinkering with the technology, that specific approach is not going to be what the eventual outcome looks like. But I think it takes these sorts of things to eventually bring the final end product to bear.
00:14:38.578 - 00:14:38.774, Speaker A: Right.
00:14:38.812 - 00:14:49.100, Speaker B: And I think all of these applications sort of in some way started showing each of these individual capabilities of what can be done. I think that's laying the groundwork for what's to come.
00:14:50.350 - 00:15:38.854, Speaker A: So now let's take a controversial kind of statement or topic that we have been discussing a little bit on that anyway. But if you look back, right, look, today, right, many hardcore gamers outside of crypto would say blockchain games are basically crap. Or they lack for a better word, they're basically crap, essentially. And anything that you have and maybe it's probably post axe that happened, where people say it's all nFts and you're just playing with those. Very recently, I think Microsoft announced that you can't go build nfts into Minecraft. Things like that. The general perception, at least from the web, two gamers, at least, what some people argue is not great towards, or perspective towards blockchain game is not great.
00:15:38.854 - 00:15:45.846, Speaker A: So how do we feel like we bridge this gap? How do we make those gamers serious about or take us seriously?
00:15:46.038 - 00:16:44.126, Speaker B: Totally. I mean, first of all, I don't think they're wrong. When you have the first iteration of a product that's extremely experimental, you're bound to have a lot of polarization, right? And I think the specific approach that blockchain games have taken so far was extremely polarizing because it hyper financialized everything, right? And most gamers will tell you that they hate pay to play or pay to win mechanics, which is what a lot of these games were so far. I think what it's going to take eventually is what it takes in any line of business is just building good product. And I think a lot of the folks that are building games today are taking the learnings of all of these things that have come before and building core mechanics that are actually fun. And more importantly, not using the blockchain as a means to financialize the core mechanic. But moreover, it's sort of becoming more and more subtle within the game.
00:16:44.126 - 00:17:21.946, Speaker B: I think this extends to the broader question of it's not as much of what can we do to bring gamers to the blockchain. It's almost again like what can the blockchain do to enhance the experience of users? And I think as we see more and more, and we're starting to see this, we're starting to see a lot more folks sort of take that approach and build some of these capabilities into the core mechanics of existing games or new games, all of these possibilities. And I think as those games become fun for people to play is when they'll eventually adopt. And more importantly, I think they may adopt it without even knowing that they're adopting it.
00:17:21.968 - 00:17:22.202, Speaker A: Right.
00:17:22.256 - 00:17:24.470, Speaker B: And that's, I think, the ideal outcome.
00:17:24.630 - 00:17:55.300, Speaker A: So would you say that it's going to be kind of in towards out or would be out in where basically we build games that those gamers would play and feel like, oh, it's really fun. Whatever we're thinking about, blockchain games are actually wrong, or you feel like some of those gamers themselves will find some parts of blockchain interesting and they themselves will come out and build something that us blockchain people would like. What do you think would be the approach? Is it going to be in out?
00:17:57.270 - 00:18:47.598, Speaker B: I think the ideal outcome, which is starting to happen, by the way, is almost like neither of those two things. I don't think traditional blockchain developers are the best suited at building games. I think a lot of people have proven that you can build interesting things, but from just like a success ratio perspective, the ideal outcome would be to have traditional game developers who understand the benefits of the technology and more importantly, understand how to build games that people enjoy playing. Like having those folks come in and start building parts of their game on chain is where things start to get a lot more interesting than they are today. And I think that's starting to happen. This is not totally public yet, but it's starting to happen. A lot of folks are starting to build on chain and they're going to push these titles to the existing users.
00:18:47.598 - 00:18:50.440, Speaker B: And I think that's how that cycle of adoption kicks off.
00:18:50.890 - 00:19:25.726, Speaker A: So by the way, I've put up the gaming blog post that this part, one of the four part series, if I recall correctly, the gaming discussions. Now there are different types of on chain games, and you discussed this and mentioned this in your blog post as well. Could you have a sense of, and I think we'd mentioned a little bit in the early conversation, but could you tell us a little bit more about how would you categorize some of these games that exist today or you think would be built tomorrow based on some activity that they do on the blockchain itself? So how would you categorize these on chain games?
00:19:25.838 - 00:19:43.682, Speaker B: Yeah, totally. And by the way, the reason this definition exercise came up is because a lot of people recently have been throwing around the word web3 gaming. And in fact, a lot of people who were developing quote unquote web3 games, when you ask them which part of your game lives on chain, would say, oh, we'll figure that out afterwards.
00:19:43.746 - 00:19:44.360, Speaker A: Right.
00:19:45.290 - 00:19:59.206, Speaker B: And so when we really dug deep and started speaking to folks who are building games on chain in a much more thoughtful manner, the three sort of approaches that came to bear was the first is what we call fully on chain games.
00:19:59.238 - 00:19:59.434, Speaker A: Right.
00:19:59.472 - 00:21:01.258, Speaker B: This is what we were speaking about. I think Dark Forest is a great example of this, where every move is a state upgrade on chain. And this works for a specific subset of turn based games. Today you can imagine if you have simultaneous play or you have an extremely high frequency of moves per second, this is going to basically spam the blockchain and cause some downtime at least, right? But for games which are turn based, it lends to some very interesting mechanics where you can have every player action be recorded on chain and then you can build completely new game mechanics that don't exist today. So that's the first example of games that we thought was pretty interesting. The second one, and by the way, this category is the one which you were speaking about earlier, leverages, sort of like this serverless persistent compute capability of the blockchain. The onchain assets approach is somewhat more low touch when you think about it, right? Because every move doesn't have to be a state update on chain.
00:21:01.258 - 00:22:00.478, Speaker B: And this applies, by the way, to games that are simultaneous play or have high frequency of moves per second, but still want to leverage sort of the asset programmability and verifiable ownership that can happen on chain. And so what you can have then is your entire game loop can continue to live on unreal five. And all of the progression can be tracked there. But what you can have is the asset layer can be represented on chain. At the start of every game session, the game server can query the blockchain for the current state of the asset, enable capabilities within the game based on the current state of the asset, and then either at the end of a session or it could be even more frequent, like when there's some asset level state ownership, like let's say some character loses energy points or picks up an asset. Those sorts of things can trigger sort of a data relay on chain, which then triggers a change in the asset state on chain. And then again that whole cycle repeats.
00:22:00.478 - 00:22:51.106, Speaker B: Call it every session, or it can be more frequent if required. And then the third approach is probably like the lowest touch approach and not one that we're particularly excited about, but one that I think a lot of traditional game developers have actually been adopting because it's the least risky, which is what you could call like an optional cosmetic mint, which is everything lives off chain. And then the user just has the optionality to mint an asset as an NFT on chain or have some sort of game pass that lives on chain and very infrequently interacts with the blockchain. This, by the way, from all the conversations that we've had with game studios, is the most popular because it has the least user friction. Right. An interesting conversation I had with a game developer where we were talking about building on chain, the benefits of building on chain. And he comes back and says, yeah, that's all great.
00:22:51.106 - 00:23:12.966, Speaker B: And we would love to do that. But the thing that you have to understand in game development is that every click is you have a number of bips of churn from a user perspective. And so every click I'm losing a percentage of my users and I care about my day one, day seven, day 21 retention and introducing three more clicks drops that by an order of magnitude.
00:23:12.998 - 00:23:13.580, Speaker A: Right.
00:23:14.030 - 00:23:38.160, Speaker B: And both the initial two approaches that we spoke about right now with the current state of infrastructure have some of that lag and introduce some of those incremental clicks, which is why a lot of folks are going for this third approach. And then what we argued is with the right set of infrastructure, you can actually enable the first two approaches to have a similar level of frictionlessness as the third approach here.
00:23:39.010 - 00:24:20.414, Speaker A: So you mentioned that this is kind of the least something that friction for developers, which means that, I suppose that it means that this is probably the most popular among game developers. Could you give a rating of which ones are the most popular at the moment? And what do you think you'd bet on in the coming years? Would you think that the fully on chain game like the Dark Forest would become a standard or would become at least ideal for a certain type of games? Or people would still be pretty much inclined towards approach three of doing cosmetic mints and then maybe skins and things like that. And then maybe you would have a marketplace where you could trade them, things like that.
00:24:20.532 - 00:24:30.926, Speaker B: Yeah, totally. So I think there's two paths of innovation that are going to be somewhat divergent, but are going to lead to a lot more users playing games that are at least partially on chain.
00:24:30.958 - 00:24:31.250, Speaker A: Right.
00:24:31.320 - 00:25:29.000, Speaker B: The first Avenue, which is a fully on chain games. I think what's really interesting about this approach is that it enables new mechanics. So I think what you're not going to have here is traditional game developers who can force fit their ip or their titles onto this technology. And so what we're starting to see is a lot of native developers start to build new mechanics, new gameplay with this approach, which I think is probably one of the more interesting things in the space. The other approach, I think ideally a lot of the traditional game developers want to be building under approach too, which is like on chain assets have the asset layer live on chain, have the game loops live off chain, and have those two databases frequently communicate to each other. The reason that hasn't happened so far is a lot of the underlying infrastructure really isn't there yet. So as that gets built out, I think we have two completely different groups of people pushing the ball forward and I think this optional cosmetic mints approach sort of becomes less relevant over time.
00:25:30.570 - 00:25:49.130, Speaker A: Is it true that at the moment, the web two developers who come in or trying to build games, they are more inclined towards approach three? Or would you say that even if you are starting from web3 directly, you'd still be inclined towards going to approach three because of its simplicity and because it makes their life, and of course, users life easier?
00:25:49.550 - 00:26:14.354, Speaker B: I think it's more of like the traditional developers who favor approach three. And a lot of this has to do with the fact that they have a lot to lose. Right. Of course, these guys have millions of daily active users. If they push the wrong thing, that leads to a lot of user friction, they're going to have drop off across their titles. Right. And again, I think as the infrastructure improves, they'll be able to find their way into bucket two over time.
00:26:14.552 - 00:27:01.246, Speaker A: Again, this is something that we discussed during conversation earlier, but maybe we can talk a little bit more about this. So when I speak to some of the web two gamers and game developers, they would say, sure, on chain games are, you have to develop a certain type of on chain games. And even if you look at Dark Forest, it works because there are certain mechanics behind it. When you go and capture a planet, it actually takes a bit of time. And all of that allows you to tolerate, let's say, a blockchain latency. Right? And they would say, look, if I had to think that much to build a game, I would rather just go with an cosmetic mint approach because I don't want to think that much just to figure out how to build my game that fits in that model. Do you feel like, yes, you could build different games and games, blockchains are suitable for certain types of games.
00:27:01.246 - 00:27:09.366, Speaker A: But do you think that's also pushing some of these web two gamers away? They're saying that, look, it's too much of mental gymnastics. Why would I do that?
00:27:09.548 - 00:27:25.178, Speaker B: Yeah. I mean, they're not wrong, right. I think the thing that's important to understand, I think the error that sometimes happens is when one particular game approach gets popular, everybody feels like that's the only way to leverage the online technology.
00:27:25.264 - 00:27:25.610, Speaker A: Right.
00:27:25.680 - 00:28:08.630, Speaker B: That happened to some extent with Axie. I think it's happening to a lesser extent with Dark Forest. But I think, again, each of those approaches sort of leverages a different capability of the underlying technology and is best suited to different types of games. So again, the serverless persistent compute, which is what Dark forest leverages, is extremely well suited to turn based games, especially turn based games with either a low number of players, which is what Dark Forest has done with seasons, or fewer moves per player per game. I think the more feature rich games. Anybody building on unreal five is not going to use that approach. Right.
00:28:08.630 - 00:28:44.654, Speaker B: But they can sort of leverage the verifiable ownership programmable asset capabilities of the blockchain. That's going to look totally different. And then you can have the hyper casual, which is all the way at the other end of the spectrum, which doesn't use either of these things. Right. It may not even use optional cosmetic mints. This may be like a totally fourth category to the three that we outlined, which just uses the payment rails of what building on chain enables. And so I think the error would be sort of trying to forcefit game mechanics to capabilities.
00:28:44.654 - 00:28:48.870, Speaker B: I think the ideal outcome is like leveraging the right capabilities for the right game mechanics.
00:28:50.650 - 00:29:30.238, Speaker A: So this kind of takes me to this second topic which you wrote about. It's part two of your blog post series about the right framework for data, for example, on chain data, and it's called ecs. And I'll let you explain in a minute, but before that, I would like to ask you this question. This has started to come up, this new type, not new. I mean, it's actually pretty standard in web two gaming. But why are we hearing about this now? Why not like a year ago when people were thinking about blockchain games? What has taken us a year and a half to understand that the format is not great? We should think about some different object representation.
00:29:30.414 - 00:30:30.722, Speaker B: Yeah, I think this is one of those things where innovation begets innovation. Right? So in any sort of new category, the first few sort of attempts are going to be extremely simple, which is what cryptokitties was, which is what to an extent axi was right. And so when you have these very simple sort of approaches, you don't need extremely complex back end infrastructure to support it. But as you see these attempts being somewhat successful, at least successful in attracting folks to build more feature rich stuff, to build more involved game mechanics, then you need the right infrastructure to back that up. So I think that's sort of the cycle that we've gone through. It took those early shots on goal to attract folks to build more involved game mechanics, which is now why I think people are starting to talk about the right underlying infrastructure to support those approaches.
00:30:30.866 - 00:30:35.222, Speaker A: Okay, now tell us about ECS, what it is and why we should care about it.
00:30:35.356 - 00:32:17.810, Speaker B: Yeah, totally. So I think a lot of folks who are familiar with traditional game development will instantly know what ECS is, but ECS is essentially an architectural pattern that's used in traditional game development. And sort of the core functionality of ECS is that it separates data from execution or it separates data from behavior. And what this means, I think the best way to understand it is to understand the constraints that traditional object oriented programming has with, especially as you have a lot of entities being built within a certain ecosystem, and especially as those entities start to have more inheritance links, you then run into problems. The traditional problem in Op is called the diamond problem, and that sort of problem has to do with the inheritance pattern, as you have more objects being created, right? And so the simplest way to understand is like, let's say you have some class a, which is the parent class for some class b, and some class c, and then you have some object d that has the properties of both B and C. And so then you have this conflict of inheritance, which is like which branch of the tree is that deriving inheritance from? And how do you differentiate that when you want to call on that object? And so what ECS says is, well, let's not take this inheritance approach. Let's sort of separate the data from the behavior, right? And so ECS is built around stands for entity component system, which is the three sort of categories within the architectural pattern.
00:32:17.810 - 00:33:34.610, Speaker B: So what entities are is dataless containers, right? And so you can think about this as some object or some aspect. Let's say you have some character a, which is represented by an entity. Now, rather than that character a inheriting traits from multiple classes above it, you have this separate data layer, which is the component, right? And so what components are, is data full structures which can be attached to entities to give them behavior. So let's say I have a character that can fly and that can swim, rather than having that character inherit traits from the fly and swim classes, you can have fly and swim as serialized components that can then be attached or unattached from the entity to give it behavior. And so this, as you can imagine, gives it a lot more modularity in how do I attach behavior to my entity? It's as easy as adding or removing a component. And then what systems are, is essentially just the underlying code that can execute against a component. So cause a change in a component, either it can remove a component, add a component, change the behavior of a component, and therefore change the behavior of the underlying.
00:33:37.670 - 00:33:42.260, Speaker A: Quick one. So this is a standard that I guess unity uses at the moment, correct?
00:33:42.630 - 00:33:50.150, Speaker B: Yeah. So it's a standard that's available on several blockchain engines. So this is one of the approaches to building traditional.
00:33:50.730 - 00:33:52.278, Speaker A: Sorry, sorry, go ahead.
00:33:52.444 - 00:34:01.980, Speaker B: Yeah, no, so that's sort of the high level overview. And I think as you start to understand that concept, you can start to understand why it can be valuable in the blockchain context. Right.
00:34:02.990 - 00:34:18.142, Speaker A: And would you say that ecs would be more interesting? And of course, it may or may not make sense if you're doing cosmetics only. Right. So I suppose it's most beneficial if you are building a fully on chain game and you have to read data, write data and all that. Correct?
00:34:18.276 - 00:34:55.434, Speaker B: Yeah, I think it's actually very valuable both for fully on chain games as well as for on chain assets. And I think for different reasons. Right. So in fully on chain games, it actually serves some of the purposes as it does in traditional games, which is very strong game loop management. So every entity that you see on your screen can be represented as some sort of entity on chain. And so now you have much better game logic management with fully on chain games, with onchain assets, it becomes, I think the same framework is extremely extensible to that. Right.
00:34:55.434 - 00:35:03.760, Speaker B: Because you can actually have your underlying characters, your underlying assets, be entities, and then you can toggle behavior based on the components that you attach or remove from it.
00:35:04.130 - 00:35:12.400, Speaker A: And tell us a little bit about your work on the sort of building this framework for Solana game developers. I'll push to that page as well.
00:35:13.110 - 00:35:54.750, Speaker B: You can actually scroll down in this article. It should be here as well. Yeah. So the framework that we proposed, which is something that can be leveraged by anyone, it's all open source, is called arc, which stands for action registry, and core, which is sort of inspired by the ECS framework. So you sort of have three contract types within arc that sort of leverage the benefits of ecs. You have the core contract, which essentially the purpose of the core contract is to act as a database for entities. So all of the entities live within this database and can be queried from this database.
00:35:54.750 - 00:36:47.934, Speaker B: You then have the registries, which are essentially like governance systems. And what registries do is sort of dictate who can and cannot change the state of a component within a specific entity. And that leans into the action, which is the actual underlying code that executes change components within specific entities. So what happens is, and you can sort of envision this for fully on chain games and for on chain assets. And in the case of fully on chain games, the action sort of sits at the client SDK level and in onchain assets. This can set it like the data relayer that we were talking about earlier, it considered that level. So whenever there's a change in game state that's caused by gameplay, what happens is whatever sort of database you're using to execute changes in game state.
00:36:47.934 - 00:37:47.550, Speaker B: So this can be like the game server. In the case of onchain assets, this can be the client software, in the case of fully on chain games, will essentially query the state of the underlying entities from the core contract. And then what happens is when a game state transition is initiated, the registry essentially confirms that that action, based on the governance parameters, has been authorized to make the change to that component. So let's say you're playing a game on Unreal and there's some underlying character where the energy points go up and down based on specific game outputs. What the registry can do is verify that this is the actual server, that based on the governance parameters of that registry, is authorized to make changes to the components associated with that entity. And so once it validates that, you then have the state changes happening at the core level, within the components, within the entities that are stored in that database.
00:37:49.590 - 00:37:56.114, Speaker A: I think I saw the link, but I suppose this entire repo is public. So people who want to use the entire framework, they could use it.
00:37:56.232 - 00:38:15.850, Speaker B: Yeah, it's totally public, open source. Our goal from this was just to offer, this is something that we got interested in as there were a few folks in their free time on our team who are starting to just experiment with building on chain games. And yeah, our goal from this is just to sort of push the space forward and help folks who want to build games on chain.
00:38:16.990 - 00:39:02.806, Speaker A: Now let's move away from, let's say, this data representation and how you could make your blockchain games better, particularly on chain games, better. What about the other, let's say, ancillary infrastructure? For example, let's say if you're playing something like Dark Forest, you have to sign transaction every time you make a move. And dark forest kind of gives you a way where kind of a hackery, I suppose. I don't know what to put it. Basically you have a private key somewhere and you authorize your browser to basically sign on your behalf, essentially. But do you believe that there's a need to build better wallet support, better infrastructure that could enhance the experience, I would say for game developers and game users?
00:39:02.998 - 00:39:47.958, Speaker B: Yeah, absolutely. I think that's one of the biggest sort of needs in the space. And this goes back to the point I talked about earlier. The biggest complaint that game developers who understand gamers have is that the level of friction is just too high. If I need three clicks to do in an on chain game, what I could do with one click in an off chain game, all those benefits that I can get from building on chain are sort of moot. The value of those is far less than what I would lose by having those friction points. And so I think a lot of work that's happening around account abstraction, a lot of work that has already happened around abstracted key management, all of these things become increasingly important in delivering an experience to users that feels a lot closer to what they're traditionally used to.
00:39:47.958 - 00:40:05.770, Speaker B: And then you can offer the higher touch, more involved approach for folks who care more about the key management, who care more about the security and all of those sorts of things. So, yeah, absolutely. I think that's one of the most important things, and I think we're starting to see a lot of movement in that direction.
00:40:05.850 - 00:40:47.722, Speaker A: I think people are building these, what some may call session wallets, particularly for games where you start a session. So basically when you start up, your game session gets started and you have this key that is there, and you can use that key to basically sign transactions. And in the end, if you don't want to have your assets in that, let's say, for example, you got some NFTs or you minted some tokens, these NFTs then move back from your session wallet to a much safer wallet. But again, you could make it the whole experience even better with something like account abstraction. So people are definitely building, but anything beyond, what do you feel like there's anything else that is missing? Something that is beyond data? Infra, but I guess at the ancillary level, if you see what I mean.
00:40:47.856 - 00:41:31.238, Speaker B: Yeah, I think one thing that a lot of people don't talk about is the innovation that's starting to happen around mobile. If you look at the share of revenue for traditional games, a large portion of it comes from mobile. And this has happened over the last like ten years or so. And I think a lot of what today's infrastructure enables is strictly browser based. And as you have stuff like the Solana mobile stack, which can have your key management in the core of the chip of the phone, where you don't really have to care about managing your private keys, that unlocks a totally different experience for users. Right. And as even more people, and that's going to serve a subset of games.
00:41:31.238 - 00:41:39.370, Speaker B: But as people start building infrastructure that's more mobile friendly, I think we're going to start to see a lot lower bar for adoption.
00:41:40.590 - 00:42:14.600, Speaker A: Talking about the chains itself, right? So of course you have chains like Solana that can offer you subsecond latency, but most chains have this latency of about one to 2 seconds. Right. And if you are, let's say building a blockchain game as a game developer, and also given the space, what is a reasonable, you could say ask from a chain, what's something that acceptable? Of course, if you say okay, give me instant latency, that's probably not possible. What's a reasonable ask from a game developer and what we can provide them?
00:42:15.050 - 00:42:29.434, Speaker B: Yeah, I think again, as we take like an infrastructure first approach, the answer is to just always have more, to have faster finality, to have faster execution, more transactions per second.
00:42:29.472 - 00:42:30.060, Speaker A: Right.
00:42:30.430 - 00:43:17.914, Speaker B: I think there's a lot of great work that's going on to make that happen. I think this is going to be one of those things again where innovation begets innovation. So as you have faster settlement, you'll have new mechanics that weren't possible before, that it'll start to be experimented with in the interim. I think what will happen is, again, depending on the type of game, you may just have folks where the user touches the blockchain less frequently. So this is like the on chain assets approach, right? And then I think there's a lot of really smart people working towards making the core infrastructure faster. And as you start to see more of that, you'll have, I think, more interesting mechanics available in the fully on chain approach where you can now manage more moves per second or more players playing simultaneously. I think it's going to be very much like an iterative process.
00:43:18.112 - 00:44:00.386, Speaker A: Okay, let's take another sort of critical, I guess, take on this. So some people would say okay, or even some game developers would say okay, l ones are okay, but I need more customization for my own chain historically. Right. If you look at cryptokitties as well, even though they started in Ethereum, they ended up building flow Axio Infinity the second, I would say, wave of gamers, they started on their own chain. Do you feel like games are better suitable for an l one or you think they would enjoy their own space as let's say subnet or an l two or an l three, whatever we call it. Do you feel what's an ideal platform, you think, from your perspective?
00:44:00.578 - 00:44:50.630, Speaker B: Yeah, I think that's going to be very game specific. A lot of folks will make bearing trade offs. I think the one thing to consider when you go spin up your own chain, and I think this can be mitigated to some extent by the new technological developments that are starting to happen around proof based settlement and those sorts of things. But in a traditional consensus approach, the thing that you really need to start thinking about, which I don't think most game developers are well suited to be thinking about, is managing economic security of a completely different settlement layer, right? And a lot of folks do this by sacrificing security to some extent, which is okay. But as the underlying infrastructure becomes more performant, I think a few folks at least may be more incentivized to stick with settlement layers that are more economically secured.
00:44:52.430 - 00:45:55.934, Speaker A: And there's also something that I noticed, which is something unique to gaming as opposed to other applications, which is most games have a shorter lifespan, right. If you look at DFI, if you start a DFI application, the goal at least, or intention is to have it there forever, right. While even in the web, two gaming space, most of the web two games have a very short lifespan, right? There are people who want to play with it for a while because there's a hype and other people play it and then after a while it actually dies because the marketing isn't there or the hype isn't there. And even if you look at some of the blockchain fully on chain blockchain games, like, let's say Dark Forest, right. Many of these games kind of run in rounds or seasons. What do you call it? You start a game round and you play for a while, and then after, let's say a week, you basically tally the scores and you declare the winner and then you kind of move on to the next round, do you feel like this kind of ephemeral nature of blockchain games? Do they require any special platform you feel, or you feel like. No, they could either be on a general purpose l one, or it could be any chain that they like.
00:45:55.934 - 00:46:16.770, Speaker A: But my feeling is that if you start with, let's say, if you're building a game of that kind, and if you, let's say, decide to build your own chain, and then you have to somehow maintain it, right? And imagine a game that only lasts for, let's say, three months or four months, somehow you have to go and figure out a new game, which of course you do. But do you feel like platform has to offer something different to some of these game developers?
00:46:17.590 - 00:47:06.782, Speaker B: Yeah, I think a lot of the infrastructure that we talk about is somewhat horizontal. When you talk about better key management, when you talk about account abstraction, when you talk about data frameworks to organize game loop logic, to organize asset layer, I think a lot of those things are pretty horizontal. There may be some degree of customization that happens, but I do think a lot of that should be on the game developer side, based on the available infrastructure. I do think. I totally agree. There's very few evergreen titles in the history of the games industry and so there will be a lot of churn. And I think my broader approach is, especially for folks building individual titles, it makes very little sense to be their own infrastructure provider.
00:47:06.782 - 00:47:27.610, Speaker B: For folks building a whole suite of titles, they may want to take on that additional risk of offering economic security at the settlements layer and those sorts of things. But I think, yeah, beyond that, totally agree with you in that building the underlying infrastructure shouldn't be the job of the game developer.
00:47:28.110 - 00:47:56.280, Speaker A: Okay, so I think we are towards the end of the discussion and this interview, so let's ask the one last question, which is something we call alt view. So basically, any alternate view that you think is something controversial, something that you feel very strongly about, but most people disagree with you, or most you feel like, no, you are crazy or something. Is there something that you feel very strongly about, especially in the gaming sector, that you feel like it would be better if people had focused on this idea or on this approach? Absolutely.
00:47:59.850 - 00:48:23.902, Speaker B: I don't know how contrarian this view is, but I think a lot of people sort of take blockchain gaming as a given. Right. And you see this from studios, you see this from investors, you see this from a lot of folks in the ecosystem where there's a lot of underlying assumptions that this is obvious. You have a lot of folks just throwing the name around and saying we're building games on chain. It's going to happen. It's going to be huge in the next six to twelve months, 24 months, whatever.
00:48:23.956 - 00:48:24.560, Speaker A: Right.
00:48:25.010 - 00:49:35.302, Speaker B: I think there's a lot more deep thinking that's required to actually have that be the case than a lot of people assume when they first start. And so I think the one view that I have that I think is critical for a lot of people or at least spend some time thinking about is really deeply understand what the specific game mechanic that a specific developer is building around, what underlying property the technology is well suited for that, and build very specifically along those lines. I think the error that's occurred in the ecosystem because of these assumptions is that there's been, at least over the past year, not so much anymore, a lot of available capital for anybody who threw those words around. And so there's been a lot less deep thinking and a lot less assumed success than I think is apparent. So anyway, that's not like the most positive note to end on. I think there's a lot of potential, obviously, but I think it requires some very deep thinking and iteration to make things actually work.
00:49:35.476 - 00:49:48.550, Speaker A: Well, thank you very much, Shana, for your time. It was great having you here on Altio, and, yeah, very, very good to have a chat with you on chain gaming and more generally the space as well. So thank you very much for your time, and it was lovely having you here.
00:49:48.620 - 00:49:49.780, Speaker B: Likewise. Thank you for having me.
