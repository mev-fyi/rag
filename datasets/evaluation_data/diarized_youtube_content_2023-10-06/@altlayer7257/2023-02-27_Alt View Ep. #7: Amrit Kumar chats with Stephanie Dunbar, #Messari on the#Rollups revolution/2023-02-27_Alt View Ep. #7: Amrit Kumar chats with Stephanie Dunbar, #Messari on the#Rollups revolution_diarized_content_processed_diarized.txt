00:00:02.170 - 00:00:09.840, Speaker A: Okay. Hello, Stephanie. Nice to meet you, and thank you for coming to all of you.
00:00:10.610 - 00:00:15.760, Speaker B: Thanks so much for having me. Super looking forward to talk about rollouts and rollouts as a service today.
00:00:16.370 - 00:00:30.614, Speaker A: So let's start with a quick intro. So why don't you tell us a little bit about yourself, what brought you to the so called cryptoland? And we. We'll touch a little bit on your journey at Masari and basically what excites you these days at.
00:00:30.812 - 00:01:09.810, Speaker B: Yeah, sure. So I got into crypto about three, four years ago. I started out as a technical writer, and I used to just write grants about all types of different technologies, mostly grant writing, also the documentation. And I just kind of got in through the back door. Writing about blockchain was one of the technologies that I covered. And then in about 2019, I became aware of public blockchains, so not just permission ones, and learned about ethereum and really fell in love and decided to go all in on the public sector. And I started to ghost write white papers and documentation and things like that for different teams.
00:01:09.810 - 00:01:24.390, Speaker B: And about two years ago, I joined Masari as an intern. I really wanted to get a better understanding of both the economic side of crypto as opposed to just the technology and how it works. And so started my journey.
00:01:25.130 - 00:01:28.950, Speaker A: Was it real internship or is an internship as in the crypto internship?
00:01:31.770 - 00:02:02.290, Speaker B: It was like a contract internship. So we used to have this program called the Hub, where we have. I'm sorry, there's these asset profiles. There's free, you can go and read all about a token and the project and how it works. And so you could just pick up just different asset profiles you could write about. So I think the first one I wrote about was radical as well as space chain. And there was a ton of questions there that were not just how does this blockchain function and how many nodes are there, but also what are all the crypto economic things around it.
00:02:02.290 - 00:02:59.254, Speaker B: So I picked that up and then eventually was invited full time. And I spent my first year in a bit at Masari in our professional asset due diligence team, and became really focused on legal and regulatory kind of concerns and decentralization, or lack thereof, in a lot of cases. And about six months ago, I finally turned to being public facing on the enterprise team, where my interests mostly lie again on blockchain infrastructure. So back to the kind of technicals, but also I really like to think about how to measure decentralization and see where we're at industry wide in terms of some of our goals with decentralization but where we really are today, and one of those things is obviously one of my interests is obviously scalability within the infrastructure section. So really for me, l one, l two doesn't really matter. I'm just really curious about how blockchains work and how we can scale to reach as many users as possible.
00:02:59.452 - 00:03:03.720, Speaker A: And do you also look on the app side as well, or mostly at the infra level?
00:03:04.410 - 00:03:27.774, Speaker B: Sometimes I look at the app side. I cover live peer as well. That's an app that I cover frequently. I've been following them for about a year with quarterly reports. It was super interesting to see them move from ethereum to arbitrum with some of their scaling woes. And in the future you might see me covering other apps as well, but mostly infrastructure for the time being.
00:03:27.972 - 00:03:43.860, Speaker A: Got it. Well, today's session will be mostly about roll ups, and particularly your piece on the roll ups as a service ecosystem. I think that you published a few days ago, probably a week ago, I think. But before we dig into it, could you please tell our audience what roll ups are and what makes them interesting?
00:03:44.550 - 00:04:19.818, Speaker B: Sure. So roll ups are a scalability solution at this point in time. We have a lot of general purpose l ones. So things like Ethereum, where most applications are built as smart contracts on top of that. So a problem with that is that all of these applications are now competing for block space. So for competing to get their transactions processed, and there's only finite amount of block space. And so with that you get congestion issues, fees rise, and we have to think of alternative solutions.
00:04:19.818 - 00:05:05.482, Speaker B: How can we fit more transactions into our finite amount of blocks? So roll ups represent a scaling solution where we're scaling vertically. So you're kind of ripping apart one piece of the blockchain stack. Well, sometimes two, but for simplicity, execution. So the execution of transactions rises to a different layer. And within that this could be general purpose. So something like an arbitrum or an optimism where other app, sorry, where other applications can launch as smart contracts on top. Or it could be app specific, where it's only a specific one app and one execution environment.
00:05:05.482 - 00:05:46.918, Speaker B: But what's interesting is that just the execution is at this level, whereas consensus and data availability is handled by a level below. So in the example we just mentioned, ethereum. So with that, you're only focusing on one part of the stack, so you can really optimize your resources for that. And also you don't need to necessarily have a validator set to process those transactions. You have something called sequencers. And we'll get into that a little bit later as well. But at the end of the day, these sequencers then go and compress those transactions into a smaller piece of data and port it back to the underlying layer.
00:05:46.918 - 00:06:01.098, Speaker B: So there less competition for block space on l one and no competition for blocks or less competition for block space on l two as well. Sorry, it's kind of hard to make it into a short explanation.
00:06:01.194 - 00:06:20.438, Speaker A: I think basically the summary is you have a sort of external network which is composed of sequencers that basically process your transactions and you have the underlying chain that kind of secures those transactions some way, essentially. So you're kind of moving off the traffic from l one to the l two site.
00:06:20.604 - 00:06:21.366, Speaker B: Exactly.
00:06:21.548 - 00:06:41.360, Speaker A: But some people argue that roll ups are roll ups only if they are secured by Ethereum, especially the DA part side of things. So if you're using DA like, let's say like Celestia as your DA or some other external DA availability network, would you still consider that as a roll up?
00:06:41.970 - 00:07:17.282, Speaker B: Yes, absolutely. Sorry. My example was just Ethereum specific, but roll ups can be in pretty much any ecosystem. So today you'll have things like Celestia roll kit as well as dimension. Sega and Eclipse, I believe, are all building roll ups within more so of like the Celestia family know that can communicate with IBC. So in kind of the cosmos family as well. So really roll ups are any way to process or execute transactions in a different layer and port back to a different layer for consensus and data availability.
00:07:17.282 - 00:07:19.260, Speaker B: And it doesn't just have to be Ethereum for.
00:07:20.590 - 00:08:15.660, Speaker A: Okay, so now this is kind of a controversial question, and I'm going to drop names here because I was listening to Haseeb from Dragonfly. He's a founding partner or managing partner at Dragonfly. And he recently commented, I think he was doing an interview with someone, and he, during that podcast, commented that Ethereum foundation took the roll up route for scalability after years of research on sharding, only because sharding was deemed too difficult to implement or something along those lines. So basically that was the essence of what he was saying. So I'm not trying to paraphrase here, but basically he said that because you had a running system running l one mainet and trying to kind of implement sharding was quite difficult. And I completely understand where he's coming from. And therefore he argues that roll up kind of came as a way to kind of circumvent that problem.
00:08:15.660 - 00:08:31.200, Speaker A: What are your thoughts on this? Do you feel like there could be better l one that you could design, maybe not now, but in future, that could somehow compete with roll ups for scalability? Or do you think that there's something else, or both have places in this world?
00:08:31.810 - 00:09:17.610, Speaker B: So, yeah, I'm pretty neutral on that view. I think in general I'm pretty neutral. I believe that there's space for all. I think for now, roll ups are best shot at scalability for most networks and for most use cases. But that doesn't mean that in the future, or there are other existing l ones that can compete. But there's always that challenge of how do you fit more transactions into finite block space? Right. I just don't see it as kind of a war of is it an alternative l one or is it roll ups? I think that in the large scheme of things, you're probably going to see kind of what optimism refers to as the super chain.
00:09:17.610 - 00:09:59.302, Speaker B: They're more so referring to a collection of roll ups that are connected with a shared sequencer set being the super chain in the optimism world. But I imagine a super chain of a bunch of different l ones, a bunch of different roll ups, and we're going to find to find ways to communicate between them. Varying levels of security among those bridges, depending on where you're connecting to, and there are lots of different trust assumptions involved. But I think that when you're a developer building in this space, you need to think about what are the exact requirements of your app or of your network, and then make that decision from there. But I don't think it's going to be winner takes all in the l one world or in the roll up world?
00:09:59.436 - 00:10:14.820, Speaker A: And do you feel like it's a follow up question? Do you feel like in the next five years or so, there'd be enough demand for all the block space that being created through different l ones, l two s or l three s. Do you feel like there would be enough demand, or do you feel like we are preparing for something that might come in, let's say, ten years time?
00:10:15.190 - 00:10:49.206, Speaker B: It's a good question. Well, certainly demand, it comes sometimes with market cycles. And as we've seen, demand was super high about a year, year and a half ago, and ethereum was largely unusable, or like a lot of networks are kind of reaching their limits. And so we needed to think about how do we scale beyond that. But times quieted down and times quieted down. It ebbs and flows. But I really do believe that the ethos of crypto being to decentralize everything for all people is a powerful narrative.
00:10:49.206 - 00:11:45.820, Speaker B: And I don't think it's going to go away. So will there be enough demand in five years to service all the block space that's being created from all of these roll ups and roll ups to the service providers? I think only time will tell. But what's interesting about roll ups for something like Alt layer, for example, is that it doesn't have to be. When you're deploying a roll up, you don't have to just deploy a general purpose one and say, oh, where's all my users? You can have a very specific need, like an NFT mint or a specific game that you know that you have the demand for within your community, and then you can build the roll up specifically for that. So I think that that's what's really interesting about roll ups, is that because an app specific roll up is because it doesn't need to be a shared execution environment with others, you're not necessarily looking for demand. You can already kind of create something almost out of thin air that will service the demand that you already need.
00:11:46.830 - 00:12:19.286, Speaker A: And also this demand, as you said, it comes in ebbs and cycles. And we have seen that no one would have imagined defi before defi summer. People are experimenting with things, but suddenly, within a matter of months or weeks, liquidity mining came in and everything started to blow up quite quickly. I think I agree with you that this could change quite rapidly, especially when you're dealing with a tech space that is rapidly moving, that can change any day. Literally now moving to kind of. There are different kinds of roll ups. You kind of mentioned that in your post as well.
00:12:19.286 - 00:12:44.546, Speaker A: You call them smart contract roll ups, app specific roll ups, and sovereign roll ups. But there's one of these roll ups that actually create a lot of conflicts with people building app chains. Right. For example, which is the app specific roll ups. So can you first give a sense of what is the difference, or let's say pros and cons of, let's say an app specific roll up and an app chain first. So could you tell us a little bit more about that? What's the difference between the two and.
00:12:44.568 - 00:13:44.930, Speaker B: The pros and cons of an app chain? What's similar about them is that they're app specific. So for a particular application, an app chain, though, is its own full blockchain. So meaning all parts of the stack. So that would be a chain in the cosmos ecosystem or in the Polkadot ecosystem, whereas an app specific roll up, it's generally an execution or an execution and settlement roll up that is connected to an ecosystem as roll up as opposed to handling all of the different layers of the stack. So what that means is that for an app chain, you need to find source validators. So as a developer, you need to think, who's going to operate my chain? What are the incentives going to be around that? What is the staking mechanism going to look like? All within a certain framework. So app chains are often two very common types of app chains are within the cosmos, etc.
00:13:44.930 - 00:14:34.900, Speaker B: Or subtrate for Polkadot. The pros of both is that you are not worrying about sharing block space with other types of applications because it's app specific. But the cons about something like an app chain is that you have to find those validators and it's at the end of the day, less customizable than a roll up. So even though roll ups are still kind of in theory, you'll be able to customize all different parts of the stack. Right. So you could use Solana VM for execution, for example, which is something that eclipse is targeting, or you could use really anything for execution and then rely on any other network. So Ethereum or celestia or Polygon avail for consensus and data availability, and you can really kind of figure out what works within your particular use case.
00:14:34.900 - 00:14:54.250, Speaker B: So they both serve specific needs. But I think that the reason why roll ups are the most versatile are strictly because you can just do so much more with them and you aren't so burdened with having to handle all parts of development and operation, including a validator.
00:14:58.590 - 00:15:50.550, Speaker A: To. I was on Twitter some couple of days back, and then I noticed that someone asked a question, which I think I found very interesting, which was, and his question was that what is one thing that you can do with roll ups, app specific roll ups, or generally roll ups that you can't do with an app chain? And I felt like because an app specific roll ups or general roll ups are tied to an l one in some way, you have this possibility to basically destroy your roll up whenever you want, if you wanted to. And when that destruction happens, or you dispose your chain, all the assets that were there on that roll up can actually be moved back to the l one. This is one thing that I felt you can't do with an app chain because there's nothing to go to. Essentially. It's like you are kind of a sovereign chain. If you destroy, you basically have to somehow get rid of all the assets.
00:15:50.550 - 00:16:43.600, Speaker A: It can't go anywhere. So I think there's also this benefit that you're not just deriving security from an l one, but you also have this base chain of some sort where you can go to at some point if you wanted to. So in some way, app chains. App scroll up also gives you one thing that potentially I feel app chains can't offer you in technical terms. But in terms of how would you position subnets, do you feel like these are app chains? Because one point that you mentioned that you have to figure out, your validator said how to worry about stakers and whatnot. Somehow subnets try to simplify that and say you can basically tap into the existing network of nodes that are running, let's say the c chain, I think it's called. Somehow cosmos is trying to kind of get some of that bit as well.
00:16:43.600 - 00:16:52.030, Speaker A: But would you say that that problem would still persist if you can have a shared security model coming to appchains from some base chain?
00:16:52.850 - 00:17:39.822, Speaker B: So a full disclosure, I'm not super familiar with avalanche subnets, but I do think it's interesting that they kind of have that option of having the shared validator set. If I recall correctly, I read through their documentation. It was a while ago. The bridging was interesting to me. I remember reading in their doc somewhere that bridging was through some kind of just like a regular bridge, which kind of doesn't make sense because you'd think that if there's the shared validator sets, you could have that optimicity. But I do remember reading that this was like six months or a year ago, so I'm not sure if it changed. So if the avalanche subnets do have that atomic composability, somewhat similar to a roll up ecosystem with shared sequencers, I think that that's really interesting.
00:17:39.822 - 00:17:56.680, Speaker B: But as far as I remember from before, bridging was the biggest question for me because I think that it doesn't really make sense to have the shared security but then rely on bridges, traditional bridges that could run into problems. But again, don't quote me on that, I'm sorry, information.
00:17:57.130 - 00:18:55.030, Speaker A: It's a good point because they do have shared values set, but their bridge, again, as far as remember, it's a hardware based security module that secures the bridge. But it's a valid point. If you have shared security module, you can actually tap into a much better bridge rather than relying on a classical multi SIG style style bridge. Very good point. Now, there's one more thing that I kind of feel very strongly about, and I want to get your thoughts on this as well. So if you look at app chain sdks such as Cross SDK or Polkadot substrate, they were kind of supposed to make launching of new chains easier, right? By abstracting away the consensus protocol, the peer to peer networking components and so on. And I remember Gavin Wood had this video where you could actually go and build a substrate based chain within 10 minutes or 20 minutes, something like that.
00:18:55.030 - 00:19:30.958, Speaker A: It was very fast and that was very moving in some way. When we actually go and see that video still, you feel like it was very powerful, and yet I think it was defi, some of it compound the lending protocol application. They decided that they would go and build an app chain using substrate, but that got abandoned about a year later. And now very recently, I think not really very recently. Now it's about a year ago, DyDX, about six months ago, DyDX announced that they're building their app chain, the DYDX chain. But that feels like it's going to still take about a year and a half. So maybe sometime end of this year it will be launched.
00:19:30.958 - 00:19:54.490, Speaker A: Now, how do you think if app chains that came up with all these sdks, if they were not able to deliver a fast and good developer experience, and if it still takes about a year and a half to build an l, two or app chain, what's missing? How can app specific roll ups be better from a developer perspective than appchains and app chain sdks?
00:19:55.390 - 00:21:09.026, Speaker B: So I think what's really interesting about roll ups as a service or the sector in general is that you're going to have your apps sdks. There's a number of projects that are focusing on roll up sdks, but at the same time, there is a little bit less complexity involved. As you mentioned, the sdks are covering only a certain part of the stack. So execution, sometimes settlement, as opposed to also having to think about the underlying layers as well. But the way that roll up as a service providers can really provide value in addition to that is through no code deployment and making it even easier. So I think that for something like, and also just like composability within an ecosystem, that's the atomic composability that might not be attainable in something like Polkadot or Cosmos, although they do have great messaging capabilities. With IBC, for example, I think that particularly, if I recall correctly, for compound, they abandoned the initiative because it was too technically complicated or it was some of the bridging between Polkadot to Ethereum or something like that.
00:21:09.026 - 00:22:04.066, Speaker B: They realized that the technology was in its infancy, so that kind of got abandoned and intent. Instead, they decided to launch compound on different EVM compatible chains for now and then something like with the DeoDX. It feels like they were always a first mover, right? So they joined the Ethereum ecosystem in 2018 and launched the first margin trading protocol. And then with scalability considerations, I think in d five summer, they realized, oh my gosh, we're processing so much volume and the delays and all this is just not really working for us. They were one of the first people to jump to l two, but at the time, the roll up ecosystem or the roll up development ecosystem wasn't really mature. There wasn't really much there. Starkx is what they landed upon, and that's really helped them scale and port users off of main chain Ethereum to operate as a platform.
00:22:04.066 - 00:22:50.078, Speaker B: But it came with centralization trade offs. Right. The infrastructure is operated by Starkware as well as Dydx. Now they're moving off to become an app chain, and they want to get rid of some of those decentralization trade offs. So their solution, which I believe they decided about a year ago, like, I think a year ago, is when they was announced moving off of L two. I think that decision came at a time when the roll up development ecosystem just wasn't strong enough or wasn't mature enough for them to choose an app specific roll up instead of an app chain at that time. So it made more sense to move to an app chain.
00:22:50.078 - 00:23:26.638, Speaker B: But as we've seen, it's now been a year. It'll be maybe a year and a half before they launch. We don't necessarily know what's going on in the background, especially. I believe the development is all closed sourced, for example. So we don't know. But I do have a feeling that had the decision been made, let's say, now, as opposed to a year and a half ago, they may have gone the app specific roll up route because the tooling and services are now there, or going to be there soon with some of these roll up sdks and moving into a few more months or years in the future, these no code roll up deployments that are going to make it even easier. So, sorry.
00:23:26.638 - 00:23:49.540, Speaker B: Long story short, I think that what some of these roll up development kits, as well as other rasp providers bring to the table that make it easier than building an aft chain, is that we continue to iterate on those and just make it easier and easier over time. And there's less pieces to consider as part of the stack as well.
00:23:50.230 - 00:24:40.950, Speaker A: That's true. Even though consensus was kind of abstracted away in Polkadot or even in cosmos, a roll up is even easier in that sense. Right. Let's say, if you're running one sequencer, let's say, in your roll up, then you basically have to run a get client essentially, or modified version of that, and fraud proofs. Right now, at least in most implementation, they don't have like op optimistic, doesn't have optimism, doesn't have arbitrum has it, but in sort of a permission way, I suppose. So some of these things could still be kind of simplified. So yes, it does become a little bit easier from a tech perspective to build a roll up, given all the tech stack that's already there with optimism and arbitrum, than, let's say, building using a polka substrate.
00:24:40.950 - 00:25:56.190, Speaker A: I guess the other benefit probably is, let's say, if you are just thinking about EVM, right? So you kind of familiar with, let's say, your solidity code base, and you can just basically port that quite easily if, let's say, your execution engine is essentially EVM, while if you're building, let's say, even using cosmos, you still have to kind of bake the entire business logic in the SDK, which can be a cumbersome process or time consuming process. So, yeah, hopefully these things will change with some of the work that I guess people in the roll up space are doing now, moving to this kind of app specific roll up space. Right. What sort of applications and use cases do you think would benefit or greatly benefit from launching on an app specific roll up from the get go from day zero? What are the app use cases which will really benefit from getting on the app specific roll up from day zero? And the kind of follow up question would be, in what scenarios, in what use cases? It's just a bad idea. Like, you should really go and build on a general purpose and should not go and even think about an app specific chain.
00:25:57.650 - 00:27:00.130, Speaker B: So I think the most obvious one that comes to mind for something that would make sense right away from the get go is something like a gaming roll up or a gaming app, especially with a lot of microtransactions and a lot going on, it doesn't make sense to have to share the block space with anybody else, really. And also launching on a roll up, the developer can really customize that experience so you don't have to worry about using gas fees of the underlying network. They can even program having valueless tokens as that gas token and find different ways to monetize whether that could be the sale of nfts as skins or something like that. So I think right away, a gaming app makes a lot of sense, as well as what Altlayer is doing with the idea of elastic roll up. So something like an NFT mint makes sense, right? We've seen it time and time again with large NFT mints. It doesn't make sense to do it on l one ethereum. Everything gets clogged and people are fighting for that block space.
00:27:00.130 - 00:27:50.980, Speaker B: Just to mention NFT. And it's a very momentary period of time where everything just kind of breaks. So those are the first two that really, really come to mind because they are quite resource intensive. I mean, gaming over a longer period of time, NFT mints kind of right away. So this is a really interesting question, I think, about some of the downsides or what may not work. And the first thing that comes to mind, and it'll be really interesting to see what happens actually with shared sequencer sets, but is something like a DX, right? So in my mind, the one thing you really have to consider in a roll up ecosystem is the potential for fragmentation and for liquidity fragmentation. So let's say you have a settlement layer here and then a bunch of app specific roll ups here and there's a DX up here.
00:27:50.980 - 00:28:44.820, Speaker B: Does it make sense to have the DX up here? If the communication. What if you want to use the tokens over here, over here, over here, right. So maybe it makes more sense to have the DX on the settlement layer and then the tokens can kind of just be ported up or things change when you have the shared sequencers. So when you have that atomic composability. So if they're shared sequencers, will the user experience, will it be abstracted away for the end user and be so easy for them to make a trade and not know that even though the DX is technically here, it's trading liquidity with apps over here? I think it'll be, again, really interesting to see how it plays out. But first thing comes to mind is you'll have to kind of solve some of that fragmentation before you go on to some of those D five use cases. As an app specific roll up.
00:28:45.770 - 00:29:14.426, Speaker A: Definitely. I mean, I also feel like by definition, if it's an app specific roll up, it has to be somewhat standalone. The more standalone your application is, the better it is to be on an app specific roll up. To give you an example, we hosted Dark Forest on one of our app specific roll ups. And this was about, I think, September last year. So we hosted that for two days. For those who don't know, Dark Forest is a fully on chain game.
00:29:14.426 - 00:29:49.286, Speaker A: So every single move that you make in the game is actually an on chain transaction. And so during those two days, we had about 200,000 transactions came in that came in. And to give you a sense of that number, at that time, this was about 90% of the volume that optimism used to do on a daily basis. So now imagine like you host a game like this on a general purpose chain, like arbitrum, optimism, even general purpose l two like optimism arbitrum. And if you have this stupid transaction, you can call them stupid because they don't carry value. These are not like D five transactions. They're just simple moves being made in a game.
00:29:49.286 - 00:31:04.580, Speaker A: And yet that kind of takes consumed portion of your block space. And then you would see your negative externalities popping up, gas prices will go up, and somehow you have to figure out how to stop this application, or somehow you have to kind of modify the game logic in some way so that you send less transactions somewhere you have to batch and things like that. And so transactions, applications that drive a lot of small microtransactions, whether of value or just transactions for record keeping, or when you have an on chain database of some sort, which I guess dark forest does, it kind of makes sense to have it outside of a base layer of some sort and go and build on your app chain. While as you said, if you have building an application that requires huge, there's a huge dependency on other applications, then it's best to kind of have a shared model, unless you have a way to kind of take the benefit of shared sequencer set and then somehow have easy and transparent composability across those chains. Yeah, I completely agree with you, but yeah, we are yet to see some of these things pop up, the benefits of a shared sequence. Hopefully in a year's time we'll see that.
00:31:06.470 - 00:32:07.682, Speaker B: I think today a lot of games, in my time working on professional asset due diligence, I saw a lot of games, and within that, a lot of the games decide. Almost all blockchain games now, they realize we can't deal with this block space problem. So oftentimes they'll be bridging to another network that's just a permission network. So you lose that crypto ethos, or it all happens completely off chain, and you just kind of have to trust the operator that oh yeah, those transactions happen as they should. For a game developer, you always kind of run into that same problem of having to think about taking it off chain, but with a roll up, you get the benefits of both worlds. You don't have to worry about the constraints of the block space, but also it's still verifiably happening, and each transaction is really accounted for in a way that is, I think, fair to all users, or that we can kind of at least track and see. So I think that's a really great thing to see in the future.
00:32:07.682 - 00:32:10.354, Speaker B: I'm really excited to see how many games will go that route.
00:32:10.482 - 00:32:57.410, Speaker A: Indeed, indeed. I think the next question was something that we kind of touched upon already, but I'm going to ask you, in case you have some other thoughts on this. So when DydX announced their departure, I think it was in June last year, of course there was a huge debate, because DyDX is one of the largest application on Ethereum. Probably next pros would be uniswap. But when they announced this, of course there was all lot of debate around this is a bad idea, they are ditching Ethereum and whatnot. But I mean, yes, they were on kind of an app specific roll up already, like with Starquare's solution. And yes, roll ups were not quite there.
00:32:57.410 - 00:33:33.486, Speaker A: Yes, arbitrum and optimism were still building. I think they probably live by then. I think if I can't recall, maybe they were maintained already. But you didn't have sdks there. You didn't have sdks to launch roll ups quite yet now, but you have all these optimism launched its own SDK stack and all that. And you kind of mentioned this, but let's dig a little bit more on this. Do you feel like some of the biggest application Ethereum will kind of move towards app roll ups or app specific change in the future? Or do you feel like.
00:33:33.486 - 00:33:37.090, Speaker A: No, they will probably stick on Ethereum because of composability and whatnot.
00:33:39.270 - 00:34:31.806, Speaker B: That's a really great question. I think we've already seen apps in the last couple of years have to think about how do we scale and how do we reach more users, and how do we not deal with some of the congestion issues of Ethereum. And so what we've seen in the last couple of years is a ton of applications will just launch on a bunch of different chains and just like they'll be on optimism averagem Polygon. And I think that's one way to do it now. But I think that once it gets easier and easier to deploy roll ups, I think we will just see a lot more experimentation. So that could mean you could have something like a DX, like something like a uniswap, and it'll still be on Ethereum or on Polygon or on all the places that it is. But eventually in the next couple of years when they're like, oh, hey, I could deploy a roll up in a couple of clicks.
00:34:31.806 - 00:35:07.514, Speaker B: I mean, I don't want to simplify it. I'm sure it'll be a lot more complicated, especially with such a large system like that. But when they realize the technology is there and it's something that they can do, I don't see why these projects wouldn't also experiment with that. So it might not be that right away. Everybody ditches the old model or ditches the app chains and ditches the fragmented liquidity on different networks. But I do think we'll just start to see a lot of all of the apps we already know and love experimenting with this as well, and see if it works for them. And then in the future they'll have to make some decisions.
00:35:07.514 - 00:35:44.300, Speaker B: Do we want to move entirely to something like a roll up, or do we want to keep it like this? But I think that the more time goes on, like far future, like 510 15 years, I think that the community will find a way to be. I think we're going to kind of solve some of these challenges of fragmentation for liquidity, fragmentation with roll ups and share sequencer sets and things like that. And we might see a day where everybody moves off of layer one ethereum and just goes to a roll up, or we might not. But I think that. Sorry, the moral of the story is that I think that everyone is going to experiment with it. I would be surprised if teams were not to, or to choose completely against.
00:35:44.910 - 00:36:50.000, Speaker A: You know, if you look at DyDX in again, you know, roll ups were not there, know, in the form they are today. Right? But do you feel like even if DyDX tried today to go the app roll up route, rather than, let's say, the app specific route, at least at the moment, you don't have decentralized sequences, right? At least neither for arbitrary nor for optimism. And so if you're dy DX, you have a token that you have to somehow get that token involved in some way for security. And if you don't have a decentralized sequence, your token kind of gets limited in some way. You can probably only use it for gas token or something of that kind, right? Do you feel like until you have a decentralized sequencing set sequence set, the tokens that these applicants have will have hard time to find a real utility, or you feel like somehow that will work out?
00:36:50.450 - 00:37:26.330, Speaker B: So. No, I actually don't think so at all. I think that with roll ups, right, you have the flexibility. So you don't need to have that validator set and have that staking mechanism like you abstract security away. But that doesn't mean that you kind of lose the use case or the value or value generation mechanisms of the token. So something I like to think of, let's pretend Didx example, Duidx moves to an app specific roll up. So right now, what they are choosing is to go to the app chain route, and they're going to have validators and they're going to have staking for the Dydx token.
00:37:26.330 - 00:38:20.634, Speaker B: But within an app specific roll up, you still have tons of different mechanisms. So a, you have governance, but b, you could have some type of staking mechanism that might not be for security, but that could be to, it could be like a security backstop for, let's say something to do with a specific pool or an insurance fund for loans or something like that. It doesn't necessarily have to only be about staking for security. So I think that it just frees up the possibilities for different use cases and something like Doidx, it might not need to have that separate validator set and staking mechanism. They can derive value in different ways. So I don't think that they're losing out that way. I think that they probably moved to cosmos or to an app chain at the time, because that is what made the most sense.
00:38:20.634 - 00:38:29.598, Speaker B: And they were always kind of jumping to the best scalability solution at the time. I don't feel that they were moving to it probably for the staking mechanism itself.
00:38:29.764 - 00:38:57.720, Speaker A: Got it. So here's a million dollar question that comes out after this, which is sure. What do you think of the feasibility of unichain? Dydx has kind of moved out already, and I guess the second biggest, one of the other biggest application, Ethereum, is uniswap. Though they're kind of operating in different ways, one requires a lot more composability than the other one. How do you assess the feasibility of a unichain, whether it be an app chain or an app specific roll up? What do you think about that?
00:38:58.250 - 00:39:38.662, Speaker B: So I think it certainly is feasible, obviously, having to deal with making sure that liquidity can make it to a bunch of different ecosystems and not just be kind of like trapped by itself. So the shared sequencer set for something like an app specific roll up would be really important there. But I think the value of something like a uni chain would be mostly in the fees and then the savings for end users. Right. So right now, as a user of Uniswap, I'm paying the transaction fees, so I'm paying a fee to the lps. In some cases, I might be paying a fee to the protocol, and then I'm also paying gas fees as well. Right.
00:39:38.662 - 00:40:26.850, Speaker B: So it's kind of layered on me there. And so if you're deployed on Ethereum, obviously you have that problem where fees go up with rising demand. Also, that will happen on other networks as well, and even other general purpose roll ups as well. So you're always going to kind of run into that problem. So with something like unichain, I think that's a huge value would be that you wouldn't have to worry about those fees, especially if someone wants to trade, they don't want to think about a huge percent going to something like fees. And also for things like mev, right. MeV can be reduced, but it can certainly be more so controlled and beneficial for the protocol and its users, as opposed to kind of being victim to what's going on kind of around you with a shared execution environment.
00:40:26.850 - 00:41:01.326, Speaker B: So certainly I believe that if it were to happen, there would certainly be technical hurdles, and there's probably a bunch that we haven't thought of yet because it hasn't been implemented in practice. But I'm really excited to see where experimentation leads. And it wouldn't be prudent just to necessarily move everything off into a specific chain right away. But it'll be really curious to see how they go about trying that if they are to do so. I think the feasibility is there and the details will kind of work itself out in experimentation and.
00:41:01.348 - 00:41:17.270, Speaker A: Okay, another follow up question would be, do you think which one of these is more likely, from your perspective, a uni chain or a dedicated defi chain? In terms of roll ups perspective, a uni chain roll up or a defi specific. A sector specific roll up?
00:41:17.420 - 00:41:24.326, Speaker B: Oh, that's interesting. That's a really good question, because my.
00:41:24.348 - 00:41:53.620, Speaker A: Point of view is, yes, maybe if you talk about Uniswap, it's so ingrained for liquidity. If uni takes all the liquidity, somehow it creates problems for everyone in some way. Right. So the question is, maybe the better way is to kind of build a roll up that is purely for deFi. And this way you can actually tap into the liquidity of other protocols. And so you could have sitting on the same roll up and driving value from that.
00:41:54.390 - 00:42:42.314, Speaker B: It could be interesting. Just something that came to my mind right away was kind of like, imagine if there was a deFi specific settlement layer, right? So there are some general purpose applications on that settlement layer as well as roll ups that attach to it. And so you could have your defi blue chips, like you could have your aave or your uniswap or all the basic services that you need. And then on top of that, roll ups can be more super specific. On top of that. That could be really cool. But you know what? At the end of the day, it's all going to come down to experimentation because most if not all of these things are feasible.
00:42:42.314 - 00:43:02.040, Speaker B: It's just about kind of figuring out whether that be in testnet or on Mainet. Does this really work for us? Is this something that we can do long term? Are we willing to not pay as much attention to our instances on other chains and move to this full up, fully roll up centric future? Or are we not right? I think only time will tell.
00:43:02.970 - 00:43:37.700, Speaker A: Okay, now let's go a little bit more on educational side. So, digging into your report that you published recently, I think we discussed that already, but in case you have to add something else for our listeners and viewers. So you do mention about three types of roll ups. And we discussed that kind of smart contract roll ups, which I personally call general purpose l two s or general purpose roll ups. And then you have app specific roll ups and the sovereign roll ups. You give an example of the first one, I think. Could you give examples of the second one and the third one? So sovereign roll ups and the app spectrum roll ups that you think are live today.
00:43:38.310 - 00:44:05.190, Speaker B: Sure. So I'll also add in their settlement roll ups. That's another one I think, I think we should note as well. But yeah, so app specific roll ups, kind of what we've been talking about. Something right now, like ByDX technically is an app specific roll up, although it does rely on that centralized infrastructure. And something like a settlement roll up is something like dimension. Sega as well as eclipse.
00:44:05.190 - 00:44:59.990, Speaker B: They're building settlement roll ups upon which and also nos. Some of them are building sdks and others are building no code roll up deployment solutions on which app specific rollups can build on top of and can benefit from. Kind of that shared settlement layer for trust minimized bridging down on that layer and then sovereign roll up. What that really means is that the roll up handles both execution and settlement so that they don't have that settlement layer in between. So something like eclipse in between, they're just going to port directly back to a base consensus and data availability layer like Celestia. So something built with the roll kit SDK, which is Celestia's SDK would be, by definition, a sovereign roll up. So the application defines all of their parameters.
00:44:59.990 - 00:45:12.510, Speaker B: They're not relying in any way on a layer in between them and the consensus and data availability layer to define any of their logic. They're just going right directly to the consensus and data availability layer.
00:45:13.170 - 00:45:26.340, Speaker A: Got it. Now, let's get to this term that we have not mentioned yet, except the title. So what's the roll up as a service? We understand roll ups. Now we understand the different types of roll ups, but what's the roll up as a service?
00:45:26.870 - 00:46:04.334, Speaker B: Sure. So roll to the service is pretty broad. So starting with sdks, so similar to kind of like the cosmos in the cosmos ecosystem and the Polkadot ecosystem, how they had sdks to help build chains. And so you kind of have that for roll ups as well. So that's kind of the first layer, and the second layer is no code roll up deployment. So there's a bunch of teams that some of them are actually building upon these sdks to build interfaces. So dashboards, so anyone, a developer or community, can come along and say, I want to build a roll up.
00:46:04.334 - 00:47:15.394, Speaker B: And they just have, like, a graphical user interface, and they're able to do that pretty quickly. Other teams are also doing more of a white glove service, I'm sure probably will continue to do so in the future for more complicated roll ups so that they'll work with teams directly and assess their needs and kind of consult and understand, hey, what do you need, and how can we build this for you? And then on top of that, there's another subset of teams that are also working on these shared sequencers that we keep talking about. So sequencers, effectively, what they do is they produce blocks on the execution layer in a compressed form, which then get sent back to the underlying layers to be confirmed. So when you have right now, all of the roll ups, sorry, that are on mainet, really, or the majority of them anyway, are using a centralized sequencer. So something like garbagemer optimism. It's operated centrally until they have a decentralized sequencer set, which have to be incentivized with crypto economic incentives to keep it honest and to make sure that they're processing those transactions appropriately. And so until then, it's centralized.
00:47:15.394 - 00:47:25.100, Speaker B: But there are teams building sequencer sets to decentralize that function that can be applied to one roll up or across many, which gets really interesting.
00:47:25.950 - 00:47:29.340, Speaker A: Okay, I think we're running off time now, so I'll try to speed up.
00:47:29.790 - 00:47:31.130, Speaker B: I'm long winded.
00:47:35.630 - 00:48:02.920, Speaker A: You mentioned about these, some roll up as service are building sdks, while others are building these no code roll ups. I mean, sdks we understand, right. We are targeting developers and people who are used to cosmos SDK. We are giving them a better and faster way to implement or use or deploy roll ups. But who are we targeting today with no code frameworks, from your perspective? And who are these people who we are going to sell these no code frameworks to?
00:48:03.690 - 00:49:15.642, Speaker B: So I think the best thing, the best use case that I can think of is like a community that might not be super technically focused. They might not have the resources to hire a full in house team of developers or something like that. And imagine a Dow, like a simple dow that wants to kind of congregate around an idea, but it's more of an idea and less of kind of like, how are we going to build this technical infrastructure so I can come to a no code roll up deployment solution and build my Dow a home effectively? So I think you're going to see it's pretty broad. As I understand correctly, making a pretty simple roll up of some of these no code roll up deployment interfaces is actually quite easy and could be done quite quickly. So I think that if it's just a general purpose Dow congregated around a simple idea, I think that we'll see that happening much more frequently than something that's more complicated. So something like a Duidx, again, that has a lot of logic and lots of volume, it's a lot more complicated. So I think that that would be, if they are to ever move back to l two, that would probably be something where they'd have to use an SDK and build it themselves more so from scratch.
00:49:15.642 - 00:49:30.110, Speaker B: So I think that there's a place for both, but it's easier. It will be easier and more accessible for communities and not just developers to use these no code roll up deployment interfaces.
00:49:30.270 - 00:50:08.190, Speaker A: The other thing that I realized is if you look at axie infinity, for example, I don't bash them, but building a chain on your own, it requires certain expertise. Right. For example, in case of axio infinity, they had a bug in their bridge and no one knew about this bug for like, I don't, ten days or something. Right. It's kind of like aws in some way, right. You kind of go to AWS and Amazon, you say, okay, I want t two medium instance. I want this much of computing power, and can you please provide it to me? And you don't have to manage any of that yourself.
00:50:08.190 - 00:50:45.962, Speaker A: Right. So it kind of makes your life easier. And as we all know, everyone uses AWS. 90% of probably the blockchain space uses AWS in one form or the other. So I think it's also important that even for developers, it actually allows you to focus on your core expertise while you move things outside for others to manage in some way. So I think that's other angle. The other thing that I feel that you mentioned about people who are not necessarily developers, for example, NFT projects, right? If you look at NFT projects, they're mostly, let's say, marketing people, design people, and business people who are basically running them.
00:50:45.962 - 00:51:29.980, Speaker A: Of course, I'm not saying they don't have developers, they of course have developers, but their core expertise is around that, right? It's around non technical business and marketing expertise. And if they had, let's say, no code framework, it becomes much easier for them to kind of go live quite easily. In the same way today you have these website builders that anyone literally, I mean, even technical teams these days actually go and use is, and they don't want to go and build an actual web app. Even Facebook, I remember the day when Facebook launched their Libra project. Their entire website was actually using a website builder. So I think it's not just for, even if you're a developer, it actually makes your life much easier, which is kind of, I guess what I'm saying.
00:51:30.910 - 00:51:31.702, Speaker B: Totally.
00:51:31.846 - 00:52:05.970, Speaker A: It's kind of interesting. Now, this is a question that I think many vcs would like an answer to, which is how could they fail? What wrong may happen? Do you think that there'll be huge enough market for these rasp providers, RAS providers to survive? Or do you think that it's a hot topic right now, but maybe it will fizzle out in a year or so. So how can they fail? What could be their reason of failure?
00:52:06.550 - 00:52:55.742, Speaker B: Sure, I think there's probably two modes of failure that I can think of. One is more on the monetary side, the other is on the decentralization ethos kind of side. So on a monetary kind of side, perhaps if too many ras providers are focusing, let's say, on the same ecosystem, because some are already focusing directly to Ethereum and EVM compatible chains, some are more so in the cosmos ecosystem, others are just like totally chain agnostic. I think the end game for most is to be chain agnostic. But I think in order to get there, it's going to require starting off. Most people are really just starting off kind of in one place. And so if, let's say there's a number of projects building exactly on the same ecosystem and exactly the same solution.
00:52:55.742 - 00:53:48.690, Speaker B: I think you run into a situation where it might be crowded. If the demand to deploy roll ups right now, especially in a bear market, for example, isn't really there, perhaps they could fizzle out, run out of funding or run out of kind of interest before they're able to kind of expand to other chains. So that's one possibility. And then also once more of them do become chain agnostic and everybody's chain agnostic. What's going to differentiate you? Why is your service easier to use or better than others? What is going to attract people? If everybody's eventually kind of building the same thing, then why would a user choose you over somebody else? So just basic kind of competition woes, I guess you could say. And then I guess in terms of failure, the other side is about, in my mind is centralization. And progressive decentralization is a thing, and it's important.
00:53:48.690 - 00:54:29.554, Speaker B: So I don't mean to say be decentralized from the beginning because in some cases you can't. And although I would like it to be that way, sometimes it can't. So what I worry about is that perhaps it would be unfortunate to see a case where, okay, so we've built these great Ras solutions, but decentralizing the sequencer is hard, so we're just going to keep it a centralized implementation. I'm not saying that anyone is thinking about doing this. I have no one particular in mind, but I can see how if you start making money and doing things like decentralizing, certain parts of infrastructure are quite intensive. People could become lazy and say, oh, you know what, I'm just going to stick to this. It works for me.
00:54:29.554 - 00:54:44.120, Speaker B: And at the end of the day, everybody has their different preferences for decentralized infrastructure. But I really do hope that we don't get lost along the way. And we really do focus on making sure that all of our solutions are as decentralized and trust minimized as possible.
00:54:46.170 - 00:55:07.760, Speaker A: Well, this is the last question, and we often ask our guests to kind of give us a contrarian view, something that you feel very strongly about, but everyone kind of disagrees with you. Is there anything that you feel very strongly about? And you feel like people around you, they keep banging their head and say, why is Stephanie not listening to?
00:55:08.850 - 00:56:03.158, Speaker B: I mean, we kind of touched on this before, you and I, but I think for me, it's like the ecosystem is oftentimes incredibly polarized. Right. So you have people in this camp, people in that camp, and they're always fighting on Twitter always saying, this is best, that's best, this is best. And it's oftentimes about theoretical concepts and things like that that aren't even proven yet. And for me, if I see myself as much more of a generalist, I don't think that one ecosystem is going to win or just one scaling solution is going to win. I think that if crypto is going to become what we really want it to be, which is a decentralized alternative to basically every kind of service, whether that be financial or otherwise, there's going to be tons of winners and there's going to be. I think that we oftentimes are far too polarized and we get too worried about our bags and we're not thinking about long term.
00:56:03.158 - 00:56:34.038, Speaker B: In the end game, there's a lot of reasons why things can fail. But I do truly support a lot of different ideas, and I'm just purely curious about seeing if you have a really cool idea and you care about decentralization and you care about bringing that to the masses, then I'm just rooting for you and not so just saying no, you know, you because of external reasons, if that makes sense. So, yeah, it's not super contrarian view, but I do like to be kind of in the middle of a lot of these arguments.
00:56:34.134 - 00:56:38.634, Speaker A: Nothing in a world where everyone has a bad bias, I think having a neutral view is actually very important.
00:56:38.752 - 00:56:39.580, Speaker B: It's hard.
00:56:40.750 - 00:56:55.600, Speaker A: Thank you very much, Stephanie, for your time. It was lovely speaking with you, and I personally enjoyed what you wrote in the ecosystem, the roll up report, and so hopefully to see more articles from you in the topic. So thank you very much for coming over.
00:56:56.210 - 00:57:07.606, Speaker B: Awesome, thank you so much for having me. It was really awesome to chat with you today. And yeah, I'm looking forward to covering the roll up and modular ecosystem more, moving forward. Forward and yeah, really, thanks again so much.
00:57:07.708 - 00:57:09.080, Speaker A: Definitely. Thank you.
00:57:10.570 - 00:57:11.970, Speaker B: See you. Bye.
