00:00:10.170 - 00:00:24.800, Speaker A: We are live. Hello, everyone. This is Amrit Kumar, chief operating officer of Allslayer. And welcome to a new episode of Allfree, where we discuss layer ones, roll ups, app chains, and other blockchain infrastructures. Today, I'm delighted to have Nick white from Celestia. Hello, Nick. How are you doing?
00:00:25.610 - 00:00:33.298, Speaker B: Good. Thanks for having me, Amrit. I've been following Altlayer for a while, and so it's good to connect on this podcast.
00:00:33.474 - 00:01:01.310, Speaker A: Thank you. Thank you. I think we have been in touch for quite a spoke, me and Mustafa, I think we spoke, and then we had a call with Ismail as well. And then we were in conversation by email as well, regarding the program model of fellowship program as well. Okay, so let's talk a little bit about yourself. So could you give a quick intro to who you are so that the audience who may not be familiar with you, can get a glimpse of your background and your role at Celestia?
00:01:01.810 - 00:01:53.822, Speaker B: Sure. So I am Nick White. I'm the CEO of Celestia Labs, as you said. And I got into crypto because I was originally an electrical engineer, sort of like into computer science, but more actually focused on the AI side of things. But in 2017, I kind of fell down the crypto rabbit hole, and I realized that crypto was, and blockchains were this technology that could scale human coordination in new ways and felt like it was leading towards the kind of world that I wanted to live in, where people and communities were more empowered to be sovereign and independent. And so I really just got addicted to the idea of building these systems. And in 2018, I jumped into crypto full time.
00:01:53.822 - 00:02:55.550, Speaker B: I co founded a project called Harmony, which is another layer one. My whole vision was like, we need to solve scalability for these things to actually be useful and effective. And that was kind of my first foray into trying to solve that problem. We pursued sharding, and then after two and a half years, I learned about this new paradigm, which is modular blockchains. And I read this white paper called Lazy Ledger that introduced that whole concept to me, written by Mustafa, who's our founder. And it just totally took over my mind, and I couldn't stop thinking about it for two weeks, practically couldn't sleep. And I knew that that was, to me, it was the solution that people had been searching for to this problem of, how do you build scalable, robust, secure, decentralized blockchain infrastructure that could actually unleash the full potential of this new paradigm that blockchains have created.
00:02:55.550 - 00:03:08.520, Speaker B: And so I joined the project in early 2021, and yeah, the rest is history. It's been a great ride. We're very close to launching our main net, which I'm sure we'll get into, but that's my story.
00:03:09.710 - 00:03:37.090, Speaker A: Let's talk a little bit about this modular new paradigm, as you say. Why do you think what it is, for those who don't know what modular philosophy is, what it is, in simple terms, and why should we care about it? Like, if I am, let's say, someone who is transacting on layer ones today, including ethereum and whatnot, why should I really worry about or think about model of blockchains as the next paradigm of infrastructures?
00:03:37.910 - 00:04:21.680, Speaker B: Yeah, so I think people are aware of a few different problems with blockchain infrastructure as it is today. One of the first ones is scalability. So it's kind of well known that basically blockchains, as they are, have a limited capacity. And so actually, I think that's just to sort of frame this, right? We have to realize what modular blockchains are versus the status quo. And the status quo are monolithic blockchains. So that's pretty much every blockchain, from bitcoin to ethereum to Solana to every blockchain that exists today is essentially a monolithic blockchain. Every layer one, I should say.
00:04:21.680 - 00:05:22.526, Speaker B: And the problem with monolithic blockchains is that the way they're designed is that the protocol does all the functions of a blockchain within one set of nodes. And that leads to some fundamental constraints that make the infrastructure less useful. One of the really big ones, as I was getting into, is scalability. So in a monolithic blockchain, there's a fixed block size beyond which you can't go beyond. And that leads to the fact that as a blockchain gets more and more adopted, like there's more applications, more people sending transactions, eventually that block space gets filled up and now you have to increase the fees, and now people just get priced out, right? So ideally we can have a blockchain where actually the block space is not finite, it's not fixed. And as more people join the network, it can actually increase. And that way fees don't have to increase at some point, right? So that's why, for example, ethereum.
00:05:22.526 - 00:06:06.802, Speaker B: Why isn't every application living on Ethereum? Why do we have things like polygon or tron or these other networks that are basically just a copy of the EVM is because people got priced out of the Ethereum main chain because of this fixed capacity. So the beautiful thing about modular blockchains is that they totally flip that on its head and make it so that for the first time, a modular blockchain scales its block size with the number of nodes in the network. So you can actually have a blockchain where as more people start using it, more nodes are being run. The capacity also increases. So it's really fundamentally the first breakthrough in scalability from that perspective. And there's other aspects of it. I think it's one of the really core ones.
00:06:06.802 - 00:06:08.340, Speaker B: I'll just stop there in case.
00:06:09.030 - 00:06:19.480, Speaker A: I think this follow up would be more like, where does Celestia fit in in this model architecture? Right. So could you tell us a little bit more about that? Where is celestia in this new world?
00:06:20.010 - 00:06:47.710, Speaker B: Yeah, so, as I was saying, monolithic blockchains, they do all the functions of a blockchain within one protocol and one set of nodes. And those functions are a number of things. One is consensus. So that's basically ordering the blocks. So once a transaction is put into a block, it shouldn't be reverted, it shouldn't be changed. So that's one function. Another function is what's called data availability.
00:06:47.710 - 00:07:36.830, Speaker B: A lot of people don't. It's not a common term in most people's understanding of what blockchains do because it's kind of solved implicitly in monolithic style. But basically what it is, is you need to make sure that all the data behind a block has been actually published. So it's public information that anyone can download. There's another function, which is settlement, which is basically how do you choose what the canonical chain is? And the last one is execution, which is how do you verify that the transactions have been executed correctly and there are no invalid state transitions. So basically are the rules of the blockchain being followed. So they have those four functions, and in a monolithic blockchain, they're all tied together in a modular blockchain, you split those apart.
00:07:36.830 - 00:08:14.330, Speaker B: And what celestia does is specifically the consensus and the data availability part of this equation. And it provides this very secure, scalable block space that is ordered, has consensus on it, and is available, meaning that it's published and it's verifiably published, and then roll ups can run on top and do settlement and execution on their own, basically. So that's where Celestia fits in. It's sort of like this sort of base infrastructure on which people can build roll ups which are themselves blockchains.
00:08:14.750 - 00:08:35.890, Speaker A: I guess there's also the benefit in this from the simple, as you explained, right, the moment execution goes out, you can actually put all sorts of execution environments, right? So you're not necessarily limited by, I guess, EvM. If you want to go beyond, you could actually have different types of virtual machines running alongside each other and having a base layer that provides da, correct?
00:08:36.040 - 00:08:56.790, Speaker B: Yeah, exactly. So the beauty of that is that one of the advantages of this is that your blockchain actually has its own independent space on which to run and you're not competing with other applications, don't have to compete with each other for resources.
00:08:57.530 - 00:09:22.880, Speaker A: Correct. And so talking about data availability, some people maybe who are nontechnical, they would ask you questions like, okay, I understand data storage. I understand, let's say, being able to put data on, I don't know, RV or, I don't know, ipfs or somewhere, right? How is that different from having my transactions on celestia in terms of data availability? So basically, how is data availability different from data storage of some sort?
00:09:24.450 - 00:09:58.860, Speaker B: So data availability is very different than data storage in that. So data storage is like, okay, I have this data. I want to make sure that it is still around for a certain amount of time. So you want to make sure that the data persists. Now, data availability is something different, which is like, I don't actually care about the persistence of the data necessarily. What I care about is, is this data published so that I could download it. So it's a very different thing.
00:09:58.860 - 00:10:04.000, Speaker B: The problem that you want to solve specifically with data availability is like.
00:10:05.730 - 00:10:06.046, Speaker A: To.
00:10:06.068 - 00:10:47.014, Speaker B: Kind of understand why is it hard to scale data availability. Because the only way to typically verify that data has been published is to actually go and download that data yourself. Meaning, imagine I claim to you, oh, I wrote all this stuff down, and you can see it when you want. You would actually have to go and read that yourself to make sure that I actually wrote it down and you could read it if you wanted to. Now, the reason that's hard to scale is that as that amount of data increases, you have to download more and more data. It scales linearly with the amount of data. So as block size increases, the overhead for people to verify data availability increases linearly.
00:10:47.014 - 00:11:34.410, Speaker B: So if you want to run a global settlement system or like a global blockchain, that won't work, right? Because as more and more people use it increases the overhead for everyone. And so what data availability really solves is it makes it so you can actually verify that that data has been published publicly without having to actually download all that data. Instead, you would just download a small fraction of it and you get the same basically security as if you downloaded all the data. So that's enabled by this technology, data availability sampling, which Celestia. Well, Mustafa, our founder, conceived of, and we're the first network to actually build live in production.
00:11:35.470 - 00:12:16.550, Speaker A: Let's talk a little bit more about this. You mentioned monolithic chains and how they're different from this new and they're not scalable, and how model architectures are actually better if you actually want scalability. But model chains are still there in all sorts of forms and shapes, right? You could call them at once, you could call them side chains or whatever they are in different shapes and form available today. So from that angle, do you feel like. Of course there are criticisms that comes from monothe chains as well? Do you feel like there are certain criticisms that are somewhat valid criticisms towards modular blockchains?
00:12:17.950 - 00:13:43.906, Speaker B: So I think there are valid criticisms, but most of them boil down to just the fact that the infrastructure is still nascent. So I think most of the problems with modular blockchains right now, we actually know how to solve them. And it's just a matter of, have we thrown enough engineering firepower at the problem to be able to crack that and solve it? And it keeps evolving, too, right? So one of the big ones recently was this idea of like, okay, well, now that I let our goal, right, is to make it as easy to deploy a blockchain as it is to deploy a smart contract. The problem is, when you're deploying a roll up, you actually have to still bootstrap a network of sequencers. So it becomes very similar to just launching your own blockchain, which is a lot of overhead. But then recently there's been a lot of work on this idea of shared sequencing, right, where all of a sudden you can have a shared network of sequencers that perform the function for you almost as a service, in the same way that Celestia provides consensus and data availability as a service. And so I guess what I'm trying to say is, the cool thing about modular blockchains is that there's so many new problems to solve, they're all very much solvable, and there's a huge opportunity to sort of knock them out.
00:13:43.906 - 00:13:52.470, Speaker B: And the people that do are going to make really valuable networks and really valuable products. So that's my perspective.
00:13:55.530 - 00:14:46.920, Speaker A: People looking in the space today, you would notice that there are kind of two kinds of parallel or maybe somewhat intersecting work being done in two different ecosystems. One is you can call the ethereum ecosystem, and the other one is the cosmos ecosystem. And both around modularity right. What do you feel are the differences in either the approach or the solutions being built in the two different ecosystems, say ethereum? And for example, let's say, take arbitrum or some of the l two s or roll ups that are being built in the ethereum ecosystem. One could argue, for example, that they're not technically fully modular per se. Maybe arbitrum Nova has its own DA and things like that. Right? But there's a very argument that goes in the ethereum ecosystem where if you are not putting data, if you're not using Ethereum as your da, then you're not a roll up.
00:14:46.920 - 00:14:57.340, Speaker A: But of course, you have a different approach. So what is your perspective on this? Do these ecosystems are trying something similar, but in a different ways, or what's going on there?
00:14:57.710 - 00:16:03.786, Speaker B: Yeah, I actually am glad you brought this up because Celestia has a lot of ties with the cosmos ecosystem. We are building using tendermint and the Cosmos SDK. And we have a lot of just overlap with a lot of cosmos engineers, and we have a lot of respect also for cosmos, but also have a lot of overlap with the Ethereum ecosystem because John and Mustafa were researchers within the Ethereum community when they came up with the idea for lazy ledger, or celestia, and this whole modular blockchain paradigm. So celestia is kind of like a synthesis of those two visions, right? And I wrote a thread about this, and what I call is the Internet of modular blockchains, which is that the cosmos vision for blockchains is that there's an Internet of blockchains. So you want to be able to. Everyone should be able to spin up their own blockchain and connect it to each other. Kind of like the way that you can build a website and then connect it to other websites.
00:16:03.786 - 00:16:50.960, Speaker B: This is very powerful because you get sovereignty and you also get this customizability of the app chain thing, right? Then you have the Ethereum vision. And this is not the Ethereum rollout vision, but the original Ethereum vision, which is like this world computer, where you have shared security, meaning that all these applications can talk to each other in a very secure way. And then you also have the ability to deploy something very easily. Like a smart contract is super easy to deploy. It's much less overhead than running your own blockchain. And essentially, Celestia is trying to actually get all of those properties within one system, so you can actually have shared security, you can have ease of deployment, you can have sovereignty and customizability all within one system. So it's kind of a synthesis of those things.
00:16:50.960 - 00:17:05.178, Speaker B: And in the long term, I see that kind of converging. So, yeah, we'll see how it all plays out. But I think the Ethereum cosmos visions are going to kind of align.
00:17:05.374 - 00:17:49.060, Speaker A: Okay. And talking about, you mentioned about app chains, right. And of course, the parallel of some sort would be app specific roll ups in the modular world. One, from your perspective, what are the key differences? I mean, of course, technically speaking, but there are differences because they're independent, sovereign. But from your perspective, what are the differences? And what I really want to know is, if I'm a builder and if I have to choose between an app chain and app specific roll up, how should I decide on which one would be best suitable for my application number one? Or do these two paradigms kind of tell you that, okay, maybe there are certain applications that are better suited for one architecture or something that you can build on one thing but you cannot build on the other one.
00:17:50.150 - 00:18:32.750, Speaker B: That's a good question. And my thinking on that has evolved over time. But generally, what I'd say is, for the most part, whatever you can build on an app chain, you can build the exact same thing on an application specific roll up. There are certain things, like, for example, you might want to have faster finality. And then there's an argument that, oh, well, then if you want to have faster finality on a roll up, your finality is tied to the finality of the base layer, and that's valid. However, there are mechanisms that you can use to actually give your roll up finality. Well, finality is a spectrum.
00:18:32.750 - 00:19:14.746, Speaker B: It's just like, what is the cost of reverting that transaction? And so you can actually have ways that give you a certain amount of economic finality really quickly. But it is true that you don't get the full economic finality of consensus until it's actually in the layer one. So that's kind of one of the only valid ones that I can think of. But in terms of building an application specific vm, it's exactly the same on an application specific roll up. And one of the big differences, we also get a bunch of benefits by building a roll up versus an app chain. First of all, much, much lower overhead. Eventually, it actually will be as easy to deploy an application specific roll up as it is to deploy a smart contract.
00:19:14.746 - 00:20:07.386, Speaker B: We're getting there. It's not at all what it is today, but I am more confident today than ever that we will get to that point. And so if I wanted to build a Cosmos chain, it's like, sure, I can use tendermint and a lot of software out of the box, but I still have to issue a proof of stake coin. I still have to get a network of validators, probably want to do a series of testnets and everything before I launch. And then I have to pay this continuous security budget to the validators to run the network versus an application specific roll up. Eventually it will be as simple as writing the business logic of your chain and hitting deploy and then you will pay fees, but it's the same as paying Ethereum when you're using a smart contract. So it's like dramatically lower overhead for a number of different reasons.
00:20:07.386 - 00:20:52.058, Speaker B: So I think that is going to be one of the big selling points. Another one is you get interoperability. Well, actually, and this is the other thing right now, interoperability between roll ups is actually worse than sovereign chains because basically figuring out roll ups or roll up bridging is still like, I wouldn't say it's an open problem, but it just needs a lot of work to get the UX that we want it to be. And right now, actually, like an IBC connection between two sovereign Cosmos zones is actually a lot faster and better ux for now, although lower security. But in the future, when that's solved, you'll also have a higher security when you're interoperating between chains. So I think that's going to be a big deal and talking a little.
00:20:52.064 - 00:21:10.654, Speaker A: Bit more about this, but more from a, I guess, business or commercial point of view. Right. We have seen l ones. We have seen l ones in many forms, side chains or whatever you call it. Right. And we have seen app specific chains under Cosmos, and now we have a new breed. This is app rollups.
00:21:10.654 - 00:21:26.150, Speaker A: Do you feel like there's a demand, like there would be enough demand for some of these infrastructures that are being built today, or do you think that will take next five years for enough interesting applications that will actually need their own roll ups?
00:21:27.850 - 00:21:31.114, Speaker B: Good question. Well, I think there's two things embedded in that.
00:21:31.152 - 00:21:33.674, Speaker A: One, why are you building too fast? I mean, this is my question.
00:21:33.872 - 00:22:45.250, Speaker B: Yeah, well, I think there's two questions. One is, will people actually demand to build application specific roll ups, or will they just kind of stick to the current status quo, which is building a smart contract on a shared execution environment like Ethereum or even arbitrum, any of these general purpose roll ups? And then the second question is also just in general, do we actually need scalability right now? Because frankly, there just aren't enough interesting use cases or there's not enough demand for block space, essentially. So I think the first one, I think there's a lot of advantages to application specific roll ups such that a very successful application, I think, will have a lot of incentives to migrate to their own roll up. There's things like customizability, so you can actually make changes to the execution environment that are actually meaningfully improve the UX or change the fee model in a way that makes more sense for you. Right. So I think having those levers to pull are going to be really important if you want your application, for example.
00:22:45.320 - 00:22:47.458, Speaker A: And you could have interesting things there.
00:22:47.624 - 00:23:25.914, Speaker B: Yeah, exactly. And I think, sure, if you're just prototyping or you're just trying to see is this application going to be viable? Probably doing it as a smart contract makes a lot of sense. But as you become more successful and you prove out that use case, you probably have more incentive to migrate. So that's one thing. The other thing that's actually really important is Mev capture. And I think kind of generally if you're a smart contract, it's much harder to internalize the MEV related to your application versus if you spin out and do your own chain or your own roll up. And so I think there's going to be a massive incentive.
00:23:25.914 - 00:24:30.366, Speaker B: From that perspective, if you're a successful application with a lot of value flowing through you, you're going to want to capture that as much as you can and internalize it. So I think that's another big one. What I'm trying to say is I think there will be a spectrum and people who are building or just experimenting. It still probably makes sense to build a smart contract. But if you're a more successful, more ambitious application, you'll do a roll up. Now the other question is, do we need capacity? Do we need all this block space yet? And I think the answer to that is, it's hard to say because first of all, it's so hard to predict the growth of a technology like blockchain that I think has a lot of sort of exponential growth ahead of it. And what you don't want to be in is in the situation, you don't want to be in the situation where things have product market fit and there's a ton of demand and there's no supply to meet that demand.
00:24:30.366 - 00:24:44.290, Speaker B: And so I think it's better always to kind of be ahead of where the demand is. And I personally don't have any doubts that in the long term there will be a lot of demand for block space. It's just a matter of time. It's kind of like demand for bandwidth.
00:24:44.370 - 00:25:02.590, Speaker A: I saw that during Defi summer as well, and no one would have imagined the defi summer in the way it started. It started like in a few months time. It blew so big. So I agree with you that you have to prepare, because you never know when that one single application or one single, I guess, type of use case appears. And then it kind of blows everything apart.
00:25:03.010 - 00:25:29.254, Speaker B: Exactly. Yeah. There's such a feedback loop between applications and the demand for block space and so forth. There's a lot of reflexivity, essentially, and I think we're used to that, both in price of tokens as well as just the growth of the space in general. So we should be prepared for demand to ten to 100 x over the span of a year or something. We should be ready to actually meet.
00:25:29.292 - 00:26:17.142, Speaker A: That you mentioned about Mev. So let's take this MeV question that one of my friends wanted to ask you, which is for someone who is looking from outside, what I mean by outside here is like traditional finance people, someone who is used to existing businesses out there. So for someone looking from outside in, 1 may wonder, why is the broader blockchain space? So Mev pro, they want to kind of capture Mev, distribute Mev and all that, right. And less keen on building solutions that prevent MeV altogether. Again, I'm not saying that it's completely. People are not building on any of that, but people are more open towards kind of capturing that MeV and distributing in the right way. Why do you think that's the case? Why is the broader blockchain space more open to kind of mev rather than.
00:26:17.142 - 00:26:27.320, Speaker A: Let's stop it altogether, because in the end, at least some part of the MEV comes from users. Right. In some way. So what's your thought on this?
00:26:29.230 - 00:27:28.454, Speaker B: I had that perspective for a long time, until I got deeper into the MEV space. I think what's important to understand is that there's good MEV and there's bad meV, or rather there's MEV that I think is just inherent to these systems, and then there's MEV that is kind of exploitative and maybe shouldn't exist. If we can eliminate it, we should try to. And the reason, because it all kind of gets bucketed together, and then people just think that all MeV is bad, but MeV is inherent because, for example, if you have multiple dex pools, someone needs to arb, and there's like, trading going on between them. Someone has to arb to balance it. It's an inherent service that actually we need for these systems to function. Or if there's a maker sort of pool, like a CDP contract, someone needs to liquidate that to keep the system safe.
00:27:28.454 - 00:28:16.134, Speaker B: And that is actually, in a sense, MeV, because it's a way for someone to actually harvest money from the chain, but they're actually providing a useful service. So that's good MeV. And I don't think eliminating that doesn't make sense because it's something that is needed for these things to function. Bad MeV is things like sandwich attacks, where you're exploiting a user to extract, give them the worst executed trade possible just so that you can take money. And I think that's bad, and we should try to eliminate. And I think there's a lot of work around that. I think one of the teams I'm really interested in is skip.
00:28:16.134 - 00:29:15.066, Speaker B: So they're building in the cosmos ecosystem, and they have this idea. For right now, the way that they do it is that they kind of have a trusted block builder, and what they do is the MEV that they capture, they then send it back to the protocol and the protocol can choose what they want. But in the future they have this really cool idea, which is a protocol owned builder, which is that the building rules are actually part of the state machine logic in a sense, and so it can be enforced directly by the validators. So rather than having this trusted outside block builder, you actually have the block building happen on chain. And that makes it so that your protocol can really capture MeV and your community can directly say, these are the kinds of MeV that we think are good. These are the kind of MeV we think is bad. And this is how we're going to spend the MeV that we capture.
00:29:15.066 - 00:29:28.180, Speaker B: So I think that's going to be something that will really take off in the long term. So hopefully that answers the question about, like, why not eliminate MeV? I think that's a misguided question.
00:29:28.870 - 00:29:33.250, Speaker A: And how does you know in this modeler landscape?
00:29:34.470 - 00:30:41.174, Speaker B: Yeah, we just did a Twitter space on that with Skip and duality and another team called Astria. Duality is building this amm and Astria is building an EVM roll up plus a shared sequencer network. And shared sequencing actually has a lot of overlap with MeV, but MeV will change in the modular ecosystem in that I think it'll make it easier for applications to become their own chain and therefore internalize MeV. I think it also skip Barry from Skip had this good mental model of MEV, which is that MEV is everything that happens between the user signing their transaction and expressing their intent to do something. And then there's this black box, and then the transaction gets included in a block and it's finalized, and there's all this activity that happens in that black box window. And that is where MEv lives. It's like all these people listening to the mempool and sending their own transactions.
00:30:41.174 - 00:31:32.146, Speaker B: There's searchers and builders and all those things. And what's interesting is in a monolithic chain, there's a certain number of steps that happen, right? And then in a modular blockchain, because there's more layers, that sort of window, that black box actually is bigger, and there's just a lot more, I guess, layers of MEV, essentially. And so it's going to make the MEV equation design space much bigger and more complex in some ways. But I expect a lot of the MEV to kind of reside at the sequencer level, because sequencers are the ones that are really ordering transactions. And Mev, at the end of the day, isn't ordering, it is about ordering.
00:31:32.178 - 00:31:40.774, Speaker A: If you push me down the stack, it kind of creates all sorts of effects. Right. As well. So you want it to be as high as possible in the stack, correct?
00:31:40.832 - 00:32:23.850, Speaker B: Sort of, yeah. What we kind of agreed on is you don't want Mev to cause bad Ux for users. So users are really like the kings, and they should be. And so if MeV is causing them to have to pay higher fees, let's say you're not sandwiching them. But just the fact that there's auctions happening on chain for block space drives the cost of transactions up, like the fees, then that's a bad ux. So trying to isolate MeV in the place where it has a minimal effect on users is one of the things that we really want to optimize for. And that might be pushing it higher up the stack.
00:32:25.150 - 00:32:50.580, Speaker A: Now, let's talk about one interesting project that I think you guys announced recently. It was about the sovereign roll up that used bitcoin as the DA layer. So let us first go into what is this sovereign roll up? What does this actually mean? Right. Number one and number two is what does it do to bitcoin? So if you build a sovereign roll up that is connected to bitcoin, what does it offer to bitcoin? And why should we care about.
00:32:52.470 - 00:33:32.974, Speaker B: Yeah, so we've incubated this roll up software toolkit called roll Kit. Internally, we started that, I think, in 2021 when there weren't no one else was building. There are projects like optimism or arbitrum or Starkware or Zikasync, but they were all kind of building their own roll up thing and they weren't really trying to build this, an open source tool for people to build their own roll ups. That's changed a little bit now. There's a lot of other teams doing that. Optimism themselves is now doing that with Opstack. Anyway, so we built this tool and then we wanted to demonstrate how you could use it.
00:33:32.974 - 00:34:33.618, Speaker B: And Eric Wall had recently given a talk about how because of ordinals and all the NFT activity on bitcoin, it'd be a really good idea to run a sovereign roll up on. So we, over a week we took roll kit and kind of like made it able to connect to bitcoin and use bitcoin as a data availability layer. And so you can actually run. And we actually ran an EVM roll up on top of bitcoin, which is quite funny. And so it was kind of for fun for the lulls, so to speak. But it does actually demonstrate that just how modularity works, and that you can plug in things like a roll up into any layer one and use them as long as they have a good interface to be used as data availability. And luckily with, what is it called? What's the name of the upgrade, the recent bitcoin upgrade made it.
00:34:33.618 - 00:35:01.318, Speaker B: So there's finally a way to use. Yeah, taproot. There's actually a good way to use bitcoin as a data availability layer. And what does it do to bitcoin? Well, a sovereign roll up doesn't actually have a bridge to the underlying layer one or data availability layer. So it doesn't actually bridge to bitcoin. So it's not like you take your bitcoin and then you go up there. It's not like the ETH roll ups where it's really connected, like the ecosystems are connected.
00:35:01.318 - 00:35:52.800, Speaker B: Like, oh, I bridge my assets up to arbitrum, I play with them and then I bridge them back down to ethereum. It's kind of an independent ecosystem. But the thing is that it is consuming bitcoin block space, so it's actually paying to use bitcoin block space. So it actually creates more demand for the fee market of bitcoin in the long term and in the future, it's very possible that if bitcoin, for example, were to add a new opcode that verifies a ZK proof then you could have ZK roll ups that actually do bridge back to bitcoin. You can actually have the capacity to have bitcoin roll ups in the same sense that kind of extend bitcoin in the same way that a lot of the Ethereum roll ups extend Ethereum. But that's kind of up for the bitcoin community to decide if that's something they want to support.
00:35:55.570 - 00:36:01.678, Speaker A: You may not have a validating bridge today, but you could still add, I guess, a trusted bridge of.
00:36:01.844 - 00:36:32.018, Speaker B: You could. Yeah, exactly. You could have a trusted bridge where you take your bitcoin and move it up there. Absolutely. And our hope is really that as much as that was just kind of like to demonstrate the technology, our hope is also that this does spark more conversation and innovation in the bitcoin community because I think, yeah, it'll be exciting to see bitcoin be cool again and actually build more interesting stuff.
00:36:32.124 - 00:37:02.962, Speaker A: Indeed, indeed. Let's take two more questions. We have about a couple of more minutes. So one question is there's something about the ecosystem that you are building around Celestia as well, and people who are using Celestia for different dna. And I guess one common, or I would say one idea that is being seen in the celestia ecosystem is around this roll up as a service models. Right. How do you see it being different from, let's say, the likes of op Stack or recently Arbitrum announced their arbitrum orbit, I think.
00:37:02.962 - 00:37:07.990, Speaker A: How do you see them different from your perspective?
00:37:10.330 - 00:37:54.334, Speaker B: Well, it depends how you define roll ups as a service, because I think they're going to be roll up sdks, like roll up frameworks. So that's how I think of bedrock and the op stack as sort of like a framework. And I think that their goal is, know, you actually fork that code or you just borrow it and essentially build on top of it as like a tool. But optimism is not going to run the node for you, for example. And so I think that's like the framework and SDK approach. It's also similar to what rollkit is, and there's other teams like sovereign Labs and a handful of others that are building just a framework. It's just software.
00:37:54.334 - 00:38:41.410, Speaker B: It's just open source software that you're meant to use. And then there's rollups as a service, which is a little bit different, which is like where you are actually trying to host the node and the sequencer for people. So it's a little bit more of like a white glove kind of like service. And the interesting thing is, you can actually use the roll up frameworks to build that service. So for example, there's a team called era that is actually taking the op node stack and building a roll up as a service kind of product based on that. So I don't know, it's really hard to say how things will play out. I do think there's going to be a lot of demand, there's a lot of latent demand for people to launch their own blockchains, but a lot of people don't have the expertise.
00:38:41.410 - 00:39:40.774, Speaker B: And so having someone who can do that kind of end to end for you is a very appealing offering. I think what I mean is that second class of roll up as a service where they actually host it for you could be really appealing. But the other approach, which is going to be interesting to see how it emerges, is like the shared sequencer network part where it's actually kind of like a more permissionless and sort of like pay as you go, decentralized approach to a roll up as a service. So rather than someone actually spinning up nodes, there's actually already a preexisting network on which you deploy your roll up. And the sequencing and the hosting of it kind of like happens automatically on that network. So I think in the long term, I think that the shared sequencer network might scale or just have certain better things. I mean, they're just going to be different.
00:39:40.774 - 00:39:50.700, Speaker B: But I feel like the shared sequencer network has some advantages that will make it potentially more successful long term. But I don't know, it's so early.
00:39:51.390 - 00:40:12.080, Speaker A: Well, we are towards the end, so the last question that I will ask you is the show is called Altview. So it's about alternate views. Do you have any new or non mainstream advice or thoughts that you feel, you feel very strongly about? But people either don't care or people often disagree with you.
00:40:13.730 - 00:40:15.518, Speaker B: Should it be crypto related or should it?
00:40:15.524 - 00:40:18.980, Speaker A: Can it? Not necessarily. If it's crypto, great. If not, that's fine as well.
00:40:19.590 - 00:40:46.498, Speaker B: Trying to think of anything crypto related. I mean, obviously you and I, and probably a lot of the audience is big believer in modular blockchains. I think that's now becoming more widely known. So I wouldn't call that like alternative. It used to be very alternative. Back in 2021, for example. I would say kind of one of the alternative views is just that roll ups should be sovereign.
00:40:46.498 - 00:42:14.258, Speaker B: I think people, there's, there's kind of been this roll ups were conceived of and sort of birthed within the Ethereum community and the goal was always to scale Ethereum, right, to get leverage on Ethereum block space, do more with the same limited resource of Ethereum block space, and to take your assets from Ethereum and move them up somewhere and do something and kind of have these roll ups be very heavily tied to the base layer. And I think the problem with that is it's led to this conception of roll ups, that they are like baby chains to Ethereum or some other base layer. And so when in reality, what roll ups are, they are standalone blockchains. They can choose to tie themselves to a base layer like Ethereum, or they can choose to not tie to any base layer other than aside from the fact that they post their data there. And in that way they can be sovereign, they can be on the same sort of tier of sovereignty as a cosmos zone or any other layer, one blockchain. And so I think that's something that I wish people kind of appreciated roll ups for that aspect. I wish we could break free from the mental model of roll ups as like baby chains.
00:42:14.354 - 00:42:56.980, Speaker A: I think this is very true. I think if you talk to most of the folks today, and I think even if you look at l two beats, right, there's this common notion that if you are not using a base chain for your da needs or whatever, right, you cannot be a roll up. They somehow even outright bad you and not even call you a roll up, which I think is a little bit. Yeah, it's abuse of, I guess, definition in some way. So I see your point that it's a view that I think needs to be accepted more openly. I think it's something that cosmos ecosystem does accept it more widely and openly, which I think the theme ecosystem has to be a little bit more open towards it as.
00:42:58.410 - 00:43:43.120, Speaker B: Yeah, definitely. To clarify, I do think the data availability guarantees of the roll are actually very important for security. But specifically, sovereignty is about settlement. Like where is the canonical chain of the roll up determined? And does that happen on a smart contract on Ethereum, or does that happen in the node software of your roll up? And even though that's a very subtle difference, it makes a world of difference in terms of is this chain just an extension of Ethereum, or is it its own community, its own network? And yeah, I think there's a lot of reasons why people will choose to build sovereign roll ups in the future.
00:43:43.810 - 00:43:52.600, Speaker A: Well, thank you very much for your nick, and it was lovely having you here, and I think our audience and listeners would enjoy the conversation we had. Thank you very much, Nick, for your time.
00:43:52.970 - 00:43:58.390, Speaker B: Thank you, Amrit. It's a pleasure. And looking forward to building the modular stack with you.
00:43:58.540 - 00:44:00.180, Speaker A: Definitely. We're together in this.
