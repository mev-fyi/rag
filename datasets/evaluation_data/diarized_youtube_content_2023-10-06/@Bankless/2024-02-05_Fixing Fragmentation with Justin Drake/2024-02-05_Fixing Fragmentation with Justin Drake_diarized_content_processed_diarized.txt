00:00:00.250 - 00:00:36.120, Speaker A: The whole Internet of value can be in one place with shared security. Under the hood, there's these modules, but these are integrated modules, and we only buy into one security assumption, which is that Ethereum is secure. And this brings us to trying to grow the economic security of Ethereum. Right now we are at $70 billion, which is extremely good. It's 29 million e times the price of, you know, I'm hopeful that we'll get to a trillion dollar of economic security, or even trillions of dollars, at which point we'll have unquestionable security, even against nation states.
00:00:39.530 - 00:00:59.866, Speaker B: Welcome to bankless, where we explore the frontier of Internet money and Internet finance. This is Ryan. Sean Adams. I'm here with David Hoffman, and we're here to help you become more bankless. Fixing fragmentation Ethereum roll ups have a fragmentation problem. All the liquidity is spread out. Each roll up is starting to feel a little bit isolated.
00:00:59.866 - 00:01:37.414, Speaker B: That has been the critique of Ethereum the last six months, and I don't think is an unfair critique. The question is, how do we fix it? Can we fix it? There are certainly ethereum skeptics out there that think Ethereum is destined to always remain fragmented. That is the trade off with going to a roll up centric roadmap. That's what Ethereum is on right now. But we have Justin Drake on the podcast today who takes the other side of that. Not only does he think Ethereum will fix fragmentation, also, it will achieve the holy grail, something that he calls universal synchronous composability. Don't worry, we explain what all of that is as we get into this episode.
00:01:37.414 - 00:02:06.902, Speaker B: There are three parts to it. Number one, we talk about the problem, fragmentation. Why is it a problem? Who is impacted by it? Number two, we talk about the solution that is shared sequencing and what that means. And number three, we talked about based sequencing, why Justin Drake thinks Ethereum layer one will become the de facto shared sequencer. This in itself was an incredible insight for me, something I just uncovered in the last two weeks or so, and seems relatively fresh from Ethereum researchers as well.
00:02:06.956 - 00:02:48.814, Speaker C: There are a few core ideas that Justin really brought together in this episode. First is really how shared sequencing provides the platform, not the solution, but the platform, for achieving universal synchronous composability. Really, once we achieve shared sequencing in theorem, the game starts. That is not the finish line. The rest of the solution, the solution space for synchronizing all the chains, is left up to accessory technologies like intense market makers restaking. But really, shared sequencing unlocks the door for us to therefore walk through. Also another idea why roll ups will all inevitably join together via the incentives that shared sequencing brings to the table.
00:02:48.814 - 00:03:34.718, Speaker C: And once we have this, how this unites the Ethereum roll up development towards a single unified direction. Once again, in Ethereum, we will have a unified direction for all of the layer twos, because all of the layer twos will start to feel and look and be one global unified system. And then I think lastly, one of the very big takeaways I had from this episode, Ryan, is why all of this would result in an increase in scope for Ethereum's layer one validators. That's if we do get to the base sequencing part of this future. So if you are a validator, you could, and you might have increased responsibilities and increased yields as well. So these were some of the three big ideas in this very big episode that Justin Drake brought to us today.
00:03:34.804 - 00:03:38.622, Speaker B: Yeah, and I would say as far as content level, this is probably 300 level material.
00:03:38.686 - 00:03:39.362, Speaker C: 300 plus.
00:03:39.416 - 00:04:08.150, Speaker B: Yeah, 300 plus. And so we tried to break it down for you, David. Maybe we'll talk during the debrief, in some layman's terms, what this kind of means, but the essential, the 100 level content is Ethereum feels like it's many different chains today, and it won't in the future. That is the bottom line of this episode. And Justin Drake explains exactly how. So this is frontier material, of course, the kind of content you come to know and expect from bankless. We're going to get right to the episode with Justin Drake.
00:04:08.150 - 00:04:25.358, Speaker B: But before we do, we want to thank the sponsors that made this possible, including our recommended exchange for 2024. That is Kraken. If you haven't created an account, if you're new to crypto, or if you're in crypto and you don't have a Kraken account, you absolutely should get one. Open it today.
00:04:25.444 - 00:04:59.770, Speaker C: Kraken knows crypto. Kraken's been in the crypto game for over a decade, and as one of the largest and most trusted exchanges in the industry, Kraken is on the journey with all of us to see what crypto can be. Human history is a story of progress. It's part of us, hardwired. We're designed to seek change everywhere, to improve, to strive. And if anything can be improved, why not finance? Crypto is a financial system designed with the modern world in mind, instant, permissionless, and 24/7 it's not perfect and nothing ever will be perfect. But crypto is a world changing technology at a time when the world needs it the most.
00:04:59.770 - 00:05:21.714, Speaker C: That's the Kraken mission to accelerate the global adoption of cryptocurrency so that you and the rest of the world can achieve financial freedom and inclusion. Head on over to kraken.com bankless to see what crypto can be. Not investment advice. Crypto trading involves risk of loss. Cryptocurrency services are provided to us and us territory customers by payword Ventures e Pvi doing business as Kraken. You know Uniswap? It's the world's largest decentralized exchange with over $1.4
00:05:21.714 - 00:05:55.914, Speaker C: trillion in trading volume. You know this because we talk about it endlessly. On Bakelist, it's uniswap. But Uniswap is becoming so much more Uniswap labs just released the Uniswap mobile wallet for iOS, the newest, easiest way to trade tokens on the go. With the Uniswap wallet, you can easily create or import a new wallet. Buy Crypto on any available exchange with your debit card with extremely low fiat on ramp fees, and you can seamlessly swap on main net polygon, arbitrum and optimism. On the Uniswap mobile wallet, you can store and display your beautiful nfts, and you can also explore web3 with the inapp search features, market leaderboards and price jars.
00:05:55.914 - 00:06:25.862, Speaker C: Or use Wallet Connect to connect to any web3 application. So you can now go directly to DFI with the Uniswap mobile wallet safe simple custody from the most trusted team in d five. Download the uniswap wallet today on iOS. There is a link in the show notes. Are you launching a token? Is it already live? How are you managing the legal and tax obligations for providing Token grants to your team? It's no secret that token management gets complicated between learning all the legal language and tax obligations. In every country that your team is in, token grant management can feel like an obstacle course. But it doesn't have to.
00:06:25.862 - 00:07:05.358, Speaker C: That's where Toku steps in. Toku provides practical tools to handle token grants, allowing for effective oversight of token distributions and payroll tax compliance for employees, contractors, advisors, and investors. They also handle tax withholdings through their real time tax calculations that can be done by Toku or integrated into any payroll EOR providers in any jurisdiction. Toku is a trusted provider of protocol labs, DyDx Foundation, Mina Protocol, and many more. Get started for free and make Token compensation simple@Toku.com. Slash bankless bankless nation I am so excited to bring you Justin Drake, a researcher at the Ethereum foundation. He needs no introduction, but if I were to give him one, I would say he's the guy who brought us moon math.
00:07:05.358 - 00:07:28.394, Speaker C: Our episode about how Ethereum is scaling with cryptography, ultrasound, money, how Eth is Sci-Fi money, mev burn, and how all Mev on Ethereum will ultimately flow into ETH. And now today on the show, he comes to us with a new problem and a new solution. Fixing fragmentation is the topic of today's episode. Justin, welcome back to Bankless. It's always a pleasure to have you, my man.
00:07:28.512 - 00:07:30.782, Speaker A: David and Ryan, thanks again for having me.
00:07:30.916 - 00:08:13.926, Speaker C: So, Justin, people are saying Ethereum has a problem. Liquidity, ux, wallets, chains, all of our infrastructure is fragmented. While one of the beautiful things about the roll up centric roadmap for Ethereum is that we all get to innovate and experiment in different directions, these different directions are, of course, different from each other. One of the costs is that this breaks the universal composability that we used to enjoy on the Ethereum layer one. It is getting harder to use Ethereum holistically today more than ever. This is the current state of things. Is this where we end up? Is this the future of Ethereum? What say you about this current context, about Ethereum's trajectory?
00:08:14.038 - 00:09:09.770, Speaker A: Well, first of all, I do want to acknowledge that we do have a problem with fragmentation. And as you said, it boils down to a very large extent around this idea of composability. Each layer two is kind of its own little silo right now. And while we do have bridges, those are asynchronous, they're slow and they're somewhat brittle and very difficult to use. Now, the good news is that a lot of people have been thinking about how to fix this, and I think we can fundamentally fix it with something called shared sequencing. So the root cause for this fragmentation of composability originates from the fact that we have different entities called sequencers that are ordering transactions for little clusters of execution. So we have the arbitram cluster, the base cluster, the optimism cluster.
00:09:09.770 - 00:10:00.710, Speaker A: Now, it turns out that shared sequencing in and of itself is not sufficient, but it's a necessary step to get, to try and regain this universal composability. And when I say universal composability, I specifically mean universal synchronous composability. So synchronous means that kind of things happen at the same time things happen atomically. It's as if you have contracts call arbitrary other contracts in other execution domains. So one of the big upsides of having this universal synchronous composability, as you mentioned, is that we get things like unified liquidity, as opposed to the status quo, where we have these fragmented pools of liquidity. But that's just the tip of the iceberg. We get so much more with universal shared composability.
00:10:00.870 - 00:10:53.722, Speaker B: Okay, Justin, so we're setting up the problem a little bit, and we're going to talk about kind of the solution, the holy grail, which is this term that you've been using called universal composability. And that, for the normie crypto user, is a mouthful. Universal composability, what the heck does that mean? Let's just try to break this down into kind of layman's terms when we're talking about the problem of fragmentation today, let's call it. So, in a lot of ways, Ethereum is much easier to use than it has been, but in some ways, it's more difficult when you tell someone who's new to crypto, yeah, just use the Ethereum network. They might be like, oh, I see that one. Is that the one with really expensive fees? I'm not using that. And then you say, no, you can go use optimism.
00:10:53.722 - 00:11:27.414, Speaker B: Arbitrum, ZK sync polygon, like on down, right? And they're like, well, which one should I choose? How do I get started? I remember in the early days of bankless when we were talking to someone about getting on chain for the first time, the answer was pretty easy. Like, you had kind of one option, you just go to Ethereum, there's no other network selections inside of metamask. You can kind of live there. You don't have to worry about bridging assets. The only bridge you had to make was going from a centralized exchange, like a kraken or a coinbase on chain on Ethereum. And that was it. You could kind of live there.
00:11:27.414 - 00:12:15.362, Speaker B: Now, the l two roadmap has essentially asked Ethereum users, including the newcomers, to go pick a layer two. And that's caused some confusion because what if the app that I want to use isn't on the specific layer two that I'm on, and I don't want to use Ethereum main net because it's too expensive, but what chain do I use? And the UX around this, the liquidity around this, it's difficult. So what's happening is, I think we've seen this a lot in the second half of 2023, is competitors. Ethereum competitors, let's call them, or alternative layer ones are seeing this soft underbelly of Ethereum. And they're basically saying, look, come to this monolithic chain. We got it all here. You just go on chain, and everything is universally composable.
00:12:15.362 - 00:12:53.362, Speaker B: So an app from one place in an alternative layer one, like a salana, let's say, or an avalanche, it's available to anyone who is on that chain. So that's kind of what we're talking about, just to set up the fragmentation problem is the UX and liquidity issues that exist today in Ethereum in its current form. And I think you're acknowledging that. I'm just wondering, high level, as we get into the rest of the episode, was the move to the layer two roadmap, is it worth this cost? Because we're feeling some pain right now, and I just want to acknowledge that and talk about that, right?
00:12:53.416 - 00:13:32.000, Speaker A: So I'd say that the move to layer twos was absolutely necessary. And the reason is that otherwise we move too slowly. Like the layer one is extremely slow to move forward. It's extremely ossified in some sense. And we have these extremely high standards of quality to ship things at layer one. So we could have roll ups at layer one. Actually, those are called native roll ups, but in order to do so, we would have, for example, to have zkvms, but not just one ZKVM, but multiple redundant implementations of a ZKVM that are redundant, that are battle tested over years.
00:13:32.000 - 00:14:41.538, Speaker A: And this is just something that we don't have right now. And so in some sense, this Ethereum accelerationism in the short and medium term comes from these layer twos that permissionlessly can deploy things and move Ethereum forward while the layer one gathers what it needs to ship. The good news is that a lot of this fragmentation, as I said, is temporary. And I think there's kind of two fundamental reasons. One of them is that a lot of the details around fragmentation can be abstracted away, right? Like when you use the Internet, there's a lot of different brands behind it, there's a lot of different things, but at the end of the day, you can wrap everything up and just present a very simple, shiny user interface to the user that abstracts away a lot of technical details. And then there's something else, which is something much more fundamental, which cannot be papered away and abstracted away, which is the difference between asynchronous composability and synchronous composability. That's like a key differentiator.
00:14:41.538 - 00:16:04.830, Speaker A: And what synchronous composability means is that if I'm a smart contract, I can go call any other smart contract and things will happen atomically. So if I'm building a very complex application, let's say that I'm building a marketplace. A marketplace needs identity, it needs a reputation system, it needs payments and escrow agents, and it needs insurance providers. Now, if all of these money legos are on execution zones with different sequences, then now suddenly your application becomes extremely brittle because every time you want to interact with it, you're interacting with different counterparties and composability starts to break down in a very meaningful way. Whereas if we have this one shared sequencer which unifies everything, then it's this one entrance door to this very complex world which can be extremely rich and diverse, but it's a real unlock to go from asynchronous composability to synchronous composability. Now, I used to be one of those people who would say asynchronous composability is fine. And part of the reason is that ethereum previously had this roadmap with sharding where we had 64 or 1024 shards which were asynchronous.
00:16:04.830 - 00:16:13.790, Speaker A: And to be fair, in hindsight, it was kind of cope. I was optimistic that we could paper over with abstraction.
00:16:13.870 - 00:16:21.670, Speaker B: Wait, Justin. So researchers get cope too? Because I know crypto investors get cope. I had no idea that researchers actually get technical.
00:16:24.410 - 00:17:07.954, Speaker A: You know, we have various constraints, and then we just do the best that we can with the laws of crypto economics. I mean, dank sharding was a massive unlock, right? Because dank sharding basically says that we can do synchronous data availability. We don't have to break data availability down into these asynchronous shards. And not only can we do synchronous data availability, we can do synchronous composability and we can do this synchronous sequencing. So we can do everything synchronously. And in some sense, we're getting the best of both the modular thesis and the monolithic thesis. We're getting all the efficiency and the user experience of the monolithic thesis.
00:17:07.954 - 00:17:14.290, Speaker A: But behind the scene, we have all the richness and diversity and decentralization of the modular thesis.
00:17:14.450 - 00:17:51.250, Speaker C: I really want to parse apart this spectrum that I see between synchronous composability and asynchronous composability. I see a spectrum that is also a binary at one end. So asynchronous composability can be a very large spectrum where we have like on an optimistic roll up, we have a seven day withdrawal window. So seven days to perfect finality. And so that's very asynchronous. Seven days worth of multiple networks not being totally in sync with each other past that seven days, then some of the state can become permeate across chains after seven days. Then in ZK roll ups, it's much faster.
00:17:51.250 - 00:18:23.434, Speaker C: ZK proofs are just settled onto the main chain much, much faster. But still, they are not synchronous. They're still asynchronous change, but they settle inside of like one to three blocks, just a few minutes. So still asynchronous. Much shorter amount of time, lower amount of time for these chains to sync up with each other. Uniswap trades will take on one ZK roll up, will take less time to affect a uniswap trade on a different ZK roll up, but it won't be instantaneous. And then you flip over to the binary, which is like perfect atomic synchronicity.
00:18:23.434 - 00:18:37.650, Speaker C: And this is what I think you are saying requires new infrastructure that you're labeling as shared sequencing, and probably some additional stuff on top of that as well. Is this the right spectrum to illuminate this conversation moving forward?
00:18:37.800 - 00:19:31.886, Speaker A: Yes, that's exactly right. So on the one hand, we have a continuum of latencies, or the worst case is seven days, and then we can try and bring that down. And actually, one of the requirements for synchronous composability is real time settlement. And it turns out that the only way to get real time settlement, which is the ability to read and withdraw from rollups immediately, is to have a ZK roll up. And not only do we need a ZK rollup, but we need a ZK rollup with real time proving, essentially being that when the CPU runs and executes transactions, there's some sort of coprocessor running behind it that in real time produces a snark that proves that the CPU is doing correct execution. And we are not there yet, but we know how to do it theoretically. And in my opinion, it's just a matter of pushing the engineering.
00:19:31.886 - 00:20:22.450, Speaker A: So two things that we need to do is, one, improve the engineering of recursive proofs, so that allows us to parallelize the proving. And two, we need to have hardware acceleration, and in the end game even have snark asics. So once we have this real time proving, we've basically brought the latency down to zero for settlement. But if you have two chains that each have zero latency, of settlement. That's not enough. To actually get synchronous composite, you need the final step, which is you need one single actor who has monopoly power to do things at the same time, synchronously on both sides. So let's say that I want to buy $10 million of some token, and in order to get best execution, I'm going to need to get liquidity from multiple different pools.
00:20:22.450 - 00:21:09.346, Speaker A: Well, what I'm going to do is I'm going to talk to the shared sequencer. The shared sequencer is going to have a look at all these pools and say, yes, in order to fulfill your order, I'm going to go dip in all these pools. And the cool thing is that this one entity, this one counterparty, can give you very high assurances that it will be able to, in one fail swoop, kind of complete your order. And not only that, also give you a pre confirmation. So that's another aspect of shared sequencing, is that you have this one counterparty that can, in real time, gives you promises of future execution, as opposed to having to wait for the twelve second block time or whatever the block time is.
00:21:09.528 - 00:21:49.966, Speaker C: As I've grown in my understanding about the rollocentric roadmap, I always kind of understood like, oh, asynchronous chains going in different directions, we get a diversity of different strategies. This is good for Ethereum, because all strategies get to be experimented with. Let the best strategy win. We get multiple different solutions to the same problems. And then also in response to the lack of the fragmentation critique, my answer has generally been along the lines of like, well, latency towards finality will slowly come down over time, and it will approach zero. It won't actually get to zero, which zero I would consider to be atomic transactions, atomic execution, universal composability. But it will approach zero.
00:21:49.966 - 00:22:19.334, Speaker C: Chains will get faster. Optimistic roll up settlement times will approach zero. ZK roll up settlement times will approach zero. And we will get so close. That kind of what you were saying, a browser on the Internet, in the back end of a browser, you have many different asynchronous systems that compose the Internet. Fun fact, the Internet is an asynchronous system, and the browser just packages it all up and presents it to the user. And it's so close in terms of finality and settlement and latency that just from the end user it seems good enough.
00:22:19.334 - 00:22:56.118, Speaker C: And so that was kind of my idea about how the roll up centric roadmap will come to be composed together. We will just get so close that we can get just like ux tricks, front end ux tricks to take us the rest of the way. But I think, Justin, what you're saying was that, well, that was the cope that you were talking about. That was like the sharding of the Ethereum roadmap. And actually, it's true atomic execution, true universal composability. That is what we are that we ought to be striving for and aspiring to in the Ethereum future. And I think you are also saying we can get there.
00:22:56.284 - 00:23:37.426, Speaker A: Yes, absolutely. I guess an alternative phrasing could be, it is possible that very similar to the Internet, we could do everything asynchronously and just wrap it up. But it is a superpower, it is a luxury that we could potentially get synchronous composability. And I think that we, as an ecosystem, we can't afford to not pick up the fruits of this luxury. And part of the reason is that we have competition, right? If we don't do it, the competitor will do it. And in some sense, Solana is forcing us through better ux, better composability, to just move a little bit faster. So hat tip to Solana for doing that.
00:23:37.426 - 00:23:57.110, Speaker A: But one of the cool outcomes of this accelerationism from Solana is that now we finally realize that we can do credibly neutral, extremely secure, with pre confirmations, shared sequencing for all of Ethereum, and basically mimic the user experience that Solana has.
00:23:57.260 - 00:24:47.014, Speaker B: Okay, super cool so far. That hat tip to Solana is kind of interesting, because one of my favorite things about the crypto ecosystem is we're all leveling each other up, and one chain's innovation becomes another chain's area of improvement and kind of their level up potential. We've seen that with so many things. And so I just want to establish what we're saying as we're going into this episode. So, Justin, you are saying there are some advantages with this thing that we're calling here, universal synchronous composability. So, USC, and we'll get into those advantages and enumerate them a little bit more in just a second. But I want to make sure that we are definitionally sound on universal synchronous composability, because it sounds like techie like words.
00:24:47.014 - 00:25:07.178, Speaker B: It sounds like eth, researchy words, but like, breaking this down, universal, I take to mean across all chains. So, like, everywhere. And not just one ethereum. It's Ethereum. Plus all of the roll ups, all of the layer twos, and all of the layer threes. That's what universal means. And then synchronous means everything stays in sync.
00:25:07.178 - 00:25:39.718, Speaker B: So at the same time, okay, that's what synchronous means, I think. And then composability means you can stitch things together. So all of these money Legos, they're not kind of like across the chasm where you can't stitch one money Lego with another money Lego. All of the money Legos kind of fit together. All of the smart contracts talk to one another, and you can stitch them together inside of another million dollar word here. You can stitch those together in an atomic transaction. So that is atomicity.
00:25:39.718 - 00:26:03.274, Speaker B: So, like, one single transaction can stitch all of these things together. That's what we mean by universal synchronous composability. And we are saying that is good. If we can have that, we want to have that. Now, the Internet gets by without having that. It's an important distinction. You can build something like the Internet with just universal asynchronous composability.
00:26:03.274 - 00:26:16.578, Speaker B: But we are saying we like universal synchronous composability. If you can have that, that's the cherry on top, and you get a lot of benefit from that. Is that a good kind of working definition or what would you modify?
00:26:16.754 - 00:26:51.502, Speaker A: No, I think that's exactly right. So if you want to have a look, a feel for what universal asynchronous composability is, have a look at cosmos. Because that's the whole vision, right? Its own chain. Every chain is its own asynchronous. Arguably, things are extremely messy in cosmos land and cosmos, people will tell you that. And then the other extreme is, of course, Solana, where everything is under one umbrella. But Solana has made a lot of shortcuts, which Ethereum is not willing to make.
00:26:51.502 - 00:27:13.222, Speaker A: And what I guess I'm trying to say here today is that we can get the best of Solana without taking shortcuts. So it will take some time, it will take several years. So that is the main trade off. Like, we have slower speed of execution. But the end game, the North Star, is that we can get the exact same user experience, if not better than Solana. Today.
00:27:13.356 - 00:27:57.570, Speaker C: There's a bunch of quirks, idiosyncrasies, I think, that people experience when they use Ethereum and its rollups. Today, there's one uniswap per chain. Metamask has a drop down for all these different chains. There's doing this bridging. Can you. Maybe you can just tell us a story, Justin, of fast forward five, however many years that we need to wait until we have the research and then engineering done on this. What does a universal synchronous ethereum feel like and look like to a user who knows ethereum as it is today, where there's multiple networks, multiple uniswaps, different tokens with prefixes in front of them? What are some of the big pain points that would be gone in this scenario?
00:27:57.730 - 00:28:36.510, Speaker A: One of them is that you have shared liquidity across every single roll up. So right now we have a bit of a cold start problem for roll ups, right? They're starting from scratch, and they can't tap into the half a trillion dollars of liquidity on layer one. They have to start from zero. And this is very expensive for several reasons. One of them is that they have to redeploy all these contracts, which start off empty, and then they have to provide incentives for people to move over. So you have to pay for liquidity farming, and then you have to set up infrastructure like Chainlink. So you have to set up these business deals, and you need to do all sorts of new integrations.
00:28:36.510 - 00:30:13.950, Speaker A: And so the barrier to entry for new entrants is extremely high. So in addition to having unified liquidity, we also dramatically lowering the friction for innovation. So one of the consequences, for example, is that we can expect a much richer long tail of virtual machines, because right now the main roll ups are in some sense opinionated. They say, okay, we're going to go with EVM equivalents, but what if you want to innovate a little bit more at the virtual machine layer, have things that are specialized for one thing or another, and also have them compose with the existing ecosystems? In some sense, what I expect fundamentally, is just much more richness than we would have otherwise. But today, arguably, the user experience on any given silo, on any given execution zone, is actually pretty good, right? You have the pre confirmations on arbitram, and you have an existing ecosystem, but it would be so much better, there would be much less dead weight loss, more network effects if everyone were to work in the same direction. Now, one very important distinction, I guess, is around whether or not we can tap into the existing half a trillion dollars of liquidity at layer one. Because oftentimes when people talk about shared sequencing, they talk about shared sequencing for the roll ups, for the l two s, so that they have interoperability between them.
00:30:13.950 - 00:30:31.174, Speaker A: But what about the l one? Well, it turns out that we can have both. Like we can be in a position where instead of playing zero sum games with the layer one, we're actually boosting the layer one. And every time a new entrant comes in that grows the pie incrementally and.
00:30:31.212 - 00:31:01.134, Speaker B: Incrementally every time we have you on Justin, it's kind of like a conversation that I love because you always come to us with good news. It's kind of like, hey, guys, you can have your cake and eat it, too, right? When we did our episode that David alluded to in the intro about cryptography magic, it was kind of like that. And many of the other episodes, it's been kind of like that as well. It's just like the theme of all.
00:31:01.172 - 00:31:04.542, Speaker C: Drake episodes is, hey, we can use cryptography to get what we want.
00:31:04.596 - 00:31:05.342, Speaker B: Yeah, exactly.
00:31:05.476 - 00:31:06.334, Speaker C: Which is why I love.
00:31:06.372 - 00:31:54.638, Speaker B: And, like, one thing I really want right now is what you mentioned, which is shared liquidity, just to wrap a bow around that for the user. That basically means that the user experience would be like one inch or matcha, or any kind of Dex aggregator, except across all layer twos by default, that would be easy. Right now, you can kind of get by a little bit with intents. So, like Uniswap's intents platform, if you use one inch today, they're doing some of that with intents. But what you're saying is we would have that by default if we get to this special place of universal shared liquidity, synchronous composability. But also another thing that's bothering users, I think, is bridges. Are you also saying that in this world, bridges go away? Because there's another set of questions.
00:31:54.638 - 00:32:14.600, Speaker B: Every time you want to move your asset from one layer two to another, or from ethereum to a layer two, you're like, what bridge do I trust? And there have been so many famous bridge hacks, right? Many of these bridges are like nothing more than multi sigs. And it's scary out there. Do bridges go away if we achieve this dream here?
00:32:15.130 - 00:32:47.954, Speaker A: Right? So bridges exist to bridge a gap. And if you remove the gap, as you said, you no longer need the bridge. So you have bridgeless bridging, if you will. Now, as you said, today's bridges are really suboptimal from a security standpoint for two reasons. One is that they tend to be fairly complex sometimes. We're talking about, like, clients, like, passing messages back and forth and, like, fancy cryptography, but also just from a governance standpoint, right? They have their own governance token. They have potentially multi sigs, even most of them.
00:32:47.954 - 00:33:45.186, Speaker A: And we've seen historically that many, many bridges kind of got completely emptied when we have universal synchronous composability. You just call the average contract without a bridge, just like you're doing today at layer one. So that's definitely a big gain. Another, I guess, improvement is in terms of deduplication and defragmentation. So right now we have lots of different unisop pools, for example, one per roll up, and it's actually gas inefficient to go dip into each one individually. It would be okay to have one single pool that makes everything more gas efficient. And actually, this is why a uniswap chain actually makes sense, right? It doesn't make sense to have a uniswap chain which has its own sequencer, right? Because then it's kind of this big pool of liquidity, but you can't really tap into it.
00:33:45.186 - 00:34:03.866, Speaker A: You don't have this composability. But now, if we have uniswap as an app chain, which is synchronously composable with all of ethereum, then it's as if it was a smart contract, right? Arguably, it's just an app. So we're moving up one level of abstraction, but we're not really changing things.
00:34:04.048 - 00:34:52.650, Speaker B: Can we talk about just things like Ens, for example? I mean, one thing that bothers me about my RSA eth name is I don't have it by default on all of the different layer twos. Does that become available? How about all of the ratings and reputation? Let's say that it seems like base the roll up is trying to accrue. And there's fantastic. Each of these roll ups seems to have almost an economic zone of specialization, and I just want to bring that competency from one chain to the other. Anywhere that I go inside of the Ethereum ecosystem, do I get things like ens across all of the chains with universal synchronous composability?
00:34:53.150 - 00:35:49.066, Speaker A: So the current roadmap that we're on is let's create these new l two s and these new roll ups and migrate all the assets from one place to another. Now that has two big problems. Big problem number one is that there's some assets that you just can't move or just realistically won't move. If you take ens, for example, the root of trust, more likely than not, will always be ethereum layer one. And same for immutable nfts like cryptopunks or whatever immutable application there is on layer one, it's very difficult to move these assets. And then if you think of whales that are extremely conservative and whatever, like funds and treasuries that is going to stay on l one. And so we're risking a situation where we have a winner take most roll up and then we have the l one, and they're both kind of 50 50 or some share of the market.
00:35:49.066 - 00:36:24.978, Speaker A: And this is really bad for network effects. And the reason is of Meltcaff's law, right? Meltcaff's law, roughly speaking, says that the strength of the network effect is quadratic in the size of the network. And so if we have 50 50, there's actually like a four x loss of potential strength of network effects, right? Because we've reduced the size by two, and that means the network effect has reduced by a size of four. So that's one problem, is that the mere migration problem is destructive to network effects.
00:36:25.074 - 00:37:00.014, Speaker C: To summarize this section, we've been talking about just a lot of the costs of fragmentation, where Ethereum is supposed to be a place where we have positive sun games. The roll up centric roadmap hasn't yet fit into that model. Just like you said with Metcalf's law, Justin adding on another roll up takes away liquidity from other roll ups, right? It's one plus one does not equal two. It's actually 1.1 equals 1.8 or 1.7. There's loss there when new roll ups come into the field because we have to share limited finite resources.
00:37:00.014 - 00:37:55.454, Speaker C: Whereas I think the future that you are illustrating that we're trying to get to is that if a new roll up comes onto the scene, it's actually additive. It's actually greater. Any sort of new capital or TVL that a new roll up attracts, brings it into the grander superstructure without pulling it from other roll ups. If optimistic, roll up chain number 74 comes in and then uniswap deployment number 82 comes in and then it attracts a million dollars of TVL. Without universal synchronous composability, it probably attracted TVL from other chains. And so for the holistic system, it wasn't additive, it was just, we just took from one pocket and gave it to another. But I think with universal synchronous composability, this flips where any single new chain that comes on with another version of Uniswap, or even the uni chain, which is the grand centralization of all liquidity, any new system adds to the throughput of the ethereum network.
00:37:55.454 - 00:38:14.442, Speaker C: It adds to the liquidity of the ethereum network without pulling away. So it goes back into positive sum games, where with the technologies needed to produce universal shared composability. One plus one can equal three, which is one of the reasons why we are in crypto in the first place. Would you say that's kind of the outcome we're searching for?
00:38:14.576 - 00:39:06.650, Speaker A: Yeah, I think that's exactly right. The competition between roll ups that don't have shared sequencing is not just zero sum, it's negative sum, because we start to break down these superlinear network effects. And then as soon as we reestablish the network effects, we go back to this quadratic superlinear power of the network effects. And I think this is part of the way that I think about it, is that Ethereum is going through its puberty phase. Things are a little awkward, like things get hairy. This also has impacts mimetically, right? The voice of Ethereum, the narrative is changing, right? People feel like there's insider fighting, people feel a little lost, right?
00:39:06.800 - 00:39:41.398, Speaker B: It's roll up versus roll up a little bit, right? It's all of these kind of sub brands. Like if I'm on arbitram, am I on Ethereum? We used to know when you were on Ethereum, like it said Ethereum, and it was very clear. And then there's all of the layer twos kind of competing against each other. So we've lost some of the shared spirit. Like there's been some fracturing in terms of narrative, in terms of brand, in terms of this feeling of oneness. It's almost know. So often we use the metaphor of a country like the United States.
00:39:41.398 - 00:40:22.500, Speaker B: And one metaphor we've used is like Ethereum being kind of like the United States, let's say, and all of the states being kind of these individual roll ups. It's almost like the states themselves are at war with one another. Not in a healthy economic competition they should be, but almost not part of the same, I guess, group of states that are forming a union together. And that's where we're kind of left as of today. So you think the process of getting the architecture right and universal composability, do you think that could heal what we're seeing on the narrative and memetic warfare side?
00:40:23.030 - 00:41:20.102, Speaker A: Absolutely, yeah. I think this is more than just a technical innovation, as is usually the case with Ethereum. This is also some sort of social shutting point, a coordination point, something that the whole community can rally around. And I think there is a large amount of risk if we don't find this common ground, this neutral playing field, which is that we have gigantuous ecosystems, we have titans like arbitram, like optimism that are deca billion projects. The market caps, these market caps are huge, and they have huge amounts of weight behind them, and we don't want to see these titans fighting each other. It's going to be extremely bloody, and there's going to be a lot of unnecessary loss of network effects. And so what I think we should do is kind of try and understand what is a reasonable thing to compete on and what is a reasonable thing to collaborate on.
00:41:20.102 - 00:42:07.834, Speaker A: And where I personally draw the line is on shared sequencing. I think kind of for the sake of the industry, if you will, shared sequencing is something that we really want to collaborate on. I think of it as a trillion dollar dance, right? If we can get this right, we're unlocking a trillion dollars of value. Now you can ask, okay, what are the roll ups really competing on then? Well, there's a whole list of things that they can compete on. They can compete on tooling, they can compete on virtual machines, they can compete on tokenomics and public goods, they can compete on security, they can compete on Bizdev. There's so many things they can compete, you know, for the love of God, don't compete on sequencing. And the good news is, and Justin.
00:42:07.902 - 00:42:15.110, Speaker B: What are they not competing on? So they're not competing on sequencing and they're not competing on liquidity anymore? Or are they still competing in liquidity for liquidity?
00:42:15.610 - 00:43:06.790, Speaker A: Great question. So this goes down to the incentives at play, right? Like, how do roll apps make money? And the way that they make money is through execution and not sequencing. And we can go down this whole rabbit hole. And so really what the roll ups want to be doing is maximizing the amount of execution within their execution zone. And one way to do this is, as you said, to compete for users, compete for liquidity, compete for devs, and that's totally fine. But the important thing is that this competition is healthy because it doesn't break the pie, it grows the pie. So it's this really healthy competition that we want, not the unhealthy one where we have these negative sum games and we're breaking down network effects.
00:43:07.610 - 00:43:48.038, Speaker C: Justin, we've been talking a lot about what could be, what the ethereum, that could be. When we achieve universal synchronous composability, we actually need to technically answer how we actually get there. You've been talking a lot about shared sequencing, and I think that is the first step on perhaps a multiple step long journey of technical advances that Ethereum needs to achieve. The Ethereum rollups need to achieve in order to have this universal shared composability. Is that the right way of thinking it? Shared sequencing is step number one, and that provides the foundation for the following steps. But first we need to get to shared sequencing. Is that correct?
00:43:48.204 - 00:43:48.534, Speaker B: Right.
00:43:48.572 - 00:44:31.438, Speaker A: So there's two necessary ingredients in order to get to the end game. One is shared sequencing and the other one is real time settlement. And for both of these fundamental pillars, we're not there yet. The good news is that even if we have shared sequencing, but we don't have a real time settlement, we can still do a lot of stuff. It's just not the end game. So for example, if we're dealing with optimistic roll ups where you have to wait seven days, what you can still do is use liquidity providers that will mimic synchronous composability and kind of will bridge the liquidity gap, as it were, because it takes seven days to get your liquidity out. Imagine that you want to buy $10 million of a token.
00:44:31.438 - 00:45:26.758, Speaker A: You get optimal pricing across lots of different pools all synchronously, but then it takes seven days for you to receive your money. You wouldn't be super happy use lps to bridge this gap. But once we have real time settlement and shared sequencing, we go back to this very luxurious model, very simple for developers, by the way. It reduces a lot of mental friction. And besides the mental friction aspect, there's also this entrepreneurial risk going on, right? Because right now we're asking application developers to make big bets to put all their eggs in one basket on one provider. And this is somewhat risky. And one of the nice things with universal composability is that you can do these graceful migrations and updates from one app to another.
00:45:26.758 - 00:46:16.786, Speaker A: So maybe the best example is Uniswap. Uniswap has no governance. It's a fully immutable, smart contract, and it's been able to seamlessly upgrade from v one to v two to v three, precisely because all of these versions of Uniswap are under the same sequencer. So from the point of view of a user going on the website, the Uniswap website, whenever I click buy behind the scenes, it's just buying from all these pools at the same time, and it just feels seamless. But the reason why Uniswap doesn't have a similar buy button for all the rollups is because it's just so much more complicated and messy and brittle. And so for developers now we've reduced the entrepreneurial risk, we've reduced the cognitive friction, and we're going to be able to move so much faster, just really.
00:46:16.808 - 00:46:32.170, Speaker B: Quick, reduce the entrepreneurial risk, because the developer doesn't have to pick a winner. I imagine if you're a developer today, you're like, what chain do I deploy on? What chain do I focus on first? And there's a lot of questions. You're saying it removes that risk.
00:46:32.750 - 00:46:34.858, Speaker A: Yes. And not only are we asking, it.
00:46:34.864 - 00:46:43.980, Speaker C: Goes back to just choosing ethereum rather than choosing optimism or choosing arbitrum or choosing polygon. It goes back to just like, oh, I choose to build on Ethereum. Correct?
00:46:44.450 - 00:46:53.182, Speaker A: Yes. At least for this one layer of the stack, which is the sequencer, which is some sort of very important public good layer that we should all coordinate on. Okay.
00:46:53.236 - 00:47:24.614, Speaker C: Real time settlement and shared sequencing, these are the two big upgrades that we need to bring to Ethereum. And these aren't upgrades like proof of stake or EIP 1559. We're not talking about an EIP here. These are actually more extra protocol upgrades and real time settlement. That's not even just a specific innovation. That has got to be a collaboration between faster roll up settlement times. So maybe the transitioning to ZK roll ups, it's also faster, like intent fulfillment orders, better market makers.
00:47:24.614 - 00:47:45.060, Speaker C: And so there's a semblance of extra protocol things contained in that real time settlement. But then the first one, I think that really is where a lot of the magic happens, is shared sequencing. Can we just go back to the 101 justin of what is sequencing? How does sequencing look today on Ethereum's roll ups? And then we'll get into what does it mean to share that process?
00:47:45.830 - 00:48:56.950, Speaker A: So the way that traditional chains are designed is that at any given point in time, at any given so called slot, you have a well defined entity, the sequencer, who has monopoly power to include a block in that slot. So in l one, we have this rotation of the sequencer, and it's the proposer, the layer one proposer at the rollup level. What we have today is centralized sequencers so that at every single slot it's the same entity. And more often than not, it's just the labs or the team behind this specific roll up that are running the sequencer. Now, one of the desires of these teams is to move to a decentralized sequencer. So sooner rather than later, we're going to be in a position where we're also going to have this rotation of the sequencer at any given slot. But the important property is that at any given point in time, you have this one actor who has monetary power for a short period of time, and then they can give you promises on future execution, which is basically a pre confirmation.
00:48:56.950 - 00:50:06.522, Speaker A: So a lot of the time people complain about Ethereum's lock times being quite long, 12 seconds. It's an eternity. Well, we're going to move to a future where whoever the sequencer is will be able to give you a pre confirmation on the order of 100 milliseconds, because 100 milliseconds is roughly the amount of time it takes for things like information to travel on the Internet. And not only are we going to have pre confirmations like we do right now on the roll ups, but we're also going to have layer one pre confirmations. So one of the great things about everyone working on the same sequencer, if that happens to be the r one, is that the various pieces of infrastructure for users, the wallets, the searchers, the builders, all of that whole pipeline around going from a transaction to a user will be upgraded. And one way to think about it is just to add the prefix super to every single actor. So we're going to go from transactions to super transactions.
00:50:06.522 - 00:50:45.660, Speaker A: We're going to go to builders, to super builders, searchers, to super builders, super searchers, PBS to super PBS. And what super means is that we're touching multiple execution zones at the same time. So a super transaction is a transaction that touches multiple zones. So there needs to be some upgrading of the wallets from transactions to super transactions. But this is much, much easier than shared sequencing, which is more of a social coordination game. It's this dance that we have to play, and real time settlement, which is this really hardcore engineering problem.
00:50:46.030 - 00:51:41.710, Speaker B: Okay, so just setting up the landscape and maybe repeating some things back to you. So every roll up today has a sequencer. And the sequencer's role is basically to determine what transactions go inside of the block, and then to order that. And this sequencing and all of the roll ups, I think basically all of the roll ups today is managed by a centralized team. So if you're on arbitrum, it's kind of like the arbitram people, arbitrum labs, or some sort of entity that is operating the sequencer. And the reason that's fine in the rollup architecture today is as a user with funds inside of arbitrum, you always have the option to withdraw your funds back to the Ethereum layer one. So you can't have that form of rug risk, but you do have some risk with respect to, I suppose, censorship.
00:51:41.710 - 00:52:11.026, Speaker B: The centralized sequencer can kind of censor your transactions, and then you have liveness risks, which we've seen. So when the centralized sequencer goes down, then the chain stops working. You can't get transactions through. So you have these risks. That's the current state today. And I think there's been some social notion that we want to make our rollups more decentralized over time. Right? That would be, I think, congruent with crypto values, with Ethereum values.
00:52:11.026 - 00:52:56.914, Speaker B: And so we're maybe on the path to do that. But I want to ask a question on this, Justin, because there could be a trap here, and that might be an incentive trap that might slow us down or stop us. And that's like, I'm aware of many decentralized shared sequencing solutions out there, right? There's one called espresso, there are many others. But there is kind of like a profit incentive thing at play where the sequencer not only sequences the block, they don't do it for free. In exchange they get mev. So they get basically blockchain fees, and that goes back to the entity operating the sequencer. So in effect, by inviting a shared sequencing solution inside of your chain, you are foregoing some of that profit.
00:52:56.914 - 00:53:16.138, Speaker B: You're giving it to someone else. I'm wondering if you could kind of address that. Has that been a reason we haven't seen more shared sequencing propagation thus far? And if so, how does that impact kind of the social layer that you're talking about and our ability to get shared sequencing done right?
00:53:16.224 - 00:53:52.146, Speaker A: That is a fantastic question, because as everything we do in our space is driven by incentives. So it's really important to appreciate the incentives. One of the things that I want to clarify, first of all, is that the sequencer today on the roll ups is a collector of fees. It's not a generator of value. And the reason is that, largely speaking, it collects two different fees. It collects the layer one data fee for data availability. And really the value creation is the layer one and it collects the layer two execution fee.
00:53:52.146 - 00:54:22.382, Speaker A: And here this is, think of it as a fee. Like the EIP 1559 base fee, it's native to the execution engine. It's non negotiable. The sequencer basically is collecting these two fees and then forwarding them as expenses to the sequencer. And so the sequencer is not really making much profit. Now you're right that fundamentally the sequencer can charge fees, but it's not really fees, it's actually meV. It's a fantastic question to ask.
00:54:22.382 - 00:54:51.734, Speaker A: Okay, the existence of MeV, is that an impediment to everyone playing this trillion dollar dance because we're all incentivized to kind of not play it. And I have several answers to that. One is that the rollups today are not extracting MeV. Right. They don't want to extract MeV. And part of the reason is that MeV is kind of extractive to users. So one of the really cool things about a centralized sequencer is that it provides MEV protection.
00:54:51.734 - 00:55:27.182, Speaker A: It's kind of this super easy encrypted mempool. So for example, there's no sandwiches on arbitram, and on optimism and on base, because you send your transaction privately to the centralized sequencer, no one else can see it, and so no one else can go sandwich you. Right. And so in trying to extract MeV, now suddenly there's a real trade off. Like the user experience just becomes so much worse. And I think in our ecosystem we want to try and go to the up and up and up. And users have become addicted to pre confirmations.
00:55:27.182 - 00:56:02.230, Speaker A: And I think users will also become addicted to MEV protection. They're not going to want to go back. But let's assume that we do go back just because the incentives are so large that we do want to go back. Well, let's try and quantify the things. And maybe the best place to look at is the l one, right. Because we have a very robust fee market. And here what we're seeing is that on l one we have 800 e per day of Mev and 3200 e per day of base fees.
00:56:02.230 - 00:56:45.194, Speaker A: So on layer one, the ratio, I guess, of execution fees to MeV is four to one or 80% 20%. And so really, MeV is a small part today on l one. And then I guess the third point that I want to make is that I believe that Mev is going to go down by at least an order of magnitude, maybe two orders of magnitude. So today the breakdown is 80 20. But in the future I believe it'll be more like 99% 1%. And the reason is that today there's two main sources of MeV. One is sandwiching, and I think that will just go out or go away completely with things like encrypted mempools.
00:56:45.194 - 00:57:44.750, Speaker A: And then the other source of MEV is arbitrage between decentralized exchanges and centralized exchanges. And again here, with better application design, we're going to be able to remove the leakage of MEV to the sequencer. So the basic idea in one sentence is that these new V four decentralized exchanges are going to be able to auction off the right to arbitrage and then with the proceeds of the auction and rebate the liquidity providers. If you didn't understand that, it's not a big deal. But the point that I'm trying to make here is that the MEV will no longer flow to the sequencer. And so really, the way that I think about it is that the best move for the roll ups is what I call the MEV gambit. Right? They're going to be giving away, let's say 1% of their revenue because almost all their revenue will be execution fees, 99% and 1% will be MEV.
00:57:44.750 - 00:57:50.370, Speaker A: And in exchange they get to tap into this wonderful ecosystem of composability.
00:57:51.110 - 00:59:10.458, Speaker B: So just to recap where we are right now, again, we're on this quest to solve fragmentation, and the way we solve that is getting universal synchronous composability and shared sequencing can help us get there. And Justin, you think that there is a positive incentive for all roll ups to add shared sequencing to their stack? Because while they might lose some MEV, MEV is not a sustainable revenue source for them anyway, given market forces. And the trade off will be worth it, because they want to make their revenue on their value proposition, which is execution. And they get so much more execution if they get the liquidity and composability and bootstrapping effect and Metcalf's law and everything we've talked about of the entire force of the Ethereum economy. So they're all going to add shared sequencing to their rollups. You think, you think the path is clear for that? Let me ask you, why haven't they already? Is the shared sequencing tech not here yet? And for those that aren't aware, there are like a handful, I would say, of shared sequencing providers. Espresso is one that kind of comes to mind.
00:59:10.458 - 00:59:27.250, Speaker B: But to my knowledge, that's like not in production in any chain yet. We don't have shared sequencing across the chains. But again, once we get that, we get universal synchronous composability, at least I believe so. Why don't you think we've gotten there yet, Justin? What's stopping us?
00:59:27.400 - 00:59:51.206, Speaker A: There's so many reasons why we haven't got there yet. One of them has to do with just the sheer simplicity of centralized sequencing. It's the easiest way to just get a foot out of the door. And we've seen how important it is to be a first mover. Optimism. They just wanted to be a first mover. For example, they just went with the simplest approach possible, which is, let's just have a shared sequencer.
00:59:51.206 - 01:00:38.906, Speaker A: And they've even made the trade off of not having foolproofs. And that's fine. It's kind of a business strategy, and it worked out really well for them. Another kind of aspect of the shared sequencer, which is fully controlled by the team, is that it's actually a security training wheel, and very few people appreciate that. So here's the problem. A lot of the verifiers, whether it's the snark verifier or fraudproof verifier, they're extremely nascent, and they're going to have bugs. And if an attacker wants to go exploit, for example, a snark verifier bug, well, what they would have to do is kind of craft this invalid block and make it look like it's invalid to the verifier, and then they get to steal money.
01:00:38.906 - 01:01:26.166, Speaker A: And so if we have a centrally controlled sequencer that acts like security in depth, because the shared sequencer that's controlled by the team will make sure that no invalid and crafty blocks ever make it on chain. And so, in order to exploit a bug, you need to do two things. One is you need to take over the shared sequencer, and two is you need to exploit the verifier. And then another reason, which I've already mentioned, is that these shared sequences act like an encrypted mempool. They provide mev protection. And then another kind of aspect of this is that we need to build a lot of infrastructure, right? I was talking about all these super things. Like, we need to build super builders, super searchers, all of these things.
01:01:26.166 - 01:01:57.294, Speaker A: And the great news here is that the market will build this through proposed a builder separation. The sophisticated set of builders will go ahead and do that, but we still need wallet integrations and things like that. And then we also have the incentive point. Like, people don't really understand the incentives of shared sequencing today. And to be fair, some people are very skeptical of shared sequencing precisely because of mev. And today, mev is a sizable share. Right.
01:01:57.294 - 01:02:39.134, Speaker A: It's like an extra 20%. Like, who would want to give up 20%? And so I think we need to see more maturity. We need to prove to the market that MEV is indeed going down by an order or two orders of magnitude, and then at which point, it will kind of become a no brainer. And so I think the roll up teams are keeping optionality right now. And then the other thing worth saying is that the roll up teams just have so much on their plate, right, going back to the cold start. They have to incentivize liquidity within their pools. They have to do all the chain integrations, they have to do the metamask integrations and all of that stuff.
01:02:39.134 - 01:03:32.010, Speaker A: And it's really complicated. And so a lot of that actually goes away, ironically, once we do have synchronous composability. So let's take Chainlink, for example. Chainlink today, what they're doing, basically, is trying to get a business deal with every single rollup, right, because you need chainlink oracles for Defi. In some sense, they have a monopoly, but this is really at the expense of rollups. And my understanding, talking to various rollup teams, is that what's happening in practice is that there's these backroom deals that are protected by NDAs, and we're talking about very large amounts of money that in some sense, Chainlink is able to extract from these roll up teams. But if we had oracle updates on l one and everyone had synchronous composability with l one, then, Tada.
01:03:32.010 - 01:03:38.578, Speaker A: You just get chain link oracles for free. No need to pay this additional chain link tax as an l two.
01:03:38.744 - 01:04:32.162, Speaker C: Yeah, and problems like that are rampant across the layer two space. Ether scan, for example, charges a fee for every single roll up. And what if we could get more synchronicity, more universality, with a lot of these different vendor providers that are able to copy and paste their business model across every single chain when it all kind of coheres down into one single chain, at least from the UX perspective. Justin, we've gone pretty far in this conversation, and I don't think we've actually yet done a pretty thorough walkthrough of a shared sequence. So maybe we can talk about what happens in a shared sequencer paradigm when a uniswap transaction on optimism collides with a uniswap transaction on arbitrum. Right now, these two transactions do not talk to each other. One only impacts the other.
01:04:32.162 - 01:05:08.190, Speaker C: Once some liquidity provider arbitrage bot settles and rebalances the pools across these two different chains. Can you just walk us through a shared sequence? What is it we're talking about? The sequencers, the orderings of transactions on arbitrum. The orderings of transactions on optimism. But when we get to a place where these things are sharing their sequencer, what does that look like, and what does that get us? Because I think we really need to define this foundation for how these roll ups can compose together after we have a shared sequencer. So maybe we can start from the beginning of defining shared sequencing. And what does that look like across roll ups?
01:05:08.690 - 01:05:19.854, Speaker A: So when we have a shared sequencer, there's one well defined entity, the shared sequencer, who has monopoly power to build blocks for all the roll ups and all the l two s simultaneously.
01:05:19.902 - 01:05:22.690, Speaker C: At least those that have opted, that integrate with it.
01:05:22.840 - 01:05:54.080, Speaker A: That integrate with it, yes. So on that note, universal is maybe overselling it, right? Because it's not completely universal. It's whoever opts in to this shared sequencer. But what I think will happen is that there will be a de facto default. And so by default you have universal composability. But if for whatever reason you want to have your own application specific sequencing, then that's fine, you can go ahead and do that. The shared sequencer is not forced on anyone.
01:05:54.080 - 01:06:50.426, Speaker A: Now let's say that we have n roll ups that have opted in. Well, this one entity can build blocks for these n roll ups at the same time. And not only can they build n blocks, but they actually have the ability to build interleaving blocks. So you could imagine calling roll up a and then roll up b and then roll up a again and then roll up b again and then c, et cetera. So basically you can think of it like threading the needle between all these virtual machines and having an interleaved interaction. Just like you can have contract a that calls contract b that calls contract c and then goes back to contract a, for example. Now in the case of a uniswap trade, what will happen is that the uniswap front end would be monitoring the liquidity on the various executions.
01:06:50.426 - 01:07:31.338, Speaker A: And then it would craft for you something that maximizes the efficiency of your execution. And it will turn out that in order to maximize efficiency, you need to touch follow up a, b and c. And so what it will create is a super transaction, which is made out of three constituent transactions. And you have very nice properties. Property number one is that all three of the constituent transactions will all happen at the same time, or none of them will happen. So you have atomicity, and then you have this other really cool property is pre confirmations, which is that you know immediately whether or not your transaction will go through. You don't have to wait 12 seconds.
01:07:31.338 - 01:07:48.994, Speaker A: And also not only do you know immediately your execution price, but you also know how much you're paying for gas in every single roll up. So we're kind of going back to this web two user experience, but using.
01:07:49.032 - 01:08:41.762, Speaker C: Web three tools okay, so there's got to be some amount of computation going on here. So, say I make a decently large uniswap trade on optimism on the ETH USDC pair, and it is so large because my size is size, that it also disturbs the arbitram Uniswap pool as well, because of some arbitrage mechanism, and there's some computation going on there. I would imagine that if we are living in a shared sequencer paradigm, that computation is happening atomically and that is improving my execution price. But also a market maker or an MEV bot or an arbitrager is also coming in, and helping me rebalance that pool to optimize for efficiency in their transaction is also coming in. Is that happening as well, or is that the role of the sequencer who's doing that job?
01:08:41.896 - 01:09:17.646, Speaker A: This is, like, slightly of a different problem, but it's basically some sort of order flow auction. Like, I, as a user, I want best execution. What I will do in the future is not what's happening today, but in the short term future, what will happen is that you're going to talk to various searchers, and the searchers will be competing with each other to give you the best quote, and then you just pick the best quote. This is kind of what's happening with Uniswap X. You have the searchers competing to give you the best quote. And the amazing thing here is that it's the market that's doing all the computational combinatorial searching. Right.
01:09:17.646 - 01:09:58.726, Speaker A: Because there's, like, an exponential blow up of different combinations of pools and liquidity. And all of that is handled by the sophisticated searchers and builders. So that is part of the beauty of proposal builder separation. The sequencer who's given the right to sequence doesn't have to do the heavy lifting. Computationally, they can delegate that right to entities that will do the heavy lifting. And the amazing thing is that even though the builders and searchers will be very sophisticated, it might be some sort of army of phds with a very large cluster of computers. That sophisticated entity is totally trustless.
01:09:58.918 - 01:10:22.420, Speaker C: Okay, so with this process of. You talked about how this is in the world of intents and uniswap X. That's how I understand it as well. And all of these intent transactions that are being made by the user and then being filled by fillers, they all collapse down into the centralized sequencer and become atomic because of the centralized sequencer. Correct.
01:10:23.030 - 01:10:52.814, Speaker A: Right. The searchers are able to give the user a deal, which can be signed off by this one counterparty, which is the sequencer. If you have 16 different sequences, then now it becomes extremely messy because now you need to try and gather some sort of pre confirmation from each one of them, but some subset of those 16 might not respond or be faulty in some way.
01:10:53.012 - 01:11:43.840, Speaker B: So all we need to get to this state of super transactions and super bundles. Again, this prefix super, which I love, that's like kind of a transaction or a bundle that touches multiple execution environments or effectively multiple chains in this world. Do we also get the layer one as part of this? My understanding is all of these layer twos, all of these roll ups will need to adopt the shared sequencer, kind of the same shared sequencer, right. And it's not truly universal because they all have to opt in. But let's assume they all opt into this one shared sequencing solution. Then we get a universal synchronous composability across all of the roll ups. Do we also get that with the Ethereum main chain, or is something else needed there?
01:11:44.450 - 01:12:21.334, Speaker A: Right, fantastic question. So the nice thing about the roll ups is that they have the ability to opt in because they have a governance and they can basically choose which sequencer they opt into. The l one, unfortunately, is what it is. It can't opt into something other than what it currently is. And it happens to be that the sequencers of the l one are the layer one proposers. So if you want to be synchronously composable with the l one, you have no choice, you have to hire in some way the l one proposers by.
01:12:21.372 - 01:12:31.446, Speaker B: Proposers, just to translate. Validators, stakers, yes, like we're talking about the people who run clients, right? Eth clients, yes, that's correct.
01:12:31.568 - 01:13:09.926, Speaker A: There is a proposed upgrade, which is called execution tickets, where the proposers are a different entity. But let's put that aside for now. Let's say that it's just validators that are currently sequencing the l one. If you want synchronous composability between roll ups and the l one, the roll ups kind of need to buy into the sequencing of the l one. And this is what's called based sequencing. And if you opt into base sequencing, you become a based roll up. And there's all sorts of advantages to being a base roll up that opts into base sequencing.
01:13:09.926 - 01:13:55.794, Speaker A: One of them is that you inherit the censorship resistance and the liveness of Ethereum. So not only do you have the settlement guarantees of Ethereum, but you also have the censorship resistance, the real time censorship resistance, not the delayed one with the escape hatch, but the real time one. And that has various consequences. For example, it means that you have longevity of your chain. Let's say that as a roll up your sequencer gets taken over 51% attack and the sequencer can't be changed then now all the users have to use the exit hatch and move out. So that's one advantage of base sequencing is security. The other one is credible neutrality.
01:13:55.794 - 01:14:48.870, Speaker A: And you might say, do we really care about credible neutrality? Well, if you're one single Rolex ecosystem, not really. But if you want your competitor to also opt in, it needs to be credibly neutral. You can't have the optimism ecosystem say, hey, we've created our own sequencer, it's credibly neutral, please arbitram come use it and vice versa. There needs to be some amount of credible neutrality, some sort of common ground that we can all agree to adopt. And the nice thing is that in some sense Ethereum is maximizing for these two properties, security and credible neutrality. It's almost the definition of a roll up, right? What is a roll up? A roll up is one that has already bought into the security assumption of Ethereum. You're not adding a new security assumption, you're not falling to a weakest link, you're just reusing the existing security assumption.
01:14:48.870 - 01:15:30.242, Speaker A: And two is you've already accepted Ethereum as a credibly neutral platform. Otherwise you would have chosen enough a chain. And now you can go ask yourself, why isn't everyone just using the layer one sequencing? And I think there's a couple of answers to that. Number one is that first of all, it's not obvious that the Ethereum layer one can be used as a shared sequencer. And this is actually a very similar story to data availability. People spent the better half of half a decade to not realizing that datability was just there, that it could be used for roll ups. It was kind of this discovery of a new resource.
01:15:30.242 - 01:16:19.554, Speaker A: And I think the ecosystem right now with base sequencing is realizing that there's this new resource that's been there all along and that we can start to tap into. So first of all, there's this lack of awareness. But the second big problem is around pre confirmations, right? Like it used to be the case that if you were to opt in to base sequencing, you inherit the twelve second block times and there's no pre confirmations. But it turns out that we can get pre confirmations and this is a very recent discovery. Basically what you can do is you can ask the next layer one, proposer to be your pre confirmer. And because they have monopoly power to sequence things, they also have the power to provide you a pre confirmation. So that ties in with restaking.
01:16:19.554 - 01:16:59.918, Speaker A: For example, basically you have the layer one proposer put forward collateral and opt into these new stashing conditions which say if ever I give a promise of a pre confirmation to a user and I reneg this promise, I never honor this promise, then I'd stand to lose my collateral. So we're starting to slowly understand and get all the pieces required for the l one itself to have pre confirmations. And then now suddenly you have this amazing shared sequencer which has the pre confirmations which everyone wants, but also has maximal security and maximal credible neutrality.
01:17:00.014 - 01:18:13.994, Speaker C: Mantle, formerly known as Bitdao, is the first dowled web3 ecosystem, all built on top of Mantle's first core product, the Mantle Network, a brand new high performance Ethereum layer two, built using the op stack, but uses Eigen layer's data availability solution instead of the expensive Ethereum layer one. Not only does this reduce mantle network's gas fees by 80%, but it also reduces gas fee volatility, providing a more stable foundation for Mantle's applications. The Mantle treasury is one of the biggest Dow owned Treasuries, which is seeding an ecosystem of projects from all around the web3 space for Mantle. Mantle already has subcommunities from around web3 onboarded like game seven for web3 gaming and buybit for TVL and liquidity and OnRAM. So if you want to build on the Mantle network, Mantle is offering a grants program that provides milestone based funding to promising projects that help expand, secure, and decentralize Mantle. If you want to get started working with the first dowled layer two ecosystem, check out Mantle at Mantle xYZ and follow them on Twitter at zero xmantle Cello is the mobile first EVM compatible carbon negative blockchain built for the real world, driving real world use cases like mobile payments in mobile DFI. And with opera Minipay as one of the fastest growing web3 wallets, Cello is seeing a meteoric rise with over 300 million transactions and 1.5
01:18:13.994 - 01:18:54.994, Speaker C: million monthly active addresses. And now Celo is looking to come home to Ethereum as a layer two optimism. Polygon, Matterlabs, and Arbitrum have all thrown their hats in the ring for the cello layer two to build upon their stacks. Why the competition? The cello layer two will bring huge advantages, like a decentralized sequencer offchain, data availability secured by Ethereum validators, and one block finality what does that all mean for you with cello layer two, gas fees will stay low, and you can even pay for gas natively using ERC 20 tokens, sending crypto to phone numbers across wallets using social connect. But Cello is a community governed protocol. This means that cello needs you to weigh in and make your voice heard. Join the conversation in the cello forums, follow Celo on Twitter, and visit celo.org
01:18:54.994 - 01:19:44.210, Speaker C: to shape the future of Ethereum it's everyone's favorite season in crypto tax season, and crypto tax is always an absolute headache, especially for all you dgens out there. But it doesn't have to be a nightmare. That's where crypto tax calculator comes in, the software built for dgens by dgens. As Coinbase's official global tax partner, Crypto tax calculator focuses on making complex transactions into easy ones, supporting over 300,000 currencies across Ethereum, arbitrum, optimism, as well as a thousand other integrations as well. It's as simple as connecting your wallet, pulling in all your transactions, and following the automated suggestions to quickly and accurately calculate your tax obligations. Plus, for all the airdrop farmers out there, crypto tax calculator has your back as they are consistently adding support for new and upcoming layer ones, layer twos and all the airdrops that you're currently farming. 2024 is the year when the dgens do their crypto taxes with speed and confidence.
01:19:44.210 - 01:19:55.754, Speaker C: Make taxes this year easy and affordable with crypto tax calculator Sign up at cryptotaxCalculator IO and get a 30% discount with code Bank 30. Click the link in the show notes for more information.
01:19:55.872 - 01:20:32.962, Speaker B: Okay, I just want to chart that we've, I think starting to enter the third part of this conversation. So in the first part, we were talking about the problem of fragmentation and the benefit from getting universal synchronous composability. And the second part we were talking about the way we achieve that is through shared sequencing. And at first we were talking about the private market solutioning for shared sequencing. And by private market, I mean kind of non Ethereum layer one, just kind of the natural innovation. There is a problem. What is the problem? We have centralized sequencing.
01:20:32.962 - 01:21:10.834, Speaker B: We want to decentralize that so that users get stronger safety, security, decentralization guarantees, and also to enable more composability and shared liquidity. And there are a bunch of private market solutions that are spinning up to solve this problem. And Justin, you gave the case for why. Naturally, the incentives align to kind of adopt these solutions and I just want to get a timeline on that section. Do you think private market shared sequencing, do you think that will start to happen this year? When do we get that? Is that in the next six months? Is that in the next two years? How long will that part take?
01:21:10.952 - 01:21:57.218, Speaker A: Right. It's happening this year. So I've been having daily conversations now with Ben Fish, who's the founder of Espresso, and he's really one of the thought leaders on shared sequencing. And over the last week or so, we've been trying to share ideas and align on vision. And I don't want to put words in his mouth, but I think he's now convinced that base sequencing is the way forward. So I think what we're going to start seeing is these market participants that were looking to provide shared sequencing kind of change their roadmap a little bit to just make it compatible with the l one just because the benefits are so huge.
01:21:57.304 - 01:23:05.170, Speaker B: I see. Okay, so I was teeing up kind of a private market solution with the espresso type shared sequencers, and then I was thinking that based roll ups and essentially hiring the proposers, the validators and stakers of ETH layer one, maybe that is almost like the public solution, right, which is basically like the Ethereum protocol saying, hey, use us as a shared sequence. But these things tie together because the shared sequencer market can just not only provide shared sequencing across the rollups, they can also provide a based roll up type of solution where they're actually, and this, I think, is the thing I didn't realize until probably two weeks ago. You did an AMA, Justin and the entire Ethereum research team did an AMA. And someone asked this very question. The question on Reddit, the question that this entire conversation is based on, which is, how do we solve fragmentation? And your big reveal here was that we could actually use Ethereum, like Ethereum made. Net, as a shared sequencer.
01:23:05.170 - 01:23:26.240, Speaker B: You said that's like hiding in plain sight. Now you're saying that the shared sequencing solutions that are emerging in the market, they are starting to see that too. And now they can opt into using Ethereum itself, Ethereum mainnet, as a shared sequencer. So that's where we've gotten to in this conversation. Am I correct?
01:23:26.610 - 01:24:15.358, Speaker A: Yes, that's correct. And in addition to espresso, I've been talking to three different team of entrepreneurs that are interested in shared sequencing. And for a period of time, there was frustration because people realized that shared sequencing with pre confirmations on l one was theoretically possible. But we used to think that a hard fork was required. Specifically, we used to think that inclusion lists were required, which is a potential upgrade to Ethereum. But in the last few days there was this kind of mental unlock where we realized, hold on, Ethereum l one can provide pre confirmations today, no hard fork required. And so now these three teams of entrepreneurs, in addition to espresso are excited to go build it out.
01:24:15.358 - 01:25:26.514, Speaker A: And so what I think will happen is there's going to be a bit of a rush, a race to try and build this shared Ethereum sequencer. And it's a little bit, I guess like restaking, right? Eigen layer is not building the Ethereum restaking platform, right? It's not building some proprietary thing. It's trying to tap into Ethereum. And I think what we're going to see is different protocols like Espresso tap into the Ethereum shell sequencer and enhance it in some way. And espresso specifically is proposing two really, really cool ways to enhance it. Way number one is that in addition to providing the economic security for pre confirmations from one single entity like this layer one proposer, we can actually also get the attestors, the Ethereum attesters to just double on in terms of economic security. So if you have a layer one proposal that puts forward, let's say 1000 e of collateral, that's a very good start.
01:25:26.514 - 01:26:14.210, Speaker A: But what if you could have a million e of economic security for the pre confirmation specifically? So for this twelve second window, that would be certainly an improvement. And then the other thing that espresso is innovating on is the redistribution of fees. So let's assume that my thesis around MEV is just completely wrong, and that the roll ups will want to tap into the MEV. Well, espresso is building a system whereby you can identify where the MEV creation came from, which roll up within the shared sequencer and then rebate and kick back this value. So there's no loss for the constituent roll ups to plug into a shared sequencer because whatever value they create goes back to them.
01:26:14.360 - 01:27:10.360, Speaker C: Justin, you said that the shared sequencer teams that are building in the space all more or less have had this, call it a eureka moment, discovering that perhaps the best way to achieve their goals is to go all the way down to the bottom of the stack and tap into Ethereum itself to achieve some of their goals. And it sounds like that's kind of consensus. You're nodding your head and then you also invoked Eigen layer and restaking. Because I think what this is doing is this is increasing the scope of the role of layer one validators. So no longer are ethereum stakers doing the dumb staking and just proposing blocks. They are now also taking on additional computational requirements, additional responsibilities. How does this impact the role of a layer one staker, layer one validator? We're increasing its duties by a lot, by a little bit.
01:27:10.360 - 01:27:15.766, Speaker C: What else is being layered onto the responsibilities of a validator in order to achieve this?
01:27:15.788 - 01:27:17.910, Speaker B: Sounds like they become super validators.
01:27:18.430 - 01:27:24.860, Speaker C: Yeah, well, to what degree? Like many supervalidators, or big supervalidators, I think is the big question.
01:27:26.030 - 01:28:10.534, Speaker A: Right? Fantastic question, but I just want to close off a previous topic around this roadmap and this intermediate step that Ryan brought forward of decentralized sequences. So I used to think that the sequencing started with base sequencing at l one, and then we moved to centralized sequencing, and then we incrementally decentralize. So we go from centralized to Federated and then federated to decentralized. And then eventually we all do this little dance and we go back to base sequencing and go full circle. But what I think will happen, more likely than not now, is that we don't need this penultimate step. We don't need the decentralized sequencer. We can go directly to the base sequencer, which happens to also be a decentralized sequencer.
01:28:10.534 - 01:28:11.754, Speaker A: That's faster now.
01:28:11.872 - 01:28:13.174, Speaker B: Yeah, faster progress.
01:28:13.222 - 01:28:58.754, Speaker A: We're going faster. We're accelerating. Now, to answer your question around the requirements of a shared sequencer and of a pre confirmer, first of all, yes, I want to acknowledge the fact that you need to be sophisticated in order to provide shared sequencing and pre confirmations. At the very least, you need to have enough bandwidth to cover all the roll ups simultaneously. You need to have low latency, you need to have high uptime, you need to have high amounts of capital to provide 1000 e of liquidity. You also need to protect yourself against denial of a service attacks. So you need to shield your IP address and do whatever it takes for high uptime.
01:28:58.754 - 01:29:47.954, Speaker A: Long story short, you need to be sophisticated. But the good news is going back to proposal builder separation. Like, we have designs out there where we can have the best of both worlds. We can have a validator running on a raspberry PI, delegate to some sophisticated sequencer, the heavy lifting so that we get the maximum efficiency of the market in terms of optimal sequencing while retaining the decentralization of the validators. Now, this goes back a little bit to what I was saying about execution tickets. This future upgrade right now, as a layer one proposer you're doing two things. First of all, you're ensuring censorship resistance.
01:29:47.954 - 01:30:25.162, Speaker A: You're making sure that transactions go on chain. And secondly, you're doing the sequencing part. And what execution tickets is all about is basically saying, hold on, it would actually be cleaner if the validators were only responsible for censorship resistance and didn't do the sequencing part. Instead you just sell off, you auction off these sequencing slot to the broader market so that you don't even need to delegate. Right. You have like a direct access to this sequencing slot so that the validators don't have to touch it, and it's a much cleaner segregation of concerns.
01:30:25.326 - 01:31:29.820, Speaker C: So understanding the pattern of how Ethereum has developed, if this vision that you have for the future of Ethereum, the based shared sequencing, shared sequencing using the validators, happens, it's not going to happen all at once. There's going to be first like one roll up starts to use and then two roll ups, and then three roll ups over time. And I think one of the reasons why I really like this idea is it very much fits with mine and Ryan's very old idea of the protocol sync thesis, which know, instead of building on proprietary private systems and solutions, we just find the most credibly neutral, most balanced, most decentralized solution and foundation to build on. And that really sounds like why so many of these shared sequencer teams have all kind of discovered to use like, oh, let's go use Ethereum, because that is the foundation, right? That's just skipping down to the bottom of the stack, the most decentralized part of the stack. So that makes sense to me. And over time, slowly more and more and more roll ups will start to tap into this power because of there are incentives. Maybe we can talk for a moment about what those incentives actually are.
01:31:29.820 - 01:32:03.314, Speaker C: You talked about why roll ups don't want to have a shared sequencer, right? Mev protection. It's easier to bootstrap a layer two just security training wheels. It's simple. And I think that kind of makes sense in the beginning of all chains, all chains start centralized, end up decentralized. This is just what we've seen throughout all of the growth of chains in the crypto space. As roll ups get their multi provers up and running, the super chain has multiple chains up and running. The conversation will start to turn.
01:32:03.314 - 01:32:20.762, Speaker C: It's like, oh, now it's time to start to turn towards a decentralization of the sequencer. Talk about the incentives and why it makes more and more sense over time for many, many roll ups. To start to use a decentralized sequencer. As time goes on, why do the benefits grow?
01:32:20.896 - 01:33:18.134, Speaker A: So, as you said, there's going to be this maturation process. We need the multiprovers, we need the encrypted mempools, we need the super transaction, super builder, super searcher, super wallet infrastructure to build out. We also need the mev situation to be solved either with way better applications that reduce the mev by an order of magnitude, or with this espresso idea of rebating back the mev to the players at play. But once the time is right, there's going to be a tipping point, as you said. And really the economic incentive goes back to, what are the l two s selling? Right. The l one is selling data availability, the l two s are selling execution, and they want to maximize the amount of execution that they sell. And in order to maximize that, you want to be tapping into a shared sequencer.
01:33:18.134 - 01:34:20.554, Speaker A: Now here's the reason why. Let's say that for whatever reason, some roll up, roll up a arbitram, because it starts with a, decides that they don't want to tap into the shared sequencer. But now what will happen is on uniswap, Uniswap will pick whatever sequencer can give you the best deal, and it will more likely than not happen to be this shared sequencer. And so when the user presses the buy button, there's going to be execution for all the roll ups that, number one, are part of the shared sequencer, and number two, can provide some competitively priced liquidity. And even if arbitrum has reasonably competitive liquidity, it just won't get tapped into because it's not part of this synchronous node. And so it's missing out on execution fees. And so the way that you maximize execution fees will be to tap into this sequencer.
01:34:20.682 - 01:35:18.420, Speaker C: Also, just using my intuition to understand how these things have grown in Ethereum, I'm going to guess that the first chain, or first handful of chains that adopt a shared sequencer paradigm as a shared sequencer platform, they will be giving up the most and capturing the least, because the incentives to join in the shared sequencer structure will be the smallest at the very beginning. But as more and more chains do grow into, I've used this metaphor to discuss the optimism super chain. For example, the peloton. What is the peloton? It's the very long line of bicyclists who are all racing together and joining in the peloton. You get to draft on others, you contribute to the draft, the peloton moves very quickly. And if you are a bicyclist, not in the peloton, you are just taking the headwinds by yourself. You don't get to draft on anyone.
01:35:18.420 - 01:35:58.474, Speaker C: It's all up to you. And so the idea for the growth of the optimism superchain is that, well, the optimism collective takes a 15% fee for being a part of the super chain. And really, the bull or bear case for optimism is that the value of being inside of the super chain is worth the trade off, worth the cost of the 15%. It sounds like we're actually applying that same sort of model to all of the roll ups using the same shared sequencer, where at the very beginning there are some high costs because the peloton is small. There's only a few chains that are drafting on each other. But as more and more chains all start to use the same shared sequencer, they all start to make trades with each other. The liquidity between each other grows.
01:35:58.474 - 01:36:23.894, Speaker C: All of a sudden, something's going to invert, right where standing up your own centralized chain that doesn't talk to the other chains is going to be an insane thing to do. Why would you do that when you can just join in the peloton, join in the network effects, join in the open source growth of the layer two network effects. This is kind of like my intuition for how this grows. Will you check that understanding for me? Is that correct?
01:36:24.092 - 01:37:20.358, Speaker A: Yeah, I think so. Now, in terms of specific teams that are looking to do this, the most obvious one is Tyco, where from day one they want to launch as a base roll up, and that's likely going to happen in 2024. Now, in the last few days, I've been trying to talk to various roll up teams, and I did manage to talk to scroll and arbitram. Now scroll, I don't want to put words again in their mouth, but at least some significant subsets of the researchers seem to be appreciating the value of base rollup. And this is something that they're seriously considering. Arbitrum is also very interesting because they're partnering with Espresso, and espresso itself is very much interested in base sequencing. Now, one of the kind of interesting dynamics that might happen is that there might be a coalition between the ZK rollups.
01:37:20.358 - 01:38:00.594, Speaker A: Because what we're seeing right now is that the ZK rollups are losing in terms of TVO. Right. You have arbitram and optimism that are winning. And so really you need to ask yourself, okay, what is the superpower. What is the value proposition of ZK rollup? And really it's all about fast settlement, right? Because you can have a snock come in extremely quickly as opposed to having to wait the seven days. Now, if we go back to the middle of our conversation where we're talking about the ingredients required for universal synchronous composability, we need two of them. We need the shared sequencer, but we also need the instant settlement.
01:38:00.594 - 01:38:39.746, Speaker A: And the very first roll up that will achieve this instant settlement are going to be the ZK rollups by necessity. You can't have an optimistic roll up. So what I think might happen is that the ZK roll ups all come together and say, hey, we're going to do a coalition because we're losing right now on TVL and this is our only way to win out. And it's possible that the optimistic roll ups will come in from day one. It's possible that they'll kind of be forced because of market pressures to join in eventually. I don't really know how the future will play out. I mean, there's also a possible future where the layer one just doesn't win out.
01:38:39.746 - 01:39:21.594, Speaker A: As a shared sequencer, I do want to acknowledge that, but I think even if that's the case, there will be some sort of winner take most shared sequencer that happens at layer two. And it's going to be a very fascinating space to see evolve. One of the really promising things is that the major roll up ecosystems to date don't seem to indicate that they want to compete on sequencing. So let's take arbitram orbit, for example. Arbitrum orbit is like a 10% fee that you have to pay to use the code. It's a licensing fee, right. And that has nothing to do with sequencing.
01:39:21.594 - 01:39:53.590, Speaker A: It's a code fee. If you look at optimism, base is paying, I believe, a 15% fee to join the law of chains. And what is the law of chains? It's like basically plugging into their governance. And again, governance has nothing to do with sequencing. So that's very, very promising. And then if you look at all the other royal ecosystems, I haven't seen one of them yet that has really strongly suggested that they want to charge a fee, maybe to have people join their shared sequencer. So I think we're moving in the right direction.
01:39:53.590 - 01:40:15.594, Speaker A: There's a lot of education to be done, and I think market forces will play out. And my role in 2024 will be to explore the design space as thoroughly as I can and kind of provide some amount of guidance, I guess, and research material for whoever wants to go build shared sequences.
01:40:15.722 - 01:41:19.350, Speaker B: So in that I heard Justin Drake just giving a call out to all of the roll up communities, anybody who's interested in this space, to reach out to him for ideas and for coordination there. And Justin, as we start to draw this to a close, just some questions, like one is with respect to the timeline and roadmap. Okay, so you talked about shared sequencing. That's going to happen this year. And I want to be clear about the kind of the next level of shared sequencing, which you've called based sequencing, which is just using the Ethereum layer one and the validator set from Ethereum layer one to basically provide the shared sequencing as well. And you said that that second part does not require an Ethereum hard fork, which is fantastic news, but also it seems that it would increase the requirements on validators. And I know you mentioned proposer builder separation like PBS, and that hasn't been deployed yet.
01:41:19.350 - 01:41:36.426, Speaker B: So are there still things that are kind of required in order to fully realize the based roll up dream here? And what is the timeline or rough roadmap for that? If so, right.
01:41:36.528 - 01:42:24.970, Speaker A: So today on Mainnet, we do have a form of off chain PBS called mefboost. So it's not a fully trustless PBS because you have to trust the relays, but it is a form of pes nonetheless. So as a validator, I don't have to trust the builder, I only have to trust the relay. Now this is an interesting point. The relays can actually start playing an accelerationist role for pre confirmations. Right. And one of the major technical change that needs to happen is for whoever's doing the pre confirmations to communicate to the builders the pre confirmations that have happened so far that the builders can go build blocks that respect those pre confirmations.
01:42:24.970 - 01:43:37.010, Speaker A: So the way that you can think of pre confirmations is putting a constraint on the top of block or the top of blobs, right? So roll ups consume blobs, and then the very first transactions get executed, go at the top of the blob. And if you're synchronously composing with the l one, you're going to be consuming the top of the l one block. And so really what we want to be doing is for the shared sequencer and preconfirmer to communicate all these constraints to the builders and for the builders to create the best block. Now one of the interesting economic points here is, you might ask, hold on, if I have all these constraints on block building, the builders are going to be building a suboptimal block, one that doesn't extract the most amount of value. And the validators will be disincentivized to provide pre confirmations because it reduces their amount of mev. But actually what we can do is we can price pre confirmations appropriately. So when a user asks for a pre confirmation, there's a corresponding pre confirmation tip, right? You can think of it like the inclusion tip, it's a value that gets paid to the validator.
01:43:37.010 - 01:44:40.418, Speaker A: Now, economically speaking, what is a pre confirmation? It's a future on block space execution. It's a future on execution. And so if, for example, a uniswap trade were to decrease the expected amount of mev at the end of the slot for the validator, then that needs to be compensated for via the pre confirmation tip and vice versa. If a user is making a transaction which increases the arbitrage opportunity because they're buying kind of against the market, then ironically the user can expect to be paid. It can expect a negative pre confirmation tip from the validator because now the validator is incentivized to pre confirm because they have more MeV at the end of their slot. So one of the other interesting things is that the pre confirmer needs to be savvy from a market perspective. They need to be aware of the various defi market and they need to be able to price these futures properly.
01:44:40.418 - 01:44:48.342, Speaker A: And this is where again, the relays can come in because they're sophisticated, or the builders can come in, or some sophisticated entity can help out.
01:44:48.476 - 01:45:39.900, Speaker B: Justin, one thing I want to clarify is you said somewhere in the last few minutes of conversation that it could be the case that based roll ups that is using Ethereum, shared sequencing doesn't actually take off. That's not kind of the market equilibrium. The market goes and just does regular non based roll ups, or non using Ethereum as a shared sequencer and solves it that way. But from kind of the articulation, and I know that you're more hopeful of the based roll up type of future, but to me it doesn't make sense why that wouldn't happen. But what are some reasons why base roll ups might not work out? Maybe we just stop before we start using Ethereum L one for shared sequencing. Why would that happen?
01:45:40.430 - 01:46:36.054, Speaker A: So, I mean, I would say that I have something like 80% confidence that base sequencing will win out. But I do want to leave the possibility that I'm wrong, especially that it's so early days. One of the very interesting points that was brought up by the arbitram team on their call, was that they have very fancy strategies to compress data. And one of the things that they do, which I didn't realize, is that they have this machine learning algorithm which watches the change of base fee. And then whenever the machine learning algorithm believes that the base fee is very high, it will just wait. It just won't settle immediately. It will wait a few slots for the gas price to go back down, and that allows users to enjoy lower fees on arbitrum.
01:46:36.102 - 01:46:36.650, Speaker B: Oh, wow.
01:46:36.720 - 01:47:49.394, Speaker A: And it turns out that this little technical detail is somewhat incompatible with base sequencing. And now I want to go talk to all these teams, and I want to kind of collect all these little nitty gritty technical details and try and see what we can do and try and understand them better. But macro picture, I am very bullish. One of the things that's surprising is that we always find improvements. Like, if you had asked me two years ago, is the Ethereum roadmap complete? And I would have said, yes, that's the best that we know. But it turns out that we constantly make improvements. So, yes, it is.
01:47:49.394 - 01:49:03.380, Speaker A: As a snapshot of 2024, this is the best we can even imagine. But who knows over the next half decade, decade, if we're going to find more crazy things? One of the things, for example, that I only realized a few months ago, which kind of completely blew my mind, is this cryptographic primitive called one shot signatures. It's a signature scheme where the private key can only be used once, so you can only sign a message once, and then it destroys itself. And it turns out that this is just impossible with classical cryptography, because you can always copy the private key. But if you kind of expand your model a little bit, if you use quantum mechanics, and your private key is a quantum superposition that destroys itself as soon as you observe it, then now suddenly you can have one shot signatures, and it turns out that one shot signatures completely transform the end game of consensus. And that's for completely different episode. But just to point out that the crazy Sci-Fi crypto economics just keeps on giving, and it's very difficult to know when it will stop.
01:49:03.830 - 01:49:33.820, Speaker C: Ryan asked if this shared sequencing using layer one validators, if that gets us to universal synchronous composability, it doesn't get us all the way there at Genesis. Correct. It provides the foundation for it. And then there's a bunch of private market aftermarket innovations that also needs to develop in order to get us the rest of the way. Right? So shared sequencing gets us the foundation, the clay for the rest of the market to take it the rest of the way. Is that correct?
01:49:34.430 - 01:50:08.950, Speaker A: Yes, that's correct. And one of the things that we've observed is that sophisticated entities like searchers and builders are very, very good at their job. Actually, their livelihood depends on it. And the reason is that it's this cutthroat market where only the most efficient survive. And so if you're not squeezing every little drop of mev and value and optimal sequencing, then you lose out. And so the great thing is that base sequencing is actually the simplest form of sequencing. It's the one where you have to do nothing.
01:50:08.950 - 01:50:47.198, Speaker A: You're reusing existing infrastructure and you just let the market do its thing. And it's actually in some sense simpler than centralized sequencing. Because centralized sequencing, first of all, you have to do the DevOps to maintain this centralized sequencer. And these rollup teams, they're not DevOps experts. And their shared sequencers absolutely go down and things like that. But also just from a smart contract perspective, the smart contract has to verify the signature coming from the centralized sequencer. Whereas base sequencing is literally like anyone can just build a block.
01:50:47.198 - 01:50:51.886, Speaker A: It's in some sense a zero line of code sequencing mechanism.
01:50:52.078 - 01:51:46.920, Speaker B: And so if we had these fault lines, this fragmentation, this fracturing that we started the episode with, what you're describing is kind of how Ethereum heals itself, and it's kind of a self healing. And I think what you're saying, justin, is that is starting, right? Like that is basically this year that process is starting. I don't know if you can predict how long it will take to have say, universal synchronous composability across 70% of the super transactions that we're doing, is that going to play out over like a decade? Are we talking about months and years here? Are we talking about like a one to three year timeline? And we have, for all intents and purposes, pretty much universal synchronous composability for the majority of the Ethereum economy, right?
01:51:47.690 - 01:52:11.834, Speaker A: I would say not decades, not months, but something like years. Like one to three years does sound correct. We do have a lot on our plate. We have to solve security of roll ups. We need these multiproovers. We need to solve meV, we need encrypted mem pools. We need to solve real time settlements, which means real time proving, which means better proof systems.
01:52:11.834 - 01:52:56.198, Speaker A: We even need hardware acceleration of these proofers. We need better applications that don't leak so much. Mevs to the sequencer, there's going to be a lot going on, and we're talking at least one year, likely two years, three years, until we get to this full vision. But the Ethereum community, I think, has several qualities. Like, one of them is that we don't want to take shortcuts. Another one of them is that we're patient. And so if we can set this north star and kind of just work towards this as a community, I think is going to be extremely rewarding.
01:52:56.198 - 01:53:13.162, Speaker A: And going back to the narratives and the mimetics and the culture, having this shared sense of mission and this shared vision, I think will help heal some of the strifes that we've seen at the social layer.
01:53:13.306 - 01:53:59.998, Speaker C: Well, it sounds like a decently ambitious roadmap, which is nothing that we've ever seen before in Ethereum. We've never seen an ambitious roadmap before. We've never come across anything like this. We don't know how to do that. Justin, you talked about all of the different components that need to come together, both just in the roll up stack. But then even post universal shared composability, a lot of these things are already being built in parallel. One question I want to ask you is what accessory technologies will help once we have the shared sequencing base? What accessory technologies comes after to help compose all the layer twos? And these are probably, I'm guessing, technologies like intense resaking from Eigen layer bridges, like across.
01:53:59.998 - 01:54:30.986, Speaker C: There's a bunch of projects that already exist, already have some of the solutions, they just never had the base to be built on. And so even though it seems like a decently ambitious roadmap, again, nothing we've ever not seen before in ethereum, it kind of also seems a lot of these solutions have already been being built in Ethereum over the last few years. So what are those accessory technologies that will help with universal shared composability? What else is being built in parallel here?
01:54:31.168 - 01:55:00.900, Speaker A: Right. So a big one, as you said, is intents and account abstraction and order flow auctions. These are all related concepts. These are user facing tools to express yourself. It's possible that actually they won't be completely user facing in the sense that my personal belief is that the user needs to almost not think about the intent. The intent needs to be implicit. And oftentimes there's kind of this master intent, which is just give me the best execution, like give me the best deal out there.
01:55:00.900 - 01:56:00.626, Speaker A: And I think what we're going to start seeing, for example, is wallets, maybe like metamask that are going to have two buttons. Button number one is do this transaction as requested by the user, and then button number two is get to the same goal. Basically try and understand what the intent of the user is with that transaction and give me an extra $100 because the searchers were really good at squeezing the best opportunity and crafting a better transaction than what you could have crafted on your own. And once we have basically wallets integrating with these intents and these order flow auctions, just because of the incentives, you'll get paid to transact on ethereum in some sense. Another thing that we need is additional slashing conditions on validators. And that's very much related to Eigen layer and restaking. Now, for example, espresso.
01:56:00.626 - 01:56:52.098, Speaker A: One of the things that they're doing is they want to increase the economic security of the pre confirmation to millions of EF. And in order to do that, they use restaking. So each 32 e validator can provide individual collateral at stake. One of the things that I do want to highlight is that 32 e is probably insufficient for the one layer, one proposer who's acting as the shared sequencer for that 12 seconds. I think we want something closer to 1000 e. And the reason is that you need to think about the incentive for the sequencer to reneg on all their promises. And if a sequencer renegs on all their promises, they have the full freedom to build whatever block they want, right? They're now suddenly unconstrained.
01:56:52.098 - 01:57:56.454, Speaker A: And then you can ask yourself, okay, what is the value of building an unconstrained block? And that's basically the amount of mev that you can grab in any given slot. And historically speaking, we haven't had more than 1000 e of mev in any given slot. So if you're collateralized with 1000 e, you'll never have an incentive, or only in extreme situations, you'll have the incentive to reneg on your pre confirmations. And then I think the last piece of the puzzle is like this really hardcore engineering around recursive proofs and folding and accelerating algorithms like fast Fourier transforms and msms, like multiscalar multiplications, and then programming really advanced hardware like fpgas and gpus, and even building your own ASIC in order to get to this real time settlement. And there's a lot of teams out there that are looking to do this. Actually, this is a topic that I was very much interested in. And in the ecosystem, there's about ten different companies that are trying to achieve this acceleration.
01:57:56.454 - 01:58:18.030, Speaker A: Previously, I used to think that the main value of doing hardware acceleration is that you can have proving at home, so you can have decentralized approving. You don't need a data center in order to become approver. But now I've changed a little bit. There's actually two value propositions to these asics. One is decentralization, of course, but the other one is low latency proving.
01:58:18.190 - 01:59:06.242, Speaker B: Justin, this has been a fantastic conversation, and once again, you've kind of given us a world class education. And I got to say, for folks who haven't listened to previous Justin Drake podcasts, and particularly on bankless, this man's predictions tend to come true and tend to become reality and hasn't missed, not yet. And as we've heard throughout this conversation, one phrase I'm reminded of, we got an entire ecosystem working on this solution. Don't bet against Ethereum. I don't think that bet has ever worked out for anyone who says that Ethereum can't fix its fragmentation because XYZ. All right, I wouldn't bet against that. As we draw this to a close, maybe Justin, my last question is around this.
01:59:06.242 - 02:00:04.670, Speaker B: So much of the bankless podcast has been trying to figure out what block space actually is, certainly what crypto assets are, but also what blockspace itself is. And I've seen kind of this evolution of what Ethereum block space, at least on the layer one actually does, and what it contains. And again, this is like when you boil it all down to what is crypto creating. It's creating a new digital commodity called Block Space. And we've done tons of episodes on this, but now the evolution of Ethereum block space, it sounds like we've certainly talked about it moving to settlement and data availability for chains, and now it's unleashed maybe a new role. What you're talking about here, which is also sequencing for chains, and I suppose that is the function of layer one, block space. We could talk about in the full vision of everything you laid out.
02:00:04.670 - 02:00:25.050, Speaker B: We've talked about what users get out of it, how builders and searchers evolve and how validators evolve and how roll ups evolve and change. But what about blockspace, Ethereum block space? Does it become settlement and da, does it become sequencing for all of the chains? Is that its role as a commodity?
02:00:26.270 - 02:01:21.706, Speaker A: Right. So I think what you're pointing out to is that block space is a complex thing which has multiple constituent components to it. One of them is data availability, another one is settlement, another one is sequencing, and yet another one is execution. And I think one of the nice things about the modular thesis is that we can try and tackle each one of them individually and really optimize for each. Now, one of the advantages of the monolithic thesis is that all of these are under one shared umbrella. And the nice thing about Ethereum is that we can start tapping into both of these. And maybe one word that you could say kind of unites both is the integrated thesis.
02:01:21.706 - 02:02:33.442, Speaker A: We have modular components, but they're all integrated under one umbrella. Now, one of the interesting things is, can you start providing shared sequencing without necessarily sharing the data availability layer? And I think the answer is yes, but it's not as clean, necessarily. So, for example, what you can start doing is having validiums and optimiums start plugging in to this shared sequencer. But now you start entering edge cases. Okay, what if one chain reverts, but not the other? And this brings us to the concept of shared security, right? There's this very nice thing that when you're under one umbrella, you're sharing security. It's not like you have multiple modules, and your net security is the security of the weakest link, right? And so I think one of the value propositions of Ethereum is that it gives you the option to minimize your security assumptions. Security assumptions are a bad thing.
02:02:33.442 - 02:03:14.534, Speaker A: You don't want to have too many of them. The more you buy into security assumptions, the more brittle your system becomes. And one of the things that I'm hopeful of is that the real bottleneck fundamentally for scalability, is data availability. And I'm hopeful that this will largely go away as a bottleneck. I'm hopeful that eventually Ethereum can be the data availability for the whole world. And the way that I think about it here is in terms of going beyond full dank sharding. Full dank sharding somehow presupposes that we've reached the endgame.
02:03:14.534 - 02:04:15.430, Speaker A: It's full dank sharding. But actually what we're having is we have a law called Nielsen's law, which basically says that the amount of bandwidth grows 50% per year. And there's good reasons to believe that Nielsen's law will continue for a long time, at least a decade, maybe several decades. And part of the reason is that bandwidth is this embarrassingly parallel thing, right? You can just send more photons through, just have more fiber optic cables. I mean, it turns out that a single fiber optic cable can have an insane amount of information pass through it, so you don't even need that. But the point that I'm trying to make here is that with clever engineering. A lot of the bottlenecks that we're suffering today, things like disk I o on GEF, things like state bloat, things like verification of execution, all of these things go away, and you're kind of left with the one fundamental bottleneck, which is bandwidth.
02:04:15.430 - 02:04:57.806, Speaker A: And when you combine dank sharding with Nielsen's law that compounds over ten years, we're in a position. We'll be in a position where we can do 10 million transactions per second on Ethereum. It sounds insane, but this is where we're heading. 10 million transactions per second, and that's enough for every single person on earth to do 100 transactions per day. In my opinion, that's enough. Right? And so we'll be in a position where the whole Internet of value can be in one place with shared security. Under the hood, there's these modules, but these are integrated modules, and we only buy into one security assumption, which is that ethereum is secure.
02:04:57.806 - 02:05:28.426, Speaker A: And this brings us to trying to grow the economic security of Ethereum. Right now, we are at $70 billion, which is extremely good. It's 29 million e times the price of ETh. But I'm hopeful that we'll get to a trillion dollar of economic security, or even trillions of dollars, at which point we'll have unquestionable security, even against nation states. And we'll be in a position where the Internet of value is unquestionably secure, and it's just unquestionably the place where everything happens.
02:05:28.608 - 02:05:50.094, Speaker B: Well, what a fantastic vision, Justin. Thank you for guiding us through it. I can tell you, once we have shared sequencing on ethereum, its base level, I can't wait to start calling it super block space on Ethereum because it will be deserving of its prefix. Justin, thank you so much for super blocks. Thank you so much for guiding us through this conversation today. It's been fantastic.
02:05:50.222 - 02:05:50.978, Speaker A: Thanks, guys.
02:05:51.064 - 02:06:03.378, Speaker B: Bankless nation. We have some Justin Drake episodes from the archives in the show notes. Go check them out if you haven't already. Also got to end with this. Of course, crypto is risky. You could lose what you put in. But we are headed west.
02:06:03.378 - 02:06:28.380, Speaker B: It's the frontier. It's not for everyone. But we're glad you're with us on the bankless journey. Thanks a lot. Channel.
