00:00:00.330 - 00:00:41.382, Speaker A: You. Bankless Nation the ZK frontier is hard to imagine. We can discuss the properties of ZK technology technically, but articulating what it's actually going to do for not just Ethereum, not just web Three, but the entire internet and the society built on top of it is really hard. It's a hard vision to articulate ZK technology unlocks a massive new landscape of opportunity. But it's impossible to actually imagine it. The pattern here is that it's trying to articulate what the internet would look like in the late 80s. We can articulate the internet technically.
00:00:41.382 - 00:01:26.306, Speaker A: We can now pass data between a computers at the speed of light across space and time. But illustrating the internet meaningfully before applications like YouTube or Twitter or Discord existed is basically impossible. And we've seen these moments in history before. No one could really imagine that the printing press and double entry bookkeeping would meaningfully change humans'perceptions of art and self. The steam engine or combustion engine did not evoke images of abundance and culture in the mind of people looking at it today. Bankless Nation on the show, we do our best to draw the future of a ZK enabled internet. Alex Glowkowski and Anthony Rose from ZK Sync come with a color palette of principles that can help you, the listener, draw what you see downstream.
00:01:26.306 - 00:02:15.670, Speaker A: Principles like sovereignty, censorship, resistance, hyperscalability, security. These are all properties of both crypto systems and ZK technology. And we take each principle one by one to make sure that you know exactly what colors you have at your disposal when you want to go and draw your own imagination of what the future ZK Internet looks like. Currently ZK technology is maybe at 1% penetration of web3 and web3 is maybe at one to 2% penetration of the internet at large. We are so early. Anthony and Alex and the rest of the ZK Sync team thinks that the entire internet, the whole damn thing, will eventually reach 99% ZK penetration. In the fullness of time, the internet is going to look real different.
00:02:15.670 - 00:02:52.206, Speaker A: And what excites me about this is that we can see it coming from a mile away. It's not often that we get ahead of an opportunity this large this far in advance. This is why we are here in crypto. And as my genius co host often likes to say, when they adopt crypto protocols, they adopt crypto values. CK technology doesn't just scale block space, it scales crypto values to the internet, to everyone by default. Ryan and I are both advisors to ZK sync. You can probably hear it in my voice that ZK Sync gets me very excited and bullish on humanity, which is kind of what I really need after 2022, what 2022 did to crypto.
00:02:52.206 - 00:03:24.138, Speaker A: As advisors to ZK Sync, we help them tell their story. We help them tell this story, which is what we are doing here with Alex and Anthony of ZK Sync today, helping them tell the story that they are trying to bring to the table. I worked with them on the agenda for this conversation. I helped guide them through this conversation because I think the story is really important. The more cynical viewer will say that it's because I have exposure as an advisor, maybe, but I'll say it's the same relationship that I have with ETH. There are values that I believe in. There are assets that express these values and projects that represents these values well.
00:03:24.138 - 00:04:08.234, Speaker A: I think those assets have the best ROI potential and I want to share that thesis with the world. It's been correct so far. This is why this episode is being released under the full disclosure category because this episode is based around an announcement that Zksync is bringing to the table today the release of the ZK Stack. A modular technology stack that allows anyone to build their own ZK chain and have that ZK chain be interoperable with every other ZK stack chain. It's kind of like the Op stack, but this time with ZK. The cool thing about the ZK stack is that it's naturally composable with other ZK stack chains right out of the box. The ZK stack is a fully flexible and modular tech stack that allows you to choose exactly how you want to build your ZK chain, what data availability solution you want to use.
00:04:08.234 - 00:04:44.674, Speaker A: It's up to you all the choices that go into making a ZK chain. The ZK stack lets you choose and compose it together, except for one thing. You must use the same ZK circuit. This is the secret soft the actual ZK element of this. You must choose the same ZK circuit, which is what the ZK stack is in order to join the HyperChain network that the ZK stack system wants to produce. This is the magic that makes every ZK stack chain know about every other ZK stack chain and how they can all hyperlink together in perfect ZK fashion. I really enjoyed this episode.
00:04:44.674 - 00:05:21.022, Speaker A: I thought it was a ton of fun. I think you will learn a lot about this. We go through all the principles that ZK as a technology brings to the table and I hope Bankless Listener, it helps show you the ZK vision that the ZK Sync team has been working on for years. There is so much left to explore out there and we are just getting started. So let's get right into the conversation with Alex and Anthony from ZK Sync so we can get your imagination running about the inevitable future ZK Internet bankless nation. I would love to introduce you to Alex Glukowski, the co inventor of Zksync, and Anthony, the Senior VP of Tech who leads the engineering team over at Zksync. Anthony.
00:05:21.022 - 00:05:22.850, Speaker A: Alex. Welcome back to Bankless.
00:05:23.590 - 00:05:25.620, Speaker B: Hi, thanks for having us. Good to see you again.
00:05:26.070 - 00:06:04.814, Speaker A: So I'm really excited for this conversation. The ZK technology ZK as a meme is kind of having a moment in the crypto world, the meta has shifted towards focusing on ZK. I think this is a frontier of crypto that we've known has existed for a long time. And now teams like yourselves are starting to explore that frontier in a much more meaningful way. And I think you guys have a message for us which is more or less stated as the crypto world. The internet itself is not bullish enough on ZK. I think we all kind of get it like fast transaction speeds, lower gas fees, faster settlement times.
00:06:04.814 - 00:06:23.382, Speaker A: But just stating it like that, I don't think it does enough justice. And so I want to throw this question to Alex. Alex, what does the web3 world not understand perhaps or could use more illumination about the future world of ZK? Where are we now and where do you think that we are going?
00:06:23.516 - 00:07:26.102, Speaker C: The ZK is actually the missing link that will transform the web3 in the form in which we know it today into the actual next generation of the Internet. So if you think about how Internet was gradually evolving from initially just mimicking the previous media of communication that existed before internet and then transforming and becoming what we know it now. The powerful network with composability, with a lot of completely new use cases that were not imaginable before. The next obvious step is everything that touches value goes onto the Internet and transforming in a similar way. And for this to happen, the internet has to get certain properties or maybe the other way around. The web3 has to embark embody certain properties that will make it easy for the Internet to fully embrace it, to penetrate, to make it through and through interconnected. With web3, no separation.
00:07:26.102 - 00:07:38.014, Speaker C: It's just like one seamless continue. And the ZK is the technology that brings these properties and we don't have anything today that can substitute it. This is why we're so polished right now.
00:07:38.052 - 00:08:20.380, Speaker A: I would say the world of ZK is just not very penetrated into Ethereum. Like where are these ZK applications? We have some ZKE EVM main nets, right? And these are contracts on Ethereum that are applications and then there's some stuff there. But overall I would say the bulk of activity in web3 is mostly in the non ZK format. So call it like 1% penetration of ZK in the final form of ZK tech as it's adopted into our smart contracts, onto our layer twos. Where do we get, do we get to like 50%? Do we get to 88%? How far will ZK come to dominate what we call web3?
00:08:21.150 - 00:09:16.206, Speaker C: I think we'll see something like 99.99. How many nines you get, but it's going to be part of everything essentially. And I think we are where we are today is at this pivotal moment where we see this transition and this transition is at a lower point. But we just launched this first Zkavms very recently and they naturally need time to mature and the users need time to get to solve the initial hiccups and friction and also to get enough bottle testedness, enough maturity, enough kind of confidence from the users that the systems can hold a lot of value. And once we're past this point, we're going to see the exponential adoption of this technology which will replace basically every chain, every bridge, everything at the infrastructure layer of the web3.
00:09:16.308 - 00:09:26.094, Speaker A: What gives you the confidence that 99% of web3 will be ZK? 99.99% ZK. Why do you feel so confident in that statement?
00:09:26.142 - 00:10:16.994, Speaker C: I am a technologist. I'm just looking at the properties of the systems that you have. Just like when we started Matterlabs and Zksync project four years ago, we were looking at the existing alternatives to scaling and we realized they are not going to take us anywhere. Like, we had the idea of the lightning network for Bitcoin and for the ideas of plasma and ethereum and similar proposals and it was clear they are not elegant, they're not fitting, they're not solving the problems in a way the users would need to get solved. And then we looked at the ZK tech. It snarks it like succinct your knowledge proof tech and it was very clear that this is kind of this magic silver bullet that will get us there. It was very immature back then.
00:10:16.994 - 00:10:55.434, Speaker C: We did not have the protocols that are as performant and as flexible and as generic as we have today. But it was clear that this revolution is in the air and it's brewing and it's going to come to fruition more or less soon. It was hard to estimate whether it's going to take two years, five years, ten years, but it was clear that we're on the right track and it turned out that we were not optimistic enough. We managed to complete this journey to the fully functional Zkvm in much shorter time than the world's top leading cryptographers were thinking back then, including Vitalik Anthony.
00:10:55.482 - 00:11:21.000, Speaker A: I want to throw this one to you because you're on the engineering side of things. You understand the tech very deeply. Alex was like, ZK has these properties, right, that compelled him and the ZK Singh team to be like, yes, ZK is the answer. ZK is going to do what it's going to do, which is penetrate into the world of web3 at a 99%, which is a big statement. What about ZK makes that true? What are the properties of ZK that makes it such a compelling technology?
00:11:21.530 - 00:12:24.700, Speaker B: Yeah, it's a great question for me. ZK. One of the reasons why I think it's so compelling for what we're doing and actually will be more compelling for other use cases in the fullness of time, as Alex has spoken to, is that, well, for blockchains, in particular, public blockchains, it's so complementary with respect to the properties that they are good at relative to what they need. So for example, at least the way I think about it, when we think about why public blockchains excite many of us as a technology in the first place and why we think they have so much potential It's properties, like decentralization properties, like their security, the trustless transactions, this permissionless system and this global accessibility. To a first approximation, these services are available to anyone with an internet connection. The challenges that we've seen in this space are also well understood, right? So the way that we pay for lots of these nice properties is with the inability or the challenges around scale. Of course, this is one of the problems that Zksync is laser focused on and has been laser focused on since the start.
00:12:24.700 - 00:12:58.434, Speaker B: And this technology, this cryptographic protocol, these zero knowledge proofs, have this huge asymmetry between do a lot of computation and then be able to sort of express this proof that represents that computation that anybody can verify extremely cheaply relative to the amount of computational work that was done to kind of generate the proof. And they say symmetry means you can start to imagine these composable systems where a lot of computation could happen on one side and it can be trusted on the other side. Trivially, right, with no sort of trust assumptions introduced.
00:12:58.482 - 00:13:47.750, Speaker A: Before you move on, Alex, I want to pin down on that word asymmetry computational asymmetry, right? Easy to hard to compute, easy to verify, in I think, social words. Asymmetry for the listener being like that, power benefits you, the individual, right? It's asymmetry in a power balance terms. Like there are large scale institutions out there, there are the powers that be and asymmetry tilts power against large scale institutions in the favor of individuals. And so yes, we have the technical term for Asymmetry which is like the N equals NP problem or just what ZK technology fundamentally does. But really meaningfully asymmetry is just like power balances and specifically power balances towards the many, towards the users.
00:13:48.490 - 00:14:49.762, Speaker B: The piece I mean specifically here, just to clarify, is that computational asymmetry is maybe the right way to phrase it, where for example, what we're doing with Era today, a huge amount of activity can happen at the layer two. And the representation of that activity, the sort of proof of the correctness of this activity ends up being this very small footprint that we verify on layer one. You don't have to trust us that all of the activity happened on the layer two in the way that we said it did because this protocol gives you that property where anybody can verify that what we're saying is correct. So this is the Asymmetry that I mean, this really nice property where you can verify the computational integrity. So a huge amount of computation can be sort of zipped and expressed very succinctly with these cryptographic protocols. And then the other nice property, which I think is not a core focus for us as a team today, but it's a core fundamental property that will be, I think, important for the future, for us and other people. Leveraging ZK is privacy.
00:14:49.762 - 00:15:18.340, Speaker B: So I think and we imagine this future Internet of value, we will need privacy at the protocol layer. We will need privacy protocols to exist, because just as if you can go into a shop and buy something with your credit card or pay with cash, it doesn't give access to your full transaction history. This will obviously be another important problem for us to solve. And this is another important area where ZK can complement public blockchains of technology.
00:15:18.870 - 00:15:47.980, Speaker A: Anthony, there's two things that you pulled apart integrity and privacy. We get the computational integrity from ZK technology. That's what it does. And then I think what you said is privacy. The threshold for achieving privacy becomes a lot lower and easier to access once we have the ZK foundations. Right? And so, Alex, I want to throw it back to you. What do we get when we combine these things, integrity and privacy? And how is it different from what we know in the Web Three space today?
00:15:48.750 - 00:16:24.486, Speaker C: It depends on what we do with them. But I think there is a one third component which will really take us to implementing the full vision, which is a touch of magic. Any sufficiently advanced technology is indistinguishable from magic. And in the realm of software development, certain technologies, certain frameworks, when you as a developer use them. Like, I can remember using React or Vue JS. In the early days of these technologies, it felt like magic. You describe things really elegantly and they just work and they display what you want them to do.
00:16:24.486 - 00:17:05.870, Speaker C: And there's a lot a ton of work going on underneath. And you could say the same thing about Google Maps when they first appeared. You move your mouse, you scroll, and all of a sudden the map zooms in and out to any degree with zero knowledge and privacy. It's the same story. We had examples of perfectly private technologies like PGP that were supposed to be completely decentralized and independent and end to end encrypted. And they never took off even between cryptographers, because they lacked the magic of just making it seamless and easy to they just work out of the box. So they slipped into obscurity.
00:17:05.870 - 00:17:33.360, Speaker C: And then at some point, the WhatsApp and signal and telegram appeared with end to end encrypted, secret chats that worked without any effort from the end user side, and they took on. And now millions or billions of people are using them fully encrypted. At this global scale, I think this is something that is required for ZK to actually penetrate to get to this 99.9%.
00:17:35.650 - 00:18:07.970, Speaker A: I think what you're saying is that if we use the example of, like, tornado cache to achieve privacy, which, rest in peace, we can't really use it anymore. At least I can, because I'm a United States citizen, but it's still like a one off implementation of privacy. It's not privacy by default. Right? It's not privacy on the foundations. I think what you're saying, Alex, is that in order to have privacy by default, it needs to be embedded in the foundations that we live upon. Right. Otherwise going into a one off implementation of privacy, like Tornado Cash, it's not going to work just because it takes actions.
00:18:07.970 - 00:18:21.990, Speaker A: It's like a burden. And so in order to have private money and private actions, it needs to be embedded into the blockchain so that we don't have to think about the choice. Right. It's just like something that we have almost by default. Is that right?
00:18:22.160 - 00:18:52.838, Speaker C: I agree. And I would add to this that it really starts with the end user experience. Privacy changes the way you interact with blockchains. And so the wallet experience, the dynamics of transactions of transacting on chain changes really completely. And Tornado cash did actually a pretty good job in uplifting this UX experience and they were quite on the right track. But yes, in isolation from all the other protocols, it would not help you much. Of course, you have to integrate it with everything else.
00:18:52.838 - 00:19:11.986, Speaker C: You need privacy by default and you also need developer tooling that makes it really easy, really uncomplicated and very secure to implement private applications. So all of those components have to come together for really embracing the full power of CK.
00:19:12.118 - 00:19:43.030, Speaker A: Alex, you talked about the combination of integrity and privacy creates magic, which is fun, but also it's like, okay, that's great. It's really hard to imagine. Right. And I think one of the things that really just plagues the ZK landscape is that imagining what comes next is really, really hard. Right. We can talk about individual use cases, we can talk about computational integrity, we can talk about privacy by default. But for the layman or just like the generalist, it's kind of hard to actually imagine.
00:19:43.030 - 00:19:55.180, Speaker A: It's hard to imagine magic. So Alex, how do you actually articulate to just like the layman or just like the general populations, like a ZK enabled internet? What is that? What does that do?
00:19:55.790 - 00:20:36.258, Speaker C: I think the part which makes it hard to imagine is exactly the part which makes it magical. Magic is something that happens, that makes things possible that are seemingly impossible. Like you think of the first iPhone, you have all of the applications that doing a lot of things on your small device on a small screen. You don't have to know how it works under the hood. You don't have to understand all the complex technologies of screens and processors and radio technology and whatnot that makes it work. All you need to know is you press the button like you tap on the screen and you have a beautiful 4K video and you just enjoy it. That's magic.
00:20:36.258 - 00:21:12.222, Speaker C: So not all things have to be digged in that deep. But we all know it's of course, pure science. So if you want to understand it, it's open as an open book. It's pure math. You go step by step and you dive deeper and deeper. With time you will be able to fully understand each step of the protocol, each step of the computational tricks that are happening there to deliver the promise of integrity and privacy and basically all other things that are coming from Ziki.
00:21:12.286 - 00:21:18.760, Speaker A: Anthony, help us fill in this picture, this ZK magic picture. What does this picture look like to you?
00:21:19.290 - 00:22:05.922, Speaker B: I think maybe one analogy that I find quite helpful is you can imagine a world where the infrastructure is as mature or comparatively mature to we have in Web Two. For example, if I'm sending you an email, I don't really have to think about it. I don't have to know what platform you're working with, where the email is hosted. The protocol just sort of handles the sort of transportation of the information in a way that makes sense. That to me, I'm just sending you an email and then I could send Alex an email. And the thing that I want to do this task doesn't require me to think about the protocol doesn't require this barrier to using it in a very seamless way. This, I think, is where we need to get to with transactions of value.
00:22:05.922 - 00:23:33.402, Speaker B: For example, so what if I could send you value not knowing anything about where your wallet was hosted, which change you're interacting with, really start to build this much more seamless experience. When we think about how the Internet has been scaled, it's a question of horizontal scalability, right? No company is just like scaling their system by getting a bigger and bigger computer every time they get another order of magnitude of users. And as we think about not just how do we go from Ethereum's 15 transactions per second to hundreds or thousands, but how do we get to millions of transactions per second, how do we really get to hyperscale to a world in which the Internet of value is powered by these systems? We need to solve this scalability problem in a real way. And for me, this is where the magic comes in, when users don't need to think about the infrastructure, because most users don't need to think about the infrastructure. Developers don't need to sort of solve every problem to be able to achieve what they want to do for their application. Because the protocols are mature and the protocols provide a foundation and a toolkit for building things that users want, maybe just to take a step back. And when we think about what these ZK powered networks look like in the fullness of time, there are a bunch of core properties or tenants that make sense to sort of articulate as we're thinking through the design and thinking through then how they will behave.
00:23:33.402 - 00:23:50.246, Speaker B: So at the top we've got trustlessness. This is sort of where a lot of things start with us. From the point of public blockchains, ZK obviously gives us an ability to kind of extend the systems that already have this property in a way that doesn't actually introduce new trust assumptions, which is obviously hugely important.
00:23:50.348 - 00:24:11.146, Speaker A: So in public blockchains, in Ethereum Bitcoin users verify transactions by running their own node, which is easy from a network standpoint. I can run a node, I can download a node, maybe it'll take me a day and then I can start verifying transactions. It's easy ish. But with ZK added to chains, this gets easier, correct?
00:24:11.328 - 00:24:36.226, Speaker B: It gets easier. So instead of having to verify everything in the way that you do today, for example, in the way you describe with a full node, you get to verify the proof. So this succinct very quick to verify representation of all of that computational work gives you that confidence, just as if you'd reverified every single individual transaction yourself. But of course you don't have to, right?
00:24:36.408 - 00:24:39.590, Speaker A: How would that compare to the actual challenge of running a full node?
00:24:40.090 - 00:25:38.966, Speaker B: In terms of running the full node, I mean, essentially what you're doing is you're replaying the computation just as if you were playing it. I mean, you are replaying the computation. So you want to say, I need to get to a point where I can trust the fact that this sequence of events has happened, and I replay this sequence of events and just to make sure that every single thing proceeds as I've been told, or as I need to infer with ZK, this is not required. So you actually just have to verify the proof. This is an extremely quick computation, could be a rounding error, essentially in terms of computational work relative to all of the work that's being verified. So you get this huge compressibility factor in terms of doing this verification. So what you're able to do is have this interface between two systems, for example, where trust isn't required, but what you get is a very low latency way to communicate state.
00:25:38.966 - 00:25:58.414, Speaker B: So for example, system A and system B can talk to each other, can communicate that events have happened, can move information, but you can do it in a way that doesn't introduce a huge computational burden because system A doesn't want to trust system B or needs to have this trustless property for system B, for example, right?
00:25:58.532 - 00:27:03.298, Speaker A: The way that we achieve trustlessness with Nodes, right, is you download every single block and you run every single bit of computation yourself up to the point that you need to prove, which is with ethereum, like eight years of history and computation that you redo with ZK tech, with ZK rollups, you're saying that it's just a single proof? It's more like of a single instance rather than just an entire history of data. And I think the interesting part of your answer was like, it's not just humans, it's also networks trusting each other as well like other networks talking and being in a trusted or trustless environment rather than humans. And so I really just kind of want to drive the point home of just, like, rather than years of computation that we have to do, like, not years of time for actually doing the computation, but, like, a year's. Worth of history, of old transactions that you have to go serially one by one to get to the point of trustlessness, which is possible. We have nodes that can do this. This is what running a node is with ZK rollups. It's almost just like just a single proof, a single ZK proof in order to do all of that same work.
00:27:03.298 - 00:27:19.180, Speaker A: And so the benefits are just like a it's easier for the user but also more networks can talk to more networks and that's maybe some of the magic that we're talking about is like we know it's cool, we don't know what people are going to do with it but we know there's a big there there.
00:27:20.110 - 00:27:36.350, Speaker B: Yeah, I mean for me this piece is the part that I'm personally most excited from an engineering point of us really building out and implementing in the very near term. But this interface piece where you leverage ZK at the boundary, this is incredibly powerful.
00:27:36.690 - 00:27:41.040, Speaker A: ZK at the boundary. I like that line. Okay, so that was trustlessness. Where do we go next?
00:27:41.890 - 00:28:30.270, Speaker B: Security I think is the next property that we need to speak to, right. Ethereum today, securing the value that it does today happens because of its investment in security and because of the years of best practices and frankly work and sweat that has gone into thinking about how to build secure systems. This is just obviously as we think about extending this orders of magnitude beyond where it is today. Something that we have to continue to invest in and something that we have to think of as a core principle behind some future internet value. There's no world in which I imagine us succeeding in bringing trillions of dollars of value on chain if the system is insecure. These kind of things just have a fundamental tension.
00:28:31.410 - 00:28:32.960, Speaker A: How would you define security?
00:28:34.230 - 00:28:35.122, Speaker B: This is a great question.
00:28:35.176 - 00:28:36.946, Speaker A: Very simple terms in terms of how.
00:28:36.968 - 00:29:14.286, Speaker B: I think about security. Security at the protocol layer means maybe sort of principled isolation and principled control. When I think about this today with Ethereum for example, the whole not your keys, not your coins, this sort of principle is kind of enshrined into the protocol. If I have control of my keys, I have control of my assets. And this is a way that I think is a sort of fundable mintable prerequisite. There are obviously very many important things under the general umbrella of security. When we're thinking about it, this is not necessarily how we think about it.
00:29:14.286 - 00:29:45.270, Speaker B: We think about correctness, we think about sort of building in a system which is battle. Tested robust and just all of these properties that for any system managing lots of value. In a world of pseudonymity, there are risks that we think about at the system level. But for users, I think security is about control and about sort of being protected from the protocol and using cryptography to protect film.
00:29:45.690 - 00:29:58.060, Speaker A: Yeah. How does ZK actually fit in with security? Ethereum pretty damn secure. What does a ZK roll up? How does that change the nature of security? Or does it at all?
00:29:58.430 - 00:30:07.198, Speaker B: In a world where we are complete with the protocol or the protocol is extremely mature, what we're aspiring for is that it doesn't change anything.
00:30:07.284 - 00:30:07.630, Speaker C: Right.
00:30:07.700 - 00:30:59.278, Speaker B: The obvious point at the moment when these systems are being built is that these systems are complex. None of this is trivial and there is work. And we try to be very transparent about where we think our sort of security posture is. When we first opened this system, we very purposely labeled it as an alpha version of the system, because security is one of those things where you kind of don't know what you don't know forever, and you just have to do a lot of work to get to the point where you feel like some threshold has been satisfied. And yeah, I mean, for us, I would say that today it will be true that no complex external system that is months or weeks or even year old will likely be as secure as Ethereum. But we will get there. I mean, time passes, work is done and the systems go through.
00:30:59.278 - 00:31:19.000, Speaker B: There's a lot of work you can do to get to the point where the system is robust. This is well understood and it's work that we're doing. It's work that the community will do, obviously, as we open source the code for this reason. But yeah, there are security assumptions introduced with complexity, but there's also ways to mitigate this and they're well understood, but obviously requires time.
00:31:19.370 - 00:31:25.910, Speaker A: Okay. trustlessness security. What other are the unique principles or properties of ZK chains?
00:31:26.410 - 00:31:28.598, Speaker B: Another good one will be reliability.
00:31:28.694 - 00:31:28.954, Speaker C: Right.
00:31:28.992 - 00:31:56.430, Speaker B: Liveness is obviously something that's incredibly important. The network needs to be ethereum is reliable. Reliable under extreme circumstances. It's designed to be reliable. This is one of the other properties I would argue is a sort of core piece of the value in public blockchains. This is something that we obviously can't compromise. So the system has to be reliable, has to be resilient and has to be available for users.
00:31:56.430 - 00:31:59.886, Speaker B: So again, this is another core tenant. When we think about designing these futures.
00:31:59.918 - 00:32:36.046, Speaker A: Ek chains and we recently had the whole Ethereum finality non event. I like to call it a non event because, I mean, something happened, but the point is that nothing happened. And so this was when blocks failed to finalize. Blocks were still propagating on Ethereum, yet they failed to finalize for an hour or so and then they finalized this is what we're talking about, right? This is reliability in the Ethereum layer one. How does this work on ZK sync? Or you use earlier, you use the term in the fullness of time, which I'm going to use because I like that it implies, like, at the logical conclusion of ZK Sync and ZK chains. What does reliability look like at this level?
00:32:36.228 - 00:33:12.390, Speaker B: Reliability for us, again, in the fullness of time. I don't think it looks very different to the way that we think about reliability at the level of Ethereum. And this is a nice example. As you point to today, I would say we have a slightly different property. Like, the way that we think about reliability today honestly looks a little bit more like I've thought about reliability when building systems in web two world, where you know that the system today is not decentralized. So you don't have all of the resiliency that decentralization gives you. This is 100% coming and we are like building this piece very actively.
00:33:12.390 - 00:33:34.690, Speaker B: But today when we think about reliability, we think about in the same way as, say, Netflix thinks about reliability. They think about disaster, mitigation, failovers, no single point of failure. Make sure you're building resilient systems. This is how we're thinking about building the system today and how we're thinking about the network since for a long time now, even before the launch of Alpha.
00:33:36.150 - 00:33:54.310, Speaker A: What are the technological components that go into this? The fragility that is dominating the layer two landscape is like single sequencers. There's a single sequencer. Is this part of the conversation? And what are the components that need to be added to these change in order to achieve reliability?
00:33:54.890 - 00:34:23.354, Speaker B: I would say the real component that we need is decentralization. Right? So this is the thing that really is going to help solve the reliability problem to a degree. Like, this is the most important part of the work that we're doing from the engineering perspective. It's decentralization in terms of what we do today. There are different components of these complex systems. Each of them actually you solve or you think about reliability in a different way. Some parts of the system you can scale horizontally.
00:34:23.354 - 00:34:57.020, Speaker B: So for example, when we're thinking about the provers, they can be scaled horizontally very easily if one failed. Really, actually, it's not that big of a deal. In the same way as if you see a component fail in a Web two world because they're restartable. They're sort of effectively like dumb stateless workers. You just spin up another one and it does the work that moved from failed prover to the new prover. You obviously don't want things like that to happen, but the systems are built to be resilient such that things happen when you're running software. This is just part of the way that you design software in general.
00:34:57.020 - 00:35:21.410, Speaker B: But in terms of how we build reliable systems, it has to be decentralization. This is the thing you can't rely on any one entity you can't rely on any one entity's choice of their infrastructure. You have to get to a world where the system is permissionless, the system is decentralized, and the properties of the public blockchain. We're coming back to it. This is where era needs to be. This is where ZK sync as a protocol is heading.
00:35:22.470 - 00:35:28.120, Speaker A: Okay, so that's reliability, again, started with trustlessness, security, reliability. Where do we go from here?
00:35:28.970 - 00:36:14.722, Speaker B: Next on the list probably censorship resistance. When we are building these systems, we have to be building for everybody. And we are thinking about, again, this is another core property of Ethereum, and it's one of the properties of Ethereum that we say that when we're projecting these systems into the future, it has to be maintained, it has to be defended. So again, when we're thinking about a future ZK powered Internet of value, how do you build a world or how do you build the protocol where censorship resistance is just embedded into the protocol and users have the ability to interact with this system in a way that I also think consistent with permissionlessness and trustlessness and so on?
00:36:14.856 - 00:36:23.682, Speaker A: Right. This is downstream of properties that we've already discussed. Right. Like with high reliability and high trustlessness, you achieve most censorship resistance.
00:36:23.826 - 00:36:39.820, Speaker B: Yes, to a degree. And I think it's also important that you design the protocol in a way where entities operating different participants in the system don't have the ability to censor other users without yeah, I think the protocol has to be designed with this peace in mind.
00:36:40.430 - 00:37:03.460, Speaker A: I think listeners are familiar with just censorship resistance at the layer one. Right. Like you broadcast your transactions, someone's going to put it into the blockchain. And if no one's hearing your transactions, well, you can kind of just do it yourself in certain circumstances. How does the ZK component change this conversation? Or does it not change it at all? Is this something that we are just copying and pasting from the layer one?
00:37:04.790 - 00:37:45.630, Speaker B: We have to think about it in a different, like, copy and pasting. The idea is, I think, the way that I would think about it, but the implementation of the idea might look different. So, for example, I would argue that one important property is the ability for anyone to participate in the network at any point if they wanted to. Right. So for example, in a fully decentralized network, you should be able to participate as a validator, participate as approver. Censorship resistance needs to be baked into the protocol, and there are ways that you can do that that don't require you to say, oh, to make sure I'm not being censored, I have to run a validator. So we have to think about it, I would say, at the protocol layer.
00:37:45.630 - 00:38:02.200, Speaker B: So when we're thinking about the system in the fullness of time, it's like the implementation of the idea rather is maybe going to look a little bit different because of the mechanics of the system. Probably look a little bit different, but we're persisting the spirit of the idea.
00:38:03.450 - 00:38:07.480, Speaker A: Okay, so that's interested resistance. We got a few more. What comes next?
00:38:08.010 - 00:38:46.582, Speaker B: We touched on it a little bit earlier, but just to bring it back up as another core property. When we think about this system at scale is privacy. I want to be able to participate in this future internet value knowing that I have the opportunity to protect my identity under certain circumstances or I have the opportunity to not necessarily share all of my transaction history. And I think sensitive information being protected as part of a system at scale is just something that we'll have to figure out. And it's another core property of a system that's powering millions of daily users activity on chain, right?
00:38:46.636 - 00:39:11.498, Speaker A: Yes. And anyone who sent anyone else money on the layer one understands that this is something that we kind of all need. Okay, hyperscalability is the one that excites me the most. This is the one that we're going to talk about now. This is also kind of the cool thing. I mean, all trustlessness is cool censorship and privacy is cool, but hyperscalability to me stands out. So Anthony, what is hyperscalability and what.
00:39:11.504 - 00:39:18.430, Speaker B: Does it I think I think for Zksync this is sort of the focus and maybe like the crux of everything.
00:39:18.500 - 00:39:18.782, Speaker C: Right?
00:39:18.836 - 00:39:49.142, Speaker B: So again, what is this? When we're thinking about Ethereum, what we would like to do is make this system basically orders of magnitude cheaper and faster in terms of being able to process transactions at vast scale, worldwide scale. hyperscalability is this, right? At its sort of core. How do we get to a point where this system that we understand works effectively for everybody in the world?
00:39:49.196 - 00:39:49.378, Speaker C: Right.
00:39:49.404 - 00:40:31.222, Speaker B: You want to get to the point where financial activity is being able to be moved on chain and you can start to build again and actually share these other properties that we've been talking about. But you can do it in a way where the system that provides all of these nice properties is implemented in such a way that it can scale to an enormous amount of activity relative to today. We're obviously talking a lot about scale at the moment. And when we think about scale today, we're thinking about layer twos. This is definitely the thing that we're thinking about a lot. But solving this problem and getting to the world that we've been describing for the last short period of time, we don't get there with layer two.
00:40:31.276 - 00:40:31.494, Speaker C: Right.
00:40:31.532 - 00:40:58.670, Speaker B: We have to talk about this is scale. Hyperscale is extending this idea and actually being able to build this system where you have almost like lots of these layer twos could be configured in different ways, can be deployed in different ways, but they can interoperate and they can communicate in the way that we've been talking about leveraging ZK such that you actually have sort of a compute platform that can actually power an enormous amount of activity for people across the entire world.
00:40:58.820 - 00:42:21.178, Speaker C: I would like to add that we have kind of a strict definition of what hyperscalability is. And if you think of the Internet, it's a system or a network of systems that does not have any inherent bounds, any inherent limits on how big and can grow. It started out as a small university's network of just a few nodes and then it grew into thousands and millions and billions of servers worldwide running all in parallel, doing a lot of work and capable of doing a lot more work if necessary. And this is what it really means the lack of limit like removing the cap. It's not possible today with the existing technologies other than ZK because no matter how you structure, how powerful service you use, how willing you are to give up decentralization, you cannot process all of the Internet transactions on a single server or even on a single data center. And similarly, you cannot process all of the value transactions on a single monolithic blockchain system that will necessarily process them sequentially on one processor. Or even if you do optimistic parallelization, you're still not getting there.
00:42:21.178 - 00:42:54.670, Speaker C: You're still much closer to one server, one data center situation than to the hyperscale of the Internet. So hyperscale means really going limitless with full interconnectivity. With full interoperability. So on the Internet, any website is available from any other website in exactly one click. You can always put a hyperlink which will take you in one click there you don't have to go through long path. First we have to go to this segment of the Internet, then to this segment and we open some gate and we go through. That's not how it works.
00:42:54.670 - 00:43:13.754, Speaker C: It's it's basically like a universe connected with wormholes where you get from any point of the universe to any other. This is hyperscalability and this is something we're extremely excited about. And this is part of what we're diving deep in our post today.
00:43:13.872 - 00:44:09.142, Speaker A: Yeah, I really like the idea of what is hyperscalability? Hyperscality is scaling a network with zero upper bound. Maybe Alex, there is an upper bound and that upper bound is the Internet. As in the idea of ZK chains can only grow up to the edges of the universe and the universe is the Internet. Right? And so the point is, as the Internet scales, anything that is hyperscalable with again, ZK tech will reach will follow that corner of the Internet as the Internet itself scales. And so the point is, with any new ZK chain can fill the and this is why I want to take the time and really drive this point home is like the Internet is a container and we want to fill that container with ZK tech. Right. Because of all of the properties and things that ZK tech gives us, the sovereignty, the user power, the user autonomy.
00:44:09.142 - 00:44:25.018, Speaker A: And so the idea of hyperscalability is that we can actually penetrate ZK tech into the far reaches of the internet. Okay, so we're almost done with our color palette of painting this ZK picture. We got a few more. Anthony, you want to take us through to the home stretch here?
00:44:25.124 - 00:45:12.686, Speaker B: Sure. So I would say the last two properties that we've been thinking about this and we think are critical principles for the system that we imagine powering the future internet of value. One of them is accessibility. And this is one area where there's many ways to define it, but we would include things like affordability, easy to use and they need to be yeah, just applications need to be available in a way where they're accessible to everybody and related to permissionlessness. All of these pieces are somewhat entangled, but for us this is one area where particularly affordability has been an issue. Obviously at layer one, right, when we think about the bear market, we think about gas fees. This is one area where even to do relatively simple things on chain, people can be priced out of it.
00:45:12.686 - 00:45:32.200, Speaker B: And how do we get to a world where this isn't true? And this is again leveraging ZK proofs, being able to benefit from this sort of huge compressibility of computation, you start to get to understand a world where even with layer two, things could be dramatically cheaper than layer one. And obviously this is something we'll continue to build.
00:45:33.130 - 00:46:12.082, Speaker A: And then finally, I don't give too much credence to Anatoli's Takes from Solana, but there's something that he said that has stuck with me, which is that gas fees are a form of censorship. I'll throw a flag at that statement in a literal sense, but also at the same time meaningfully. It's true. As in if things are too expensive to access for 99% of the world, then it might as well be censorship. And I think this is what we're talking about with accessibility is like we need to have these very high powered financial applications, not only just tools for the 1%, it needs to be scaled out to 99.99% of wealth. Is this another way to say this?
00:46:12.216 - 00:46:58.482, Speaker B: For sure. And I think also when we think about the use cases coming on chain, you need to get to the point where the price of using the system isn't a barrier to even bringing that use case on chain or to imagining it on chain. So yes, for sure, the price is a barrier even for things that happen today. But as we expand and you want to bring micro payments on chain, you want to bring games on chain. Users don't pay per click when they're interacting with Facebook, for example. The amortization of running Facebook across all their users means they don't need to. How do we build systems which the cost of using the system trends towards being so low that it's a sort these fees are just not a barrier for anybody using the system for any use case that they can imagine using it for.
00:46:58.482 - 00:47:01.620, Speaker B: This is, I think, you know, really where we want to get to.
00:47:02.150 - 00:47:08.566, Speaker A: Beautiful. All right. And this coming down to the last one, which is also my favorite, sovereignty. Anthony, what does sovereignty mean?
00:47:08.668 - 00:47:32.202, Speaker B: Yeah, sovereignty is another one that's very important, which is, I think, nicely summed up as sort of right to know. Any group of users using the system need to have that right to exit, have that right to fork away from the network. You should be in a position where you're not beholden to the changes in the network in a way that don't make sense to you.
00:47:32.256 - 00:47:32.426, Speaker C: Right.
00:47:32.448 - 00:47:46.514, Speaker B: So, for example, we've seen examples of this in the history of public blockchains where people have disagreed with the direction of something and decided to fall. This is something that we think has been a core property of the systems in the past and should be a core property of the systems in the future.
00:47:46.632 - 00:48:40.190, Speaker C: I want to add a historical parallel to this. Throughout the history of the world, people were exploring new frontiers to a significant degree of motivation because they were not happy with the rules and customs or maybe abuse of power in the countries where they were living. So they would venture out to the new world, to Siberia, to different parts of unknown, uncivilized places where you could establish new ideas, new games, basically from scratch. And then everyone who wants to play in the game according to these rules can join. And today we run out of new places on Earth. Like, maybe we can try Mars. But really this digital networks is something where we can, again, experiment, we can learn from these historical examples.
00:48:40.190 - 00:49:27.490, Speaker C: And the right to exit is what checks, what keeps the system kind of like the state, the economical, political, societal system in check if something goes wrong. You could always have a situation where a majority turns on a minority and tries to oppress it. The minority should have the right to exit. And this kind of serves as a balance for preventing the situation in the first place. So it's relatively embedded in the idea of layer ones because really they are all forkable by default. It's relatively hard to implement for layer twos. This is why we put a special emphasis on this property.
00:49:27.490 - 00:50:17.518, Speaker C: In fact, we see the opposite tendons. We see some layer tools trying to capture their market position and building mechanisms that prevent the users from exiting. Introducing, prohibitive licensing, introducing making it very hard to exit the system. Like the fact maybe that you have to wait seven days to go out is serving this factor of hard to leave. And I don't think it's going to play well. I think the users will prefer free places and you have to make a deliberate effort to implement this at large scale. One of the key problems at Plasma, why Plasma did not work was that one of the security mechanisms of Plasma was the mass exit.
00:50:17.518 - 00:50:50.650, Speaker C: And this is now known as the mass exit problem. Like if everyone needs to exit the system in order to be secure within this specific period of time, it might be very hard to impossible to do this. So you need to plan the systems in a way that make it easy for arbitrary many people to exit. And also cheap enough, if it's prohibitively expensive, then we gain we get this standard by unaffordable fees situation. We are putting a lot of effort into this for this philosophical reasons.
00:50:52.510 - 00:51:33.750, Speaker A: Right? And this just goes back to user. I really I remember Amin Solomani talked about this very deeply about Moloch Dao where as soon as individuals have the right to leave the Dao, no one could bully anyone else because if they bullied them too hard, the users would just leave. Right? And so what we're trying to do here with this ZK tech, we're trying to maximize trustlessness, right? We're trying to maximize security. We're trying to maximize reliability, privacy and censorship resistance, which is all great. And if we do, then we have this fantastic utopic land. But then the idea is once that land becomes populated because why wouldn't it? It's so great. But if there was no freedom to exit, those things might erode.
00:51:33.750 - 00:52:26.902, Speaker A: And then all of a sudden it goes from like a utopic land to an extractive land because no one can exit. So what you're saying Alex, is like it's a check on the fact that all of these things will be preserved because if they won't, then the users just leave and they're out of there. And so all of these properties that we just talked about trustlessness, security, reliability, censorship, resistance, privacy, hyperscalability, accessibility and sovereignty. One of the reasons why I really wanted to go through each one of these individually is because they're each like a color in this grand color palette of this very hard to define vision of ZK tech that penetrates the internet. Like it's ZK rollups, it's ZK chains, it's ZK applications, it's accessibility of ZK. And painting this picture is really hard, especially when you are looking into the future. No one knew in the Renaissance what happens when you combine the printing press and double entry bookkeeping.
00:52:26.902 - 00:53:25.454, Speaker A: All of a sudden you get a Cambrian explosion of human culture that is meaningfully different from any of those two technologies, right? Then you have the industrial revolution. Like we get the steam engine, we get the combustion engine and then humans start doing weird and crazy things that we never really saw happen before. And so we have all of these properties we're trying to paint in this picture of what do we get when we embed the values of ZK technology all the way throughout and permeates all the way throughout the internet. We're trying to paint this picture here and it's hard to articulate because at some point it just goes up to like we need the developers to start playing with this and start building stuff and starting to do crazy and crazy things. But that's where I want to turn this conversation to next. We have this idea, we have all these principles, we have this ability to scale this tech, but right now we have the ZK Sync. Era Mainet there are other ZKE EVMs on chain, but we've just talked about again, Anthony, in the fullness of time, ZK Sync in the fullness of time.
00:53:25.454 - 00:53:31.760, Speaker A: How do we get there? Where do we go from A to B? How do we get this into production? What are the next steps here?
00:53:32.530 - 00:54:26.222, Speaker B: Yeah, I mean, very happy to speak to Era, very happy to speak to where we go with Era and where we go with the ZK Stack more generally. And this is kind of what we're really excited to be talking about and one of the sort of maybe like even a point of inflection where we've been building for the last, well, several years at this point, this sort of towards this idea. But we also want to for this to be successful, this obviously needs to go beyond us, right? We need to get to the point where we have a community behind this. We are one contributor of many and these ideas are things that can be discussed, can be debated, can be improved and can be refined with Era. I think of it, and I think internally we think of it as the first HyperChain. These principles that we've been talking about are not new to us. This is something that has been guiding, I think, the sort of philosophy behind the work for years.
00:54:26.222 - 00:55:28.374, Speaker B: And even back to when I had my first conversation with Alex probably about two years ago. It was very clear that these things were in place at the time. We are articulating this in a way that I think is for me probably the clearest, I think, today when we're really trying to make sure that this is something that we're opening up with the community because we want the technology to also be built with the community. Era as a technology, I think, is the first instance here. And we do have ideas of A to B and it comes with opening up the ZK stack, encouraging others to work with it, to deploy with it, to improve it, to refine it. We have a lot of work to do, we have a lot of work that I can speak to if you're interested about what we're actually doing at the moment. But the important thing I think at the moment is the ZK Stack is available, open source and essentially ready for us to start seeing other instances of this being deployed, start to really build the pieces that are required for what we're talking about.
00:55:28.374 - 00:55:30.360, Speaker B: And this vision that we're working towards.
00:55:31.370 - 00:55:37.218, Speaker A: The ZK Stack drill into that a little bit more. That is the announcement. What is the ZK stack?
00:55:37.394 - 00:56:17.698, Speaker C: So, as Anthony just said, there's this old truism if you want to go fast, go alone. If you want to go far, go together. For Era, we had to focus on speed and deliver it fast because we saw the demand for Zkvm was extremely high and we just needed to get the first version done with the laser focused effort of our core team. Now it's the time to open it and hand it over to the community. This is why we started with the Zka credit publication. We note that we opened it on GitHub for the community to discuss. We're not just dropping it as like here's the final truth.
00:56:17.698 - 00:57:09.634, Speaker C: We want the discussion, we want the contributions from the community, we want it to be broadly supported. We want to incorporate all the feedback into something that can become the codification of the ZK culture. That will then serve as a guiding principle, as this North Star for the broad decentralized community of contributors. It goes back to the ideas of sovereignty and reliability. We can implement all of these principles technologically and basically all of the eight principles we just discussed, they are implementable purely technologically. They basically don't require a lot of human or in game theoretical components. You can do things that we can build a system that essentially like villains like Lord Voldemort can run and they cannot do any harm.
00:57:09.634 - 00:58:01.602, Speaker C: But such a system will not be durable because it needs to evolve with time and the evolution happens better by humans. So if the Lord Voldemort controls the code development process and the core team, then over time it obviously will not play out. This is why the code base must be full open source and under fully permissive open license owned by the community. And the contribution base must be very broad so that a lot of people can actually take over the code. And if things go wrong, governance of a network could always get compromised with all things, with all networks in human world. We observe the Pareto Principles application that the power tends to get concentrated over time. We see it with the internet.
00:58:01.602 - 00:58:29.630, Speaker C: The internet is now largely controlled. Most of the traffic is coming through for corporations and they can impose arbitrary rules as they want. So what's important is that if the community wants to exit, there will be viable alternatives. We need this broad community movement to participate. This is why the principles are published now and being discussed. And this is why we're announcing the ZK Stack.
00:58:31.810 - 00:58:50.642, Speaker A: Okay, just to make sure I totally understand, the ZK Stack is software that is being published. Is it ZK Sync? But like vanilla as in without the state, it's just the code. So if somebody wanted to deploy their own ZK Sync. They would go to the ZK stack. And that's what that is, is that what is being released?
00:58:50.706 - 00:59:39.590, Speaker C: The ZK stack is based on the code of ZK Sync era and it's still being developed further. But the idea is that it's a modular framework for building your own hyperchains. So you can build your own chain, you can deploy it, you can deploy it independently on ethereum, but you're much better off deploying it as a part of the HyperChain network where Zksync era exists and a lot of other hyperchains which are accessible to you. So you're part of this huge single liquidity, single trustless messaging ecosystem which can talk from any chain, any user on any chain, can talk to any other on any other chain, fast, seamless and without any trust assumptions.
00:59:41.370 - 01:00:22.962, Speaker A: Okay, so this is ZK stack. This is kind of reminiscent of like Op Stack, where Op Stack has their scaffolding for optimistic chains. But this is with ZK chains with ZK tech. And again, after going through our conversation, especially the part about verification chain A, verifies chain B, one of the big challenges that the Op Stack has is what does it actually mean to actually be integrated is a harder question because it doesn't have ZK. And so my intuition is that using the ZK stack, if somebody builds a ZK chain using the ZK stack, these chains are inherently similar, just much more interoperable with each other out of the box. Is that correct?
01:00:23.096 - 01:00:45.370, Speaker C: Correct. It's all about interoperability. What makes a HyperChain HyperChain is the ability to have hyperbridges to other chains. And hyperbridges are bearing this resemblance to the hyperlinks on the Internet. One click from any page to any other page. That is the whole essence. The interoperability, the single liquidity space is the essence of HyperChain.
01:00:47.230 - 01:01:38.554, Speaker A: One of the questions I've been asking at Bankless a lot is the raw north star of crypto system scaling to the level of the internet, right? Like as we said, unbounded. Well, clearly that just means we need a Cambrian explosion of chains, right? If you accept the modular blockchain hypothesis, which I totally do, I've been one of the leading proponents of it. Centralized monolithic chains don't scale. We need chains on chains on chains. We don't just need layer twos, we need layers on layers on layers, which implies some sort of like fractal growth of chains. And so I've always been asking like, how do we get to 10,000 plus chains, right? How do we get to the scale of the internet? Because that's the only way that we're going to do this is with like 10,000 chains. And so this is ZK Sync's answer to that question.
01:01:38.554 - 01:01:50.270, Speaker A: It's like, how do we get to 10,000 chains? We produce a modular framework of ZK chains that can all interoperate with each other. This is my summation of this news. Am I on track here?
01:01:50.340 - 01:02:10.920, Speaker C: This is our contribution to this vision we are offering. Like, indeed there is no ZK stack today that is fully open source and that people can use to build their own systems. And we're offering that and we are giving it over to community to work on this vision together with us and own it.
01:02:13.690 - 01:02:36.250, Speaker A: So, somebody that deploys a ZK stack chain, how interoperable is it with other ZK stack chains? Like out of the box? What is that conversation like? Does it start off mostly interoperable, just a little bit interoperable? How do I understand these things? And does the interoperability grow over time? Can you just unpack the interoperability conversation?
01:02:36.330 - 01:03:22.270, Speaker C: Sure. You can think of it in a similar way as the vision of shards on Ethereum, on Ethereum 2.0, the original vision that you have multiple shards and you can talk to between, they are separate, they are distinct, and you can send a message from any shard to any other and you can attach value to it. You have a guarantee that the message will arrive there. If there is a smart contract, which you're talking to, you have a guarantee that this smart contract will eventually be processed and you will get an asynchronous sensor. And so this is really the reincarnation of the sharding vision for Ethereum with the hyperchains just powered by the magic of ZK.
01:03:24.050 - 01:03:41.438, Speaker A: Right? What needs to be true in a ZK stack chain for that to be able to happen? Right? So if I deployed my own ZK stack chain, is that true right out of the box or what do I need to do to make that true? Is this like a conversation about the shared sequencers?
01:03:41.614 - 01:04:12.654, Speaker C: No, you will not need shared sequencers. Shared sequencers are a whole separate topic, which can be helpful for some use cases, might not be helpful for other use cases. It has nothing to do with hyperreaches. What you need to do is you need to embrace a certain standard of communication. Like there must be some certain basic ZK circuits shared by all of these chains. They can deviate, you can customize the chains. The ZK stack is fully modular and allows you to customize things.
01:04:12.654 - 01:05:03.422, Speaker C: You can introduce your own token for staking or for paying fees, or you can introduce your own data availability policy with choosing between the ZK roll up ZK Porter Evolution, or maybe a pure validium mode for some privacy applications. You can customize your sequencer, you can do a lot of these things. But there must be some common component which is this core ZK circuit which the chains can trust. Because if you're running the exactly same ZK circuit as the other chain, then you can blindly trust the messages that come from this chain because you have the consensus on Ethereum. So you know the state of this chain at the latest point precisely because you can read it from the Ethereum state. And you trust the validity of this message. You trust that all the execution happened exactly the same way you expected it.
01:05:03.422 - 01:05:24.062, Speaker C: And this is very similar to how Internet works. In the Internet, we have a lot of different applications, different layers. But there is this one basic layer of the IP or the Internet Protocol, which describes the packages, and they have to be compatible. If you don't understand the IP format of the package, you will not be able to connect to the Internet.
01:05:24.126 - 01:05:24.450, Speaker A: Right.
01:05:24.520 - 01:05:42.140, Speaker C: But on top of this IP protocol, everything else, all the other layers, can deviate wildly. This is similar. Here we are trying to define this minimal viable standard that glues the hyperchains together.
01:05:44.190 - 01:06:25.686, Speaker A: Okay, I love that definition. So the ZK stack, it is a modular ZK chain stack, where anything that is flexible is flexible. Anything that's a choice is a choice for the deployer. If you want to use your availability layer of Celestia, you can eigen layer, you can. The ethereum layer one, you can. So the thing that is the ZK stack, again, Alex, correct me if I'm wrong, is that the only choice that is made for using the ZK stack is using the same circuit. And what does that do? That does this one very important thing, which is hooks in all the other ZK sync chains, which again, have each individually made their own choices about what that chain is and it looks like and what it hooks into.
01:06:25.686 - 01:06:37.914, Speaker A: But the only choice that's made is that you are using the same ZK circuit. And that is how we have many, many different chains all hyperlinking to each other and becoming the same ZK ecosystem. That's my interpretation. Is that correct?
01:06:38.032 - 01:07:32.090, Speaker C: This is mostly correct. There's one more component that all of the hyperchains doesn't matter if they are L two S or L three S, they have to exist in the same ecosystem on layer one. So this is purely technical, and you can look into our technical documentation how exactly this is implemented. But they have to share the same liquidity base, the same base bridge smart contract on ethereum because otherwise you cannot really use hyperchains to transact. So I can try to explain what makes hyperchains different from all the chains that exist today, which is from the bridges. Like today's bridges between different chains, between roll ups or between layer ones are really not following the metaphor of the bridge accurately. Like a bridge is something that connects two islands.
01:07:32.090 - 01:08:23.660, Speaker C: You have a car on one island and you want to move it to the other island. If you had a bridge, you would just ride over the bridge. So the car would not be on the first island anymore, it would appear on the second island. This is not how the bridges work today. Most bridges some do, some do, like some USDC bridge could work this way because you rely on the car is magically minted and burned by a central authority. But most other bridges work in a way where you park the car on the parking lot on the first island, you hand over your keys to someone who will manage it for you, and then you walk on the other island and you are given another car, which represents your first car. So you can ride around the second island, but someone is still holding your keys of the original car.
01:08:23.660 - 01:09:07.978, Speaker C: If they become rogue, they could just get in and drive away and then you will not be able to get back. So all of a sudden your other car becomes worthless because you can't do much. It's not really even a car. It's just a voucher for a car. So this is how this old Bridging paradigm works and why it doesn't really work. Vitalik had a really interesting post about this with diving deep into technical nuances of why this inter blockchain Bridging is fundamentally broken. The hyperchains are connected with hyperbridges that enable this, precisely because all of the liquidity is living in a single big smart contract on layer one.
01:09:08.064 - 01:09:28.610, Speaker A: So the statement is that a yes, have the ZK circuit, then all the chains connect to each other and they must share the same base, that same layer one. That layer one is ethereum. Or are we talking about okay, so long as any ZK stack chain hooks into the ethereum layer one, then everything is interoperable. Correct.
01:09:28.680 - 01:09:45.826, Speaker C: This is correct. It has to be on the same layer one. You cannot build it between different layer ones. So you could build hyperchains on a different chain on a different layer one, like maybe on Binance or Solana or whatever, but then they would not be interconnectable with ethereum hyperchains.
01:09:45.938 - 01:10:19.118, Speaker A: Yes. Okay, cool. Well, see, this goes into a lot of Bankless's early philosophy about like, hey, why does everything aggregate to one layer one? Why are we so focused on Ethereum? Well, because the layer twos are focused on Ethereum, and therefore the layer threes will be focused on Ethereum and so on and so forth. Alex, Anthony, I've learned quite a lot. I hope the listeners have learned quite a lot. What are the next steps here? So, A, congratulations for getting the ZK stack out in the open. The ZK technology embodies the values.
01:10:19.118 - 01:10:59.294, Speaker A: And I'll quote my co host here, when they adopt crypto protocols, they adopt crypto values. And to me this is exciting because we went through all of those principles that we talked about, right? trustlessness, security, reliability, censorship, resistance, privacy, accessibility. We get to scale these things to the fringes of the Internet, to the margins of the Internet, using this technology that is mentally scalable. So that's just really exciting because this goes back to just the roots of what are we doing here in Crypto 2022? Kind of made us question that. And so I'm very optimistic about restoring principles. And Alex, I really like what you said. No Game Theory tech only like hard coded in tech.
01:10:59.294 - 01:11:19.366, Speaker A: We don't have to have this Game theory game of chicken to make sure that this thing is working. And so I'm just really excited about this. What are the next steps? So today ZK stack is released. People can go check it out, I'm assuming. What do you guys want people to do? What should developers do? What's the correct call to action here? What do you want people to go do?
01:11:19.468 - 01:11:48.430, Speaker C: We encourage contributions. We encourage people who want to build hyperchains to get in touch with us and speak to us and take a look at the code and start building, start prototyping on era and then building your own hyperchains. And developers who want to contribute to the ZK stack are extremely welcome to work either with matterlabs or just do contributions separately. There are a plethora of possibilities open. Talk to us.
01:11:48.500 - 01:12:09.174, Speaker A: Alex. Anthony, thank you so much. I'm really excited for this. The ZK frontier definitely appears to be upon us. So thank you for helping usher into the world of crypto because we definitely could use some more self sovereignty, some more censorship, resistance, some more privacy in this industry. So I appreciate you guys and all the hard work that you guys have been doing over the past few years.
01:12:09.372 - 01:12:10.630, Speaker C: Thank you, David.
01:12:12.170 - 01:12:13.160, Speaker B: Thank you.
01:12:14.250 - 01:12:25.414, Speaker A: Bankless nation. You know the deal. Crypto is risky, DeFi is risky. ZK technology, there's probably reasons why it's risky too. You can lose what you put in. This is the frontier, but we are headed west. It's not for everyone.
01:12:25.414 - 01:12:42.250, Speaker A: We are glad you are with us on the bankless journey. Thanks a lot, Sam.
