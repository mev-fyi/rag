00:00:12.810 - 00:00:55.198, Speaker A: We are at the Axelar Interoperability Summit, where now I'm going to talk to Stephen Goldfeder of Arbitrum specifically about Stylus, this new thing that's creating what they are calling EVM Plus. So if you want to code onto linity on Arbitrum, you still can. But if you also want to code on Arbitrum, you can code with any other language that exists, which I didn't know was possible, but apparently it is now with Arbitrum stylus. But I also talked to him about the layer two wars which are getting spicier and spicier these days, especially as optimism's got their super chain, ZKsync has their HyperChain. What does Arbitrum have in their back pocket? Do they got something? And Steven is going to come right back with his answer about that question right after we talk to some of these fantastic sponsors that make the show possible.
00:00:55.284 - 00:01:35.514, Speaker B: Kraken is our strategic sponsor for 2023. Why? Because Kraken has been around for over twelve years and has proven itself to be deeply aligned with the crypto industry. Trusted centralized crypto platforms are hard to come by these days, which makes the few remaining ones even more valuable. With over 9 million users and not a cent lost, choosing Kraken as our strategic sponsor for 2023 was a no brainer. We need exchanges like Kraken to provide the onramps to get people to go bankrupt, and Kraken's emphasis on security and transparency makes us feel good about having them as a sponsor. If you're unsure about your centralized exchange or onramp, perhaps open an account with Kraken today. And if you're unsure about the rest of Web Three, well then maybe you should get your Learn on with MetaMask Learn.
00:01:35.632 - 00:01:37.210, Speaker A: Learning about crypto is hard.
00:01:37.280 - 00:02:30.282, Speaker B: There's no one out there to hold your hand to get into this industry. Until now. MetaMask Learn is the best place I've ever seen to send someone to learn everything there is to know about web Three. If you're a company trying to onboard employees, or you're a son or daughter trying to onboard your boomer parents, MetaMask Learn is the place to send them interactive and engaging lessons, making learning about web Three fun and easy. Now, once you're through the Kraken's gates and you've taken the MetaMask course on what's a Dex, you're safe to make your first stop into the world of DFI. Where better to start other than Uniswap? Uniswap is of course a decentralized exchange for crypto asset trades and swaps, but it's now also an NFT aggregator as well, making Uniswap some of the best decentralizing trading tech that's out there. Uniswap's big announcement at East Denver is their Uniswap wallet, which is waiting to get released to the public as soon as Apple stops being a big ol bully about crypto apps in the App Store.
00:02:30.282 - 00:03:03.122, Speaker B: Uniswap is basically on every chain that's relevant in the crypto ecosystem. So if you want to use Uniswap, but with the cheapest possible fees, then use Uniswap on Arbitrum. The Arbitrum layer two is the host of Ethereum's most vibrant DFI and NFT communities. Arbitrum is already surpassing the ETH layer one in transaction volume, and it's not even close to full capacity. With so many vibrant communities on Arbitrum, Arbitrum is a good place to call home for the era of layer twos. Speaking of settling into new homes, the Phantom Wallet is now available on both Ethereum and Polygon. That's right, the number one wallet on Solana is expanding into the Ethereum ecosystem.
00:03:03.122 - 00:03:18.934, Speaker B: Phantom is the one wallet for everything, displaying NFTs making NFT trades, swapping, tokens, Staking tokens. So if you're a multi chain surfer or an NFT power user, then the Phantom Wallet is for you. It also comes in mobile. Check it out at Phantom app. Now let's get into the interview.
00:03:18.982 - 00:03:24.778, Speaker A: Bacon Station. We are at the Axelr Interop summit and I'm talking with Stephen Goldfeder of Arbitrum. Steven, how's it going, my man?
00:03:24.864 - 00:03:24.923, Speaker B: Great.
00:03:24.923 - 00:03:26.094, Speaker C: Great to be here.
00:03:26.212 - 00:03:28.542, Speaker A: You just came off of a panel. What was that about?
00:03:28.676 - 00:03:40.250, Speaker C: The panel was about interoperability among roll ups, but that was the topic of the panel. But also it of course, had the roll up teams talking about what they want to talk about. So it was a fun panel in which we discussed everything. Roll up some spice of interoperability.
00:03:40.330 - 00:03:49.414, Speaker A: Yeah, I'm sure the layer two wars have we've been talking about the layer two wars heating up for like, 18 months now. And now other people are also starting to say that. So now, you know, it's really getting spicy these days.
00:03:49.452 - 00:03:51.494, Speaker C: Guys always have it first. Yeah.
00:03:51.692 - 00:04:01.130, Speaker A: Okay, so the first thing I want to talk about is Stylus, because I kind of get it, and I think it's a very big deal. I'm pretty sure it's a very big deal, but I'd like to hear it from you. What is Stylus and why is it such a big deal?
00:04:01.200 - 00:04:55.594, Speaker C: Yeah. So Stylus is our what we call EVM plus. And the idea is that Arbitrum is and will always remain fully EVM compatible or EVM equivalent, you might want to say. But then the question we ask ourselves is, can we do more? Can we be more inclusive? Like, the EVM is a starting point and a wonderful starting point, but can we make affordances that are more inclusive and bring in more developers? People always talk about they want the next billion users, and my thesis is to get the next billion users, we need the next million developers, and how do we target to those? And like always, our goal is let's move to them rather than asking them to move to us. So what Stylus does is it says, hey, let's add additional language support alongside the EVM, which is why we call it EVM Plus to Arbitrum. So now in the initial release of Stylus, the sky's the limit. But the initial release, you'll be able to not only write contracts in Solidity or any other EVM language, but you'll be able to write contracts in Rust, C and C plus plus.
00:04:55.594 - 00:05:16.850, Speaker C: And the coolest thing is that you can talk to each other in these contracts, or you can even break your contract up and say, I'm going to write that part in Solidity and that part in C plus plus or that part in Rust or use that Rust library. And by doing so, you'll actually get a ten X. Besides for the developer experience and all that, you'll get a ten X cost benefit as well. So, really exciting update for us.
00:05:16.920 - 00:05:28.334, Speaker A: Okay, so the main TLDR is that developers know languages. Most developers don't know Solidity, but with Stylist they can still write smart contracting code using Stylist.
00:05:28.462 - 00:05:52.618, Speaker C: Exactly. Today it's very much a binary choice. You might say, I want to write contracts in Rust and you'll have to go to the chain that supports Rust, or I might want to write contracts in Move. Okay, there are one or two chains that support Move. Our goal is to say no, no, you want to choose the ecosystem you want to be on. The language shouldn't be the determining factor. So you can build an Arbitrum if you want to be on Arbitrum and you can use in the long term whatever language that you want to use.
00:05:52.618 - 00:06:12.702, Speaker C: And by the way, it's also for Solidity developers as well because they might say like, hey, I want to use this super cool cryptographic tool, but it's just too expensive in the EVM. Can I create my own pre compile in Rust and do that? And the answer with Stylus will be, yes, you can. So it's bringing in these new developers and giving tools and scalability options to the existing developers.
00:06:12.846 - 00:06:25.158, Speaker A: Okay, the answer to this question might get over my head, but I'm going to ask it anyways. Technically, how does that work? How does that compile down to smart contract bytecode? How does that work?
00:06:25.244 - 00:06:55.538, Speaker C: Great question. So the key innovation here was with our launch of Arbitrum Nitro, the way we do, our fraud proofs changed. So it used to be we had something called the Arbitrum virtual machine, which was a custom virtual machine. It's very similar to the EVM optimized for proving and the on chain proofs were actually running that virtual machine's code. With Nitro we got rid of all that. And on chain we're actually running not our own VM, but WebAssembly or WASM, which is like the VM of the internet. All the web browsers use it.
00:06:55.538 - 00:07:37.742, Speaker C: So how do we get EVM support? We compile geth which is the go ethereum node, the popular ethereum node down to WASM. And what's actually happening on chain is we're not arguing about the EVM directly. We're arguing about the state of GEF on this WebAssembly virtual machine. So the cool thing is, and I'm going to gloss over the details, but hopefully I'll give you the idea is you can now say we're not limited to get anything that can compile down to this underlying machine. So if you have a WASM compiler for your language and hey, Ross, C C, almost every language does because WASM is a very mature technology, you can now, with some details, run it on Arbitrum as well.
00:07:37.876 - 00:07:39.902, Speaker A: Okay. I actually did follow most of that.
00:07:39.956 - 00:07:40.270, Speaker C: Awesome.
00:07:40.340 - 00:07:51.010, Speaker A: I'm kind of proud of myself on that one. Not too long ago, Arbitrum recently acquired Prismatic Labs. Was that talent acquisition part of this story of Stylus?
00:07:51.670 - 00:08:17.626, Speaker C: The Prismatic Labs is we're integrated very well, but fundamentally as a company, we're very committed to continuing L One development. We're doing a ton of work for EIP 44 Four and getting that ready. And so their team is, while it's very well integrated and we have a meeting of the mind and we talk about all ideas both ways, their team is very focused on L One priorities. Okay. And we work together again, it's not exclusive. So no, this was not really this.
00:08:17.648 - 00:08:26.846, Speaker A: Was already an effort by Arbitrum prior to all of that aqua hire, if you will, if that's the right word. That wasn't really about the Stylist project.
00:08:26.948 - 00:08:53.250, Speaker C: It wasn't about the Stylist project, but I don't want to actually limit definitely Raul and others on their team have contributed to like there is that meaning of the minds, but it wasn't like we're acquiring this know, it was really an acquisition. We wanted to develop Prism and that's one of our ways that we say, how do we contribute more to the Ethereum community? Having a dedicated funding source for Prism was important to us, but also just the meaning of the minds. Right. The conversations that happen between these teams is just incredible.
00:08:53.330 - 00:08:53.574, Speaker A: Cool.
00:08:53.612 - 00:08:53.766, Speaker B: Yeah.
00:08:53.788 - 00:09:01.994, Speaker A: I remember talking to both Raul and Preston about Silas and the excitement just exuded from them in my chat system. So that was really cool.
00:09:02.032 - 00:09:06.330, Speaker C: And they did contribute a lot to the ideas behind it as well, certainly.
00:09:06.400 - 00:09:25.550, Speaker A: And so I'm going to put my ETH Maxi hat on. You talked about like, there's the move language, there's the Rust language, but now you're saying with Stylists you can bring any language in. Does this kind of just invalidate the idea of programming specific blockchain environments? As in like, now any developer from any ecosystem can come and build on Arbitrum?
00:09:25.890 - 00:09:48.490, Speaker C: Yes. So this basically says any developer from any ecosystem, again, starting with these three additional languages, but it will be more over time, can develop an Arbitrum. But the cool thing is the EVM still has a critical role for our security. This is happening on layer two. What's securing us is the EVM on layer one. So we're making the user experience better. But the thing that's making this all possible is Ethereum layer one.
00:09:48.490 - 00:09:52.220, Speaker C: The EVM contracts we have and those are still written in.
00:09:53.150 - 00:10:09.406, Speaker A: Very, very cool. So I remember back in the day WASM was on the roadmap for the Ethereum layer one. I think it's since been jettisoned. Is this the layer two of Ethereum starting to adopt some of the innovation that was previously going to be on the layer one? Or is that a different story?
00:10:09.508 - 00:10:42.294, Speaker C: Yes, that's a really good memory. There was this eWASM project which was basically going after a very similar vision that we have today. For different reasons. That project was abandoned, but to the point I don't believe it was because people didn't want it or weren't interested or just these things are hard, particularly on layer one. And that's one of the things we have the ability to innovate on layer two in ways that in a system like Ethereum are more difficult. So this is very much that same vision. It's a bit harder, to be honest, on layer two because you have to make everything work with the fraud proof.
00:10:42.294 - 00:11:18.190, Speaker C: Sure. So just if you had layer one node, it's a bit easier. I'm not saying it's easier to get the consensus around it, but it's easier to implement. And one thing which I think is possible with this feature, and more generally, I think layer twos can become sort of innovation grounds for layer one. So if this turns out to be an off desired feature and a heavily used feature, there's nothing stopping Ethereum from saying, hey, Arbitrum has proven that there's a good need for this and a good community. Can we do this on layer one as well? That's totally something that's possible to happen. And it wouldn't be a technical challenge, it would give me a community consensus challenge.
00:11:18.270 - 00:11:45.494, Speaker A: Sure. I want to pivot the conversation a little bit to what I've discovered is like this new meta. I've even been using the meta word quite a lot in all these interviews. This interoperability conference is all about abstraction layers between many, many chains. People are getting chain fatigue, but abstraction layer solves that chain fatigue. And this is something that Optimism is really pushing forward with their superchain. I know ZKsync has their fractal scaling, so Optimism has superchain, ZKsync has fractal scaling.
00:11:45.494 - 00:11:49.738, Speaker A: Does Arbitrum have something like this in the same pipeline? Are you guys going after that same effort?
00:11:49.834 - 00:12:10.614, Speaker C: So let me answer that question in two parts. Sure. Yes, we have and I'll leak some alpha here. We'll probably be announcing the first one in a week or two. We have layer three chains that are coming to Arbitrum that will have better interoperability than others. But we're not branding that as a super chain or as an interoperability solution generally. And let me explain why.
00:12:10.614 - 00:12:29.110, Speaker C: It's basically what you said in your question. The Optimism team says, hey, here's our super chain. It's a way that all Op stack chains can work together and you can add ZK proofs. It's a nice theory, but there are so many strong builders in this case, in this space. There's us there's. You mentioned ZKsync. You mentioned Starquare polygon.
00:12:29.110 - 00:12:49.246, Speaker C: This is not something that one team can dictate, even Arbitrum, we're in a very strong position. We don't feel like we can dictate that. We have to really get them work together. Because your point is optimism has their superchain, ZKsync has their HyperChain, I think they're calling it now. Polygon has their thing, which blockchains.
00:12:49.438 - 00:12:53.266, Speaker A: Starkware will definitely let you know that they invented the term layer three, too.
00:12:53.368 - 00:13:20.378, Speaker C: Yes. And the point is, we just end up with the same debate one step further. Right now, it's our interrogative optimism, ZK sync and now it's no, it's our interoperability. So we're not going to enter that space unilaterally. What I want to do, and I've been doing reach out. And I think it's important is to say, hey, all roll up teams, let's think about not how we make a super chain of chains that build my technology. How do we make a super chain of chains or whatever the term is, or HyperChain or I don't care.
00:13:20.378 - 00:13:21.014, Speaker C: I'm agnostic.
00:13:21.062 - 00:13:22.486, Speaker A: Chain, chain, chain, chain.
00:13:22.598 - 00:13:41.322, Speaker C: There you go. How do we make one that integrates all of our technologies? And there's some serious technical challenges here, but I think that can't be dictated by one team. And that's not the approach we're going to go. And I'd encourage others to really sit around the big table because otherwise we just have the same debate, one step up the stack. We're all arguing for our interoperability institutions and we haven't really gotten anywhere.
00:13:41.386 - 00:13:54.102, Speaker A: Sure. Again, I feel like I'm about to ask a question that's going to the answer is going to be over my head. How do all of these layer two chains that have all of their chainy chain in it on top of them, how do those technically all start to talk to each other, to talk about that vision, you said?
00:13:54.236 - 00:14:18.734, Speaker C: So it's a really good question. And there are some a lot of these super chain things, they brush up over some of the technical details. Like one question is a shared security question. How do we really get shared security if there are different security models? Does it just evolve to the lowest security if you're sort of sharing a bridge? There are very hard questions and to be honest, I don't have all the answers. But I think one thing which we can do is to start. It's too early to standardize half these technologies. They're not even launched yet.
00:14:18.734 - 00:14:52.018, Speaker C: Right, but I think we can start saying, how do we build in a way that will make standardization easy in the future? So I think it's really that it's a conversation to say we all want to work together because fundamentally, the people that benefit when we work together are the users and that's the ones we really want to serve. So how do we put our own brand second and users first and say, hey, I might think your technology is terrible, or I don't like you. Ethereum are a little more friendly than that. But fundamentally, how do we work together? And I think it's a very technical conversation. And unlike some others, I'm not coming here with an answer. I'm coming here and saying, we need to have that conversation.
00:14:52.114 - 00:14:59.420, Speaker A: Sure. Steven, I think this is great. Is there anything else that I have not asked you about yet that is worth talking about?
00:14:59.870 - 00:15:05.262, Speaker C: Nothing else. We're super excited to keep on building the Arbitrum ecosystem. I say nothing else and I start talking.
00:15:05.396 - 00:15:06.542, Speaker A: That's great. That's perfect.
00:15:06.676 - 00:15:33.350, Speaker C: The Arbitrum ecosystem is growing. We're excited about, particularly in DeFi, but also NFTs and gaming. We are doing a ton of volume and a ton of value coming to the chain and a ton of teams building on the chain. So for anyone out there watching, come build in the Arbitrum ecosystem, we're excited to have you and come build an ethereum. That's the real goal here. And we'll find a way, whether you're on Arbitrage or not, via cross chain consensus, to work together and make sure we can all build this future together.
00:15:33.420 - 00:15:34.390, Speaker A: Stephen, thank you so much.
00:15:34.460 - 00:15:35.410, Speaker C: Thank you for having me. Cheers.
