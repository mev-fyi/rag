00:00:02.490 - 00:00:44.886, Speaker A: Welcome to Bankless, where we explore the frontier of Internet money and Internet finance. And today on bankless, we explore the frontier of composability of Ethereum's rollup centric roadmap. Today on the show we have Justin Drake as my technical co moderator as we both interview Ben Fish, the CEO of Espresso Systems. Espresso is building a shared sequencer that operates at a higher plane than the Ethereum layer, one that allows for shared execution amongst the Ethereum rollup landscape. The frontier that Espresso is building in is becoming more and more relevant as the fragmentation of Ethereum's rollups become more and more obvious. Yet there are a bunch of solutions being built in parallel, and Espresso unlocks a lot of them. A lot of innovation is allowed to come into the world of composability across Ethereum's roll ups.
00:00:44.886 - 00:01:31.194, Speaker A: At the beginning of this episode, I really make sure that we drill down into the foundations of this conversation, the 100 level, 200 level basics, before I kind of let Justin Drake take the reins and get into some of the deeper ends, the more technical nuances of shared sequencing. So I think this episode is accessible to all skill levels. If you are at the beginning of your arc of understanding Ethereum, you're going to catch a vibe. And then if you are deep into the weeds, I think you're going to really enjoy the second half of this episode. But first, we're going to talk about Sui and the Sui base camp, which is an in person conference in Paris during Paris blockchain week, April 10 through 11th. So if you are interested in a parallelized layer, one delegated proof of stake chain, the Sui base camp might be for you. There is a link in the show notes to get 20% off of your pass to the Sui base camp.
00:01:31.194 - 00:02:26.582, Speaker A: This is the move ecosystem. For all the devs out there who enjoy move, Sui is like the spiritual successor to the whole Libra project now turned into a layer one. Especially if you're a dev who's interested in parallelized new vms that are parallelized, there's a link in the show notes to get started. I think the exploration of composability across Ethereum's roll ups are just beginning on bankless and this is our second step into the world of composability here, our second episode with Justin. We will get into further conversations with other players in this arena as well in the future. But before we get into this conversation with Justin and Ben, first a moment to talk about some of these fantastic sponsors that make this show possible if you want a crypto trading experience backed by world class security and award winning support teams, then head over to Kraken, one of the longest standing and most secure crypto platforms in the world. Kraken is on a journey to build a more accessible, inclusive and fair financial system, making it simple and secure for everyone everywhere.
00:02:26.582 - 00:03:00.726, Speaker A: To trade crypto Kraken's intuitive trading tools are designed to grow with you, empowering you to make your first or your hundredth trade in just a few clicks. And there's an award winning client support team available along the way, along with a whole range of educational guides, articles and videos. With products and features like Kraken Pro and Kraken NFT Marketplace, and a seamless app to bring it all together, it's really the perfect place to get your complete crypto experience. So check out the simple, secure and powerful way for everyone to trade crypto. Whether you're a complete beginner or a seasoned pro. Go to kraken.com slash bankless to see what crypto can be.
00:03:00.726 - 00:03:36.030, Speaker A: Not investment advice crypto trading involves risk of loss. Uniswap is revolutionizing the DeFi space not just by enabling swaps, but by empowering you to swap smarter with a comprehensive suite of products for faster, safer and more informed swapping. Say goodbye to pop up wallet extensions the Uniswap extension is coming soon, and this extension is not a pop up. It is a sidebar in your browser that persists no matter where you are on the web. This means you can swap, sign or send and receive crypto anytime, anywhere, without obstructing your browser window. But that's not all. The Uniswap web app now features limit orders, so you can buy and sell any token at your price on your terms without having to watch the market.
00:03:36.030 - 00:04:20.522, Speaker A: And the best part? Limit orders are built on Uniswap X, which means no gas fees. Also new to the web app is the data and insights pages with real time candlestick charts, price data, transaction logs, and detailed pool data, all integrated into the Uniswap web app. All of these new releases come together to create one platform to help you swap smarter every time. No matter where you are on web, mobile or on the extension. Click the link in the show notes to sign up for the extension waitlist and download the mobile app. Start swapping smarter with Uniswap Cello is the mobile first EVM compatible carbon negative blockchain built for the real world driving real world use cases like mobile payments and mobile DFI, and with Opera Minipay as one of the fastest growing web3 wallets, Celo is seeing a meteoric rise with over 300 million transactions and 1.5 million monthly active addresses.
00:04:20.522 - 00:04:59.734, Speaker A: And now Celo is looking to come home to Ethereum as a L2 optimism. Polygon, Matterlabs, and arbitrum have all thrown their hats in the ring for the cello L2 to build upon their stacks. Why the competition? The cello L2 will bring huge advantages, like a decentralized sequencer offchain, data availability secured by Ethereum validators, and one block finality. What does that all mean for you? With cello L2, gas fees will stay low, and you can even pay for gas natively using ERC 20 tokens, sending crypto to phone numbers across wallets using social connect. But Cello is a community governed protocol. This means that Cello needs you to weigh in and make your voice heard. Join the conversation in the Cello forums, follow Cello on Twitter, and visit cello.org
00:04:59.734 - 00:05:10.910, Speaker A: to shape the future of Ethereum bankless nation ladies and gentlemen, in my left corner we have Mr. Moon mass himself, the blockchain brainiac, the Ethereum evangelist Justin the juggernaut Drake. Justin, welcome to the show.
00:05:10.980 - 00:05:12.622, Speaker B: David thanks for having me again.
00:05:12.756 - 00:05:24.014, Speaker A: And coming in for his first time on bankless, we got Ben Fish, the sultan of sequencing, the espresso emperor, the cross roll up connoisseur, the blockchain barista Ben. Welcome to bankless.
00:05:24.142 - 00:05:26.658, Speaker C: Pleasure to be here. David thank you for having me.
00:05:26.744 - 00:06:27.350, Speaker A: So where the fragments of Ethereum threaten to turn this digital landscape into a maze of confusion, two men stand tall, illuminating the way to come save us from the labyrinth of Ethereum's rollup centric roadmap. Today on the show, we're going to be talking about shared sequencing and what this means for Ethereum's roll ups, what it means for composability across Ethereum's roll ups, and trying to get down into the deep end of some of the nuances that are going to ultimately turn into engineering questions and then ultimately turn into production products for the Ethereum ecosystem. And so we got Justin Drake not as a guest, but as my technical co moderator for this episode. And I think I'm going to just make sure that we kind of touch on some of the easy things, the easy subjects, before we get into the deep end here. But Justin, maybe I could just ask you before we really get started here, what would you say are your goals for this episode? What knowledge do you want to get out of? Ben? What should listeners be prepped for or be thinking about as we progress further into this conversation.
00:06:28.090 - 00:07:06.850, Speaker B: Right? I mean, I'd like to push forward the discussion around shared sequencing and base sequencing. Specifically. I think we're in this interesting phase shift moment where people are starting to pay attention to the problems of fragmentation and also the solutions are starting to pop up. There's a bunch of misconceptions, or maybe I should say preconceptions, that it would be good to clarify. And I also feel that there's this wave of momentum of teams like Ben's team that are potentially making a big pivot. And I think Ben might have a big announcement to make here during the podcast.
00:07:07.430 - 00:07:07.890, Speaker C: Interesting.
00:07:07.960 - 00:07:17.270, Speaker A: Yeah. Ben, maybe share some of your similar thoughts or goals, or just interests in the knowledge and content and conversations that you want to broadcast. What goals do you have for this episode?
00:07:17.850 - 00:08:29.802, Speaker C: Yeah, similar to Justin, I would like to address head know shared sequencing and what it is and why I'm very bullish on it. Why I think that it's very important for the evolution of the role of space and for the scalability of Ethereum while preserving its unity and defragmenting what has happened to Ethereum with the current scaling of Ethereum through many different fragmented rollups that are not united. I also want to talk about, as Justin alluded to, we've got very excited about based sequencing, the idea of using involving the l one itself, ethereum l one, in as much a way as possible in shared sequencing. And we've actually found a way to merge the narrative of espresso with that of base sequencing. And that's been a very exciting and new development for us that I've been talking a little bit about, but haven't talked about publicly yet until this podcast. And so I could get into a bit of how we've made those adjustments at Espresso and how roll ups running on Espresso can actually be based roll ups.
00:08:29.946 - 00:08:50.770, Speaker A: Okay, I love that. And I want to put a pin in that because I want to work towards that point. But I think we need to establish a foundation, some knowledge before we get into what the significance of that is. So let's see how fast we can kind of speed run through the 100 level and 200 level aspects of this conversation before we get into the deep end. So let's just start at the 101 level sequencing.
00:08:50.930 - 00:08:51.926, Speaker C: What is it?
00:08:52.028 - 00:09:00.620, Speaker A: And then what does it mean to share it? So what's sequencing at all? And then what does it mean to add sharing onto that? Ben, we want to take this one.
00:09:01.310 - 00:10:00.380, Speaker C: Yes. So sequencing today for a roll up is the act of determining the transactions that will actually go into the rollup. And currently most roll ups today have a server that collects these transactions and orders them, gives confirmations to users that these are the transactions that are going to be included. And then every ever so often it settles them on Ethereum by posting them to a smart contract. And the smart contracts today can only be updated by this sequencer. So they give the total authority to this central server to determine which transactions are going to update the roll up, with the exception of transactions that can be forced included. And there are other details we don't need to get into right now.
00:10:00.380 - 00:11:31.100, Speaker C: Maybe the first thing to talk about then with sequencing is well, what is decentralized sequencing? It's simply taking that and making it not one server that's in charge of sequencing, but many different servers. So having a decentralized, some kind of decentralized protocol whereby it's not just one party that can determine the transactions that get included. Maybe it's a rotating set of parties, maybe it's a byzantine fault tolerant protocol. And shared sequencing is the idea that multiple roll ups can share a common mechanism for determining this ordering. And I'll give one slightly zoomed out take though, on shared sequencing that I don't think is a common way of describing it, but it's definitely the way that I think about it. I think of shared sequencing as not necessarily sharing a common party or protocol for determining the ordering, but it's more about sharing a mechanism, sharing a marketplace whereby roll ups can effectively sell their block space to third parties who are bidding on the joint block space and may value it more and can create a surplus value. But roll ups really can determine by the slot whether to sell that block space or not.
00:11:31.100 - 00:12:05.140, Speaker C: And if there is value to be had in parties jointly sequencing for multiple roll ups at once, then the outcome will be that there are these third parties that will be simultaneously purchasing the block space from multiple roll ups and producing these blocks simultaneously and creating a surplus value that gets redistributed to roll ups. I think that last point gets a little bit deeper and I'm going to put a pin in that, because I know we're trying to go over basics one on one of what shared sequencing is, but I'll stop there.
00:12:05.750 - 00:12:50.146, Speaker A: Maybe one way to articulate the purpose or advantage of shared sequencing, and this is just my understanding. So check me on this, Ben, is that when you have one roll up, you have the economics of that one roll up. And then when you have a sequencer that is spanning multiple roll ups, aka a shared sequencer. One roll up can have more opportunities for double coincidence of wants with the transactions in one roll up as it relates to another set of transactions in another roll up. And so a shared sequencer is kind of like a matchmaker between the double coincidence of wants of the economies of two roll ups. And when it behooves both roll ups, a shared sequencer can kind of make those connections happen. Is that like a simplified way to understand this?
00:12:50.248 - 00:13:47.426, Speaker C: Absolutely, yeah. It enables faster bridging between roll ups. There are certain things that you can't do today, like maybe it's good. What you said is entirely correct, but I think just giving a few quick examples might help make it concrete. Let's say that I want to buy an NFT on one roll up, but I want to pay for it with cash on a different roll up. I might want to make these two transactions atomic without even bridging assets over. Could I buy an NFT on Zora with, I don't know, cash that I have on CkSync? What if I want to take advantage of arbitrage between amms on two different roll ups? What if I want to fund a transaction on one roll up using funds that I have on the other? But let's say I want to take a loan on one roll up and use it to fund a transaction that I have on another, and then even repay the loan.
00:13:47.426 - 00:14:05.498, Speaker C: So do some kind of flash loan, for example. All of these things are not possible with the status quo. And shared sequencing is not the same as being in the same execution environment like Ethereum, but it can get us under sort of certain kinds of economic guarantees very, very close to that.
00:14:05.664 - 00:15:02.250, Speaker B: Yeah, I like the marketplace analogy, because it's all about creating value that otherwise couldn't have been created. So there are certain instances where we want this really low friction form of interaction, which we call synchronous composability, and that provides more value than the counterpart, which would be asynchronous composability. And it turns out that on l one, every roll up benefits from synchronous composability. So this is the luxury that we've gotten used to. And once you don't have shared sequencing, when you have this siloed sequencing, then suddenly you fall back to this lower form of composability. And I think what Ben is trying to do is kind of bubble up this value creation. And when there are opportunities to have synchronous composability, try and capture this additional value creation, and potentially even give it back to the rollups.
00:15:02.250 - 00:15:15.666, Speaker B: So it's a net positive for everyone. Not only are we creating value, but this value goes back to the roll ups and there's no loss of the perspective of an individual roll up.
00:15:15.848 - 00:16:00.926, Speaker A: Maybe the Ethereum layer one, the common settlement layer for all roll ups. Maybe one way to perceive it is like a minimum viable composability for all roll ups. At the very least, roll ups are composable, albeit slowly, albeit extremely asynchronously, through the layer one. And that is our threshold, that's our floor, that's our foundation of level of composability. And with additional levels of innovation, shared sequencing being one of them, maybe an intense is also relevant here. We can actually kind of raise the floor of what composability looks like. And maybe that's kind of like where we are in Ethereum's arc right now is like we've got this minimum level of composability and now the webbing between some of the rollups are starting to get fleshed out, which is like what this conversation is here.
00:16:00.926 - 00:16:02.778, Speaker A: Ben, what would you like to add to this?
00:16:02.964 - 00:16:26.246, Speaker C: I'll say it like this. Ethereum is a shared sequencer. We already have a shared sequencer. Ethereum is a shared sequencer not only for all applications that run on Ethereum, it is a shared sequencer for roll ups. It is not as good a shared sequencer as we want right now.
00:16:26.268 - 00:16:28.750, Speaker A: It's not optimized to be a shared sequencer.
00:16:28.930 - 00:17:13.478, Speaker C: Well, it's a shared sequencer that happens on a delay, right? And I think that talking about Ethereum as a shared, the difference between shared settlement layers and shared sequencers I think is grayer than people might think. So I think all this discussion about shared sequencing is about improving on the baseline that we have, which is that bull ups share Ethereum as a settlement layer. And how can we get more out of that? How can we get atomic execution promises right? How can we get just more value out of shared infrastructure than what we already have today?
00:17:13.644 - 00:17:39.086, Speaker B: David, I really like your point around the minimum foundation that Ethereum provides, which is this asynchronous composability. And the way, I guess a good metaphor is countries. Let's say you have two different countries. At a minimum. What you can do is transport from one country to another. If you get a visa or if you show your passport and you can also do trade, but there's some friction. You might have to pay import duties or whatever it is.
00:17:39.086 - 00:18:22.906, Speaker B: And then there's something a little tighter a little more close knit, which is something like the United States or Europe, which is some sort of coalition, where within those countries or within those states, you have full freedom of movement and full freedom of commerce. And in some sense, chains opting into a shared sequencer is all about maximizing this freedom of movement of assets and value, and also maximizing the freedom of commerce. And I really like the analogy that you and Ryan put forward, which is this united chains of Ethereum. We're creating a super low friction environment for the different chains to scale Ethereum, with very, very little trade offs.
00:18:23.098 - 00:18:38.126, Speaker A: Okay, so this all sounds great. Fantastic. Why don't we have this, right? Like why it seems so simple. Just like share the sequencers, just get it done. Why can't we have it? What are some of the Obstacles, Ben, that you're running into at Espresso?
00:18:38.158 - 00:18:38.354, Speaker C: Right?
00:18:38.392 - 00:18:44.798, Speaker A: What are just the net obstacles for the ecosystem as to why this is difficult? Why can't we have this?
00:18:44.984 - 00:19:10.694, Speaker C: Yeah, good question. So I think that in part there's a technical challenge. There's also a more social challenge, a coordination challenge. Let me touch on the technical challenge first. Actually, the original concept of roll ups was just to share Ethereum as a sequencer. The original idea for roll ups was you don't actually have a sequencer. You just allow the smart contract to collect transactions.
00:19:10.694 - 00:20:00.454, Speaker C: And so effectively, the l one proposer is basically the shared sequencer for all roll ups. And just as a bit of a historical note, the sequencer was introduced as something that could be used for a performance benefit. So by having the smart contract only allow itself to be updated by this one party, you can allow that party to collect many transactions. And because it knows that it's the only entity that can update this contract, it could collect many transactions at high throughput. It could compress those transactions more, so it can get more compression out of this and thus cheaper fees. It can also, if you trust it, give users very fast finality guarantees. So it can say, if you trust me, then believe me, this is the transaction.
00:20:00.454 - 00:20:52.800, Speaker C: You don't need to wait for it to settle on Ethereum. This is the transaction. Just trust me and I'll eventually post it to Ethereum. So that has all kinds of performance benefits and UX benefits. If you're going to go back to getting all roll ups to share a sequencer, then you need, from a technical perspective, to preserve some of these performance benefits that we got from centralized sequencing. And so that has been the main, I guess, technical challenge at espresso. And even now, where we've figured out how to allow roll ups to be based and to basically involve whoever is proposing the next Ethereum block to act as a shared proposer for the roll ups as well.
00:20:52.800 - 00:22:33.166, Speaker C: We've figured out technically how to integrate the, I would say the meat of what we have, the technical meat of what we have at espresso, which is a very fast, high throughput consensus protocol called hotshot, in a way that allows these roll ups to enjoy much of the performance benefits that they have today while still sort of sharing a proposer who is also the proposer of the l one. So I don't want to get too much into the weeds on that, but I just want to say that, look, that's the sketch of where the technical challenges come from, and then the social challenge is convincing roll ups that this is a good idea, that they are going to get surplus value from not having so much fragmentation, but enabling stronger interactions with other roll ups, and also with the l one itself. That coordination challenge is difficult because roll ups evolved in a world where there wasn't shared sequencing. And many of these roll up projects have considered doing shared sequencing within their own ecosystems, like optimism with the superchain, for example. But the idea of there being one Ethereum shared sequencer that expands beyond any individual roll up ecosystem is new. And even if it's somewhat where we started, it's not where we ended up, and we are trying to get back to that original state. Yeah.
00:22:33.188 - 00:23:13.450, Speaker B: So if I were to summarize, basically what you're saying is that the sequencer is this coordinator which provides various services. It can do optimal sequencing and deduplication and compression. So it's a performance benefit, but it also provides UX benefits. One of them, as you said, is this finality, if you trust me, also known as pre confirmations. And then another very useful service is mev protection, essentially implementing an encrypted mempool using a centralized sequencer. As a user, I send my transaction encrypted to the centralized sequencer. No one else sees it, and so I can't get sandwiched.
00:23:13.450 - 00:23:55.030, Speaker B: And I guess what you're saying here is that we've made this mental unlock, which is very new recently, where we can think of the l one proposers as providing these exact same services that centralized sequences provide, and at the same time have all sorts of benefits. Benefit number one is we have this credibly neutral platform. Benefit number two is that we inherit a lot of the security of a fieldroom, and then benefit number three is that now we can think of true global and universal shared sequencing, as opposed to having ecosystem by ecosystem shared sequencing.
00:23:55.450 - 00:24:23.070, Speaker A: Justin, where would you like to take things from here? I have one set of questions that maybe we will get to, but it's more about just like one of the last things that Ben said, which is like at the very start, no one wants to use shared sequencing. At the very end, everyone wants to use shared sequencing, the end being when everyone else is already using shared sequencing. But I don't know if I want to hop there first. Justin, what rabbit hole in this whole world do you want to go down first?
00:24:23.220 - 00:24:58.566, Speaker B: Right? I mean, I do want to go through various innovations that Ben and his team are bringing to the table. One of the big ones that we've already alluded to is mev redistribution. But I really like what you said, that here. Shed sequencing is all about network effects. And so if you're one sole roll up, like what is the incentive for me to join a network? With one node, there's no network effects. And so bootstrapping these initial network effects can be difficult. But once everyone else has a shared sequencer, then it almost becomes a no brainer for you to come in because you enjoy these network effects.
00:24:58.566 - 00:25:34.726, Speaker B: And one of the things that I do want to highlight economically is that there's this idea of mev and do roll ups lose it or do they get it kicked back to them? But there's also this idea of execution fees, whereby by connecting to the network, you actually increase your total amount of execution fees. So I guess I want to go to Ben and ask him, do you agree that there's these network effects at play and what would be your strategy to try and kickstart things and solve the cold start problem?
00:25:34.908 - 00:26:31.306, Speaker C: Yeah, Justin, there are, I agree there are absolutely network effects, and the value of a shared sequencer increases quadratically in the number of roll ups that are joining it. I wouldn't say, however, that nobody wants to use a shared sequencer at the beginning. I think everyone talks about decentralizing their sequencer, and if you're going to decentralize your sequencer, you might as well use a decentralized shared sequencer that you know other roll ups are going to join, as long as it doesn't have any downsides. So the idea that it solves an immediate problem for you now, even although if you're the first one to the party, you still needed a solution for decentralized sequencing, and you might as well go to the party that everyone else is going to show up at the other thing.
00:26:31.328 - 00:27:11.270, Speaker A: I will say, wait, Ben, before you move on, I'd like to actually kind of just unpack that just a little bit more. So, decentralizing a sequencer. So right now, the base case for Ethereum rollups is we have centralized sequencers. We get some benefits from that. But ideally, we would like to go from the current state where arbitrum or optimism have one single sequencer, and they kind of want to split it, maybe into three different sequencers that do some sort of like, round robin thing, some sort of setup that gives them some new properties, mainly liveness protection. So if one sequencer goes down, the other two out of the three are always still in the network. And so the network has some sort of robustness with, in terms of liveness.
00:27:11.270 - 00:27:35.722, Speaker A: That's the reason why internally, optimism, or arbitrum, would enjoy decentralizing the sequencers. Maybe there are some other benefits as well. Mainly, it's a big, like, liveness thing. And what you're saying is like, well, they want this. They do want this. This is a known quantity. What you're saying is like, well, there happens to be this specific sequencer that could also be one of these, of the three arbitrary number that I just picked.
00:27:35.722 - 00:28:15.450, Speaker A: Of the three, they could just choose this one, which also is a shared sequencer. So they are decentralizing their sequencer if they just pick one that's also shared. Maybe arbitrum and optimism are actually using espresso as one of their sequencers, and so there's not as much of a cold start problem. If they are already looking to decentralize their sequencer, they'll just, why not also pick the sequencer, which is having a party where other people will show up, is a shelling point for where people will show up, and we can start to get some of those double, triple, quadruple coincidences of wants, depending on how many chains decide to elect to use this particular shared sequencer. That's kind of what you were saying, right?
00:28:15.520 - 00:29:29.150, Speaker C: That is kind of what I was saying, yes. The other thing to note is, with based sequencing, you automatically are sharing a sequencer with Ethereum, with the l one, with the EVM. So by involving the l one proposer in the sequencing protocol, right. So all sequencing protocols basically have a rotation of, okay, who can propose the next block, right? Who's able to propose the next block for all the roll ups that are on this sequencing protocol? And if that can be the l one, same as the proposer for the next Ethereum block, then suddenly this proposer can start to give what we call pre confirmations about what it will do. So if I'm a user and I say I only want my transactions to execute on optimism or arbitrum or zksync or start quip or whatever roll up tyco. If the price of uniswap on the l one is x, then I can get some kind of promise from the proposer that this will happen. And if it doesn't happen, the proposer will be slashed.
00:29:29.150 - 00:30:36.230, Speaker C: Or another way of thinking about this is insurance. I can buy an insurance policy from the proposer that will cover my losses. If this thing that I want to happen, this intent that I have as a user, is not satisfied, who is able to actually sell this insurance? Not just anyone on the street, right? The proposer and specifically proposers who have the ability to affect the outcomes of both of these roll ups simultaneously. So even if there's just one roll up, the first roll up, let's say it will be Tyco. So if Tyco is the first roll up that becomes a based roll up, then it's the first roll up that will enjoy this additional composability with the l one, and its users will enjoy that. And I think that's a benefit that anyone can have by becoming a base roll up. And the wonderful thing is that if they join it, and other people want to join it, too, for this reason, then again, the benefit of being part of the same party that everyone else is joining is going to only increase quadratically with the number of parties that join.
00:30:36.570 - 00:31:22.614, Speaker B: If I were to summarize, Ben, I guess you're saying two things. One is that a lot of these teams already on their roadmaps want to decentralize their sequencer, and so they might as well have someone else do all the work. The rollup teams are experts in virtual machines. They know how to design the virtual machines and design fraud proofs around them and snark proofs around them, and they might also branch out in terms of tokenomics and things like that. But sequencing is not what they excel at. Even like the simplest form of sequencing, which is centralized sequencing, right? Those centralized sequences go down all the time, and they're not DevOps experts. The other thing that you're saying is that even if there's just one base roll up, that's already a network with a network effect.
00:31:22.614 - 00:31:45.840, Speaker B: And the reason is that there's another node which is the l one, and it's not just any plain old node. It's the damn l one, which has half a trillion dollars of TVL. And so from day one, you enjoy huge amounts of network effects with base sequencing specifically because you have this network with two nodes, one of which is the dominant one.
00:31:46.530 - 00:32:56.370, Speaker C: Yes, I'll soften just the first remark, because my personal view is that, and I know a lot of the leaders of these other projects, I think all these projects have brilliant people, and they're all actually very capable of building advanced technical solutions across many different types of domains, including building decentralized sequencing, et cetera. But we know that specialization is also important. And are you going to want to maintain a consensus protocol, a decentralized sequencer, in addition to being the best at building your ZKVM or your optimistic vm down the line, that may not be what you want to focus on. Right. I think that roll up are better off focusing on making their stacks the best stack as an execution environment. But I think that the greater reason is just around the network effect that we're going to have with the benefit of rollups joining a shared sequencer. Right?
00:32:56.520 - 00:33:35.310, Speaker B: So one of the big concerns that rollup have when they're first exposed to this idea of shared sequencing is that they have to give up MeV as a source of income. And I have my own thesis, which is that MeV is going to go down by at least an order of magnitude, if not two orders of magnitude, relative to this other thing, which is execution revenue and execution fees. But let's assume that I'm wrong for a moment, and that MEV is a very significant part of roll up income. You've been working on something super interesting called MEV redistribution. Can you talk about what it is and how do you achieve it? Technically?
00:33:35.670 - 00:34:27.810, Speaker C: Yes. So I'll go back to what I said at the beginning, which is that I think of a shared sequencer, if built appropriately, and this is the way that we're building it at espresso. I think of a shared sequencer as a marketplace whereby chains are, roll ups are selling proposal rights by the slot to others, whether they're the proposers of the l one blocks or other third parties who are creating even more value by offering pre confirmations and cross chain liquidity and atomicity and all kinds of things and more. And so what do I mean? Why is this a marketplace in the way that we've designed it? Well, let's consider an example. Okay? Let's say that there are just two roll ups. Roll up a, roll up b, arbitram and base. Fine, arbitram and base.
00:34:27.810 - 00:35:23.474, Speaker C: Right? So hypothetically, arbitram and base. Then, if they're the only two roll ups on the shared sequencer, what's going to happen is that third parties are going to bid for the right to be the proposer for the next blocks of base and arbitram. And there's different kinds of bids that we'll collect. We'll allow people to bid individually on proposing the next block of arbitram individually on proposing the next block of base, and to bid on the pair. So the bid on the right to produce simultaneously the next block of both arbitram and base. So let's say that the highest bid that we get for arbitram individually is, I don't know, five. Let's say that the highest bid that we get for base individually is three.
00:35:23.474 - 00:36:30.166, Speaker C: And what we get, we get a bid to produce both of them together for ten, right? Well, ten is greater than five plus three. So we have the most economic value created by allocating the bundle to whoever bid ten for the right to produce the bundle. But because we got the highest bid for arbitrarim at five and the highest bid for base at three, that's what they would have got if they were just auctioning off the right to propose their next slot on their own. So we will give arbitram five, we will give base three, and the surplus of two can be divided proportionally. It could be burned. We will redistribute it in some way so that they're getting even more than they would conceptually on their own. So that's like the basic idea of how do you estimate the contribution levels of each roll up to the surplus value? Or how do you make sure that they're making at least as much as they would make on their own? Another way to think about this, though, is that each roll up has the opportunity to set a reservation price.
00:36:30.166 - 00:36:53.182, Speaker C: That's why it's really that the roll ups themselves are selling their block space. What does it mean to set a reservation price? Well, arbitram can bid on itself, right? It can bid five, it could bid six if it wants, it could bid ten. If it bids ten, then it won't end up in a bundle with base. So it will basically exclude itself from the potential surplus value that can be created if it's true value.
00:36:53.236 - 00:36:58.094, Speaker A: Is that like a tariff? Ben, if we're using the nation state United chains of Ethereum metaphor, is that like a tariff?
00:36:58.142 - 00:38:07.990, Speaker C: Like you must pay at least this, not a tariff. I don't think it's exactly a tariff. In the language of auction, of auctions, the economic term would be a reservation price or reserve price, because it's saying that the seller is only willing to sell regardless above this price. Right. So what would happen if arbitrum bids ten on itself? Right? Well, because the true value of arbitrum is actually five, and nobody values the bundle more than 13, which would be the sum of ten plus three, the highest bid on basis three, then Arbitrum's bid will win itself. It will be excluded from a bundle, and it's the same as if arbitrum were just its own centralized sequencer. And so it guarantees that it will only make more than its reserve price.
00:38:07.990 - 00:39:17.934, Speaker C: So if it wants its reserve price to be ten, we'll only make more than ten by participating in this shared economic mechanism. And I think that this example with two parties is here to illustrate that it's very much by the slot. Roll ups are selling the proposal rights for their next slot to other parties who are now going to hopefully buy up the rights for many roll ups at once and create surplus value from that. It gets more complicated when we go from two to three. You don't want a situation where one roll up can bid excessively high on itself or set a very high reserve price and ruin it for everyone else. So the solution, in order to generalize it from two to three, where it gets a little bit more complicated, and I won't go into the details right here, but we will have a blog post on this, is to ensure that if one roll up sets a very high reserve price for itself, every other roll up that sets a correct reserve price that honestly reflects its true value will enjoy the benefit of being in a bundle with each other. Right.
00:39:17.934 - 00:39:25.620, Speaker C: So one person can't cause others to be excluded from the bundle. One roll up can cause itself to be excluded from the bundle only.
00:39:25.990 - 00:39:53.398, Speaker B: So if I were to highlight one specific point, what you're saying is that there's a mechanism whereby at the very least, the roll ups are getting the value, the MEV, that they would have received if they were completely isolated from a sequencing standpoint. And potentially they're getting more because there's excess Mev that's generated from the additional value of synchronous composability.
00:39:53.574 - 00:40:25.510, Speaker C: That's right. And I also want to highlight again what you said earlier, which is that this has nothing to do with the gas fees that roll ups charge today. So roll ups are making hundreds of millions in sequencing revenue today. That's not from MeV. That's all from execution fees today mostly. And shared sequencers don't touch any of that revenue because even though that's called sequencing revenue today, it's really separate from sequencing revenue. Sequencers make it.
00:40:25.510 - 00:41:03.054, Speaker C: MEV sequencers don't make money on transactions that are executed by the individual roll ups. They do today only because it's all conflated into this one single integrated right. It's all integrated right. But shared sequencers separate that. So the transactions are still paying fees in the roll up itself. We wouldn't pay it to the shared sequencer. The execution fees that they're paying, the gas fees that they're paying within optimism or arbitram, as you can think, or whatever, whichever roll ups decide to be part of a shared sequencer would be going to the roll ups themselves.
00:41:03.054 - 00:41:49.850, Speaker C: And the roll ups can decide what to do with those, right. The value that's being captured by a shared sequencer is MeV. MEV is not just front running. We still want to build shared sequencers that prevent harmful forms of MeV. You can also think about pre confirmations as generating MEV. So the tips that users are willing to pay for atomic execution across two different roll ups, what users are willing to pay to take advantage of arbitrage between amms on different roll ups, there's all kinds of things that people would be willing to pay for that goes into what we give the umbrella term mev to, and that's what's being captured and then redistributed.
00:41:49.930 - 00:43:04.822, Speaker A: Mantle, formerly known as Bitdao, is the first dow led web3 ecosystem, all built on top of Mantle's first core product, the Mantle Network, a brand new high performance Ethereum L2, built using the op stack, but uses Eigen layer's data availability solution instead of the expensive Ethereum layer one. Not only does this reduce mantle network's gas fees by 80%, but it also reduces gas fee volatility, providing a more stable foundation for Mantle's applications. The Mantle treasury is one of the biggest Dow owned Treasuries, which is seeding an ecosystem of projects from all around the web3 space for Mantle. Mantle already has subcommunities from around web3 onboarded like game seven for web3 gaming and buybit for TVL and liquidity and Onram. So if you want to build on the Mantle network, Mantle is offering a grants program that provides milestone based funding to promising projects that help expand, secure, and decentralize mantle. If you want to get started working with the first dowled L2 ecosystem, check out mantle at Mantle xYz and follow them on Twitter at zero xmantle are you launching a token? Is it already live? How are you managing the legal and tax obligations for providing token grants to your team? It's no secret that token management gets complicated between learning all the legal language and tax obligations. In every country that your team is in, token grant management can feel like an obstacle course, but it doesn't have to.
00:43:04.822 - 00:43:45.182, Speaker A: That's where Toku steps in. Toku provides practical tools to handle token grants, allowing for effective oversight of token distributions and payroll tax compliance for employees, contractors, advisors, and investors. They also handle tax withholdings through their real time tax calculations that can be done by Toku or integrated into any payroll EOR providers in any jurisdiction. Toku is a trusted provider of protocol labs, DyDx Foundation, Mina protocol, and many more. Get started for free and make token compensation simple@toku.com. Slash bankless Arbitrum is the leading Ethereum scaling solution that is home to hundreds of decentralized applications. Arbitrum's technology allows you to interact with Ethereum at scale with low fees and faster transactions.
00:43:45.182 - 00:44:36.162, Speaker A: Arbitrum has the leading DFI ecosystem, strong infrastructure options, flourishing nfts, and is quickly becoming the web3 gaming hub. Explore the ecosystem at Portal Arbitrum IO are you looking to permissionlessly launch your own arbitrum orbit chain? Arbitrum orbit allows anyone to utilize Arbitrum's secure scaling technology to build your own orbit chain, giving you access to interoperable, customizable permissions with dedicated throughput. Whether you are a developer, an enterprise, or a user, arbitrum orbit lets you take your project to new heights. All of these technologies leverage the security and decentralization of Ethereum experience. Web three development the way it was always meant to be secure, fast, cheap, and friction free. Visit Arbitrum IO and get your journey started in one of the largest Ethereum communities. It's everyone's favorite season in crypto tax season, and crypto tax is always an absolute headache, especially for all you dgens out there.
00:44:36.162 - 00:45:16.190, Speaker A: But it doesn't have to be a nightmare. That's where crypto tax calculator comes in, the software built for dgens by dgens. As Coinbase's official global tax partner, crypto tax calculator focuses on making complex transactions into easy ones, supporting over 300,000 currencies across Ethereum arbitrum optimism, as well as a thousand other integrations as well. It's as simple as connecting your wallet, pulling in all your transactions, and following the automated suggestions to quickly and accurately calculate your tax obligations. Plus, for all the airdrop farmers out there. Crypto tax calculator has your back as they are consistently adding support for new and upcoming layer ones, L2s, and all the airdrops that you're currently farming. 2024 is the year where the dgens do their crypto taxes with speed and confidence.
00:45:16.190 - 00:46:10.962, Speaker A: Make taxes this year easy and affordable with crypto tax calculator. Sign up at cryptotaxcalculator IO and get a 30% discount with code Bank 30. Click the link in the show notes for more information. I want to talk about this reserve price just to try and get more of a mental model around it. So if arbitrum sets a reserve price of ten or two or 100, is the significance of that reserve price just arbitram or any other L2, like raising or lowering the threshold of how much they need to be paid in order to be participating in this marketplace, this double, triple, quadruple coincidence of wants. So if somebody is increasing the number, saying that's them interpreting how valuable that their transactions are, and they're setting a threshold for how much value they need to retain in order for even to be included in this marketplace, correct?
00:46:11.016 - 00:46:11.620, Speaker C: Yes.
00:46:11.990 - 00:46:36.940, Speaker A: Okay, so maybe a tariff is like kind of a rough analogy, rough metaphor. But I think where I was going with that is like, this is the sovereignty of one particular chain, making sure that they are receiving what they perceive to be their due amount of value before they are okay with being interoperable with other chains. That's kind of like where I was going with that metaphor. Maybe that doesn't stand. Maybe you don't like that.
00:46:38.030 - 00:46:48.062, Speaker C: I like it. Yeah. I tend to be over precise. I do like the analogy. Okay, cool.
00:46:48.196 - 00:47:32.522, Speaker B: While we're on the topic of sovereignty, is there any loss of sovereignty that might happen beyond economic sovereignty? So you've talked about how economically it does make sense to connect to this network. But is there something else that maybe is lost when we move to shared sequencing? My personal perspective is that there is no loss of sovereignty, and this is something that roll ups, when they're first exposed to this concept, are worried about. But really, there's so many things that roll ups can do, right? They can set their tokenomics. They can choose what their governance is. They can choose all the details around their virtual machine. They can choose how they do Bizdev. They can choose how they allocate their treasury to public goods.
00:47:32.522 - 00:47:43.650, Speaker B: They can do all of these things, and nothing is really compromised. But I'm curious, from your perspective, is there something that they really lose from opting into shared sequencing?
00:47:44.310 - 00:49:03.734, Speaker C: Yeah, my honest perspective, this is net positive. I'll tell you some of the concerns that I'm hearing that I see and I think they're coming from. These concerns need to be, I think, mitigated and considered seriously. I think one of the concerns that I hear is that shared sequencing could create a network effect whereby at some point leaving the shared sequencer could be very harmful for that roll up. If everyone is already used to the idea that being part of a shared sequencer has all these benefits, and then now by leaving it, if shared sequencing does have the ability to create this strong network effect, then maybe chains could lose sovereignty to some degree because they are creating a reality where there's a strong network effect around something that's not just them. Right. The way that I think about this is it's making Ethereum more valuable.
00:49:03.734 - 00:50:03.002, Speaker C: And Ethereum is not an individual roll up, right? So it's, it could have, it could have that effect that if the downsides to being on a different roll up, for example, are now lower because you're part of. Because Ethereum is a shared sequencer for all roll ups, and it could make it less likely that there's one roll up that wins. For example, if you believed that you were going to be the only roll up and there will never be any other roll up, then maybe it is better for you not to participate in shared sequencing. I just don't think that that is a realistic outcome. I don't think there's going to be one roll up. I think there's at least going to be multiple. And I think that it's better for roll ups to focus on being the best roll up stack and playing to their unique advantages.
00:50:03.002 - 00:50:53.006, Speaker C: I think that there's many unique advantages of these different types of ecosystems. For example, ZK rollups have a very unique advantage of being able to enable all kinds of bridging and synchronous composability that can happen on top of a shared sequencer. You can look at ag layer, the proposal from polygon, whereby proofs can be used to basically pass messages between chains. That requires a degree of coordination that can come from shared sequencing. So these things are very nicely composable with each other. ZK sync has this beautiful idea of roll ups sharing a contract. So sharing basically a bridge so that you can bridge assets easily from one roll up to the other without going through the l one.
00:50:53.006 - 00:52:01.870, Speaker C: This is also complementary to shared sequencing. So I think by roll ups focusing on their own unique advantages and building the best stacks and getting customers because they're the portal to customers, they're the portal to chains. Rather than trying to just be the only roll up out, there is a better move. But I just want to acknowledge the concern that I'm hearing, and I think it's coming from a valid place. I think the other thing that I hear as a risk or downside of shared sequencing is that it will create a hyper centralized builder market. I think that the concern is really not over shared sequencing, even though people think it's over shared sequencing, but rather the concern is over what we actually want, which is if you make ethereum more valuable and it's really acting more like one chain, right. Then there will naturally be parties that rise to influential roles through competition.
00:52:01.870 - 00:52:54.580, Speaker C: There will be some party that's able to create the most economic value across all these different roll ups that are now more interoperable with each other. And if the roll ups were more isolated from each other and those interactions were not possible, then maybe there wouldn't be one party that rises to that role. But I think we should find ways to address this more directly. Rather than shying away from basically creating more economic value overall for everyone, we should address those concerns. How do you avoid having parties individually gain a ton of influence? How do you avoid censorship? And I think that we are addressing those through the design at least of the espresso shared sequencer. I know that's something that Justin wanted to touch on a bit as well, so I'll pause there.
00:52:55.350 - 00:53:45.974, Speaker B: Right, so I guess on the first point that you brought up, you're saying that it's very unlikely that we're going to have just one single roll up. They're going to win everything. The way that I think about it is there's going to be a very rich long tail of virtual machines. There's going to be virtual machines that are specialized for gaming, those that are specialized for trading, those that are specialized for whatever it is. And in some sense, shared sequencing is all about diversity, right? It's all about saying we won't have one single virtual machine that will win everything. And it's not just about diversity of virtual machine, but it's also diversity of the tokenomics and the public goods, funding and all there is with the package of a roll up. But the other thing that you're saying, I guess, is that the l one will always exist, right?
00:53:46.172 - 00:53:46.920, Speaker C: Yes.
00:53:48.170 - 00:54:37.190, Speaker B: And so there's going to be some amount of assets that might never migrate from l one. Think of Ens, for example. The root of truth of Ens might always be the l one, just for historical reasons and because of maximum security. The same might be said for large whales. They might always choose to just have their treasuries, or whatever it is on l one. And so in some sense, we had this really awkward plan before, where we would migrate everything asynchronously from the l one and the l two, and in the process break network effects. But now we have this in some sense better plan, which is that we can smoothly migrate assets from l one to l two, and everything stays synchronous, and we won't be breaking network effects.
00:54:37.190 - 00:54:58.060, Speaker B: Now, on that point of composability with dr. One, there was some sort of a technical shift from Espresso's perspective. And I alluded to this at the very beginning, that there might be some sort of a pivot or an announcement, and I want to give you the opportunity to voice that.
00:54:58.510 - 00:56:50.314, Speaker C: Yeah, so I mentioned it at the beginning, but originally we were thinking of espresso as just a replacement for centralized sequencers, a shared decentralized sequencer that would have participation from e three stakers through Eigen layer. And we thought that this was different than the narrative that you were describing as base roll ups. But I think that as we got to understand base roll ups more, and as the concept of base roll ups evolved to also try to introduce things like pre confirmation layers on top of base roll ups, and as we came to defining from a higher level perspective, like, what are the things that we really are trying to get from base sequencing, right, better security liveness inherited from the l one, and most importantly, composability with the l one, so that the L1 can have synchronous interactions, ethereum itself, the EVM, the L1 can have synchronous interactions with roll ups, not just roll ups between each other. We realize that those are properties that we can achieve while retaining the unique advantages of the espresso design. And so that's what we've done now with the design. In hindsight, it only required some subtle changes, but I think that the impact is massive. And basically what we're doing now is, in addition to having this high throughput consensus protocol that can be run by e three stakers, we also allow the proposer to be the l one proposer.
00:56:50.314 - 00:57:42.898, Speaker C: Now, the way that we do this is after running this auction that I described, whereby roll ups are basically allowing third parties to bid on joint block space from the roll ups. We give the l one proposer of the next l one block, what I like to call a right of first refusal. So the L1 proposer has the option to purchase proposal rights from any individual roll up or even purchase the winning bundle that comes out of this auction. So let's say the outcome of the auction is a bundle of all the roll ups that's going to be produced, or a collection of different bundles. So some partition of the roll ups into bundles. The l one proposer can come and buy the rights for all those bundles at the winning bid price. So it still has to pay for it.
00:57:42.898 - 00:58:37.230, Speaker C: We still get this mev redistribution, so we still capture the mev in the protocol. Some of it goes, of course, to the l one proposer, mainly the surplus value that the L1 proposer is now creating by enabling more interactions with the l one itself. And yet we retain also, and I described this in a post in greater detail, I think we'll be going a bit too much into the weeds to describe how this is done, but we still retain the fast finality that comes from the espresso sequencer. But it becomes this conditional finality conditioned on published l one blocks. So roll ups now know that certain transactions are final unless some published Ethereum l one block reorgs.
00:58:37.390 - 00:59:20.106, Speaker B: Okay, let's talk about this fast finality, because that's a whole new topic. But I just want to very briefly summarize what you just said, which is that each l two individually generates some value. But once we consider the l two s together, there's, like this excess value that's created, and that's all well and good, but now, in addition to the l two s, the pure l two s, the l one proposer can join the game and create even more value on top of that. And we're basically giving the option for every l one proposer to play this game and add even more value when they can. Now, the other thing that you alluded to is this idea of fast finalities.
00:59:20.218 - 01:00:17.982, Speaker A: Justin, can I also just kind of do my attempt at kind of explaining the topology of the network that I'm seeing here? So we have the base Ethereum chain kind of thinking of this as just like the planet, and then we have some ball at the very center when it's got all of its validators. And then we have the vertical L2s spawning off of the base chain. And so multiple L2s are horizontally scaling. We have L2s individually, which are vertically scaling. And then we have this espresso middleware layer between the L2s, which is like this higher level plane that is producing this double, triple, quadruple coincidence of wants between two, three, four different roll ups. And so kind of how we were talking about Ethereum is this minimum viable composability, because it's all the way down at the bottom of the stack. We have this new level of composability that espresso is establishing at a higher plane between the L2s.
01:00:17.982 - 01:01:26.470, Speaker A: So we have these vertically spawning L2s coming out of this base chain that is Ethereum, and then we have a higher plane that is producing composability between all of these L2s. And that was like, what espresso has been building is building, is continuing to build. But what you are announcing, what you're talking about, your not pivot, but additional scope for espresso, is that when layer one proposers are also integrated into espresso, when they are also becoming a shared sequencer opportunistically, whenever some layer one block proposer, Ethereum validator is proposing a block, and that proposer is also part of the shared sequencer that is espresso, then we also get to include the Ethereum as one of these marketplaces that produces coincidences of wants into the shared system. And it's not every single block, because not every single proposer is going to be a part of Espresso, but when they are, they can join the marketplace that espresso is establishing higher up across the L2s. I think that's kind of like my version of explaining this whole thing.
01:01:26.540 - 01:02:54.530, Speaker C: Yeah, that was said exceedingly well. Yes, that was spot on. And just to come back to this, even though it might look like a subtle architectural change, I think the impact is massive, because now roll ups that are running on espresso are based roll ups, it can be a choice that roll ups make. So if a roll up, for example, is running on the espresso sequencer and decides that it wants to build its state off of an old Ethereum state, so if it wants to build its state off of an Ethereum state, this has already been finalized by Casper, for example, the impact of that would be that bridge transactions would have to be delayed, so they would be queued and would be delayed and would not materialize inside the roll up for, I don't know, say 15 minutes, if they're waiting all the way for Casper finality. And they wouldn't benefit from the fact that we're involving the l one proposer in the Espresso protocol. On the other hand, if a roll up decides to, and then the benefit to that roll up would be that it enjoys the fast finality that comes from the espresso pre confirmation layer. This BFT finality gadget called hotshot, that is being run by restaked nodes.
01:02:56.250 - 01:02:56.662, Speaker B: They.
01:02:56.716 - 01:03:55.190, Speaker C: Would get very fast finality from that. There would be no risk of transactions being reversed if Ethereum reorgs because they're building off of a finalized Ethereum block. On the other hand, what they would be missing out on is the opportunity of an l one proposer to build simultaneously at an X Ethereum block and their block, and enable atomic interactions between them. So, based roll ups would choose to use espresso and in a mode where they are building off the latest Ethereum state, and then espresso is giving them finality conditioned on published Ethereum blocks. It's a slightly different type of finality, but it's still very strong, and it achieves a very nice balance between the additional composability you get with the l one and the finality that users want. And you can make up for the difference with insurance. So pre confirmations are basically an insurance that proposers sell to users to remove their risk.
01:03:55.530 - 01:05:14.080, Speaker B: So, just to translate what Ben said, in my own words, there's two flavors of finality from the perspective of an l two, you can have finality which is unconditional, and you can have finality which is conditional on the l one reorgan or not reorgang, I should say. So if you want to have synchronous composability with the l one, there actually is a cost, which is that, what if you make a pre confirmation? That depends on the state of the l one, and then the l one itself kind of rugs you, the l one reorgs. Now, one of the things that we're working on is this idea of single slot finality, whereby the l one can't reorg very, very deeply. And more specifically, what single slot finality gives us is, at least the latest design gives us a reorg depth of three slots. So even though we have a block which is finalized, at every single slot, there is a little bit of latency, a little bit of delay. And this delay is three slots, so that's 36 seconds. And so that's as much as could be reorged in some of the worst cases possible.
01:05:14.080 - 01:05:47.050, Speaker B: Now, one of the things that Ben keeps on alluding to, and I really want to dig into that, is this idea of fast l two finality. So right now on l one, we have these twelve second slots, and it takes several slots to reach finality. So it might take, let's say half a minute to reach finality. But what if you are doing pure l two transactions? So l two transactions that don't touch the l one, can we have basically shorter block times and faster finality for those pure l two transactions?
01:05:47.390 - 01:06:21.462, Speaker C: Yeah, we can. So the way that that works, and this is unique to espresso's version of based sequencing. Let's look at what vanilla based sequencing would look like, where the transactions are. We're only adding l two transactions through published l one blocks. Okay, so let's say we have a block, block twelve on Ethereum, and this includes some l two transactions, some l one transactions. After block twelve is published. We know the state of Ethereum l one.
01:06:21.462 - 01:07:04.260, Speaker C: We know the state of these roll offs. Now the next block, block 13, is under construction. There's some proposer for the l one that's producing it and it's also adding transactions to the l two. Well, these transactions that are being put into this block 13, even after they're published, let's say, are not final conditioned on block twelve. They're final only conditioned on block 13. So if block 13 were to be reorganed or it were missed, or it were just lost and some other block were produced in its slot, building off block twelve, all the transactions included in block 13 would go away. They would be gone.
01:07:04.260 - 01:08:21.934, Speaker C: This is something that in today's architecture with centralized sequencers, doesn't happen because the smart contract gives sequencing rights to a centralized sequencer who is able to say these are transactions are going to be in this rollup no matter which way Ethereum reworks espresso is able to do the same thing. So the way that transactions are pure l two transactions are added is through the espresso BFT finality gadget. Even an l one proposer who is adding on transactions is going to get them finalized first through this BFT finality gadget, which we can think of as a flavor of pre confirmations too. It's something that's happening between all the l one validators that have opted into this protocol and are participating in it. And you can, even before this block 13 is published, continue to build on the l two states after the published block twelve that will be final. No matter what is published next on Ethereum, as long as block twelve doesn't reorg, those transactions will be included on any fork of Ethereum. Because they're built off the l two state, they're not affected by what happens after block twelve.
01:08:21.934 - 01:09:05.226, Speaker C: They happen logically before whatever comes after block twelve and their final condition on it. That's one of the unique contributions of Espresso's design of base sequencing that I think is very valuable, especially considering that you're going to have, I mean, the natural pattern is that you're going to have updates on the l one, and then you're going to have a flurry of activity on the l two, and then you have another update on the l one. Now, importantly, we also enable this synchronous interaction so whoever's constructing block 13 can also, once we have real time proving, which is coming, I think, I truly believe that real time proving is coming. 100 millisecond latency proving is coming just.
01:09:05.248 - 01:09:19.710, Speaker B: As a piece of context here. Ben is a hardcore cryptographer, trained as a professional cryptographer, and has made a lot of contributions specifically on snarks and folding schemes and recursive proofs.
01:09:20.370 - 01:09:22.206, Speaker C: My side hobby is writing papers on.
01:09:22.228 - 01:09:28.020, Speaker A: Snarks, but same, I love that in my spare time.
01:09:29.110 - 01:09:55.002, Speaker C: But once we have real time proving, then you'll be able to have deposits from the l one into the l two and withdrawals into the l one within the span of one ethereum block. And that's only what base rolls can do. So we can still do that, but we can also have between published Ethereum blocks, many l two transactions finalized, conditioned on this already published thing. Yeah, so that's the idea.
01:09:55.136 - 01:10:05.850, Speaker A: So with base proving that one example, that means you could take a flash loan on the layer one, do some activity on the L2, and then pay it back on the layer one inside the same block. Is that what it unlocks?
01:10:05.930 - 01:10:11.694, Speaker C: Once we get real time proving, we'll be able to do that. Okay, that seems like a very high.
01:10:11.892 - 01:10:13.698, Speaker A: It seems like a gold standard of.
01:10:13.784 - 01:11:04.622, Speaker C: Yeah, and this is going to happen. There's many projects out there that are working on Asics for proving. Also with the innovations in recursive proving, you really only need low latency on the construction of this final proof that summarizes all the individual proofs that happen. So it's getting a little bit into the weeds. But if you're the l one proposer and you're constructing an l one block and also the l two blocks at the same time, you will make some l one state transitions. So you'll have some l one transactions to the EVM that you'll maybe do a deposit, you'll pass a message along with a proof. But this proof is not small, it's like very large, and it was really easy to produce and it doesn't need to be small because it's just in your head.
01:11:04.622 - 01:11:35.900, Speaker C: As you're constructing this, you pass that message and this proof to the l two. You do some l two transactions, you pass another message to the l one that does a withdrawal. It also has this large, easy to construct proof that's still just in your head. And at the end, you take all these proofs that were just in your head, and you summarize them into one small proof. And it's that final summary, that final compression of these large in your head, easy to produce proofs that needs to be done in like 100 milliseconds. And we're going to have the hardware to do that soon. Okay.
01:11:36.350 - 01:11:53.134, Speaker A: Understanding at a high level how these systems work, somebody here in the actual running of the hardware, somebody here is extremely well networked with extremely strong computational resources. Right. That's just my intuition. Is that check out?
01:11:53.172 - 01:11:53.422, Speaker B: Yeah.
01:11:53.476 - 01:12:34.160, Speaker C: But that's also something that it can be outsourced. So if I'm the proposer, I don't necessarily need to be extremely sophisticated if I can outsource some of this job to someone else. And this goes back to how we were talking earlier about how someone becomes a proposer. It's best done through some kind of economic mechanism that assigns the proposal rights to those who are able to create the most value. You want to do it in a way that they don't have a monopoly. It's easy, it's competitive. There can be multiple of them.
01:12:34.160 - 01:12:55.860, Speaker C: Maybe we should talk about censorship next. But I think that the entities that are going to be producing these blocks will be from a more sophisticated subset, but it will be done in a way that doesn't result in censorship or centralization, in trust. Right? Yeah.
01:12:56.470 - 01:13:53.638, Speaker B: And this is basically all the research that we've done with proposer builder separation. The proposer can run on a raspberry PI with a home Internet connection and still tap into the most sophisticated sequencer and builder market in the world. And sure, there's extreme sophistication on the other side of PBS, but that is segmented away and isolated so as to not corrupt the decentralization of the proposer set. And one of the very important things is that these builders and sequencers can't censor through mechanisms like inclusion lists and encrypted memp pools. And David, you mentioned the flash loans, and this is something I want to highlight as being the litmus test of essentially perfect composability. If you can do a flash loan across roll ups, then you've solved it, and we can do that. So we can have, for example, a flash loan of a million e that originates at L1.
01:13:53.638 - 01:14:16.362, Speaker B: You deposit that into roll up a, you buy some tokens, you send all of those tokens to roll up b. So you withdraw from a deposit into b, and then you sell those tokens for, let's say, a million and one e, and then you pay back the billion e at l one, and you make a one e arbitrage profit. All of this as a flash loan.
01:14:16.506 - 01:14:23.198, Speaker A: And this is not a research problem. This is an engineering problem. Is that where we are in this development roadmap?
01:14:23.294 - 01:14:54.810, Speaker B: Correct. This is purely an engineering problem. And just a few weeks ago, we've had this announcement from Axial, which is a manufacturer of snark proving asics, that they have their first ASIC. It's physical. We can touch it. And that actually, there's photos on the Internet that you can go and find. And not only that, but there's two separate projects that are also looking to build a snock proving ASIC for 2024.
01:14:54.810 - 01:15:24.398, Speaker B: That's fabric and sci. And once we have that, it's a massive unlock. And one of the things to highlight here is that the snock proving ASIC doesn't have to be trusted for safety. Right. Like, the whole point is that the stock proofs that are generated are totally trustless. They're like mathematical proofs. The worst thing that could happen is that for some reason, all the asics from all the manufacturers just suddenly blow up and combust.
01:15:24.398 - 01:16:23.186, Speaker B: And then now you have to fall back to things like gpus and cpus, which have higher latency. But if we're in a position where we have diversity of manufacturers, just like we have diversity of clients, then there's no reason why they will all suddenly blow up. Now, another thing that I want to touch on is basically this question of finality and ux. So I had this opinion that it's actually okay for the l one to have long block times and for finality to take a long time. So you can think of the l one as being this ultra strong and decentralized settlement layer. And that means that finality takes a little bit longer than other chains can provide. But the reason why I think this is acceptable is because you can have pre confirmations that are on the order of 100 milliseconds.
01:16:23.186 - 01:16:57.326, Speaker B: So you have the best of both worlds, the ultra strong security plus the 100 millisecond latency from a UX standpoint. But what Ben is saying is that you can have even more than that. You can have this low latency finality, specifically for transactions that are pure l two, meaning that they don't touch the l one. If they start touching the l one, then yes, you start suffering maybe half a minute of latency for achieving finality. But if you're a pure l two, then you have 1 second, two second types of latency for finality.
01:16:57.438 - 01:17:07.350, Speaker C: And in all cases you still get the fastest pre confirmations from the proposers, which can be 100 milliseconds, but backed likely by less economic.
01:17:09.930 - 01:17:10.680, Speaker A: Value.
01:17:11.450 - 01:17:35.470, Speaker B: One final topic that I think is worth discussing is this idea of censorship resistance. We mentioned that there is potentially this hyper centralized builder and pre confirmer market, but I think in our discussions you've alluded to a potential clever solution, some sort of mitigation to that problem. Do you want to walk us through that?
01:17:35.620 - 01:19:14.094, Speaker C: Yes, it turns out to be the same solution that enables this mev redistribution. So we were talking earlier about how we have this auction that assigns roll up block proposal slots to shared proposers, and I say shared proposers with an S plural, because there's one special outcome where there's one individual proposer who bids the highest on all these different roll ups. But we could also have multiple proposers who jointly partition the roll up space into a collection of different bundles. And that's very important when it comes to talking about censorship concerns. So one of the concerns that we hear people talking about is, well, I'm worried that if there's only one proposer that is going to be proposing for all roll ups, then they will just ignore my roll up because it brings them too much risk for some reason. Maybe it's some jurisdictional reason, and that's concerning, right, we'll be left behind. Well, if you are finding the most efficient economic allocation of roll ups to multiple proposers, then that will not happen, because the superbuilders, let's say, who are only interested in these five roll ups and they're just simply not interested in touching any transactions on this other roll up, will not bid on this other roll up.
01:19:14.094 - 01:19:54.314, Speaker C: They'll bid on the bundle of these five roll ups and somebody else will bid on this other roll up. So as long as there is always a market for this other roll up, and in fact there's a special case, it can be that roll up itself. Right? So if you were going to run your own centralized sequencer or your own decentralized sequencer solution, then there already exists a market for running your roll up. And that's not taken away when you join this shared sequencer mechanism. And this is only possible with a solution that doesn't force one proposer on all the roll ups, but rather finds the most efficient economic allocation. So there is this additional censorship benefit. I think that a lot of people are missing that.
01:19:54.314 - 01:19:58.234, Speaker C: So I'm glad that we got to talk about that today. Right.
01:19:58.272 - 01:20:17.220, Speaker B: So there's two different kinds of censorship resistance that we care about. The first one is around making sure that transactions get included on chain. And for that we have this really neat solution called inclusion lists. So, yes, you can always get your transactions on chain, even if it's some sort of censored roll up.
01:20:18.870 - 01:20:19.330, Speaker C: Yes.
01:20:19.400 - 01:20:58.654, Speaker B: Now, the other concern that we have around censor resistance is censorship resistance of the pre confirmations. Right? Like this 100 millisecond ux. We want to make sure that everyone has access to that. And what you're saying is that if we have a super sophisticated preconfer that happens for, let's say, regulatory reasons, to not be able to provide pre confirmations for one specific roll up. Well, that's fine. What we can do is we can have a second preconfer that is going to step up and say, I will provide pre confirmations for this sensor roll up. And sure, somebody will bid on it.
01:20:58.654 - 01:21:20.440, Speaker B: Yes, somebody will bid on it. And so you still have this 100 millisecond ux. And the reason why it's compatible to have two simultaneous preconfers is that they are actually acting on disjoint pieces of states. So whatever preconfirmations they individually give will never conflict with each other.
01:21:20.810 - 01:21:24.338, Speaker C: Correct. Right. It kind of sounds like maybe there's.
01:21:24.354 - 01:21:50.462, Speaker A: A similar pattern here to the meme that I brought up earlier about ethereum, the layer one as the foundation of composability, and it's also the foundation of censorship resistance. And with additional mechanisms that high watermark, that tide level increases up the stack for censorship resistance properties, we just kind of need to build it and integrate it. It sounds like a similar pattern I'm sussing out here.
01:21:50.516 - 01:21:53.198, Speaker C: Yeah, no, yeah, I think so.
01:21:53.284 - 01:22:17.790, Speaker A: Guys, this has been an immensely educational episode, I think just with the overall direction and also some of just like the more down the rabbit hole details. Lots of things, lots of positive things to get out of this. Is there anything that we lose? Like system blockchain? Systems are systems of trade offs. What are we trading off to get some of this stuff? Maybe, Justin, you can talk about some high level patterns, and then we can go to Ben for some more nuanced details.
01:22:17.890 - 01:22:18.154, Speaker C: Sure.
01:22:18.192 - 01:23:12.620, Speaker B: Yeah. I think it is important to talk about potential downsides of espresso's approach to counterbalance some of the upsides, two that come to mind are, number one, we're introducing an honesty assumption, right? So in order for this off chain fast l two finality to happen, we're assuming that half of the espresso validators are online and honest. I guess one of the questions is what happens if they go offline? What happens if they're dishonest? And then I guess the second kind of potential downside is the fact that we're dealing with restaking here, and that might come with risks that are associated with restaking. So throwing the ball to you, Ben, to address the.
01:23:15.150 - 01:24:29.220, Speaker C: Think that when we talk about downsides, I think that downsides are sort of a relative term, right? So we should be looking at, well, downsides compared to something else. So I look at it more as trade offs. What are the trade offs in the design space? Right. And certain trade offs may matter differently to different people. So it's just good to be informed about the trade offs. Espresso sits between pure original idea of base sequencing and the centralized sequencing that roll ups do today, in the sense that when it comes to, I guess, liveness, it does involve this additional BFT protocol that has authority over updates to the roll up smart contract. And so even the L1 proposer who's constructing the next l one block can't just stick in transactions into the roll up contract on its own, and it can do it through inclusion lists, but it can't just update the role of contract on its own.
01:24:29.220 - 01:26:02.960, Speaker C: It has to get not the approval of a centralized sequencer, but the approval of the BFT gadget that is being run through espresso. And so the concern or the trade off that Justin was pointing out is what happens if the BFT gadget is not live right now you have this other thing that can stall progress. And so that doesn't mean that everything loses liveness entirely, because what you can do is if the BFT protocol is not live for a certain amount of time, then you can just allow the L1 proposer in a future slot to take over and inject transactions. And this is similar to the design of force include transactions or escape hatches for roll ups, because the same concerns arise with a centralized sequencer that may go down, but that ends up being a trade off, right? Because while you don't lose liveness entirely, there is still a chance that in some slots, even if the l one proposer of Ethereum is ready to go, it will not be able to make progress. On the l two because the BFT protocol is down. That's a trade off. The benefit of course, is what we already discussed, that now you can get this high throughput and fast finality for pure l two transactions, the same benefits that you get from centralized sequencers today.
01:26:02.960 - 01:26:10.686, Speaker C: So that was the first concern that you brought up, Justin.
01:26:10.878 - 01:27:03.330, Speaker B: Yes, and let me just summarize this one before we move on. What you're saying is that if the BFT consensus protocol loses liveness, let's say more than one third of the espresso validators go offline. Well, for some period of time, the rollups can't advance because they need the certificate of finality from espresso in order to move on. But what we can do is basically have a timeout. So if we've detected that the BFT has been down for let's say five minutes, well, we just turn off all the goodies that espresso provides. So there's no more mev redistribution, there's no more fast lt finality. And we kind of fall back to this plain vanilla based sequencing which is maximally robust and maximally live, but doesn't have these additional goodies.
01:27:04.810 - 01:27:46.670, Speaker C: Well, you don't turn off all the goodies necessarily, because the BFT gadget is separate from the mev redistribution mechanism which is assigning the proposer. So you still have that mev redistribution mechanism because this is an auction that's being run to determine who gets the proposed, and then that might be bought up by the l one proposer. It's the BFT gadget that's being used for this fast finality property that we get from centralized sequencers. And if that goes down for some period of time, you can turn it off and you won't get fast finality, but at least you can make progress.
01:27:46.830 - 01:28:02.434, Speaker B: Okay, interesting. That's a detail I didn't realize. So you're saying that the redistribution aspect only relies on the l one. It's some sort of l one auction that's happening. It does not rely on the BFT. And so even if the BFt is broken, you still have the redistribution.
01:28:02.562 - 01:28:03.094, Speaker C: Right.
01:28:03.212 - 01:28:10.200, Speaker B: Okay, perfect. So I guess the second topic is risks around.
01:28:10.890 - 01:28:23.870, Speaker C: Oh, risks around restaking. Right. Maybe elaborate first and then I can comment because maybe explain your concern around restaking and then I can add color. Right.
01:28:23.940 - 01:29:22.534, Speaker B: So there's two, I guess, classes of restaking risk that people are concerned about. One is around removing the level playing field that we currently have with staking. So for example, if restaking requires very high hardware requirements or lots of capital or things like that. It increases the barrier to entry and provides an uneven amount of APR for different entities. A separate class of restaking risks is around massive catastrophes and mass slashing. Let's say that millions of e suddenly get slashed. Does that mean that the l one has to come in? The l zero has to come in, the social layer has to come in and do a bailout, which would be extremely messy and expensive.
01:29:22.682 - 01:30:19.220, Speaker C: Right. Yeah, no, I've heard this concern as well, and I think that could be a valid concern. This idea that we need to be careful not to overload social consensus when it comes to this additional role that restakers are playing, I think that it's important to consider the extent to which we are relying on what these restakers are providing. Right. So when we talk about pre confirmations, for example, from a proposer, a proposer has restaked some youth collateral and is making some kind of promise to users, and they may violate the promise. And there are risks here. There aren't like, inherent risks here.
01:30:19.220 - 01:30:42.858, Speaker C: And it's maybe an improvement on the status quo of not having a pre confirmation. But we can consider the worst that can go wrong and whether we really would need some kind of social consensus to come in and correct for things or not. I'm curious, Justin, how you would sort of look at this.
01:30:43.024 - 01:31:30.710, Speaker B: I mean, recently I've been more and more optimistic about restaking because I feel that there's been a decoupling, a potential decoupling between staking and what's known as restaking. In some sense, restaking is a little bit of a misnomer, because you could put forward any asset as collateral. It doesn't have to be eth, and you don't necessarily have to be staking. You don't have to be a validator. You could just put raw e for whatever you want. And so really, the class of restaking applications that from a research standpoint I'm focusing on today is those where you specifically have to be a validator in order to participate in a given avs. And I think that's going to be the vast minority of applications.
01:31:30.710 - 01:32:11.480, Speaker B: What I mean is that the vast majority of the time, you can not be a validator and still participate in an abs. But espresso is one of these exceptions where really, you do need to be a validator. You specifically need to be, for example, an l one proposer or an l one attester in order to come in. But now that I'm saying all of this maybe this is not the case. Maybe we don't need the attestors to come in. We could just have random people who are not validators come in with collateral above and beyond or separately from the.
01:32:12.970 - 01:32:59.062, Speaker C: So the, let me just, I guess, clarify one point on the design of these attesters in espresso. So to be an attester to participate in this BFT finality gadget that espresso provides, you can stake one of two assets. You can stake espresso tokens, you can stake eth. You don't have to be an l one proposer in order to do this. We give the l one proposers this right of first refusal over proposal rights. But for a testers, there isn't anything that says, oh, you have to be validating for Ethereum. It's just that you can use your stake for Ethereum, you can restake it to participate as in test.
01:32:59.062 - 01:33:45.902, Speaker C: You can also restake espresso tokens. What we do is we will determine the ratio of weight between your east and your espresso. That will determine how much weight we assign to EtH versus espresso. And you can think of this is called a dual staking model by Eigen layer. And I think what it's very useful for is bootstrapping, where initially the capital requirements to have 32 ether ready staked for Ethereum and then restake it for espresso is quite high. So you might not get a lot of participation until there's a lot of activity on the system. But if you have the option of coming in staking a different economic asset, then it can help with getting that initial participation.
01:33:45.902 - 01:34:00.250, Speaker C: And then the economic activity on top of the system will increase. And eventually at some point more e three stakers will join and then predominantly the security is coming from east and not from something else.
01:34:00.400 - 01:34:17.070, Speaker B: Okay, understood. So what you are saying is that actually the collateral doesn't have to come from stakers, it doesn't even have to be eth. And so there isn't this tight knit relationship that you're building with the attestus specifically.
01:34:17.730 - 01:34:43.654, Speaker C: Yeah, I mean, I think I view e three staking as a subsidy for ETH validators to participate in contributing security to the system. Right? So if you're already staking for Ethereum, then you can reuse that capital to also contribute security to this pre confirmation layer. But you don't have to be one of those nodes. You can just stake a different asset to participate. Right.
01:34:43.692 - 01:35:40.974, Speaker B: So just to provide a little bit of context as to why I'm asking this question is because there is a potential upgrade to Ethereum where we do what's called stake capping or stake targeting, where we adjust the amount of issuance to go down to zero or even down negative, for example, ten towards negative infinity as you start getting close to a cap. And in that context, if the issuance is actually negative, meaning that you need to pay for the privilege of being a validator, then it actually doesn't make sense to be restaking as a validator. What makes more sense is that you withdraw your eth and then you stick it into an avs directly so that you don't have to pay this negative yield. And in the case of espresso specifically, you would do this because you're not forced to be an l one attestor in order to be an espresso attestor.
01:35:41.122 - 01:36:35.420, Speaker A: Guys, this has been extremely all encompassing. I think this is bringing in a lot of different innovations that are all happening in parallel around the Ethereum sphere. The progress of L2 s, both in their technical prowess, their technical capabilities and their sheer number, along with Eigen layer restaking along with just composability innovations that's been going on. Justin Ben, this has been fantastic. Maybe one last thing to explore, which is further explorations. What didn't we touch in this conversation that might be left for future conversations? What is left to explore? What are some other unknown unknowns that are out there? I guess it's impossible to ask you about unknown unknowns, but what are the known unknowns? Justin, if we were to do like another episode in maybe two, three months, six months, what topics would you like to see more clarity on as we progress forward into the future?
01:36:35.790 - 01:37:33.950, Speaker B: Right, so one of the things I've realized recently is that there's all sorts of gadgets that can augment and improve the shared sequencing. One of them that was mentioned by Ben is this idea of the aggregation layer by polygon. It's this really clever trick where you can have very strong safety in the context of pre confirmations. The pre confirmer can't rug you to the same extent that they can today if they are willing to get slashed. Another really interesting innovation, which Ben also mentioned is from ZK sync, is this idea that roll ups can share deposits. So if you want to withdraw from roll up a and deposit from roll up b, you don't have to go through the l one and you don't have to pay the very high l one gas to do so. You directly do it from l two to l two and not pay this l one gas.
01:37:33.950 - 01:37:50.510, Speaker B: And then I think another key part of the puzzle is going to be around real time proving and all the hardcore engineering that goes into this, including innovations on recursive proofs and folding, as well as innovations on terms of hardware acceleration.
01:37:50.670 - 01:37:54.478, Speaker A: Ben, same question to you. What further topics would you like to see explored?
01:37:54.654 - 01:39:32.580, Speaker C: Yeah, well, just to echo what Justin said, I think it would be really great to discuss how shared sequencing is important and complementary to proof aggregation that's been described by Polygon, shared bridges that's described by Zksync, all kinds of other add ons that work very nicely together with a coordination layer, which is what shared sequencing is. I think it would also be cool to touch more on these pre confirmations and what you can do with them and how they function. They can function as insurance, not just something that has some kind of bond behind it that gets slashed. The other idea that we haven't touched on is how multiple nodes can, through threshold sharing of a key. So this is called distributed DVT or distributed validator technology can actually control a single proposer. And so it would be good to talk about what you can get out of that when these now distributed validators, or distributed proposers, no longer validators really just proposers, are making some kind of pre confirmation promise. You can get into this idea of like a threshold insurance policy that can only be violated if a certain threshold of these nodes violate the policy or only becomes active once a threshold of these nodes sign and basically create this insurance policy.
01:39:32.580 - 01:39:50.306, Speaker C: So there's all kinds of extensions to this, both on the pre confirmation layer, on how shared sequencing as a coordination layer interacts with proof aggregation, shared bridges, et cetera. All great topics to talk about as a content producer.
01:39:50.338 - 01:40:11.742, Speaker A: One of the most beautiful things about Ethereum is that there seems to be cambrian explosion of surface area for conversations going in every single direction at all times. Today, one of these episodes is definitely an example of that. Justin, Ben, thank you guys so much for illuminating such an important future of Ethereum's roadmap and also giving me so much more to talk about in the coming months and years. I really appreciate it guys.
01:40:11.876 - 01:40:14.586, Speaker C: I appreciate being here. David, it was really a pleasure.
01:40:14.698 - 01:40:16.090, Speaker B: Thank you, David. Thank you, Ben.
01:40:16.170 - 01:40:28.994, Speaker A: Bankless nation. You know the deal, crypto is risky. Layer twos are risky. The space between L2s doesn't even exist yet. And when it does, it will also be risky, but it will also be a little bit more composable. You can lose what you put in. We are headed west.
01:40:28.994 - 01:40:33.460, Speaker A: This is a frontier. It's not for everyone. But we are glad you are with us on the bankless journey. Thanks a lot.
