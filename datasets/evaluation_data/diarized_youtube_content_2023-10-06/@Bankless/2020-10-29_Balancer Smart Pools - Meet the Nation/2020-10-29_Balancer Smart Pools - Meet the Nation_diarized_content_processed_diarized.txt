00:00:00.250 - 00:00:42.938, Speaker A: Unstoppable domains has two products that's helping make the crypto world feel like the old world that we're familiar with, but with these new crypto economic protocols under the hood and that is human readable crypto addresses as well as uncensorable domains. So I've got my unstoppable domains account open here and I've got my domains registered and so I've got David Hoffman crypto, right? And I have my one of my Ethereum addresses pointed to it and I'm also going to be able to add my bitcoin address here as well because this is a blockchain agnostic product. Any wallet that has unstoppable domains integrated will allow you to type in Davidhoffman crypto. And if you're sending bitcoin or if you're sending ETH or litecoin or hell, even ripple, it will send it to the address that I've associated on my account. So I'm going to pull up my ether wallet here and I've loaded up an address with a small amount of.
00:00:42.944 - 00:00:44.378, Speaker B: ETH and I'm going to send a.
00:00:44.384 - 00:01:04.346, Speaker A: Little bit of ETH to myself at Davidhoffman Crypto. It's going to populate with the Ethereum address that it has, but it's also linked to my Twitter account because in unstoppable domains I've linked my Twitter account to all of the addresses that I've plugged in. And so Chainlink is actually associating my Twitter account with my ethereum address. And these are the web two platforms.
00:01:04.378 - 00:01:05.034, Speaker B: That we have today.
00:01:05.092 - 00:01:25.446, Speaker A: But think about what happens when decentralized identity becomes more of a thing. I'm sure unstoppable domains is going to use decentralized identity solutions like bright id or circles to associate addresses with people in an extremely self sovereign way. Unstoppable domains also allows you to spin up uncensorable websites, which is, I think, going to become increasingly important in the.
00:01:25.468 - 00:01:26.310, Speaker B: World ahead of us.
00:01:26.380 - 00:01:50.190, Speaker A: Using unstoppable domains you can purchase a website and use decentralized storage providers to host it as well, meaning that no nation state can take down your website. There is no canceling in unstoppable domains world. They even have templates ready to go to help you build out your first unstoppable domain. So go to unstoppabledomains.com, register your crypto addresses with a human readable name and maybe launch your uncensorable website today.
00:01:50.340 - 00:01:52.046, Speaker B: Zapper is this new tool that I.
00:01:52.068 - 00:02:02.014, Speaker A: Use to check out all of my assets in Defi. As you guys have known, Defi has absolutely exploded recently. And so managing your assets is getting harder and harder because there's so many different places and so many different assets.
00:02:02.062 - 00:02:02.850, Speaker B: That it could be.
00:02:02.920 - 00:02:08.690, Speaker A: So I'm going to put my Ethereum address in here and Zapper is going to tell me where all of my assets are across Ethereum.
00:02:08.770 - 00:02:09.254, Speaker C: Right?
00:02:09.372 - 00:02:19.586, Speaker A: So here are all of the assets in this wallet. There's a decent amount of them. And it's also going to tell me where I've deposited assets into various Defi protocols.
00:02:19.618 - 00:02:19.814, Speaker C: Right.
00:02:19.852 - 00:02:21.938, Speaker B: So there's some yield farming going on.
00:02:21.964 - 00:02:37.626, Speaker A: There'S some liquidity pooling going on. We can also look more granularly at the specific protocols that it's involved with in this explore feature. So it's got some assets deposited into Uniswap, it's got some assets deposited into balancer. And also with Zapper, you can just exchange straight from the zapper interface.
00:02:37.658 - 00:02:37.806, Speaker C: Right?
00:02:37.828 - 00:02:43.034, Speaker A: So this is just another layer on top of Uniswap or other exchanges on Ethereum that allow you to swap assets.
00:02:43.082 - 00:02:43.246, Speaker C: Right?
00:02:43.268 - 00:02:52.498, Speaker A: So check them out at Zapper fi. It'll give you a nice clean portal to invest your assets in Defi. And you can also connect multiple wallets if you use multiple wallets all at.
00:02:52.504 - 00:02:53.886, Speaker B: Once, and it'll give you an aggregate.
00:02:53.918 - 00:02:59.826, Speaker A: Of every single wallet that you own, check them out at Zapper fi. Also, this is definitely not my wallet.
00:03:00.018 - 00:03:41.074, Speaker B: Alright, guys, thanks for watching this meet the nation on the bankless YouTube. There's also a tactic out of the bankless newsletter that goes right alongside this. So we're going to get into that in a moment. At the end of that tactic is a how to mint a balancer liquidity bootstrapping pool, which is the pool that we are using to resell the remaining 34 tokens of the Bap zero t shirts. So for those that remember, we minted 50 tokens and we put them in the uniswap pool. And you can redeem a token for a shirt, right? You take the token, you burn it, and then you send that transaction to apparel@bankless.com. And then we send you a shirt, right? And that was great.
00:03:41.074 - 00:04:09.478, Speaker B: That worked out for the first 16 tokens, but Uniswap's pricing curve got really steep really fast. And so we kind of reached a dead end where we had 34 more tokens. We wanted to give them out, but no one wanted to buy them because the price went too high naturally. And so this is something that the balancer liquidity bootstrapping pools or the balancer smart pools helped solve. And that's what we're talking about here in this tactic. And that's what we're talking about here in this meet the nation as well today. And so that's kind of the purpose.
00:04:09.478 - 00:04:43.446, Speaker B: We can change the parameters for a balancer pool. And so where the pricing curve was too steep on Uniswap, we can actually smooth that out and actually make the price tick down over time. And so we are relaunching the Bap zero token through the balancer pool today. As of now that you are seeing this video, and the sale goes on for 30 days. And so the way that it works is it's still like Uniswap, where if you buy the token, the price goes up. But now what happens is every single day, the price also ticks a little bit lower at the same time.
00:04:43.548 - 00:04:43.814, Speaker C: Right?
00:04:43.852 - 00:04:54.266, Speaker B: And so if no one were to purchase any tokens from the moment of initial release down to 30 days from now, then the price would trend towards zero.
00:04:54.368 - 00:04:54.682, Speaker C: Right?
00:04:54.736 - 00:05:30.438, Speaker B: And so we're assuming that before it actually gets to zero, people will have bought all the tokens, and that's how we end up with not having any tokens ourselves. The market gets to discover the fair price of the token, and we get to distribute all these amazing shirts out to the bankless nation. And so we get into this conversation of how these pools work with Jeff from the balancer team, and also definitely check out the tactic that I put out in the bankless newsletter today. So thanks for tuning in. Let's get into it. All right, bankless nation, we are here with Jeff Bennett. Jeff is a contributor to the Balancer project.
00:05:30.438 - 00:06:15.554, Speaker B: You guys know Balancer? We've covered it a lot on the bankless. In the bankless media department, it's like Uniswap, but instead of two tokens, it's many. We actually. This isn't going to be a meet the nation about balancer as a whole. This is going to be a meet the nation for a specific release that balancer is just coming out with that is just now meeting the world. Right. For an example as to what this specific kind of balancer pool does, is that maybe you guys remember we released the Bap token sale for the t shirts, right? And we put them on Uniswap, right? And then the token price on Uniswap went up to a $1,000, but then people stopped buying, right.
00:06:15.554 - 00:06:32.482, Speaker B: Because then the price was too high, and so we weren't able to distribute the tokens right? And people have started to use Uniswap as a token distribution mechanism. And this goes all the way back to the Uma token distribution event, where they used Uniswap as their token sale.
00:06:32.546 - 00:06:32.930, Speaker C: Right?
00:06:33.020 - 00:06:36.134, Speaker B: They kind of did a quote unquote ICO through Uniswap.
00:06:36.182 - 00:06:36.538, Speaker C: Right?
00:06:36.624 - 00:06:58.254, Speaker B: And then we also saw compound. When compound first issued the comp token, this token very slowly started to trickle out into the ecosystem. And so then it went on Uniswap, but people who didn't want to farm comp just went to Uniswap to buy it. But since there was so little liquidity, the comp token just was crazy volatile and there was no price discovery.
00:06:58.302 - 00:06:58.466, Speaker C: Right?
00:06:58.488 - 00:07:16.390, Speaker B: And so Jeff here, who's been working on this specific balancer pool, is working on this pool that can help solve this problem, along with many other cool things that can happen, along with this much more expressive balancer pool. So, Jeff, thanks for coming on the Meet the nation. And thanks for coming to meet the nation.
00:07:17.130 - 00:07:18.360, Speaker D: Honor to be here.
00:07:18.890 - 00:07:20.802, Speaker B: So that was a little bit of a context.
00:07:20.866 - 00:07:21.058, Speaker C: Right.
00:07:21.084 - 00:07:27.354, Speaker B: And so, Jeff, maybe you can help me bring some even more context to what we're going to be talking about.
00:07:27.392 - 00:07:27.594, Speaker C: Right.
00:07:27.632 - 00:07:36.826, Speaker B: And so could you go ahead and define the two types of balancer pools that we have today in the private and private versus public balancer pools?
00:07:37.018 - 00:08:04.600, Speaker D: Right. So these are both the core balancer pools that were initially launched. And when you first create them, they're private. And in the documentation, it says controlled private pool. And what that is, the controller that created from the factory has complete control over it. You can do anything, make any of the calls. You can add tokens, remove tokens, set the swap fee, and do anything you want with it.
00:08:04.600 - 00:08:19.238, Speaker D: But only you, as the controller, can add liquidity. It's not open to the public. And the use case for this is a couple of them. It might be an experimental pool. You're not quite ready. Maybe the token is not released. You're using a placeholder.
00:08:19.238 - 00:08:34.180, Speaker D: But mainly it's for institutions or custodial money managers that people are already trusting them with the money. So they're the custodian, they're the liquidity provider. No one else needs to do it. That's the main use case.
00:08:35.830 - 00:08:47.158, Speaker B: Yeah, let's go over some of that. So we call it a private pool because what constitutes the pool is up to one specific external address.
00:08:47.244 - 00:08:47.494, Speaker C: Right.
00:08:47.532 - 00:08:51.638, Speaker B: Like there's one external address that gets to determine what this pool does.
00:08:51.724 - 00:08:52.214, Speaker C: Right.
00:08:52.332 - 00:09:13.294, Speaker B: And it's private in the sense that only one address can add liquidity to this pool. And the reason for this is multifaceted. But I think one of the big reasons is that because we don't want to open up these private pools to anyone to add liquidity to. Because we are trusting one specific address to manage it.
00:09:13.332 - 00:09:13.726, Speaker C: Right.
00:09:13.828 - 00:09:40.034, Speaker B: And so if you added liquidity to this private pool, that still gives complete control over this pool to a single address and say you deposited all of your ether and your USDC, well, this person that has complete control over this pool could mint some random ERC 20, and since they have control over it, they could approve this random ERC 20 that they just minted to be part of the balancer pool, and then they could drain the funds of anyone else who supplied liquidity.
00:09:40.082 - 00:09:40.342, Speaker C: Right.
00:09:40.396 - 00:10:03.274, Speaker B: So while a pool is in this private state, the balancer protocol doesn't allow anyone else to supply liquidity, which is partly protections. But also, you did mention that does have this extra benefit of flexibility for institutions or people that just want more control of what a pool is. But also importantly, it still enables people to use that pool to trade.
00:10:03.322 - 00:10:03.486, Speaker C: Right.
00:10:03.508 - 00:10:11.600, Speaker B: And so externally, people can swap ether through USDC using this pool, they just can't supply liquidity. Did I get all of that correct?
00:10:12.290 - 00:10:39.786, Speaker D: It's really analogous to, in the traditional finance world, it would be like fidelity, a fidelity fund. A random person can't deposit liquidity into the fidelity fund, right? But anybody can trade it. So people have a know established relationship with fidelity, and then that's why fidelity is the only one that creates liquidity for their own fund. People already are trusting them. You have to already trust. It's okay to trust the controller because you're already trusting them. There's probably a legal relationship established or.
00:10:39.808 - 00:11:05.646, Speaker B: Something like that, right? And I think one of the original visions of balancer was like this inside out ETF, right, where it's this index where anybody can trade it through, and if you hold your assets in there, you get the exchange fees. But in this particular way, the ETF is completely controlled by some top down authority that wants the ETF to be of a certain composition.
00:11:05.758 - 00:11:21.480, Speaker D: Right, right. Instead of sending it off to a custodian in a constitutional way and paying fees to have it managed. It's non custodial, you still have your funds, and you're actually earning of. Yeah, it's ETF on its head.
00:11:21.930 - 00:11:42.906, Speaker B: So listeners and readers of the Bankless podcast and newsletter, maybe they've read my article, the DeFi Trust Spectrum, which we've talked about on the Bankless podcast, and I have this graphic of like, there's a robot on one end and a human on the other end, and then there's also this middle ground, right? And what we're talking about right now is the completely human, trusted end of the spectrum.
00:11:42.938 - 00:11:43.134, Speaker C: Right?
00:11:43.172 - 00:12:00.398, Speaker B: Like, total human control, total human trust, not necessarily the trustless crypto economic revolution that we're signing up for, but also still really cool, regardless, in its own. Right. And so the other side of the spectrum is what you guys call, like, the public or finalized pools.
00:12:00.414 - 00:12:00.594, Speaker C: Right?
00:12:00.632 - 00:12:02.530, Speaker B: So, Jeff, can you take us there?
00:12:02.680 - 00:12:29.594, Speaker D: Right. So if you call finalize on a private pool and it transitions, it, it's a one way transition. Once you do that, there's no going back, and that fixes all the parameters. Whatever they are at that moment, they can never be changed. And it's on the interface, it's called public. So if you look at the exchange interface, there'll be private pools and public pools that's completely locked down, and then it's safe, because then you know that they never can change the swap fee. They can't add anything.
00:12:29.594 - 00:12:32.622, Speaker D: All you can do on that is swap, right?
00:12:32.676 - 00:13:17.082, Speaker B: Yeah. Okay. And so then when this pool gets finalized, we're now okay with allowing people to add liquidity, right? Because now we're no longer trusting a human, because what they just did is they burned their admin rights, essentially, right? And so there's a balancer pool, a private balancer pool in a particular state, and then when the admin of this burns their admin rights, it can go to a public pool because we know the risks are basically gone. Right. Like, no one can add an ERC 20 that they randomly minted. No one can rug pull liquidity, no one can change fees on you. And so this starts to look like something much more robotic, right? Something that we don't trust humans, we trust robots in the DFI world.
00:13:17.082 - 00:13:22.274, Speaker B: And so this now makes a particular balance approval. Completely robotic and completely trustless.
00:13:22.342 - 00:13:22.670, Speaker C: Right.
00:13:22.740 - 00:13:24.960, Speaker B: That's the whole idea behind these.
00:13:25.490 - 00:13:33.600, Speaker D: To get money out of it, to remove liquidity, you have to supply the tokens you minted so you can't get out more than you put in.
00:13:34.290 - 00:13:34.942, Speaker B: Right?
00:13:35.076 - 00:13:46.598, Speaker D: Absolutely. There's no way to drain the pool. Even the controller can get out their own liquidity, but it doesn't touch anyone else's because they need to burn their token things to get it out.
00:13:46.764 - 00:14:14.750, Speaker B: Right? Okay. These public pools are largely probably whoever's listening to this, whoever's watching this on YouTube, the public pools are probably what they know of as balancer, right? Like, when they go to the balancer website, you're probably looking at public pools, right? Unless you are using a very specific niche use case of balancer for the institutional side, the more of the retail and open side of balancers. Public pools. Public pools are kind of what people know of as balancer, is that right?
00:14:14.900 - 00:14:19.294, Speaker D: I mean, if they're looking at the pool interface, if you're looking at the swap interface, you can't even tell.
00:14:19.412 - 00:14:19.886, Speaker C: Sure.
00:14:19.988 - 00:14:29.966, Speaker D: Right. It doesn't matter because all these things are just, you can swap on them. Most people are probably going to the swap interface and you don't even see the pools. You're just swapping token pairs.
00:14:30.078 - 00:15:02.318, Speaker B: Right? Before we go into the meat of this episode, which is talking about that middle ground between these two ends of the spectrum, let's talk about that swap interface really quick, right? And so one of the best products from balancer is that it can obfuscate all of these pools in the background, right? And so if you just want to go eth to dai, you don't go to just the balancer eth dai pool. You go to all pools ever, right, that are hooked into the balancer order routing that optimizes for exchange liquidity. Can you talk about that?
00:15:02.404 - 00:15:25.300, Speaker D: Yeah, that's the smart order router. So it will find the best path through all the highest liquidity pools to do the swap at the lowest slippage and most favorable terms. And all core pools, all that stuff is happening at the core pool level. So it wouldn't matter if it's a smart pool of any kind, it doesn't know about that. It's just looking at the core pool level.
00:15:25.670 - 00:15:26.034, Speaker C: Right?
00:15:26.072 - 00:16:04.546, Speaker B: So this order router is like this mesh network middleware that kind of ties in every single balance of pool in existence. And if it deems it appropriate to leverage liquidity in any one of these pools in order to best suit the trader, then therefore it does that, right, and that's how all of these balancer pools generally stay in balance with each other according to price, right? And so if there is one pool that's just ether and Dai, and then there's another pool that's ether, die USDC MKR, and somebody is trading ether and dai, it can leverage the liquidity and balance of the liquidity in both of these pools all in one trade if it deems that it's suitable for the.
00:16:04.568 - 00:16:42.926, Speaker D: Trader, there's even some helper features in the pool management interface. So, for instance, if you're a liquidity provider, of course, they're all also swappers are one user but you do have people that just want to provide liquidity, and they're using the pool management interface, and even there, there's some helpers. So if it sees you're in a pool that's 50 50 something, and there's a 60 41 that has a lot more liquidity, it's better for you. It'll suggest, it'll it say, hey, what about this pool? Because there are a lot of pools, they'll probably expand on those kind of features also.
00:16:43.108 - 00:17:17.510, Speaker B: Cool. Okay, so that's great background of balancer. So if you guys were looking for what balancer is, that was more or less what we just ran through. But balancer is coming out with this brand new thing called a smart pool, right? And so we started talking about private pools, where everything is kind of human, trusted. The parameters of what a pool is, are totally up for adjustment by a human actor. And then we talked about public pools, which are, the human actor then finalizes the balancer pool, locks everything down, makes things permanent, and then it kind of opens it up to the public.
00:17:17.580 - 00:17:18.054, Speaker C: Right?
00:17:18.172 - 00:17:29.994, Speaker B: And there's this middle ground, which is what you've been working on, Jeff, at Balancer, where some of these parameters can still maintain some flexibility while we still can relegate trust to a computer.
00:17:30.112 - 00:17:30.634, Speaker C: Right.
00:17:30.752 - 00:18:04.722, Speaker B: And so we're going to talk about that. But first, I want to talk about the parameters that are open to adjustment, right. And I believe there are six of them. And so going through them really quickly, and then we'll spend some more time on them. The six parameters that make a balancer pool. A balancer pool are like the fee size, the Token weights, the ability to add or remove tokens from a balancer pool, and then the tokens themselves that are approved in that balancer pool. And then also the total amount of value in the pool token.
00:18:04.722 - 00:18:22.910, Speaker B: So, like the total market cap of the pool itself. And then lastly, the ability to pause or enable swaps. Right. So, Jeff, let's go through each one, starting with the fee size, right? That's the first of six parameters. And so the fee size is just like. Just like uniswap is 0.3%.
00:18:22.980 - 00:18:23.214, Speaker C: Right.
00:18:23.252 - 00:18:35.060, Speaker B: And balancer can be anything. But with a balancer smart pool, there are some more conversations that we can get into where it gets even more flexible. So let's start with that. Let's start with that, right?
00:18:38.550 - 00:18:57.298, Speaker D: There are limits on it. There is a minimum max fee on the core pool. And if you have this. Right, enabled. So when you create a smart pool, you're creating it with certain rights enabled, and then you can only change the parameters rate to that. It requires less trust. The more rights the pool has, the more trust is required.
00:18:57.394 - 00:18:57.750, Speaker B: Right.
00:18:57.820 - 00:19:20.430, Speaker D: So you could make one. We're talking about surge pricing later. Like, if you wanted to make a search pricing pool, maybe the only one you enable is the swap fee, and everything else is off. So that means the only thing that the controller can do is edit the swap fee, nothing else. But it means they can set it arbitrarily within the limits of the core pool. So a fraction of a percent. Up to 10%.
00:19:20.580 - 00:19:32.290, Speaker B: Okay, actually, so let's hang on that point really quick. So we just went through six variables that make up a balancer pool. And if we were to leave all six open, would that make it equivalent to a public pool?
00:19:33.030 - 00:19:49.538, Speaker D: Well, if open means you have all the rights, yes. Then it would be like a private one that's public, require complete trust. It wouldn't make any sense. Nobody would do that. Right, and if you had all the rights off, then it's the same as a core pool, it's the same as a public pool.
00:19:49.634 - 00:19:49.846, Speaker C: Right.
00:19:49.868 - 00:20:12.270, Speaker B: And so this is why we're talking about the middle ground spectrum between full human trust and full robot parameters, right? And so what balancer is now doing is kind of enabling that middle ground to come into existence and allow the greater DeFi world to find which parameters are really useful for them to still have control over while everything else is locked down.
00:20:12.340 - 00:20:12.960, Speaker C: Right?
00:20:13.570 - 00:20:59.770, Speaker B: So one of the really interesting use cases that I heard Fernando talk about on a podcast was, and you just mentioned it, like surge pricing, right? Like, what happens when we can start to manipulate the fee size based on demand at a particular time, right? And so outside of COVID times during Friday nights or Saturday nights, the local bar area for any particular city would have extremely high demand for Uber. Right? And so what Uber would do, would they would just jack up the price, right? Like, as demand goes up and supply stays the same, price should go up. And so that's what Uber would do, right? And so with a more flexible balancer pool, it's possible to have a fee that adjusts based on certain parameters.
00:20:59.850 - 00:21:00.094, Speaker C: Right?
00:21:00.132 - 00:21:15.150, Speaker B: And so as there's demand for liquidity inside a balancer pool, then we can adjust the fee up and down. That is more optimized to generate revenue for the liquidity providers, which incentivizes more liquidity.
00:21:15.230 - 00:21:16.580, Speaker C: Right, right.
00:21:17.670 - 00:21:51.406, Speaker D: And you could do that out of the box. Now, if you had on level two, if you had something looking at the market and looking at the swap frequency or something, and then it would just call the set swap fee function. You could do it in a contract as well. If you did a subclass, it would be harder because there's kind of an information problem. The smart pool doesn't know what's happening below it in the core pool. So I'm not sure the smart pool would have enough information to do it by themselves. You might need an oracle or something, but it could be done, right, so.
00:21:51.428 - 00:22:43.994, Speaker B: We'Re talking about the oracle problem, right? So like, cool, we have this smart pool that serves this particular purpose, but it doesn't know when to adjust the fees. And so what we could theoretically do is you could hook in the fee amount to a contract on Ethereum, another smart contract that gets information from like Chainlink or some other input from elsewhere in Ethereum, some other contract. Maybe we're talking about the amount of liquidations on Makerdao, right? Maybe that's an input of data into the thing that sets the fee. Or we're talking about the number of exchanges that are made on the Eth pair for synthetics, right? Like some amount of arbitrary data that we find on Ethereum, we can use that data to set a parameter to adjust the fee for this particular smart pool.
00:22:44.042 - 00:22:44.350, Speaker C: Right?
00:22:44.420 - 00:22:48.990, Speaker B: And this is how we can have flexibility in fees without trusting humans.
00:22:49.070 - 00:22:49.314, Speaker C: Right?
00:22:49.352 - 00:22:59.110, Speaker B: And so we only trust humans to write the code correctly the first time and then implement that code, and then that code is now therefore the robot. Am I getting everything correct?
00:22:59.260 - 00:23:12.730, Speaker D: I think so, yeah. If you subclassed it, then you could make a poke fees like the similar to poke weights, and it would use all that information to set the fees, but you could also do it on level two right away with the existing reference implementation.
00:23:14.350 - 00:23:15.046, Speaker B: Fantastic.
00:23:15.078 - 00:23:15.274, Speaker C: Yeah.
00:23:15.312 - 00:23:48.600, Speaker B: So why I get really excited about this is that this opens up the possibility of fees to be maximally expressive. Right now it's up to your imagination and your technical capabilities to code what you think the fees should be for your particular use case. And then also it helps when Ethereum has more data available to you, and that's just a function of defi needing to grow. But at this point, the ball is in the developer's court to come up with the right way to design fees on their balancer pool that is suited to their needs of whatever pool they're trying to create.
00:23:48.970 - 00:24:28.894, Speaker D: And we've designed it to be very flexible so that even the reference implementation that we're releasing should be usable out of the box with just changing the settings and setting writes for a large variety of use cases. And then if you hit something that you need to do, like Ampleforth, they have a different token that they had to subclass because the way the weights work is different. The balancer pools don't expect the token balances to change out from under them. Right. So they had to do something completely different to handle their elastic supply tokens. They had to synchronize the weights with their rebase. So to do that, they had to subclass.
00:24:28.894 - 00:24:36.034, Speaker D: So that's a case of extending the CRP. So it's designed to be easily extensible also, right?
00:24:36.072 - 00:24:36.226, Speaker C: Yeah.
00:24:36.248 - 00:25:09.900, Speaker B: So that hops right into the next parameter out of the six. So the first was the fee. That was number one. Now you kind of hopped into number two, which is token weights. Right. So go into more detail about what Ampleforth did with the smart pool that is specific to the smart pool that they couldn't have done with a private pool or a public pool. You with me, Jeff? Jeff can hear me.
00:25:09.900 - 00:25:17.882, Speaker B: There we go. Are we back?
00:25:18.016 - 00:25:19.806, Speaker D: Yeah. I don't know what happened there.
00:25:19.908 - 00:25:39.394, Speaker B: Okay. I've been having Internet troubles. I'm going to go ahead and assume that Zoom was still recording all that initial stuff. I hope we'll find out after the fact. Okay, so unfortunately, we cut off, right at a nice transition point. I'm just going to hop right back into what I was saying. Ready to go?
00:25:39.512 - 00:25:39.998, Speaker C: Yep.
00:25:40.094 - 00:25:51.826, Speaker B: Cool. So, yeah, Jeff, that actually bleeds right into the second parameter that we want to talk about. So that was talking about the fees of the six parameters. We're going to talk about that. Fees were number one, and now we're talking about token weights.
00:25:51.858 - 00:25:52.054, Speaker C: Right.
00:25:52.092 - 00:25:55.234, Speaker B: That's another thing that can be adjusted in a smart pool.
00:25:55.282 - 00:25:55.602, Speaker C: Right?
00:25:55.676 - 00:26:01.820, Speaker B: So talk about what Ampliforth needed to do in order to have a more flexible balancer pool to suit their needs.
00:26:02.270 - 00:26:41.586, Speaker D: Well, in that case, the reference implementation couldn't handle it because they have elasticsupply token. So there's always three layers here. There's the smart contract, the core pool, and then the token contracts, and they all interact. This can be complicated sometimes. In their case, their token is an elastic supply token, which means that they had a daily rebase, and there's different kinds of those, but theirs rebases every day. So the balance of the tokens actually changes asynchronously every day. And if that happened inside a balancer pool, it would cause issues or if you tree.
00:26:41.586 - 00:26:58.762, Speaker D: So what they do is they have an atomic operation that synchronizes their weights with the rebase so that it doesn't mess up the price. It doesn't change the price inside the balancer pool when their token rebases, right?
00:26:58.816 - 00:27:27.270, Speaker B: So in the same way that we were talking about how we could hook in the fee for a balancer pool to some external contract on ethereum, what Ampleforth did is they hooked in the weights of a balancer pool to their rebasing contract, right? So the balancer pool that uses the balancer pool that has ampleforth tokens in it, it needs to know the weights, right, because the weight of ampleforth in the greater ethereum ecosystem changes every 24 hours.
00:27:27.340 - 00:27:27.526, Speaker C: Right?
00:27:27.548 - 00:27:32.774, Speaker B: And so we need to inform the balancer pool of that weight change so balancer could handle it.
00:27:32.812 - 00:27:33.110, Speaker C: Right?
00:27:33.180 - 00:27:43.530, Speaker B: And so Ampleforth was likely never going to be in any balancer pool without this more flexible weight change mechanism that's in the balancer. Smart pools.
00:27:43.950 - 00:28:02.510, Speaker D: Yeah, they have their own subclass of the pool, so it's not the same class as the reference implementation. It's their own subclass where they've disabled the normal or the regular reference update weight function and replaced it with their resyncing thing that they need to do for their token.
00:28:03.410 - 00:28:16.950, Speaker B: So this changing the weights of a token is actually also really cool for a distribution. So tell us about the perp token and how the perp team distributed their token.
00:28:17.850 - 00:29:04.030, Speaker D: That's one of the main use cases of it. And this is the problem. This is exactly the problem with uniswap that you were having with distributing bat zeros, is when you can't change the weights and you have kind of a one directional swap, the price is just going to keep going up and you can't do anything about it. And also there's the capital requirement issue too. So if you want your tokens to cost one dollars and you only have $1,000 to put in capital, you could do it, but you can only sell 1000 tokens. If you want to sell 100,000 tokens, you need $100,000. So to avoid that, what you can do is what we call the liquidity bootstrapping pool.
00:29:04.030 - 00:29:42.974, Speaker D: That's where you start out, the weights where you wait, it could be as much as 98% and 2%. That way you need a much less capital requirement. If you have your project token and then the collateral token, you can have a much lower balance of the collateral token. So your capital requirement is lower and you can still get a reasonable price. And the other thing and what was important for perp is it allows fair distribution and also price discovery. So say you think the market value is maybe $2. You would set it up so that it starts out at $10 and then the weights gradually flip over time.
00:29:42.974 - 00:30:15.290, Speaker D: So they go down over time. And if no one's buying and the weights are going down, that means the price is going down. So if it comes out at $10, nobody buys. It goes down to nine, nobody buys. Eventually it hits $5 and people start buying. So there's a built in price discovery, and then the buyers will kind of throttle themselves, because if they're buying when the weights aren't changing, the price goes up. If they wait or they buy slower, then the price will go down over time.
00:30:15.440 - 00:30:37.710, Speaker B: Right? Okay, so this, to me, I think is really cool. And of all the features that balancer has in these smart pools, I think this is going to be the one that gets leveraged the most, right? Because we know that DeFi loves tokens and it also loves distributing tokens. And as a token distribution mechanism, I don't think I've seen a more elegant token distribution mechanism.
00:30:37.790 - 00:30:38.034, Speaker C: Right?
00:30:38.072 - 00:32:04.266, Speaker B: And so if you have a goal of getting your tokens into the wild, retaining liquidity and preventing also front running, which is another topic we're going to get into, I think the balancer liquidity bootstrapping pools, which I think is just another name for a balancer smart pool that changes the weights over time. According to some rule, this is the way to do it, right? So I'm going to share my screen so people can kind of see what I'm talking about and also get really excited about it, right? So this is a graphic that Mike McDonald made. And so it's very simple and it just shows that we have an example token, like project token, like insert your project token here. And we also have, and so, and in this particular pool, the parameters for the weights are set to change over what looks like a six month time in this particular example, right? And so at the beginning, they've minted some random ERC 20. Like it's just some token that they have decided to mint, and it's therefore their team's project token, right? And any sort of farm or project or whatever that mints a token starts off like this. It just starts off as an ERC 20 and it doesn't have value until they figure out how to ascribe value to it later. But they need to get the token out in the wild, right? But since they're a startup, they also don't have a bunch of money to market make for it or have a bunch of capital to provide liquidity.
00:32:04.266 - 00:33:36.522, Speaker B: And so they set the weight in the balancer pool to 80, and then they set the money, whether it's ether or die, they set that to 20. Right, and so it always has to add up to 100. Right, but then the cool thing is that over time, according to the balancer smart pool contract, the weight will tick downwards as time goes on, right? And so for those that aren't familiar, this is what's called a dutch auction, right? It's like an inverse auction, where instead of having to people bid up each other, and then there's a sale, the price starts really high, and then it starts to move downwards, right? And we're assuming that if you start the price really high, and then end the price really low, at some point in the middle ground, the free market will come in and buy all the tokens, right? Except I think what's really cool about this balancer pool is that it's still integrating a uniswap like mechanism, where as people buy it, the price goes back up, right, because that's how balancer works. It's an automated market maker, and it prices things based off of the ratio of the tokens between each other. And so while the balancer pool is weighting the project token down over time, and weighting the dai token up over time, people are coming in and adding dai and taking out the project token, right? And so we actually saw this in the perp token distribution, which is what we're talking about. And so let's look at some of the data here. This is the actual price graph of the perp token over time.
00:33:36.522 - 00:34:26.374, Speaker B: And so this is totally unlike what you would see from a token distribution event in uniswap, right? This is not at all what the graph chart looks like for the UMA token when they did their uniswap distribution. It's not what the graph looks like for the comp token. It looks really fair, right? It looks really good. It starts at what looks like a dollar 70, goes up to dollar 80, down to a dollar, and then it kind of stays in this bound over the whole entire sale duration. But what is happening in the background is as people are buying more of the tokens, the balancer pool gets more and more dye in it and less and less tokens, right? And so what ended up happening is this extremely fair distribution event. I have never seen a more distributed token chart than this particular graph.
00:34:26.422 - 00:34:26.586, Speaker C: Right?
00:34:26.608 - 00:34:42.690, Speaker B: That's, like absolutely insane. There's no real whales here. The biggest person owns just 4%. That's crazy. And the transaction volume here's a graph of the transaction. Volume was nice and steady. Here's order sizes.
00:34:42.690 - 00:34:49.940, Speaker B: Jeff, what did you think about when you saw this crypto can get issued in this particular way?
00:34:50.390 - 00:35:20.058, Speaker D: Yeah, the spikes are probably some of the big purchases, but, yeah, I was really. Because you never really of the prediction is that the buyers will kind of throttle themselves according to the price, and you expect a fairly flat price curve. And luckily, that's exactly what we saw. Yeah, it's predictable over time, and then everyone knows that it's sort of priced in.
00:35:20.224 - 00:35:30.030, Speaker B: Absolutely. And the reason why this is important is because token issuers don't want less tokens on their balance, on their books, and they want more cash.
00:35:30.100 - 00:35:30.334, Speaker C: Right.
00:35:30.372 - 00:35:49.170, Speaker B: Like, that's the whole point of distributing a token. And so when me and Ryan, when we were distributing the bap zero token for the bankless shirts, I should have worn that shirt. We put all 50 tokens into Uniswap, and then about 20 to 25 of them got purchased, but then they started to become too highly priced.
00:35:49.250 - 00:35:49.782, Speaker C: Right.
00:35:49.916 - 00:35:56.754, Speaker B: And so I think the shirts are really cool, but I'm not ever going to blame someone for not paying $1,000 for a shirt.
00:35:56.802 - 00:35:57.014, Speaker C: Right.
00:35:57.052 - 00:35:58.290, Speaker B: Like, that's kind of ridiculous.
00:35:58.370 - 00:35:58.662, Speaker C: Right.
00:35:58.716 - 00:36:23.282, Speaker B: And so we kind of ran into this dead end where we couldn't sell any more shirts, even though we wanted to get them out into the wild, we couldn't sell anymore because no one wanted to pay more than $1,000 a shirt. And so what we are going to do now, with help from the balancer team. So thank you, Jeff, for the help, is we're going to distribute the Bap tokens in this balancer pool that changes the weights over time.
00:36:23.336 - 00:36:23.554, Speaker C: Right.
00:36:23.592 - 00:37:03.902, Speaker B: And so what's so great about it is that it retains the uniswap feature of if people buy, then price goes up, but then over time, the price will go down. And so if we took this current state of the Uniswap pool, which is right now, there's, like, 30 Bap tokens in there. They're priced about, like, $800. And if we put that into a balancer pool, the $800 price would start ticking downwards slowly over time, and we'll probably extend this over, like, a two week period. And so slowly over time, it'll go $800, 700 and 8767. Hundred and 4700. And then somebody will buy a token, and then it'll jump back up to 80 or 800.
00:37:03.902 - 00:37:35.270, Speaker B: Right. And then it'll start to tick downwards over time. And so everyone can achieve a fair market price for the token, right? And so at the end of the day, the price keeps on ticking downwards until people buy, and then it goes up until there's no more tokens, right? And then it's in the hands of the free market. Thankfully, bankless doesn't have any more tokens because like I said, as much as I like those shirts, I don't want 30 of them. And it's just a great way to get a token out into the wild.
00:37:36.490 - 00:37:59.802, Speaker D: Not only that, if you run the simulator and look at the total proceeds, it also kind of maximizes revenue for the token distributor and also minimizes because they don't want to have a lot of leftover tokens and they want to have the highest collateral possible. And what achieves that is a pretty flatter, even slightly increasing price curve is how that's achieved versus the price tanking.
00:37:59.866 - 00:38:02.206, Speaker B: Right down the bankless state.
00:38:02.228 - 00:38:48.590, Speaker A: And the nations are brought to you by Wiren. Wiren is Defi's first self building, community run project, which I just get really excited about. Wiren is a system that seeks out yield in DeFi, and it does that in a number of different ways. A very aggressive way is with the vaults where you can deposit your preferred asset of choice and different DeFi experts will come in and generate a strategy for what to do with your deposited token, right? And so it'll go find ways to get yield in that deposited token in DeFi for those who want to just earn yield on their stablecoins. The earn system is for you, where you can deposit your preferred stablecoin. And Wyrn will go and figure out which money market on DeFi in DeFi is producing the best interest rate. Whether it's Dydx, it's compound, or aave.
00:38:48.590 - 00:39:33.386, Speaker A: It looks around DeFi to see where the yield is coming from, and it directs stablecoins automatically so you don't have to check them out at yearn finance to get started. And also check out the stats page to see what other people are doing as well. We're also brought to you by monolith. Monolith is your cool new Defi account, your defi savings account, your defi checking account. Except the cool thing about the monolith DeFi account is that it gets software updates, right? You actually get to increase the usefulness of this over time. So here are some of the features. Monolith is a smart contract wallet with a lot of the features that you would expect if you've come to know DeFi and what it is you can add money to it, you can put that money to work in compound and accessing yield and you can also swap through Uniswap.
00:39:33.386 - 00:40:06.194, Speaker A: What was cool with monolith is that they will send you a very sexy monolith visa card that connects to your monolith smart contract wallet on Ethereum. So it's a really awesome tool to live a bankless life with a savings account that gets software updates. So this is something that you're never going to find out in the real world, but you can still do real world things with real money, like buy your groceries. So that's just fantastic. Coming soon to monolith. Actually, already here to monolith is now you can buy Dai and get it sent to your wallet directly.
00:40:06.242 - 00:40:06.454, Speaker C: Right?
00:40:06.492 - 00:40:21.870, Speaker A: So it's also being an on ramp, so you don't have to go through your centralized exchange like Coinbase or Gemini or wherever. You can just go straight from your bank account right into your monolith checking account smart contract wallet. So check them out at Monolith XYZ.
00:40:22.370 - 00:40:52.774, Speaker B: Right. So when people are buying during that distribution event and they see that price ticking downwards, then they're like, is this the right price? Is this the right price? What they're doing is they're speculating on, once all of the tokens have been distributed, what the free market will dictate after the distribution event. Right. And the thing is, no one can really inform you of that better than yourself, right? So it's up to you to be a part of the market and determine what that value is to you. That's also the beauty of dutch auctions, I think.
00:40:52.972 - 00:41:34.898, Speaker D: And I think it also helps with people not panicking because they know they've got that time, because if people buy really fast, it's going to make the price shoot up, so they won't do that. So that's also one element of the fairness of it, is that it pretty much modulates so that everyone who wants a token can get it. Because especially if it goes over a longer period, like a couple of weeks, because if you do it over one day, what if sushi comes out that day or something happens that day and there's 800 gas price or something, and then no one gets a chance to get in there. So this way the buyers have enough time and they don't have to panic and rush. It helps with network congestion.
00:41:35.074 - 00:41:41.910, Speaker B: So how does this particular balancer pool help against bot front runners?
00:41:43.130 - 00:42:10.426, Speaker D: Well, part of it is just how the price is going down. It's not going to be profitable for a bot because they're not going to be able to sell later at a profit unless someone else. I mean, I guess there's cases where it could, but you can't predict it. I mean, predictably, it's just going to go straight down. So if a bot bought, then it would be selling later at a lower price normally. So that there's a disincentive to try and game it in that fashion.
00:42:10.538 - 00:42:10.814, Speaker C: Right.
00:42:10.852 - 00:42:40.442, Speaker B: So that kind of turns control back into the hands of the human, right. So if you're watching that price tick downwards and then you decide to buy, and then you see somebody come in and buy like a lot more later, and then the price goes up, you're free to sell. You can sell back into, it's not a one way street. Like you can always go backwards and sell at a higher price. So if you're interested on speculating on whatever these tokens are being distributed in this particular way, you're still free to do that, right. And that's actually making the market more efficient. Very cool.
00:42:40.442 - 00:42:59.200, Speaker B: Okay, so that's parameter number two. And I think those, to my mind, those are kind of the big two ones. Those are really where I think a lot of the innovation and flexibility will come through. So we'll kind of run through the remaining four. Adding and removing approved tokens from a balancer pool. Why would somebody want to do that?
00:42:59.730 - 00:43:46.382, Speaker D: Well, there are a few use cases for that. Part of it is sort of sale. Like if you wanted to reuse it, if you wanted to reuse the same pool for the Bap one tokens, you could remove the bap zeros and add the bap ones. And it's also just a way if you know you're not going to need the pool later. It's a fast way for the creator to just remove all the liquidity right away without having it, because otherwise it's a little bit of a difficult process. If you don't have the right to remove tokens, you can exit the pool at the end if you're the controller. But there's limitations on ratios and things that have to be maintained, so you can't withdraw in one step.
00:43:46.382 - 00:43:48.442, Speaker D: You have to do it kind of in a stepped fashion.
00:43:48.586 - 00:43:49.374, Speaker B: Right.
00:43:49.572 - 00:44:23.846, Speaker D: So that's a little technical there, but that's the main case. But adding is, of course, dangerous, right? Because you alluded to that case before. Someone could, you could add a worthless token to the pool and then manipulate the price and drain it. So for that reason, there's a time lock on it. You have to say, okay, there's a commit ad, we're going to add a token in 2 hours or whatever the time is, and then people can withdraw if they don't trust it before it's actually applied.
00:44:23.958 - 00:44:24.234, Speaker C: Right?
00:44:24.272 - 00:45:03.602, Speaker D: And that's one of the parameters too. So some of these things are not just the rights, they also have parameters with them. So these adding and removing and the updating weights both have time parameters. So there's a minimum time between frequency of weight change and a minimum time between adding a token and committing it. And these are factors that investors in a pool would look at when determining how much to trust it. Because you can see if you made one with add or move, right, and no limits at all, then you have to trust them completely because they could do that exit with a token without any warning.
00:45:03.746 - 00:45:13.942, Speaker B: Right. The variables that we're talking about have variables inside of them, and it's all worth talking about. And make sure that you know what you're doing when you interact with a particular balancer pool.
00:45:14.086 - 00:45:34.238, Speaker D: And the GUI will show that you can see not only the rights that it has, but the setting, really, that's the only one that has, I guess, extra parameters with it, but they can see both the rights and the settings to decide how much they trust the pool.
00:45:34.414 - 00:45:34.850, Speaker B: Cool.
00:45:34.920 - 00:45:35.250, Speaker C: Awesome.
00:45:35.320 - 00:46:28.850, Speaker B: Okay, and moving on to variable number four, the ability to enable or restrict people that can provide liquidity, right? And so what this is just doing is just saying like, hey, it's just making an approved list of people that can provide liquidity, right? And so when we started this conversation, we talked about the private pools, where there's just one single person that owns the pool that can provide liquidity. Well, now we can have three people or seven people or 20 people who are approved to provide liquidity. And off the top of my head, I can't really think of a use case for this. But just again, it's more flexible, right? It's just adding flexibility to how somebody can leverage a pool. Jeff, when you think of these things, why would somebody want to add more than just one person who is approved to provide liquidity, but not the whole world? Have you guys thought about a use case for this?
00:46:28.920 - 00:47:14.500, Speaker D: Yeah, there's a couple of different ones. First, probably the usual case is to just enable that, right, and not put anybody on it, so that only the creator can provide liquidity like the perp did. That and a lot of the liquidity bootstrap providers, because they don't want people kind of messing with it. Because if someone made a large deposit or adding liquidity in different ways, it could throw off their curve. So a lot of the liquidity bootstrapping actually has this parameter, and I think your dutch auction will use it as well. But if you wanted to, that's the most common use is just to not let anybody do it. But if you wanted to have it where there's a list of people, it might be something like, well, sort of like the institutional thing.
00:47:14.500 - 00:47:34.550, Speaker D: Case of a private pool where you have like an investor club or something, or you need to do KYC or something. Or the token is a reward token that you have to do something to earn and only certain people have access to it. Something like that. We haven't had a real world use case for it, but that's what I'm imagining.
00:47:35.850 - 00:48:02.270, Speaker B: Then the fifth out of six variable is capping or uncapping the total amount of pool tokens, right. And this is just like a risk management system. Basically what this is doing is saying like, hey, we're going to allow up to $2 million in this pool, but no more. Or uncap it and be like, yo, throw as much money into the system as you want. And to me this is just like investor protections or liquidity provider protections. Are there any other reasons why somebody might leverage this feature?
00:48:03.730 - 00:48:28.978, Speaker D: That's the main part of it is for experimental ones, you could have it where you just cap it at a certain value. There's a couple of different ways to cap it. You could say cap it at the current value so no one can join unless people exit. So if people remove liquidity, then there is like space and different people can add it, or you can just set it to zero, which means no one can add at all. All they can do is withdraw.
00:48:29.074 - 00:48:29.334, Speaker C: Right?
00:48:29.372 - 00:48:36.090, Speaker D: And then if it's experimental and you're ready to let it go, say okay, it's proven, then you can just set it to unlimited and then it just opens it up.
00:48:36.240 - 00:48:45.200, Speaker B: Could you set a timer on it saying where we are capping it at this amount and then at this particular block it's uncapped. Is that a thing?
00:48:45.570 - 00:49:00.046, Speaker D: Not in the contract now, but now it's just the thing you can call. You can just set the cap if you have that right. And if you don't have that right, then it's just unlimited and you don't have that. It's just like any other pool.
00:49:00.158 - 00:49:23.530, Speaker B: Okay, and then the last one, which is pausing and enabling swaps, which is super self explanatory. I call it the can you guys please stop trading feature. And this just locks down trading and opens it up and again, I'm sure there's a billion different reasons as to why somebody might want to leverage this. And it's just one of the many tools in the tool belt for a balancer smart pool.
00:49:23.870 - 00:49:37.402, Speaker D: It could be more of a short circuit, like something bad is happening. We don't know what's going on. Let's just halt, because, of course, if there's no trading, nothing is changing, no weights, prices, it freezes, has the effect of freezing the prices.
00:49:37.546 - 00:49:40.370, Speaker B: Can you still withdraw liquidity?
00:49:42.550 - 00:49:46.638, Speaker D: Oh, yes. It's independent. This is just actually doing swapping.
00:49:46.734 - 00:50:18.140, Speaker B: Right, okay, so this is like the big red button. Maybe something went wrong with a token contract. Maybe some hacker got control over a token contract somehow and minted a bajillion tokens, and somebody with the power to pause swaps could hit that button, that big red button that pauses swaps, and that protects all the liquidity providers who are in that pool from getting their liquidity drained from this hacker that somehow managed to mint a bajillion SNX tokens or whatever.
00:50:18.770 - 00:50:32.910, Speaker D: Right. Because that's happening at the core pool level. That's just getting passed down. You're just calling pause on the core pool because normally you can't turn it back on if you have a core.
00:50:35.250 - 00:50:36.270, Speaker B: Ahead. Jeff.
00:50:38.550 - 00:51:04.700, Speaker D: The capping I borrowed from PI Dow. No, smart. Yeah, PI dow was the original smart. The first implementation of a smart pool was actually pydow. So they're using our underlying core pools, but it's completely different code base. It's upgradable, has a dow. It predates this.
00:51:04.700 - 00:51:07.580, Speaker D: And that. That's another great.
00:51:08.590 - 00:51:25.426, Speaker B: Very cool. So, Jeff, I think before we call you, before our call, you mentioned that you guys have this UI that's coming out at the day of recording. When this video is released, it should already be out. But I'm calling it like the build a balancer UI. Tell us about that.
00:51:25.608 - 00:51:58.086, Speaker D: Okay, right. Well, there will be so on the main pool management interface right now, you have the private and shared, and you're going to have private and shared and smart. And then you can see which pools are smart pools. At the core pool level, they all work the same, but you'll also have a create a pool. So if you want to make your own pool, then there's an interface for that. You can choose which rights you want and what your settings are. And then once you create it, then there's also a management interface.
00:51:58.086 - 00:52:24.742, Speaker D: So according to which rights you set, if all you enable is swap fee, like you're doing the surge thing and all you have is the set swap fee. Then your controller interface just has one thing on it. That's all you can do is change swap fee. But if you can do weights, then it'll have all the different ways of updating weights also. So an ongoing management thing. And then even the general public, if a pool has the change rights, the change weights. Right.
00:52:24.742 - 00:52:37.394, Speaker D: Enabled, then the general public can call poke weights to actually change them. So there'll even be an interface for that. That's really the only way that a non owner can interact with the smart pool at that level.
00:52:37.532 - 00:53:00.340, Speaker B: Right. Very cool. I don't really know solidity. I've spent like maybe 30 minutes and I found out it's not for me. But as somebody who still is good with computers, maybe this build a balancer pool UI is kind of fit for me because I understand what all these contracts are doing. I understand maybe I have a particular goal. And so that sounds like what this UI is for.
00:53:01.190 - 00:53:49.966, Speaker D: Right. And it'll expand over, know when it comes out. They'll be adding stuff. We have a couple of great UI guys. They'll be adding features over time, maybe even something similar to this, because part of it is this is complicated, especially when you're going to like, how do you change the weights? Or what if you're in the middle of a sale and something happens and what do you do? I have simulators, off chain simulators that show that we may integrate something like that into this. Eventually that's down the line. But the one that will be coming out for beta testing already has everything you need to build your own smart pool and configure and maintaining it.
00:53:50.068 - 00:53:51.694, Speaker B: Awesome. Looking forward to it.
00:53:51.812 - 00:54:07.830, Speaker D: Yeah. Really? You want to do it as simple as possible. And perp, they created the pool and they set the update weights and then that's it. And then they just removed it at the end. They made like four calls the whole time. So that's the ideal. Plus calls to poke.
00:54:07.830 - 00:54:12.886, Speaker D: That's the ideal thing. You shouldn't need to do a lot of maintenance on them.
00:54:12.988 - 00:54:25.222, Speaker B: Yeah, and I'm super bullish on, especially with this UI getting integrated. I'm super bullish on people using this as a way to distribute tokens and specifically a way to distribute tokens fairly.
00:54:25.286 - 00:54:25.514, Speaker C: Right.
00:54:25.552 - 00:54:43.378, Speaker B: Like this is kind of like a new way to distribute tokens in a ways that we've relegated a lot of the accounting and trust to robots, which again, that's what we're all here in Defi for. So, Jeff, fantastic job building out this brand new product for answer and thank you for coming on and helping introduce the nation to it.
00:54:43.544 - 00:54:45.790, Speaker D: Thanks for having me. Bye.
