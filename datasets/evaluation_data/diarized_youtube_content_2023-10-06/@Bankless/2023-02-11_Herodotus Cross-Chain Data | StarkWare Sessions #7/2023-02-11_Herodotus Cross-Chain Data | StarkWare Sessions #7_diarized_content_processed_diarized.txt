00:00:02.970 - 00:01:07.698, Speaker A: Welcome to Bankless, where we explore the frontier of Internet money and Internet finance. And sometimes that frontier is at a conference like last weekend, where over a thousand developers, founders, builders and investors attended the Starkware Sessions in Tel Aviv in order to participate in growing the StarkNet ecosystem. This is Bankless'starkware Sessions series, which are nine bite sized episodes interviewing the founders, builders, and ecosystem developers of StarkNet. Every once in a while in the crypto world, a conference happens, but not everyone is available to attend. Don't worry, Bankless has your back, because I go to basically every conference that's out on the frontier, and I bring an entire podcast studio in tow with me in order to make sure that the Bankless nation stays on the frontier of what's happening in crypto. In this interview, we are talking to Herodotus, and that is an interesting name, which will become self evident as to how they named what they are working on, herodotus in this interview. Herodotus is a system for taking all of the very deep, rich data that we have across many, many chains and allowing each of these chains to access the state across chains, both the current state and the historical state.
00:01:07.698 - 00:01:55.042, Speaker A: So say, for example, optimism, uniswap on optimism, wants to understand the average price of ether on Arbitrum over a 30 day period, arbitrary length period. Herodotus, by running all of these very deep archived nodes across all of these chains, can provide all of this data across all of these chains, using ZK proofs in order to compress all of this data and prove it to the chain. It's an extremely useful thing to do, and the use cases for this are quite large. So I will let your imagination run wild as you listen to this episode. But first, before we get into this episode, a moment to talk about some of these fantastic sponsors that make this show possible. Kraken has been around for almost as long as crypto itself. As crazy as crypto is, kraken has remained a rock for its clients, building out a platform designed to stand the test of time.
00:01:55.042 - 00:02:42.826, Speaker A: Kraken is all about proof, not promises, which is why they've pioneered a proof of reserves, a system that lets Kraken's customers verify for themselves the solvency and responsibility of the Kraken exchange. And for this reason, and many more, we've chosen Kraken as Bankless's strategic sponsor for 2023. And once you're done using Kraken to get your dirty fiat money into pristine crypto assets, perhaps you should check out Arbitrum, where so much of the frontier of crypto innovation is taking place. Arbitrum just announced their Stylus initiative, which is their brand new programming environment that lets developers deploy apps using their favorite programming languages like Rust C C alongside regular old solidity EVM apps. Devs can use any coding language they like and has simultaneously dropped layer two fees by an order of magnitude. It's a big deal. So many of your favorite DFI apps have already deployed to Arbitrum, like Uniswap.
00:02:42.826 - 00:03:22.054, Speaker A: But did you know that Uniswap isn't just for ERC Tweaking tokens anymore? Uniswap is also an NFT aggregator, too. To make sure that you are getting the best price on your NFT purchases, uniswap gives NFT collectors and traders powerful tools, all from the cozy comfy Uniswap interface. By the way, it's also got a native Fiat onramp it's also deployed on, like, every layer two. And it's got this nifty cool thing called a universal router that ensures that you always get the best price on your trades. Crypto protocols like Arbitrum and Uniswap are becoming super powerful. So make sure that you're also using a wallet that's equally as powerful, or else you'll be missing out. If you're looking to upgrade your wallet experience, check out Phantom, the number one wallet of Solana, which has recently come to both Ethereum and polygon.
00:03:22.054 - 00:03:37.130, Speaker A: Phantom has native NFT support, giving you your own NFT gallery from inside the wallet. Phantom is both a browser extension and a mobile wallet and is also the only wallet to span both the Solana and Ethereum ecosystems. Check it out at Phantom app. And now let's get into the interview.
00:03:37.210 - 00:03:44.018, Speaker B: And we're back in Tel Aviv for the Starware sessions, and I'm talking with the Herodotus team. You guys want to introduce yourselves and then we'll get into what you guys are building.
00:03:44.184 - 00:03:48.470, Speaker C: Sure. I'm casper Kozio. I am one of the co founders of Herodotus.
00:03:50.170 - 00:03:55.480, Speaker D: Marcello also one of the co founders of Herodotus. And yeah, I'm the technical guy.
00:03:55.850 - 00:04:04.810, Speaker B: And so we're absolutely going to dive into Herodotus. But first, I want to ask you guys about why you decided to come all the way out to Tel Aviv for wear sessions. What brought you here?
00:04:04.960 - 00:04:27.550, Speaker C: Well, StarkNet, the whole community over here is very vibrant. They're building a really interesting ecosystem with a lot of unique projects. We wanted to network with these projects and essentially explain to other projects how they can leverage storage proofs and the advancements that we're building at Herodotus and explore all the unique applications that these technologies unlock.
00:04:28.450 - 00:04:39.800, Speaker D: Yeah, another reason we use cryptography. We love cryptography. Many people over here also seem to like cryptography. So, yeah, it just makes sense to come here and chat with the guys.
00:04:40.730 - 00:04:53.882, Speaker B: So you use the word storage proofs, which tells me that this is going to be a very technical conversation. So fair warning to the bankless nation. How did you guys come up with the need for how you pronounce it?
00:04:54.016 - 00:04:54.902, Speaker C: Herodotus.
00:04:54.966 - 00:04:56.138, Speaker B: Herodotus. How did you guys come up with.
00:04:56.144 - 00:04:57.094, Speaker A: A need for Herodotus?
00:04:57.142 - 00:04:57.306, Speaker B: Yes.
00:04:57.328 - 00:05:27.220, Speaker C: So actually, Herodotus is the father of history. That's what he's known for. But he's also the supposed creator of something called the Herodotus machine, which, fun fact, the Herodotus machine was supposedly used to build pyramids in Cairo. So Cairo. StarkNet kind of the vibe. That's where the names came. And Herodotus, since he was a historian, our solutions, unlock access to historical data for ethereum and applications on it.
00:05:27.220 - 00:05:36.550, Speaker C: And we thought that that was an interesting fit. And, yeah, it's a very technical product, so the target audience of that name is also quite niche.
00:05:37.470 - 00:05:39.900, Speaker B: So when did the Herodotus project get started?
00:05:40.350 - 00:06:36.490, Speaker C: So, Herodotus itself, we started building it in August of last year, August 2022. And since then, we have gone through a lot of research, a lot of experimentation that brought us to this point. Here we have presented some of the concepts and some of the technologies that we have been building at several conferences last year, but only here at Starquare Sessions in Tel Aviv. We have actually been able to demo a working API implementation of what using these products. These solutions that we've been building will look like, and we're very excited to share them with the community. The developers that build on top of this essentially can build really cool things. And I'd love to give you some examples of how others are using and exploring our technologies.
00:06:38.670 - 00:06:47.710, Speaker B: First, I'd like to ask what's broken about the state of all of these blockchains that we're using, the state of Web three because Herodotus doesn't exist. What's broken about the world right now?
00:06:47.780 - 00:07:15.190, Speaker D: Yeah. So, first of all, I would say that nowadays we live in a 2D world. Why? Because if you build a smart contract, this smart contract can access its own storage and to some limited scope, the storage of other contracts. And we want to enable some other dimensions, one of them being, hey, let's see what's happening on other roll ups and other layers of ethereum. Another dimension which is probably the most important one, is time. And, yeah, that's our mission, to essentially enable these two dimensions.
00:07:16.170 - 00:07:20.774, Speaker B: So where should we get started diving into Herodotus? Where should we leave?
00:07:20.812 - 00:08:13.654, Speaker C: I think the best way to kind of get started is to go over some use cases, give some intuition as to where this technology fits in. And then maybe later on, we can kind of COVID some more of the technical stuff of how we actually make this happen and where do we see herodotus fitting in in the future. So, as of right now, I'd say our most flagship integration is for governance. It's snapshot. X and essentially, what Snapshot X allows you to do is it allows you well, how they use Herodotus is they leverage Herodotus storage proofs to allow you to prove ownership of L One assets on StarkNet. So essentially, you're able to prove that you are the rightful owner of an asset on an L2 and reap the utility of this asset. And this is very powerful because you're able to keep the security of keeping your assets on this main net chain and essentially eliminate the need for bridging.
00:08:13.654 - 00:08:52.802, Speaker C: And I think that's one of the main takeaways from storage proofs. In general, they unlock a lot of use cases. And while I agree that there's a big shift over the recent months to years to bridging assets between various chains. Storage proofs actually eliminate the need for bridging in many circumstances. That said, it is possible to build a bridge on top of storage proofs. However, the general possibilities of what you can build on top of them are quite limitless. Snapshot is one of a very interesting example because users normally are kind of restricted to voting on the L one, which of course is pretty expensive.
00:08:52.802 - 00:09:07.580, Speaker C: And if we want to have dow adoption governance becoming much more used, we want to make sure it's accessible to all the people who might not want to pay $16 for transaction fee, et cetera. Is there anything you want to add?
00:09:08.270 - 00:09:10.502, Speaker D: No, I think that was a great explanation.
00:09:10.566 - 00:09:33.374, Speaker B: I think that's a use case that a lot of people in the bankless nation probably pretty easily wrap their heads around. I mean, how many times has there been a snapshot vote that's been relevant to a DeFi app or Dao that you are a part of but your assets are somewhere else and you just can't vote? And so what do you do? Do you go retrieve your assets to go snapshot vote, or do you just skip the vote? You probably skip the vote.
00:09:33.422 - 00:10:11.870, Speaker C: Yeah, especially when gas fees go through the roof and not much you can do about that at that time. Governance is one example, but there's a lot more you can build with this. So I personally am always excited with most of the financial applications of what's possible to build on this. And one of the examples is lending. Cross chain lending is quite interesting because you're able to essentially do something like locking your assets on an L one and taking out a loan on an L two based on storage proof. This allows you to keep your assets on a chain that you find secure, which is L one you just trusted and get exposure for, let's say cross chain arbitrage, et cetera.
00:10:13.330 - 00:10:36.630, Speaker B: I want to unpack that one really quick because I think that's really cool. Okay, so say I have an ave position on optimism, and I would like to borrow USDC on optimism, but I don't have any ETH on optimism. All my ETH is on the layer one. And so what are they called? Bridge storage proofs. Bridge proof. Storage proofs. Excuse me.
00:10:36.630 - 00:10:42.940, Speaker B: Using storage proofs, I can lock up my assets on the layer one and then prove that to ave on layer two.
00:10:44.510 - 00:10:57.086, Speaker C: Yes, but that's something that can be built on top of. Like, I want to clarify that our infrastructure unlocks these use cases, but it's up to the actual end developers to build these solutions on top of them.
00:10:57.188 - 00:10:59.242, Speaker B: Strictly theoretical use cases.
00:10:59.306 - 00:11:40.902, Speaker C: Correct. All the examples I'm going to list right now are simply things that projects we have been discussing with, entering into partnership agreements with, are exploring. And we've heard of another really cool example that I'm sure if someone has listened to our StarkNet workshop presented by Mache Suleski, is essentially proving that your nonce in an account abstraction wallet has not changed in over a year. And at that point you could essentially write account abstraction wallets that allow you to do fund recovery that is based on like a dead man switch, for example. So you couldn't prove that there was no activity for over a year, which makes it a reasonable assumption you maybe lost your keys. And at that point you could delegate ownership of that wallets or transfer funds based on that proof.
00:11:40.966 - 00:11:45.130, Speaker D: That can also work for EOAS that are part of, let's say, a multiseek.
00:11:45.570 - 00:11:51.566, Speaker B: Okay, so how does the magic come about? What's the magic under the hood that really enables this to happen?
00:11:51.668 - 00:12:17.522, Speaker D: Okay, so that's my part. Essentially the way how we think about blockchain is essentially it's a list, right? A list of blocks. And there is a very nice cryptographic relation between them. Essentially one block header refers to its parent, right, in a cryptographic manner, because the hashes just match. And we essentially embrace that relation. We just process the whole chain. We prove it so we know that whatever we come up with is valid.
00:12:17.522 - 00:12:33.550, Speaker D: And then on top of that, we can access the state roots. And the state roots are just a root of a tree that contains everything was ever committed on the blockchain at this specific block. And essentially by just leveraging cryptographic proofs, we are able to access whatever was present at any time on any chain.
00:12:33.970 - 00:12:41.246, Speaker B: Okay, and so where does the role of just like, nodes come into play? Because this is all based off of archive nodes, right?
00:12:41.348 - 00:13:22.734, Speaker C: Yes. So to kind of expand on storage proofs in general, they're very complex to work with and they have pretty high hardware requirements and know how requirements, you need to have archived nodes and you need to maintain them. You need to benchmark the different proofing systems that can be used to essentially generate these proofs and on every single chain this will vary. This is pretty complex. And we believe that developers doesn't give a developer a very easy integration experience. If we want to see storage proofs mainstream and essentially see them being adopted in the increased amount of projects, we want to simplify that as much as possible. We want to take this very complex topic and make it easy to integrate into your app.
00:13:22.734 - 00:13:59.970, Speaker C: So, for example, let's say I want to have an options protocol that settles based on, let's say, historical yield of, let's say on Ave. We could take that feed from essentially Herodotus by essentially sampling historical points in time from the blockchain and computing something we call a verifiable data feed. That's an interesting use case as well. What else? And yeah, so essentially we're abstracting the complexity of working with storage proofs and giving them to developers in an easy to use API.
00:14:00.130 - 00:14:44.854, Speaker B: So let me try and repeat a bunch of stuff to make sure I check my understanding. So, like, there are some ways for data to go into our DeFi apps. That DeFi app might actually be able to look on chain at historical data and then come up with its own data feed about using native smart contracts on Ethereum. But that's probably going to be really computationally intensive and probably extremely expensive. And on the L one, probably so expensive that it's not even possible. And it's just a theoretical conversation because of how expensive it is. What you guys are doing is operating archive nodes, taking that same data that exists on Ethereum or other layer two S or whatever, and then generating a proof of that data, which then you can prove to a smart contract about the data that's going into it.
00:14:44.854 - 00:14:57.222, Speaker B: And you can also prove that it's valid and that smart contract can receive that same data. But rather than that smart contract processing Ethereum history, you guys are just feeding it externally, but you don't have any trust assumptions because it's approved.
00:14:57.286 - 00:14:59.098, Speaker D: Exactly correct?
00:14:59.184 - 00:14:59.626, Speaker C: Yes.
00:14:59.728 - 00:15:00.186, Speaker B: Nice.
00:15:00.288 - 00:15:00.954, Speaker C: All right.
00:15:01.072 - 00:15:07.166, Speaker B: Okay. That sounds so generalizable that you can unlock almost anything with that.
00:15:07.268 - 00:15:44.086, Speaker C: Yes, there's a lot more use cases that I can probably think of. I'd kind of like to explain as to how we actually got here and how we ended up in a situation where this data access is sharded. Essentially, amongst all these other chains, layer twos have done a lot for Ethereum. They increase transaction throughput, et cetera. However, in itself, in the very early days of Ethereum, if you were a smart contract, you had access to pretty much all the data. It was all on this one chain. And as we wanted to increase this transaction throughput on Ethereum, layer twos managed to increase this transaction throughput.
00:15:44.086 - 00:16:17.570, Speaker C: But in itself, they sharded this data access. So if you were that smart contract, you no longer had access to all the data because it became isolated within your layer two. And with Herodotus and our APIs and the solutions that we're building, what we want to enable you to do is we want to enable developers to once again be able to access data between these layer twos in a trustless manner, relying on these cryptographic properties that secure the blockchain itself without introducing unnecessary trust assumptions.
00:16:18.070 - 00:16:27.974, Speaker B: So what's the roadmap like, what are you guys building? First, I think you talked about snapshot. It sounds like that's coming first. What's coming second? What's coming third? What are the ways that people are going to be impacted by this the most?
00:16:28.092 - 00:16:50.426, Speaker C: Yes. So our first integrations are essentially with StarkNet. We have a StarkNet ethereum connection built. We define these as connections, meaning that when there's two chains between, there's a need for data access. We define that as a connection. And this connection can be one directional or bi directional. And in this case, the first connection that we have built and we have successfully benchmarked, et cetera.
00:16:50.426 - 00:17:14.514, Speaker C: And we will be releasing access for the public for with API keys, et cetera. In the future is this connection that allows you to read Ethereum data from StarkNet. So it's a one directional connection. In this case, this was more of a decision that is very expensive to do it the other way around. In the future. This is something we're going to explore as well. And now that we have done this StarkNet Ethereum connection, the next ones that we're going to be exploring are going to be EVM to EVM.
00:17:14.514 - 00:17:24.986, Speaker C: We haven't yet finalized the decision as to which roll up we're going to go for, but this is going to come out sometime in the next two to three months maybe.
00:17:25.008 - 00:17:31.558, Speaker D: To add, on top of that, we also allow to access states from Polygon optimism and Arbitrum of StarkNet.
00:17:31.654 - 00:17:45.220, Speaker B: So my intuition tells me that this just works across any blockchain. And the fact that a layer one or a layer two or a side chain or an alternative layer one is actually a detail that does not matter for what you guys are building.
00:17:45.750 - 00:17:57.522, Speaker C: Yes, in a way right now we are simply focusing on making it EVM compatible and the chains that we deploy it on later is a later decision. We have not picked one yet.
00:17:57.656 - 00:18:11.766, Speaker D: Maybe to add on top of that, we firstly are focused on doing like l two to l two communication. L one to l two. We are not looking at L one to l one yet because it's a completely different type of problem. Many things are in common, but it's.
00:18:11.798 - 00:18:15.306, Speaker C: Still not on the roadmap yet, not for anytime soon.
00:18:15.408 - 00:18:18.458, Speaker B: So how big is the team currently?
00:18:18.624 - 00:18:30.026, Speaker C: There's nine of us and there's a few part time people. But yeah, the team's growing and we're building. There's results and things are moving very nicely.
00:18:30.138 - 00:18:33.280, Speaker B: Beautiful. If people want to learn more, where should they go?
00:18:33.890 - 00:18:43.466, Speaker C: Herodotus dev the Twitter or Herodotus dev the website is probably the best resource. That's where we post updates, et cetera.
00:18:43.578 - 00:18:52.566, Speaker B: Awesome. And at the end of this interview, at end of this conversation, the naming father of modern history definitely checks out. I understand that how that came to be.
00:18:52.668 - 00:18:53.622, Speaker C: Happy to hear that.
00:18:53.676 - 00:18:54.822, Speaker B: Cheers guys. Thank you so much.
00:18:54.876 - 00:18:55.190, Speaker D: Thanks.
00:18:55.260 - 00:18:55.540, Speaker C: Thank you.
