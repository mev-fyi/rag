00:00:11.640 - 00:00:12.190, Speaker A: You.
00:00:14.160 - 00:00:36.896, Speaker B: Bankless nation. Welcome to another state of the nation episode. This is a special episode we have lined up for you because it is EIP 15 five nine week. That's right. The week has finally come. The deployment of EIP 15 five nine. David, we have so much packed into this week, but let's talk about the first event, which we are hosting right now live streaming us on YouTube.
00:00:36.896 - 00:00:42.948, Speaker B: You can catch it on the podcast, as usual later. What is the panel that we have lined up today?
00:00:43.114 - 00:01:18.530, Speaker C: Yeah, we have Tim Baco, who is one of the guys that really stepped up to get EIP 1559 over the finish line and then stepped into the all core devs coordinator position with all of Ethereum. And so Tim came to us and said, I really want to ask some experts, some expert level EIP 1559 questions. And so that is what is going on today. Tim pulled in who he thinks has just the best understanding as to what EIP 1559 is from the expert perspective. So he is asking the questions that Ryan, I don't think you and I would have been able to even think up.
00:01:19.780 - 00:01:21.280, Speaker B: We're not smart enough, man.
00:01:21.430 - 00:01:22.464, Speaker C: We're not smart enough. No.
00:01:22.502 - 00:01:46.404, Speaker B: We were barely smart enough to handle the EIP 15 five nine introduction with Hasu that we had a few months ago. And by the way, guys, if you're looking for a primer on 15 five nine, we want to refer you to that episode. Take a look at the bankless archives. We'll include it in the show notes as well. But this is a deeper dive because this panelist has the EIP 15 five nine rock stars. You mentioned Tim Baco, who are the other panelists? David?
00:01:46.452 - 00:01:56.888, Speaker C: Yeah, we have a bunch of core client developers. We got Barnaby Monot, we have light clients, aka Matt. We have Hazu, who is.
00:01:56.974 - 00:01:58.376, Speaker D: I would like to say that Hazu.
00:01:58.408 - 00:02:09.440, Speaker C: Came over to the Ethereum world because of EIP 1559. Maybe that'll be a question in the show. And then we, of course, also have Micah Zoltul, who is a major contributor to Ethereum.
00:02:09.860 - 00:02:42.104, Speaker B: Guys, you can ask questions on YouTube. Tim is going to be asking questions from his own roster of questions. But after the conversation, David and I are going to pop back on, hopefully ask some of our own questions and address some of the questions in YouTube. So ask those questions. We will be documenting those as we go. Guys, this is just event one, though, because the actual deployment of EIP 15 five nine happens. Going to say, what block number is that? Block number 12,965,000.
00:02:42.104 - 00:02:55.772, Speaker B: I believe if I got that correct, David. So what time is that going to be? We don't know. It's on the Ethereum clock schedule. So it depends on block speed. But it looks like it might be around 05:00 a.m. Pacific time on Thursday. That would be 08:00 a.m.
00:02:55.772 - 00:03:01.536, Speaker B: Eastern on Thursday, August 5. So you know, David and I are going to be up and what are we going to be doing?
00:03:01.638 - 00:03:23.216, Speaker C: Yeah, we're going to be live streaming with the boys over from ETH hub. And we're also pulling in some classic theorem community members. We got Hudson joining the call. I just got a message from Danny Ryan saying he'll be there. Trent van Epps is going to be there. Tim, I believe Tim is also going to be there. So it's going to just be a community call of people all watching the block of EIP 1559 getting mined.
00:03:23.216 - 00:03:35.112, Speaker C: And so that stream will actually be starting, I think roughly around 04:30 a.m. Because we think that the hard fork is happening roughly around five. So we want to be there a little bit early to make sure that everyone gets a chance to watch it happen live.
00:03:35.246 - 00:03:58.688, Speaker B: So David's going to be up early. Not as early as our e two staking live stream, but still pretty early. I'm glad I'm on the east coast for this one last event for you later that day. On Thursday, we have an EIP 15 five nine bulls panel. We're talking about all of bullish things that EIP 15 five nine could mean for ETH asset. We have squish chaos DC investor James Wang. We are live streaming that at 02:00 p.m.
00:03:58.688 - 00:04:23.432, Speaker B: The afternoon of August 5. So lots to catch up on. The best way to just catch up on everything is to subscribe to the YouTube channel, bankless YouTube and then click notifications on David. One last thing. And then we are going to get to the sponsors and then the panelists, that is, pool together. They're doing some really cool things right now, David. And this is like celebration of scalability summer with pull together.
00:04:23.432 - 00:04:49.436, Speaker B: So if you don't know pull together, they are a no loss lottery. So that means you deposit your eth, it could be your USD, your stablecoins in. You don't lose any of it. You only have the possibility of gaining. They actually use some of the DeFi protocols to generate interest and then pay those out as prizes on a weekly basis. So every week there's a lot of draw. Super cool protocol.
00:04:49.436 - 00:05:20.044, Speaker B: Super cool way to save. You can see right now if you deposit in some USDC. There's a weekly prize of could earn if you click into that. They also have some loop box prizes too in every single one of these. These could be other coins as well. So super exciting. The thing I'm most excited about David, is no gas fees because it is also layer two summer scalability summer and gas fees are much reduced with some of these right now, sidechain type deployments and polygon and others.
00:05:20.044 - 00:05:25.788, Speaker B: And I think roll ups will be coming soon. So a lot happening there. David, anything to add?
00:05:25.874 - 00:05:27.052, Speaker C: No, that's pretty comprehensive.
00:05:27.116 - 00:05:27.772, Speaker D: Ryan.
00:05:27.916 - 00:05:45.076, Speaker B: Guys, just get in the pool. The link is in the show. Bankless CC slash pool together. Relocate your savings account to pool together. All right, we are going to get to the sponsors right before this panel. These are the sponsors that made this episode possible balancer is a powerful platform.
00:05:45.178 - 00:06:35.300, Speaker D: For flexible, automated market makers. Typical amms just have two tokens inside of one liquidity pool, which can lead to fractured liquidity across the many pairs. In DeFi with balancer, you can access the full power of multiple tokens inside of one single amm, which unlocks an entirely new playing field of possibility. This makes balancer an awesome building block for so many different use cases. Balancer pools can make asset indices, but instead of paying fees to portfolio managers, Balancer lets you collect the fees from traders who use your portfolio for liquidity. Additionally, balancer smart pools can be programmed to have properties that change according to predetermined rules, such as changing the swap fee based on market conditions, or even liquidity bootstrapping pools, which can help you launch and distribute your token with day one liquidity. At bankless, we use a liquidity bootstrapping pool to sell our bap t shirts to much success.
00:06:35.300 - 00:07:26.464, Speaker D: Balancer V two brings powerful new features that makes your money work even harder for you. In V two, idle tokens are capable of generating yield in DFI without sacrificing liquidity in the pool using Balancer's asset managers Balancer's vault architecture lets you trade between balancer pools at a fraction of the cost versus trading on other platforms. Balancer's mission is to become the primary source of liquidity in DeFi by providing the most flexible and powerful platform for asset management and decentralized exchange. Dive into the balancer pools at app Balancer Fi Gemini is the world's most trusted cryptocurrency exchange. I've been a customer of Gemini since I first got into crypto in 2017, and it's been my main exchange of choice to make. My crypto buys and sells. Gemini is available in all 50 states and in over 50 countries worldwide.
00:07:26.464 - 00:08:07.724, Speaker D: And on Gemini, there are markets for over 30 various different crypto assets, including many of the hot DFI tokens. And it's one of the few exchanges that has liquid Dai markets. Gemini just launched their earn program, where you can earn up to 7.4% interest on 26 various crypto assets. If you're tired of paying fees in DFI or you don't want to worry about DFI exploits, but you still want to earn interest on your crypto assets, Gemini Earn is the product for you. Another product I'm stoked to get my hands on is the Gemini crypto back credit card, which gives you 3% cash back on all of your purchases, but paid to you in your preferred crypto asset. When I get my Gemini credit card, I'm going to make sure that I get my cash back in ETH.
00:08:07.724 - 00:08:26.136, Speaker D: So whenever I buy something, I get a little bit of ETh bonus back to me. At the same time, you can open up a free account in under 3 minutes@gemini.com. Gobankless and if you trade more than $100 within the first 30 days after sign up, you'll be gifted a free $15 bitcoin bonus. Check them out@gemini.com.
00:08:26.238 - 00:08:27.976, Speaker C: Gobankless one.
00:08:28.158 - 00:08:28.890, Speaker A: Go.
00:08:31.440 - 00:09:20.330, Speaker E: Okay, well, good morning or evening, everybody. Welcome to this 1559 paddle that I'll be running for the next hour or so. Yeah, so we have a lot of people here with pretty extensive experience with EIP 1559. As you introduce yourselves, one kind of first question I'd like to ask you is what was the moment that you kind of got 1559? And what I mean by this is that it's a pretty complicated change. It tends to take people, like, a lot of pass through it to feel like they fully understand it. So, yeah, as you just give a quick description of yourself, just walk through kind of what made you get 1559? Matt, do you want to go first?
00:09:20.780 - 00:09:43.248, Speaker F: Sure. Hey, everybody, I'm Matt. I go by light clients on the Internet. I work for a small team called quilt. We do a lot of core protocol R and D, and I was one of the main contributors for 1559 and go ethereum. I don't think there was one specific point. Whenever 1559 specifically clicked for me, I think there were kind of a couple of points.
00:09:43.248 - 00:10:30.448, Speaker F: And I originally read Vitalik's paper a few months after he wrote it, the pricing resources paper, and I kind of at a high level understood. 1559 is going to act like this dampener to dampen the spikes in gas prices during periods of high demand. And that was something that sort of resonated fairly quickly through discussions. And I kind of tucked that away for basically two years until I really started getting involved again in the end of 2020. And so that was kind of one aspect, I would say the other aspect of that was the Tim rough garden paper. I really like Tim rough Garden's earlier papers on axiomatic approaches to block rewards. And so when he wrote about 1559, I was like, this is a really good paper describing all these things.
00:10:30.448 - 00:11:19.776, Speaker F: But there's another part of 15 and 59 that didn't click for me until a lot later. And that was how it affects the security of the protocol. And I was lamenting to some people, I'm not really the biggest fan, actually, of this ultrasound money meme, especially for core developers. I think that it's not really my place to propagate these memes. And so I was lamenting to some people about this, and they made this good point that we're moving to a world of proof of stake and proof of stake we have this economic requirement of ether to kind of have value, to provide security to the network, and we have a bad, to a degree, in proof of work, but there's a lot less transactional cost of mining and owning miners and stuff. And so at that point, I kind of back down a little bit from this ultrasound money meme. The community can have that meme if they want.
00:11:19.776 - 00:11:34.784, Speaker F: I think it's been a valuable resource in pushing 1559 forward. Not my place to perpetrate it, but I think that the value of ether being something that's stable, is really good for security of the network. Thanks for sharing.
00:11:34.832 - 00:11:39.350, Speaker E: That was quite the history. Barnabe, you want to go next?
00:11:40.940 - 00:12:08.384, Speaker G: Sure. Hi, everyone. Very happy to be here. So my name is Barnabe Mono. I'm a researcher at the robust incentives group, which is a research group funded by the Ethereum foundation. We mostly do things that look like game theory, a bit of economics modalization simulations. And actually my experience with 1559 started like everyone else when I was just trying to understand it.
00:12:08.384 - 00:13:09.120, Speaker G: And the way I understand things is I just try to simulate them and see kind of how they play out. And this is really kind of when it clicked for me. And I think the major insight that I got and that I feel okay, this is when I actually understand 1559, is understanding why the dynamics of what we call the priority fee, or sometimes the tip, are completely different from the dynamics of the gas price. As they are today, which is something that many people, I think, still have a bit of confusion around. Like, why aren't we just shifting to a model where, okay, there's a tax, the base fee, and kind of people still need to compete on that tip to the miners. And once you get this insight, I think you really unlock everything that makes 1559, like a step change in the way that the protocol is doing the gas market. And so, yeah, I hope we can talk a bit more about this, but I'll leave the other guests.
00:13:10.360 - 00:13:11.940, Speaker F: Thanks for sharing.
00:13:12.520 - 00:13:14.390, Speaker E: Micah, you want to go next?
00:13:16.040 - 00:13:48.876, Speaker A: Yeah, sure. So I can actually show you guys where I learned how eap 1559 worked. Let me share my screen here real quick. So back in July 2018, Vitalik wrote this article on e three search forum that talks about basically what ended up being EIP 1559. You can see here, this is 12:00 a.m. Or whatever on July 3. And then like, I don't know, 6 hours later, Micah shows up and I'll paraphrase so you guys don't have to all read this.
00:13:48.876 - 00:14:07.460, Speaker A: It basically says, come on, vitalik, why are you being an idiot? This won't work. There's no way this will work. This is not any different than what we have right now. We can do better. Then Vitalik shows up, and again, I'll paraphrase a little bit. And he basically says, oh, my God, who is this guy? I've never heard of him before. He clearly doesn't know what he's talking about.
00:14:07.460 - 00:14:34.030, Speaker A: And he tries to explain some stuff to me, but you can tell from his tone that he obviously doesn't think I'm going to get it. I'm beyond help. Then a few hours later, again, this is July 4, so we're going back and forth pretty quick here. I basically just, again, tell him that he's wrong, obviously, and this cannot work. And then he again tells me, no, you're wrong. And we just basically go back and forth, back and forth. And then Michael mysteriously disappears for like three months.
00:14:34.030 - 00:15:12.190, Speaker A: And then I eventually come back to this thread, actually, maybe it was like a year later or something, or another thread years later, and I came back guns blazing, and I was like, oh, my God, everybody needs to get on board with EIP 1559. This is the best idea ever. Hopefully no one remembers what I said in the first place. If you're curious about my learning experience, go ahead and look at this link on the e three search forum, and you can see how Micah, the person who is now probably the biggest proponent of VIP 1559 originally was the biggest naysayer and just spoke aggressively against everybody who thought this was a good idea.
00:15:13.520 - 00:15:20.110, Speaker E: Wow. Do you remember what made you change your mind between kind of those two?
00:15:21.360 - 00:15:42.710, Speaker A: Vitalik ended up being right. I was wrong. And so he patiently explained things to me and I just didn't get it. And a lot of the things I didn't get were the exact same things that people who I explain EIP 1559 to don't get. And so I can appreciate where they're coming from. I was there. I was that guy who was like, no, this won't work.
00:15:42.710 - 00:16:02.670, Speaker A: The mechanics are wrong. But once you actually dig in and really let it sink into your brain, the mechanics actually do work. It does make sense, but it's not obvious at first. The specifics are kind of nuanced, and maybe we'll get into that later in this call. But yes, it's the same reasons everybody else thinks it won't work.
00:16:04.240 - 00:16:09.980, Speaker E: Wow, that's really turning of the tides.
00:16:10.960 - 00:16:11.564, Speaker B: Cool.
00:16:11.682 - 00:16:13.710, Speaker E: Hasu, you want to go next?
00:16:14.160 - 00:16:45.832, Speaker H: Sure. Yeah. I'm Hasu. Hi, everyone. I'm a research collaborator at paradigm. I'm also co host of the uncommon Core podcast and still a general editor at Variable Insights, which I helped bootstrap. My first touch point with ERP 1559, I would say, was in early 2020 when I did a month long deep dive with Georgia, who also collaborated with later on, on many articles on ERP one five nine.
00:16:45.832 - 00:17:58.640, Speaker H: And we did what was basically a deep dive on all possible block space market designs that are employed in the crypto space. So across all projects, pretty much we looked both at existing proposals and at basically existing implementations, as well as stuff that has been proposed and tried to understand why it has been like, what are the goals of the proposal? And for historic stuff, why has it been discarded? And a lot of stuff that has been discarded has been broken. So it was very interesting to see all of the different stuff that you can propose and then work through on your own. Why is this a broken proposal? Why does this not work? And this is where we stumbled across ERP 1559, which was barely starting to get any traction in Ethereum, I would say. And yeah, I would say mostly thinking about bitcoin at the time and not very much about Ethereum. And so my first instinct looking at this was, well, this is an over engineered mess. So it has so many goals described in the original post and so many aspects of it.
00:17:58.640 - 00:18:39.144, Speaker H: So there's the fee burn, there's like the elastic block size, then the protocol quotes a fixed price. So you still have this tip auction on top. And it was so many things, and it tried to be so many things at the same time, at least what it seemed like from reading the goals. But then I tried to point out why it's actually broken. And I had a lot of experience, a lot of training at this, because for months we had been dissecting all kinds of blocks based protocols and I couldn't. And within a few days I realized, yeah, this is actually, all of these moving parts are actually necessary. And it just affects so many things inside Ethereum.
00:18:39.144 - 00:19:35.260, Speaker H: That's why you can say it has so many goals, but these are really oftentimes like downstream effects, like the fact, for example, that we burn eth, you could say. So the people who use eth as money, they like that it creates a disinflationary pressure on the price of Eve. But then people who care a lot about security like that, it cements eth as the fee paying asset in the block space market, even if the user pays in any other currency, even if eth get extracted away on the user side, which I think we are all for in the long term. But the miner still has to keep an inventory of ETH and still has to burn E. So it has all of these very nice properties. That was basically my experience with ERP one five nine. So this culminated in our post like analysis of ERP one five f nine for derivative insights.
00:19:35.260 - 00:20:20.110, Speaker H: Again with Georgia's. Yeah, and this, I think this, for many people, was the starting point hearing about this proposal because we used to get a lot of reads at the time. And I think this was really like for us when you had this crowd of people who were really interested in following it and asking for more and more and more content on it. And yeah, I've been in so many Twitter discussions and so on because so many people had the same questions, right, that I had before it clicked for me. And I think it was really good training, like just engaging with people on Twitter and on podcasts and explaining it to them like a hundred times, engaging with the different questions. So, yeah, here we are.
00:20:21.760 - 00:21:08.670, Speaker E: Yeah, it's pretty impressive how almost everybody here, or I think basically everybody here started off as a skeptic and slowly got converted to liking. 50 59 Bartimae, you mentioned in your answer the new mechanism is obviously going to be better for gas usage and whatnot. And you've also mentioned to me in the past that once it goes lives, you want to actually track that and try to quantify the impact so can you kind of give us a bit of detail of what are you expecting to see? What metrics are you expecting to change once we launch 1559? What would you consider a success? What are some things that would kind of scare you if you saw them once 1559 went live?
00:21:10.560 - 00:21:57.100, Speaker G: Yeah, that's a great question. And I think my motivation here is really driven by the fact that I spent all this time doing simulations, trying to think through. Okay, how do things work when they are actually launched? You can't really get these answers from, let's say. So we have all these testnets, which are awesome to test that the code is working. Clients understand each other, but they don't really tell you so much about the economic properties of the mechanism or really what happens when there's actual money on the table. So we know cannot go maybe too wrong because it is live in some version on some other networks. But the things that I will be very much like looking at and that I think are super interesting to keep track of.
00:21:57.100 - 00:23:14.992, Speaker G: The first one is kind of looking at, if you're thinking of the chain, you have these metrics block by block, looking at the gas used. So you have in 1559 doubly sized blocks which allow to have kind of this damper when you have demand shocks. Trying to understand, well, are the blocks getting too full? So one question we often get is, how often does 1559 revert to a kind of auction on the tip? And Hasu and Georgia's kind of made this meme of 95% of the time, like, things go right 5% of the time. Maybe there's too much people at the same time, and we need to have this auction. And in that case, the mechanism still works, but maybe there's more instability on the user side. And so one question is, well, is it really 95%? Can we quantify how often 1559 is pushed in this kind of regime? The second thing that I'll be looking at, and it's certainly kind of dual to the gas used, is actually the series of base fee themselves. So we wrote a paper with some of my co authors, we've seen that most of the time, base fee.
00:23:14.992 - 00:24:12.888, Speaker G: So the base fee update rule is kind of a multiplicative rule that depends on the gas that was used in the previous block. These update rules, it's actually a fairly simple one, and let's say even naive, but it's good that it's naive in some sense because it makes it somewhat robust to whatever the protocol can throw at it. But we know that there are regions where that update rule can be maybe too slow to pick up the actual, like, if the demand is changing really fast, you want the base fee to catch up with this as fast as possible. And in other regimes it can be also too fast. And when it's too fast, it just kind of flip flops around a value without necessarily getting to that equilibrium. And that can lead to instability in the sense that you can see blocks which are empty because basically kind of jumped up and everybody's priced out and then it goes down, everybody wants to go in, and you can have this. So we know that in theory that's something that can happen.
00:24:12.888 - 00:24:56.900, Speaker G: In practice, maybe. I'll be very curious to see if we actually see that happen. And one reason that we might see it happen, which is maybe the third thing that I'll be looking at, is also kind of how users send their transactions via their wallets. And their wallets are using oracles to kind of determine the parameters. For 1559, you have two parameters, the max fee and the priority fee. And depending on how these parameters are set, it's possible that you can find different patterns in the way that the transactions are first dealt with at the transaction pool level. So how they kind of get ordered by the client, but even when they reach on chain.
00:24:56.900 - 00:25:49.350, Speaker G: What do you observe? Do you observe these oscillations? Do you observe that? Maybe the oracles can be tuned given the data that we have on it, like we often say, okay, you should take this kind of random constant as an oracle default, but we'll change it when we know a bit more about the mechanism when we have the data. And so I think it would be very important to kind of backtest how the oracles have done, especially at launch where we have this mixed regime. Some wallets will be still sending legacy transactions, like the old formats and new wallets, or same wallets, but new versions will be sending more 1559 native transactions. So kind of picking apart how wallets are doing. Can we back test it? Can we understand how to make them more optimal? Perhaps. These are definitely the things I'll be looking at.
00:25:50.780 - 00:26:19.036, Speaker E: Cool, thanks. So to summarize at a high level, three things. How often do we actually get this reversion to first price auctions? So basically 100% full blocks. How does the base tree evolve? Do we oscillate smoothly or do we just kind of go from full increase to full decrease? And how well do oracles adapt to set basically the priority fee for transactions?
00:26:19.148 - 00:26:19.520, Speaker B: Right?
00:26:19.590 - 00:26:20.940, Speaker G: Yes. Excellent scenario.
00:26:21.020 - 00:26:21.650, Speaker F: Yes.
00:26:22.020 - 00:26:57.470, Speaker E: Thanks. And Micah, I think you wrote what was at least for me. The best explanation of why 1559 actually improves Ux for end users. And I know you spend a lot of time in several discord servers kind of dealing with users who, say, have their transactions pending and stuck today. So can you take a few minutes to actually walk it through from kind of a new user to ethereum coming in? Like, why is 1559 going to provide a better experience for them to get their transaction included than the current system?
00:26:59.520 - 00:26:59.932, Speaker B: Sure.
00:26:59.986 - 00:27:53.116, Speaker A: Let me go find the article I wrote so I can read it real quick and remember what I said. Apparently it was a great argument, if I remember correctly. So basically right now, what we see, for those who don't know, I run a little side business where I offer support services, outsourced support services to Ethereum applications on Discord. And so I have a lot of insight into what problems users run into, because my team is constantly helping these users deal with those problems. One of the most common problems we see from users is stuck transactions or pending transactions, same thing, different names. And so a user does a thing on Ethereum, like they go to uniswap or they go to whatever app they're using. They go to use it, they plug it into the app, it pops up metamask, and they say, okay.
00:27:53.116 - 00:28:31.284, Speaker A: And they basically choose the defaults. And they think that their transaction, they say this little pending spinner shows up and they're like, okay, my transaction should be included soon. The problem is, writing an oracle is very hard. So figuring out what the right gas price is is a very hard problem today. And so that app, so Metamask is doing its best to try to choose a gas price that results in two things at the same time. One, the user isn't overcharged, so they don't want to set a gas price that's really high, and then the user ends up paying more than they needed to. And two, a gas price that is not too low that the user's transaction doesn't get included when gas prices are stable.
00:28:31.284 - 00:29:21.208, Speaker A: So when the demand for block space and Ethereum is very stable over time, meaning like the exact same number of people want to be included as are submitting spread out over, let's say, 15 minutes, then this problem is pretty easy. You just say, okay, look at the previous blocks. Okay, they're all around 20 or whatever. So 20 is what we'll set. This problem becomes much, much harder when the demand for Ethereum is increasing for any reason. So it increases because there's an ICO or a new NFT sale, or just because people in the US are waking up, or because it's a weekend or a weekday, or it's the second Thursday of the month and it's payday in Azurebaijan or whatever, whatever it is that causes demand of ethereum to increase is very complicated. This is the whole world of people doing things.
00:29:21.208 - 00:29:44.396, Speaker A: And for some reason they have all decided to do things on Ethereum right now. And so what happens is the user shows up, fills in everything, hits submit, and the gas price is set by metamask using oracle. That usually works pretty well, but this time it didn't because it estimated a gas price based on history. And demand is increasing. And so the gas price keeps going up, up and and up and up and up. But the problem gets worse. So the user has a stuck transaction.
00:29:44.396 - 00:30:03.556, Speaker A: You'd think, okay, well, they can just increase their gas price. The problem is the user doesn't know this. The user just knows their transaction is stuck. So what do they do? Like, okay, I'll refresh the page. So they refresh the page, but now the page doesn't remember that they had a pending transaction. So then it just prompts them again, hey, what do you want to do on the Internet? And they say, oh, I want to swap some coins. So they go and fill in the form again.
00:30:03.556 - 00:30:38.950, Speaker A: They swap some coins and hit the button and it still doesn't work. So they try it on their browser and they repeat the process. And now by the time the user comes, comes to us for support or comes to somebody for support, they've got like six transactions out there. If we're lucky, someone helps them that can walk them through the process now of canceling all those transactions because the user only wanted to do one swap, but they've got six swaps pending. And so someone will walk them through the process of canceling those transactions, which is not super hard, but it's kind of technical and the users don't really understand what's going on. So they're just kind of blindly following people on Internet who are giving them an advice. And we all know that's a terrible idea.
00:30:38.950 - 00:31:24.176, Speaker A: And so that's the happy path where people are following advice of random strangers on the Internet to fix their problem. The unhappy path is they don't go seeking help soon enough. And what ends up happening is all six of those transactions go through. And instead of buying five eth worth of dogecoin, they now have bought 400 eth worth of dogecoin and they do not want 400 eth worth of dogecoin because it turns out that drop tanks the dogecoin price or whatever it was they were doing. Like, the thing they're doing is not the thing they wanted to do. And so now you have a very unhappy user who now is seeking help, and like, how do I undo this? Okay, so the first thing they try, of course, is, okay, I'll swap back. And so they go to swap back, but for whatever reason, there's huge demand and they get in the same situation.
00:31:24.176 - 00:32:02.040, Speaker A: So they swap back 20 times and now they're shorting doge or something. I don't know. The point here is that users get into these really weird situations when things don't behave as they expect. And with 1559, the hope is that we can kind of solve, for the most part, solve this whole class of problems by just making it so that one root problem. So that one root problem in this scenario was writing an oracle for the gas price is hard. Predicting what the future price of gas is is a really hard problem because you both don't want to go too high and you don't want to go too low, and so you can't just overbid, because then it costs the user too much money. You can't just underbid because then you end up stuck.
00:32:02.040 - 00:32:50.780, Speaker A: And so that's a really hard problem. And so 1559 will hopefully make it so when the user goes to metamask, metamask can follow a very simple algorithm that will, 95% of the time, or hopefully even more 99% of the time, if we're lucky, will get it right and will not result in users in that situation. And when it gets it wrong, we want it to fail gracefully. So in the ideal situation that 95, 99% that we're hoping for, what's going to happen is the user will be included in the next block and they'll pay exactly the minimum they need to pay. And that was it. In the kind of worst case, hopefully worst case scenario, the user will have to wait a little bit, but they'll still get a good price, like, they still won't end up overpaying. And in the worst case scenario, I will acknowledge you can still end up in this kind of pathological pending transaction situation.
00:32:50.780 - 00:33:24.232, Speaker A: But the hope is that becomes a much more rare thing, that it doesn't happen to 100 users a day, it's happening to one person every couple of months. Get stuck in this situation, and that's a significantly better situation just from usability and making it so users experience with Ethereum is simpler. And all this just because we can solve that oracle problem easier because we now have the data and we now have this second price auction thing, so you don't need to try to do complicated auction stuff. Thanks.
00:33:24.286 - 00:34:12.970, Speaker E: Yeah, that was a very colorful overview of the situation, and I think it's one of the things that gets missed a lot. Like when we talk about 1559, people say, like, it'll improve the UX, but yeah, that's often like a very abstract thing. So yeah, this helps kind of put it in perspective. Moving on to Matt, you've worked on not only 1559, but on a ton of other kind of pretty important eips. Like your team worked on account abstraction last year, which eventually morphed into 30 74. You've implemented 1559 and you're one of the people who has background both kind of with the smart contract level and the core protocol level, which is rare. Usually people are on one part of the stack or the other.
00:34:12.970 - 00:34:28.620, Speaker E: So how should smart contract devs, building on Ethereum, kind of think about 1559 and should they change anything about it? How should they basically change their practices or approach 1559 as it gets deployed?
00:34:29.600 - 00:35:21.692, Speaker F: Yeah, I think that's one of the cool things about 1559 is, like Michael was saying, there's all these Ux improvements, but for the most part, smart contract developers get to just take advantage of all of these things for free. There's been a lot of work by core developers and researchers up front to try and make sure that 1559 is a change that's safe, that it actually works the way it's intended to, and a lot of other. The burden has been shouldered by these wallet teams, like developing how they're going to choose these priority fees and interoperating with new RPC endpoints. And so now the smart contract developers kind of get this free ride. They just get to take advantage. They get to continue building their smart contract to take advantage of a lot of this work that people have been doing over the last few years. There are a few nuanced cases where 1559 really does come into play.
00:35:21.692 - 00:36:02.184, Speaker F: And one of the interesting ones is that the gas price opcode will begin to behave slightly differently. It's not really something most people are actually going to notice. But now for 1559 transactions, the gas price opcode will return the effective gas price of the transaction. So that takes into account the base fee. It's the actual amount that's being deducted from the account paying. And if for the most part, people who use the gas price off code, this probably isn't going to be a problem. There is like a very specific class of people, though, that use the gas price offcode in pathological ways, or expect that they could potentially have a gas price of zero.
00:36:02.184 - 00:36:39.680, Speaker F: And that's something that won't be possible with 1559 anymore. So you've kind of removed a few paths of execution that could have existed in the world. So now, if you ever had anything that was checking if gas price equals zero, then do this. That's not going to be possible anymore. And so if you were a smart contract developer who decided that was a great idea, then that's something you should consider. There is a class of people, I don't know if they actually have gas price equals zero, but flashbots does generally require that these bundles are being included with a gas price of zero. This kind of helps them from, if their transaction is uncle, they don't have to pay the gas cost to go into the transaction.
00:36:39.680 - 00:37:33.920, Speaker F: And so if you are someone who's planning to use flashbots for something, whether that's for MeV or for account abstraction or user onboarding, these are things that you should take into account. And I'm not certain what flashbots has chosen to do about this, but now you have to understand that you won't be able to have zero gas price transactions anymore. So that's kind of how 1559 changes what exists in the EVM today. But 1559 does add this new base fee functionality, and an opcode was added not in 50 59, but in a different EIP 31 98. And this base fee opcode is going to provide really exciting new functionality to the protocol a smart contract developer should consider looking into and maybe using. And there's a couple of places where this base yap code could be really valuable. The first one is if you want to pay for some bounty to be executed on chain.
00:37:33.920 - 00:38:54.928, Speaker F: I know there's a couple of protocols that do things like this where maybe someone will say, I want to have this limit of order executed at this price, and a relayer will decide to submit it on chain whenever that bounty would pay out. But there's kind of this difficult problem with how do you decide what a fair price to pay for them executing that on chain is? Because if you want to have a bounty that pays out, like years down the line, it's really impossible for you to know, is ten guay going to be a good price for that bounty to pay out to the user, or are we going to be like 200 guay? And you can't really use the gas price opcode, because then the person who submits the bounty could really just grief the user. They could submit a 500 way transaction and there's no way for the execution of the smart contracts right now to get a fair idea of what the gas market looks like. But base fee is basically a mechanism for having insight during execution of what is the current demand for gas in the protocol. And so this creates this really nice mechanism where you can pay for bounties more fairly. And having this base, the opcode is also going to allow new financial primitives around the gas markets to emerge. I think we'll see people develop future mechanisms based on the gas market.
00:38:54.928 - 00:39:30.860, Speaker F: People want to speculate whether gas prices are going to go up and go down. And we kind of had this with gas tokens, because you could mint a lot of gas tokens whenever gas was really cheap and then there was demand for it. You could sell them whenever the gas price is really higher, you could call them in. But there was like very significant transactional costs of using gas tokens. And it wasn't really something that was a net good for the protocol in general. And now this base fiat code is going to be something that we can use to much more efficiently develop gas market primitives. So I think that's something that interesting that smart contract developers should look into and consider.
00:39:30.860 - 00:40:30.530, Speaker F: The last one is really for these layer two scaling solutions. There are a lot of fraud proof based solutions, roll ups, even state channels have some sort of replay mechanisms to play out states. And right now you kind of have this world where we just choose a static amount of time to give for people to submit their fraud proofs on chain. And I know optimism says like one or two weeks. This is the challenge period that you have to submit a fraud proof, and that's to avoid minor censoring for a long period of time. What we might be able to do with base view is we might also be able to look at the actual load of the chain and determine how many people are trying to execute things on chain and potentially expand those fraud proof periods during periods of high demand. And so that might allow these challenge periods to become more efficient so they can kind of become elastic with how much demand is in the market for block space.
00:40:34.020 - 00:40:34.432, Speaker H: Thanks.
00:40:34.486 - 00:41:09.208, Speaker E: Yeah, that was pretty comprehensive. And one thing I'll add is you mentioned using the base yard code to build gas derivatives. It's also worth noting that London has another EIP 35 29, which will make the current gas tokens unworkable because of how it changes gas refunds. So yeah, if you are kind of a heavy user of gas tokens that's not going to be possible after London. And so looking into ways to build these gas derivatives off the base fiat code is probably worthwhile.
00:41:09.384 - 00:42:02.652, Speaker F: I should probably also mention that if you're more of a full stack developer for Ethereum, there's actually a fair number of changes that came to the RPC with London. And so this isn't something that if you're a pure smart contract developer, you may interact with. But if you are someone who maintains a backend system for a DeFi application, you should consider looking at, I think Tim, you and Trent put together this comprehensive guide of the things that are changing with London. We could probably link that in the show notes, but there are a handful of changes. And I'll mention like one, if you're calling these RPC endpoints that receive transaction objects, there is a gas price element of these transaction objects, and normally that's just the gas price of the transaction. But with 1559, we now have these two different elements that kind of relate to the fee market. We don't have a gas price, but for backwards compatibility reasons, we're continuing to support gas price.
00:42:02.652 - 00:42:20.710, Speaker F: And so that value will be equal to the max fee per gas before the transaction is mined, and then after it's mined, it will be equal to the effective gas price of the transaction. And that's something that you should be aware of if you're a developer interacting with these things. So, yeah, take a look at this document that Tim and Trent put together.
00:42:22.680 - 00:43:03.650, Speaker E: Yeah, good point. Yeah. A lot of applications are not just smart contracts, and they'll actually have to interact with the node itself and changing gears completely. There's been a lot of talk about minor revolt around 1559, and the fact that the base fee burns of ETH, which obviously lowers their income. And I think hasu you put together alongside with Georgios, I believe, kind of one of the best explainers of why it's in miners best interest to support 1559. So could you kind of quickly summarize that argument for us and how you think kind of the game theory plays out here?
00:43:04.020 - 00:43:35.230, Speaker H: Yeah. So you already touched on it. Right. So why would miners even be interested in blocking ERP 1559 or somehow like revolting against it? It's that the ERP will burn some of the fees that are generated in the block space market. Right. And at this point, I would ask you into how much detail you want me to go, because it would cover stuff like mev and how that plays into how much is being burned, since I understand these might be like later questions?
00:43:35.760 - 00:43:36.844, Speaker E: Oh, go for it.
00:43:36.882 - 00:43:37.468, Speaker H: Yeah.
00:43:37.634 - 00:43:38.828, Speaker A: Okay. Yeah.
00:43:38.914 - 00:45:03.124, Speaker H: Okay. So, basically, the first analysis that we did was first to find out how much is actually being burned, because we thought that before that point, there was this very sort of naive understanding that all the transaction fees that exist today in Ethereum would end up being burned. And so all of the fee revenue that miners make would go down, and they would be only left with the block subsidy. But fortunately, at the same time was when flashboard started to get a lot of traction, sort of the private relay for miners. And they were very transparent with their data, and they started classifying a lot of sources of mev minor extractable value, and made public how many of the transactions in Ethereum today are sort of transactions that fight for mev, stuff like liquidations and front running users and so on, and arbitrage most of all. And so we took that data set from flashbots and tried to map it over the total miner revenue in order to understand how much of what miners make today is actually from MeV and how much is from regular transfers. And the reason we did that is that to understand how much is being burnt, you can think of sort of the list of transactions as not actually one market, but actually several markets.
00:45:03.124 - 00:45:56.010, Speaker H: So the market to be included anywhere in the block is actually a very different market from the one about being included at a very specific point in the block, for example, like at index zero, like being the very first in the block. So you can be the first to do an arbitrage between uniswap and sushiswap, for example. That was a very important insight, that these are two different markets. And in the priority market, basically, ERP one five nine doesn't change anything. This is a market that will always happen, sort of between those who want to submit their transactions, get their mind in a specific slot, and the miners who control the ordering. And this is money that couldn't possibly be burned, because if the protocols had some value for that, then the market would just move off chain for that.
00:45:56.700 - 00:45:57.016, Speaker B: Yeah.
00:45:57.038 - 00:47:31.912, Speaker H: And so we realized that all of the MEV that is extracted in Ethereum today will be untouched by ERP one five nine and wouldn't be burned. And we tried to simulate that. We found that maybe 30% of the fees that are generated today are actually fees that are from regular transactors who don't care about where their position in the block is. And probably 70% or more is actually nowadays just from MEV extracting transactions. So this was an important insight for us, because it would be much less impactful on miners. And I think this also helped sort of to diffuse the opposition from miners a bit, because you could argue that it's in their best interest for miners to adopt any change that sort of the users want, and it is to a degree, but you can still create disruption in the mining market and create perverse incentives there if you end up reducing the revenue that you pay to miners by too much over too short of a period of time. It was quite good that the reduction of revenue turned out to be much smaller, and also that the uptake from the market of this update was so positive that arguably contributed to how Ethereum and ether is.
00:47:31.912 - 00:48:35.020, Speaker H: The asset was perceived in the public, basically. Right? So because for miners, it matters not just how much revenue they make denominated in Eve. So they don't just care about the eve denominated fees, but of course they also care about the other side of the equation, how much can they sell that e for in dollars? So both of those were, I think, very important. So I think you have this one side, which we just discussed, that the reduction of fees is actually not that large. And second, that miners are structurally long Eve. They have a lot of future revenue at stake. And so generally they are incentivized to go along with what users want and what they think, what users and developers and all of the parties building on Ethereum what they think is best for the ecosystem, because that is what maximizes both the value of ETh and the economic activity that ends up generating all of this mev and all of this transaction activity.
00:48:38.690 - 00:48:39.150, Speaker A: Thanks.
00:48:39.220 - 00:49:29.962, Speaker E: Yeah, I guess this is one thing. I'm curious to hear other people's thoughts on this, because estimates vary wildly. You mentioned the current fee market. You can think of the gas price as combining two things, the right to be included in a block at all, and then your positioning in the block and revenue in a post 1559 world from just the right to be included in a block is what's associated with the base fee, and that's what gets burnt. And then revenue from positioning or right of inclusion when there's too much demand is what goes into the priority fee. And you estimate there's basically like a 70% of this that would end up in the priority fee and therefore not be burnt, and then 30% would represent the base fee. I'm curious if anyone else here has thoughts on that breakdown.
00:49:29.962 - 00:49:37.342, Speaker E: Do you all agree this is kind of what we should expect or. Yeah, anyone has strong opinions on this.
00:49:37.476 - 00:50:04.310, Speaker H: I would add maybe one thing, because this does not at all refute what Bannerbase said earlier, that you have different regimes, right, where the demand is very high to get into a block. And that's why you end up with a tip auction. So this is something that happens in every block. Even if the block is just 10% full, you are still going to have competition to be in the top spot in that block that has otherwise zero, basically zero tips.
00:50:04.650 - 00:50:13.974, Speaker E: Yeah. I guess a way to think about it, it's almost like if you had two blocks and one of them had just room for one transaction, and then the rest of the transactions is almost like a separate block.
00:50:14.022 - 00:50:14.620, Speaker F: Yes.
00:50:15.150 - 00:50:23.022, Speaker H: This is exactly the right framework, thinking of it not as one block, but actually as several blocks stacked on top of each other. Yeah.
00:50:23.156 - 00:50:42.710, Speaker E: And there's always going to be, obviously, kind of one transaction's worth of demand for that sort of premium block and then the demand for the rest of the block space varies based on just general demand for Ethereum. Yeah. I'm curious, do people generally agree with that split? Do people have kind of differing opinions?
00:50:43.690 - 00:51:23.810, Speaker A: I don't know the exact number breakdown. The thing to keep in mind for everybody is that the MEV, or minor extractable value is highly variable. And so we will see some blocks that have relatively little, like, it's not very interesting. And you'll see a block that's got like 100 e in it. And so in that 100 ETH block, as Hasu kind of described, the person who paid 100 ETH to get to the front of the line, they really want to be in the front of the line. They're willing to pay 100 ETH to be at the front of the line. They are going to pay 100 eth to somebody to get to the front of the line.
00:51:23.810 - 00:51:56.400, Speaker A: Either that's a minor through gas price, or it's a minor directly, or it's some off chain payment channel, or it's a cash dropped underneath a mailbox. They will figure out a way. When you've got 100 eth you're throwing around, you'll figure out a way to get the money into the hands of the person who gets to decide who goes first. From that standpoint, I totally agree with everything Hasu said. You can't avoid that. You can't make that go away. You can drive it into the dark, which just makes it harder to see and harder to record, but it will always be there.
00:51:56.400 - 00:52:34.742, Speaker A: But that means regarding 70% versus 30%, it's hard to say. There's many people who have done research on this and come up with different numbers. I think a lot of it comes down to what time frame you look at. If you look at some back when things were going crazy, what was it, like six months ago or whatever, or nine months. I don't know how long ago it was. That's very different than a boring week in the middle of summer. And so just keep that in mind with any sort of stats like this, that it really depends heavily on what time frame you look at.
00:52:34.742 - 00:52:57.120, Speaker A: If you look at a five year time frame is very different than a one year time frame, which is very different. If you look at 2018 versus 2017, there's so many variables here that it's really hard to come down with, I think, a concrete number. But in general, I think Hasu is generally correct that there is still a lot of value going to miners and will continue to go to miners as long as they are the ones choosing block order.
00:53:02.540 - 00:53:03.216, Speaker B: Barname.
00:53:03.268 - 00:53:04.700, Speaker E: Matt, any thoughts?
00:53:05.920 - 00:53:49.930, Speaker G: I mean, I don't have much to add. I think it's quite clear. But I do have in mind this idea basically looks like today's gas price, or like average median gas price, let's say priority fee is mostly going to be nominal, like the minimum you need to send to be included by the miner, except maybe when you have kind of like these tip options, and then you have this MEV process, which I think. So maybe one thing is the 70 30 figure kind of hides the fact that, as Mika pointed out, MEV is extremely variable, so you have much more variance, perhaps in revenue for miners. And this is perhaps something that's worth just pointing out.
00:53:54.720 - 00:53:55.084, Speaker A: Yeah.
00:53:55.122 - 00:54:44.670, Speaker E: And I guess talking about MeV, I think hasu, your analysis was maybe one of the first ones related to 1559 that actually took MeV into account. But if you look at a lot of previous analyses, including, for example, Tim Ruffgarden's paper, or even some previous papers that were written on how kind of high transaction fee blockchains are less stable and more prone to short reorgs than high block reward relative to transaction fee chains, none of this kind of took MeV into account, and they were all kind of written in a pre Mev world. So I'm curious, are there other spots where, aside from the actual just minor reward, you think Mev can have an impact with 1559?
00:54:48.480 - 00:54:51.068, Speaker H: But. Oh, was that at me?
00:54:51.154 - 00:54:52.392, Speaker E: I thought anyone?
00:54:52.466 - 00:54:58.640, Speaker H: Yeah, I don't really have anything to say at the moment. So if anyone else has any thoughts.
00:55:00.020 - 00:55:47.810, Speaker G: Maybe just to point out that by design, 1559 really addresses more the problem of pricing inclusion in a block, and it's almost completely agnostic to the problem of position. So inherently, there's not so much interaction between the two. Like the base fee is kind of this minimum fee to enter the block. And so that really has nothing to do with what happens at the top heavy long tail of these high gas fees. So, yeah, that's maybe one reason why Mev and 1559 don't interact that much. The one place where they do is now these mev strategies, they need to pay the base fee, whereas before they were able maybe to submit more like zero gas price transactions. But this is not a huge difference.
00:55:48.980 - 00:56:21.596, Speaker H: Yeah, I would second that. I think it just makes sense, just even for the sake of it, just drive from the notion that erp one five nine does not fix mev. Because for a long time, this was a popular talking point, I would say. And, yeah, took. I think it's just important to say it again and again and again. There's not really much overlap between the two, apart from what wannabe said. Mika, you unmuted yourself.
00:56:21.596 - 00:56:23.150, Speaker H: Do you want to say anything?
00:56:24.400 - 00:56:41.840, Speaker A: I was going to say basically the same thing. 1559 does not fix censorship attacks. Like, censorship attacks are still a thing and they are still a risk. This is why we're moving to proof of stake. But that's for a separate call. 1559 will not make those go away magically.
00:56:45.480 - 00:56:46.036, Speaker F: Cool.
00:56:46.138 - 00:56:54.680, Speaker E: Yeah, I do think this is an important point to make. The other thing 1559 doesn't fix is high gas prices, in case anybody still believes that.
00:56:54.830 - 00:56:57.880, Speaker H: So, yes, that's the other good one.
00:56:58.030 - 00:56:58.730, Speaker G: Yes.
00:57:01.280 - 00:57:32.630, Speaker E: Cool. I guess bringing it back a bit more to the technical level. Matt, one thing that was interesting is you actually implemented 1559 in geth, and you're not part of the get team itself. So you kind of ended up writing the reference implementation, or the implementation and kind of the reference client. Can you talk us through what that process was like? How as like a non maintainer, you got this pretty massive change included in the code base.
00:57:33.880 - 00:58:18.960, Speaker F: Yeah. So I think the journey for working on 50 59 for me started in early 2020 when we started working on account abstraction. And so my team, quill, we spent about six, seven months working on account abstraction. We wrote an implementation in Geth of this EIP, and we were benchmarking all these things. And during this time, there was more discussions in the summer about how to have typed transactions in Ethereum. And this was something that Micah was proposing, and I was really interested in type transactions because that was a way to path forward to maybe having sponsor transactions in the protocol. And that's something that is really exciting for me because I think that's a big ux problem, Ethereum.
00:58:18.960 - 00:58:49.324, Speaker F: And so I was all on board with type transactions, and it also helped account abstraction. And this is kind of whenever I started getting more interested again in 1559 because 1559 was another type of transaction. And so I sort of volunteered in the fall. I said, it sounds like type transaction is something that's useful. Let me just implement it in geth. And so I pinged the Go Ethereum team. I pinged Martin from the team, and I said, hey, is it okay if I just implement 20 718 for you? And he said, sure, go ahead, knock yourself out.
00:58:49.324 - 00:59:28.084, Speaker F: This was kind of like earlier in the cycle of Berlin, and it wasn't 100% certain it was going in. And so they didn't want to waste cycles on dealing with 20 718. And it was a pretty big change in the code base because it basically added this discriminator to like, it basically broke this transaction type up in the go theorem code base. And now you have multiple transactions and kind of this new abstract type for transactions. And so I would kind of like ping them every once in a while and say, hey, does this look okay? And they would respond and say, yes, this is good, this isn't good. And generally that would happen. A lot of this stuff happened in the open through GitHub and through prs.
00:59:28.084 - 01:00:30.568, Speaker F: And so I think that if people are watching this live stream and they're interested in core development, a lot of the times it's just a matter of opening prs and trying to become part of that process. So I did 20 718, and that really set me up for working on 1559. And I think, tim, I don't know if it started with you kind of like pinging me and you saying, hey, are you interested in helping with 1559? And I think I was kind of like rebuffing you in the beginning because we were working on some other things at the time. And 1559 has really never been something that I personally was very excited about because it was something that made a lot of sense, but I was more interested in things like sponsored transactions. And so I kind of like rebuffed in the beginning saying, oh, there's other things we'll work on. And so after I think a little bit, I just realized that there's only a handful of people right now who can implement these kinds of changes in Goetheoreum.
01:00:30.664 - 01:00:30.876, Speaker A: Go.
01:00:30.898 - 01:00:56.932, Speaker F: Ethereum team at that time was doing a lot of other things. They were working on Snapsync. That was like a really big thing they were trying to launch. And so it was like, this is something that I should do, this isn't what I want to do necessarily, but this is for the greater good of the ecosystem, so I need to become a part of it. And it worked out really well. I've really had a good time implementing it. And so I implemented most of 1559 in one or two weeks.
01:00:56.932 - 01:02:08.028, Speaker F: The core consensus changes were relatively straightforward, and I kind of put a pr together and shared it with the go Ethereum team and was able to start syncing with the 1559 testnets at the time that Abdell from the Besu team had put together. And so the actual core changes were not super significant. They touched a lot of parts of the code, but generally it wasn't a crazy change. And then basically for the next six months, it was a matter of all of the auxiliary pieces, all of the testing, and I don't think a lot of people understand just implementing an e, that's like 10% of the work. And I'm already standing on the shoulders of giants, all the people who have done the research, vetting the idea. In general, I think 1559 is one of the most rigorously analyzed eeps that we've ever had, go into the protocol on all aspects, from original design research to engineering to testing to fuzzing. And so I, for about six month period, was just helping implement all these other things, working on the mempool implementation, changing the way that the minor works.
01:02:08.028 - 01:02:59.980, Speaker F: And a lot of the work lately has been RPC endpoints. And the 1559 changed a lot of aspects of the RPC. And I think for me, the biggest takeaway from working with 1559 is that we need better facilities for discussing changes in the Ethereum protocol. And if you look at the 50 59 EP, it basically just implements a really stupid ethereum client in Python because that is kind of like the best way of describing these changes. And so I think the similar thing with the RPC endpoints, it's really difficult to just discuss in pros and through one off eips how these things are changing. It's a lot simpler to follow a more traditional software engineering process and say, here's a new release of the RPC, et cetera.
01:03:01.940 - 01:03:13.490, Speaker E: Yeah, thanks. And I guess a quick related shout out that you are working on an actual full spec of Ethereum executable spec. So that'll be really helpful to have.
01:03:14.180 - 01:03:22.608, Speaker F: Yeah, shout out to my team, Sam and Somo. They've really been grinding out. We're going to replace the yellow paper with the Python implementation. So it's very exciting.
01:03:22.784 - 01:03:27.750, Speaker E: Yeah, that'll be great. Micah, I see you went off mute for a second.
01:03:28.680 - 01:04:14.950, Speaker A: Yeah, I was going to say that just to echo a little bit what client said in the middle there. I think a lot of people assume that a platform that's managing 200 or $300 billion or whatever probably is being built by a company the size of Microsoft and has 40,000 people working on it. And so surely one developer won't help. In reality, this platform that is managing hundreds of billions of dollars has far, far fewer people working on it than Microsoft has. And yes, one more developer definitely can help. Like, there's lots of places you can contribute. Like Matt said, one of the greatest ways to get started is just find something that you can make better in just a small way and submit a pr and just make it better.
01:04:14.950 - 01:04:32.990, Speaker A: If you're not a developer, there's other places you can help as well. EIP editing is a lot of just kind of grammatical and clerical work, like just kind of making sure things flow through a process. You don't need to be an expert in some arcane language in order to do that. Lots of places people can contribute if you're interested.
01:04:36.720 - 01:05:28.750, Speaker E: Yeah, definitely agreed there. The amount of people who make this possible is shockingly small, I guess before we move on to audience questions, I have kind of a final two part question for you, Hasu. So yeah, you are actually pretty new to the Ethereum community, and I could say 59 was almost your entrance into this community. So I guess first I'd be curious to hear you just talk through your experience of kind of advocating for this massive change as someone who wasn't deeply embedded in the community. And then kind of the second part would be, is 1559 something you would want to campaign to see elsewhere, possibly even on bitcoin in the future?
01:05:30.400 - 01:06:34.892, Speaker H: Okay, so yes, I would say that ERp 1559 was sort of my entry into the e community. I had been an e folder before that and I was sort of following it. But yeah, I really got my start with erp one five nine and with DFI when I really started to appreciate what you can build on Ethereum. And yeah, I mean, what that affords you, basically the trade offs that Ethereum makes, because as a bitcoiner, you're always focused on the trade offs that Ethereum makes. But some people don't see all the good stuff that buys you, right, like the ability to have non custodial, permissionless finance, have a sandbox for developers to play around, and I think we will see amazing things happening as a result of that in the next decade. And yeah, I would say that it's hard to trace back exactly where that started, like that turning point for me. But it was around that time, definitely, like both the IP one, five nine and defi and seeing, just writing research and it was taken up so well by the community and just the feedback was so good.
01:06:34.892 - 01:07:35.716, Speaker H: So many people were open to collaborate. It sounds like a meme, but it was really like everything that people praise about the Ethereum community. So I could really confirm that this was definitely true for me, right, that you have a collaborative spirit and everyone's really open to talking to you, no matter who can be, like, really high profile people. I never had the impression that there were any closed doors in that sense. I think that's why nowadays I would definitely say I'm more or at least just as much home in the ATM community as I am in the bitcoin community. And going back to sort of my intro when George just. And I did this deep dive into blocks based market protocols, this was at least partially informed by sort of my deep seated fear that I have about what happens in bitcoin when the block subsidy goes away.
01:07:35.716 - 01:08:45.336, Speaker H: Because until this point, the demand to transact hasn't really been enough at any longer period of time to pay for security in bitcoin. So there's really like two possibilities here. Either the demand picks up and we still have this systemic problem, but it's sort of not relevant because people, there's not enough demand to transact and people are going to pay these fees, or we make some change to the block space market mechanism or to the monetary policy, basically. And this was sort of the original what set us out on this quest to find what's possible. First of all, every chain that has a block subsidy I would recommend to adopt ERP one five nine. And I think we are seeing it almost everywhere now. Almost every new Ethereum competitor starts out with ERP one five nine implemented.
01:08:45.336 - 01:10:22.136, Speaker H: I think we know I've seen at least eight chains, seven eight chains that have had it before ethereum, which is kind of funny, but I mean, that's just how things go, right? When you have these smaller, more nimble chains where there isn't a lot of at stake and you can just do it. So for them, I would definitely recommend it. But this shows sort of why it may not be possible in bitcoin, at least as the design is right now, because ERP 1559 burns the non priority part of the transaction fees, which in bitcoin is 100% of it, basically because there's no mev or almost no mev. And so you would burn all the transaction fees, simply speaking, and we already don't have enough transaction fees, so you kind of rely on there being a perpetual block subsidy that can pay for security, and you don't have that in bitcoin. So I think unless that changes, which I see is very unlikely, I think it's unlikely that we get to see any sort of proposal where transaction fees are burned or the protocol itself sets the price of transactions. I would support other proposals, for example, fee smoothing mechanisms, where sort of part of the fee is paid forward into a security fund, for example, that can then, like when demand to transact is high, generate more fees than necessary. So you start paying some of those maybe into a fund, and later then when block subsidy has declined, you start consuming this.
01:10:22.136 - 01:10:32.850, Speaker H: So at least buys you like maybe a couple more years or so until it becomes serious problem. So, yeah, that's a proposal that I think would be more fitting for bitcoin and one that I would campaign for.
01:10:34.660 - 01:11:18.270, Speaker E: Yeah, that's super interesting. And you can even imagine, like, a naive implementation of that, where if fees are on average high enough to secure the chain, but maybe not on a per block basis, then like a 1559 mechanism, where the fees get sent over, say, the next 100 blocks or something, can help you convert this kind of volatile income stream into something that's a bit more predictable as a security budget. So everyone will have done 1559 before Ethereum, and Ethereum will have done it before bitcoin. I think this is a good place to open up for community questions. David, you want to take it back?
01:11:19.120 - 01:11:19.870, Speaker A: Absolutely.
01:11:20.480 - 01:11:30.364, Speaker C: Guys, that was an absolutely fantastic panel. I'm going to have to rewatch that myself to make sure that I caught everything. So thank you guys all for being here. I need to get Ryan back into the show because we kicked him out.
01:11:30.402 - 01:11:32.200, Speaker D: Before just video logistics.
01:11:32.360 - 01:11:49.530, Speaker C: So we're going to take community questions. If you are watching on YouTube, we have been logging some of our favorite questions in a little document. But this is your last chance to get new questions in there. We're going to cut to sponsors for a quick two minute break. I'm going to get Ryan back in here, and then we're going to start going through some of the community questions that we got through YouTube. So here we go.
01:11:51.020 - 01:11:52.616, Speaker A: As soon as I find it.
01:11:52.798 - 01:12:25.692, Speaker D: Bankless is proud to be supported by Uniswap. Uniswap is a new paradigm in asset exchange infrastructure. Instead of a cumbersome order book system where trades are matched with other humans. Uniswap is an autonomous piece of software on Ethereum, which is what Ryan and I call a money robot. No human counterparties or centralized intermediaries, just autonomous code on Ethereum. Input the token you want to sell and receive the token you want to buy. Something brand new in the Uniswap ecosystem is the Uniswap grants program is now accepting applications for grants.
01:12:25.692 - 01:12:53.204, Speaker D: We have been saying this for a while and we'll say it again. Daos have money and they are in need of labor. If you think that you have something to contribute to the Uniswap Dow, apply for a grant to Uniswap. Just look at the size of the Uniswap treasury. It's almost $3 billion. This mountain of capital is looking for labor. Do you have something of value to contribute to the Uniswap Dow no matter how big or small your idea is, you can apply for a unigrant@unigrants.org
01:12:53.204 - 01:13:44.696, Speaker D: and help steer Uniswap in the direction that you think it should go. That's exactly what we did to get Uniswap to be a sponsor for bankless, and you can do the same for your project. Thank you uniswap for sponsoring bankless the Ave protocol is a decentralized liquidity protocol on Ethereum, which allows users to supply and borrow certain crypto assets. Ave version two has a ton of cool features that makes using the Ave protocol even more powerful. With Ave, you can leverage the full power of DFI money, legos, yield and composability all in one application. On Ave, there are a ton of assets that you can supply to the protocol in order to gain yield, and all of those same assets can also be borrowed from the protocol. If you have supplied collateral here, you can see me borrowing 200 USDC against my portfolio of a number of different DFI tokens.
01:13:44.696 - 01:14:14.630, Speaker D: In ETH, I'll choose a variable interest rate because it's a lower rate than the stable interest rate option, but I could choose the stable interest rate option if I wanted to lock in that interest rate in permanently. V two also features the ability for users to swap collateral without having to withdraw their assets, trade them on uniswap, and then deposit them back into Ave. With Ave, users can do this in one seamless transaction, saving you time and gas costs. Check out the power of Ave@ave.com that's aave.com.
01:14:15.480 - 01:14:33.464, Speaker B: Hey guys, we are back the panelists are still on. We got some of your questions that came in via YouTube. We're going to ask them. David, man, it was fun to watch as a guest on one of these bankless panelist episodes. What a fantastic group of know Tim and crew managed to pull together. And, yeah, what were some of your impressions?
01:14:33.512 - 01:14:54.396, Speaker C: I guess, yeah, my impressions are there's just an entire massive playing field of just thought around EIP 1559 that I've thought I was paying attention to EIP 1559, but it's one of those things that it has rabbit holes in of itself. And so, like I said right before we cut to sponsors, I'm going to have to actually relisten to this for my own benefit.
01:14:54.588 - 01:15:07.110, Speaker B: Rabbit hole inception. Rabbit holes within rabbit holes. Yeah. And a few interesting things to me. I tweeted some of this out. It's like everyone on the panel seemed to start as skeptics and then they turned it to supporters. That's kind of interesting.
01:15:07.110 - 01:15:39.920, Speaker B: A panelist made the question, like, client made the question. EIP 15 five nine is one of the most rigorously tested eips to go into the protocol. We heard Hasu's story about moving into the Ethereum community as part of the protocol. So I think this represents a lot of what's great about the Ethereum community, the level of analysis, the permissionless nature of it. It also represents some of the challenges. I don't know how many times the panelists said, hey, there's not that many of us actually doing this super important work. Come join us.
01:15:39.920 - 01:16:08.680, Speaker B: Come submit some prs. We need your help in order to continue this whole research project and implementation project we call Ethereum. Anyway, lots of stuff to dig into. Let's get to the questions, though. And I'm going to start here because one of the panelists actually may have thought they showed up to the wrong meeting because I pronounced this EIP 15 five nine. And I've just been told that might not be the most canonical way to represent it. So actually, somebody in our discord channel asked this question.
01:16:08.680 - 01:16:34.770, Speaker B: This is Odba eleven e. Maybe these panelists can tell us if it's pronounced 1559 or 15 five nine. Or as I have taken habit of saying, 1559. Guys, which is it? What is the correct pronunciation of EIP blank? I won't bias anyone by saying what I think it is. Lakeline, do you have any thoughts on this?
01:16:35.720 - 01:17:01.736, Speaker F: Yeah, at the beginning of the show, I was just settling in and I heard you say, welcome. We're going to begin speaking about 15 five nine. I missed everything. Recoil after that because I was like, oh, no, this is the wrong call. What is the correct. I've actually heard people say 15 five nine in a while, at least. I feel like it's 1559.
01:17:01.736 - 01:17:23.152, Speaker F: That's the. I don't know. Tim probably talks about. Tim probably has dreams of different ways of pronouncing, the optimal way of pronouncing 1559. But to me it's always been formal. If you want to go full formal EIP 15591 at a time. 15 five nine.
01:17:23.152 - 01:17:24.732, Speaker F: That's like formal casual.
01:17:24.796 - 01:17:25.844, Speaker E: I haven't really.
01:17:26.042 - 01:17:27.120, Speaker F: Formal casual.
01:17:27.200 - 01:17:28.352, Speaker B: That's what we do on bankless.
01:17:28.416 - 01:17:30.900, Speaker C: Yeah, that sounds like actually the right bankless branding.
01:17:31.800 - 01:17:34.820, Speaker B: Maybe that's just me. I don't know. Any other thoughts, panelists?
01:17:36.440 - 01:18:00.220, Speaker A: I mean, we're talking about naming, obviously, I have thoughts. My personal favorite is the 1559th EIP since the start of Ethereum. That's usually when I'm in casual conversation. That's how I'll express myself to users. Sometimes if I'm in a more business environment, I will say the fee market change for the Ethereum chain. It really depends.
01:18:01.200 - 01:18:11.804, Speaker C: Do you guys think that we're going to need to call this differently in the future after it's implemented, or is kind of EIP 1559 here to stake? Is it just stuck?
01:18:11.852 - 01:18:17.508, Speaker F: I think that the boat of calling eeps by not their number sailed a few years ago.
01:18:17.674 - 01:18:18.228, Speaker B: Oh, my God.
01:18:18.234 - 01:18:24.464, Speaker E: Yeah. And I mean, even stronger than that. Other blockchains call it EIP 50 59, which always make me laugh.
01:18:24.512 - 01:18:25.110, Speaker F: Right.
01:18:27.400 - 01:18:52.460, Speaker B: I don't know how many times I've had conversations with people like David and I work on the layer zero, the social layer, the meme layer of Ethereum, if you will. And can we come up with a better branding for this thing? And we threw around ideas, we had names, we tried some things, nothing stuck. Like, absolutely nothing. And so EIP 15 five nine it is, I think, for eternity.
01:18:53.440 - 01:18:59.570, Speaker F: Where are we out on bips? Can we just put some no op bips in to get to BiP 1559?
01:19:00.740 - 01:19:04.290, Speaker B: I don't know. With Hasu, what bip are we on?
01:19:05.240 - 01:19:31.576, Speaker H: What, 300, 400? I don't know how it works in Ethereum, but bips in bitcoin aren't given chronologically. The number goes up, but the first part of the number is reserved for special things. It says what type of bit this is. So what part of the system it touches, basically, as long as number goes.
01:19:31.598 - 01:19:32.876, Speaker B: Up, bitcoiners are happy.
01:19:32.978 - 01:19:35.628, Speaker A: We know that is true, David, you.
01:19:35.634 - 01:19:36.492, Speaker B: Want to ask the next question?
01:19:36.546 - 01:19:50.690, Speaker C: Yeah, maybe. Turning to more serious questions, a question from QB on YouTube is what happens when people send the old transaction types after EIP 1559 is switched on? Maybe I'll throw that one to Tim.
01:19:51.620 - 01:20:29.784, Speaker E: Sure. Basically what it does is behind the scenes, it'll treat your legacy transaction as behind this. Matt said in the chat, all funds are burnt. That's not true. So behind the scenes, it'll convert your transaction to a 1559 one. And what it does is it sets your gas price equal to both your max fee and your max priority fee. And what this means for the user is that when you send a 1559 transaction, you basically get a refund for the difference between your max fee and the base fee plus the priority fee.
01:20:29.784 - 01:21:12.010, Speaker E: So if you put a very high max fee, you'll never pay more than the base fee and your max priority fee. And that makes it very easy to figure out to set a transaction because you can just set a high max fee and know you'll get included and get a refund. For legacy transactions, your max fee is equal to your max priority fee. So that means that any difference between the base fee and your gas price basically will go straight to the miner or the validator. So it just means you kind of don't get that refund for extra fees paid. You can still, if you're savvy, kind of estimate exactly what's like the right gas price and how to get that into a block. And that's basically you're back to the problem we have today.
01:21:12.010 - 01:21:46.550, Speaker E: But this is super important because even though it might be slightly more expensive for users, we never want to be in a spot where somebody is using your wallet that doesn't support 1559 and now they can't interact with it with Ethereum or even another edge case is like you signed a transaction a year ago before 1559 was even considered for main net, and you had this note to yourself that you were going to send this transaction on the network in two years and that transaction should still be valid, right? So yeah, legacy transactions will still work.
01:21:47.320 - 01:21:47.936, Speaker B: Fantastic.
01:21:47.968 - 01:22:21.570, Speaker C: Anyone want to add on to that before I move on to the next question? Hearing none, I will move on to the next question. This comes from Mr. Green, and I'm going to actually amend this question just a little bit. Mr. Green asks, what happens with your gas during a canceled or stuck transaction after the EIP 1559 goes live? And I'll add on to this. How does the nature of a pending transaction that gets, quote unquote stuck, how does that change once EIP 1559 goes live? I'll just throw that one to the open.
01:22:22.420 - 01:22:23.890, Speaker H: Anyone want to take that?
01:22:24.580 - 01:23:05.920, Speaker A: So if you submit a transaction after 1559 and you got very unlucky because you happen to submit it right when there is a massive increase in demand. So today you get stuck. If there's any increase in demand when you submit it with 1559, you still can get stuck, but only if there's a huge increase in demand and we're talking like two x increase in demand over a very short period of time and it sustains. That's another key. That demand increase has to stay increased, like continue increasing for an ascended period in order for you to get stuck. If you do get stuck, then you are back in the situation you're in today. So we have very similar mechanics where you have to submit a cancellation or you'll have to submit a replacement.
01:23:05.920 - 01:24:03.810, Speaker A: That problem still does technically exist. I want to make sure all the listeners are aware that that problem doesn't 100% go away, that the critical part is getting into that situation should now be very rare. And so again, just reiterate, same problem, same solution, cancel or bump the price, your gas price, effectively. But we really hope that if we tune things correctly, and this is what Barnaby was talking about early on, the call that after this launches, we'll be watching so we can tune things, and we want to tune it so as few people get stuck in that situation as possible. And so maybe right after launch, in a few days, we won't have gotten the tuning quite right and there'll still be a significant portion of people getting stuck that sucks and didn't achieve one of our goals. And so then in some future hard fork of ethereum, we'll just dial some parameters and do some research and tweak things and try to get better. And so eventually we can hopefully get to a point where no one gets in that situation.
01:24:04.500 - 01:24:49.010, Speaker B: Actually, Micah, when you're talking about tweaking things and changing things, that leads me to another question that was asked on YouTube and this owos baker, I believe, is the username handle. I hear bitcoiners using this argument against Ethereum, that the Ethereum foundation constantly changes. Ethereum. Is there any merit to what they're saying? I think this is a reflection on the critique that, hey, core developers shouldn't change anything economic, anything, to the issuance policy at all. And that is one of the virtues or merits that bitcoin has. And Ethereum shouldn't make this trade off. Any thoughts on that? Question, is there any merit to this argument? Actually, I want to start with Hasu, who's kind of our resident bitcoiner on the.
01:24:49.940 - 01:25:14.650, Speaker H: I mean, I would say there's some merit to think. I don't think there's any merit to saying that the Ethereum foundation chooses what upgrades get into Ethereum. I think that's not really how the ERP process works. And I'm not even sure that the Ethereum foundation pays most client developers. Maybe that's something that the actual client developers here can shed some light on.
01:25:16.620 - 01:25:21.564, Speaker E: Yeah, the short answer is they don't. There's one team on Eth one and.
01:25:21.682 - 01:25:23.676, Speaker F: Zero teams on ETh two that are.
01:25:23.698 - 01:25:24.780, Speaker E: Part of the EF.
01:25:25.520 - 01:25:52.500, Speaker H: Yeah, thank you. That's what I thought. So I would definitely say, yeah, Ethereum is changing more and it's easier to get stuff implemented in Ethereum, but the FP one five nine is actually great example. It is a very big change. I once wrote that it's the biggest change ever made to an already deployed blockchain. Like proof of stake will also be a pretty big change. But I think ERP one five nine is to date the biggest.
01:25:52.500 - 01:27:15.740, Speaker H: And this is like a really cool thing to look at to see how long the process took and how many people were engaged in the process and how much scrutiny it received. And it took a couple of years to get eip one five nine implemented. And there were a lot of skeptics, I would say, for a long time, and it was just a process of eventual consensus in the community where I would say, like those of us who wanted the ERP just produced more and more educational material and analyses and so on, eventually swaying some of the skeptics over to our side. And at this point I would say it's definitely a consensus decision. So it's not like there's somebody making a top down decision that we want to have this EIp right. It has so many supporters now, and I can't think of any skeptics anymore at this point, really. So I would say, yes, it's bad when things, I mean, there's value to things being hard to change, but if it changes in the right way, like if the right checks and balances exist, then I think there's also a lot of good that can come know adding new features.
01:27:15.900 - 01:27:20.770, Speaker B: Micah, I think you've written posts on things like this. What's your take on the same question?
01:27:21.860 - 01:28:09.184, Speaker A: Yeah, so I think that there is definitely merit to this question. Is it better to change or is it better to not change? When you're building a large financial system. As people are familiar with the legacy financial system, it's well known that banks do not change fast. From a programmer's point of view, it's always like a running joke that banks are running on code that was written in the 1980s, and it's now hard for them to hire people to change that because everybody's dead who knows how to write code in those languages. And there's a reason that banks are hesitant to change. And it's because when you're dealing with large amounts of money, especially other people's money, you ideally don't want to break things, like you don't want to make a mistake and then have people lose all their money, or all your money, or all of some investors money. And so it's a very scary thing.
01:28:09.184 - 01:28:34.308, Speaker A: And so from the standpoint of the argument that, well, bitcoin is stable, that's very reasonable. Having that stability is very valuable. People like stability. People want, especially in their financial systems, they want comfort in knowing that things will be stable. Whereas ethereum is definitely moving fast. We're changing things every six months. We have a hard fork, that some of these hard forks are very big, 1559 is very big, and it's a very different paradigm.
01:28:34.308 - 01:29:13.910, Speaker A: And I think the reason I like Ethereum personally is because I feel like the space is so new and so young that it's too soon to calcify and it's too soon to stop changing. There's so much we can do, and there's so many things that are right around the corner. The technology is just so much in its infancy. It's like having a kid and then saying, okay, you're two years old, now is a good time to stop growing. It's like there's so much opportunity. Whereas once they get to 20 or 25, maybe that's a good time to stop growing. They've matured enough that they can be useful, they can be productive, and they have learned enough and they have advanced enough that it's a useful tool.
01:29:13.910 - 01:29:40.350, Speaker A: I think Ethereum is not there yet. I think eventually, I will eventually lobby that Ethereum should calcify like bitcoin has. I just don't think that's now. I think that sometime after proof of stake, sometime after sharding, sometime after ZK roll ups on Mainnet, there's a number of things that I think Ethereum should do before we decide that, okay, now's the time. Let's slow down, let's solidify, let's make this a platform that people can trust is not going to change.
01:29:40.880 - 01:30:02.740, Speaker B: I just have a quick follow up on that. But before we do, we want to thank Tim Baco, who's got to go to attend another call and maybe help get EIP 15 five nine out the door. Tim, you're a fantastic moderator. Maybe future co host of the Bankless podcast who knows? Unlimited potential here. Sir, who's getting everything you've done? I don't know yet. David may be seen. Thank you, sir.
01:30:02.740 - 01:30:04.320, Speaker B: We appreciate your moderation.
01:30:04.480 - 01:30:12.600, Speaker E: Yeah, thank you so much for having me and for setting this. Yeah. And to obviously all the other panelists, I appreciate you all taking the time to come here.
01:30:12.750 - 01:30:40.640, Speaker B: Awesome, guys. We still have a few more questions coming in if the panel can hang on. I just have a quick follow up to Micah, though. You raised a really interesting point. Do you acknowledge, though, that the time for Ethereum to calcify is somewhat subjective? How do we determine when the right time to calcify is? It's obviously not now immediately, but isn't there always going to be new tech, new features on the horizon to implement?
01:30:44.410 - 01:31:25.762, Speaker A: A hard question, especially since there are so many participants. I think that at the least, like when Ethereum's yellow paper was originally produced, it said, we're going to do switch to proof of stake. So at the very least, we should wait to calcify until after proof of stake, because that was like a thing that was promised and everybody kind of presumably agreed on that. If you're going to use Ethereum, you acknowledge that this will eventually adopt proof of stake. At the very least, I don't think that it's super reasonable to argue for calcification prior to that. After that, things start to become a little more questionable because we have things like Statexpree and sharding and ZK, stuff like magic. And those are things that weren't necessarily agreed on when Ethereum was launched six years ago, or whatever it was.
01:31:25.762 - 01:32:07.410, Speaker A: And so that's where things start getting a lot more murky, where it's like, should we continue to build and iterate, or should we calcify? And maybe one of the options is Ethereum just forks and we say, okay, proof, stake launched, everything we promised in the yellow paper is done. We're going to calcify that, and that will be a supported thing, and we'll get security fixes separately. We're going to continue building off of that in this other direction and build great things. I'm personally a big fan of forking as a form of governance. I think it allows people to have different belief systems and different values and kind of live and self segregate and operate in sandboxes that align more with their beliefs. But I know a lot of people don't like that. A lot of people would rather Ethereum stay as one big thing.
01:32:07.410 - 01:32:15.510, Speaker A: There's one ethereum. And so I do think that we will eventually see big debates on this exact topic. And I don't think there's a clean answer necessarily.
01:32:17.210 - 01:32:20.454, Speaker C: Any other panelists want to add on to that before I ask the next.
01:32:20.492 - 01:33:16.946, Speaker G: Question, maybe to add to this, I think the classification is kind of a default position in the mind of many people who maybe come from the bitcoin ecosystem, like this idea that at some point the protocol just cannot keep changing. It's true that over time, the more things are built on it, the more difficult it is to make these changes. But rather than argue for finding the correct point at which the protocol should calcify, I would argue for finding the process that makes us decide whether we should do it or not. So finding what Mika was describing with the checks and balances, like in my position, I'm definitely not an immutableist. I joined the Ethereum ecosystem because I like this idea of it's ever growing ecosystem. It's like this organism that just adapts to whatever is thrown at it. I cannot tell what will happen in ten years.
01:33:16.946 - 01:33:31.260, Speaker G: I mean, quantum computers, ZK magic. So I would definitely be more in favor of, rather than thinking, okay, is it the time to calcify? Just asking the question, how do we make the choice if we have it in the first place?
01:33:32.190 - 01:33:35.162, Speaker C: Absolutely, go ahead, Hasu.
01:33:35.306 - 01:34:30.106, Speaker H: I would pose a different approach to the question. I don't think it's really necessary for us to choose when it's time to calcify. I think this is also something that just happens automatically because every upgrade has a cost, right? First you have to create social consensus, which is very difficult and a long process, and then you have to, all other shareholders in the system have to upgrade their systems and so on. And there's just so much involved, and this is very costly. A lot of companies and a lot of defi projects and a lot of people have to spend a lot of developer hours on making every upgrade in Ethereum a reality. Right? So Ethereum asks a lot, basically from their users. And the more users there are, and the more businesses built on Ethereum as part of the infrastructure stack and so on, the more people will be affected by every upgrade.
01:34:30.106 - 01:34:44.600, Speaker H: And basically every upgrade needs to do more to pass their bar. For still supporting it. And I think it will just get harder and harder over time to make enough people want to upgrade. And so it just calcifies basically on its own.
01:34:47.450 - 01:34:49.560, Speaker C: Matt, you wanted to add something?
01:34:50.090 - 01:35:44.530, Speaker F: Yeah, I was just going to add one other thing in terms of the calcification. One thing to me that really makes a blockchain a blockchain, something that goes beyond just a database is having ordered available data and where we're going with e two with sharding and having massive quantities of data availability. That is to me something that even if you want to do something that's not possible to do specifically on the Ethereum chain, if Ethereum provides that platform for making data ordered and available, you can begin to build different types of primitives using client side verification rather than having things go through the EVM. And so I think that that's going to open up an avenue for people to still use Ethereum but really be able to experiment in really crazy things that may not be possible on the base layer.
01:35:45.670 - 01:36:24.034, Speaker C: That's a great addition to that. We just have a couple more questions to get through and then we will have gotten through all of them. And Hazu, I want to point this one to you because it's a little bit in the world of game theory and I think you might be best equipped. But for the other panelists, feel free to also hop in on this. This question comes from yuan. Miners might artificially reduce the block size after 1559 up the update so that users are forced to be in a tip bidding war like we already are. Now, is this something that we can be concerned about? Is there a topic of conversation to be had about minor block size manipulation to maximally extract value for themselves? Hazu, have you thought about this?
01:36:24.232 - 01:37:10.238, Speaker H: Yeah, I mean, this is probably the most obvious thing that you have to think about with regards to eip one five nine and how it can be broken by its participants. Right? So if we argue that miners don't want any fees to be burned, then they could make this a reality. They could just say, okay, we never mine blocks that are higher than the target. Because if blocks higher than the target are mined, then this is what makes the base fee go up. And if blocks lower than the target are mined, then the base he goes down. So they mine blocks lower than the target base he goes to zero, and then they keep the block size below the target. And this way you can basically keep the base fee at zero forever.
01:37:10.238 - 01:38:32.622, Speaker H: But if only some miners do this, then they will basically have to leave transactions in the mempool of users that also pay fees, then any other miner can come along and include all of these transactions in their block and they can include a lot of transactions because there's all this slack, like all this extra room in the block size in ERp 1559, and they can scoop up all these fees and make more profit. So I mean, this shows that you can do this, but you need all the miners to cooperate on this. So either everyone follows along or sort of the miners who want to do this have to pressure the non compliant miners into compliance, like for example by ignoring their blocks. When you have 70% alliance of miners that wanted to do this, then they could ignore the other 30% blocks. But it also comes at a cost, right? So if any user who basically saw their transaction valid when confirmed, when a 30% miners block was mined and then later becomes reorganized, I think that's very bad user experience. I think we've talked about this a lot in the last couple of weeks because of all these discussions about short term reoccurs in ethereum. So basically that's the answer.
01:38:32.622 - 01:39:48.914, Speaker H: So miners can do it, but they would need to be willing to make short term reoccurs and basically enforce a minor activated soft fork. And once we are like in the realm of saying, hey, a minor activated soft fork is possible, then we also have to think, okay, so isn't this possible today? And the answer is yes, this is totally possible today. If miners were to collude and enforce a certain mandatory fee that they charge users for transacting on Ethereum, then they could extract a lot more money from users than users would be willing to pay in a fair market, right? Because right now users pay the minimum that is necessary to get into a block. But when miners were to set the prices, then users would pay the maximum they are willing to pay. This would be the correct sort of pricing strategy for miners. Miners could multiply the revenue if they were willing to do that, but they are not, right, because they are in competition with each other. And if this property of a blockchain is broken, then I think users would lose a lot of trust in Ethereum and far fewer people would transact and the value of Ef would dwindle.
01:39:48.914 - 01:39:52.200, Speaker H: And ultimately, I think it's not in minor's best interest.
01:39:54.010 - 01:40:14.674, Speaker B: Guys, we're going to close it out with this last question. I think this is for each of the panelists. This is a question of timelines. Timelines in crypto, in Ethereum are interesting things. I remember when EIP 15, five, nine, was first proposed. Some people are like, oh, it'll be here in a few months. Others were like, this will never be deployed to mainet.
01:40:14.674 - 01:40:31.650, Speaker B: Right? Like, never. It's not happening. Not five years, not ten years, it's never going to happen. The truth, it seems like, turned out to be someone in the middle. I want to ask this question of on timelines. Did the timeline surprise you? Maybe first I'll turn to Hasu. Did the timeline surprise you? Hasu?
01:40:33.110 - 01:41:24.174, Speaker H: I would say yes. So everybody in the bitcoin community, Ethereum, has all these future plans for changing the protocol, but they never shipped them. And they were right with regards to proof of stake and with regards to sharding, both of which were part of the Ethereum white paper. So they had a lot of ammunition in that sense. But first Ethereum shipped the beacon chain and now they are shipping Erp 1559. And both of these have been important milestones and have contributed a lot to convincing me that the development and governance process is actually much more functional than I thought. And Ethereum can deliver what it promised, at least like how things are today.
01:41:24.174 - 01:41:36.294, Speaker H: So maybe in the past it was more ineffective, but now I think it's building a track record, basically. And this upgrade has helped a lot with that.
01:41:36.492 - 01:41:38.810, Speaker B: Mike lion, how about you on timeline?
01:41:39.710 - 01:42:42.878, Speaker F: I think whenever 1559 was originally proposed, I was kind of a little bit newer to the ecosystem and I was very naive. I thought that these things get proposed and then we upgrade the master node and it's like very quick type of process. But I think I've become quite jaded in the last few years, especially with some of our own proposals. I've been working on this 30 74 proposal, and I'm just like seeing that these timelines, they are really like multi year timelines, and that's kind of, I've had to shift the way I think and work to try and treat things as small packets of work over periods of years, and you have to kind of have a few things that you're trying to maintain some general high level goals the community is on board with. And 1559 was one of those things. And I wasn't really involved until kind of the very end of the process. But I can kind of see how different people have come in to play different roles whenever their roles were needed, and I came in to play my role whenever it became more of an engineering problem.
01:42:42.878 - 01:43:16.760, Speaker F: And so I think that for a lot of changes in Ethereum, that's like a better mindset to think about it. It's a multi year process. And with the merge coming, I think we're not going to see very many new features in Ethereum until the merge happens. I think everybody has sort of decided that we're going to do the merge. This is the number one priority, and we're not going to focus on anything else until it happens. And so that's something that means that we're probably not going to see new. We're like, we're not going to see new things happen in Ethereum for the next twelve to 18 months, other than merge related things.
01:43:17.390 - 01:43:19.290, Speaker B: Micah, what's your take on timeline?
01:43:20.830 - 01:43:57.506, Speaker A: So I'm similar to Matt. I was young and naive back in 2018, and I thought surely this thing, well, after I realized that Vitalik was smarter than I gave him credit for, then I thought, okay, this is a great idea. Sure, this will go through quickly. Turns out that was not true. But I think there's a good reason for this. When you're driving down the freeway with a bus full of children and you're trying to change the wheels on it, you want to take that process very carefully. You don't want to just tip over on the two side wheel, swap the wheel out real quick, and then keep going.
01:43:57.506 - 01:44:29.920, Speaker A: Just hope for the best. This is not a yolo sort of situation. And so, 41559, there was a lot of, you know, a lot of people, including myself, and sounds like most people on this call were skeptical of it. And so the process requires us to convince all those skeptics that this is actually a good idea. And then once we convince the skeptics, then we need to actually implement it and then make sure there's no bugs. And there was a bug on Robston in the 1559 implementation as recently as, what was it, two weeks ago? Or something like that. And so this isn't like a simple thing.
01:44:29.920 - 01:44:56.646, Speaker A: This is after massive amounts of testing and a month or so on testnets, and then we still found a bug. So this is very hard to do. And so I think that taking it slow is the right approach at this phase of Ethereum's lifecycle. When Ethereum was brand new and had ten users, sure, we probably could have knocked out 1559 in a week. It's not that hard. Just throw it out there, see what breaks. And if it breaks, restart everything.
01:44:56.646 - 01:45:38.210, Speaker A: It's even worse for things like proof of stake, because proof of stake had to build an entire, do a bunch of research to actually design a system that previously wasn't designed. There are chains that have proof of stake, but they make trade offs that Ethereum is unwilling to make. And so Ethereum had to actually go through the whole research process and figure out how do we solve this problem that no one else in the world has ever solved before without making trade offs that we're unwilling to make. And so they finally did that. And then you have to build the whole thing, and then you have to test the whole thing, and then you have to convince everybody, know, actually upgrade and accept that whole think it was slow, but I think there are good reasons for that. And I don't think it means we've reached that point of stagnation we talked about earlier.
01:45:38.890 - 01:45:51.980, Speaker C: Micah, is that you use the metaphor changing a school bus wheel with a bunch of children on it. Is that what it feels like to be an Ethereum maintainer? Like just driving a school bus with a bunch of kids? Is that how you think of, are we the kids?
01:45:53.950 - 01:45:59.180, Speaker A: Yeah. If you see children as just dollar signs, then yes, it's basically the same thing.
01:46:00.110 - 01:46:01.820, Speaker F: Is that how you see kids?
01:46:02.750 - 01:46:05.470, Speaker B: Deeper question. We'll say that for a different panel.
01:46:07.250 - 01:46:08.574, Speaker C: Barnaby, I want to make sure that.
01:46:08.612 - 01:46:11.530, Speaker B: 59 panel, not the 1559 panel.
01:46:11.690 - 01:46:13.380, Speaker F: That's what I signed up for.
01:46:14.710 - 01:46:18.290, Speaker B: Barnabay, take us home. What do you think about timeline?
01:46:18.950 - 01:47:06.706, Speaker G: Yeah, I mean, I don't have so much to add, but EAV 1559 was kind of my first project. I joined the EF in 2020. Before that, I was in a more academic background. Let's say things in academia move quite slow. And so when I joined Ethereum ecosystem and kind of started contributing, I actually thought, wow, this is moving really fast. Like it's a huge system, so many moving parts, and people are willing to go through these big changes. But it gave me such an appreciation of the work that goes on behind the scenes, especially the very thoughtful kind of staging process through the testnets, all the work that goes into making the clients work, coordinating an ecosystem which just spreads in so many different directions, especially 1559.
01:47:06.706 - 01:47:24.760, Speaker G: I mean, it touches the economic engine, it touches the client, it touches wallets, the way users interact with the network. So it's a huge amount of work. And I would say, yeah, I can't really say if it was slow or fast because I don't have a good point of comparison, but to me it feels like it's actually quite fast.
01:47:25.130 - 01:47:36.970, Speaker B: Well, guys, it is here. We could say that for sure. This week it is happening. EIP 15 five nine currently scheduled for Thursday, maybe around 05:00 a.m. Or so pacific time. 08:00 a.m. Eastern time.
01:47:36.970 - 01:48:08.102, Speaker B: Join us for that live stream where we will be broadcasting. Hopefully a celebration when the hard fork goes live. Panelists, we want to thank you so much for availing your time to us. This has been fantastic and I actually want to thank you on behalf of the Ethereum community for all of the work that you guys put into this. We have been excited about EiP 15 five nine for many reasons, for a long time. And you guys are part of the core team, along with many others who are not on this panel. But you guys have been part of the core team to make this happen.
01:48:08.102 - 01:48:11.000, Speaker B: We just want to thank you for all of your work on it.
01:48:12.170 - 01:48:13.400, Speaker F: Thanks a lot, guys.
01:48:14.250 - 01:48:17.062, Speaker A: Thanks for spreading the word. Thank you.
01:48:17.116 - 01:48:26.726, Speaker B: All right, that's what we do. We spread the word. I got to end with this, of course. Written disclaimers none of this was financial advice. ETH is risky. Crypto is risky. Hard forks are risky.
01:48:26.726 - 01:48:36.446, Speaker B: Fingers crossed. You could lose what you put in. But we are headed west. This is the frontier. It's not for everyone. But we're glad you're with us on the bankless journey. Thanks a lot.
01:48:36.628 - 01:48:47.506, Speaker C: And if you are watching the YouTube, one of the 426 people watching the YouTube, make sure to like and subscribe for the two EIP live streams that we are having on Thursday. Do not miss those.
01:48:47.608 - 01:48:48.674, Speaker A: Thanks everyone.
01:48:48.872 - 01:49:29.990, Speaker D: Hey, we hope you enjoyed the video. If you did, head over to bankless hq right now to develop your crypto investing skills and learn how to free yourself from banks and gain your financial independence. We recommend joining our daily newsletter, podcast and community as a bankless premium subscriber to get the most out of your bankless experience. You'll get access to our market analysis, our alpha leaks and exclusive content, and even the bankless token for airdrops, raffles and unlocks. If you're interested in crypto, the bankless community is where you want to be. Click the link in the description to become a bankless premium subscriber today. Also, don't forget to subscribe to the channel for in depth interviews with industry leaders.
01:49:29.990 - 01:49:39.710, Speaker D: Ask me anythings and we weekly roll ups where we summarize the week in crypto and other fantastic content. Thanks everyone for watching and being on the journey as we build out the bankless nation.
