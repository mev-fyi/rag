00:00:04.040 - 00:00:47.739, Speaker A: Welcome to Bankless where we explore the frontier of Internet money and Internet finance. And today on Bankless, we are exploring the frontier of the Ethereum virtual machine from two different architectures. Two different blockchains are on the show today. Monad representing the Layer one camp and Mega Eth representing the Layer two camp. Both are using the EVM and really turning the EVM up to 11 to see how far it can go, but with very different paths to actually getting there. On this episode we compare and contrast each of these respective blockchains with the respective founders of each of their respective blockchains. So some of the topics that we talk about, which one is faster, which one's more decentralized, which one is more censorship resistant, all of the technical properties that we enjoy talking about in the blockchain world.
00:00:47.739 - 00:01:32.903, Speaker A: Also, how did both Monad and Mega Eth attract such large communities ahead of actually shipping a test net? That's right. Not a, not a mainnet, a testnet. And then also, what do they think about Anatoly's claim that building with the EVM is building through quicksand? What do they think about that? And why of all EVMs did they choose to build on the EVM? All of these and other topics as well. Before we get into the episode though, a message from our friends and sponsors over at Kelp Dow which just introduced gain, a new product to help you maximize your rewards on your eth. You can deposit eth, RS ETH or other LST into GAIN to access rewards for multiple layer 2 networks, restaking platforms and other defi opportunities. And for those who enjoy the Pendle games, they're already live on Pendle Balancer and more. But that's not all.
00:01:32.903 - 00:01:44.999, Speaker A: If you deposit into the GAIN vault, you also don't give up your liquidity. You receive a GE from Kelp to unlock multi chain defi strategies. There is a link in the show notes to getting started today. Ryan, what do you think about this episode?
00:01:45.127 - 00:02:31.383, Speaker B: Yeah, I think it's a relevant topic. You know, this discussion of, you know, whether Ethereum is going to find its way, how it holds up to things that maybe the svm, the Solana community is kind of kicking up, kicking out, right with the Fire Dancer client. And I think the super fast evm, super fast Ethereum approach that both of these respective teams are trying to build is kind of like one answer to that. In particular, the most interesting part of the discussion was over this decentralization word, which approach is more decentralized. And of course we all know that decentralization is just a means to an end. It's about security, it's about settlement assurances, it's about censorship, resistance. But they've both taken a different architecture to that One is a layer one, the other is a L2.
00:02:31.383 - 00:03:22.003, Speaker B: And so this was maybe the most contentious part of this discussion when we asked the question of, okay, which approach is going to lead to more decentralization? One element I feel like we didn't discuss which is worth more investigation, is the concept of economic security as it relates to this. There's a lot of time spent on kind of technical requirements to run a node in this conversation of what is a full node. We didn't talk as much about distribution of stake and I think that's maybe a follow up conversation anyway. Lots, lots jam packed in here. One disclaimer before we get in Both David and I hold angel investments in Monad and nothing in Mega Eth. There's always a link to all disclosures@bankless.com disclosures all right guys, we're getting right into the episode, but before we do, we want to thank our friends over at Kraken.
00:03:22.003 - 00:03:27.139, Speaker B: If you want a super fast trading experience, go open a Kraken account and get started.
00:03:27.187 - 00:04:11.905, Speaker A: If you want a crypto trading experience backed by world class security and award winning support teams, then head over to Kraken. One of the longest standing and most secure crypto platforms in the world, Kraken is on a journey to build a more accessible, inclusive and fair financial system, making it simple and secure for everyone everywhere. To trade Crypto Kraken's intuitive trading tools are designed to grow with you, empowering you to make your first or your hundredth trade in just a few clicks. And there's an award winning client Support team available 247 to help you along the way. Along with a whole range of educational guides, articles and videos with products and features like Kraken Pro and Kraken NFT Marketplace and a seamless app to bring it all together. It's really the perfect place to get your complete crypto experience. So check out the simple, secure and powerful way for everyone to trade crypto.
00:04:11.905 - 00:04:35.667, Speaker A: Whether you're a complete beginner or a seasoned pro. Go to kraken.com banklist to see what crypto can be. Not investment advice, Crypto trading involves risk of loss. The Uniswap extension is here. The self custody wallet created by the most trusted team in Defi Uniswap Labs. Designed to make swapping feel effortless, this extension lives in your browser's Sidebar Letting you swap, sign transactions and send or receive crypto without ever losing your place on the Internet.
00:04:35.667 - 00:05:07.593, Speaker A: Plus, with human readable transaction messages, you'll always know exactly what you're signing. Navigate a multi chain world effortlessly with support for 11 chains like Ethereum, Mainnet, Base, Arbitrum and Optimism. No more chain switching or token importing. All your assets are right where you need them to be. The Uniswap extension is designed to level up your swapping experience with other Uniswap Labs products as well. Easily onboard the extension using the Uniswap mobile wallet to begin managing your assets across platforms and take advantage of smooth, seamless synergies with the Uniswap web app. So go and download the Uniswap extension today by clicking the link in the show notes.
00:05:07.593 - 00:05:45.061, Speaker A: Just another way Uniswap is helping you swap smarter Launching a Token don't let complex legal and tax issues slow you down. Toku provides specialized support to optimize your launch and ensure that you as a founder and your team and your investors get the most tax efficient outcomes. The Toku team understands the crypto space inside and out and will ensure your token launch is fully compliant while maximizing tax efficiency. Toku can connect you with the best attorneys if you need them to make sure that you have the best advice. And Toku can help optimize your taxes so you pay the least possible amount of taxes while still maintaining legal compliance. With Toku's guidance, you can concentrate on building your company while Toku handles the logistics. Token launches don't have to be complicated.
00:05:45.061 - 00:05:56.155, Speaker A: Talk to Toku today to get a free initial token valuation. Bankless Nation super excited to introduce you to Keoni Han, the founder and CEO of Monad Labs, the creators of the Monad chain. Keoni, welcome to Bankless.
00:05:56.735 - 00:05:58.791, Speaker C: Hey, thank you so much for having me.
00:05:58.983 - 00:06:05.715, Speaker A: And we also have Lei Yang, the Founder and CTO over at Mega Eth. Lei also welcome to Bankless.
00:06:06.015 - 00:06:07.195, Speaker D: Happy to be here.
00:06:07.815 - 00:06:54.615, Speaker A: Okay, so two brand new high performance chains coming onto the scene, both leveraging and juicing up the EVM to I think really see how far we can take the evm. Different ways of actually using the EVM that I don't think we've seen be used in the Ethereum ecosystem or its L2s ever before. And so this is kind of a new frontier for this tech stack that we call the EVM that I think we all want to explore a little bit here on the podcast today. Let's go and take some time to introduce your Guys respective projects and really what are the key aspects, the key features of your guys respective projects as it relates to the evm. I think Mega Eth was. Excuse me, I think Monad was founded first. So that means we'll start with Keoni and then we'll go in with Mega Eth second.
00:06:54.615 - 00:07:01.235, Speaker A: Keoni, explain to us Monad and just what is doing differently in the space of blockchains.
00:07:01.855 - 00:08:04.529, Speaker C: Yeah, thank you for having me. My name is Keoni Han, co founder and CEO at Monad Labs. We're building Monad, which is a reimagining of Ethereum from the ground up by redesigning both execution and consensus layers to introduce four major improvements and more generally deliver a really high performance version of ethereum offering over 10,000 transactions per second of throughput. And Monad is doing that by introducing a completely new database that's built from scratch called monadDB. By introducing optimistic parallel execution so that many transactions can be executed in parallel. By introducing asynchronous execution where consensus and execution kind of run in separate swim lanes to massively raise the budget for execution. And lastly through Monad, bft, which is a really performant consensus mechanism that allows hundreds of nodes that are fully globally distributed to stay in sync with each other.
00:08:04.529 - 00:08:16.895, Speaker C: So overall it's an effort to go really low level and apply systems engineering techniques to build a really performant reimagining of Ethereum.
00:08:18.115 - 00:09:04.935, Speaker A: One thing I want to bring up Keoni about the way Monad works is I think there was a lot of excitement about Monad after the Solana virtual machine. Solana and the parallelization of the SVM got everyone excited about parallelization. And then there was some technical pushback from very smart people who said it's actually not paralyzed execution. That is really the bottleneck, it's paralyzed read access of a database. To which Keoni of Monad said, well, we've also paralyzed our database too. And then everyone was like, wow, that's pretty sick. Can you kind of walk us through that like part of an architecture of a blockchain? Why is parallelization of a virtual machine cool? But then also like, how does it boil down to needing to have parallel read access to a database which you guys also have?
00:09:06.375 - 00:09:59.615, Speaker C: Yeah, it's a great question. I think people kind of intuitively understand that parallel execution is of some benefit because our modern computers clearly have many processors and are running many tasks in parallel. You know, I have hundreds of browsers, tabs open. It's kind of a bad habit actually. But you know, I have a whole Bunch of different browser tabs, Spotify, Discord, all these things going on in parallel. And it's a little bit crazy right now that Ethereum and other EVM blockchains all are single threaded and execute completely serially. So parallel execution is the aspect of utilizing multiple threads or multiple processors on the host to run many pieces of work in parallel.
00:09:59.615 - 00:10:46.819, Speaker C: And that's one of the improvements that ultimately can unlock performance. But when you do the benchmarking and when you look at what the real costs are, actually the single biggest bottleneck for execution is not that CPU time. It's not like doing math or executing individual instructions. The actual biggest bottleneck is state access, because every smart contract depends on some residual state that's associated with that contract. For example, when you're making a uniswap swap, you need the balances of the two assets in the pool. Say it's uni v2, you need to be able to look those up in order to actually like execute the swap and figure out what the new balances are. So, and that requires reading some data from disk.
00:10:46.819 - 00:11:46.815, Speaker C: So the biggest bottleneck for execution actually is state access and only parallelizing the execution. Excuse me, only parallelizing the computation without also parallelizing reads to the database would be only a small improvement relative to the much bigger improvement that could be made by also allowing the database to be parallel readable. And that's exactly what our team has done with MonadDB, which is a completely from scratch database that's specifically optimized for the problem of storing the Ethereum Merkle tree data really efficiently on disk. It's been a big endeavor to build this database. Everyone always, you know, the common computer science advice is don't write your own database because it's a big undertaking. But in this particular case it's really needed and really impactful because we have high value state, AKA Ethereum state, we need to be able to access it as fast as possible.
00:11:48.685 - 00:12:46.205, Speaker B: Keoni, one last question for you before we delay and the mega eth side of things, and this goes to kind of the word choice you were using and the phrasing you were using, you're talking about bringing this to Ethereum, this technology to Ethereum. And so my question to you is, in what sense is that true? In what sense is that not true? So certainly you are bringing this to the evm, let's say, which is a virtual machine that Ethereum uses. But correct me if I'm wrong, Monad still plans to kind of launch its own alternative layer one. So we maybe Call that alt Layer one in common parlance, not as a Layer two. And this gets to maybe one of the distinctions and differences. So in what sense are you bringing this to Ethereum? What sense are you not bringing this to Ethereum? So you're not actually expanding Ethereum as a Layer two, you're not doing this in Mainnet, you're not doing this, you're doing this as an alternative chain to Ethereum, Is that correct?
00:12:46.845 - 00:14:08.525, Speaker C: That's correct. Monad is a vanguard environment for proving out the capabilities of these different architectural improvements that our team thinks ultimately are really needed in Ethereum L1 as well. I think at the end of the day, the discourse around Layer ones and Layer Twos is one that's evolved over time. And while when we first started in 2022 there was very, very strong feeling of like L2s that all interact with Ethereum in the same way, utilizing Ethereum both for state commitments and for data availability, there's like this one pattern of how L2s interact with Ethereum. Now in 2024, that spectrum of sort of how L2s interact with Ethereum and to what extent they're utilizing the services of Ethereum directly has evolved as well. And our team's belief is that there are many different ways to be, to be contributing to Ethereum overall. And by focusing on a completely orthogonal direction of Ethereum scaling research that we think is really needed and wasn't being explored, we can also make a significant improvement, a significant contribution to the Ethereum ecosystem overall.
00:14:09.105 - 00:14:19.545, Speaker B: Okay, Lei, it's your turn. So let's talk about Mega Eth and same question you could you just tell us what's the project about and like why are you here? Why is, why is Mega Eth here?
00:14:19.665 - 00:15:18.435, Speaker D: Yeah, of course. So yeah, again, my name is Lei Yang and I'm a CTO and co founder of Mega Eth. So just graduated with my PhD from MIT, worked for six years on blockchain consensus and published a bunch of papers on security, performance, network aspects of blockchain, and now building Mega Eth. So Mega Eth is a performance optimized blockchain with full Ethereum compatibility. And I guess the key kind of differentiation here is that we are kind of unapologetically performance oriented and we're single mindedly performance oriented and how that materializes. Right. So first we choose to be an Ethereum layer 2 and the reason is really that we think it's kind of the only optimal architecture for performance engineering and we are really exploiting the architecture of being a Layer two by building what we call the first real time blockchain.
00:15:18.435 - 00:16:46.115, Speaker D: So in other words, up to more than 100,000 transactions per second, real Ethereum transactions, not just payments, a block time of 1 to 10 milliseconds. So that what we want to kind of achieve is really for Dapps to be kind of as responsive and as feature and logic reach as your normal Web2 applications, while also giving other users the same benefit that they expect from adapt, I.e. correctness of execution, freedom of censorship, et cetera. Right. So a few kind of detailed, kind of technical optimizations. So first, being a Layer two allows us something called node specialization in the sense that in Mega Eth, we try to cut down the redundancy of execution as much as possible to the degree that there's only one active sequencer at any given point working on executing every single transaction and all the other nodes, while they subscribe to the state updates, while they try to keep updates, keep up to date with the current blockchain status, they do not need to execute all of the transactions. And basically that allows us to really jack up the performance and jack up the hardware configuration of the sequencer which is executing all the chain actions and also maintaining the hardware requirement of the full nodes who are only interested in getting the current state.
00:16:46.115 - 00:17:25.665, Speaker D: And on the sequencer side we have a few optimizations, including a new data structure that is featured. I mean, feature wise being the same as the Merkle Patricia Tree, but being much more efficient in terms of utilizing the actual hardware like SSDs and memory. We are going to compile in real time the Ethereum smart contracts from bytecodes down to native assembly codes down to native instructions, and we are also paralyzing the execution of the ebm. So yeah, these are some highlights. And we call the end product a real time blockchain.
00:17:26.325 - 00:17:51.715, Speaker B: Leah, I'm curious, you heard Keoni's description of Monad, right? So I'm curious your perspective on kind of similarities and differences. Right? Maybe for kind of the layman who's sort of approaching this. The layman, let's call them crypto native. So obviously a similarity that probably stuck out is you're both looking to scale the EVM and parallelize execution. So that's ding, ding, ding. That's a similarity. Okay.
00:17:51.715 - 00:18:07.775, Speaker B: And then a difference that I think we've heard from both these projects is Mega Eth is using the layer 2 architecture, so it's settling to Ethereum. It's using Ethereum for data availability, I would imagine. So is that correct?
00:18:08.355 - 00:18:31.415, Speaker D: Actually that's not correct. So we settle down to, I mean we use Eigenlayer as the data availability layer, but also we settle down to Ethereum. But also a small nuance here is that we are not, I mean pushing, I mean parallelization as kind of the kind of the flagship feature or the flagship optimization. We value single threaded performance as much as parallelization.
00:18:31.835 - 00:18:40.467, Speaker B: Ah, okay. Well then why don't you put it in your words. So what are the similarities and differences between the projects and your words?
00:18:40.651 - 00:19:36.055, Speaker D: I think you summarized the similarities very well. The same focus on performance and trying to kind of bring in the next generation of apps by giving them abundance of resources. But I think the difference here first, as I mentioned, the kind of a different angle I would say towards parallelization because we. So my hot take is that actually if you want to build, say, if you want say 100 copies of Uniswap, there's enough block space in EVM and Ethereum ecosystem for you to do that. But what we actually need is brand new applications. And for these applications our belief is that you have to get to a degree of really high single threaded performance because that is the actual performance that a single individual application can use at the same time. So in other words, we're kind of really pushing the frontier of single threaded performance.
00:19:36.055 - 00:20:35.203, Speaker D: The optimizations I mentioned, like the new data structure, the JIT compilation of smart contracts, the and also this in memory computation technique that I didn't mention, they are all for single threaded performance. While parallelization, we viewed it as kind of the second step to push for after we got to a high enough single threaded performance to enable brand new applications. Although engineering and operation wise, we're doing the two at the same time. Another is, I would say kind of a sharp focus on performance. We build a L2 by choice because we believe that it's the kind of the only optimal architecture for performance that enables you to really eliminate as much redundancy in terms of execution, in terms of consensus in the blockchain as possible. So I think that's a key difference that I want to highlight.
00:20:35.259 - 00:20:38.821, Speaker A: Keoni, was there anything that Lei just said that sparked anything in you?
00:20:38.963 - 00:21:36.955, Speaker C: I think one thing to mention is that Monad's goal and these individual architectural improvements that Monad is working on are designed to get the maximum performance out of the minimal hardware requirements. I think it's really important from the perspective of decentralization that anyone be able to run a node with commodity hardware. And in order for that to be possible, we need to make software improvements. They get more performance out of the hardware rather than strictly relying on really high hardware requirements. So I think that fundamentally the two projects are probably just very different in the outset from the initial premise, which is like in Monad we're just really focused on getting the most performance out of hardware so that anyone can run a full node and have access to all of the state and keep up with the network and not have to trust, but instead just verify directly.
00:21:38.055 - 00:22:45.565, Speaker A: There's something really interesting about having both of you guys on on the same podcast, which is why we wanted to do this podcast where you guys have the same goals, which is a very fast EVM and but like the way that you guys have gotten there are like almost polar opposites towards each other. Whereas mega eth is going for the layer 2 single sequencer or very low number of sequencer routes and Monad is going for a lay one blockchain with a very wide distributor, a validator set and then technically speaking, under the hood you guys have architecture to match these end desires. I'm wondering, since the end goal is the same, which is having a very fast evm, do you think that the apps that will manifest on each one of your guys respective blockchains will also kind of be the same or do you think each one will kind of have an ecosystem that will emerge differently because of the underlying architecture? I guess the question is how does the underlying architecture, how do you think it will impact the application landscape that comes to be built on top of each respective blockchain? Or maybe it does not do that. Lei, let's start with you.
00:22:45.985 - 00:23:46.241, Speaker D: Okay, so I think it would be very different because I mean first we are, as I mentioned, we are single mindedly focused on performance. So that actually allows us to reach a much lower latency and I would say higher throughput as well for our system. And I really want to highlight the latency part because it's exactly as you mentioned. We use a single sequencer at the same time. So the sequencer can just execute the transactions in a stream fashion and it really minimizes the kind of the wait time and this block packaging time for transactions to get their feedback. In other words, we expect the kind of the turnaround for a transaction from it arriving at the sequencer to it being executed and packaged and the state being updated is 1 millisecond. So I would say to me, at least from my background of consensus research, this is not possible for any system where a consensus algorithm sits in the critical path of the system.
00:23:46.241 - 00:24:38.283, Speaker D: Because for a consensus algorithm to really function A message has to travel at least across all of the nodes and if they're globally distributed then it means that it has to fly around the world, although at at most light speed it still takes several hundreds of milliseconds. And even not to mention that usually you need at least two or three rounds of messaging to do that. So that goes to maybe 6 to 700 milliseconds and that is your minimum latency for a layer one or even a L2 with kind of a decentralized sequencer using a consensus based approach. So this low latency I think would be really useful for some applications. For example, imagine like on chain Minecraft, right? You do not want your avatar to kind of take a 6 milli. Hundred. Six milli.
00:24:38.283 - 00:25:01.185, Speaker D: Sorry, 600 millisecond wait before it can take the next move. And for really high frequency trading I think it'd be very interesting because actually the market makers and the traders can actually choose to co locate with our sequencer. So these kind of real time applications I think would be our unique ecosystem projects. Yep.
00:25:01.845 - 00:25:03.661, Speaker A: Keoni, same question to you. Yeah?
00:25:03.813 - 00:25:13.545, Speaker C: Oh yeah. Wondering about the decentralized Minecraft situation because that's only going to be low latency if you happen to be close to where the sequencer is.
00:25:14.165 - 00:25:41.325, Speaker D: Yes, of course. So I would like to distinguish two parameters. One is the tick time or the block time. In other words, the fidelity or the resolution of the movements. Like every 1 millisecond a movement can happen, but for the user to actually get feedback. Of course we're not really breaking physics here. So the user has to kind of the action has to travel from the keyboard of the user to the sequencer back to the user's display.
00:25:41.325 - 00:26:06.967, Speaker D: However, that is already happening with any kind of online, I mean, MMORPG games. So actually that part of latency is fine. What really matters is if you bring in consensus into a critical path, you have this three round, I mean three messages around the globe situation and that's 600 plus milliseconds, which is much higher than the typical latency. I mean the raw network latency from the user to a centralized sequencer.
00:26:07.031 - 00:26:18.335, Speaker A: Keoni, what's your attitude or belief about the way that the application ecosystem will come to be born on top of Monad? Is there any differences or any things that you guys are focusing on specifically?
00:26:19.715 - 00:27:41.345, Speaker C: I think the beauty of the EVM is that it is really this dominant standard that has incredible network effects. There's so many libraries that are built for the evm, there's so many applications, there's a lot of applied cryptography research all being done in the context of the evm. And so being fully bytecode EVM equivalent, Monad offers developers who are already building with the EVM the best of both worlds between performance and portability. And Monad continues to do that while preserving decentralization, which I think, yeah, fundamentally will just be like, you know, a bit of a crossroads between Monad and Mega Eth in the sense that our team just thinks it's really important to have decentralized block production from the perspective of censorship resistance and all these other properties that the crypto community has grown to cherish and deeply value. It's really important to preserve that full consensus, even if there is an overhead from consensus that lay, as you said, is literally inevitable due to, due to speed of light. Unless we can find a way to speed up the speed of light.
00:27:43.085 - 00:28:24.585, Speaker A: Maybe said differently, Keoni, if I'm understanding you correctly, you're kind of saying that there is a certain level of responsibility that one has when one builds a layer one because of the ethos of crypto that comes alongside with it. So what's the point of building a layer one if you don't have censorship resistance? What's the point of building a layer one if you can't meaningfully decentralize your validator set? And so in addition to having some of this, the very strong architecture improvements from the Monad EVM and the MonadDB, you also have to do kind of like you have to do all the things that are required in order to call yourself like a legitimate blockchain effort, which is like all the things that we value as like the crypto industry. Is that kind of what you're saying?
00:28:25.005 - 00:28:58.865, Speaker C: Yeah, that's right. It really comes from the social layer as well that's enforcing these values. You know, decentralization is important from a hardware requirements perspective, from a number of nodes participating in consensus perspective, you know, from a stake weight distribution. So these are all properties that have to be evaluated for any network. And beyond that, there also needs to be a really strong social layer that reinforces those values.
00:28:59.625 - 00:29:42.459, Speaker B: Can we get into that? Maybe that's a good jumping off topic. I was going to ask another question, but since you brought it up, Gion, the D word, decentralization, this is sort of a sacred word in crypto. And I imagine Lei would be saying something similar. The reason we're deploying as a L2 is because of this word decentralization and censorship resistance. So can you kind of maybe start by talking about the Monad position with respect to decentralization. Because I think this will be sort of counterintuitive to an Ethereum audience. It's just like, hey, if you're going to try to maximize decentralization, why wouldn't you be a L2 rather than a layer one? And it appears like you are arguing the opposite.
00:29:42.459 - 00:30:10.731, Speaker B: Right. So I think for a typical like Ethereum, their perspective is that okay, Ethereum has had many years of tested Lindy effect decentralization. That's the thing that it's best at, right? It's not very good as an execution execution environment. It's 10 to 15 transactions per second, kind of sucks at a lot of things. But one thing it gets right is almost near Bitcoin level or maybe even better than Bitcoin. I said it decentralization properties. Right.
00:30:10.731 - 00:30:32.235, Speaker B: And so why forsake all of that and move to a layer one? Yet you were saying your design choices in Monad are optimizing for decentralization. So maybe first talk about how you view the word decentralization and why the architecture kind of like promotes that for Monad and then I'd love to get Lei to weigh in as well.
00:30:33.415 - 00:31:52.387, Speaker C: Sure thing. I think the first thing to point out is that for any choice of sort of network parameters there's, you know, we should strive to get the maximum performance from that. So if we have a network with 10,000 nodes that are fully globally distributed, where the hardware requirement is, you know, particular level of requirement, I think in the case of Ethereum it's the, and it's a bit of a meme, but I'll say it anyways, like you have to be able to run it on a Raspberry PI. So like certain hardware requirements, certain number of nodes, then we should strive to get the maximum performance out of that requirement. And if you know, the requirement is a little bit higher but still like very reasonable. So in the case of Monad, 32 gigs of RAM, a 2 terabyte SSD, a hundred megabits of bandwidth and a like a pretty cheap CPU, we should try to get as much performance out of that level of hardware and that network setup. Oh sorry, I forgot to also say number of nodes.
00:31:52.387 - 00:32:04.895, Speaker C: So two to 300 nodes participating in consensus that are fully globally distributed for that parameter set, like we should try to get the most performance out of that.
00:32:06.395 - 00:32:26.625, Speaker B: And by the way, is that all that or is that the exact parameter set? Is that basically the specific set that's the parameter set. So basically is that, that's kind of like A consumer grade laptop, like, you know, like MacBook Pro, sort of what you described and like sort of a, you know, broadband. Typical broadband consumer Internet connection is sort of the hardware requirement. And then 200 to 300 nodes.
00:32:27.445 - 00:32:29.705, Speaker C: Yeah, it's a laptop you could get at Costco.
00:32:30.565 - 00:33:06.445, Speaker B: Okay, and you think that this is. And is this decentralized enough or is it as decentralized as Ethereum? Or how would you even kind of like have that like conversation or would you include other actors in the space as well? Because of course it's not just the nodes, the validators. There are actors with respect to how a block is created, block builders and such. There's an entire supply chain around this. Anyway, would you say that Monad's design parameters are going to be more decentralized than Ethereum or how would you even have that conversation?
00:33:07.625 - 00:33:51.165, Speaker C: Right. So I think the thing that I was getting at is for a given set of parameters, we should strive to get the most performance out of that setup as possible. And the only way you can get maximum performance is through software improvements. So the improvements that our team is pioneering within Monad with this particular configuration, some of those improvements will make an improvement to a different setup that you know, more like Ethereum L1 right now where there are 10,000 nodes, it's like literally a different number of nodes. And the hardware requirement is a little bit different. It's still a benefit to have this new database. Like the new database isn't designed for a specific SSD size.
00:33:51.165 - 00:34:57.228, Speaker C: Like it works for any SSD size. So at the end of the day it's really just about getting max performance with very reasonable hardware requirements. And so my point is that if you constrain the network to like only having one node really then and you don't constrain the hardware requirements at all, or you allow really high ram, like there are going to be potentially some different performance characteristics that you could get from that, maybe even just for free, just from like not having to go to ssd, like keeping all of the state in memory. So at the end of the day it is like no matter what, the job of the team that's doing the engineering work should be to get the maximum performance out of any kind of hardware setup. But like everyone always chooses one particular sort of starting point for the hardware and then gets the most out of it. And our view is that this is a really good anchor point where the hardware is still very reasonable and we can get a lot of performance out of it.
00:34:57.396 - 00:35:09.199, Speaker B: Lei, what's your take on the D Word decentralization. What's Mega Eth's position on it? Either similar or in contrast to what we were just hearing, of course.
00:35:09.287 - 00:36:21.337, Speaker D: So I would like to first address this kind of performance per hardware unit, if I may point. So of course Mega Eth is also working to maximize the performance per hardware unit or per gigabyte of RAM per CPU core, per say gigahertz of CPU frequency. Right? But also, so basically all of our optimizations can be can be kind of neglected if we can just jack up the hardware configuration to the infinity, right? But unfortunately there is no such hardware that has an infinite number of CPU cores and infinite amount of memory actually. So actually it's also the limitation of even the latest generation, the top of the line server hardware that requires us to also do hard engineering work to really maximize the efficiency. The word should be the efficiency, the kind of of the performance per unit, like compilation in the new data structure. Right? So back to decentralization. So the point here is that actually we also have lightweight nodes.
00:36:21.337 - 00:37:51.823, Speaker D: So our full node has 8 to 6 gigabyte of memory, terabytes of SSD, but not the server grade, just the consumer grade, 4 to 8 cores of CPU. So it's kind of relative the same order of magnitude of configuration like Ethereum execution nodes and S monad nodes. But the key difference, the reason, I mean the real highlight here is that the sequencer has to shoulder most of the work by executing all of the transactions. But being on L2 allows us to kind of maintain the hardware requirement for the full nodes who are interested in getting the latest states, the entire latest states. So that actually boosts decentralization by being a L2 and also have verifier nodes who literally can run off and Raspberry PI no storage and just obtains the states needed for verification and also the transactions needed for verification from the network on the fly and just kind of verify the blockchain at kind of byte size. Right? So actually, so we value decentralization a lot. And the node specialization is our answer to kind of, I mean Keonis observation that yes, if you require everyone to use really beefy hardware, then there's no decentralization to start with because no one can afford a server and no one wants a server humming.
00:37:51.823 - 00:38:07.745, Speaker D: I literally have a server next to my desk and it's noisy as hell when I do an upgrade or when I do a reboot and no one wants that at their home. So we are really conscious about that. And node specialization is our answer.
00:38:08.445 - 00:38:13.509, Speaker B: Wait is node specialization just basically L1 and L2. Is that kind of like.
00:38:13.557 - 00:39:10.003, Speaker D: No, no, no. So it's basically you have different kinds of nodes of different hardware configuration doing different job within layer 2 system. So you have sequencer executing all the transactions, you have full nodes subscribing to the state updates, and you have verifiers who statelessly verify the training state. But yeah, but on the topic of decentralization, so although we are really conscious about it, by really minimizing the hardware configuration for full nodes and verifier nodes, we actually believe that decentralization is just means to an end. Right? What you want is, I would say correctness of execution, you want finality, you want censorship, tolerance. I don't think anyone, I mean most important in people coming from Web2 to look for something called decentralization when they enter the crypto space. I think what they want is assurance of correctness.
00:39:10.003 - 00:39:44.143, Speaker D: They want to not to trust any single entity to run their important applications. And decentralization, as we saw, which worked really well for layer ones, is just one ming to nn. And now that a layer one has been built, which is Ethereum, with really as much decentralization as one can ask, I would say we think it's time to move on. So Ethereum has done the decentralization part for us and now it's time for us to really optimize for performance piggybacking on the decentralization that Ethereum has achieved.
00:39:44.279 - 00:40:19.941, Speaker B: Do we get to have one of those back and forth conversations of let's not use the word decentralization, but let's use it as a proxy for all of the properties you just mentioned, Lei, which is like censorship, resistance, settlement, assurances, all of these things. Right? It's like we understand decentralization is just a means to the end, but I think what listeners want to know is, okay, which of your super fast performant EVMs are more decentralized? So is it Mega Eth or is it Monad? What's your interest to that, Lei? And then we'll go to Keone also.
00:40:19.973 - 00:40:23.625, Speaker A: How do we even think about that? How do we even understand that question?
00:40:23.965 - 00:41:12.635, Speaker D: Yeah, very good point, very good point. So we can try a few different angles, like hardware configuration, which I mentioned. The full nodes and the verifiers for Mega Eth are on the same magnitude of same order of magnitude of hardware configuration as Ethereum and modern nodes, that is for full nodes, Mega Eth and verifiers literally Raspberry PI grade and just downloads the information of the wire as needed. So that is hardware configurations. Right? So, I mean, the takeaway is that you do not need anything that is beefier than your existing Ethereum execution nodes to download the latest and also maintain the latest mega eth state in terms of the number of nodes. Yeah, go ahead.
00:41:13.055 - 00:41:42.865, Speaker C: Sorry, sorry. It was just. You keep calling them full nodes, but I mean, are they like, is that an abusive terminology at all? Because I think pretty much everyone else in the blockchain space uses full node to mean a node that executes all the transactions, like, verifies the correctness of the outcome of those transactions. And I think what you're referring to when you say full node is like something kind of different.
00:41:43.885 - 00:42:20.449, Speaker D: Yeah, I can answer that question. So if you go to, say, Ethereum's website and there's instructions for syncing up a full node, and actually the default option is, I forgot, it's called Snap sync or fast sync. I think they change the terminology a lot. But basically the default is one that just downloads the latest snapshot of the state. And such a node does not really verify the transactions before kind of start to serve you the state which is downloaded. Right. Because basically the logic is that it just downloads the latest copy of the state and then starts working.
00:42:20.449 - 00:42:49.877, Speaker D: And then probably, it will probably optionally verify the backlog, but it may not do so. So my point, or our understanding, I think it's important that we bring this up, but our understanding of Avafunode is one that maintains and keeps track of the latest blockchain state. Yeah, so that's our understanding. And of course the terminology is up for debate. And it would be great if the industry can agree on the same set.
00:42:49.901 - 00:42:54.901, Speaker B: Of terminologies we've been arguing on what's a full node since the Bitcoin versus Ethereum.
00:42:54.933 - 00:42:56.065, Speaker A: That's where I started.
00:42:57.045 - 00:42:59.505, Speaker B: I don't think that'll ever be fully answered.
00:43:00.375 - 00:43:05.471, Speaker A: Keoni, how would you define, or how does your idea of a full node differ from lay's?
00:43:05.543 - 00:43:08.675, Speaker B: Yeah, why'd you bring that up? What's your thinking there?
00:43:10.095 - 00:44:11.683, Speaker C: Yeah, well, I mean, I think if you are running a node of some sort and it's not, you know, it has to trust a centralized party, then it's not very good. Right. Like, the whole point of blockchain is that we don't have to trust, we could just verify. And so that's, you know, whether we call it a full node or not. I mean, I'm, I'm calling out the use of the terminology full node in the sense that, like, it's being compared to, like, other things. But I think what we really care about is, you know, if I'm a, you know, a small business owner and I'm accepting payments and, you know, someone sends me a payment and I let, you know, the person, like, walk out of the store with, like, I don't know, a laptop or a diamond ring or a Tesla or something. Like, I need to be able to know that that payment actually went through.
00:44:11.683 - 00:44:41.553, Speaker C: And so the whole premise in my mind of blockchain is that, you know, that small business owner could actually literally just run a node, and when they see that payment, they verify that it actually happened, and they know that they're not just trusting, like, a single centralized intermediary. So that's really the nature of my question, I guess. I don't care whether you're calling it full node or not really, but I really care about the question of knowing for sure rather than just having to trust your single centralized sequencer.
00:44:41.729 - 00:45:03.311, Speaker D: Yep. So I think you mentioned that don't trust verify. Right. So if I may, I want to kind of of append the following to it. So basically, don't trust verify, but even better, let someone else verify it for you. Which is the case of rollups, both optimistic and ZK rollups. So in the particular case that you mentioned, right.
00:45:03.311 - 00:46:04.349, Speaker D: I'm the seller of a laptop, Someone paid me on mega eth, say, $5,000, and I'm deciding whether I should hand over the laptop. So the thing here is the sequencer, the single sequencer, yes. At the moment, we are trusting the single sequencer to correctly order the transaction and to execute the transaction. But the important thing here is that the single sequencer is under kind of a social and economic contract. So I think the debate is really about crypto economic security. So imagine that, because the thing is that if the sequencer ever cheats in the sense of retracting, I mean, excluding the transaction or just giving me an incorrect balance update, every information, every piece of information that the sequencer told me when I was deciding whether to hand over the laptop was signed by the sequencer. And if the sequencer did any shenanigans here, this is kind of a proof that we'll get the sequencer slashed.
00:46:04.349 - 00:46:44.287, Speaker D: So, yes, the sequencer may lie to me, but the sequencer has to probably lose eth that is worth maybe a thousand teslas or a thousand laptops, which is kind of not worth it. Right? I mean, yeah, I think this really boils down to crypto economic security. And I mean, being a project in the Ethereum ecosystem I myself got from so I started working, I started my research in blockchain from proof of work. I think it's beautiful. But then I got to know kind of proof of stake and the crypto economic security mode more importantly day by day and I think it really it really works.
00:46:44.351 - 00:47:33.681, Speaker A: Yep, new projects are coming online to the Mantle Layer two every single week. Why is this happening? Maybe it's because Mantle has been on the frontier of Layer two design architecture since it first started building Mantle DA powered by technology from Eigenda. Maybe it's because users are coming onto the Mantle Layer two to capture some of the highest yields available in Defi and to automatically receive the points and tokens being accrued by the $3 billion mantle treasury in the Mantle Rewards. Maybe it's because the Mantle team is one of the most helpful teams to build with, giving you grants, liquidity support and venture partners to help bootstrap your Mantle application. Maybe it's all of these reasons all put together. So if you're a dev and you want to build on one of the best foundations in crypto, or you're a user looking to claim some ownership on Mantle's DeFi apps, click the link in the show. Notes to Getting started with Mantle the OBOL Collective is up and running and is maybe one of the most important collectives that you've never heard of.
00:47:33.681 - 00:48:09.733, Speaker A: OBOL is where bring distributed validators or DVs to the Ethereum Staking Stack. Distributed Validators allow multiple parties of people running multiple nodes to create a single virtual Ethereum validator together. This makes participating in Ethereum Consensus more accessible, more affordable, and more inclusive. It is a strict improvement to the Ethereum Staking Tech stack. With collaboration from Lido, Etherfi, Eigenlayer and 50 other entities and thousands of individuals, the Opal Collective is working to scale and decentralize Ethereum using dvs. And now you can get involved introducing the OBL contributions program. Visit OBL.org
00:48:09.733 - 00:48:38.711, Speaker A: Bankless to stake on DVS, either through a partner staking protocol or at home. Earn access to future governance and ownership in OBL while contributing to retroactive funding for projects that are actively decentralizing Ethereum. This is your opportunity to secure inclusion in one of the most important projects working to scale Ethereum's foundation for future growth. Visit oble.orgbankless to get started. That's O B O L.org Bankless Arbitrum is the leading Ethereum scaling solution that is home to hundreds of decentralized applications.
00:48:38.711 - 00:49:52.169, Speaker A: Arbitrum's technology allows you to interact with Ethereum at scale with low fees and faster transactions. Arbitrum has the leading defi ecosystem, strong infrastructure options, flourishing NFTs and is quickly becoming the Web3 gaming hub. Explore the ecosystem at Portal Arbitrum IO Are you looking to permissionlessly launch your own Arbitrum Orbit chain? Arbitrum Orbit allows anyone to utilize Arbitrum's secure scaling technology to build your own Orbit chain, giving you access to interoperable, customizable permissions with dedicated throughput. Whether you're a developer, an enterprise or a user, Arbitrum Orbit lets you take your project to new heights. All of these technologies leverage the security and decentralization of Ethereum Experience Web3 development the way it was always meant to be secure, fast, cheap and friction free. Visit Arbitrum IO and get your journey started in one of the largest Ethereum communities Can I try and summarize the bit of conversation that we've been up to so far, just so I can make sure that I'm kind of keeping up with the issues? And I agree with you, Keoni. Like my definition of a full node, and I think the consensus definition of a full node in Ethereum land at least, is that like I am a listener of the blockchain, I'm keeping a copy of the ledger, but I'm also doing my duty of verifying the validity of incoming transactions and incoming blocks.
00:49:52.169 - 00:50:35.685, Speaker A: And so sometimes maybe a block comes to me and it's invalid and I reject it, and I start listening for a different block coming from someone else. And I don't actually just automatically accept that invalid block. I actually do my role of making sure that I'm adding only valid blocks with only valid blocks transactions to the blockchain. And this is how, if everyone is doing this role, this is how blockchains preserve decentralization while also having correctness. And so what you're saying is that if you're just listening to a trusted source of these blocks, a single centralized sequencer, that actually is less of a role of what a full node does. Because if you're just automatically trusting the validity of these blocks as a full node, that makes you like less of a full node. I think that was the point of contention that you brought up.
00:50:35.685 - 00:50:59.205, Speaker A: And then lay's response is like, well, if the sequencer is signing transactions and there's an economic bond that would result in sequencer getting slashed a very large amount, then we are perhaps not the same full node as I was describing earlier, but there is a large amount of economic security here. And that's our new trust assumption. Has that's been the conversation so far?
00:51:00.265 - 00:51:31.695, Speaker D: Yep. And yeah, exactly. And I would say, I think the type of node that you mentioned is kind of a combo of a full node and also a validator in Ethereum terminology. Because usually people don't expect a full node to really sign. I mean mine blocks you have to be also staking. In other words, if a node does not stake, should it be called a full node? I think so. I think the type of node that you mentioned is kind of something that's much more than a full node.
00:51:33.675 - 00:51:48.725, Speaker C: Sorry, so just to verify, you said when or lay you said that when the or if the sequencer were to post an invalid state route, how would they get slashed?
00:51:49.665 - 00:52:29.327, Speaker D: Right. So it's basically standard, optimistic and ZK proofs. So the way it works is that the sequencer by posting the state updates kind of accountable proof that the sequencer has said something like this, which is incorrect. Right. So later these transactions, the block they are going to be posted to Eigenda and the state route posted to Ethereum. And for optimistic proof there are usually seven days for verifiers, which I meant the verified pies to come and re execute those transactions. So importantly people in maga eth, they do re execute transactions.
00:52:29.327 - 00:53:12.475, Speaker D: The important thing is that an individual node does not need to re execute every transaction. So this makes them lightweight. But again people re execute every single transaction collectively. So if they find anything that is incorrect, they submit something called a fraud proof or an optimistic proof to the Ethereum smart contract which slashes the sequencer automatically. And in the case of the ZK proof it's even simpler. Basically the sequencer is responsible for kind of proving state transitions in real time before in the future, before even it posts the state updates. So yeah, that's how we verify the state routes.
00:53:12.595 - 00:53:16.387, Speaker B: I mean also nothing exotic here. This is all standard L2 failure.
00:53:16.451 - 00:53:18.203, Speaker D: Exactly, exactly, exactly.
00:53:18.299 - 00:53:21.779, Speaker A: Yeah, this is not anything different about Mega Eth. This is just L2 101.
00:53:21.827 - 00:53:31.283, Speaker D: Yeah, if I miscommunicate it, I'm sorry. But yeah, as I mentioned in the beginning it's just standard OP and ZK roll ups.
00:53:31.419 - 00:53:37.819, Speaker C: So but just to verify those are two different mechanisms. So which have you guys decided which one you're going to use?
00:53:37.907 - 00:53:49.055, Speaker D: Yeah, we're using optimistic proofs for now. Yeah, because we believe that the ZK proof is not kind of efficient enough as of this point for our level of throughput.
00:53:49.955 - 00:53:54.467, Speaker C: Oh, I see, okay, but you were just mentioning ZK as like a future maybe possibility.
00:53:54.611 - 00:54:01.465, Speaker D: Yeah, exactly. I was trying to kind of just introduce the kind of validity proofs on a high level.
00:54:01.965 - 00:54:08.305, Speaker C: Okay, yeah, that makes sense. But then for the optimistic, like for other people to verify, they'd also have to have a lot of ram.
00:54:09.325 - 00:54:33.885, Speaker D: And that is incorrect because I think I mentioned repeatedly that the verifier only needs to be as beefy as a Raspberry PI. So the secret sauce here is something called stateless verification. So again, disclaimer, we didn't come up with this idea. So it roots from Ethereum's stateless client discussion, I think a few years ago. But we are basically adapting the technology.
00:54:36.505 - 00:55:05.705, Speaker B: Keoni, I'm curious your take on this. So this line of discussion around full nodes and everything we just talked about started with the prompt of okay, Lei, who's more decentralized? And again, we're using that word as a proxy for many things. Censorship, resistance, all of these features that make blockchain special. So I want to turn that same question to you. How do you think about that question like, which is more decentralized? What's the path to getting there?
00:55:09.725 - 00:56:09.381, Speaker C: For me, decentralization means that anyone can run a full node. And by full node I mean a node that has access to all the state and that executes all the transactions. So Monad is pioneering these different architectural improvements so that anyone could, without raising their hardware requirements very much run a node and keep up with the tip of the chain, execute all the transactions and have access to the full state. I think that's really important to decentralization. I think that there are other architectures which, which trade some aspects of decentralization and censorship resistance for being able to move execution off of the layer one. And that's interesting. I think there's a lot of merit there.
00:56:09.381 - 00:57:22.965, Speaker C: But I think from the perspective of having a system with I mentioned before, a couple hundred nodes participating in consensus, but even more than that, thousands or tens of thousands of full nodes that have access to that full state, it's just really important that node requirements be reasonable. And then downstream that also has an effect on the economics of the blockchain. I know this is kind of a hot topic, but in blockchains where the hardware requirements are really substantial, it means that the cost to run a node is quite high, which then has a centralizing effect as well. And you know, we see that with some other high performance blockchains that have really high hardware requirements that it's just not economical for a small staker to actually run a node because it'd just be too expensive if it's like $10,000 a year or something to run a node. So I think that efficiency, you know, efficiency matters and efficiency has knock on effects. And it's just really important to have really high software efficiency so that we can have the most decentralized network possible.
00:57:23.985 - 00:57:52.205, Speaker A: Going back to something that you said about monad, Keoni, about software efficiency is that just like one transaction should cost the least amount of just like total compute from all of the nodes around the world as possible. And I think that's kind of like where you're spawning efficiency from. Can you talk about those like knock on effects? Like if you are optimizing for reducing the total compute costs of planet Earth to run the monad blockchain, what does monad get out of that? What's the juice that you can squeeze from that feature?
00:57:53.825 - 00:58:49.187, Speaker C: So just to mention one thing, I think it was actually Lay that was saying that efficiency means the least amount of compute expended to do something. But that comes from having one sequencer that does it. Yeah, like in the monad network, if one reduced the number of nodes participating in consensus, there would be less, I guess like in some sense electricity expended for that. But that's not totally like the metric that our team is optimizing for. Like we just want per unit of verification, like per full node that cost to be as low as possible. So that then it is as cheap as possible to run a full node and keep up with this entire global state that's progressing through time. So just wanted to clarify that.
00:58:49.291 - 00:59:46.923, Speaker A: Sure. Maybe I'm missing something about the way Mega Eth runs. I'm going to make an assumption here and yay, shake your head violently if I'm wrong. But since the whole idea about Mega Eth is that it goes really, really fast, we're centralizing all the compute, we're centraling all the resources in order to have like this real time server that people ping and it goes really, really fast. And then in contrast to that, monad is like a layer 1 blockchain with consensus and like individual, like hopefully solo stakers. And because of that architecture, like full nodes, people who aren't staking but are still listening to the blockchain can keep up with the monad blockchain because you know, the stakers have to be meaningfully decentralized and that means we have to reduce the hardware requirements from these stakers. Is your claim, Keoni, that because of the more centralized sequencer that Mega Eth has that it has a lesser claim on decentralization and censorship resistance in comparison to Monad.
00:59:46.923 - 00:59:49.135, Speaker A: Is that a statement that you would agree with?
00:59:51.275 - 00:59:53.947, Speaker C: Yeah, that's a statement I agree with because of.
00:59:54.011 - 01:00:07.535, Speaker A: And my logic is sound there. Right, because you guys have individual solo stakers, you can therefore also have individual full nodes and then you have kind of the complete blockchain stack to preserve decentralization. Incredible neutrality and centrist of resistance.
01:00:08.315 - 01:00:09.135, Speaker C: Yep.
01:00:09.515 - 01:00:12.735, Speaker A: Yeah. Lei, how would you respond to that?
01:00:13.555 - 01:01:00.521, Speaker D: So I think it's important to realize that we anchor our kind of finality, the correctness and censorship resistance on Ethereum. So instead of hundreds of nodes, there are tens of thousands of nodes that are kind of backing that powering the censorship tolerance guarantees. So by that definition, by the particular definition that you stated, I would say Maga eth is more decentralized. So I'm personally, I'm against kind of comparing decentralization of two products, like without really clearing defining it, but in the way that you defined it in terms of the number of nodes that provides the final guarantee of finality correctness and censorship tolerance, then I think it is objectively true that Mega Eth is more decentralized.
01:01:00.633 - 01:01:01.401, Speaker A: Okay, cool.
01:01:01.513 - 01:01:06.185, Speaker D: Because again, we're kind of cheating here, right? Because we build on Ethereum. But that's. Exactly, that's a conscious choice.
01:01:06.305 - 01:01:23.135, Speaker B: Keoni, do you have a response to this? I mean, this entire podcast quite clearly was just debate, you guys, in the question of arguing over who's more decentralized. Let's just put that right out there. But what would you say? What's kind of the Monad claim on decentralization? How would you dispute what was just said there?
01:01:24.675 - 01:02:26.375, Speaker C: I think it's important to be progressing toward. Well, yeah, maybe just to take a step back in Ethereum L1 land, there's discussion right now about, you know, what improvements can we make to Ethereum itself to raise the execution throughput of Ethereum from 15 transactions per second, aka 1.5 million gas per second, to something higher. And it's frustrating when there's the gas spikes on L1. And yeah, I just think that ultimately Ethereum, like, it's. It's of merit for Ethereum to become more performant. It's of merit to introduce software improvements that make Ethereum more powerful.
01:02:26.375 - 01:03:46.235, Speaker C: And so that's sort of like the most fundamental guiding principle in how our team was designing Monad was to make individual architectural improvements that might actually be something they could slot into Ethereum L1 itself. So I think that, you know, if you, if we're going to sort of fall back on like, well, it, it uses Ethereum for some elements and not, not for DA also, by the way, but like using Ethereum for like settlement, like, I guess I would say all L2s kind of can make that same claim of like we are quote unquote, more decentralized than Monad because we're all like using Ethereum directly for settlement. And I would just say like on the opposite side of the diagram, it's just like Monad is trying to introduce tech that makes Ethereum more performant without requiring more hardware, which I think is good. And then second of all, it's just that without kind of is like a more uniquely differentiated. That is a uniquely differentiated direction that I hope will be helpful to the overall effort to improve the impact of decentralized systems.
01:03:47.615 - 01:04:33.459, Speaker D: Yeah, I think we can definitely agree that we're all contributing tech to the Ethereum ecosystem. But I think one small point, I think in terms of overall hardware consumption. So if we define the overall hardware kind of consumption of two chains as kind of the number of the amount of dollars that you need to buy servers and nodes to kind of let the system produce blocks correctly, right. Then for Mega Eve it's one sequencer, and for Monad it's several hundred full nodes. So I'm personally not sure if it's more kind of expensive to operate and to purchase one like beefy sequencer. Probably thousands of dollars versus hundreds of footnotes. I mean, Costco laptops.
01:04:33.459 - 01:04:36.819, Speaker D: So just one small point, but overall, yeah, definitely.
01:04:36.947 - 01:04:51.427, Speaker C: Yeah. I mean, that's kind of a puzzling line of argument for me though, because if the monad network were only two nodes instead of hundreds, then it would be lower cost. And from that perspective, from that metric it would.
01:04:51.491 - 01:05:22.431, Speaker D: Yeah, exactly. But then the censorship tolerance and the finality, the correctness of execution of such a hypothetical and monad system will be leaning on these two monad nodes, while for Mega Eth, it's still tens of thousands of Ethereum nodes. I think that's kind of an important. That's kind of an important difference. But I think you mentioned something that's very important, which is all Layer Twos, All Ethereum layer Twos can claim. So which we definitely agree. And again, it's.
01:05:22.431 - 01:05:26.075, Speaker D: We build and L2 by choice. Yes.
01:05:27.015 - 01:05:41.319, Speaker C: One thing I wanted to ask about actually, because you keep mentioning censorship tolerance and you're choosing your words pretty carefully, which I think is interesting because you didn't say censorship resistance, you said censorship tolerance. Is there a difference?
01:05:41.407 - 01:06:28.279, Speaker D: There oh, so I, Yeah, I usually use the two words interchangeably. I think the key difference here is whether you want. Want real time censorship tolerance or you want eventual or censorship tolerance with a bounded latency. So Maga eth is offering the kind of censorship tolerance with abounded latency by allowing nodes to post their kind of sensor transactions directly to Ethereum, which guarantees inclusion and then forces the sequencer to, to include it in the L2 blocks. But also this is like, yeah, but also there's repercussion for the sequencer if the sequencer fails to include a transaction. Right. Because of the same economic security.
01:06:28.279 - 01:06:38.475, Speaker D: So I would say it's kind of a combo of, I mean hard, I mean hard delayed censorship tolerance and also crypto economic security.
01:06:39.215 - 01:06:42.635, Speaker C: Right. So this is like the sort of standard OP stack.
01:06:43.145 - 01:06:47.713, Speaker D: Yeah, it's not Mega Eth technology. Yeah, it's just, I mean, L2.
01:06:47.809 - 01:06:49.445, Speaker C: Yeah, Cool.
01:06:51.865 - 01:07:51.879, Speaker B: I guess I have kind of a comment or a take just sort of getting to the conversation so far and this is just like much higher level than what we've been discussing. But it seems to me, in being sort of an observer of the Ethereum ecosystem for a while, it seems to me that both of these projects at some level are kind of an innovation reaction to Solana, at some level to kind of what a high throughput SVM looks like. And Keoni, you may say, hey, no, Monad preceded Solana in terms of thinking about this. And if that's the case, like, point taken, but I think that's part of the narrative attraction to it. It's like Ethereum really hasn't done very much innovation with respect to its virtual machine since inception. Like the Ethereum foundation has not been focused there, it's been focused on other things. And so now both of your projects are innovating the EVM and building new things and new possibilities from the evm.
01:07:51.879 - 01:08:21.171, Speaker B: And maybe Keona, you would say, like, hey, I'm redesigning the entire database. So Monad even more so than Mega Eth at this point. And I think that's all good for Ethereum. It also strikes me that. But maybe Keoni, the monad approach is more the monolithic, integrated type of approach, which is just like, let's put all kind of the state and everything in kind of the full stack. Same area. Right.
01:08:21.171 - 01:09:25.375, Speaker B: So we're not kind of moving execution and settlement and data availability across kind of multiple layers here with multiple dependencies. It's just all put it in one spot. So you are like bullish evm and also of the monolithic religion, let's say, or integrated religion, if we want a better framing of that. Whereas Mega ETH is also bullish evm, but of the modular religion. And you like this idea of L2s and keeping the decentralization properties of Ethereum, or maybe the Eth alignment, let's call it. So is that a fair characterization of your two projects and where you come both are innovating on the evm, Both good for the progress of Ethereum, especially to the extent that you're doing this in an open source way and giving us the code in a way that others can access it as well. But Keoni, your approach with Monad is more on the monolithic integrated, whereas Mega Eth is kind of modular.
01:09:25.375 - 01:09:33.315, Speaker B: I'm just trying to pin down religions here because in crypto we like to talk about architectural religions. Fioni, what's your reaction to that?
01:09:34.535 - 01:10:25.525, Speaker C: Yeah, I would say that Monad is a full stack approach where all layers of the stack are being optimized and harmonized. Ethereum itself is a full stack. Like Ethereum is amazing. There's this VM, there's ConsenSys, it serves as a data availability layer for other blockchains. And I think when ultimately trying to make improvements to Ethereum, you would have to think about how all those pieces fit together. And that's kind of the thing that our team is tackling right now. You were talking about Solana, so I think one thing that's interesting is Monad is one of the four innovations in Monad is asynchronous execution.
01:10:25.525 - 01:11:28.773, Speaker C: The easiest way of which to describe it is by remembering the movie Limitless, where the premise of the movie is like the aphorism that you only use 10% of your brain. What if you could take a pill and use 100% of your brain? Think about how smart you'd be and how easy life would be for you. And in the movie there's a guy who takes the pill and of course things are great and then they become terrible because you run too fast. Yeah, exactly. Fly too close to the sun. And that's a helpful analogy because in existing blockchains, where consensus and execution are interleaved, which is how Ethereum works and how almost every blockchain works, the budget for execution is actually quite small because consensus takes up most of that time and consensus is expensive because nodes are on opposite sides of the world. If it's a well formulated blockchain, they're on opposite sides of the world or they're completely globally distributed.
01:11:28.773 - 01:12:41.949, Speaker C: So Consensus takes up most of that block time and so execution is actually only a small fraction of that block time. In particular In Ethereum there's 12 second block times, but the budget for execution is actually only 100 milliseconds, which is 1% of the block time, which is like a crazy dilating effect. So with asynchronous execution, Monad moves execution out of the hot path of consensus and runs it in kind of a separate swim lane, very slightly lagged relative to consensus. And that means that the entire block time can be allocated to execution. So this is a massive actually budget increase for execution and it's just coming from this different software architecture. So you know, we've been, our team has been talking about this concept for quite some time now and recently I've seen other blockchains, including Solana, talk about, you know, kind of embrace like the idea of asynchronous execution and talk about ways to integrate that within these other blockchains as well. So I think it's just, that's only feasible if you're designing an entire system where consensus and execution are both considered.
01:12:41.949 - 01:12:56.723, Speaker C: The way that they fit together is considered and we optimize this full stack. So I think that that's yeah, for sure like Monad is aligned with the idea of trying to optimize the full system to deliver the most performance possible.
01:12:56.869 - 01:13:11.235, Speaker B: You're going to confuse a lot of people when you ship the Monad product for all the narrative shillers out there because not sure whether you're the Ethereum killer or the Solana killer, that we have to have a killer if we're launching an alt layer1 or else we can't get the narrative off the ground.
01:13:12.535 - 01:13:13.599, Speaker C: Centralization killer.
01:13:13.647 - 01:13:30.305, Speaker B: There you go, There you go. Lei, what's your reaction to my framing of this which is you're both EVM mega bulls and your project takes the, the modular approach versus Monad taking kind of the integrated monolithic approach.
01:13:30.885 - 01:14:53.633, Speaker D: Yep, EVM megaballs. We are there to enable new applications and our product design as we saw is just single mindedly optimized for that which is kind of allowing for better performance in terms of throughput, in terms of low latency real timeness. Right. We, I don't remember modular versus monolithic the discussion coming up even once in our kind of scoping, our design discussions back in the days. So I think at the end of the day I totally agree with you that yes we are on the track of a modular approach, but I would say we're not guided by the Discussion the kind of religious debate between monolithic and the modular. It's really just because we build a L2 and yeah, so yeah, that's my conclusion. And I guess in terms of the kind of engineering approach like we are performance, we are kind of, I would say if Monad is like a full stack approach, we are kind of a focused approach on performance and we're willing to kind of make sometimes controversial and interesting design decisions.
01:14:53.633 - 01:14:55.125, Speaker D: But yet here we are.
01:14:55.825 - 01:15:01.765, Speaker B: So if you're not willing to pick a religion, are you willing to pick a killer? Are you an Eth killer? Are you a Solana killer?
01:15:04.265 - 01:15:10.405, Speaker D: Well, centralization killer, definitely not Eth killer. And yeah, I cannot say more.
01:15:11.865 - 01:15:26.825, Speaker A: Guys, one thing that's I think pretty interesting about each of your guys respective blockchains is the magnitude of the community that has risen around each one. Despite I think both of you not having a test net. Is that raise your hand if you have a test net.
01:15:28.325 - 01:15:32.477, Speaker C: No one. We have an internal one, but nothing internal test net.
01:15:32.581 - 01:15:51.795, Speaker A: Okay, so incoming soon. Tm. It's actually pretty amazing that the brands that you guys have elevated for yourselves has attracted builders. So there's already people building on Monad. There's already deals going around of people building on Monad. Same thing with Mega Eth. There's this thing called a mega mafia.
01:15:51.795 - 01:16:29.077, Speaker A: Mega Eth has this hat that every single person wants in Ethereum. I wonder what's it like to do community management business development for an EVM chain? Because there are roughly, I don't know, 30, 40, 50 EVM chains that are out there. Yet somehow these two ecosystems that we have on the podcast today have done a very good job of actually building a community and started building a community of builders as well. I'm wondering what's your guys trick? How did you guys do this? What was the strategy for getting this done? Keoni, do you wanna start? I think we both have hats that you guys are about to show us.
01:16:29.261 - 01:16:31.653, Speaker B: Yeah, show us your stuff. It's the merch.
01:16:31.749 - 01:16:32.613, Speaker C: Oh, okay. So.
01:16:32.669 - 01:16:36.855, Speaker A: Oh, the Milan deck. I want a Milan deck back.
01:16:37.995 - 01:16:39.615, Speaker C: Yeah, he's awesome.
01:16:40.155 - 01:16:46.255, Speaker B: He's sitting on Keon's shoulder right now. It's a, a purple stuffed animal for you podcast listeners that can't see this.
01:16:47.075 - 01:17:40.397, Speaker C: Yeah, I, I'm actually in a, in a hat factory here. I'm in a hat storage room. But I wanted to show you this. Molandac. Yeah, the community, the Monarch community is honestly incredible. It's just the result of amazing individuals who have, who are really passionate about crypto, really Passionate about defi follow along with the lore and the memes and the fun of crypto Twitter every day, Many of whom were not actually pretty much all of whom were not famous on crypto Twitter or anything like that, but are just people who have been following along and found a home in the Monad community and found opportunities to contribute to take on leadership opportunities in terms of organizing initiatives, contribute their art, contribute. I don't know.
01:17:40.397 - 01:18:09.245, Speaker C: We have a lot of fun initiatives going on. Like the Monad Run Club which initially was seeking to run 10,000km collectively and hit that pretty quickly. So now they're doing I think 80,000, which is like the circumference of the earth. I probably got those numbers wrong, sorry. Or mon lingo, which is an effort to learn a new language. So people are doing duolingo together. There's just a lot of incredible energy and it's all just driven by individuals.
01:18:09.245 - 01:18:29.695, Speaker C: So I think it's similar to. It's really consistent with the ethos of crypto where individuals matter and everyone can make a difference. And also it's environment of opportunity both for application builders as well as for folks that have just been. Are really switched on and really following along.
01:18:30.435 - 01:18:47.575, Speaker A: How do you keep them engaged when only so many of them are actually like playing around with the. It's an internal monad testnet. So like how, what, what are they doing in there? Like there's they are going on runs together, which is kind of sick. But what about just like, I don't know, more like crypto native stuff?
01:18:48.685 - 01:19:52.865, Speaker C: Yeah, I mean it's evolved over time. Initially it was really just people hanging out, commiserating during the bear market. I think that a lot of things are path dependent, but it was pretty rough back there and a lot of our really OG members were just people who were scrolling the timeline and decided to take shelter, if you will, from the negativity and. And over time that's evolved into more specific initiatives. But there are folks in our community who are getting job opportunities in the Monad ecosystem. For builders, it's amazing because they can meet really talented community managers or marketers or people who just have really good instincts for putting some wind in the sails of the project from a community or marketing perspective. So overall I think it's just a very nascent but growing and environment with a lot of opportunity.
01:19:53.965 - 01:20:14.945, Speaker A: So inside, if you are a consumer of Monad lore, you'll notice that there's not just a Moland deck, there's a few other animals as well. There's a Molan fish, another of other creatures that I don't know how they work. Where does this lore about the monad animals come from?
01:20:17.085 - 01:20:49.299, Speaker C: Yeah, that's actually a great question. Great anecdote. When we first started opening up the community, Bill Munday, our community lead and I spent a lot of time brainstorming, like trying to come up with the right mascot. And so I have this notion page now of, of prospective mascots and all of the ideas are really bad. Like every next one is worse than the previous one. And I think what it really. Because we were thinking about it too hard, we were like, okay, monad is really fast.
01:20:49.299 - 01:21:34.697, Speaker C: So what's the thing that's fast? Okay, like a cheetah or a car or something. Anyway, the point is we were absolutely mid curving it and at the end of the day the, the creatures that have ended up becoming unofficial monad mascots are all just community driven. A person just uploads an image and then that one through community curation floats to the top just through people reusing it. There's no formal voting process or anything like that. It's all just which things kind of stick in people's heads and end up recurring. And now there's a super deep lore with Milandak and Mockadel and Salman Ad and Oyaki. Yeah, I'll send you the photo later.
01:21:34.697 - 01:21:48.525, Speaker C: But he's really cute, really funny, really hopeless, I would say. And he has a whole lore around him. Yeah, he doesn't have a house. Like all the other animals have houses.
01:21:49.625 - 01:21:51.385, Speaker A: But Salmanad doesn't have a house.
01:21:51.425 - 01:22:09.205, Speaker C: Salmanad doesn't have a house. Yeah, I guess because he's migratory, but actually just because he always kind of gets the short end of the stick. And in monad lore, sorry, buddy. There's Mooch, who's a fly. He's French. He was created by the French Nads. Shout out French.
01:22:09.205 - 01:22:29.203, Speaker C: There's Spiderman, who's a spider created by the Turk Nads. He's creepy but funny. Anyway. Yeah, there's just so much like depth to. And it's just really fun. Like at the end of the day, if you're not, if you're in crypto and you're not having fun, then something is wrong.
01:22:29.339 - 01:22:39.455, Speaker A: Something's wrong. Yeah. And of course the monad community is called the Nads as well. Lei, tell us about the Mega Eth apparel brand. How did you guys start this?
01:22:40.195 - 01:23:21.917, Speaker D: Yeah, so yeah, we actually see a kind of an astonishing growth of our community because we literally just came out of stealth. I mean, less than Half a year ago. So our thrust, our brand is called Mega Mafia. It's our kind of flagship builders program, incubation program. So what we look for is those zero to one applications that are only possible on Mega Eth, a real time blockchain. Right. And so I mean what we're looking for are the people are the kind of the founders who I think actually our, our cohort, I think they share kind of a common personality.
01:23:21.917 - 01:24:02.093, Speaker D: So they were drawn into crypto by. They probably read something on the Internet saying that, kind of promising them that hey, you can build this, you can build that decentralized and trustless application on crypto. They came to crypto, realized that hey, it's a lie. There's not enough resource, there's not enough infra to build what I wanted to do. However. So we are kind of offering them, we're kind of telling them that hey, there's a new kind of wave of infra, in particular Mega Eth that you should try to kind of redo what actually initially brought you into crypto. The initial dream, the initial chase again right now.
01:24:02.093 - 01:24:50.289, Speaker D: So that's how we got to most of our builders. So we have, I mentioned on chain Minecraft, we have on chain VPN which is infinitely scalable and we have of course the usual defi applications, Dax Pro Dax, but based on other books but not on amms. We have real time prediction markets, we have real time game shows, et cetera. So I think I'm basically wearing the Mega Mafia T shirt. So yeah, this is kind of our centerpiece of our community. And now they were talking about rabbits, the maggot bunny. So if monad is kind of mid curving it, then we're really kind of left curving it because we pick Bunny.
01:24:50.289 - 01:25:17.863, Speaker D: Really? Just because I'm holding a jellycat. It's not a Mega eth jellycat, it's just a generic jellycat. I just like to hold it. So yeah, so we picked Bunny. Really just because I love bunny. So our, I was having my first chat with our co founder and cbo Shuyao in Denver. So she said hey, we need to pick some animal, we need to pick a mascot.
01:25:17.863 - 01:25:56.559, Speaker D: And I said hey, I go to feed the bunnies on MIT campus almost every other night and I really love bunnies. And she basically said that's it and that's why we picked bunnies. I think it worked. Well, it's not by community choice, but I think our community love bunnies. But I think our rule, our single rule for discord management is that if you eat bunnies, you're banned forever. But other than that, I think it's been going well. So we are seeing more and more people who are kind of really interested in the tech.
01:25:56.559 - 01:26:53.667, Speaker D: So probably some listener may already saw our TikTok, I mean our short format videos basically explaining kind of, I would say, common misconceptions and interesting and lesser known tidbits in the crypto industry and in crypto research. Just break it down into kind of bite sized pieces for our audience. I think that's been going well. Yeah, we do serious performance engineering. So we are also publishing a series of long format tweets and also upcoming blog posts with kind of rigorous and more tactical content for those more techie people. Yeah, but I would say we just want applications. So that's kind of the centerpiece of our community building effort.
01:26:53.667 - 01:26:59.341, Speaker D: We want people to rethink what is possible now on crypto with a real time blockchain.
01:26:59.453 - 01:27:08.185, Speaker B: LEI is mega. An acronym like in the Mega eth, I heard a room that stands for Make Ethereum Great Again. Is that right?
01:27:08.645 - 01:27:19.105, Speaker D: It does stand for Make Ethereum Great Again, but interestingly we realize it. I mean, almost a year, I think into the inception of the company.
01:27:19.485 - 01:27:23.599, Speaker B: Okay. Oh, you did. You went with Mega Eth first and then you realized.
01:27:23.797 - 01:27:29.259, Speaker D: Yeah, yeah, exactly. Actually, one of our genius investors. It's. Yeah, it's just a coin.
01:27:29.347 - 01:27:35.135, Speaker B: You could always do the red caps if you want to go in that direction. Although that meme may already be taken by someone else.
01:27:35.555 - 01:27:44.695, Speaker D: Yeah, we do have rad caps. So it's right on the kind of. I'm handing it on my door so that I can wear it whenever I go out home. Yeah.
01:27:45.715 - 01:27:49.581, Speaker A: And how many mega eth hats are there? Because I was told there were 50.
01:27:49.710 - 01:27:59.083, Speaker D: Yes, there are 50. But I shamelessly took three. So there are three at my door and also I think two red hats.
01:27:59.219 - 01:28:02.415, Speaker A: So how many, how many unallocated hats are there?
01:28:03.155 - 01:28:10.907, Speaker D: I think these three. So one for me and the other two are the only unallocated hats. That's my counting. But yeah, ask Shuyao.
01:28:10.971 - 01:28:12.495, Speaker B: High ftv, high flow.
01:28:12.875 - 01:28:14.335, Speaker A: May I have one?
01:28:18.285 - 01:28:22.693, Speaker D: We'll talk after. Yeah, ask our head start Shuya.
01:28:22.869 - 01:28:25.585, Speaker A: Okay, I already did. She said no.
01:28:26.045 - 01:28:28.465, Speaker D: Oh, then, then, then. Unfortunately.
01:28:29.125 - 01:28:29.765, Speaker A: Sad.
01:28:29.885 - 01:28:33.745, Speaker D: Okay, one last to tap into the reserve.
01:28:35.085 - 01:29:23.087, Speaker A: Okay, one last question for I have for you guys. Recently on a podcast we did with Justin Drake and Anatoly from Solana, Anatoly was talking some shit about the evm. He was saying that it's just like building through quicksand and while it's possible to like rebuild the EVM architecture to make it easier for builders, it's still really hard. And that's one of his like kind of bear scenarios for Ethereum. I'm wondering if you guys can give your takes. Both of you guys have chosen the evm. Why did you choose the evm? What are your guys takes about the future role that the EVM has in the industry? I remember in 2021 there was a chant going around in the Ethereum crowd that the EVM is at the center of all things because even Ethereum killers were using the evm like Phantom, Avalanche, et cetera.
01:29:23.087 - 01:29:36.595, Speaker A: Five other chains that I've forgotten about because they've disappeared into history. Just whatever your overall takes about building on the evm, why commit to the evm? What do you guys think about it? Where does it go from here? Keon, you want to start?
01:29:38.025 - 01:30:25.941, Speaker C: Yeah. I think the EVM is actually a perfectly fine bytecode standard. There are some minor things that are a little bit quirky, like the size of the individual storage slots, 32 bytes is pretty big. But I think fundamentally it's a perfectly reasonable, very expressive standard. And we have high level languages like Solidity or Vyper or Huff that are really powerful. So I think a lot of the hate is really misdirected or just uninformed or just there for hot takes. And it's a great standard that can get better over time through continued improvements and support for new pre compiles or opcodes.
01:30:25.941 - 01:30:42.875, Speaker C: It's an evolving standard, but there's actually nothing wrong with it at all. And that combined with the network effects of so many application developers that have already built apps for evm, so many libraries, so much applied cryptography research that it's just a no brainer really.
01:30:43.495 - 01:30:44.755, Speaker A: Lei your thoughts?
01:30:45.055 - 01:31:25.335, Speaker D: Yeah, I pretty much agree. There's nothing that is fundamentally wrong with evm. So interestingly, we had a Vitalik at one of our events in ecc, so it was kind of oriented for students. So one of the students asked Vitalik, hey, what's your, I mean name? Kind of, I think three regrets of the technical choices of Ethereum. I think Vitalik didn't really mention evm. I mean I think he did mention that he would not start the slippery slope of pre compiles, but nothing that is fundamentally wrong with evm. And we definitely agree with him because.
01:31:25.335 - 01:32:08.961, Speaker D: And also I kind of realized that as an engineer and as a researcher, I think there's always the urge to kind of burn down everything and that start from scratch, clean slate. But there's always, as Kuny mentioned, right? There's always all those ecosystem tools, libraries, research builders, most importantly people, right? And they are already accustomed to evm. There's a reason that intel doesn't really come up with a new ISA instructions standard every five years. There are reasons because there is kind of accumulation of capital of know how into a particular tech ecosystem. So nothing that is fundamentally wrong with EVM and 100% EVM will keep flourishing.
01:32:08.993 - 01:32:15.405, Speaker B: Okay, but now I'm dying to know what were Vitalik's two other regrets. You said precompiles is one. What are the other two? I must know.
01:32:15.905 - 01:32:18.761, Speaker D: I honestly forgot. Oh no, I think the other two.
01:32:18.913 - 01:32:22.745, Speaker A: We'll have to ask Preferable. They're not that bad.
01:32:22.785 - 01:32:23.565, Speaker D: I think someone.
01:32:25.425 - 01:32:40.885, Speaker A: All right, guys, this has been great. Keoni, one last just like logistics question. What's the future of everything that Monad has built and their open source nature? You got the Monad EVM. The MonadDB. Will these things eventually become open source?
01:32:42.465 - 01:32:43.605, Speaker C: That's our plan.
01:32:44.505 - 01:32:48.925, Speaker A: Any sort of timeline or is that just something you guys will think about later?
01:32:49.675 - 01:33:07.403, Speaker C: Well, we'll think about it. Certainly as time goes on and certainly before mainnet, the code will be completely open for people to read and verify. It's really important from an audit and safety perspective. So yeah, no worries there.
01:33:07.459 - 01:33:29.543, Speaker B: Okay, wait, wait. I can't believe we've gotten this far in the episode and we haven't asked the question when mainnet. Because usually we don't do these conversations while there's just test nets. We usually wait to mainnet. We broke the bankless rule because this is such an important conversation. Because you guys are like building this parallelized EVM thing. Or I should say high performance EVM thing.
01:33:29.543 - 01:33:35.675, Speaker B: So now let's ask the question. So when mainnet? Gioni, when is Monad coming to mainnet?
01:33:37.255 - 01:33:49.765, Speaker C: Our team is working really hard on it. Can't give an exact date. My cheeky answer will be when Moondak comes out of this hat closet and doesn't see his shadow.
01:33:50.545 - 01:33:57.885, Speaker B: Okay, does that happen in February? Is that what we celebrate? All right, Lei, how about you? When may net for Meg Eth?
01:33:58.305 - 01:34:03.085, Speaker D: Yeah, we have been pretty open. So end of the year, early next year.
01:34:03.745 - 01:34:04.225, Speaker A: Cool.
01:34:04.305 - 01:34:06.073, Speaker B: End of the year, early next year.
01:34:06.249 - 01:34:14.925, Speaker A: Some new blockchains to play with. Coming your way. Bankless nation. Keoni. Lei, this has been just fantastic. I've learned quite a lot on this episode. So thank you guys for spending the time with us.
01:34:14.925 - 01:34:17.333, Speaker A: I hope the bankless Nation has learned a lot because I certainly have.
01:34:17.389 - 01:34:18.685, Speaker D: It's been such a pleasure.
01:34:18.845 - 01:34:20.585, Speaker C: Yeah. Thank you for having me.
01:34:21.205 - 01:34:21.773, Speaker D: Thank you so much.
01:34:21.789 - 01:34:33.757, Speaker A: Bankless Nation, you guys know the deal. Crypto is risky. Main new main nets will also be risky when they arrive, but nonetheless, we are headed west. This is the frontier. It's not for everyone. But we are glad you are with us on the bankless journey.
01:34:33.861 - 01:34:34.285, Speaker B: Thanks a lot.
