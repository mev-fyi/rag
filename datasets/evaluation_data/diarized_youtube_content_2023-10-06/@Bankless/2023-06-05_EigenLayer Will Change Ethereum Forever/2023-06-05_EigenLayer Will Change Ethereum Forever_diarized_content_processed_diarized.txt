00:00:00.330 - 00:00:25.800, Speaker A: If you can remove trust frictions, then it massively enhances our ability to cooperate with each other. Just like the Internet is the information superhighway. Crypto could be our coordination superhighway. And once I got this, it fit in with my own life philosophy. I'm like, okay, now this is something that even if it doesn't go anywhere in three years, five years, you know, this will go somewhere in 30 years because it's an upgrade. And an upgrade to humans is what I was looking for.
00:00:29.690 - 00:00:56.478, Speaker B: Welcome to Bankless, where we explore the frontier of Internet money and Internet finance. This is how to get started, how to get better, how to front run the opportunity. This is Ryan Sean Adams. I'm here with David Hoffman, and we're here to help you become more Bankless. I think we've got another opportunity to front run the opportunity today, this time with restaking. This is a phenomenon. I think David thinks restaking will change everything.
00:00:56.478 - 00:00:57.690, Speaker B: And so we have the father.
00:00:57.770 - 00:00:58.654, Speaker C: There's no going back.
00:00:58.692 - 00:01:15.230, Speaker B: There's no going back. Now we have the father of restaking, Sriram Kanan. He's the founder of Eigen layer. The concept behind restaking is pretty simple. You stake your ETH, and then you stake it again. And it sounds crazy deceptively simple. This is the first episode where we go down the restaking rabbit hole.
00:01:15.230 - 00:01:43.002, Speaker B: A few takeaways for you today. We talk about what restaking is going to do to Ethereum. Have we just opened Pandora's box? Number two, we talk about all the cool things that can be built on top of restaking. Number three, we talk about Vitalik's concerns about restaking. What happens when ETH stakers become polyamorous. Number four, we talk about Eigen layer. That is the protocol that Sriram is building, how it maximizes the surface area for non zero sum games.
00:01:43.002 - 00:01:54.010, Speaker B: And number five, we talk about what happens if restaking is maximally successful. How does crypto change? How does the world change? David, why is this episode significant?
00:01:54.090 - 00:02:33.802, Speaker C: It's not. Often when a new innovation comes into the fold of the crypto economic world, that goes as deep in the tech stack as Eigen Layer does, as restaking does. And this is why the discovery of restaking, many people, myself included, has compared to the discovery of Mev. Once upon a time, we discovered that you could extract some value by arbing trades on uniswap. And then the snowball rolled. And now we have a multi billion dollar industry of Mev and different parties. And now there's being like Ethereum EIPS in order to account for mev.
00:02:33.802 - 00:03:22.182, Speaker C: People think that Eigen Layer and restaking are similarly as big as that discovery. Once you learn that you can restake your Ether to one thing, why not restake it to more things? And this is where I'll pull in my Skyrim mods metaphor. I don't know if you've ever modded a game, Ryan, but you can download the base game, the base skyrim game, and then you can go to these hobbyist enthusiasts lists of Skyrim mods, and you can start installing some mods to make your game better. But then you can continue to do that, and you can start to get really weird with the mods that you install. When you're just talking about weird mods that turn guards into chickens and gives you foam swords, you're on the weird end of the spectrum of mods. And that's fun inside of Skyrim. It's fun inside of a game where the consequences are your computer crashes.
00:03:22.182 - 00:03:30.494, Speaker C: It's different when we are talking about global economic networks that transact trillions dollars of value. So there's a lot at stake here.
00:03:30.532 - 00:03:31.966, Speaker D: Just like how there was a lot.
00:03:31.988 - 00:03:52.114, Speaker C: At stake with Mev, there is a lot at stake with restaking, and similarly how Mev also changed the nature of ETH the asset. I think restaking is also going to deeply change the nature of what Ether is as an asset. This is not, sadly, a topic that we were able to get into with Sriram. So, Ryan, you're not going to have to save that for the deep.
00:03:52.162 - 00:03:52.694, Speaker B: Oh, my God.
00:03:52.732 - 00:04:09.174, Speaker C: Yeah, I really want I've got some thoughts about how Ether the asset is impacted by restaking. And I know that this is a topic that I know Justin Drake and Dankrad and many others on the Ethereum research team are also thinking deeply about. And so I want to share all the thoughts in the deep.
00:04:09.222 - 00:04:53.238, Speaker B: Yeah, I've got an inkling this could be almost as big as ultrasound money as kind of the burn in terms of economic effects. I don't think you can actually understand Ether the asset or Ethereum the network without understanding restaking. I would go that far, but let's continue that discussion in the Debrief. The Debrief, of course, is our episode that David and I record after the episode with our raw, unfiltered thoughts. It is available right now on the Bankless Premium RSS feed, which is available to bankless citizens. You can upgrade through the link in the show notes, become a citizen, and get access to the Bankless Premium feed where we'll talk about that. All right, guys, we're going to get right to the episode with Sriram, but before we do, we want to thank the sponsors that made this episode possible, including our number one recommended crypto exchange.
00:04:53.238 - 00:04:57.994, Speaker B: This is an exchange you absolutely need to have an account on. It's called kraken. Go check them out.
00:04:58.032 - 00:05:33.206, Speaker D: Kraken Pro has easily become the best crypto trading platform in the industry. The place I use to check the charts and the crypto prices even when I'm not looking to place a trade. On Kraken Pro, you'll have access to advanced charting tools, real time market data, and lightning fast trade execution, all inside their spiffy new modular interface. Kraken's new customizable modular layout lets you tailor your trading experience to suit your needs, pick and choose your favorite modules and place them anywhere you want in your screen. With Kraken Pro, you have that power whether you are a seasoned pro or just starting out. Join thousands of traders who trust Kraken Pro for their crypto trading needs. Visit pro kraken.com
00:05:33.206 - 00:06:16.174, Speaker D: to get started. Today, Mantle is a brand new high performance ethereum layer two network built differently from the other layer twos you may be familiar with. Mantle is a modular layer two built on the Op stack, but uses Eigen Layer's data availability solution instead of the expensive ethereum layer one. Not only does this reduce Mantle's gas fees by 80% compared to other layer twos, but it also reduces gas fee volatility. Mantle has a decentralized sequencer set, eliminating the risk of downtime and censorship on the network. And because Mantle implements multiparty computation nodes, layer one settlement execution is shortened from seven days to as low as just one or two. Mantle is the first layer two built by a dow and is backed by one of the biggest dow treasuries in the world, bitdao.
00:06:16.174 - 00:07:04.894, Speaker D: Mantle already has subcommunities from around web3 onboarded to help the growth of Mantle, like Game Seven for web3 gaming, or Dao for the world of DSI and Bybit for TVL Liquidity and Onramps. Check out Mantle at Mantle XYZ and follow them on Twitter at zero Xmantle. Immutable is at the forefront of web3 gaming on a mission to bring digital ownership to every player. Offering the world's best games and game development platform, immutable lets game builders and players focus on great gaming experiences. So build your next web3 game on easy mode with Immutable's leading full stack web3 gaming platform. Its built in UX features like the Immutable Passport are designed for games to scale to the next billion players coming to web3. With Immutable, players can sign up with an email, pay with a credit card, and experience a frictionless purchase flow inside of games.
00:07:04.894 - 00:07:21.154, Speaker D: So discover your next favorite game and explore a network of 150 games building on Immutable, including such titles as Gotham Chain, Guilds of Guardians, Alluvium Embersord and Metal Core. So join web3's largest ecosystem of games and players build, play and connect@immutable.com.
00:07:21.212 - 00:07:46.122, Speaker B: Bankless Nation excited to introduce you to our next guest. Sriram Kanan is the founder and CEO of Eigen Layer, which is a new protocol that lets you stake your ETH across multiple networks at once. People call this restaking. That may have been the buzword you've heard before. Sriram is also the director of Blockchain Labs at the University of Washington, where he and others research crypto economics. Sriram. Welcome to Bankless.
00:07:46.122 - 00:07:47.086, Speaker B: How are you doing?
00:07:47.268 - 00:07:51.154, Speaker A: Very good. Thank you so much, ryan and David looking forward to talking to you both.
00:07:51.272 - 00:07:58.920, Speaker B: OK, well, we got to start here. I'm just going to hit you with a big question. Everyone's wondering, Sriram, did you just open up Pandora's box with this restaking thing?
00:08:00.410 - 00:08:32.042, Speaker A: It feels like that. And I think you all mentioned somewhere earlier that this is kind of like the mev thing. You discover one art bot doing something on the side and then suddenly you just realize all the consequences going downstream of that. I think this is something like that. The idea that the security can be supplied flexibly that leads to so many consequences that are some predictable, some are highly unpredictable.
00:08:32.106 - 00:08:32.382, Speaker B: Yeah.
00:08:32.436 - 00:09:18.174, Speaker C: The metaphor that Sriram is talking about is in an article I wrote on the Bankless newsletter trying to explain resaking to people and why so many people have been compelled to think and talk about this. To elaborate on the metaphor that Sriram brought up. Like, once upon a time we discovered this arbbot on ethereum doing this weird thing with Uniswap. And then that turns out was like the tip of the iceberg of what we now call me V, which is a multi billion dollar vertical inside of the crypto space that has extremely massive implications. And so we kind of feel the patterns once again emerging with restaking. It's like oh, restaking. And then the ball goes and goes and goes and goes and goes.
00:09:18.174 - 00:09:32.740, Speaker C: And so this might be the very beginning of a very long part of a new frontier in the world of crypto. So as a content producer, Sriram, thank you for opening that box because it gives us a lot of things to discuss and talk about.
00:09:33.430 - 00:09:42.102, Speaker A: I heard some people from EF say the same thing as a know, open up a whole new area so that we can all geek out about it.
00:09:42.156 - 00:10:27.000, Speaker B: Well, Sriram, I think we want to get to restaking and actually define that for folks, because I do think this will be maybe first in a series of content that David and I put out on Bankless about restaking. I think it's going to be that big, as big as mev was. But first I think I'd actually love to hear more about you, Sriram. So it's actually from my perspective, you seem to sort of burst onto the scene in crypto at least. But I know you've been actually teaching this at the University of Washington for a while. Could you tell us about your crypto journey? So how did you get into crypto? How did you start researching this restaking thing? What's kind of your day job? What's your interest in the space? Give us some back. Like who are you, Sriram? Tell us.
00:10:27.610 - 00:11:15.730, Speaker A: Thank you, Ryan. My interest in peer to peer systems goes way back to my master's and PhD between 2006 and eleven, where I worked on peer to peer wireless systems. This was an era where we were thinking about how do you build wireless in a place where there is not enough wireless infrastructure, no base stations, no access points. Can you kind of have nodes just talk to each other form like ad hoc connections and multi hop. Just send information from one to the other, to the other till you get to your destination. So that was my PhD thesis at that time. And our hope at that time was basically that we don't really need a lot of infrastructure in places where there may not be enough wireless infra.
00:11:15.730 - 00:12:23.142, Speaker A: However, it turned out that even in places, developing countries and other places, there was widespread infrastructure deployments, and the only real people interested in what we were doing was DARPA and the US. Defense and so on. So I moved out from working on peer to peer wireless to work on computational genomics. I was a postdoctoral scientist at Berkeley Stanford, started here at the lab at the University of Washington, all working on computational genomics, trying to understand how information is encoded in the DNA. And around 2018, January, my PhD advisor called me, and he's like, hey, Shiram, there is this peer to peer systems that we studied for many, many years. There's this thing called bitcoin. And the two problems we used to always think about from a theoretical viewpoint is what is the maximal throughput of these systems, peer to peer systems, and what is the minimal latency, right? Whenever you see a wireless advertisement, they're like, oh, one Gbps and like, 20 millisecond latency.
00:12:23.142 - 00:12:56.822, Speaker A: And this is the kind of thing that you have to obsess about if you want to design those systems. And he's like, oh, this system is the worst in throughput and the worst in latency, but it has some other amazing properties. So do you want to come research this? And I'm like, oh, I have memories of doing this before, and that didn't end up well, so I don't want to do this. I came to genomics because that's something that I think is really useful to all of us. But it took me, like, three to six months of thinking about the underpinnings of what this could be.
00:12:56.876 - 00:12:57.142, Speaker B: Why?
00:12:57.196 - 00:13:57.842, Speaker A: Actually, I wanted to study peer to peer all of these, but really like, the tipping point for me, know, realizing how it fit with one of my core principles. And this actually comes from Yule Noah Harari from his book Sapiens, where he mentions that the evolutionary advantage of humans is that we cooperate flexibly in large numbers, right? It's not that we're intelligent. It's not that we're anything else. It's the fact that we cooperate flexibly in large numbers. So if this is the evolutionary advantage of humans, anything that boosts this ability to cooperate flexibly in large numbers is a kind of like a civilizational upgrade. And that's the context through which I started seeing crypto, is if you can remove trust frictions, then it massively enhances our ability to cooperate with each other. And just like the Internet is the information superhighway, crypto could be our coordination superhighway.
00:13:57.842 - 00:14:28.626, Speaker A: And once I got this, it fit in with my own life philosophy. I'm like, okay, now this is something that even if it doesn't go anywhere in three years, five years, this will go somewhere in 30 years, because it's an upgrade and an upgrade to humans is what I was looking for. So I got in. So that's the story. But I've been mainly doing research at the University of Washington. We came up with new consensus protocols, scalability layers, data availability, game theory for some of these things. This is the kind of thing like core infra is what professors are usually good at.
00:14:28.626 - 00:15:20.450, Speaker A: I used to work on everything on the infrastructure and protocols outside of new cryptography, so that's the research at the University of Washington and how it led to Eigen Layer is when I was doing this. The first instinct I had when we came up with new consensus protocols is like, oh, let's just take this and go show the bitcoin guys how cool it is. And then they'll just upgrade themselves. And I realized my own naivet in thinking that. And then I started interacting with the ethereum guys and I'm like, wow, this is much more, much more welcoming, much more open to new ideas. But I still felt that this is a massive protocol and nobody is going to upgrade or change their protocol randomly in different directions. It takes several years of commitment to go in a certain direction.
00:15:20.450 - 00:16:22.802, Speaker A: And the thing that I was left wondering with was this phenomenon of at that time, what we were calling prof coins, professors had to come up with as they came up with new consensus protocols, the only way that that could come into the industry was that you had to go build a whole new L One. And the only way to build a whole new L one is to have a token of value securing it. And this, I thought, was a complete misfit to what professors are used to doing because they come up with new cool technologies, but not to build new ecosystems or create like a decentralization movement. And that was kind of like at the base of my thinking is how do we repurpose existing networks to go to other things? So that this latent energy, which I was perceiving a lot, is a lot of really good ideas exist in the academic sphere, even as implementations, but never make it into reality. And so that is kind of the beginning of the journey that led to Eigen Layer.
00:16:22.946 - 00:16:30.470, Speaker C: So was there like an AHA moment? Was there a Eureka moment for you? When did Eigen Layer as a concept pop into your brain?
00:16:30.550 - 00:16:31.180, Speaker B: Yeah.
00:16:31.550 - 00:17:20.460, Speaker A: So for many years I've been having this question which is how do we repurpose existing trust networks? And we had many different variants of ideas. How do you use proof of work trust to supply it to somebody else, some other chains? We wrote a bunch of papers on that. But what happened was I had as a professor, one of the main milestones is to get tenure. So I got my tenure here at the University of Washington, Seattle. And that meant like, I can take a year or two leave and go explore whatever other things I want. So I took a leave. I said, okay, I'm going to kind of figure this thing out, which is how do you supply trust? Flexibly and we called our project eigen layer even before we had a solution to the problem.
00:17:20.460 - 00:18:06.630, Speaker A: The eigen layer is basically eigen is your own layer, so anybody should be able to come and build their own ideas and technologies into this common system. So that was the vision. We didn't have a solution to how to do it initially. We had a different version of the ideas and so on. Took like over six months to evolve into its form. But the main kind of epiphany was basically that we were looking closely at merge mining the idea that you can supply the bitcoin proof of work trust to anybody else by saying that the same hashes that you're doing in the bitcoin proof of work or in ethereum proof of work before the merge can be supplied to secure another network. But there were major problems with this thing, which is what made it not take off.
00:18:06.630 - 00:18:16.460, Speaker A: And the major problem was if you're mining bitcoin and mine another altcoin using the same proof of work energy.
00:18:18.670 - 00:18:19.082, Speaker B: Even.
00:18:19.136 - 00:18:55.478, Speaker A: If 100% of the miners mine this other coin, if they go and attack this other altcoin, they have no penalty. At least if they attack bitcoin, they're going to lose the value of bitcoin, which means they lose the value of the equipment that they have invested heavily in. But if they go attack this altcoin, nothing happens to anybody. Most of their value is in the bitcoin. So merge mining had this zero crypto economics associated with it. So it is easy come, easy go, right? Like you're not putting anything, no skin in the game. So why would you think it was.
00:18:55.484 - 00:18:57.010, Speaker B: All carrot, no stick.
00:18:57.170 - 00:19:35.874, Speaker A: Exactly. And bitcoin is kind of like that too. But the stick in bitcoin is that, oh, you invested a lot in your mining equipment and then the mining equipment's value goes to zero if you go try to attack bitcoin. But that's not the case when you attack an altcoin, which is like even more, one more level laden on top of it. So you get basically no incentive transfer. The fact that one of the most important reasons we went to proof of stake is not even the energy and the issuance and all these things, it is the ability to do negative incentives. Right.
00:19:35.874 - 00:20:29.158, Speaker A: And that is such a powerful thing. That one of my underlying when you think about how to cooperate. Flexibly in large numbers, one of the underlying important things is that there should be like a working system of karma, like attribution of who did what and they should get the thing that they did. You do good, you should get good back. If you do bad, you should get bad back. You cannot socialize your own attacks, whereas privatize your own gains and this is the kind of system that proof of work was because if you go and do an attack then everybody's, all bitcoin holders are affected, right? But your own bribes you would gain or like whatever value you gain, you gain separately. Whereas proof of stake had this very fine grained karma which is that if you go do an attack you will lose your ETH, not anybody else.
00:20:29.158 - 00:20:47.050, Speaker A: So I think having this fine grained system of positive or negative incentives is super powerful in actually creating these kinds of systems and okay, can we do instead of merge mining, merge staking? And that's what later became restaking.
00:20:48.510 - 00:21:47.518, Speaker C: It's interesting to see that the argument for proof of stake for eigen layer for restaking is similar to it seems like just a logical continuation of why proof of stake in the first place. A lot of the arguments that you're giving I remember Vitalik saying about just the economic security model between proof of work and proof of stake. Like what's more secure if you lie to the system that somebody comes, takes all your money versus you lie to the system, you just stop receiving new money like the one where you just have all of your money taken away from you is going to be much more secure because that incentive. And also just like the idea of flexible security just makes sense in a Turing complete proof of stake platform. But I'm wondering if we can just try and do the extreme explain like I'm five maximally simple left side of the bell curve explanation of restaking. So people understand ethereum staking. There's no way they can listen to bankless and not understand what ethereum staking is.
00:21:47.518 - 00:21:51.520, Speaker C: So starting from there, what is restaking in its most simplest form?
00:21:52.470 - 00:22:54.622, Speaker A: Yeah, restaking is the idea that the same stake that is used for securing the ethereum proof of stake network can now be used to secure many other networks. That's the simplest version. So in staking what you do is you lock a bunch of stake and then you're saying I'm going to validate the ethereum blocks correctly as per the rules and the covenants led down in the protocol. If I don't do it I'm going to lose my ETH. That's the covenant that you're opting into when you're staking in ethereum if you restake you use the same stake in Eigenve, you take the same stake. Now you not only add a covenant that you're going to validate ethereum blocks correctly but you add covenants that I'm validating David's new oracle correctly or Ryan's new chain correctly. And if you don't obey these covenants you may lose your ETH just like you lose your ETH in the ethereum based layer.
00:22:54.622 - 00:24:32.242, Speaker A: And one way of visualizing this is you all talk a lot about blockchains as nation states kind of analogy, right? And if you think of ethereum as a nation state you have the stakers or the validators who are the army for this kind of nation, this army secures against certain kinds of attacks, which is you cannot do a double spend, you cannot do an invalid block. Like, these are the basic things that you get when you are basically validating the Ethereum blockchain. But to have a functioning system, you not only need this ability to secure this kind of a land border, which is block validity and double signing and stuff, you also need all kinds of other things. You need to make sure that your bridges work correctly, you need to make sure that your data storage protocol works correctly, you need to make sure that some other features, all of them work correctly. Can we repurpose the same validator set or the army to go secure all these other things? And that's like protecting the naval border and protecting the air surface, right? So that's basically the expansion that we're doing is instead of restaking, you can also think of this as programmable staking. When you're staking, you're basically opting into the specific covenants laid out in the Ethereum protocol. In programmable staking, you're opting into any sets of positive and negative incentives other people write and out of your free will.
00:24:32.242 - 00:24:38.102, Speaker A: You can opt into that and say that, hey, I'm going to go secure these five other things or ten other things.
00:24:38.236 - 00:25:30.146, Speaker C: So with Eigen layer it simply says, hey, you've taken your Ether and you have opted into slashing conditions on the beacon chain. Would you like to opt in to additional slashing conditions for other chains? Would you like to take additional risk to do other things for other chains? And the reason why somebody might say yes to this question is because the things that if it's an Oracle network or another like layer two or Data Availability network is that, well, you get paid for that risk. You get paid for the opportunity to validate other chains. And so, Trivam, that brings me to my next question. Where does Eigen layer actually sit in the tech stack? Is it a smart contract in the application layer? Is it some software that you run as a sidecar along with your Ethereum node where actually is Eigen layer?
00:25:30.338 - 00:26:12.562, Speaker A: Yes. The way I think about Eigen layer is just explaining functionally. Eigen layer is a series of smart contracts which interacts natively with staking. So that's the important thing. So somehow you have to be able to stake in Ethereum and then specify to the Eigen layer contracts that you have given this power to it, right, which is the power to slash and the power to incentivize, the power to earn rewards. And so Eigen layer is functionally a system of smart contracts on Ethereum. And if you are a staker and you want to opt into Eigen layer, you have to go to the so there are two forms of restaking that we allow.
00:26:12.562 - 00:27:12.914, Speaker A: One is called native restaking, which is normally when you stake in Ethereum, you set your own hardware wallet as the withdrawal address so that when you withdraw, your money goes into the Ethereum execution layer address which is controlled by your hardware wallet. Instead, if you opt into Eigen layer, you add one intermediate step in the withdrawal flow you go and set to the ethereum staking. You say that the withdrawal addresses in the Eigen layer contracts a specific region in the Eigen layer contract you control, called an Eigen Pod. And in that Eigen Pod, you specify that the pod owner is your hardware wallet. So essentially it's just adding one more step in your withdrawal flow. Instead of directly going into your wallet, it's going to go to a contract which is partly controlled by you and partly has the slashing power given to the Eigen layer contracts and then you can now potentially withdraw. So in the normal mode, if you did everything right according to the Eigen layer system, you'd be just able to trigger the withdrawal.
00:27:12.914 - 00:28:06.438, Speaker A: It goes to your pod where you control the money and then you can withdraw it back. Except if you have done a provable violation according to the Eigen layer contracts. In one of the covenants that you opted into, you might lose a portion of your ETH and only be able to withdraw the remainder of the ETH because you got that portion slashed. And when you're doing this, this is the on chain actions that a staker is doing which is opting into this system. The off chain action is because you're opting into this new David's storage protocol or Ryan's new chain, you have to download the node software for those other things and then run it. And we provide an interface for making it easy to do all of these things, but you have to actually download it and run it in your off chain thing, because you know that if you don't run this thing and make claims and stuff, firstly, you're not going to get the rewards. And you may be subject to the slashing conditions that you're opting into.
00:28:06.438 - 00:28:56.406, Speaker A: So Eigen layer has two parts. One is the on chain part which is you have the smart contracts which is opting in, and then you have the off chain part which is you have to download and run these other things. So while logically this is how it works and technically this is how it works, I think at an abstract layer, it is almost like putting a hook into the root of trust of ethereum. You have staking, which is at the kind of very base of ethereum, on top of which you have the consensus layer beacon chain and then you have the execution layer gap nodes and you have the particular ways in which blocks are produced. But somehow it's able to kind of go to the very root which is the stake, and then say flexibly transfer attributes of the decentralized trust that emerges from there to other services that may want to. Rent portions of this trust.
00:28:56.588 - 00:29:55.114, Speaker C: So for those who aren't familiar with Ethereum staking, you set a withdrawal address to an Ethereum address so that when you are done staking, the Ether goes to that address and presumably you would set it to your address. But Sriram, what you're saying is that in this scenario you actually send it to the eigen layer address. And that Eigen layer address is like the enforcement layer, part of Eigen layer, where if you need to be penalized, that is where you would get penalized. So you actually don't get your Ether back until you go through the enforcement like the gateway to make sure that you've done all of your duties correctly for all these other networks. And these other networks are you've signed up to do some sort of certain role for these other networks, be an Oracle network, a layer two, and they will go also to that contract and say, hey, this person did their duties, we don't need to slash them. You can let all of the Ether go out and back into their actual address or they will say, hey, actually they did do something bad, they need to get slashed. But that brings me to my next question.
00:29:55.114 - 00:30:12.480, Speaker C: Does that mean that Eigen layer is really only suited for objective things where the thing that you have signed up to be a resaker for can actually make a on chain proof that this person or this entity did some a slashable offense? That's my intuition. Is that correct?
00:30:13.570 - 00:30:55.306, Speaker A: That's partly correct. The way we think about it is if you think about what is the root of decentralized trust, another mental model which may be helpful for some of the listeners is Eigen layer is first mental model is Eigen layer is a restaking or a programmable staking protocol. The second mental model is Eigen layer is a marketplace for decentralized trust. If you think about decentralized trust, when you think of what is a crypto solution and what is not a crypto solution, you basically say that anything with a decentralized trust is a crypto solution. Anything without decentralized trust is not a crypto solution. It's a very sharp boundary. So decentralized trust is the raw material out of which all crypto products are manufactured.
00:30:55.306 - 00:31:36.842, Speaker A: And the decentralized trust in Ethereum is distilled in a specific way. You take this group of nodes and stake and stuff and there's a particular coordination consensus layer called the beacon chain. And then there's a particular execution layer called the EVM. And then on top of which there's a particular things like the gas limits and then it induces this thing called block space. Oh, you have 15 million block space, 15 million gas every 12 seconds or whatever. And essentially Ethereum itself is a marketplace for decentralized trust, right? But it's decentralized trust distilled into a specific product called block space. So you have this notion of decentralized trust.
00:31:36.842 - 00:32:25.242, Speaker A: It goes to the consensus, it goes to the execution. It goes to the gas limits and then creates an object called blockspace. And the blockspace economy is clearly emerging in Ethereum to be one of the preeminent economies in the crypto space, precisely because the raw material of like I said, every crypto solution needs decentralized trust. And Ethereum is a marketplace for decentralized trust, but it's a marketplace for decentralized trust distilled in a specific direction using a certain consensus protocol, using a certain virtual machine, a certain scalability layer and a certain gas limit leading to this economy of the block space. But decentralized trust itself can be supplied potentially in a much more raw manner. And that's what eigen layer is. Eigen layer is a marketplace for raw decentralized trust.
00:32:25.242 - 00:33:14.826, Speaker A: And what is raw decentralized trust? Like, what is decentralized trust composed of? Decentralized trust is composed of the economics of decentralized trust, which is, I have some amount of money staked and if these services or some combination of these services go wrong, then those ETH will be burnt or redistributed or whatever the covenants are. So that's, number one, is the economics of it. But number two, even in Ethereum, this is by itself insufficient. If it's only the amount of each stake that matters, then we wouldn't have to worry about decentralization. We would say, let BlackRock stake $35 billion and then we'd be fine. Like, why do we worry about homestakers? Why do we worry about solo node operators and all of this. It's because the trust model of Ethereum itself is not purely reliant on staking, on money.
00:33:14.826 - 00:34:18.458, Speaker A: It relies on a combination of money and collusion resistance. Why is this? Because money only lets you slash objective violations, even on Ethereum, right? Like, if you double sign, then it's an objective violation. I know David signed block number 30 with hash X and block number 30 with hash Y and that's just not allowed. So I'm going to slash David like it's an objective on chain verifiable algorithmic thing. But what if, like, David and Ryan and everybody collude and then they're not allowing certain transactions to go on chain, they're censoring a fraud proof, they're censoring an Oracle input, like whatever things they've taken some off chain bribe and going and doing this stuff. Censorship is not on chain verifiable because how do we know inside the blockchain that David has excluded some events from the blockchain? Because there is no locus, there's no reference point for us to know that. We need therefore block producers to be right, like, because that's integrating different perspectives into block production.
00:34:18.458 - 00:34:59.290, Speaker A: Because if there is many, many independent agents who are actually doing it, the probability that all of them can collude and form some invalid input or like, sensor is going to be much lower. And not only that, in Ethereum, we also have this concept of social slashing. And the concept of social slashing is needed because safety is algorithmically slashable. Like safety violations. If you violate safety like, oh, you sign two things or you sign an invalid block. These are objectively verifiable. But liveness or censorship? liveless violations or censorship is not objectively verifiable, but it's subjectively verifiable.
00:34:59.290 - 00:35:43.126, Speaker A: From us outside. It's obvious if a fraud proof has gone into Ethereum and not been included for seven days, this is why Vitalik and others encourage that the fraud proof time period not be like 1 hour in practice. Likely 1 hour is good enough. But just to make sure that in the most extreme event, if censorship is happening for seven days, it's human observable, it's knowable for all of us. People are going to shout, somebody's going to tweet, somebody's going to write in the reddit posts and in the ethereum forums and so on. So the idea, the way ethereum is structured is safety is on chain observable and slashable. So safety violations are enforced based purely on economics.
00:35:43.126 - 00:36:37.958, Speaker A: Liveness is enforced by two different things. One is decentralization, which is integrating a variety of different perspectives so that different people have opportunities to engage in block proposal. But also from the outside we have a vantage point to see and say that something bad happens and we can safely agree on that something bad happened, which is censorship happened, then there is an ability to fork. So these two things interlock together to create the ethereum security model, which is the guarantees of the base layer that you have safety and you have liveness. And so that's just like explaining the underlying modules of decentralized trust in ethereum itself. So that now I can explain the same thing at Eigen Layer. So now when somebody is wanting to build new services, they need to think of how do they take these raw elements of decentralized trust and then compose the services they want to compose.
00:36:37.958 - 00:37:34.534, Speaker A: This is a very sophisticated, like, you know, we had Vitalik and Justin Rake and Don Krad and very sophisticated actors actually come up with these protocols and we expect the same thing to be true at the Eigen Layer level as well. So what are the raw elements of decentralized trust that Eigen Layer can supply? On the one side, we can supply economic trust. Why can we supply economic trust? Because you're restaking, right? If you're restaking, then essentially you can subject yourself to slashing and anything objectively verifiable can then be slashed through the Eigen Layer system, that's number one. So you can supply that. So what if you had a protocol or aspects of the protocol like Liveness, like censorship, that do not rely on economics alone, they need a notion of decentralization. You could come to Eigen Layer and just borrow the ethereum decentralization. You could somehow say that I only want the homestakers of ethereum to participate.
00:37:34.534 - 00:38:15.274, Speaker A: I only want these group of nodes to participate and then say that I only want a decentralized quorum. I don't care whether they bring 35 billion or only 350,000,000 because it's not the economics that drives this particular aspect of trust. I want as many distinct agents to participate as possible in my consensus protocol. Let me give a kind of like a very tangible example secret sharing. I take a secret and I want to distribute the secret to many, many nodes. And there's a covenant in the secret, which is that if something happens, then reveal the secret, right? If that thing doesn't happen, don't reveal the secret. What I do is I take my data and then encode it into small portions and no one person has all the data.
00:38:15.274 - 00:38:58.434, Speaker A: I take these, like 5000 homestakers in Ethereum and split this secret and send it to all of them. Now, the only way I can reconstruct the secret is more than a majority of them come together and reveal their portions. Then I can use an algorithm to stitch all those pieces together and then recover my secret. So this is called Xamir secret sharing as a basic cryptography primitive. And if you want to build something like this, economics is not useful because it is not observable. It is not objectively attributable whether David and Ryan and others colluded together and revealed their portions of the secret. Because who knows, maybe they met in a secret room in the bankless office and revealed the secret, whereas it's not observable.
00:38:58.434 - 00:39:33.106, Speaker A: So I'm only relying on collusion resistance. If I bring 5000 homestakers from around the world, where are they going to meet and reveal the secret? They may have to go through some. It's not easy. So by building this barrier, you can actually bring aspects of decentralized trust. So Eigen layer is a thing which allows slashing only for objectively attributable offenses, but it allows the usage of decentralized trust for other things. Imagine I can have an oracle which allows people to bring in inputs but has no slashing. You are taking an assumption when you're using the oracle that a majority of the nodes are honest.
00:39:33.106 - 00:40:04.160, Speaker A: And if you take a very distributed group of nodes, it's possible that your assumption is satisfied. So just like the Ethereum protocol, designers had to have a very first principles understanding of what is decentralized trust. What are the aspects of decentralized trust? How do we combine them to actually make something useful and productive? Builders on top of eigen layer also need to have the same first principles understanding of what aspects of decentralized trust exist. How do you mix and match these to obtain services that have the properties that you want?
00:40:04.610 - 00:40:42.314, Speaker B: This opens up so many different channels. I feel like we could go down Sri Ram and I'm conscious of trying to take all the paths at once. So we'll do our best to kind of navigate, because you've opened up so many different topics of discussion here. So we'll try to get to them all, including the applications that this enables, which feels like where you left that conversation. But just so I'm understanding it, so the idea is that Eigen layer is really sort of modularizing the decentralized trust of Ethereum. So Bankless listeners should know that. Obviously, we think, and I think generally it's accepted ethereum is maybe the most decentralized network out there.
00:40:42.314 - 00:41:24.054, Speaker B: If not, then some people would say it's number two to bitcoin. So anyway, it's one of the most decentralized networks out there, if not the most decentralized network out there. And what Eigen layer is doing through restaking is modularizing, the decentralized trust component. So in the way the market could buy decentralized trust from Ethereum is through blocks based sales. That was the commodity that you could purchase. You want Ethereum's decentralized trust here we've turned it into a block that you can purchase, right? And that was the export from Ethereum. What restaking and what Eigen layer is doing is essentially saying, no, that's not the only form of decentralized trust.
00:41:24.054 - 00:41:56.334, Speaker B: That's not the only commodity we can actually produce. There's a layer down which is further, which is this concept of decentralized trust. And it could take a different form. It doesn't have to be block space and it can take the form of economic trust and decentralization. But essentially any chain or any application can tap into that supply of decentralized trust and create something different out of it. Not block space, but maybe something different. And that concept in itself is very powerful, I think.
00:41:56.334 - 00:42:33.338, Speaker B: And I think we're just scratching the surface of imagining what it can be useful for. But Sriram, your counsel was like, hey, and if you're designing an app or designing a chain to take this new primitive into account, you have to really understand what you're doing. Right? This is like Potter's clay and you have to make sure it forms the use case very precisely. One thing I want to ask, though, is from a Staker's perspective, so many bankless listeners hold Ether the asset, of course, maybe they're staking it, some portion of it. I want to be clear on kind of the risks that somebody takes on when they restake.
00:42:33.434 - 00:42:33.742, Speaker A: Okay?
00:42:33.796 - 00:42:44.238, Speaker B: So first of all, it seems like they have to have their ETH staked in order to restake it, right? So we're saying that you can't do this with raw ETH, is that correct?
00:42:44.404 - 00:42:44.974, Speaker A: That's right.
00:42:45.012 - 00:42:45.370, Speaker B: Okay.
00:42:45.460 - 00:43:15.594, Speaker A: So you can either do it with ETH staked or you can do it with liquid staking tokens. Like, if you already have like Re or let's say, Lido staked ETH, you could deposit the staked ETH. You could also theoretically do it with just raw ETH. But the assumption is if you're okay with the risks that come with restaking, you should likely be okay with the native staking. So that's the got it.
00:43:15.792 - 00:43:35.678, Speaker B: So the first layer of risk is fairly well understood by the market. That is, you stake your ETH, there is some risk associated with that. A lot of that is protocol risk. If you stake it with a third party or staking pool. Then you accept another protocols layer of risk. So that's risk layer one. It seems like there is risk layer two which might be eigen smart contract risk.
00:43:35.678 - 00:43:56.978, Speaker B: So you guys are putting some code out there and we all cross our fingers, do security audits have high lindy effect, make sure the code is secure. There's the chance that that is not secure, that there's some element of risk associated with that and that would apply across all of eigen layer. Anything that uses Eigen layer for restaking. Right. So that's a second layer.
00:43:57.154 - 00:43:58.102, Speaker A: Okay, that is correct.
00:43:58.156 - 00:44:33.298, Speaker B: And then the third layer is the new slashing conditions and that can be application specific and folks can kind of opt into that. What this I guess reminds me of almost is we used the kind of the nation state analogy a little bit earlier and I'm almost like bankless has called ether the Internet bond for quite a while. Like ether when staked is kind of a bond, it's almost like a treasury bill. It's a T bill that we create. And if you look at the one year short term treasury market in the US. The yield right now of that is 5.3%, which is kind of interesting.
00:44:33.298 - 00:45:00.506, Speaker B: 5.3% ether the asset when staked is about in that range, right. When you include mev and such, we're between four and 6%. So the invitation here is to take that almost like you would with T bills and be able to use those T bills to economically secure something else. That is almost an analog here. Of course, like T bills are not really very fungible in the US. And one might argue they could be or they should be.
00:45:00.506 - 00:45:28.590, Speaker B: I kind of feel like I'd rather have a T bill than use dollars. Right. Because that T bill is giving me the 5% interest rate that maybe I should be entitled to. But that is not a fungible unit. But on ether it really is. And so you can use your staked ETH, the protocol risk of ethereum and restake it and you take some other risk in exchange for some reward. And we would imagine that reward would be obviously beyond the risk free rate of staking ETH.
00:45:28.590 - 00:45:49.286, Speaker B: Don't be triggered. Bankless Listener when I say risk free rate, okay, I'm using that very precisely. Of course all crypto is risky. You can lose what you put in your head in the west. You know this. But the risk free rate for ether is like if you want a return on ether there's no better place than actually staking ether. There's no less risky place than staking ether.
00:45:49.286 - 00:46:34.474, Speaker B: So that becomes the risk free rate. And then anyone who wants to tap into the trustless security of ethereum is going to have to pay some premium on top of that. So from a Staker's perspective you could stake your ETH at like 4% to 6% annualize. You restake it in Eigen layer, you take on some smart contract risk and then you opt into the applications or chains you want to support and you can further increase your yield above the risk free rate. So there's more risk here, but now I may be going from a four to 6% type yield to like a seven 8910 percent. You really can't predict this because you're just the marketplace for this and the market will determine what the true yield is. Is this all correct?
00:46:34.672 - 00:47:35.306, Speaker A: That is absolutely correct in terms of things like the smart contract risks on Eigen Layer, I think definitely that is a significant aspect of how we think about when we try to build systems. We are trying to think of not only mechanisms on how to audit the contracts, how to make sure that we have very minimal surface, but still we also think of other things. For example, in Eigen Layer, before you withdraw your money out, there is a withdrawal lag of seven days. And this is true for most staking and unstaking protocols. It is not a short term activity like a bridge where you're like oh, why is my fund still there? It's a long term activity, it's much slower in timescale. And this lets us exert some amounts of other controls. For example, we have an ability to pass the contracts.
00:47:35.306 - 00:48:34.030, Speaker A: There is something called the Community Multi SIG, which is composed of members not from the Eigen Layer team and it can upgrade the contracts. So having a system of checks and balances so that we can minimize but not eliminate the risks associated with the Eigen Layer system. These are steps that we have taken, but absolutely correct that even if the Eigen Layer system has some amount of risk, each service that you're opting into has also some additional risk because you have to trust their smart contracts and such. And we have put in measures for some of those things as well. For example, one of the things that we do is there is a committee called the Slashing Veto committee, which basically the role of the Slashing Veto Committee is if you got illegitimately slashed because of a bug in the slashing contract, then they can veto the slashing. They cannot add new slashing. They can only veto an existing slashing.
00:48:34.030 - 00:49:33.246, Speaker A: And what this does is also segregate because you have this veto Committee which can veto slashing. And this veto committee will only accept some set of services, right? Because they have to be able to understand the service in order to veto what is a legitimate and what is an illegitimate slashing. So what this does is create a tiered system where there is a permission tier which is onboarded by this veto committee because they're going to wet the various conditions. For example, like the composition of trust that I mentioned, you should only have objectively attributable faults. If you're using subjective things, then use decentralized trust, don't try to slash it. All of these kinds of things which are protocol specifications can be checked by this onboarding committee in the permission tier, which is protected by the Slashing veto. There's going to be another permissionless tier where if you built a protocol, if you built a service and it is well ossified, then you would say, like, who's this lashing committee? I don't need them, I'm veto committee.
00:49:33.246 - 00:50:11.210, Speaker A: I'm going to go to a tier which is not protected by this. But you need to be able to convince the stakers who are now taking an excess risk, right, because they're not protected by the veto committee. You need to convince them. And if a random degen protocol is built on top of this other service, it's up to them to then go and convince the stakers that they have to go do this crazy thing. So by creating a system of checks and balances and internal social consensus inside the Eigenve system, the Slashing veto is an internal social consensus, right. It's a system of participants which can basically veto slashing. They cannot add on Slashing, but they can veto slashing.
00:50:11.210 - 00:50:43.846, Speaker A: So things like this actually create a very nuanced system which has a lot of internal checks and balances. But at the end of the day, the high level picture is what Ryan laid out, which is you have your ETH. You want to earn additional rewards for validation services. So you use the Ethereum base layer staking. That is the absolute risk minimal thing that you can do. On top of which you may say, oh, I like these protocols. These are pretty risk minimal.
00:50:43.846 - 00:51:19.070, Speaker A: I'm going to opt into them. I want to just say one important thing, which is that if you look at the scope of what possible revenue opportunities exist in Ethereum or in blockchains broadly, you have things like, oh, I can go and participate in decentralized finance. I can go and participate in a lending market. I can go and participate in kind of like a market making or whatever and then earn like a bunch of yield. But all of these yield, all of DFI yield is you're underwriting some price risks. That's what you're getting a yield for. You're underwriting a price risk.
00:51:19.070 - 00:51:48.138, Speaker A: Like, you are saying, oh, I don't believe like e two USD is going to change that much, or like this to that is not going to change that much. And because if it does, you're going to lose money. I'm going to underwrite some volatility risk. That's what you're doing in a landing market. You're underwriting some set of financial risks, price risks, when you're trying to gain yield in DeFi. And this is not unique to blockchains. Blockchains make them transparent, right? Like and verifiable that some of these conditions and carbon ends are held.
00:51:48.138 - 00:52:25.814, Speaker A: But that's the only reason you have a non zero yield is your underwriting price risk because if that's not the case, then you don't get any yield. What happens in Eigen layer is that we have this realization is validation yield is the unique thing about blockchains. So what is validation yield? Validation yield is you hold a bunch of ETH and then you put it down, you lock it down in a contract and then you are providing a service, right? It's a service provider fee. It's a combination of locking up some money and providing a service. That's what staking yield is. And staking yield is nonzero because of an information asymmetry. What is this information asymmetry? As a staker.
00:52:25.814 - 00:53:28.958, Speaker A: You know, you are honest and if you understand the protocol and its risks, which is potentially it's theoretically doable right? If you understand the protocol and its risks, you can basically be sure you won't lose your ETH unless you're malicious, right? Whereas an external party like you look at me and you say, oh, sriram, maybe he's good, maybe he's bad. So you don't know that I'm honest or not. You're going to say, oh, but I see he's putting down his money and if he's not honest, he's going to lose this amount of money. So from your point of view you're saying I don't know if he's honest or not, but if he's not honest, he's going to lose this money. So it's predicated on this information asymmetry between the service provider and the service receiver. It's a very unique form of yield that is created inside the crypto economy and it can underwrite a lot of digital trust. Like I'm a server and I'm providing a certain service, I'm a storage provider and I'm providing a service and I'm a matters like system and I'm providing a certain service.
00:53:28.958 - 00:53:46.298, Speaker A: There's all kinds of these services that people want to provide and because it unlocks this new kind of economy which simply doesn't exist anywhere else, there's no parallel to this. So the rate here could be quite different from the rate that you would get on other instruments.
00:53:46.414 - 00:54:21.786, Speaker D: Learning about crypto is hard until now. Introducing MetaMask Learn, an open educational platform about crypto, Web Three, self custody, wallet management and all the other topics needed to onboard people into this crazy world of crypto. MetaMask Learn is an interactive platform with each lesson offering a simulation for the task at hand, giving you actual practical experience for navigating Web Three. The purpose of MetaMask Learn is to teach people the basics of self custody and wallet security in a safe environment. And while MetaMask Learn always takes the time to define Web Three specific vocabulary, it is still a jargon free experience for the crypto.
00:54:21.818 - 00:54:26.042, Speaker C: Curious, user friendly, not scary. MetaMask Learn is available in ten languages.
00:54:26.106 - 00:54:31.858, Speaker D: With more to be added soon, and it's meant to cater to a global Web Three audience. So are you tired of having to.
00:54:31.864 - 00:54:40.758, Speaker C: Explain crypto concepts to your friends? Go to learn MetaMask IO and add MetaMask Learn to your guides to get onboarded into the world of Web Three.
00:54:40.844 - 00:55:00.214, Speaker D: Hiring people worldwide, paying them in crypto, providing them access to benefits. It all's so complex, but it doesn't have to be complying with labor laws, payroll rules, tax obligations, and crypto regulations in every country that you employ, someone is difficult, time consuming, manual and costly, and it's drawing more and more attention from regulators and governments.
00:55:00.262 - 00:55:02.806, Speaker C: But there is good news toku is here.
00:55:02.848 - 00:55:37.654, Speaker D: Toku is the first employment and compensation platform for the crypto industry that makes this easy. Toku helps you hire employees or contractors and pay them in fiat or crypto, legally compliantly and with all the taxes handled in over 100 different jurisdictions. So whether you're an early stage company with just a team of two, or you're an enterprise with 200, Toku has a solution that meets your needs. Toku is already working with the leading companies in the Space Protocol Labs, Hadera, Gitcoin and many more. So transform your employment and token payroll operations with Toku. You can reach out to Toku@toku.com Bankless or click the link in the show.
00:55:37.692 - 00:55:41.134, Speaker C: Notes introducing ETHX from Stator.
00:55:41.202 - 00:56:30.402, Speaker D: ETHX is a liquid staking token designed to maximize rewards, all while securing ethereum. With Stator, you can run an ethereum node with just four ETH, an 85% lower capital requirement versus the 32 ETH required for solo staking. With Stator's four ETH nodes, you can get a 35% average higher yield since you charge fees to those who use your node to stake their ETH. By running a node with Stator, the ETHX staking derivative token can get minted on your validators and can flow into the world of DeFi, which Stator is actively building integrations and partnerships into. To increase the utility of ETHX, Stator allows for both permissioned and permissionless nodes to join the network, maximizing its potential scalability for ETHX while preserving the values of decentralization and openness behind its liquid staking token. Go to Statorlabs.com ETH and sign up to get access to the Stator staking protocol.
00:56:30.402 - 00:57:23.626, Speaker D: Arbitrum One is pioneering the world of secure ethereum scalability and is continuing to accelerate the Web Three landscape. Hundreds of projects have already deployed on Arbitrum One, producing flourishing DFI and NFT ecosystems. With a recent addition of Arbitrum, nova gaming and social DApps like Reddit are also now calling Arbitrum home. Both Arbitrum One and Nova leverage the security and decentralization of ethereum and provide a builder experience that's intuitive, familiar and fully EVM compatible. On Arbitrum, both builders and users will experience faster transaction speeds with significantly lower gas fees. With Arbitrum's recent migration to Arbitrum Nitro, it's also now ten times faster than before. Visit Arbitrum IO, where you can join the community, dive into the developer docs, bridge your assets, and start building your first DAP with Arbitrum experience web Three development the way it was meant to be secure, fast, cheap and friction free.
00:57:23.728 - 00:58:07.734, Speaker B: We're going to get to all of the different applications in just a minute and what this innovation can breed, but just I want to pause on the staker piece, guys. Staking is. About to get real interesting. Like, real interesting, because imagine now you are a staker and you have the opportunity to maybe juice your yields by some amount, and there's thousands of different options in order to do that. And I'll remind bankless listeners, as usual, right? In a competitive marketplace, higher reward equals higher risk. Okay? So you want to go sign up for the double digit APY. You're probably taking commensurate risk associated with that.
00:58:07.734 - 00:58:50.422, Speaker B: If you don't know what you're getting into, you better not go do that. But imagine this kind of competitive marketplace competing over that decentralized trust. And as a staker, you're kind of at the center. You're what all of the other chains actually want and demand. I think this is very fascinating, and you can see why we are so fascinated by this topic, is because there could be entirely, like, rating agencies just based on rating the risk of different eigen layer type of applications or chains. This is going to spawn so many different industries and different companies. That's why we're so excited about it.
00:58:50.422 - 00:58:55.766, Speaker B: We should probably get to some of the new things that can be built on eigen layer. David, you want to take that?
00:58:55.948 - 00:59:22.422, Speaker C: Yeah. Just to really reiterate this, I think it's important to be able to put into people's brains what these new networks actually could be like. All right, you can restake your ether. We haven't answered the okay, to what question. So, like, Sriram, what are some examples of networks that could come alive because of restaking, because of Eigen layer? Can we just make this really concrete for listeners brains?
00:59:22.586 - 01:00:06.560, Speaker A: Yeah. So if you look at the kind of broader crypto economy, I think let's start with this high level observation that decentralized trust underpins pretty much all crypto solutions, right? And so you start with that, and then you say, okay, what are the other innovations people are doing which are currently potentially outside the ethereum ecosystem that we can now supercharge with this 35 billion plus dollars of staking that exist in the ethereum ecosystem? Number one, new chains. Right. Like, you look at, oh, I'm going to start this new chain. I know. Why do you start a new chain? You start a new chain because you have a new consensus protocol. Okay? This new consensus protocol is going to achieve finality in, like, half a second.
01:00:06.560 - 01:00:40.278, Speaker A: Okay, that sounds pretty cool. Can we bring that to ethereum? You stake ETH, and then you opt in, and now you're running a new consensus protocol. And this new consensus protocol can get finality at like, 1 second or half a second. And if finality is broken on this new consensus protocol, I'm going to be able to slash ETH. It's an objectively attributable offense of signing two blocks with the same block number. That's a superpower one example. Like, take any L one is now part of this restaking economy.
01:00:40.278 - 01:01:17.058, Speaker A: Okay, but that's not all. Actually, I think this idea that you're going to build all these silos of many chains I think is not a good model. I want to draw the listeners into an old model that happened in the Internet. Like, imagine it's 1994 and you want to build your web application. What would you do? You would basically have to build your own server, make sure that the server is performant. You'd have to build your own identity stack. Say, okay, how do you log in people? You would have to build your own payment stack so that when they come to your website they know what they're doing.
01:01:17.058 - 01:02:00.718, Speaker A: You have to build your own database stack so that you have a history and stuff stored. And then you would have to build like the thing that you really wanted to build. So this is the Internet web application development in like 94, but how does it look in 2023? You'd say, oh, AWS is the server of choice or whatever, azure or something, right? So you choose one of the clouds. Then you say, I'm going to choose like a SaaS service, like OAuth as an identity as a service or a payment as a service using Stripe or PayPal or something else. Use like a DB as a service on top of it. And then tie all of these together. And then, hey, I just do the one special thing and then create my application of choice.
01:02:00.718 - 01:02:32.474, Speaker A: So that's what you do today. And what we envision is of course you want to bring this same kind of like a development economy into blockchains. The problem is AWS cannot be the substrate, right? Like the substrate needs to have decentralized trust. We already established that. That's what demarcates a blockchain solution from a non blockchain solution. Now we have the decentralized trust substrate, which is ethereum stakers. Putting down money and computational resources to supply that trust eigen layer makes it more flexible.
01:02:32.474 - 01:03:14.374, Speaker A: Now you can have services built on top, just like the SaaS software as a service was the corresponding economy in the cloud era. You build many SaaS services and then any end application concatenates these SaaS services to form the application of choice. Imagine like a composability layer, imagine a bridging layer, imagine an Oracle layer, imagine an identity layer. Imagine a settlement layer, imagine an altering layer. Like when you're building already the modular economy has started to hint at what this looks like, right? You have a sequencing layer is separate. You then have a bridging layer is separate. You then have a settlement layer is separate, and a data availability layer is separate.
01:03:14.374 - 01:03:59.986, Speaker A: But this is not all the components, is what I'm trying to allude to. Just like you look at the SaaS economy, there is many, many SaaS services. A typical web application uses 15 SaaS services and concatenates them, right? And we would expect the same thing to happen in crypto. Like why would we think otherwise? And SaaS is one of those categories where you can take one concept and then dive deep and really kill it. Like Secret Sharing is a SaaS service on the crypto world, right? Like secure multiparty computation is a SaaS service. Trusted execution environments and doing a particular thing on top of it is a SaaS service. There's many, many core primitives that are missing in the crypto economy to actually build all the crazy things that we envision to build here, to make it a little bit concrete.
01:03:59.986 - 01:04:49.982, Speaker A: So I just want to present a high level vision and then I can make it a bit concrete. Let's just look at the roll of modular economy today on Ethereum and kind of envision what are the missing components and how we can supplant them with Eigen layer? Because some people get very confused when they look at Eigen layer. They're like, oh, is this going to be competing with the layer two landscape? No, it's completely complementary to the layer two landscape. Why is that? Layer two is not. The architecture of layer two is the way to scale ethereum is the way to scale any decentralized blockchain. Why is it is because you offload computation, you offload memory management into a separate system and then provide cryptographic proofs that these have been done correctly to this decentralized network. If you didn't do this, if you just said, oh, I have Ethereum, I'm going to restake, and then run like thousands of chains.
01:04:49.982 - 01:05:29.926, Speaker A: Now every validator needs to run like thousands of chains. That doesn't make any sense. We are going to kill decentralized trust if we try to do that. So what we need is these services that are highly scalable, that can then be built on top of each other, so that we keep the underlying notion of decentralized trust intact. A degen version of restaking that could have been built like even one year back would have been take a liquid staking token, just let stake the liquid staking token fork solana and then run on the Ethereum trust network. This would be like a very bad way of designing restaking because it'll kill the decentralized trust on which this system is built.
01:05:30.028 - 01:05:34.520, Speaker B: You just gave someone a great idea, I think sriram guarantee that happens.
01:05:36.650 - 01:06:16.650, Speaker A: I'm sure. Right? But the thing is, the way Eigen layer is designed is it allows for modular aspects of trust. Somebody could build that, but somebody can also build the more decentralized, the more stable version. We're launching everything together as opposed to saying that this is the only thing you can do with it. Because when that's the only thing you can do with it, all the stake starts drifting towards that because there's no yield to be decentralized, you need to be centralized in order to make any yield. And so we are trying to preserve the core values of Ethereum while allowing this marketplace. And that's why I want to highlight what we can do for the roll up landscape using something like eigen layer.
01:06:16.650 - 01:06:54.574, Speaker A: So number one, data availability, right? Like the total data bandwidth of Ethereum is somewhat constrained. It's right now at 83. There is a roadmap in Ethereum to expand this from 83 megabytes per second using this method called Dunk Sharding. It'll take two to three years to get there. But can we in the free market, everybody trying to build new interesting things. Can we take some of those best ideas and already try them out on eigen layer? And the first attempt is what we are doing ourselves, a solution called eigenda, which is the data availability layer. It runs at ten megabytes per second, not even 1.3.
01:06:54.574 - 01:07:27.162, Speaker A: It's basically just Dunk Sharding, but built with because it's a more flexible, more open system, it doesn't have to interface with consensus and other things that core Dunk Sharding has to. You can actually do a lot of interesting things at this layer. And that's one thing that we're already building. And we have a roadmap to get from ten megabytes per second over time to even 10gb/second. So you can scale this out 1000 X. So we envision the crypto economy to grow so big that megabytes per second is not going to be enough. So that's one example.
01:07:27.162 - 01:07:44.302, Speaker A: Roll ups all need data availability. And can we provide a cheap and sustainable version of data availability where everybody doesn't have to download everything? Like nodes do very little work. They use data availability, sampling and other ideas to actually scale the system. So that is eigenda. One example.
01:07:44.356 - 01:08:43.102, Speaker C: Can we actually hang on eigenda just for a little bit just because it's super concrete and it's worth just unpacking this part of this story? I think it's just a good way to understand eigen layer. If we're using nation state metaphors, which I guess we are so far in this episode, maybe like Dank Sharding or data availability inside of Ethereum native data availability, ethereum has data, it doesn't have too much of it. It's very, very constrained on that because it's decentralized. And so maybe Ethereum's data availability is like the United States Postal Service, whereas eigen layer's data availability is like ups. Maybe it's more in the free market. Is it more in the private? So it can compete on that threshold, it can compete in that world and it also doesn't have to be constrained by the low movement that happens at the nation state level. Like you really got to wait for 4844 for Dank Sharding to actually come to mainnet.
01:08:43.102 - 01:08:56.598, Speaker C: Maybe the private market can move faster. And it's good that the private market and the actual entrined protocol of Ethereum, these compete with each other. This is an open, free marketplace. Let's make sure that there is one.
01:08:56.684 - 01:09:53.910, Speaker A: Really cool vision that we have for eigen layer is that it is a place where many EIPS compete before it becomes enshrined. So same idea for layer twos, right? You look at Sharding, which was basically like state enshrined like roll ups. Basically it's an execution. Sharding is a particular version of roll ups that has to be fixed and enshrined and built by the core protocol team. Whereas layer twos were free market competition on top of like oh, I'm building scroll, you're building ZK sync, there's so many varieties of Zkevm, so many varieties of optimistic roll ups, all of them compete on this free market. And the best ideas are of course over a longer timescale going to be absorbed back into ethereum. These protocols, the free market protocols will continue to have an edge because they're going to have newer and newer features, whereas the core protocol will also upgrade.
01:09:53.910 - 01:10:36.022, Speaker A: And this is the same roadmap that we see because you need to be battle tested a lot and there was no place for battle testing all these different ideas before they get enshrined. If it was at the more deeper levels of the protocol stack and that's what eigen layer furnishes exactly what you're saying, which is that it allows for free market competition on say what is the right version of Dunksharting? Many people build these different versions and then somebody's like oh, actually this is the right thing and maybe not the one eigenda is building, but somebody else is building. Then that then goes and becomes part of ethereum itself or a three to five year timescale. Whereas on that layer people are still innovating and saying oh, it's 10gb/second, it's not enough, we want to do ten terabytes per second.
01:10:36.076 - 01:10:53.530, Speaker B: That's what the important thing about this too is that it is secured by the same ether stakers. Essentially it's the same kind of economic security that is securing that could potentially secure eigenda as would secure Dank Sharding.
01:10:54.030 - 01:11:26.662, Speaker A: That's right. So while the economic aspect of the trust so there were three aspects of trust on the ethereum core layer. One is the economic aspect of the trust, the other is the decentralization aspect of the trust. And the third is the social forking aspect of the trust. Right? Remember when some transactions not included, you can fork ethereum. That third aspect of trust is missing in eigen layer. Even if 100% of stake is restaked, right? Even if every staker restakes and runs when Dunk Sharding is running, if a block data is missing, ethereum will fork around it.
01:11:26.662 - 01:12:01.566, Speaker A: Because I mean, that's the protocol. The protocol forks around like invalid states. Whereas on eigen layer if the same thing happens, we have no ability to socially fork ethereum. So there is a difference. The dividing line is the protocol concerns basically has social forking, which is like a nuclear option, like going with the state analogy, like the nuclear power is only with the state, it's not with the free market. And so that's something I want to delineate. But everything else, the decentralization in fact it's possible to have more decentralization on eigen layer than on ethereum.
01:12:01.566 - 01:12:26.486, Speaker A: Why would I say that? Even if the validator set is the same. It's because you could say that I'm excluding these whales who control I take the top 30 validators and remove it and only the remaining ones all have power. So to get to a majority, to get to a majority in Ethereum, I may need like 30 or 40 nodes because they have a dominant amount of stake. Now, I remove those 30 or 40 in my service and then say I only have the remaining 9960.
01:12:26.508 - 01:12:27.858, Speaker B: It's like all the solo stakers.
01:12:27.874 - 01:12:41.774, Speaker A: Let's say all the solo stakers. Exactly. And exactly. Exactly. So you could build like really because it's modular. You can isolate you have this laser like ability to say I only want these things. I don't want those other things.
01:12:41.774 - 01:13:00.040, Speaker A: Or somebody might say I'm building a Solana on ethereum. I don't need these slaggards from home trying to opt in. I only want economic security. I just go with these just Coinbase and big liquid staking protocols. Good enough. That's fine. That's the free market and that's what it needs to do.
01:13:00.490 - 01:13:28.234, Speaker C: And picking up on the whole USPS ups metaphor, I want to bring in a third player here, which is like Celestia. Celestia is a data availability solution that is outside of the fold. It is a layer, one blockchain that is meant to be a data availability solution. Kind of in the same way that Eigen layer DA is also a data availability solution. But Celestia is secured by its own token. So it's like the USPS. Of Canada.
01:13:28.234 - 01:14:03.342, Speaker C: I don't know what it's called in Canada, but the point is a different Canada post. It's Canada post that's the point of that we're really trying to drive home here is that well, with Eigen layer, with resaking, we can have the benefits that Celestia has, that Canada post has. If Canada post is meaningfully that much better than USPS, we can bring that into the fold, have it be secured by ETH stakers and then also have that data availability solution that is free market competitive, but closer to home, if you consider home to be Ethereum. How do you like that for a metaphor? Free roam.
01:14:03.506 - 01:14:51.926, Speaker A: That's really good. The one thing I want to say is the Celestia guy is bad from Ethereum. And if there was something like this maybe several years back, it's possible that even Celestia would have built on top of this kind of a common layer. And also I want to mention that there is a benefit for having your own token for services building on top of Eigen layer. And why is that? That's because that aspect of the token, you can do social forking, whereas you cannot do social forking on ETH. So you can have things like dual staking where you say that, oh, there is a kind of ETH stakers are securing this, but also my own token stakers are securing this, but if this service goes wrong, I can socially fork these guys. And so that imposes some kind of like an economic penalty, but it only can be enforced socially.
01:14:51.926 - 01:15:44.138, Speaker A: So there are all these aspects of trust, like I think Ryan mentioned earlier, when you're constructing these protocols, you have to think from first principles what is happening and try to build enough attributes in different layers. Just like Ethereum has taught very deeply about these things. When you're building a protocol, maybe you need your own token, but it's in addition to whatever trust is coming from Ethereum because Ethereum doesn't have social forking and you want to have social forking on your token and data is considered stored or available only if both these different quorums agree that data is considered stored. So you can mix and match aspects of trust. Not only services are modular, trust itself is modular, right? Like you're going to say I need decentralization trust for this, I need economic trust for that, I need social forking trust for this. All of these different things come together in order to make your particular I.
01:15:44.144 - 01:16:34.022, Speaker B: Don'T know if we're stretching the analogy too far here with Canada and the US and Canada post versus the United States Postal Service or something. But what's interesting is Canada certainly would not want to speaking on behalf of a Canadian citizen here, that's me. So Canada would certainly not want to leave its social forking over to the US. Right? It would not want to opt into the US congressional rule of law, that sort of thing, right, of course. But Canada does benefit, I would argue, and I think if you ask any Canadian, they would also agree from the US's military security. There's this sort of umbrella of security that the United States of America kind of provides in Canada in various ways. In various ways like opts into know, NATO and other sort of alliances.
01:16:34.022 - 01:16:55.970, Speaker B: So it does tap into that military network, which is very interesting and you don't know how all of this will shake out anyway, observation I don't see Canada post being supplemented by the United States post, but they do use Ups, which I don't know what that means. And there's FedEx in Canada as well. I don't know what that means in our analogy here.
01:16:56.120 - 01:17:54.558, Speaker C: Well, they're all United States Domicile companies, right? And so can be spawned inside of the Ethereum network and then also be data availability solutions for non Ethereum chains so it can go cross border. Sriram, you brought up the idea of tokens inside of these restaked networks, and I want to bring up a counterpoint to Eigen layer to restaking that I think people will want to hear asked, and that Sriram. I want to go and spin up my own chain or start my own Oracle network or do something. I want to go start a new network. A main motivation for why I would want to do that would be like I get to issue a token and I don't really care about letting all the ETH whales secure my network because they already have all of their ETH. I would like to generate my own brand new wealth. I want to distribute my new wealth to all my early adopters and all the ETH stakers and the ETH maxis can go f off because I'm going to go issue a new token.
01:17:54.558 - 01:18:14.442, Speaker C: And that's always been actually the reason why we've enjoyed tokens, because they are network bootstrapping mechanisms. They really have solved the bootstrapping problem. So why would people want to start their own network with Eigen layer when they could just issue a token? Like, you're taking away the cool thing about this whole industry, which is issuing tokens. So what would you say to this?
01:18:14.576 - 01:19:57.674, Speaker A: That I would say history proves otherwise. You go back to 2013 and you could say why would in fact, bitcoiners were saying, why would all these applications come and live inside one common tent, the ethereum, and just be a DAP on top of this ethereum network? How would ethereum network itself be secure enough to hold so many applications? It's an unstable equilibrium is what people said. So both the aspects combined here, one is why would you want to be part of this kind of like a big tent thing, number one? And number two is, how would this tent be big enough? Like, how would there be enough stake and value in this to actually secure all these things? And the answer is, we saw both the things happen, which is pretty much all DApps were built on ethereum till ethereum was saturated, right? Like in block space, the CryptoKitties thing happened and then people are like, oh, maybe this block space is not infinite and it's going to get saturated at some point. So maybe we need to build another L one or go build on another L one. And it is because it's much, much easier to bootstrap your network if you don't have to also do your security, right? It's the same reason why same thing happened in the cloud, right? Like, you go back in 2001, 2002, you'll read articles, or 2005, even 2010, you would read articles that say there's no way companies will migrate to the cloud. Except now only the absolute biggest ones even think of running their own server infrastructure because it's a headache. It's a super specialty to actually go run a cloud, right? It's not something you want to do.
01:19:57.674 - 01:20:41.722, Speaker A: It's going to add huge overheads. It's exactly the same thing. So first is DApps have tokens, right? Like, we're not against tokens. DApps have tokens and their tokens can be used for bootstrapping. And in fact, on Eigen layer, you can use your token for bootstrapping without having any fee, right? Because initially on Ethereum, if you're building a DAP initially, all the users still have to pay the gas fee of Ethereum, which could be expensive. And whereas if you're building something on top of Eigen layer, you would say I'm compensating stakers directly from my own tokens, small fraction of my own token. And because it's restaked security, it's shared security across so many systems, the per system fee is much lower, right? So here is a very simple way of visualizing this.
01:20:41.722 - 01:21:18.710, Speaker A: Let's say there are thousand applications each of which can have offered like $1 million worth of security because of the fee they are paying. If you aggregate all of them, you get a $1 billion security with the same fee basis and everybody is enjoying the $1 billion shared security. It's just much better. And shared security is much better than disaggregated security. We see this in the real world, we see this inside blockchains. So the cost of purchasing that security is much lower because it's shared. It's not like I have to Canada could say is big enough to say that I can have my own army, right? Or they do, but not to the same extent that US does.
01:21:18.710 - 01:22:33.866, Speaker A: And because they're sharing or partaking in this through a variety of soft and hard agreements that's the same thing that will happen in this space is you don't need to bootstrap your own system. So actually bootstrapping your system is one of the hardest things and we see this time and again, right? Because what happens is when you try to bootstrap your own system using your own security, you can only supply services to things of value less than your token value, right? Imagine your token is kind of like a new chain and it's worth like 100 million. Now you can really supply security only worth 100 million through this token and that restricts your own ability to gain adoption. Whereas if you come and use a restaked security, maybe you get 35 billion of security and maybe now you can offer services to everybody in the ecosystem and that grows your market. So that's answer number one. Answer number two is if you look at the SaaS economy on the cloud era you see this is one of the most productive for VCs and for entrepreneurs because you can take a narrow slice and then kill it. Say I am the identity layer for X, kind of like for social login.
01:22:33.866 - 01:23:25.914, Speaker A: It's a very, very narrow thing. But there are so many things that rely on this narrow thing that it's worth it, right? That's the same thing we envision would happen is somebody would come and build like a service, like ordering sequencing transactions for all the layer twos is a narrow service, but it's built on Ethereum's grade security. Firstly as a roll up that's much more compatible to say that oh yeah, it's secured by Ethereum. It's the decentralized sequencing coming from Ethereum stakers much more attractive for a roll up to opt in. Otherwise they'll be like why should I touch your token? Why should I not use ethereum? And so there are ways in which this market you can enhance your market share by opting into the system. You have your own token as a value capture mechanism where a fraction of the fees get routed to your token. You can use your token even as a payment token.
01:23:25.914 - 01:23:44.242, Speaker A: You pay fees in only that token. Possibly you use your token as an incentive and bootstrapping mechanism. You could also use your token as an additional staking mechanism. So you can do all of these things. But the benefit of sharing in having in a pool security layer is quite a lot. So I think people will opt in.
01:23:44.296 - 01:24:21.710, Speaker B: So Eigen Layer is not going to be a token killer per se, but it could and it might very well kill use cases for tokens as they relate to economic security. So if you are using a native token for decentralization economic security for those guarantees, you should probably be a little bit worried about what Eigen Layer and restaking is doing. But this doesn't kill the general purpose of tokens. There are all sorts of other tokens. In fact, from a market perspective, it might make tokens more efficient value accrual mechanisms because you can tap into them directly.
01:24:24.150 - 01:24:59.590, Speaker A: That's right. Except I would add an asterisk on the token not being useful for staking. There are two uses of economic security, two ways in which you get economic security. One way is that you have objective attributable things like slashing. So that gives you some amount of economic security. The other kind of economics that is at play in staking is value alignment. If you're holding a certain token and staking it, and even if there's no slashing, a majority of the stakers won't go and try to do something bad in the system because that affects the value of their own token.
01:24:59.590 - 01:25:42.950, Speaker A: And so we do expect things like dual staking where each staking exists as a separate quorum and your own token staking exists as a separate quorum. And then you aggregate information from both of these quorums and say that oh, the ETH quorum has said this and your quorum has said this. Only if they're within some reasonable deviation. That's considered a valid input. So there are ways in which your token can be used even for staking and security, but only as a complement to this kind of general purpose slashable security, which is much better derived from something like ethereum. It's a much more, much less volatile store of value. It doesn't fluctuate based on your own tokens like value proposition.
01:25:42.950 - 01:26:03.042, Speaker A: So even if your token goes down in value, you still have the large amount of economic security intact. Rather than going through a debt spiral where your token goes down in value, then your chain is considered less secure, people exit, and then your token goes down even further and then it's just kind of a spiral down. We have seen these spirals in this space. You guys have covered a lot of it.
01:26:03.096 - 01:26:31.930, Speaker C: Yes, we have. Yeah. You said the word. Alignment, which I've been hanging out with a number of the ethereum researchers. And the topic of Eigen layer alignment or Resaking alignment is like it's the new brain candy for the ethereum research team. I think even Justin Drake has talked about like, yeah, I'm into Eigen layer alignment in the same way that Ryan and David are into AI alignment. Similar problems existential.
01:26:31.930 - 01:27:57.910, Speaker C: Well, one's existential for ethereum, the other is existential for humanity. And so I'll triculate this this way currently pre Eigen layer, pre restaking in our naive protected form, before re staking came and penetrated our bubble, all of the ethereum stakers were this homogeneous group of people that had one network to do their one job, which was to secure your one network. Now, with Resaking, we have what I've dubbed network polyamory where E stakers can actually go flirt with other networks with their original stake, but they can also stake for additional networks. And now Ethereum, which used to have a very monogamous relationship with its own ETH stakers, now these ETH stakers get to go have other relationships with other networks. And so no longer are the ETH stakers committed to this one single ethereum network, which is one problem, but then it also continues from there, which is that, well, some set of ethereum stakers can go and sign up for Network A and then some set of ethereum stakers can sign up for Network Two and that can fracture and go forth. And all of a sudden we used to have this nice pool of ethereum stakers which had one job which was secure ethereum. And now we have a fracturing of this pooled security to secure 20 different chains of dubious, perhaps levels of commitment to ethereum.
01:27:57.910 - 01:28:12.860, Speaker C: This now threatens ethereum security is the concern here, because what was once dedicated to ethereum can now go and just do the degen yield farming thing and now ethereum as a whole is less secure as a result of that. What would you say to this?
01:28:13.790 - 01:28:46.418, Speaker A: It is approximately correct in that basically when you're sharing security, you're giving up a portion of the security to these other layers. But your own security also goes up as a consequence. Right? Because US is the security supplier for the rest of the world. You are gaining fees from all these things. That means US upgrades its own security battalion, right? That's the same thing that's happening through restaking is the total amount staked right now. Let's say, like Ryan pointed out, it equilibrates to the market rate of like 5%, 5.5%, whatever.
01:28:46.418 - 01:29:43.270, Speaker A: And as that means, like right now, whatever, 35 billion worth of ETH is staked. Right? And if you want this to go to 100 billion worth of ETH staked, the core protocol itself may not have enough incentives to actually drive it to that level. But because you're getting Staking and restaking yield together, the Staking yield plus restaking yield may be enough to stretch the security from like a 35 billion budget to 100 billion budget. So I completely understand and acknowledge the concern. Also, I think in the short to medium term, there is a lot more information sharing between, firstly the Eigen layer kind of like teams and the ethereum protocol teams. That is important. But over the medium term, maybe even the protocol information passing, like how does something like Eigen layer or any restaking protocol communicate information with the staking protocol better? So there is that aspect of it.
01:29:43.270 - 01:30:41.982, Speaker A: A very simple technical version of it is called smart contract triggered withdrawals. Right? Now, who holds the validator key, they can trigger the withdrawals. But there is in the roadmap of ethereum, Danny Ryan and others are putting together the idea of contract triggered withdrawals, that a smart contract which has the withdrawal key can trigger the withdrawal instead of the validator has to trigger the withdrawal. So that's an example of information sharing between Eigen layer and ethereum. Then over the longer scale, there are more complex information sharing mechanisms like shared insurance and other things we're working on internally and sharing with the ethereum folks. But over the long, long term, I do hope that something like restaking or programmable staking becomes part of the ethereum protocol itself. Because it's such a powerful thing that actually having it over time, as we remove all kinds of subjectivity and battle test it, it's possible that something like Eigen layer can become core part of the ethereum protocol.
01:30:42.066 - 01:31:40.234, Speaker C: Sriram when you tell me that I can take my ethereum and I can restake it to get more yield, the first place my brain goes is like, okay, how many times though, can I restake to all the chains? In the article I wrote on Bankless, I've been using this in the way to explain what resaking is. I've been using the Skyrim mods as this metaphor where if anyone's ever modded a game, you start with the biggest, most common mod because it's the most useful and it's the least likely to crash your game. But then you inevitably like, okay, what about the next mod and then the next mod? And then you go down the long tail of mods. At some point you're installing something completely ridiculous and then you try and open up your game and it crashes. So the metaphor here is that when all of these ethereum validators ethereum stakers are given the option to sign up for additional slashing conditions because they get more yield, they're going to sign up for all the slashing conditions that they can't just like layer on all the mods, like Juice my yields up to 20%.
01:31:40.272 - 01:31:42.458, Speaker B: Humans aren't good at this whole risk thing.
01:31:42.624 - 01:31:59.810, Speaker C: Yeah, I think this kind of should be considered the base case for a decent portion of the ethereum stakers who are going to sign up for a lot of extra yield because we've seen that before. So what's the risk here? Is this a legitimate concern why is this not going to kill Ethereum?
01:32:01.510 - 01:32:29.242, Speaker A: Okay, so I like the idea of the Skyrim mods. I think what we want is if somebody installs a Skyrim mod and the mod crashes, that's totally okay. Somebody installs a skyrim mod and the server burns. That's not okay, right? Like, that's the principle that you want to hold here. So how do you make the server not crash but the mod crash, right? Like, the mod crashing is like their karma. Like they did something bad. Like their service not well built.
01:32:29.242 - 01:33:11.482, Speaker A: It should not have good protections, but Ethereum stakers should not get like their stake should not be burnt or something for that. How do we do? This is partly by holding to the core standards of what I explained, which is have objectively attributable slashing conditions. And when you have objectively attributable slashing conditions, which are well vetted and onboarded, then what happens is, imagine somebody builds newer and newer consensus protocols. Let's just take this as a special example, right? Consensus protocols. Ethereum has a consensus protocol. All other chains have their own consensus protocols. And I would say the project to figure out the best consensus protocol is nowhere near done.
01:33:11.482 - 01:33:44.446, Speaker A: Like, it's academically. An ongoing exercise as well as industry innovation is still not stopped. So what do we do there? The slashing condition is very simple. What's the slashing condition? If you sign two messages which are conflicting with each other, right, like two blocks, then you get slashed. So the slashing contract can be the same contract across hundreds of consensus protocols. So you have a very well vetted, simple slashing protocol. In fact, you could also have in your node software something we call an antislasher.
01:33:44.446 - 01:34:45.730, Speaker A: What it does is, I don't know, I cannot trust these hundreds of different node software that I'm running, but I have this thing that whenever I'm signing a message, I'll make sure I don't sign a conflicting message. I'm basically forward simulating the slashing contract and making sure that I will never trigger the slashing contract. So this is called an antislasher module. So you just double check this and now you go degen into like, hundreds of different consensus protocols. Nothing happens to you. By the way, this is the same thing that happens on Ethereum, right? On Ethereum, when you're staking, you're really staking into all applications that are built on top of Ethereum. It's just that the only slashing condition that you have is the Ethereum's slashing condition, right? So when people think about, you know, new services building on top is adding leverage that's already there in proof of stake, right? You stake what if tomorrow, like, a $1 trillion stablecoin protocol launches on Ethereum, it is going to increase leverage and that's default built in into the structure of proof of stake.
01:34:45.730 - 01:35:10.542, Speaker A: It's just that it's going to generate enough fees over the longer term. That because you're generating more fees, more things going to get staked. Because more things going to get staked. The total value of ETH itself grows. All of these second order effects is what regularizes this economy. The same thing happens also on Eigen layer. Okay, so the high level is how do you make sure that stakers are protected? And like I said, the two tier system is what we are building.
01:35:10.542 - 01:36:01.930, Speaker A: That's our best attempt at saying that here's the grade of like service which has gone through all this kind of vetting and we want to do our best in guiding that and bring best of the community members into that. There's going to be a permissionless tier which we will say is don't use at your own risk, it's extraordinarily risky, whatever. And we will see. Basically what happens is risk stratification, which is stakers are usually like low risk staking right among all the family of DeFi, Djens and others. Stakers want stable long term yield. So that's the kind of people who are participating in this economy or they want to support the ethereum ecosystem and want to contribute their own decentralization to it. So we basically kind of expect that to be like a very high grade, low risk tier.
01:36:01.930 - 01:36:17.320, Speaker A: But there'll also be like a free tier because if we don't enable it, somebody will enable it. And there is an emergent economy there that the only thing that we can do is to educate. And you two are at the top of that game.
01:36:17.850 - 01:36:43.174, Speaker B: I appreciate you saying that, Sriram. We certainly try. But the only way we move forward is honestly with conversations like this where we're all we're doing is we're just airing our education and putting that out in podcast form. The other thing I do to get educated is I read posts by this guy named Vitalik, Buterin he's pretty smart. I don't know if you've heard of him. He wrote a fantastic post. I think it was fantastic.
01:36:43.174 - 01:36:55.390, Speaker B: I'm still sort of trying to walk through the implication of what he was trying to say and what this means. But it was a post entitled don't overload ethereum consensus. I'll read a few things from it over the years.
01:36:55.460 - 01:36:56.900, Speaker C: Did you make him write this?
01:36:58.710 - 01:37:55.402, Speaker B: I feel like it. So Vitalik says this in the post. Over the years there have been a number of ideas, usually at the thought experiment stage, to also use the ethereum validator set and perhaps even ethereum social consensus for other purposes. One of those other purposes he mentions is restaking. He also mentions Eigen layer and Eigen layer feels much more beyond the thought experiment stage. Okay, this is going to mainchain type of stage and he says the purpose of this post will be to explain in detail the argument why, in my view, a certain subset in italics, certain subset of these techniques brings high systemic risk to the ecosystem and should be discouraged and resisted. A certain subset of techniques, maybe like restaking, that use the ethereum validator set ethereum social consensus for another purpose should be discouraged and resisted.
01:37:55.402 - 01:38:01.320, Speaker B: I'm curious, what do you think Vitalik was saying in this post? What was your reading of this post?
01:38:02.010 - 01:38:54.626, Speaker A: Yeah, I think the title do not overburden ethereum consensus. My read of the actual article is do not overburden Ethereum's social consensus. And essentially it is creating this layering principle. What is the concerns of the state and what's the concerns of the free market? Right. And Ethereum had to go through this growing pains, like very early in its life, at the application layer, the application layer, you had things like the Dow hack and how know the social consensus of Ethereum respond to this. And one of the very important things that Vitalik and others had to do is do this one time thing where, you know, we're going to revert this, but only for this time. It's not going to happen again and again and set a boundary and a shelling point that people don't assume that they can take excess risk and then externalize it back to the protocol.
01:38:54.626 - 01:39:10.780, Speaker A: The way I think about it is you guys talk a lot about this like banks, right? Banks go and take risks and they may crash, and if they crash and burn, they're going to come to the government and say, hey, bail us up, 2008.
01:39:11.230 - 01:39:14.030, Speaker B: That's exactly what happened. Too big to fail.
01:39:14.930 - 01:39:22.910, Speaker A: Too big to fail. We also heard that in the crypto space, if you remember somebody, we're going to be too big to fail.
01:39:23.490 - 01:39:24.480, Speaker C: Those words.
01:39:25.990 - 01:40:10.554, Speaker A: But the thing is, I think basically I read the article as basically saying, hey, now that we're going beyond applications, now that we are talking about raw, decentralized trust being supplied, I want to make it clear, or at least Vitalik's wanting to make it clear what aspects of decentralized trust may be usable and what is not usable. And he's basically saying social consensus is sacred. Don't touch it, don't signal that. Oh, if something happens in ABCD protocol, I have the backing of Ethereum and he doesn't single out restaking. I think it's true for things like layer twos. So you can't say, oh, I'm a big layer two. If I fail, then Ethereum is going to fork around my failure.
01:40:10.554 - 01:41:12.994, Speaker A: If you're a big application, like if you're a uniswap, if you're a maker, because this has already been said for the applications, it doesn't have to be spelled out. But it's the same principle if you're a big DAP on top of Ethereum, if you're a big stable coin, if there's a failure, we're not going to fork around you. Same thing for restaking, if you restake and if your restaker said and he gives these examples where we've internalized all this in internal discussions with both EF, but also reading all of the things that Ethereum researchers have written over the years, the idea that you don't want to fork. So one of the issues that could happen when social forking would be triggered is a lot of honest parties lose their money in a way that they didn't anticipate. And one way you might not anticipate is if you slash nodes for failures of disagreeing with the majority. In the normal mode, you assume that the majority is right. And if you say that whenever you disagree with the majority, I'm going to slash you.
01:41:12.994 - 01:41:55.678, Speaker A: Let's say I build an oracle and say that, hey, anybody that disagrees with the majority is going to lose their eat, right? And then now what could happen is a lot of stakers who opted in may basically say that a majority is malicious and now like a minority, which is honest, gets slashed relative to the majority. And then everybody's like, oh my God, I trusted the majority and it's creating these problems. Now you need to go for keat. So those are the kinds of examples where you don't want that to happen. In the same way, things like hacks smart contracts hacks. That's why we built in things like the slashing veto, which is a social consensus internal to the protocol rather than saying it's external to us. And ethereum has to fork around failures.
01:41:55.678 - 01:42:25.402, Speaker A: So that's how I read it, is as marking the boundaries of the layer. The ethereum core consensus, the social consensus is reserved for core protocol functions. And like I mentioned, the core protocol function for which we need social slashing is censorship. Other than that, we don't need social slashing for anything. Everything is algorithmic. Maybe if there's a failure in Get or like all the consensus layer clients or something like that, there is a possibility. But we should not be using this.
01:42:25.456 - 01:42:31.206, Speaker B: Nuclear power for anything that's Italic's post is no bailouts. No bailouts.
01:42:31.238 - 01:42:34.718, Speaker A: That's the shortest summary possible. I agree with that completely.
01:42:34.804 - 01:43:19.162, Speaker C: I think your answer to this is the same. It's like, hey, if you loaded up all those mods and your computer crashed that's on you, that does not go back to the server. And that's the same thing that Vitalik saying in his article is like, okay, it's fine that your server crashed because that's the choice that you made, but the buck stops at extending that back to the main hub. And that is simply something that I think you Sriram are saying, like, well, it doesn't matter if they load up all the mods because so long as we follow through on Vitalik's post and accept that, hey, there's no bailouts. If we accept that there's no bailouts, you can load up all the mods that you want because all the consequences are on your machine or on your ETH stake. I think your answer to these things are the same, just articulate in two different ways, is that right?
01:43:19.296 - 01:43:59.158, Speaker A: I think that's correct. And we've been talking to the EF researchers over the last one and a half years, and this is the first thing Dankra told me. Like one and a half years back is don't overload social consensus, do anything else. Once you said it, it's going to happen. It's much rather that somebody who cares about this ecosystem do it than somebody who doesn't. But I think the other risk that was not necessarily mentioned in Vitalik's article is things like over financialization of native restaking. So things like you're going to draw a loan against the collateral that you're using.
01:43:59.158 - 01:44:33.620, Speaker A: So basically Eigen layer is not a DeFi protocol, right? We want to supply validation services. We are not supplying DeFi services. So what it means is you're not going to be able to take out a loan against your collateral position or whatever kinds of things. And it's because it's not going to be onboarded in the permissioned committee. And people wrote things like, oh, how is she? I'm going to mediate, I'm not mediating this. There's a slashing veto and the slashing veto kind of onboard services on which set of services are low risk. And it's very important that this happens.
01:44:33.620 - 01:45:06.734, Speaker A: It's possible to build financial applications on top, but with a layer of buffering. So imagine you build like a liquid staking protocol. So just take ethereum, right? Like a liquid staking protocol. You take a liquid staking token and then you go and do something in a lending market or whatever. Any issue happening there doesn't affect the core staking protocol because it's buffered by the liquid staking. So that could be liquid staking on top of something like Eigen layer and then that buffers. So there are layers that are going to be built, but what is built at what layer is very important.
01:45:06.734 - 01:45:37.318, Speaker A: And so in our layer, we are building validation as a service. That's the core thing. And we have basic rules. Use only objective slashing, use a slashing veto. Slashing veto has power to onboard. If you're using anything which is not objectively verifiable, just use decentralization, don't use slashing. Don't assume that you're going to be bailed out by ethereum social consensus where if you trust a majority of the ethereum nodes to be honest, and they are not for whatever reason, you're on your own.
01:45:37.318 - 01:45:41.414, Speaker A: That's the trust model and that's how Eigenvalue is going to work.
01:45:41.452 - 01:46:15.582, Speaker B: Yeah, the no bailouts point is, I think, a very valid one. And yet I am also comforted by the fact that there have been many candidates on Ethereum for the Too big to fail designation in the past. I remember when MakerDAO was one of those and Dai was. I remember another one, know said that anyone who controls USDC will be kind of the kingmaker of a future ethereum fork. Another candidate for this is Lido. Another one is the various exchanges, the binance where the coinbase is the Kraken. Now it's restaking as kind of a candidate fork trip.
01:46:15.582 - 01:46:22.150, Speaker B: I'm strangely comforted that there are so many candidates for too big to fail in all separate categories.
01:46:22.970 - 01:46:27.080, Speaker A: That's a really good point because all of them have to agree to actually do anything.
01:46:28.190 - 01:47:04.340, Speaker B: They will agree, which is also a contributing fact to this decentralization. So, Sriram, this has been an exciting journey and really understanding what restaking is, I think we've got to tie this off with understanding where Eigen layer is as part of the deployment process. So when you guys launching, is there going to be a token? We've talked about using ETH for security, but we've also talked about use cases for a token, maybe somewhere else. So tell us about launch date for mainnet and token. And then I've got one last question for you and then we'll close on that. But what are the specifics when you guys go on main net?
01:47:05.110 - 01:47:34.494, Speaker A: Okay, so if you think about the structure of our marketplace, it's three sided. We have stakers people who are putting in the ETH. We have node operators who may be the same as the stakers, may be different. You could be your own node operator or you could delegate to somebody else. And then we have services, which is people building bridges, oracles, whatever, other kinds of things on top of the system. And we have three sides to the marketplace. So we are basically going on a phased roadmap where we launch one site at a time.
01:47:34.494 - 01:48:08.866, Speaker A: We're starting with Staking. You just restake, you cannot do anything with it, but you understand what is going on with the ecosystem. As now new stake onboards into Ethereum, they have a one time opportunity to set the withdrawal credentials. When you stake is when you can set the withdrawal powers. So people who want to participate in the Eigen Layer ecosystem may want to restake in the beginning. So the three phases are like turn on stakers, then turn on delegation and node operators and then turn on actually working services on the main net. And so there is a same set of phases going on in the testnet.
01:48:08.866 - 01:48:28.254, Speaker A: We're already on a public testnet on Gorely with adjust restaking. So there'll be a corresponding thing on the main net. Then there is a delegation. There'll be a delegation on the main net. Then there are services, services on the main net. So that's our launch roadmap. And we expect this to take like the first version is going to be between Q Two and Q three.
01:48:28.254 - 01:48:30.126, Speaker A: And then every quarter after, maybe the.
01:48:30.148 - 01:48:33.840, Speaker B: Next phase gets on board starting yeah, okay.
01:48:34.290 - 01:49:20.480, Speaker A: The first phase is going to be between Q Two and Q Three of this year. And then every phase is like a quarter after, something like that. Basically we expect the whole system to be functioning once all these three sides are onboarded. So in terms of whether we have a token, we don't have a token. The design philosophy in Eigen Layer is we start with something very specific, performing a certain role. This protocol, think of Eigen layer as a protocol. It's designed with very similar aesthetic to Ethereum in the sense of try to make the protocol neutral, try to make all the decisions pushed to the agents.
01:49:20.480 - 01:49:51.740, Speaker A: For example, which liquid staking tokens do we allow? We allow all liquid staking tokens. It's up to the services to figure out which tokens they want to respect and so on. So there's a lot of agency pushed out to the services rather than very specific decisions being made at the protocol level. But as the protocol evolves and we understand the role for governance, we may have to think about how to create a decentralized governance. So we are committed to a progressive, decentralization roadmap rather than to decentralization on day one.
01:49:52.510 - 01:50:30.558, Speaker B: So, Sriram, as we wrap this up with kind of the last question, I want to bring this round circle to where we started, which was kind of your arc and how you really got interested in crypto and what you're here on earth to go do. And something you said earlier was like upgrading humanity. Maybe that's the reason you got into computational genomics, upgrading humanity on kind of the genetic level. And that would apply maybe to individuals and groups. But then you discovered crypto, and that was really an opportunity to upgrade humanity as a social technology on the social level, to allow us to coordinate across large groups. Even better. It's funny you mentioned the book Sapiens.
01:50:30.558 - 01:51:20.982, Speaker B: I know david and I have mentioned it many times on the episode. That was actually a very salient book for me when I was getting into crypto and kind of understanding the why, the impact that this technology could actually have. I want you to imagine five years from now where we have restaking in eigen layer. restaking as a core primitive, is now successful. What does that do to ford the goal of upgrading our social technology? I think people outside of crypto right now, after 2022 deservedly so. I understand their perspective are saying, what is crypto doing for the world? Because I saw a whole bunch of ponzi schemes, and I saw this guy named SBF making out with like $15 billion. What are you guys actually doing for the world? And right now, of course, their bear case is nothing.
01:51:20.982 - 01:51:41.790, Speaker B: Crypto is meme, coins and scams, and there's nothing lasting there, which I think is bullish for builders like us who see something more. So take us five years in the future. restaking is a core primitive. We are able to export trust from our blockchain networks in different forms, not just block space. What does the world look like? What have we accomplished? What's on our crypto resume?
01:51:43.010 - 01:51:45.834, Speaker A: Can I take you 20 years forward? That's the timescaler.
01:51:45.882 - 01:51:46.800, Speaker B: Go for it.
01:51:48.930 - 01:52:13.910, Speaker A: So let me start with the core principle. One of my very fundamental principles is non zero sum games. If you think about a zero sum game is where one has to win. For one to win, the other has to lose, right? And a non zero sum game is where both of us can win. There are really only two kinds of non zero sum games. Number one is cooperation. Like we coordinate together.
01:52:13.910 - 01:52:42.734, Speaker A: Like you and David and Ryan could have gone their own ways, but coming together they produced this really amazing podcast. So coordination is one example of a non zero sum game. The other non zero sum game is innovation. Innovation is I take sand and I make silicon out of it. I take air and I make spectrum out of it. All of these amazing things where it's nothing and then it becomes something. These are the two fundamental things.
01:52:42.734 - 01:53:21.862, Speaker A: And one of my kind of life metrics is maximize the surface area of non zero sum games, right? Like the more non zero sum games we produce, the more net output. Otherwise it's all like I lose and you win or you win and I lose or somebody else loses. It's not fun. So how do we maximize the surface area of non zero sum games is we have to maximize the ability to cooperate. The ability to coordinate. What are some examples? I think again, some of these things are best seen, like when we take back 2000 years. How does soy look? Like, imagine you're living in your own tribe.
01:53:21.862 - 01:53:56.994, Speaker A: There are certain virtues of a tribe which we're missing in the modern world. For example, I know my teacher. Like, I build a one is to one relationship with my teacher. And if my teacher is not doing well and I don't take care of my teacher, that's shame on me, right? And that's an example of a one is to one long term relationship between a teacher and a student. And that's broken in the modern world. Same thing with the farmer and the consumer or all kinds of different relationships. But the problem with those kinds of tribal relationships is they're one is to one they're long term.
01:53:56.994 - 01:54:33.282, Speaker A: Which is awesome. But you can only form it within the small group of people that you trust, right? Otherwise there's no long term. There's no way to exchange goods and information and learn from people who are outside your small group. So what we've done in the world is to move from that to a very decent, very multitude of people contribute to our education. A multitude of people contribute to our health. The multitude of people work together in producing our supply chain and all of these things. But the way we've structured it is by pricing out each transaction into money.
01:54:33.282 - 01:55:09.630, Speaker A: That's what has basically made this trustless, right? Like, I go and learn something from somebody from a piano teacher and I pay him like $100 an hour, whatever. So we price out each transaction. But what that does is break the long term alignment, right? To have long term alignment, we need two things. We need long term memory and long term enforcement. You need a system which remembers who your teacher was when you were in your. Fourth grade and who inspired you into going into this direction. You need to be able to make a commitment to that teacher that hey, if I do well, I'm going to pay you x long term income shares.
01:55:09.630 - 01:56:13.838, Speaker A: When you're going and dealing with a doctor, you need to be able to engage in a way that essentially aligns your long term faiths much more tightly than the medical system does today. When you're engaging with the global supply chain, you have to understand where effects come from and go back. So essentially I think of this as broadening the system of karma, like the ability to attribute and karma itself is a system of memory and enforcement, right? It's a theological, philosophical concept that if you do good things, good things will come back to you. But you need a system to measure, track all these things that you actually did. And things like Staking and Slashing are like some simple examples, but not the only thing that we want to produce. Okay? So that's on the cooperation side, the cooperation velocity can be increased massively when you have global systems of memory and global systems of enforcement. On the other side, if you think of what enhances innovation, innovation is enhanced when it becomes permissionless.
01:56:13.838 - 01:56:58.850, Speaker A: When I can build on top of your things without your permission because you don't need to know who I am, I can just come up with some new things and build it. And you don't need to trust me because we are all interacting with each other on top of this, like trust engine, which is the blockchain, innovations get decoupled from trust. Trust is underwritten from the blockchain and innovations decoupled and underwritten at a different layer that lets innovations compose with each other. So I see essentially crypto as turbocharging the two core reasons why we can have non zero sum games or in other economic terms, why we have growth in this world. And I think by working relentlessly towards this goal, we can do something really fun together.
01:56:59.000 - 01:57:31.500, Speaker B: That is a very comprehensive, very cool answer. And I like that 20 year vision. I think if we can introduce the world to how crypto is scaling non zero sum games, cooperation, scaling, reciprocity might be another word for karma. And scaling innovation and permissionless tech, that certainly would be something would be quite transformational. So Sriram, we are, I guess, maybe the first few steps of a thousand mile journey, but here we are with this concept called restaking. Thank you so much for coming on Bankless and educating us about this today. We appreciate you.
01:57:32.110 - 01:57:38.222, Speaker A: Thank you so much, Ryan and David. This has been such an awesome opportunity and a privilege to talk to the Bankless listeners today.
01:57:38.276 - 01:57:49.682, Speaker B: Here we go. Bankless listeners, some action items for you today. We mentioned a few things to go read. One is don't overload the consensus layer. That's a post from Vitalik. We'll include that a link in the show notes. Of course I gotta include the book.
01:57:49.682 - 01:58:02.946, Speaker B: Link Sapiens from Yuval. Noah Harare is one of my favorite books. It was mentioned. So any excuse I can do to inject this in the show notes I'll take it. Gotta end with this risks and disclaimers. Of course, none of this has been financial advice. Crypto is risky.
01:58:02.946 - 01:58:16.642, Speaker B: We don't know what the future ETH yield will bear. Nor all the restaking protocols that you could ape into. But be careful out there. We are headed west. This is the frontier. It's not for everyone. But we're glad you're with us on the bankless journey.
01:58:16.642 - 01:58:37.370, Speaker B: Thanks a lot, Sam.
