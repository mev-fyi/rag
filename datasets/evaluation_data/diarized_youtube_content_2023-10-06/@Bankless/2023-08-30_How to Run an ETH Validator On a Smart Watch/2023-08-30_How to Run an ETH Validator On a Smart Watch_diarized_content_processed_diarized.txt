00:00:00.090 - 00:00:25.640, Speaker A: Hey, bankless nation. I'm very excited about the episode today. David is out, and this episode gets technical at times. So I have ETH researcher Justin Drake, whom I'm sure many of you know, he's co hosting with me today. Some context as we get into this episode. So we did a previous episode a few weeks ago called The Sci-fi Roadmap to Ethereum. And in that episode, Justin Drake described the end game for Ethereum, and he said this we snarkify everything.
00:00:25.640 - 00:00:51.654, Speaker A: In today's episode, we explore exactly what that means and how we do it. How do we snarkify everything? Our guest today is Brian Redford. He is the co founder of what might be the world's first Type One Zke EVM. And if you don't know what that means, that's fine. Neither did I. As we're getting into this episode. And it turns out that building a type One Zke EVM is an important part of delivering what Justin Drake called an enshrined roll up inside of Ethereum.
00:00:51.654 - 00:01:19.382, Speaker A: More on that in just a minute. But before we get in, just want to mention something quick from our friends and sponsors over at Safe. Safe is the multisig wallet we recommend for crypto. And you've heard us talk about smart contract wallets many times, how they're going to ten x the crypto wallet experience. We definitely believe that's true. And Safe recently proposed their modular, open source Safe core protocol as a standard for the industry so that we can all move forward in transition to the smart contract wallet future. And they want you to check it out.
00:01:19.382 - 00:01:49.294, Speaker A: So there's a link for the devs in the show notes. Safe really believes this is an opportunity to create a unified standard to catapult smart contract accounts onto the EVM. The standard itself is unapinionated and vendor agnostic and maintains interoperability and smart contract diversity. So go check it out. And also to check out, safe is organizing the first ever conference dedicated to smart contract wallets and account abstraction. That happens the second week of December. There'll be a link in the show notes to go register for that as well.
00:01:49.294 - 00:02:42.574, Speaker A: So thanks to Safe for building into the frontier. All right, speaking of the frontier, back to Ethereum enshrined roll ups. So why are we having this conversation and why now? The compute era scaled with Moore's Law, but the Blockchain era scales with something differently. It scales with cryptography, specifically cryptographic breakthroughs like ZK snarks. And all of this ZK snarks stuff, the snarkifying of the EVM, it's all happening a lot faster than any of us previously thought. It's happening so fast that a project called Risk Zero just came on our radar last week and they've already produced a working version of the world's first ZK snarkified Type One EVM. What kinds of things could this unlock in the future? Why is this important? Well, what if we could convert an optimistic rollup to a ZK rollup? What if we could upgrade ethereum's layer one from a single threaded EVM model to a multithreaded EVMs, so that compute was virtually limitless and free.
00:02:42.574 - 00:03:27.210, Speaker A: What if ETH validators themselves had the ability to run from something as small as a smartwatch? All of these are possible unlocks with this technology. This is crazy cool, deep stuff down the crypto rabbit hole we go. And it gets technical at times, but it's absolutely worth holding on for the ride. This is crazy cool stuff, and we're going deep down the rabbit hole today. And this gets technical at times, but I think it's absolutely worth it to hold on for the ride, because this is key to understanding how blockchains actually work and how they scale and in. So understanding I think this type of thing can help you avoid bad investments and dead ends, and there are a lot of those out in the space as well. We're going to get right to the episode with Brian and Justin, but before we do, I want to thank the sponsors that made this possible, including our number one recommended crypto exchange for 2023 Kraken.
00:03:27.210 - 00:03:28.094, Speaker A: Go check them out.
00:03:28.132 - 00:04:03.434, Speaker B: Kraken Pro has easily become the best crypto trading platform in the industry, the place I use to check the charts and the crypto prices, even when I'm not looking to place a trade. On Kraken Pro, you'll have access to advanced charting tools, real time market data, and lightning fast trade execution, all inside their spiffy new modular interface. Kraken's new customizable modular layout lets you tailor your trading experience to suit your needs. Pick and choose your favorite modules and place them anywhere you want in your screen. With Kraken Pro, you have that power whether you are a seasoned Pro or just starting out. Join thousands of traders who trust Kraken Pro for their crypto trading needs. Visit pro kraken.com
00:04:03.434 - 00:04:03.994, Speaker B: to get started.
00:04:04.032 - 00:04:04.474, Speaker A: Today.
00:04:04.592 - 00:05:07.450, Speaker B: Mantle, formerly known as Bitdao, is the first dowled web3 ecosystem, all built on top of Mantle's first core product, the Mantle Network, a brand new high performance ethereum layer two, built using the Op stack but uses Eigen layer's data availability solution instead of the expensive ethereum layer one. Not only does this reduce Mantle network's gas fees by 80%, but it also reduces gas fee volatility, providing a more stable foundation for Mantle's applications. The Mantle Treasury is one of the biggest Dow owned Treasuries, which is seeding an ecosystem of projects from all around the web3 space for Mantle. Mantle already has subcommunities from around web3 onboarded, like Game Seven for web3 gaming, and Bybit for TVL and Liquidity and Onram. So if you want to build on the Mantle Network, Mantle is offering a grants program that provides milestone based funding to promising projects that help expand, secure and decentralize mantle. If you want to get started working with the first Dowled layer Two ecosystem, check out Mantle at mantle XYZ and follow them on Twitter at zero xmantle. Arbitrum is accelerating the Web Three landscape with a suite of secure Ethereum scaling solutions.
00:05:07.450 - 00:05:46.534, Speaker B: Hundreds of projects have already deployed on Arbitrum One. With flourishing DFI and NFT ecosystems, arbitram Nova is quickly becoming a Web Three gaming hub. And social DApps like Reddit are also calling Arbitrum home. And now Arbitrum Orbit allows you to use arbitrum's Secure scaling technology to build your own layer three, giving you access to interoperable customizable permissions with dedicated throughput. Whether you are a developer, enterprise, or user, Arbitrum Orbit lets you take your project to new heights. All of these technologies leverage the security and decentralization of Ethereum and provide a builder experience that's intuitive, familiar and fully EVM compatible. Faster transaction speeds and significantly lower gas fees.
00:05:46.534 - 00:05:59.726, Speaker B: So visit Arbitrum IO, where you can join the community, dive into the developer docs, bridge your assets, and start building your first app with Arbitrum Experience web Three development the way it was always meant to be secure, fast, cheap and friction free.
00:05:59.828 - 00:06:11.262, Speaker A: Bankless Nation I am super excited to introduce you to Brian Redford. He is the co founder of a Zke EVM project that we're going to find out a bit more about on today's episode called Risk Zero. Brian. Welcome to Bankless.
00:06:11.406 - 00:06:13.138, Speaker C: Thanks. Glad to be here.
00:06:13.304 - 00:06:21.654, Speaker A: Also excited to be joined yet again on Bankless by Justin Drake. He's an Ethereum researcher and repeat Bankless guest. Justin, how you doing?
00:06:21.852 - 00:06:27.606, Speaker D: I'm doing great. Thanks for having me again. But I guess this time maybe as a host asking some technical questions. Yeah.
00:06:27.628 - 00:07:02.638, Speaker A: How's it feel? The tables have turned. So Justin, I'm going to tap you in as my co host today. So David is out and we're going to talk about the next generation Zke EVMs. So I think we're talking to Brian about the world's first maybe ZK EVM. That's a type one Zke EVM, and I'm not even sure the words that I'm saying or what they mean, so we'll absolutely need to define that. But David's out right now, so Justin, you're going to tap in and help me with this. I feel like this is a continuation, though, of a conversation that you had with him on ECC.
00:07:02.638 - 00:07:47.538, Speaker A: And I think Bankless listeners may have listened to an episode entitled Ethereum's Sci-fi Roadmap, or The Sci-fi Roadmap to Ethereum in which there was this really interesting part. And I love that episode, by the way, where you were describing the ability of us in the future of Ethereum to snarkify the EVM on kind of mainnet on the base layer. And that sounded really interesting to me. And I think that ties into the conversation that we're about to have. So tee this up for us, if you will. Justin, as a continuation on that conversation. I know we're talking about Sci-fi Ethereum future stuff, but what does it mean to snarkify the EVM and how does that tie into the conversation we're about to have with Brian today?
00:07:47.624 - 00:08:12.262, Speaker D: Right. So, big picture. We're actually going to snarkify all of Ethereum. And there's two big components that need to be snarkified. One is the EVM, which is this virtual machine which processes Ethereum transactions. And then the other part is the beacon chain. Now, once we've snogified these two things, we'll be in a position where compute won't ever be a bottleneck for Ethereum.
00:08:12.262 - 00:09:11.370, Speaker D: So it means that, for example, as a validator, you won't have to really have beefy CPUs, so you'll be able to be a validator on your smartwatch. If you're building bridges between L ones, you'll be able to have another L one verify the state of Ethereum without having to redo all the computations themselves. It also has implications for light clients for what we call enshrine rollups, which are super high security rollups. And when the word type one EVM come to mind, type one zkvm. It really kind of gets me excited as a researcher because it was kind of a piece of Sci-Fi engineering that was thought to be five to ten years into the future. But it looks like, well, there's several teams working on them. There's, for example, Tyco, and there's risk zero now.
00:09:11.370 - 00:09:29.474, Speaker D: And it looks like the engineering will just be ready so much sooner. So we're starting to see the light at the end of the tunnel. And that has some big implications in terms of applications for Ethereum both at layer two, but also what I'm excited about, which is the layer one.
00:09:29.592 - 00:10:38.338, Speaker A: So what you just described here, Justin, is kind of the Holy Grail. And I still want to spend some more time with you right here, just fleshing this out and making sure that we understand this going to the episode because it sets the context for the rest of the conversation with Brian and risk zero here. So the light at the end of the tunnel, or what I just referred to as the Holy Grail snarkifying all of Ethereum. What this means is we get to use the Spooky math, the crypto magic ZK math that you described so eloquently many times on the Bankless episode. And what we get, the prize that's held out to us is the ability, first of all, you said to validate be a validator on something as small as like a smartphone or an Apple Watch. So okay, is that really what we're talking about? So, of course, one of the end goals and the end goal, the entire purpose of Ethereum is for it to remain decentralized. And that means, ideally, anybody with a basic consumer level computer can validate transactions on the Ethereum main net.
00:10:38.338 - 00:10:54.960, Speaker A: And right now the requirements for doing that are somewhat higher than just a smartphone or a smartwatch. But this will decrease the requirements, the hardware profile in order to validate transactions on the Ethereum Mainet and also to stake, is that what you're saying?
00:10:55.490 - 00:12:17.270, Speaker D: That's correct. So anytime you have a human that ends up wanting to interact with Ethereum, they need to interface through a full node. And there's some complications here because running a full node is not something that you can necessarily easily do on your phone and it's not something that the average individual would want to do and it's something that every single validator has to do if they want to become a validator. So there's this barrier to entry, and more often than not today for the vast majority of users, we end up patching this technical barrier to entry with some level of centralization. So for example, if you're using MetaMask, you're going to be connecting to infura nodes that are kind of running the full node on your behalf. And so there's some amount of trust that you as a user are placing into MetaMask. So once we have a type one zkvm, once we snockify the VM and all of Ethereum, we're going to be in a position where the user will be able to interact with Ethereum with much, much less hardware like a phone or a smartwatch will be able to get best in class access with best in class security, best in class latency, all with very, very little hardware.
00:12:18.270 - 00:12:26.620, Speaker A: Does this imply anything for a bandwidth as well? Will this decrease the bandwidth requirements or will bandwidth kind of become the constraint here now?
00:12:27.710 - 00:13:08.738, Speaker D: Right, great question. So consensus kind of solves two problems. One of them is execution and the other one is data availability. Snarks is kind of this magic technology that removes computation as a bottleneck within the context of consensus. And it turns out we have another magic technology for data availability called data availability sampling. Now, neither of these are really in production right now, but once we have both in production, you won't have to pay the cost of computation and you will have to pay a very minimal cost from the bandwidth perspective. So you won't even need to download the Ethereum blocks.
00:13:08.738 - 00:13:17.750, Speaker D: All you'll have to do is make these small queries for chunks of blocks and that's going to be enough to guarantee that you're on the canonical Ethereum chain.
00:13:17.830 - 00:13:29.600, Speaker A: So data availability sampling as well. That's a core upgrade of what I think people are calling dank sharding as well. Not proto Dank sharding, as I recall, but dank sharding, which could occur later in the future.
00:13:30.690 - 00:14:10.582, Speaker D: Exactly right. So we're looking at technologies two, three, maybe four or five years into the future, which in a way will transform accessibility of Ethereum for users. And in the end game, accessing Ethereum will be just as easy as accessing any other website. And you'll have guarantees. Just like on a website today, you have this cap lock, sorry, this lock. And Https, you'll have a similar lock saying you're really connected to the real Ethereum and you'll have to have done almost no work and you will have to download almost no data, trust nobody.
00:14:10.646 - 00:14:16.554, Speaker C: Also, unlike the current kind of lock where you actually have to trust the sort of signature verifiers or the signature.
00:14:16.602 - 00:15:23.220, Speaker A: Issuers ZK technology is the thing that makes this all possible. What's very interesting is I know there are people who talk about kind of like compute scaling in blockchains via Moore's Law and that's true. But where we really get kind of the massive scalability is more with cryptography breakthroughs. That is something I've learned as part of exploring the roadmaps and being in this industry for many years now is these cryptographic breakthroughs are the key sort of step function breakthroughs that allow us to actually scale this technology. One other quick question for you Justin, before we get to Brian to kind of describe what he's actually working on, what we're doing here, what does this imply for maybe scalability on Ethereum main net? So we talked about lowering the compute requirements to be a validator which is fantastic. That is a further decentralization unlock. How about transactions per second on the Ethereum layer One main net? Does this have any impact on that as well?
00:15:23.910 - 00:16:17.010, Speaker D: Fantastic question. So once we've snarkified the EVM we'll be in a position where we can greatly increase the gas limit and potentially even remove the gas limit for computation specifically. And the reason is that the gas limit is an anti denial of service vector whereby when you receive a block you want to be able to fully verify that the block is valid on the order of 1 second. And so if there's too many transactions in that block then it's going to take more than 1 second to validate. But the magical thing about Snocs is that the verification time of a Snark is on the order of one millisecond. And so you can take a block that's kind of arbitrarily large with arbitrarily many transactions and arbitrary much transaction execution and know that the execution is correct within a constant amount of time which is only one millisecond.
00:16:17.350 - 00:16:53.870, Speaker A: So what does that imply then? So if Ethereum right now supports like 16 transactions per second and we're scaling that out via roll ups and last time I checked on L2 beat if you count all of the kind of roll ups combined in that we're about five x 16 transactions per second, something like that. And that's the entirety of Ethereum right now. We're not handling visa level throughput at this point in time, it's safe to say. But what you just said about kind of finality or confirmation times the millisecond level validation verification here what does that imply for main net throughput Justin?
00:16:54.770 - 00:16:55.086, Speaker C: Right.
00:16:55.108 - 00:18:00.790, Speaker D: So what it means is that there's going to be a partial comeback of the layer one. So I think the spotlight is going to shift to L2 S for the next few years and there's going to be a lot of experimentation, a lot of innovation and the layer one is really going to be lagging because we're extremely conservative and we're frankly kind of slow for good reasons. But once we are able to catch up from a technological standpoint with the L two S. Well, the L ones will also have some of the similar powers that the L two S provide. And so the L one will to an extent be able to scale out one of those superpowers will mean that we can increase the gas limit. And this is something that's kind of explicitly put in Vitalik's roadmap diagram. But another thing that we can do, and I think this is something that Vitalik will add in maybe the next iteration of the diagram is that we can have an opcode within the EVM which allows you to verify validity proofs SNOX of EVM blocks itself.
00:18:00.790 - 00:18:49.670, Speaker D: So kind of the EVM is aware of itself and knows when another EVM block is valid. And what this allows us to do is have multiple instances of the EVM because ultimately you can think of the EVM as being this single threaded CPU or virtual machine. So it can only run on one core just to simplify. And so there's this inherently sequential computation that's going on, which is a bottleneck for scalability. The EVM will never be able most likely to do a million transactions per second just because we have this inherent bottleneck. And so the way that we scale out once we've reached all the gains, by increasing the gas limit is by having multiple instances of the EVM. So this is going to be EVM zero and then EVM one, EVM two.
00:18:49.670 - 00:18:58.070, Speaker D: And the cool thing is that once we have this upcode, anyone can programmatically kind of create a new instance of the EVM.
00:18:58.590 - 00:19:14.240, Speaker A: Wow. So this would become kind of ethereum mainnet, the layer one, kind of our multicore moment. Then what's kind of the analog is it from 46 to Pentium? I don't know what we're doing here.
00:19:14.770 - 00:19:40.310, Speaker D: Yeah, I think that's a good analogy. We're going multicore. So for a very, very long time we've had these CPUs which were just one core. And then what we did is we ramped up the frequency of the CPUs. So it was like hundreds of megahertz and then 1, then 1.52, and then nowadays we have 3 GHz CPUs and you can't do like 30. Reason is that the transistors just don't turn on enough fast enough.
00:19:40.310 - 00:20:14.542, Speaker D: So there's this sequential bottleneck. And so the way that you scale is by scaling out vertically sorry, horizontally, by having multiple cores working in parallel and this is exactly what we can do once we have this upcode. And the term that I like to use is enshrined roll up. So once we've snarkified the canonical instance of the EVM that we have today, we're going to have one enshrined roll up. And then once we add this upcode, we'll allow anyone to create as many enshrined rollups as they want.
00:20:14.676 - 00:21:06.690, Speaker A: Okay, well Brian, you've been sitting here waiting very patiently as Justin eloquently described the light at the end of the tunnel. This kind of Holy grail. And I think that you are working on that now. You're not working on that within the bounds of sort of the Ethereum foundation and applying that to Ethereum mainnet. But you've got this project called Risk Zero that is actually pursuing the technology that is required to get us to the Promised Land and everything that Justin just described. So, Brian, I'm wondering if you could tell us maybe first I would love to get your reaction to what Justin just said and anything that that maybe triggers in your mind and then we'll talk about what you're building out at Risk Zero and this platform that you're calling Zeth right now. But first of all, any reaction to what Justin just said?
00:21:06.840 - 00:21:36.534, Speaker C: Yeah, I mean, it's pretty clear that with all of the advances that we're making in cryptography, as you said, that the capabilities of Ethereum are just going to continue to compound and compound probably much faster than we would have seen or thought of even possible. So I think the future is very bright given all of the advances that are being made across the entire space. And this is just one key in a very large puzzle. So very exciting.
00:21:36.662 - 00:22:09.026, Speaker A: Okay, well, so tell us what you're building then, out on the frontier, which again, looks a little Sci-Fi from our perspective, but seems to be at the same time also happening faster than many would have imagined, at least many years ago. So your company is called Risk Zero and you've got, I believe, this platform called Zeth. And we described this as a type one Zke EVM. And this goes kind of beyond what I even know I'm describing. So what is Zeth and what is a type one Zke EVM?
00:22:09.218 - 00:22:56.570, Speaker C: Yeah. So Zeth is an EVM implementation that's actually based on ref, which is like geth an implementation of the EVM. However, it's one that's built using rust. And a type one zkevm is simply one that can actually process the full nature of Ethereum and an entire block and prove effectively snarkify an actual Ethereum block as opposed to some of the other l two S that you have out there that have made various compromises in order to create a more provable EVM. Type One EVM makes no compromises and sticks to the original Ethereum specification, but still produces this snark that succinctly verifies that the EVM computation was run correctly.
00:22:56.750 - 00:23:17.500, Speaker A: So the other ZK EVMs that we've talked about many times before, the ones that Polygon are building, the ones that matterlab is building, the one that scroll is building, you'd differentiate that and you'd say that's not a type one EVM because it's a little bit different in some way. Is that correct? And how is it different exactly?
00:23:18.430 - 00:23:30.240, Speaker C: They're all different in different ways and they often change exactly how things get mercurized, how state's stored and they generally tend to implement all the opcodes. I don't know. Justin, do you want to expound upon that.
00:23:31.890 - 00:24:07.306, Speaker D: Yeah. So generally speaking, what will happen is that they will want a solidity developer and solidity code to be reused. That's kind of one of the main goals. And so they're going to re implement every single upcode. But under the hood, under the bonnet, they're going to be making some shortcuts to optimize things. And one of the prime kind of shortcuts is to change the way that the storage is mercury. So today we have what's called a Patricia Merkel tree, which is using this Ketchak hash function.
00:24:07.306 - 00:24:55.110, Speaker D: There's all sorts of technical terms just to say that the way that we handle storage is very much non Snark friendly. And so what these teams have done is they've just taken a completely different approach to authenticate and mercuryze the state. Another possible difference is changing the gas schedule. Because the EVM gas was designed from the perspective of CPUs. If a certain operation takes 100 nanoseconds and another one takes ten nanoseconds, then the first one should be kind of roughly ten times more expensive from a gas perspective. But the gas schedules don't translate very well to Snarkland. So you got to have a very, very cheap instruction on the CPU.
00:24:55.110 - 00:25:29.470, Speaker D: For example, doing a hash like Ketchak, that's extremely fast on the CPU. But if you were to do it in Snarkland, it's extremely expensive. And so in order to protect themselves from these denial of service attacks where someone can craft a block with lots and lots of Ketchup and basically mount a denial of service attack on a specific roll up, they've adjusted the gas schedule. So it's not exactly compatible with the EVM that we have today on mainnet at layer one.
00:25:29.560 - 00:25:54.270, Speaker A: So because of those changes, because of those, I guess, optimizations or differences, these type two Zke EVMs are not candidates to become an enshrined roll up, at least in their existing form, is that correct? And this a type one Zke EVM is closer to a candidate to becoming an enshrined roll up. Am I making that connection correctly?
00:25:56.210 - 00:26:50.858, Speaker D: Yeah, that's exactly right. But what I'll say is that oftentimes these are journeys, they start somewhere and then they incrementally become more and more compliant with the EVM. I mean, this even happened with optimistic rollups. At first they had these small modifications relative to the EVM UpCodes and then they said, no, we want to be exactly equivalent with the EVM UpCodes and this journey is going to happen for the Zke EVM roll app implementations, I believe. And part of the reason is that you get to benefit from a lot of tooling, from a lot of standards, from a lot of network effects. But the trade off here is that it's much, much harder from a technical standpoint. But what's happening and is kind of magical to see in front of our eyes is that the technology is improving at an extremely fast pace.
00:26:50.858 - 00:27:04.738, Speaker D: We kind of have an equivalent of moore's Law for Snark improvements and I don't know what it is, but it's something like, I don't know, improving by four X every single year. So give it a few more years.
00:27:04.904 - 00:27:07.960, Speaker A: Can we make a Drake's Law here, please? I want a law.
00:27:09.130 - 00:27:11.960, Speaker C: It's a Moore's law with another Moore's law on top of.
00:27:16.570 - 00:27:16.886, Speaker D: Okay.
00:27:16.908 - 00:27:57.480, Speaker A: Okay. So this is about the limit of my technical proficiency here and I'm wondering, Justin, if you could sort of what questions do you have for Brian here actually about how this works? So we're talking about this type one Zke EVM. We've fleshed out the rough contours of what this actually is, but I think this has an impact on a lot of things. On bridges we talked about enshrined roll ups, multi provers. There's the performance, conversation, security licensing type of conversation. Why don't you take some of the technical details here and maybe I'll come back and ask the dumb questions as they arise in my mind.
00:27:58.090 - 00:28:49.846, Speaker D: Perfect. Sounds great. But I guess I do have one non technical question, which is a little bit about context setting, which is that it seems like you guys were in stealth mode for a relatively long amount of time, maybe a year or two. And a few days ago when you made the announcement, vitalik was messaging me and it's like, who are these Risk Zero people? Are they doing good work? Can they be trusted? Et cetera, et cetera. And if Vitalik is not aware of you guys, maybe the listener is also not aware of you guys. And so I guess my question is what prompted you in the first place to build a Zkvm? Normally when you build Zkvm is because you're aiming towards a roll up. But my understanding is that you're not aiming towards a roll up.
00:28:49.846 - 00:28:52.694, Speaker D: So what is the background mean?
00:28:52.732 - 00:29:34.462, Speaker C: So RISC Zero got started with this idea of building out general purpose ZK capabilities. This is the ability to actually prove any computation. So not just the EVM like an existing game. You could prove Doom, you could prove Linux. People are actually using this to prove the execution of Linux. So ECC, not this past one, but two years ago or two ECCs ago. I was talking about the fact that in my mind the best way to build Ckevm was to actually just take the code that people have already written and then run it in this sort of general purpose context because you don't actually need to then engineer all these hundreds of circuits.
00:29:34.462 - 00:30:20.290, Speaker C: So it basically reduces the amount of capital required to actually run an EPM and produces a world where the proofs that you're creating are very much in line with the clients that created them. I would say we've been thinking about doing this for a long time. It's just getting the sort of technical requirement, getting the technical capabilities over the line to the point where we could do this. We really just got. There like two months ago. So then as soon as that happened, we're like, okay, now we have to actually try to make the EVM real, the type one EVM. And it turns out it know, fairly straightforward once we got extra year of engineering done to get the sort of continuations and long running proof feature to work.
00:30:20.360 - 00:31:05.118, Speaker A: And Brian, this is maybe the flash of lightning that Justin is referring to because racerA just came across my radar last week as well and David was like, hey, I'm going to be out. He's at Burning Man actually. So I'm going to be out next week. Ryan, you should go talk to these people and see what's going on. And this is the Tweet introducing Zeth, a fully open source type zero ZK EVM built on the risk zero ZK EVM. And Bonsai zeth is a performant upgradable and scalable way for developers to ZK prove any Ethereum block ushering in the next generation of ZK and EVM. So pretty big Tweet thread to splash in the world.
00:31:05.118 - 00:31:12.562, Speaker A: And yeah, that's part of the context for this conversation. All plus one Justin is like, we want to find out what you guys are doing, what's going on here.
00:31:12.696 - 00:31:48.622, Speaker C: Yeah, so the type zero thing is definitely a joke that might have brought some people the wrong way. But the idea is like it's a type one EVM. But we didn't have to do zero work to make it work because we just utilized all the hard work of everyone else in the space to create the Seth platform. That's not entirely true. We had to change some of the ways the Merkel Patricia sheet works to make sure it's more Snark friendly or Stark friendly. And then we also had to modify a bit of the database back end. So definitely required some brilliant work by some amazing engineers but like a month and three people to get this over the line.
00:31:48.622 - 00:32:01.700, Speaker C: Now there's tons of room to increase the performance of the system and all kinds of things like that but we really have gotten to this kind of base level of now we can actually ZK prove Ethereum exactly as is.
00:32:02.630 - 00:32:46.820, Speaker D: So if I were to summarize, it sounds like you guys started off very much as a technology company focused squarely on Snarks and Snarkifying the world. And you have this really interesting approach which I guess we should dig into. Very interesting technical approach. But in our pre call yesterday, one of the things you mentioned was that there was some sort of partnership maybe with another rolled up project, maybe the optimism project. And that little piece of nugget was kind of interesting to me because it kind of what created the bridge between the technology company and more so like the crypto or the Ethereum company.
00:32:47.670 - 00:34:00.678, Speaker C: Yeah, I mean we've been talking to Op on and off for a while because this idea that you can take ZK and sort of create fraud proofs. As soon as you can ZK prove something, you can also ZK prove that something is different than what other people said it is. So you have this kind of ability to automatically create a fraud proof if you have a ZK provable system. So we've been chatting with optimism for a while. They eventually decided they were going to send out this RFP or mission for people to actually Zkify the Op stack and us and Mina and a couple other teams all applied. And our solution was very much based on the preliminary work we'd done on Zeth. We realized, rather than taking this very complex fraud proving system, which is an amazing work of engineering, but kind of sidestepped it and said, let's just take the Op ref in development libraries and just create a way to CK prove those which effectively provides a fraud proof mechanism because now you can prove well, once it's done, which will be in nearest future you'll be able to prove that an optimism block is or is not different from what the chain actually agreed on.
00:34:00.678 - 00:34:23.342, Speaker C: So we're going to actually see, I think in the near future through this partnership with optimism, the ability to get liquidity much faster than seven days or move your assets around and access your money. And this gets to sort of what you were saying about the magic of Snarks and being able to in the distant future have ethereum itself be fractally hyperscaled, however you want to say that, right?
00:34:23.396 - 00:35:42.966, Speaker D: So I think what is partially going on is that optimism as a project, which is an optimistic roll up, is thinking down the line of upgrading to a ZK roll up. And they submitted this request for proposal where they're saying, okay, anyone in the world, if you can help us snarkify optimism, we're going to give you money. Now, I had a look at the request for proposal and it was 250,000 Op tokens, which at current price is about $375,000. Now, the reason I mentioned this is because if you had asked us two years ago to come up with a prototype, a proof of concept for type one Zkavm with open source code running in on the cluster of GPUs that would have cost millions, if not tens of millions of dollars. And so now for half of a million dollars, we have this new team coming forward and providing technology. And I think one of the key tools used here is abstraction. There's kind of this massive shortcut that was taken and so there's kind of various pieces of the puzzle.
00:35:42.966 - 00:36:25.286, Speaker D: And the way that I think about it is that there's three steps. You start with an existing FM client, in this case ref, and then there's this new intermediate step which is RISC five, which I guess it would be good for you to describe what exactly is risk five. And then there's kind of this final step towards getting a Snark. And it seems like actually, that there isn't much work going from the client to Risk Five or almost no work. And then same thing for going from Risk Five to the Snock. So can you describe these three steps and the work involved in getting one and really quick?
00:36:25.388 - 00:36:29.078, Speaker A: RISC Five. What is RISC? Five. We know what risk zero is. It's a company.
00:36:29.244 - 00:37:04.030, Speaker C: Right. So Risero's name comes from RISC Five. And RISC Five is an open source instruction set architecture for actual microprocessors. So people familiar with, like the Apple M Two or Arm or X 86 or MIPS, these are actually instruction sets. So similar to the EVM, they have opcodes that tend to be there are opcodes that can actually be reassigned in hardware in a reasonable manner. So X 86 has hundreds, thousands of them. So it's a complex instruction set architecture.
00:37:04.030 - 00:37:32.590, Speaker C: But then you've seen the shift towards Arm and MIPS is very old. But RISC Five is kind of the spiritual successor to MIPS in a way. So it's a very small set. Well, has a couple of different dialects, but you can boil it down to about, I think, only 40 something opcodes. At its core. What we've done is created a Zkvm. So it's not an EVM, it's the same idea, except for what it does is process these much lower level instructions.
00:37:32.590 - 00:38:25.150, Speaker C: So there's not really pre compiles or anything like that. There are escape patches that you can use. So there's this core very minimal set of computing instructions that RISC Five sort of publishes. And people can actually take Sci-fi, the company that invented it, you can just get a spec from them and you can put RISC Five cores into whatever project you're doing. So almost every computer that's shipping now does have some number of Risk Five cores somewhere in the sort of bigger chip. So most chips, anything people think of as a CPU or anything like that, is really a system on a chip that probably has 20 different cores in it. Anyway, by doing all of this, we've taken the ability to ZK prove something and said, we're going to be able to ZK prove anything you could run on a normal processor.
00:38:25.150 - 00:39:26.638, Speaker C: So the reason that sort of going so going from RISC Five to ZK proving of Risk Five was something we surprised the ZK world with at least about a year and a half ago when we released this. I think the time Ellie had said that Ellie Vince from Starkware thought that general purpose ZK VM was at least five years out. So this is another example of ZK kind of just happening much faster than people would otherwise expect. So by focusing on this minimal set of instructions, we were able to create a very performant Zkvm. And most of the work to translate from anything else into Risk Five has already been done by the Ris Five development community and by the LVM compiler community. So we're really just leveraging the network effects of open source software to take, as Justin said, a massive shortcut to get to ZK proof of Ethereum.
00:39:26.734 - 00:40:26.846, Speaker D: So basically there's two translation steps, or kind of compilation steps that need to happen. And it turns out that the Rust programming language, by default today, already allows you to compile to various CPUs. So when you have a Rust program, you can compile it to X 86, which is a lot of intel machines run on this. You could compile it to Arm, which is a lot of the new Macs and a lot of phones run on Arm. But you can also compile it to this more arcane but still kind of popular enough to be supported instruction set, which is called RISC Five. And so there's basically all the work has been done to go from Rust, which is, for example, Ref, which is written in Rust, to Risk Five. And then there's this one time step that needs to be done to go from Risk Five to a SNOC.
00:40:26.846 - 00:41:53.046, Speaker D: And this is the heavy lifting that Brian and his team have done, but it's a one time thing and so now we can kind of take any Rust program that we want and kind of reap the benefits of abstraction. So now the traditional paradigm for Snarkifying things is to work very, very close to the metal, very, very low level, right? You have a program that you want to snarkify and you're going to kind of jump through lots of hoops and kind of work with these polynomials and very low level programming languages, partly because there isn't much tooling, but also partly because you need the performance of these really low level optimizations. But one of the things that's happening is that we're getting more and more powerful abstractions, which means that as a developer, you can work with higher and higher level programming languages. And Rust is an extremely kind of high level and friendly programming language. And within the blockchain space specifically, it's extremely popular. And in combination we're finding all sorts of optimizations, both kind of at the software at the hardware level to make this palatable. Maybe we should move to performance, which is that back then we could have said, yes, you can go ahead and do it, but it will take days to produce a proof for an Ethereum block.
00:41:53.046 - 00:41:58.500, Speaker D: What kind of performance do you guys have and how did you get there?
00:41:58.870 - 00:43:00.946, Speaker C: Yeah, so the performance varies based on which kind of actual hardware target you're running the Zkvm on. So we support CPUs, we support the M two GPU, and we support Nvidia GPUs as well. So getting to this level of performance has been a multistage journey and honestly, there's a lot of room for us to get even more performance out of it. But one of the early choices, the reason we use this particular subset of S Five, the 32 bit instruction set, is because it lets us operate in the sort of smaller prime field, which is much more amenable to being accelerated on GPUs. And specifically, and I think interesting to the sort of ethereum space and blockchain in general, this smaller field means you don't need these massive crazy ZK proofing rigs anymore. You can actually do ZK proofs using like a 16 gigabyte desktop GPU. We built a proof system that could run in these really small kind of consumer grade cards.
00:43:00.946 - 00:44:03.942, Speaker C: However, then that had some other kind of downsides, like you couldn't run giant programs. So we built this system called continuations, which uses like, folding you've mentioned a bunch. So it's a way to take proof and split it up into a bunch of small proofs and then let a bunch of different parties effectively prove bits of them and roll them back up into one single proof. So, getting to this level of performance, we had to optimize the recursion circuits because taking 1024 proofs and rolling it down into one proof takes ten vertical steps of recursion. And then beyond that, we have this ability to actually run the proving computation itself, as I mentioned, on the GPU rather than a CPU, and we see pretty significant gains for that. But we're just really kind of scratching the surface because we focused on enabling everything, which is kind of our core thesis, let's do the general purpose thing, let people actually prove something, and then we can focus on the performance where it yeah, so it's been a combination on that performance.
00:44:04.006 - 00:44:42.930, Speaker A: So Justin kind of like the intros who are exploring this throughout the possibility that someday we could run a Snarkfied ethereum validator from our smartwatch. It sounds like there are a lot of performance steps necessary to get there. And I'm curious, how close are we? So is what you're saying, Brian, that right now we could run what you've developed, which is this ZK type one EVM on a home consumer laptop. It's a pretty beefy laptop. And then how many steps away are we from getting that to like, a smartwatch?
00:44:43.090 - 00:45:17.490, Speaker C: Well, so proving, I don't think when you end up in this sort of enshrined roll up world, you're not going to have the proving be done on the smartwatch. The proving will by these machines off in the cloud or in this decentralized network, and then the verification, because your Snark or Stark, they're really small, the Snark especially. And it takes literally fractions of a millisecond. So the computing power to verify the Snark is there. And then once you have data availability sampling, you really just don't need that much information to actually participate fully in the network. So you can have a very light, light client.
00:45:18.150 - 00:45:20.980, Speaker A: So then why does performance matter so much?
00:45:22.470 - 00:45:25.794, Speaker C: Oh, performance of the proving system.
00:45:25.912 - 00:45:26.580, Speaker A: Yeah.
00:45:27.190 - 00:45:47.686, Speaker C: Effectively it gets down to how quickly you can make these sort of EVM blocks. Right? Like right now it takes us, if we use 64 of these off the shelf machines, it takes about 50 minutes, and I think there's probably an easy ten x there. But if you use even more machines, we can get down to twelve minutes. But realistically, if you want this sort of enshrined roll up, you need to, what did you say, Justin?
00:45:47.718 - 00:46:17.874, Speaker D: 2 seconds. If the use case specifically is being a validator, then when a new block comes in, you want to know that it's valid a second later. Basically, the latency, the proof latency, the time it takes to generate the proof should be on the order of 1 second. And today we're not there yet, we're maybe 100 to 1000 x. So let's say 2.5 orders of magnitude away from getting there. And so performance matters for two key reasons.
00:46:17.874 - 00:47:14.790, Speaker D: One is this proof latency that we for some use cases we don't really need the low latency, but for other use cases we do need the low latency. And the other reason is just diminishing the size of the prover. So nowadays if you want to be a prover, more likely than not you're going to rent out a rig of GPUs on AWS. Brian was talking about 64 GPUs, I believe, on AWS, and that's not super friendly to a decentralized proving network of people at home. And so what we partially want to do as well is kind of shrink all these 64 GPUs into like a small box and the way to get there, in my opinion, and I'd be curious what your opinion is, Brian, is to have Snark acceleration. So we went from CPUs to GPUs, and then the end game is to go from GPUs to Asics.
00:47:15.690 - 00:48:21.280, Speaker C: Yeah, I still think even when you get to the ASIC level, you're still going to end up and you have a huge decentralized network of provers. Maybe these Asics are even in people's phones, you're still going to end up splitting, proving an entire ETH block probably up over hundreds or thousands of nodes. So I think parallelism is critically important no matter what. But the ability, now that we've sort of shrunk the requirements of the prover down to where it is, I think the ability of hardware acceleration to really make a difference is actually there. I was pretty bearish on hardware for the first year of the company's existence because I didn't think people were going to be able to do better than Nvidia. It's really hard to do better than Nvidia with their sort of GPU performance. But the stuff I've seen coming out of several hardware teams recently is really, I think there's going to be the ability to get to gigahertz level ZK approving through Asics in the five year time frame, let's say three to five years.
00:48:23.490 - 00:49:19.834, Speaker D: Okay, so if I were to try and summarize, where does this performance come from, which is just to recap, it's like a ten minute roughly speaking, ten minutes to 1 hour proof latency comes from three different types of tricks. One is on the proof system itself, where you move to this different type of so called finite field, which is 32 bits as opposed to something larger. You've leveraged the GPUs, which as you said, Nvidia, does a great job with their GPUs, which are used for AI, but can also be used for SNOX, which are also extremely compute intensive. And then there's this final really beautiful trick which is basically recursion where you take a big chunk of computation, you cut it up into much smaller chunks, and then you do the proving for each small chunk in parallel. And then you kind of reassemble all the pieces of the puzzle and all of that can be parallelized and distributed.
00:49:19.882 - 00:49:20.414, Speaker C: Very well said.
00:49:20.452 - 00:49:51.314, Speaker B: Are you a MetaMask user? Well, you're listening to Bankless, so of course you are. The wallet you know and love just got a whole lot better. MetaMask Portfolio is the ultimate one stop shop for all of your crypto needs. It gives you a holistic view of your crypto portfolio across multiple chains and multiple addresses all at once. You can easily view and manage all your coins, tokens and NFTs in one convenient place just by connecting your wallet. MetaMask Portfolio goes beyond just viewing your portfolio, though. Inside the portfolio, you can do all the incredible money verbs that make DeFi so powerful.
00:49:51.314 - 00:50:13.162, Speaker B: You can buy, swap, bridge and stake your crypto assets with ease. It's like having a powerful battle station for all your DFI moves right at your fingertips. So if you're looking to do more in web3 your way, MetaMask Portfolio is the answer. I already know that you have MetaMask Wallet, so go check out your MetaMask Portfolio. Learn more at MetaMask. IO portfolio. Introducing Ethx from Stator.
00:50:13.162 - 00:51:01.722, Speaker B: Ethx is a liquid staking token designed to maximize rewards, all while securing ethereum. With Stator, you can run an ethereum node with just four ETH, which is 85% lower capital and 35% higher returns versus just solo staking. Stator has a multipool architecture with both permissionless and permission node operators to enable decentralization and scalability. Stator has extensive experience in building liquid staking solutions on six proof of stake blockchains and is trusted by over 70,000 stakers. Stator has partnered with over 40 leading protocols on these chains to bring DFI utility to their liquid staking tokens. Stator is actively building integrations and partnerships across ethereum to bring the same great DFI utility to the Ethx token. While smart contract bugs are always a risk in DFI, the Ethx smart contract has received three independent audits and has a million dollar bug bounty with Immunify.
00:51:01.722 - 00:51:25.506, Speaker B: Go to Statorlabs.com ETH stake to access the Stator staking protocol today. You know Uniswap, it's the world's largest decentralized exchange with over $1.4 trillion in trading volume. You know this because we talk about it endlessly on Bakelist. It's uniswap. But Uniswap is becoming so much more uniswap Labs just released the Uniswap mobile wallet for iOS the newest, easiest way to trade tokens on the go with the Uniswap Wallet.
00:51:25.506 - 00:51:57.710, Speaker B: You can easily create or import a new wallet, buy crypto on any available exchange with your debit card with extremely low fiat on ramp fees, and you can seamlessly swap on main net, polygon, Arbitrum and optimism on the uniswap mobile wallet, you can store and display your beautiful NFTs. And you can also explore Web Three with the inapp search features, market leaderboards and price charts. Or use Wallet Connect to connect to any web. Three application. So you can now go directly to D Five with the uniswap mobile wallet safe, simple custody from the most trusted team in D Five. Download the uniswap wallet today on iOS. There is a link in the show notes.
00:51:57.790 - 00:53:04.600, Speaker D: Now, I guess the next big topic in my mind as an ethereum researcher and thinking of type one Zkavms is security, right? We have traditionally a lot of complexity going on here and the likelihood for bugs is very, very high. And I have this saying which is maybe, I guess, a little arrogant, but I believe that every single Zkvm has multiple critical vulnerabilities today. And so we need to be prepared as a community to either have mitigations to these bugs and there's a lot of very good ideas and we also, unfortunately need to be prepared to roll ups, getting hacked. So just like we've had a bunch of fairly large roll up hacks, sorry, bridge hacks, on the order of hundreds of millions of dollars, maybe close to a billion dollars, we could have multibillion dollar hacks in the ZK roll up space. And so I'm curious, how do you think of security and how do you think of removing every single bug from the system?
00:53:04.970 - 00:53:27.134, Speaker C: Yeah, so obviously a huge topic. So me and my co founders actually know each other. We met 23 years ago in the Seattle like infosec scene. So we were all like hackers back in the day. So we have a pretty deep set of sort of experience and knowledge in this space. And that's part of the reason we chose Ris Five. Also, there's a full formal specification for it.
00:53:27.134 - 00:54:21.322, Speaker C: You actually can prove that certain systems formally prove that certain systems implement RISC Five. We haven't gotten to that level of sort of formal verification with what we're doing yet. But you can imagine getting to the place where you have very strong guarantees that the ZK system itself is proving risk Five and only risk five. And that the sort of conjectured amount of security, the number of bits of security is actually what we think it is. So there's a lot of work on the mathematical side to sort of prove that the crypto system itself is like the proving system is actually doing what it's supposed to separately. You then need to audit, as you mentioned, the actual ZK circuits. And I think that's an area where this approach really shines is that because the Ris Five instruction set itself is small, it means there's much less surface area to audit.
00:54:21.322 - 00:55:15.566, Speaker C: Although we do have these sort of acceleration circuits that one can add on to the system, it still doesn't increase the sort of audit surface of the ZK part to the same degree that doing zkvm from scratch would. Now you're also, as you pointed out on the pre call, by doing this you are potentially onboarding a few more security considerations. For instance, you're trusting the Rust compiler and you're trusting LLVM. Now these things and there are often bugs in LLVM, I think we just found one the other day. So compilers, especially for new architectures, aren't perfect. But this is one of the reasons again why we chose an existing architecture. I don't think Arm or something older or more mature would have really fit in a ZK circuit, but by choosing an existing architecture we get to leverage all of the billions of dollars of investment that's gone into the security of this existing ecosystem.
00:55:15.678 - 00:56:08.386, Speaker D: Gotcha. So if I were to summarize, there's kind of this final step where we go from risk five to a snark, which is actually fairly digestible because RISC Five is relatively simple. Actually, this reminds me of Cairo from Starkware. They have an even more kind of reduced instruction set, which is super simple. And what they've been able to do is apply some formal verification tools to prove that things are working properly there. And the hope is that this one time investment we can really drill down with powerful tools like formal verification and prove that it's correct. And then we kind of have the rest of the can of worms, which is kind of this fairly complex compiler to go from Rust to RISC Five.
00:56:08.386 - 00:57:13.218, Speaker D: And it's possible that there's bugs, generally speaking, in the Rust compiler, but it's also possible that there's bugs specific to compiling to risk five because RISC Five is one of the more niche instruction sets that you can compile to. But what might happen is that we're going to start building these roll ups which are securing billions and billions of dollars and then Lindy starts to kick in and we might have bug bounty programs. And it's kind of interesting where in a way the blockchain space might make a huge contribution to compiler security. There'll be way more eyes. We recently had this bug in the Viper compiler and that caused a bunch of bugs and it would be great if we could apply kind of similar tools like formal verification to compilers like Rust compilers, which today sounds very grandiose, but maybe the blockchain use case is so security critical that we're going to try and move forward partially in that direction.
00:57:13.314 - 00:57:37.402, Speaker C: Yeah, I mean, people have done this for C and if you're going to do formal verification for C, then Rust is probably also within the bounds of what's possible. But these efforts take decades or a really long time, but Blockchain accelerates everything to an obscene degree. ZK would still be like a niche academic pursuit, I think, if it weren't for Blockchain needing it so badly.
00:57:37.546 - 00:58:11.386, Speaker D: Okay, great. So I guess the final kind of semi technical topic that I have is around licensing. So if we are going to be using a piece of code at layer one, really for it to be kind of palatable, socially palatable, I guess the licensing needs to be good. And I guess the kind of favorite types of licenses that we have might be Apache 2.0 and the MIT license. Can you discuss what have you open sourced and under which licenses? Yeah.
00:58:11.408 - 00:59:11.542, Speaker C: So the sort of core risk zero zkvm. So the Risk Five proving engine that's licensed under the Apache Two license right now always has been, and then Zeph itself will probably be Apache Two, MIT licensed. We might also end up dual licensing everything because that's kind of the standard in the Rust community. And Op is a fan of MIT that's for the system that produces, takes the EVM program and chunks it up into a bunch of little proofs and then proves all of those. The parts we haven't yet open sourced or released is the part that actually takes all those proofs and recurses them down into a single proof. And then also this thing that converts the Stark that we use into a Snark. So there are two kind of aspects of this that we haven't launched and effectively we're waiting for these things to get through security audits because with the current system as is, the proof is much too large to put on chain.
00:59:11.542 - 00:59:33.938, Speaker C: So it's kind of hard to get wrecked because you can't actually use stuff on chain as readily. So right now, if people want to use the system, we have to get an API key from us. But that's definitely not the direction we're headed. We're very much committed to fully open sourcing the entire system, but we want to make sure we have a high confidence that people are not going to get wrecked soon because of the ZK system.
00:59:34.024 - 01:00:01.450, Speaker D: Okay, understood. So you've open sourced several key components under a very attractive license, Apache 2.0, and you're thinking of dual licensing it maybe with MIT so you can choose which license you want when you start using the code. And part of the prover is already open source. But maybe some of the final things involving the recursion and kind of the wrapping it into a tiny, tiny proof so that it can be consumed on chain that's not yet open source.
01:00:01.810 - 01:00:02.718, Speaker C: Yeah, exactly.
01:00:02.804 - 01:00:54.718, Speaker A: So, Brian, Risk Zero seems to have come out of nowhere and it's super incredible how fast all this is coming to bear here and open source working. It sounds like first to kind of snarkify our favorite L2 S out there, like working with optimism and others. So I imagine that's going to. Be a bulk of the work at first. What are you guys planning to do here? What's the business model for risk zero? It almost sounds like what you're producing is a public good. And here Justin and I and the rest of the bankless community are kind of cheering you on. But I'm sure you have investors, I'm sure you have VCs here that have put some money in and they're going to expect some kind of return.
01:00:54.718 - 01:01:07.220, Speaker A: Yet you're not building a layer two yourself as of yet, it sounds like. Or maybe you will tell us what risk zero is put on Earth to do. What are you planning to do in this space?
01:01:07.830 - 01:02:03.620, Speaker C: Yeah, in this space, we're really focused on this Bonsai ZK application development platform. So it's something we've been working on for a while because you can use ZK for all kinds of things. I don't know if you've talked to many of the ZK coprocessing teams, but you can use Bonsai effectively as a ZK coprocessor, which lets you run a bunch of complex logic off chain and then just attest to it on chain. Like Denver, I talked about an L one claw effectively running an order book on ethereum directly at uniswap. You can achieve roughly uniswap level pricing by doing all of the order book matching off chain. So you have your orders, the orders get placed on chain. And then Bonsai sort of just reads those orders, does all the matching in ZK just on one machine, and ran any random corner of the Internet or AWS, wherever you want it to be, and then says, okay, here's proof that these are the orders that got matched at this price.
01:02:04.970 - 01:02:11.334, Speaker A: Bonsai is kind of a platform for ZK snarkifying apps maybe let's call it.
01:02:11.372 - 01:02:49.166, Speaker C: Apps and roll ups, anything really. So we expect right now it's a centralized SaaS offering, and we think there's long term value in sort of providing an enterprise sort of open core model there. But we will definitely be building a decentralized network around that as well. Exactly what that looks like, who knows? It's going to be very focused on the sort of core accounting for proving tasks. So kind of like a proof marketplace. But we expect that it will add interesting features for application developers over time. This is the ability with continuations to do sort of ZK docker.
01:02:49.166 - 01:03:03.800, Speaker C: You can prove something up to a certain point, you can suspend the thing, and then you can just keep going on later. So you can kind of imagine having a ready to go EVM image where people can just resume it and they have full access to the ethereum state.
01:03:04.250 - 01:03:15.260, Speaker A: Is this like sort of an AWS for ZK proofs kind of thing? Just like a marketplace here, and you're looking to try to make it as decentralized as possible. That could be a future.
01:03:16.270 - 01:03:56.822, Speaker C: I mean, this is like when we got mean. Jeremy, our chief scientist, is just always into AI and ZK and all of these things. But when we started really thinking about what we're going to do with it, the thing that really got me excited was the potential of this technology to kind of let people who are building infrastructure and applications not need to rely on Facebook, Amazon, Microsoft, Google for everything. So this idea that we could actually fully decentralize the sort of infrastructure that goes into many of the applications we use has always been really appealing part of what this technology is capable of. So I think Bonsai is going to be a platform that helps people do that.
01:03:56.956 - 01:05:03.230, Speaker A: So, Brian, what do you think happens next in kind of the roadmap? So all of this seems to be happening faster than we all thought it would, which is so incredibly exciting. The level of investment in the space and the level of talent in brains now being focused on crypto is just absolutely astounding. We almost ended the episode with kind of one of the last parts, which I think is of course, the public good that is Ethereum mainnet kind of that will upgrade to a fully Snarkified Enshrined Zke EVM probably last. We're going to want this fully proved out in all sorts of ways across crypto before we get to that stage. So I'm wondering, what do you think will happen in the interim over the next six months, over the next one to two years? How do you think the tech that you're building will start to impact the crypto landscape? Will we just see ZK Snarkified layer two? Should we expect to see this technology applied mainly in roll ups? Are there apps that you see this being applied or will it a few years?
01:05:03.300 - 01:05:55.898, Speaker C: Yeah, all of the above. We're definitely working with L two S, L three S rollout frameworks, however you want to think about all of that space. And also we're working with people on D Five projects and eventually gaming is going to be a big part of this. The way I see this playing out is just like friend tech kind of surprised everybody with how much better the crypto onboarding experience has become. And sure, there's still a lot of room to go. I think the headway that people have been making in making crypto applications easier for people to use is going to then also increase demand for the capabilities of these systems to be able to do more and more interesting things. So I think we'll see ZK playing a critical part in all of this by enabling people to do whatever computations they want off chain and readily attest to them on chain.
01:05:55.898 - 01:06:03.130, Speaker C: So the sort of ZK coprocessing architecture is going to be a huge unlock for applications built for Web three applications.
01:06:03.290 - 01:06:09.300, Speaker A: Well, this has been great. Justin, do you have any other questions for Brian or should we start to close this out here?
01:06:10.790 - 01:06:36.460, Speaker D: I think I have one final question. Which is around your alignment with like I think we had during the Pre call. It sounded like as an individual, as a person, you were in the space for quite a long time and you have a certain set of beliefs and I'm curious what those are, but also how this translates into the culture of the company.
01:06:37.630 - 01:07:13.830, Speaker C: Yeah, I mean, our sort of core three core values are like integrity, transparency and agency. And I think if those aren't, like, ethereum aligned, I'm not really sure what that sort of even means. So coming out of the hacker culture that the founders came from, it just seems like a very natural sort of fit to the sort of ethos of ethereum. So I think value really, the vision of the sort of hyperstructure world of the future is very much something we all very deeply resonates with. All of us.
01:07:13.980 - 01:07:16.790, Speaker A: Brian, what first brought you down the crypto rabbit hole?
01:07:19.790 - 01:07:21.740, Speaker C: Buying supplies for Burning Man.
01:07:22.670 - 01:07:28.170, Speaker A: It's funny as my co host is literally at Burning Man right now. Fantastic.
01:07:30.030 - 01:07:34.880, Speaker C: No, but it's been a crazy journey and so it's really fun to get more and more into the space.
01:07:35.970 - 01:08:18.474, Speaker A: Well, very good. And maybe my last question is kind of the high level to justin so this idea of hyperscaling ethereum using kind of like fractal crypto proof, ZK proofs on top of ZK proofs, has this always been part of the plan or is this just happenstance? And I guess when you think of the term hyperscaling, how do you envision ethereum looking five years from now? Is all of this stuff just kind of working? And what's the total transactions per second? I don't know. What's the Sci-Fi ethereum with this tech applied? How does that look?
01:08:18.512 - 01:09:45.474, Speaker D: Justin right, so, I mean, if you want to think in terms of endgames and fundamentals, you go back to these fundamental resources computation, that's just not going to be a problem of consensus. And the way that I think about it is that consensus is this very flexible tool that can solve all sorts of problems. And then cryptography what it does, it gives you a few superpowers that allows you to reduce the scope of consensus and basically have more and more crypto and less and less economics, if you will. And historically, actually, one of the big breakthroughs for consensus was simple message authentication and signatures that kind of changed the model where you had these messages that could be intercepted and modified, but that didn't really matter because they were kind of signed and authenticated. And so the model was, what can you do with consensus given signatures? And now we kind of have this new tool which is much more powerful from a cryptographic standpoint, which is what can you do with consensus with SNOX? And it turns out that the things that needs to solve are data availability. And finality, it turns out that data availability is something that we can solve with database sampling, as I mentioned. And then there's this other thing, finality, which I only discovered recently.
01:09:45.474 - 01:10:49.370, Speaker D: You can also solve with cryptography with these really, really sophisticated pieces of cryptography called one shot signatures, which actually marry quantum mechanics and cryptography. And so then you can ask ourselves, okay, what is consensus used for if cryptography solves all these things? Well, it turns out that the last thing that's still not solved is this concept of liveness. Like, how do you make sure that the chain just keeps on going, even if validators, just don't show up. For example, if there's World War Three and 90% of the population has gone. And this is kind of cool because we're reducing and reducing and reducing the scope of consensus and we're kind of hardening the rest with pure cryptography and physics and mathematics. It's a very long journey to get the one shot signatures because we need these quantum computers. But in the meantime, we're going to enjoy the spoils of Snarks, which are extremely significant.
01:10:49.950 - 01:11:03.150, Speaker A: Well, it seems like we have entered the Snark era for sure and there's going to be a lot of that applied to crypto in the future. So, Brian, Justin, thank you so much for for guiding us on the tour today. It's been much appreciated.
01:11:03.650 - 01:11:04.542, Speaker C: Thank you.
01:11:04.676 - 01:11:05.600, Speaker D: Thank you.
01:11:05.970 - 01:11:25.090, Speaker A: Bankless nation risks and disclaimers Got to let you know, of course, none of this has been financial advice. I don't even think we talked price in this whole episode, so obviously not. Crypto is risky, so are compilers, so are new layer twos, you could lose what you put in. But we are headed west. This is the frontier. It's not for everyone. But we're glad you're with us on the Bankless journey.
01:11:25.090 - 01:11:25.700, Speaker A: Thanks a lot.
