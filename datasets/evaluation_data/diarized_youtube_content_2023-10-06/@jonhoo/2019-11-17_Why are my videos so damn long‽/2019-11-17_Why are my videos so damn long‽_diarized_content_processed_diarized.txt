00:00:00.760 - 00:00:51.074, Speaker A: Hello. I often get the question, why are your videos so damn long? And I think the answer gets to the heart of this channel. So I wanted to address it directly in a video of its own. I'll try to keep it short. This channel is intended for either rust stations who are ready to move past the introductory material, or for experienced programmers coming from other languages who want to see how things work in the rust world. And specifically, I wanted to give viewers an experience of what it's like to write rust code for real, to show the entire development cycle from start to finish, to demonstrate everything you'd need if you were to work for yourself in the wild. And that includes reading up on background material, as well as writing, debugging, and testing code.
00:00:51.074 - 00:01:49.086, Speaker A: And it turns out that those things take time. For example, our TCP implementation took three streams of 5 hours each, and at the end, there's still more left for us to do. I'm frequently asked whether I could just sort of edit down the videos and cut them into shorter pieces and curate them. And I think that would be counter to the goal of the channel. If I remove the debugging, the head scratching, the documentation reading, I think that would get rid of one of the most valuable aspects of the stream, watching someone work through a problem, and then observing all the little tricks and techniques that they use along the way. I think there's a lot of value in watching an experienced developer sort of get stuck and then to get to observe their process for getting unstuck afterwards, since that is so much of what you'll be spending your time doing one day. This is a truthful rendition of what doing this kind of work is like.
00:01:49.086 - 00:02:32.308, Speaker A: And I think leaving only sort of the good parts in will just reinforce this unfortunate artificial image we've created of perfect programmers that just never make mistakes. But that's not how development works. That all said, I realized that 6 hours is a long time. It's a long video, but I really don't expect you to watch it all in one go. Watch for as long as you'd like, as long as you still feel like you're interested and engaged, and then take a break, come back to it some other time, some other day, some other week. The video isn't going anywhere, and feel free to watch the videos at higher speed. You can sort of jump forward if you feel like there's something that's not that interesting to you or that you already knew.
00:02:32.308 - 00:03:24.690, Speaker A: You can go back and rewatch things if you feel like you weren't following along. Watch it at your own pace. It could, of course, also be that this format is just not for you. If you feel that that way, I would recommend that maybe you try one of the open source streams that I've done. So these are naturally split into smaller chunks of about like 90 minutes each, and they're also not edited, but they might be more digestible. You can just look in the video description, and there are timestamps linking to each of the separate contributions we make, which are all fairly short. And I really just hope that you can feel as though the stream is sort of a journey that we're going on together, to just learn from each other and become better programmers by virtue of writing code, because that ultimately is the best way to become a better developer.
00:03:24.690 - 00:03:30.790, Speaker A: With that all out of the way, have a great day, and I hope to see you on a live stream soon. Bye.
