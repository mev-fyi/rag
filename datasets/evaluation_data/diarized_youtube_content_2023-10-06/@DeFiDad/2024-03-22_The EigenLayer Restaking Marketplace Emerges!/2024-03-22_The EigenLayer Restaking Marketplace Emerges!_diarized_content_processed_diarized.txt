00:00:00.170 - 00:00:42.890, Speaker A: And so what Lagrange builds is a proving system, and a proving system that's deployed as a coprocessor across a network. So the offerers of that need to be secured with an economic security such that when they're supposed to deliver a proof on time, there's a guarantee and a strong guarantee that things will happen correctly, in a decentralized fashion. And this is what this announcement really gets to. It is using the restaked security that that Etherfi has and delegating that to operators of the Lagrange coprocessor and the Lagrange network to ensure that there's an economic basis and strong guarantee that the zero knowledge proofs that users are requesting that users want will be delivered on time will be delivered as specified.
00:00:45.150 - 00:00:51.866, Speaker B: Welcome to the Edge podcast. I'm DFi dad here with nomadic from four RC. Today's show spotlights a recent announcement from.
00:00:51.888 - 00:00:53.006, Speaker C: What looks to be one of the.
00:00:53.028 - 00:01:04.542, Speaker B: Earliest actively validated services coming to Eigenlaire from Lagrange Labs. In this episode, we talk with the founder of Lagrange and the founder of Ether Phi about the significance of Ether.
00:01:04.606 - 00:01:11.486, Speaker C: Phi committing to delegate $500 million of natively restaked ether to Lagrange to secure.
00:01:11.598 - 00:01:13.726, Speaker B: Zero knowledge proving for Ethereum.
00:01:13.838 - 00:01:15.654, Speaker C: But before we do, just a quick.
00:01:15.692 - 00:01:18.760, Speaker B: Word from our sponsors who make the Edge podcast possible.
00:01:22.010 - 00:02:20.970, Speaker C: Introducing flatmoney, the first decentralized delta neutral flatcoin built on base with sustainable yield that's completely untethered from legacy finance. Because Defi needs an uncensorable based unit of currency, you can mint unit with Reith, which is held in the protocol's shared liquidity pool, where it's borrowed by leveraged traders. As a leveraged trader, you can deposit your margin collateral and go long on re. If you're trading in the perpetual futures market, you'll pay unit holders to open leverage positions. If you're holding unit, you'll earn yield from liquidations, borrow rate and trading fees, preserve your purchasing power and offset your exposure to crypto market volatility. Learn more at flat money restaking summer is dawning and swell is expanding. Harnessing the power of rsuite, swell is building the L2 for liquid restaking.
00:02:20.970 - 00:02:37.280, Speaker C: That means native restaking yield on a chain built with Polygon's Zke EVM technology in collaboration with alt layer Chainlink and Eigenda. Look out for Swell's L2 in Swell City.
00:02:40.130 - 00:03:11.834, Speaker D: Introducing the mantle liquid staking protocol. Mantle LSP, a permissionless noncustodial ETH liquid staking protocol deployed on Ethereum l One and governed by mantle. With mantle LSP, users can stake ETH to instantly receive me, earn yield, and accumulate rewards. The longer you stake me is the value accumulating receipt token that will give you access to expanded yield opportunities. Stake and watch your yield grow with.
00:03:11.872 - 00:03:51.810, Speaker C: Mantle LSP for most of us, our crypto journey started with Metamask, and now with metamask portfolio, we can do so much more. Metamask portfolio puts you in control. Use the dashboard to see all your assets and balances across your wallets in one place. The buy feature allows us to buy crypto assets effortlessly with fiat options such as PayPal or credit card. The swap feature allows us to swap any tokens anytime by finding a selection of available rates. The bridge feature allows us to bridge between networks, including Ethereum, L1s and L two s, based on the best price and fastest delivery time. And with the stake feature, anyone in a few clicks can stake ETH and earn rewards.
00:03:51.810 - 00:04:40.410, Speaker C: Do more in web3 your way with a safe, simple, and convenient tool that's all in one place. Track and manage your web3 everything at Metamask IO portfolio introducing Kelp Dow, the first liquid restaking platform for LSTs. With kelp, anyone could deposit Steth by Lido, ethex by stator or SFRX, ETH by fracs, and mint, a liquid restaking token called RSE. With RS ETH, you can participate in your favorite DFI platforms and get 100% of all Eigen layer points plus kelp miles. A fresh wave of restaking is here. Restaking that's liquid, rewarding and convenient. Learn more today at Kelpdow XYZ.
00:04:40.590 - 00:05:24.530, Speaker E: Restake it all started so simply with cryptokitties and maker on Ethereum, but quickly became complex with more applications and many chains. Today, everyone agrees UX issues are the biggest blocker standing in the way of crypto adoption. Introducing avocado Multichain UX. Redesigned from the ground up, the first wallet to abstract networks, accounts and gas one gas tank to pay transaction fees on all chains in USDC and native access to instadap's powerful custom defi strategies. Avocado one wallet to rule all chains.
00:05:25.110 - 00:05:33.878, Speaker B: All right, let's introduce ismail, the founder of Lagrange and the founder of Etherfi, Mike Siligaza. Guys, welcome to the Edge podcast. How are you doing?
00:05:33.964 - 00:05:37.862, Speaker A: Doing great. Thanks so much for having us. Been a fan for a while. I'm excited to be here.
00:05:37.916 - 00:05:39.962, Speaker F: Yeah, it's great. Great to see you again.
00:05:40.016 - 00:06:34.342, Speaker B: Yeah, welcome back to you, Mike. We've had you on quite a few times. We're recording this just a few days after the token launch for Etherfi. So it's been an exciting few days for you. Mike might have a few questions for you just on what's next there with Etherfi. A part of the story though there, and what we're going to cover today is there was just an announcement that Etherfi has struck a deal with Lagrange Labs, and Lagrange would be a very early example of an Avs with Eigen layer. And so this is an exciting development, because we've been talking about all of this coming, and now we're at the point where we're actually talking about how these partnerships work and how ultimately we'll be able to leverage the security of Ethereum with an Avs like Lagrange.
00:06:34.342 - 00:06:58.706, Speaker B: So that all said, guys, why don't we kick off with a little bit more about Lagrange? I'm going to let Mike give the elevator pitching a bit about Etherfi. If you've never heard of Ether fi, if you've been living in a cave, we'll get you caught up today. But Ismail, can you tell us a bit more about just what are you working on at Lagrange? What are you looking to solve for?
00:06:58.808 - 00:07:47.460, Speaker A: Yeah, that's a tremendous question. So the way we like to describe Lagrange is as a hyperparallel, hyperscalable zk coprocessor. And so to unpack that a little bit, what is zk coprocessing? Well, you build an application on chain. Think of a smart contract, maybe like ether Phi, and what you want to do is to be able to do certain types of computation that are too intensive to do in the contract. So what's the natural extension? Well, you lift that computation off chain, you have a series of nodes execute that computation and generate a proof of the execution, and then you verify that back on chain. That's a coprocessor to take something heavy that you can't do on chain, lift it off chain, and verify the result back on chain. Think of it, an asynchronous execution of a program.
00:07:47.460 - 00:08:08.418, Speaker A: And so what we build is a hyperparallel version of that, something you want to run big computation very, very efficiently, and you want to do so in a distributed, in a decentralized manner. We build out an eigen layer as an AVs, and we serve that computation primarily to Ethereum and other EVM compatible chains.
00:08:08.514 - 00:08:24.014, Speaker G: Appreciate that. I think there's, like a lot we should get into eventually with Lagrange. But let's just hand it over to Mike. And Mike just maybe give people another primer on Etherfi again if they've been in that cave that Defi dad referred to for sure.
00:08:24.052 - 00:09:19.178, Speaker F: Yeah, happy to do mean, I think the range of applications for Lagrange is vast. And so it almost has to be stated in this kind of very abstract way, because if you try to cover all the thousand different ways you could use it, it gets very long. But I'm excited to talk about that as well. But with Etherfi we're pretty simple. We think of ourselves, among other things, as a next generation staking protocol. So what that means is you can stake your ETH and get a liquid receipt token which is automatically restaked in eigen layer and has a much stronger kind of noncustodial nature than other liquid restaking tokens. And so what that means is you stake your ETH, you get this ETH liquid restaking token which gives you staking rewards, restaking rewards and all kinds of points that you can collect, and then you could take that token and use it in defi.
00:09:19.178 - 00:09:40.866, Speaker F: But in the background, the whole reason that the token exists, the reason that Etherfi is interesting, is because we get to provide security services to products like Lagrange and others, and that's what ultimately creates more utility for Etherfi and then the higher rewards for users eventually.
00:09:41.058 - 00:10:13.646, Speaker B: Okay, so going back to this announcement that I think happened like late last night. So Etherfi has committed, by the way, I'm reading straight off the medium post here and we'll link this in the show notes for folks who want to learn more there. Etherfi has committed to delegate $500 million of natively restaked ETH to operators of Lagrange's parallel ZK coprocessor in order to secure zero knowledge proving for Ethereum. Could either of you break down the significance of what that means?
00:10:13.828 - 00:11:32.678, Speaker A: Yeah, I can start and then I think Mike can obviously add a ton of context there as well. But so I guess in summary, Zkx restaking is finally a thing and it's finally here. And what that means is when you're thinking about zero knowledge proofs and you're thinking about how can an application consume them fluidly, how can it do something with them and build something meaningful and new to users? Well, there's always that last mile problem. How do I make sure that when I want my proofs at Block height X, that proof comes on time? How do I make sure that proof is served on time to my network. And so what Lagrange builds is a proving system and a proving system that's deployed as a coprocessor across a network that needs to be secured or the operators of that need to be secured with an economic security such that when they're supposed to deliver a proof on time, there's a guarantee and a strong guarantee that things will happen correctly, in a decentralized fashion. And this is what this announcement really gets to. It is using the restaked security that Etherfi has and delegating that to operators of the Lagrange coprocessor and the Lagrange network to ensure that there's an economic basis and a strong guarantee that the zero knowledge proofs that users are requesting that users want will be delivered on time will be delivered as specified.
00:11:32.854 - 00:12:27.402, Speaker F: Yeah, I mean the only thing I would add to that is that there's been so much hype around restaking and Eigen layer and all this stuff, right, but none of it is real yet. Nobody's actually doing restaking. None of these services are online, none of it is actually operating. And this is one of the first steps to showing that hey, there's actually something real here. In other, you know, a company, Lagrange, that's willing to say, yeah, we're willing to pay some amount of money for each security if you think about, to use a poor analogy, but maybe a helpful one of Eigen layer as the marketplace. Like an Amazon marketplace, we're a seller, Lagrange is a buyer and this is a transaction on that marketplace. So it's like there's been a year's worth of hype and excitement about this marketplace is coming.
00:12:27.402 - 00:12:57.894, Speaker F: It's going to be great. You're going to be able to buy all these things. There's going to be these great products and it's like okay, great, where is it? What's going to happen? And here is like great, here it is. Someone's selling, someone's buying, transactions are actually taking place. Eventually this is going to be so commonplace and normal and automated that it won't be newsworthy at all. But we're at the dawn of this new era of restaking and abs. And so I think it's exciting to see these proof points start to come about.
00:12:58.012 - 00:13:25.360, Speaker B: Do we have any idea what restakers might earn from working with Lagrange? I'm thinking about that myself as like an eight e holder. Any range of numbers you can provide there. And then also if you can share a bit more about what went into the process of choosing to work with Lagrange, because I'm imagining that there's going to be some process that's repeated there with other future abs.
00:13:25.970 - 00:14:08.140, Speaker F: Yeah, totally. So I think that's a very important question because it leads to the first iteration of this, the first version of this that we're all heading towards is what is called the pooled security model within Eigen layer. And what that means is every ETH is actually securing multiple AVss. I don't know the exact number that are rolling out as part of the first cohort. I think it's like ten or 15 or something. But there's eigenda and then there's a number of others, Lagrange being one of those. And so every ETH within Etherfi will actually secure all of those, hopefully will secure all of those ABs.
00:14:08.140 - 00:15:09.866, Speaker F: And so whatever amount one ABS is paying you kind of multiply that by ten or 15 and that would be the aggregate yield initially paid in. In almost all cases, either point systems that the various ABs provide or their native tokens. And so you'll have this e that just accumulates all this stuff, all these tokens and points from all these ABs that are running on top of eigen layer. And the idea is that we, being committed to the pooled security model with eigen layer, have agreed to support all of the VVss that want to work with us. And so that's an important thing in terms of just the way this thing is getting launched, that pooled security becomes the default. Now the question that comes up is, well that sounds pretty risky, right? Like, okay, now you've got like ten different things that you're securing. Is that really a good idea? Well, there's no slashing actually implemented right now in eigen layer.
00:15:09.866 - 00:15:42.662, Speaker F: Even the distribution mechanism is not actually implemented and it probably won't be for some amount of time. I don't know, maybe even like six months. I don't know the exact timelines, but it'll be a while before slashing is implemented. And then even beyond that there are these anti slashing committees that are being constructed that basically can reverse slashing. We're putting training wheels on right now. So for that reason, at least initially, the risks are not super high. In the case of native restaking, you're not even really taking material.
00:15:42.662 - 00:16:14.894, Speaker F: Smart contract risk because the ETH isn't actually living in the smart contract. It lives in the beacon chain deposit contract. So a hacker doesn't actually get access to a lot by hacking us or I guess lagrange or others. There's actually not a lot there. So we have these training wheels that are being put on, so everybody's securing everybody. What is the overall yield to get to the thing that you were asking? I don't know. I don't think people should set their heights that this is going to be printing wild apRs.
00:16:14.894 - 00:16:47.006, Speaker F: I think in aggregate maybe you get a 5% lift, five or 6% lift on top of overall staking rewards. So maybe 8% total. Again, totally speculative. I'm sure people re hypothese and turn this into some crazy derivatives, but I don't think we're going to be seeing anything much higher than that. In fact, I hope we don't, because I actually feel very uncomfortable with the dgen kind of madness that is crypto. And so I hope people stay somewhat reasonable. But I don't know, maybe that's too.
00:16:47.028 - 00:17:52.740, Speaker A: Much to hope mean. I think that's very well put. The only thing I'd add is that what we build at Lagrange is functionally a protocol. It's a decentralized network, and operators of that network necessitates security, and it necessitates these independent operators who have maybe an affiliation with Etherfi, or maybe they're fully independent from any affiliation, to be able to have the requisite security, to be able to operate as part of a network that has economic constraints in place in terms of guaranteeing liveness of its core components. And so in that situation, what Lagrange is, is no different than any other economic based protocol, except it's one that is built on top of the rails of Eigen layer, and then with security provided by players such as Etherfi, instead of just being a fully separate marketplace in the cosmos. And so that's the framing that we tend to think of this with, where this isn't a per se transactional relationship, where Lagrange is buying something from Etherfi. It's very much so.
00:17:52.740 - 00:18:02.834, Speaker A: A series of operators who are independent of Lagrange, that are having a relationship and a delegation into them that is incentivized as part of the core designer protocol.
00:18:02.962 - 00:18:17.706, Speaker G: I think. One other thing I was curious about, just in regards to the partnership, can you maybe clarify, is this like an exclusive partnership? Will there be other partners for Lagrange? I guess with shared security? Maybe, if one of you can kind of take that.
00:18:17.888 - 00:18:33.754, Speaker F: So it's explicitly not exclusive. We are very deliberately being clear on that. It is not exclusive partnership. Lagrange obviously will work with other LRTs and will obviously secure, as I mentioned, many abs that's the whole shared security bottle.
00:18:33.882 - 00:18:51.062, Speaker A: Yeah, I can concur with that, of course. And I think the imperative on building any of these permissionless systems is to keep them as permissionless and as open and as flexible as possible. And I think we're committed to that. And I think one of the things we've most respected and liked about working with either. Fine. Is their commitment to that as well.
00:18:51.116 - 00:19:17.006, Speaker G: Ismail, this one's for you. I want to ideate a little bit more just about Lagrange. So maybe if you can kind of share some of the things that what you're building will open up for others to build or what you're building. Like maybe there's things that you're going to build in house using your own protocol. So would just kind of love for you to share any forward looking products like that that you have in mind.
00:19:17.108 - 00:20:10.830, Speaker A: Yeah, that's a phenomenal question. And so the way I like to think about it is what can you build off chain that you can't build on chain? And what are the design patterns and the engineering patterns that you can do off chain that you can't do on chain? And the idea of a coprocessor is to try to close that gap to be able to let you take the things you can do off chain to now start being able to do those on chain in your contracts. And so to make this very concrete, we'll think of a database. You have a database containing all of your NFT data with all the metadata, with all the owners. And that goes back in time for some determinant period of time that you're able to then query as part of your application logic. Maybe you want to give a discount to anyone who owns a pudgy penguin who has a certain character trait. Maybe you want to have a game or some type of incentive program where you reward your best holders and you're able to give benefits to people who are loyal to your protocol and not loyal to other protocols.
00:20:10.830 - 00:20:18.890, Speaker A: All of these things require one thing, which is compute over data. And that is the primitive that we solve. That's what we built.
00:20:18.980 - 00:20:20.146, Speaker F: So you can think of.
00:20:20.168 - 00:21:09.854, Speaker A: Well, think of an options protocol, right? You want to take volatility of an asset on chain. You want to use that to black trolls to issue an option. Well, how would I do that in my contract today? How would I compute over 3000 blocks of Univ, three sushi and curve pricing data directly from my contract? Well, you'd have to rely on an off chain oracle. It would be insecure and you could face issues with a coprocessor. You just compute that in zero knowledge and then you take a final proof that you can verify back in your, you know, you can think of yield aggregators or some of the phenomenal work that Etherfi is now doing with the liquidity protocol as an example of this, where you have something that is able to delegate or move assets based on some predetermined strategy, but you want to increase the expressivity of what that strategy is. You want to take it from a dumb strategy to a smart strategy. And these are some of the things that you can start locking.
00:21:09.854 - 00:21:32.262, Speaker A: You can say, I'm going to rebalance assets on these heuristics in the event that I see on chain state deviate in some way. If this asset isn't performing well across three curve pools, I'm going to rebalance them and move them off to these curve pools into something in balance. Or take an lp position there as an example. And that's the type of things you can start directly computing on chain and verifying your smartphone.
00:21:32.326 - 00:22:26.054, Speaker F: Yeah, maybe if I could add more context, just if it's helpful. Every single protocol, every single one uses some sort of service. In most cases they use something like the graph. It's basically an off chain thing that computes and indexes stuff on chain events and then presents that in a usable form. Tons of protocols, including Etherfi, use oracles. So for our whole rebasing mechanism, which is basically how the whole liquid staking thing works in terms of calculating how much yield or how much rewards is accrued. And so what's the value of the whole asset pool? Now we're using an off chain oracle with what's frankly like kind of a janky solution to try and like, all right, well, there's going to be three people running this oracle and they have to vote.
00:22:26.054 - 00:22:48.434, Speaker F: And that's better than nothing, but it's not a great solution. The magic of something like Lagrange is that you can throw all that shit away. Everything now can happen in a super secure way on chain that you can totally trust. So I mean, this is really something that almost every protocol could be using. This isn't like a niche thing. This is basically, everybody could be using this.
00:22:48.552 - 00:23:51.990, Speaker B: I'm wondering if either of you can help to dumb down what is pooled security. I would love to talk about this like I'm five and I'm wanting to break down maybe an example where, God forbid, but in the future, let's pretend that Lagrange or some other Avs had an exploit what happens? Like there is this delegated ETH we've talked about with Lagrange through Etherfi. Maybe, Mike, you should talk through this. Where does know restaked ETH ultimately sit? And then in the future, I know there's a lot that has to still be developed here in terms of slashing rules and all sorts of stuff like that, but ultimately, what would it look like if there was an event like that in order to cover losses with some sort of abs like Lagrange?
00:23:52.330 - 00:24:23.390, Speaker F: Sure. Yeah. So again, first year, no, slashing that particular risk isn't a big one. So eventually, definitely, we will need to worry about it a lot. But for the first year, there's training wheels, pooled security. I mean, there's so many layers of complexity to it, but the simple thing is like you're using the same ETH to secure a bunch of stuff like that. You're not just using it to secure Ethereum or Lagrange, you're using it to secure a bunch of stuff.
00:24:23.390 - 00:24:47.480, Speaker F: So there's a big pool of ETH. Everybody kind of. In some ways you could think of it as like an insurance model, right? Like the insurance company doesn't have money to pay out every single claim. They just have a pool of money and a probabilistic thing that tells them what the likelihood of different events. And they look at those actuarial tables to figure out what's the amount of capital they need. And pretty established. Nobody talks about like leverage or.
00:24:47.480 - 00:25:46.890, Speaker F: Well, I guess people do talk about blow up risk in the insurance industry, but it's been around for centuries. So this isn't a new concept. In a sense, I think we're operating with the assumption as Etherfi that eventually, two years down the road, three years down the road, whatever, there will be a mass slashing event on Ethereum. Because of restaking, we're operating with the assumption that that's going to happen. Maybe it doesn't, but it almost doesn't matter, because what you don't want to do is to play the role of a turkey where you're collecting little bits of rewards along the way, and then one day you just get slashed to zero. That is pretty much the only thing that matters is survival. And so our approach, once the world normalizes a little bit and there is slashing and the risks become sort of realized, our approach is going to be very conservative.
00:25:46.890 - 00:26:34.794, Speaker F: We are only going to work with the best abs, the ones that are most reputable, that are audited, that we have a good risk model in place for we're not going to re hypothese and layer 17 different AVs on the same ETH. It's going to be much more conservative. We plan to be the boring LRT, and that means others will be the Degen LRT, and that's totally fine, but that's not going to be us. So our priority, once again, slashing and stuff is implemented is the only thing that matters is survival. And so we are going to take a hyper conservative approach to this to ensure that we do get insurance. And there are now even Eigenve, I think, proposed a pretty interesting insurance model. So we are going to be using insurance and paying for it.
00:26:34.794 - 00:27:08.994, Speaker F: We are going to be taking a more conservative line, because eventually, probably there will be a blow up where a billion dollars of ETH just kind of vaporizes. And the only thing that matters for us is that we are not in the path of that. Because everything you build up to that point doesn't matter if you suffer from. Even if you dip 2%, like it's game over, you could be doing amazingly well for five years, and then you've got a 2% dip that would just completely destroy all trust in what you built. And then what was it all for? So that's kind of our stance on it.
00:27:09.032 - 00:28:09.980, Speaker A: I think that's well put to extend on what Mike was saying. I think from an AVs standpoint, what's top of mind for us is similarly working with LRTs that we think will not have mass slashing events affecting the capital that our network and that our operators have as delegated security. And why is that important to us? Well, if half of our network loses delegated security because some random Abs blew up, that was poorly audited, poorly construed with some Degen mechanism that has a material impact on our network. And so that's why, when we think through our partners, we think through who we want to work with, it's really the other side of the coin. We know we're going to be a very well audited, very organized, very well structured protocol, very deep academic roots, and very strong engineering fundamentals. Code is for the most part, open source audited, et cetera. And so the things that we prioritize are working with groups that we think are also prioritizing that set of AVs as part of their cohorts and their tranches that they work with.
00:28:09.980 - 00:28:55.394, Speaker A: And we tend to also find that from the pool during the attributable. And then I think stake sure is one of the new ones. They're talking about the insurance model that I think, sure, I was contemplating or they've been discussing a little bit. I think a lot of these models have some fluidity to them still, and I think that there's still some very open questions and some kind of known unknowns that we're going to be figuring out, I think collectively as an industry over the next year before slashing is turned on. And then at that point I think we're going to really begin to see a refinement of the strategies used by LRTs broadly to identify where they delegate, and making sure that where they delegate is the place that is going to maximize risk adjusted returns.
00:28:55.522 - 00:30:02.560, Speaker H: Maverick protocol provides innovative liquidity solutions for token projects to customize, automate, and incentivize their liquidity with the highest efficiency in DeFi, all powered by Maverick Amm why has Maverick become the first choice for all kinds of token projects, from stablecoins to LRTs as the first dynamic distribution? Amm Maverick Amm provides automated liquidity movement modes which move your liquidity to follow price, keeping it where it does the most good. This enables maverick powered pools to process higher volume with lower TVL requirements, and means that Maverick supports the highest capital efficiency for LRTs. Like we ETH, Maverick Amm also supports non uniform liquidity distributions, making it easy to concentrate liquidity in shapes that fit each project's individual needs. Finally, Maverick boosted positions maximize incentive efficiency for protocols looking to bootstrap their token liquidity to precise strategic areas of a liquidity pool. Token communities like Lido, Aave, Swell, Etherfi and Kelpdao have been bootstrapping TVL and maintaining peg using Maverick tools ready to build liquidity with maximal efficiency. Go to app mav xyz theedgepodcast today.
00:30:04.450 - 00:30:22.606, Speaker G: Just back to the partnership announcement. I want to get into just a little bit about this 500 million dollar number. Just kind of curious, like, what calculus goes into that decision. I know I've already kind of asked that this isn't an exclusive partnership, so there can be more added to that pool.
00:30:22.718 - 00:30:23.858, Speaker F: Pretty big number.
00:30:24.024 - 00:30:25.106, Speaker A: It's a big number.
00:30:25.208 - 00:30:26.360, Speaker G: Big number.
00:30:26.810 - 00:30:28.662, Speaker F: That's the calculus, I think.
00:30:28.796 - 00:31:19.158, Speaker A: Well, I think there's also some precision, right? I think you want a big number by wanting a very strong top of line organization for the partnership, restructuring the partnership. But I also think there's some calculus, and the calculus from our standpoint is you effectively are talking about liveness on something that Haron has near infinite bounds on what it can secure. So we think about a traditional, let's say consensus, where you look at the vectors of safety and liveness. Well, if you're thinking of zero knowledge proofs, you have maximized safety. The safety of the computation is entirely a product of mathematics. Unless you were to have a bug in your circuit, then there is no way to falsely create a proof of a given computation, and so you have safety maximized. But if you have one actor computing a proof liveness is near zero.
00:31:19.158 - 00:32:08.310, Speaker A: If something happened to that one prover, everything downstream of that that is predicated on that safety and that liveness will fail. And so no matter how safe your zero knowledge proof is and how much value you can underwrite with the zero knowledge proof, if you don't have a guarantee that that proof gets served when it needs to be served, then you have a tremendous possible loss of value. Imagine if an oracle network just shut off one day before price dropped. Everything is still being lended and priced for a lending app on an incredibly high value, on a token. And that token is outreading. At zero, you can drain all the pools, especially if you have something like a single pool that people are lending off of. And so at the end of the day, you need to have guarantees that are equally as weighted by economic basis as the proofs are.
00:32:08.310 - 00:32:20.262, Speaker A: And so that's why when we think of the number we want, it's something that is confidently larger than what could be returned meaningfully by trying to mount a liveness attack on a ck protocol.
00:32:20.326 - 00:33:04.390, Speaker F: And obviously that number will increase over time, right? Right now, I think we are in the earliest stages of price discovery and figuring, okay, well, how much security is demand? Because in the end, Lagrange succeeds by getting people to use their stuff. So how much security is needed for people to feel like, yeah, I'm confident in using this thing, and we're in this very close to risk free environment where, again, slashing doesn't actually exist yet. And so, like, okay, how do you price that? That means not quite zero, but it's something a little bit above zero. So we're in this super early price discovery universe that will probably converge in maybe another year or two.
00:33:04.540 - 00:33:29.840, Speaker A: So one thing I wanted to add that I think is an important framing. No matter. So the network of a coprocessor could never generate a false proof. It could never lie and say, this is the wrong proof. It could never create something false. That said, the price is 50 when the price is one. What it could do is someone could mount a very large attack in theory, and say, we're going to join the network and never do anything.
00:33:29.840 - 00:34:12.734, Speaker A: So the network stops so that we can make the network really slow by when we're asked to compute a partial proof, we don't compute anything, we step back and we refuse to do any work in that situation. That's where liveness is important. It's to stop people from just taking passivity and taking, just blocking action. And so that is what this number, in fact protects against. It's saying that for someone to do that, they'd be forced to compromise what would be 66% of the network. So they would have to, in essence were just ether. Five delegated operators that were in the network, they would have to mount an attack of size, what would be two thirds of that.
00:34:12.734 - 00:34:32.590, Speaker A: So like 700 million is what they'd have to be willing to burn. So a massive, massive attack would be required. And that just means that when you say, I need my proof for this protocol, but how do I know the protocol doesn't just shut off? How do I know that AWS doesn't go down well, you have that level of guarantee.
00:34:32.750 - 00:34:52.134, Speaker G: So guys, let's tie all of this together. In the article that you guys released. Etherfi will now be actually using some of Lagrange's tech with their oracle rebasing. So maybe one of you can kind of dumb this down for us. What is that relationship? How's that being utilized?
00:34:52.262 - 00:36:18.550, Speaker A: Yeah, so one of the things that we're very excited about is both the commitment of Etherfi to delegate to the support or network, as well as the commitment of Etherfi to use AVss as part of its infrastructure to just kind of create an LRT that actually uses the things that it helps secure. And so with the relationship that we have with Etherfi, with this use case in particular, what we're looking at doing is using Lagrange's ZK coprocessor as a way to replace LRT, rebasing oracles as part of Etherfly's core infrastructure. So with Etherfly's function, and I'm sure Mike can speak a little bit more to this, it's a rebasing LRT. So it computes changes in rewards from beacon root state. And right now there's a set of nodes that do that, their oracle network that then feeds that result back to the consensus layer in order to change the basis on the east token. With ZK co processing and what we do, we're able to kind of remove that dependency on the trust on the oracles and shift that onto a purely mathematic based approach with Zkat. And there's by extension other use cases that we started talking with fibrot as well, in particular in the liquidity protocol that they've recently brought forward that we think will kind of extend the vault functionality, that they have to be able to do things that are really innovative, that other DeFi protocols have yet to be able to do.
00:36:18.550 - 00:36:20.406, Speaker A: Very expressive strategies, for example.
00:36:20.508 - 00:36:58.806, Speaker F: Yeah, that's great. I mean, you got it. You pretty much covered it. But yeah, the whole idea is that in addition to providing security, we want to use Abs to make our infrastructure better, because I think that just demonstrates the utility that is available. The two products that we have, the first was the one that we launched with is Etherfi staking, and that has this rebasing functionality where every day we have to figure out, okay, how much ETH is in the whole thing, and then that revalues the token. And so right now we use oracles for that. We'd love to use something like granch.
00:36:58.806 - 00:37:49.602, Speaker F: And then we launched our second product called Etherfi Liquid, which has answered the question of, okay, what do I do with this? Restate deep. Can I use it in defi? You can, of course, just hold it and keep it sort of dear. Or if you're interested, you can deploy it into deFi, put it into Dexes to earn liquidity pool fees. You can borrow against it, lend against it. You can do all kinds of fun stuff in defi. And in the context of liquid managing that for our users sort of autonomously, that's where Lagrange could come in to have these kind of algorithmic strategies that are actually implemented on chain without having the discretion of a fund manager or somebody making decisions to some degree. So I think that's a really cool use case, guys.
00:37:49.656 - 00:38:13.526, Speaker B: I think this is a good place for us to start to wrap up. So I want to first remind our listeners that they should learn more about ether fi by going to ether phi. Follow ether underscore Phi on Twitter. You can follow Mike at mike silligodzi. We'll put that all into our show notes. Then you should go to Lagrange Dev to learn more about Lagrange. You can follow their Twitter handle.
00:38:13.526 - 00:38:57.190, Speaker B: It's just Lagrange Dev. And then Ismil's Twitter handle is just his first name, underscore h, underscore R. And we'll put that all in the show notes. Guys, thanks for getting on so urgently with us since this announcement. And again, it's exciting because we've been talking with Mike for really the past year about what's this going to look like when Eigen layer goes live, so it's cool to see these developments happening in real time. Maybe we could close out then with just some commentary on when do you guys think Eigen Layer mainnet will go live? Do you feel like you're ready with Lagrange and Etherfi and anything else that we can look forward to in terms of next steps?
00:38:57.850 - 00:39:18.334, Speaker A: We are very excited for Eigen Layer mainnet going live. We're ready to deploy as soon as Eigen Layer is going to be moving forward with their mainnet deployment. We are working closely with their team, and their team has been incredibly supportive of us throughout this entire process, and we're excited to stay aligned with the timelines that they have.
00:39:18.452 - 00:39:32.062, Speaker F: Yeah, I don't know that nobody's ready. Eigenve is not ready. We're not ready, but we're going to be Eigenv keeping kind of everybody on a pace, and I'm sure we'll be alive in the next month or two.
00:39:32.196 - 00:39:44.770, Speaker C: Thanks everyone for tuning in. If you're a talented founder or developer, please consider reaching out to our team at Fourthrevolution Capital. And for future episodes of the Edge podcast, please check out our link tree at Edge pod.
