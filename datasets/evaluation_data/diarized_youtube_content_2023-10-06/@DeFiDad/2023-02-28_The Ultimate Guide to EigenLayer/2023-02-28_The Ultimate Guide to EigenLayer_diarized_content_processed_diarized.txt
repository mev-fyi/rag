00:00:00.250 - 00:00:37.080, Speaker A: I came back and I was talking to one of my friends who's from Google, and I said, and I went to this, like, Ethereum conference. I don't hold Eid. I didn't contribute to the Ethereum protocol, but I feel like I'm an Ethereum guy. There is this community who's, who's centering themselves around some core principles, principles of, like, you know, permissionless innovation, principles of sense resistance, principles of credible neutrality. And these are such overarching, powerful principles that have led to kind of, I would say, evolution of society in many ways.
00:00:42.570 - 00:00:53.134, Speaker B: Hey, welcome to the Edge podcast. I'm Defi dad from Fourth Revolution capital, and I'm joined here by my co host and colleague from four, RC Adam, aka nomadic Adam. How you doing?
00:00:53.252 - 00:01:16.426, Speaker C: I'm doing great. So excited to talk to Sriram today about Eigen layer. I'm in like an analyst telegram with about 300 analysts. And many months ago, all anybody was talking about in this telegram channel was Eigen layer for about two weeks. So I take that as pretty good signal. And yeah, can't wait to dive in and learn more about it with the man behind Eigen Layer.
00:01:16.478 - 00:02:01.730, Speaker B: As Adam just mentioned, Sriram is the founder of Eigenlaire. Sriram is an associate professor at the University of Washington, Seattle, where he runs the UW blockchain labs. We are here today to talk with him about the innovations that he's building for the decentralized infrastructure of web three, the end product of Eigen layer. If I were to try to summarize, this is a world where e stakers can lend the decentralized trust of Ethereum. Now we can expect new services, apps, protocols, et cetera, to be built on top of Eigen layer as they eventually borrow the security and decentralized trust of Ethereum as a service. And so we're going to try very hard to make it understandable, even for beginners. So let's get right into it.
00:02:01.730 - 00:02:04.354, Speaker B: Sriram, welcome to the edge. How are you doing?
00:02:04.552 - 00:02:13.574, Speaker A: I'm doing great. Thank you so much for bringing me on the Edge podcast. Great to be here with Adam and defied Adam, this chat. Looking forward to it.
00:02:13.692 - 00:02:29.690, Speaker B: What originally solidified your commitment to work on Ethereum? I know we can talk a bit about your background getting into crypto, but I'm actually more interested in how you focused your attention and your efforts on Ethereum.
00:02:30.370 - 00:03:49.590, Speaker A: That's a very interesting story. I've been working on crypto for blockchains for at least five years and sometime 2021, I think. June I decided to take a break from the university and try to build a project. And initially we had this goal that, hey, how do we enable anybody to more easily take new ideas at the infrastructure layer and come and build on top of a common existing platform? And we hadn't converged on Ethereum as the place to build. Of course, from the outside, I had interacted a lot with researchers in the blockchain space, both academic and in the practice domain, like, for example, EF researchers and so on, but we hadn't decided which platform to build on. And more importantly, I didn't have any exposure to the communities, the rich living communities behind these blockchains. I just viewed them as, hey, a has this consensus protocol, b has this thing, and it's all just like a technical analysis.
00:03:49.590 - 00:05:20.226, Speaker A: And I would say kind of like the pivotal moment was last year when I went to eat Denver. Last year around this time, February, March, I'd gone to eaten, or it's probably the first time I went to like a practical crypto conference. I've been to a lot of academic, you know, I could sense the spirit of the community in the whole Ethereum ecosystem. And I came back and I was talking to one of my friends, it was from Google, and I said, I went to this Ethereum conference, I don't hold ETH, I didn't contribute to the Ethereum protocol, but I feel like I'm an Ethereum guy. And it's such an, like, you know, because there is this community who's, who's centering themselves around some core principles, principles of permissionless innovation, principles of sensitive resistance, principles of credible neutrality. And these are such overarching, powerful principles that have led to kind of, I would say evolution of society in many ways, just taking some of those things as the pivotal principles and building a community around it. And anybody new or coming in, once they align with the principles, they can feel a part of this community.
00:05:20.226 - 00:05:43.210, Speaker A: And I asked my friend, how many times have you had somebody go to a Google conference and come back and say, I'm a Google guy? Like having not working there, not really even using their products in any way, but just feeling like, okay, this is the vibe that I want to kind of associate with. So that was really a fascinating moment for me when I like, okay, that's what we're doing. We're building on Ethereum.
00:05:44.190 - 00:06:09.986, Speaker C: I love that answer because if I were to summarize very concisely, it was vibes. So that's awesome. And kind of before we jump into Eigen layer, I'm just curious, just as your time as a professor at a university, how are students being introduced to crypto? Blockchain, Ethereum, et cetera? What is the teaching looking like right now?
00:06:10.088 - 00:06:51.162, Speaker A: Okay, that's a really interesting question. I think mostly universities are not the ones introducing the students to crypto. Students have already kind of familiarity. Maybe they bought an NFT, maybe they were trying kind of day trading on the side, like they were doing something and they got interested. So most of the time that's their portal. I would say more than kind of courses that people like me run as academics. It is student societies where they get introduced, like they go hang out, get a pizza, grab a beer, whatever, and then talk about crypto.
00:06:51.162 - 00:07:56.634, Speaker A: I think that's where almost all of the students get introduced. The course I was running at that time was a graduate course. It's for students who want to design new protocols. So it's basically taking distributed systems like PhD students, information theory, PhD students and so on, and trying to tell them like, hey, there's this really cool area. You should really figure out how to kind of contribute to it. But I think what I realized, and it wasn't clear to me at the time when I was mainly an academic, what I didn't realize is the amount of latent energy from the student community that has been unlocked by crypto, and primarily because of the ability of crypto to enable the outsider to come and contribute. And the reason I think this is true is that you have this amazing underlying principle that underpins ethereum and in general any of these decentralized platforms.
00:07:56.634 - 00:08:32.138, Speaker A: The idea that you don't need to be trusted in order to build applications, you're borrowing trust from this massive source of trust rather than you yourself having to be trusted. What this has done is unlocked like a wave of, you don't have to be anybody in particular. You can be a nobody and build on top of this platform. And that's just so amazing. And I look at it, I also used to work on AI, right? That's the other big thing going on. And you look at these two areas. AI very clearly and strongly favors incumbents.
00:08:32.138 - 00:09:00.294, Speaker A: It's extraordinarily difficult for somebody from the outside to say, hey, come in and contribute and improvise and contribute to the state of knowledge. I think it's not the technical barriers. It's not like crypto is any easier. AI is more difficult. I would even say in some sense AI is a little bit easier because you can play with it and do a lot of stuff. Nobody has access to the same kinds of data to the same kinds of compute and so on. So there's a lot of barriers in anybody entering into the space.
00:09:00.294 - 00:09:47.042, Speaker A: Even academics struggle, like with multimillion dollar grants, you can't compete with multibillion dollar companies. So it's just like a huge gap there. But I found it's exactly the opposite in crypto, that basically because it empowers anybody to come and build, there is this amazing bottom up culture, like kids coming up with crazy ideas, throwing it out there and seeing what's happening. I was just so fascinated when I discovered this. It's partly one of the missions of a university is to empower something like that. And I was like, oh, my God, I was at a university. I was running a blockchain research lab with basically PhDs and stuff, and I hadn't quite understood the amount of latent energy that this has unlocked.
00:09:47.042 - 00:10:09.950, Speaker A: Took me many years to actually kind of get exposed to and understand that subculture. I'm very thankful that I got to do it. And right now we have people engaging in our startup and in the lab and other places where it's all through the spectrum, including people just getting out of high school to PhDs and postdocs.
00:10:10.850 - 00:10:18.174, Speaker B: Yeah, I think what you just captured there is crypto unlocks accelerated social mobility.
00:10:18.302 - 00:10:20.206, Speaker A: It's like one of the few places.
00:10:20.238 - 00:11:11.582, Speaker B: That reinforces that any person can come build, invest, contribute in all sorts of other ways. And that is something I want to say. That's an idea that keeps people really inspired and excited to work hard on hard problems and to create new value, to work on things that are a positive sum, not something where we have to ultimately live in a PvP world, the type of world that I think Wall street reflects. And yeah, no doubt that is the impression that all of us got. I think it's part of the reason we're all here. We feel like we're in a sector that's just unlocked all this new value and so much more value that hasn't been unleashed.
00:11:11.726 - 00:11:57.166, Speaker A: Totally. So there is this saying that I think, I don't know who came up with, maybe it's Chris Dixon that Google said, don't be evil and crypto can't be evil. I have a variant of it says, people are saying, don't discriminate, crypto can't discriminate. And that's a superpower, right? Like, I can't discriminate whether somebody is working from the US or from some other country or whatever. They're a Sudhan. How are you going to know you can't discriminate, and I don't need to because they don't need to be trusted because somebody else is underwriting trust for them. This idea that the decoupling of innovation and trust, who brings innovation? Who brings trust, what it unlocks.
00:11:57.166 - 00:13:14.506, Speaker A: I think we are at very, very early stage, and you just mentioned this thing about non zero sum games. It's kind of like one of my root philosophies is non zero sum games. And if you think about what makes non zero sum games possible, right? Like, for the listeners, like, non zero sum game is when two people are playing a game and both of them have a win in it, it's like you can think of it as win win games rather than win loss games. And what enables humans to have to build non zero sum games? And I think there are really two major pillars that enable non zero sum games. One pillar is cooperation, right? The three of us here, we could kind of go our own way and do our own shows or something, and it wouldn't be as interesting as the three of us coming together and presenting this thing where there's an interchange of ideas and stuff. So cooperation creates more value than the sum of the pups, right? So this is a non zero sum aspect, and there is another non zero sum game, and that is innovation, right? Like, because of innovation, we can take sand and turn it into silicon and crazy products. We can turn some atoms in the air into energy.
00:13:14.506 - 00:13:48.006, Speaker A: And through fission and fusion, innovation unlocks the internal potential, which simply wasn't available. So that makes non zero sum games. These are the two non zero sum games. And I think crypto. My own thesis for crypto is it unlocks both of these in a massive way. It unleashes the ability to cooperate because we can work with each other when there is a kind of common element of trust, or we don't have to necessarily rely on each other to know each other, to trust each other. So that's on the cooperation side.
00:13:48.006 - 00:14:23.390, Speaker A: On the innovation side, the idea that I can innovate and compose with other people's innovations means everybody can contribute incremental units of value that then turbocharge each other without having to say that, hey, I have to come up with my own end to end platform, an end to end output. Instead, we all build small units that work together to actually make something much bigger. These are the two values of. I think these are the two bases of non zero sum games, I think, both of which crypto turbochargers. So I'm very, very excited to be part of this community.
00:14:23.540 - 00:14:43.378, Speaker B: I think we have now a clear picture of the principles that drive you as a founder, as a community member of Ethereum. So what are the assumptions that we have to consider to understand the solution that is Eigen layer? Like, what is the status quo in a world where Eigen layer does not exist?
00:14:43.554 - 00:15:29.126, Speaker A: Yeah. So I alluded to this concept that what really like Ethereum did. I think other blockchain platforms followed after this is the idea of decoupling innovation and trust. The idea that I have this common, decentralized trust platform. Anybody who's writing a smart contract application, they can write it and throw it on top of this common platform. And when somebody's using it, they don't need to know the antecedents of who is this person who wrote this code? Are they good or bad? Are they going to continue to provide service? None of this matters, because if that code is correct, and you trust the Ethereum, the platform, then that's it. That's all you need to know.
00:15:29.126 - 00:16:00.618, Speaker A: So this creates this separation of who brings innovation and who brings trust. The Ethereum Blockchain brings trust. The person who writes the contracts brings the innovation, and they both meet and fuse and create this new applications. And I have this example, which I think is useful to think about, is the scale of what decoupling of innovation and trust is. Is, I think, very similar to the scale of what venture capital did. It's the decoupling of innovation and capital. Venture capital.
00:16:00.618 - 00:17:09.522, Speaker A: It's not that old, right? Maybe 60 years, 70 years. That's the timescale at which it has kind of flourished massively. And the idea that I can bring innovation and you bring capital, and these two work together to create an output, otherwise you need to have a double coincidence. The person who's innovative needs to have the capital, or the person who has capital needs to be innovative. If the probability that somebody has capital is 1%, and the probability that somebody has innovation is 1%, it becomes like 1% times 1%, which is like one in whatever, 10,000. So this is the same problem with the coupling of innovation and trust, which is what I would say Wall street was, and we just alluded to that a little bit earlier, is, I'm JP Morgan, I'm trusted, but I also need to come up with what innovations need to be built. And this is not only like, we should not just think of it as, oh, these guys were all in it together, or whatever the structures that were needed, that the fact is that the person, when they are offering like a financial product or an instrument or something.
00:17:09.522 - 00:17:40.922, Speaker A: They need to be trusted. How are you going to trust them? You're going to trust them because they are legally regulated. You're going to trust them because they have 150 year reputation. Otherwise, why would you trust somebody to handle these kind of complicated things? So the coupling of innovation and trust massively reduced the surface area of innovation. And what blockchain does is separate these two. The decoupling of innovation and trust, the ability to take trust off and put it in a common platform and then let anybody innovate on top. So this was the status quo.
00:17:40.922 - 00:18:47.398, Speaker A: And this just blew my mind once I understood the scale of what this can be. The idea that anybody can do this was amazing. But this still contradicted with my own experience working on blockchain. What is my experience is, hey, we know in the University of Washington blockchain research lab, and I was seeing a lot of other very innovative people in the university and research labs and other places building very cool new protocols. How do you build like a very efficient consensus protocol? How do you build an efficient data dissemination protocol? How do you build a scalability layer? How do you build game, theoretically optimal, Oracle, whatever the set of things that people are coming up with, there was no place for them to just say that, hey, I'm just taking my idea and throwing it on top of an existing trust network. In fact, the barrier for somebody with a core infrastructure idea to create it was to basically go build a new trust network. Okay? You yourself being trusted is one thing.
00:18:47.398 - 00:19:24.506, Speaker A: You are able and capable enough to build a decentralized trust network is just like so wacko. Like how many people have the ability to lead social movements, right? It's insane. And the idea that the person who would have the best consensus, protopol, would also be like the best leader of a social movement is. It's insane. Maybe there is one Vitalik or something, one more person like that out there, but there are not like many of them. So it's not a normal thing. It is not an easy thing.
00:19:24.506 - 00:19:57.866, Speaker A: So it's massively reduced the rate of innovation at the infrastructure layer. So anything that could be built as an EVM smart contract, yeah, that's awesome. People built it. And anything that was deeper there was a friction. And I think the one way we can view this story is Ethereum basically came and opened up. So before Ethereum, if you look at bitcoin, if you wanted to build a new application, you could not build it on bitcoin. You had to create like a new type of a bitcoin, right? Like there was this namecoin, which was a domain name system at that time, and so on.
00:19:57.866 - 00:20:38.790, Speaker A: Just any one specific application needs to be like a whole new, oh, I have this mining protocol, I have this whatever staking protocol, something just for that particular use case. And this was the status quo and theorem broke it by opening it up. And I would say that was like the first major opening of permissionless innovation. I would say the second one was the layer two era. The idea that you could. This is again, a place where you can see what happens when you move from a constrained innovation space to a competitive permissionless innovation space. And Ethereum was initially going on this roadmap.
00:20:38.790 - 00:21:14.862, Speaker A: After Ethereum, everybody else also said they're going on this roadmap of sharding. Like, how do you fragment the state that is run on Ethereum and split it into many, many parallel execution enrollments? And Ethereum was going on this roadmap. It was very difficult for to converge on what is the right sharding architecture because maybe there are 30 and we have to discuss a debate, and only one of them can get in. And when you start building on it, it is a five year roadmap. Ethereum is a massive ship. You can't make sudden jerks at moments and scare people away or drown them. It's not acceptable.
00:21:14.862 - 00:21:43.822, Speaker A: And so there was this whole roadmap, which was centered around sharding. And Ethereum basically did the unthinkable, like two and a half years or so back by saying that, yeah, it's fine, we don't have to do sharding. We let the free market do sharding. The layer two protocols. This was crazy. At that time, nobody would have anticipated that this is going to be something crazy and big. But what this did is make things like roll up.
00:21:43.822 - 00:22:16.434, Speaker A: First class citizens, hey, we're not competing against native sharding. Right? Like that would have been uplift. Oh, there's native sharding, but also there's roll ups, and we have to fight with each. I think this goes back to an earlier story, which is Ethereum not deciding to build things like Dexes as native parts of the protocol. I think this is less appreciated. And we think of it as like, of course that should be the case, but it's not at all obvious that that was the right thing to do at that time. And it would have been, I was not paying attention.
00:22:16.434 - 00:22:51.970, Speaker A: I was not in crypto at that time. So I don't know the stories of maybe you guys too. I would love to hear them. But the idea that Ethereum remains completely, credibly neutral and lets other people build and compete on things like taxes and stuff is amazing. This credible neutrality is what has led to this massive growth of permissionless innovation. It's the same thing with, I would say that was the first phase is like at the level of dapps, the next phase is at the level of rollups. But roll ups, while they can do one particular thing, they're offloading and scaling execution.
00:22:51.970 - 00:24:08.086, Speaker A: You cannot use them to change the consensus protocol of ethereum, or add on a new consensus protocol, or write a new bridge, or do a new oracle or any of these other infrastructure components that are equally needed to run like a very powerful ecosystem. So what we think of as Eigen layer is just opening up this permissionless innovation space even more. And what we're doing is saying anything that you can build on top of a new trust network, you can borrow. I think as we saw in the short introduction, the idea of Eigen layer is enable the Ethereum staking decentralized trust arising from Ethereum staking to be supplied to any application, to any protocol, to any. Could be a chain, it could be a service, it could be a module, it could be an application. Anything that requires a decentralized trust network to then just rely on this existing massive trust network again now enabling anybody who wants to innovate to say, hey, I don't need to worry about where decentralized trust comes from for my particular application. I've already given it to the Ethereum network.
00:24:08.086 - 00:24:53.942, Speaker A: Ethereum stakers who opted into the Eigen layer protocol, they can now service this other application. So Eigen layer, to be clear, is not a new chain or a new protocol, it's a new protocol on top of Ethereum. The way it works is it's a series of smart contracts on Ethereum. That's all that it is. And this set of smart contracts allows the existing stakers to communicate their intent to participate in new protocols. And the Eigen layer, core protocols, then talk to these like service protocols, which could be I'm running a bridge or something else. And as a staker, you're now opting into this new protocol.
00:24:53.942 - 00:25:19.090, Speaker A: And what it means is you're accepting to the registration conditions, to the payment conditions, and to the slashing conditions of this protocol. So that's roughly high level. What we are trying to do is continue on the same trend that Ethereum pioneered with the launch of dapps, with the launch of layer two roll ups. Just taking it even further and saying that anything you can think of as building on a decentralized network can now be built on accelerate.
00:25:19.670 - 00:26:36.262, Speaker C: I love that background because you kind of see just your time at the blockchain lab, students and people just continuously building new blockchains and having to create that trust network. And that's not easy to do. And then we've got Ethereum sitting over here, which has this robust and kind of proven trust network, and you can kind of connect the dots to how you arrived at the conclusion of just like, hey, why don't we just use Ethereum, guys? And then let's just see what happens. Because I think, personally, I think we're going to see just a mass proliferation of creativity that's now been unleashed due to that bottleneck before of, okay, hey, I've got a great idea, but first, okay, I got to create this robust trust network on my own and go through all those steps and build in that security. So yeah, it's just really cool to kind of see how you progress to this idea with Eigen layer. And I think you've kind of now answered, what is Eigen layer? And would you say it's almost fair to say it's Ethereum's security as a service, or do you have an even more simpler way of kind of defining it, or is that correct in your opinion?
00:26:36.406 - 00:27:22.470, Speaker A: I think that's a great way of putting it. You can say it's Ethereum security as a service. Another way of seeing it is it's a marketplace of decentralized trust. So if you look at what is like a crypto application, I think we would all agree that the essential ingredient of being a crypto application is that there is some decentralized trust underpinning it. That is the core. If you just remove that, then you'd say minus run it on AWS and you're done. So if decentralized trust is the core ingredient, like the oil powering this entire industry, where are the marketplaces for pricing and evaluating the different dimensions of decentralized trust? If we don't have it, it will be underproduced.
00:27:22.470 - 00:28:34.042, Speaker A: That's what we know from all other kinds of examples, is when you don't value it and pay for it, you're not going to be able to produce an abundance of it. And that's really what eigenvear is aiming to be, is a marketplace for decentralized trust, where decentralized trust, which is emerging out of this ethereum, is being sold. That's why it's Ethereum security as a service. But when it's being sold, people can price the different dimensions of decentralized trust. So one way of thinking about it is what are the aspects of decentralized trust in Ethereum? And I would say at least there are two distinct aspects. One is the idea that there is some amount of stake, some economics packing, like your claims, and in the Ethereum protocol, you're putting down a bunch of stake, which is ETH, and saying that, hey, I'm going to run this ethereum node. And if I kind of deviate from some of the core conditions of the Ethereum protocol, willing to lose my ETH, right? So there is some economics powering and backing my commitment to run this Ethereum protocol.
00:28:34.042 - 00:29:29.922, Speaker A: That's one kind of aspect of decentralized trust, which I would say is economic trust, right? And the thing about economic trust is it doesn't matter if one whale puts up 20 billion, or like millions of people put $2,000 each, it's still like whatever, 20 billion. The idea is that economic trust is invariant to who is contributing the economics. Because you know that if they fail, whether it be a single whale or millions of people, if they fail, then basically you can slash and take away the funds. So that is one kind of trust. There is another kind of trust also emergent and very important, which is right now not being metered. The trust is that which is arising out of decentralization. What do I mean by that? Is, you could say there are thousand nodes running.
00:29:29.922 - 00:30:42.182, Speaker A: Are these nodes really decentralized? Are they around the world? Are they being run by the same person? Or is some person paying all these thousand nodes to do it? Actually measuring and valuing decentralization? This is one thing we know from being in the Ethereum community, that there are thousands of home volunteers around the world who are just like running it. Of course they're making money, so they're not purely volunteers, but they're contributing to the social movement while also making an economic gain. So that's what is going on with Ethereum staking. And the thing is, I'm sure in the show you discuss a lot about things like MeV. And when we think about things like Mev, one of the important things we think about is does it have a centralizing tendency? Is there any way in which, oh, we don't need to be decentralized, we just run like one validator and that's actually more profitable, then maybe everybody will start running one validator. The thing is, in existing protocols, there is a natural drift to centralization, because if you centralize you can kind of like, you have more economies of scale, you have more efficiency, but there is no drift to decentralization. But that's bizarre.
00:30:42.182 - 00:31:22.514, Speaker A: Like our whole space is predicated on the idea that there should be decentralized trust and there is no way to value and pay for decentralization. What is this? So of course it's going to get under provisioned over time. This is one of the things I'm most excited for about Eigenve, is it has a way to value and pay for decentralized trust. Imagine a service building on top of eigenve. And before I go into this, I just want to clarify the true trust models. The true trust models are you would rely on economic trust when the type of errors that you can commit are provable and slashable, right? Like, oh, you produced an invalid block. That's a solid error, and it's provable on chain.
00:31:22.514 - 00:31:37.366, Speaker A: I can prove to you that, hey, he produced an invalid block. He should never pollute an invalid block. If you run the proper client, he did it. So want to take away the fund. So this is a solid attributable error. There are many non attributable errors. I don't include somebody's transaction.
00:31:37.366 - 00:32:44.674, Speaker A: Okay? And why do I not include it? Maybe because it bids up. There's a major auction going on, and there are like $10,000 bids and $2 million bids. And if I censor these $2 million bids, then I can buy the object for $1,000, right? So there's a huge amount of reliance of censorship resistance, not only in a kind of geographic manner, but also in every manner in the protocol. If the oracles get censored, if the bids get censored, like, this system is not going to be functional. So we need a massive amount of censorship resistance to actually have a functioning protocol. And how do we get it? We get it and it's not attributable, right? Like, how can I prove to you that you got this transaction and not included it? It's not a provable fact, it's not attributable. And the only solution we know of as like blockchain architects is the idea that have a decentralized community bad testimony to this, right? Like you have thousand nodes, and if a majority of the nodes say that they saw the transaction, then that transaction is included and so on.
00:32:44.674 - 00:33:15.100, Speaker A: So if we have a decentralized group of nodes, then that's one of the protections against non attributable faults, because as long as you can extract a majority opinion then it's very valuable, and so on. Eigen layer, like people building services, Eigen layer is a two sided market. If it's a security as a service, then basically somebody's providing security, somebody's buying security. Decentralized trust marketplace, same thing. You're supplying decentralized trust. Somebody is buying decentralized trust. Right.
00:33:15.100 - 00:33:59.670, Speaker A: Services which are built on eigen layer are the ones kind of buying this trust or renting it, because it's temporal, like you're paying per unit time, and if you don't want it, you can mow away. So you can think of it as renting trust. But the idea is that whoever is buying this trust can say that I actually want to rely on decentralization. I only want to admit decentralized nodes into my protocol, and it could start valuing decentralization. So what could happen is if a lot of services are built on eigenve that pay a premium for decentralized nodes, then decentralized nodes start earning a premium relative to centralized nodes. And there is a drift to decentralization. This is insane.
00:33:59.670 - 00:34:21.520, Speaker A: This is amazing, because now it's a core commodity that we value, but it's a public good that nobody wants to pay for, then it's just going to degenerate. But if it is something that is valued and paid for, then people will produce it more. Somebody say, oh man, there's like 1% premium if I run a node from Rwanda and just do it right. And that's awesome.
00:34:22.130 - 00:35:12.830, Speaker C: Yeah, I think my aha moment when I was kind of looking into Eigen layer, it was a quote that you said that I heard on a podcast. And essentially, I'm kind of sick of the meme that nobody cares about decentralization when it's pivotal to the entire ecosystem. And what I love about Eigen layer is like you've been saying, you're finally introducing a value to decentralization as far as I'm concerned. The first time I've ever seen that. And that's so novel to me, because now there's going to be an incentive attached to being decentralized. I think it's just going to unlock so much potential, and I'm super stoked. But anyways, I'll let Defi dad jump in here.
00:35:12.900 - 00:36:02.410, Speaker B: Do you think a good parallel is if we think about Ethereum as like a city or like a digital nation state, and then we've got other applications, protocols, even blockchains. The nation state of Ethereum, its number one export, then becomes this decentralized trust or security so we're basically allowing stakers ultimately to ship that trust out, and that is then being imported by these other blockchain cities, nation states and so on, which is why it's so radical. It's not a parallel, I'm sorry, there's no parallel, there's no comparison other than really what I just said that has helped me to better understand this. But, yeah, am I making sense?
00:36:02.580 - 00:36:35.910, Speaker A: Yeah, this is really kind of one of our pivotal mental models here. And I think you kind of articulated it very nicely, the idea that, okay, so before we go to the nation state, Manu, let's start with what Ethereum itself did. Ethereum basically said, city states are no good. Let's build the nation state. What is a city state? A Dap chain is a city state. Bitcoin is of course a massive DAP chain. So it's exceptional so it can sustain its own economy.
00:36:35.910 - 00:37:16.322, Speaker A: It's great. But every new tiny application cannot create its own security. It's just like insane for tiny cities or new cities to spring up. If you say that each city needs to have its own armed guards. And what Ethereum did is it said, hey, we're drawing these borders and anybody can come and create new cities here, cities and application, right? Like you can create all these new cities here and we provide integrated security to all of these cities. Now a lot of people coming and constructing cities saying, hey, in my city you could come and do this and so on. It's an amusement park, whatever, all these things being constructed.
00:37:16.322 - 00:38:14.310, Speaker A: So ethereum itself is the shift from city states to nation states. So city is the application. Nation is like, okay, now there is an issue with the nation state model of Ethereum as of today. What is that? So if you're running a Defi application, you are relying on the ethereum like security to secure block production, censorship, weatherstones and all of this stuff. But it does not secure your oracles, it does not secure your bridges, it does not secure some of the other functionality I need to be as a city. So imagine like if this is this nation state and the Daps are these cities, suddenly as Dapps become richer and richer, they have this new surface of exposure. Maybe there's an air attack, right? Like the air is, let's say the oracle, right? Like something's coming in and you have armed guards just standing guard on all your four borders, but nobody's protecting the airspace.
00:38:14.310 - 00:39:23.082, Speaker A: And so somebody says, oh, hey, I'm an oracle service. I'm providing defense against ass stuff. And you now have this new security model on the third dimension, which is oracles, you have some other security model in the fourth dimension, which is bridges, you have different security model in the new dimension, which is data availability. And now as a city, you are less sure how much of security am I really getting from Ethereum because you have this massive armed God standing on all the borders, but then you are at the end of the day constrained by the worst security exposure, right? Like could be the oracle is exposed, then it doesn't matter that you're in a very, very secure block production if the oracle is gone, like your tap collapses. So this is the first thing that I think Eigenve can redeem is by making the security of Ethereum programmable. Now this can supply the Oracle, this can supply the data availability. The same security can provide all these different services by provisioning more and more services.
00:39:23.082 - 00:40:21.554, Speaker A: What happens is you're collecting more and more fees, the Ethereum security is collecting more and more fees from these different services. And this growth security for everything uniform. Instead of having, let's say 2020, 5 billion stake, which is the case today, maybe we will have like 50 billion stake because we're not only securing DoC production, but we are securing Oracles, we are securing bridges, we are securing all these different things together. So that's the first element on this analogy that I want to emphasize is city states and dabs, nation state, Ethereum. But then you have this new thing of things like air exposure and space exposure and border exposure, and different attack vectors, and there were different local defense systems built for each of these things. And no, that doesn't make sense. You need to have an integrated response to all these different kinds of security attacks, and that essentially grows our own.
00:40:21.554 - 00:41:06.814, Speaker A: Like one of this is before Ethereum. So now I'll come to the next level of what Eigen layer enables. This is already something that's uniquely enabled by Eigen layer, because Eigen layer enables the Ethereum security to be programmable and supply it to all these different services, to be the arguard, to be the Navy, to be the protection against chemical weapons, whatever. So you have these different dimensions of attacks, you have a uniform security protection against it. That's number one. Number two, building on this analogy, which I think defed, had beautifully laid out the idea that you're not only supplying security to your own nation, you're exporting security to other nations. Somebody says, I could be like a DAP on Ethereum and consume additional modular services built on Ethereum.
00:41:06.814 - 00:41:35.402, Speaker A: That would be the first class. But what I could do is I could just be my own chain, my own nation. But I'm borrowing some aspect of security from Ethereum. That's the security export analogy. I think it's a great analogy. And it will happen that basically when a nation state starts, a new nation state starts, they'll say, yeah, okay, I'm borrowing security from Ethereum, and I'm going to build this up a little bit. And as I build this up, I'm going to be borrowing it.
00:41:35.402 - 00:42:07.666, Speaker A: And if I have enough security on my own, then I may say I don't want to borrow it anymore. It's totally fine. It's a free world. We want as much of innovation surface to happen, so things like that will happen. But because Ethereum is going to have itself be much more tightly integrated in its own security because of wagon layer, you have all these other services built and they're all permissionlessly innovated on. So it's not like one oracle that one group of people have to come up with. It's not one scaling solution that one group of people come up with.
00:42:07.666 - 00:42:40.890, Speaker A: It's a permissionless free competition. There's somebody out there who will make a 10,000 eggs in figuring that out, right? Like how to build the best oracle, how to build the best data scaling, how to build the best each one of these services, and they're all going to come in and do it. And so that's the power of Eigen layer, what it does to the Ethereum ecosystem, but also what it supplies to other new people, starting just completely new chains which want to be on their own turf. But initially they have a bootstrapping problem. They want to just borrow something from Ethereum.
00:42:40.970 - 00:43:12.234, Speaker B: With over 170,000,000 Tvl crosschain the multichain liquid staking protocol. Stator Labs is just about to launch the ETH liquid staking token ethX. Ethx will give you the best of decentralized staking and defi yields. What's more is that anyone can permissionlessly run an ethx node with just a four ETH bond. To get more alpha on the ethics launch, go to statorlabs.com ethereum with all of that. Understood, then how would you envision a.
00:43:12.272 - 00:43:12.860, Speaker A: Future.
00:43:14.830 - 00:43:54.598, Speaker B: UI UX in terms of using Eigenlair? What are some of the applications, I guess that we would expect once Eigen layer actually goes live? I'm thinking about this kind of as like a lending borrowing market where e stakers are lending, providing the security or trust of the Ethereum network. And then you've got builders, apps and so on, either like buying or renting that trust. But yeah. Do you have any sort of vision at all for what some of these interfaces might look like?
00:43:54.764 - 00:44:42.790, Speaker A: Yeah. We are very early in this design, would love to solicit inputs from the community, but I can provide a high level understanding of what the set of possible interfaces are. The first one is there are two sides to the market, right? One is stakers and the other is like service builders, even stakers, you can kind of divide into two group, like stakers who have the money, and then like node operators who might be the same as stakers or might be different from stakers. This is like staking as a service providers or whatever, let's call them node operators. So you have stakers who have the money, you have node operators, and then you have service builders. So what are the different interfaces? I'll start with the service builders. Service builders, what are they doing? They are writing a new service.
00:44:42.790 - 00:45:27.042, Speaker A: What does it mean to write a new service? You write like node software for that service which is downloaded and run by node operators. Node operators need to be running all these services and they'll download and run these services. And the service builder is building this off chain component of the service, but it's also building an on chain component, which is the smart contracts that adjudicate who can register for the service. What is the payment condition? Maybe I'm paying like one e per gigabyte of data stored, whatever, some equations like that. And then the third one is if they misbehave, for example, they don't store the data. And I recall the data on chain and they don't produce it. I'll slash that.
00:45:27.042 - 00:46:31.266, Speaker A: Well, there are some set of conditions that is built on the Ethereum contracts. So that is the protocol for a service has an on chain aspect, which is writing a service smart contract in EVM, which tops to the Eigen layer. Smart contracts off chain, you're building this like software that node operators have to download and run. So that's the UI on the service side. So what set of conditions are needed for the off chain software and stuff? We are just on the process of designing, but the on chain like interfaces we've already designed and we'll hopefully make it public in the coming two months. So that's the service side. Let's look at the staker side, which is the monetary aspect or the economic aspect of this, who's putting in the money? So you may go to a web interface and say, hey, I have this much of ETH or I have a liquid staking derivative, or I want to natively stake whatever the thing is.
00:46:31.266 - 00:47:07.400, Speaker A: You'd say that and then say that I'm putting in this much of money and I want to opt into these five protocols. Or maybe there are risk levels. And you say like, I want to only opt into the lowest risk, medium risk according to somebody you trust. You just go with some lists of recommendations and you go in and you say, I'm opting in for all these services. And here is my node operator. It could be yourself, because you have a home node and you just want to run more services on it. Or it could be like, hey, I'm going to delegate it to some third party like Coinbase cloud or corus nor figment or something.
00:47:07.400 - 00:47:57.006, Speaker A: So you do that, and that's basically the stakers interface, right? So they are basically saying how much stake they are committing. They are also saying, who is it that is providing the node operation? Node operators, their interface is simple. They're downloading and running these services in exchange for some free market rate of a fraction of fees. I think one thing I want to point out here is if you look at kind of the ecosystem today, the cost of running the nodes, the operational cost of running and maintaining nodes is actually not that significant. Even in extreme scenarios like Salana, people say it consumes a lot of computational power. But even there, running a node like annually is $10,000. And maybe there are thousands of nodes like, that's like $10 million annually.
00:47:57.006 - 00:48:38.850, Speaker A: But the cost of capital of staking Salana is like maybe half a billion, right? Because you're staking like 5 billion or 10 billion worth of salt. And that basically means if you want to give like a five to 10% APR, we're talking about half a billion to 1 billion. So the cost of staking is fundamentally the economic cost. And the node operating cost is very small. What you can think of Eigen layer as is a way of amortizing capital cost across node operation costs. So instead of just doing one specific node operation, you run like many, many different nodes and you amortize the cost much more equally. So that's the Uiux on the three sides of the market.
00:48:39.000 - 00:49:15.630, Speaker C: While we're kind of on that topic of node operators, something that's kind of like top of mind for me is the liquid staking derivatives and how they've found product market fit in a post merge world. And would love to hear you kind of speak to how eigen layer aligns or integrates with some of these liquid staking derivatives providers. And if you could also touch on, are there any that are more preferential because of broader decentralization? Or is Eigen layer kind of able to integrate with all of these lsd providers?
00:49:15.970 - 00:49:43.602, Speaker A: Yes. So there are two ways of restaking on Eigen layer. One way is you can take a liquid staking derivative and deposit it into the eigen layer contracts. And then you can appoint who your node operator is. That is one way of restaking, which is liquid restaking. You take a liquid staking derivative, and then you can restake on Eigen layer. You can also do native restaking, which is you're a home validator.
00:49:43.602 - 00:50:30.806, Speaker A: You don't want to go into any liquid staking protocol. You just set the withdrawal credentials to the Eigen layer contracts, and then that is countered as native restaking. And the way that works is if you went nice and did all the in the normal path, you would be able to just withdraw your money from the Eigen layer contracts. But if you did something bad on some Eigen layer service, when you try to withdraw your money, eigen layer contracts will hold off a portion of the money and then only let you revert the remaining ones. So these are the two types of restaking. One is liquid restaking and the other is native restaking. Now, to answer your question as to which liquid staking derivatives do we support or want to support? We want to support everything.
00:50:30.806 - 00:51:07.058, Speaker A: One of our core design principles on Eigen layer is what we call intersubjectivity. Intersubjectivity is a principle of neutrality. The idea is we don't make subjective decisions. To the extent possible, let each service, so let's say you are building an oracle service, and then you say, oh, I only want the most decentralized quorum. I only want native restakers. Yeah, Eigenair will allow you to only get security from those say, no, no, I'm okay with only native restakers and rocket pool, whatever. Like you say, yeah, okay, you can opt into that.
00:51:07.058 - 00:51:40.906, Speaker A: Somebody might say, actually, I don't really care about decentralization. I want the maximum amount of economic security. Why? Because if they misbehave, I have a way to keep them accountable. I can slash them and I don't care. And they may say, yeah, Coinbase ETH is enough, right? So it's a spectrum, and everybody can come and decide. So it's a completely neutral platform in that sense that anybody can come and decide. Each service exerts subjectivity onto what set of either liquid staking or native staking services.
00:51:40.906 - 00:52:27.500, Speaker A: They want to support. And the way we think about the relative value of more centralized versus the most decentralized. And I would say something like Lido is in the middle and they're trying to get to more decentralized by building this new permissionless liquid staking protocol. The idea is that it's not for us. We want to be as close as possible to just Ethereum staking take a completely unoppinionated position on how these things play out, because things can start out in one way and turn in another way. It could also be that there is a bifurcation and people say, oh, there is a lot of applications for which I don't really care about decentralization at all. And one node running it is good enough.
00:52:27.500 - 00:53:01.702, Speaker A: And because it's only one node running it, there's a huge amount of operational efficiency, which is I don't have to pay a lot for operations. And the heavier services maybe just gravitate towards that. And there may be other services which absolutely need unwanted decentralization. And they will say that I'm paying whatever premium is needed to get decentralization, I'll pay more. And these nodes. So the market will then evaluate the relative merits of all these things. And I'm as good a judge as any of you as to how that would play out.
00:53:01.702 - 00:53:30.750, Speaker A: But at least there is no preconceived conclusion that the centralized one node thing is the best. That's not the case. There is some value to decentralization. There'll be services which differentiate themselves on this merit and say that here is a service that's built on the most decentralized network. And if there is a use, and I'm sure there is a use for decentralization. If there is a use, people will pay for it and that fee will go to the decentralized takers.
00:53:31.090 - 00:54:16.718, Speaker C: Yeah, that's so cool. Like, Eigen layer essentially indemnifies themselves from having to make that decision and just leaves it up to the market who will make whatever decision that they want based on kind of that risk reward calculus that will eventually play out. So that'll be really interesting just to see that kind of human behavior aspect of that. So one thing I want to kind of key in on too, Eigen layer will essentially be taking control of staked ETH at some point. And I guess we're talking about trust and you're going to be dialing into Ethereum's trust. How does Eigen layer build the trust initially to allow people to be comfortable with that? What's your plan there?
00:54:16.884 - 00:55:14.174, Speaker A: Yeah, it's a question we think about a lot when we want to. I think there are two parts to this. How do we make sure our system is solid and hacktight? To make sure that we are, as the contracts take in people assets, how do we make sure they're safe? We are thinking about a lot of things, like how do we add circuit breakers, how do we add past functionalities? How do we protect ourselves against contract bugs? I'll dial into that. But before that, I want to make this high level observation that one of the basic propositions of blockchains is creating non subjective mechanisms of trust. Right? But at the end of the day, all of trust is. You could think of blockchains as either. You can take two extreme views.
00:55:14.174 - 00:55:49.562, Speaker A: One view is blockchains are creating objective trust in some way. Another view is blockchains are just codifying subjective trust. They're just like making it easy for people to take the subjective trust, which is essentially emergent from the community. But a community cannot meet every 12 seconds and agree on stuff. So we are just like making an algorithm that then executes our will. But it's at the human level. But this interplay between human subjectivity and purely objective mechanisms is, I think, a very fascinating one.
00:55:49.562 - 00:57:03.970, Speaker A: And we are not taking an extreme position on this, saying that, for example, it has to be all objective trust or it has to be subjective trust. And we have to interlace these two in complex ways to get these systems to work. And you can already see it in things like DeFi protocols or things like roll ups, right? There is a governance layer usually attached to it, and the governance layer can step in during if there's a contract bug or if there is some set of issues, there is a subjective layer that can activate itself and help people work through it. Because we are far from a scenario right now in blockchains where we could say, oh yeah, contracts are all formally verified and it exactly does what it says, and you don't need to worry about it. I think we are not there. So we are putting a series of precautions in place. One is basically having a layer of human subjectivity and like emergency upgrade procedures, which could be basically ethereum community members essentially having the ability to trigger upgrades if there are smart contract bugs.
00:57:03.970 - 00:57:58.306, Speaker A: There is the general class of how do you govern a protocol which has staking, right? And I think this is similar to all the defi protocols and all the layer tools. There is another thing which is specific to Eigen layer, and the thing that's specific is what if somebody writes a contract or a service on eigen layer which promises somewhat of a higher yield? Everybody opts in. And once you have everybody opted in, it just slashes all the stakers, right? Like this would be the nightmare scenario. And the way we prevent against it is by having a veto for slashing. Like there's a kind of ethereum community members who can, only thing they can do is to veto slashing decisions before they are actually actuated. So you don't slash before the veto time passes. And so this enables a layer of human subjectivity to come in and say that, yes, okay, this is actually a valid slashing decision versus it's not.
00:57:58.306 - 00:58:05.634, Speaker A: And so slashing on angle layer is designed to be naturally raft, so you don't trigger slashing on a regular basis.
00:58:05.762 - 00:58:30.080, Speaker B: Can you go back to then this issue of slashing? What happens when you're a staker and let's say you're lending security or trust through Eigen layer and you get slashed? How does that affect those on the other side of the eigen layer market who are borrowing that trust and security?
00:58:30.850 - 00:59:45.990, Speaker A: Yeah, so if you're a restaker and you get slashed, let's take the simple example of your depositing liquid staking derivatives, right? Which is, okay, you have some people who have staked on one service and they basically misbehaved on that service, and then they lose their stake. And if they lose their stake now, they're no longer, because all of this can be kind of instantly understood by the contracts. At least as soon as somebody has triggered the slashing, the contracts immediately know it. We can immediately intimate the service that the other services that may have depended on the same stakers that the total economic security you are getting, it was 10 million, right? Now it's gone down to 3 million or whatever the thing is. And so we can integrate these other services about it. So that's number one, right? Because slashing happens on eigen layer and all services are talking to Eigen layer, we can inform them of the amount of security that they are having, and they may say it's not enough. Then they can increase the reward rate or rectro traditional restakers or the interfaces for these on the practical markets need to be worked out, basically.
00:59:45.990 - 01:00:23.598, Speaker A: Is there like a pop up on these guys saying that, hey, there's this new staking opportunity. You want to opt in, you have this percentage rate and people opt in. Okay, but that's the basic dynamic with native restaking. It's a little bit complicated, at least immediately it's because right now, smart contracts which hold the withdrawal credentials cannot immediately slash from Ethereum. The validator has to trigger the withdrawal. From Ethereum, the validator has to trigger the withdrawal. But there is an upgrade that people are talking about in the Ethereum community, which is smart contract triggered withdrawals.
01:00:23.598 - 01:00:59.694, Speaker A: Once that is up, which won't be part of Shanghai, but eventually, once that is up, that basically enables smart contracts to also do the same thing. You can just withdraw from Ethereum instantly or trigger the withdrawal instantly. So that's the dynamics. What happens to the slash funds initially? V one, we are going with a simple design. It's just frozen, nobody can touch it, whatever, something simple. But eventually you can create insurance bonds against slashing. So if you are a service and you have like, if you want, like.
01:00:59.694 - 01:01:58.290, Speaker A: So there are two aspects of security you're getting from Eigen layer. One is chat security. Let's imagine a simple world where every restaker opts into every service, okay, let's say there's $20 billion of restaking and everybody's opted into every service, but you are running a particular bridge and you are like, this is already interesting and useful for many applications even without specific insurance, because you're saying, oh, I'm running a bridge or whatever to attack my bridge. You cannot just attack the bridge, you have to attack a $20 billion of security, right? And of course, because there's $20 billion, and if you attack this and because you restaked on all these services, you could attack all of these protocols, but larger and larger attacks become more and more difficult to do. Right. If you have $20 billion, how do you exit with $20 billion? Are there exchanges? Are there liquidity? Like are you going to be caught in the real world? There's just so many problems that make it, there is a hardening of security at certain scale. And so that is already like a very powerful thing in aggregated security.
01:01:58.290 - 01:02:55.134, Speaker A: Okay, so this is the model that we would launch with, but eventually we have this idea of creating insurance bonds against slashing. So what you could say is there is $20 billion worth of slashing available if something goes wrong. And on my oracle, I want to take an insurance for $1 billion of slashing. So whatever happens, if my service goes bad, I will get $1 billion worth of slashed amounts sent to my contracts. Why would you do it? You would do it because people are transacting on your oracle. If your oracle or bridge has wrong state, then essentially you would lose customer funds. And essentially you can pass on this insurance back to your customers as a bridge creator and say that, yeah, I have $1 billion of insurance, and an attack takes at least whatever, like half a day to be detected or one day to be detected.
01:02:55.134 - 01:03:50.902, Speaker A: So I'd say then I don't transact more than $1 billion in a half day or one day period. And what that now does is I can guarantee, like, my consumer funds are all intact because anybody who lost their fund due to wrong or wrong bridge inputs can now be compensated via the slashing the insurance return that you're getting from Eigenve. So we are thinking through these markets, it's early stages, but I'm very fascinated with this idea of unconditional security. The idea being like, as far as the bridges viewpoint, it is getting unconditional security. It is either getting security or it is getting the insurance fund. And if it makes sure to transact less than the amount that it is insured, then basically from their viewpoint, they don't need to worry about it. And I think this is a system that is not available on Ethereum or any blockchain today.
01:03:50.902 - 01:04:07.740, Speaker A: Like, applications cannot take insurance against slashing. But I think this would be a very, very powerful primitive. We are working through all the details for it. Hopefully we'll write up some white paper on this, even for Ethereum or core protocols, but also for protocols built on top. Like I can let it to leverage something like this.
01:04:08.190 - 01:04:37.000, Speaker C: Yeah, that's really interesting. I hadn't delved deeply into the insurance slashing that you guys are also going to be able to propose with this. So that's really cool. Something else that I've been thinking about and would love to ask you is just if one of these new chains or Dapps spins something up and utilizes Ethereum trust, is there still like an incentive for them to have a token? Can their native token be worked into this kind of relationship as well?
01:04:37.370 - 01:05:27.810, Speaker A: Yeah, this is a great question, and I think what we realized is the answer to this question matters a lot. And only once we had a good answer to this question, people were interested in putting on angular. So let me explain the several types of business models one can build on angular. Okay, the first business model is what I would call the least crypto native. But the simplest model is you create a new service and you say, hey, I'm creating this new wallet address, right? And you say that. So let's say it's a storage protocol. Whenever people pay like one dollars for storage, I, as a creator of this protocol, get 30% sent to my wallet address, right? That's it.
01:05:27.810 - 01:06:12.962, Speaker A: I create a protocol, I take a 30% cut. Remaining 70% goes to stakers. I create this economics, and I kind of convince the stakers that this is worthwhile because of whatever economic gain versus risk that they're taking. And enough stakers opt in. Now I have a running service, and all I needed to do was create the service, come to the eigen layer marketplace, convince some stakers to opt in. And then I turn on, and I have my wallet, which keeps on collecting fees. The analog of this is basically the SaaS model in the cloud world, right? You have these clouds, and then you create this software as a service model, throw the software out there, add a payment rail to it, and whenever people are touching that service, they're paying a little bit to your service.
01:06:12.962 - 01:06:42.354, Speaker A: And as long as you can collect a little bit more than what the cost of running it is, you just scale that service out. You kind of can make a massive business out of it. So we can and do expect people will be building services like this on Eigen layer. They just create a company, and the company holds a wallet, and the wallet basically collects a fraction of the fee and remaining goes to the stakers. The company doesn't have to worry anything about decentralization. They are not decentralized. They don't need a token to be decentralized.
01:06:42.354 - 01:07:14.998, Speaker A: They don't need any of these things. Simplest model on Eigen layer, but it's the least crypto native. Okay, what else could you do? The problem that you face with just this business model is how do you bootstrap your platform? Like on day one, your platform doesn't have enough fees. It doesn't have enough fees to secure itself, of course. But it also doesn't have enough fees even to pay rent to security. Right. What Eigen layer has done is to transform buying security to renting security, to actually, really, what Eigen layer does is renting shad security.
01:07:14.998 - 01:07:50.478, Speaker A: So you can think of buying security. The analog is like buying cars, right? Renting security. The analog is like Uber, right? Like renting shad security. The analog is like it's a shad ride. So that's really what Eigenvalue is, is basically just like, and so, but still, you don't have money to pay for the overpool. Now what do you do? What you could do is you could say that, hey, I'm creating this new token ecosystem. And a fraction of the fees, kind of, or all the fees basically goes to the token holders.
01:07:50.478 - 01:08:54.914, Speaker A: And instead of incentivizing the initial stakers, just by the actual fees, you can incentivize them by the new token that you're creating. And this is up to each of the project to understand what the structure of this token is, what the economics is, what the regulatory compliance is, and all of these things. That's up to these projects to figure out. But it is an innovation sphere that we have seen massively inside the crypto ecosystem that people can use these tokens to incentivize people to align behaviors over different timescales correctly. And so you could do this, but then you can go even one more step on Eigen layer and say that, yeah, I'm not only renting ethereum security, but I'm also like having my own security in addition, right? It's like saying that you have e three staking and you get some security from it, but you also have my own token staking and you get security from it. And both of the communities or committees have to agree on a decision for some oracle input or bridge input to be valid. So you can have those kinds of economics where we call this dual staking.
01:08:54.914 - 01:09:29.074, Speaker A: So the simplest one, just running a wallet and running a company. This may be attractive for huge companies like meta and Reddit and Instagram or whatever to, you know, I'm running this new consumer service. I want decentralization. I want people to have native property rights, but I don't want to, myself be decentralized. I'm running a company here, right? And that is a use case that is possible on Eigen layer to the other extreme, where you have your own token, you're paying in your own token, you're staking in your own token, but you're still renting an aspect of security from Ethereum. All of this possible.
01:09:29.272 - 01:09:59.290, Speaker B: That comparison you made earlier, by the way, to Uber pool, you are going to make some very young investor in a Patagonia vest in the middle of a San Francisco coffee shop very happy one day when they listen to this. So speaking of the need for tokens, do you expect Eigen layer to have a token? I'm actually surprised. This is one thing I wasn't able to dig up. Are we to expect a token for Eigen layer?
01:10:01.330 - 01:10:41.954, Speaker A: We are in the initial phases of thinking through the economics and design of a platform like this. But the core aspect of Eigen layer is we are taking this Ethereum security and supplying it to anybody who wants to consume it. So you can think of us as somewhat like uniswap. The idea that the security providers are like liquidity providers on uniswap instead of the traders, you have the security services who are consuming the service. Right. So it's a two sided market. So there are various ways in which you could create like an economy of something like uniswap.
01:10:41.954 - 01:10:49.498, Speaker A: So that's roughly how we are thinking about it. When we will have a token, whether we will have a token. All of these need to be decided then.
01:10:49.584 - 01:11:02.640, Speaker C: Just a quick follow up to that. I think you kind of alluded to it, but where do you define the value accrual for Eigen layer? Where are you taking your, I guess, cut?
01:11:03.570 - 01:11:30.810, Speaker A: Yeah, it's simple, the Uniswap model. Basically, the idea is that there is a fraction of the fees paid to the liquidity providers can be taken by the platform if the platform provides additional value relative to competing platforms. And like in Uniswap, there is liquidity. In eigen layer, there is more staking. The more the staking that accrues to Eigen layer, the more the services that can be built. The more the services that can be built, the more the staking that accrues. So that's the two sided market.
01:11:30.960 - 01:11:38.326, Speaker C: Yeah. It seems like there's a lot of different points in that relationship where there's potential for value accrual.
01:11:38.438 - 01:12:16.786, Speaker A: That's right. And we are very open to understanding different kinds of models. It could very well be that we build services on top of Eigen layer, and that's one example of how valuable grows to us. We are very open in how this can be structured in a way that maximizes the surface area of innovation. So that is really what we want to optimize. But one thing we did find is, as you start writing data to Ethereum, frequently the Ethereum gas fees can blow up rather quickly. And so we have to make sure that there is an economics where we can ensure to be able to do that correctly.
01:12:16.898 - 01:12:41.230, Speaker B: With over 60,000 subscribers and 450 integrations, push protocol, the leader in web three communications just launched push group chat. While Pushchat already enables secure and private wallet to wallet messaging between any wallet addresses, the new push group chat allows anyone to permissionlessly create groups, share files, and collaborate with communities natively on web three. Try it now at app push.
01:12:44.290 - 01:13:06.102, Speaker C: One thing I kind of wanted to give you the opportunity to address Sriram is I've seen you on a lot of podcasts, read a lot of papers, tweet threads, and is there anything like we're missing or that you'd really like to get out there about Eigen layer that maybe we haven't keyed in on, or you feel like you haven't seen people kind of connecting dots to anything like that.
01:13:06.236 - 01:13:44.350, Speaker A: Yeah, I think there is a whole sequence of applications one can build on Eigen layer that are quite interesting, but just taking, let's say, the MEV landscape and understanding what set of solutions can be built on Eigen layer. I think there is a kind of very rich tapestry of solutions there. For example, if you're a block producer, so what's happening today is in Ethereum. If you're a block producer, the way in which you order transactions is unconstrained. By slashing. You can order transactions in whichever way. Like it's your degree of freedom, it's your subjectivity.
01:13:44.350 - 01:14:27.566, Speaker A: And right now, for example, there is the MeV boost market, on which you can kind of auction off your rights to sell the block, but you can create. And the way the whole basically flashpath designed the MeV boost market is tailored around the Ethereum slashing conditions. And what it does is it says, hey, block producer, sign off on the header of the block. Before seeing the block, you sign off on the header. And because you're signing off on the header of the block, you have no degree of freedom other than to actually then just submit that as your block. Because if you try to send another header, then you would basically get slashed. Because if you sign two competing headers in Ethereum, you'd get slashed.
01:14:27.566 - 01:15:01.098, Speaker A: So the whole of the MeV boost architecture is designed around this one constraint, which is there's only one fundamental slashing addition on Ethereum, which is double signing block headers. So what this does is remove any degree of agency from the block producer. Block producer is just signing off blindly on some block. There's no agency. I cannot say I like to include this transaction or whatever after that. Right. Even if they've sold a portion of the block, they could still retain the ability to add some transactions at the end and they don't have this.
01:15:01.098 - 01:15:42.818, Speaker A: But this alludes to the more fundamental thing, which is a degree of freedom as a block producer on Ethereum is very, very, there is no constraint because there's a lack of constraint. There is a lack of credible commitments because there's a lack of credible commitments. Nobody's going to trust you. So suppose you say, oh, I'll be nice, I'll include your MeV block in the middle in the beginning, but then I'll do whatever at the end. Why would people trust you? You're a pseudonymous person, so the pseudonyms cut both ways. There's no human trust there is only, like, algorithmic trust. So what eigenvear does is restore algorithmic trust and say that you can make a credible commitment that you will include something at the beginning of the block.
01:15:42.818 - 01:16:28.006, Speaker A: You can say that I'm selling the first one third of the block space to defi dad and the next one third of the block space to Adam, and then I keep the one third of the block space to myself. You can say whenever there is a liquidation, whenever there is an arbitrage between, let's say, atomic arbitrage, between uniswap and sushiswap, I have to close the arb and spread the value to the uni and sushi token holders. This is a requirement. If I'm a restaker, opted into this particular arping service, there may be a liquidation. And I say that you can start creating event triggered actions that the block proposer has to take, looking at the current set of state. This liquidation has to be triggered, this crypto PD has to be birthed, this event has to be triggered, and I opt into it. I have to do it.
01:16:28.006 - 01:16:49.022, Speaker A: If I don't do. It's attributable, you know, it's me. I didn't do it. I'll get slashed. And what these kind of things do is they massively increase the Defi efficiencies. Okay, let me explain why it is. For example, how is the over collateralization factor determined? Right.
01:16:49.022 - 01:17:06.734, Speaker A: It is in the time to liquidation. What is the market volatility? And the time to liquidation has to be determined based on worst case censorship resistance assumptions. Right. And you cannot say that you'll get. I'd liquidate you in one block or two blocks. That's too tight. Legacy.
01:17:06.734 - 01:17:59.750, Speaker A: Once you have event driven triggers like the ones that I just talked about, what you could do is you could say, yeah, you set your event driven trigger to refill your collateral or whatever within this period. Otherwise you'll get liquidated. So you can massively reduce liquidation times. By reducing liquidation times, you kind of reduce the over collateralization factor, making very efficient defi systems possible. So I think extracting and extrapolating out what infrastructure efficiencies lead to what efficiencies upstream into the protocol layer and into the application layer at the very infancy. And something I'm very fascinated about what are, like, ETH native. Recently, like Vitalik wrote an article about how to use something like Eigen layer, potentially for Rye as one of the collateral types.
01:17:59.750 - 01:18:10.534, Speaker A: The set of ideas for what could be built on top of native restaking is quite powerful. And we hope the community will engage closer on these topics.
01:18:10.662 - 01:18:25.360, Speaker B: With all this talk about the benefits of Defi from Eigen layer, I'm thinking I might have to rebrand to Eigendad, but we will see. Hey, one last question for you. When do you expect Eigen layer will go live?
01:18:25.970 - 01:18:57.910, Speaker A: Hopefully middle of this year. Last time I was on a panel with, I think Justin Drake at dark artfaced and some Ethereum guys, somebody asked me the same question, said we are Ethereum aligned, so we don't want to give you commitments that we cannot hold. So I'm following on that. I don't know if the Shanghai timeline is announced right. We are following on that. Hopefully we'll be able to deliver by middle of this year, but no concrete commitments yet.
01:18:58.060 - 01:19:35.794, Speaker B: Yeah, that makes sense. If folks listen to this in the future. We're recording in early February 2023, so we can definitely attest. Good things take time in Ethereum, and part of the reason I think all of us were drawn to the principles you mentioned earlier is the hardest problems taking that time. We have a community that is, I think, very patient builders who put security above all else. So yeah, whether it's middle of the year this year or later in the year, whenever, we'll be excited for whenever that launches. Well, Shreer, thank you so much for your mean.
01:19:35.794 - 01:19:54.060, Speaker B: You're very generous in speaking with us. I want to remind listeners they can go to eigenlayer.com to learn more about what you're building. They can follow you on Twitter at I'll put this into the show notes Sriram Kanan, just his name spelled out. Is there anything else you'd like to share though, before we go?
01:19:54.830 - 01:20:28.246, Speaker A: No, that's great. And also there is the Eigen layer. Twitter will announce more things coming up, like we're starting a research forum on discourse where people can communicate ideas. Any of you out there who are fascinated by this vision of maximizing the surface area of permissionless innovation, you have things you want to build. Please reach out to us. You want to join our team as like engineer or in other roles, reach out to us. We are looking always for good people.
01:20:28.348 - 01:20:46.040, Speaker B: Thanks for tuning in, everyone. If you're a talented builder like Sriram, please consider reaching out to our team at Fourthrevolution capital. And don't forget to subscribe to the Edge podcast. You can follow us on Twitter at Edge pod, and for links to the podcast and video interviews, check out defydad.com.
