00:00:06.240 - 00:00:19.500, Speaker A: Well, it's an honor to be joined by Max. I would say he's currently maybe the villain or your hero on crypto Twitter, depending on where you stand on the roadmap. He's going to show a quick video, talk about it, and then we'll have a conversation.
00:00:20.560 - 00:00:51.194, Speaker B: So this is basically how multi proposer looks. We have four proposers here, we have eight transactions. One of them is a duplicate. You're going to see this one's a duplicate. So when we put it in, we're taking the union, we're going to dedupe them and then this ordering rule is going to be just order by priority fee and descending order and execute them that way. So pretty simple. That's basically how multi proposer with priority ordering works.
00:00:51.194 - 00:01:51.270, Speaker B: Here's an alternative ordering which we call execution flags. Transactions can specify an execution flag which basically says I want to touch a certain contract and then you're going to see with the orange flag what happens when we reach an execution flag. We pull up all of the other transactions with that flag and we execute them as a batch. So yeah, forgive the timing on the reordering, takes a bit, but the video is only a minute and 40 seconds. So now the orange flag, we just hit the orange flag and we're going to pull the other orange transaction up and then execute them as a batch. So you can think of this like a liquidation or frequent batch auction or something. These transactions without a flag, we're going to execute them and there's no reordering to do here, but it might take a second to do the reordering anyway and then it will execute the blue transactions as a batch as well.
00:01:51.270 - 00:01:55.386, Speaker B: So that's basically the idea.
00:01:55.578 - 00:02:00.190, Speaker A: When was the first time that you proposed or first talked about multiproposer in the context of Ethereum?
00:02:00.690 - 00:02:40.526, Speaker B: Yeah, so I guess we're definitely not the first to talk about multiproposer. There's plenty of other ecosystems that have it, but we wanted it for a very specific reason, which was censorship resistance. And the basic idea was we were looking at lvr, we were looking at this problem of arbitrage and mev, and the obvious solution for what to do about it was just to run an auction. But then we realized you actually can't run an auction because of this censorship attack. So here's how the attack goes. You have basically a thousand dollar item for sale and you try to run an auction and all the bids have to come in in one block. Well, the proposer now has the power to censor any bids that they don't like.
00:02:40.526 - 00:03:05.106, Speaker B: So if the proposer values the item at $1,000, then unless the bids pay $1,000 tip, basically they're going to not include any bids that are not their own, submit a stink bid, which is maybe for like $0.01, and win the item for $0.01. And that basically breaks all auctions. So we needed a solution for censorship, resistance, and this was the thing we came up with.
00:03:05.178 - 00:03:10.870, Speaker A: Why do you think it's being rehashed or revisited now in the context of Ethereum's current roadmap?
00:03:12.300 - 00:03:28.440, Speaker B: Well, I kind of gave up on pushing. I thought it was a really good idea. I just kind of gave up because it didn't seem to get any traction. And then like the week before Brussels Vitalik like messaged me, he was like this. I'm incredibly bullish. I've thought about it for the last 20 minutes. I've suddenly become incredibly bullish.
00:03:28.440 - 00:03:57.616, Speaker B: So then I kind of renewed my efforts and we are trying to bring a concrete spec, which we call Braid, and do some work around the ordering rules as well. So that's kind of why I think it gained some traction. I think Dan as well from Paradigm was already kind of getting to being bullish. And then I did a talk like two weeks ago at a Paradigm research day that kind of flipped a lot of people as well. And that's what people saw on Twitter.
00:03:57.728 - 00:04:05.922, Speaker A: So what's the state of it right now? You're currently specking it out. I saw your talk with on Braid with the Paradigm folks. It seems like they're getting involved. What's the current status?
00:04:06.056 - 00:04:46.912, Speaker B: Yeah, I think my current number one focus is basically making sure Braid is as ready as it can be and proving especially I think we don't do enough proving of properties when we propose ideas, we just kind of say here's execution tickets or here's this. And then we wait for Tim Roughgarden or somebody to prove that it works. So my goal is to bring a concrete spec to the table and say, here's how it works, here's the proofs. Please tell us if there's a mistake so we can correct it. But hopefully we know how to write proofs and the proofs are correct. And so the argument isn't about can we do multi proposer, but is this worth the complexity?
00:04:46.976 - 00:04:51.840, Speaker A: Should we eat the complexity here? Those actually worth all this effort? Is it good in the trade off space?
00:04:51.960 - 00:04:59.136, Speaker B: Right. Whereas I feel like now a lot of the discussion is more about whether it can be done. I think it can be done. But I think we need to demonstrate.
00:04:59.168 - 00:05:15.980, Speaker A: That who out there genuinely doesn't think it can be done? Like, is there, are there any like notable proponents that are like, this simply will never work. Right. Like as you said, there's people who have tried it. I think that there's maybe flavors of multipurposer in the spectrum or the spectrum of multipurposer in production. But like, are there any notable haters out there?
00:05:16.920 - 00:05:32.732, Speaker B: I don't think it's about hating. It's more just like the kind of FUD that's like, oh, I don't know if this will work. It's not anybody who says, I have a concrete mathematical argument for why this is impossible. It's more like, oh, we are not really aware whether this will work or not.
00:05:32.836 - 00:05:48.124, Speaker A: That makes sense. And so in the context of Ethereum's roadmap, what do you see this impacting? Right. Like let's say Ethereum is excited about this. I know that it changes a bunch of things in the roadmap. Right. It changes single slot finality, it changes a lot of the base roll up roadmap. It changes a lot of things.
00:05:48.124 - 00:05:53.474, Speaker A: How are you thinking about that and what notable highlights would you flag as it changing in the roadmap?
00:05:53.652 - 00:06:34.914, Speaker B: Yeah. So there's no question that this is going to increase complexity. Like I'm not going to sit here and tell everybody that this is not going to increase complexity. But at the same time it gives us a lot of properties that we need to reduce complexity elsewhere and eliminate the need for additional complexity for other gadgets. So basically the entire scourge section of the roadmap inclusion lists, EPBs, execution tickets, MEV burn, all this stuff can go away and be replaced by multiproposer. And in Vitalik's words, if we eat the complexity, we can get rid of all this other complexity. So I think we should kind of eat the upfront cost of the complexity and get rid of all these other little gadgets.
00:06:35.042 - 00:06:50.430, Speaker A: So that makes sense from Ethereum's roadmap perspective. But I do understand that you also articulate that it changes, let's say application specifics, focus the way that you might want to integrate with Ethereum. What does that mean? Moving up the stack and what does that mean for legacy applications that were built six years ago?
00:06:51.090 - 00:08:02.682, Speaker B: Yeah, so obviously the goal is to make it backwards compatible. If it wasn't backwards compatible and we didn't see a kind of happy path from the current ordering and old applications to still exist in the new thing, we wouldn't do it because we should just go build a new chain at that point. But that's like one of the things we're actively working on. Why we think execution flags might be a good idea because it's kind of a hybrid of an ordering based and a batch based approach. One of the other things on the scourge section of the roadmap, if you look at what Vitalik tweeted, is application level MEV mitigation. And like I said, the reason, the whole reason we came to this idea was how do we do application level mitigation? And so that's like kind of the whole point of this is to enable apps to be super smart contracts instead of just smart contracts and control their own ordering, do batching, do things that eliminate mev. On Twitter, if you follow me, I was kind of schizo retweeting a bunch of MEV bought like basically PBS auction results in, in three minutes there were 15 blocks, all of which were worth more than 10 ETH, some of which were worth more than 100 or even 200 ETH.
00:08:02.682 - 00:08:17.450, Speaker B: And this was during the slide, obviously. And that is just ab, like almost an exploit level attack on Ethereum's users. That happened because we don't have censorship resistance and we don't have apps that are built to use censorship resistance.
00:08:18.190 - 00:08:37.290, Speaker A: So yeah, you do genuinely see it changing the way people design applications and you want to try to figure out a way where it's sufficiently backwards compatible with previously deployed applications that they're still inherently usable. Right. Like that's the goal. And if we can't figure out a way to do that, you would consider launching this as like a separate thing. Right? Is an intention.
00:08:37.790 - 00:09:09.450, Speaker B: Yeah. I think if we can't figure out how to do it on Mainnet, I do fundamentally believe that there is no bull case for crypto without somehow ending this censorship problem. And I've always said my goal is to make euro dollar trade more than 50% on chain. So that's euro USDC spot or whatever trading on chain, more than half of the global volume trading on chain in some capacity. And I don't see us ever getting there without ending the proposed a monopoly.
00:09:09.570 - 00:09:17.850, Speaker A: Yeah. And I think you said that if there's a less than 1% chance in your head that that happens, you're going to quit and go work in AI or something like that. Is that still true?
00:09:18.010 - 00:09:21.550, Speaker B: Yeah, maybe. Neuralink. I kind of like neuralink. It's kind of sick.
00:09:22.130 - 00:09:36.948, Speaker A: It is pretty cool. So you see ending the proposer monopoly as the biggest Thing in the Ethereum roadmap. What does that mean for infrastructure? Things that are predicated and built around the proposing monopoly? I'm not going to call it any PBS pipelines, but yeah, I think they're.
00:09:36.964 - 00:10:02.800, Speaker B: Going to have to adapt and overcome and maybe die if they're not useful anymore. It's not great to have a bunch of brittle infrastructure that's built around the current system. I don't think anybody wants that, even flashbots. So we want EPBS somehow. That's clearly something. That's a desert of the roadmap. How we get there, I think is an open question, but this is one way to get there.
00:10:04.080 - 00:10:14.380, Speaker A: You said earlier that this alleviates or removes a lot of things on the roadmap and you articulated that EPBS was one of them. How does this solve EPVs at the same time while removing it from the roadmap?
00:10:15.200 - 00:10:52.066, Speaker B: Yeah, so EPVs would be a. Because block building is a difficult task right now. And the reason it's a difficult task is because this proposer monopoly is valuable but hard to capture. We have pbs, so if we get rid of the proposer monopoly, the need for PBS and the importance of PBS and the ability for PBS to result in censorship will go away. And so the need for EPBS on the roadmap would go away. We also get MEP burn because we can burn the priority tips that you saw. These are all basically alternative ways to get to the goals of the roadmap.
00:10:52.178 - 00:11:03.240, Speaker A: That makes sense, I think, just for the sake of time. I know people have been here all morning. We sincerely appreciate all of you. If you could change anything else in the Ethereum roadmap, is there anything that comes to mind?
00:11:03.780 - 00:11:43.822, Speaker B: You have a EIP 1559 endgame proposal. I'll be talking about SPC on Friday, so I won't go into too much, but it's not a big change. It's more of a parameter adjustment, a automatic parameter adjustment that just makes, I think we'll make everybody 2% better off. And I think we need to do more changes like that in Ethereum that are, you know, we can talk about the big changes that excite everybody and like the VCs love to talk about them and they can like fund new companies based on that. But at the same time we leave behind these, you know, 2%, 1% parameter adjustments and if we do enough of those, that's actually massive as well. So it's more of a smaller change. But IP1559 endgame is on the roadmap as well.
00:11:43.822 - 00:11:48.900, Speaker B: And I don't think anybody's thinking about it. So we are going to be talking about it on Friday at sbc.
00:11:49.030 - 00:11:55.540, Speaker A: Very exciting. Is there anything else that you think the crowd should know or anything else that you'd want to share with us while you're here?
00:11:56.480 - 00:11:58.300, Speaker B: End the proposer monopoly.
00:11:58.880 - 00:12:10.760, Speaker A: End the proposer monopoly. You did not hear it first, but you will hear it a lot this week, I'm sure. Thank you all so much for joining us. This has been a wonderful day at the Variant offices. Thank you to all of our wonderful speakers and give Max a round of applause.
