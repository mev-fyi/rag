00:00:06.080 - 00:00:55.478, Speaker A: So starting off with Spearbit, our core founding team were core contributors to the Ethereum foundation and some US army and they co created solidity actually. So we have a lot of extensive routes across the EVM ecosystem and a lot of experience. And those are some of the names that we work with. Coinbase, Uniswap, OP, we work with a lot of Daosh, the blockchain, infra, really whoever, our whole entire GitHub portfolio is public, so you can check it out to see who we work with. So spirit bit, if you think about what spirit is, I talk about Spirit and Cantina and I use them interchangeably. So spirit is a traditional private audit firm or branding. So when you think about and im going to show our competitors a little bit, but like Halbourne Certic, but were much better than Certik and some other private audit firms.
00:00:55.478 - 00:01:43.678, Speaker A: That's the spear bit name brand. Quickly, through the inception of spear bit, our team quickly realized that there was a problem in providing affordable security services at, oh, sorry. High quality security services at affordable rates and at scale. So what the team did was we then created an open security marketplace called Cantina. And so through Cantina, projects like yourselves, for all the founders builders out there, projects like yourselves can go to this platform and you can request any type of security work. Now, when I say any, a little vague, but really, when you think about the software development lifecycle from building MVP, launching MVP, post MVP, we can do anything across that whole entire lifecycle. We can provide architecture review from security researchers, threat modeling, risk assessment.
00:01:43.678 - 00:02:32.820, Speaker A: We can help you build white papers. We do traditional security reviews, audits, audit competitions, and bug bounty programs. So the main question that I wanted to pose to the room today is not necessarily what is an audit and what are the advantages or benefits of an audit. I'm pretty sure everyone here is much smarter than me, to be quite honest. So the question that I want to pose to everyone in the room is not so much what is an audit, but when is my project or protocol ready for an external review or audit? So to be completely frank, I meet with a ton of projects every day. Big teams, big protocols, like Uniswap op labs, all the way down to super small teams that are deploying on blast. Like, I met with a game called the two people team deploying on blast called super sushi samurai and like, they, I don't know, yeah, interesting name.
00:02:32.820 - 00:03:33.070, Speaker A: But they ended up going with us. So when I meet with all these teams and specifically the smaller teams, the main challenge isn't necessarily helping them understand what the value of an audit is, it's more so educating them on when they should be ready for an audit. So what I mean specifically by this is there's really no universal checklist to check off or items to check off to determine when your protocol or project is ready for an audit. And this is frankly, because protocol dev teams can range in skills, size, they can come from hardware, engineering backgrounds, front end engineering, as well as pure crypto native experience. So what the Spirit and Cantina team did internally was we coined a term called review readiness. And it's exactly how it sounds. It's basically, is your protocol ready for review? And what we really mean by this is the main indicator that we use is has the protocol or development team exhausted all of their internal efforts to identify and eliminate bugs? Bugs.
00:03:33.070 - 00:04:54.968, Speaker A: And this could mean, did you have sufficient test coverage? Did you, do you have architecture models, diagrams? Have you identified the different attack vectors that exist within your web two and web3 components? So one thing I want to note is that review readiness doesn't necessarily mean your project is rid of all bugs. It just means that your project is in a place in which it can benefit highly from a security review or audit. And the main point I really want to drive home, if there's one point that you would, that you could take away from this event today, kind of what you mentioned about security is a day zero thing. And that's what we preach here at spirit in Cantina. Security should not be viewed as a point in time solution. It should honestly be viewed as a continuous initiative that's always evolving, always reiterating, especially as your team grows, your procedures change, as your team released new products and features. So now that we know what review readiness is, what are some of the specific steps that projects can take in preparing for a review or an audit? What are the exact services offerings, things that we can do before mainnet launch? And here, as you can, what's tabbed out are some of these examples, and these are specific services that we can provide.
00:04:54.968 - 00:05:27.390, Speaker A: So let's say you're building your MVP, right? Your very early stages of system design. Maybe it's too early for a full on code review. So maybe you might be looking at an architecture review or looking at creating white papers and architecture models. Let's say you created the MVP. Again, still too early on for a full code review by five security researchers. But you could definitely benefit from a solo or prelim code review. Finally, when you're getting ready for mainnet launch, that's where most of the security work is done with projects I've seen.
00:05:27.390 - 00:06:16.546, Speaker A: Have you done a sufficient test coverage? We provide e to e unit, fuzz unit testing, fuzzing, obviously traditional security reviews. And finally, after you hit main net, what are some of the things that you can do post launch bug bounty programs, audit competitions. I think that's pretty popular in what we've seen so far on the market. Finally, the main thing is you want to implement QA and QC throughout your security processes. When you think about it, there are some specific examples, but quality assurance, the main point is to implement processes to prevent issues from occurring, QC detecting issues and existing products or services. And those are some of the specific things that relate to these initiatives. Specifically, I've been talking about these topics that aren't related to spirit and Cantina.
00:06:16.546 - 00:07:01.604, Speaker A: So what are the specific services or things that we can offer that would help your protocol be review ready? And this is directly related to the last slide, right? When we think about the software development lifecycle and where you're at, if you're early on, we have vc off exactly what I mentioned, fuzzing unit testing, architecture models, pen tests, threat modeling, identifying different attack vectors. Moving on. Pre mainnet, maybe you're ready for a protocol security or a traditional review audit. And finally, uh, I'm not sure if some of you familiar, but audit competitions, they're super, super popular right now. Very interesting topic. If you're curious to talk more about it, I'm more than happy to talk about kind of, we ran 1.2 million with blast and 1.25
00:07:01.604 - 00:07:27.330, Speaker A: million with Euler. The competitions are very interesting. A lot of projects think they're kind of a waste of money, but to be honest, it, it really depends on the pot size. But if you're interested in talking about that, happy to talk about that topic with you after. And finally, security reviews and afterwards, basically just different types of services and offerings. And one thing that you won't see here are bug bounty programs. We also host bug bounty programs on our platform as well.
00:07:27.330 - 00:07:42.090, Speaker A: Okay, thank you so much. You can reach me here, email, telegram, I'll be at ECC and then Polkadot decoded and then modular summit. If you're going to eat CC, let me know. And then Devcon and a lot of events later this year. So let's get connected. Thank you.
