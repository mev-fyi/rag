00:00:07.930 - 00:00:10.800, Speaker A: Let's get started. Nick would love to have you introduce yourself.
00:00:11.890 - 00:00:45.126, Speaker B: Sure. Hey guys. I'm Nick White. I am the COO at Celestia Labs and I've been working in I got modular pilled first in late 2020 before we really had the language to describe what modular blockchains were. And I've been working in them basically since then. And I think that they're really critical for the future of blockchain infrastructure. I think they solve the major issues around the core infrastructure for scaling decentralized applications.
00:00:45.126 - 00:00:55.518, Speaker B: So both just scalability but also customizability and offering shared security. So these are all the things I'll get into in my talk. Should I start out?
00:00:55.604 - 00:00:56.670, Speaker A: Yeah, let's do it.
00:00:56.740 - 00:01:19.240, Speaker B: Cool. All right. Awesome. So just a bit about me. I already introduced myself. An outline of this talk is essentially what are blockchains? So I first want to cover the basics of what blockchains are because it's important for explaining why scaling them is hard and then why modular blockchains, how they solve that problem. And then we'll talk about what modular blockchains are.
00:01:19.240 - 00:02:02.050, Speaker B: What are the benefits of modular blockchains and how modular blockchains work. So first, what are blockchains? So blockchains are tools for trust, minimized coordination. I like the phrase rules without rulers. So essentially, in a typical if we were to try to coordinate around something, we would typically need to establish a set of rules for that coordination. Then we'd have a ruler to arbitrate those rules and enforce them. And blockchains enable us to do this in a way without having a centralized authority to enforce rules. And they accomplish this by having every user in the network directly verify that the rules are followed.
00:02:02.050 - 00:03:07.318, Speaker B: So verification is at the root of what makes blockchain secure and decentralized, because if you aren't verifying the blockchain yourself, then actually you're trusting someone else to tell you that it's valid that the rules are being followed and then you're adding trust back into the system. And so you're compromising that core quality of what makes a blockchain useful in the first place. That's why there's an adage in the blockchain community that is don't trust, verify. Unfortunately, as we'll see next slide, verification is what makes scaling blockchain so hard. So verifying a blockchain, at least a monolithic blockchain requires two steps. The first is that you have to download all the block data and then you have to verify every single transaction in the block one by one. And unfortunately, that means that if you increase the number of transactions on the block by a factor of ten, for example, then the amount of data you have to download and the number of transactions you have to verify also increases by a factor of ten.
00:03:07.318 - 00:03:49.782, Speaker B: So the problem with this is that as you increase the number of transactions, if you go too far, basically end users no longer have enough bandwidth or they no longer have a fast enough computer to actually verify the chain themselves. So all of a sudden that whole trust minimized nature of blockchain breaks down. So there have kind of been two paths so far, at least in the monolithic space, for how to approach this problem. One is that you preserve verifiability. So you just accept high fees. You accept that your blockchain just cannot grow beyond a certain size. And that's what projects like Ethereum and Bitcoin have, the approach they've taken.
00:03:49.782 - 00:04:27.882, Speaker B: And then you have other approaches like Solana where you basically just sacrifice verifiability in order to gain low fees. You just allow the block size to grow. The blockchain to become have a lot like too many transactions for end users to verify. And I think that the second path is not actually a solution because it basically, like we said, compromises this core quality of verifiability that we're seeking with blockchains. So that's just some background. Now we'll get into modular blockchain. So what is a modular blockchain? The definition I like to use sorry, it's lagging.
00:04:27.882 - 00:05:33.862, Speaker B: The definition I like to use is that modular blockchains decouple the core functions of a blockchain and those functions are execution, consensus and data availability. So what's going on here? Okay, there we go. Sorry, there's a little lag on my side. A monolithic blockchain is that's Ethereum Salana, Bitcoin, pretty much every blockchain that has been built so far, every l one, they have one set of nodes and one protocol that does every single function at the same time. And in a modular stack, you actually separate those functions into separate protocols and separate sets of nodes perform those functions and then those layers get recombined to perform the same effect. So this is very similar to the Internet, the architecture of the internet. There are seven layers of different protocols that all stack on top of each other and they allow us to have this rich, fast, performant decentralized internet protocol that we all enjoy today.
00:05:33.862 - 00:06:30.170, Speaker B: So blockchain evolution is sort of evolving in a similar direction with the modular stack. So what are the benefits of modular blockchains? The first one is that modular blockchains solve scalability for the first time. So they combine two fundamental innovations and blockchain architectures to unlock this quality called sublinear scaling. So those two technologies or innovations that we'll talk about a little bit later are data availability, sampling and roll ups. So it's a combination of those two things that make it so that all of a sudden you can actually increase the size of a block, the number of transactions in a block by a factor of, let's say, ten. And the amount of work that it takes to verify that block does not increase by a factor of ten, it increases by a much smaller factor. So all of a sudden you can actually increase the block size while still preserving end user verifiability.
00:06:30.170 - 00:07:17.506, Speaker B: So the way that this works at a very high level is on the left hand side you see a monolithic blockchain where to verify the chain, you need to download all the data and verify every single transaction. In a moderate blockchain you download a tiny sample of the data and you just verify a single proof that proves to you that all those transactions are valid. So the top right is what we call data availability sampling. I'll explain more about how that works. And the bottom part is a roll up where you use a proof to prove validity. So there are actually three paths, right? This third path allows you to actually preserve verifiability and gain low fees. And that's what Celestia is building and that's what the modular stack achieves.
00:07:17.506 - 00:08:05.990, Speaker B: So you can see in this diagram, a monolithic blockchain like Ethereum in its current form has a fixed block size. So as the demand for transactions increases the costs, the fees for users increase. In a modular blockchain context, the block space is not fixed, it's actually elastic. So as there's more demand and more users come online, you can actually increase the amount of supply and keep the fees constant. So we think this is going to be very important for actual mainstream adoption. Another benefit of module blockchains is that they're flexible. So because you separate consensus from execution, you're not locked into one programming environment or virtual machine.
00:08:05.990 - 00:09:00.170, Speaker B: So you can kind of think of monolithic blockchains as like say you bought a new laptop and it's a Windows machine. You can only run Windows operating system that limits the kinds of applications you can run on that computer. So blockchains are very similar or monolithic blockchains are in that if you have like Ethereum, it only runs the EVM or if you have Solana, only runs the Solana VM in a modular blockchain. Because you decouple those things, you can run whatever execution environment you want and you can basically customize it to fit your application. So this is what people call app chains, essentially. And the last benefit is that modular blockchains provide shared security. So in a monolithic world, each blockchain kind of lives in its own world and has to bootstrap its own security and its own new consensus network.
00:09:00.170 - 00:09:39.366, Speaker B: And also those chains are isolated in a way that they actually can't have trust minimized bridging with each other. So when they interoperate, it can't be very secure. In a modular blockchain context you have shared security. So it's similar to smart contracts on Ethereum. When you deploy a smart contract on Ethereum, those contracts can talk to each other in a trust minimized way and interoperate. And those smart contracts don't require you to deploy a whole new blockchain to build your application. And that's what modular blockchains achieve, but at the sort of like blockchain level.
00:09:39.366 - 00:10:51.338, Speaker B: So you can deploy your own blockchain without having to create a new network of validators and nodes and those blockchains can actually interoperate in a very secure you can. One way to think about this, if you're familiar with Cosmos is that, like the modular blockchain approach that Celestia is building, it takes the best of the Ethereum world, the world computer model where you have shared security. And it's easy to deploy new apps with the best of the Cosmos app chain model where you have sovereignty and customizability as well as scalability. So just to wrap up or sort of to summarize, the benefits of module blockchains are that you have scalability, you have shared security, and you have sovereignty or customizability. And all three of these features are not things that you can achieve together in a monolithic model. So one way to think about this is that in the web two world you have the cloud. So the cloud is the primary way in which developers today deploy web apps.
00:10:51.338 - 00:11:49.550, Speaker B: And in the cloud model, you have a data center which provides this raw resource of compute that is customizable, very scalable, very cost effective. And developers plug into that and they pay as they go and they customize. They deploy their own virtual machine that is tailored to their application and they can scale up or scale down the amount of compute that they consume. In the webtree model, this is what the modular stack provides, something that's very similar. But instead of a data center, you have a data network. And so the data network, like Celestia provides this raw resource of block space that a blockchain developer can tap into to launch their own custom blockchain and consume and scale up the amount of resources they need to consume on demand. And it's very cost effective.
00:11:49.550 - 00:12:33.870, Speaker B: And I just last thing on this point is that this is no longer just like it's not just Celestia. I've only really mentioned Celestia so far. But there's a whole ecosystem of different projects building in the modular stack across all layers of the stack as well as the surrounding infrastructure. And also not in here are even you can consider a lot of the Ethereum roll up teams as part of the modular ecosystem. And even ethereum even avail. There's a lot of other projects that are building towards this direction. So how do modular blockchains work? The first thing to understand is data availability.
00:12:33.870 - 00:13:28.714, Speaker B: So what is data availability? Data availability is basically nodes need to verify that the data behind a certain block has been published and is available to be downloaded if someone wanted to download it. This is kind of a nuanced and confusing thing, but essentially the end users of Celestia don't have to care what the data actually is. They just need to know that it's there and that it's been published. So one way to think about this first, I just also want to dispel a very common misconception, which is data availability does not equal data storage. So data storage is more like canning food. It's like you want to preserve data so that you can retrieve it later. Right? And data availability is more like an all you can eat buffet.
00:13:28.714 - 00:14:07.466, Speaker B: It's like people are like, hey, here's my data. I'm posting it out there for anyone to see, anyone to sample. You can go come and have a taste and serve yourself right? That's kind of like a good mental model to use. So they're very different functions, but a lot of people get confused. And I understand why because the terminology is a little bit vague and sounds very similar to data storage. So anyway, like Rweave or Filecoin are not data availability solutions. And this kind of also demonstrates this in a more technical way.
00:14:07.466 - 00:15:00.906, Speaker B: So data availability, you're verifying the new transaction data. Like the latest block, you want to verify the data that's there so that you can verify and accept node that you can trust that block before accepting it. And data storage, you're retrieving old transaction data. So data availability and scalability, this sort of gets to the root of what data availability sampling is. So as you mentioned earlier, in a monolithic architecture, you actually have to download the full block data to verify that it's all there, right? Like, if I need to know that all the data behind a block has been published, naively, I would need to actually verify all of it. I need to download all of it and check that it's all there. The magic of data availability sampling is that I can verify that it's all there with a very high statistical likelihood without actually having to download all of it.
00:15:00.906 - 00:15:48.970, Speaker B: So I can download just a tiny, tiny fraction of the block, but have a 99.9% guarantee that all of it is available. So this means that you can have bigger and bigger blocks without really increasing the cost of verifying the block. So one of the core technologies, one of the things that we use in data availability sampling is called erasure coding. And it's the same technology that's used in CDs and QR codes. Essentially, you take the original transaction data and you expand it and such that if you try to erase some of that transaction data, you can still recover the entire block. So this means that if someone is hiding data, they have to hide a huge portion of the block in order to do that.
00:15:48.970 - 00:16:29.426, Speaker B: So that makes it very easy to sample the block and find where the hidden data is. And this is kind of like a visual representation. You can imagine just sampling random pieces in this two dimensional square. And this is very simplified version of what Celestia is doing under the hood. If you guys are interested in learning more, there's a whole paper. So Mustafa, who's the co founder of Celestia, co authored a paperwork vitalik in 2018, I think, titled data availability Sampling and Fraud Proofs. And the second piece of how modular blockchains work are roll ups.
00:16:29.426 - 00:17:19.478, Speaker B: So what roll ups do is that they prove that a block of transactions are valid. So that users don't have to verify every transaction themselves. So in the ZK roll up context they use validity proofs. So you assume that a block is guilty invalid until proven innocent valid. So essentially approver would actually run, sort of compute the actual state transition function and verify every transaction and would give you a proof that when you execute those transactions, this is what you get, this is what the output is. So you don't have to redo that work, you know, because of the soundness of the proof system that that is indeed valid. And in an optimistic rule of context you actually use something different called fraud proofs, which is sort of like the inverse.
00:17:19.478 - 00:18:08.774, Speaker B: So you assume just as a base case that every block that you see is valid until someone raises what's called a fraud proof, in which case you verify that proof. And if that proof verifies true, then that means that there is fraud in that block and you shouldn't accept it. So there's a lot of more detail into how these systems actually work. But the important part is that by using these, you no longer have to actually verify all the transactions one by one. You can verify them in a big batch. So you can roll them up and verify and roll them up into a proof and just verify that proof. But again, roll ups require that the underlying transaction data has been made available.
00:18:08.774 - 00:19:11.894, Speaker B: So in order to trust that these proof systems are secure, you have to also know that the data is available. And that's why data availability and roll ups are kind of like yin and yang and it's a combination of them together that solve scalability. So this is kind of what a roll up actually looks like under the hood. There's the transaction data gets posted to a consensus and data availability layer and there's a state proof, which is that proof I was talking about that gets sent either to a smart contract in sort of the ethereum roll up model or gets sent directly to the roll up nodes in a sovereign roll up, more Celestia centric model. And the last point that I want to talk about is in moderate blockchains there's a new type of node which is called a light node. So traditionally in blockchains you have full nodes and light clients. So in a full node, it downloads all the data and verifies every single transaction.
00:19:11.894 - 00:20:20.050, Speaker B: That's kind of like the monolithic context that I was explaining before, but those are really expensive to run. So in other blockchains, for example, like Bitcoin, there's something called a light client where you do a very minimal amount of verification to get at least some security, but you don't actually verify the full block. And the cool thing about modular blockchains is that they actually upgrade light clients to become light nodes. So like we said earlier, you can actually verify the blockchain without doing very much work, but you get almost the same level of security basically as a full node, but doing a dramatically smaller amount of work. So this is how a basic light client will work is you just check the header and you make sure it has enough signatures or you make sure that it has enough proof of work behind it and then you just assume that it's valid. So you're making an honest majority assumption, which again is inserting trust. So that's why light clients aren't really secure enough to be considered like a solution to verification.
00:20:20.050 - 00:21:17.620, Speaker B: And in a light node context, you're checking the header and you're also checking that the blocked data is available as well as in a roll up context, verifying a proof that the execution is valid. So your light node is actually truly verifying the underlying blockchain. And the cool thing is that this is possible to run on very light hardware with very low resources. So people all over the world have been running their Celestia light nodes on non traditional hardware like gaming consoles or on their smartphones. And really the goal is frankly to put a light node on every smartphone in the world and that way we can have truly decentralized and secure blockchains for everyone. So that's it for me. If you want to learn more there's, learn modular where we put a lot of these resources and education.
00:21:17.620 - 00:21:45.694, Speaker B: And there's also build modular which is like if you're a developer and you want to play around with the things that we've built as well as the different projects in our ecosystem, there's a lot of things to play around with and also get in touch with me. I'm at Nick White on Twitter and Celestia, our website is celestia.org and we are@celestia.org on Twitter. So thank you guys again and looking forward to Q A.
00:21:45.812 - 00:22:14.440, Speaker A: Well, thanks so much. That was incredible, Nick. So now we have a couple questions from the audience but I also have a bunch of questions I want to ask you kind of related to this topic. So let's just get started. So as you laid out, there are some very clear benefits to a modular architecture and that's kind of where this space is headed. But I'm really curious, what do you think are some benefits of a monolithic architecture that some of our builders should consider when they're figuring out which architecture to choose?
00:22:18.090 - 00:23:26.990, Speaker B: I would say the more time that goes on, the less and less benefits there are for a monolithic architecture. I would say right now, I would say in theory, or rather in the future as the stack matures, that gap will narrow and narrow. Right now the modular stack is relatively new and there's a lot of things that are like features are still being built and are yet to launch. So I'd say that's probably the only advantage. I would say, and it's sort of like a short term one, is just that some monolithic chains like Ethereum or like Solana are a little bit more tried and true and they're a little bit more mature in terms of the tech stack. So if you're building in the modular stack today, it could be a little bit more challenging and tricky for now, but I would say that long term that will only decrease essentially and they'll become more and more similar. In fact, I think the modular stack will end up being easier and just have a lot of benefits over the monolithic stack.
00:23:26.990 - 00:23:29.598, Speaker B: I can get more specific if you want.
00:23:29.764 - 00:23:48.840, Speaker A: Yeah, one thing I'm curious about is the way I think about it. I feel like each layer of the stack in a modular architecture has sort of different economic models, different token incentives, et cetera. So I'm curious how you think about coordinating all of these tokens and whether that adds complexity that maybe like a monolithic structure doesn't have.
00:23:50.330 - 00:24:41.894, Speaker B: Yeah, so actually one of the beauties of the modular stack is you don't really need more tokens. So one of the cool things is if you want to launch a new blockchain, typically you do need to have a token to stake and to pay for fees and all these things. And in a modular stack actually like roll ups, they don't issue their own token like Arbitrum, I mean, they end up issuing their own token for governance or something. But there's actually no reason to functionally launch your own token as a roll up. So it's completely an option, essentially. So if you want to add that complexity, you can, but you can also avoid it, if that makes sense. There's no avoiding though, paying for things like gas or paying for things like data availability because you're consuming resources, but it doesn't mean that you have to manage multiple tokens at the same time.
00:24:41.894 - 00:25:53.610, Speaker B: And there's also really cool work being done at the intense layer which will abstract away a lot of that complexity. It sounds like you guys are going to talk about that a bit later. And then there's also the question around just complexity generally that you have all these different layers plugging into each other and on the one hand it gives you so much more flexibility, but on the other hand there's just so many different moving pieces and does that, you know, cause issues? I think the, the trade off there is just that it will take a little bit, like I said, a little bit longer for the stack to mature. That is one benefit of monolithic blockchains. Those choices are made and then all those integrations are kind of like all tested. There's only like one path and in a modular context, because there's so many different moving parts, you have to make sure that each one of those plays nice with each other and that ends up taking a little bit longer to make sure those interfaces are really standardized and they work. And so that's partly why modular blockchains have a little ways to go in terms of maturing.
00:25:53.610 - 00:26:13.870, Speaker B: But long term, I don't think long term it's going to be like going to a cloud provider like AWS and clicking a few buttons and configuring your chain and it should just work TM. But we do have a ways to go to make that a reality.
00:26:14.030 - 00:26:30.182, Speaker A: Right. This all makes sense. And I'm glad you mentioned intense. We're going to be talking about that on Thursday. So I think this ties in really well to that. I guess one other facet of this I see is like, trust minimization. So the best part of modular structures is obviously that you have specialization at each part of the stack.
00:26:30.182 - 00:26:36.780, Speaker A: But this introduces dependencies at every layer. So how do you, I guess, think about that?
00:26:40.270 - 00:27:36.750, Speaker B: So the question is the interdependencies between the different layers of the stack. Essentially, yeah. I mean, kind of like I said, what it boils down to is abstractions and having the right interfaces between these different layers. And frankly, it's still quite early. But I think, for example, we've made a lot of progress in defining sort of the DA interface that we hope will get adopted as a standard. So for example, we integrated with optimism, right? And we helped them abstract the op node data availability interface so that could support things like Celestia or could support Ethereum or even Bitcoin or like any L1 hopefully can be plugged in to that data availability interface. But we're going to need that for the execution layer or for the shared sequencing layer or for maybe the proving side.
00:27:36.750 - 00:28:13.900, Speaker B: I guess that's kind of like similar to the execution but not quite. And there's a lot of teams working on these things. So I really like the work of, for example, Sovereign Labs. They're building a really flexible framework where you can choose between optimistic or ZK comes from the cosmos world. But there's an ABCI interface between the person like sort of the execution layer and the actual consensus and ordering layer. It all comes down to interfaces, basically.
00:28:14.590 - 00:28:26.560, Speaker A: Got it. That makes sense. Yeah. I guess now that we're touching on data availability, I'm curious now that there's all these different options for alternative das like Celestia, how do you see Ethereum's role in the DA space in the future?
00:28:27.890 - 00:29:07.398, Speaker B: Good question. So Ethereum today, I would say, is the dominant DA layer because that's where all the current roll ups are deployed. Celestia is not live yet, but Ethereum was never designed for data availability. It was designed to be a world computer. And so a lot of the design decisions were kind of made before people were even aware that this is how blockchains would be used in the future. So for that reason, Ethereum in its current form is really not well suited to be used as a data availability layer. First of all, does not support data availability sampling.
00:29:07.398 - 00:29:59.478, Speaker B: So it's not very scalable. And second of all, it's like a very hacky way. The way that people use it as a DA layer is you host the data as call data and so it's a very hacky way of kind of like using it for a purpose that it wasn't intended for. That's going to change. They're already working on EIP 4844, which is going to add like a whole new capacity for just data blobs on ethereum and also, I think, will make it more usable for that purpose, which is really good. However, EIP four four four doesn't support data availability sampling and that will only so it's kind of like a block size increase and it's a finite block size increase. So it'll be more useful, but it won't be more actually fully scalable until they ship Dank Sharding.
00:29:59.478 - 00:30:31.062, Speaker B: Which I'm not sure what the timeline is there, but Celestia, sort of, just to draw the contrast, was like, created with this sole purpose in mind, with the realization that L Ones of the future will be used probably almost exclusively for data availability and all execution will happen on roll ups. So Celestia has no execution, no smart contracts, supports data availability sampling and so it's really optimized for that use.
00:30:31.116 - 00:30:53.920, Speaker A: Case right. I think Alpha Chat had a good kind of follow up question to that. He said, do you think the UX gains are a major reason for DA layers to become front and center? DA layers require a single block confirmation for cross roll up versus other cross chain solutions require two plus block confirmations. So this kind of goes into interoperability. But I'm curious if you have any thoughts on this question.
00:30:55.250 - 00:32:01.394, Speaker B: Yeah, so one of the advantages, as I said, of building in the modular stack is that you gain shared security. And one aspect of shared security is secure interoperability. And the reason that the modular stack enables this is that let's say there's two chains and they're each posting their block data to a shared consensus and data layer like Celestia, their blocks both get ordered at the same if they, if they weren't there. Now, there's no way when you're sharing, ordering, you can't have one chain just decide unilaterally to reorder its blocks and then just basically invalidate something that it said happened. It's basically like a cross chain double spend. So you remove that risk and maybe that's something that he's referring to. And then on top of that, you also have a way for those chains to verify each other.
00:32:01.394 - 00:32:41.760, Speaker B: So even if you verify that the execution of another blockchain is valid using a fraud or validity proof, you still have to verify the data availability behind those blocks. And the beauty of the modular chain architecture is that these two separate chains, because they're using the same DA layer, are sort of implicitly verifying the data availability of each other's blocks so they can have a fully verifying bridge without having to run a. Full client of each other. That makes sense.
00:32:42.930 - 00:32:48.980, Speaker A: Got it? Yeah, that makes sense. Nikhil had a great question. Nikhil, do you want to unmute and ask it live?
00:32:50.070 - 00:32:50.674, Speaker C: Which one?
00:32:50.712 - 00:32:53.026, Speaker A: My first question or my second one?
00:32:53.128 - 00:32:53.442, Speaker B: Sure.
00:32:53.496 - 00:33:23.678, Speaker C: Yeah. Thanks, Nick. So I guess I'm just trying to make this super concrete, right? Because you have this concept on data layers. You have around modular blockchains that entire concept, and you're talking about the movement of data and settlement and execution. I'm wondering if you can actually make this a little bit more concrete. If you can give an example of a protocol today that's operating that any of us might be using, how it could utilize Ethereum or an L two. You mentioned something like optimism and Celestia and what really are those kind of advantages that a user might get by.
00:33:23.764 - 00:33:58.434, Speaker B: Basically going through with this type of structure? Yeah, absolutely. So that's a great question. So one example would be something like uniswap. So I think even what's his name, dan Elitzer, I think, wrote a post about this of, like, UniChain. Right. So if Uniswap were built in a modular context, they could do a lot of things that they can't in their current model as a smart contract on Ethereum. So one of the first things they could have is they could be much more scalable.
00:33:58.434 - 00:34:55.258, Speaker B: So if there's an NFT Mint happening on Ethereum at the same time, the users of Uniswap don't get affected because Uniswap would be running on its own chain. And that NFT contract or whatever, the Mint is happening somewhere isolated. That's one of the advantages. The other thing that they could do is they could change the actual underlying EVM that their contracts run on top of to support things like parallel execution. So all of a sudden you could have trades that don't actually overlap with each other, don't affect the same state, can be processed in a parallel way. So it speeds up things and makes gas cheaper, essentially. And they could probably do lots of other modifications that would maybe make certain operations, like mathematical operations that are used to compute the price, cost less gas or I don't know.
00:34:55.258 - 00:35:56.320, Speaker B: There's a whole range of things that they could do and optimize if they had access to modifying the execution layer. But as it is, Hayden is constantly posting, saying, why can't we support parallel execution on Ethereum L One? And the reason is because L One core protocol development is very difficult, very slow, and it's just hard to actually get a change pushed through. So those are some things some other things they could do is even start building in mev capture to their chain. So there's a really cool project called Skip. It exists in the modular Cosmos ecosystem where they're building tools that enable chains to capture their own mev natively. So all of a sudden, Uniswap, which is probably a majority of the mev on Ethereum, could be instead of just paying all that mev back to the Ethereum base layer. They could be capturing that and maybe redistributing it to their users or using it to fund public goods or who knows what they would want to do with it.
00:35:56.320 - 00:36:27.990, Speaker B: Other things they could do is like fee abstractions so they could make it so that user maybe like UniChain, there are actually no fees to interact with the chain and so users don't actually have to hold Ethereum or any token. They can just trade. So those are a set of things I could probably think of more things, but just off the top of my head those are some of the advantages that Ethereum uniswap would have in building on a modular. Yeah.
00:36:28.060 - 00:36:57.534, Speaker A: Yeah. Thanks, Nikhil. I think it was great that we're kind of bringing it down to tactical discussions, I guess along that same vein. So our fellowship cohort is pretty diverse in the sense that everyone's working across every vertical. So there's some people doing infrastructure, some DeFi apps, some consumer projects. So for those people building on that application side, so like DeFi, consumer, et cetera. I'm curious what you think they should be thinking about the most when it comes to the modular thesis.
00:36:57.534 - 00:37:06.690, Speaker A: So specifically, what sorts of use cases would make for the best app specific roll ups?
00:37:08.810 - 00:38:21.280, Speaker B: I think DeFi is obviously a big one. I think because there's benefits to capturing your own MVP. I think decentralized social networks could be very and gaming also like things that require a lot of on chain throughput are natural fits because there'll be so much block space available in the modular stack. I mean anything where you need scalability, customizability and shared security, which is most applications. But I guess what happens is, like I said, there's still time for it to mature. So the trade off right now for building on the modular stack might be it depends on how much you need those things versus maybe they're not as critical for what you're building. It's really hard to say like blanket, like oh, these are the applications that are better off.
00:38:21.280 - 00:38:31.920, Speaker B: But yeah, long term, again, I think that will close that gap of the developer experience such that there isn't really this trade off, it's only benefits.
00:38:32.610 - 00:39:03.020, Speaker A: Yeah, I totally agree and I think the gaming example is a great one. I think gaming use cases need high throughput horizontal scaling, et cetera, and they're able to get a high tick rate through building their own app specific roll up that can specifically utilize all of these things. I guess another question I have is how do you think about value accrual at different parts of the modular stack? Do you have an opinion on where you think the most value accrues and how should app developers think about this when they're thinking of launching their own block space?
00:39:04.270 - 00:40:19.970, Speaker B: That's a really good question. I think it's premature in general for anyone to say that they know where value will accrue even ethereum in its current model, although it seems to have pretty strong value accrual. It's kind of based on this model of scarcity of block space. And I don't think that's long term desirable because I think you want to have where we want to go is a place where block space is very plentiful and so people can afford to use blockchains like everyone can. The way that I think this plays out long term is sort of similar to the Web two stack where AWS is an infrastructure provider and they make a lot of money by providing this infrastructure and they don't make it by price gouging people. They sell their compute or their resources at a reasonable price, but they mark it up enough to make some kind of profit and they make money by scaling that up and selling a lot of it. And I think that's kind of the model for block space.
00:40:19.970 - 00:40:56.750, Speaker B: But to expand on that, there's also the application layer right, of the Web Two stack and the applications are extremely valuable too. And in fact the net value of applications far exceeds the net value of the infrastructure layer. And so I think that's kind of where we'll go. It's like the applications capture value by the actual value of the application that they build. The infrastructure captures value in proportion to the value of the infrastructure that they provide. So it's not like either or I don't believe in the Fat protocol or the Fat app thesis. I think it's actually both at the same time.
00:40:56.900 - 00:41:22.920, Speaker A: Yeah, it's funny you mentioned this just last week we basically had Hayden from Uniswap come in and he was talking about basically protocol versus product and how to think about developing both in parallel. So very much ties into all of this. I know we only have a couple of minutes left, so I'll do one audience question and then one of my questions. So maybe dokon do you want to unmute and ask your question about EVM and the future of VMs? I guess.
00:41:23.770 - 00:42:11.590, Speaker D: Yep. Hello Nick. And yeah, my question is there's a lot of execution layers and most of them focuses for EVM because most of the developer tools and most of the user bases, the existing user bases uses the EVM. But do you think that the future of execution layers will be around of the EVM or the VMs that designed for variability and for modular stack is going to be gained more attraction from the modular stack? I'm really curious about your thoughts like KVM or Field VM.
00:42:13.450 - 00:43:11.260, Speaker B: Good question. I think there will be like a set of VMs that are most popular because I think that VMs do have network effects around tooling and around just developer adoption and things like even like bridges. A lot of things get baked in. They bake in the assumption of the execution environment that they're interacting with. And so I do think long term, I think short term, maybe the amount of VMs proliferates a bit, but the long term it kind of consolidates around a handful. However, I think there will be lots of different releases of these VMs. So the same way there's lots of different releases of different operating systems that are somewhat tailored to a specific use case, I think you're going to see lots of those, if that makes sense.
00:43:11.260 - 00:44:14.990, Speaker B: And then I still do think though, that there's going to be these VMs are not all going to be fully expressive, like general purpose VMs, like the EVM or like Solana VM. Some of them are going to be more like these SDKs, kind of similar to the way that the Cosmos SDK works, where you have these pre built components and you can kind of pick and choose the ones you want to combine together and then also build your own little pieces that come in and help customize. So I think that's where I see things going. I think there's a lot of innovation and exploration still to be done. And in fact, the monolithic architecture has really held back more experimentation at the execution layer, the VM layer. And that's something that I'm really excited for with the modular thing is it reduces the cost to experiment with a new execution model, you can just write one and deploy it as a roll up and then see if it works. And so I think we're going to see a lot more I think we're on the verge of seeing a lot more experimentation.
00:44:17.730 - 00:44:30.850, Speaker A: Well, great question. I guess one thing I just want to end on, I guess, is what are some predictions you have for the space in the next few years? Specifically, what excites you when it comes to the modular stack, roll ups, et cetera?
00:44:32.870 - 00:45:26.190, Speaker B: Good question. Well, Celestia's mainnet launch is coming up later this year and so I'm really excited for that because that's kind of the first general purpose, like specific built data availability layer and I think that's going to kind of like marks a new chapter in the blockchain space. I think we're really going to start entering the modular era. It's still going to be early, like I said, but I think it is sort of like the first step towards making it a reality. And there's a lot of projects in our ecosystem that are also planning to launch, I would say, within the next year. And so there's a lot of cool things to look forward to, things like Astria like the shared sequencers Espresso as well. It's a handful of projects, maybe even fairblock.
00:45:26.190 - 00:46:24.194, Speaker B: I think shared sequencing is going to be really cool because it will allow for a whole nother layer of customization interoperability ease of deployment for roll ups that we haven't seen yet. I think I'm excited for new approaches to Bridging, so actually expanding Bridging standards like IBC so that they support roll up like trust, minimize bridging is going to be really big. Trying to think what else? Yeah, there's probably just too many things. I mean, obviously all the rollups themselves, like the SDKs, like I mentioned, Sovereign is something I'm really excited for. There's a whole bunch of stuff happening in the Op stack, tons of innovation there. I'm also excited to see a lot of projects building. Another thing that I guess I never mentioned that is really core to the modular thesis is this concept of modularism, not maximalism.
00:46:24.194 - 00:47:14.040, Speaker B: So what that means is basically that in a modular stack, it's no longer like, oh, there's only one way to build blockchains and that's the best. It gives developers choice and allows different components to be swapped out and connected to each other. And so to that end, I think it's really cool that through the optimism stack, people can build chains that leverage Celestia for DA, but settle on Ethereum. And so I think I also want to dispel this sort of narrative that Celestia and Ethereum are competitive. They're actually just sort of different protocols, each providing different services and different trade offs. So I don't know, that's what I'm really looking forward to. And obviously in the future with Celestia, we want to continue to scale block space.
00:47:14.040 - 00:47:33.242, Speaker B: We want to add trust, minimized Bridging to the base layer so you can actually bridge Celestia tokens. There's a lot of improvements that we have planned for the core protocol after we launch mainnet. So long winded convoluted answer no, thank you so much.
00:47:33.296 - 00:47:46.830, Speaker A: That was lovely. So I think that's all the time we have for this. But obviously there's a bunch of unanswered questions on Slack, so I might compile them and send them to you afterwards. But this was so lovely. Thank you so much for coming in, Nick. This was a great kickoff session.
00:47:47.730 - 00:47:51.020, Speaker B: Yeah, thank you for having me and I'll see you guys later.
