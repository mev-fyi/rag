00:00:08.090 - 00:00:31.350, Speaker A: Thanks, everyone, for joining. Hayden, thank you so much for being here. I know you're super busy, and it's like, especially busy time right now at Uniswap Labs. So much appreciated. I'm going to start, I guess, brief intro on Hayden. I don't think he really needs much of an introduction. Everyone here probably knows him as the founder of Uniswap Labs and also the creator of the Uniswap Protocol.
00:00:31.350 - 00:01:03.258, Speaker A: If I'm not mistaken, labs was started in 2018. The Protocol is one of the most used, if not the most used in all crypto at the application layer. Before being in crypto, I think we're working at Siemens in sort of like a telecom kind of engineering role. And the origin story of Uniswap itself is also interesting. So I thought maybe we could start there about sort of your journey into crypto. What were you doing before and how did you get into the space in the first place?
00:01:03.444 - 00:01:45.310, Speaker B: Yeah, for, you know, in college I studied mechanical engineering. And the first year after college, I worked at Siemens. Basically doing it wasn't telecomplic, it was actually computational fluid dynamics, but basically studying heat flow and doing heat flow simulations for car designs, which maybe sounds interesting and exciting, but it was actually incredibly boring. Well, working computational fluid dynamics, I'd say that I was probably not the best employee. I think maybe actually a starting point was I didn't really enjoy it. It was pretty boring, even though it doesn't sound it, and just wasn't very excited. And fortunately got laid off about a year out of college and my first job.
00:01:45.310 - 00:02:41.200, Speaker B: And I was looking for something to do. And I had a friend from college, Carl, who is currently the CTO at Optimism, but at the time, he had been working at the Ethereum Foundation and doing proof of stake research. And we'd been friends for a while, and he just was obsessed with Ethereum and convinced me that Ethereum was this really interesting, cool new technology that was going to be a thing and would be know the future of how finance of the Internet worked, or at least could be. And that it was kind of like that no one knew how to do smart contract development at the time, that it was like a really early niche skill. And so I decided to learn how to write smart contracts on Ethereum as like a way to change careers, to try and learn something new and to be a part of this Ethereum thing. And so I spent a few months learning how to write basic, solidity smart contracts. I had learned, like, tiny amounts of code as part of mechanical engineering, but really, like, MATLAB and very basic stuff.
00:02:41.200 - 00:03:29.918, Speaker B: Didn't have this whole background. But after learning the basics of smart contracts, I really just felt like I was stalling in my ability to learn more. And again had another call with Carl, and he was again kind of like, well, the thing you need to do is you need to take on a side project. You need to actually try to build something you can't really learn, just know, watching YouTube videos and experimenting on your own. And so really was looking for a project to start on and had a bunch of different ideas, but ultimately settled on this blog post that Vitalik had written about a new way to do exchange on Ethereum. And I thought it was really interesting. To me, Ethereum was really cool and interesting because of this idea of you could build applications that no one controlled, that anyone could use, that you didn't need to trust anyone because all you needed to do was trust the code.
00:03:29.918 - 00:04:11.674, Speaker B: And so the earliest idea of Uniswap was just can you make a smart contract on Ethereum that lets you trade between cryptocurrencies in a way that really embodies those properties of Ethereum like true decentralization? And so decided to build a side project story will accelerate how? Pretty quickly there, but really just from there. Spent the next year building out from an early proof of concept. Got a grant. Once I got the grant, it felt more real and I just took that proof of concept, kept building on it. During that time, I started going to a lot of Ethereum conferences. So while building Uniswap sort of as a side project, just went to all the crypto Ethereum conferences, I could just made like a lot of friends in the space. The early Ethereum community was really cool and interesting and Everett was building at the time.
00:04:11.674 - 00:04:51.420, Speaker B: This was post 2017 bull market. This was like crazy bear market vibes and it was just like the people who were still working on Ethereum really cared about it and were really interested in it. It was like a really good community and spent all the grant money on smart contract security auditors and on contractors to write designs for the web app and then launched it as a solo project in November 2018. Unisoft Labs actually did not form until spring 2019. After people started to use V One in the early days, it got that initial excitement and traction and then basically formed the company at that point.
00:04:51.950 - 00:05:32.002, Speaker A: Yeah. I want to highlight one thing you mentioned, which is the dynamics of the market as an overlay to the origin story of Uniswap. So I think the timing is really worth dwelling on for a second longer here, given sort of where we are in crypto right now, where we're similarly in the depths of a bear market where folks outside of crypto are sort of pronouncing it dead. And I wonder if you could maybe just expand on that just a little bit, your perception of crypto post 2017 bubble and sort of the dynamics at play in the community during that time that you were getting off the ground.
00:05:32.146 - 00:06:22.006, Speaker B: Yeah, I said that ETH had ball from $1400 to $80. I'm not a big price person, but generally it was like a lot of despair. I think that at the time there was like no, a lot of the 27 Hype was built on these ICOs and everyone thought like ICOs there's all these crazy projects, people are going to build really cool things. And then some of the ICO projects did ultimately build cool things over many years, but a lot of them also didn't. And a lot of the hype was over promised. And so I think that Uniswap was a little bit of like the anti Hype project where other projects raised massive amounts of money and then promised the world and then delivered really shitty UIs with kind of smart contracts that often had centralized backdoors and all that and had been hyping themselves up for years. And then I'd say that Uniswap at the moment of launch, most people hadn't heard of it yet.
00:06:22.006 - 00:07:22.874, Speaker B: I announced it on my Twitter and I had like 150 followers at the time and hadn't done any publicity around it really other than going to conferences and talking to people in person. At the moment it launched, it had like a complete front end, the smart contracts were done and live and audited. The front end was done and live and you could use it and you could add a token. It was immediately useful and usable and no one had heard of it before and it kind of basically contrasted really heavily against the projects at the time. I think even like the fact that it didn't have a token at the time was like very, it was sort of like the anti Hype project where it was just like oh, it works and it already exists and I can already use it. And then I think the other part where the bear market so I think that was exciting to people. I think the other exciting part was that having something that was gaining, people started to use it and the volume numbers started to creep up and the early usage was from projects that were struggling to get listed on centralized exchanges or struggled to create find market makers who would create liquidity in them.
00:07:22.874 - 00:08:04.406, Speaker B: So they had very low liquidity on centralized exchanges. And so having this ability to self serve, to list and create liquidity back then in the early days was really huge for key projects. And so as started to get this early usage and adoption, having a chart that was going up, the Uniswap usage chart was the only up chart at that point in time and everything else was down. And so it kind of was like a rallying cry to point for the early ethereum community of like here's something that actually is working, people are using it, it didn't overhype itself. That was where a lot of this initial excitement and adoption and community support came from.
00:08:04.588 - 00:08:38.098, Speaker A: Totally, yeah, I remember that and I think that is one major opportunity in bear markets. If there's something that's growing in a bear market, you can point to that and get the support of the whole community behind you because crypto needs wins under its belt. So, yeah, you mentioned it was just you at the outset. Can you talk a little bit about the early team that you built out once the company was formed and if there was sort of any intentionality around how you built out that team and what the focus was once you did?
00:08:38.264 - 00:09:25.534, Speaker B: Yeah, and by just me, I mean I was the only full time person, I'd say that I had so much support along the way. And there's a whole blog post on that if you Google like a short history of Uniswap. But once I formed the company in spring 2019, raised that initial seed round, the first two people that I hired, one was Noah. He was a smart contract engineer, had been working at another crypto project, but really could do smart contract and back end and front end and backend, kind of like a full stack of crypto, but specializing especially in smart contracts. And then khalil. And Khalil was someone I actually knew growing up, childhood friend, but also he had helped even in the early days, building out that initial demo with the grant funding. He was one of the people I paid almost as a contractor and he also lent plenty of his own time to it.
00:09:25.534 - 00:10:15.486, Speaker B: And he helped work with me develop that initial UI that we launched with and was there at the day of launch. And so those were like the first two hires, is full stack engineer who specializes in spark contracts and insanely talented designer who also had some front end development shops as well and would contribute to codebase directly. And that was like the team for maybe the first four or five months that we added. Ian went with full time front end dev. And then that was like, for the next year, that was basically like there was people who helped out a little bit as advisors and Ash helped out and Moody joined a little bit later. But that was like that sort of initial crew in that building from going from Unisoft V One to unisoft V Two. It was basically like me, Cal, Ian and Noah.
00:10:15.486 - 00:10:16.226, Speaker B: Cool.
00:10:16.328 - 00:11:39.770, Speaker A: Yeah. So I think one of the things that's notable about Unisoft's sort of origin story is that is that UI that you shipped on top of the protocol, the first sort of product on top, which was really beautiful, really know, to this day, not much has changed in the core UI and I'm sort of being intentionally reductive. Of course a lot has changed, but the core of it is kind of the same, which to me is signal that it was sort of the right design, the right product for the job. That's a theme that we're going to sort of get into further in the course of the discussion is the role of product versus protocol and organizationally, how you guys have tackled that as the project's grown. To tee that up, I wanted to introduce this sort of concept, this business sort of theory popularized or maybe even sort of labeled by Joel Spolsky. So there's a great blog post on this topic of commoditizing the compliment by Joel Spolsky. And the core of this idea, and something I've written a lot about as well, is that in business, you are generally better off if you are able to commoditize your compliments.
00:11:39.770 - 00:12:36.654, Speaker A: So, by way of example, if you're in the business of selling cereal, you want milk to be an utter commodity. You, in fact, want milk to be free, because if milk is free and widely available, you'll sell more cereal. And another good example is, like, printers, right? If you sell printers, you want you want ink to be incredibly cheap, because if ink is incredibly cheap, presumably you'll sell more printers. And so I think this kind of framework is interesting when applied to crypto, because I think one way to think about protocols and products is as complements to one another. You need both, and arguably you need both to different degrees at different times in the trajectory of each product and protocol, respectively. So I just want to sort of put that out there as a framework to a backdrop to our discussion. Right.
00:12:36.654 - 00:13:18.860, Speaker A: Commoditizing the complement is a well understood business theory and strategy, and it may have a role to play in crypto. And so I think, again, one of the things you did early on with Uniswap is you built this protocol and then you built this really beautiful, really intuitive product on top, and you shipped both at the same time and the product was given away for free. I'm curious if you could just talk through the initial thinking. Maybe it wasn't as sophisticated as I'm making out, which is probably the case, right? Maybe you did think about it. But what was the sort of initial thinking of doing both a product and protocol in the earliest days?
00:13:19.630 - 00:14:06.870, Speaker B: Yeah, I think there's a lot of different angles to it, and I'll just try to talk through as many as kind of immediately come to, but could keep going. I think that definitely in this initial proof of concept demo stage, it was just like practical. Like, I needed to demo this software, I need to demo this protocol, so I need a UI to demo it with. I think it kind of started out as just part of the process of demonstrating what this project was and what it could be. I definitely think that one of the things that I didn't like, maybe I don't also have that much of a trading background. I obviously at this point, understand the trading market, but I think in the early days, it was somewhat newer to trading. And the user experience at the time, ether delta was like the main decentralized exchange.
00:14:06.870 - 00:15:24.370, Speaker B: Just felt so cluttered and messy and complicated and it maybe felt like it was hard to know. Was it messy and complicated and bad UI because of the structure of an order book or was it messy and complicated because it was like just a bad UI? And I think when working on uniswap, part of the thing is in addition to it being decentralized, it was also slightly of a re look at how market structure worked. And so I think with that it kind of naturally intuitively made sense to experiment with different potential designs for how to interact with it. So I think that partially was just like as we're thinking about AMMS and their place in the world, there was also this like, well, how will people actually interact with them? And I think that that was like really I think that it was hard to know. It would have been hard for someone else to work on that problem at the time because they didn't have necessarily the same level of intuition and sophisticated intuition around AMM, right? You kind of needed to know what an AMM was and how it worked and why it mattered to build the liquidity provision UI and maybe not to build the swapping UI, but the liquidity provision UI, you needed it. And so I think that it was just like an early thing that was on my mind as working on. I was definitely very fortunate to reconnect with Cal, who's just such a talented designer.
00:15:24.370 - 00:16:22.530, Speaker B: I think that I also personally like product development and product design as much. I like protocol development as well, but I kind of like them both personally. So I think that maybe just part of the reason is just like I also enjoy it. I'd say that there was an element where there was some precedent of zero X did exist at the time and Zero X was taking a completely opposite approach where Zero X was like they were mainly marketing at developers. They said they weren't going to host and build their own UI, they were just going to rely on other people to build their UI. Right? They had a few UIs like radar relay. I think for me, one reason that I like building at multiple layers of the stack is that if you don't, you start to run into issues at one point where you start to run, it's hard to think holistically while you just have to think about the abstraction layers that you're creating.
00:16:22.530 - 00:17:18.018, Speaker B: When you're creating products and protocols. You could think of the smart contract today we have a backend team, but back then it was just front end and smart contracts and the front end directly into the smart contract. You could think of Ethereum as like the backend component of the unisoft system and the UI is like the front end component. And it would be sort of like definitely there are companies that are solely develop APIs, and there are companies that solely develop user facing products and consume other people's APIs. But I think especially just because of the nature of crypto and AMMS, where they're like, people are still trying to figure out how people are going to use these things. And it's very easy to be like, oh, that's not my problem, let me just think in this constrained box. But if you're doing that, you're sort of risking that it's very easy to be like, yeah, other people will figure out how to make a good UI on top of this protocol I'm developing.
00:17:18.018 - 00:17:57.442, Speaker B: But what if the protocol you're developing isn't the right thing to build a good UI on top of? Or what if building the right UI on top of it requires the protocol level expertise needed? So I think that today there are other UIs and other UIs have gotten better. But at the time of the initial development, due to the novel nature, I don't think anyone else could have built. Maybe the other thing I'll say is that the philosophy going into the protocol to the product was just like making it easy and simple to use. I think that crypto is already complicated enough. There's a lot of mental models people need to learn. People need to learn new interaction patterns. People need to learn how to manage their private key.
00:17:57.442 - 00:19:00.360, Speaker B: There's already a lot of things people have to learn, and I think this is just like a general philosophy we have at Umsub Labs. It's like making things as simple as humanly, like almost at every front, from protocol development to developer experience it when possible, to the products people are using. Just like, the easier it is to use something and interact with it, the better. And crypto just kind of suffers from people not being very sensitive to users needs. And so I think that adding a user facing component to what we do just makes us that much more able to more directly solve user problems. Something that we've only just started to and it started to bear very interesting results. Now that we have a mobile wallet now and we have a smart contract team and we have a back end team and we have a front end, we have all these different and they're starting to there are things that we can build at a smart contract and protocol level that make our wallet better.
00:19:00.360 - 00:19:24.740, Speaker B: And the things that we learn about what hurts our users in our wallet level informs the smart contracts we develop. And so I think that there's this really nice people just don't know. It's so hard to get into crypto and use it. And so I think having that depth and breadth has been pretty helpful at Labs, but it can be hard to pull off and there's downsides to it as well.
00:19:25.190 - 00:20:37.942, Speaker A: Yeah, I think the main sort of thing that I think is so special about this story and Labs today is what you're saying. Essentially, you were the first consumer of the protocol as the application on top, and then in building the application, you were anticipating sort of your user needs and that in turn informed the actual design of the protocol. And that's just a really nice flywheel where if you take a sort of user centric view and start from endpoint, which is what problem does this protocol solve for a user and try to design for solving that problem? In a UI on top, you very quickly get great insights about whether or not you are in fact solving that problem in the best way possible. And you can evolve both the product and the protocol respectively to try to solve that problem. I think that's very key to the earliest success of Uniswap. And I think it's also something that I've watched you sort of imbue to the organization, the project as a whole, as it's sort of gone on to multiple upgrades and multiple new product lines. Sorry, go ahead.
00:20:37.996 - 00:21:34.934, Speaker B: Oh, yeah, it's very easy to be not my problem, the UI layer will figure it out. But I think that we're just not a team and project that likes to kind of hand wave the problems that hold us back the most. That's why we got into the Wallet game as opposed to just staying at the web app level. The vast majority we created this support team for our web app to make sure that people who were having issues had someone who could have people they could reach out to. And the vast majority of our support tickets were related to bad Wallet UX. And we couldn't do anything about that other than go to wallet teams and be like, hey, can you improve your products? And again, the whole ecosystem is really great, but getting into the wallet space has allowed us to really again, it's like being your own first user, but also just making sure that you're solving your biggest problems. Because we can have the most efficient protocol.
00:21:34.934 - 00:21:51.200, Speaker B: But our most efficient protocol isn't going to do anything if no one can use it and there's no good UI. Our web app doesn't need to be the only warrant. But having an example of a good web app is important for other people to learn from anyway.
00:21:51.570 - 00:22:37.994, Speaker A: Yeah, and I think it's also important to call out while you guys have gone sort of vertically up the stack and built closer and closer to the end user. It's still the case today that the vast majority of volume going through the Uniswap protocol is actually coming from third party applications, right? So there is this ecosystem of third party applications that have integrated the so I think it's important to call that out, especially right here, as we're talking about Uniswap going vertical. Because I think an important question is, well, how did you get this ecosystem of third party applications to integrate while also sort of building your own first party. So again, I think this begs the question of what is the relationship between product and protocol, especially at the earliest stages when you're bootstrapping.
00:22:38.122 - 00:23:48.690, Speaker B: Yeah, for like a lot of the alternate UI, uniswap are essentially using fork versions of the initial UI that we created. And so I think that even speaks to having that initial UI was actually very helpful to helping the broader ecosystem take off in terms of uniswap growth, ecosystem growth generally, I will say, not like we spent money on marketing, right. It was like a lot of very natural organic growth that happened since the very earliest days and that happened at the user level with the earliest projects were tokens, like MKR and Spank, a few tokens that were like having that, like, didn't have other good exchanges. And when it came to like I think one of the reasons that this developer ecosystem started forming is just like I think it was a combination of things, but really it's a protocol that's useful for a lot of different projects in a lot of different ways. And I think that the amount of tokens and the amount of projects that were on the platforms just started growing so much around the protocol that really people needed tools and they didn't all exist. Right. We didn't have the ability to build everything at once.
00:23:48.690 - 00:24:49.798, Speaker B: It was a very small, like two or three people and we were building the second version of the protocol. And so, like, unisoft Info, this info analytics site, which is maybe a little slow at this point and needs some work, but the very first version of it was built by a community member that just like, they wanted to add a Linux to the project as they built it. So I think having just like the nature of the I think that something that's really key here is that people are very hesitant to build on top of closed ecosystems. If you build on Twitter, and then Twitter, maybe the better the one of the day is reddit, right? If you're building an alternate UI to reddit and then they rug their API, then your whole project is dead. And I think what's so cool about uniswap and DeFi more broadly and ethereum more broadly is that other people can build on top of uniswap and compete with labs and know they can build alternate UIs. They can build alternate products and they don't have any risk that us, as the creators of the protocol, will just kick them off. And so there's this ability to compete.
00:24:49.798 - 00:25:14.180, Speaker B: And I think that that's been really key. And so I think that people felt safe building their projects on top of uniswap. All the aggregators, all the other UIs, wallets, et cetera, that have started integrating other protocols, they don't have to worry about counterparty risk, which is one of the key benefits of DeFi. So I think that that's one interesting side of it.
00:25:14.550 - 00:26:02.350, Speaker A: Yeah. And I would maybe posit one other thing that I think is critical. And again, it's sort of a path dependent sequence of events that uniswap sort of uniquely execute against, which is you build the protocol, you build this first UI on top. As you said, the UI made it really easy for both users on sort of the demand side of the market and on the supply side of the market to interact with the protocol. And the result was you got some initial traction, like an initial liquidity. And in the case of uniswap, that liquidity begets sort of a network effect of the more liquidity, the better the product gets for traders. And so so I would go so far as to say, like, your initial product made the protocol a good place to trade.
00:26:02.350 - 00:26:30.662, Speaker A: Right? And that in turn brought third party developers to the protocol because it was a good thing to integrate rather than sort of bootstrapping from scratch. So I think that sort of sequence of ship the protocol, ship the first product, bootstrap liquidity, and hopefully there's some kind of network effect there that begets third party development that compounds the protocol network effect. That's I think a very sort of cogent strategy that hopefully is repeatable by other projects as well.
00:26:30.716 - 00:27:34.874, Speaker B: Yeah, I think that's all very well said, and I'd say that one very key part of that order of operations is I think that shipping the product also helps, you know, if your protocol is useful and people actually want to use it. And I think that sometimes even the incentives of the ways that people try to bootstrap liquidity can hide it. I think incentives and even the liquidity mining scene, all that stuff is interesting and useful generally. But I think that just very key steps of that process are making sure that products on top of this protocol that you're building, if you're building a protocol, have some level of demand and interest and usefulness to some group of people, especially before you incentivize it. Otherwise you don't really know if it's useful. Once you know it's useful, then, yeah, by all means, start competing and incentivizing. But I think that where some projects in the space sometimes go wrong, is just not really getting a true level of product market fit before launching a token and going all out on token incentives.
00:27:34.874 - 00:27:42.318, Speaker B: And then it might work for a period of time, but then how long is it going to work for? Will it really stand at the test of time?
00:27:42.484 - 00:28:43.490, Speaker A: Yeah. My sort of writing on progressive decentralization, I think, was largely informed by the path you just described, which is build a product, build a protocol, build a product that people want, make sure it has some kind of product market fit, and then start to think about community ownership and sort of effectuating that over time. Okay, so v. Four was just announced about ten days ago. I think we touched on how you've taken a user centric approach to designing both protocols and products. Would love to hear you talk a little bit about the thinking in V Four through that lens. Like what does V Four enable for users, whether those users are traders or developers or market makers and anything you want to share around what Labs is working on on the product side, specifically as it relates to V Four or more broadly.
00:28:43.830 - 00:29:29.838, Speaker B: Yeah, let's see where to start. So I'd say that I guess I'll just start with V Four and what it is and super quick overview, but basically uniswap. I say that I'm going to assume people know uniswap V two, V three, v Two is super simple AMM, V Three and this concentrated liquidity thing. But we'll just pretend everyone knows that if that works. And then I see that unisoft before. The process of building an AMM is like a process of much debate over trade offs and much byte shedding. And it's essentially that every decision you make in the process of building your protocol, your AMM, is like a trade off between different the canonical easy example that we use like the Oracles.
00:29:29.838 - 00:30:25.790, Speaker B: Oracles were such an interesting feature for v two and v three. They provided this public good for the entire space, which is like other projects could other on chain protocols, could integrate on chain price seeds that had some level of robustness and decentralization if there was enough liquidity in the pools and wasn't perfect, but it was very useful for a lot of other projects. And theory was that that would ultimately create greater liquidity in the platform and in the protocol. Because people would build integrations using the Oracle, they want the Oracle to have a lot of liquidity and be powerful, so they'd recommend it as a place for trading or they deposit their own liquidity. So there was sort of like this network effect aspect to the Oracles. However, there was a downside to the Oracles which is that the swappers had to pay gas costs to maintain them. It amounts to somewhere between something like 15% of gas cost of swaps is like updating the Oracles.
00:30:25.790 - 00:31:15.890, Speaker B: And is that worth it? Very unclear. Right? Maybe it's worth it on certain pools where the Oracles are used a huge amount and that's created a huge amount of liquidity. But really, again, only for swaps where that additional liquidity is worth the additional gas costs. And it's like there's always this trade off space and then there's another thing that came up, was just generally anytime you want to add a new feature, it adds more gas costs or it adds more code complexity. And this was just a constant wall we kept hitting. We had a lot of ideas for where we could take AMMS, how we could experiment with them, what we could build on top of them and every single time we'd run into this complexity trade off space. And it was almost never worth it to it's never worth it to build an entire AMM to experiment with one AMM feature.
00:31:15.890 - 00:32:32.350, Speaker B: We had ideas for what we could do with these four. But the most annoying thing is every single time it was like, well, it's not worth it or not. And another example is like the fees with Uniswap before we built this plugin module system that we call Hooks, which really lets people modify certain aspects of pools in pretty expressive ways that allow you to really customize and add on features or modify parameters of the pools in very meaningful ways. That allow you to experiment with AMM design, with pool design, with new types of integrations and products on top of it, but without having to rebuild a name run from scratch each time. And in a way that I'd say that the other kind of component here is just like the more liquidity gets fragmented across pools, there's like this cost of aggregating it in a world with no gap, then none of this matters. Let's say there's no gap, it doesn't matter. It matters a lot less, right? Because you could just perfectly split your trades across all as many pools as you can and it's like efficiently aggregating them and you can benefit from the liquidity in an aggregated setup liquidity.
00:32:32.350 - 00:33:27.934, Speaker B: The problem with that, though, is that there is actually a very specific cost to each additional liquidity pool that you're using liquidity from for a specific trade. And so the kind of other main benefit of Uniswap V Four is this pooled singleton model where all liquidity pools live in a single contract. And that reduces the gas cost overhead to liquidity fragmentation. It doesn't completely remove it. There's still cost to it. But we're moving to a world where there can be more experiments happening and there's like a reduced cost of aggregating them. And the last kind of thing I'll say on that and I should come back to the initial thing about but last thing, there is just that there is already fragmentation happening because so much innovation, because people can't easily modify how uniswap works at a protocol level.
00:33:27.934 - 00:34:04.780, Speaker B: This experimentation is already happening. It's just happening external to uniswap. And so part of what Uniswap before is about is not just like more experimentation within Uniswap, but taking experimentation that happens today external to uniswap and bringing that into the Uniswap ecosystem and having it happen within uniswap. And then the actual cost of aggregating Uniswap with one of these other custom amends is actually lower than the cost if it's built externally because of the shared singleton model. So it's sort of moving the protocol more towards being like a full developer AMM development platform. You did ask about the relation to products.
00:34:05.150 - 00:34:44.438, Speaker A: Yeah, let's come back to that in a second. But I want to sort of riff on what you just said. So earlier today, I was giving a talk at Venkatehat Rao's Summer Protocols Fellowship, which is being hosted by the Ethereum Foundation. And I was talking about another framework, which is protocols that seek to be complete versus protocols that seek to be incomplete. And I first wrote about this in 2019, and I used uniswap V One as an example of a protocol that sought to be totally complete. So those familiar, it's like X times Y equals K. That was the formula and that was the AMM design, right? And it worked really well.
00:34:44.438 - 00:35:25.562, Speaker A: You couldn't change it. No governance, right? Just a totally specified protocol. And of course, the benefit of hindsight, we can now see that while that initial design was trying to be complete and fully specified, it was incomplete in the sense that the world evolved around it. And you've shipped since V two, V three, and now V four. And I think one of the key lessons in what you just described about V Four is you've still maintained this drive for the protocol itself to be complete. Like, the governance is not taking on some outsized role in the protocol in V four, it's still a minimal governance surface area. The protocol itself is fully specified.
00:35:25.562 - 00:36:19.000, Speaker A: However, this specification leaves room for third parties to experiment and sort of evolve the protocol and for the market to decide on sort of what the most exciting or interesting evolutions are. And I think that's a really powerful sort of design principle. That was, again, giving as an example today of combining this property of completeness, trying to specify the important things in a protocol and make them kind of difficult to change, while also allowing for surprise and sort of innovation. That what I would class. Other projects that are more incomplete, typically through governance, try to foster experimentation and dynamism through that kind of more subjective or human decision making. This is the best of both worlds, letting the market decide on the module or components that are most interesting.
00:36:21.370 - 00:36:54.302, Speaker B: On that, I'd say that I'm glad we started with a more contained, scope, simple project. I definitely think that if I had tried to build uniform before in 2018, 2017, it would be like, insane. I think it made sense. It was like ultra simple. Each version got more complex, and we learned a lot from each one. But yeah, totally agree. I think that part of before is also just an acknowledgment that there is no single best AMM design, there's no single best market structure, and there is a complex trade off space in that.
00:36:54.302 - 00:37:12.790, Speaker B: Not exposing it just means that you're leaving room for all that experimentation to happen outside of the ecosystem. And so it was sort of like a requirement to keep continued innovation, to keep unisoft at the forefront of innovation in the space. It's just like opening up room for experimentation.
00:37:15.770 - 00:37:50.530, Speaker A: Okay, so I want to make sure we have ample time because there's a lot of questions in the chat and people sending questions before. Let's kind of speed run this stuff, the remaining stuff here. So one thing we haven't touched on is, well, maybe just to wrap up on protocol versus product, you mentioned the wallet. What's sort of the purview? What is Labs building around the protocol today? And that's a segue to another question, which is organizationally, how are you doing that within Labs? What does the look like to support protocol and product development respectively?
00:37:51.110 - 00:38:37.726, Speaker B: Okay, I'm bad at speed running, but I'll try. I'd say that generally speaking, I'd say that the main product that we have today. So we have obviously the smart contract protocol. We have a bunch of peripheral smart contracts that we've developed. We have developer tools that we've built, but kind of like the main things are the way that Labs is even organized. We have a front end team which is currently divided into the web app and the wallet. And the web app is like the most used app, right? We have millions of users, millions of monthly users, and it's really a focused experience around swapping between tokens or providing liquidity to pairs.
00:38:37.726 - 00:39:15.066, Speaker B: And we start to add on new features and functionality like the NFTs and all this stuff. But it's really like a place people can go to really buy and sell all the ERC 20 tokens. Not all of them, but many. Then I'd say that the wallet, again, came out of this as we were thinking about how do we improve. The funny thing with Uniswap is that it was sort of like a lot of people uniswap is their first destination in DFI or in crypto or in self custody. It might not be their first. Usually the first destination.
00:39:15.066 - 00:39:55.290, Speaker B: Crypto is something like coinbase or finance. Buying ETH or buying bitcoin. And then from there you want to buy something like some ERC 20 token. Usually at that point, you're like, oh, what is like you start to learn about uniswap and then you go to the Uniswap web app and what used to happen. The experience of landing on Uniswap web app used to be like, oh, okay, now you can go to Coinbase, oh, you land on Uniswap, go to Coinbase, buy some crypto, go download this chrome extension called MetaMask, send your crypto from Coinbase to MetaMask, and then connect your MetaMask to Uniswap. And that was like an insane journey for users to start. We wanted like a place where you could be like, oh, no, you just download Uniswap, you can get started from scratch.
00:39:55.290 - 00:40:21.490, Speaker B: So now we have this mobile wallet. So it was a combination of this user journey. People came for Uniswap and we pushed them out to a bunch of disparate user experiences. And some people still want that. We still support third party wallets, of course, and we always will. But having like, oh, you came for uniswap, here's how you get started with uniswap, download the uniswap wallet and then, oh, you want to buy crypto. There's a fiat offer app built in.
00:40:21.490 - 00:40:55.726, Speaker B: And so I think that the sort of pieces start to come together. Uniswap is like, our web app was the first step in Google's journey. Actually, I'm not speed running. I'm terrible at speed running. I already told you that. And then I'd say, generally, I think something that's starting to happen at Labs is that our wallet and our web app are kind of like coming closer together. Some of the recent updates and features to the web app are actually just like views that we had in our wallet that we pulled out into the web app.
00:40:55.726 - 00:41:43.658, Speaker B: Right there's, like this new portfolio view you can click on if you click on your account. And that's basically just like the exact view you get when you open your wallet. But sort of coming up as a sidebar on the web app, the same way that today Coinbase has Coinbase Mobile and they have Coinbase Web. I think over time they should come closer together and they should feel more like, oh, it's just uniswap with wallet having certain functionality that's a little different, web app having a certain functionality a little different, maybe more data, more data rich views, et cetera. But really we have this core consumer trading consumer. I want to buy and sell crypto product, which is the web and mobile app. And then we have this on chain smart contract protocol, which is meant to be like the best AMM it was before, really almost like AMM platform.
00:41:43.658 - 00:42:08.286, Speaker B: And then we have this backend layer, which is just like, how do we make our web app and mobile app performant and have up to date data? It used to be like, we could just have our front end connect directly to our smart contracts and have that be performant because there wasn't that much happening. But there's so much data, there's so many trades, there's so many tokens that you just need this API layer essentially for performance.
00:42:08.478 - 00:42:11.926, Speaker A: And it's about how many people at Labs today?
00:42:12.028 - 00:42:20.490, Speaker B: Yeah, Labs is about 100 people. It's probably a little bit more than half engineers, maybe 55 engineers, 60 engineers out of 100, generally.
00:42:20.990 - 00:42:23.290, Speaker A: How does it break down product versus protocol?
00:42:23.790 - 00:42:46.210, Speaker B: Yeah, protocol engineering is actually relatively small. It's like 89 people who work on smart contracts, which again, V One was just me. V two was like me and Noah. V three was like me. Noah booty the earliest versions. You don't need that many smart contract engineers. Definitely.
00:42:46.210 - 00:43:36.530, Speaker B: Now we have more, and it's partially because we're working on more projects at once. We're updating our routers, we're updating, obviously, we're working on before. We have a few other fun stuff in the works. On the smart contract side, no news to break today. But the protocol, the engineering team is like, relatively small. And then we have maybe like 20 or so people on the, on the consumer facing products, a little bit over ten on the back end is something like ten, but we definitely, generally speaking, very heavily oriented around a product and engineering and design. We have very small teams for stuff like legal and communications and marketing and all of that stuff when we just started to dip our toes in marketing for the first time with the mobile wallet.
00:43:36.530 - 00:43:49.222, Speaker B: Historically to date, it's all just been organic growth and so we're starting to experiment with other policy even, but mostly just focused around.
00:43:49.356 - 00:44:17.550, Speaker A: Yeah, I think it's interesting. The protocol team is relatively small and organizationally, so much more weight on product. That's a great place to park it. Thank you very much for coming on. I think this was like we could have gone for many hours and this was packed with tons of insight, a lot of stuff that I think is generalizable to the next generation of people building in the space. So, yeah, thanks for coming on and for being an inspiration to us and to others who will view this in the recording.
00:44:17.970 - 00:44:23.100, Speaker B: Yeah, thank you for having me and good luck to everyone and yeah, great talking.
