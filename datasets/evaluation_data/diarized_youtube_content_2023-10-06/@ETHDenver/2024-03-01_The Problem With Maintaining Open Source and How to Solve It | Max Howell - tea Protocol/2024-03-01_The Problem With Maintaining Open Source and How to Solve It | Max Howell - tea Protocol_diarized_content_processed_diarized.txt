00:00:00.250 - 00:00:08.590, Speaker A: Core contributor to tea protocol. He's going to be talking about open source and the problems and challenges of maintaining open source. So thank you, Max.
00:00:14.050 - 00:00:35.958, Speaker B: Good afternoon everybody. I'm Max Howell. Originally the creator of Homebrew. Nowadays I am co founder and core contributor to Tea protocol. Today I'm going to be talking about the problem with maintaining open source and potentially the solution. But before I get there, I'm going to start with a bit of a story. My personal story.
00:00:35.958 - 00:01:15.762, Speaker B: I never thought I would be a programmer is the honest truth of it. Despite the fact that that has been pretty much my entire career over the last 20 years. I remember when I was maybe 15 or 16, I wasn't really sure what I wanted to do with myself. And I went to a job fair and while I was there, there were dozens of extremely professional people telling me about their different career choices. And then I met the programmers. These two people honestly scared me a little with their unbelievable geekiness and I backed off. But I always remembered the childlike wonder they seemed to have for their work.
00:01:15.762 - 00:01:47.806, Speaker B: And out of everybody there, they were easily the most passionate. So I did a chemistry degree. I went into the chemistry industry and I discovered after about a year that everybody was right. Chemistry really is very boring. I fell into this depressed funk and I went home and I installed Linux on my home computer. I discovered open source. I discovered the open source communities of the world and how they were trying to build something new and special.
00:01:47.806 - 00:02:23.034, Speaker B: How they were trying to innovate in a world that was dominated by companies like Microsoft and Sun and other extremely dull enterprise type vendors. It was through my work on open source that I managed to get into the industry. I don't have a computer science degree. To this day, I still cannot invert a binary tree. But some company noticed my work and offered me a job. While I was there, I created homebrew. Homebrew has become one of the biggest open source projects of all time.
00:02:23.034 - 00:02:49.150, Speaker B: When I started writing it, I didn't really know what to expect. I worked on the apps team at the company I was at. We maintained six apps. Mac, Linux, Windows, Android, iPhone, and even a BlackBerry app. And I'm very happy to say that there is no longer a BlackBerry App Store. That thing was the worst SDK I have ever worked with. But the unifying platform for all six of these platforms was Mac.
00:02:49.150 - 00:03:28.350, Speaker B: And my team were using Mac and we discovered that the package management solutions for Mac just weren't up to the standard we were used to from Linux. I love the Linux package managers and I spent five or six years, drifting between different distributions, trying out all the different package managers. In the end, my favorite was Pac man by Arch Linux. And the stuff on Mac at the time just didn't really cut it. So I used to complain incessantly about this situation at the pub after work. And one day one of my coworkers just had had enough, told me to shut up and do something about it. So I went home and I committed the first commit to homebrew.
00:03:28.350 - 00:04:11.382, Speaker B: Well, there we go. So this is an interesting video of the commits to Homebrew during the first few years. And there you go. After a few weeks, it just suddenly captured everyone's attention. I tweeted about it a few times and then hacker news got hold of it and it just exploded into this enormous amount of viral contribution from hundreds and then thousands and then tens of thousands of different people around the world. It became a much more interesting job for me than my real job. So I started spending evenings and weekends pretty much dedicated full time.
00:04:11.382 - 00:04:39.902, Speaker B: I was 26, so sometimes I'd stay up all night and somehow that worked. I can't do that anymore, that's for sure. In the time, though, I decided I wanted to work on homebrew full time. So I quit my job after saving up a bit of money. And I did that. And it was a glorious six months living the dream, actually working on stuff that I loved. I loved homebrew, I loved what I'd created, I'd loved that everybody else loved it.
00:04:39.902 - 00:05:10.506, Speaker B: And I loved that. It was the biggest project on GitHub, I have to say. It went to my head a bit for a few years. Nowadays it's still this busy, is the truth of it. I've since passed it on to these people. These people stepped up to be a part of homebrew and eventually took over from me when I eventually burned out. Because every so often I would have to get another job and earn some money so that I could then go back to working on open source after saving up a bit of money.
00:05:10.506 - 00:05:44.540, Speaker B: This cycle has been most of my career and I burned out on it. And something's not right with that. The truth is, over the last 1520 years or so, open source went from being something that was widely derided. Big companies like Microsoft used to claim that it was dangerous. Bit unbelievable. Nowadays things, they're very fond of open source, but 20 years ago that was not the case. Nowadays it is at the base of an awful lot of software.
00:05:44.540 - 00:06:19.340, Speaker B: An awful, awful lot of software. In fact, we estimate that 97% of commercial code has a massive amount of open source underpinning it. The web two industry was bootstrapped by open source built like people like myself. They've made fortunes off the top of the work of a few. Now, the truth is, I never expected anything when I made homebrew. I wasn't doing it because I wanted money, I was doing it because I loved what I was doing. But there's a disconnect there, a disconnect.
00:06:19.340 - 00:06:57.192, Speaker B: There's a disconnect between the people like myself who are working on this stuff in the evenings and weekends and not making anything from it, and the companies that have made billions. This has led to a fragile Internet. This is a famous comic by XKCD that my designer has made a bit more sexy. You might have seen it before. It's called dependency. It implies that all modern digital infrastructure is a series of bricks that are stacked on top of each other. This is how open source has always worked.
00:06:57.192 - 00:07:41.348, Speaker B: People solve pressing problems for the time, and then these pieces get stacked into the tower, and then everyone builds on top of that once they've decided it is the correct solution. We're all building on the top of the shoulders of giants. However, because it isn't exactly funded, there's always these flaky pieces. And in the comic, it points to this pillar down there at the bottom, where it implies there's a project that's been thanklessly maintained by some person from Nebraska since 2003. And this is real. And not only is it real for web two, it's possibly even more real for web3. If you think about it, you could look at this comic differently.
00:07:41.348 - 00:08:16.998, Speaker B: Where this little yellow pillar down the bottom there is all of web two, open source software, and web3 is built on top of that. This isn't a unique problem to myself. I love this quote from the core JS maintainer. Core JS is used in 80% of the top 100 websites in the world. In fact, it's really quite difficult to make a node JS application without using core JS. It's downloaded almost 6 billion times a year. The quote is, I'm effing tired.
00:08:16.998 - 00:09:05.260, Speaker B: Free open source software is fundamentally broken. Companies that save and earn many millions of dollars on core JS usage just ignore funding requests. I have a lot of good job offers, but if I accept one, core Js will become just useless and die. And what happens to the Internet when these pieces disappear? Well, this happened two years ago. A very popular piece of open source that nobody had ever heard of because it was so deep in the stack a true Nebraska style project called Log four J. Suddenly a zero day exploit was found that made it possible to route hundreds and thousands of enterprise applications on the net. It was possible to route a Minecraft server by typing something in the chat box.
00:09:05.260 - 00:10:01.710, Speaker B: So the Internet panicked. And all these enterprise vendors who don't really understand how open source work were emailing the maintainers of this project demanding that it get fixed because they assumed they were paying for it, right? And the maintainers went on Twitter and they were like, hey, we'll fix the bug. We care about the software, but we're unpaid volunteers who make this software. So maybe after we fixed it we could get some funding from you. So they fixed it and they're still unfunded. And then we have massive projects like Ffmpeg who periodically tweet this stating the fact that all video infrastructure on the Internet uses their software, including YouTube, including Netflix, all of them. These are incredibly profitable platforms and yet they don't really have any funding.
00:10:01.710 - 00:10:43.782, Speaker B: So a couple of years ago I was once again in between jobs, wanting to work on open source full time and I explored what was out there and I didn't find anything that I really felt was going to work. Still, six or seven years ago I tried the Patreon route. That does work for some open source maintainers. So I spent four months marketing myself like I've never done it before. And after that time I figured I'd probably spend 30% to 40% of my time marketing myself, where I wanted to spend all that time working on the open source software. And yet still I wasn't earning enough on my patreon to pay my rent. So I looked deeper.
00:10:43.782 - 00:11:16.022, Speaker B: I decided that this was a personal mission that maybe it was up to me to solve. And I discovered crypto. Unlike most of you here, I'm sure I'm relatively new to crypto. I had ignored it and I decided I needed to explore new technologies. So I went down the rabbit hole. I looked into what crypto and smart contracts could do. I discovered the new branding of web3, which I thought was pretty genius, honestly, because it's a whole nother web, right? There's got to be some really great stuff in there.
00:11:16.022 - 00:11:58.306, Speaker B: And while exploring that, I realized that open source slots into the web3 model perfectly. Open source is already decentralized. Open source is all about community. Community is one of the most important parts of how open source functions, and web3 is all about these pieces too. And I realized that tokenization can empower developers to contribute to open source while reaping overdue rewards. I had a vision in my head where the package managers that I contributed to put that data on chain, and we used a dependency graph to somehow funnel token through. So we founded t.
00:11:58.306 - 00:12:32.560, Speaker B: T's mission is to sustain open source as it sustains us. There's 2.2 million web two open source devs out there. Compare that with probably 30,000 web3 devs. These people need to be sustained, and yet they have, like I was, been missing out on the incentivization and the way that crypto can fix situations like this. We want to bring all 2.2 million of those developers onto Web three.
00:12:32.560 - 00:13:10.950, Speaker B: So how does it work? Well, at the core of what we're doing is our proof of contribution algorithm. We've indexed all the package managers and then we find that dependency graph between open source projects. Just like the tower I was talking about earlier, these bricks build on top of each other. And when you make an open source project, that dependency choice that you're making is really a reputational stake. Your reputation is dependent on the reputation of your dependencies. So we use that to rank all open source projects. The more important open source projects are more depended upon.
00:13:10.950 - 00:13:48.818, Speaker B: They have higher impact. They keep the Internet running more than the rest. And then every day we throw token at these open source projects based on their ranking, the t token rewards. We're also introducing onchain governance to 10.5 million open source projects. These are projects that haven't really understood how smart contracts and dows can improve the governance systems that they already have in place for their projects. And finally, this isn't just for open source devs, it's not just for non open source devs.
00:13:48.818 - 00:14:26.206, Speaker B: This is for everybody who believes in the value of open source and wants to participate in that value ecosystem. Let's face it, open source underpins everything nowadays. It went to Mars, it's at the bottom of the ocean, it's in everybody's computers and phones, it's everywhere. So the value of open source is commensurate to some value of the software industry as a whole. Last Wednesday we launched our Testnet. It's been a long two years, and we've designed what we think to be a really amazing protocol and tokenomics model. Testnet went live last Wednesday.
00:14:26.206 - 00:15:05.594, Speaker B: Here we are. Today we have over 250,000 users active on our app and protocol, and we have over 700 open source projects signed up. I spent the last two to three months phoning open source maintainers, key and core open source maintainers, asking them what they needed what they wanted. And all of them have a dream like I did, to work on open source full time. And almost all of them are having extreme trouble with existing methods of making that a reality. So they've all onboarded and the testnets until June. So we're going to continue onboarding projects.
00:15:05.594 - 00:15:42.116, Speaker B: If you have one, please onboard it. We also have a $250,000 grant program as an incentive to onboard during the Testnet. So if an open resource project, contact us, it's on the website and you may be eligible for a grant of $5000 to $10,000. Although you don't need that. The t token will be that future. We understood when we embarked on this project that we were dealing with a lot of people who are unfamiliar with web3 technologies. These are web two open source developers or web two developers.
00:15:42.116 - 00:16:07.836, Speaker B: They don't understand wallets, they don't understand metamask, and they don't really want to. They're familiar with web two platforms. So from the start we were determined to design something that felt like a web two platform. And I got to say we really succeeded. It's four or five clicks to onboard your open source project. It's one or two clicks to participate in our app. We use account abstraction, paymasters and other modern technologies.
00:16:07.836 - 00:16:41.064, Speaker B: We really are a poster child for what can be done in the web3 space nowadays. So that's t we're trying to fix the Nebraska problem, but we are trying to do it without changing the nature of open source software. Open source is beautiful. It really is. It's an astonishing thing. I often find it remarkable how it went from being that thing that Microsoft described as dangerous to backing up every piece of software in the modern world. But it's because it proved itself.
00:16:41.064 - 00:17:10.900, Speaker B: So it's great. We don't want to change how it works. We do want to change that one problem, the sustainability of the ecosystem. We don't want any of it to collapse. We want the people who make open source to be able to work on it full time because they've made amazing impact by being able to do it just on the evenings and weekends. Just imagine what's possible if all these people can do it full time. So thank you very much for listening to me on this presentation.
00:17:10.900 - 00:18:01.420, Speaker B: You can take a picture of this QR code to sign up and onboard to our testnet or check out more documentation about us. We have a booth here, number 410. So if you have any questions about our tokenomics model or how t works or how to onboard, please come by. We'd be delighted to meet you and chat about our project. Thanks very much. Apparently I have a few minutes for questions, so if anyone wants to ask questions, there's a microphone here at the front and I'll stand here until it gets awkward. Microphone's not working I'm afraid.
00:18:13.230 - 00:18:39.860, Speaker C: Something we saw from the recent Starknet Airdrop and that we're seeing with scroll right now is a lot of people trying to kind of farm open source contributions without actually contributing anything to the sustainability or the long term of these projects. I'm curious how the t algorithm determines what is like a useful or a good open source contribution from people that are just, like I said, trying to farm or just trying to get involved without contributing anything useful to exploit the distribution mechanism of tea.
00:18:41.530 - 00:19:12.154, Speaker B: Yes indeed. It's very important to us that open source maintainers are rewarded without it becoming some kind of burden for them in another way. So our algorithm measures the impact based on your position in the graph, the dependency graph of open source. It's very very difficult to game like. We considered other options like installs or GitHub stars, for example. Those aren't things that are universal to all open source projects for a start. Also, it's very easy to gain.
00:19:12.154 - 00:19:52.602, Speaker B: So the dependency graph is other open source projects that we already trust declaring their trust. We basically modeled this on Google's page rank algorithm. We can all see how successful that was until two or three years ago. But it will work for open source. It's a much simpler and more refined system. So it's completely something we don't want for any participants to be gaining from open source projects in any way whatsoever. And we had a small set of problems last week where some people were trying to farm open source projects and we very quickly built a barrier to stop that from happening.
00:19:52.602 - 00:19:55.020, Speaker B: So it's almost completely stopped. At this point.
00:20:02.520 - 00:20:43.460, Speaker D: I wanted to expand on the topic raised by the previous person who asked the question, so what about open source projects themselves that are kind of like spammy server, for example, there's the infamous NPM spanner John Schlinkert with those even repositories that basically a lot of people install those dependencies because they're not that important. But as a result their dependency graphs looks kind of neat. They look like a very important open source project, even though the contact of those repositories is not significant. It's not like those projects that you talked about. How do you prevent those projects occupying a disproportionate share out of the revenue?
00:20:44.920 - 00:21:38.240, Speaker B: Yeah, great question, right from the beginning we knew that we needed to make it so that real open source was rewarded and not fake open source. And some people consider smaller packages like Leftpad, which is a very famous package for reasons that we would like to one day solve. But aside from the point the left pad is like one line of code, right? It shouldn't receive significant rewards for that. Now on one hand you could argue that it is significant because it has 100,000 dependents, so there must be some people that consider it useful, so it needs some rewards. But we designed the algorithm, so I'm glad to say that Leftpad has a relatively low t rank, so it does get some rewards, but I'm not sure that's wrong. But we're going to figure this out as we go. We're a project where we want open source maintainers to have heavy influence on how it's designed going forwards.
00:21:38.240 - 00:22:02.280, Speaker B: We've done the initial designs and now we're handing it over to you. The governance of the project will be run by open source people and votes on chain will be done by open source maintainers. So let's fix the problems as we find them together, like a true open source project. Well, I think that's all the questions. Thank you very much.
00:22:03.130 - 00:22:06.980, Speaker A: Thank you very much, Max. Super interesting. Thank you.
