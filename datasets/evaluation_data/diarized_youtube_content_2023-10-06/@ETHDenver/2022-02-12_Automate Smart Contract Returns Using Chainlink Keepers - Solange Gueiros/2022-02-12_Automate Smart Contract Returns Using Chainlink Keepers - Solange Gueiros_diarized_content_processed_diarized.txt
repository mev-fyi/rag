00:00:00.730 - 00:00:28.454, Speaker A: Yes. Hello, everyone. I'm so happy to be here. It's the third time that I came into the first that I'm talking in the stage. So I'm so happy. And I need to confess that I choose a difficult topic to talk with you. But prepare your computer because we will do in interesting challenger in 20 minutes.
00:00:28.454 - 00:00:52.000, Speaker A: Let's go. So this is me. My name is Solange Guerris. I am developer advocate at Chain Link Labs. And this is our agenda. But let's go faster to this. So go to this link in your computer, and I will go out my presentation to do this with you.
00:00:52.000 - 00:01:25.686, Speaker A: So here we are. You can see here. And I read the requirements over there because. No, wait. Thank you. Okay, you are seeing now. Okay, so this is our pad, our link.
00:01:25.686 - 00:01:53.410, Speaker A: Pad. Riseup net. Pkeepers. I will come back in a minute because I'm adding the requirements. So it's easy. You only need to have metamask to have some ethers on coven. We are doing this on coven.
00:01:53.410 - 00:02:25.620, Speaker A: Have some link on coven. I put the faucet for you if you need coven at ethers or link. And I will ask something for you. So as it is information for me here, like I am Sao. I'm from Brazil. You can put your name over there. One line for each person.
00:02:25.620 - 00:03:00.952, Speaker A: Genada. And let's go forward, because now you are installed if you need something. And you are putting your name here and you come back to the presentation. Okay? And yes, no, I came to the beginning. Okay. No problem. Here we are.
00:03:00.952 - 00:03:51.364, Speaker A: And why we need keepers. What's the problem with the smart context? The smart context are passive autonomous agents. It means that they can't trigger or they can't initiate their own functions at any time or under some conditions. And how we can do a change state change in ismatch content. So we need to have a transaction, and this transaction must be sent by an external account or another account can be a sterno account, can be a user, can be an oracle. And because of this, we have chain link keepers to solve this. Chain link keepers.
00:03:51.364 - 00:04:40.360, Speaker A: It's a decentralized network of nodes. These nodes are incentivized to prefer registered jobs. We call them upkeeps. This means that they can be used to check some conditions and then to run functions in your smart context. So this is the main goal or the main idea the keeper is doing. This off chain is doing a simulation. And then if this simulation returns true, it will send your transaction to your ismatch context to execute something that you define.
00:04:40.360 - 00:05:32.842, Speaker A: I did a very fast explanation. At the end I will put some links to you to understand better and more because I'd like to you understand this in so we now will create smart context using remix. And this smart context you give to you some tokens on coven but it is the chain link. It danger token and we will prepare a keeper to give this token to us every minute for example so we can have a lot of tokens. So let's go. Wow. We have a lot of persons here and I know that some of them are online, others are here.
00:05:32.842 - 00:05:58.424, Speaker A: This is amazing. Oh again. Okay. Every time that I go out a presentation just happen. Perfect. So we are using heliumix now. Okay.
00:05:58.424 - 00:07:09.570, Speaker A: We are creating our smart contract the name it will be keeper minter and I will copy and paste here the source code and you can copy and paste in your computer. Be careful to not cut this much content you need to copy it. Not cute. So this is the smart content. It's so big. Here is better. So I put the beginning, the end copy inside the beginning and the end and I will explain what this is doing now.
00:07:09.570 - 00:08:06.000, Speaker A: So my smart contract I'm using the last version of solidity, not the last one but the 0.8 and I am importing an interface from keepers. We need to use this interface but I can import this directly from the chain link but I copy it here only to be fast for us. Okay. And then this is our token. I have this open here only to you understand what this? So I created this token today in my morning and when this is ahor because I sent some tokens to the job to the upkeeper and then this is my address and for some minutes, like 106 minutes I receive tokens. So I have a lot of tokens.
00:08:06.000 - 00:09:24.786, Speaker A: I can see here in my metamask that I have chain link etd tokens and you got this too. So I need to mint the tokens, I need to have an interface connected to that token. I created this interface here for you and this is the main content, the keep minter. It is using the keeper compatible interface and I have a counter only to know how many times I'm doing this and how is the interval to get the tokens. Like I like to do this in 30 seconds or in 1 minute something like that. And to do this I need to control how was the last block, the last timestamp that I did this in the constructor, what I'm doing, setting the interval like I will do here with 30 seconds, setting the last timestamp, initialize the counter and the interface to that token that I showed you before. Remember that I said that we have two functions.
00:09:24.786 - 00:10:10.850, Speaker A: One is the checkup keep. And this is used by the job to verify if there are something to do using mysmat content. And then I have the perform upkeep. This will execute what I'd like to do and what I'd like to do. I would like to increase the counter and mint tokens for me. Probably you don't like to mint tokens for me? Would you like to mint tokens for you? So change here in this line, put your address here. And my token has only two decimal places.
00:10:10.850 - 00:10:58.730, Speaker A: So here it means that I'm doing one token. I'm minting one token. Okay, so going back here. Oh, someone, I said to you, don't cut, only copy. So you need to change in the remix the line 40. Okay, you. So is this.
00:10:58.730 - 00:11:35.618, Speaker A: You will update your address here in remix in this line to mint the tokens not for my account, but for your account. And if you would like more tokens, you can do it. No problem, it's yours. And let's publish this. I think you are ready to do this. So I'm going to deploy and run transactions connecting to my injected web3. This is my metamask here.
00:11:35.618 - 00:11:56.982, Speaker A: I am in coven here just now. And you can check that I have some iters and I have some link over there. I can do this. It's perfect here. Very important. Select our contradict, go to the keeper minter. And I need to define the interval.
00:11:56.982 - 00:12:33.990, Speaker A: It will be 30 seconds. It's good. Deploy. It's in a few seconds. I will have my contact deployed on coven. Here we are. And are you asked to do something with me just now? Like put your name over there and the address of your smart contract.
00:12:33.990 - 00:13:05.310, Speaker A: Mine is. I can copy here at the end. And here is mine. Perfect. We have more parcels doing it. It's amazing. Okay, next step, I'm going now to the keeper app to register myismatch content.
00:13:05.310 - 00:14:18.080, Speaker A: And in this way, the keepers nodes can monitor myismatch content and execute this for me. So go to the Keepers app, register a new upkeep and IU copy and paste over there the information. Well, we don't need my email and I changed the ismatch content. So is this. Let's do this. Now. This is the address of my smart content.
00:14:18.080 - 00:15:24.960, Speaker A: I can copy from remix again. You can see that the main address, it's my address. But I can use another smart contract or another wallet to administrate this. The gas limit we have some tests that this is a good limit to use and we are funding the keepers the job with some link because every time that this is executed it is consuming the link token. I can pass some parameters for this, but I'm not using this and hash upkeep. I'm sending a transaction again. You need to wait a bit.
00:15:24.960 - 00:16:07.682, Speaker A: Wow, we have some persons. Oh, sorry Alex, about your laptop and. Oh, it's done. Perfect view upkeep. This is my upkeep now and you can see that. Wow, it's so fasting. The first time that I added it already did the perform upkeep.
00:16:07.682 - 00:16:40.720, Speaker A: So probably I forgot to show you how many tokens I have before. No, we did this. Remember that I have 106. Now I have 107 and I'm winning more tokens. I have more tokens. In 10 seconds I have one more token. Like I can refresh here to see that it was performed again.
00:16:40.720 - 00:17:20.186, Speaker A: And let's go to the metamask to see it. And yes, one more. And this is I automated my smart contract because I have an external agent. Like this is a job that is running a function in my smart content for me and we can use this for many applications. You come back to my presentation because I have some links for you. How much time I have? I don't remember the time. Two minutes.
00:17:20.186 - 00:17:47.154, Speaker A: Okay, it's perfect. So come back here. Not in the beginning. Okay, where we are here. So you can understand more about the keepers. You can first take a look at the introduction. The introduction have only the counter that I'm using here.
00:17:47.154 - 00:18:29.236, Speaker A: But I put a bit more because of the talking minter. And these utility contracts are so useful because you can learn how to send eaters to another contract. You can have useful functions that you can use like these kind of jobs. And I'd like to invite you, especially the beginners for our smart contract development boot camp. It will be happen on 70 from nine to 05:00 p.m. And you can register over there. It will be streamed too.
00:18:29.236 - 00:19:02.670, Speaker A: So you can go in any place. Okay, I know that we are copying so fast. Go, go. And you can learn more in all of these channels about chainlink. So with this, I know that I don't have time to question just now, but you can find me over there and it will be my pleasure to talk with you. Thank you guys.
