00:00:01.370 - 00:00:42.262, Speaker A: Hi everybody. My name is Robert Miller. I lead product and I'm a steward at Flashbots. We're a research and development organization focused on MeV, I'm going to be talking to you today about commitments and privacy in the MEV supply chain, why they're important, and how flashbots is using commitments and privacy to design protocols for trustless collaboration, and to decentralize MeV. So, for my talk today, we're going to start by looking at the MEV supply chain. First, we'll review this framework for how you can think about MEV, how it affects users at different stages. We'll talk about what Utopia and Dystopia look like, and how to get out of dystopia, and to MeV, Utopia.
00:00:42.262 - 00:01:58.654, Speaker A: And we'll look concretely at Mevboost as a case study for how we can get to utopia using privacy and commitments. Before introducing Mevshare, which is Flashpot's new protocol for collaboration, we'll talk a little bit more about in a moment. That's the high level treasure map for us today, but beginning with the MEV supply chain, the MeV supply chain is this framework for how you can think about how a user's transaction progresses before it is included on chain. To begin, a user has some intent, something they want to do on chain, like I want to perform a swap. A wallet will take this intent and use that to generate a signed transaction, which a searcher, which is a really sophisticated user in Ethereum that specializes in making money on chain, will see this user's swap and find ways to bring prices back into line. As an example, after that, swap has moved markets, so the searcher creates a transaction of their own, which arbitrages markets to capture some MEV, and forms an ordered list of transactions with the user's transaction called a bundle. This is sent on to another specialized actor in the supply chain called a block builder.
00:01:58.654 - 00:02:54.258, Speaker A: A block builder's job is to create the most profitable block possible, taking many bundles from many different searchers and many transactions from many users, and composing them into a full block. And they pass that finally onto a validator whose job it is to propose a block to the network. And that's the end to end view of what it takes for a user's transaction to get included on chain on Ethereum today, and how the MEV supply chain works at different stages. There's some nuance in here, there's some different entities, but this generally is a good mental model that we'll use today to look at mev utopia and dystopia. This is what utopia looks like. This is kind of the picture of what we want the future to be. What we want are many specialized entities being able to play each of these roles in the supply chain, and you want every party to be able to play one role without having to play a different role as well.
00:02:54.258 - 00:04:09.722, Speaker A: So for example, you want a validator to be able to just be a validator and only know how to be a validator and not need the skills to have to be a block builder as well, because building blocks is a super difficult job that requires a lot of infrastructure and specialized knowledge. So if you needed to be a builder to be a validator, it would raise the barriers to entry of being a validator much higher, and it would lower the decentralization of the Ethereum protocol. This is the way of why specialization in these roles is really important, and why we want this highly specialized supply chain where different actors are playing different roles, and you want many different parties at every step of the supply chain that are competing to provide the most value to other actors within the supply chain. You can see the dollars flowing at the top. Finally, we don't want any entrenched parties, we don't want any permissioned systems. That means not flashbots, that means not anyone else, no entrenchment. And this is what an alternative could look like of the Mev dystopia, where instead of having this highly modular supply chain that's flat with a lot of competition, you have a single party, or a small group of entities that are vertically integrated end to end.
00:04:09.722 - 00:04:41.990, Speaker A: They are the validator, they are the builder, they are the searcher, they are the wallet, all in one. You don't know what's going on on the inside. It's not a competitive system. And if you get to this place, it breaks down the core properties of why we care about blockchains. It destroys the decentralization of the protocol. It allows a single party to introduce things like censorship, which we're already seeing on Ethereum. It allows these parties to extract rent, and it's opaque and goes against sort of the core properties of decentralization.
00:04:41.990 - 00:05:42.038, Speaker A: And the reason why this happens is if there are efficiency gains from vertically integrating in the MEV supply chain that you don't get if you have specialization. And we'll show how we get to MeV utopia by enabling this specialization in the MEV supply chain. And you need to do that through creating these protocols for trustless collaboration that allow many different parties to compete and maximizing competition at each of these roles. But this is a very difficult thing to do because parties don't necessarily trust each other in the MEV supply chain. And we'll use Mevboost as a case study to show how you can enable trustless collaboration and competition by using privacy and commitments. Okay, so that was a mouthful, but we'll slow down and look at Mepboost specifically as a case study. So validators are the parties that are responsible for proposing blocks to the Ethereum network.
00:05:42.038 - 00:06:35.898, Speaker A: And as a validator, you want to make as much money as possible for doing this job. A core part of that is choosing the most profitable ordering of transactions within a block. But this is very difficult because MEV is very complex, it's super nontrivial to find out what the most profitable ordering of a transaction is. So a validator wants to outsource this job to a specialized entity called the builder. Well, this collaboration is quite difficult because if a validator can see the builder's block in the clear text, then the validator could front run the builder's block and steal their MEV for themselves. The cut that the builder would take, or they could even front run users. And the sort of consequence of this is that if a builder is sending clear text blocks to the validator, they will only want to send that to trusted and well known entities, your lido, rocket pool, Coinbase, kraken, binance's of the world.
00:06:35.898 - 00:07:34.154, Speaker A: And this hurts decentralization because only trusted entities can get really profitable blocks that extract MeV. Solo stakers wouldn't have access to the most profitable blocks. And right now, MeV boost and sort of the gains from MEV as a validator give you an increase in returns of about 100% APY. This is a really big threat to decentralization, and we need validators to have open access to builders blocks. But to do that, builders can't have their blocks seen by validators. So the takeaway from this slide is that you need privacy in the MEV supply chain for collaboration between builders and validators. But if you imagine that you have privacy, if, for example, builders are only sharing block headers with validators, you have another problem, which is that validators don't know if they can trust builders, and there are ways for builders to hurt validators in this process.
00:07:34.154 - 00:08:19.850, Speaker A: So a block header doesn't tell you anything about the profit of a block or if it's valid. So a builder could propose a block header to a validator and lie about the money that the validator will get or propose something that is not correct on the network. And just because a validator signs a block header doesn't mean that the builder will reveal the block body, right? You can't just have privacy. You need more than that. The builder to commit to certain blocks and be able to make sort of strong economic or otherwise commitments about the blocks that they're proposing to validators. You need these dual things. So how did we manage this with Metboost in our protocol for validators to interact with builders? It's sort of this three step process, which is fairly simple.
00:08:19.850 - 00:09:15.998, Speaker A: You start first with, and we're introducing this new entity that you see on the screen now, which is called a relay. It's used as a privacy and commitment device by both builders and validators. And first, the builder sends their block to a relay who simulates the block to make sure that it is valid and profitable and reports out to the validator, hey, here's a block header with a certain profit. If you're interested in signing this, the validator will see a bunch of block headers and sign the one that is most profitable, returning that to the relay. The relay then knows that the validator has committed to including this block because they've signed the header and they can reveal the block body safely. And this is one part of the MeV supply chain you see in the bottom left. It's a simple kind of two phase commit reveal scheme, and this helps builders and validators permissionlessly collaborate together.
00:09:15.998 - 00:09:59.338, Speaker A: But why does it do that? There's a couple of things that you get from this scheme. And using this new entity called a relay. First, privacy helps unbundle this because builders blocks are hidden until block headers are signed. And at that point, builders know that validators have committed to a certain block. And because of this, builders are happy to share their block headers with any validator that is willing to listen. Because you're only sharing a selective amount of data, enough for validators to perform their job, but not enough for builders to be front run or users to be sandwiched. And validators know they have this data revealing guarantee that if they sign a header, they're going to have the block body behind it.
00:09:59.338 - 00:10:35.846, Speaker A: They're not going to be attacked with the builder withdrawing a body. They know that the relay will reveal the body of a block if they sign the header. Like I said, we're sharing selective amounts of data. It's not absolute privacy, it's programmable privacy. You share enough data to let people do their job, but not enough to front run. And finally, you have the relay acting as this commitment device between validators and builders, both of them committing and using this third party to certain blocks. The net result is that you unbundle the MEV supply chain and you let builders and validators permissionlessly collaborate where neither party has to trust each other.
00:10:35.846 - 00:11:21.320, Speaker A: They have to trust this third party, the relay. This isn't the end game of what we want. We want to create a decentralized system where there's no trusted party, the relay, in the middle of these entities. But in the interim, we think this is important to allow open access to MeV to any validator on the network and keep the validator set of Ethereum decentralized. So we want to remove the relay and use crypto economics to do that. And that is the next step in this process. So, okay, what is the next step in MeV utopia? What are we doing with the MEV supply chain after this? And how are we applying these concepts to other parts of the MEV supply chain? At flashbots, we asked this question, and the answer that we came up with was to focus on users and order flow instead.
00:11:21.320 - 00:12:02.242, Speaker A: And this comes from a pretty simple premise. So, users are creating mev with their transactions. They're leaking value into the mempool right now that is being captured by these super sophisticated entities, searchers, builders, oftentimes validators. And we want to create a permissionless system that lets users and searchers collaborate together for users to internalize that value instead. So, this is the premise that we started with. But as you'll see, this is quite difficult to do, because a user interacting with a searcher directly introduces them to all kinds of risks. You send your transaction to a searcher and they might front run you.
00:12:02.242 - 00:12:37.342, Speaker A: You're not going to get money kicked back to you. You're going to get worse execution. By directly interacting with a searcher, there's a risk that you get front run. And even if you're sending your transaction to someone you trust, there's no guarantee that you can internalize your MEV, that you actually get paid for it, because you don't have bargaining power in this relationship, just sending your transaction to them. And there's no way, even if you are getting paid by a searcher, to enforce that payment downstream in the MEV supply chain. So say a searcher is willing to pay you, but a builder front runs them and takes your payment. You need some payment enforcement here.
00:12:37.342 - 00:13:15.210, Speaker A: So, at flashbots, we've designed another protocol for collaboration in the MeV supply chain. It's called Mevshare. And it introduces another third party, which we call the matchmaker. It works pretty similar to Mevboost. First, a user sends a transaction to the matchmaker, and the matchmaker shares a little bit of information about the user's transaction with searchers. So not the whole transaction, but enough for the searcher to do their job. For example, if a user wants to make a swap, the matchmaker might tell searchers hey, this user is making a swap on ETH USDC, but not telling them how much they're swapping for.
00:13:15.210 - 00:13:57.106, Speaker A: And that's enough for the searcher to construct a partial bundle in step two and tell the know I'm interested in this swap on ETH USDC. I want to try and arbitrage it with this transaction. Mr. Matchmaker, could you insert their transaction in front of mine so I can backrun it with my partial bundle, which is what the matchmaker does in the third step, which is create a full bundle with the user's transaction, the searcher's partial bundle, and send it on to the builder with a new thing called a validity condition, which enforces that the user gets paid back meV. So it's this three step process again. First, selective data sharing. Second, partial bundles.
00:13:57.106 - 00:14:49.278, Speaker A: Third, full bundle to a builder with enforcing the user gets paid. So why does this work? Again, it's pretty similar concepts to why Mevboost works. First, you introduce MeV into this supply chain where users'transactions are hidden from searchers, so they're comfortable sharing their information with any searcher, because searchers don't get the full information set, but we are sharing some information. It's not absolute privacy, it's programmable. You share enough for searchers to do their job, but not enough for users to get front run. And finally, we have the matchmaker playing this role of a commitment device for both searchers, as well as enforcing payments with bundle validity conditions from builders. The net result again is that we give this permissionless way for users and searchers to interact together, where users can get paid for their MEV, searchers can extract MeV.
00:14:49.278 - 00:15:47.110, Speaker A: This is what the MEV supply chain looks like after MEV share. You have Mevboost between builders and validators, and you have MEV share between the searcher, wallet and user. But there are obvious gaps in this MEV supply chain where we need new protocols for permissionless collaboration. So perhaps the biggest one and the most important here is this place between searchers and builders right now, searchers, if you construct an MEV bundle and send it to a builder you need to trust that the builder isn't going to unbundle your transactions, they're not going to screw you over in many different ways. And this limits the number of entities that can build blocks with your bundles. This sort of trust assumption limits the number of places that MEV share can share bundles with. Also, because we need to trust builders not to mess around with those bundles and to actually pay back MEV to users.
00:15:47.110 - 00:16:48.122, Speaker A: So there's some sort of permissionless protocol here in this space between searchers and builders, maybe. We call it MeV build and alphaleak, we just released our code for running a builder inside of an SGX earlier today. So we're producing blocks on a testnet, sepolia Testnet inside of an actual SGX, which means that our builder can't tamper with or see bundles before that is proposed to the network, which is pretty cool. And there may be also crypto economic ways to enforce this too. But this is an area for future collaboration in a place where flashpots is going to be looking a lot more deeply in the future. And there's perhaps some other protocol between the user and wallet, but this seems less salient and less immediately relevant, and then permissionless interaction between searchers, builders or builders and wallets. So sort of wrapping this up, we looked at the MEV supply chain, we looked at how, without trust and privacy, you have these incentives for vertical integration that would lead to MeV dystopia.
00:16:48.122 - 00:17:32.522, Speaker A: And we looked at how, by using privacy and commitment devices, we can remove the need for trust between parties. We can introduce collaboration, we can introduce efficiency and get us to MeV utopia with that really flat, specialized, competitive, decentralized supply chain that we looked at in the beginning. And we saw how Mevboost and MEV share specifically use these two ideas of privacy and commitment devices. And to wrap it all up, this is what we're building at flashbots. We're not okay just building these trusted parties in Mevshare and Mevboost, but we want to build an actual decentralized platform for privacy, for credible commitments in the MEV supply chain. And that is what we're building with SWAF. So thank you so much for listening.
00:17:32.522 - 00:17:52.340, Speaker A: Really appreciate you all being here and listening, and I look forward to decentralizing Amav supply chain with you. Cheers. I don't know if I have time for a question or anything. I'm taking that as a yes. I don't.
00:18:00.970 - 00:18:17.100, Speaker B: Know how much you think you're going to extend the whole SGX in this supply chain experience, like, I think, private order flow. You can also use SGX, just how much you think is necessary. And I think. Do you see intel SGX as the only, I guess, choice for.
00:18:17.470 - 00:18:53.142, Speaker A: Yeah, yeah. So it's a good question. Where do we extend trusted hardware in this supply chain? I think at the limit, you probably want to put everything in trusted hardware, and not because it's a silver bullet, but because trusted hardware adds another layer of defense, because it makes it more difficult for the players in this system to tamper with it, to remove privacy, because it costs money to attack. So our philosophy at Flashpots is defense in depth. You want to layer these technologies on top of each other. So we're interested in putting literally everything inside of an SGX at the limit. For that reason.
00:18:53.142 - 00:19:06.740, Speaker A: It just raises cost to attack. Basically we're looking at other types of trusted hardware too, but they give you different guarantees, so it's very nuanced, like what works in what capacity. Thank you so much.
