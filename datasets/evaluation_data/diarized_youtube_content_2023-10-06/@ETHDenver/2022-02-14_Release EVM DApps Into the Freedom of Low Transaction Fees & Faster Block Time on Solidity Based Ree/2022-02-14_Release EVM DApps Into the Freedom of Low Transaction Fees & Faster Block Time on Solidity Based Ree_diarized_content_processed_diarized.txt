00:00:00.650 - 00:00:50.940, Speaker A: Hello everyone. I'm excited to be here in this beautiful city and environment around it. WHOOP. Sorry about that. All right, I'm going to show you some tools and I'm going to walk you through what you can use to release and deploy dapps to the reef chain. Basically it's very simple. You already know all of these tools and I'm just going to show you where to find them and what they do.
00:00:50.940 - 00:01:59.920, Speaker A: So the rift chain is the perfect fit for porting EVM apps because it has low transaction fees. That means that your dapps can be used widely and solidity contracts don't need to get updated, you can just deploy directly what you have and there's faster block finalizations. So main tools for deploying are the remix. We added some plugins to the remix so it's ready to sign and send contracts to the rift chain and then the hard hat. This is an example that already uses the plugin, our riff hardhead plugin, so you don't have to set up anything, it just works. From this example. You just add your contracts and your code.
00:01:59.920 - 00:02:41.760, Speaker A: Then we have the indexer and the graph. So on reevescan.com you can see all the blocks. It's basically like Etherscan. We added some additional features like you can use graphQL queries to query data. We index the tokens and the nfts, so you get very easy values lists for all the accounts on the chain. And you can listen to EVM contract events over there.
00:02:41.760 - 00:03:52.058, Speaker A: And there's also a contract verification so you can verify your source code. And then you can also interact with the contracts like call methods on the ABI. Then we also have the front end lip, so it's faster to build your depths and easier. So we have react lip with react hooks so you can just use them. There's also observables to get the selected signer, like the state of the app, you can use that for quick startup. You get account tokens, you get nfts and you can subscribe to EVM events from there. And there are hooks for the provider to get the provider get the signers from extension and the state observables.
00:03:52.058 - 00:04:46.920, Speaker A: So those are the selected signer and all the tokens for current account and these kind of things. So it's very easy, you just subscribe. You can do it with hooks or you can use observables rxjs. So there's an example app you can see and you'll find out in the app TSX. There's an initialization script so most of the stuff it's done there and then you can just subscribe for the observables. So one more thing. We are substrate chain and to get the EVM account on our chain you have to call the claim default account.
00:04:46.920 - 00:06:07.360, Speaker A: So that's how the users get their EVM address and they can sign and send transactions to the EVM contracts. There's also like we provide helper methods inside the library so it's easy to bind. There's also like we have plugin, I mean browser extension and users can also bind their accounts over there. But yeah, that's the thing they have to do to use the EVM contracts. So signing transactions is like on any substrate chain you can use polka dot JS extension or you could use our riff chain extension. We also added some features for easy account management and binding and getting account tokens, I mean displaying account tokens, nfts and that's like a dashboard view. And users can make token transactions and swaps just in one place so they don't need to go anywhere else.
00:06:07.360 - 00:06:59.100, Speaker A: And that's the URL of the Chrome extension. But on our Docs website you can find there's a Firefox and the Chrome URL. So I'm trying to prepare you for the bounties. As you might know we are sponsoring and there's a $50,000 rewards in total. You can check it out, it's on it Denver website. And yeah, for any, anything else, if you have any questions I'll be around. Or you can ask on the Matrix or discord and the main stuff, it's in the docs over there.
