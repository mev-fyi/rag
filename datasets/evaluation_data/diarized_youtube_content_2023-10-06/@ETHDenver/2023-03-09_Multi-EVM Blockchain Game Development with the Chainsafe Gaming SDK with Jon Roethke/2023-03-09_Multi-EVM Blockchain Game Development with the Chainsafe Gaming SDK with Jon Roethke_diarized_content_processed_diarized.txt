00:00:00.330 - 00:00:46.170, Speaker A: So welcome to the multi evm blockchain game development with the Chainsafe gaming SDK. So originally, this talk is presented by a gentleman named Kwame Brian, who's on the core team. He's a core engineer for Chainsafe Gaming, but he wasn't able to attend today, so I'm doing the talk on his behalf. And my name is John Rutke and I work for Chainsafe Systems. Also, Chainsafe Gaming is just one product underneath the umbrella that is Chainsafe. So, Chainsafe is a research and development firm. We're founded in 2017, tasked with working mostly on improving the existing infrastructure for networks like Ethereum, Filecoin, Polkadot, as well as Nim most recently.
00:00:46.170 - 00:01:27.834, Speaker A: Okay, so for those came seeking a really hands on workshop on how to build your first blockchain game. Essentially what we've done here is I've modified the presentation slightly. It's going to be a little bit more high level, but don't worry, you still get everything that you came here for and more, hopefully. So the resources here Kwami put together, it's called V two sample, our SDK, we just upgraded to a new version called V two. And so I'm going to give you a minute to record this. It's K Brian, which is his GitHub username. And the repo is called V two underscore sample.
00:01:27.834 - 00:01:47.960, Speaker A: And then the YouTube video underneath that YouTube link, hopefully it's large enough to see that's like a 45 minutes presentation. Exactly. On how to integrate the SDK into unity environments. The unity like game framework. Probably something you're familiar with, if you know Unity at all. It's something called the Unity Hub. You can download from their website.
00:01:47.960 - 00:02:51.142, Speaker A: Okay, so for those who do wish to stick around, this presentation will be more of like a thought workshop. It's focusing specifically on why one would wish to incorporate web3 into a game and then how you might do that, not necessarily getting into the really technical stuff like Kwami will show you. Mine's going to be more like a little bit high level, kind of talking about game design, how that changes with a blockchain game versus a traditional web two game. So if that is of interest, you're in the right place. Okay, so Kwami is not here to obviously speak about himself, so I'll give a little bit about him out of respect. I've gotten to know him over the last two years working at Chainsafe, and he's just an awesome guy, but he's spent most of his career actually in traditional game development, excuse me, mostly working for game developers like EA, as well as Microsoft Game Studio and some other notable companies too. So since 2014, Kwami has been involved in building web3 tooling.
00:02:51.142 - 00:03:14.708, Speaker A: And so like I said, I've been had the privilege of working with him for the last two years. And there's his Twitter and stuff like that you can find on discord. He's very active. Okay, so a little bit about me. So my name is John again. That's my Twitter handle, waymobetta. In the early two thousand s.
00:03:14.708 - 00:04:07.940, Speaker A: Basically I occupied a lot of my time playing pc games and I quickly fell in love with two in particular, Diablo two, and also an mmorpg called City of Heroes where you design your own superhero. And so this game was eventually shut down on November 30, which is the doomsday right there. And November 30 is actually my birthday. So you can imagine this game that I loved played every day almost for a decade, and they shut it down on my birthday. So I'm here now to talk about this and I think it's going to be pretty fun because I have a lot to say, as you can imagine, many years thinking about this. So then after that I moved to a project called Ad chain, and where we attempted to curb the rampant fraud found in digital advertising. And we were trying to do this by applying blockchain solutions.
00:04:07.940 - 00:04:41.580, Speaker A: Really difficult. Blockchains don't scale super well. So originally we were thinking like, you can imprint all transaction data, or rather impression data, which is how digital advertising works, impressions on a blockchain. But that quickly became like a terrible solution out of just scalability constraints. So we ultimately landed on an idea called token curated registries, or tcRs. And so our team pioneered this concept and we deployed the first TCR to ethereum main net in 2018. This was called the ad Chain Registry.
00:04:41.580 - 00:05:14.456, Speaker A: So I went on to write a book about this experience, my experience at ad chain, and it was called, aptly called the one block wonder because we did a token launch in 2017 and we sold out in one block. We raised something like 44,000 ether, I think. I can't remember exactly, but it was around $8 million USD at the time. And we sold out in about 23 seconds. So that was a pretty interesting event. A preview of that can be found on my website. You can see the book there, but it should be published in the next month or two.
00:05:14.456 - 00:06:05.204, Speaker A: I just wanted to share the story with people. I think they should know about it, and it's hopefully pretty inspirational. So then I joined Chainsafe and I worked as a back end engineer on a project called Chain Bridge, which is a modular blockchain bridge connecting environments like EVM as well as substrate. And then now I lead developer relations at Chainsafe and I spend most of my time evangelizing for blockchain technologies and demonstrating web3 tooling at events like this. All right, so let's get into the main talk here. So Kwami likes to think that the future of gaming is where studios become networks, players become communities, and games become platforms for growth. So studios becoming networks, kind of like you can think maybe studios running their own blockchain or perhaps their specialized DAP chain players as communities.
00:06:05.204 - 00:06:51.240, Speaker A: We're kind of already seeing this in massive discord communities and these vibrant communities that are all abound. And then games as a platform for growth. It kind of borrows from that previous point of communities where there's more opportunity for user generated content originating from the community and then possibly making its way into the game itself. Okay, so chainsafe gaming, what is it? It's a complete suite of web3 gaming products and services for studios, developers, indie developers too, and players to bring games into the future. So it includes a full featured gaming SDK that I'll be talking about today. It's called web3 Unity. And there's also an NFT, Minter and Marketplace.
00:06:51.240 - 00:07:52.508, Speaker A: And if you use the marketplace with the SDK, it's a native integration, so you don't have to do any custom coding. So basically what you could do is you can mint an NFT on our marketplace and then be able to pull that asset into a game that you've created and that's made possible by using or leveraging the SDK in your unity context. Okay, so chainsafe gaming basically helps you engage your community in an easier way because you can grab access to all these cool web3 components that we know and love, like tokens. That's a huge one. And so you can connect your game with the web3 experience into Unity 3D using something like a prefab. And if people don't know what a prefab is, it basically allows one to configure, create, store game objects with all of its values, components, child components, child objects and things like that as a reusable asset. So it could be like a tree that you use multiple times within your game.
00:07:52.508 - 00:08:26.710, Speaker A: It could also be an NPC at some times. You would like that NPC's behavior to increase or decrease depending on the game or in the situation of the game. And that can all be done with a prefab, so you don't have to create. These aren't individual objects each time, which would be a lot of work and tons to maintain. You just use prefabs and basically duplicate them. So now we'll start getting into the different kind of tokens that we support, obviously, 27, 20, 111, 55 standards. There are many cases where using a 721 doesn't make sense.
00:08:26.710 - 00:09:09.910, Speaker A: People say, well, it's non fungible, just like an 1155. And it's like, well, there are still situations you don't want to use a 721. Like for example, if everything were a 721, there could exist like a cap on the number of these non fungibles that are issued. And so if you imagine each avatar in your game is a 721, you might end up limiting the number of players you can play your game. So at the same time, looking at something like weapons or wearables within a game, not every single weapon needs to be unique. It can be, but it doesn't have to be. So these are just two cases where you might want to leverage the 1155 instead.
00:09:09.910 - 00:09:58.004, Speaker A: So the gaming SDK web3 Unity is EVM compatible, and it operates on mobile and desktop environments as well as Webgl. For those not familiar with that, that's basically like browser environments. And so it compiles down to webassembly, and so it's also embedded with decentralized storage services like Chainsafe offers their own, which is just kind of like a layer on top of ipfs, but you could also just use ipfs on your own, if you're familiar with that. And again, I talked about the marketplaces just a little bit. You can either create your own and bring that within the game context, so players don't have to leave to go out to like an open sea. They can have that marketplace live inside the game. And many games that maybe some of you know, like World Warcraft, for example, city of heroes too, they offer marketplaces in game.
00:09:58.004 - 00:11:02.660, Speaker A: So if you can imagine that assets were digitized or digital collectibles, those assets can be traded within the game, and then of course taken outside of the game, which is really where the value comes from. And we'll come to that in the next slide after this. But I want to briefly talk about the blockchain trilemma, which is kind of like a widely held belief that decentralized networks can really only provide two out of the three of these benefits at any given time out of respect to decentralization security as well as scalability. And so we won't speak about this at length, but we should let this slide kind of serve as a reminder of the present challenges to providing all of these three elements at one time. And there are ongoing efforts from, like, l one and l two s to try to try to fix this trilemma or address this trilemma. And I guess if some of you are actually familiar, there's a separate trilemma called Zuko's triangle. And it's kind of unrelated, but it's interesting because Zuko's triangle basically talks about how to provide recognizable names and network protocols.
00:11:02.660 - 00:11:30.352, Speaker A: And Zuko's triangle was addressed by many projects, but one in particular that y'all may know is Ethereum name service, or ens. So that's pretty cool. So we're solving problems left and right up here. Okay, so now we kind of get into this slide. I'm sure it's kind of overused. Many people have probably seen this, but it just talks about the evolution between web one, web two, and web3, and maybe where we are right now, which is more of like a web 2.5. So web one is kind of like you can just read things.
00:11:30.352 - 00:12:12.684, Speaker A: You can't really change state. Web two, you can start to change state and see that relayed back to you. And then Web three starts getting into more ownership of that data. And so in the context of a game, if you were able to own those digital assets and the game shuts down, like I will explain in my personal story here soon, all that data, all that time, isn't just locked into the game that doesn't go down with the ship, so to speak. When the DB gets sunseted, you can take some of that data away if it's in a token, if it's stored on a blockchain. All right, so here's my personal story. And so before we get into more details about the SDK, I'd like to talk about this a little bit.
00:12:12.684 - 00:12:46.756, Speaker A: And maybe it starts helping you to see, like, oh, these problems are going to keep occurring or have occurred in the past, and it really marooned communities when this event occurred. I'll just explain it briefly. So, like I said, I've been a gamer since the early two thousand s, and in two thousand and four, I fell in love with this game. It's a desktop game called City of Heroes, and you were able to design and play your own superhero. And at the time, this was the only game of its kind. And of course, Marvel came out with their own superhero games as well as DC. But those two games, you aren't allowed to create your own superhero.
00:12:46.756 - 00:13:24.048, Speaker A: You're just able to play as something like Wolverine or maybe play as Batman. You can't create your own superhero. So what if you wanted to do that? And so this game really addressed that market need. And so that's why it was so sad when it went away, because players didn't have an, you know, in the same way, people don't have an alternative to maybe the banking system, they don't have an alternative to some of these traditional web two systems. Now they're starting to with the advent of web3. So it's pretty cool to see. So city of heroes, naturally, they created like a darker version called City of Villains.
00:13:24.048 - 00:14:03.460, Speaker A: And it opened up this whole player versus player, lots of fun. And you could design your own costumes and power sets, and each hero was like a different archetype. Obviously, villains would wish to rob banks and heroes would be like, trying to prevent that. So it created this really fun dynamic. So in 2012, though, I realized the impact centralization had, at least on me at that time and on my life, and this game that I loved, they just shut it down and without a lot of warning. And so it left me, as well as others, kind of feeling helpless and really frustrated too. So it's like, what can you do now? They just shut the game down.
00:14:03.460 - 00:14:38.828, Speaker A: And it makes sense. These studios, they're businesses, so they have to make difficult decisions. And sometimes these decisions the community doesn't agree with, maybe many times, actually. But what can we do as a community? What can we do as a community, though? It's kind of a challenge. Essentially, what happened is they just took the servers offline and they didn't open source the code like a Starcraft might. And so people were just stuck. And so this is the message that was sent out by the community manager of the studio at the time who created this game.
00:14:38.828 - 00:15:04.768, Speaker A: And I'll let you read that for a second. But it's pretty sad. And again, like I said, it makes sense why these studios make these decisions. They're operating at sometimes profit margin, sometimes none. And so they just have to make difficult decisions, especially to make way for, like, new games and things like that. So that was the fateful message we received when the server went offline. And as you can see here, lost connection to map server.
00:15:04.768 - 00:16:12.032, Speaker A: This sometimes happened when your Internet drops, but it also happened on this exact date when they just pulled the plug, basically. And it was really sad because everyone's like teleporting around and firing off their powers because they know, it's like the last time and it was really sad when you read the chat messaging, everyone's like, please don't do this. And it just proves like, there are some situations you can't control. So centralization, it's a nice segue because centralization disrupts each of us in unique ways and with no less damaging impact. It's just subjective. And so by integrating technologies like Ethereum into a game, for example, or any kind of blockchain, maybe this can not only introduce in game economies that we talk about, but it can also help players be less impacted from centralization faults, whether those are accidental or on purpose, by allowing them to be in more in control of their game assets and perhaps even one day, maybe even the game state itself. So hopefully the story and the examples provided here help you to think about game design and how that may differ between a traditional web two game and one built with web3 from its inception.
00:16:12.032 - 00:16:49.684, Speaker A: In a similar way, we don't build dapps by first building a web two variant and then incorporating web3 in. We don't try to layer it in after the fact. It's built from the ground up. Like Uniswap was built with web3 in mind from Day Zero. And so games should could probably need to follow a similar design path. And I'll get into this a little bit later when actually we show you a demo of a game that we built, and I'll talk about some of the challenges that we ran into. Okay, so now we're back to the web3 unity SDK.
00:16:49.684 - 00:17:31.060, Speaker A: So I told you about the story of City of heroes shutting down. What would that have meant if that game, let's say that game was built in unity, and let's say that game did incorporate the SDK into it. What could have been done? Well, one of the cool things about City of Heroes is you can collect badges and achievements, and if you work with a bunch of people, a bunch of other heroes to take down a big giant monster, you get a badge for that. And then when you leave the game, though, or when the game shuts down, that badge goes down with the ship, it's gone. And so you have no proof of that. So obviously you can kind of see where I'm going with this. If that badge were to represent like a 721 or a 721 were to represent that badge, you'd be able to take that outside of the game with you.
00:17:31.060 - 00:18:02.668, Speaker A: And then even if the game was shut down forever, maybe a different game that recognized that badge or that achievement within that game City of Heroes will be able to pull that data into that game and say like, oh, this person was here on this date, or kind of like a poap. But it also could be proof of achievement or proof of time spent in game. So let's get into a little bit about the SDK. So I talked a little bit about the prefabs that we offer. Saves you a lot of time and development. You can just drop these prefabs in, you don't have to build them yourself. Kind of gives you a nice template to work with.
00:18:02.668 - 00:18:49.704, Speaker A: We support various EVM chains, some of the biggest that you'd use for gaming, like kronos and Polygon, BSC, of course. And so it supports multiple environments, like I said, desktop, mobile, as well as browser. And you can communicate directly with RPC providers. So this is one of the big changes with V two, is we removed our middleman API basically from the equation. And so previously a transaction would be crafted in our servers and then it would be sent back to you to then sign and broadcast. But now we've removed the API layer because chainsafe is all about open source software as well as promoting decentralization. So we wanted to remove that point of failure in many ways because it was a point of failure, it was a point of constriction for people because the API kept getting overloaded.
00:18:49.704 - 00:19:17.124, Speaker A: I mean, you'd have like millions and millions of requests a day. And we're not an infrastructure company. We build infrastructure for other companies, for other networks. So we didn't want to get into that business model. So we built it as a proof of concept, as kind of something that would have been sunsetted eventually. And the problem is we just got so much usage that it pushed it to the absolute limits. So we've sunset that or it's happening like in the next month or two.
00:19:17.124 - 00:19:38.190, Speaker A: But the V two update is out. So now you just hit an RPC provider directly. It's great. And so that means the transaction handling, the read writes occur on the client side. So in this case it would be within unity itself. So you have a lot more control a developer does. And then of course there's like a vibrant community that we have fellow builders and really experienced people too.
00:19:38.190 - 00:20:24.524, Speaker A: And it's made for Unity developers. And Unity is one of the biggest game engines in use today, especially looking at a platform like Steam and the percentage of games on Steam built with Unity, it's a lot. So now we're kind of in this research phase of like where do we go next? Do we delve into unreal. Do we go somewhere else? And so that's to be determined. Okay, let's see if I skipped a page. Okay, yeah, so a little bit about the SDK, I've already talked a lot about this, but it improves reliability because we're no longer having this middleman API server that can't go down on weekends, which is usually when game developers become super active and our team happens to go offline because we're trying to enjoy our weekends. So you can imagine the difficulties there.
00:20:24.524 - 00:20:54.852, Speaker A: People are scrambling. So yeah, it proves that reliability as well as scalability, because we're no longer the bottleneck. You configure the RPC provider, you don't have to use infuria, you can go to somebody else, quicknode, any number of these. And so it's kind of like we're pushing that out a little bit. And so it improves the SDK speed because you no longer have to hit an API to get a response and then broadcast the transaction. You do it all from within the context of unity to the RPC provider. And then again it improves transaction handling.
00:20:54.852 - 00:21:34.124, Speaker A: So one of the biggest requested features that we have is basically instead of having to wait for the transaction, essentially how it would work before is you would submit a transaction through the API and then you'd have to wait for the response, you'd have to ping the API and say, basically, was it a success or failure? Give me an update. And now you just await the RPC call. And so it just tells you it'll come back. It's literally going to wait in the code and then you just wait for the response that returns. So lastly, I guess it improves collaboration. It's open source. Everything we do is open source.
00:21:34.124 - 00:22:10.828, Speaker A: So collaboration is kind of in our dna. And so if you find something about the code base that you don't like or you wish to change, or maybe a lot of the community wishes to change it, you can submit a pr. And we're definitely happy to entertain that. Obviously it just helps to make a better SDK experience and really optimize the code. Okay, so now we're going to show a sample trailer of a game that we put together. Now, Chainsafe is not a gaming studio, but we wanted to create a game. We wanted to showcase our SDK within a game.
00:22:10.828 - 00:23:35.080, Speaker A: And it's awkward because like I said, we're not a gaming studio, but how do you show a game demo highlighting what an SDK can offer? It's like this is all behind the scenes stuff. You don't want to be showing this, but for the sake of trying to get more people to use this SDK and incorporate this web3 tooling in your game, we tried our best. See if I can. How do I can run this. Okay, maybe there's no sound. There's no sound. So these weapons are shows claiming tokens that you've earned within the game itself from basically turning germs into, or like healing germs.
00:23:35.080 - 00:24:12.102, Speaker A: This is the transaction details that show up within the game itself. It's too small. We can't do full screen. So those grenades, these are the networks we support some of them, for example. But those grenades are like, those are purchase. Those you generate. You collect like, Erc 20 tokens within the game and then go to the store or the marketplace that could, like I said, be embedded in the game itself.
00:24:12.102 - 00:24:51.922, Speaker A: We didn't go that far, but we could have easily. Then you can just buy these eleven fifty five s and all of a sudden you've hit the ground running. What this shows kind of behind the scenes, you maybe saw a little bit, but it shows. Contract reads, contract writes, you're checking ERc 20 balances, you're checking 1155 balances. And then obviously all of that is predicated on the first and most important step, which is just basically making sure that you have a wallet connect. So once you have the wallet connected, it just opens up this whole world possibilities. Okay, so the cool thing about this is we'll also be conducting a build along series in the next couple months.
00:24:51.922 - 00:25:26.894, Speaker A: It should be around two months. We're going to release the build along series on YouTube. So power users within the group here, you can always just kind of go ahead and skip ahead and things like that. But the build along series will also have live discord, community calls, so you can actually meet the developers. They can talk about some of the challenges in incorporating the SDK into those games. Like I said, the game design, that's a huge piece. And game design itself, it definitely differs between traditional web two and how we know this is because we built this game first as a web two game and then tried to incorporate web3 after.
00:25:26.894 - 00:25:59.740, Speaker A: And it was just like. It was tricky. It was just tricky. And it's doable for sure, but you just kind of need to change your thought process behind it. Even like reward pools. Maybe at the end of a game you have a reward or not a reward, you have a winners list, and it'll be like the top earner in the game or the top score in the game. And that can be turned into like a rewards list where you just incentivize those people to keep playing and make it to the top of that list and you just drop them token or something.
00:25:59.740 - 00:26:50.794, Speaker A: This build along series should be instrumental in kind of helping things click. As well as Kwami's YouTube video, that whole 45 minutes video I highly recommend. But we designed the game specifically around the series for education purposes and so we provide all the code resources as well as the videos, of course, that you can follow along from all the way at the beginning to all the way at the end. And the series might even continue as we release new features within the SDK. So you can stay up to date with a really dead simple game and you can understand how all of that works. And then you take all what you learned and incorporate it into like maybe a first person shooter like this, and it gets a little bit more complex, but at least you have the base. And so once you have this baseline knowledge, then you're able to really expand where you go from here and that starts to get really fun.
00:26:50.794 - 00:27:32.802, Speaker A: You can think beyond just the basics of what we talked about today because this is very basic stuff when it comes to game development. We're not even talking about dynamic nfts or nested nfts, any of that stuff where you start to get into traits that's going to be really cool and the technology is starting to get there. So hopefully once you have this baseline knowledge, that technology will be ready and you're all able to incorporate that within your game. Okay, so I guess that's all the time we have. I can't advance this, but there's a thank you screen here. Anyway, it doesn't matter. Thank you for your time.
00:27:32.802 - 00:27:44.360, Speaker A: And if anybody wants to reach out, you can find more information about the SDK on gaming chainsafe IO and I'll be around answer questions as well. Thank you very much.
