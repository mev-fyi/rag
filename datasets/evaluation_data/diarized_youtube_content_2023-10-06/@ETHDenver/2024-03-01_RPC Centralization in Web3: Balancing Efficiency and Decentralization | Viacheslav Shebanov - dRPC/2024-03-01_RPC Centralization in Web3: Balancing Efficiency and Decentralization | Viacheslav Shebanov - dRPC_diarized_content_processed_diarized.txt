00:00:00.330 - 00:00:02.894, Speaker A: Sure. Yeah.
00:00:02.932 - 00:00:03.680, Speaker B: Hey, guys.
00:00:05.250 - 00:00:05.710, Speaker A: Yeah.
00:00:05.780 - 00:00:26.390, Speaker B: Let's talk a little bit about problems that we have in web three. And today I want to talk about, like, RPC centralization and what it means for web three. So I'm Slava. I'm cto@drpc.org. And we're building decentralized RPC infrastructure for multichain future. So let's start from the. I'm sorry.
00:00:26.390 - 00:01:24.098, Speaker B: Let's start from the basics, like what's an RPC? You've probably heard of blockchains, and if you know what's blockchain, it's basically the fancy way of synchronizing state to multiple computers in a decentralized fashion. But the important stuff is the state. And if you're building web three applications, web three applications need on chain data, so they need to access this state. And typically each blockchain client will have some kind of API to do. Yeah, and why it's called RPC? Well, historically, ethereum and bitcoin, they decided to go with a JSON RPC protocol. And we kind of now call oldest blockchain API rpcs, which maybe not the best name, but yeah, we still use it. And historically, the vision was that if you want a data on chain, you kind of run your own node.
00:01:24.098 - 00:01:59.780, Speaker B: However, it's 2024 and we live in multichain world. So if you're building some web three application, you probably need a lot of blockchains, and it means you need a lot of nodes. And it's very expensive and it's very hard. So basically nobody does that. So there appeared a number of companies that are, we call now RPC providers. And, yeah, we kind of run web three, decentralized web on top of web two, centralized software as a service companies, but temporarily. Right.
00:01:59.780 - 00:02:27.126, Speaker B: Well, let's think about it. And the first step would be let's think about what clients want. I mean, RPC clients, and those clients are web three companies that are basically businesses, too. So they have customers also. And they want basically four things. They want to have good ux user experience and developer experience. They want to have high speed and good reliability.
00:02:27.126 - 00:02:40.078, Speaker B: And of course they want low cost, cost efficiency. What clients don't want? Well, yeah, actually, I must say that this not like we invented it. We talked to hundreds of customers and.
00:02:40.164 - 00:02:41.440, Speaker A: They all said that.
00:02:42.290 - 00:03:19.690, Speaker B: But what they don't want, they don't want decentralization. And they told us specifically that they don't care about it, a lot of them. And they don't care about fancy technology with bad UX and actually that's understandable. As I said, they are businesses, they also have their own customers. They can't say to their customers, sorry guys, we were down like 3 hours. But you know, we use decentralized providers because customers, they just will go to their competitors and who use centralized providers, maybe. So that's like what we end up with.
00:03:19.690 - 00:03:58.940, Speaker B: Centralization of RPC providers is status quo. And we arrive that not because we're bad people or bad industry. It's just economically feasible to do that and it's reasonable. So let's think about why do we need decentralization on RPC layer at all? And let's be honest about that, because I must say, decentralized providers, not always honest with you. I'll try to be. So, first, is decentralized providers have better UX or DX? You probably know the answer. No.
00:03:58.940 - 00:04:50.310, Speaker B: Historically centralized providers like infuria or alchemy have significantly better UX than decentralized counterparts. So that's not it. Maybe decentralized providers have better reliability and we're running kind of this argument. We, I mean decentralized RPC providers for a number of years that yeah, decentralized RPCs don't have a single point of failure. But the problem is, unfortunately every decentralized provider, like everyone, I don't want to call names, runs centralized gateways. And the reason is specifically the previous point that you need a good Dex. Developers just want to copy paste URL and just work with it so they don't want your fancy stuff and you kind of end up with a centralized gateway.
00:04:50.310 - 00:05:33.526, Speaker B: And yeah, so you're not that different from centralized providers. And now if we're thinking about other things, of course centralized providers like alchemy or infura, they don't think about decentralization, so they have time to think about their customers. And historically of course the reliability of those providers are significantly better than for their decentralized counterparts. Okay, but maybe performance for decentralized providers is better. Yeah, you could argue that there is a lot of compute over the world. The gala distribution for decentralized providers would be better. However, I can argue that everything that decentralized providers can do, centralized can do too.
00:05:33.526 - 00:06:32.970, Speaker B: And actually, as I said previously, because they think about customers a lot more times, they historically have the better performance significantly, and in theory they even can have the best performance possible because they control hardware, they control network, they can provide the best setup possible. Okay, there is another argument that you can hear a lot with this all centralized versus decentralized discussion. It's verifiability. The problem when you use RPC provider, you kind of trust them when they respond with some data. You don't have any way to check if it's valid. Yeah, and of course nobody cares about that and nothing bad happened. Of course here how it goes, nobody cares until something happens, like some kind of black swan event.
00:06:32.970 - 00:07:22.722, Speaker B: And maybe one day you kind of go to some voting platform that uses this RPC and maybe there's a vote for very important protocol and that's very important vote. And that moment provider decides to tamper with your data and you could end up voting for something you don't understand or don't agree with. How can you protect ourselves? Well, there is a solution. It's called like clients. So the like client is a kind of super lightweight, efficient node that you can run on your phone and it actually talks to the centralized, for example, RPC provider and only syncs the state that your web application needs. And it can do that in a trustless way. So it can check everything that RPC provider returns.
00:07:22.722 - 00:08:03.510, Speaker B: So if RPC provider will try to tamper with the data, lite client will detect that. And you can kind of use this lite client as your RPC node. And if you have a wallet, for example, it's a reasonable way to do that. It's a reasonable way to do verifiability for the RPC. And for Ethereum, there are actually existing solutions like Kevlar or helios that you can use right now. However, there are few problems with that. First is that actually this stuff is very inefficient because most of the time for each call to the light client, lite client makes several calls to centralized RPC provider, for example, and it will cost you more money.
00:08:03.510 - 00:08:46.006, Speaker B: And it's slower, just slower. Also, unfortunately you can't verify all requests using this approach. And moreover, not every chain supports light clients. Ethereum does, albeit not like in full. There's still ways to improve it, but a lot of chains do not support it at all. Yeah, so of course we can imagine that there can be kind of ZK magic. And wouldn't it cool if every RPC provider return ZK proof that the data they return is valid? So yeah, you could probably imagine that technology is of course not there.
00:08:46.006 - 00:09:34.690, Speaker B: And I would argue that it's hard to imagine how it can be done know universally multi chain verifiability through the ZK for RPC responses. However, yeah, theoretically it's also possible. And the last one you can know basically quorum, you can send requests to several providers and compare the responses. If the responses are the same, well, you can consider this response valid. It kind of doesn't matter if those RPC providers centralized, decentralized, you can do it both ways. You could argue that in decentralized setup you can punish providers that return invalid data, but really it doesn't matter. So yeah, so far looks not good for decentralized providers.
00:09:34.690 - 00:10:23.074, Speaker B: Yeah, maybe cost efficiency is better for decentralized providers. And that's where I would argue that, yes, decentralized providers can achieve better cost efficiency. There are two reasons to that. First, in decentralized RPC providers, typically you have some kind of independent node runners that this decentralized protocol wrote requests to. So there are a lot of them, and they of course are quite efficient in what they do. And if you allow them, for example, to set their own price, the price discovery mechanism would be sufficiently more efficient than for the centralized providers because centralized providers of course compete on the price too. However, there is pr marketing stuff and also, yeah, it's not too much of them.
00:10:23.074 - 00:10:58.640, Speaker B: So this price discovery would be less efficient forever basically. And the second part of that is those node runners, they can actually use nodes in different ways and they can exploit like they're running this node, they run not only in for example DRPC, they can use it for graph indexers, like participate in some protocols and other stuff. So I argue that decentralized providers, if done correctly, can be significantly more cost efficient and that's actually what users do want.
00:10:59.410 - 00:10:59.966, Speaker A: Yeah.
00:11:00.068 - 00:11:40.042, Speaker B: So what about multichain? Maybe multichain is better in decentralized setup. Yeah, I also think that it is. And the reason is very simple, because when you are a centralized provider and you want to add new chain, for example, super roll up l free or something like that, you need to first add some code, probably to your balancer gateway. You then need to buy new servers and then you need to acquire knowledge how to run those new blockchain clients. For decentralized providers, you just need to write some code and find, right. People who already have this compute or they just know how to run those clients. So it's easy for you.
00:11:40.042 - 00:11:49.520, Speaker B: So for example, that's why we are supporting right now 60 blockchains. I don't think there is RPC provider centralized or decentralized like we in that sense.
00:11:50.370 - 00:11:50.734, Speaker A: Yeah.
00:11:50.772 - 00:12:45.106, Speaker B: And of course the most important thing and the ultimate boss is censorship. And we understand that, of course, RPC censorship is not unheard of. We've seen this with tornado cash that RPC providers censored transactions and read calls to the tornado, cash contracts. So it's like real. But I think it's getting worse because recently there was a paper published by a group of legal researchers that actually suggest the protocol, the framework for battling illicit actors for IndeFi. And what they do, they argue that in threatfi, it's actually the intermediaries, is basically the ultimate way to battle illicit actors. You kind of implement some measures on those intermediaries and everything kind of works.
00:12:45.106 - 00:13:25.470, Speaker B: So those legal researchers were smart enough to point out that RPC nodes is actually ultimate intermediary in DeFi world. So if you implement some kind of censorship here, you could probably censorship DeFi. So they define this CCT term, critical communication transmitter. Basically they say that every commercial RPC node provider is CCT, and then you can require them to implement risk management practices and procedures reasonably designed to help mitigate illicit finance activity in ways tail through their operations. So basically implement censorship mechanism for RPC.
00:13:26.290 - 00:13:26.654, Speaker A: Yeah.
00:13:26.692 - 00:14:15.710, Speaker B: Can it work? Actually, I was thinking a lot about that, and I think battling illicit activity in DeFi is very noble goal. However, if you're a hacker, would it be hard for you to run your own node? Would it be hard to find some uncensoring nodes if you need to run only one transaction? Yeah, I doubt that. However, for example, say we would like to censor specific decks. Yeah, for decks to bypass the censorship would be quite more complicated. They would probably have some kind of these options. They can run their own nodes or they can use some unregulated providers or submit to censorship, basically. And we know right now that running their own nodes is just not possible.
00:14:15.710 - 00:15:03.478, Speaker B: It's economically unviable. And probably if they try, if web three applications would try, that most of the businesses will be killed by cost and complexity. So in reality, if such regulation would occur, there's an option between unregulated providers and censorship. And it's hard to say how it will play out. However, remember, in RPC market, there's everything about efficiency, quality, latency and reliability. And I would argue that market leaders would comply to those regulations immediately. So the ones who won't, probably worse, and in many ways like not only these qualities, but also security, privacy.
00:15:03.478 - 00:15:43.798, Speaker B: You know, the situation with free vpns basically can be the same thing. So it's easy to imagine that in future, if this regulation occurs, basically the only option would be to submit to censorship, and that's it. And as I said, for centralized providers, the choice is to comply or not is actually not a choice. They have to comply. However, for decentralized protocols, it's actually quite more complicated. The reason is because, as I said, there is node runners, and each node runner can decide for themselves. You could say, but you run centralized gateway.
00:15:43.798 - 00:16:25.814, Speaker B: Yes, but if you have a community of node runners that is actually unified by some kind of protocol, yeah, you have centralized gateway, but you can set up more centralized gateway. It's easy, it's just code, you can run it. So each centralized gateway also can choose like sensor or not sensor. But the quality will still be good if we have. Could be good, probably. So I would compare this to basically sensoring transaction on Ethereum. Yeah, you have a lot of compliant actors, but you still need a small amount of number of non compliance, like mavericks or block builders, validators and a non compliant transaction will go through.
00:16:25.814 - 00:17:02.306, Speaker B: The same will go with RPC markets. So if we have this decentralized protocols, those regulations will probably be inefficient. So let's look at everything we talked about. If we build a decentralized protocol, yeah, we have cost efficiency, we quite feel ourselves quite good in multichain world. And the more most important we are censorship, resistance probably. And yeah, decentralization is actually the only way to battle censorship. We know of verifiability, kind of irrelevant, it can be done either way.
00:17:02.306 - 00:18:07.830, Speaker B: And centralized solutions, they have better ux DX performance and reliability. So if you remember the first part of my talk, you see that kind of centralized providers are winning the race. And if we don't do anything, the future is centralized RPCs with censorship mechanisms. Can we do something about it? Well, the question is, can we get everything? Can we have both, so properties of decentralized providers and centralized, and that's the thing we're trying to explore at DRPC. That's why we ran with permission pool of providers. And because of that we were able to invest a lot of our time because we didn't have to build this blockchains permissionless join, all that hard stuff staking. We were able to invest a lot of energy in our load balancing technology that allows us to offset individual provider problems and optimize latency and reliability.
00:18:07.830 - 00:18:55.160, Speaker B: So because of that, I would say that we were able to onboard cool projects like Curve, Instadap, Sushiswap, Lido and many more. And the next thing for us is to think whether we can push decentralization even further. But we want a balanced approach. We don't want to do decentralization just for itself. We want to find this balance where we can do decentralized stuff, but also with good quality. And I personally think that the only future where we can have a truly decentralized web built on top of decentralized data layer looks basically like that.
00:18:56.250 - 00:18:56.614, Speaker A: Yeah.
00:18:56.652 - 00:19:14.286, Speaker B: And without censorship. So if you want to check it out, we're trying to build its future. So if you want to check it out, go to DRPC. If you want to participate, also go there. And if you want to follow our accounts, that's a QR code. So thank you for your time. Have a nice day.
00:19:14.286 - 00:19:16.240, Speaker B: I hope it was interesting.
00:19:22.180 - 00:19:22.544, Speaker A: Yeah.
00:19:22.582 - 00:19:25.330, Speaker B: So that's it. Any questions?
00:19:26.820 - 00:19:28.300, Speaker A: Yeah. Bye.
