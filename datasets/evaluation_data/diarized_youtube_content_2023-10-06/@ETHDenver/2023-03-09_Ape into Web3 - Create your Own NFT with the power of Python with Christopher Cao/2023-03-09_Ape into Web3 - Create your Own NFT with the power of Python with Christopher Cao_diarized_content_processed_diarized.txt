00:00:00.170 - 00:00:45.610, Speaker A: Hi, my name is Chris. I work at Apeworks and I'm here to teach you how to ape into web3, creating your own NFT with the power of Python and Viper. Okay, so with the intention and goal of this workshop is to really teach you how to build your nonfungible token with the ape framework, Python, and our modular plugin system. So I want you to come in with the idea, the intention that you're going to try and learn from this workshop. Whether you're beginner or advanced, I think you can take away something from this, but if you don't come challenge me, and I would love to learn something from you or give you an idea of what you can go through. So we're going to go a little bit about the overview. We're going to go talk a little bit about me.
00:00:45.610 - 00:01:26.150, Speaker A: What is an NFT? What is ape? How can you learn through the academy that we provide, build the NFT, personalize it, because you want to make it specifically yours, uniquely yours, and then deploy it. And then from there, what else can you do? Okay, so a little bit about me. My name is Chris. I work at apeworks. I'm a half engineer and half dancer. I am commonly known as the agent of chaos because everywhere I go, something goes wrong and I kind of just roll with the punches and I kind of laugh at it because it's probably my favorite part is just figuring out what to do with what we got. So I'm based in Los Angeles.
00:01:26.150 - 00:02:07.974, Speaker A: I ask a lot of dumb questions to my team, and I kind of turn those dumb questions into tutorials. So if you have any questions for me, I would love to figure it out. And also, my style of dance is hip hop in house because I really like footwork. And a little note, all of the pictures that I have, there are stories behind it. So if you have questions afterwards and you want to ask me about them, I'm happy to tell you about it. Okay, so what is an NFT? An NFT is a non fungible token. Each token is unique within the collection, and each token can have a specific metadata which can link to audio, pictures or video.
00:02:07.974 - 00:02:48.606, Speaker A: And that's what makes it uniquely yours. And the metadata can be linked or hosted on a centralized service, decentralized service or self hosting. Today we're going to choose to do decentralized servicing just because there are really good, powerful partners out there that we would love to showcase. The picture that you see here is Malaide NFC, and it's one of the more popular ones because it's a lot of fun to make something that you really enjoy. And all of the non fungible tokens are powered through a standardization called EIPs. And this one is specifically called 721 standard non NFTs. So let's build the NFT.
00:02:48.606 - 00:03:03.814, Speaker A: We're going to talk about the project hierarchy, which is ape. And we're going to go through Ape Academy which hosts it all and personalize it. Check out the metadata, IPFS hosting and compile and deploy. So if we were to step through.
00:03:03.852 - 00:03:08.760, Speaker B: It, let me show you. We're going to go to.
00:03:10.920 - 00:03:47.804, Speaker A: April. So the first thing that we're going to talk about is trying to get started. The first thing actually let's pull up the. So this is actually the website that we are hosting where you can get all of our tutorial information from. And the first thing that you want to do with Ape is install it because it is a terminal based program. So if we were to go to Ubuntu and try to run through it, you can see that we're going to create a new environment. If you don't know what a virtual environment is, you can kind of link yourself here and we'll walk you through it all and pip install ETH.
00:03:47.804 - 00:04:13.770, Speaker A: Ape is our system. And then once you have it working, you kind of type in ape, ape to make sure that it runs. You can see all the commands. And once the commands work, we can try and run through it. So we're going to go activate ape. And if you run ape, this is our program and you can see that it has a bunch of really cool commands that you could run through. And this is how we're going to build our whole project.
00:04:13.770 - 00:04:50.872, Speaker A: Okay, so the project that we're going to try and build is with here. So let's say we go into Ape Academy and we're going to build this ERC 21 contract. So right now the Internet doesn't work. So I've already built it just for the showcasing. And what you do is basically do ape template, GitHub link right here. And you kind of just press enter and it worked. And so we're going to go straight into what we looked at.
00:04:50.926 - 00:04:51.530, Speaker B: So.
00:04:53.900 - 00:05:19.596, Speaker A: Right here, code Denver, we're going to pull up vs code. And this is the contract. You're going to build the contract and the whole project itself. As you can see, there are specific project folders called contracts. Okay, good. All right, well that's big enough, I guess. Okay, so there are a couple of contract folders.
00:05:19.596 - 00:05:57.656, Speaker A: So a contract folder, a script folder and a test folder. And that's what's important with our project, because in here we are going to current slide right here. So our contract folder is where you keep all of your smart contracts, whether it's solidity or Viper. It's a plugin modular system, so all you have to do is install the compiler and it will run with whatever smart contract you have. You can each and have both actually, because the compiler will just pick which one to run through. The test folder is where you place all of your tests, whether it's integration testing or method testing. You can put it all here and it basically will run through the script of tests.
00:05:57.656 - 00:06:35.944, Speaker A: And with the project that you just built, I already have implemented tests in there for you to run through. And then the script is where you have management actions and I'll go into all of that. But the deployment script is probably the most popular one that we have there. So contracts, this is where you're building your contract folders here. And if we were to look, it is this guy right here. And you can see that this NFT contract has all of the standard methods that you need that you would find in your standard EIP 721. So if you were to build it, you can ask it to personalize it.
00:06:35.944 - 00:07:29.284, Speaker A: The next thing that we could talk about is the management action scripts, like for the deployment, it's where you can deploy your contract on chain and that is this guy right here. Right now we're going to deploy it on a local test node because you can run without the Internet and you can run actions against it to make sure that it runs as intended. And then the last is our testing folder. It's where you can write your contract tests or your data ingestion tests. Like for example, if you will have a whitelist of wallets or accounts that you want to give your tokens to, you can run to make sure that it runs as intended. So say like mint the token as the owner, mint the token as a non owner and make sure it denies as intended. The link here is for proper testing techniques based in Python.
00:07:29.284 - 00:08:09.530, Speaker A: So if you want to learn more about it, I have a link here and at the end of this slide or presentation I will have a QR link to have you guys be able to view it on your own time. So we're going to run through getting started account creation and NFT contract building. So this is your contract. You have built it with ape template and we want to make sure that it runs. So we're going to do ape compile right here and this will compile the contract. And then we're going to do ape test to make sure that it runs the tests that are half in here. Actually, you can't see that right now, so let me pull that back.
00:08:11.440 - 00:08:13.544, Speaker B: Okay, excellent.
00:08:13.592 - 00:08:44.964, Speaker A: Okay, so this is what we just ran. We're going to do ape compile and ape test compile and ape test. And this is running with power of Python testing suite. And that's what you can see. Excellent. So everything runs as intended and you're ready to deploy the contract. So we're going to try and deploy, and the easiest way to do is with ape console, which is an ipython wrapper, and it comes with a lot of your web3 tooling there.
00:08:44.964 - 00:09:19.936, Speaker A: So we do ape console and now we're going to load in a test account which comes with ape. And then we're going to contract, deploy project your name of your contract, which is NFT. And the contract is deployed right here. So it's on a local test node, so you can play with it and break it down and build it up as you need. And if we were to try and mint it, we could just go contract mint to yourself to make sure it works. And it works just like that. And you can really pick any address you want.
00:09:19.936 - 00:09:48.900, Speaker A: If you're going to choose to run it to give to your friends, I would choose the network you want. For example, the most common use case is with Gorely. But as we all know, Gorely gas fees are astronomical. So I would highly recommend using our plugin system. And one of the best ones to use right now is Polygon. They have a fantastic testnet system. And with Polygon they have a Mumbai testnet, which is viewable on Opensea.
00:09:48.900 - 00:10:31.630, Speaker A: And so today I've actually ran through and built and deployed that project last night to have that project right here. So this contract is deployed and it's on the Mumbai testnet. And after 24 hours of it being deployed, you'll be able to see it on openC. So at the end of this, I would love to come talk to you and mint this NFT to you guys for showing up, because I appreciate you guys being here. Current slide. Okay, so now that we have deployed the contract, we're going to just run through to make sure that we've done everything as intended. So we've created a virtual environment with Pip installed.
00:10:31.630 - 00:10:56.010, Speaker A: The counter creation is where the gas money that you have comes from. And you can get it through a lot of good faucets. Gorli has a faucet. Sepulvita has a faucet. And there are a bunch of other out there that you could get through. And we have built the token and that's part one of our project. And then now we need to personalize your metadata.
00:10:56.010 - 00:11:16.702, Speaker A: As you can see, this is the description of the NFT that we just deployed. And for here it's just a description of what it is. The animal, which is an ape. So that's what we are. And at the end of it there is a picture called IPFs. And I'm going to explain that a little bit. So metadata is the data that provides information about other data.
00:11:16.702 - 00:11:55.290, Speaker A: It describes NFT's essential properties, including its name, description and anything else that they created. Feels important. And what I felt important here was that the image to showcase that you guys proof of that you guys are here and all of the information that you really should find that's really relevant to my workshop. And in many cases metadata contains image. I just talked about that. So this would be part two of our tutorial. And if you're looking to make generative NFTs, which are NFTs that grow the way that you're looking for, for example, you want to build a trading card one and every time you use it, it levels up.
00:11:55.290 - 00:12:30.578, Speaker A: You can make NFT sets and this link will help you provide the data that you need and view it in a really nice. Okay, it's going to build IPFs is this guy here. And that's where we're hosting our information. It is a distributed system for storing and accessing files, websites and applications. And that architecture or that technology is hosted on Pinata. And that's what I've used today to host our metadata. I'm going to check to see if it's actually there, if I can actually view it because right now I'm not connected to the Internet.
00:12:30.578 - 00:12:49.054, Speaker A: But we will see. Yeah, so this is the metadata that we're hosting. The thank you. Workshop image is right here. And the metadata that we're hosting is with this hash. So this hash is actually going to be right in your project workshop. In your project not workshop, but right here.
00:12:49.054 - 00:13:17.904, Speaker A: And if you look at IPFS, it's going to be right here. So this is where you set your base, Uri, with the workshop metadata. And the test to test against it is right here. And this is all personalized with your 8th template. And so that's what we just built. Current slide. So now that we understand that where the metadata is hosted and how you can build it, let's go through the checklist.
00:13:17.904 - 00:13:56.572, Speaker A: So your account has Gorli ETH, and that's how you deploy. You've built the project via a template, your contract compiles, contract tests runs and they're passing. The metadata is created and hosted on Pinata. And now you've deployed the project. And the last thing you need to do to see the image on OpenSea is to verify your contract on Etherscan or polyscan, whether depending on which network you have. And so we have deployed it on Polyscan and that's what I was showing you earlier today. And you get the contract name and you view it and you search it here and you're able to deploy it and you verify the contract.
00:13:56.572 - 00:14:36.430, Speaker A: And this is essentially what you're looking for. And I believe that is the last of what you need to see here. And so that's essentially how to build your very first Nft using through the power of ape. And that is all of the information. So if you're looking to get started about what apworks is, come join us on our discord. This is the link to our area of information and the last thing we're talking about is Brownie campaign. So if you are a Python user and you're working in the web3 space, you definitely know what brownie is.
00:14:36.430 - 00:15:19.716, Speaker A: As of today, we have successfully ported all of the Brownie implementations and we're going to continue development on top of that for them. We have really strong modular plugin system with polygon, with alchemy. We have all these great things on there and that's what's our strength. So if you were to look in a way to port your brownie project into ape, this is the link to look more into it. But if you have questions on trying to do it yourself, I'm more than happy to help you guys out with it. I have office hours virtually online through our discord on Mondays. Or if you just want to do it, set some time over on my calendar.
00:15:19.716 - 00:15:26.877, Speaker A: I'm happy to talk to you, but this is the end of my presentation. Thank you guys so much for listening. You, if you have any questions, come talk.
00:15:26.877 - 00:15:29.370, Speaker B: Thank to me. Thank you.
