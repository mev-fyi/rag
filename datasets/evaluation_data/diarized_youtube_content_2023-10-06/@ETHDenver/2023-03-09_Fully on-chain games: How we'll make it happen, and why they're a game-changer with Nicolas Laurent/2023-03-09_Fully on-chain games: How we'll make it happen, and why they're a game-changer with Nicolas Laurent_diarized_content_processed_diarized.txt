00:00:00.410 - 00:00:28.838, Speaker A: It. Today I'm going to give you a talk on fully on chain games. So it's going to be a little bit introductory. If some of you are like experts, might seem simple, but experts will be able to fact check me and ask interesting questions. So I'll try to open up some space for questions at the end. So basically, why do we want on chain games? Are we crazy? Do we hate God? What's going on there? So some good use cases and then assume me. I convince you that on chain games are a cool thing that we want.
00:00:28.838 - 00:01:36.438, Speaker A: How do we make it happen? What are some choke points that are holding us back from the world of fully on chain games? All right, so first of all, why do we put anything on chain? When you are pitching a project to someone, the first question that will come is, does it need to be on the blockchain? And this is especially true with my friends that are not in the blockchain. They're like, yeah, but what's the point? And so I have to explain them that sure, there's only one thing that the blockchain gives you, which is trustless execution and data custody, and even that you could do differently. Right. If your state changes slowly, you can use zero knowledge proofs to do that. But when your state is changing fast, like in a game, you need something like a blockchain for trustless computation. Yeah, so basically, don't trust all the big guys, but I think that's like too short sighted. The blockchain is not just technical, it's also a culture that pushes some values that we want in the software.
00:01:36.438 - 00:02:19.526, Speaker A: And so we know that if you're trying to do some software on the blockchain, some webchree product, and you don't have these properties, people will just laugh at you basically for being a centralized, not Ponzi, but like shilling for the man. And so we want things that are decentralized, we want things we won't verify, we don't want censorship. And we want this to be on a blockchain. Immutable and autonomous keeps existing even long after the creator has stopped caring. Also, if you don't like it, it's open source, you can fork it. These are all important values and these are, I would argue, things we also want in games. So, so far, games on blockchain have been web two five.
00:02:19.526 - 00:02:56.130, Speaker A: So the assets are on chain, but the game logic lives off chain. That's because mostly for practical reason, it's difficult to make a game on a blockchain. And that's something we'll get to later. So you could put your resources, if you're a game with vehicles, equipments, you can put all that on blockchain, you can have it traded. So that already exists and it's successful to a fair amount, but I think we can go beyond that. And so what I want is fully on chain game. That means putting the logic on chain.
00:02:56.130 - 00:03:49.134, Speaker A: And so I'll picture Vitalik right there, because there's this apocryphal story, I don't know if it's true, but that Vitalik was very motivated to create Ethereum, because Blizzard, the company that makes World of Warcraft, nerfed his gear when he was playing a warlock in World of Warcraft. So what he wanted there is that he wanted the game to not change on him, to not change the rule arbitrarily, or at least he wanted a stake in this decision. So what, being fully on chain gives you all these properties, you want to be trustless in the presence of financial incentive. And as we've seen, we have assets, they can be traded, so there's money in play. This is not like just hypothetical. So there's been controversy and outright fraud. People have been to jail for this, for online poker websites, right? They manipulate the result of the poker games.
00:03:49.134 - 00:04:18.366, Speaker A: So you don't want that, you want continuity. So if I'm making a game and I'm stopped making the game, you want a game to continue, you want someone to be able to take over, you want guarantees on ownership that the game is not going to ban. You take your stuff and that the rules don't change of you. This is all great. What really excites me though is this one, composability and extensibility. It's taking an existing game and then improving it, adding new modes of gameplay. So this is all very vague for me.
00:04:18.366 - 00:04:39.400, Speaker A: It works better with a few examples. So I'll give you a few examples of things that things are cool. The first one is something I'm hacking on for this hackathon. It's a trading card game. So you got magic the gathering over there. So people playing on a table with dice and cards. And this is Earthstone, a very popular card game you can play on your computer.
00:04:39.400 - 00:05:16.702, Speaker A: So obviously card games lend themselves very well for a blockchain because you can have the cards and you can trade them. This happens in the real world as well with physical cards. So that's obviously a good fit for nfts. I think really cool with trading card games is you can extend them if you put them on a blockchain, you can let people create their own cards. You can tell them, I'll make your own cards with your own rules, and you can play them in games with your friends. So that lets people be creative. There's also another thing you can do, which is that you can leverage existing cars to create new modes of gameplay.
00:05:16.702 - 00:05:45.366, Speaker A: So, for instance, if you're playing both of these games, these are one v one games, you just play against another player. However, in the physical game, people have made up new rules to play with four, six players. So this is like a game mode where you play three versus three. It's called emperor. So basically you can't attack the emperor before you defeat his generals. And it's the first team versus the second team. So you can do that in magic because these are physical cards.
00:05:45.366 - 00:06:32.060, Speaker A: You do whatever you want, but you can't do that on Earthstone, which is on a computer. What I want to do with card games on the blockchain is reintroduce the ability for people to mod the game so that they can implement this on the blockchain. Yeah, so I'm hacking on this right now. Tentative name is Xyrix Fable. So that's going to be a contender in the hackathon. Another example is this game mode called tower defense, where basically you have a map and there's a path on the map and there are creatures walking down the path and you're building towers to destroy these creatures before they reach the end of the path. It's a very popular game mod for Warcraft, Starcraft, things like that.
00:06:32.060 - 00:07:00.526, Speaker A: So here's how this could be extended. People on the blockchain could create their own towers with special properties. This is a tower that slows down the enemy. This is a tower that is strong against fire, creatures, things like that. You could design your own maps with your own twisting path that goes whichever way you want. You could design your own creatures, you could design new game modes. You could say, well, I'm going to design a map with a certain path, certain creatures, certain towers.
00:07:00.526 - 00:07:24.460, Speaker A: You're going to do the same, and we're going to play each other's map and see who comes out ahead. Right? Okay, I just said all this. There's a bunch of games that do space conquests. So this one here is the granddaddy of all these games. It's called ogame. It's a very old browser game. And this right there is Dark Forest, like one of the most popular fully on chain game.
00:07:24.460 - 00:08:12.490, Speaker A: And what you can do in these games is basically you colonize planets, you extract resources, you create spaceships, you send them to other planets, you wage war to other planets. And what you can do there for extensibility, you can do a whole bunch of things. So in dark Forest, people have created user experience extensions, so add ons to manage the game better because it became very competitive. And so having these fancy add ons that let you know exactly what's going on in your galactic empire made it easier in the game. They created bots to do things automatically. They created contracts for guilds. You could join a guild and basically pull your resources together or delegate, say, I have a bunch of planets, we're in this together.
00:08:12.490 - 00:09:05.766, Speaker A: You can emit order to my planet so that even if I'm sleeping, someone can still operate my planets, my spaceships and all this stuff. So dark forest also makes heavy use of zero knowledge. And one thing they do is that basically there's fog of war in the game. So you don't know where your players are, and you're able to basically this fog of war is created through hashes, and you can mine the map to reveal it. And then once you have that, people have written this thing called Night market, which is a marketplace for coordinates of plants. Say I find a planet that contains a lot of gold, but maybe I'm too far to colonize the planet. It's too dangerous for me to go, but the information that the planet contains gold is valuable, so I can sell it on this marketplace.
00:09:05.766 - 00:09:37.730, Speaker A: I can prove that I know a planet with gold. I just don't tell you where you are until you paid me. After you pay me, I reveal the location. So these are all interesting possibilities of onchain games and extensions that people can derive. If you take a more classical game than Dark Forest, you could make nfts out of your resources. You could do alternative mode of combat. So say I create a game in space, and I have a minigame to battle the spaceships, and that's how you gain and lose resources against other players.
00:09:37.730 - 00:10:19.140, Speaker A: Maybe my game mode is not so fun, so someone else come and says, hey, I got another idea on how we could do this. So basically they just do a smart contract, and as a player of the game, I can opt into the new combat mechanism, which maybe is much more fun. And so that's how the game evolves. And if you got a game creator that's a little bit wired in, you can pick up on the good ideas and bring them back in the main game. So for me, extensibility, this is really the most exciting thing about Onchain games? Yeah, on chain, massively multiplayer role playing game. I don't really have the time to get into that, but that would be super cool. And I believe there are some people building that.
00:10:19.140 - 00:10:45.302, Speaker A: So modding has a rich history of creating awesome games. So dotte defense of the ancient, that's the first MOBA. So that's the genre of League of Legends. That was a map for Warcraft. Three counter strike, one of the most popular shooter of all time. That was a mod for archive player, known backgrounds, that's a mod for Arma. Two tower defense games.
00:10:45.302 - 00:11:24.050, Speaker A: Also something that's a custom map for strategy games. So mods have been super popular. So that's the motivation for why we want onchain games. Now I'm going to go into some technical hurdles, things that could be better for people that are looking to build these games. So the main problem, blockchains are public, but most games need private information. If you're playing a card game, typically you're going to have a hand of cards that the opponent cannot see. So how do we solve that? Games need players to take many actions.
00:11:24.050 - 00:11:58.180, Speaker A: So they need I troop it low latency. Like even in a card game, which is a very slow game as they go. If I put a card and I have to wait 4610 seconds to put the next card down, that feels really slow and really annoying. So we don't want that. We need low cost per transaction, because if you're going to sit down to play a game, you don't want to pay three or $5 every time for all the transaction that you're making. And we can't have user click their metamask wallet for every action. That's just not a good experience.
00:11:58.180 - 00:12:34.110, Speaker A: Currently, everything on the blockchain is a little bit hostile to new users. Just because if you're not in Webtree, you come to, you see a cool game and you're like, well, I want to play that, but now I need to install metamask, I need to securize my mnemonic. That's just janky. And finally, it's just like the tooling and stuff is not really good. So we want to improve the user experience for the developers. All right, so let's tackle this first problem like private information. You want to use zero knowledge technology there, and you want to use commitments, hashes, markup proofs.
00:12:34.110 - 00:13:07.480, Speaker A: And so, for instance, to illustrate this point, card games, in a card game, like magic, the gathering, or Earthstone, you have multiple areas. Like a card can be in your deck, in which case it's private in your hand. It's public to one player, but private to the other. It can be on the battlefield, in which case it's public to everyone. And so for the public areas, you just put everything on a blockchain. That's easy. For a private area, what you can do is use a Merkel route to commit to the content of your deck, of your hand.
00:13:07.480 - 00:13:44.690, Speaker A: But then say, I have my hand, which is public to me, but private to the person. I have the deck, which is private to everybody. When you want to draw a card, you will need to generate a ZK proof that show that you use the randomness on chain to draw the correct card, that you put it in your hand. So you will need to update the Merkel route for the hand and the Merkel route for the deck. And with a zero knowledge proof, you can prove that you did that correctly. So if that's something you're interested in, I have a Twitter thread on how to do that that goes into the details. So tiny cc shuffle deck.
00:13:44.690 - 00:14:10.474, Speaker A: Okay, next problem. Basically want things to go fast and be cheap. So maybe high throughput chain can solve this in the future. I'm always concerned about decentralization personally, so I'm not sure another solution is appchain. Your game can run on its own chain. Again, you want decentralization. Fortunately, now we have a solution for that.
00:14:10.474 - 00:14:36.962, Speaker A: They're roll ups. So these roll ups upchain, I call them roll ups. I think other people do too, and that's something that's being developed right now. So there's like a lot of companies in this space looking to provide solution for that. Again, there's a Twitter trade there that is basically a list of companies providing roll up solutions. So I'm hoping that this works well because that's something we need. Finally, just some painful stuff in the front end.
00:14:36.962 - 00:15:16.660, Speaker A: I played a game recently and it was a resource collection game, so you could build a farm and collect wheat and stuff. The problem was, each time I did this, it took like 10 seconds for the interface to update and show me the new amount, which felt very janky and it wasn't a good experience. So solutions that make the front end reactive are also necessary. In general, we just need better tools. And here's a tool that I'm a fan of. It's called mud entity component system, which is a famous pattern for making games. They're building the v two right now, and the v two is going to be even better.
00:15:16.660 - 00:15:39.174, Speaker A: It's going to apply to a lot more than games. So if you're looking for tools or frameworks to build your onchain games, definitely check out mud. Yeah. So you want to click Metamask. And for this we need a temporary wallet where basically you just say, hey, I'm going to be gaming now for 1 hour. So during 1 hour you don't ask me for signing transactions, but only for the game. Okay.
00:15:39.174 - 00:16:16.774, Speaker A: So someone that has this permission is not able to steal your other nfts or things like that. And there's a lot of design space there. So I don't want to enter the details, but it can be done with smart contract wallets and account abstraction. And again, I have a tread with the detail where I explain the potential of delegating permissions to other wallets or contracts. But basically that's what you want. You want to delegate the power to someone else, make sure you don't need to click an interface every time you do an action. And again, we need tooling to integrate this because people are doing this like dark forest is doing this.
00:16:16.774 - 00:16:47.674, Speaker A: But to my knowledge, there's no library that makes this easy. Just import it and it works. This is sort of related. So onboarding, you want basically a new user that's not in web3 to have a really easy time to onboard. He doesn't have to create a wallet immediately. Like maybe we create a wallet for him and we custody the key and it's a smart contract wallet and later we let him take ownership of the wallet. All right, yeah, better tools.
00:16:47.674 - 00:17:11.222, Speaker A: I'm going to skip that. All right, so basically I'm working a fully on chain card game. If that's something that interests you, talk to me. If you are interested about anything I talked about. So all the technical problems, the potential of it, I just would love to talk to you, basically. So this is my Twitter, it's my telegram. Feel free to reach out.
00:17:11.222 - 00:17:17.540, Speaker A: I'll be hanging around after. And with this, I want to open it up for questions and comments from you guys.
