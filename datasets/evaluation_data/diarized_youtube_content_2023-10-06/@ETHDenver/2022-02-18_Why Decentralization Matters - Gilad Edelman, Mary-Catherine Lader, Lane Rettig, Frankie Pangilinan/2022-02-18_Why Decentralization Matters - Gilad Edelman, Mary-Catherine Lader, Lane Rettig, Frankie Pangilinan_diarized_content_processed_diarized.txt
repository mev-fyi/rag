00:00:00.650 - 00:00:02.240, Speaker A: Doing good. Doing good.
00:00:02.930 - 00:00:30.390, Speaker B: Did they already intro us? Okay, cool. So, hi, I'm Gilad. I'm a writer at Wired and sort of representative from the Normie world. And in that spirit, I think I'd like to talk about some kind of first principles type questions, because if you explain why your l two solution is different to me, it won't make any sense. So I thought we'd start by just having everybody introduce themselves and briefly explain what it is you're working on.
00:00:30.540 - 00:01:01.002, Speaker A: Cool. Do you want to start? I'll start. Okay. My name is Nick. I'm filling in for the Uniswap person. So sorry if you wanted to see someone from Uniswap. So, my project is called fuel, and the organization is fuel labs, and we work on sustainable scalability tech for Ethereum, particularly layer twos and particularly something you don't know of yet, which is modular execution layers.
00:01:01.002 - 00:01:03.360, Speaker A: So that's what I do.
00:01:04.450 - 00:01:23.430, Speaker C: Hi, my name is Frankie. I work at balance. I'm head of research and development. We have an amazing team, and if you guys see anyone there, please ask them questions. We're doing a native safari extension. I'm explicitly looking forward to this year being the year of wallets. Let's push the envelope.
00:01:24.890 - 00:01:26.870, Speaker B: Cool. And Lane, everybody.
00:01:26.940 - 00:01:42.046, Speaker D: I'm Lane. I'm a core developer on a project called Space Mesh. We are building the most decentralized blockchain the world has ever seen. Excited to talk about that, what that means and why it matters. And, yeah, I haven't been in the Normie world for five or six years. You'll have to tell me how things are going there.
00:01:42.148 - 00:02:02.740, Speaker B: Yeah, we're all very scared and concerned about what's going on here, but I gather from everybody here that you're essentially all just running charities. So that's cool. So, Lane, let's start with you, then, because you're building the most decentralized blockchain ever. So from your perspective, what does centralization mean and why is it.
00:02:03.430 - 00:02:22.738, Speaker D: Yeah, so, okay, I'm glad we're starting with the fundamental stuff. I don't believe centralization is inherently bad. Let me be very clear about that. Right? I think that there are trade offs, right? If blockchain has taught me one thing, if kind of protocol design has taught me one thing the past few years. Oh, yeah. Okay. It's, wow.
00:02:22.738 - 00:02:45.646, Speaker D: Ice cream cone, right? Yeah. If kind of. My work in blockchain and protocol design has taught me one thing over the past few years, it's that everything is a trade off, and you don't get anything for free. So I think that centralization is great when you need efficiency, when that's the most important thing you need. Right. But the issue with centralization ultimately is corruption. Let me leave it at that for now.
00:02:45.646 - 00:02:48.766, Speaker D: And we can kind of dig into that, what that means, how we work around it with decentralization.
00:02:48.878 - 00:03:06.920, Speaker B: So just to play that out a little bit, and then maybe, Frankie, you can chime in, but when you say the issue with centralization is corruption, what feature of centralization are you talking about? Is it that too much power is concentrated in too few hands? Frankie, do you have thoughts on that?
00:03:08.090 - 00:03:10.134, Speaker C: I'm going to answer this in a little.
00:03:10.172 - 00:03:12.182, Speaker B: Get that mic just way up close to your.
00:03:12.316 - 00:03:42.254, Speaker C: Yeah, yeah. I feel like I should answer this in a little bit of a roundabout way. I think my favorite reference right now is the realization, I think back in the early days of Facebook, when photographers would put up their images on Facebook and the realization that they no longer owned those photos. And so this is a clear sign of centralization and not understanding sort of how that one works. And when we kind of take away power and strip.
00:03:42.382 - 00:03:45.074, Speaker B: Yeah, get that mic just right here.
00:03:45.192 - 00:04:03.480, Speaker C: Okay. I think that, for me, this view of centralization is this ability to strip away what people are and who they are on the Internet and not be able to own what they want and what makes them cool.
00:04:03.870 - 00:04:19.470, Speaker B: So, Nick, how do you think about then, decentralization? What does it mean to decentralize? If we're living in a world that is overly centralized? How do you know, and let me put it one other way, if you're looking at something that you care about, how do you make the judgment? Like, is this meaningfully decentralized?
00:04:23.430 - 00:04:32.926, Speaker A: Is this fine volume wise? Is it good? Okay, so considering I just joined this panel, I'll need to come up with something real flashy.
00:04:33.118 - 00:04:34.386, Speaker B: You can pass.
00:04:34.568 - 00:05:11.360, Speaker A: No, I'm not passing. So I'd say to start decentralization is very key because you're trying to make a system that doesn't break as easily. So making systems that are durable and durability is very, very key. And then breaking up human power structures in a way that not any one human can particularly have too much power because humans make mistakes. Vitalik makes mistakes all the time. We love him, but he makes mistakes. We don't want any one party to have too much power.
00:05:11.360 - 00:05:34.360, Speaker A: We've seen what happens when that happens, depending on what you think about the world. So decentralization allows us a tool to break that up in a way where it can still be valuable. To humanity. But at the same time, we can still have a moving force to change the system and to make it function.
00:05:35.370 - 00:06:15.806, Speaker B: So the question that I keep coming back to is, if you look at the history of the Internet, the foundational Internet protocols and email protocols and other things are decentralized. They're very decentralized. And yet we see cycles throughout the history of the Internet in which somebody comes along at some other layer of abstraction and centralizes power on top of those. And that's kind of the story of web two. And I'm sure you guys are familiar with moxie Marlon Spike's recent blog post about this, but I'll just read a little bit from it, because if I try to paraphrase it, I'll say something wrong. But he argues, and I'd like to get your thoughts on this, Frankie, to start. So he says, what seems strange to me about web3 is blah, blah, blah.
00:06:15.806 - 00:06:39.990, Speaker B: To make these technologies usable, the space is consolidating around platforms, which goes back. Sorry, Lane, I blanked on your name. To Lane's point about the convenience of centralization. And he gives a couple examples. So he makes an NFT. It gets removed by Opensea, and it disappears from his wallets, which isn't supposed to be possible. But he notes that his wallets are not actually interacting directly with the blockchain themselves.
00:06:39.990 - 00:07:07.810, Speaker B: They're making calls to one or two centralized providers of that service. So his conclusion is that this early on, it's ominous that the space is already seeing that kind of consolidation. So, Frankie, what do you make of that critique that we're already seeing a layer of sort of centralized service providers because it's difficult for the user to interact directly with the blockchain?
00:07:08.390 - 00:07:42.442, Speaker C: Yeah, I think that for this, I would have to say that everything is kind of two steps forward, one step back. Right. We are seeing a lot of centralization. I mean, if we look at metamask today, almost all of the traffic that we see in the ethereum ecosystem is going through infuria, and if it's not going through the inferior, it's going through alchemy. So we're seeing providers already centralizing that, collecting all that data. And I think that we're just going to follow this loop, right. And also it connects back to innovation.
00:07:42.442 - 00:07:50.100, Speaker C: So we need to start seeing things that bring us back to the other side of the loop as we continue going up and forward.
00:07:51.430 - 00:08:29.226, Speaker B: But, lane, what's going to stop the cycle? I feel like in the second matrix, neo gets spoiler, by the way. Neo gets to the end. And he meets the architect and he finds out there's been eight matrices and that people keep thinking that they've defeated the matrix and then they're mistaken. And that's all internal to the simulation. And I feel like a little bit of that sense here, which is like, oh, no, this time we're going to decentralize it. And then the cycle keeps happening. So, Layne, my question for you is, what do you see in web3 that has the potential to actually, because obviously neo does break out of the loop.
00:08:29.226 - 00:08:36.282, Speaker B: So what do you see? Now that's fiction, but what do you see in web3 that provides the potential to actually break free from that loop?
00:08:36.426 - 00:08:53.142, Speaker D: Yeah, no, great question. I'm happy we got right to the heart of the matter because I think this is the most important question probably that we as a community could and should be talking about right now. Also, first things first, for anyone in this audience who hasn't yet read the piece that you're referring to, the moxie Marlin Spike piece, I forget the title of it.
00:08:53.196 - 00:08:56.200, Speaker B: I think it's like some thoughts on web3 or something.
00:08:57.130 - 00:09:28.514, Speaker D: After this panel, go find a quiet spot and read it because it is like the most valid criticism of web3 and decentralization that I've ever read. So read it and think about it. It's important. So getting back to the question, I think Moxie hit the nail on the head with usability. I think that's kind of what it comes down to. I also want to say this is what keeps me up at night as someone who's kind of conceiving of and building these decentralized protocols and applications and things, looking exactly to your point at what happened to the original web, the original Internet. Right.
00:09:28.514 - 00:10:04.686, Speaker D: The excitement in the 90s around the democratization, the freedom that these technologies were going to bring these open protocols, very similar to the energy that we have here today, and what happened ultimately, how they were captured in large part by the Googles and the Facebooks. And so again, going back to the original web example, running an email server is hard. I've done it. I tried to do it again recently. There's a reason everyone uses Gmail, because running an email server is really freaking hard. And mining most blockchain protocols today is really, really hard. I'm talking about layer one, but the similar things at layer two, if you want to run a validator, if you want to run a node, if you want to run a sequencer, any of these things.
00:10:04.686 - 00:10:24.510, Speaker D: So our approach at space mesh is make it dead freaking simple. You download an app, you run it in the background, you forget about it. And moxie said in that piece that the core issue is that people don't want to run servers. I would extend that by saying they don't want to run miners, they don't want to run nodes, because it's tricky. If you make it as easy as possible, that I think is the best chance we have. Just focus on usability.
00:10:25.210 - 00:10:26.840, Speaker B: Nick, thoughts on.
00:10:27.690 - 00:11:01.358, Speaker A: I think. I think if we continue to use infuria the way that we do, without verification proofs, we've basically just failed as a community to address most of these things because infuras and systems like it are in a sense just serving data. But the data is verifiable, but no one verifies the data. So basically it's worthless. In many senses. You're just trusting a website most of the time. And most of the projects here don't do any of that well.
00:11:01.358 - 00:11:04.580, Speaker A: Don't give you any verification. They don't care, really.
00:11:05.750 - 00:11:53.778, Speaker B: That's a really interesting point. And this is like, again, as someone who's really a nontechnical person, this is a thought that I often have, which is, I understand the appeal of blockchains providing transparency and immutability, and the data is going to be there. But I wonder how deep a problem that is of the very small number of human beings who are going to be willing or able to actually go perform that verification and how meaningful it is. It's like if something. I mean, look at how this might be a bit of a conceptual leap, but look how mad the board, eight people got when they were doxed, which just meant, like, looking at public records and publishing them. Those records were public, right. But no one goes to the building and looks them up.
00:11:53.778 - 00:11:57.154, Speaker B: And I wonder how that problem might translate into this space.
00:11:57.272 - 00:12:54.338, Speaker A: Yeah. First of all, making things as easy as possible to actually leverage the tech that we have, whether it be running nodes or actually verifying the cryptographic proofs, can be made very easily, and it can be done in a way where it's trivial. It's not any more of a user experience hurdle than what you see in web two. They just don't do it because there's a huge financial incentive to ship and not care about these things. These things don't matter to a lot of people yet, but if you're building the system correctly, it should be so easy to run that it's not an issue. Like, for example, the Ethereum architecture is pretty difficult to run, and Infira had to sit there and figure out how to run many nodes in a scaled way just to serve us data so we could use it without having to run our own node. But that was because the node wasn't designed for data.
00:12:54.338 - 00:13:10.890, Speaker A: It was just designed to run Ethereum, just the protocol. They didn't think about data when they built it. So when you build things for what we see now is how people use them, it's way easier to just, you know, so long as you have these requirements, you can run your own verification.
00:13:11.550 - 00:13:43.860, Speaker B: This makes me think of another point Frankie that moxie makes in his post, which is that protocols move more slowly than platforms do. And it sounds like the challenge that Nick's bringing up is like, yeah, you've figured out the thing that they didn't think of before, but obviously you're not thinking of something now. And it feels, Frankie, like the challenge is, how do you develop a system that can update itself, like, as fast as a centralized platform can, when you realize, oh, we didn't build for this?
00:13:45.350 - 00:13:48.280, Speaker C: You're sticking me with all the hard questions, aren't you?
00:13:50.650 - 00:13:55.270, Speaker B: We'll have a five minute chill session right at the end where you can just pump your coins, if that's helpful.
00:13:55.930 - 00:13:57.960, Speaker D: That's what I'm here for. I love you guys.
00:14:01.130 - 00:14:18.654, Speaker C: Yeah. Mike, Mike, Mike, Mike, Mike, Mike, Mike, Mike. Mike. Mike. Mike. So, I guess I'm having a little bit of trouble focusing, honestly on this panel, because every time anything's being brought up, I'm just like, light client. Where the fuck are the light clients? And it makes me think, why are we even.
00:14:18.654 - 00:14:47.590, Speaker C: These centralized organizations need to put, like. I think they're in as much danger as anyone else for not putting resources into developing light clients. I think that, of course, the light client is the apple at the top of the tree that we're all reaching for, but it is going to be the thing that is going to take us out of this loop. Otherwise, we'll get stuck in the centralized part. We won't be able to run. We need light clients that work in the browser. We need light clients that are efficient on phones.
00:14:47.590 - 00:15:26.318, Speaker C: Yeah, no, it's hard work to do, but a lot of that work, too, is just, like, we need to put manpower on it and actually put resources to it and give it attention in the next couple of years, because, yeah, we will get stuck, and we won't know how to get out of it. Protocols take a long time to develop, and we've seen this with e two and how it changes, but there are some things that maybe if we just start really simple, and we just focus on reads and just being able to do efficient reads, that would at least help a little bit. But we're coming to a point where resources are going to get expensive.
00:15:26.494 - 00:15:43.114, Speaker A: I just want to say, because this is an ethereum conference, and I don't know how many people you know like clients or what a like client is or why it's important, but because you're at an Ethereum conference, I'll say Solana doesn't have spice. A little spice for you guys. Okay.
00:15:43.232 - 00:15:44.874, Speaker C: Who lets you out of the house out there?
00:15:44.912 - 00:15:47.050, Speaker A: Don't know what that is, but you'll learn eventually.
00:15:51.790 - 00:15:58.042, Speaker D: Light clients are very important. Couldn't agree more. We're thinking a lot about this in our work as well. Kind of circling back to wait lane.
00:15:58.186 - 00:16:02.110, Speaker B: Yeah, maybe there are some people out there who actually don't know what a light client is. I don't.
00:16:02.930 - 00:16:43.894, Speaker D: So this is great. Let's segue. So, typically, if you want to participate as a full peer in the blockchain network, whether it's bitcoin or ethereum or any other kind of protocol, you do what's called running a full node. And what a full node does is it downloads every single block, every single transaction, executes every single transaction, every state transition, the same thing every other node and every other miner is doing. And that's very easy to do for a protocol like bitcoin where the throughput is relatively low, that doesn't require a lot of processing power, memory, et cetera. It's hard to do for ethereum, and it's basically impossible to do for a protocol like Solana that's extraordinarily high throughput, right. You couldn't do it on a laptop or a phone.
00:16:43.894 - 00:17:16.710, Speaker D: You need specialized hardware to do it. The idea of a light client is that you outsource some of that work, right? So your node is not executing every single transaction. It's just doing something like verifying the block header so it makes sure that the blocks are in the right order, that the blocks are valid, that you're not missing any blocks, you're not actually processing all the data. You're kind of trusting. So it's not trustless in the way that running a full node is. It's partially trustful in that you're trusting that the nodes that are sending you the blocks are themselves executing the transactions in the blocks. But you do know that you have kind of all the blocks in the right order.
00:17:16.710 - 00:17:29.958, Speaker D: That's why it's called a light client. You're doing part of the work, but not all of the work. But the important point here is that you can do this on any hardware, you can do this on a phone even. Right. Or in a web browser, in metamask, something like this in theory.
00:17:30.054 - 00:18:30.490, Speaker A: And again, because of legacy blockchains, it's very difficult with a lot of legacy tech to do things that are really fun, like run like clients on phones, because they're restrained by their legacy design. And so this comes back to your upgradability thing, which is pretty key to this. And I think newer protocols that are being designed, are being designed with light clients in mind, and particularly light clients using like Merkel mountain ranges, for example, where it just means you could potentially keep a root of all the state on your phone. It's very light, it's a few bytes, something like that. So it's very. But again, if we don't have a religion and a mentality about checking things and about creating this environment for real decentralization, then you will be using things through a website that's run by a company, in a jurisdiction, with a board, and you're subject to their entire structure, and that's it. And there's no blockchain.
00:18:30.490 - 00:18:48.418, Speaker A: You could do that right now. And fintech is actually, in many ways, traditional. Fintech can be argued as more decentralized than some systems now because to be honest, there's just more companies doing things, there's more people know. So in a sense, it's very easy to fall victim to this.
00:18:48.504 - 00:18:50.726, Speaker B: We're going to come back to that point, but Frankie had something to say.
00:18:50.748 - 00:19:17.706, Speaker C: I think I just, like you say, real decentralization. And I would love to sit here and be like, fully decentralize all the things. But to do that, I don't think that necessarily everyone should be able to run their own client. To agree with this concept would be to say that everyone should go live off the land. And we recognize that the reason we have cities is so that we don't have to deal with handling our own shit.
00:19:17.818 - 00:19:19.562, Speaker A: You probably have to trust someone somewhere.
00:19:19.626 - 00:19:55.558, Speaker C: Yeah, but I think that there needs to be a balance, and I think that, yeah, we need to keep. When protocols are being designed, there needs to be a pulse on, like, is this efficient? Will this run well? Can anyone run this? And I think that too many of us are stuck behind our MacBook pros and we're working with some of the best equipment. But yeah, I think the pulse comes from, are we creating a resource classes system? And can this run on any device? And is there an option to do that? But I also want to make it clear I'm not fully against having federated servers and all that jazz.
00:19:55.654 - 00:20:43.462, Speaker A: Yeah, it's really nice, actually. There's a lot of nice designs where you might have a federated thing, but there's a lot of proofing involved. And so there are systems that do make sense for that. But again, if you set your requirements to a node, or if you demand asics, for example, which are highly wasteful for mining, and you demand them in your protocol, you'll be hugely destructive, first of all. And then secondly, you're not having a democratized system. So philosophically, it's against the sort of original vision of a lot of the cypherpunk things that we saw with bitcoin and what we tried to carry through with Ethereum, what Vitalik tried to carry through with his designs. So I think it really is sort of a thing you have to be religious about because you want a democratized base protocol.
00:20:43.462 - 00:20:47.590, Speaker A: You don't want a highly centralized base protocol.
00:20:47.750 - 00:20:50.554, Speaker B: So I want to go back. Wayne, did you add to that?
00:20:50.592 - 00:20:50.842, Speaker A: Yeah.
00:20:50.896 - 00:21:23.602, Speaker D: So I think we may be on the same page here. Feel free to take things in a different direction. If we're not, we're talking about technological solutions, right? And I think that technology has to be part of the solution. But going back to the question you asked before, how do we make sure the protocols keep evolving and don't get stuck and don't get captured? There's a social aspect to that as well. So I was thinking of circling back in that direction. I think the answer there is governance. And I think that a lot of protocols are trying to figure out the answer to this question right now, which is how do we allow our community, our protocol, to disrupt itself? I've seen really exciting things happening in a number of blockchain communities.
00:21:23.602 - 00:21:40.042, Speaker D: Layer one, layer two, we haven't been very good at this up to now, and bitcoin has kind of sort of stopped making big changes. There's no more hard forks in bitcoin. Ethereum is kind of ossifying over time as well, in certain important ways. So this is an ongoing challenge. But I think governance is kind of the answer to that original question on the social side.
00:21:40.176 - 00:21:40.570, Speaker B: Right.
00:21:40.640 - 00:21:47.726, Speaker C: And taking care of your devs, I mean, we all saw that tweet where the bitcoin devs aren't getting paid. Like exhaustion is real.
00:21:47.828 - 00:21:50.270, Speaker D: Getting paid and not getting sued is important, too.
00:21:50.340 - 00:22:37.680, Speaker B: Well, this, I mean, but sort of synthesizing what you guys are saying, this sounds dangerously close to people need to. We need to rely on people to be different from how people always have been. But no, Nick, I'm glad you brought up the fintech example, because I think you got at a really interesting point, which was, you can think about centralization and decentralization on the level of the architecture of the thing that you're using, but you can also think about it in terms of choice. And so your point was that fintech, in a way like web two, fintech is in a way more decentralized because you at least have different options. And Lane, I was actually going to ask you that question of how much is decentralization about having options?
00:22:39.010 - 00:22:52.962, Speaker D: I think it's all about having options. I'll give you a metaphor here that I like to use sometimes. Democracy. Okay, we don't all vote all the time. You should vote. I try to vote, but I don't always do it for this reason or that reason.
00:22:53.016 - 00:22:53.570, Speaker A: Right?
00:22:53.720 - 00:23:14.282, Speaker D: But if I want to vote, I can. That option is still there. And if things get bad enough, I will vote. And we've seen this happen. We saw this happen in the last presidential election in this country. So I think decentralization is similar. Even if we're not all voting all the time, even if we're not all running our own nodes and verifying things all the time, the fact that we have the option to do that, and if things get shitty enough, we will do that.
00:23:14.282 - 00:23:46.950, Speaker D: I think that's very important. And we need to put in place credible systems, credible incentive structures. We need to install credible neutrality into our protocol designs so that that remains the case. And actually, I very strongly disagree with the point you said a moment ago, which is that we're relying on people to act differently than they have before. We're not. I think, on the contrary, these protocols are built around an understanding of human nature, harnessing that through kind of mechanism design and cryptography. And these tools we have now to build structures that are resilient against human tendencies, like corruption.
00:23:49.210 - 00:24:28.382, Speaker B: To synthesize a couple of these themes here, like voting choice. Fintech actually is a really interesting. So fintech is a really interesting case because it kind of only exists thanks to a statute that was passed. The Dodd Frank financial reform bill in 2010 included a requirement that your bank let you pull your data out of the bank. And that's why you can then interact with mint or betterment or something like that. And that's why you have that choice in the market. And so that was an act of Congress.
00:24:28.382 - 00:24:42.562, Speaker B: It was an act of representative government, it's related to this thing of voting, which is like a protocol of some kind. Democracy is sort of a protocol that is a legal. Sure, yeah. I mean, there are different kinds of protocols.
00:24:42.626 - 00:24:45.110, Speaker D: Democracy is the first decentralized protocol.
00:24:45.450 - 00:25:00.490, Speaker B: Maybe it's sort of decentralized, but it's actually federated. But Frankie, wouldn't it just be nice, couldn't we save a lot of trouble and developer hours if Congress just passed a law requiring interoperability?
00:25:02.030 - 00:25:05.886, Speaker C: Oh my God, could you re ask that question? I'm so sorry.
00:25:06.068 - 00:25:16.900, Speaker B: Just, wouldn't it be nice and sort of a shortcut if Congress could just pass some laws that know interoperability and data portability and stuff like that? Wouldn't that get us really far towards the goal that you're working on?
00:25:18.950 - 00:25:20.740, Speaker A: I can answer that if you want.
00:25:21.590 - 00:26:09.300, Speaker C: You asked me earlier, protocol moves slower than user facing applications. This is essentially that you're reiterating the same question with different terms. Government moves way slower than software does. I mean, if you just look at how far we've come and they're just now catching up to things. The Internet has always been the wild west and it still is. Even if there are more laws and we have GDPR and we have the, Europe has strikes past laws around privacy, they're an archaic system that we're replacing, essentially. How is an archaic system that hasn't even caught up to what we're doing going to govern what's going on now?
00:26:10.070 - 00:26:14.100, Speaker B: I'm totally sympathetic to that. And obviously government is very fucked in a lot of ways.
00:26:14.710 - 00:26:21.830, Speaker C: Sorry. And just to continue on that thread for a second, if they could do something like that, would we even be here in the first place?
00:26:21.980 - 00:26:23.990, Speaker B: Well, that's my question. That's what I'm asking you.
00:26:24.060 - 00:27:20.618, Speaker A: So the thing is, there's a big difference between mandating a legal precedent for companies to follow on data and interoperability and essentially a platform, or in a sense a decentralized platform that people can actually leverage the lower level protocol and not have to reinvent this wheel. It's not something that government can do or do well in a way, because they're not going to be able to keep up with all of these things. This is a very quick space, it's very fast. So I think in a sense you shouldn't do that because they can't keep up. And they've proven that pretty much every single time. And I don't think even just mandating a single thing would address it. I think in the end, what Ethereum and all these other systems allow for particularly, which is more important, is the democratization of the access to build on these things.
00:27:20.618 - 00:28:15.510, Speaker A: Because that's the difference of what makes the difference between fintech and someone starting a Dex right now on Ethereum. Some kid in his basement who's like 15, doesn't know anything, can start a dex on Ethereum. Now, that's very dangerous and it's horrifying, but they can and they will, and they have. And there's an interesting aspect of that philosophically, because it's the access to make that possible that makes this all interesting. If you restrain the access, which governments are really, really good at, they're good at really restraining access to things, then basically we shouldn't do any of this because most of these people wouldn't be here if the government just told them, you can't do this. So I think we have a window of time before a lot of things get really bad. And I feel like right now it's sort of proving that this access was worthwhile for humans to leverage.
00:28:15.510 - 00:28:17.994, Speaker A: So I think that might answer your question.
00:28:18.192 - 00:28:41.474, Speaker D: Just quick thought, if I may. I agree with both of your points with respect to government regulation, which government? Ethereum is not american, Ethereum is not european. Ethereum is not chinese. This is something novel. And we don't have a government or a meta government in place that could even theoretically regulate this stuff. So I think the answer to your question is no.
00:28:41.672 - 00:29:36.722, Speaker B: Just to clarify, what I'm talking about is less like regulating Ethereum and actually putting in regulations that make building on something like Ethereum more attractive. The question I'm asking is, what is the power of regulation to help lock things open? Essentially. But Frankie, I wanted to go back to you. So early in the conversation, you talked about that phenomenon of web, two platforms like Facebook, sort of that dawning moment where you're like, oh, I don't own this stuff. I can't take this with me. And that made me want to ask you, to what extent are you involved in building decentralized alternatives to the kinds of things that we already use now, right, like Facebook, but on the blockchain, versus using this technology to come up with things that we haven't even thought of yet.
00:29:36.856 - 00:30:35.154, Speaker C: So there are definitely things being built on or like using Ethereum and other protocols now that are supposed to replace Facebook. But I don't think that we are even ready for that yet. I think that if we really want to go tackle those systems, we have to take it one step at a time, and we have to go from the very smallest thing, achieve that and make it universally understood. And I personally would love to see. And what I am excited for in the next coming year, if not years, is actually getting rid of OAuth. I think before we can even tackle things like Twitter and Facebook and true ownership of data and identity, we need to get rid of this concept of like somebody else is giving me access to my identity so that I can access things on other sites. I mean, every time we go somewhere and it's just like log in with Facebook, this simple act is essentially creating and composing an identity that is not necessarily yours.
00:30:35.154 - 00:30:39.746, Speaker C: It has your name and it has your face, but it's not yours, somebody else's.
00:30:39.778 - 00:30:47.610, Speaker B: But isn't that something that doesn't really require. This isn't really criticism, but that doesn't really require interacting with the blockchain at mean.
00:30:47.680 - 00:31:17.586, Speaker C: Of course not. It does not require interacting with the blockchain. But what Ethereum has done and what Metamask had done was getting people to use local keys to sign messages to prove self while still owning self right, and having localized identity. And some of these smaller tidbits, these small pockets in Ethereum are huge that are going to change. And it's just little things. We change little things and everything trickles down. Right.
00:31:17.608 - 00:31:21.926, Speaker B: The big question I have on that is, and this is only have like.
00:31:21.948 - 00:31:23.046, Speaker A: 2 minutes, by the way, just to.
00:31:23.068 - 00:31:24.114, Speaker B: Let you know who settled.
00:31:24.162 - 00:31:25.078, Speaker A: 2 minutes, two or three.
00:31:25.164 - 00:31:40.220, Speaker B: Okay. Do you see a way to get to a place where that becomes ubiquitous and yet people are not, we're not expecting everyone to be custodians of their private keys or with no recourse if they lose that stuff.
00:31:41.070 - 00:32:14.930, Speaker C: I think that we will come to a point where research will put us in a place that everyone can be custodians with their own private keys. I would rather see that, actually. And I think that it's a failure on our part if the average person cannot do that. That is a user experience flaw. And I mean, if you took anything that we were building now and you showed any normal designer in web two, they would laugh at what we're doing. We need to create better user experiences and better education so that this is common knowledge that you can be the custodian of your own keys.
00:32:15.010 - 00:32:37.610, Speaker A: Yeah, those are problems that are very solvable. It's just there hasn't been a high incentive to solve it just yet. But a lot of projects, especially wallet projects and stuff, try to solve it. But actually that can be addressed pretty easily. Things like multisigs are actually being highly underutilized in the space, and they actually address that really well. Where you lose several factors, you can still recover all your keys.
00:32:37.690 - 00:32:49.694, Speaker B: All right, lane, last question, and then I think we're going to get the hook. How will you know in three years from now whether this is succeeding or failing?
00:32:49.822 - 00:32:50.814, Speaker D: Decentralization?
00:32:50.942 - 00:32:51.620, Speaker B: Yeah.
00:32:54.390 - 00:33:13.058, Speaker D: That'S a hardball question. Okay. How do we know in three years if decentralization is succeeding or failing? I think my answer would be around user agency. Right. I would like to see the average user of the average application exerting more agency. And that could take several forms. It could take managing my keys.
00:33:13.058 - 00:33:27.742, Speaker D: It could take managing the keys for my community or my family or my friends, managing data. It could mean sort of being more mindful about which applications we use and how we use them, making small changes to open source applications. That's a short answer.
00:33:27.876 - 00:33:29.390, Speaker B: Cool. All right, thanks, guys.
00:33:29.460 - 00:33:30.126, Speaker A: Thanks, everybody.
00:33:30.228 - 00:33:30.702, Speaker D: Thank you.
00:33:30.756 - 00:33:31.020, Speaker C: Thank you.
