00:00:00.720 - 00:00:15.540, Speaker A: You. Hi, everybody. Thanks for coming to my talk. I recognize some of you and appreciate it. So I'm Will Robinson. Today I'm going to talk about the current state of fully on chain games. And don't worry, I'm going to get to what the heck that means.
00:00:15.540 - 00:00:57.844, Speaker A: But first, some background to legitimize what I'm about to talk about, because it's going to sound pretty crazy. In 2018, I completed a dissertation in video game design. I've been making games home alive, and now I'm a doctor of games. But for the past five years, I basically ignored them. I built DeFi protocols and audited DeFi protocols and became really involved in crypto from an incentive mechanism design perspective. Basically took my love for how we make rules for players and thought, how do we make rules for financiers? And then about last year, I got very excited playing Dark Forest. It's a fully on chain game.
00:00:57.844 - 00:01:33.916, Speaker A: And what that means is the entire state of the game is on chain. Normally we think about crypto games like Axie, and if you think about it, most of that game actually isn't on chain. The characters, they fight on a centralized server at Sky Mavis. And when the fight is over, the results are pushed to the chain, which means that none of the NFTs are permissionlessly or trustlessly created. You could mint as many as you wanted. Also the code. I mean, I love the Sky Mavis people, don't get me wrong, but the code is fully closed source.
00:01:33.916 - 00:02:09.704, Speaker A: There's no DFI web3 ethos to that. You can't just work with it if you wanted to. And so the good cognate, if you know about DFI, would be Coinbase is like Axi and Uniswap is like what I'm about to talk to you today. And the big problem with uniswap at the time, and what we thought we couldn't do trading on chain, was because there'd be no bandwidth. And so we had to get really clever with how to stretch what the chain can do to make functionality available to it. So what we're talking about today is the all state altering logic is executed on chain. You can't make a chess move on a centralized server and push it later.
00:02:09.704 - 00:02:44.016, Speaker A: No, you sign straight to the chain and all the game states are recorded on chain. The history of play is there. And once you can get those two things, there are lots of things you don't need to have on chain. The graphics can be off chain, the animations can be off chain. All the sort of thinking processes and decorative parts of game design off chain, just the core piece. And in this way these kinds of games are client agnostic. You could make a game about space shooting pirates and that a different dev could reskin it to be about bunnies or bees pollinating flowers.
00:02:44.016 - 00:03:05.576, Speaker A: Because the core underlying logic is what is stable. Everything else is up to the front end. This is the game I was talking to you about so far. Fully on chain games are not very approachable. This is Dark Forest. In this game, players are taking over planets. Those planets send their energy to other planets.
00:03:05.576 - 00:03:33.264, Speaker A: Once they take them over, they start producing more energy. So you can take over more planets. It's similar to a web two game called Galcon, which is not particularly popular, but has a long history and tradition. And it's kind of fun. So if ever you have a chance to play G-A-L-C-O-N-I recommend it. And so this game was composable permissionlessly. People built plugins, people built bots, people petitioned to change the rules, and the smart contracts got upgraded and altered.
00:03:33.264 - 00:04:15.088, Speaker A: It was about a whole new way of organizing people. And the prizes that came out of this game became very valuable because they became very scarce. To win a game of Dark Forest usually took about a team of 20 engineers and many, many sleepless nights, basically never stopping to play. And I built a dow called Dark Forest Dow because I was grumpy that I missed NfT summer and I didn't make any money on it, and I wanted to win a bunch of NFTs in this game. And so I recruited Coinbase engineers and young people who didn't have to go to work so they could pilot ships all day long. And we ended up doing really well. Our Dow grew and we got really excited about the idea of building on chain games.
00:04:15.088 - 00:04:46.184, Speaker A: And today it's sort of spread around, and now there's dozens, if not maybe dozens of dozens of developers trying to make this happen. But the problem is, these fully on chain games have major blockers at every single turn. And I wanted to go over some of them with you and get you excited about this and why you would want to do that. So the first problem is, we don't know why to do it. So currently it's a nerd snipe. The number one reason is it's hard. And that's why we ought to make games on chain.
00:04:46.184 - 00:05:34.024, Speaker A: But I do think there are some serious interesting features. One, composability. Once your game logic is on chain, people can build games on top of your game. The logic can be reused, it can be forked. People talk about NFTs being interoperable, but it's kind of silly generally, right? An NFT is your record in some ledger that you own some object, but that object doesn't mean anything. Its existence isn't on chain, it's on an IPFS server. What happens if you could take an actual sword with its actual mathematical operations and move it from one game context and put it into another game context? What would happen if you could build a world that you could explore in and layer more rules on top? This is one of the big differences with Defi.
00:05:34.024 - 00:06:32.300, Speaker A: So when you're thinking about making a game, the goal is to have players reach some objective, given some set of obstacles. A game designer's job is to add friction, and so adding rules on top of something isn't a bad thing. Adding more friction could make things more fun. There's this french philosopher named Michel Foucault who talks about how when you're in jail, the only way to regain control of your life is actually to add more rules onto your life, not try and be more free. Because in constraining yourself further, you can have an experience that you yourself tailored for yourself so that composability is exciting. To give you an example, we made a smart contract that worked on top of Dark Forest. Anybody who contributed points to that smart contract was able to then win in a larger conglomerate empire, as opposed to playing individually.
00:06:32.300 - 00:07:03.060, Speaker A: And because it's so hard to win dark forest. All the noobs who were really solid engineers but didn't have a team of 20, could contribute their labor in a decentralized way and share the spoils. And the game never imagined that kind of context. It was just open source, composable, permissionless, and anybody could do what they wanted. The other piece is it's financialized. You're born into Defi. So as soon as your chain game works, everything is verifiable, nothing is corruptible.
00:07:03.060 - 00:07:50.200, Speaker A: That means that your assets are not infinitely mintable. There's provable scarcity, but also out of the box. You get lending, you get swaps, you get perps. And we don't know why that would be good, but we hope that would be good for making games, especially for things kind of like Eve online, which is a project where you play with spaceships and trying to make an economy. And so here, if your economy is entirely wrapped inside a blockchain, and there's no oracle problem for guaranteeing, the state of the game is reliably transferred from the central server of the game person, then there's no trust and the system can grow organically in the way that DeFi has managed to succeed. So those are the motivations we're hoping for. And if that's enough for you, then we'll continue.
00:07:50.200 - 00:08:44.484, Speaker A: And if it's not, well, the rest is just problems to reaching these motivations that may not be motivating enough. So the first thing is, we don't know what kind of games to put on chain. Things like chess would probably work, turn based strategy, things like civilization, XCom, fire Emblem, where you're not expecting to make a lot of transactions, things that won't work, anything synchronous, which is the vast majority of video games. You don't get Dota, you don't get counterstrike, because if you have Twitch reflexes, the blockchain doesn't care. You're in the transaction queue waiting for that twitch reflex to be processed. So if that's the case, and the kind of games we have right now aren't fully appropriate, maybe there are some new kinds of games we've never seen before. Because there was a time when Dota didn't exist and tower defense didn't exist.
00:08:44.484 - 00:09:32.360, Speaker A: And so what are the kinds of genres that we'll be forced to invent, because we're desperate to leverage those other features of composability and financialization. And so usually when we're thinking about scaling Ethereum and improving the tech stack in crypto, we're thinking about real hard cryptographic primitives that we're going to push the hardware to the maximum. But here it's like actual design sacrifice. We just need to want to do different things, not push against the current, but to embrace where it takes us. And so design is a giant open problem, and there's just not enough game designers in the world out there who understand how blockchains work. And so it's really hard to see progress there. At the same time, we really do need to increase throughput.
00:09:32.360 - 00:10:14.896, Speaker A: A successful video game today has 100,000 concurrent players. That's 100,000 players making multiple moves a minute. That means that our standard 40 TPS blockchain, that's even like a fast blockchain by Ethereum standards, has no chance. So solutions would be ephemeral chains, chains that exist. Lots of activity happens and they disappear. And that's okay, because the data wasn't that precious, and maybe we bridged it off. The reason why an ephemeral chain is important is because the reason Ethereum has so few transactions per second is because of state bloat.
00:10:14.896 - 00:11:25.324, Speaker A: You don't want to force miners to hold every single thing that's ever happened if the number of things that have happened is in the hundreds of thousands, because that transaction that you made on some idle Thursday in 2014 is going to be recorded for the rest of time and will take up hard drive space in every node's computer. And so that move you made in that video game, that one day in 2020, well, that's a giant waste of everyone's hard drive space. And so what would happen if we just purged chains? And what does it mean to start doing that? That's a research avenue people are trying to tackle here. Another one is app specific precompiles. What if we just built a chain that had game loops already at its heart and knew, like, for instance, that shuffling a deck of cards was going to be really important? We wouldn't have to go through all the opcodes to shuffle a deck of cards, because let me tell you, to shuffle a deck of cards in real life takes a couple of seconds and is super easy and native to cards. To do it on chain where you don't know the order of the cards, it takes multiple rounds of an algorithm called mental poker, and it's just an enormous burden. And so if you want to do that, you're going to have to design your chain from the ground up to even consider what a fucking playing card is.
00:11:25.324 - 00:11:55.760, Speaker A: Oh, excuse my french. I'm recorded. And then battle roll ups. This is similar to the lightning network, if you've heard of it, or ZK roll up, the sense is that you and me, we enter a game via a smart contract, but then we do all of our moves against each other off chain, where I sign, I made this move, you sign, you made this move in response, I sign, I made this move in response. And if one of us says, oh, this was the game state, and brings it to the smart contract, and the other play is like, no, buddy, I beat you. Here's the real game state. The smart contract can be the arbiter of truth there.
00:11:55.760 - 00:12:46.520, Speaker A: That's a bit of a compromise on a fully on chain game, because the state isn't fully recorded, only like, snippets of that state, but it's still trustless and permissionless. And so that can be a very valuable compromise we may have to make. The other thing we need to do is improve user experience. It's just awful when you have to sign for every single move you make in a board game. Like, imagine you have to take out your Trezor wallet for every chess piece you decide to displace. So for that to work, you're going to need to have some kind of wallet like argent or some kind of account abstraction primitive on Ethereum, like EIp four eight eight, or I can't remember the number, but there's some good ones to do it. What that would mean is like saying, hey, game for the next 30 moves and like 20 ETH, or let's say 20 gas.
00:12:46.520 - 00:13:36.384, Speaker A: You can just not need my signature. Like let's delegate that to the browser and have a secure sort of session key. Or let's have burner wallets that spin up and have really low security so that we don't have to even see transactions happening in a signature way. So the other one is synchronization. We aren't really used to building front end dapps that need to consistently update with what's happening with our opponents. And so this is something video games have been doing really well for a long time, is there's a server state on dota. When you're playing this fast, action paced game and your client is syncing all the time and guessing what the next state will be, and if it's wrong, it checks the server and rolls back the state in milliseconds of time, just so you can feel really connected and very responsive.
00:13:36.384 - 00:14:26.432, Speaker A: None of that tech exists for blockchain, and so players get a very stodgy sort of flickery experience right now, and there's a lot of work that needs to be done there. The problem is like, who's going to solve this until we get a fun gameplay loop? So it's like chicken and eggs everywhere. Okay, then we're also missing a bunch of common standards, shared frameworks for how to build these games, and shared tools for how to build these games. And yeah, ERC standards that are going to help people start sharing the same logic from across their games. Because if this is going to be exciting, if we're going to get to new kinds of experiences, we're going to have to play on the same playing field where what we're building kind of more than interoperates, but composes. There's a really great project called Mud Dev. If you haven't heard of it, it's one of the hottest things in Silicon Valley and continues to refuse everyone's investment dollars because they're funded by the Ethereum foundation.
00:14:26.432 - 00:15:07.472, Speaker A: Like we could just take charity dollars, so whatever. But yeah, Mud dev, incredible version of this shared framework of creating a sense of a world, an autonomous world where every builder gets to build games in the sort of same space and everything makes sense together. I have no stake in that company, so it's not like I'm shilling it because I want to. It's just the best. There are competitors, though. Curio just announced a $3 million raise to do that, and Argus like a tens of millions of dollars raise to do that. So people are really after this kind of experience, and a lot of money is going into it because it's all pie in the sky stuff that we hope will unlock new world orders for games and autonomous worlds.
00:15:07.472 - 00:15:40.670, Speaker A: Because here's where this goes. Once we start building fully permissionless but also trustless game worlds where players can spend their time and their existence, then all of that stuff is native to web3. There's no more databases and other world stuff like the Internet doesn't have to come into the chain. The chain is the Internet. The chain is the world. And it's not just finance, it's culture that's born on the chain and history that's born on the chain, and that becomes really exciting. We just don't know how to get there, and because there are way too many problems.
00:15:40.670 - 00:16:02.350, Speaker A: But hopefully next year, I'll give this same talk, and some of them will be solved. If you have any questions, I have exactly 1 minute and 16 seconds to answer them on. Yeah, so that's that. Thank you. Great. See me after. If you have.
