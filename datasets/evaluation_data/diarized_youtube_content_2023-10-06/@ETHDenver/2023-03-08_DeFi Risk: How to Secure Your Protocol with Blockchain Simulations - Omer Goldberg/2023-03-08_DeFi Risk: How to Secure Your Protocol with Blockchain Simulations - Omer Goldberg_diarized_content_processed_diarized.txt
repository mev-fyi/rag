00:00:00.250 - 00:00:33.586, Speaker A: Users that interact with your protocol to get a better idea of how the protocol is going to behave and perform under black swan events. High volatility in times of high market stress. So how do we do it? Simulations like I started the talk super overloaded. What does it mean for us? It means forking the blockchain. So a good simulation environment is as close to possible to what you're going to see in production. The second you start deviating away from that, you're just making assumptions. And assumptions on assumptions is where you get stuck.
00:00:33.586 - 00:01:10.914, Speaker A: So we currently support all EVM compatible blocks. Every simulation starts from selecting a block height. Now, the benefit of working off of a fork is you get a complete snapshot of whatever network you're on. So that's liquidity positions across protocols like Ave, Euler, LP positions, and Uniswap. Everything is one to one. And this is already a much better starting point, with less assumptions needed to be made. Now, in addition to forking the blockchain, we've built a suite of tools that help the can manipulate if we want to test a black swan event.
00:01:10.914 - 00:01:47.102, Speaker A: You might not get it from the block height that you're looking at, but we can create it for you, or you can create it yourself. So we can move liquidity seamlessly across uni pools, curve pools, whatever is interesting and relevant for the protocol that we're working with. We can create positions, highly levered positions. And what's super interesting is that we can also control the return value of price feeds. So that also goes for chainlink price feeds, and that also goes for on chain oracles. Now, the reason why that's important and very different is because oracles are not part of a developer's infrastructure. They don't control the code.
00:01:47.102 - 00:02:31.050, Speaker A: Typically. That means it's extremely. They have to do all of these kind of like mock tests to see what would happen if a price hit level x. So here they can do it out of the box, and they can start working with price feeds and price trajectories identical to things observed in black Thursday, the UST crash post FTX, and also just generate them synthetically based on their needs. So one is the forked environment, and this is excellent for any kind of security. And just testing that when you're doing chaos engineering, which is thinking of the worst possible environment for your application, things just work. But we also have another use case, which is optimization.
00:02:31.050 - 00:03:18.966, Speaker A: Now, in optimization, what you want to do is you want to run the different configurations for your protocol, so we can go back to the ave example of liquidation thresholds. Again, there's a tradeoff here between profit and security for the users, and we want to see with statistical significance where it's going to perform best. For this, we use the Chaos EVM. The Chaos EVM is an EVm we built from scratch in python. It's highly performant, and it allows us to run hundreds of thousands of simulations per day under different price trajectories, liquidity levels, market environments to reach results that are statistically significant and measure the amount of value that's at risk for a protocol. With this, forums improve and evolve. It's no longer someone writing a nice post and trying to explain why a liquidation threshold or any risk parameter should be increased or decreased.
00:03:18.966 - 00:03:57.826, Speaker A: There's data that goes along with it. And because we run this hybrid model and we measure all of the end results and the final recommendations on the on chain simulator, you don't need to take our word for it. It's not black box. We give you a UI and a block explorer. You can verify the result of every single block, every single simulation, to the level of every single block into every single transaction with tools that you're used to using today. So to sum up what a simulation engine is and what it allows you to do, it allows you to simulate liquidity attacks on protocols. It could be a single protocol, or it could be many protocols.
00:03:57.826 - 00:04:37.906, Speaker A: If you have a complex trading strategy that you're participating in, it lets us do. We could say that liquidity tax and market manipulation are synonymous, but you could think of if we were looking for an example, something like Avi Eisenberg and Mango. Right? So an attacker who has access to capital and the amount of capital will speak about it, but it's a function of the depth of liquidity for the given pool and how the prices are being read. And we can build all of this to basically try and quantify what is the price of manipulation and is it profitable. Additionally, black swan events. So it's trivial to the second you pick a block height, you inherit everything from that block. We can make it even worse.
00:04:37.906 - 00:05:35.922, Speaker A: We can change it based on the protocol's needs, volatility, price movements, so the ability to control oracles and generalized protocol testing. We have a bunch of tools for this that we're probably. I'm getting the signal from the stage as everything is running late today, we're not going to be able to get to. So I'll just run through it for the last minute and whoever's interested in this type of tooling can speak to me and I'll probably publish it as a blog so anybody can read it. Async we have monitoring tools, as I mentioned, we have the parameter optimization, which is live for AavE, Uniswap, osmosis, DydX, and a bunch of other protocols to be announced over the coming weeks. And we have tools that predict, based on our models, the plausibility of liquidity attacks and the profitability with the core thesis is if it's profitable, there's a high likelihood that it's going to happen, and we need to adjust risk parameters accordingly. Now, I had a whole case study prepared.
00:05:35.922 - 00:06:04.222, Speaker A: This will go into the blog. Whoever's interested to learn about how mango could have been prevented, or the attacks that Avi Eisenberg was threatening ave with, or even tried with the curve attack, come talk to me. And that is basically it. If you want to catch me after, this is the best way to do it. Twitter omar A. Goldberg and then just on the contact form on the Chaos labs at XYZ website. Thanks everyone.
00:06:04.222 - 00:06:05.450, Speaker A: I hope you're enjoying the conference.
