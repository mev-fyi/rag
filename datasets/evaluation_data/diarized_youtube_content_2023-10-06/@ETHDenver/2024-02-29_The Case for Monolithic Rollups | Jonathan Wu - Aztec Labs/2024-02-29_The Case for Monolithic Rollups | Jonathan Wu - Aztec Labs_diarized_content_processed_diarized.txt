00:00:00.090 - 00:00:05.134, Speaker A: There. Really excited to be your mc for the right now.
00:00:05.172 - 00:00:21.950, Speaker B: And 02:00 p.m. We have a jampacked agenda with some speakers, presentations. Great stuff going on. I'm really excited for the very first kickoff here with Jonathan Wu, head of growth at Aztec Labs. He's going to be diving into the case for monolithic roll ups. Let's have a big round for Jonathan Wu.
00:00:29.430 - 00:01:01.622, Speaker A: Am I good? Okay, thanks for coming out. ETh Denver. Big conversation right now between monotheism, very hard word to say, and modularity. I wanted to talk through some of the trade offs on how Aztec thinks about it. And we're going to do a lot of memes, and we're going to talk about this analogy of an ice cream shop. So let's get going. For those who aren't aware if you've been living under a rock, modularity is this promise of decomposing blockchains into kind of single purpose components that can be remixed.
00:01:01.622 - 00:01:30.798, Speaker A: And the idea is each of these components is very good at the one thing they do. So thank you, Celestia, for this great diagram. There are execution layers, settlement layers, consensus and data availability. And each of those kind of does one thing very well. And the notion is you can construct new blockchains and roll ups very rapidly by purchasing these off the shelf components. Seems awesome. So I want to kind of try to steel man the case for modularity.
00:01:30.798 - 00:02:06.190, Speaker A: I think the number one most important thing is speed, right? That's what they're advertising. They're saying, rather than build all this stuff yourself, rolling your own infrastructure, get to market quickly, buy the off the shelf components. The second is specialization. Like, maybe you don't want to build all the levels of the stack. Maybe your focus is just on execution and you want the fastest vm. Why don't you spend all your resources doing that? Take the other components off the shelf. And the last one is security, kind of like, why are you investing so much in bootstrapping validation when you could just rely on other people to do that stuff for you? I think it's a very, very compelling argument.
00:02:06.190 - 00:02:33.878, Speaker A: And all that leads to this kind of selling case. Like, the more you externalize, the faster you launch. I think that's pretty awesome. And the vision here is there's going to be 1000 roll ups. There's going to be a trillion roll ups. There's going to be infinite block space. Okay, so what are the premises? What premises do you have to accept in order to kind of go into a modular universe? I mean, the first is you have to be like, the security assumptions are like, same, same.
00:02:33.878 - 00:03:12.174, Speaker A: You're getting a lot of convenience and you're not making many security trade offs. The second is just integration is easier and faster than rolling your own. You could build all these pieces, but it's a lot easier to just pick them off the shelf and kind of stitch them together and then finally kind of picking the right combo of these off the shelf components is going to be a differentiator. Right? I think you have to accept all these premises to be like, modularity is awesome. Okay, so let me talk about why maybe it's not so awesome. One thing is hidden security bottlenecks. Like, you're relying on all of these vendors to kind of provide the different components for you, but you're really only as secure as your least secure lego block.
00:03:12.174 - 00:04:02.050, Speaker A: Like, you're putting all these things together and you're hoping that everyone's doing a great job in the back end, and that risk compounds across all of your modular components. And so there's some failure risk that could happen across your component tree. You're kind of not in control, and you're hoping that none of them have a catastrophic failure and create a liveness risk for your roll up. And because the infrastructure is shared, right. The aggregate prize for attacking just one of these shared components grows bigger and bigger as we go to millions of roll ups. Like, imagine if there's, like an infinity roll ups and they secure all the money in the world, and they're all reliant on a couple small infrastructure providers, and each of them is carrying the weight of the entire crypto universe. Well, then maybe you might think, well, the security budget or the security capital across any one of these components might not be big enough to support that ecosystem.
00:04:02.050 - 00:04:30.160, Speaker A: The second is like, integration isn't painless. And the reason why I know integration isn't painless is because there's an emerging category called roll ups as a service. They're basically systems integrators. They're telling you, hey, you want to pick some stuff off the shelf, let me tell you what to build. And not only that, we'll do all the stitching for you. And so maybe you don't need to hire devs internally to do all the stitching, but you have to now pay some kind of SaaS fee to kind of integrate and maintain all these pieces. Kind of takes work to figure that out.
00:04:30.160 - 00:05:06.578, Speaker A: And finally, is selecting the right combo sufficient to win? You talk to founders. They're taking these Lego pieces, they're putting them together. Okay, well, anyone can do that. So is that a sufficient differentiator? Open question in my mind. So I think this all leads to what I call kind of like sassification of roll ups, where in order to coordinate the different pieces, you've got different governance requirements. Maybe your dA layer or your execution provider or validation provider. Some of them are going to be governed by weighted token voting, some of them by multi sigs.
00:05:06.578 - 00:05:40.946, Speaker A: You're kind of at the whims of all these decisions from your vendors, like very, very similar to SaaS, right? You've got all these SaaS software products. They're able to unilaterally change the terms on you. And so what you kind of need is you need a way to coordinate all these people. And how are you going to coordinate, like, governance? Internalized governance is already really hard, but now you've got governance across all these vendors that you have to keep track of if you're going to build a modularized roll up. So kind of like, here come the lawyers. If you're a modular customer, you're kind of subject to the whims of your provider. And if you're a provider, you can create liveness failures by unilaterally implementing changes.
00:05:40.946 - 00:06:17.018, Speaker A: And so you kind of need like a fallback. You need to be like, okay, in case of a failure, I'll go back to Ethereum, for instance, for da. And you kind of need some version of like an SLA. You kind of just need a please don't screw me type contract. And then how does that get enforced? Well, you could try to enforce it socially. You could have some kind of token governance where you kind of have a say and upstream to what your suppliers are doing. But really what it is, is like it has to be governed by some kind of legal contract in a court where if your service provider doesn't do right by you, you can't really reach over there and fix the problem on your own behalf.
00:06:17.018 - 00:06:54.874, Speaker A: And so all this means is kind of like a reduction in sovereignty for roll ups. And so how do we think about this at Aztec? We're a privacy first layer, two on Ethereum, and our goal is to be a fully credibly neutral, decentralized privacy protocol with minimized governance. And so when we think about externalization, internal versus external, does externalization get us closer to our goals? Like, we're very well resourced, we have money, we need governance minimization. We require deep integration because we have some novel blockchain features. We don't want privacy fragmentation. In the end, modularism kind of just doesn't make sense for us. Now.
00:06:54.874 - 00:07:41.530, Speaker A: It doesn't mean it doesn't make sense for everyone, but it means, in my opinion, that modularity is not a maximalist position to take. So some questions to ask. If you are a roll up founder, kind of like, is it worth it to me to internalize most of these services? If you're like 100 million dollar roll up, like you're securing $100 million, maybe it makes a lot of sense to trust a $10 billion modular solution as part of your infrastructure stack. If you're 100 billion dollar roll up and you're heavily resourced, maybe it makes sense to roll your own and kind of buy back your sovereignty. So I have kind of this assertion that the roll ups getting going with Modularity, once they get very, very big, are going to start thinking about how to buy their own sovereignty back. They're going to be like, wait a second, I have infinite money now. It kind of makes sense for me to re internalize all of these different pieces.
00:07:41.530 - 00:08:29.338, Speaker A: And if anyone can launch a roll up, then if you're a roll up founder, what makes me different? If anyone can just click a few buttons and do it, well, then what makes me different? And so my analogy here is kind of like Baskin Robbins. For the Americans here. They got 31 flavors. And so you're a roll up founder, you're going to Baskin Robbins, you're trying to make an ice cream sundae, and you're like, I'll have a chocolate and vanilla, and I'll get some sprinkles on top. And everyone can choose to make their own custom sundae, right? But out of these kind of, like, prepackaged ingredients, there are only so many flavors, and there are only so many sprinkles and only so many cones. And you're looking at your Sunday, and you're going, my Sunday is really, really special because it's got all of these exotic components that I bought off the shelf and I put together. But anyone can put those things together.
00:08:29.338 - 00:09:06.546, Speaker A: Anyone can go into Baskin Robbins, pick those flavors, put them into their own sundae. So where exactly are you trying to create distance, technical distance, between your project and others and to make a marvel reference. This is like the Doctor strange from Avengers, where he's imagining all possible future worlds and there's like 14 million combinations. It's like, is there any one where we win? And he's like, there's only one. There's only one outcome where we win. I think this is the logic, the end state logic of off the shelf modularism, which is like, it is a combinatorics problem. There's n degrees of dimensionality.
00:09:06.546 - 00:09:59.590, Speaker A: You can make the most exotic sundae because there's going to be so many different providers, and the hope there is, like I'm going to pick the one combo that's the tastiest combo and that's going to make me win. And I think that's a very interesting hypothesis. And you have to think about as a roll up founder, is that the path forward, is my ice cream sundae special or unique in any way, or is it something that anyone can come in and order? So my assertion, and I'm biased because I'm a marketer, is that modularity leads to commodification, and commodification leads to this apotheosis of marketing. Anyone can make the same Sundays. So what happens when everyone can make the same Sundays? And am I okay externalizing my roadmap now? My roadmap is not really up to me and my dev team. It's up to all my vendors. And my vendors are going to upgrade as they're going to want to upgrade.
00:09:59.590 - 00:10:32.558, Speaker A: So my overall conclusion is modularity is a trade off of sovereignty for speed. And I won't go super deep on this, but when we thought about this problem, it's like, okay, monotheism, fun word. It's well understood. It is very costly. It's very costly to invest in your own security capital, right, to kind of go and get people out there to commit money and funds and effort to kind of securing your network. But it gets integrated economics. We have hand in glove compatibility, seamlessness.
00:10:32.558 - 00:11:13.150, Speaker A: We don't have to rely on third party vendors and satisfaction. We don't really have to rely on slas and courts to kind of like resolve disputes between the different parts of the system. It allows for less coordination, and it's more governance light, and there's consistency of vision and control. And for us, being a privacy first roll up, having a very, very different, complicated, ultimately challenging infrastructure to manage, there are no real off the shelf components. Like we're hand making our own little sprinkles. We're like hand churning the vanilla ice cream. And so for us, it's very challenging to think about, okay, we're going to custom make all of these pieces that are very idiosyncratic.
00:11:13.150 - 00:11:39.670, Speaker A: How is that going to fit with these off the shelf components? For us, it doesn't really make a lot of sense. On the other hand, for modularity, you have this fantastic speed to market. You can launch very quickly. There is some integration overhead. But at the end of the day, you get to ship way faster than we could. I mean, we've been at it for many, many years and we still haven't shipped the thing. And so someone could look at that and go, no, speed to market is my priority.
00:11:39.670 - 00:12:14.638, Speaker A: So what do I think happens next in this modular universe? The first and most obvious thing is there's going to be a proliferation of ice cream flavors. Like right now, there's like a couple of da layers and there's a couple of vms you can choose from and a couple of settlement layers, et cetera. We're going to see just a vast proliferation of these ice cream flavors. Like, it's not going to be 31, it's going to be a trillion flavors. And there's a strong incentive there to be a winning flavor. Like if you invent the vanilla, like the flavor that everybody wants in their Sunday, that's awesome. But we're going to see a huge proliferation, right? Modular service providers.
00:12:14.638 - 00:13:10.130, Speaker A: But then if you go up one level, like think about the chess game, one move deeper, I think we're also going to see a lot of ice cream shops. We're going to see a lot of roll up as a service providers. These are kind of like channel distributors, right? Every ice cream shop is going to say we carry our own little special set of flavors that you can't get anywhere else. And if you come to our ice cream shop, we're able to offer you the most unique sundae. And so now you're going to see competition between distributors being like, I need exclusivity for your modular piece because I don't want to serve the same ice cream flavors as everyone else. That does not make me, as a distributor and an integrator, competitive. So the satisfaction means, like, there's going to be preferred channel partners, and that means there's going to be a creation of these exclusive flavors, these channel agreements, right? And ultimately we're going to get this highly industrialized, systematized roll up creation and trillions of roll ups.
00:13:10.130 - 00:14:05.346, Speaker A: And again, I'm biased because I'm a marketer, but I think that in that world, marketers inherit the earth. In that world, nobody really has technical differentiation and marketers inherit the earth. So I'll just end it here. I know I'm a little bit early on time. I'll just end it here with a little diagram of how I think that it plays out. Kind of like modularity is forcing founders into thinking about how important is my engineering team? How important is internalization. How important is owning the secret sauce? And why is it more important to just get something out there very rapidly and with minimal overhead? And we're going to have this externalization and outsourcing of everything that is hard on a technical perspective, both from the componentry to the integration, security, and ultimately shit.
00:14:05.346 - 00:14:33.500, Speaker A: Posters will rule the world, right? Like the tech ultimately won't be owned inside. The tech will be completely outsourced. And essentially the rarest thing right now, and it's the hardest thing to get, will become even rarer, which is narrative creation, marketing those really hard to find cmos. So that's kind of how I see the world evolving and the case that I would make for monotheism, which allows you to kind of internalize some of these differentiators. Thank you for your time.
00:15:27.060 - 00:15:27.936, Speaker B: How's it going?
00:15:28.038 - 00:15:28.592, Speaker A: Hey.
00:15:28.726 - 00:15:32.480, Speaker B: All right, thank you, Jonathan. Another round of applause for Jonathan.
00:15:34.180 - 00:15:35.368, Speaker A: That's all you got?
00:15:35.454 - 00:15:52.710, Speaker B: Come on, East Denver, let's go. So we have about five to ten minutes before our next presentation. So go take a restroom break, go grab some grub, come back here in about five or ten minutes, and we're going to kick things off. So stick around. Cool.
