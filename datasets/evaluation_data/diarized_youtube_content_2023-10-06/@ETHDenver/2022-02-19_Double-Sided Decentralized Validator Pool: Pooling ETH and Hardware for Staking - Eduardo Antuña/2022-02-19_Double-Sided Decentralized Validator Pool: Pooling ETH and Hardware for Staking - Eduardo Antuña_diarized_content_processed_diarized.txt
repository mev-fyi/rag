00:00:00.170 - 00:00:53.310, Speaker A: Hello everyone. I'm happy to be here today after this pandemic. See again people, Facetoface is incredible. The vibe on this conference is really amazing and thank you for being here for my talk today. I'm going to try to explain one of the big challenge that we have right now in Ethereum two, since we want to have have a decentralized validator pool, but taking care of both sides, the hardware and also the pool in the ETH and yeah, well, my name is Edward Antonia I, one of the co founders of Damonot. We started this project in 2017 with the help of Jordy Valin and also defrim. At that moment we realized that even we are creating amazing decentralized technologies.
00:00:53.310 - 00:02:01.166, Speaker A: We were still committing the same mistakes that in the past. So we were accessing and we are in a centralized manner. So that is why we create this concept of Dubnote with the idea of create a public good that allows to create a human centric decentralized hardware infrastructure. So if we take a look to the s two designs goals, we can see that we have several points common with that the centralization part and also the resilience, but also the security and simplicity were common points with Dabnot. So that is why we introduced e two validation on Dannote from the very beginning at the Genesis moment. Right now, we are very proud that we have 2609 validators is for us an incredible number. We are very proud of having 251,000,000 total value, on damn note.
00:02:01.166 - 00:03:00.440, Speaker A: But we only represent less than 1% of the network. We don't have metrics. It's also one of our principles. We take care of the privacy of the users, but this is self reported with the graffiti on the network. But the question is, is it to really decentralize? And if we take a look to the numbers, we can see that binance has 24,000 validators on the network, Kraken has 30,000 validators, and Coinbase has 48,000 validators. So if we take a look to all the numbers, we can see that the ten entities on the network control 62% of the network. We don't think that is really decentralization and that is why we are trying to achieve and find a solution for this.
00:03:00.440 - 00:03:55.362, Speaker A: There is also people in the community that they realize that this is not the real situation. Like for example, Marty Copelman in may also complains about this. We have not achieved any improvement, but also for example, Shasha is complaining that we are not taking any measure to achieve more decentralized network. We know that when you are centralized you have a lot of risk. For example, we have been seeing rook pools, slashings, and we are also losing all the benefits of decentralized technologies like privacy and resilience. So we are also same. We are not effort and it's not just about validation, decentralization.
00:03:55.362 - 00:04:31.106, Speaker A: We also need to talk about client diversity. We only support precinct right now and we have been working on be able to have all the clients from one year ago more or less right now. Thank you to the AP 30 30 and also the key management API proposed by Dab lion. We are very close to have all the clients on Dubnote. Thank you to the work of Pablo Mendez and also Marcelino. We are going to revert this situation. This is our current model.
00:04:31.106 - 00:05:16.654, Speaker A: We only support one client for one reason, is that our aim, our target is to make as easy as possible for users to run a validator. So we expect them not to run command line. The only client that introduced UI was Prism, and that is why since then we have been using. But we need to change this and for that we are going to start using web three signer. We are very close to having ready. We are in the final test phase. And the cool thing about the web three signer is that we can control all the clients with just one piece that aggregates all the keys of your node.
00:05:16.654 - 00:06:08.050, Speaker A: And this is going to allow us to switch between clients. And it has also several properties, like for example having one only slashing database. You can safely move from clients. And when you target people is people that are not technical. This is a critical point. Now with this solution we are safe that no one is going to make any mistake to make this happen. We had the help of the precinct people like James, also Joaquin helped us to build the web three standard UI, which we are going to control all the clients, but also all the help of several client implementers.
00:06:08.050 - 00:07:00.610, Speaker A: So yeah, let's talk about other things. Let's see why it's not possible today to have a truly decentralized validation. And a key point of this is that you cannot delegate your validation key to anyone because he can slash you, sign an exit or assert you. So that means that you need to control the validation key and you can put in the hands of other people. So this is the main reason why people need to set up their own hardware and infrastructure. And to address this situation, we figured out how we can put these four pieces together. BLS signature has incredible properties.
00:07:00.610 - 00:08:08.380, Speaker A: This property will allow us to create a threshold signature that we can use to create a common public validator key. So mainly the idea is that if we sign the same message with different private keys, the aggregation of n of m allow us to have a common public key. But also we have another interesting thing that is the distributed key generation. This multiparty computation allow us to create private key, well, not a private key, a public common key, without having the private key at any moment on any place. This is quite different to the secret sharing because as you may know, when you have the samir secret sharing, you need to split the private key. So that means that you need to have the private key at some point. With the distributed key generation you don't need to have this key at any moment.
00:08:08.380 - 00:08:59.974, Speaker A: And also we are going to take this wet resigning that already mentioned and making some kind of magic or well, more cryptography that magic. We are working on this approach. So the main idea behind of this is to take madam as is right now, and add a new piece that is the web three aggregator. It's quite similar to the web three signer, but with slightly difference. So we are going to take the duties of the network, the proposals, the blocks and all the stuff that need to be signed. And in this case we are not going to sign it directly like in the web three signer. We are going to broadcast to a consortium of DKG signers.
00:08:59.974 - 00:09:53.702, Speaker A: So we want to split the validation work from the signer work. When we broadcast these messages to all these entities, then we are going to receive the response on the damnode. And inside of Damnode is where we really aggregate all this signature. This has several interesting properties. And the first one is that since we have a threshold signature n of m, the n first responses are the one that we are going to aggregate, making the latency to half an signature very small. That is very important when you are validating on ethereum two. And yeah, when we aggregate this signature, then we have the signet message that we are going to broadcast to the network.
00:09:53.702 - 00:10:40.680, Speaker A: Another property that this model has is that we can have management of these validators and also the signers allowing us to opt in, opt out of the network. That currently is one of the issues of theorem two. You can sign an exit. That means that you are stopping to validating, but you cannot opt in for one month or two months. So imagine that you are moving to a new house, then you need to sign an exit and wait until you can take the ether. But with this we can have protocol that coordinate who is the current validator and distribute the network in a more uniform way. Yeah, well, mainly this is a sum up of all the benefits of this.
00:10:40.680 - 00:11:38.506, Speaker A: It's trustless since we don't have the key or the private key at any moment. Increase the security, since we can have a slicing database on the hardware, but also on the consortium of sinus, it's quite simple to implement, quite not easy, but at least we don't need to modify any of the current client implementations, allowing us to have a plug and play solution on top of them. We increase decentralization. I know that this is not truly or fully decentralized, but it's a way to have a more decentralized network. We have a lemma on damnot. We decentralize until it helps and we centralize until it works. And for now it's the only way to make this happen.
00:11:38.506 - 00:12:25.020, Speaker A: And we also want to have the complex of infrastructure as a service. From the very beginning. We try to incentivize people to run nodes, because otherwise you don't have any reason to run a node or to have decentralized network. And that is why having this model and having incentivization to run these nodes is going to increase this decentralization. Right now a big chunk of the network is in the hands of AWS, digitalocean or other service providers, and we are trying to figure out how we can solve that issue. But we need the second piece of this puzzle. This is how we are going to take the ETH from the network and put in the hands of this system.
00:12:25.020 - 00:13:05.266, Speaker A: There are several projects working on this direction, like Lido, Olikit, staking. We are going to try to find partnership with them. We are approaching this problem from the base layer, not from the top layer, the smart contract part, but mainly we want to follow the same approach they are taking. So mainly the idea is to take ETH on a dow and create batches of 32 ETH. One cool thing is that we can also have several dows. It not needs to be common dow for everyone. For example, imagine that you have an entity that has a lot of ETH and want to split the ETH in several validators.
00:13:05.266 - 00:14:17.818, Speaker A: They can run this dow itself and split it on the network. So yeah, well, we take the ETH, we create batches of 32 ETH, and then it's when designers need to generate this multiparty computation on chain to create the public key of every batch of 32 e. When we have this public key, then we can trigger the deposit of these deposits on the deposit contract. And at this point we are ready then to take the control of this validator and thank you to the management protocol. We can assign this to the different dab nodes around the world. So mainly with this we are allowing to take ETH in a decentralized manner and to split the work in several entities. And we have seen that this has a lot of advantages.
00:14:17.818 - 00:15:16.580, Speaker A: We have liquidity staking but also liquid hardware. It's important to mention that we are not going to need collateral to implement this solution. The only one that need to put collateral maybe is going to be the consortium. Because at the end the workers that are the damnodes that are making the query link work, they are not allowed to make any problem to the validator process. Increase the decentralization levels. We don't have withdrawal private key at any moment since the withdrawal is going to be the smart contract directly the DAO. We don't have validator private key at any point since we are going to use this dikagi ceremony to create the validators and we also incentivize individuals to maintain the network because we expect that they are going to take a fee for making this work.
00:15:16.580 - 00:16:07.118, Speaker A: Another cool thing is that we are going to be more geographically distributed hardware. One of the key points of all this technology is to be resilient to censorship and making this happen is a key point to make the network more strong for everyone. This is our expectation the romat for the coming months. Right now we are working on the slashing protection and also the communication with the clients. We expect to start to having first tenant very soon. But for that we need you. We have very talented developers helping us like Miguel Prada, Ornando and also Jesus.
00:16:07.118 - 00:16:49.020, Speaker A: But we need more help working on this. This is an important piece of infrastructure and we need more people helping us to build it. So if you are interested on this you can send me a private message or reach Paul that is around here and we will happy to introduce you our technology and make you part of all of this. So well, this is our current plans. Thank you for been here and if you are interested on knowing more about this you can reach us in discord or send us a message. So thank you so much.
