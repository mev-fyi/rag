00:00:07.610 - 00:01:04.302, Speaker A: Good afternoon. We're going to get started here. Thanks for coming. Wanted to talk to you all today about Dows and where they are and where they're going, especially related to multichain dows. How all this new the scalability roadmap that is playing out, how it affects dows in particular, and maybe also some generalizations about how the multichain roadmap affects all kinds of applications, not just dows, but what are the general takeaways we can learn from how dows use the new primitives enabled by multichain tech, and also the challenges that they face in managing all this complexity from multi chain use cases. I can start by introducing myself. I'm Rath, co founder at Tally, which is an application that helps Daos manage all their on chain complexity.
00:01:04.302 - 00:02:08.246, Speaker A: So especially around proposals, voting, managing voting power, launching a DAO, managing all the money. Often a DAO is managing a protocol like ENs or uniswap, or a roll up like arbitrum. These protocols are all run by DAos. The token holders and the token voters directly control the protocol upgrades and the treasury disbursements using smart contracts and front ends like tally. And I want to maybe start by talking a little bit about the tech layer of how these smart contracts work, just because that'll be relevant for the rest of our talk. The talk, I think, will cover both why Dows might want to use multi chain tech and also how it works. Like what under the hood is happening at the smart contract layer and at the UI level to build these multi chain applications, because they're still fairly new.
00:02:08.246 - 00:03:18.278, Speaker A: The scalability roadmap, the roll up centric ETH roadmap has only just started playing out over the past year or two. And then once we have multiple chains, we need bridges and ways to move state and move value between those chains. And once you have those primitives, only then can you start building applications like, for example, a dow application on top of the interoperability stuff. But before we had many chains, most apps were just on one chain, and that was also true of dows. So this is a standard set of Dow smart contracts that was popularized maybe four years ago, starting in 2020, and has since become very standard setup for the way that onchain dows work. So they have first a token contract, which is a normal ERC 20 token with one extension, which is the voting module. So like in any normal token contract, it keeps track of token balances, which account has which token balance, but also the voting extension keeps track of voting power, which is an additional parameter on top of the token balance.
00:03:18.278 - 00:04:19.998, Speaker A: So rather than Dow is using token balance for voting, the token balance has to be activated if it wants to participate in the DAO. By delegating the token's voting power to either yourself, you can delegate to yourself, or you can delegate to somebody else who will maybe be more active or more involved or has some expertise and you trust them with your voting power. They're going to vote on proposals, they're going to use your token's voting power to do stuff in the Dow. And the token contract handles both of those two things, both keeping track of everyone's balances and also keeping track of who's delegating to whom and how that affects voting power. The second contract here is a governor contract, and that is the contract most responsible for the DAO operations. So this governor contract has rules for what is a valid Dow proposal. It manages the lifecycles of these proposals, like when they go up for vote, when the votes actually happen.
00:04:19.998 - 00:04:57.770, Speaker A: The governor contract counts the votes. It determines if a vote passed or failed, and it keeps track of the actual executable call data that a proposal will execute if it passes. So there's a proposal, as you may know, has two parts. There's a human readable description, which is logged on chain, and also the machine readable part. So a proposal generally does stuff. It can execute any call that a normal account on Ethereum can execute. A proposal can do that, too, which makes these dows very generalizable and very powerful.
00:04:57.770 - 00:05:45.114, Speaker A: And then the last contract you see down here is the timelock contract, which does two things. One, it's the account of the DAO. This is the contract that's going to hold the balances of any assets the DAO has. It's going to have all the permissions the DAO has. If our DAO operates a DeFi protocol or a scalability protocol, the admin of that protocol is very likely to be this time lock contract. That's how DAOs like uniswap or compound work. And together we have these three contracts that each have their own responsibility, and they do separate things, but they are pretty composable, pretty modular, pretty standard, and there's lots of interfaces such as tally that play nice with a standard like this.
00:05:45.114 - 00:06:17.602, Speaker A: So you can launch a standard dow with contracts like this and then use it on multiple different front ends because of the widely adopted standard. But remember, this is only single chain. This pattern was designed about four years ago when the interoperability roadmap had not started. Sorry. The scalability roadmap had not started to play out. But there were these successful protocols run by big Daos, like uniswap, like Aave, like compound. And the protocols needed to start going multi chain.
00:06:17.602 - 00:07:25.318, Speaker A: Uniswap needed to deploy their pools and their pool factories on not just Ethereum, but Polygon and optimism and many other chains. And same story for the lending markets like Aave and compound. But they already had their Dao anchored in one place, and they had to solve this problem of like, who updates the risk parameters of Aave on Polygon? How do we set the fees for the Uniswap pools on optimism, especially since they had already promised that there was a token on Ethereum and that token would govern the protocol. They had to figure out a way to govern the protocol which now existed on many chains from their dao, which was only on one chain. And luckily that wasn't that hard, because we had these very generalizable primitives that the governor contract could make. Proposals that just call any function in Ethereum, they could call functions like pass a message across a bridge. So the governance would make a proposal to pass a message across a bridge to some other chain.
00:07:25.318 - 00:07:59.046, Speaker A: They would send a message to Uniswap on arbitrum, and they could change the fee tiers or change the fees for the Uniswap protocol running on a totally different chain than the Uniswap dao. So this is what I would say is like the first step, the phase one of multi chain Daos. And this has been happening four years. Ave's first cross chain governance proposal. Is this headline here from. Maybe it's too small to read, but from February of 2022. So this was already a couple of years ago.
00:07:59.046 - 00:08:48.338, Speaker A: Dows existed as multichain organizations, and uniswap last year did a lot of work to figure out what bridges were the right ones for the different types of Uniswap deployments. They've done a lot of thinking about how to safely and sustainably scale the Uniswap protocol across many different chains. And luckily, they had a pretty clear technical path to implementing that. They just needed to start making calls across bridges. It didn't require any big, smart contract changes. There was a pretty modular, composable way to do that from existing building blocks that worked, the existing Dow contracts, the existing bridge contracts. And there were certainly Ux challenges.
00:08:48.338 - 00:09:23.982, Speaker A: The fact that you had a protocol across many chains, and that we're making these calls across bridges, there are just a lot more states that a transaction could be in. It could be not yet sent. It could be in flight, it could get lost on the bridge. It could be confirmed on the other side of the bridge, or it could have failed. There could be an error on the other side of the bridge. So there's a lot of more cases to worry about. But those were fundamentally challenges that were solvable with better ux, better polish, better error handling.
00:09:23.982 - 00:10:25.462, Speaker A: Not a huge change to the security surface or to the smart contracts, but that system, which has been working for years, and this isn't kind of the contract picture of how the existing Dow contracts we saw in the first slide just plugged in some bridges on the bottom. And now they can govern a protocol on many different chains. But this doesn't fully take advantage of all of the new stuff. That's possible with multiple chains, each of which have different parameters and different trade offs. There's lots more reasons we might want to go multi chain after we've taken our protocol multichain, we may want to think about how we might take our Dow multi chain. We talked about at the beginning about we might be pulled there, right? Our protocol is moving to different chains. We want to govern it wherever it may be.
00:10:25.462 - 00:11:25.000, Speaker A: And that was the first part of the Dow that went multichain, is sending these calls. But now that lots of different networks all over the place have different trade offs, there are lots of good reasons to start pulling apart those three contracts. We saw the token, the governor, the time lock. We can start pulling pieces of those to the chain where it makes the most sense to put them based on whatever trade offs that we have here. So, for example, gas is a lot cheaper if you're not on Ethereum mainnet, but you're on a roll up or even a layer three, someplace with very cheap gas. And voting on chain does get expensive, especially on Mainnet, as Mainnet gets more congested. So we've seen that be a big draw for dows to start thinking about how they can navigate a kind of security and scalability trade off.
00:11:25.000 - 00:12:43.646, Speaker A: These roll ups, especially with different datability strategies, can have very cheap transactions. But we might not want to put the root of our Dow contracts there. Maybe we want the root of our Dow contracts on someplace very secure, like layer one ethereum, and then the cheaper things, like voting, could move somewhere more scalable, somewhere much cheaper, and then we can bridge the results back to the rest of our Dow on layer one. So this is, I think, a pretty generalizable pattern for all application developers now that we've got a whole menu of different chains with different security and cost trade offs to choose from. So as our applications get richer and our use cases expand, we're probably going to need to pick and choose between whether we want some actions to live on expensive and secure chains and other actions to live on cheaper chains that maybe make different security trade offs. And then there's also plenty of go to market reasons why you might want to be on many different chains for acquiring users. It's a lot easier to meet users where they are if they already have a wallet installed on a new network, they already have gas in their wallet on that network.
00:12:43.646 - 00:13:56.242, Speaker A: They already want to do something composable, right? They already want to do some swaps or buy a name or use a bridge. Your protocol and your Dow will have an easier time if it meets them there where they already are than trying to convince them to migrate their state, add a new network to their wallet and go get gas in some new chain. So it's just a lot more convenient for users to meet them where they are. And the nice thing about having a multichain dow is you can do that. You can just be in the same chain, the same network that a user already is, whether that's for ease of use or sometimes it's also for alignment. There are lots of very large ecosystems and communities that are very excited about particular networks or particular roll ups or particular layer threes. And if you're starting a new project or you're a project going to market on a new chain, being able to be aligned with the ecosystem that you're trying to build on is a very powerful go to market tailwind.
00:13:56.242 - 00:15:06.000, Speaker A: And the fact that a Dow can now be multichain makes it a lot easier for these projects to go figure out the best place for them to grow and not be tied to the chain that they started on and not be tied to one chain. Right. They can expand across lots of different ecosystems with lots of different activity and people doing interesting things. So that's the reason why we might want to go multi chain. And then I wanted to also talk a little bit about how we do that. What is happening under the hood, what do the smart contracts look like and what does the UI look like to actually get there? So to start, wanted to talk about how the token contract goes cross chain, and then we can break it out and talk through the other parts, the governance contracts, and eventually we'll tie it all together. So the first thing we have to do is if we're going to have a cross chain Dao, we have to have voting power and tokens on the different networks that we want our DAO to support.
00:15:06.000 - 00:16:17.058, Speaker A: So the hub token, the way we're going to do that is with a hub and spoke model. So we'll have two, let's start with two chains, and we could generalize it to more than two chains later. But there's two chains in this simple example, the hub chain is where the main token lives, and then the spoke chain, or in some cases multiple spoke chains, are where users can bridge that token. And tools like wormhole can make that bridging very easy and very seamless, like they have great native tooling for bridge tokens to live on the other chain and seem like a regular ERC 20 token to the users when they hold it on that chain. And the way that works in our Dow example is the hub token is a normal Dow governance token. It just has one upgrade, which we'll talk about in a second, that lets us lock the tokens in a bridge and then they appear on this spoke chain. And on the spoke chain, lots of people can have balances and they don't have to worry too much about what's happening on the hub chain.
00:16:17.058 - 00:16:45.626, Speaker A: And similarly, the hub chain doesn't have to worry about what's happening on the spoke chain. It just knows that there's some tokens locked in a bridge over there. There's something happening and it's all good. And because it's a governance token, we also have to, on both chains, keep track of the voting power. But we don't need a global view of the voting power. Each hub or spoke can keep track of its own voting power and its own delegations. And that secret sauce, that module that we can use is called flexible voting.
00:16:45.626 - 00:17:41.550, Speaker A: It's an extension to ERC 20 governance tokens that was built by Scopelift, a team that's built a lot of the smart contract tooling for governance, and that lets us vote on a spoke chain and then aggregate those votes. Maybe every single vote we could send back to the hub chain. Or it would be a lot cheaper if we didn't send them back one by one. But we batched them up and send them all back together as a voting total to the hub chain, and that's how we can split up. That's the interface boundary between voting on a spoke and voting on a hub. So the next thing we have to move to our other chain is the governance itself. So the hub governor can actually remain the same as long as it has of this flexible voting module.
00:17:41.550 - 00:18:31.326, Speaker A: All it has to do is know that some of the hub governor's tokens are locked in a bridge contract on the hub network, and that sometimes messages will come across a message passing bridge that say, here's some votes, ten votes yes and 100 votes no happened with the locked tokens. And the hub governor just updates its voting tally whenever it gets a new message. And that's the version with two networks. But it also generalizes. We could have many networks. So you could have a single hub and a bunch of different bridges, and on each the other end of each bridge, you have a bunch of different spokes. Rather one spoke on the end of each bridge, and we can get a lot of coverage this way.
00:18:31.326 - 00:19:59.626, Speaker A: We can take these pretty simple primitives that are battle tested and well known. We add some small extensions, and then now we can slowly generalize a small, simple working system to a larger and larger, more complex working system that lets us solve for the problem of how do we take our Dow multi chain? So, to review, once we put these pieces together, what can we do? What user benefit or Dow benefit is there to adding some new complexity, adding some new tools and bells and whistles? Well, like we could do before, we can still govern a protocol on multiple networks, but importantly, we can take a dow that's on a single chain that's maybe pretty expensive, we can give the users the option to move their tokens to a cheaper chain and vote there, save a lot of money. And importantly, we can also expand our token to a new network. So maybe a Dow wants to generate tokens for some incentive program on a new network where users are using their protocol. They can do that with this setup, and they can even do that on day one. If you have some protocol that's used, or some application that you want to be used across many different networks, you can launch a token, either the hub token or the bridge token, all over the place on many different networks. So that was hopefully a comprehensive overview of at a high level, how all these pieces work and how they all fit together.
00:19:59.626 - 00:20:46.450, Speaker A: But I'm happy to answer any more questions. If you have them, you can shoot me an email. And I also wanted to share some docs put together by Scopelift about flexible voting, and by wormhole about the token bridge docs and the relayer tools that they have built that powered this whole system. So I think it's a great example of pulling together different small primitives that are composable to build an application that both solves users problems and solves business problems, and hopefully also is an example of the kinds of things that we can build with multichain tooling to build multichain applications. So that's all I had for you today. Thanks for listening and happy to answer any questions after the talk if you have any. Bye.
