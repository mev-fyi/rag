00:00:00.170 - 00:00:19.680, Speaker A: Hi there, Jeff from Balancer. We're very proud to be sponsors of this year's e Denver. Be sure to check out our booth. We have 50,000 in, in bounties available, one of which concerns the topic of, of this talk. So if you're a hacker and you like money, may want to pay attention. Okay. All right.
00:00:19.680 - 00:01:05.066, Speaker A: So I'm not sure everyone necessarily fairly knows what balancer is and what it does. I've made that assumption before in the past and been wrong. So I'm going to start with a little intro of what we do and make sure we're all on the same page, and hopefully you'll be able to follow along better when we get to the main topic. So, one way to think of balancer is it's a generalized generalization of the AMM concept that's focused on asset management. So Amms were popularized by Uniswap in 2018. They offered two token liquidity pools with equal value tokens. So what balancer did first is parameterize these kinds of pools.
00:01:05.066 - 00:01:26.246, Speaker A: So instead of just 50 50, you could have 80 20 pools or 60 40. You could also change the swap fees. You could have a whole range, from very low to very high for different use cases, and you could make them dynamic. They weren't necessarily fixed. You could change the weights, change the swap fees. And of course, we supported more tokens. We had a constant product invariant that supported up to eight tokens on v one.
00:01:26.246 - 00:02:01.038, Speaker A: So right away, even doing nothing else, that actually supported a lot of different kind of products on the platform. 80 20 pools, for instance, had unique tokenomics and high fees. Swing trade pools. The mission of balancer is to be the primary provider of programmable liquidity. And the way you get there is to be a platform, not a product or a set of products. So not just different pools, but different types of pools. Each type of pool is its own primitive.
00:02:01.038 - 00:02:23.900, Speaker A: It can launch 1000 projects. So I'll go over just a few of the pools that we've primitives that we've already created. And this isn't the full list, and this is just ours. There's other pools that our partners have done. So to start with, we have liquidity bootstrapping pools. So those are used for fair token launches. And we've had several partners really take those and start running with them.
00:02:23.900 - 00:02:48.270, Speaker A: Copper and prime dow, for instance. And they also do smart treasuries. You can use that for that. We have stable pools with special stable math for trading stable coins with very low liquidity or very low or high liquidity and low slippage. We have both weighted and stable versions of pools that have oracles in them. So these are embedded oracles. You can query past prices.
00:02:48.270 - 00:03:28.170, Speaker A: Then we have boosted pools for capital efficiency, that's the subject of this talk. And managed pools that are coming soon. Those are pools that go more in the tradfi direction. So what are boosted pools? I mentioned they were capital efficient and they're a type of stable pool. So we already have a stable pool called stable three, has had pretty good liquidity, and it's just Dai, USDC and tether, hundreds of millions. And it enabled easy trading of stablecoins with low slippage, but they just kind of sat there, they weren't doing anything else. So we're migrating from that to what we call the boosted pool.
00:03:28.170 - 00:04:08.070, Speaker A: So this is also the kind of stable pool, we call it BBA USD. The a refers to Ava. So this stable pool is yield farming on AvA in the background very efficiently. In fact, about 95% of the liquidity is held in an AVA in a tokens, and about 200 million at the moment. So I'll talk about these from really three perspectives. What are the benefits to users? And here I mean like traders and lps, and then I'll look at the value to builders. So here, I mean the pool creators, either people making new, just launching new pools, or even making new pool types.
00:04:08.070 - 00:04:52.410, Speaker A: And then finally the opportunity this presents to integrators. So starting with users, what do traders get? Well, they get deep stablecoin liquidity first. We fully expect that most of the stablecoin liquidity on balancer will migrate to these yield generating pools. And the other thing you can do with these is direct swaps with a Tokens. So you can do swaps between dai and Adae, and even dai and a tether, and you don't have to leave the platform. So if you're a liquidity provider in this pool. So liquidity providers, of course, all of them have swap fee APR and many have liquidity mining, but with the boosted pool you also have the Ava yield that you're generating.
00:04:52.410 - 00:05:29.526, Speaker A: Now, of course you'll notice these aren't, we don't have 700% ape madness here, but that's because these yields are sustainable and balancers in it for the long run. And in the long run, we know that this era of liquidity mining and yield chasing won't last forever. And when the music stops, the protocols that survive will be those that can generate yield from sustainable long term sources. And that's also needed for mass adoption. That's where we're going. So if you happen to have a position in the existing stable three pool, we do have a migration tool. One click.
00:05:29.526 - 00:05:55.758, Speaker A: If you see this button, it means you got that? You can one click migrate. Maybe it's two clicks. Check the fees. It ain't cheap, but if you're a whale, it's definitely worth the migration. So how do they actually work, the boosted pools themselves? So I said it's a special kind of stable pool, and it's composed of an even more special type of pool called the linear pool. And these have many innovations. So first, the math is different.
00:05:55.758 - 00:06:21.730, Speaker A: They have an invariant that uses the balances and rates. So there's always a main token. If we use the dai example, the main token is dai, and then the rate of that is always one by definition. And then there's a wrap token. So we'll say adai, and that rate is relative to the main token. And then we have this virtual BpT, or it's called phantom in the code. And that's responsible for a lot of the swap magic that I'll be describing in a minute.
00:06:21.730 - 00:07:03.358, Speaker A: There's also a sort of funding rate mechanism that incentivizes rebalancing these pools, because you have, remember, these pools are composed of the collateral token and the a token, and you want to have enough collateral token to facilitate easy trading, but not so much that starts cutting into the yield. So I'll describe that. And then there's a little twist in there too, that derives from it being a tokens that I'll get to soon. So looking at the linear pools themselves, this is how they look. Now, from the outside, this looks like a normal two token pool. It has die and Adi. And the way pools usually work is you have a vault interface.
00:07:03.358 - 00:07:37.742, Speaker A: You interact with all the pools through the vault the vault has. You can swap, you can join, and you can exit. And they're separate things, separate calls. So normally, if you have a complex transaction that involves swaps and joins and exits, you can't do it in one transaction because you have to make separate calls. The vault is of course not reentrant. So if you're in a swap, you can't do a join, then. So what this does is there's a secret kind of third hidden token, and it's the bpt of the pool itself.
00:07:37.742 - 00:08:08.934, Speaker A: So it's kind of a self referential thing. So what happens when you deploy these is it pre mints all of its own BPT, and then it stores that in the vault along with the other tokens. So now what this lets you do is you're effectively joining and exiting just by a swap. Because normally when you do a join exit in a pool, the pool itself is minting and burning. So you transfer tokens in, they go to the vault. The pool mints BPT, and when you're exiting, you do the reverse. But here the BPT is a token of the pool.
00:08:08.934 - 00:08:39.922, Speaker A: So everything is a swap. And that enables you to do effective joins and exits right along with a bunch of other swaps. Now, I talked about the rebalancing, so there's like a lower limit here. You need to have enough tokens so that you can swap without running out, but you don't want too many or you'll cut into the yield. So there's a range in there where we call it the pool balanced. And in that zone, the free zone, there are no fees. So it's very efficient to trade in there.
00:08:39.922 - 00:09:34.190, Speaker A: But if someone does a big trade and unbalances it, then what happens is they do pay a fee. And unlike most pools where the fees accrue to lps, in this case the pool just, they just sit there accumulating in the pools until there's a counter transaction that rebalances the pool. And then whoever does that, the pool distributes those fees to that rebalancer. So that's what keeps these things in balance and keeps most of the tokens generating yield while also facilitating trading. And these rebalancers are also the people who are going out to Ava and doing the relatively expensive deposit and withdraw to wrap and unwrap the Ava tokens. And that makes it so that the retail users don't have to. Now the twist, we note that a tokens are actually rebasing tokens, and that means they can change their balances kind of asynchronously.
00:09:34.190 - 00:10:02.650, Speaker A: And that does not play well in the vault. The vault has its own accounting, and it does not expect balances of tokens to suddenly change. So that means you can't put a tokens directly in the vault, you have to wrap them. So the adai shown in there, in the linear pool is actually wrapped Adi. And we are using the standard Ava wrappers for this. And all that really means it's very cheap to wrap and unwrap these things. It's not like wrapping and unwrapping on Ava.
00:10:02.650 - 00:10:36.470, Speaker A: All this means is that if you have an external a token operation, so if you're passing in an a token or you're pulling out an a token, that, that needs a relayer. And we have a batch relayer for this purpose. And it's pretty transparent to users. The UI will know if you need the relayer or not. You do have to approve it the first time you use it, but it is just a signature, so it's pretty easy and transparent to users. And this is only needed because these are these rebasing tokens. If you had CDI or YDI or other things that don't require that we could put in the vault directly, then you don't need this.
00:10:36.470 - 00:11:10.510, Speaker A: It's a lot simpler. So that was the linear pool components of the boosted pool. But now we're going to look at the boosted pool itself. So remember, it's a special kind of stable pool. And the specialness is, it's again that virtual bpt that's just like the linear ones. So the stable pool is called a stable phantom pool in the code, and it is composed, the one we deployed is composed of three linear pool bpts and its own BPT. This layering here is, that's what enables the combinatorics.
00:11:10.510 - 00:11:52.794, Speaker A: So you can swap. If you're constructing a swap, you can swap within the linear pools and then between the linear pools within the boosted pool. So say you want to go from dai to atether, right? Ordinarily, if these were not this kind of pools, you'd have to be joining and exiting and wrapping and unwrapping everything. But here it's one transaction, one batch swap with three components. The first swap is within the linear die pool. You send your dai in, you get the BPT of that di linear pool. Now remember that the booster pool has these bpts as its pool tokens, and you got to get to the tether somehow.
00:11:52.794 - 00:12:29.338, Speaker A: So you can simply swap the DAi BPT for the tether BPT. Now you're in the world of tether, and then you simply do the final swap in the linear tether pool to pull out the AUSDT. And again, because we've got a tokens, you have this little battery layer step that's necessary for that. If you had other tokens, you wouldn't need to do that. So how do you build on these things? So we have it, it's out there, it's deployed. What do you do with it? Well, you can do a lot right out of the box. So, for instance, you can simply deploy your own pool with the boosted pool BBT and whatever token you want.
00:12:29.338 - 00:13:24.046, Speaker A: And immediately you get concentrated liquidity between your token and all six of these stablecoins, including the yield generating ones. Now, of course, it doesn't have to be a weighted pool. You could also deploy a metastable pool with the boosted pool API and some different stablecoin if you want to do a little more work. Remember, these are primitives, so you can build on lease, linear and phantom stables to boost a completely different set of yield tokens. In fact, we're working with overnight finance to build a 46 26 compatible linear pool when that comes out. So 46 26 is a standard wrapper for yield generating tokens. So if you have a 46 26 compatible wrap token, you can directly create a linear pool from it when we deploy this.
00:13:24.046 - 00:14:03.210, Speaker A: And then from those linear pools you can use the phantom stable to make your own boosted pools with any arbitrary lending platform. So very powerful. And then looking at the integration opportunities. So here I'm talking about aggregators and smart wallets, Zapper, Zeria and that sort of thing. The first benefit it has is it simplifies the operations or the pads that it has to do so rather than have to. It doesn't have to go out to all these different protocols. It can keep everything within balancer, doesn't have to go to curve and all these other places.
00:14:03.210 - 00:14:37.582, Speaker A: It enables just by itself, it enables very advanced applications. So we have a boosted USD pool. What if someone made a boosted euro pool? I don't think Ava wraps euros, but if somebody did and someone made a boosted euro pool, then you could do maybe a weighted or maybe a metastable pool of these two boosted pools. And now you pretty much have one pool that is basically a forex exchange by itself. Plus it generates a yield. So that's one of the things that's possible that this kind of technology and these primitives make possible. And now the interface to it now is kind of a work in progress.
00:14:37.582 - 00:15:17.410, Speaker A: We have a batch relayer and that's what's needed for kind of large swaps and these little wrapping and wrapping of the rebasing tokens. And it figures out all the details of how to construct the batch swaps and pass it into the vault. And then we have the Sor layer kind of on top of that. That abstracts that a little bit more and has a simpler interface. And then we have an SDK kind of on top of that. And we now have an SDK team that his entire job is to make this easy. So the SDK we're working toward having this SDK with a just dirt simple interface to all these complex functionalities and just make it very easy to use for integrators.
00:15:17.410 - 00:16:02.042, Speaker A: So I threw a lot at you there. I told you what I was going to say and I said it. And now it's time to tell you what I said. So what is the boosted pool value proposition again, from the user perspective? What do users get? They get direct swaps with yield tokens without having to go wrap and unwrap themselves. You also get deep, concentrated stablecoin liquidity and you have this organic sustainable yield that will withstand the test of time. If you're a pool creator, you get immediate, instant combinatoric stablecoin liquidity with whatever tokens you want. And of course you get the yield participation.
00:16:02.042 - 00:16:20.034, Speaker A: Also you get the benefit and all your lps get the benefit of that. And you have these primitives to work with. So these generalize. You can do completely new lending protocols, completely new yield tokens. Really, you don't even need to do yield tokens. The linear pool mechanism is very general. It really has to do with wrapping and unwrapping.
00:16:20.034 - 00:16:57.740, Speaker A: So if you had a token that had some other benefit for wrapping and unwrapping, you could probably do that and make the rates all one and make something else with it for the integrators. Their main benefit is the simpler workflow. And like I said, they don't have to go out to curve and then go out to Ava and then go to balancer. All goes within balancer and enables these kind of advanced trading applications that I've already described. So I think I might be almost out of time. But if there's any questions here.
