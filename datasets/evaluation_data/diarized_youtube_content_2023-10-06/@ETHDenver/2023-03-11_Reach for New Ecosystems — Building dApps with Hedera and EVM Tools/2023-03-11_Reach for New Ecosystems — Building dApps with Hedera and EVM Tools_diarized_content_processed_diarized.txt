00:00:01.610 - 00:00:54.538, Speaker A: All right, I want to start with this image from the Hubble telescope, right? Which was amazing, and it did the job of helping us explore and see the universe like never before. But it had some limitations, just like first generation tech tends to have. And that's why in general, as humans, we keep working to introduce next generation tech that allows us to do things better. Right? This is the same view, but from the Newark James Webb telescope. And this is a great example of how next generation tech allows us to see and do new things better like we never could before. And so that's what this talk is really all about, right? It's about expanding horizons. And so you're going to see how you can reach new ecosystems and also build dapps using EVM tools that you may already know on the Hedera network.
00:00:54.538 - 00:01:50.240, Speaker A: My name is Ed Marcus and I work in the developer relations group at Swirl slabs. And in case you're not too familiar with Hedera, we are a decentralized, open sourced, pos EVM compatible public ledger or layer one. And we're actually one of the few public dlts that use a leaderless consensus algorithm that also achieves the highest degree of security possible, which is asynchronous BFT. But I'm going to tell you more about Hadera towards the end of the presentation. So in the next 20 minutes or so, we're going to start by focusing on the challenges and choices that web three developers have in a multichain world. We're then going to see a very quick demo of how to EvM on Hadera using familiar tools like hard hat. And then in the final stretch, we're just going to share a bit more about Hadera, and then we'll see some conclusions as well.
00:01:50.240 - 00:02:56.362, Speaker A: So let's start by looking at two problems that come with this explosion of so many layer ones and layer twos, right? And these are problems that also touch many teams out there. So the first one is that end users in web three, they're scattered, they're all over the place. You can see them across many different networks and also many different ecosystems. So naturally, web three developers are building these crosschain applications to reach a wider and also more diverse user base. But with that deployment of multichain or crosschain applications also comes the challenge of having to choose and prioritize the networks that you deploy on. And so those dev teams have to consider a lot of things, right? Among those is interoperability, so they have to take into account differences at the technology or the protocol level. Also, user experiences, right? If you want to provide a consistent user experience, you have to understand the nuances, the issues and the functionality of each one of those networks.
00:02:56.362 - 00:04:36.594, Speaker A: You have to consider business models. Can you even monetize the DAP with the price and payments mechanisms of the networks that you're targeting? And also other things like network effects and the reputation or brand impact on your application, right? An application is just as robust and secure and accessible as the network that is deployed on. So if this is something that your team is facing, my question here is, how do you prioritize those additional networks that you have to deploy on? Right? Do you have well established criteria to help you make that decision? And are you considering also the right things? Now, if we look at the second problem, that is where developer teams find themselves having to migrate their application completely to a new network. And with so many options available, choosing the right network or the best network for your application is a complex, multifaceted decision that requires careful consideration in looking at trade offs between many different criteria. And it's interesting because teams may need to migrate their application due to many reasons, right? It could be technical issues with their current network. Maybe they just want to improve the reliability, the security, or the performance, or the cost or their carbon footprint could also be due to stale ecosystems, or due to stale communities, or maybe even lack of funding opportunities. And also it could be due to issues with governance, right? Maybe there are governance practices that threaten the security or the future of the application that you're building now.
00:04:36.594 - 00:05:46.390, Speaker A: Regardless of the reason why you have to migrate, having so many options is both a blessing and a curse, right? On the one hand, you have all the freedom to choose the platform and evaluate the platform that is going to best meet the requirements and constraints for your application. But on the other hand, you also have to consider all those trade offs that we talked about, right? So it's something that introduces uncertainty and confusion, and you also have to evaluate whether the development tools that you're used to or that you prefer are available in those new ecosystems. So the big question here becomes, how do you decide on that best option that is going to meet the requirements for your application, right? And these are challenging questions that for most teams require a decent amount of thought. And many teams are facing this. Maybe your team is one of those facing these decisions. So what are other teams out there doing? Fortunately, other teams have also gone through this process, and many other teams out there are choosing Hedera as a platform to migrate or deploy their cross chain applications on. And here are a few examples and use cases we have stator.
00:05:46.390 - 00:06:38.998, Speaker A: This is a multi chain, liquid staking platform. And they have deployed on other networks like avalanche or near phantom and a few others. And over the past year they have decided to expand their horizons on the Hedera network as well. And now they hold a significant portion of the TVL on the network. Pangolin is another example of a multi chain application. Right? They are a Dex that is present in other networks as well, like Avalanche, Polygon, and now Hadera cloud art is a web three project that migrated from Polygon to Hedera because they wanted to build their solution on a more reliable, performant and sustainable platform. And what they do is they enable web three content creators to tokenize their most valuable social media content as nfts and that way unlock new revenue streams.
00:06:38.998 - 00:07:39.054, Speaker A: And NFT royalties are not even a concern here, because on Hedera those NFT royalties are configured and enforced at the network or the protocol level. And then we also have proven DB, this is a data integrity solution that migrated from Ethereum to Hedera, and they basically provide tamper resistant data integrity or storage for data and documentation, right? And so they enable tracing the origin, the ownership, the versioning and the security of those artifacts. And that's a critical workflow for certain regulated industries. And they were also acquired recently by one span. Now, it's not just those four use cases that have migrated, there's dozens of others, and here are a few others in the areas of collectibles, cross chain bridging, gaming, and also tokenization of carbon offsets. And these are some of the key reasons why these teams are choosing to migrate to Hedera. Right.
00:07:39.054 - 00:08:27.210, Speaker A: Top of mind is that access to ecosystems and communities that are seeing exponential growth and also great funding opportunities. There's also the sustainability and the stability aspect. These are teams that are committed to delivering a superior experience to their users. And on Hedera, they can reduce their fee structures, they can plan business costs, and all while improving or maximizing the security and the performance of their application. And they also migrate because they want to minimize the downtime of their application. And since there's no leader node on Hedera, there's no central point of failure to attack. Whereas in other leader based networks, you can compromise entire network by just attacking the single leader node.
00:08:27.210 - 00:08:55.522, Speaker A: And so that's the why for these teams. If we look at the how, let's take a brief look at the demo. And so in this demo, we're just going to look at three key steps. First, we're going to deploy a contract and then create a token. And so basically our contract is going to serve as a faucet for our fungible token. This is going to be a native Hedera token. And then once that contract is deployed, our token created, then anyone can interact with our contract.
00:08:55.522 - 00:09:29.170, Speaker A: And the way they're going to do that is they're going to call the contract, pay five hbar. Hbar, by the way, is the native cryptocurrency of the network. And then the contract is going to perform a transfer of 100 tokens. But notice that that happens in two steps, right? The first one is to associate the account and the token. This is a unique benefit of the Hedera network that basically eliminates NFT spamming. And then after that we perform the transfer. And then the third step is going to be to inspect the transactions and our activity on a network explorer.
00:09:29.170 - 00:10:23.166, Speaker A: So here we start with our solidity contract. Here you see that we have our standard pragma statements. We also have these import statements because we are working with the Hedera token service that allows people to create tokens without contracts, or also with contracts in this case. And then here we have the contract definition and we also have some properties for our fungible token. You see this is just a set of fungible points for attendees of the conference. And then you can specify additional properties like the maximum supply, the initial supply, and so on. And then you'll notice that down here I also have two functions for this contract, the constructor, which is what creates our token once we deploy the contract, and then this claim tokens function which anyone can call once that contract has been deployed.
00:10:23.166 - 00:11:19.430, Speaker A: Now there are collapse. For simplicity, that's all we can cover in this amount of time. But once we go into our visual studio code to execute our Javascript test, what you see is that we import the necessary libraries. So heart, hat and chi, we describe our test and then once we execute that with the right hearthat command, what you see is the first task executes, which is deploying the contract. And our test basically is to see whether that contract address is not null, right? So what you see as the result is that we receive a contract EVM address back and our test has also passed. If we execute the second task there, you see that we should be able to call the contract and then receive the tokens. And that is also the case.
00:11:19.430 - 00:12:03.170, Speaker A: Now the test is to make sure that that block hash is not empty and so we can confirm that in the output as well. So we receive a block hash and therefore, our test has completed successfully. Now, it's a simple test, but you get the idea, right? You can automate these workflows, you can test your logic and your contracts with these tools that you're already familiar with. Now let's also inspect that activity in a network explorer. It's called hash scan, and that basically shows you the properties of the entities that you have created. In this case, the contract that we instantiated, and also the transaction activity related to that entity. And then I also mentioned a block.
00:12:03.170 - 00:12:34.430, Speaker A: So in Hedera, these blocks are virtual. There's no notion of blocks. But for EVM compatibility purposes, we treat a block as a time window of 2 seconds. And so you can actually see all the transactions that are packed in that time window. And there you see in the middle the association transaction and also the transfer of 100 tokens. So there you have it. That was the example, right, where we deployed a contract, created a token, and then interacted with that contract, and inspected all those transactions that occurred on chain.
00:12:34.430 - 00:13:07.378, Speaker A: So now let's jump into the third and final part of the presentation, right. Let's share a little bit more ABoUt Hedera and some conclusions. So if you're new to building on the network, there are some unique benefits at the technical level that may be worth remembering. The first one is leaderless consensus. Now, you may be wondering, why does ThAt matter? And it matters because of fairness. It guarantees fairness. The whole point of a ledger is to order transactions and record that order as well.
00:13:07.378 - 00:13:55.430, Speaker A: And so by eliminating leader based moments, no single node can actually exclude transactions from being processed or delayed them in a significant manner. So Hedera provides fairness of access and fairness of order. I also mentioned before, token and account associations. This is one that our developer and our user community loves because it basically eliminates concerns like NFT spamming. And so users can link their account to the tokens that they want to transact, and they only receive and transact those tokens that they opted in, right? So they can keep their account secure. And you can also handle these associations automatically if you want to participate in airdrops. So it's a very well thought out balance between account security and flexibility.
00:13:55.430 - 00:14:42.470, Speaker A: Builders can also choose the different types of keys, right? The key, that cryptographic key that best meets their requirements. So whether they want post quantum security, higher efficiency, or just EVM compatibility, they can get that with ED 250, 519 keys and also ECDSA keys for their Hadera accounts. And finally, Hadera also supports multisig out of the box. So if you need more than one approver for transactions. It's straightforward to do that. On Hedera, you can actually have key structures that match many organizational structures in the real world. So you can have key lists if you want to have all approvers sign your transactions, maybe a threshold if you need three out of five, and also nested structures if you want to have signatures at different levels.
00:14:42.470 - 00:15:44.010, Speaker A: And now you may be thinking these features and benefits and capabilities are cool, but what does Hedera provide that can help me as a web three builder? And so, to answer that, let's zoom out a little bit and look at the entire stack, from the consensus algorithm all the way to what the end users actually get, right? So at the heart here we see the consensus algorithm running on the mainnet nodes. And at that level we also have mirror nodes handling all the transaction history. Then on top of that foundation, you see three core services that developers use. So we have one for consensus. This is basically a notarizing or timestamping service that enables creating immutable and verifiable logs. And this is heavily used in use cases like supply chain. There's one service for tokenization, so it allows you to create fungibles and also nonfungible tokens with or without smart contracts.
00:15:44.010 - 00:16:48.810, Speaker A: And of course, all the flexibility and programmability and automation that you can do with smart contracts. And then with that first part of the stack, you also see the Hedera governing council bringing decentralized and transparent governance to the operations of the network. Now, on top of that foundation, that's where the use cases are built by developers in the areas of data integrity, tokenization, decentralized identity payments, supply chain, gaming, sustainability, you name it. And those are the applications that end up delivering the value to the end users, right? Whether it's an individual, an enterprise, a government, or even IoT devices on the edge. So in a way, you can think of Hedera as software infrastructure, right? As a matter of fact, it's green infrastructure because it does not expand your carbon footprint. And that is because Hedera is actually a carbon negative ledger. So the network consumes a very small amount of energy, and that also results in a very small carbon footprint.
00:16:48.810 - 00:17:46.546, Speaker A: And so after that we buy certified and verifiable carbon offsets to actually go negative. And not to mention the network also enables dozens of use cases that encourage transparent accounting and responsible practices in the areas of sustainability. Now, in terms of energy consumption, this most recent study by University of College London actually found that the energy consumption of the network is three millionths of a kilowatt hour. And just to put that number in context, with the same energy that it takes to do one visa transaction, you can actually do more than 1000 Hedera transactions. So it's orders of magnitude, right, in terms of the efficiency improvement that that represents. And finally, we know it's not just about the tech, it's not just about the services and being green. We know that builders also care about the community and the ecosystem and funding opportunities as well.
00:17:46.546 - 00:18:34.014, Speaker A: And so for what it's worth, Hadera actually has the largest ecosystem development fund in web three. That's called the Hbar foundation. And we're also very happy with the growth and the adoption that the network has seen in the past three years since going open to the public now, we have over 15,000 developers attending events, hackathons contributing on discord, hundreds of web three and enterprise dapps deployed in production on Mainet. And on average, we're processing more than 500 transactions per second. And those are real user submitted and user paid transactions that come from an end user or an application. And that's added to a total count of more than 4.5 billion transactions processed to date.
00:18:34.014 - 00:19:43.634, Speaker A: So in terms of accounts and adoption, we're almost at the 2 million mark of accounts on Mainet, and we're also seeing pretty good growth in 2023. And there to the left, you also see many of the players and contributors that are choosing Hadera to build and deliver value. All right, so in summary, even with dozens of options, right, we're seeing a lot of web three developers deploy on Hedera and build on Hedera to reach new ecosystems and also to reap the technology benefits, and all while using those EVM tools that they already know. So we started by going over how choosing and prioritizing a network can be a challenge for multichain developers. We also mentioned how migrating an application completely can be a complex decision, and those are things that many developers face. We saw some examples of teams that have decided to migrate to Hedera facing those same challenges and some of the key reasons why they made that decision. And then in the second half, we saw a brief demo of how you can build on Hedera using those familiar EVM tools like hard hat.
00:19:43.634 - 00:20:18.398, Speaker A: And then in the final stretch, we learn about what Hedera has to offer in terms of benefits, services, the negative carbon footprint, and also the thriving ecosystem. So from here, I guess the next step that you can take is just to try it out, right? It's free of cost and free of risk. So if you sign up for an account on this hadera.com portal, you'll get 10,000 test age bar every 24 hours to take your application for a spin. And then you can graduate to deploy on mainnet and pay real hbar. And we know that community is everything. So you can always join our developer discord.
00:20:18.398 - 00:20:52.710, Speaker A: Also get in touch with our Hadera experts, our Hedera community, and this is our developer relations team. We'll be at booth five five for the rest of the week. So come talk to us and yeah, take those simple steps and remember to keep building, keep expanding those horizons and reaching new users to create things that we've never had before. So with that, I want to thank you for your time, for your attention, and if there are any questions, happy to take those. I think we have a few additional minutes. If not, we'll be in the back of the stage. All right, thank you.
