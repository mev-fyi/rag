00:00:00.170 - 00:00:09.680, Speaker A: From API tree dow. He's going to be talking about super relevant topic, super new topic, oracle extractable value. So yeah, let's give Ugar a warm welcome.
00:00:12.290 - 00:00:43.946, Speaker B: Test one, two. Perfect. Thanks for having me. The title sounds very intimidating, but I tried to break it down to non technical parts as much as possible. It basically just describes oracle system that pays you for using it. So I'm Ugor leading strategic efforts at API three. And what is API three? We are basically just an Oracle project that does things slightly different.
00:00:43.946 - 00:01:27.190, Speaker B: So imagine price feeds, but instead of being operated by intermediaries we go to the data sources and make them operate the Oracle directly. So instead of getting data from somebody that gets it from Coingecko, we go to Coingecko. And Coingecko runs an Oracle directly. Price feeds are a very competitive scene and there isn't a lot of money to be made in price feeds, which is why we decided to dive a little bit deeper into a separate topic. Which brings us to OEV. OEV is simply a subset of mev and similar to meV, it's a rather big industry. It describes value that can be extracted due to Oracle updates or the lack of Oracle updates.
00:01:27.190 - 00:02:00.446, Speaker B: Sounds complicated, but I'll give you a very simple example. Every one of you probably knows GMX here, derivatives platform. So you can 50 x long eth. And the rather unique thing is that you don't take that trade against an order book. You take it on the basis of Oracle prices, which means on the Oracle price without any slippage, you can go 50 x long. The core issue is that Oracle updates are visible in the mempool. So what you can do quite easily is you can look for the Oracle updates.
00:02:00.446 - 00:02:37.002, Speaker B: You see one in the mempool, you place your 50 x long before the Oracle update. You wait until after the Oracle update and you close your trade and you profit always. And there's nothing that the protocol can do to prevent you from this. On the right side you can see a tweet about this from chainside. It was a thread explaining this issue on GMX. It was going on for 40 days and they were consistently able to essentially take away 10% of the profits of GMX, which amounted to like a quarter million during that amount of time. So it's a big industry.
00:02:37.002 - 00:03:16.940, Speaker B: How big are we talking? In this presentation I tried to narrow it down to lending protocols. If you look at the big lending protocols, Ave has already lost well over 100 million to oev. Compound is slowly closing in at 100 million. And Venus on BMB chain also lost roughly over 60 million. So, just to explain what oracles have to do with a lending protocol. So oracle transactions on a lending protocol determine the worth of your collateral and your health factor. What that means is you deposit some ETH, that ETH has some value, and you're, for instance, allowed to borrow 80% against that.
00:03:16.940 - 00:03:56.054, Speaker B: At some point that collateral value might drop with ETH price going down. So your loan to collateral value essentially drops, and at some point you become liquidatable. Typically, the calculation mean, in a calculation way, this means you have a health factor. When it is above one, you're good. Once it drops below one, you're not good anymore, and you can be liquidated. All of this is determined by oracles. And once you become liquidatable, as you can see on the right side, what typically happens is that people are incentivized to liquidate you by being offered 5% to 10% of your collateral value.
00:03:56.054 - 00:04:50.934, Speaker B: And that is, in effect, the value that protocols like AVA and compound are losing. So you get liquidated, so you lose a bunch of money, and on top of that, you also pay 5% additionally to somebody liquidating you. Just to explain the flow a bit. So typically for you to get liquidated, the first thing that happens is that the oracle updates on chain and initiates the change that drops your health factor below one. Once that happens, a bunch of people essentially monitoring the health of positions see that you have a liquidable position, and they oftentimes, or most of the times, compete for that value in blocks based auctions. In those auctions, they try to get their transaction included first and bid a lot of money for that. And once that block goes through, the user essentially gets liquidated.
00:04:50.934 - 00:05:35.734, Speaker B: The person liquidating makes profit, and they have to pay whatever they bribed, so their transaction gets executed first. So how much are these people that look for your liquidations earn? There's a pretty good mev book by monoceros that goes into that, just a quote out of that book for you. So liquidations are highly competitive as a strategy, and they are simple to perform. This means that it's quite common to see liquidations paying up to 99.9% of their revenue to the validator. So what does that mean? Quite simply, this means on the right side you see one of the biggest liquidations happening in January. On the average protocol v three, somebody got liquidated for roughly 4.2
00:05:35.734 - 00:06:19.814, Speaker B: million. The reward for that liquidation was 141,000. So just for liquidating the position, you would have gotten 141,000. But at below, you see the cost to execute this. So somebody had the chance to make 141,000, but they bribed somebody else almost equal amount of money so that they are allowed to liquidate that person and they made $60 in that process. So this means lending protocols like Ava offer you 141,000 and the people actually liquidating you are giving away almost all of it. They are fine making $60 on a $4.2
00:06:19.814 - 00:07:05.578, Speaker B: million liquidation, but AVA is giving them 141,000. And all of this is actually only possible because the oracle ignores that this value is there. Theoretically, the oracle project can update and liquidate in the same transaction, which means that all of this, what happens on the right side won't even happen. We could update and liquidate. The major issue why a lot of oracle projects don't do that is it centralizes liquidations. If the oracle project always updates and liquidates, other people will stop looking for opportunities. Which means that if the oracle project ever fails, the lending protocol will not potentially liquidate that position and incur losses.
00:07:05.578 - 00:08:16.870, Speaker B: So how do you take advantage of this privileged position while still keeping it somewhat decentralized? Or like rather, let's talk about the status quo before I talk into that. So we established that the fees are too high, average is paying way too much, which is evident by 99% of that being given away. And the oracles hold all the power, but they didn't execute it thus far because of centralization risks. And what we've been working on is essentially a system that simply takes the auctions that happen on a block space level and move them to the oracle level. And in simple terms, this just means instead of closing your eyes and blindly updating the oracle without caring what happens on the chain afterwards, you allow people to compete for the updates that have value and pay for them essentially in the same manner, depending on the value that is available on chain. How we do that is through something called the OEV network, which is a market for oracle transactions. In essence, it's a Zk rollup that is purely there to auction off Oracle updates.
00:08:16.870 - 00:09:22.650, Speaker B: And the entire system works like this. Imagine you have oracle nodes and they maintain a data feed on mantle, which is the ETH USD price feed. For instance, at 1% deviation we delay the data by 15 seconds and additionally these same oracle nodes push their data in real time to what we call the OEV network. This is our ZK roll up that essentially auctions off real time data. What can happen now is that when people see valuable positions on chain, they can go place bids on this network like searches, see somebody that is liquidatable at 3000 e, they place a bid at 3000 e, the price actually drops to 3000. And then the OEV network awards you the win. You get a transaction, which I'll go into later, and you can take this transaction and update the price feed.
00:09:22.650 - 00:10:22.142, Speaker B: So the price feed is not only updatable by the oracle nodes, they can also sell cryptographically signed data that allows external people to update it. And everybody can compete for these updates to dive a little bit more into it. So what happens on this ZK rollup? Like I mentioned, it's auctions, auctions, auctions. Every DAP uses a specific data feed, and auctions happen for each data feed on each network that each DAP uses. So essentially, like you see here, there are different auctions that happen for a DAP like init than they are for a DAP like compound than there are for a DAP like Venus. And even if all of these were compound essentially data feeds, since they all happen on different networks or different data feeds, there are different auctions happening for them. Like we mentioned, real time data is pushed onto this chain whenever somebody wins an auction.
00:10:22.142 - 00:11:40.646, Speaker B: And the data that they get is a meta transaction that includes a lot of things, but I tried to break it down. So essentially this transaction has how much did this person bid, which is enshrined in it, on which blockchain did they win? For instance, mantle or arbitrum? For which data feed did they win? So which DAP utilized data feed? That is the OEV proxy, and then that's signed data. Sorry for that. All of the oracle answers that allow them to update the data feed, they're only allowed to update the data feed when they, in the same transaction, transfer the money that is up there, which goes directly back to the DAP. So just to get back to this example that I've shown there, if somebody would have won over the OEV network, the update rights for that liquidation AvA would have essentially been paid back 141,000 of the 141,000 that they've given out. And what do you do once you have such an immense new source of revenue? You could use that money to essentially build an insurance fund. You could put it into your treasury, you could distribute it to lenders or to stakers.
00:11:40.646 - 00:12:17.398, Speaker B: But ultimately, and this is a bit of a personal opinion, obviously every project will potentially integrate this however you want. However they want. But the money comes from users that are being overcharged for liquidations. So the natural thing would be to return that money to the users. So instead of using a lending market that charges you 10% on a liquidation, you could have one that tries through these auctions to recuperate most of what they're overcharging you. And you could end up with a lending market that charges you 0.1% as fees instead of ten, which is quite huge.
00:12:17.398 - 00:13:00.520, Speaker B: And it's my personal belief that lending protocols that do this create a more efficient market which will attract more people. Because why would you use one that penalizes you for 10% if there is one that doesn't? This concept is quite similar to something like MeV blocker. I'm not sure if a lot of you are familiar with this picture. It is from a product called MeV Blocker. It's essentially a product where you change your RPC to their RPC. They promise not to extract MEV from your transaction, from your transactions. They actually execute all potential MeV that happens through your transaction and give you 90% back and keep 10%.
00:13:00.520 - 00:13:44.910, Speaker B: All you have to do is change your RPC and you're essentially MeV protected. And if there is meV, you essentially earn it back through them with a small cut for them. The OEV network is quite similar in that. So instead of utilizing an oracle that is effectively blind, you utilize one that is allowing other people to extract or to bid for oracle updates. So you simply integrate a data feed like ethusd, you get improved granularity through that integration because people can pull real time data whenever it matters most instead of just waiting for oracles to update. And you get paid in the process. And you can achieve all of this quite literally.
00:13:44.910 - 00:14:14.190, Speaker B: And it is very much that simple. By reading a new data feed contract. That is it. All you have to do is read a new contract and that allows auctions to happen for your data feed. On this L2 that we have, and whenever there are opportunities like a liquidation that you saw on ave, the winning party will pay you once they execute that. This is basically already my last slide. It was quicker than I anticipated.
00:14:14.190 - 00:15:12.062, Speaker B: This is something that you can try today. We have bounties live for the buildathon and we essentially created on the sepolia network a AvA fork with 1000 positions. And we created a fake data feed that every hour will drop in price. And you can essentially, over the OEV network, bid for Oracle transactions, take them whenever you're able to liquidate someone. And once you liquidate that position, you get fake OEV tokens and the winning team is the team with the most OEV tokens at the end of the day. So it's different positions with different amount of OEV tokens and you can compete for Oracle updates with other people that are competing here, and you can win up to $11,000 in bounties for that. On the right side is a QR code if you want to scan the challenge and participate, and that is pretty much it.
00:15:12.062 - 00:15:31.910, Speaker B: If you have any questions, feel free to come up here. I've been told to ask the questions into the microphone. If not, that's also fine. You, you.
00:15:33.480 - 00:15:39.510, Speaker A: Thank you very much. Guru. Super interesting. Yeah.
