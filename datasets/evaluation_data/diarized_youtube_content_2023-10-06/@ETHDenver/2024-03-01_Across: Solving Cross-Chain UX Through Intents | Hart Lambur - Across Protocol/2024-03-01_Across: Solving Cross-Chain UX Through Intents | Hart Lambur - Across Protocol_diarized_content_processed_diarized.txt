00:00:47.960 - 00:01:22.170, Speaker A: And I don't think really anyone disagrees on this. The question is all about how we get there. And there's sort of a model around what interop should look like. People are modeling it after TCIP. They think that blockchains should talk to each other the way servers on the Internet talk with each other. It's cheap, seamless, don't even ever have to think about it. And while I agree that this model is really appealing, I'm not so certain that it's accurate or that's the way it's going to work.
00:01:22.170 - 00:02:03.028, Speaker A: The core thesis here is that people think bridging should be like sending a message. You have two blockchains, blockchain A and blockchain B. You want to move value between them or move an NFT between them. You just send a message, right? Connect these two chains, send a message, you're done. But the problem is that sending messages quickly, cheaply and securely is basically impossible. This is something people have been working on for a long time and it hasn't worked. Bridge hacks, all sorts of cost issues.
00:02:03.028 - 00:02:32.000, Speaker A: It's problematic. And if you step back and think about it, it makes sense. It's like this trade off, this trilemma between these three things intuitively makes some sense. If you want to do something fast, it's going to cost a lot. If you want to do something securely, it's going to either be slow or expensive. Doing all three of these things at once is just really challenging. So the solution is just to stop sending messages.
00:02:32.000 - 00:02:59.064, Speaker A: That's the core idea from how across attempts to use intents and this intense architecture to communicate between blockchains. So there's an observation we can make here. TCP IP is equivalent to moving bytes. It's just moving messages between servers. But blockchains are really about moving value, at least mostly. Mostly is in brackets. We can come back to this.
00:02:59.064 - 00:03:37.830, Speaker A: 95% of what people care about when they're interacting on blockchains involves some sort of value transfer. It's a swap, or a swap plus an action from the interop space. It's bridging an asset, usually the same asset, from one chain to another. This is what people want to do. And if we're trying to move value, at least most of the time, the observation here is that value is fungible. You don't care about how your money got somewhere, you just care about the dollars actually getting there. And this is our mental model of why this intent framework works so well.
00:03:37.830 - 00:04:07.384, Speaker A: The idea in bridging with intents is that you don't actually send a message. You don't send a message from blockchain A to blockchain B to move value between them. Rather you have a third party. I call it a solver in a cross. We often call it a relayer. And this third party, or this collection of third parties are watching blockchain A for deposit transactions. And when those happen, they fill the user on blockchain B with their own capital.
00:04:07.384 - 00:04:39.530, Speaker A: They send money to the user on blockchain B without sending a message. And when you think about it, okay, this makes sense because we're moving value. It's fungible. We don't need to send a message, we just need to fill the user. And from a user's perspective, this can be great because solvers can fill them very quickly. And that's the core idea. With a crosschain intent, solvers are using their own capital and they're filling users quickly and cheaply and then getting repaid later.
00:04:39.530 - 00:05:19.228, Speaker A: And so the cross view of what cross chain intents looks like, it looks like a cake. This comes from some memes that near foundation and the frontier research guys are doing. But the idea is that there's three layers to the stack. There's three layers that users care about. There's the top layer, the intent layer. What does the user want to do? In this case, it's usually move value from blockchain A to blockchain B, swap an asset from blockchain A to blockchain B, or swap plus do an action. And at that intent layer, users are going to articulate what their intent is.
00:05:19.228 - 00:05:57.996, Speaker A: We're going to talk about what that might look like in a second, but they're going to articulate what their intent is and they're going to send it to some source, an RFQ system, an aggregator, some input source, where then in the second layer, solvers compete to fill them. They compete to fill them with their own capital. So they see this intent and they say, hey, user, I'm going to fill you on blockchain D and do exactly what you want. And I'm going to do this without sending a message. I'm going to use my own capital to fill you and execute you and complete your cross chain action. And the second layer is maximally competitive. And this is part of the reason why this is so cheap.
00:05:57.996 - 00:06:32.030, Speaker A: The solvers are all competing with each other to fill the user cheaply and quickly. At this point, the user is happy. At this second layer, they're filled, they're done, they move on with their day. Of course, the solver, though, isn't yet happy. They've made a loan and they haven't got paid back. And that's the third layer, what we're calling the settlement layer, where the user funds on the origin chain are escrowed, and they're held there until we verify that the intent was fulfilled. And at that point in time, we repay the user, sorry, repay the solver and send them back their money.
00:06:32.030 - 00:07:11.050, Speaker A: So it's worth going through why this intense framework works so well. Intense can be really fast, and according to our data, the across bridge average fill time is one to three orders of magnitude faster than message based bridging systems. In this chart. I think you guys can see this. I'm looking at the median l two to l two fill times of across Stargate and CCTP. Across's median fill time is about 7 seconds. And there's room for this to get a lot faster still.
00:07:11.050 - 00:08:15.070, Speaker A: And we are just so much faster than message based systems, because solvers are able to take on finality risk. They can fill a user as quickly as they see the deposit transaction, and they do not need to wait for the origin chain finality, unlike a message based protocol, which simply cannot send a message between chains until we have some origin chain finality. So this intent framework allows solvers to compete on speed and actually assume some finality risk, allowing for users to get much, much faster fill times. The second advantage is related to security. So this slide is a little text heavy. But the important concepts here is that in this framework, where solvers are filling users with their own capital and getting repaid later, what we've essentially done is we've separated the architecture between in two parts. There's the urgent part of getting the user their fast fill, and then there's the complex part of doing the cross chain messaging, or figuring out if that fill actually happened.
00:08:15.070 - 00:09:16.560, Speaker A: And by separating these two parts into the urgent part and the complex part, we're able to take our time and kind of expand the design space of how we do the hard part, how we do the complex part. And from our perspective, this intense based bridging framework, we can verify intents using any number of techniques. We can use the canonical bridges that roll ups use to talk to Ethereum. Layer one, we could use ZK proofs, which are expensive and take time to generate, but it doesn't matter if we have time to waste. Or we can use optimistic systems, which again, have really elegant security guarantees, but take a lot of time to verify things. And so the argument here is this intent framework can allow us to maximize security by separating this complex part from the urgent part. And the third advantage here is intents can be really, really cheap.
00:09:16.560 - 00:10:09.996, Speaker A: And this is some data on the cost, the average cost of a cross to move from ethereum layer one to a roll up, versus Stargate and CCTP. These costs vary with gas fees. But the overall point here, this is the 90 day data set, overall point here is across as cheap, and it's really cheap, well, being faster than these other solutions. And there's a fair bit of complexity here around all the optimizations we do to make this cheap. But at a high level. What across is able to do in this intent framework is to batch the verification that these intents occurred. So rather than verifying each individual transfer, we can batch them over a 1 hour period and be like all these intents did, in fact occur over that period.
00:10:09.996 - 00:11:05.844, Speaker A: And then we can optimistically verify those intents, which allows us to maintain high security guarantees while also very cheaply verifying what happened. The trade off here with the intent framework is that these solvers are making short term loans. These solvers are fronting their own capital to the end user, which is how it gets to be so fast. And so what we really need to do, if we're going to do a proper kind of cost analysis, is we have to look at all the cost savings we achieve by reducing messaging against the cost of the loan that the solver is making. So this is just a sort of theoretical example here, where let's pretend we're bridging $50 million in volume over 25,000 transactions. So an average transaction size of about $5,000. This is something that across does.
00:11:05.844 - 00:11:52.992, Speaker A: Today we do 50 million in volume. Relatively routinely, volumes have been going up, and we can just do a comparison against a message based system like Stargate. Not picking on Stargate, just an example here. And in both designs, we are going to have the user, there's no way we get around the user making a deposit transaction and the protocol, or the solver making a fill transaction on the destination side. So there are gas costs coming in and out that are simply unavoidable. But what we can compare is the difference in verifying those fills and in the intent bridge that across has. We have solvers extending loans for about an hour.
00:11:52.992 - 00:12:58.600, Speaker A: And if you think about the cost of a 1 hour loan on $50 million, at a 10% annualized interest rate, that's $500. It's a very small amount of money to make a loan for that short a period of time. And then because of the way across batches, things, we only need to send one message every hour, period. This is hypothetical, but we're really sending like a handful of messages every day to support this $50 million of volume. And so those messages, we're using canonical message bridges to pass those messages from Ethereum main net back to the spokes. And our cost here, I'm estimating at about $1,000 of total verification costs for this entire $50 million spread over 25,000 transactions. Meanwhile, if you were to compare that to a message based design like a Stargate or most other bridges out there, for each one of those 25,000 messages, we have some verification cost, there's some cost of verifying, of sending that message and making sure that message was secure.
00:12:58.600 - 00:13:59.080, Speaker A: And here I'm estimating that cost at $2. It's hard to know, but it's something nonzero and it adds up to a real amount of money. And so this intent framework really by minimizing messaging, is able to have far cheaper costs, even though we have this cost of a loan, of solvers extending a loan. So the TLDR here is that across functioning as this settlement layer for crosschain intents can scale to transfer a billion dollars a day of crosschain interop while only sending on the order of 100 messages per day. So huge volume, huge number of transactions, very, very few messages sent. Meanwhile, the other way of thinking about crosschain interop, if I'm sending a message for every transaction, sending a billion dollars of value is going to cost me on the order of 10 million messages. And to me that just seems expensive.
00:13:59.080 - 00:15:24.976, Speaker A: That seems like something that's going to cost a lot. So what's the idea here? What's the vision? So going back to our stack, our three layers of this cake across thinks about the intent layer at the top as where user intents are ingested, where user order flow comes from, and there should be auction or RFQ systems that exist to have solvers compete for the right to fill that user order. So one of the things, the directions we're going in is helping build an ecosystem of efficient RFQ and intent aggregation systems that are going to allow users to get the best price and speed for their order. The second layer of the system is this solver layer, where we want the deepest, most efficient network of offchain liquidity of solvers or relayers or searchers or fillers, whatever word you want to use for them. We want these solvers to be competing to profit from that user order. And this is a super competitive PvP layer where everyone is trying to maximize their profits and that competition is all in service of the user getting the best fill. The bottom layer here is what we think of as the settlement layer.
00:15:24.976 - 00:16:35.900, Speaker A: So this is where user assets are escrowed when the user makes their deposit transaction and they're only released back to the solver after we verified their intent was fulfilled. And this is really actually what we think across does today. Across is this settlement layer for crosschain intents, kind of masquerading as a bridge and bridging. In our mind, the future of bridging looks like these settlement layers, it looks like it's going to be this intent framework where user assets are escrowed and only released back to solvers after we've verified their fill. So yeah, our stack, the future of interop, the way we see this playing out is these three layers, intent, solver settlement, working together to emphasize competition to best fill the user with fast speeds and minimal messaging. So our version of the future here is the actual number of messages sent per day is on the order of thousands, not millions or tens of millions. And 1000 messages a day in this framework can support billions of dollars of interop.
00:16:35.900 - 00:17:51.812, Speaker A: And that's all because this settlement layer does this batch repayment only when needed to minimize the messaging costs while maximizing security. So one more thing, as I wrap this up, when we go back to thinking about the solver layer here, the way we think we can maximize competition is by developing standards. Standards for what a cross chain intent looks like. And the idea of that standard is that if we could have a user write an order ticket for what they want to do, and I mentally model this literally as an order ticket, where a user is saying, I have asset a on chain one and I want asset b on chain two, and then they sign that. If we can develop a standard for that order ticket, we can standardize what the auction systems look like to have users or have solvers compete to fill those transactions. And we can maximize solver competition by having all the solvers understand what this common order standard looks like. And so our version of the future is that we do want to coalesce around what a standard for crosschain intents could look like.
00:17:51.812 - 00:18:35.712, Speaker A: Here's a proposal for something we're putting together and to leak a little alpha. This is something we're going to be working on with a number of other partners in the ecosystem to attempt to establish the standard for crosschain intents. Since we think it will make interop and crosschain UX better for everyone. And so, guys, that's my presentation. You can follow me on Twitter at hal 2001. Also on Farcaster, trying to do a little bit more there at heart and follow along with across protocol. We are currently the fastest, cheapest, and most secure bridge in the EVM space, and we're looking to further into this intent based bridging framework.
00:18:35.712 - 00:18:37.030, Speaker A: Thank you very much.
