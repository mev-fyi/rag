00:00:07.690 - 00:00:45.238, Speaker A: Hello everyone, and thanks for joining. In the next 20 minutes, we will try to establish two things. First, we will try to understand who is the blockchain architect. And next we will try to kind of understand what are the questions and considerations that should be taken by the blockchain architect when designing a blockchain based product. So, my name is Slava Serbriani. I'm leading the developer relations efforts for Fireblocks. Before actually running in this role, I was leading the solutions engineering team at Fireblocks.
00:00:45.238 - 00:01:33.358, Speaker A: I've been working with our clients on integrating fireblocks into their systems, helping them to design their product, understand their needs. And that's pretty much it. A few words about fireblocks before we actually deep dive into the topic. So Fireblocks is digital asset management platform. At the core service, we provide secure wallet infrastructure and we design that in a multi layer security approach. At the basis, you can see that we are using secure hardware elements. Basically we are using secure enclave technology, trusted execution environment technology such as SGX provided by intel, and also AWS nitroenclaves.
00:01:33.358 - 00:02:57.302, Speaker A: On top of that we have the MPCCMP algorithm that basically allows you to split your private key into end parts and store every shard on a different physical location. And basically by that eliminating the single point of failure of your private key existing as a whole in a single place. And on the top layer we have the transaction policy engine that basically allows our clients to define set of rules and actually segregate duties across their stakeholders in their platform and basically to govern the flow of the assets out of their wallets. Okay, so what are the blockchain product concerns? What you should be thinking about when you're designing a blockchain product? At the top we have the traditional tech stack question and we are not going to focus on that. But basically this is questions around which cloud providers you should use, which programming languages we should use, how would my networking architecture would look like, so on and so forth. Then we are deep diving into the choosing the relevant blockchain layer or choosing the network for our product. Which blockchain should we use? By nature, blockchain products are financial products.
00:02:57.302 - 00:04:32.500, Speaker A: So you should be thinking about trust, security, risk management, custody model and architecture, wallet structure, wallet operation, smart contract operations and management and architecture. There are so many more aspects that should be taken into consideration here, but we try to close this list in that way. So who is the person that actually makes all of these decisions? Who is the person who actually takes those questions and takes those considerations into account in your organization? It might be the CTO, a solution architect, technical product manager, or maybe a group of people that actually work together on defining that. But we at Fireblocks try to define this person as the blockchain architect. And the definition that we kind of tried to establish here is the following. So as any architect, the blockchain architect basically is responsible for the high level design, strategic planning and tech decisions of the blockchain based product. As part of his job, blockchain architect takes into account business needs, product requirements, compliance and regulatory guidelines, security concerns and software requirements, and basically produces the best possible solution that addresses all the business needs.
00:04:32.500 - 00:05:35.640, Speaker A: Okay, great. We defined the blockchain architect role. Let's try to define the considerations or ask the questions that should be asked when designing such product. So we decided to view that in a kind of multilayer approach or a stack where at the bottom you have the blockchain layer. And this layer is all about the questions that you should ask yourself when you're designing and when you are trying to choose the relevant blockchain. On top of that, we have the core services, which is basically the layer that is in charge of all the core services or the core products that you need in order to run your blockchain based product, such as wallet trust and model, security assessment, et cetera. And on the upper level layer, we can see the connectivity and interoperability, basically integrations that you need to have in order to kind of complete all of the required use cases in your product.
00:05:35.640 - 00:05:59.390, Speaker A: So let's get started and actually deep dive into the first layer, which is the blockchain layer. But just before that, I would like to. Sorry for that. I would like to mention that we only have 20 minutes, so it's really hard to cover all of these aspects. Right. So we'll go quite high level. So, blockchain layer.
00:05:59.390 - 00:06:50.334, Speaker A: What do you need to ask yourself when you're choosing a blockchain? There are so many blockchains. Right? I put some logos here on the slide, but there are actually so many more that I missed. And how do you know which blockchain works the best for your product? So we kind of built a list of questions that you should ask that the blockchain architect should ask himself when he's going for this decision. The first one is quite easy. If it's a specific oriented blockchain product, let's say bitcoin ETF product, it's easy, right. He will probably go with the bitcoin blockchain. And if it's not the case, it's getting much more complex than that.
00:06:50.334 - 00:07:35.738, Speaker A: And then you are going into the aspects of private or public blockchains. Now, I know that some of you don't think that private blockchains are blockchains, but in reality they are. And it really depends on the use case. And for example, I can give an example of a traditional financial institution that builds his product on the blockchain. They will probably go first with the private blockchain just because of legal and regulation concerns that they might have. On the other hand, if you're designing a product that should be accessed by anyone in any place in the world, you probably will go with the, of course, public blockchain. It's not only about public or private, it's also about centralization and decentralization.
00:07:35.738 - 00:08:40.210, Speaker A: So if we are going back to the example of the financial institution, basically by nature their product will be more centralized because they will probably own the blockchain, the private blockchain, unlike the Dex or the daB that you will build, and it will be on a fully decentralized blockchain, public blockchain. And also there we have kind of a range of decentralization, right? There are blockchains with 1020, 30 nodes or validators, and there are blockchains with hundreds and thousands of validators. Ecosystem. Ecosystem is really important. Most of the products or most of the companies actually decide which ecosystem they will choose before they actually choosing the network or the blockchain. And it's driven mostly by three questions. If you are looking for a specific feature that is provided by a specific ecosystem, you are locked to that ecosystem, right? If your product is relying on other projects, that on a specific ecosystem, you are also locked to that ecosystem.
00:08:40.210 - 00:09:41.560, Speaker A: And the third one is actually the developer community around that specific network, right? So if you are looking for a strong developer community that actually innovates, improves and builds all the tools that are needed in order to access your product, this is something that you might want to consider as well. Scale and speed requirements. So when blockchain started, right, they were producing blocks like in minutes, and that was fine because that was the standard. But today we have really fast blockchains, right, that produce or validate transactions within seconds or even subsecond and also handling high gas prices or fees. Some use cases are more sensitive to that. Some use cases are not. But you need to make sure that your business model actually works with that kind of fee structure in your use case.
00:09:41.560 - 00:10:21.678, Speaker A: Sorry for that. Just a second. Good to go. Great. And security analysis, of course, you need to understand the security structure of that network. You don't want to expose yourself or your clients to unnecessary security incidents because you haven't explored that before you chose that specific blockchain. So if you answered all of these questions and got into some answer, you probably did a great job or reasonably great job.
00:10:21.678 - 00:11:04.010, Speaker A: But if you want that decision to be even better, you need to make sure that you answer also these so blockchains are breading living products. Unlike your cloud provider, they are upgrading. They have hard forks, they have roadmaps that you need to be familiar with, right? So don't forget about that because it causes a lot of maintenance burden that you might want to think about before designing your solution. And of course, regulation. Regulation is very important. Regulation drives a lot of decisions that the blockchain architect actually does. We will talk about it a bit more in the next slide.
00:11:04.010 - 00:11:44.774, Speaker A: Hype and company growth so you might want to design your product on a specific hype blockchain. The hyped will be over until by the time that you will release your product. So you won't be irrelevant, right. Make sure that you are not choosing blockchains because they are hyped. And then if you decided to go with a specific blockchain, right, and in the future would like to expand or to migrate, make sure that you design your system in a way that helps you to migrate or expand in a very easy manner instead of reconstructuring or rearchitecturing your entire infrastructure. Great. So we discussed the blockchain layer.
00:11:44.774 - 00:12:23.398, Speaker A: Let's deep dive a bit into the core services. This is an example of quite simple architecture of a blockchain based product. Most of our clients would say that it is very simple. Actually it gets much more complex than that. But the core layer is all about building a trust and security model around your product. So custody model is something crucial that you need to be thinking of when deciding how to design your product. Custody models is driven by two things, mostly by two things.
00:12:23.398 - 00:13:03.458, Speaker A: Regulation, as I mentioned before, and end user requirements. So if your end user actually require you to hold their keys and they don't want any responsibility for that, you are becoming a custodian and that means a lot in terms of regulation. You might need to have all the licensing and whatever is required for that. On the other hand, if they want to have the ownership of their keys, you probably need to go with a non custodial wallet solution. Wallet structure. There are mainly two wallet structures out there, omnibus versus segregated. Omnibus works better for products that are retail facing products.
00:13:03.458 - 00:13:52.046, Speaker A: Basically it's like the regular bank account model that you can think of, your end user deposit his funds into his account, those funds are swept into an omnibus wallet and that's basically it. Segregated wallet structure is more for institutional facing clients. So if you're serving institutions, probably you would like to go with the segregated wallet structure. And there is a huge difference between those in terms of operation and financial aspects of the system. Wallet trust model so security is everything about security. If you don't have security in your wallet infrastructure, you can close the shop and go home. So you need to make sure that you have the highest level of security in your wallet.
00:13:52.046 - 00:15:00.040, Speaker A: If you are doing that in house or going to a third party vendor, you need to make sure that you take things like cryptography and zero trust architecture into consideration. Thinking about MPC, multisig account obstruction wallets and all of these kind of considerations out there. Blockchain data access if you want to access data on the blockchain, this is hard. Every blockchain has its own interface for accessing data. And then if you want to manage nodes, you need to make sure that you have disaster recovery high availability procedures in place. And again, if you are taking a third party vendor here into consideration, you need to make sure that you are going through the entire counterparty risk assessment as discussed before. Smart contract trust model basically, if you're developing a product that is built upon or on top of smart contracts, you need to make sure that you are going through all the relevant audits and internal operation security, making sure that you have all the access policies or internal access policies in place.
00:15:00.040 - 00:15:57.130, Speaker A: Great. So we covered blockchain layer, we covered the core services. Let's talk a bit about the connectivity layer. Connectivity layer is all about beyond the keys and signing what you actually need beyond a wallet. So we have the transaction approval flow integrations. If you want to make sure that you have the relevant approval processes and regulation compliance processes in your place, such as AML and Kyt, you need to make sure that you define those when designing your product transaction status and balance updates. So this is actually similar to getting access to on chain data, right? You want to make sure that all the balances in your system are valid and there is no discrepancy between the balances that you run into your system or transaction statuses.
00:15:57.130 - 00:17:08.420, Speaker A: And they are the same as in the blockchain itself. Fee estimation so basically we want to know how much we are going to pay for a specific transaction. So we need to have all the fee estimation processes in place to make sure that we understand how we build that estimate and how we estimate these fees. In addition to recovering stock transactions such as CPFP processes, RBF and boosting your transactions in general fiat and exchange transfer. So if you need an off or on wrap fiat into your product, make sure that you understand that you need integrations to fiat providers and smart contract management. The entire full lifecycle of smart contract management such as deployment, minting, upgrading and basically performing different contract operations. Liquidity network integrations so if you are looking to get access to liquidity market makers otcs, you need to make sure that you're establishing all of these integrations with them.
00:17:08.420 - 00:17:54.550, Speaker A: So probably you noticed all of these things that we just discussed in the connectivity layer is about integrations. So you are going to manage a lot of vendors and a lot of integrations to different third party providers. So you need to make sure that you understand that it's going to be a lot of effort in terms of development and maintenance. We came up with this formula which is basically if you're running a retail service solution and you are operating on free blockchains, you will probably have something around more than 20 integrations to build and maintain. Okay, great. So we cover all of these layers. Thank you for listening.
00:17:54.550 - 00:18:18.080, Speaker A: I would like to invite you to get free sandbox environment in Firefox by browsing to fireblocks.com. You can also check out our developer portal, publicly available documentation at developers fireblocks.com and also we are going to host a site event here at Denver tomorrow. All the details can be found in the Denver site event website. Thank you so much.
