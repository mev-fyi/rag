00:00:01.450 - 00:01:18.470, Speaker A: My name is Ilmarkovic, CEO of Bloxrout Blocksroute, has been helping searcher on DeFi in the last four years. And so what I thought that I'll share with you today is a few things that I've seen in the last year, two years, how traders are winning more on DeFi. And obviously we'll talk about changes after the merge, because that's affected the way that searchers are working. Do we have any searchers here? Traders? Cool. So, first of all, let me share with you, if you don't know, DeFi is extremely competitive, okay? It was very competitive before the merge, and it didn't change anything. On every opportunity that a trader is trying to extract mev, there are basically ten to 50 other competitors that are trying to extract the same mev, okay? So this is how competitive it is. There are basically three things that are required in order to succeed.
00:01:18.470 - 00:02:19.740, Speaker A: You need a better infrastructure, because really on DeFi, every millisecond counts, you need a better strategy. Some strategies are easy, some strategies are hard in terms of compute, in terms of risk on the trader, whether they are atomic strategy or not. And the last thing that you need is basically good execution and luck. Okay, so we'll talk about it. So when you think about what happened with the transaction on ethereum, basically, transactions are being generated by users. User can generate transaction anywhere in the world using wallets like metamask or any other wallet. And transactions are also being created by dexs, by project.
00:02:19.740 - 00:03:27.130, Speaker A: The message here, transactions can be created anywhere in the world. You don't know whether it's going to be created in the US, in Europe, anywhere. Now, some of those transactions are making changes that are creating arbitrage. For example, swap transaction, large volume might create a price change on one decks, and that will create an arbitrage because the different decks still have the old price liquidation for user that create an arbitrage, because a user, a trader that can capture, that will get the ability to execute trade on a lower price. So if you are a searcher, you need to find those transactions. Those transactions that are creating the arbitrage, I call them trigger transaction. You need to find those trigger transaction.
00:03:27.130 - 00:04:22.080, Speaker A: You need to create your trade to capture the meV, and you need to execute that, and you need to beat all the other 20 or 30 searchers that are doing the same. So two days ago, I participated with the event together with block native. I really like those two slides that I'm going to show you. I think they are explaining what's happening, right? Very well, so a user is signing a transaction within its wallet, submit the transaction through the peer to peer network, through the Ethereum network, and the transaction get into the mempool. Mempool. There's nothing like a single mempool. Every node has its own mempool, and a searcher is basically looking on the mempool and trying to identify those trigger transaction that we talked about.
00:04:22.080 - 00:05:24.174, Speaker A: If a searcher identifies a trigger transaction, searcher create their trade and submit it to the builder. If there was no trigger transaction, the searcher is not involved and the transaction appears in the builder mempool the same way that appears in the searcher mempool. The builder creates the block, submit it to the relay to the validator. Anyone here that is not familiar with PBS on Ethereum post merge don't know what I'm talking about. Then I'll talk a little bit about that. So really, in order to win defi trading, you basically need three things. You need to see and identify the trigger transactions.
00:05:24.174 - 00:05:57.418, Speaker A: So that's identify blocks and transactions very fast. Then you need to have a very good strategy, a very good program. It's called the trading bot, to compute your trade to capture the meV. So we're not going to talk about that. And then you need to submit your transaction to eventually get into the block. Over here. We are talking about two different type of execution.
00:05:57.418 - 00:06:56.670, Speaker A: You might send a transaction through the peer to peer mempool transaction, or you might send a transaction that is private. You might hear someone talk about flashbot bundle. That is also a private type of transaction. So we'll talk about those in more detail. So first of all, how do you identify transaction trigger transaction within the mempool? There are several ways to do that. If you're running your own ethereum node, you can get a stream of transaction from the node through a standard web three endpoint that the node is providing. If you're going to do that, you're not going to win because you're going to be way too slow.
00:06:56.670 - 00:08:07.058, Speaker A: There are service provider, for example, like us, that are giving mempool data significantly faster. So that can be 100, 200 millisecond faster. Remember, we're talking here millisecond nanosecond. So we're not talking here about minutes delay. So you can get mempool transaction 100 millisecond faster through a service like us, which give you some edge in order to compute your trade. And there are some tools, okay, so some tools that allow you to compare between when am I getting the transaction from my node, when am I getting the transaction from infura, when am I getting the transaction from blockstrout, and so on, and allow you to know whether you have even a chance. Another tool that this is actually coming from us, and it's free, is the ability to see for each transaction, and usually you're doing it only on the trigger transaction.
00:08:07.058 - 00:09:07.530, Speaker A: Where exactly was it in the world? When did we see it in Europe? When did we see it in us? And then you can compare the time that you identify it versus the time that our network identified. And if you are behind, then you know that you need to improve your infrastructure. So how can you get faster? First of all, you should not use the node pending transaction. It's just too slow. Some traders are running their arbitrage, but not in one place, in 50 different places, just to hear about things a few milliseconds faster and execute their trade faster. If you are using solution like us for the BDN, you want to collocate with us, you want to get closer to us. It's all about reducing latency.
00:09:07.530 - 00:10:40.010, Speaker A: And also if you are running a node, you want to improve the quality of your peers, or use a solution like what we have, it's called upscale to improve node discovery. But the idea here is don't rely on the default configuration of a node. It's good for the normal project, it's not good for Defi. So here's, for example, this is from, again, a free tool that we offer called BDN Explorer, and you can see there where most of the transaction are entering the BDN in the world. And that gives you a sense which region you might want to consider to run your trading bot. Another metric that you want to monitor is where do you get the trigger transaction? Where do you get transaction in general? This is, for example, a metric that we provide. If you are connecting to us, how many transaction are you getting from us? First, if you have 20 peers in your node for each peer, you want to monitor that, and you want to make sure that every peer is very expensive because there is a number of slots that the node can support.
00:10:40.010 - 00:11:24.790, Speaker A: You want to make sure that you are getting enough data and you're not wasting peer slot on that. So that's about hearing about the trigger transaction. That's the key. Without doing it fast, you have less chances to succeed. Now, slot in Ethereum is every 12 seconds post merge. If you are going to identify a trigger transaction in the first four second of a slot, nothing bad happened. Like if you're going to identify it with 200 millisecond delay versus the competitors.
00:11:24.790 - 00:12:49.218, Speaker A: Nothing bad happened because you still have eight second to execute your trade. But if we are at the last two second of the slot and you will have 200 300 millisecond delay, your chances to succeed went from 20% to 0.1%. So you want to invest in infrastructure, especially for the last few second of the slot, because this is when validator are going to get their block from the builder. And if your transaction is not part of the block, of course you didn't win. So how do you get faster in terms of sending transaction? First of all, it depends whether you are sending a public transaction, a mempool transaction, or whether you are sending a private or a flashport bundle. If you are not familiar with what is flashboard bundle, should read about it after the presentation. So if you're sending your transaction to extract MEV as a public, not too many traders are doing it.
00:12:49.218 - 00:13:55.154, Speaker A: Some traders are doing it. Some hundred of East MeV extraction was with public transaction in the last year. So it's still happening from time to time. If you want to do that, you want to make sure that you are connected to very good peers that can get your transaction as fast as possible to the builder. That can be a peer like the BDN, like our network, or that can be nodes that are connected to the builder nodes. But if it's going to take 400 500 milliseconds for the builder to get your transaction through the peer to peer and it's the end of the slot, or close to the end of the slot, or actually the beginning of the next slot, you lost. Another things that you want to consider is different RPC.
00:13:55.154 - 00:14:49.306, Speaker A: So if you are a searcher and you submit your transaction to an RPC, then some RPC will be much faster than the other. So invest the time to measure the RPC performance. Here's an example that basically when you look on RPC performance, you are looking on inclusion rate. How long does it take until my transaction get into the block? Okay, usually for MEV extraction it must be one block after one block. It's usually MEV was extracted by a different searcher. But as you can see here, there are some RPC that it can take five to ten blocks. Sometimes it's one.
00:14:49.306 - 00:15:48.966, Speaker A: It really depends whether the block was created by the owner of the RPC. Some RPCs forward the blocks like us forward the blocks to all the other builder, and that's why the inclusion rate is better. So let's talk a little bit about block building. If you are a validator, if you are a validator and it's your turn in the next slot to create the block, you are basically the proposer. The proposer will issue a request to several MAV builder to get the best block. The MEV relay at that point will return the best block that it is. Now the MEV relay is getting blocks from different builder, basically getting the block, checking which block is the best for the validator.
00:15:48.966 - 00:16:43.130, Speaker A: And in the end when the validator is going to ask for the block, the relay will return the block. You as a searcher, once you created your trade, you submit your trade. Usually as I said, as a flashbot bundle, you submit your trade to several builder. Okay, so you want as a trader to make sure that the builder will get your bundle enough time before creating the block. So when the builder create the block, it will include your bundle. Otherwise you lost the chance. Who are the major relay and who are the major builder? The best tool to see that it's called relay scan, relayscan IO.
00:16:43.130 - 00:17:36.030, Speaker A: That's the tool that you want to look at. You can see on the left side you can see the different relays, you can see hour we have one here 21% that was last week. So it of course change every day 21% and we have two more. So around 30% of the block space is coming from our relay. And on the right side you can see the different builder. So you can see some builder can create about 22% of the block and some builders create very low number of block per day. There are basically two types of builder.
00:17:36.030 - 00:18:21.690, Speaker A: The first type is infrastructure builder. So those are builders that are getting public transaction from their mempool and bundle from searchers. And with some sophisticated algorithm they are aggregating all those bundles and transaction into a block to create the best block possible. Those type of builder are for example flashboard blocks, route also that type of builder. Those builder are not creating their own transaction. They are not a searcher by themselves. The other type of builder are searchers.
00:18:21.690 - 00:19:59.002, Speaker A: So some searchers that you will compete with or the other searcher are competing with are actually builder by themselves. They have a huge advantage, especially if they have a lot of liquidity. They have a huge advantage and many times they are winning the block and you will not be able to win your trade and your defi unless you get to their RPC and get included within their block as well. So how can you get to the builder? Of course if it's a peer to peer then it happened automatically because the builder have a node and the node is connected to the peer to peer. If it's a bundle, you want to submit the bundle to their RPC, unless that's a builder, that is a searcher and you are considering that they are competing with you. Okay? Because some of them, as I said, is a searcher and they can get your bundle, they can look at what you did and they can say, wow, this is cool, I can earn 100 ether, so I'm going to do exactly the same and forget about yours and just do it. And they have enough millisecond to do that's as I mentioned, everything in if 2.0
00:19:59.002 - 00:21:24.070, Speaker A: is with a slot time of 12 seconds. And as a searcher you really must think with the boundaries of a slot. So to get your bundle to a builder, you must get your bundle before the blocks are ready at the relay, before the validator or the proposer requested the block from the relay. So we can see over here, this is based on last week, 800 blocks that I just randomly pick, 149 millisecond before the beginning of the slot, the winning block, those are the winning blocks already existed at the relay. So if you are sending your transaction 100 millisecond before the beginning of the slot, most likely you are going to miss the chance to get included. So when you submit your bundle, of course you can control to which builder to send the bundle. You can control when to send the bundle.
00:21:24.070 - 00:22:52.050, Speaker A: For some opportunities, it's very critical to time the bundle submission, both in terms of when the builders is when to send it, in terms of the block, but more because your strategy might be something that is affected by an external signal. For example, if your strategy is CFI deFi. So if your strategy is CFi DeFi, you know that the DFI on Ethereum happens every twelve second, but the CFi constantly happening. So you might want to delay your trade, your final trade, just a few, maybe a second, 500 millisecond, two second before the slot time and not do it 2 seconds or 10 seconds before the slot time. So it really depends on your strategy and depending on the risk that you are willing to take. Here's some data from the field. Last 100 bundle last week when I created that slide, and you can see by average 5.6
00:22:52.050 - 00:23:53.666, Speaker A: 2nd before the slot start time most of the bundle arrive. But on the other end you can see that in the last 2 seconds before the slow time, we see an increase in the number of bundles. So it really depends on the type of bundle. If it's things like Sandvijatech, it doesn't really matter when you send it, so you can send it immediately, but if it's things like CFI defi, you want to wait until the end of the slot. So the last few things that I want to talk about before, see if you have any question. If you are a trader and you're just starting, how do you troubleshoot? So first thing you want to know is who won the block. Okay, so who won block is really which builder created the block and which Mav relay created the block.
00:23:53.666 - 00:25:15.230, Speaker A: Because you want to make sure that in the next time you are going to submit your bundle to maybe the same builder. And you want to make sure that the builder that you're submitting to is working with that relay. So you can go to becomcha in that's the leading explorer for the beacon data, and you can type the slot number and you will see the relay that won relay has quite a lot of endpoint data API, endpoint that you might use to get additional information. We're not going to cover it, but if it's interesting thing for you, you might want to look for the data API of the MeV relay. And the last thing is how do you know which builder created the block? You can get it obviously also from the Explorer, but you can also go to Atoscan, zoom into the block, and if you look on the extra data, you're going to see which builder. In this example, you can see it's builder 69. All right, let's see if you have any questions.
00:25:15.230 - 00:25:32.120, Speaker A: Cool, thank you. Thanks for comingd.
