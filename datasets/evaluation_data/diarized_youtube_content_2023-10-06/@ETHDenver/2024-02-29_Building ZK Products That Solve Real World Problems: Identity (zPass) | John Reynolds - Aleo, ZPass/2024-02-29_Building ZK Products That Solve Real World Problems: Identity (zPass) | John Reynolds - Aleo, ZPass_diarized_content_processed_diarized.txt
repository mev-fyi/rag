00:00:00.090 - 00:01:17.938, Speaker A: It's funny because she said, you know, the title initially that I proposed was building ZK products to solve real world problems, and our marketing team got a hand on it, and it turned into building the antidote to the identity theft virus. So this is where we're at now. So to kick things off, to start with, a really a startling statistic, 86% of consumers worldwide lied have been the victim of some form of identity fraud. It's estimated nearly $50 billion a year is lost as a result of identity fraud, and $28 billion of that is tied directly to identity fraud as a result of some form of data breach. One of the ways that was just recently described as to how a lot of individuals feel about their user data on the web is hopeless. They don't have a lot of hope in being able to have their information secured, and they don't have a lot of hope in being able to have these platforms very motivated to secure their information. And so what we've seen week after week is these headlines from big tech companies that have been leaking user information, or user information has been exposed in.
00:01:17.938 - 00:02:22.140, Speaker A: And it's as a result of this centralized and client server model that we've all gotten very used to. I think it's clear and obvious to say we are all very well aware that we have a problem, and it's a very big problem. And it goes back all the way to the beginning of the Internet, where we didn't have a unified identity system. We also didn't have encryption at that time. And a lot of these paradigms have continued to exist and actually foster a benefit for these platforms and these big tech companies. And as a result of not having these identity systems, a lot of these different companies leaned into developing or building their own authentication systems. And this led to a patchwork of ad hoc identity systems across the web, none of them solving each other's problems, but solving at least the problem that they were having, which was understanding or acknowledging who their customer was and how they could interact with a specific user and have knowledge of their identity or their information.
00:02:22.140 - 00:03:44.420, Speaker A: So naturally, when you have a problem, it's an instinct to think, well, why hasn't this problem been solved yet? Why is it that we're forced into this paradigm where we have to share a lot of our user information with platforms and big tech companies? And I think there's two distinct pathways or positions or perspectives that you can have on this. Well, surely there's more, but the two main ones, the two main angles that I think are worth focusing on is the first being incentives are not aligned. So a lot of these platforms have benefited immensely from this dynamic, where their users activity is a bit more transparent. They have visibility into the user's behaviors, so they can personalize features, so they can create marketing strategies or business strategies that are targeting specific things as a result of this information that they're able to gather. The second angle I think that you can take on why this hasn't been solved is it's a very hard problem. So identity spans a variety of different contexts. And depending on the industry that you're in, whether it be tradfi or whether it be social media, the amount of information that the platform needs to know is very different, and the context change not only the amount of information, but the level of validation that these platforms need behind that information.
00:03:44.420 - 00:04:30.450, Speaker A: So this is a really challenging thing to solve, and we've seen some attempts on it. If we are just thinking about identity in the realm and in the landscape of login, we've seen some real attempts in trying to make this more efficient, to improve the user convenience, and to make it overall better and safer for the user. And one of these ways is SSO. So single sign on. And what this allowed is it allowed a user to take their credentials from one platform and use them in another platform. And so we started to reduce the amount of custom authentication systems that we were seeing grow across the web, that continued to fragment user information and increase the dispersion of user information across the web. So this was good, this was a good step forward.
00:04:30.450 - 00:05:34.770, Speaker A: The only downside of this approach is that, as you can see from looking at the diagram, it kept us in a very centralized and dependent based paradigm or relationship. All of the nodes in these diagrams you can see, rely on the center node, the centralized entity, to provide their information. And so even though we may have had a bit more convenience and interoperability with our information, we were still in a client server paradigm where we were forced, and we continue to be forced in exchange for access, to have to give up our information. And so a server requests information and a user provides that, and the server verifies or processes and verifies and stores some of that information, and then the user is given access. And this is the cost of accessing platforms and services. Now, on the web, we share information, we are the product, and they gain from that in some capacity. And oftentimes, unfortunately, our information gets leaked.
00:05:34.770 - 00:06:25.618, Speaker A: And I don't believe in some cases that platforms are as motivated as they should be in protecting that user information. But ultimately, the architecture of our system comes to blame. So this is where Zpass comes in. And ZPass is an identity solution that is built on top of Alio. Alio is a layer one blockchain that integrates zero knowledge proofs into the transactions, and it has a ledger that is encrypted. So unlike Ethereum, when you go on to an explorer on Alio, you can't see the information related to all of the transactions unless you are the owner of a private key that executed that transaction. So users who are interacting with Alio's blockchain are able to decrypt the specific interactions that they're making with the blockchain.
00:06:25.618 - 00:07:48.034, Speaker A: But users that do not have the private key or are not able to, or are not interacting, they're not able to decrypt other people's transactions. So what zPass is trying to do is it's trying to exist as an identity solution, leveraging zero knowledge proofs in the blockchain to give users more control of their information, but also to flip us into a prover and verifier paradigm, where instead of as users being forced to provide our personal information with servers, we generate a proof around some information, and then we provide the proof to the server which verifies it and then grants access to that particular service. So to provide a visual of what this means or what this can look and feel like, Zpass allows users to shift from this dynamic where all of their information on their ID has to be shared in order to, for example, prove their age. In this case, if you go to a bar and you want to buy alcohol, you present your id and a lot more information is shared with the bartender or the cashier than is necessary. The cashier actually doesn't want to know all of that information either, to be frank. But all of this is shared when in reality they only need to know the date of birth. It goes even further than this.
00:07:48.034 - 00:09:11.258, Speaker A: And this is one of the great things about zero knowledge technology, is it allows you to create proofs, cryptographic proofs, that can be proven to meet some certain outcome or prove that some statement is true without having to reveal the underlying information. And so instead of even having to expose your date of birth, we can go a step further and only show the predicate, which is to say, instead of a user having to give up their date of birth, they just have to provide a proof that will tell the platform that they're over the age of 21. And we've seen a lot of regulation and compliance realities starting to push forward in the identity space and with different individuals of different age groups and different interests interacting online. We believe that zpass is going to be a great solution to provide users more flexibility in how their information is used and how it's shared with platforms and the amount of information that is used and shared. So like I mentioned, this moves us away from a client server paradigm paradigm where plain text information is getting sent to a server, and it shifts us to a prove or verify paradigm where users are in control of their information. Servers are requesting proof of particular criteria. The user generates that proof from their information and that gets shared with the server which verifies it.
00:09:11.258 - 00:10:38.790, Speaker A: In this instance, the server gets a general amount of information based on the criteria that they've set as required, and the user gets to reduce the amount of personal information they're having to share. So there's the same security and verification guarantees for the platform, except the user's information is secured and private during this interaction. And this allows us to shift even a step further forward from the federated approach. It eliminates that central dependency on some third party or central service, and it allows users to be the owners of their information and then produce the proofs and share it under their own free will and their own circumstances. This means that platforms are interacting directly with users for their information, and they're also reducing the amount of information they're getting exposed to. And while I said at the beginning, there's certainly interests from platforms in gaining this visibility and transparency into their users. And so there has been some resistance to moving towards more private protocols with a lot of the regulations that are getting pushed forward today, and a lot of the understanding improving around some of these risks as it relates to privacy and security, a lot more platforms are starting to recognize that they actually want to reduce their liability in having to secure and manage all of this user information.
00:10:38.790 - 00:12:00.562, Speaker A: And if there's a way that they can reduce it to a statistic where, hey, we had x number of users over 21 or within some grouping, it's going to equip them with opportunities to market and strategize, but it's going to also prevent them from as many liabilities in the long run. So going back to Alio quickly, speaking about Alio as a ZK layer one blockchain, the way that Alio works is it has a set of programs that exist on chain in a program registry. So you can think of this very similarly to a smart contract. And what happens is the actual execution of programs occurs off chain, and the reason that it's able to do that is because a zero knowledge proof is generated in the process of the program being executed. So this means we can move the entire computational expense of program execution into an off chain capacity, generate the proof, have the proof sent back in a transaction to the blockchain, and then have a validator node receive that proof, verify it, and then update the state of the blockchain. This gives users the ability to, on their local device, execute functions using their own personal data and information with an air gap from the Internet. So the user has some form of digital credentials or id, and they need to prove something.
00:12:00.562 - 00:13:12.486, Speaker A: From that to some platform, they're able to execute a program and a function locally on their machine, produce the proof, and then wrap that in a transaction that is either sent back to the blockchain and finalized on chain, or even sent to a third party that is able to just verify the proof on their own. So for zPass, again, the process is creating a zPass, which is taking a digital credential, or creating a new digital credential and introducing it on chain. You execute a function that will validate that credential to produce a ZPass. Then you use a ZPass to generate proofs around your information, and that proof is shared. To look at this in a little bit more depth, so like I mentioned, you can either issue zPass, and we have an SDK library that we've built out to allow users to very easily leverage specific signature schemes, and then the alio library for generating proofs. But the other option is you can actually take a physical passport or physical credential and introduce that as a ZPass. And the way that is done is passports are actually cryptographically signed.
00:13:12.486 - 00:14:22.634, Speaker A: So you can extract the information via an NFC chip, and you can take the attributes from the passport, you can take the public key of the signing authority or the issuing authority, and you can take the signature from it, and you can verify all of the attributes were issued by some particular authority through a signature verification. And if this signature verification passes, this means we can trust that the information about the user from the passport is legitimate. And so we take that information and we put it into a record, and that's coupled with a proof saying that this information that we are showing in this record came from a passport, and we verified the signature of that passport. The next step is generating the proof. So like I said, programs on chain have functions, and those functions can be executed off chain locally on the user's machine. So we have a ZPass, which is a record, and you can think of it as a data object, it has the user's passport information in it. And then you have a function, some sort of claim verification, like checking that the user is over the age of 21, and then the result is a proof.
00:14:22.634 - 00:15:46.250, Speaker A: If the user passes this claim verification, we generate a proof which can ultimately be provided to a network so it exists on chain, or it can be provided to a platform off chain who just has to verify this zero knowledge proof to attest to the fact that the user is over some particular age, or even maybe not of some particular nationality. If we're thinking of more traditional finance route where they're trying to avoid working with customers from OFAC sanctioned country, I break this down a little bit more just to help everyone understand some of the different components of this process, because it's important to realize how this can really change the paradigm of how we're interacting with individuals on the web. So the idea is, in the issuance process, you have a credential with a set of attributes and a signature. This might look like an owner, a date of birth, some nationality, and an expiration in creating a ZPass if you're issuing it. We go through a process to reduce the amount of data that exists on chain or plain text data, even though it is encrypted. We want to get to a place where we can reduce that as much as possible. So we use a merkel tree approach to produce a series of leaf hashes, and then ultimately a root hash that gets signed by some issuing authority and placed into a record that lives on chain.
00:15:46.250 - 00:16:56.874, Speaker A: So once that gets presented and the signature is verified from that credential, we're able to go into the process of generating a record which is a ZPass, and that proof that I mentioned earlier, from here we have the ability to create proofs now from that record that lives on chain without ever having to expose the underlying data of the user. The user's information, the zpass record by the user, can get presented to a series of verifications. The ones I've mentioned here is over the age of 18, a us citizen, and that the credential is not expired. If the data in the record is able to attest to these different values, and the user passes these verifications, then the next step is generating a proof in the result, true or false. If the user passed. So if they've passed all of these verifications, and the final step is to produce the proof, and if they've passed again, the result would be true, and the proof will attest to the fact that the user presented a valid id with a valid signature that met these different parameters. So that is everything from my side.
00:16:56.874 - 00:17:46.240, Speaker A: I hope everyone enjoyed. I hope that gave you some more perspective and understanding into how zero knowledge proofs can push us from a client server architecture to a prover verifier architecture that allows us to not only protect our user information but also gives platforms a way to avoid some of the liability and risks of having to secure and maintain and manage user information. If you have any interest in looking into the solution a little bit more you can check out zpass alio.org. We also have a demo on the website that you can step through to see what this might look and feel like. We also if you visit zpass tools alio.org we have a demo of the SDK and some of the different features that you can leverage off chain and in an on chain capacity. So thank you so much everyone for the time and I hope everyone has a great day.
00:17:46.240 - 00:17:46.890, Speaker A: Bye.
