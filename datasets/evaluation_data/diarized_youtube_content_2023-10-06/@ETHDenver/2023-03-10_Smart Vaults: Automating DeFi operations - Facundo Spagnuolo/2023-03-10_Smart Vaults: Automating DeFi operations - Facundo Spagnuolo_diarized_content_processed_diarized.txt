00:00:25.650 - 00:02:30.568, Speaker A: Beep it. I it's it san.
00:02:30.584 - 00:02:31.630, Speaker B: You hear me? Fine.
00:02:32.120 - 00:02:32.676, Speaker A: It.
00:02:32.778 - 00:03:27.300, Speaker B: Okay, so my name is Fagu Spaniello, and today we're going to talk about how to automate some DFI operations with mimic. To tell you a little bit about my background, I started working the Ethereum space around 2017. I worked at open, Seplane, Aragon, Balancer, and contributed to many other projects. And after learning some experience in the d five space, we started thinking about mimic. And that's what we're going to talk about today. So when we were working at balancer, we started experiencing different problems or issues for certain users to use DeFi for our own use cases. So dealing with DeFi is not easy.
00:03:27.300 - 00:04:32.490, Speaker B: I'm not just saying about balancer, but it's something that I experienced while I was working at, so. But it's not something that we really depend on DeFi. Different crypto projects need DeFi to run their own operations, but at the same time, they have too many options. It's really hard for them to keep up to date with all of them. It's really hard to make sure they're building the right integrations to feel secure. And sometimes they have to do a lot of manual processes, which is zero prone, but at the same time, they want to keep things decentralized. And this is really hard if you want to operate in DeFi, right? So what if we could start modeling these operations? Because different projects in this space, sometimes they have to build similar operations, like if you want to integrate with a decentralized exchange, or if you want to breach assets, if you want to add liquidity or invest money.
00:04:32.490 - 00:05:38.940, Speaker B: All different projects in this space are running through the same problems. Right? So what if we can start modeling all these operations? They could start scaling recurring actions to perform these operations while at the same time keeping the funds safe and remaining decentralized. Right? So this is something that we've been thinking a lot, and we came up with a set of customizable infrastructure to help building their own operations and running this in a decentralized way. What this infrastructure means are different set of pieces that we basically build for mimic. The core one is our smartwalls, which is one that I'm going to talk about in a minute. But at the same time, we have other pieces, like automated bots, monitoring and notifications, cross chain deployments, and granular permission layer. All the things, put them together could help different projects in the space to automate their operations.
00:05:38.940 - 00:07:07.592, Speaker B: So let's see a few examples before we go into the technical details, which may help understanding the idea a little bit more. One of the first use cases that we worked with was Decentraland. Decentraland had a common problem, I would say, which was they had to sell mana at the end of the month, every month to pay different operations or cover different salaries, pay grants and all that, which was kind of difficult, I mean, for a Dow or it wasn't that easy because they had to craft all the transactions manually, publish them into the Dow, go through a boating, and they have to do it kind of quickly because if you're dealing with prices and slippages, it's not something easy. So with a mimic smart ball, this is extremely easy to do, because they simply need to deploy a smart ball specifying a set of configuration parameters. For example, in this case, they had to only swap stuff. So if you can agree which is the max leapage that you're okay with, and which is the gas price limit that they're okay with with the network, then we can automate all that stuff trying to find you what's the best price between different indexes, so they don't have to do that manually. And it was extremely easy.
00:07:07.592 - 00:08:17.728, Speaker B: They just needed to fund the smart ball, and then the bots will start running and do those swaps for them and withdraw the money back to the DAO. Another quick example that was super interesting to do with mimic was a bridging smart vault for DxDao. So again, it was a kind of similar situation. DxDaO was operating in many layers, but mainly we developed this for Ethereum, Mainnet and nosy chain. So they had this issue where sometimes they had to bridge funds from one layer to the other, again, to pay operational costs or covering different expenses, or to invest money in different chains. And again, it was kind of hard to do that through a voting app or through a DAO itself. Right? Like having to craft all that transaction manually, publish that to a dow, go through the voting process, and then crossing your fingers that it went through to reach assets, and then waiting for a few hours to happen to see if it appears on the other side.
00:08:17.728 - 00:09:06.050, Speaker B: It was nonsense for them. So again, doing that with marble is extremely easy, which simply, since we have like cross chain deployments, which simply mirror the same smartwall in both chains, they simply need to send assets to one smartwall and it will be bridged to the other one. And that's it. Again, they always have to configure which is the parameters that they're okay with, like breaching fees or gas price or slippage et cetera. But all those things can be automated, and at the same time they will remain secure because at the end, they always control the funds. It's not controlled or custody by mimic. So let's go into the details a little bit.
00:09:06.050 - 00:09:47.784, Speaker B: What is actually. So a smart vault is a set of what we call actions. These actions were modeled after learning a lot of, again, tefi space. We've seen many projects trying to perform kind of similar operations in the space. And what we did was try to model all these like Lego pieces into what we call a smart ball. These operations are things like wrapping assets, depositing or investing, swapping, bridging. Well, all the things that you see here, all these things are kind of Lego pieces that are modeled into a smart ball.
00:09:47.784 - 00:10:48.896, Speaker B: And you simply need to specify how you would like to put those pieces together to perform whatever operation you would like to do. There are certain actions that kind of depend on more specific concepts, like swap, bridge, or any investing or borrowing action that has to do. It depends on how that DeFi protocol you like to interact with. It depends on that. So all these kind of actions are modeled using what we call connectors. These connectors are simply like a standard interface that we model with different DeFi protocols in order to perform more complex operations with this mimic is by default covering many, for example, dexes to operate swaps like Uniswap balancer. Also aggregators like one inch paraswap and others.
00:10:48.896 - 00:11:35.372, Speaker B: The same happens with the bridge. In actions we're using hub leaf finance, multichain, and all that. And there are different protocols that we're already integrated with to perform different investing operations like curve balancer, Uniswap compound, like many others. And again, all these pieces are already built in into a smartwall. You simply need to specify how you would like to put them together to perform any customer operation. And of course, I mentioned a few times that these operations can be automated. And we have what we call bots or relayers, which are going to be the ones in charge in case you would like to automate these operations.
00:11:35.372 - 00:12:24.770, Speaker B: It's not mandatory. If you would like to operate your smart ball manually, you can do that. But if you want to automate to avoid performing recurring operations manually, you can again specify some different parameters to make sure that your actions remains riskless. Like again, gas limit, which is slippages, like things that may depend on the network. And you can specify all that to make sure someone else can execute that action on your behalf. The good thing is that you don't need to prefund your smart bolt. In order to do this, our automated bots are going to use the tokens that are flowing through the action to pay for the gas transaction, and it's extremely easy to use.
00:12:24.770 - 00:13:06.460, Speaker B: Let's see a few more complex examples. Something that we've been seeing a lot in this space is about what we call fee distribution. So there are some exchanges, or most of them, that usually charge a fee on the token out right of a swap. So they have this issue that at the end of the day, they started earning different fees in different tokens in different layers. And for them, it's extremely hard to at some point move all those tokens into a single token into a single layer. Like if you had to do all those swaps and breaches manually. Again, it's insane.
00:13:06.460 - 00:14:07.680, Speaker B: And with a smartwall, this is extremely easy. We can simply configure a smart ball that will look into the best prices between multiple exchanges, swap those tokens into a single one, let's say a stable coin, and then for example, migrate all the or breach all the stable coins into mainnet. So automatically they will have at the end of day, in a single wallet, they will start saving those fees, let's say in USDC automatically. Again, they can configure, which is the slippage they're okay with, which are the dexes that you would like to operate with if they want to define certain thresholds of amounts. Like I don't want to swap fees that, I don't know, don't reach at least $200 or something like that. So again, this was a really good solution. We already implemented for Paraswap, which is already running, and we're currently working in a similar one for balancer.
00:14:07.680 - 00:15:35.420, Speaker B: And this is another example that was really interesting for us, trying to do a little bit of dog fooding here. We decided to model a smartwall for our own use case, which was, how do we keep our bots with enough money to pay for all these transactions? So, I mean, they simply don't run out of money and basically break everything. So this was interesting because what we did was try to build a smartwall that will basically detect the funds in the bots, and they will basically swap all the fees that we are collecting for the native tokens on each layer to fund the bot in case it was running out of funds. So the smart bot is out there running. We simply don't need to care about our bots. They're always with funds, and if they reach a certain threshold of a balance below that threshold, it will be funded by the smart bot. So what's next? As I was saying, we develop all this infrastructure, which is open source, and we would love more people to come and start building their own custom operations with this smart vault.
00:15:35.420 - 00:16:13.320, Speaker B: But currently what we're trying to do is work closely with different projects to understand their needs, grab more feedback. We're trying to improve our solutions to see if we want this to be extremely easy to use. So we're working closely with them. But at some point what we love to do is, again, for developers to come and they to model their own operations without our help. So we're going towards that place. If you have any questions. I think we have some time to ask questions.
00:16:13.320 - 00:16:31.010, Speaker B: Otherwise you can find me Twitter discord, you can text me if you want. Okay, we have some time for questions, so I don't know if someone would love to ask any questions or us. There's a mic coming.
00:16:32.100 - 00:16:51.472, Speaker C: How do you get info such as like slippage limits and how much output you need for certain swaps? Is that collected off chain? Can you put the mic, sorry, how do you get info such as the slippage limits for swaps and what sort of output you should expect? Is that done off chain or do you fetch that info on chain?
00:16:51.616 - 00:17:09.830, Speaker B: No, all these kind of rules that you define your smartboard are verified on chain, of course, that we can keep you safe. Hello.
00:17:10.840 - 00:17:26.760, Speaker D: So you would define yourself as more as a yearn, as a service or kind of. Anyone can plug in and build your own vault. And can you have different of those functionalities into one vault? Or is it one functionality per vault?
00:17:27.600 - 00:18:04.970, Speaker B: Like modeling multiple operations in a single ball? Yeah, you can do that for example. Yeah, you can do that. I didn't talk about this today, but you can define different triggers. Like if I do this, I would love to trigger this action. Like I don't know, if I send money to this wallet, I would love to wrap it and then invest it in curve, let's say. But if I send money to this address, just pick it up and invest money in another defi protocol. You can build triggers to inform the smart vault you would like to do.
00:18:04.970 - 00:18:19.040, Speaker B: Yeah, but you can model that well. Okay guys, thank you very much.
00:18:23.250 - 00:18:25.130, Speaker A: I wipe.
