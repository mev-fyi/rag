00:00:08.570 - 00:00:38.738, Speaker A: Hello. Are we good? I guess we're good. All right. Hi, so, my name is Jan. I'm here to talk to you about Zirkit, which is a security focused zero knowledge roll up that I've been working on. I'm a technical lead at the project, and I'll touch a little bit on related points, like the Ops back, but really I want to talk to you about the unique features that Zirkit is going to be introducing into the rollup ecosystem. So what is Zirkit? Let's jump right to the sort of key takeaway.
00:00:38.738 - 00:01:27.942, Speaker A: It's a zero knowledge roll up that's fully EVM equivalent, or at least it will be by the time it hits mainnet. And the idea was to start off as this sort of research project and do some cool stuff and take our own approach in order to leverage the best sort of things that are out there, but to come up with new ideas and actually have a place to implement them and use them and see the benefits of that research. So Zirkit is a full EVM compatible zero knowledge roll up, and we'll talk about the stack that it's built on and all the cool ideas. But the key takeaway is it's going to have fast finality, just like your typical zero knowledge roll up. So it's not going to have days long finality. It's going to have minutes or hours. And because of the compatibility, it's going to be very seamless for developers to pick up.
00:01:27.942 - 00:02:26.490, Speaker A: If you can deploy on Ethereum, you will be able to deploy on circuit without any major issues. So let's talk about the origin. I already said it's a bit of a research project that sort of came from this idea that there's a lot of cool things that people can do on layer two s or layer ones, or blockchains, or smart contracts, or just about anything in this web three space and myself and some others, we were looking around and saying, hey, there's some things that we would do differently. There's some things that probably the ecosystem can benefit from in a lot of ways. Some of that is what we call sort of security first mindset. Some of that is sort of technical improvements on the research. So on the technical side, there's research to be done on things like near proof systems or custom optimizations, or ways to check that code is secure.
00:02:26.490 - 00:03:05.666, Speaker A: On the security side of things, there's always an option to do better. In this space. Maybe you have to give something up, but as I'll talk about in the coming slides, we think it's really important to sort of look at security as a first class research direction for a roll up, because it could be the next major existential threat in this field. Right. Bridges have been notoriously sort of problematic. Obviously, most of them work pretty well, but there's been some pretty high profile issues. And what we definitely don't want is a repeat of this situation inside of a roll up or anything else in this ecosystem.
00:03:05.666 - 00:03:44.898, Speaker A: And since we're playing around with roll ups, let's see what we can do here. But at the end of the day, the result is a pretty unique new layer, too, which is circuit, which I'm here to talk to you about today. So without further ado, let's talk about some of that actual research that went into this project to get it sort of off the ground. What we wanted to do was see what was out there and see what we could improve on right away. There's no point reinventing the wheel, and there's some really good, strong players in this field doing really good things publicly and open. So you might be familiar with optimism and the op stack. So they have really great code in a lot of ways.
00:03:44.898 - 00:04:25.934, Speaker A: They give you stuff for sort of free things like sequencers or batchers and smart contracts and bridges and all of this. So if you're familiar with that ecosystem, there's this nice familiarity that you get from using the system, and it's reasonably well engineered and it's quite a good starting point. And so we saw that and said, oh, you know what, that's pretty cool. We can probably build on that. But we didn't want to be optimistic, so we're not going to be optimistic. And we want to shove in some proofs to make it get a little bit closer on the finality to something that we want. So we started looking around at other things, and of course, there's people doing that too, in public, doing really good things.
00:04:25.934 - 00:05:08.560, Speaker A: For example, the PSE team at the Ethereum foundation, they have a lot of research on this area. They have ZKVM specs, things like this. And we wanted to start looking at that and see what we could do to put these systems together or any other systems. Right? There's other people building in public as well, but maybe they're not talking to each other. Maybe some people aren't trying the combinations we want. And most importantly, what about our own ideas that we had that we wanted to explore? Right? If we have our own way of computing MSM, where does it go? Does it go into one of these things or into our own system or something else entirely, and we decided to go with our own. So I'll talk a little bit about these origins, specifically the ones we get from the op stack, because that's in the title of the talk.
00:05:08.560 - 00:05:35.750, Speaker A: And honestly, it's pretty good. The op stack gives you a lot, as I mentioned, but it's not necessarily ready for ZK primetime. Right. It's very easy to get an optimistic roll up out the gate with very minimal effort. They've done a really good job at producing a lot of those artifacts, setting up good documentation. The public good is very much public and good. It is a very quality starting point for these things.
00:05:35.750 - 00:05:57.354, Speaker A: The license is friendly, the community is active. You'll probably hear some talks from them here and everywhere else you go. I think they're a great team, and generally they're modern and up to date. So when you look at their code base, they use geth as a starting point. It's not some old version of Geth. It's actually pretty up to date. When the sepolia upgrade, for example, happened a couple of weeks ago, they were pretty on the ball.
00:05:57.354 - 00:06:24.214, Speaker A: They had things coming. So it's a really good starting point. And of course, they're operating a main net with real funds, so they're sort of putting their money where their mouth is in the sense that, you know, it works. And there haven't been any major issues on the network, which is great. So this is actually good tech that not only sort of looks good on paper, but works and hasn't been subject to any major issues. And we hope that continues to be the case. Of course, that being said, you don't get everything for free.
00:06:24.214 - 00:07:08.338, Speaker A: The optimism side of it gives you the optimistic parts and a lot of the core infrastructure. But if you're trying to put a zero knowledge proof system in there, the code's just not ready for that yet. Or at least it wasn't when we started doing this. And so there's actually a lot of challenges that come with this. It's not as simple as I'm going to download the op repo, some other repo, say, from PSE, and I'll just point some things to each other and it'll just work. There's actually a lot that has to go on in order to make all of those systems talk to each other in a way that makes sense in a way that works, and then there's just engineering behind the scenes that need to happen. I can talk a lot about that, so much so that I actually have a separate talk about just those issues of getting zero knowledge proofs into the op stack.
00:07:08.338 - 00:07:47.134, Speaker A: Please find me somewhere here at E. Denver on Friday for that talk. For now, I'll talk about what we did achieve through circuit, and in particular what we were trying to do was answer some new questions, right? Like we saw these two frameworks, for example, like the PSE circuit descriptions or EVM and the optimism stack. And we said, what else is necessary? Is it really that hard? Right? As I said, there's a talk where I will say it actually is a little bit harder than that. But it's not just a sequencer and some circuits. There's a lot of gluing that happens. There's a lot of engineering that happens.
00:07:47.134 - 00:08:46.642, Speaker A: Obviously, if you're building a product, there's probably also marketing and all of these things. But I'm a the technical guy, so I'm going to sidestep all of that. But the point is, what else is necessary and what else can we do differently? And when we talk about what else we can do differently, is it good to question everything? Are things really done properly in some areas? What happens if we change some small functionality because we have a different requirement? Is there something we can do that actually lets us deviate from being very EVM equivalent in order to get something that people want, for example, we haven't done that yet, to be totally clear and not sure that we will, but we wanted to have a space where we could explore these options, right. We wanted to see if we change something, what goes wrong or what goes right. Hopefully everything goes right and we won't do anything that'll go wrong intentionally, of course. But we also wanted to understand why some decisions were made. There's actually a lot of really cool stuff in these systems, but not necessarily really strong justification for some of them.
00:08:46.642 - 00:09:38.294, Speaker A: Some of it's very clear, some of it's the most obvious thing in the world. And you'll look at a system and you'll say, yeah, that's the way everyone should do it. Of course, other things are a little bit less clear, right? Like if you have a zero knowledge roll up, do you need to pre mint a bunch of eth to some account in order to fund deposits? Or why do you need deposit transactions to begin with, or system transactions, rather? Sorry, deposits you're probably always going to need. But there's these questions that are implicit with some talks and some documentation, others that are just left totally open. And by actually starting to build the system, we're actually able to understand those and in the appropriate amount of time, we'll be able to share all of those justifications with you, either by just saying, oh, this is why someone did it, or here's why they did it. We think, and here's how we're going to do it better, because we think we have a different option. And in particular, what do we want in the future? Right.
00:09:38.294 - 00:10:30.566, Speaker A: Right now, EVM equivalents and being a very seamless development experience is a very good gold standard. It's not likely to change, but I bet there's also things we can do better in different areas. Whether that's on the development experience, the EVM itself, or something entirely different, that remains to be seen, because we're still building the actual main sort of product. But we wanted to be able to ask this question and talk to the community about it. Of course, a lot of what we'll want in the future is some of this custom functionality, right? I talked a lot about how it started off as a research project. That's absolutely true. And part of that was we saw things like computing msms or proof aggregation systems, and we said, oh, they're doing it really cool, but what if you changed it to something else? And so circuit came along and said, hey, we can try to see what happens if we change it.
00:10:30.566 - 00:11:10.740, Speaker A: And if we change it, what do we get? And so far it's been pretty positive. We've liked a lot of the things. There's also a lot of things that aren't necessarily open and really well shared. So a lot of the back end infrastructure, right? As I said, a sequencer and smart contracts do not announce you make. You need to do a lot of other things, especially in a zero analysis. If you actually want to prove a block, you need to either set up a marketplace or have systems talk to each other inside your back end in some way that isn't necessarily clear and for which there isn't necessarily a good goal standard public good for that just yet, that'll probably change. And certainly when we open source, you'll be able to see whatever we're doing.
00:11:10.740 - 00:12:03.042, Speaker A: But also, maybe we just have different requirements, right? Maybe we're going to do something different in particular if we think about how to secure this space. One of the key things we might want to do is just add some security features, which we'll talk about, but other things might be different from the open source standards. So if PSE is really committed to always doing things exactly EVM equivalent with all the same hash functions, maybe we're not, because you get better proverb performance, if you change it to something that's more ZK friendly. And so we need to explore all of these things. And as I said, we'll talk about security, which will actually come next. So there's a lot of research questions that we can answer and we will answer, but actually the biggest one we really cared about was security. What can we do differently to make sure that roll ups are actually very secure? As I've mentioned, bridges sort of have a really bad track record in the past.
00:12:03.042 - 00:12:26.726, Speaker A: I think in the last couple of years there's been billions of dollars lost or hacked. And my biggest fear is that this is going to come to the roll up space. I really hope it doesn't. I sincerely hope it doesn't. But the point is, security should be always paramount and always be the first thing you're talking about. And depending on who you ask, roll ups are just complicated bridges. Certainly they're very big, complex systems.
00:12:26.726 - 00:12:53.138, Speaker A: It's not surprising that there's a large surface for attacks because of this. There's smart contracts you can attack. There's sequencers. There's probably a whole bunch of other things that can go really wrong in this. And so thinking about security from the get go was really, really important to us in order to make sure that nothing goes wrong on our system. But that's all technical stuff and that's sort of air quotes. Obvious, right? You should build your system the best way you possibly can.
00:12:53.138 - 00:13:11.302, Speaker A: You should not introduce bugs. You should configure things correctly, et cetera, et cetera, et cetera. Maybe you can actually do more. And this is maybe where we get a little controversial, but we think it's something very interesting. We can actually say security. Sorry, wrong slide. Security should actually try to do something for the end user, not just be built correctly.
00:13:11.302 - 00:14:06.202, Speaker A: So for Dapps building on our network, maybe we can actually help them, right? We're in a privileged position by operating this network. What can we do with that privilege? Can we do something useful? And maybe some people won't really like that, but maybe others will certainly really like it. So in particular, what we can do, and what we sort of coined the phrase we're here, is sequencer level security. So the sequencer can actually be involved in helping to secure the system beyond just being well engineered and not having bugs and doing its job, we can say it has other specific jobs it can do. So in particular, what we could try to do is something like have the sequencer simulate transactions before they hit the chain and say, oh, if this is going to do some damage to some deFi protocol, we're going to hit the pause button on that transaction. Now, note that I said pause and not cancel or stop. We don't want to necessarily censor people.
00:14:06.202 - 00:14:49.878, Speaker A: That's not the goal. But aliveness guarantee doesn't necessarily mean you have to do it in the next 2 minutes or 5 minutes. It can be the next 24 hours. And maybe that's something that's really valuable, because if we can prevent issues occurring on this chain, that might be really interesting. And this is sort of akin to this notion of a DFI circuit breaker where we break composability in some settings in order to get some additional security in the future. If that idea is the one we're going to sort of try and it works out and everyone sort of has a pretty good idea of its potency and its power, we can do even more cool things. Right? And this is why this is also a research project.
00:14:49.878 - 00:15:39.670, Speaker A: We can do things like add custom invariants, because what you probably didn't hear me say on the last slide, if I was careful, was like, I don't know what a bad transaction is. And so having a sequencer go in there and trying to figure it out is not something that we're all going to agree on. That's a very different notion for different dapps. Something that's bad for your DAP might be actually okay for my DAP, or even favorable. It would be really cool is if we could have this sequencer level security take custom invariants so you could come deploy on our chain and say, hey, don't allow any of these transactions that break this invariant to happen very quickly because those are really problematic to us. Or you could do things like, yeah, anything problematic can be done by me because I'm going to put up a stake. And if it's actually problematic, you can just slash me and you can take that slack.
00:15:39.670 - 00:16:20.870, Speaker A: But beyond that, there's other research directions, like what happens when we decentralize the system. We're going to start off centralized like most of the people, but also just what else can we do? If there are ways that the privileged roles that we operate or that the decentralized actors of these roles operate, can they do more to secure the ecosystem in some sense? Now, exactly what that will look like is very different for each person. And of course, there will be a lot of discussion. And if you're interested, please come find me. Come talk to me. Talk to me about what you think security is and what you'd want security to be. On your chain beyond, of course, just having everything engineered correctly, which is always going to be a nice little goal.
00:16:20.870 - 00:17:20.422, Speaker A: And so the combination of these ideas, which are a lot of research background and a lot of interesting takes on how the security of an ecosystem can actually be positively impacted by these privileged roles, gets us to Zirkit, the network I'm here to talk about, which is essentially just a zero knowledge roll up, as I've said, where we have these key features on the left, the sequencer level security I talked about, where we'll have some extra protections for the users and Dapps deploying on our chain. On Testnet, that functionality doesn't yet exist, but it will very soon. In the middle, we have things that look like l one blocks. So the developer experience is exactly what you'd expect from EVM equivalent, the Ck roll up. Your l two blocks look like l one blocks. Maybe the gas size is a little different, maybe the timing is a bit different, but more or less from the development point of view, no change. And then we'll also do a whole bunch of unique optimizations on the prover, which some of you are probably very interested in and I would like to share more about.
00:17:20.422 - 00:17:42.714, Speaker A: But again, it'll be a separate talk. It's at a different point. And the idea is to get some really good performance gains there, and it'll be really cool to talk about these ideas. And at the end of the day, we have circuit, which is an ick roll up where we get security through modern research and good ideas. That's the goal. So where are we? We've come to the end. We launched our public testnet at Devconnect.
00:17:42.714 - 00:18:04.306, Speaker A: So it's been up and running for the most part for a couple of months. That's still ongoing. We just did some upgrades to the network. We'll probably do a couple more upgrades. We're optimizing the prover, getting all the PRS merged, cleaning everything up, getting it ready for sort of primetime. We'll open source the repos at some point, and then hopefully later this year, the plan is to actually go live. And then afterwards we'll explore even more of these ideas.
00:18:04.306 - 00:18:44.670, Speaker A: Right. What happens with these invariants for dapps and things like this? So if you're interested, please come talk to me. I would love to hear what you're interested in. But at the end of the day, what we have is a new research backed zero knowledge, EVM equivalent zero knowledge roll up. Sorry, said that too many ways. And what we want to do is really just have a playground, where we do things through good research with a little bit of experimentation. We're not going to go so fast that we break things and everyone's funds go down, but we want to be able to have cool ideas and a place to implement them when it comes to securing these ecosystems.
00:18:44.670 - 00:19:12.734, Speaker A: So we'd like to say circuit is a new role that's greater than some of its parts. Right. We have small improvements in some areas, bigger improvements than others. And together, it's something that's actually pretty different than a lot of the stuff that's out there, where the standard is just the same old but faster. So thank you. Please reach out, Janet Zirket or my telegram or discord or whatever. And we've got a stake system, a restaking system going on right now, too.
00:19:12.734 - 00:19:15.920, Speaker A: You can check out at stake circuit.com. So thank you.
