00:00:00.890 - 00:00:02.030, Speaker A: Neptune stage.
00:00:13.200 - 00:00:18.616, Speaker B: Well, there's a mix up, so I will need to give the MC to the moderator.
00:00:18.728 - 00:00:34.710, Speaker A: No problem. Hello, everybody. My name is David Snyder. I'm one of the co founders at lit protocol. Not sure what happened with the mix up. And today, let's see if we can get this up. Thanks.
00:00:34.710 - 00:01:12.988, Speaker A: Awesome. Today we're going to talk about account based solutions to web3 Ux, and I'll define that as we go. So here's our agenda. First, I'll tell you about what's lit protocol. Then we'll talk about some of the current problems as it relates to logging in and signing up in web3 today. And then talk about what does the open network solution look like? And then, yeah, if there's any questions, happy to take them. So, Lip protocol is a decentralized key management network.
00:01:12.988 - 00:01:52.736, Speaker A: It combines two security technologies. One is called multiparty computation threshold secret schemes. That is a method for taking a private key and dividing it up into a bunch of parts or shares that live across this distributed network. This is live today as of three weeks ago, after three years of research and development. And then the second security level here is that all of the operations for that key share run inside of secure encrypted virtualization. And so this is the security model of defense in depth. And that secure encrypted virtualization is a type of trusted execution environment.
00:01:52.736 - 00:02:45.310, Speaker A: You could think about it as a secure computer or a black box that the node operator can't get into. And so with this two tiered model, that's how collusion is prevented. And of course, it's a key management network. So the two fundamental features of the network are signing things like signing a transaction, which we'll talk about today in the context of users and wallets. But the network also supports rules based encryption for data marketplaces and licensing and user owned data. And so how it works specifically is lit is a key, and each of these nodes, as I mentioned, has these two security components dividing up the key, running it in the tee. And then developers can articulate programs in JavaScript that dictate how this decentralized virtual key will sign and encrypt anything.
00:02:45.310 - 00:03:34.540, Speaker A: And as you can see, there's a bunch of standard web two style authentication methods that are hooked up to this. And so as a distributed primitive that's relatively new and kind of a first of its kind, we've seen just an explosion of application types. Everything that you see on this list, there's one or more venture backed teams building these types of products using lit in some capacity. And here are some of the brands. And if you want to talk about any of these use cases after this talk, I'll be around. And at the end of the day, despite how sophisticated and complex the tooling is, what really matters is making the product easy to use. So that's topic one, what we've been doing at lit protocol and decentralized key management.
00:03:34.540 - 00:04:43.920, Speaker A: Now let's talk a little bit about web3 Ux. So right now, if you want to make the claim that you have one login for the entire Internet, which is kind of the dream of web3, there's basically only one option that you have, which is you have to know where your key material is likely in the context of self custody, using wallets like metamask or your ledger. Then there's also an emerging market for wallet as a service providers that are selling a SaaS module for creating accounts and logging in. There is, I think, kind of a nefarious thing happening in that industry, which is some of those vendors are claiming we have universal portability. But if you read the fine print, it's only portability across applications that have installed their specific SaaS app. And frankly, this is an untenable future where people have to have different interactions with Dapps depending on the vendors that they use. So it really prompted us to start thinking about what is the open solution to this kind of portability.
00:04:43.920 - 00:06:02.188, Speaker A: And one more information as it relates to prerequisites before we talk about what the solution, I'm sure you all have familiarity with what a crypto domain is, Alice ETH. You can see a couple of vendors listed here, but functionally, all of these vendors, and there's many more doing crypto domains, have two things in common. One is an on chain registry associating the human readable name, let's say Alice ETH with the wallet address. And that is the thing, when somebody types Alice ETH into a wallet that gets looked up and goes, okay, where should we actually send these tokens? Zero, X, so on and so forth, is there. And also these smart contracts that manage these names have a place to write metadata, so just arbitrary data associated with that account. And so the big insight here is let's combine these two things together, essentially taking a crypto domain like Alice ETH and combining it with a key to create what is the ultimate web3 account object and the standard name that we've been talking about. And we'll be putting forward a cape a chain agnostic improvement proposal together.
00:06:02.188 - 00:06:49.644, Speaker A: Next week is login with name and I'll take you through the user flow as well as how it works as a standard. So the user flow is really quite simple. Somebody clicks login with name on one of the login modals, then they are presented with the authentication challenges. Just like logging into any web two website and then that's it, they're logged in. Depending on the KMS provider, the key management system being used here, there may be some details to figure out whether or not there's a secret stored on the user's device or not. In the case of lit, that there's not, which is helpful for portability. And now let's talk about how this works.
00:06:49.644 - 00:08:15.424, Speaker A: So the insight here is in that metadata field of the crypto domain, writing the key management provider there such that the user, Alice, when Alice enters Alice ETH into the modal, the modal looks up on chain and goes, who's got the key for this name? Then that key management provider is notified and says, hey, Alice ETH is trying to log in here. What is the authentication material associated with Alice? Let's say for the sake of example, it's sign in with Google with a six digit authenticator, Google Authenticator style code. Those get served back up to Alice. Alice clicks login with Google, enters her six digit code, which in turn she's now completed the authorization and the authentication, excuse me, with the key management provider. And so the signature is generated and Alice is logged into the DAP. So the state of development of this today is we should have a live demo of this in a week that is using lit keys and the WagMe react kit. There's a chain agnostic improvement proposal going up soon and a lot of our collaborators around this cape are the folks from EIP seven, triple five that are thinking about single sign on and authentication.
00:08:15.424 - 00:09:23.304, Speaker A: These two things are going to work together and I think the future is really bright because we now have this really coherent idea of a web3 account that you can log into accounts with. You can receive messages at it, you can receive money with it, you can send money with it. And the fundamental idea here, now that we are in a space where there are third party key management systems like lit, and I'll mention more about that in a second, is that the user is functionally logging into the domain using the web, two style authentication. And then the domain, because it has a key associated with it, is logging into the DAP. And this is, I think like a much better way for managing portability and making it open and universal than we have today. And as we think about, okay, what key management vendor should be used here. Some of the benefits of using lit, this distributed key management network running the MPC TSs inside of the Tees is that you get full portability because there's no secrets stored on the user's device, there's no centralized controllers.
00:09:23.304 - 00:10:03.108, Speaker A: This is a distributed network. As I mentioned, we just launched with mainnet three weeks ago after three years of R and D. Currently it uses a testnet token that'll be changing later this year. Social authentication, multifactor authentication. One of the other really interesting benefits around having the key material live inside of a network is being able to add all kinds of automation. So there's an application called telefriends, which is an intelligram wallet app where users can opt into automated copy trading, where they can say, I want my balance of my wallet to look exactly like this wallet. And they can be totally no human in the loop.
00:10:03.108 - 00:10:58.532, Speaker A: They could be asleep, they could be at the bar, they could do whatever the signing is happening in an automated way. Because what lit functionally is, is a key management service where you can write serverless functions that dictate how the distributed key will sign and decrypt. And then one of the other benefits here, as this starts to become fully realized, is this also becomes a mechanism for abstracting the bridging of assets across chain and the chain selection away from users that can move into the background. And then also mentioned domain wallet ID. This is the crypto domain project that we're playing with, where any given brand can essentially become a registrar of these type of domain wallets. Functionally, what we're talking about here to any arbitrary customer that they may have. So for example, mrbeastfanclub.com
00:10:58.532 - 00:11:50.472, Speaker A: could provision Alice mrbeastfanclub.com and that name, Alice MrBeast fanclub.com, becomes one of these kind of domain wallet or ultimate web3 account objects that we're talking about here, combining the functionality of a wallet with a crypto domain. And then this is my last slide just to kind of zoom out here. This is obviously a deep dive into a specific user experience standard and convention. But just want to mention a perspective that has been really alive for us over the past three years in building out this key management network, which is that one way to think about the revolution that is afoot is certainly through the lens of digital assets and blockchain. But my invitation to you is actually to even broaden your view of what Satoshi did.
00:11:50.472 - 00:12:40.350, Speaker A: And if you go back to the white paper and look at the first two sentences. The first sentence is, we need peer to peer cash. I'm paraphrasing here. The second sentence is, digital signatures provide part of the solution, but then we also need a method to prevent double spending. And then the next nine pages are all about proof of work and the way that we've really been thinking about what is web3, what is crypto, what is happening here, in a way, is the digital signature revolution, because this encompasses everything happening in digital assets, everything happening in user owned data, everything happening in credentialing, and it's all made possible through cryptography. And yeah, as I mentioned, lit is a key management network that's distributed, fault tolerant, threshold based, that developers can use to articulate programs for signing and encryption. And with that, here's how to find us.
00:12:40.350 - 00:12:49.710, Speaker A: I'll be around right now and yeah, really grateful that you're here or watching on the Internet. Hello, future. Thank you so much.
00:12:59.670 - 00:13:19.880, Speaker B: Thank you, David. And sorry everyone, for the mix up. So please let's welcome on stage Murad Agdenis, who's the founder of Primev and he's solving for execution hedge. So welcome him.
00:13:23.370 - 00:13:26.120, Speaker A: Maybe some friends there. Hey, everyone.
00:13:28.010 - 00:13:35.418, Speaker C: We'Re just going to have you take a break for a couple of minutes to be on schedule with it, but we'll just do a check here. I'm just say maybe starting your presentation.
00:13:35.514 - 00:13:37.520, Speaker A: Looks like we're taking that couple of minute break.
00:13:39.890 - 00:13:45.140, Speaker C: Yeah, we just got to plug you in and test it and click your spot. We just want to go give you like.
