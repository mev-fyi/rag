00:00:05.480 - 00:00:25.778, Speaker A: Welcome, ladies and gentlemen. Today we are talking about the latest addition to the Solana framework family. Yes, we're talking about Seahorse. So for those you guys who don't know, Seahorse is a framework that allows you to write Solana programs in Python. So that's exactly what we're going to do here. We're going to take a look at Seahorse and we're going to see how this thing works. Let's jump in.
00:00:25.778 - 00:01:14.842, Speaker A: So this is a hello world Seahorse program. Now, it might not look like much, but that's exactly the point, right? Like this thing is a powerful abstraction framework and it's actually built on top of anchor, which we know from a previous video is also built on top of Solana program and other crates. So let's break down exactly what this thing is doing and how it works. But as you can see, you can just write traditional python, going to import the Seahorse prelude module. We got declare id like we've seen before, and then we pass our accounts in to the function as parameters. And we can go ahead and do some business logic below here. And when we add this annotation as instruction that actually will convert this function into the instruction with the context and everything, like we saw an anchor.
00:01:14.842 - 00:01:47.616, Speaker A: Now this is the really cool part. Let's go take a look at this thing in versus code. And so we can see some of the other files that are moving around this repo. So here you can see we've landed over in versus code. We've got the exact same code, same program written in Seahorse Python. And now if we go ahead and do a Seahorse build, you can see that we just built our Seahorse program, and you can do this in SolPG as well. But what actually happens when we do that using the Seahorse Cli? Well, if you go over to programs here, you see we got programs PI, and that's where we're working in Python in here.
00:01:47.616 - 00:02:35.196, Speaker A: But if you go into programs, you can see that this is the rust code that we've seen before. So what is this like, what is all this rust stuff? This is the anchor version of what you're writing in Python. Isn't that crazy? You can go ahead and see the rust code of the Python code that you're writing. So not only can you just write full on salon of programs in Python, you can actually write them in rust using Python, and you can learn rust or learn anchor by building with Seahorse. So there's a couple other cool little nuggets in this repo too. Like if you go into the Seahorse folder here, you can go ahead and open prelude and you can see what's inside of it, all the different data types and the functions that come with Seahorse. And these are constantly being updated.
00:02:35.196 - 00:03:19.616, Speaker A: Seahorse is a brand new project. There's going to be more stuff coming, so definitely go take a look at the GitHub. But you can see all the different things we can use in here. And then also because this thing is, you know, in its entirety an anchor repository, and because it boils down to anchor rust code, you can see that everything else in here corresponds to what you would expect in an anchor repo. So we've got an anchor toml, you know, like we've got a couple different crate and rust oriented things up in the programs folder. We have a program workspace for our cargo workspace, and we have our tests written in typescript. So let's go ahead and write a test for this, which, as you can probably guess, is just going to be an anchor test like we saw before.
00:03:19.616 - 00:03:40.666, Speaker A: So we'll just flip back to SolpG. We'll run a build and deploy. We'll go ahead and download the IDl because anchor. And we'll just go ahead and grab our program's id. We'll drop this right into anchor toml like we did before. We're connecting to Devnet using our local config here. We'll make sure to drop our IDL right here in the test folder.
00:03:40.666 - 00:04:04.204, Speaker A: And then here's our test. You can see it looks exactly the same as the anchor video that we were looking at previously. Okay, same exact setup, same exact anchor NPM SDK, same functions, same everything. We're even using program methods. Hello. Because we happen to name our function the same thing. But either way, you guys can see this is exactly what was the design with Seahorse.
00:04:04.204 - 00:04:27.630, Speaker A: You eventually are just going to use anchor when you're done writing the python code. So it's as if you wrote it in rust anchor. Anyway, so anyway, let's go ahead and add our public key for our program, and let's kick this thing off and see if it works. Hello, Solana from Seahorse. So there you go, guys. That is Seahorse language. Absolutely fantastic build.
00:04:27.630 - 00:04:44.798, Speaker A: Great job. Shout out to Amelia and anybody who wants to work on this project, you should definitely do. So here is the repository right here. Go ahead and start contributing. Go and fork it. Do what you got to do. Help Amelia and everybody else working on this thing bring this project to life.
00:04:44.798 - 00:04:59.554, Speaker A: There is so much potential in allowing people who maybe don't know Rust but really know Python, other similar languages to be able to come in and write solana programs and learn how to build on Solana and be part of a great ecosystem. Thank you, guys. Later.
