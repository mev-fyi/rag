00:00:00.360 - 00:00:42.662, Speaker A: Welcome to this week's Changelog, where we talk about the changes on Salon week by week. I'm joined today by Jonas and let's get started. So this past week, they announced that they're going to run Mountain Dao V four in August. So if you're curious what Mountain Dao is, it's a location that you can go co work with other Solana developers and learn about how to build on Solana from the best. Mountain Dao is really a special event every year. They rarely run twice a year. And what they have produced is the most, really the most hackathon winners for the big Solana hackathon.
00:00:42.662 - 00:00:58.920, Speaker A: Every single time you get a large amount of very good developers in one place talking about Mountain Dao and how to build on Solana, and they're learning from the best. Jonas, do you have any thoughts on this?
00:00:59.112 - 00:01:16.364, Speaker B: Yeah, I heard, like, for example, the clockwork SDK came from there, which is really cool. And I also heard it's not only about coding, but they're also having fun. I see here at least people riding and snowboarding and having beers and so on. So I'm excited. Maybe I want to go there, actually.
00:01:17.224 - 00:01:18.520, Speaker A: Yeah, that would be fun.
00:01:18.672 - 00:01:42.208, Speaker B: Yeah. And another thing that was announced this week is that there will be a game jam on Solana. So the first game jam, it's called Speedrun. It's going to be taking place on the 26 July for only five days. And we will build some games together. I think it's going to be super exciting to see some on chain games and Solana integrated games where the games are in the focus of the whole event. It's going to be really cool.
00:01:42.376 - 00:01:46.416, Speaker A: So, Jonas, for those that don't know, what is a game jam?
00:01:46.560 - 00:02:17.554, Speaker B: Yeah, a game jam is like the traditional game jam is that just people come together, usually over a weekend, and at the beginning there's a topic. So something like, for example, mountain. And then everyone tries to build a game around a certain topic. And after the 48 hours or something, it should be done. Since we are building on a blockchain, it's a little bit longer. So it's five days. So people can figure out some bugs that they have when building and preparing a little bit.
00:02:17.554 - 00:02:26.684, Speaker B: But yeah, this is what it is. And in the end, all participants vote on the best game. And then there's a winner and there's also some prices.
00:02:27.384 - 00:03:05.854, Speaker A: Cool. So definitely be on the lookout for the game jam is what it is. So this week's proposal, or SIMD, is SIMD 50. And what that is, is, it's titled increased prioritization fee. What it's trying to solve is a lot of people are using prioritization fees in production today, but they're not really using it for the right reasons. They're not using it to fight congestion or, or account lock, like fighting the, who's owning the different account locks. They're mostly just using it because there's not really any information on how to use it today.
00:03:05.854 - 00:03:56.270, Speaker A: So this is supposed to do setting the compute price, rounding down to the nearest thousand micro Lamport. So if you did one micro lamport, it would round down to zero and have no impact on your transaction. If you did 999 micro lan ports as your compute price, it would also round down to zero and have no prioritization effect. So this is assimd. So it's still a proposal. It has not been implemented, it has not been agreed upon. So if you have specific ideas or thoughts on what it should be or how prioritization fees should be shaped in the future, definitely join the discussion on the SIMD GitHub repo on solanafoundation.org.
00:03:56.462 - 00:04:52.686, Speaker B: Yeah, especially because there's also an alternative described here. And in basic, I would say it's a good change, right? That if you can't just put one micro lampard and then you get prioritized for this like ridiculously low fee. But then, yeah, if you want to participate in the discussion, you can find it online and say which alternative you like best and what your opinions are. So the next thing we have is SIMD 47, which is about the last restart slot. So let's say the Solana blockchain needs to restart for some reason, which never happens again. But if it does happen now, all the protocols, like the DeFi protocols for example, have a restart slot that they can work with so they can see when exactly it restarted and then they can wait a bit until all the prices stabilized or something like this. So every protocol can now handle it themselves.
00:04:52.686 - 00:04:55.038, Speaker B: So it's probably a very good change, right?
00:04:55.206 - 00:05:49.092, Speaker A: Yeah, they can definitely do like DeFi protocols have already implemented something to basically prevent issues during restarts, but this kind of like adds an additional check that you can do. So say you had a restart and you now know that there was a restart, and there's, the last restart slot was, I don't know, two slots ago. What you can do is you can set your order book to post only, basically so that you're not executing trades until everybody else has a chance to get online and try it out. It's mitigation against high price action during the first couple slots after a restart, which always happens. So it's a good change. It was actually a simd that was built by both proposed and being built by the mango team. So looking forward to this coming live.
00:05:49.268 - 00:06:10.854, Speaker B: Yeah, really cool. And another thing I saw is that there's now some documentation about the ZK token SDK. So I think this is related to Token 2022 where you can have private transactions. Correct me if I'm wrong here, but having some docs on this is definitely cool. So people should yeah, I can now start reading the docs and trying it out.
00:06:11.354 - 00:07:12.724, Speaker A: Yeah, you're completely right. The ZK proof stuff is all about the token 22 confidential transfers. What this enables is you able to send privately tokens from one user to another on chain which is completely new, never been done before on Solana, and really cool that it's going to be enabled natively on the token program. One thing to note on this is that Token 22, while most of the work is ready and complete there, the confidential transfers will not be ready until when 1.16 is released. There is a more there's more information online on the SPL dot solana.com for the tokens token 22 status page and you can kind of get your information of when is it going to be released, what's the timelines and what is the current outlook on Token 22.
00:07:12.724 - 00:07:30.264, Speaker A: Today people are already using Token 22 in production, which is awesome. Good to see people trying out and testing the waters. But for some of the newer features like ZK transfers they're not ready yet but they'll be there soon.
00:07:30.694 - 00:08:14.982, Speaker B: Yeah, I really like how people dive into the water immediately and try it out. That's really nice to see, but I think it's also not 100% audited yet. So use it still on your own risk but will soon be done. And yeah, talking about CLi 16 as some of you may notice, there are some problems currently with it that it depends on a different Bosch version. So for example, if you get the error that your pubkey can't be derived or something like this on accounts, then this is probably because it depends now 116 depends on a different Bosch version which is I think ten. And yes you can fix that one. And there's also some problems with upgrading to anchor 28 currently, especially with switchboard.
00:08:14.982 - 00:08:28.134, Speaker B: And I would recommend you most of these problems have already been solved or found workarounds on stack exchange and the Bosch problem is currently being worked on by the engineers. Hopefully everything will be fixed soon and then we can all upgrade.
00:08:29.034 - 00:09:26.710, Speaker A: Yeah, it's always good to have smoother upgrades than we have in the past. On the other resources of the weak note we have from Anvit, who is a dev rel within the Asana ecosystem. He wrote on an article on durable and offline transactions using durable nonsense. This is really cool. So what it kind of enables is today, whenever you send transactions, you're usually waiting on the block hash and recent block hash, meaning if the block hash is too old, you won't be able to send the transaction. This makes very, very difficult to send transactions in an offline manner, especially if you're running like an air gap machine. So you have a machine that has never been online for security reasons, you want to sign a transaction on it and then send that transaction over to a machine that can then send it over the Internet.
00:09:26.710 - 00:10:08.642, Speaker A: You have 150 block hashes to do so. And that given that every block hash is 400 milliseconds roughly, that's not much time to sign transfer to computer send over Internet, it's basically nearly impossible. So durable nonce is what they enable is you be able to sign using durable nonce transactions instead of the normal transactions, and this enables you to do it over a longer period of time, not that 150 block hashes. So it's really cool that we have a guide on this that was written by someone within the Solana ecosystem. Looking forward to more, but if you're interested in learning more, check out the guide and read about how to use them.
00:10:08.818 - 00:10:22.000, Speaker B: Yeah, that looks really cool. It's very nice article. I heard there's also some other use cases. For example, someone recently built an NFT minting tool using nonsystem, which would greatly improve the performance during mints. So also excited about that one.
00:10:22.152 - 00:10:56.772, Speaker A: So the Madlads team, after they did their launch, they came up with the idea like, oh, I could have used durable nonces for this, and use like ten k durable nonces. I could have queued them up on a back end server based off the signatures and ran them one by one. And the mint experience would have been incredibly smooth. Wasn't done. But there is now a tool today and an implementation that's open source for any mentoring or any NFT mint project to use. So definitely check that out as well.
00:10:56.948 - 00:11:07.316, Speaker B: Yeah, if you have a release of an NFT collection, just take it, try it out, and have a very smooth experience. So I think this is already it for this week, right?
00:11:07.500 - 00:11:14.132, Speaker A: Yeah, that's it. So thank you all for joining this week on this week's Changelog. We'll see you next week. Bye.
00:11:14.148 - 00:11:15.236, Speaker B: Have a good week, everyone. Bye.
