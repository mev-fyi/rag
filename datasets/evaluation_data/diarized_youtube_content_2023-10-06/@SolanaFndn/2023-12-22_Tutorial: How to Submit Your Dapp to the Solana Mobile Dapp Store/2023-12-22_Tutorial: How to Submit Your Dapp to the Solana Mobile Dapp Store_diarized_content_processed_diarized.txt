00:00:00.320 - 00:00:32.706, Speaker A: Hello everybody. Today I'm going to walk you through how you can submit a game to the Solana Dapp store on the sagafone. And the game we're going to use for that is one of our example games, Solana 2048. And yeah, so you start your journey here in the docs dot solanamobile.com dappublishing. And now we're just gonna go through the steps and we gonna perform them together. A few of them I did already like the installation, so I go through them and just explain them.
00:00:32.706 - 00:01:12.762, Speaker A: So the first thing we're gonna do is we need to enable corpak. So you just copy these commands into your, into your terminal and then you run them. Basically if you don't have JQ installed, then you go to just JQ and you just type brew install JQ and then you should have this installed. And then you do the command prepare corep with NPM version 7.13 and activate. And then you need to have Android SDK tools installed. If you're using unity then you might have these installed already.
00:01:12.762 - 00:02:12.104, Speaker A: So you can go to preferences and external tools and here you have all the links that you need for that. If you don't have them installed, if you're not deploying a game, maybe then you install Android studio. And as soon as you have Android Studio installed and you start a new project, then it will install the Android SDK in your library folder like library Android SDK platform and then Android 33. And the path that you actually need to put here to the build tools is not just the path to the SDK, but you need to put the path to the build tools. Because in this folder here it will use the AAPT tools to actually deploy the program the APK later. Then you need to have Java installed. Maybe you have it installed already.
00:02:12.104 - 00:02:59.050, Speaker A: If you don't, then you just go to Java from Oracle and you install the latest version. Or I think version 17 is recommended. So I installed JDK 17 for the ARM processor which is installed on my Mac. So if you have these two installed then this is already very good. Then you start creating a folder for your publishing. What I did is I put it directly into my repository and I just put it within the unity folder and then under publishing. And then when you do these functions here, PMP init and PMP install save dev Solana mobile dapp store and then you initialize it.
00:02:59.050 - 00:03:46.834, Speaker A: Then it will create you a bunch of configuration files. So it will create this config Yaml here and it will also add an environment file here so that you can make visible with control shift if you don't know. And then yeah, so now the files are installed and now we go to publishing. And I'm not quite sure where the Android SDK is set. So let me quickly show you how you can set the correct value here. So basically this is the, the path of your Android tools directory like I showed earlier. So here you need to have the correct path in here to your Android build tools.
00:03:46.834 - 00:04:21.998, Speaker A: And then let's go to preparing for publishing. So it starts with an icon, we need an app icon in unity you can find this here. I have this little otter here with the numbers and I copied it over also in my publishing folder. And then I also added four screenshots. And then I also add the apk here. And here you have a warning. So it's very important that you use a new key pair when you want to publish your game or your app.
00:04:21.998 - 00:05:06.688, Speaker A: So what I did for this is you go to publishing settings to the Keystore manager, and then here you create a new key pair. You save it somewhere, don't commit this one of course, you create a new key score, you give it a name and a password and then you use this keystore to create your apK. So I guess it needs to be unique in case there's conflicts with the normal Google Play store on the same phone. Then yeah, you put your screenshots here in the right resolutions. What I did, I just took a screenshot from within unity. I put them into Photoshop and scaled them to the correct resolution. They can either be landscape or portrait mode.
00:05:06.688 - 00:05:48.586, Speaker A: And yeah, that's already all about the files we need. Then we need to populate the configuration file. So this configuration file you find here in, it's the config Yamo and you can for example open it in visual studio code. That's what I did, added all my, all my settings here, like my name, the email address is important because this will be used to give you an update on your submission later. Then for the website I put the repository and I still need to replace the license and privacy URL. Then I have here the icon, like the link, the path to the icon. So I just put it in the same folder.
00:05:48.586 - 00:06:08.092, Speaker A: So it's just store icon p png. And then for the screenshot I just have a screenshot, one png. Then you have a short description. This needs to be only 30 letters. And then you have a longer description. Then you have your release and you have some testing instructions. These will not be published.
00:06:08.092 - 00:07:10.026, Speaker A: This will be just used by Solana to review your app. Okay, so now we already have all our things things prepared. So now we need to create a key pair and if you have never done this before then I can recommend you this page here which tells you that you can grind a new key pair by typing Solana Keygen grind starts with and then what do you want to start it with? So I use this, I just went in the terminal to the correct folder. Now I'm in unity so I can now go into CD publishing and now I can copy this key pair like this command and here I can for example say this is my app key. So this one needs to keep safe because this one is used to mint the nfts which will represent your app in the depth store. So I did this earlier. You can see my key pair is here in this folder.
00:07:10.026 - 00:07:54.534, Speaker A: This is needed for the next step. So now you have your key pair created and then what I did is I went to my phantom wallet and I transferred some soil into this key pair because you need some soil to mint the nfts. Then there's a section here about the mainnet rpc URL. Like you shouldn't use the mainnet one. In my case I used a helios rpc URL. But you can also use quick node or hello moon or triton or whatever rpc of your preference. And it might also work if you just put minus u and m then it will just use the default main net rpc but they are sometimes a bit slow.
00:07:54.534 - 00:08:41.075, Speaker A: That's why this recommendation is here. So then we need to validate our configuration. So I will quickly do this here. So I do mpx depth store validate k and now I need to put my key pair. So let me quickly copy this off screen so you don't see my key pair. So now I have this copied over and now I can validate my configuration and if everything is correct then we should now have like publisher valid Json valid, appjson is valid and our release Jason is valid. Very nice.
00:08:41.075 - 00:09:16.720, Speaker A: So now we can go to the next step and we can mint our publisher nft that I did already here. So you can see this is my publisher nft. It has my name, it has the store icon, it has the URL to the GitHub repository. In your case this might of course be the URL of your project. And now we need to go to the next step. And now we create our app nft so that I have not done before. So I will quickly do that.
00:09:16.720 - 00:10:02.294, Speaker A: And now I need to copy my key pair again. Okay, so now we are here and I will paste my key pair here again. And this should now create us our app NFT. And as we can see, this is looking good. Fail to send transactions simulation attempted to credit an account that did not have prior credit. Okay, this is probably because this is now on Defnet. So I put um for Mainnet and let's see if it works with the mainnet RPC.
00:10:02.294 - 00:10:30.670, Speaker A: Otherwise I would need to do this of course with the helios RPC, for example, so the endpoint URL mustache with HTTP or HTTPs. So, okay, so I need to copy a URL. I will quickly do that. 1 second. Okay, so I copied Rpc URL. I will use this one now. And now it is uploading our store icon to arviv.
00:10:30.670 - 00:11:08.786, Speaker A: The app NFT has successfully been minted. I can look at it on sol scan. Let's quickly do that. So I move this over here. Now I can see my app on soul scan. So the next thing we need to do is we need to create a release NFt. So now I copy the same thing here.
00:11:08.786 - 00:12:02.304, Speaker A: Again I put the key pair and yeah, the path to the Android SDK we don't need because we have this in the end file already. If you don't have this in the end file, then you might need to put URL to your build tools of your Android SDK in here. So now I copy my key pair again. Okay, now I copy the mainnet Helios RPC again. This one you should also not share by the way. So let's copy this. This here.
00:12:02.304 - 00:12:39.250, Speaker A: And now we are creating a release NFT. And now after we created the release NFT, all we need to do is we need to submit our app. So that's very exciting. And then when we submitted our app, then all we need to do is wait for the decision. So we will get an email from the dev store and then hopefully in a few days the app will be available in the Solana Dappstore. And the slander Dappstore is very cool because it allows you to do crypto things in your app, which is not possible. For example, in the Apple App Store.
00:12:39.250 - 00:13:33.826, Speaker A: It's like, it's very difficult to get a game in there. For example, it has functionality for nfts because you need to then mint them via in app purchases. But now you can see here I can play this game and yeah, I'm still waiting for the upload here to be done. Okay, look like it just took a while for the upload and the next thing we're gonna do is now we gonna publish the app. So all we need to do for that is we replace create release with publish submit. So we do publish submit, we put the same key pair again and the URL of RPC and now we are submitting the app. So importing joys and metals is experience experimental feature.
00:13:33.826 - 00:14:16.480, Speaker A: This feature could change any time. So I think we are missing some, some parameters here. So for submit app we also need to add complies with Solana Dappstore policies and requester is authorized. Okay, so I will copy the key pair again here. So link to the key pair. Let's paste this in and the RPC URL again so that we put here and now we should hopefully have our app published. Let's see, let's run this.
00:14:16.480 - 00:14:36.056, Speaker A: No matches found. Okay, so we need quotes. I think so. So it looks like now we are deploying. Let's see. Successfully submitted to the mobile Dapp store. Okay, so now we are just waiting for a reply.
00:14:36.056 - 00:14:56.730, Speaker A: And yeah, if you want to do this yourself, feel free to also write me if you need support or Andrew from Solana Labs or. And yeah, good luck with your submission. I can't wait to see all your apps and games in the Dapp store. I will definitely try them out. Have a nice day everybody. Bye.
