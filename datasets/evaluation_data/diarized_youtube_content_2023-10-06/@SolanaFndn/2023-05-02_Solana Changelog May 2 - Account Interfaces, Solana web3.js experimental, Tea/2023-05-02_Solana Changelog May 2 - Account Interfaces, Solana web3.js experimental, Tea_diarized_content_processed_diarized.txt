00:00:00.320 - 00:00:08.862, Speaker A: Hello, everyone, GMGM. I'm Nick from the Solana foundation, joined with Jonas from the Solana foundation today. Welcome to the Changelog. Hello Jonas.
00:00:08.998 - 00:00:12.662, Speaker B: I'm doing great. Lots of new stuff we found this week.
00:00:12.798 - 00:00:46.180, Speaker A: Yeah, there's been some, some cool stuff, some performance improvements and like ease of use for validators. We'll get started talking about some of these, the commits for the week. I was looking at the purge snapshot directories before the archive commits. I think it's a slight quality of life improvement for validators. It makes it so when they're actually restarting their own validator, or if you're trying to start up a fresh validator, it'll automatically purge the snapshot directory. So it makes it just a little bit easier to do validator restarts. Maybe you need to update your software or anything like that.
00:00:46.180 - 00:01:24.314, Speaker A: So I thought that was pretty cool. And then I guess kind of related to that, actually, there's an additional commit for sort vetted bootstrap rpcs based off ping times. So it's just another quality of life improvement for validators and validator operators to make it so that way they can actually, every time they do a restart of a particular validator, not like the whole network, but every time they do a restart of a validator, you can download the most recent snapshot of the entire state of Solana. And this just makes it a little bit easier, a little bit faster to try to download those snapshots, which is, is great for validators. They can get caught up to the network even faster now.
00:01:24.474 - 00:02:03.774, Speaker B: Yeah, so it's really helpful for the validators to be able to catch up faster. A few other commits I saw is here, there's now a TPU quick field and RPC contact info. So this will probably make the transaction from the legacy contact info to the new contact info easier. And yeah, now you can like get the TPU quick field from, from a certain validator. Also, there's a little bug fix. They fixed it so that the compute unit limits are also now correctly calculated for built in programs. And so I think you told me earlier that they haven't been calculated before, right?
00:02:04.154 - 00:02:22.582, Speaker A: Yeah. So it's just like assorted little minor tweaks and like the knobs to turn in calculating compute units and the whole like, compute budget itself a little bit of changes to that. So there's going to be some slight changes to the actual compute units that every transaction is going to have now just to make it more accurate.
00:02:22.758 - 00:02:46.904, Speaker B: Yeah, cool. Another nice thing I found is t xyz it makes it quite much easier for people to install Solana now. So if you use the t packet manager, then all you need to do is to type Solana in your terminal and it will install all the dependencies like rust for example, and it will be just magically doing it in the backend.
00:02:47.404 - 00:02:54.004, Speaker A: You just run their shell script which installs their package manager. And this is from the team behind homebrew, right?
00:02:54.124 - 00:03:35.744, Speaker B: Yeah, exactly. It's exactly the package manager like homebrew, but it comes with a little bit of extra magic, which makes it possible to install Solana now so much easier. I tried it out earlier actually, but I had everything installed already so it didn't really help me. But it would be really cool if someone tries it out if this. Yeah, how well this works. And they also have some things planned for later to make it for open source projects to basically earn money with their projects, because there are many unfunded and maybe not very recognized projects out there and they are trying to tackle that. So yeah, we'll definitely have a look later how this will turn out.
00:03:36.044 - 00:04:13.924, Speaker A: Yeah, cool. I love quality life improvements for developers and for validators. Another quality of life improvement is all of the changes and updates to Solana web3 js specifically for the experimental version. All the work that's gone into it, it makes it so the new Solana web3 js. Basically, in a nutshell, it separates a bunch of the packages and information in the separate packages. It makes the bundle size so very small. When you start talking about RPC methods, it gets down to about 3 kb instead of the massive 40 50 kb that they are currently.
00:04:13.924 - 00:04:23.084, Speaker A: And it's really cool how they do it. It's basically all of the RPC methods are represented as a typescript interface, which is just really cool.
00:04:23.624 - 00:04:42.434, Speaker B: Yeah, I heard that the whole repository moved from Solana.com, like from the big mono repository to its own repository. But I didn't really understand how this works, that it's only 3 kb now. How do these interfaces, how do they not have an implementation, but still can do the RPC calls?
00:04:42.974 - 00:05:15.384, Speaker A: Yeah, so it kind of ties in with how typescript works, because typescript gets transpiled down into JavaScript. So when you write a typescript interface for representing each of the RPC methods, those interfaces effectively, that typescript code effectively gets removed from the JavaScript once you bundle down for production. So you build your application for production, so you basically cut out all of that additional code. And that's the secret sauce of how the new RPC package is just going to be so very small.
00:05:15.764 - 00:06:00.794, Speaker B: That sounds great and also comes with a bunch of other improvements. So I would recommend you check out this tweet here, this thread from Steven Lucher for example, you can now also abort your RPC requests and you can have different transfer protocols here at the same time I would recommend you to try it out. But there also comes something, a bigger change which you may not like or do. Like they got to remove the RPC batching. So in the past it was possible to batch multiple RPC requests at the same time. But this of course saves you the network overhead that you have. But it also comes with some disadvantages.
00:06:00.794 - 00:06:37.954, Speaker B: Like Steven is also very nicely here explaining it in this thread. Like if you do three RPC calls at the same time and one takes longer, then of course all of them need to wait for the longest one to finish. And this comes also with a bunch of problems for the RPC nodes because they have load problems if there's like big bunch of these requests and they are also like difficult to error handle. Like if one of them fails, then basically all of your requests fail. And yeah, so they, the idea is to remove it. Like here is the commit. So in the experimental version it's actually already removed.
00:06:37.954 - 00:06:56.782, Speaker B: And yeah, there are some things that you can do instead. It's like you can for example just use promise in JavaScript and send them all at the same time and then handle them separately. So yeah, it's very interesting and I would like to hear your discussions on it if you like this change or not.
00:06:56.958 - 00:07:01.118, Speaker A: Yeah, cool. Are there any srfcs that caught your eye this week?
00:07:01.246 - 00:07:44.434, Speaker B: Yeah, there is actually a very interesting one about interfaces for programs. So you might know that, yes, you might know that there's another program coming, the token 22 token program, and I think they have the same interface still. But in general for programs it's nice to if you would have an interface, and this RFC is talking about this. So the interface would define a certain amount of accounts. For example for a transfer it would be owner to authority, and then just how much you want to transfer. Now how much is actually data not so it would be owner, two authority and the mint. And then your implementation could have some additional accounts to this.
00:07:44.434 - 00:08:03.226, Speaker B: And yeah, if you are interested in reading about this, it's in the forum dot solana.com and I think it's a very interesting change, which opens a bunch of possibilities, but it's also a bit complicated. So if you want to dig into it, I would recommend you to read through this.
00:08:03.410 - 00:08:22.734, Speaker A: Yeah, that's really cool. I think the whole concept of interfaces on Solana programs makes a lot of sense. Makes it so you can have it. Makes it so you can kind of have, like, more scalability and options for the token standards and things like that. So. Yeah, I think that's really cool.
00:08:23.194 - 00:08:33.452, Speaker B: Yeah, super. I think we're already at the end for this week. Um, tune in again next week, everybody, and see you next time. Bye bye. Great.
00:08:33.548 - 00:08:34.044, Speaker A: Thanks for watching.
