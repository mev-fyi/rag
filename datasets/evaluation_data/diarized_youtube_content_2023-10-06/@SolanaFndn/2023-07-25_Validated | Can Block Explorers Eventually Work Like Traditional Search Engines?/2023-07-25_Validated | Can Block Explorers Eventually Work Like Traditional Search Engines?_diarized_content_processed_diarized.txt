00:00:09.200 - 00:00:42.080, Speaker A: I'm Austin, and this is validated today. I'm speaking with Fatu Raman, COO and co founder of Solana FM, a user friendly block explorer. On Solana, transparency is one of the key features of blockchain. After all, all the data is stored in a public ledger, and block explorers play a critical part in transparency by making that raw data intelligible to people. Explorers function as a blockchain search engine, making both historical and real time information about transactions, addresses, blocks, programs, nfts, whatever, more readily accessible to users.
00:00:42.272 - 00:00:43.256, Speaker B: Sort of.
00:00:43.440 - 00:01:46.084, Speaker A: For reasons well get into in this episode, navigating block explorers on Solana can have a high learning curve, even for crypto natives. As Armani talked about in a recent episode, Solanas abstract data structures, while empowering builders with a lot of open ended freedom, makes indexing and interpreting data on the blockchain difficult. A big part of Solana FM's mission is to make this data more straightforward through things like smoother user interfaces and better data representation. According to Fatu, the end state of Solana FM should be a user experience as intuitive as Google search plus chat GPT, where you can ask fairly complex questions and get answers back. A human can understand. Most of our conversation deals with the technical solutions to to this vision. How does an Explorer scale data for a blockchain like Solana, which processes thousands of transactions per second? Are application specific explorers within the general block explorer the best way to work around Solanas abstract data structures? And what about monetization and sustainability? The cost of maintaining explorers for high performance blockchains are much higher than maintaining, say, etherscan.
00:01:46.084 - 00:02:13.568, Speaker A: We also get into the role block explorers can play in smart contract security and the ethics of Arkham's recently announced background marketplace. If you have thoughts about this episode or topic suggestions, you can reach out to us@validatedalana.org. Dot this is definitely one for the nerds. Let's dive in. FatU welcome to validated.
00:02:13.736 - 00:02:15.800, Speaker B: Thank you, Austin. Happy to be here.
00:02:15.952 - 00:02:40.186, Speaker A: Yeah, so we're going to be talking today about data. We're going to talk about explorers, Solana, some of the new problems we're seeing with these new class of explorers that have to deal with just a huge amount more data than like, the classic etherscan does. But I think before we kind of dive into that, just give me a walkthrough of what Solana FM is and why you guys decided to build a block explorer.
00:02:40.370 - 00:03:35.864, Speaker B: So Solana FM basically is a block explorer of Solana. We actually started with an indexer, so at that point of time, in 2021, there wasn't any indexing solutions for Solana yet. And I think it's because it's a new blockchain and there's still much that needs to be done. So we thought of building the lowest layers of data pipelines, which is the indexing layer, and through that, we actually won one of the hackathons. And from that base layer itself, we decided, hey, you know, everyone at that point of time was complaining about explorers because it's not readable, it's slow, and there's so much more data building above it. So hence we started off using the past and also the index data that we have to build Solana FM. So right now, what Solana FM is, is not just an indexer, but also an explorer.
00:03:35.864 - 00:03:36.328, Speaker B: Yeah.
00:03:36.376 - 00:04:06.030, Speaker A: And so going back to kind of that original thing about like, oh, let's build an explorer, let's build data pipelining. Why was that a challenge that existed still for the Solana network at that point? I think if you look at most EVM chains, block explorers are pretty quick. It's a pretty easy thing to build. What about Solana? Actually both made it. So when you guys started looking, there wasn't good data pipelining. And how did you have to architect that work differently?
00:04:06.182 - 00:04:45.366, Speaker B: So for Solana itself, I think we all know that data within Solana is kept very differently. And also the account structure of Solana is very different from Ethereum. So in Solana itself, at the very start, everyone was getting confused of what accounts actually were. So when you say an account in Ethereum, everyone knows what you mean. It's just a wallet, but in Solana, that's a normal account. And then you have the owner, you have the ATA, and then you have the PDA and many other accounts. So it was a technical jargon that really hindered, I think, a lot of people from fully understanding the blockchain itself.
00:04:45.366 - 00:05:26.366, Speaker B: So Solana labs actually built the open source explorer, and that was so scan at that point of time. But I think some of it, most of the structure of the explorer was following the data structure of Ethereum. So the way data was presented was the same way as how Etherscan tried to present Ethereum's data, which worked for Etherscan, but it didn't really work for, for Solana because you have all this deep technical jargon which is present in Solana, but it's not present in Ethereum. So we thought, why not build a new explorer which is not only friendly and understandable for devs, but also in the future for newbies that actually want to explore Solana itself.
00:05:26.510 - 00:05:48.844, Speaker A: Yeah, you know, this is something that some version of this Armani was talking about in one of our recent episodes where he was saying that Solana at the base layer is actually far less opinionated with much freer defined data structures than you see on something like Ethereum. And that, that has advantages and disadvantages. But is that part of what you're talking about when you say like, that, the data model on Solana is just very different?
00:05:49.344 - 00:06:32.642, Speaker B: Definitely. I think there's advantages to having such a robust blockchain. The abstractness of Solana itself is amazing, and that presents a lot of base for developers to actually build new and innovative things on Solana. But I think for an average cho to actually understand what Solana is, that abstraction itself has to be taken away from them so that more people can actually adopt using the chain without having to understand the technical knowledge behind it. So I think one example I can probably give is like, this is not just in Solana itself, but just overall in crypto itself, such as like hash, nonce, gas, limit, block height. And then in Explorer itself, you have program logs like instructions within the transactions. So all these.
00:06:32.642 - 00:06:59.244, Speaker B: Yes, it is important for developers to debug and also to identify certain things within the transactions. But when we start building Solana FM, like, we always ask ourselves, like, okay, does an average Joe actually have to understand this? How do we make them understand this better? So this is the same correlation towards the web app. Back at the start, you know, they had to understand HTML, TCP, IP and all these to actually navigate and create websites as well.
00:06:59.404 - 00:07:11.308, Speaker A: How does a block Explorer like Solana FM make money? Explorers are obviously amazing public goods that thousands of people use every day. But at the end of the day, you are a business and you do have to make money.
00:07:11.476 - 00:07:36.238, Speaker B: So at the start, Google made money through ads. Same thing as what etherscan is doing, because you're searching for everything on block Explorer. When you want to search a block, when you want to search a transaction specific tagged account, you go into Explorer. The reason why people build block explorers is solely for traffic. So Etherscan's monthly traffic is about 10 million. Our traffic is close to half a million. So you actually have this kind of numbers going towards your site.
00:07:36.238 - 00:08:28.472, Speaker B: Most of your revenue actually comes from ads, but the secondary revenue that you actually have is through the use case of your APIs and also your other tools that actually power the explorer because devs actually understand that they require this kind of data for their application. So that's probably like the current way of how block explorers are monetizing. I think what differentiates between Ethereum as well as Solana for block explorers is very different. So Ethereum for Etherscan itself, part of their business model, is actually building explorers for l two s, because at one point of time, you know, there's Polygon, you know, there's all the other l two set that actually are built out on top of Ethereum. And Etherscan actually builds explorers for them as well. So there's Avascan, there's no trace, and then there's new l two s that are being built now. So Etherscan actually offers that solution towards l two s that are built on top of Ethereum.
00:08:28.472 - 00:08:51.476, Speaker B: But for Solana itself, l two s itself hasn't been a main focus for the chain yet, but there is a lot of builders, and that itself is the biggest market of Solana. So on our case, it was mainly more towards indexing services, so games and then different NFT marketplaces as well. So that was essentially our business models indexing and also APIs towards this kind of businesses.
00:08:51.620 - 00:09:07.904, Speaker A: Yeah, I noticed. One of the things you guys have built out just on the Solana FM page is that like an open book explorer. Talk to me a little bit about this sort of idea of building explorers for specific types of applications versus building like an explorer for a network.
00:09:08.324 - 00:09:23.620, Speaker B: Right. So the reason why we focused on Openbook was because we knew that there had to be a very specific application that actually allows people to search anything DeFi related in the blockchain. So what better way than to start from the core level, which is openbook?
00:09:23.812 - 00:09:29.980, Speaker A: So, sorry, just to go back, why is that like, what about a general purpose block explorer doesn't solve that.
00:09:30.132 - 00:10:29.354, Speaker B: So I think the reason for that is because of the way different applications are built on Solana itself. So, for example, NFT marketplaces have different programs and different instructions that actually power it. So it differs from DeFi applications such as perpetuals. A transaction listing on tensor is very different from a transaction per order on Zeta. So the different ways of actually showcasing this kind of data is very different from how you would see on an average block explorer as well. So we believe that specific applications itself has to have their own way of showcasing the data, not only in how the data is being shown, for example, listing on tensor or buy order on Zeta, but also the way it's being represented, for example like graphical formats to showcase where the money moves. It does very well with Jupyter, but for tensor itself, it's just easy to see listing, buying and then selling, selling.
00:10:29.354 - 00:10:34.346, Speaker B: So yeah, it's just different ways of showcasing different points of data.
00:10:34.530 - 00:11:01.504, Speaker A: So delivering visual data to Solana FM users in the way you guys are describing it is really cool and exciting. But when you have thousands of transactions per second, like Solana does, that's a lot of data to keep track of. What are the use cases for people who want to interact with that graphical data? I imagine it's a very small subset of users. And from a business point of view, in terms of your monetizable user base, why are you guys investing so much time in building out the graphical information system?
00:11:01.884 - 00:12:03.400, Speaker B: So the vision that we have is actually focused on accessibility of Solana's data. So the way we do it is through three different points, which is, firstly, is to change the complexity into simplicity. Second is to expand the search capabilities, and also, lastly, is actually improving the data presentation. So before we dive into the three main points, how I would like to see Solana FM is actually just a search engine towards the realm of Solana's data itself. So how you imagine Google to be the search engine of web two, Solana FM should also be the main search engine for everything web3 in Solana. So first things that we want to do is obviously changing the complexity to simplicity. So not only do we educate, like, users in the space through this podcast, or even tutorials or hacker houses, but from a product perspective itself, we have to design very intuitive interfaces where you provide very easy to understand explanation of technical terms.
00:12:03.400 - 00:12:31.716, Speaker B: So if, let's say, one of, like, my aunties or grandmas decides to explore Solana, she can actually understand what's actually happening in Solana. So one example I can give is that the first time where we actually built out the transaction flow, the first thing we did was ask non crypto native guys, do you understand what's happening? And then they said, oh, yes, this guy is transferring two WSO to this guy and he receives, you know, 40 USD, I'm going to jump in here with a thought.
00:12:31.900 - 00:13:27.486, Speaker A: It's a very interesting proposition to say, like, we're trying to build Google search for Solana and at some point, maybe other blockchains as well, right? Very interesting proposition. But at some point there, the early days of Google, it made sense because the original content on the Internet was knowledge, right? The first things on the Internet were a bunch of scholarly papers. And so at some point, it makes sense to start saying, we're going to start indexing all of these scholarly papers. And yes, we also get into other stuff in the early days of Google, of course, but the fundamental concept of a search engine is there's a bunch of knowledge on this thing we're calling the Internet and we have to figure out how that people might want to access and they're going to search for. I guess I'm not sure what knowledge exists on a blockchain that I would want to search for today. And that doesn't mean that, well, I mean, if you look at a network, like, are we. If maybe there's more of something that makes a lot of sense there.
00:13:27.486 - 00:14:01.586, Speaker A: But, like, what do you think? Either has to change from a blockchain perspective or like, like one of the cool things with Flan FM is I can put in Djenape into your search bar, I can find the ape number that I want. I don't have to go find whatever it is somewhere else and try and figure out, oh, like, what's the hash of this dgen ape that I can throw it into a block explorer so I can find it like you do on the Solana Labs Explorer. But there's sort of a thesis there that you're getting at, which I think is very interesting that there's stuff on blockchains that's worth searching for. What is it today? Or what do you see coming soon that's going to be worth searching for?
00:14:01.740 - 00:14:57.922, Speaker B: The highest search things in Solana itself, at what point of time was defi tokens? And then when NFT season came in, it shifted towards the NFT. So right now, the biggest searched items, I would say on the blockchain is really tokens. Secondly, it would be high value addresses. So high value addresses as in, okay, who owns the biggest amount of tokens in Solana network itself, you know, who holds the most stake, who holds the most orca or who swept 69 med lads. So these are the simple things that people actually search, but people would either need to understand how to get there, which is you either have to know the account hash of the person or you have to know what they bought, and then eventually it will lead you there. So it becomes like a two step process. I think right now the main focus should really be on allowing people to search without having to find out how to search on the blockchain itself.
00:14:57.922 - 00:15:04.094, Speaker B: So that actually happens via advanced search functionalities that should be built in blockchain explorers.
00:15:04.434 - 00:15:08.954, Speaker A: So in what ways has etherscan solved this problem? If you think they have?
00:15:09.114 - 00:16:08.472, Speaker B: The first thing that Etherscan actually did was a token distribution tab which definitely showcased who owns the most tokens. But I think deeper advanced search functionalities that they did was actually filtering through the different timings and also filtering through inflows and outflows so that itself, having advanced search functionalities reduces the steps taken to actually find out what you actually want to find. But if you do want to look into these specific accounts and find out at what point of time did this guy buy a Matlab, you would actually have to know SQL and go to Dune, for example, to search for this kind of stuff. Right now on Etherscan is basically just a one click. It's like, oh, time range, at what point of time, which token, and then you can see all the buys and all the sales and allows you to track at which block, at which time, at which account as well. Honestly, as for now, we're still trying to keep up towards having advanced filters because I think that is where Etherscan actually found very, very good adoption.
00:16:08.648 - 00:17:19.910, Speaker A: It's interesting, the piece that I keep coming back to here is there's a lot of information someone could want, right? And I guess part of the question for me is like, I don't mean to say why, but like a little bit of why. Everything you're talking about is sort of, in my mind a little closer to like a business intelligence tool than it is like a traditional search tool. And I guess the obvious question is like, are you building chat GPT support in or something like that, right? Because what you're talking about is much more complicated questions that aren't sort of like, uh, even like, what was the last price a mad lad sold through? Or was the highest price a mad lad sold through? Those are pretty easy questions, right? But like, who owns the most of something? Is actually a question that requires a little bit of coding experience to actually write out a query. But it's not just a Yolo question. I will go to Google and I'll just be like, what's the biggest steam engine anyone ever created? That's a very easy question for Google to answer, but it's a much harder question for Google to answer something that's more subjective or require the compilation of data from multiple sources. Is that what your aspirations are? Is that the search engine is less of kind of the goal here and it's more of like a, I don't know what to call it, information distribution machine.
00:17:20.102 - 00:18:23.564, Speaker B: How we've been building is really to tackle the problems which the current crypto natives face first, which is the support that blockchains explore have even till now, it's never as advanced as Etherscan or even as data tools that's present in Ethereum. So it's always a catch up game towards those tools itself. And I think it's fair as well, because not only are we later to the game, but also the complexity of Solana is definitely much more complex than what Ethereum is. So it's a catch up game towards the functionalities that actually serve and also help people find out more about the chain first and then later in stage, where it actually is the main tool for searching anything data related. In Solana itself, we'll probably focus on how do we actually build a search feature which actually allows anyone to not only retrieve data which is random, like what you said, you know, any random data that exists in the blockchain, but we just have to find a specific balance between what people actually want to search. And like you said, random searches in the blockchain itself.
00:18:29.264 - 00:19:17.498, Speaker A: So I want to talk a little bit about the way that you end up parsing contracts and data on Solana, because going back to the episode of Armani, if something conforms to the ERC 721 spec, you can just look at it and read it. It's very easy for an explorer to interpolate that data. XNFDs are a whole new thing, and there isn't necessarily a spec around how you view them. CNFTs fall under the same category here. P NFTs fall under that same category. So I want to go into a little bit about how you actually parse the data, but just like, conceptually right now, is that like a manual process where, like, you and your team is like, okay, metaplex updated the standard. What do we need to change? Like, do you, do you have 14 versions of historical support for token metadata in the Explorer? Like, what does that process look like? Let's just start there.
00:19:17.666 - 00:20:19.072, Speaker B: Got it. I think let's talk about, like, anchor programs, because that's the easiest program to talk about if it's uploaded on chain. If we do have the IDL and also the different versions of the idea at different points of time, then yes, it becomes easier for us to upload because why is open source? And then our indexer actually captures the IDL at that point of time. So that that specific IDL focuses on the transactions that actually use these programs at that point of time. So our indexes can capture all the idls that are posted on chain, but what about those which are not on chain? So at the start, that was a very big problem for us. At the start, we only supported, like, let's say, the top ten top 20 protocols and then we had to go into the doors like, hey Orka, can we have your IDL? If we could sign NDA or something, we can sign it so that we can actually pass the data. But as of now, we've actually managed to find out a way of how to decode the data itself, not only from the instructions that are available, but also through the program logs as well.
00:20:19.072 - 00:21:29.624, Speaker B: Yeah, so it's a lot of reverse engineering, but at the start it was a lot of manual work of really understanding the program blocks and then re engineering it towards breaking down of what each instruction looks like. So that itself was a main problem at the start, but after a while we actually managed to find out a scalable and also automatic way to pass this data through the program logs. And then the problem came in again when we realized that actually, what if events can be spoofed? So there was an incident where Ethereum's events was actually spoofed, and it really caused a lot of issues within the space itself. So the reason for that is because a lot of people actually focus on executing traits or even doing on chain stuff after passing the data of events itself. But if it's spoofed and then it just messes up their whole operations. But right now, I think Macs as well as Jerry and a few others are actually working on a more safer way so that events and also program blocks are actually passed without being able to be spoofed. That's probably like the last factor that we haven't really considered, but I think after that proposal goes through, it should be fine.
00:21:30.124 - 00:22:23.692, Speaker A: Interesting. So how do you think about the interplay between the data that's coming off of something like the insights you're able to pull and the actual user experience of using a blockchain? A really good example of this. Is there a world where you start to see more of this stuff integrated into different types of data feeds? For example, one of the things people ask for constantly in explorers are information around audits or when was a program last updated, or those sorts of things. I think it's a real sort of chew your vegetables and enjoy it. To tell people, well, before you interact with a contract, you should go to Solana FM and you should look up when people last updated this contract and it was in the last 4 hours. Maybe you should be a little careful before you start engaging with it or something like that. At the same time, that's a heck of a lot of data to try and jam into a wallet.
00:22:23.692 - 00:22:41.094, Speaker A: Are you thinking about ways to extend this dataset out into more user friendly areas or even something that people would embed on a website that shows the salon FM verification of something like that. What do you think these products go to in the longer term to make blockchain more safe and usable?
00:22:41.514 - 00:22:50.050, Speaker B: So I remember that there was some part of time where there was a token verification list done by labs and then it got deprecated. And yes, it was terrible.
00:22:50.202 - 00:23:01.922, Speaker A: It was terrible to maintain. Right. We would get 300 pull requests a day. Half of them would be someone attempting to change USDC to something else and replace it with their own spam token.
00:23:02.098 - 00:23:48.998, Speaker B: Exactly. Yeah. So that token verification problem was actually, I wouldn't say it's widely adopted now, but at one point of time, Jupyter, as well as us and AutodSec came down to actually try to figure out, okay, how do we actually solve this problem? And then through that, there were actually three layers of verifications that each and every one of us did. So Jupyter was the one doing the volume verification. So right now, if you go on Jupyter, there's their own Jupyter list. And then for our side, all we do is we ensure that the smart contracts are okay and that is being done by just double checking with auto SeC itself and also checking whether they are audited. So with these two verifications, I would say that it's not really the best, but I think it would work for now and I think we'll add more checks in the future.
00:23:48.998 - 00:24:18.004, Speaker B: But that's just one way where we employ checks. So the way it actually gets towards the hands of developers that are building other apps as well is via APIs. So in the future, I think for smart contracts, which constantly gets updated and people actually need to know whether they're verified or not, we're actually going to work with auto SeC to actually have verification. And this will be posted as an API for people to pull and also maybe webhooks to allow people to be alerted whenever there's a change in the contract.
00:24:18.464 - 00:25:21.016, Speaker A: Yeah, I mean, I think that sounds really, really awesome. So like whenever I have these conversations, especially when the context of block Explorer, this is honestly why we haven't done a block Explorer episode at this point, unvalidated is because you're just struck with how much potential there is for data insights, for data availability, for providing greater security to users. And like, you know, we talked to someone like you and it's like there's actually a ton of really awesome work being done. It always seems like we are a year behind the scammers or a year behind, like, safety. As we're thinking about this, how do you sort of think about that in the context of this? Like, do you like the early days of the Internet where the wild west were, like, someone could hack into the US Department of Defense with a phone whistle, right? Like, those are the early days of the Internet. So I don't mean to sort of make us sound like we're doing worse than the early days of the Internet, but, like, how do we give users confidence and security to actually start interacting with blockchain? Because right now, when someone gets rugged and they sign a malicious contract, I think everyone's response is kind of like, yeah, man, that sucks. Like, you should have known better.
00:25:21.016 - 00:25:57.734, Speaker A: And, like, on one level, like, I'm there for you. Like, trust your code. Like, trust the contracts. Like, you gotta do your basic research on another side. Like, eh, I put my credit card in any old website nowadays because I know at the end of the day there's some user protection that, like, if I try and buy some cool thing from a website that ends up scamming me, like, American Express is going to take care of it. And, like, we don't have that in crypto, but we have to, like, get closer to something like that. How far away do you think we are from there? And, like, because to me, like, this kind of work you guys are doing around, like, data availability from block explorers feels like it's really critical to getting us there.
00:25:57.924 - 00:26:53.220, Speaker B: So the wallet itself actually holds a lot of responsibility towards the safety of the user. That's the first point of safety of what the user experiences. So if it's a malicious contract or if it's a malicious transaction, wallets actually should identify it. But what actually comes behind the scenes of those wallets is APIs as well as security alerts from whatever that powers the data towards the wallet, which is, again, either block explorers or even any indexing company out there. So as of now, we are working together with security audit companies whenever there's hacks in 2022. I think if I can recall correctly, there's more than like five major hacks that happen in Solana, and every single time, it's always two people that constantly gets activated, which is someone from the blog Explorer team and also an auditing team. So the blog Explorer team will trace what happens within the transactions and also what programs were being invoked and the smart contract.
00:26:53.220 - 00:27:22.882, Speaker B: So again, the highest level is the wallet, but the lowest level is the one that is actually the problem right now, where honestly, there needs to be more emphasis towards like auditing smart contracts and auditing it very, very deeply to identify like these vulnerabilities within smart contracts itself, because I think the biggest hacks, so not the number of hacks, but the biggest hacks that actually happen in Solana is due to smart contract vulnerabilities. And this is the ones that actually make it to the news more often, you know, do you think that's what it is?
00:27:22.978 - 00:27:32.858, Speaker A: I'm actually curious, like, so you think smart contracts is more than sort of economic attacks or key compromises or something like that? It's actually bugs in the smart contract layer?
00:27:32.946 - 00:28:04.074, Speaker B: I think definitely. Like we've seen like too many hacks that happen in ETH and on Solana as well. And whenever like, we do check with the teams, it's always a simple thing like missing an if statement. So those kind of small little things actually cause such a widespread of things. It reaches the news faster than anyone can ever imagine. So it just puts a crypto in a bad light. Putting more emphasis towards auditing of smart contracts having the accessibility towards what is audited and not, and more emphasis towards just interacting with smart contracts that were audited.
00:28:04.074 - 00:28:06.954, Speaker B: I think that should be the way moving forward.
00:28:07.654 - 00:28:48.144, Speaker A: Yeah, we're going to take a little bit of a pivot here as the data associated with on chain programs or things like xnfts gets larger and larger. How do you think about the problem of representing what that data looks like in a block explorer? Like if we're now bundling an entire react front end into an NFT, which is what XNfts do, what level of depth do you as a block explorer aim for there? Are you actually thinking about like, oh, we should be able to render that xnft in the explorer, or we should be able to show you what all the raw code file is. Or how do you think about how far to extend it out?
00:28:48.304 - 00:29:25.116, Speaker B: I think that's a very good question. Let's say 100 x nfts that are actually present. There's different applications, hundreds of different applications, and not only that, between each application there's seven ways a user can actually interact with it. It's not scalable at all. What we do now is that we will focus on the passing of the data itself. So there's three layers indexing the data and then there's passing of the data which is towards a more readable format, and then there's translating of the data itself. So the last layer itself is something that I don't think is very scalable way for us to do it, which is okay, there's 200 different programs.
00:29:25.116 - 00:30:06.364, Speaker B: Each programs has like seven or ten different ways of doing it. How do we support all 1400? No, I don't think that's possible. So in the future, what we're doing is we will pass all the data and then what users or what devs can do, which is their own inside their own Dapp, which they want to connect to as a blog explorer, is they can actually build on top of Solana FM, their own block explorer to showcase their own way of transactions and their own way of showcasing what their transaction actually means. So it becomes more like a base layer where everyone can just use Solana FM as a base and then they can build building blocks on top of it to actually better suit their needs for their own application.
00:30:06.984 - 00:30:12.376, Speaker A: I think that's really interesting, like the bounds of where that ends, you know?
00:30:12.560 - 00:30:43.710, Speaker B: Yeah, I think that's probably like the best way moving forward. Like for example, if a company builds their own ways of how I like to see smart contracts or instructions and programs, is that it's their own set of instructions. Like is your manual of creating that specific actions within your company. And sometimes, yes, people don't want to open source it, they want to close offset. So that itself limits block explorer from fully interpreting what this actually means. And a protocol knows its own users best. So if they want to build a block explorer for them, they don't have to build from scratch.
00:30:43.710 - 00:30:55.046, Speaker B: They just use our base, our code base, and then the base of the passing of data and interpret the data in a way where their customers understand, but also in a way where you know that the data is actually coming from a true source as well.
00:30:55.150 - 00:31:39.752, Speaker A: Yeah, I like that. So as we kind of go forwards and look at like what the future of blockchains in general looks like, I mean, we have for the first time, other high performance blockchains launching. Right? There's Sui, and we also have the layer twelve system, let's just call it that of like we have Ethereum L2s and eventually layer threes and layer sevens and whatever. Based on your own experiences of running infrastructure for a blockchain like Solana, which produces a huge amount of data per second, do you think the existing business models of explorers are going to survive this high data rate transition? Because I assume the cost of running Solana FM is a lot higher than running Ethereum FM.
00:31:39.848 - 00:32:08.536, Speaker B: Definitely. We talk about two things, which is the future business model and operating costs. I think to address operating cost itself, definitely, because there's so much more data in Solana, we were like, okay, we've got to index the whole chain and let's do it. Next thing we know, we were holding one petabyte of data. We're like, oh, my God, there's no way this is scalable. There's no way we can do this. So again, it went back to a time where we were indexing things, and that's why we knew that we had to build an indexer first.
00:32:08.536 - 00:32:42.364, Speaker B: But as for now, compression rates are okay. We managed to compress data in 90, I think, I think at about 95% rate. So it's pretty decent. But again, is it scalable for the future? I don't think so as well. So what is, like, the best way moving forward? So, from what I can see, our focus is really just to be a hub for anyone to build anything on top of it. It's not something like Ethereum, where, you know, it builds l two s and also other l one's as well, where they focus on their own different narratives. But for Solana, our main focus is really just supporting all the applications that are built on top of it.
00:32:42.364 - 00:34:07.854, Speaker B: That itself is obviously through the data that people actually require to run their own analytics or even serve their own internal use cases and their users. So current base model is still towards providing of APIs and also data towards these current clients. But the future based model is where things probably start to get pretty interesting. Two weeks ago, actually, when Arkham released their intelligence platform, where anyone can pay for, you know, data and stuff like that, I think, okay, to me itself, I think it's a pretty decent product, because, okay, the reason for that is because we always explore rocks and we always explore, like, the details of a rocks. And if I can get the community to search together with me and offer them a bounty towards this kind of data, sure, why not? But yes, on the other side of the coin as well, yeah, there's definitely issues on people leaking data, but I think data itself is something that is constantly growing in Solana, and I think that should be the monetization route towards the future business model of Solana FM. So what I mean by this is really, what are the different ways you can actually monetize through data? So one way is definitely through your APIs, but what can actually be done so that more network effects can take place just solely on data. And I think something that hasn't been properly expanded on is actually tagging and labeling of certain wallet itself.
00:34:07.854 - 00:34:39.428, Speaker B: So I think what I mean by this is that nonsense itself. They have their own scouts to tag and label wallets, and it's their own internal team. But what if we create a different way where people can tag and label wallets, but in a community approach where, for example, let's say I tag x as Austin's wallet, but then Austin thinks that this is a y wallet, and then there's actually a consensus mechanism that actually allows one to showcase whether this is Austin's wallet or actually, this is my wallet.
00:34:39.516 - 00:34:39.940, Speaker A: Yeah.
00:34:40.012 - 00:34:52.958, Speaker B: So I think that itself is a good way to actually expand that initial thought of how do you monetize data on chain to really increase the future based model of FM itself?
00:34:53.086 - 00:34:58.190, Speaker A: Yeah, I think it's fascinating. Well, thank you for joining us today on validated.
00:34:58.302 - 00:35:00.674, Speaker B: Thank you so much, Austin. Thank you for having me.
00:35:04.054 - 00:35:13.174, Speaker A: Validated is produced by Ray Belli with help from Ross Cohen, Brandon Ector, Emira Valiani and Ainsley Medford engineering by Tyler Morissette.
