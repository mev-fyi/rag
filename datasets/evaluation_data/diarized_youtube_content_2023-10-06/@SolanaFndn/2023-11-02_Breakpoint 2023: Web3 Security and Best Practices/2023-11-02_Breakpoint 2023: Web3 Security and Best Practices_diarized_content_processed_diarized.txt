00:00:01.120 - 00:00:37.894, Speaker A: My name is Jack. This is my third breakpoint and I'm super happy to be here. I also go by vibes. Some of you guys know me as vibes, but today I'm going to be representing SEC three to talk to you about web3, security and some of the best practices. Now, some of the information might be a little bit basic to those that might have been around in the space for a while, but I think as with all things security, they bear repeating. So let's get into it. So these are the top level topics that we will be going over today, and we're going to cover how to secure your work environment both in general and as a developer.
00:00:37.894 - 00:01:35.534, Speaker A: We're going to talk about ways to better manage your private keys and going over some common Solana issues, as well as how to better monitor wallets and smart contract addresses. So the very first thing that you should do when working and doing development in web3 is to establish a secure environment. So a common question that I get asked is how can you accomplish that? So at the root of it all, you have to have a dedicated machine and a clean machine to doing web3 specific tasks. Make sure that you don't have cross contamination when it comes to, when it comes to your machine. Right. Next, when you're browsing in web3, make sure you have an ad block installed. So my favorite ad block is ublock origin because search engines don't do a very good job when it comes to blocking malicious ads from the top, right at the top of paid advertisements.
00:01:35.534 - 00:02:58.348, Speaker A: So it's all too common to hear, even from seasoned users to fall to this type of phishing scam. And this kind of ties into the next point, which is you should bookmark all the dapps that you use regularly so that you don't actually click on something that you're not supposed to. I think a good way to cross reference is with official Twitter accounts and also validate potential links by building a trusted list of people within your social circle so that you can see whether or not these apps are actually something you should be playing around with. So the next thing that you can do to ensure that you have established a secure environment is to set up two factor authentication for as many of your accounts as possible. So one thing to note is that SMS, two factor authentication is actually considered a very weak form of two FA. So a type of well established phishing scheme is to have hackers call your phone number pretending to be you to offer you a better discount to your monthly data plan, and then asking all the authentication questions to verify your account so they then can use all the information that they've gathered from calling you. Provide that to your telecom provider, telling them that you've lost your SIM card and therefore need to replace it.
00:02:58.348 - 00:03:54.680, Speaker A: So now you've lost access to your phone number, which can be used to do forget password in a multitude of different platforms. So if possible, don't use SMS. Two fa so as with most of our current web, three interactions happen through browser extensions. Be very wary of downloading unknown browser extensions that are not hosted on the Chrome store. If you must download a novel extension, be sure to test and download the extension to a separate browser profile. Finally, I think it's important to tell you guys to avoid remote access applications such as Teamviewer, any desk or Chrome remote desktop at all costs, because that could open up to you an entryway to your account if vulnerabilities are detected within those software. So those are like more general things that you can do to avoid exposures.
00:03:54.680 - 00:05:14.364, Speaker A: But what about creating a secure dev environment? Well, it's actually very similar, but just on a different set of products. I think the most important thing about security, both as a user or as a developer, is maintaining what we call a security mindset. So you guys should assume that every application has the capacity to attack you, whether intently or not, right? So you should try as best as possible to isolate your environment using tools such as docker containers, isolated virtual environments, and workstations. If you're building smart contract code on Solana using things like anchor framework, or using automated security tools such as SEC Three's x ray static analysis tool to look over those lower hanging fruit and culvert vulnerabilities is important. Our tool currently covers 50 known vulnerabilities right now. You guys can also try to stay up to date with the latest dependencies as well as get notifications on those dependencies by subscribing to their newsletter so you get security notices and exposures as they happen. So reading those will give you an update and a better idea of how widespread potential vulnerabilities are.
00:05:14.364 - 00:06:11.334, Speaker A: So that was more about the dev environment. Let's talk about key management. So what can we do in terms of key management? In order to better protect ourselves, I think you should get into the habit of creating a brand new key and wallet pair for each new Dapp that you guys are interacting with. I'm going to be honest, when I'm playing around with a brand new dapp or minting some nfts, there's no way that I'm actually going in there and looking at smart contract code or even seeing if they are audited. So it's important to actually go in and create these new key pairs anytime you're using it. And the Solana CLi actually makes this super easy, right? So all you got to do is learn some, you know, a couple phrases here and there, and you can actually sign up vanity key pairs to also help you manage your keys, making it easier for you to see which one you were using them for. Also, if you're ever actually drained, you can actually pinpoint exactly where those exposures are.
00:06:11.334 - 00:07:04.254, Speaker A: Another easy way to protect yourself is to make sure that you only send exactly what you need for those transaction interactions. Now, obviously, cold wallets should always stay ice cold, meaning you should never type out those key phrases or have them backed up in any sort of cloud storage. And not only that, try not to connect your cold wallet to any dapp if possible. Finally, when you're copying sensitive information and private keys, make sure you turn off cloud syncing as well as any clipboard managers that you might be using to avoid data leaks. You never know who's watching. So here's some very general guidelines when it comes to thinking about key management strategies. Right? I know it might sound silly to say, but keep your keys out of the production environment if possible.
00:07:04.254 - 00:07:30.388, Speaker A: It's actually surprisingly common for us to see that sometimes we get access to customer source code. Private keys is actually hard coded and embedded within the code. That's a huge no no. Don't do that. Right. So this is a terrible practice and should never happen. Use secret key management solutions like AWS secrets manager, Google KMS, or tools designed specifically to handle secrets.
00:07:30.388 - 00:08:12.444, Speaker A: So when you're deploying applications, pass private keys as environment variables instead. Instead of hard coding them or putting them in configuration files. Don't share keys with members of the team. Unnecessarily. Enable detailed logging for any sensitive services that you guys are using so you have a traceability record of all access. And make sure to regularly review and audit these logs so that you can respond to unauthorized or suspicious activity. You can also implement a strategy of periodically rotating these keys so that in the event a key is compromised, damage is somewhat limited.
00:08:12.444 - 00:09:01.354, Speaker A: And finally, never transmit private keys and plain text, and always store them in encrypted ways. Store them, ensuring that they're unreadable without the appropriate mechanism. So I've got up here ways that you can ensure your assets or smart contracts are secure in a very easy way. And that's to set up multisigs, right? This is a technology that has been around for quite a while, but for some reason, a lot of developers, a lot of users themselves, just don't happen to get across to using it. There's a lot of options out there on Solana. Check out squads, realms, or mean multisig, and they're really easy to use. It's really as simple as going through the onboarding process, and it takes less than ten minutes, so there's no reason not to be using them.
00:09:01.354 - 00:09:50.684, Speaker A: So those were mostly non smart contract issues. So let's talk a little bit about contract specific issues. As mentioned earlier, be very aware of any dependencies that you might be using. Rust and cargo also makes it really easy to manage dependencies, but the dependencies can be outdated or contain known vulnerabilities. So use cargo outdated to check outdated dependencies. The rust type system also does not check for memory safety or unsafe rust code, so it can still suffer for memory corruption, such as buffer overflows, use after freeze, and uninitialized memory. You should also look to remove repeated code or dead code that can be cleaned or simplified to kind of reduce the code complexity a little bit.
00:09:50.684 - 00:10:58.794, Speaker A: I've put on the screen eight of the most common type of mistakes and vulnerabilities that we have seen in the past. But, you know, hint, our x ray scanner actually scans for all of these types of vulnerabilities automatically. So next, let's try to move on to on chain monitoring. On chain monitoring is useful because it allows you to stay at alert about any potential unintended transactions within your wallet, right? So even hackers need time to mount their attacks, and sometimes it takes time to move assets, even when the private keys have been leaked. So we've seen instances of attackers not really knowing that they're tokens or coins in state contracts or listed on NFT exchanges. So with a quick reaction time, victims can actually go in and move specific assets if they just know that their keys have been leaked. So my favorite app that's really easy to use and keep track of my personal wallets and burner wallets is ultimate because you can download it, you can watch wallets, it's super easy.
00:10:58.794 - 00:11:53.706, Speaker A: But what if you want to get one step further? What if you want to go deeper within the transactions? That's where SEC three's watchtower comes in. So with Watchtower, you can not only monitor wallets, but you can actually monitor smart contracts as well. So let's dive a little bit deeper into that. So how does watchtower work on a practical level, it's very simple to use product. It's a self serve product, and all you got to do is log in, input a wallet or smart contract address and you can get started. So we're really trying to simplify the monitoring process as much as possible by applying our specific security domain so you don't have to be telling the monitoring system exactly what to look out for. So we can achieve this by applying machine learning and looking at historical transactions and basically building what we call like a normal pattern of behavior.
00:11:53.706 - 00:12:57.846, Speaker A: Right? So let's say from the previous hundred or 200 transactions, you only interact with this smart contract, or the users of your smart contract only interact with it in this way. So with that you can actually get an alert anytime someone is interacting with it in a potentially malicious way. And you can get notifications in your SMS and your discord or even webhook. So we've gotten a lot of feedback on this monitoring product, and while it's great to get an alert whenever we think a potentially malicious transaction has been detected, we actually want to go a step further to actually prevent these attacks from happening. So we built an extension to watch called circuit breaker, which allows us to actually go in and set a threshold for what you think potentially malicious attacks look like. So when the certain threshold is hit, we can actually go ahead and pause the smart contract, or we can pause the token account from interacting with your smart contract. So watch currently comes preloaded with a bunch of various different bots.
00:12:57.846 - 00:13:42.388, Speaker A: The one that I told you about is called smart monitor, but we actually have a bunch of other type of bots as well. Here we go. A unique type of attack called Dao. Attack targets daos and their treasuries. And we have a bot that specifically monitors for this type of attack. So how does it really work when the total Tvl of a DAO's treasury is larger than the cost that it would take up to buy up x amount of tokens to either reach a majority or a supermajority needed to pass a DAO proposal? A would be attacker may be incentivized to mount attack by buying up the necessary tokens on open market in order to to write an on chain proposal to transfer themselves all the funds from the treasury arbitrarily. Right.
00:13:42.388 - 00:14:38.390, Speaker A: So this is a huge risk for a DAO that needs to use the treasury for long term operational costs. And watch our monitors this constantly to let you know whenever that threshold is met. Our watchtower system also allows us to monitor different things like program upgrades or upgrade authorities as well as on chain proposals. Because sometimes there's just so many things that's going on through Twitter, through discord, you just don't have time to be constantly aware of what's happening. So you can get an SMS on your favorite daos or the kind of protocols that your product depends on so that you know when something is happening. All right, so let's switch gears a little bit. As a security company, our team has been involved in the AI space well before the chat GBD craze, and we're definitely looking at ways on how AI can potentially impact not only web3 security, but web two security as well.
00:14:38.390 - 00:15:44.510, Speaker A: So, as ever, impressive technology continue to proliferate all the way down to the most average and everyday consumers. Get ready to start seeing different types of attacks that can be mounted with this technology. Right? So we're starting to see things like deepfakes or voice fakes, things that might have taken, like, you know, months in the past to do, can now be done with a single frame of someone's face. Right? We've seen companies like Apple put out a voice clone system that allows, that's used for accessibility because somebody might lose their voice, but all it takes is really 15 or 20 minutes of reading different text for someone to actually clone your voice. Right? So with that technology, just think about the impact that might have. If somebody was able to deepfake your video with your voice, would your loved ones be able to tell whether or not that's actually you or not? We're going to start seeing more hyper personalized attacks. What does that mean? Now we have Agent Chatgpt, which allows it to set specific tasks for itself, go online, do research, things that might have taken an attacker months and months of research to do.
00:15:44.510 - 00:16:33.346, Speaker A: Now they can do it at scale by just finding your information online on LinkedIn, on Twitter. Right. We're also going to be starting to see things like AI jailbreaks. A lot of you guys are probably going to be thinking about how to integrate AI within your current workflow or your current protocol. But as soon as you introduce new data within your protocol within this large language model, that changes the security parameter of that large language model, and people might use different prompts or different ways to get it to give information that you don't necessarily want to be exploited, to be shown to the user. So be aware of the implications of all these new, different types of attacks. So what's the best way to combat all these old and new forms, types of attack vectors? As we spent even more time online, right.
00:16:33.346 - 00:17:28.907, Speaker A: Well, as with most things in life, the best way is to have a plan. Set up a personal security plan, both for yourself, your family, and especially those older folks at home that might not be as tech savvy as you are. Set up a security plan for your team, for your company. But that's not all. You have to continuously and mindfully practice these security plans and drill these plans all the time and do these plans with your family, with your team on an annual or semiannual basis. Do you know exactly where your seed phrases are that you wrote down all these years ago? So if there was a fire within your house or your company, would you guys still be able to operate normally? If the question is I don't know or no, you should definitely make sure that you set up this plan and constantly drill these plans with your team members. So all we do at SEc three is think about security all day and every day.
00:17:28.907 - 00:18:13.040, Speaker A: And as somebody that works with all these experts all the time, there's never going to be a silver bullet when it comes to security. No one is ever going to be able to guarantee that you have a fully impenetrable system. So even Apple, a company that has full vertical integration when it comes to both software and hardware, still puts out patches to zero day vulnerabilities to this day. So all we can do is to continually practice and get better and better at security. So with that, I encourage you to visit our website at sec three dot de V or to check out our x ray scanner. Watchtower, at pro dot sec three dot de v dot. And I'll keep these on for a couple seconds because you scan it if you want to check it out.
00:18:13.040 - 00:18:31.204, Speaker A: We also have coupon code so that you guys can check it out for free. Watchtower, our on chain monitoring system is in open beta right now. If you guys want to do like a deeper integration, hit me up on telegram and more than happy to set that up. So with that, that's my telegram up there. Thanks everybody for your time.
