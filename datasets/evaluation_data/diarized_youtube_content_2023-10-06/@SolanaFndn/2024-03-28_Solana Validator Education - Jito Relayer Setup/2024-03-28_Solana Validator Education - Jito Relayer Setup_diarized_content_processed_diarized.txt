00:00:02.600 - 00:00:42.690, Speaker A: Okay, welcome everyone to the salon and validator educational workshop on geo relayer setup. There we go. Agenda today. So I'm going to talk a bit about the Geodo Solana as a whole. Luckily, we have people from Geo here, so if there's any more advanced technical questions that I can answer, we've got experts on the call as well. I'll talk a bit about what a guito relayer is, why you should run your own, and then some tips on the setup, and of course, have time for questions after that, or whenever you have a question, feel free to ask. Okay, so a few things about Gita Solana.
00:00:42.690 - 00:01:21.494, Speaker A: If you're unfamiliar or new to the space, just a quick overview. It's an mev validator client built for Solana. There's another educational workshop that Lucas did from Jitto that goes into a bit more detail about what Jito Salana is and all the different parts. So I'll put that in the chat in a bit. I don't have it handy right now, but if anyone does have it, feel free to post it there. The Jito Solana client is built on the Solana labs Anza validator. It is a fork that is maintained alongside the Anza validator client.
00:01:21.494 - 00:02:05.422, Speaker A: Some key concepts to know. So there's different components to the whole, I'd say, geo ecosystem. There are searchers. So searchers are people that are interested in getting these mev bundles, rewards, I should say. So searchers are looking for some sort of transaction ordering that they want for whatever purpose, and they do that through a concept called bundles. So a bundle is a set of sequential transactions that is run atomically, meaning it is either in one block or not in that block. A bundle cannot cross multiple blocks, and a bundle is also all or nothing.
00:02:05.422 - 00:03:02.318, Speaker A: So if you have a set of five transactions in a bundle, if any one of them fail, then the bundle fails. So it provides some guarantees, essentially about transaction ordering and transaction inclusion if it gets included into a block. So searchers create bundles for whatever reason, whatever purpose, they want to create the bundle. I guess that's one important concept to understand. The other important concept from the validators point of view is the relayer. So the relayer takes the space of the TPU, and the relayer's job is to take all the transactions coming into you if you're the leader, and then forward it to what's called the block engine. The block engine is where the searchers interact with the ecosystem, and there's essentially sending bundles to the block engine.
00:03:02.318 - 00:03:42.564, Speaker A: The block engine then decides what goes back to the validator and gets included in the block. So all that talking I think is much better, sort of exemplified in this diagram from, I think from Lucas's talk last time. So you've got your validator here. This is mostly the anzaclient with modifications from judo. Solana, you've got the relayer, which takes place with the traditional validator TPU and takes incoming transactions. And then the relayer sends those transactions to the block engine. The searcher decides what bundles they want based on the incoming transactions.
00:03:42.564 - 00:03:47.364, Speaker A: Those bundles are then sent to the validator and ordered appropriately.
00:03:49.184 - 00:04:50.164, Speaker B: Can I chime in real quick, Tim? So yeah, I think the, unfortunately we need to update our docs since we've disabled the mempool. So right now the, sorry about that, I should have flagged it, but yeah, so right now the relayer to block engine, that connection still exists, but it's not being leveraged and you can see that in the metrics on the, I think you'll get to the metric page in a bit. And the block engine to search your pathway is not being used right now. So yeah, right now it's basically the relayer is acting as the validators TPU. And then it's basically kind of helping allow these auctions to take place in the block engine where it'll, it receives a packet and then starts 200 millisecond timer and forwards. And that lets the block engine kind of simulate and give searchers a chance to bid on these opportunities.
00:04:52.004 - 00:05:06.584, Speaker A: I guess conceptually I don't quite understand that. Then how does the relayer, how do the block engine and the relayer interact if the searcher is still talking to the block engine to get the MEV opportunities? How is it different essentially?
00:05:09.444 - 00:05:49.694, Speaker B: So yeah, right now the main use of the block engine is basically getting priority inclusion and getting included very fast. So we have basically, there's some reserve compute in the blocks on Jito Solana, four bundles. And people can send transactions through the block engine and land very fast. So I think some of our, there's some high frequency traders and market makers that are using bundles. I think they're landing like over 30% of their transactions in the same slot that they were sent.
00:05:50.514 - 00:05:51.374, Speaker A: I see.
00:05:52.194 - 00:06:00.534, Speaker B: So before they're kind of using it, the mem pulls the trigger. Now the new triggers, the state updates which are coming in over geyser.
00:06:02.514 - 00:06:12.264, Speaker A: There's a question from Blake essentially asking is there a blog post or information about the mempool shutdown and what it means. There's some disinformation floating around.
00:06:13.724 - 00:06:26.468, Speaker B: Yeah, can you stop our discord and we can discuss it there? Happy to discuss there. I don't want to derail your conversation in the workshop too much on that.
00:06:26.636 - 00:07:02.818, Speaker A: Cool. Yeah, thanks for the clarification. I knew the mempool was shut down, but didn't quite get that it meant changes to this diagram, so that's helpful. Okay, so why run a relayer? A couple reasons, and I'm sure Lucas and others have more, but the main things I see are to improve decentralization. Right? Currently Geo runs all the infrastructure for. Well, Jito runs public infrastructure for relayers, and there's only four relayers out there in the world. Fewer points of failure would be a good thing.
00:07:02.818 - 00:07:39.940, Speaker A: Right. If one big relayer goes down, that can mean problems for a lot of GDO operators. Of course, that falls back to the TPU that's already in your validator client. But still, if you want to make sure that your geo MeV opportunities are always available, you should run your own and hopefully have more control over it. Another issue here is trust. You're making some implicit trust. You're implicitly trusting, essentially Jito run the infrastructure and not do anything for like personal gain.
00:07:39.940 - 00:08:02.194, Speaker A: Right. And I trust the GDO team personally, but of course, like, running your own is always a more decentralized and better way to do it. And potentially performance improvements. Right. With four relayers that have a lot of connections going to it, there may be some performance improvements there. I'll kick it over to Lucas to see if he has any other thoughts or feedback there.
00:08:04.174 - 00:08:28.284, Speaker B: No, I think those are the main ones. I think we did as a public good, and luckily we've had good success with the adoption of the client and starting to outgrow the amount of load that they can take. You know, want to keep full on a decentralized. So I think it, it makes sense for validators to start running their own.
00:08:29.144 - 00:09:00.854, Speaker A: Cool. All right, moving along, there's. I thought I had. Yeah. So there's two options I want to highlight from the docs. You can either run your relayer on your validator that's also running your stake node, or you can run your relayer on a separate machine. So sort of talking about the benefits of each, running it on the single machine obviously is a bit simpler.
00:09:00.854 - 00:10:02.614, Speaker A: You don't need external RPC access like you do in the multiple machine setup, and you don't have to monitor another node running somewhere. The relayer is a lighter process. I see people running with vms with only a few vcpus so it's not a super heavy thing to run alongside your stake node. But I have seen some people say that they prefer a separate setup on the external machine setup it requires, like I mentioned, a separate machine and a bit of extra monitoring or monitoring of a separate node. It can potentially limit the impact the relayer has on performance. If there's a bug in the relayer where there's a memory leak or something spins the cpu, you're not going to impact your stake node. But it does require that you have access to a separate RPC server that is always up to the tip of the network.
00:10:02.614 - 00:10:23.274, Speaker A: There's an environment variable that you can set where you can set multiple rpcs to access, but ultimately you're relying on a, an external thing to say that you're up to date with the chain instead of your own stake node. So up to you kind of what makes the most sense. But that's, I think the trade off between the two.
00:10:24.614 - 00:10:50.364, Speaker B: Yeah, I was chiming in here real quick. I think the best setup is probably is to run it on your same machine. The configuration for the external machine is a little trickier and we've seen some like misconfigured relayers set up on external machines while setting up on your local one is pretty simple and will result in the best performance.
00:10:54.104 - 00:11:55.184, Speaker A: Yeah, so there's a link here to the docs, I'll throw that in the chat. I'll probably reference the docs a bit, but wanted to talk a bit about the single machine setup. So the overview of the steps are no step is too complicated, but there's a couple places where you may run into pitfalls. So I just want to highlight them. First you have to generate a public private key pair using OpenSSL, and then additionally to that you have to generate a key pair for the block engine authentication. And in order to be added to the block engine, Jitto has to whitelist your key pair. So if you're currently running Jitto and you want to want to run your own relayer now, make sure they whitelist your key before you start switching over to the new local relayer.
00:11:55.184 - 00:12:35.644, Speaker A: Yeah, Brian, just put the info for the geo discord. So if you want to whitelist your relayer, go to the geodiscord. Next step would be to add the validator flags for your local RPC server on your stake node. So in order to run everything in one machine, you need to open up RPC locally. You do not have to open it up externally to the world, just locally, so that the relayer can query for a few things. In order to do what it needs to do. You need to add environment variables for metrics, for the block engine and for GRPC IP address.
00:12:35.644 - 00:13:15.830, Speaker A: Those are all in the docs I'll point to in a minute. And then of course you need to build and run the relayer as a separate process from your validator. Anything to add there? Point out? Cool. Okay, so these are the flags that you need for your. Maybe I'll just go to the docs so it's a little clear. Yeah, we go. These are the flags that you need to add to your, to your stake validator in order to have it work with your local relayer.
00:13:15.830 - 00:14:13.774, Speaker A: The relayer URL should already be there, except it will likely be pointing to the public relayer. You want to switch it to your local relayer. You want to enable private RPC, which essentially says I'm not going to make this RPC port available to the world, I'm just going to make it available locally. You want to make the full RPC API available. So by default the RPC API is not the full set of API, the full API service that you have access to in order to use the relayer. So this will give you access to all the, what's the word I'm looking for all the API endpoints that you need. You want to specify the RPC ports and then this last one I think may be a bit confusing if you haven't run an RPC before you're specifying the account index that you want to include in memory.
00:14:13.774 - 00:14:52.514, Speaker A: These account indexes can be very large in memory. This account index include key essentially says I don't want the whole program id account index, I only want the one that I care about for making my queries in this case, which is address lookup table. So it's very important that if you include this account index program id, you do not forget this one because theoretically the setup works without this line, but then you're using much more memory. And if you include both. One other question, Lucas or anybody else, this is actually a one right in the program address.
00:14:56.854 - 00:14:58.794, Speaker B: Should be, yeah, okay.
00:15:00.494 - 00:15:42.422, Speaker A: I saw it that way in a lot of different people copying and pasting, but just wanted to make sure. Yeah, so those are all the flags you have to add. Pretty straightforward. Again, this is your local relayer instance that you're going to run. And then the setup on the relayer side. Here's a system deconfig that should get you most of the way there. You're specifying the path to the PEM files that you generated and the new salon key that you generated for the relayer, you're specifying a few environment variables.
00:15:42.422 - 00:16:20.740, Speaker A: Make sure you specify the RPC bind address, the block engine URL, and then the metrics for JiTo. This is the Jito metric server so that you can check that your relayer is up and running correctly after you started up and then the exec is pretty straightforward. Maybe. One question that I've got here is, I noticed you can specify a few command line arguments along with the allowed validators list. I wasn't sure if this is something that operators want to specify or not. Do you have thoughts there, Lucas? Yeah.
00:16:20.772 - 00:16:45.314, Speaker B: So if you specify, if you bind your pc IP to localhost, then no one else will be able to connect. Okay. And yeah, if you bind to localhost, then that works. If you want to run it on a different machine, but you want to limit who can connect to it, then that makes you can use allowed validators.
00:16:46.534 - 00:16:56.520, Speaker A: Okay, makes sense. And in this instance, you'd only want to allow yourself if you're or anything validator that you're operating, right?
00:16:56.592 - 00:16:58.648, Speaker B: Is that correct? Yeah, correct.
00:16:58.696 - 00:17:25.624, Speaker A: If you have an external machine. Okay, cool. All right. Yeah, so I think that covers the setup again. I think the system deconfig is pretty straightforward. Just make sure that you fill in all these environment variables. Next step is the verification.
00:17:25.624 - 00:18:07.398, Speaker A: So a couple of things you can do to verify that your relay is set up properly. You can grep the logs for relay or stage stats just to make sure that the relayer is up and running and doing something. You can also, and I think more importantly, look at the geodografana to see that your relayer is up and running. I think in order for this to show up, you actually have to have some leader slots in your stake node. At least that's what I saw somewhere in the doc. So the leader slots are required before you actually get some data here. But once you get that, you can find your node in the list of, oh, sorry, I think this is maybe Jita or.
00:18:07.398 - 00:18:44.524, Speaker A: Sorry, Lucas, correct me if I'm wrong, this is a list of the pub keys for your relayer, not for your actual identity key, is that right? Yeah, yeah. So find whatever pub key you created for your relayer in this list. And then you should see that your metrics look similar to this. Right. The relay health should be one, the validators connected should be one, and this lock count should be going up. All right, that's all I've got for content anymore? Thoughts or things to add, Lucas or anyone else?
00:18:46.624 - 00:19:16.464, Speaker B: Yeah, just feel free to stop by our discord if you have any questions or comments someone asked about. Log a log file. So there's GitHub issues. So you can feel free to add issues if you want a feature added. I think we are working on, should be working on adding the stake node override things pretty soon. That's one thing that we're working on. And yeah, feel free to stop by discord.
00:19:18.004 - 00:19:19.464, Speaker A: Yeah Zantesa, go ahead.
00:19:20.964 - 00:20:10.994, Speaker C: I don't want to spread any fud here, but I think there are issues that people can have when they run their own relayer that we need to figure out and we need to make sure people aren't doing because we have recently discovered. Tim pointed this out to me and I did some, some digging in. There are some validators running their own relayer that for one configuration, reason or another, are creating blocks that have very few numbers of transactions in them. And I'm not saying this is going to happen to anybody. And most people don't seem to have this problem. I don't have this problem, but we need to nail down what can cause this. So what I'm recommending is if you do start your own relayer, just watch your blocks for at least a while to make sure that, you know, watch your upcoming blocks, make sure that they look nice and full, and you have hundreds of user transactions in them, not just like a dozen or less or even zero.
00:20:10.994 - 00:20:51.842, Speaker C: So just something to be aware of as we're trying to figure this out. I'd prefer people to recognize and see this problem and then seek out help than to not even know what's happening and it's happened to, I don't know, maybe half a dozen that I've seen, and I think that Lucas or Brian can acknowledge. I think it's so in some cases had something to do with firewalling that wasn't set correctly. And at least one case I know of it was somebody had a misconfiguration of some websocket port. And I don't know exactly how that caused it, but there are a couple of things I think can cause this, and I'm only recommending that. I'm not saying people should not run on relay because you absolutely should run your own. I'm just recommending that if you do start your own running your own relayer, that you just spent a little bit of time checking your blocks afterwards to.
00:20:51.858 - 00:20:53.042, Speaker A: Make sure that they still look good.
00:20:53.138 - 00:20:54.454, Speaker C: And if not, seek help.
00:20:55.474 - 00:21:43.184, Speaker B: Yeah, yeah, it's a good call out. There's a few, like, configuration things that we're working with on a few people. One is running a hardware firewall, and so we're trying to look through some of that. And then I think there's a few, there's a few things in the relay that we can do to make it potentially easier to detect misconfigurations or I think a lot of the misconfiguration issues are from running, like, a different RPC server or running on a different machine. So I think if you. That's why I recommend running on the same server, because, you know, there's less, less hops in between you and your validator and the RPC, and it's a little harder to mess up the configuration.
00:21:49.024 - 00:21:50.424, Speaker A: Cool. Any other questions?
00:21:50.464 - 00:21:51.204, Speaker B: Thoughts?
00:21:55.744 - 00:22:01.864, Speaker A: All right, great. Thank you, Lucas. And Judo.
