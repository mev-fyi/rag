00:00:03.880 - 00:00:11.085, Speaker A: Hello, everyone. Gm. Gm. Welcome to the Solana Changelog. I'm Nick from the Solana Foundation Devrel team and today I've got Jonas with me. How you doing, Jonas?
00:00:11.745 - 00:00:14.249, Speaker B: Hey, I'm doing great. So much cool stuff today.
00:00:14.337 - 00:00:29.773, Speaker A: Oh, my goodness, so many cool things. Let's just dive right in. 2.0. Agave 2.0 is live on mainnet. It's well past supermajority at this point. I believe it's something close to like 95, 96% of the stake.
00:00:29.773 - 00:00:33.585, Speaker A: So the Solana blockchain is running on 2.0 now, which is awesome.
00:00:33.885 - 00:01:05.767, Speaker B: It's super cool. And it's also faster than the old one because lots of the validators who were still running 1.18, they actually fell behind at some point and some of them had to upgrade earlier than they actually wanted. But now I think it's almost fully adopted and all the RPC calls that were deprecated, which we talked about hundreds of times, they are now actually gone. So if you're still using like get recent blockage or something, now is the time to last chance to update.
00:01:05.871 - 00:01:30.723, Speaker A: Basically, yeah, everything. All of these are already broken, so if you haven't already updated, get to it. And then also related to this is the changelog for agave version 2.1. We have the changelog notes here, and there's a bunch of things that we want to point out in here. One of them is cargo build BPF and cargo test BPF. These have been deprecated for about two years and in 2.1 they're going to officially be removed.
00:01:30.723 - 00:01:34.455, Speaker A: So you should be using Cargo Build SPF and Test spf.
00:01:34.915 - 00:02:00.791, Speaker B: Yes, and there's lots of other cool stuff in here. Especially there's a new , no alloc, which is like, I think, kind of similar to the Pinocchio entry point. But basically what it does, it just saves you 20 to 30 cu per unique account in your entry point, which is like an improvement, which you can get for basically nothing, which is really, really cool. Then we have this Tools version that you can now define here. How does that exactly help?
00:02:00.903 - 00:02:29.405, Speaker A: Yeah, so it makes it so you can basically declare, explicitly declare, what Tools version, what platform Tools version you want to compile your programs with. You can specify it inside your cargo TOML using these package metadata that we've talked about before, and you can both do it on your entire repo or if you're using a workspace, a cargo workspace, you can declare it on each individual programs, but you can also still pass it via the CLI arg when you actually run cargo build spf.
00:02:29.865 - 00:03:11.565, Speaker B: And here we have a nice transition. So there's now a new flag called Clone feature set where you can run your local test validator which is a set of features. And since now Fire Dancer is catching up, actually the feature gate activations are starting again. So you will see features getting activated over time. Now there's maximum one per epoch and so you can kind of maybe calculate when these will go live like that. And there is lots of cool features being activated. One of them for example is this featuregate which lets you have more accounts in CPIs.
00:03:11.565 - 00:03:30.533, Speaker B: So here's like a little TLDR. So we have like a max CPI instruction data length increased and max CPI account Info is now 128 which I think was 32 before. But you can look at this featuregate, you can find it in the featuregate schedule and then you can know when it will go live.
00:03:30.709 - 00:03:41.585, Speaker A: Yeah, good stuff. Then we've got some of the commits from this past week. This one is actually a pretty straightforward one. Fixes a Windows error, making it easier to actually build on Windows, which is nice.
00:03:42.405 - 00:03:48.969, Speaker B: I think it's really cool. Maybe at some point we will be able to run on Windows without wsl. Right. I think this is going in that direction.
00:03:49.077 - 00:03:52.201, Speaker A: This is native on Windows, no wsl, which is cool.
00:03:52.393 - 00:04:00.873, Speaker B: This is really cool. And then we have bump up the minimum validator port change with for vote using quic. What is that about?
00:04:00.969 - 00:04:25.425, Speaker A: Yeah, so this one and the other commit that we have in the changelog this week are related to voting with quic. So the Anza team has been hard at work making it so votes will actually go over the QUIC protocol, making things a little bit faster. So if you're running a validator, you need to make sure that you have the correct number of ports. Have the minimum number of ports from that other PR. I believe it's 17 now in order to actually start using this whenever it does go live.
00:04:25.545 - 00:04:34.921, Speaker B: Pretty cool. Yeah, I think before it was using UDP where it's like really hard to filter out messages you don't want. And if it's now also using quic. And since Alessandro improved quic.
00:04:34.993 - 00:04:35.401, Speaker A: Yes.
00:04:35.473 - 00:05:04.605, Speaker B: So now we have these votes also going over quick. Yeah, so that's cool. And one of the feature. No, it's not a feature gate. But another change that is in version 2.0 I think is that now loaded account loaded program size actually contributes to the CU costs of your transactions. So this is something to Keep in mind, I think it was also in the change log.
00:05:04.605 - 00:05:10.765, Speaker B: But just if you wonder why you're needing to pay more fees, then this might be the reason for that.
00:05:10.845 - 00:05:36.933, Speaker A: And a quick tldr there is every single account that is loaded, all that extra data and those bytes that are loaded in any transaction is now going to have a CU cost to it. Specifically, I believe it's 8 CUS per 32 kilobytes because that's just like the heap page size and so every bit of data you're loading, those are accounts and or programs. So all of that Data now is 8 cus per 32 kilobytes.
00:05:37.069 - 00:05:46.517, Speaker B: Yeah, it's not much, but definitely makes sense to optimize your programs to save CU now, which kind of makes sense. You should pay for what the validator needs to do work for.
00:05:46.581 - 00:06:10.555, Speaker A: And you can also optimize your transactions themselves too by using the new compute budget instruction for setting your max loaded. So you can set the max loaded value in your compute budget instruction inside your transaction. If you ratchet that down to as low as possible, the new scheduler in 2.0 will also better prioritize those transactions because they're smaller and less efficient or more efficient and more of them can be packed into a block.
00:06:10.855 - 00:06:26.333, Speaker B: That's great to know. And then we have this Solana program repository and it looks like Loris and Hannah are moving everything in here, like all the core programs, the SPL programs, right?
00:06:26.469 - 00:07:12.777, Speaker A: Yeah. So basically it seems like all of the Solana program library is slowly moving over into this Solana program organization on GitHub. We've talked about it in the past, but just a friendly reminder, sort of refresh everyone's mind here. And one of the things to Note is with Web3js version 2, in order to use any of the Solana program library programs and clients, you actually need to start using these Solana program clients that are inside of here. So all of the popular programs, you know, account lookup tables, Compute, budget, memo, token, token 22, all of them have their new clients that are actually auto generated using Kodama, which is really cool. So you need to make sure that this is where you're going to get those client libraries, both Rust and JavaScript libraries.
00:07:12.971 - 00:07:17.765, Speaker B: Oh yeah, I'm very excited about Kodama and Kodama IDL that they are creating as well.
00:07:17.845 - 00:07:19.117, Speaker A: Yeah, should be cool.
00:07:19.301 - 00:07:51.641, Speaker B: And another reminder everybody, Solana Web3js version 2 is coming and it's currently already live, so you can use it as version 2. The thing that will change on the 16th of December is that the latest will be set to version 2. So if you have any tutorials or guides or new projects or something and you want to install latest, these will probably break. So you need to add an. Add one to keep functionality like before or upgrade them to the new version. Just as a reminder. Reminder.
00:07:51.641 - 00:08:14.905, Speaker B: I think we talked about it a few times already. But yeah, the new Web3JS is coming and it's faster, better, nicer. So yeah, give it a try and give feedback as well. Like there's already a bunch of questions on Stack Exchange. Yeah, so ask your questions on Stack Exchange. We're going to try answer them and the core devs as well. So yeah, that's a good place to do it.
00:08:14.905 - 00:08:29.557, Speaker B: And we have the winners from the hackathon. So it was the biggest hackathon ever. And yeah, here's a video where you can see all the winners. So gaming super size. I'm excited about that one. For example, give them a try, give them a follow.
00:08:29.661 - 00:08:38.305, Speaker A: Yeah, all the radar hackathon winners are announced. Go ahead and check them out. And then what about verified programs? Jonas, do you want to talk to us about verifiable builds?
00:08:39.175 - 00:09:10.435, Speaker B: Yeah. So Ellipsis Labs and Autosec were working on a solution for verified builds, which is really, really cool. And next week it will probably be finally done. So what you can do is you basically deploy your program and then you can actually verify that this program was built from the source that you are saying it was built from, and everyone can verify it. And there's also an API that you can call, so everyone can now use it. And the cool thing about it is that now on chain, you can directly immediately see on a verified program, the GitHub URL. URL.
00:09:10.435 - 00:09:32.547, Speaker B: And in there you can find the program's IDL, the program's SDK, the docs, maybe a link to the front end. So I think it's super cool. Like if you see a nice transaction somewhere in the explorer and you just click on the program and then immediately go to GitHub and see what the program is about and you can read the source code. I think this is super cool and will improve the whole ecosystem. Probably.
00:09:32.611 - 00:09:32.811, Speaker A: Yeah.
00:09:32.843 - 00:09:34.147, Speaker B: So very excited about this one.
00:09:34.171 - 00:09:56.561, Speaker A: Yeah, yeah, totally. Absolutely. Finally, speaking of improving the whole ecosystem, Stack Exchange shout out to all of the amazing people that have been answering questions and helping out on Stack Exchange. This is the best way. With all the eyes on Solana right now, everyone is coming in, answering questions and trying to learn all the different tech that is in the Solana ecosystem. So great work, everyone.
00:09:56.713 - 00:10:09.369, Speaker B: Yeah. Thank you, everybody, for participating. And you can also directly get feedback and questions here answered by the core engineers. So I think this is super cool. Help everybody and contribute.
00:10:09.537 - 00:10:13.525, Speaker A: Yeah. All right, that's going to wrap it up for this week's change log, and we'll catch you next time.
00:10:13.945 - 00:10:14.281, Speaker B: Bye.
