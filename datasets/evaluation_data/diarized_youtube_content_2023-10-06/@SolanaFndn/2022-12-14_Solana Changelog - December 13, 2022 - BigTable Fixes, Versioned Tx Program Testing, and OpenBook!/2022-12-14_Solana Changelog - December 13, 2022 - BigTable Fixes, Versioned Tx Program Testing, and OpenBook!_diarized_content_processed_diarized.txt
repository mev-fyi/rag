00:00:00.360 - 00:00:18.174, Speaker A: Welcome back to the changelog. Sorry that it's kind of been a while. We've kind of been busy and then we had the holidays. So we haven't been able to make any new videos recently, but we are back in action. Jacob and I from Solana foundation. I'm Joe. And today we're going to bring you some changes for the last like couple weeks.
00:00:18.174 - 00:00:25.234, Speaker A: So we're going to try to cover as much as we can anything that we saw that was interesting and to start things off, Jacob, what do you got?
00:00:25.954 - 00:01:06.324, Speaker B: Yeah, so there is kind of a big change coming. I think it's likely going to be in like 1.15. It's currently pulled into master. It's kind of like, hey, there's a change of how priority happens on compute units. So previously it was using like estimated compute units. So the, basically the protocol was estimating the compute units used on your specific transaction and then using that in order to, one, manage how many transactions make it into a block, and two, kind of manage it against priority fees. So instead of using estimated, we'll actually use requested.
00:01:06.324 - 00:01:33.834, Speaker B: And if you are familiar with like compute unage or compute usage, your default transaction with one instruction, say a transfer from a to b, will be 200k computer. However, it'll only use about like five k ish compute or less than that. So there's kind of a big change, especially if you are using priority fees on your transactions.
00:01:34.374 - 00:01:42.038, Speaker A: So if I don't provide a compute limit, then it's going to default to the 200k?
00:01:42.206 - 00:02:24.338, Speaker B: Yes. So today that like the requested compute units, when you ever use a compute budget program without using that, and you have one instruction, you're always going to have 200 compute units requested and it will be 200k times the amount of instructions in your transaction with a maximum of 1.4 million. So if you have eight instructions, it'll still, it won't be 1.6 million, it'll be 1.4 million. Now you can change this with the compute budget program requesting a very specific amount of compute, and that's just another instruction to request.
00:02:24.338 - 00:02:32.666, Speaker B: And then you can request for that eight, you can request 200k, you can request 1.4 million, whatever you feel like.
00:02:32.810 - 00:02:47.452, Speaker A: So the change being that now you're going to have these default values, does that mean like if you aren't really taking advantage of those compute budgets or the compute program, then are you kind of paying more now? Or like, how does that look?
00:02:47.628 - 00:03:27.456, Speaker B: Not necessarily so, it's more like the change is specifically around switching from estimated CU being used or estimated compute units to requested compute units. So like, previously it was, the protocol was kind of estimating, like, validator was estimating how many compute units a transaction was taking. Now it's just taking whatever you, whatever the requested compute units were and using that. So it's a little bit of a change of how the protocol uses compute units or addresses compute units, and it affects small transactions with low compute units. And that's mostly it.
00:03:27.600 - 00:03:31.896, Speaker A: I see. Yeah, definitely a big change. Good to call out for sure.
00:03:32.040 - 00:04:06.594, Speaker B: And then another change that happened is that. So whenever you load account data with a transaction, there's now a cap on the amount of account data that you can load in a single transaction. So say you sent in a transaction and you added 23 accounts to load with that transaction, and each of those accounts was ten megabytes, the maximum for each account. You can't actually do that anymore. The amount of data that can be loaded for a single transaction is now capped at a up to 100 megabytes amount.
00:04:06.894 - 00:04:10.274, Speaker A: And that doesn't matter if you're using a lookup table or not, right?
00:04:10.734 - 00:04:12.154, Speaker B: Yeah, it should not matter.
00:04:12.814 - 00:04:40.624, Speaker A: Okay. Yeah, that's another interesting one for sure. I saw some changes to the, like, basically some of the nodes have been having like, disconnect issues with the bigtable that's used to store like, all the older block data, and they've made some changes to the token refresh. So that that's going to probably be a little bit alleviated on that end. So that's kind of good. If you're experiencing any issues with that, hopefully that solves some problems.
00:04:41.524 - 00:05:00.624, Speaker B: That's really cool. And then they've also added support for version transactions within the program test framework so that you can actually use program test to do things with, like, address lookup tables in a nice manner so you can put more tests around your code.
00:05:01.064 - 00:05:24.584, Speaker A: Yeah, that's a big deal. That's definitely a big deal. Good to see that one. They also did some rust client stuff too. Like there was a problem with get program accounts that they fixed it. Like, wasn't able to, I think, parse some kind of like, account context or whatever kind of like additional parameters that have recently been added. So now that supports there.
00:05:24.584 - 00:06:00.348, Speaker A: So if, again, if you're having any issues with like git program accounts and the rust client, that should be all set there. And then I also saw some changes to token 2022. I think there was actually like a patch upgrade. It looked like they were sort of laying down some of the frame, like the groundwork for some of the, like, the confidential transfers that were talked about like kind of teased to us a little bit. So that's pretty cool. Kind of exciting to see that. And then there's something called a CPI guard that they added as well, which like at first glance kind of seems like it's protecting against like, or at least enabling protection against CPI.
00:06:00.348 - 00:06:07.504, Speaker A: So like, not totally sure exactly on that, but we're probably going to see more on those changes pretty soon. So something to look out for.
00:06:07.964 - 00:06:38.584, Speaker B: Yeah, the confidential transfers are starting to like more be built out right now, mainly because there's a lot of, they've recently enabled the ability to test with larger transactions, which was a requirement to run confidential transfers. So you can test with it. It's not on a main net or any cluster right now, but there is a decent amount of work going into figuring out how do I increase transaction size.
00:06:39.924 - 00:06:44.544, Speaker A: Cool. Yeah, that's been an ongoing thing for sure, so pretty exciting.
00:06:44.924 - 00:06:50.184, Speaker B: And then what resource have you seen the past few weeks that you would like to highlight?
00:06:50.524 - 00:07:32.490, Speaker A: Yeah, so we might be a tad late on the news, the breaking news since our last recording, but Openbook is obviously going to be top of mind right now with everything that went down. So a complete fork of Serum done by the community and, you know, obviously decoupled from FTX. So it was pretty cool to see that a lot of people came together to pull that off. And also I saw a commit in there as well in the stuff we were going through about the Explorer. So like, they added some support in the Explorer for Openbook as well. So you can see it got a ton of support really quickly and just another like, testament to like, Solana open source kind of like initiatives. Good stuff.
00:07:32.522 - 00:08:03.784, Speaker B: What I really like about Openbook is that it was like immediately the community started building out. It didn't have to be like one specific group, but the meeting started building out a replacement for serum and actually have already added additional features to it that previously Sarum wasn't really updating anymore. So it's really cool to see the community come together and fight a fire that they saw and kind of lay the groundwork for the future of Defi on Solana.
00:08:04.164 - 00:08:11.914, Speaker A: Yeah, I couldn't have said it better. That's awesome. That actually gets me pretty excited and optimistic. It's good to see stuff like that.
00:08:12.894 - 00:08:25.314, Speaker B: Yeah. And so that concludes our change log for this week. This is where we always go over the changes on Solana week by week. We look forward to seeing you all next week.
00:08:26.254 - 00:08:26.694, Speaker A: Bye, guys.
