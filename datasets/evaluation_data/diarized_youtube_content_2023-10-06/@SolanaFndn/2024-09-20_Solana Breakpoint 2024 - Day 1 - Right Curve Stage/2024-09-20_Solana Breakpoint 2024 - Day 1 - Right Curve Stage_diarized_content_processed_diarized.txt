00:02:59.315 - 00:18:58.343, Speaker A: It, it. It, it. Hello and welcome to Breakpoint 2024. Good to see you. Yes, come on in, fill the room. I see quite a few familiar faces, quite a few new faces. Who of you has been at the Breakpoint event before? Yeah, welcome back.
00:18:58.343 - 00:19:29.881, Speaker A: And for whom? Is this the very first Breakpoint? Yes, new faces. Hello and welcome. Anybody of you who attended all three previous ones? Yes. Few winners. Wonderful. I only missed one because I was working my corporate job back then, but I remember sitting in the office and watching all the live streams. On that note, welcome to everybody joining us live or watching the recordings later.
00:19:29.881 - 00:20:12.177, Speaker A: You might miss out on the networking and the good food that we have here in Singapore, but you will not miss out on the great spot speakers and presentations that we have. And boy, I tell you, we have some great speakers and presentations coming up for you. Everything from the engineers of Answer over Fire Dancer all the way to Project Zero and everything in between. So you can look forward to that. We have an action packed agenda full of speakers. You find yourself here on the right curve, which is more of the developer focused stage. Out there we have an area where you can network with other devs.
00:20:12.177 - 00:20:32.935, Speaker A: Back there is the Colosseum hacker space. In the middle we have some food. And on the very end of the hall there is the left curve stage. Is everything under one roof this time so you can quickly change without getting wet from the rain. So that's pretty cool. Yeah. Right.
00:20:32.935 - 00:21:05.251, Speaker A: Okay, what else do I need to say? How are you guys doing? Do you still ready for this? Yeah. That's the energy I want to hear. Thank you so much. Oh, actually, you know, one of my favorite things at Breakpoint is when people come up to me and they're like, are you so handy? And I can be like, yes, yes, that's me. I'm that guy. I make those YouTube videos. So for me, this is one of my favorite things.
00:21:05.251 - 00:21:41.451, Speaker A: And I'm assuming most of the speakers will really enjoy if you come up to them and ask follow up questions or chat with them. Just, you know, we're very approachable. Come take the opportunity. If we're out, come talk to us. All right, well then I guess it's time to introduce you to our first speakers. Do you still remember what this is? Yes. You might not see, but it has those nice green buttons.
00:21:41.451 - 00:22:13.105, Speaker A: This is a Saga, the Solana mobile phone. Yes, we've got a few people in the audience who also have this device. Now this is chapter one, if you will. But they did announce chapter two. I pre ordered that without really knowing what it is about. And to this day, I still don't really know what this is about. But we might find out.
00:22:13.105 - 00:22:27.755, Speaker A: Let me just check if we. Ready. Are you ready? Yes. Yes. Exactly. That's what we're gonna do. Put your hands in front of you so you can see them.
00:22:27.755 - 00:22:43.087, Speaker A: And now try this. Slap them together. Yes. Do it one more time. Yeah, yeah, yeah. Come on. And a little more.
00:22:43.087 - 00:23:02.871, Speaker A: And a little more. I feel like. God, this is amazing. All right, are you ready for the first speaker? Is the first speaker ready for us? Wonderful. Okay, let's do this one more time. Bring it up. Up, up, up, up, up, up.
00:23:02.871 - 00:23:50.365, Speaker A: And please welcome to the stage Ahmed from Solana Mobile. Hey, everyone. I am Emmett. I'm the general manager of Sly Mobile. But today I come to you as the regional associate of a humble shop and sales. We found Aslana Mobile because we believe it's time for crypto to go mobile. That means bringing things that we love about web3defi tokens dapps to mobile phones and the things we love about mobile phones.
00:23:50.365 - 00:24:33.705, Speaker A: GPS, cameras, sensors to Web3. For developers, we wanted to create a free and unrestricted app store. One without a 30% Apple and Google take rate and one without any cryptophobic censorship for users. We wanted to create a cohesive Web3 mobile experience with the highest level of crypto security available on any mobile device. In doing so, we thought we'd open up a new frontier for Web3 and lay a path towards breaking up the Dash Store duopoly. When we released Saga in early 2023, we were in the depths of the bear market. We knew it would be challenging and honestly, there were times we doubted we'd make it at all.
00:24:33.705 - 00:24:53.992, Speaker A: In fact, there were times where it seemed like everybody doubted that Saga would make it. But we became an award winning fund and things changed. Rewards happened. Meme coins happened. Bonk happened. We sold over 15,000 devices in a single day. Saga sold out.
00:24:53.992 - 00:25:47.995, Speaker A: And 93% of our users have engaged with the tab store, which is now home to nearly 100 DAPs. Solana ecosystem projects and developers have distributed millions of dollars in rewards to SA users kick starting the Web3 mobile flywheel. And although I'd love to stand up here and take all the credit, it was the ingenuity of the Solana devs and the metal energy of our community that made this all happen. What they showed us is that a phone is only part of the product and what makes the device possible is the real magic. It's more than a phone it's a web3 magnet. Getting 20,000 devices in our users hands was a major milestone. But for crypto to go mobile, we knew we needed to make the phone more accessible, more affordable, and keep the native integration of hardware and software.
00:25:47.995 - 00:26:24.965, Speaker A: The next phase, what we call chapter two, depended on us selling at least 100,000 units. It was a huge step into the unknown. But the response has been overwhelming. Jobs 2 sold more units in its first day than Saga sold in a year. With our community support, we exceeded our target in a matter of weeks. So now with over 140,000 units pre sold in 57 countries, our flywheel is fully in motion. With $150 million of rewards flowing to Chapter 2 pre orders so far, it's clear to us that we're onto something special here.
00:26:24.965 - 00:27:54.935, Speaker A: We're so honored that you've put your faith in us and you've driven us every day. The progress that our team is making is really impressive. But today we can start to show you just some of the reasons why we're so excited for Chapter two. That's why I'm here, to show the next chapter for slaughter. Chapter two for Salana Mobile is Seeker. And I actually have a prototype with me today. Want to see it? It's amazing that we've come this far, that we have a working secret prototype in my hand.
00:27:54.935 - 00:28:33.735, Speaker A: But what exactly is Solana Seeker? We see it as the definitive web stream mobile device. Clearly the team has been deep in built in for the last few months and we've made a ton of progress. But there is plenty of work left to be done. But let me show you around. Seeker is a beautiful mobile phone engineered to harmonize its hardware and its software for Web3. It's lighter, it's brighter, it's got better cameras, and the battery lasts longer, all at a much more accessible price point than its predecessor. Like its predecessor, C Vault is at the heart of Seeker.
00:28:33.735 - 00:29:13.305, Speaker A: C Vault lives in its own environment, abstracted away from apps and the Android operating system to keep your receipts safe. It's designed to give the highest level of crypto security available on any mobile device device. But with Seeker, we've taken things one step further. Introducing Seafloor Wallet. Created exclusively for Seeker with our friends at Soulflare, the Cvault Wallet is a mobile first wallet that's natively integrated to supercharge your Cvault experience. That means we can provide major UX upgrades for our users. So you can send transactions with a simple double tap and send your fingers from a workout.
00:29:13.305 - 00:30:10.685, Speaker A: You can also choose between a primary mode and a burner mode to ensure peace of mind, save time and never have to worry about complicated account management again. Where we built Seed Vault to offer the best possible security for our users, we're building Seed Vault Wallet. To offer the best possible experience in the Seed Vault Wallet, we'll plug into an updated Solana DAPP Store. We've equipped the DAPP Store with new features like rewards tracking to monitor all of the earning and rewards opportunities you have on Seeker in one place. We'll have support for web Dapps and we'll have improved discoverability. We think that's going to be really important because there are tons of teams already building through Seeker. With zero fees and crypto friendly policies, the Salana Dapstor will continue to be the home of the best mobile web3 experience of and of course every Seeker comes with a Seeker Genesis Token.
00:30:10.685 - 00:31:24.677, Speaker A: It's the key to unlocking rewards access and content across the Solana ecosystem. For our users, the Genesis Token is a protrusive VIP membership into the heart of Solana and for builders it gives the confidence that whether you're testing new features or launching your rewards programs, you're connecting directly with real live Solana mobile OGs. And until Seeker launches, the Chapter 2 Pre Order Token will help keep those rewards flowing to anybody who has pre ordered Seeker. Seeker's a beacon for Solana Dapps, Defi, Deepin Payments, AI, NFT Games, you name it. If it's happening on Solana, it's happening on Secret. This is the Solana ecosystem in your pocket and since we've announced the interest from the ecosystem has been crazy, we have a lot of teams building a lot of great things that I don't have the time for today, but why don't we give a brief glimpse of what's to come. Whether you use Seeker as your daily device or your secondary crypto burner, you can put it to work earning for you.
00:31:24.677 - 00:32:36.451, Speaker A: With various Deepin apps and Helium Mobile, we'll be providing four free months of coverage to Seekers and introducing Seeker exclusive earning opportunities for mapping the growing Helium network. We worked closely with Helium and other deep end teams to make sure that Seeker and all of its sensors are optimized for builders, enabling them to build more advanced deep in depth custom for Seeker. And as many of you know, earning rewards is great, but with Seeker you can create the rewards you want to see in the world. Moonshot, powered by Dexcrader, will be launching its Token platform with Seeker only optimizations. Seekers will be able to launch their own tokens and even auto allocate a share of those tokens to other Seekers with a single click. And tokens launched on Moonshot via Seeker will enjoy automatic boosts for both discoverability and rewards on their platform. Solana was the first blockchain to integrate AI and Seeker carries that one set.
00:32:36.451 - 00:34:06.805, Speaker A: Further, Seeker users can use Aletheia AI to generate tokenized AI agents of new or familiar faces that can interact on chain with your favorite programs or with the rest of the slot Community. And gamers will find a slew of Web three games and Secret exclusives including limited edition assets and rewards in parallel quality which will be launching in the DAPP Store when Seeker releases. In addition to the great top exclusives that will be coming to Seeker, Helios is launching aircraft, a ZK compression tool that makes airdrops 4,000 times cheaper where previous over $40,000 to airdrop to the whole of the Solana Mobile pre order community. Airship reduces those costs to as little as $100 and every airdrop initiated on Airship will have the option to auto allocate to the chapter 2 preorder token holder group. And that's just the beginning. Like I said, it would take all day to stand up here and walk through all of the great experiences we've got in store. The story of Solana Mobile has been written by the Solana community and chapter two of that story is the Solana Seeker.
00:34:06.805 - 00:34:19.505, Speaker A: We invite every team in the Solana ecosystem to participate in writing what comes next. Our team is here. I see a lot of familiar faces. We're here at Breakpoint. We have a booth. Come find us. Come get in touch.
00:34:19.505 - 00:34:56.490, Speaker A: We are very excited to hear we are building Secret will be shipping in mid-2025 and we cannot wait to get it in your hands. To those of you that have already pre ordered, you'll know that the chapter 2 pre order token is proof that these rewards are complete. And to those of you that haven't, we've reintroduced the founder window presale price back down to $450 through the end of Breakpoint. Thank you so much for having us. Like I said, our booth is out there. We've got some great swag we'd love to hand off. We'd love to hear what you're excited about for Seeker, what you're building.
00:34:56.490 - 00:35:23.855, Speaker A: So come spend some time with us. Let's talk. Thanks so much everybody. Packet agenda with Nick Frostbutter from Solana Foundation. Hello. Hello. How's everyone doing today? Welcome to Breakpoint Day one.
00:35:23.855 - 00:35:52.105, Speaker A: I'm Nick. And it's going to be hard to follow Emmett from Mobile. I've been rocking a saga since day one. Got the production unit and ooh, do I want that seeker phone. But I'm going to be talking about Solana Blinks in Actions today. And if you don't know me again, my name is Nick, I go by Nick Frosty everywhere except for Discord, and I'm developer relations at the Solana foundation and this is my emoji. So who here is used blinks? Show of hands.
00:35:52.105 - 00:36:12.101, Speaker A: Okay, okay. Who here is a developer? Even more hands. Love it. Who here is a developer that's built Blinks? I feel like there are more hands of developers that have built blankets and people that have used them. We need to fix that. So for those of you who don't know what blinks are, imagine the scenario. You know, you're sharing URLs across the Internet.
00:36:12.101 - 00:36:30.183, Speaker A: Typical thing that we've been doing for years. And you know, take Twitter for example. You post a URL on Twitter, you know, in this case, you know, post simple tweet, use Sanctum. Sanctum's great. Shout out to Sanctum. And you expect sort of this standard experience. You have social graph image cards, it gets displayed, you can click on them.
00:36:30.183 - 00:37:01.371, Speaker A: We've been doing this for years, right? But with Blinks and Actions, we want to take that to the next level. We want to be able to allow transactions, Solana transactions being brought directly to people where they already are. So you share a link to your favorite dapp, your favorite protocol of their website, and you can immediately interact with it. They can bring the transaction to you. You can connect your wallet, wherever you are across the Internet. And that's sort of the goal here. Full interactability, buttons, text input, all sorts of fun stuff.
00:37:01.371 - 00:37:21.749, Speaker A: And it's not just Sanctum. There's tons and tons of protocols out there. You know, your favorite DAPPS got madlabs, Jupyter, you've got helium votes. And all of these things are already out there in the wild. They already exist. People have been using them for a while. So what are blinks, though, kind of in a nutshell is blinks are the front end and then actions are the back end.
00:37:21.749 - 00:37:56.665, Speaker A: That's how I've kind of over the last several months when we launched Blinks in Actions is sort of how I like to explain it to people. And we have this, you know, this definition, sort of quote unquote, official definition. And it's. Blinks is actually short for blockchain links. And it's Basically just turning shareable URLs directly to users that can bring metadata rich experiences so that whole interface can be unfurled and displayed. And again, it just allows you to bring training transactions and interact with the blockchain directly to people where they already are. So kind of in a way, Blinks are like embeddable DAPP widgets, but sort of.
00:37:56.665 - 00:38:29.625, Speaker A: And we'll talk about why it's a sort of. And they're just client applications. You know, you write a typical web app and you're writing a client application, you write some sort of back end links and actions, same thing. And they're just sort of this standardized user interface that gets you as a developer, you don't really have to worry about it. It gets brought to you with all of the amazing tooling and things that organizations like Dialect have built. And currently it's via browser extension wallet. So if you have, you know, you open your laptop now, you check out your favorite browser extension wallet.
00:38:29.625 - 00:38:54.347, Speaker A: Some of the big ones already have support. Soulflare, Backpack, Phantom, OKX and Bybit for example, and many more. And effectively. To actually become a blank when you're sharing that URL, there are sort of three conditions that it can actually be for them to become a blank. The first one is the Solana action URI scheme. And we're going to go through each of these. I'll show what they look like and why they're different and which is better than others.
00:38:54.347 - 00:39:37.027, Speaker A: And so you kind of have these three. You have the Solana action URI scheme, you have the actions JSON file, and you have an interstitial website using an action query parameter. Typical web2 stuff, right? So let's look at the slant action URI scheme. The first one is it looks kind of similar to what you would see across the Internet HTTPs URL, except it's different. When you're sharing a URL on the Internet, HTTPs is the protocol you can share FTP or any other protocol in a URI scheme. With Solana Actions, it's Solana Action makes sense. And then instead of sharing a normal domain, you're actually sharing your Action API endpoint directly within the URI scheme.
00:39:37.027 - 00:40:05.915, Speaker A: And there's a couple of sort of fallbacks or drawbacks of this is that you don't share this type of URL across the Internet applications and users don't know what to do with it. So there's no fallback website. If you share this exact sort of image here, this action URI scheme, if you share that on Twitter or in an email, nothing's going to happen. It's just going to look like text. You can't click it, can't do anything. So there's no fallback experience for users and went too far. So because of that, it's the least supported and the least recommended.
00:40:05.915 - 00:40:40.025, Speaker A: Basically don't ever share this. And that's where the Actions JSON file comes in. The Actions JSON file is really simple. It's a simple JSON file stored at the root of your domain and all it does is it Maps the normal URL's on your website to your API endpoints. And it does truly make it so you can share whatever URL you would access. A website like Jupiter, for example, you want to do a swap on Jupyter, you go to their website, you just share that link on Twitter or anywhere else that blinks are supported and it just works. It's beautiful.
00:40:40.025 - 00:41:10.351, Speaker A: And it's sort of the most recommended because you have a fallback. It's a normal HTTPs list, you share it. Everyone across the web knows what URLs are. To click them and you can actually users can click it, go to the website. So if they have blinks enabled, they can within their browser extension wallets or anywhere else blinks are supported, they can click it, go to the website and interact. But if they have blinks enabled, then you get this really optimized experience. So let's just look at an example.
00:41:10.351 - 00:41:35.875, Speaker A: Jupiter. Everyone loves Jupyter view. Pull up Jupiter right now you go to swap some tokens. This is the URL you see. This is the URL that you would share with your friends in a text message or anywhere else. And if you look at the Actions JSON file, it's stored at the root of the domain. And again, all it's doing is it's mapping this URL swap/usdc to solve and it's going to map that to your actual API endpoints.
00:41:35.875 - 00:41:59.177, Speaker A: So let's just look at some JSON. This is actually what Jupyter's Actions JSON file looks like. It's mapping their normal swap URL to their API endpoint. Pretty straightforward. This action JSON file is just super simple. It's typical of JSON. And all you're doing is you're sort of declaring the local paths on your website to your API endpoints.
00:41:59.177 - 00:42:29.405, Speaker A: You can do full wildcards, either single star or double star. They have different things. You can do multiple rules, like this example here. In this case we have two different links that could be rendered here, or two different URL patterns that can be rendered and you can do external URLs. So you could go to a completely separate domain that either you control or maybe there's a service like dialect that has some various actions that you can already use sort of out of the box, or you can do internal URLs. So it's really flexible, really easy. And then the last one is interstitial website.
00:42:29.405 - 00:43:00.515, Speaker A: The interstitial website, like dial to shout out to dialect. All it's doing is it's taking the action query parameter. And this value is actually just the Solana action URI scheme directly in the URL. So when you share these URLs, you know you can click on them, you can actually interact. You have this interstitial website becomes the fallback. Users know how to interact with URLs, right? But if you have links enabled, if users have links enabled, it unfurls, you get this extra. You can connect wallet, click buttons, you can take user input, all sorts of these really powerful things.
00:43:00.515 - 00:43:32.669, Speaker A: And one of my favorite things about the interstitial site is actually there's this interesting side effect that happens where if you're a developer, you don't actually have to write any front end code, you don't have to ship it, you don't have to worry about Wallet Connect or anything. The interstitial website just handles that. So you can literally write a REST API that returns a transaction and then you've built a full dab. Makes it really nice. So this is what this would look like. You see this URL for jupyter, we have the action query parameter. You can share this and you can interact.
00:43:32.669 - 00:43:47.093, Speaker A: Users can interact, they can click on it. If they don't have links enabled, they can go to dial 2, connect wallet, all that good stuff. So this is what it looks like. You can go to dial two, that exact link. This is what you'll see. You can swap Sol and Jupyter. Any other link that works.
00:43:47.093 - 00:44:12.379, Speaker A: Dial2's interstitial website from Dialect just works. You have this standard interface that sort of gets displayed. This is basically the exact same thing that will get displayed on any social media through your wallets. And you can connect your wallet and then you have these buttons, you can start clicking on them, interacting. It's pretty cool. So then what are actions? We've already talked about blinks. And again, blinks are the front end, actions are the back end.
00:44:12.379 - 00:44:38.777, Speaker A: So let's dive in again. Actions, they're just delivering signable transactions and eventually messages to users. Eventually that will even Be optional. You can just do anything, which is pretty cool. And they just public API endpoints on the Internet, globally accessible. They accept, get and post requests, just like a typical REST API does. And all they're doing is they're returning whatever metadata that you need or want to display in that, that interface.
00:44:38.777 - 00:45:04.005, Speaker A: And then you're also returning a signable transaction, eventually messages, eventually you don't even have to return a transaction. You can just sort of paginate through metadata and show all sorts of cool things. And these transactions can really do anything. Anything you can do with a Solana transaction, you can do with a Blink, because there's just Solana transactions. The last thing here is safety and security. When Blink sort of launched, a lot of people were like, oh, there's all sorts of bad things that could happen. Not so much.
00:45:04.005 - 00:45:36.869, Speaker A: And that's because actions, they just come from domains, just like you connect to any other DAPP across the Internet. You know, you connect Wallet, your wallet has some sort of, sort of user security and safety features. It checks the domain, sees if it's a bad one or thinks it's a bad one, and then it handles that. Wallets are also doing transaction simulation, all the other sorts of things that they've spent lots and lots of times and development hours working on things like low FISH and blockade for sort of a better user experience experience across the Internet. And you just. They're just rest APIs, right? So they're, they just return transactions. That's, that's all that Actions are.
00:45:36.869 - 00:46:11.529, Speaker A: They're super easy to build. If you're a developer, you've probably built a REST API. And just again, some examples, you can do anything you can possibly do with a slant transaction, vote on governance proposals, stake sold, need it more liquid and you can swap assets, you can claim collectibles, you know, whatever. Anything you could possibly do with a slot transaction, you can do with Blinks and actions. Mainnet, Devnet, testnet, even localnet Devs work on local. And you can do all of this kind of stuff. You know, you have these rich experiences, you just return that metadata gets displayed to the user and you don't have to worry about any front end.
00:46:11.529 - 00:46:21.679, Speaker A: It's kind of cool. All right, we're going to get real nerdy now. So there's devs in the audience. This is right Curve stage. Let's talk about it. First thing is the Actions SDK. This is, you know, open source.
00:46:21.679 - 00:46:41.027, Speaker A: There's a bunch of type interfaces and stuff. You know, if you're using Node or anything like that, Type interfaces. There's a bunch of helper functions to make it easier to build actions and links. And we're going to walk through the lifecycle of actions and how it actually works. This looks really complicated. You don't have to really worry about it, except for this part right here. As a developer, that's all you have to build.
00:46:41.027 - 00:47:14.025, Speaker A: You build an Actions API, you build a REST API and then you can do things. It's cool. So it starts out with a get request initially, say you're scrolling through Twitter or anywhere else. Links are sort of supported. The user scrolls through, they see a link, it unfurls, it makes a get request to that URL to the action JSON. It sort of detects if it's a link and it makes a get request to that API endpoint that you've sort of mapped via your action JSON or via the query parameter for interstitial sites. And it's going to make a get required to your API server.
00:47:14.025 - 00:47:37.809, Speaker A: And then you're just going to return some metadata, typical metadata across the Internet, you know, title description, some image kind of stuff. Nothing particularly interesting there, but you can, you know, display whatever you want. And then there's the actions themselves, the linked actions, we call them, and let's actually look at those. So this is actual code from an open source example. Within the actions repo. And all we're doing here we have two actions. The first one we're just, you know, we're sending some sold.
00:47:37.809 - 00:48:11.063, Speaker A: You have a label, that's the button that's going to be displayed for people to actually click. And then you have an href value that's just your API endpoint. When the user clicks this button that says send one sol, it's going to make a post request to that href API endpoint that you've declared wherever you want, and you'll be able to click it, interact and get a transaction. We have a second one here. It looks a little bit more complicated. It's basically the same thing, almost the same API endpoint, except we have these parameters because with blanks you can take user input in the form of parameters. In this case we're doing an amount and we just say, hey, we want this amount field.
00:48:11.063 - 00:48:51.647, Speaker A: And we're just going to put that in the query parameter. It does a template literal replacement. You could also do payload data within the body itself and then you just return that data. So you've made the get request, the client side's made the get request, it sends the response back, and then the user will be able to be displayed that interface, that information within the block link's sort of standard experience. And then you know, you see this, you have the image, the title description, you have these buttons that you can click on, you have text input that you can, you know, sort of ask the user for just about any type of information. And once the user sees this, they can actually click on one of those buttons. They're performing an action, they're executing an action or sort of initiating it.
00:48:51.647 - 00:49:30.785, Speaker A: And what happens is it actually makes a post request back to that href endpoint that you've declared cleared within your get response. And it's going to include the user's wallet address. And if you have any body data, like you've accepted user input via the body instead of query parameter, it gets included in there too. And then you just handle that within your API endpoint. You process the info, the JSON coming in, you validate any of the user input you need, make sure it's a valid public key, wallet address or account address. And then you do whatever business logic you want on chain logic checking. If they have a minimum balance, they have some nft, some token.
00:49:30.785 - 00:49:57.027, Speaker A: Maybe you want to do like some typical Web2 stuff, you know, if they have authenticated on your website, you maybe want to do a zapier integration. You can do anything you could possibly do because it's just a REST API. And then you just return a transaction. Pretty simple. You just send it back and like, hey user, this is a transaction. Do you want to sign this? And they can either sign it or not and it just gets sent back to the user. And the thing here is it gets sent back as a serialized transaction, a 64 encoded.
00:49:57.027 - 00:50:27.439, Speaker A: And then the user will actually be able to yep, we sent it. And then the user will be able to sort of just like interact and actually get their wallet pop up. There's actually a helper function within the Salana Actions SDK called CreatePostResponse. It makes it really easy to correctly structure it. So that way you can sort of satisfy everything you can pass in your transaction. Optional message that gets displayed after the user, after the transaction confirms and then you can also pass in some signers. So if you need to partially sign a transaction for some reason, you can do that too with this.
00:50:27.439 - 00:50:44.085, Speaker A: And you just return JSON and then it gets sent back to the user. The user gets their wallet pop up. They can either confirm, they can either sign a transaction or not. And eventually messages and eventually not. And then if the user signs in, great, we Went to the blockchain. We did blockchain things. It's awesome.
00:50:44.085 - 00:50:58.673, Speaker A: So that's pretty much it. It's that simple to build actions. You can scan this QR code, this goes to this repo. It's listed right here on the Solana developers GitHub organization. A bunch of open source examples. That's where the SDK is. Pretty great stuff.
00:50:58.673 - 00:51:25.573, Speaker A: There's also this YouTube playlist that has a couple of videos on how to do links and actions, more educational content. And then there's the get us started guide with within the slot documentation. And there's also tons more resources. Right, you have the general docs talks about different frameworks, there's examples for Next JS Express, Axiom. So if you want to do Rust, it's just JSON. You can do it in any language, any framework. There's also dialect to huge shout out to dialect and all the engineering work and things they've done around blinks.
00:51:25.573 - 00:51:47.555, Speaker A: And there's also the awesome Blinks repo. So if you build an awesome Blink open up VR, I'd love to merge it. You can follow me on Twitter and if you want to ask any questions, I'm happy to chat. Whether it's on links in actions or anything other like dev rel Solana things, I'm all ears and I'm happy to chat with anyone. And if anyone wants to talk about blinks in actions, I'll be floating around. Just come and talk to me. Thank you very much.
00:51:47.555 - 00:52:24.393, Speaker A: Action packed. I was not lying. Next up. Good morning everyone. Thank you for being here. I'm Iman Motamini, head of the Solana Incubator within Solana Labs. You might be asking yourself, what is the Solana Incubator? What does it mean to grow your company alongside Solana Labs? For those of you who are familiar, you might already know this.
00:52:24.393 - 00:53:30.175, Speaker A: Solana Labs built a lot of the core products and protocols of the Solana blockchain years ago, including the original Validator client. But as the ecosystem has grown, we asked ourselves, how do we really scale the knowledge, the resources we've built up across all these amazing developers in the ecosystem? And one of the answers to that question was the Solana incubator program. Basically taking this expertise, taking the talent, the wisdom we've gained from fighting a lot of these battles and applying them to an extremely small number of teams, four to six teams each cohort, to try to help them build the next jupyter on the network and become the future of Web3 on Solana. Speaking of Blue chip companies you guys might be familiar with Sanctum, they were one of the successes of our first cohort. This is them presenting to a group in New York City and we're excited to announce applications are now open for our second cohort, which will take place from January to April of next year in New York. So in terms of this program, in person is at the core of everything we do. And some of the highlights from Cohort 1, you'll see the impact of in person here.
00:53:30.175 - 00:54:22.785, Speaker A: So you might be familiar with some of these names. Sanctum, I mentioned Chaga Espresso Cash, Meme Royale. And a big part of what we saw in the program, the first cohort, was the impact of actually being right next to building alongside of some of the best founders in the ecosystem, learning from them, growing from them in the same way we have the founders of some of the most accomplished companies in the ecosystem in the office as well. So the founders of Drift Tiplink dialect. And it means so much when you can just go up to them, tap them on the shoulder, ask them a question or discuss a potential collaboration and then on top of that, bringing in some of the best minds into the office as well. So folks from a 16Z paradigm variant, et cetera, bringing them in for office hours to get to collaborate with you one on one and build out the future of your company. But at its core, the most important thing in this program is the tailored support from Solana Labs.
00:54:22.785 - 00:55:09.771, Speaker A: So wanted to walk through that a little bit more. This is one to one support around whatever the needs are that your company is facing. So one is hands on development. We keep the cohort really small for this reason, so that if you're struggling with a Web3 integration, we can actually jump in and help you. Or if you're building a user experience flow where designers can jump into your figma and leave some feedback on the fundraising side, getting you access to the capital you need, whether that's through support from Solana Ventures, Solana foundation grants program, other VCs in the ecosystem, or a market maker, if that's the liquidity you require. Strategic collaboration. So whether it's someone inside the SL ecosystem, a Web2 partner, a potential enterprise customer, we're there to kind of open the doors for you to build the relationships that will be helpful to succeed.
00:55:09.771 - 00:56:00.723, Speaker A: And then most important to me is this aligning product market fit. So, so often in web3 we have our builder hat on, but we kind of forget about the distribution hat, you know, how do we actually get users for our product and so working with all of you to identify the target customer, who has the pressing need for the product you're building and how do we actually iterate the product to meet that need so we can get you the traction and eventually find that product market fit. On top of all of that though, we have the traditional YC elements as well. I think we had something like 70 different meetings and events with each specific company last cohort. So business reviews, speaker series, office hours and workshops, mentorship, cohort huddles, and obviously socials with the cohort as well. And then this is the ad hoc point I mentioned. So the way this typically works is on a Monday maybe we sit down and you guys tell me, hey, we're working through go to market strategy this week.
00:56:00.723 - 00:56:45.259, Speaker A: We'll sit down, we'll meet on that, we'll get you in front of the head of marketing as well so you can get their feedback. Maybe on Tuesday we're leaving comments on the strategy and by Wednesday actually meeting to figure out how can we execute and implement that strategy. Just some photos from Cohort 1. So we, we have Dan Albert there presenting the cohort. John Wong, Nigel Echols, the founder of FanDuel, speaking to the cohort at one of our dinners. And in terms of team and profile, we try to be pretty profile agnostic, meaning if you're already building on Solana, if you're a Web3 team on a different chain looking to come over on Solana, and If you're a Web2 team looking to incorporate Web3 for the first time, we're here to support you. Importantly though, also traction wise were really agnostic as well.
00:56:45.259 - 00:57:27.819, Speaker A: Meaning in Cohort 1 we had teams that were pre product, pre launch, but also teams that had been operating for a number of years and we can help accelerate them to that next level. And so this doesn't just have to be for new teams. And in fact some of the teams that have been established and gotten some traction are the ones who saw the most benefit from the program. Our application deadline is October 4th, so I would encourage you to apply if this could be beneficial. I'm on Twitter monmoutamity, so if you have any questions, feel free to reach out to me there. And then this QR code leads to our website, solanaincubator.com so once again really appreciate you all taking the time and if this could be beneficial, if we could help Excel your company, then we're really looking forward to working with you to build the future of Web3 on Solana.
00:57:27.819 - 00:58:23.595, Speaker A: Thank you very much. All right, now let's please welcome to the stage Trevor Maurice Jones from Brenda Foundation. Hey everybody, I'm Trevor. I'm excited to be back at Breakplace. Since last year we've passed eight community proposals, funded 65 artist grants, paid over 900,000 render upgrade rewards and grown the team by over 2x. Our community have continued to stretch the boundaries of what can be created. Here's just a little snippet of what they've done the last year.
00:58:23.595 - 00:59:59.333, Speaker A: Amazing. From independent films to Emmy nominated productions to the sphere, the community have really powered the future of creativity. Many of the events graphics you're going to see today were done on render and we're really just getting started. We welcome anyone in the community to apply here for a grant and show what can be done on the network. So that being said, the big first piece of news here is our upgraded to Solana is completely. Our new Burn Mint equilibrium model is now fully up and running on Solana and our community has really embraced it. We now have the majority of our circulating supply on Solana.
00:59:59.333 - 01:00:58.565, Speaker A: They've moved almost 2 billion into the Solana ecosystem, making us the largest native project on Solana today. And I'm going to say thank you. We haven't been idle, we've been focused on growth and done an amazing job so far, doubling year to date revenues. And I'm really excited by some of the recent developments and what we think they'll mean to growth in the network. First, our One Click wizard is now live, simplifying the creation process for artists. Over and above that we've added a host of integrations that facilitate faster scene uploading and render downloading. And what I'm really, really excited to announce is Redshift is now in public beta on the Render network.
01:00:58.565 - 01:01:35.687, Speaker A: A huge accomplishment for us. What that means is we are taking jobs, we are taking redshift jobs and payment for those jobs on the network. And we've made great progress on our Blender cycles integration. Moving it now to Testnet Blender confident about a month. I hope we can actually announce a little more there, but a really exciting milestone. Both these are absolutely massive achievements for the network because they really expand our addressable market and therefore the potential users of the network. And naturally we've expanded our APIs to take advantage of all of these.
01:01:35.687 - 01:03:05.855, Speaker A: What that means is it really unlocks the pathway for larger agencies to start using the network and driving different usage patterns. So we're really excited by that. So well positioned on the render front to drive and accelerate growth and to commence deploying the 500,000 render tokens reserved for creator rewards. Then on the AI front, we're collaborating with Hollywood and the AI community to develop an equitable solution for artists and really making sure that covers protection, provenance and revenue in a way that makes sense going forward. We're lucky to say we've added six compute clients who are all amazing projects in their own right and will use the network in creative different ways that we really can't envision today. Above and beyond that, We've expanded our APIs to allow those compute clients to now access GPUs on a per instance reservation basis. And for us we see that really spread springboarding of fueling AI growth in offline work jobs, offline workloads being brought to the network, examples of those being upscaling translation or agent specific lauras and really for us, a pivotal, exciting element of bringing that second half the AI use case to the network and again driving usage.
01:03:05.855 - 01:04:25.751, Speaker A: Really, that's it. If you want to learn more, please Please go to renderfoundation.com and get involved there. Thank you so much for your time. Next up, we have pressure from Tensor JM Solana My name is Richard and I'm one of the co founders of Tensor and today we have some exciting announcements to share with you about the Tensor ecosystem. So for those who don't know, Tensor is the leading NFT marketplace on Solana. Today we've done over $2 billion of volume on our platform and fun fact, Tensor is actually the number one marketplace across all of crypto in terms of the amount of royalties.
01:04:25.751 - 01:05:18.525, Speaker A: Distribute it back to our creators. So today I'm proud to announce that true to our original vision of creating an open NFT ecosystem, Tensor is now fully open sourced. We have open sourced all five of the protocols that power the Tensor ecosystem. It includes the NFT Marketplace, the NFT AMM Pricelock, as well as escrow and whitelist. We call this the Open NFT Finance layer. These contracts have been two times audited by top security firms ottersec and Neodymium. And the other thing is, not only do we spend a lot of time open sourcing these repos, we've actually spent a lot of time making sure that there are great resources for you to look at when it comes to Solana development.
01:05:18.525 - 01:06:12.295, Speaker A: So we supported both v2 web 3js as well as auto generated SDKs using the shank and Kenobi frameworks. So first of all, these protocols are truly and fully permissionless, which means you don't have to talk to us at all. And you can start integrating on top of these protocols immediately. We have included both JavaScript and Rust SDKs for you to integrate seamlessly. The second big thing is that we are hosting a free and fully specced out web2api. So in theory you could clone our entire front end in a single day and I would invite you to do that. And the final big thing, and I want to emphasize this quite a bit, is that we have completely changed up the business model for NFT marketplaces.
01:06:12.295 - 01:07:05.713, Speaker A: There is now a 5050 fee split. 50% of all fees go to the Tensor Foundation treasury and 50% of all the other fees go directly to you, the dev. So whether you're building a gaming marketplace, a Discord bot or a blink, 50% of all fees go back to. So some of your favorite dapps like Drip and Dialect and some of your favorite wallets like Backpack and soflare have already integrated Tensor as a first class citizen. So what exactly can you build on top of Tensor? Well, the first category are vertical marketplaces. So a marketplace for perhaps your in game assets or a marketplace for tokenized collectibles like sneakers or Pokemon cards. The second category might be advanced trading platforms.
01:07:05.713 - 01:08:00.665, Speaker A: So you might be interested in building a collateralized NFT lending protocol directly integrated into our marketplace or perhaps Telegram and Discord bots to make trading NFTs from the chat a breeze. Third categories are for our degens. So we like to see maybe a Punk dot fund for NFTs or chance based NFT games. And of course we're open to all of your ideas so please come to us with them and we'll try to support you. The second big announcement I would like to share is that Tensor foundation has officially opened up their grant program. So if you would like to receive a TNSR grant for anything they are building on top of our protocols, please visit Tensor foundation and apply for a grant today. Now I want to call out this tweet that Tully made a few months back and he said I quote, holy cow, Tensor is just two devs.
01:08:00.665 - 01:08:43.275, Speaker A: I'd like to argue that the next Tensor is also just two devs and they're actually sitting in this room right now. So I'd like to invite all of you to check out our SDKs, our APIs and come build the next tensor on top of TensorFlow. Before I wrap up, there's just one more thing I want to say. So we're the Tencent team and we just don't stop shipping there. There's a new product we've been working on in the past few months. I can't chart just yet, but if you'd like to be one of the first ones to try out this new product, go to Vector Fund today and join the waitlist. Thanks for listening.
01:08:43.275 - 01:09:50.963, Speaker A: Hello, my name is Joe. I'm the CEO and founder of Modern Wizard. Today I'm going to be talking a little bit about Radar, my new open source static analysis tool for Solana programs. So in this talk we're going to cover everything you need to know about using Radar to improve your project security. Now, you can easily write your own detectors if you're a developer or auditor. Anyone who cares about security, this is the tool for you. So a bit about me.
01:09:50.963 - 01:10:29.613, Speaker A: As I said in Joe, I worked in Web2 as a security engineer for about eight years at companies like Amazon and Apple. Most recently I was on the cryptography team at Apple. Done a lot of security reviews in that time. Also spent a good deal of time researching how we can empower devs to take security into their own hands. I believe tools are the future of that. We also have here tomorrow. He wrote all the code for Radar.
01:10:29.613 - 01:11:11.625, Speaker A: He feels the same as I do. He's our lead responsible for the greatness of his Radar today and together with the rest of the team we've built Auto wizard, which is an all in one security platform. All right, so what is Radar? It's yet another static analysis tool. You may be familiar with things like Slow, Ethereum Land. Currently it's one of Solana's only open source free tools. It can be used out of the box as a traditional scanner. There's various methods, CLI and others we'll get into.
01:11:11.625 - 01:11:53.095, Speaker A: It also has the unique benefit of using an intuitive template engine. It allows you to define your own detectors via templates really easily. And we include many helper functions to allow you to sort of abstract away some of the difficulties of doing that so you can easily write your own rules. The nice thing about that is if you have some specialized projects, you have a large code base. You want to detect certain things that are not so generic. This is how you can do it really easily. All right, so how do you use Radar? There are multiple options for using it.
01:11:53.095 - 01:12:46.611, Speaker A: There's a CLI and a server component. The tool is docker based to make it compatible across platforms. The CLI is really just a convenience wrapper in front of that, so should just work in any platform, any system. There's also a nice side effect of how we've engineered that. We basically built an API microservice into it, and sort of architected a CLI around them. And the nice thing about that is it allows you to build on top of it in server applications. Your own clis, whatever use case would be definitely setting it apart from other static analysis tools, which are not designed to do that at all.
01:12:46.611 - 01:13:23.075, Speaker A: They're purely CLIs. Through building our platform Autowizard, we incorporated many static analysis tools and we always sort of struggled with extending them, incorporating them into our automated workflows. So that's the decision we made to make things much easier for the community. Here we have a video of it in action. You can see just the basics. So we've installed it, we're running it against our project. You can see it running, you don't need to worry too much about that.
01:13:23.075 - 01:14:17.475, Speaker A: But you can see all the output from the CLI there. You can format it in a really nice sort of machine readable, human readable format. In addition to that, you can incorporate Radar into your workflow. So GitHub Actions, GitHub Commit, hooks, we all have them, have them all preconfigured in the Radar repos. There's a marketplace GitHub action you can just go ahead and plug in right away. So anytime you have a piece, it actually will plug into GitHub itself and the Security tab, and you can go ahead and triage the results there, just like you do any of your other security tools. So my favorite slide here.
01:14:17.475 - 01:15:19.585, Speaker A: We took a different approach with Radar. Typically when you have a static analysis tool, the detectors are defined in code. If you want to extend those detectors, you need to fork the code base, you need to look at all of the sort of examples that are there. You need to understand how their engine works. And then you can, you know, attempt to write your own detectors. And if you want to contribute that back, you open a pr, you go through all that process, not super accessible when you want to just quickly test something on the fly. So what we decided for Radar is that we would allow you to write essentially templates that you can, you know, just load in on the fly and you can also create a nice database of them.
01:15:19.585 - 01:16:20.565, Speaker A: So to do that, it's really easy. We use simple Python syntax to define the detector rule. There's a few examples in the repo, and we also have detailed API docs that cover all of the sort of helper functions, which I'll go into in a little bit. So you can go and you can jump in and start constructing some of these rules in a pretty simple, intuitive way. So traditionally with the static analysis tools, you need to manually traverse what's called an abstract syntax tree. That can be pretty painful because that's just like a lexical structured representation of the syntax doesn't really follow any rhyme or reason as far as control flow goes. So you have to kind of determine that yourself.
01:16:20.565 - 01:17:04.995, Speaker A: The way you might do that is say, like, I want to find all the functions that call into this certain function. So, okay, you write a detector that will find that certain function and then you have to go through everything else, the abstract syntax tree, completely crawl it and manually check to see what causes apply, whatever conditions. We abstract a lot of that away. There's also much more complex things you can do. We have helper functions to define sub patterns that you can use as building blocks. You can simply chain them together using basic logic. You know, you have a try and complete language of Python.
01:17:04.995 - 01:18:21.015, Speaker A: It can make some pretty powerful stuff that way. All right, so under the fact we first explored using something like LDMIR or bytecode representation for the detectors and for defining these patterns in code, that's one approach. The other is using abstract syntax trees, as I said, which is the one, the one we chose. Each has its pros and cons. I think there's actually another tool you heard about pretty soon here that's taken the opposite approach. The nice thing about intermediate representation about bytecode is the control flow is very well defined. The downside of it is it's not exactly representative of the original syntax that you've seen, right? So if you're used to just reading the code and understanding the pattern from that, you then have to sort of translate how that would look in bytecode, how that would look in llvmir.
01:18:21.015 - 01:19:22.385, Speaker A: The nice thing about abstract syntax trees is that it's just exactly what the code looks like. It's just a structured representation that you then have to crawl over, write some logic on top of. So we opted to go with the abstract syntax tree. It seemed like the simplest way to go about it. And really the idea behind RADAR is that we make it as simple as possible. So you don't have to be a security expert to run some of these detectors. So to get into how it works, the first thing the radar does is it parses the asd, uses the Rust syncrete to take the rest code output formatted ast and it's pretty simple from there iterates over the set of detectors and then use that data structure and derive patterns from it.
01:19:22.385 - 01:20:58.615, Speaker A: So as I said, it's pretty complicated actually to Write a behavior based or data flow based detector in a syntactic representation of the code. So our approach to solve that was to write a pretty extensive library of what we call these helper functions. And those functions are, you can consider them your basic building blocks of the detector. There's some simple things like you get a list of functions calling to this function and there's more complex things like five things we would consider to be modifiers, different conditions that you can chain together to have sort of a complex detector. All right, so oftentimes when building a system like this, devs will gravitate towards defining a domain specific language in dsl. If you've seen platforms like Satoru, for example, or other scribble formal verification tools, they often use DSL because then you can be very specific about the expressions. We entertained that as well.
01:20:58.615 - 01:21:33.145, Speaker A: Ultimately opted to use Python because that's, you know, as I said, a Turing complete language. There's plenty, you can do it logically and it just seemed again to be the simplest way to do things. So yeah, that can. That allows you to have really, well, barren entry, jumping in, writing around templates, experimenting with things. All right, that's my talk for today. Thank you for listening. We have some links here to help you get started.
01:21:33.145 - 01:22:34.005, Speaker A: You can check out what radar is@Automizard IO Radar. Check out the GitHub reactions. And also we have some example. Hello. Hello everyone. I'm Gal Sagi, CEO and co founder of Hypernative. I hope that in this session we are going to break some misconception about security and what is possible and what is not in Web3 security and how that all relates to the Solana ecosystem.
01:22:34.005 - 01:23:37.805, Speaker A: So when we started Hypernative, we started discussing with projects, with builders and we found out three main misconceptions that people think about security. One of them is that security audits are the good way to basically protect your projects. But over the last two years, we have seen that most of the projects that we work with get audited, sometimes even multiple audits, pay a lot of money for these audits, but still get hacked. A staggering amount of more than $2 billion was stolen in 2023 alone from companies that were audited once or even more. And to be frank, a lot of the attacks that we see are sometimes not even related to codebase. So even if you had a perfect audit, you would still get hacked. The second misconception that we saw is that the techs are happening in one transaction.
01:23:37.805 - 01:24:42.535, Speaker A: So over the last two years, Hypernative, and this is an amazing statistics. We were able to detect almost all the hacks and exploits that happened across more than 40 chains that we support. And in 98% of the cases, we are actually able to detect the attack before a few minutes and sometimes even more before the first tech transaction. And this led us to understand that an attack, right, if we have these very indicative transactions that are happening and we're able to capture that attacks are not just happening in one transaction. Also in many cases, you would see that even after the first transaction, not all the money is being stolen, so copycats the original hacker itself. There is a lot of room for damage control, even after the fact. And the third misconception that we hear is that, okay, you can detect the attacks before they happen, but I can't do anything about it.
01:24:42.535 - 01:25:53.845, Speaker A: I think that we proved it wrong. Hypernatives stopped more than 200 and saved more than $200 million of customer money. And if everyone were using Hypernative, we could have probably prevented more than a billion dollars of loss. So there is something to be done and this is why we created HyperNative. HyperNative today to monitor on and off chain data sources in real time, runs hundreds of different kind of detectors and models, from machine learning to other techniques which are meant to detect risk in a variety of different categories before it happens, and connect these detections to automated actions that can actually save and prevent loss automatically. And how do we do it, how all this magic is happening? When we thought about this problem, we wanted to find a way to detect all sorts of different kind of vectors and vulnerabilities because they are endless. In the end, if you look historically, there are just too many different attack vectors.
01:25:53.845 - 01:26:42.781, Speaker A: There are just too many vulnerabilities. You can't just check everything that happened before because then you'll miss that new thing, that new vector that is happening. And this is why hypernative approach is looking historically as well, but also classifying malicious actors. What we found out is that we are very good at detecting malicious actors before they do something bad. Even if we don't know what they're going to do, we know to classify them and then we know to understand they are going to attack your protocol. One example of that is that we found out many attacks are happening when the attacker deploys smart contracts. And these smart contracts are the actual attack, the actual contracts of the hackers before they trigger the attack.
01:26:42.781 - 01:27:48.267, Speaker A: Hypernative. One of the vectors that hypernative does today is to monitor every smart contract that is deployed now also on Solana Be able to classify in a super accurate way that this contract is an attack contract. And then through a fuzzing simulation, real time understanding of the logic of the contract, understand that you are the target and helping you recover from that. Going back to why audits are not good enough, what we found out is that security is holistic problem, right? Even if all your code is correct, you can still get exploited from variety of different ways. One example is the front end. So maybe someone hacked through DNS hijacking, BGP hijacking just hacked your AWS infrastructure that you hold your web application and replace your web application. So your users are connecting the wallets, pressing the buttons.
01:27:48.267 - 01:28:53.275, Speaker A: They think they are interacting with your contracts. Everything is okay with the contracts, but they're actually sending funds to someone else. So there are many different types of attack vectors that you as a project need to cover. From front end attacks to things that are related to your wallets, market manipulation, customer specific attacks that are happening to your protocol, smart contract vulnerabilities, Hypernative. We try to be that one stop shop that knows to monitor, detect all of this and help you to automatically prevent it with these different kind of integration actions, either on chain or off chain. And why is the team good at what it does? It all starts with the people. Hypernative team Combine hundreds of years of cybersecurity experience and applying machine learning in cybersecurity in traditional markets, combined with members that are very versatile and experienced with blockchain and defi technologies.
01:28:53.275 - 01:30:14.355, Speaker A: Over the last two years we have been working. Today we are with more than 130 customers. You saw the statistics in the start hypernative to diagnosis, to detect almost everything with close to zero false positive and working with some of the big names in the industry today as customers. Some of our customers are listed here and they all trust us to make sure that they are secure and that if anything bad happens to them, we have the means to automatically protect them. So why does it matter to Solana and why we are presenting here? Solana foundation shared the same thinking as hypernative that everyone should have a base layer of security that protect your projects. What we usually see is that builders and new projects a lot of times don't really have a security person in the team very early and even very late especially they don't have enough focus or time to think about all of these things, to create all of these things internally. And we want everyone that is building in the Solana ecosystem to be protected and have this base layer of hypernative capabilities.
01:30:14.355 - 01:31:06.485, Speaker A: And this is why we are offering a free account for anyone that is building on Solana. Every project can essentially register. I'll show it by the end of the slides how you can contact us, but you can onboard the platform in a very easy manner and start using hypernative. One of our I want to announce a few projects already are using Hypernative today in production from the Solana ecosystem. I want to highlight one of them squads. So I'm sure many of you heard or are using Squad. Squad is the leading multisig provider for the Solana ecosystem and I'm going to present three use cases that the Squad's team are going to leverage Hypernative on Solana.
01:31:06.485 - 01:32:11.955, Speaker A: The first aspect is the multisig monitoring. Essentially you are using. You have a wallet or few wallets. You want to make sure that you are monitoring any suspicious or normal behavior happening in these wallets from ownership changes, large money movements, transaction initiation, even before they are actually triggered on chain and so on. Essentially to save you from internal or external threats and be able to maybe send these funds to cold storage or do something about these threads. The other aspect, and this is an aspect that hypernetif is working today with a lot of funds and asset managers, but also projects you will be able to trigger automated actions with wads wallet based on hypernative detections and alerts. So a lot of times we work with asset managers where what we do is they model the positions and the protocols that they invest in.
01:32:11.955 - 01:33:12.245, Speaker A: Hypernative essentially knows to detect risks in these protocols before they happen. For example, that these protocols are going to get hacked, trigger an action in the wallet to actually unwind or withdraw the funds before they're actually sold, so before they're actually lost. And we've done this, it's already working in production and many funds have saved considerable amounts of money with that. This is now today integrated also with Squad. So you can define this and this works not just for security reasons, but any action or any logic that you want to track on chain. You can essentially connect that action to Squad action and trigger transaction on chain. And the other and the last point that we are working is that we are helping squads team essentially save and make sure that their on chain presence is secure.
01:33:12.245 - 01:34:25.515, Speaker A: So to summarize, to summarize, I think that we seen Hypernative as a super effective tool to protect anyone that's interacting and anyone that is building or investing or running in web 3. We want to make sure that you are all that you all have access to this technology so we did this partnership with the Solana Foundation. So please feel free to go to our website hypernative IO, fill up the form and you can get access. You can also email us to contact or even directly send me a telegram message with my handle jsagi. Thank you everyone and stay safe. Now those are just the first two out of six talks on security. So if you like security, this is the place to be.
01:34:25.515 - 01:35:07.317, Speaker A: Next up we have Chris Wong. Hi there. Okay, before I start, I'll just take a 30 second quick brief intro about ourselves for those of you who have not heard about our names. We're a security research firm. Of course we do audits at the same time we're building softwares. A few software we're building. One of them is called X Ray.
01:35:07.317 - 01:35:38.041, Speaker A: It's a standard static analyzer for Solana smart contracts. Today my talk is about that. We're announcing releasing an open source version of Xray today. And we also have a pro version that has a little bit more bells and whistles. It's a SaaS version but we're open sourcing one version today. We also have Watchtower. It's a unchained threat monitor for post deployment.
01:35:38.041 - 01:36:23.055, Speaker A: But let's get into it. So what is X Ray? X Ray is a static analyzer for suic design for Snarla smart contracts really rust. The version I'll be introducing today is open source also it's cross platform. It works for Mac, Windows, Linux. What about the tech stack? X Ray is built on top of LLVM TechStep essentially convert your source code into IR and apply analysis on top of that. And figure out where the potential security vulnerabilities are. Why we're doing this? We're doing this because we want to empower developers like you to build rules.
01:36:23.055 - 01:37:00.464, Speaker A: Instead of just us figure out and how to build rules and contributing to that. We want to empower everybody who use it and build your own rules. So a quick intro. How do we install and use it? We prepared a video. In this video we'll show you how to install and use Xray to scan your contracts. Setting up Xray is quick and easy. We provide Docker images for both MAX8.6
01:37:00.464 - 01:37:37.301, Speaker A: and ARM64 architectures. Allowing you to start a scan right away. Using Docker provides cross platform support. So whether you're on Linux and Windows or macOS, you can simply pull a pre built X Ray docker image and run it to your local web. If you're using Linux or WSL on X8C, we also offer pre compiled executables and you can download and extract from a seamless installation. And of course you can always build xray from the source code with instructions provided in the repository. To scan your smart contract, simply copy the source code to your local machine.
01:37:37.301 - 01:38:33.445, Speaker A: You only need to provide the path to the smart contract as a parameter to the X ray. That's and the tool will automatically scan the given directory to find the relevant contract code X ray straight from results to the terminal, scanning for each identified issue. The output includes the relevant code 7, the corresponding line number and a link to the full explanation for the issue type. Once the scan is complete, a summary is provided including the total number of issues that are close to each source file file categorized by type to help you understand the overall code. After making changes to your code, you can easily run other scanner applications and that's it. This video serves as a quick sphere to help you get started with scanning for smart contracts. If you'd like to dive deeper into X rays features or make modifications and customizations, feel free to visit a project page or reach out to us.
01:38:33.445 - 01:39:51.875, Speaker A: Yeah the video flew pretty quickly. In that real example the Software actually found 12 untrustful account issues and some other issues. So just a quick recap. There's three ways to install this the most either way for for most people it's just simply use a docker image if you want to run this on an unsupported platform such as some like Linux on x86 based platform. We also provide pre built batteries and also most importantly that if you want to add and change your own rules we have source file available so you can build your own how to use it is pretty self explanatory so I'll just pass this I'll skip this slide. The reason why again why we're building this is that because we wanted to make it easy for you to change modify the rules. So we also prepared a really quick video about how how people can use it.
01:39:51.875 - 01:41:32.091, Speaker A: If you're looking for a quick Start guide using X Ray, please refer to our Quick Start video and its core xray consists of three main components, the Code Parser, Code analyzer and the cli. The parser is built using Antler and LLBM designed to process a Rust program directly and then lower it to llp. And the analyzer works on this firearm, leveraging both built in LLVM passes and our custom analysis package performs static analysis of smart contracts identifying potential issues. The CLI serves as the overall driver handling user input, invoking the parser analyzer and generating reports now let's take a closer look at an example from the code parser, which transforms Rust code into LLPM intermediate representation in the Rust snippet shown here, the Borrow fee function calculates the borrow fee in the solar sort of contract. After parsing the source code using M X Ray lowers the Develop ir. This IR output then serves as the input for the commander, where further static analysis is performed to detect potential issues. The coding operator traverses the transform, analyzing key instructions such as function calls and account access patterns, capturing detailed code logic for evaluation against the firewalls.
01:41:32.091 - 01:42:30.835, Speaker A: The rule engine allows developers to define custom sets, making it adaptable to various patterns and some customer contracts. The detection rules are categorized into two main instruction specific rules. These rules match specific instructions in the code, such as those that focus on detecting random or multiplied operations which could lead to issues like overflows are evaluated upon managing the defined entry points. These rules analyze and order execution context by gathering information about instructions and associated accounts. Examples include the Cosplay Account Detector and Untrustful Account Detector, which analyze account validation and trustworthiness throughout the program's execution. X Ray is designed for extensive and more developers can modify or add new rulesets to expand as functionality as needed. We welcome ideas and contributions.
01:42:30.835 - 01:43:16.049, Speaker A: We encourage you to explore the repository. For more details, please feel free to contribute or reach out with any questions. Thanks for watching and see you next time. All right, quick recap. Here's the tech stack. Essentially the tool converts your source source code into a lower level IR LLVM IR code captures all operations and then there is a code analyzer which manifests with logic where you want to, you know, how you want to find things. And then through analyzing the IR we're able to find security vulnerabilities.
01:43:16.049 - 01:44:18.103, Speaker A: That's the whole idea, but in Siri you can write your own rules. It doesn't have to be even limited by security vulnerabilities. So here's an example. It's using real Solana Smart contract source code and there's a function essentially I think calculates the fees for borrowed token amount. As you can tell, the source will be transferred to a lower level representation, but with all the operations captured in that function. There are two types of the rules. As part of the first release we're contributing about more than a dozen most common rules including account validation, underflow, overflow, some of the most common security vulnerabilities.
01:44:18.103 - 01:45:15.975, Speaker A: And keep in mind that actuary has been actually running a USB community in the last more than two years. So this essentially we migrate all the tools, we migrate all the rules that mostly common use into the open source version. Again, this tool is to empower developers like you and builders like you. So we look forward to working with you to make much more in Scope. Well lastly, I do want to thank Sonata foundation for their support and make this possible. Thank you. Now please put your hands together for Monty.
01:45:15.975 - 01:45:48.657, Speaker A: Hi everybody. Hi, I'm Andres Monty. I'm co founder of Range and Range is the blockchain security and intelligence platform. So today we are going to talk about risk and monitoring and security for solar applications. A bit about me before. I've been working crypto since 2018. I started doing research in consensus algorithms in Ethereum ecosystem and then became a lead security auditor in 2021 in Oak Security.
01:45:48.657 - 01:46:29.225, Speaker A: I've done countless of audits for Cosmos SDK and Rust and Cosmowasm and WASM Smart contracts. During that process also earned six figures in back bounties. And all during this time something became very clear. Audits are not enough. You know, if we want to have this industry to handle billions and trillions in users and in dollars, we cannot rely on audits. And that's where we started Range. So Rain's mission is to help teams and organizations build and use blockchains, defi protocols and block them defi protocols with peace of mind and also blockchain bridges.
01:46:29.225 - 01:47:28.875, Speaker A: So these are the features that we have and this important award is both build and use. So we help developers build fast and safe applications but also we we help organizations use these protocols like for example custodians, validators and hold their assets. A bit about our partners and Range numbers. We monitor right now more than $19 billion in TBL. We've partnered with big organizations in the whole crypto ecosystem. This is just a sneak peek of our partners. For example with Circle, in partnership with Circle we build USDC Cross Chain Transaction Explorer that monitors every stable coin between Solana and all the EVM rollups and the Cosmos ecosystem also with Osemosys we build what we call the IBC Rail Limits which is an on chain safety program that actually protects billions of dollars in assets and breeds volume every day.
01:47:28.875 - 01:48:31.915, Speaker A: As you see, we started in the Cosmos ecosystem and that's where a lot of our partners come from. And this is how we see the present and the future of crypto. Others like MERT have articulated this vision better than I could ever do, which is Bitcoin for store value, Cosmos for sovereignty and then Solana for scale. And then there is something else that really guides where we focus our efforts, which is play at our strengths and is that we have the core belief that Rust is both the present and the future of the whole industry. So probably there's only one thing that both the US government, the Linux foundation and myself have in common and is that the future of safe software systems is Rust. Like who in this room thinks that in five years from now we're going to be building defi protocols, handling billions of dollars in TBL in solidity, like raise our funds. We have one people very brave.
01:48:31.915 - 01:49:07.641, Speaker A: I disagree. Or hopefully that's not the future. If we are building trust minimized open source financing systems having billions of dollars, we cannot have used Solidity, which in my opinion both Solid and DBM are legacy tech. Don't get me wrong, they were huge innovations, but they are not fit for purpose now. So you know, we cannot let solidity become the web 3 JavaScript. And I would like to point you to this tweet. This was in 2022 from Armani and said that the biggest undervalued opportunity in crypto right now is runtime security.
01:49:07.641 - 01:49:40.735, Speaker A: And so both Solana and Cosmos using Rust are big upgrades, are very well positioned to lut. So this tweet was actually two months before we started range. This has been a great inspiration for us. And actually two years after that tweet we found that the leaders in all things Cosmos, security risk and intelligence. So it was about time. I'm here in the break on stage, so it couldn't be anything else. We are super excited to announce that we've integrated Solana and svm.
01:49:40.735 - 01:50:31.181, Speaker A: So this is, I think the advantage to it is more true now than ever. Like Solana and SVM have super momentum and I think they've proven that you can build fast applications at scale. But here we need to prove that we can build both fast and safe applications so that speed and security can go together. So what does this really mean for Solana builders? Right. I think the best thing because frames can help you depending on your use case. But the best thing is to actually put this in Context to the Web3 kill chain. So what's the Web3 kill chain? So the killchain is all the different phases and steps that happen in a crypto security incident or a hack.
01:50:31.181 - 01:51:06.265, Speaker A: These are funding, which is actually how the hacker gets some funds to pay for gas in a fresh wallet. Then it's preparation. So anything that the hacker needs to do to prepare the attack, this can be deploying a malicious program, this can be getting some token approvals. This can be creating some sort of like PDA or data accounts. Then we have the actual exploitation, which exploitation is the actual transactions that do perform the exploit. And then the fourth one is money laundering and exfiltration. So when the hacker gets the funds, how they do is filtrate it for the systems.
01:51:06.265 - 01:51:53.981, Speaker A: So these are all the different verticals that we offer at Range and now we are going to deep dive and compare each of them with the different phases of the cryptokill chain. The first one is actually a bit special because we are not just building a security product. Range has also built an advanced transaction explorer for Solana. This is an explorer that focuses a lot on things like address historical inflows, labels of address, risk analysis and also entity clustering. And it's not just a Solana explorer, it's a Crossing explorer. So it lets you understand the communications and the transactions that a given Solana address does with the rest of ecosystem. Through the main Solana bridges of course, our focus is in security and real time alerts.
01:51:53.981 - 01:52:49.675, Speaker A: We've created more than 25 security rules customized for Solana applications. This can be from fairly simple rules like fail transactions in your programs or change in the program authority of your program to more complex one by detecting hacks, detecting rat pools or Oracle exploits deviations. We also are creating rules that are targeted to the, you know, like protocols that many people in the ecosystem use, like for example Squad. This is an example of an alert that is going to tell you if a member of a given multi sync has done something anomalous, right? So for example signing a transaction outside of their normal business hours. And we have as well the Range SDK. You know we believe in open source and we think that developers should create more capabilities based on their needs. And you can use our open source library to build more advanced custom detectors and all of these.
01:52:49.675 - 01:53:43.143, Speaker A: You can also use it in our infra or do it on your own and you can connect it with things like PagerDuty, Slack, Telegram and so on. We also normally partner with protocols to create like these customized monitoring systems focused on their use case. So with Range you can really protect your assets and your apps and detect and prevent threats before they happen. Something that not many people know is that majority of hacks in crypto and in particular in Solana actually could have been prevented because they are non atomic. So non atomic means that they happen in multiple transactions and it's not just that they are non atomic, it's that they happen across time spans of hours and even days. You know, like for Example Wormhole, which was the biggest hack in the ecosystem, happened across six hours. And we have the example as well as Casio, which happen across five hours between the funding and preparation and the actual exploitation.
01:53:43.143 - 01:54:25.141, Speaker A: So the TLDR here is that if we have the right security rules and the right security heuristics in place, running, we can prevent hacks. But the reality is that, you know, not all hacks, not 100% of the hacks can be prevented. We built this wallet monitoring and visualizer that can be key for incident response. So when we cannot prevent the hack, we need to mitigate their, you know, their blast radius. And coming back to the web3 kill chain. If we're able to detect a hack in the one and two steps of funding and preparation, we can fully prevent it. If we are able to detect it in the fourth stage, we can at least mitigate it.
01:54:25.141 - 01:55:09.705, Speaker A: The reality is that a lot of projects, a lot of SPL tokens have a freeze authority. And also you can communicate with stablecoins like usdc, USDT and bridge providers that can help you freeze funds and mitigate the damage more than 90%. And here the reality is that the world is multi chain. We all love Solana, but the world right now is multichain. Who in this room has used a crossing bridge in the last three months? Okay, so about like one third, one half of the room. Reality is that hackers use them too and use them a lot. Especially if a chain like Solana, they don't have like a non RAM for let's say non KYC on ramps.
01:55:09.705 - 01:55:58.439, Speaker A: And they use it a lot as well in the exfiltration phase. So like they might hack a program in Solana. How do they get those funds into the Ethereum or the Bitcoin ecosystem to actually do the exfiltration and the money laundering? We also have powerful risks analytics and anomaly detection that combined with alerts, you can create customized anomaly detectors. And we have as well the Range API. So this has Solana native support and you can integrate it in your workflows and your infrastructure to do things like address screening, recent compliance and transaction monitoring. This can be very useful if your use case is focused institutional or enterprise users, or you have a more sort of regulated environment and can help you cover both your security and your compliance needs. So this is Range community platform.
01:55:58.439 - 01:56:38.315, Speaker A: We have actually two versions of Range. One is the Community platform that is open and free for everyone in the Solana ecosystem and it's going to be launching very, very soon. This is mostly focused in the transaction Explorer. Some Basic wallet monitoring and also like network analytics and things like that. And then we have as well RAID Premium, which is the full comprehensive platform focusing on things like real time security, hack detection, intelligence and risk mitigation. Thanks to our partnership with the Solana foundation, we are making this version temporarily free for selected builders and teams in the Solana ecosystem. So yeah, join the private beta.
01:56:38.315 - 01:57:22.099, Speaker A: If you scan this QR code you can join the private beta and we are onboarding selected builders. This is going to be, as I said, range Premium temporary free for selected builders. You know, if you are building a DEFI protocol, a Solana application, if you are an engineer or researcher doing a hackathon, scan it now and we can chat to qualify you into the beta. So here in the Solana the right curve states making the personal commitment here to onboard every Solana builder and team personally during the whole October. I think in the whole conference there is about 6,000 people. So it happens that everyone signs up. I'm going to onboard everyone personally.
01:57:22.099 - 01:58:02.003, Speaker A: I'm doing this commitment here in the States. So for the ones that were very quick before actually the QR goes to my telegram. So if you scan it, say hi and introduce yourself. Not this week because it's crazy with the whole conference, but during the next couple of weeks I promise that I'm going to onboard you personally. I'm going to help you create a custom workspace, I'm going to create some rules together and also as well showcase you the most powerful features of range based on your use case. So yeah, don't miss out, introduce yourself and very, very happy to meet you all. And Adyam, just to wrap up, you know we have a great opportunity here.
01:58:02.003 - 01:59:17.405, Speaker A: I think over the last year Solana and SVM have proven that it's the best place to build fast, composable applications at scale. So let's not fumble this opportunity and let's make Solana together the best place to make applications both the fastest and the safest. So yeah, thanks. Thank you very much. Next up we have Robert from Autosexual. Some of you, if you're Solana developers, might have seen it as well, your stack gets randomly corrupted. This is probably a bit more of a technical talk, so hopefully it will be understandable for developers, but we'll see.
01:59:17.405 - 01:59:55.415, Speaker A: Yeah, so not that many people know this, but this is a pretty recent problem since around a year ago. The root cause is a bug in the Solana compiler. I think Jerry did a tweet about this a few months ago. We work with a lot of Solana teams as well who have ran into this problem. If you are a slot developer, you might have seen this if your slot program randomly and mysteriously changes its state. So for example, here's a message. You run the program and all of a sudden your variables change on the stack.
01:59:55.415 - 02:00:43.087, Speaker A: Unfortunately, the reason why this happens is it's pretty hard to understand unless you actually dig into what's happening. Low level. And the purpose of this talk is to hopefully make this issue legible to more developers. So I have a couple of examples here. All the examples are an entirely safe thrust, so you should be able to read the code and if the compiler was working as intended, the result should be relatively straightforward. So the first one is we have an outer function that doesn't get inline. In these examples I use stdint blackbox, which doesn't do anything.
02:00:43.087 - 02:01:51.871, Speaker A: This is just a compiler hint, it's not really relevant for purposes of these examples. And you could replace this with any other syscall like a sold log, for example. So in our example we have an outer function that allocates a variable called isadmin, then we call an inner function, and the inner function does a variety of different stack shenanigans. And the question is, what happens here when you try to run it and critically does is admin change? So here we're allocating 1000 bytes and it's fine, you can run this and hopefully, as expected, the variable on the stack does not change at all. What happens if you do it with an array of length 4096 or 1000 in hex? For those of you who don't know, stack frames in Solana are this size. So each time you do a function call, you have up to 0 to 1000 bytes of stack space available for you. And you'll notice that when you compile, this is a compiler warning.
02:01:51.871 - 02:02:49.305, Speaker A: Importantly, this is a warning, not an error. So you can, you know, if you don't look too carefully at your compilation logs, you can end up ignoring this. If you're a developer, maybe you should check if you have any warnings when you compile your programs. In this case, we allocate exactly the number of bytes in a stack frame in the array in the inner function call and we don't crash, his admin variable is still unchanged. What if we do 0x1001, so 4096/1 bits and the choice of this number probably already gives you the answer. Here you'll note that the stack offset increases by 1 and the compiler warning. And yeah, the warning messages increase by one.
02:02:49.305 - 02:03:31.447, Speaker A: And, you know, for those who are understood, it does crash, which is, you know, I think, pretty astonishing if you're writing a slot program. The implication here is that, you know, your code can. This is completely safe for us to. You're not doing anything magical here, but because you allocated a lot of bytes in the stack, you overwrote available on the previous function frame. And I want to see what actually happens here. So this is going to be a bit lower level. This is all assembly, I guess.
02:03:31.447 - 02:04:07.982, Speaker A: As a brief timer, you have a bunch of variables, a bunch of registers. R10 is the stacked variable, so that corresponds to where the stack is. So when you start the function call of outer, you have R10 set to some value. Then you allocate and this is a bit out of scope with this example, but you allocate a pointer on the stack and you can see hopefully here the line which I highlighted where you do R10 minus 8. So you take the pointer R10, you subtract 8 and you allocate a variable. Then the algorithm is admin variable. This is for bytes rust integers, by default are i32.
02:04:07.982 - 02:04:55.828, Speaker A: So this is 32 bit int. You can see here it's R10 minus 12, which is 8 plus 4. Then we do a function call and what the interpreter does, which I have here, is it adds 0 to 1000, stack frame size to R10 and then it jumps to the assembly code of the other function call. Again we allocate a pointer. Again, this is the outer scope of this talk. But then we allocate a bunch of stack space and importantly we allocate 0x1001. So if you do a bit of math here, this exceeds the stack frame, it exceeds the amount that we incremented R10, and it sets all the memory here to 1.
02:04:55.828 - 02:05:40.475, Speaker A: And what this means is when we do 0 to 1001 of allocation on the stack, we overwrite this admin variable. So this is actually what is happening under the hood. This is why we're able to completely say for us, change the value of a previous stack variable. This also explains why it doesn't happen when you do the value of 0 to 1000. If the size of the buffer is only 0 to 1000, you'll notice that we overwrite up to pointer, but importantly, we don't overwrite the is admin variable. One question you might ask yourself is are the compiler warnings sufficient? And yeah, good question. Unfortunately not.
02:05:40.475 - 02:06:25.036, Speaker A: So this is an example where you use 0 to 1000 minus 8 bytes of stack space and it still causes an overwrite of the disadvantage variable. This talk is only supposed to be five minutes, so this is left as an exercise to the reader. But if you're able to figure this out, I'd be curious to get your thoughts on why you think this also fails. One hint is around the rbpf. So specifically, how do you pass in a large number of stack variables? Yeah, hopefully this is a pretty motivating example. The solution As a note, all of these are In I think v1.18, but they're patched in Anza's v2.0
02:06:25.036 - 02:07:11.125, Speaker A: back v2.0. So hopefully none of this will be an issue in a few weeks. If you're a slot developer writing a program, and this is what we tell our clients, one thing you can do is you can disable direct mapping to test. And the reason for this is it enables stack frame gaps. When you enable stackpaint reacts. That's funny. When you enable stack frame dapps, this causes the overflow to be caught.
02:07:11.125 - 02:07:52.091, Speaker A: Specifically it makes it so that the area or the memory in between stack frames are not writeable. So this is actually a pretty good way to catch essentially every stack overflow issue, or almost every. You can also check for compiler warnings. I think this is honestly the compiler should probably error here, but if you see one of these errors, maybe you should try to optimize your stack a bit more. The last thing, and hopefully you never have to do this, is to actually read the assembly. And hopefully this presentation gave you some insight into what the assembly actually looks like and what it's doing under the hood. Okay, sweet.
02:07:52.091 - 02:09:41.353, Speaker A: Thanks for time everyone. All right, so fourth break point. Yeah, 6,000 people. So exciting. Who here has Medlines? All right, that's not the purpose of my talk though. I am part of Solana ecosystem since 2018 and I founded an Iran Rokui X. We are basically infrastructure engineering firms.
02:09:41.353 - 02:10:15.285, Speaker A: So we run validators. Thomas here is the God himself. We run validators. We also provide liquidity to defi protocols like for example Kamino. We run solvers for wormhole Mayan B bridge. So think about us a bit like Citadel running infra, providing liquidity, running the transactions on top of it. In 2021 with Dushan, my business partner back then we realized that actually Solana will also be having hacking risks just like Ethereum and we were based back then in Prague.
02:10:15.285 - 02:11:02.749, Speaker A: Our office was just in front of Czech Technical University and we noticed like there were a group of very smart professors at the Czech Technical University because actually not many people know but 30 years ago, all the antivirus of, you know, Avast AVG asset, they were actually created in the Czech Republic. So there is a massive like you know, machine learning AI know how within every university. Because then these antivirus companies are actually, you know, sponsoring and giving grants to those universities. And so we Dushan, we noticed those professors and we told them, hey, let's create a smart contract auditing firm. So Aki was born in 2021. Aki is now doing. Aki has a team of 20 people.
02:11:02.749 - 02:11:26.119, Speaker A: We actually also invested into Aki half a million dollars. They never used it. They were profitable from day one. And they are now doing three things. The first one is smart contract audits. Typical smart contract audits, you know, a three month project. Second thing is they are running school of programming for Solana and also now an auditing school.
02:11:26.119 - 02:11:59.235, Speaker A: And the third thing they are doing is publishing open source auditing tools. So we'll talk about this today. In terms of their audits, they have 134 audits that they run so far for around 40 clients. So on average it's three audits per client. Their Solana clients are Marinade, Neon, Helios and their EVM clients are Lido or Safe for example. And they're continuously doing audits of those companies, including the fastest in terms of their schools. They had so far around 3,400 applicants.
02:11:59.235 - 02:12:29.171, Speaker A: The fourth school, fifth school of programming finished with 42 graduates. It's actually very prestigious because they run it like a university. So at the end you get like an NFT graduating from Aki. And very recently they also launched Auditors Bootcamp. It's running currently there are 750 students. So altogether they have roughly 150 graduates from 1500 students. So please join also the next school of Solana.
02:12:29.171 - 02:13:01.517, Speaker A: It's a programming school. It will start next month. Here's a QR code. You can find the URL now. Who knows what is fuzzy? Okay, so Fuzzing is basically a software tool which is dynamically testing your code. So it compiles your code and then it generalizes, it generates random numbers and then tests your code in 1,101 million iterations. We will see a demo soon.
02:13:01.517 - 02:13:32.579, Speaker A: The open source tool by Aki is called called Trident. And why we think it's useful because yes, EVM chains have most hacks. Around 8 billion were hexed. $8 billion was hexed currently across all blockchains. 1 billion on Solana. Still, you know, it's 13% but we think as we provide more Value on Solana, this will increase. So fuzzing is a tool which is used currently very normally in Web2 and also in EVM ecosystem.
02:13:32.579 - 02:14:13.829, Speaker A: In EVM ecosystem the tools are called Echidna, which is a tool by Trail of Bits Foundry, Medusa or Wake. Wake is actually developed by AKI for the EVM ecosystem and for Sonana. There is only one open source tool for fuzzing and it's called Trident. Let's talk about Wake first. Wake was launched in Aki before Trident. It already protects around 30 billion of TVL. Interestingly, it found a medium bug in Lido in a smart contract called stomx which has 24 billion TBL.
02:14:13.829 - 02:14:41.063, Speaker A: So fuzzing is actually useful. Lido Accel are safe, they use fuzzing constantly. Because the advantage is once you have your fast tests then you can just continuously use them to run your program. Every time you have a new iteration, you have a new commit. Boom. You just run the fuzzing test when you are asleep, for example. But again like you cannot just fuzz your code if it's not very well written.
02:14:41.063 - 02:15:15.801, Speaker A: So let's talk about the basics very very quickly. Important is good code quality, you know, use anchor framework, FP reviews, well documented code and well structured. Number one. Number two, write your unit and integration tests on anchor number three, use Fuzzing and only then go and see expensive auditors. Because fuzzing you can do yourself and I'll show you how. So Trident, the open source fuzzing tool we are talking about right now, was in development for three years. This includes Awake.
02:15:15.801 - 02:15:44.335, Speaker A: It was launched in May this year. And this is how it works. So when you launch it, you will see you launch it by typing Trident Fuzz run fuzz zero. That's your test and then you can see here it's like launching many iterations to test your code. Richard, are you fuzzing your code? Of course, Quantum is losing their code. I hope so. Let me now switch to the demo.
02:15:44.335 - 02:16:18.185, Speaker A: Okay, so I think you still don't see my screen. Do you see my screen? No. So okay, and I do mirror display. You should now see my screen. Yeah. Okay, excellent. So let me just put this.
02:16:18.185 - 02:16:47.159, Speaker A: So this is the GitHub that you see when you go on AKI Blockchain Trident. You just copy the GitHub repository locally. When new program you see here documentation, I have it open. Super simple. You know how to get started, how to start fuzzing. And actually if you run and you have some of the examples here, if you click so fast test you have several examples including for example hello World. So now let's take a look.
02:16:47.159 - 02:17:25.381, Speaker A: I took the Trident repository, I copied it locally, copied it locally. And here you basically see just the, just the GitHub. So I have the Trident, I have documentation, I have the examples. Now in the examples I have hello World and I'm going to show you hello World. When you launch your Trident using Trident init, three things are important. The first one is it's going to generate a Trident toml, which is the configuration file. Here, for example, you can specify 2,000 iterations and what happens if for example the fuzzer found an error.
02:17:25.381 - 02:18:03.068, Speaker A: Here I have exit up and crash true. So if it finds an error, it stops then. Second thing, what is important is in Trident tests I have here the output in page fuzz workspace, I have ckaprt, it's a binary file which is the output of the fuzzer. We'll see how we read it in a second. And then I have three files which is account snapshots generated by Trident. You don't touch this file. This file is basically just there to teach the fuzzer which accounts are used in test fast, you specify which functions of your program should be called.
02:18:03.068 - 02:18:32.215, Speaker A: That's an important file, but it's easy to adapt. And fuzz instructions is the main file in this file. You program your fuzzer and you basically just do two things. Here you specify what are the inputs to use. So here I have input self data input which tells the fuzzer that it should use all the different numbers. But I can also specify, you know, try with a number one. Try with the number 123 now.
02:18:32.215 - 02:18:59.378, Speaker A: And I also have the second important thing, which is what we call invariant tests, which is if you find an error, for example, if the smart contract or the state of the account is a number 123. Stop. So I just specify again my inputs and my invariable tests. Very easy. And then I can run my fuzzer. So I am right now here in the hello world. This is my console.
02:18:59.378 - 02:19:14.946, Speaker A: I'm in hello world and I'm going to run Trident fast. Run fuzz zero. Run the test zero. Boom. And now live. The fuzzer is running. I am right now at iteration 356 of 2000.
02:19:14.946 - 02:19:26.931, Speaker A: Still haven't found a mistake. Iteration 550. I hope it will find a mistake soon. If not, we'll be here late. Iteration 659. Boom. It crashed.
02:19:26.931 - 02:20:09.187, Speaker A: It found a mistake. Here I can see you know, crash is one it doesn't tell me the output. But now I know that there was a mistake in my code. So now I run a debug on the output file which is called cgabrt. Every time the fuzzer runs, it regenerates the same file. So I just have to run right now the command Trident fuzz run debug on that binary file. And now debugger will launch and debugger has this output and it tells me, okay, there was a mistake in an initialize function on line 36 because then it hit when the number was 123.
02:20:09.187 - 02:20:45.923, Speaker A: And you remember in my invariant test I had a function saying if the output of that account is 123, then stop. And he tells me I had a crash when the number was 123. So now I can go back to my code and I can go on the line 36 and I can see, okay, so when this self data input was the number 123, boom. It crashed. And now I actually found a mistake in my code. So please use this yourself, download it. It's all on GitHub.
02:20:45.923 - 02:21:31.041, Speaker A: And actually we created a telegram group Aki Breakpoint fuzzing with Trident where the programmers as we speak are waiting for you to ask your questions. You can also take a look at that same example. Now let's go back to the presentation please. Who understood? All right, that's cool, I like it. So if you go back to the presentation, how can you actually start event from today? How can you start even from today? Number one, watch the videos. Number two, read the docs that I showed you. Number three, ask in discord and of course connect to the telegram group which we just created.
02:21:31.041 - 02:22:21.203, Speaker A: Why? It's important because as more and more software programs of Solana will be verified on chain, hackers will have access to your open source code and they will do the fuzzing before you do so please do the fuzzing before the hackers do of your code. And for this use Trident than. All right guys, how are you doing? One person is still with me. That's cool. Time is passing. Breakpoint is continuing. If you need to get coffinated, we have the chances to do so.
02:22:21.203 - 02:22:49.711, Speaker A: But I do want to make sure that the speakers do get the love that they deserve. They spend their energy preparing those talks. So let's remember what we learned in the very beginning of this event. Clapping, giving the speakers. Yes, yes, yes. We put our hands together and clap. And louder and louder and louder.
02:22:49.711 - 02:23:36.317, Speaker A: And please welcome to the stage Loris from anzac All Right. So today I'm going to talk about a developer tool called Kinovi. The main purpose of Kinovi is to help Solana programs reach their consumers. By consumers, I mean wallets, explorers, decentralized applications, users, and even other programs as program dependencies. Kinovi does that by, sorry, offering a standard that extracts as much information as possible from solar programs. We call the standards an interface that finish from language, or IDL for short. We can then deploy these IDLs on chain, allowing anyone to retrieve them securely.
02:23:36.317 - 02:23:53.075, Speaker A: Great. But I know what you're thinking. How is it different from an anchor idl? Well. Sorry. Well, anchor is an opinionated framework, meaning its IDL makes plenty of assumptions. Let me show you an example. This is how strings are described in anchor.
02:23:53.075 - 02:24:25.615, Speaker A: Now, if you give me a bunch of bytes and tell me string, I still have plenty of questions. For instance, what is the size of a string and how is it encoded? And the answer to all these questions with anchor is borsch and sometimes lightwork. But these aren't the only serialization strategies out there. In contrast, let me show you how Kenobi defines strings. Kinev is designed as a tree of node. So in order to define a string type, we need a string type node. It has an encoding attribute telling us how the byte should be interpreted.
02:24:25.615 - 02:24:57.605, Speaker A: Now, this node alone has no size constraint. To add one, we wrap it in a size prefix type node. Now, we know that the size of the string should be encoded before its content, but we still don't know how that size should be encoded. That's why we also provide a number type node to define that size prefix. And just like that, we also define a bore string. However, Kenobi doesn't select serialization strategies. Instead, it provides small puzzle pieces that you can assemble to create any complex type you want.
02:24:57.605 - 02:25:42.561, Speaker A: Additionally, Kinobi enables programs to depend on the idls of other programs, which opens up new possibilities. For instance, consider an instruction that initializes counter Accounts and the CreateAccount instruction from the system program that we all know. Now, imagine an instruction bundle node that's like, hey, if you use CreateAccount before we initialize counter, you will end up creating a new counter account. Right now, we can generate helper functions for these bundles, and explorers can display more useful information to their needs. Okay, cool. So now how do we actually get a Kenobi ideal from a program? Well, for starters, if you have an anchor program, then your anchor ideal can be converted into a Kenobi ideal. If you have.
02:25:42.561 - 02:26:37.255, Speaker A: If you're using Shank macros to get an anchor ideal from your vanilla Solana program, then the same applies to you, right? And finally, we're currently working on a set of macros that can extract Kenobi ideals from any program directly. Now that we have our Kinobi idea, what can we use it for? Well, World Explorers can already benefit from this by accessing these ideas on demand. Another utility we get from Kinovi is the ability to generate program clients in various languages and frameworks. For instance, we have a JS client that's compatible with the brand new Web3JS. Speaking of, the new Web3JS is currently the release candidate, so please give it a try and give us your feature. We're already generating a Web3JS client for San and core programs, and other teams such as Orca and Tensor are doing the same for their own programs using Kenobi. We also have a JS client for any, a Rust client and even a C client for gaming.
02:26:37.255 - 02:27:21.315, Speaker A: But soon you'll be able to generate not just clients, but all apps, right? For example, CLI tools, documentation, website or React components that you can plug in your dm. One last cool thing about Kenobi is you can use it on account. And what I mean by that is imagine I have an app that uses two Solana programs. Now these programs offer Kenobi ideals, but they don't have JS clients that I could then use for my app. Right? So what do I do? Well, I can create my own custom Kineb ideal by merging their ideals together and cherry picking the bits that are relevant for my app. Now all I need to do is generate a new client from that custom idea. And now I've got all I need to interact with these programs without any external dependencies.
02:27:21.315 - 02:27:39.963, Speaker A: And that's it. That's Kinobi in a nutshell. Kinobi is community driven. So thank you to all the different people that committed to contributed to different parts of the machine. And thank you made a foundation for having initiated the project in the first place. My name is Loris. Here is the repo.
02:27:39.963 - 02:28:21.165, Speaker A: Thank you. That's what I'm talking about. Next up we have Austin from Pedagram. Hi everyone. Thanks for coming to my talk. Today we're going to be talking about Onslaught, an off chain compute framework. This is the first in a series of advanced cryptography products.
02:28:21.165 - 02:29:10.645, Speaker A: So make sure to stick around because there's some cool stuff coming. Yeah, like he said, I'm Austin, I work at Anagraph. A little bit about Anagram. We're a Shadowy organization that builds things, we advise companies and we invest in them. A little bit about myself. My super secret name is ospbot on the Internet and I've been in the ecosystem for a little while and built a few things like bonsol, which like I said, is a off chain compute framework that turns it from only possible on Solana to everything possible on Solana. Unfortunately, my notes aren't showing up, so I'm going to wing it now.
02:29:10.645 - 02:29:53.929, Speaker A: So have fun with that. We know that we love our amazing censorship resistant global state machine and that there are things that are truly in this industry only possible on Solana. But that comes with some limitations. Part of the limitations are what makes Solana fast. And those limitations, as we advance the core protocol, they start to get lifted, they start to get better, but they're still there. And they cost developers lots of headaches. Some developers have to split their protocols and make it more complicated.
02:29:53.929 - 02:30:37.555, Speaker A: Some developers have to use cranks and continually crank their program. Other developers just, they have these great ideas, but they haven't built what they want to build because of these limitations. Even worse are teams that have these, you know, they have to run these relayers, these off chain compute, but they run them in a very trust bro fashion. With bonsol, you no longer have to say trust me bro. You can run off chain compute and verify it on Solana. It essentially extends your program off chain. So imagine if your Solana program could run without any compute unit limitations or transaction size limitations.
02:30:37.555 - 02:31:18.577, Speaker A: That's essentially what Solana does, or, sorry, what console does. You want to grab some transactions from three years ago and check out what happened in them. You can do that. You want to bring under collateralized loans with an underwriting process on Solana, with private data, you can do that with Bonsol and so much more. If you want to run an AI model to detect a Mercury or totally in a picture before you get to mint an nft, you can do that too. The sky's the limit. So today BONSOL is on mainnet and Devnet.
02:31:18.577 - 02:31:52.527, Speaker A: I haven't really announced it too much, but you can play with it. You can run a node and make money. You can break it, tell me how it sucks. You can come build on it with me and you can figure out what you want to do with bonsol. With unlimited compute, there's a lot of value in BONSOL as it stands today, but there's a lot more that we want to build. But we want to build it with you, with the community. We want to hear what you want and want many of you to become contributors to the project.
02:31:52.527 - 02:32:37.843, Speaker A: Right now it's in the dawn of its existence. It's out there chilling on Mainnet, Devnet because we want you to be able to play with it, but we want to add tons more things. We want to integrate it with these cool new products you're about to hear that you're going to hear about after me. And we want to bring a bunch more security and things to it. After stage one is going to be stage two where we do a bunch of cool stuff on the proving and incentive side and anything that you guys want to do and we might go down the restaking meta side. And then number three, I had to put this in here because everything's better in threes, but I have no idea what stage three is about, but I hope it would be audited and ready for billions of dollars to run through. Thanks for coming to my talk.
02:32:37.843 - 02:33:45.421, Speaker A: If you want to scan this QR code, you can check out our docs and come find me if things break. And yeah, thanks for coming. Welcome to Right Curve, the stage where we talk about developer content. The stage where you can enjoy yourself and maybe you've heard about Helios, maybe you've heard about Light protocol. We've got two guys for you coming up in the next minute or two. Let me just check. Just getting mic'd up.
02:33:45.421 - 02:34:10.275, Speaker A: So I'm getting you hyped up how you're feeling. Okay, you're not ready. I need to get you ready as well. So I'm gonna divide the stage into stage the audience into two groups. To my right and to my left. If I pointed you, you're gonna clap. Okay, we try this? Yes.
02:34:10.275 - 02:34:50.065, Speaker A: No, Just once, just once, Just once. Nice. Can the other side do that too? Nice. And please welcome to the stage. Hey everyone, I'm Nick and I'm one of the co founders of Helios. Helios is a developer platform and RPC provider for Solana. My name is Sven, co founder at Light Protocol and Light is a protocol for scaling Solana at yfck.
02:34:50.065 - 02:35:50.065, Speaker A: So you might be wondering why are two different businesses here right now? And we basically partnered to build an end to end scaling solution for Solana. Today we're going to talk about Zika compression, what it is, how it works and most importantly why it matters. We'll do some demos and we'll also go and have a Q and A at the end if you have any questions. Awesome. So first question, what is ZK compression? Now to understand that answer, we'll provide a little bit of context first and then we'll just recursively go deeper and by the end of the talk, hopefully you'll all understand once again, compression aids. First thing to know about Solana is that compute on Solana is very cheap, but actually data storage is very expensive. So if you want to create 1000 token accounts, it costs you 3.
02:35:50.065 - 02:36:31.881, Speaker A: Now the thing is, if you want to scale your application, right, you have an application, you hit a lot of users, that cost becomes really basically economically prohibited for you. If you want to create a million token accounts, that's $1,000. And so ad cost just goes up with the price of Sol as well. So that's a big problem, number one. Now there's a second problem which is the state growth problem, which all stateful blockchains have. The thing about Solana is that it has a lot of accounts. So the concept here is that if we store data, we store it in accounts and when we create an account we have to pay for rent.
02:36:31.881 - 02:36:59.075, Speaker A: And rent is expensive. And still there are 500 million accounts on Solana right now in the total state. And this number is growing. So each day we have like net new, we add about 1 million new accounts per day. Now those are two major problems. And ZK compression basically fixes this. We have on one hand 1,000 times cheaper accounts for Solana.
02:36:59.075 - 02:37:43.655, Speaker A: Then we have a solution for state growth, which is ZK compression. Then lastly, there's a little bit of a side note. We'll get to it at the end of the talk. ZK Compression is also a foundation for ZK Compute on Solana. Alright, just to hammer it in once more, we have a thousand times cheaper accounts, we have a solution to state growth and we have a foundation for ZK Compute on Solana. Now alright, so if we take the words ZK compression, what does it actually mean? Right, so we have state compression on one hand, then we have ZK0 knowledge to it. So let's first look at state compression.
02:37:43.655 - 02:38:41.709, Speaker A: It's basically four major points at the high level. First point is what we do is we take millions of accounts on Solana and we compress them, we hash them together into one small fingerprint and we take that fingerprint and we store the fingerprint in an on chain account and we store the actual underlying account data off chain, for instance, on the Solana ledger. Now lastly, we have a proof mechanism that lets us verify on chain the validity of these underlying off chain accounts using the fingerprint that we stored on chain. So that is the high level of what state compression is. And in CK compression is just using zoom knowledge proofs, snarks for the last element, which is the proving part. Yeah. So now we'll talk about why CK compression is the right solution as a state compression kind of primitive.
02:38:41.709 - 02:39:21.449, Speaker A: And what I'm going to do is outline the key features that essentially make it the right solution. So first off, what I really want to hammer in is that compressed accounts are essentially analogous to regular Solana accounts. They are very, very similar. Which means that you can apply the same sort of Solana development techniques that you do today with the ZK compression system. It will feel the exact same, which means the barrier to entry for developers is very low. And it just essentially will make this whole system easier for you to get started with. If you look at, for example, the API that the indexer exposes, which we'll talk about more in the future, you can actually just see how similar it is.
02:39:21.449 - 02:40:06.335, Speaker A: You can see that, for example, GetAccountInfo just maps to GetCompressedAccount and this sort of like one to one mapping continues for essentially the whole RPCAPI. Now, another really important point that we want to hammer in is that compressive PDAs are supported. So PDA is a program derived address. And essentially what this is, it's a deterministic address. It's a way that given a certain program plus a seed, you're able to get consistently the same account out of that. Now this is actually so important that we decided to rebuild the entire compression system into ZK compression for this very reason. And it's powered under the hood by the zk, which is a bit out of scope of this talk, but essentially it's the reason why we did all of it.
02:40:06.335 - 02:41:15.135, Speaker A: And the way that compressed PDA work is that basically you take the program ID and say you have a domain name service like a DNS and you want to take that key. You can then map that to one single account every single time, which means you don't have to worry about having race conditions or collisions and accidentally creating two DNS value accounts for the same key. This is a super powerful concept that if you've done a salon development, or if you've done just development in general, you'll understand how this is like a basic primitive that needs to exist in any system and it's fully supported with CK compression. So if you think about where this will take Solana, what I want to emphasize is that because it has PDAs and because there's also this ability to compose programs together is you're able to have these sort of more complex architectures. You have multiple programs, different PDAs, the sort of development experience you're used to building applications, used to building on Solana, but you're going to be able to do this with a thousand times less cost for your accounts. That is huge. This will open up use cases that we probably haven't seen before because people are essentially just priced out of it.
02:41:15.135 - 02:41:49.945, Speaker A: So there's a few things I really want to hammer in here that are quite important. First off, everything is executed on solana. It's not L2, it's not a validium. Essentially you have the data availability automatically through the Solana ledger. Because it's executed on Solana. It means that it's verifiable and it also means that it's fully composable. Now, for those of you that are familiar with the old compression system, I just want to make a quick little call out that one improvement we've done here is that the Zero knowledge proofs have this feature where they shrink the proof sizes down to a consistent 128 bytes.
02:41:49.945 - 02:42:23.257, Speaker A: What that means is you have a lot more room in each transaction for essentially just whatever else you need to do, which means easier composability and just more room for activities. Another important feature is decompression. This is really important because essentially prevents lock in. It allows for simple interoperability. Any Solana account today or in general can be compressed. And when you do that, you get the rent cost back. You can also take any compressed account and decompress it.
02:42:23.257 - 02:43:03.385, Speaker A: And you obviously need to put your rent payment in there. So that means you can go between the two. So if you ever have a compressed program, say a compressed token and need to decompress it, you can then decompress it and feed it into say like Jupiter, do a swap or whatnot. It also allows for a sort of back and forth between hot and cold states. So you're actually able to say you want to create like a video game where you have say a bunch of different cards and items that are all compressed. You can decompress those when you go into a battle, have a quickly iterating state and then you can compress it afterwards, saving the final result, say like the hit points change and whatnot. So again, very sort of powerful concept.
02:43:03.385 - 02:43:42.023, Speaker A: The other thing too is I want to emphasize this is a fully generalized solution. It's not tied to a single program or business. It is essentially just Solana accounts and compressed with low cost, you can do anything you want to do today. It has out of the box indexing support, it's fully open source production ready. And that's pretty much the main point I want to make there. But going even further, we've also added, just in the first release, compressed tokens. And we've built compressed tokens using the exact same tools you would build to build any, you know, application that leverages compression.
02:43:42.023 - 02:44:23.575, Speaker A: It's no different. And so you obviously get the thousand times cost savings. But you also. I suppose what I want to say is that the compressed token program we've built mirrors the Solana token program pretty much one to one, which means it feels the exact same to work with. We're also going to include token extensions which will be live at the beginning of 2025. And as I mentioned before, you get all these other benefits like decompression, so you can airdrop tons of tokens and then decompress them if you want to use them in defi. So now we're just going to do a demo so you can actually see how it works and just see how, you know, how essentially it mirrors the Solana experience approach one to one.
02:44:23.575 - 02:45:08.537, Speaker A: And so what we're going to do here is we essentially have a, we're doing this all locally and we have a test value similar to the Solana test validator. And we're going to go and essentially create a token and mint some tokens. So that's what we do here. And one thing I want to highlight here is that ZK is thought of as like this holy grail of like, you know, very expensive computation. But what you see here is that actually the transfer, and we'll do it right here looks a lot like a regular SPL token. That is because we've shrunk down the proving time to like milliseconds. And so we think that's pretty cool because it's like a production grade consumer ZK right there for decreasing cost of token accounts.
02:45:08.537 - 02:46:14.235, Speaker A: And so what we have here is we have 42 minted token accounts in compressed form. Now we transfer 12 of them to another person and we see that it takes, right there, we see that it takes like, you know, similar to a regular Solana transaction. And then we check the balance and we see that indeed we have sent 12 tokens, compressed tokens to another person. Awesome. So this demo looks cool, but how does it actually work on the network? Now to recap, you notice, slide, we have these four points at a high level about what state compression Is right. So to recap, we have millions of accounts, we fingerprint them, we hash them together, we store the fingerprint on chain, we store the underlying account data off chain, for instance, on the Solana ledger, which has the same safety guarantees as Solana itself use on chain accounts. And then lastly, we have a proof mechanism that allows us to, in a smart contract, verify this off chain data.
02:46:14.235 - 02:46:54.841, Speaker A: Now if you dig deeper, there are five major components in the overall system and I'll just walk you guys through it. So the first thing that is very critical to understand is the concept of state merkle trees. And we call it the forest of state merkle trees. And I'll get into why it is a forest in a bit, in a minute. But basically this concept helps us understand how we create this fingerprint that I mentioned earlier. So say we have four accounts. What we can do is we can hash them and then we can recursively hash them together into this upside down tree structure.
02:46:54.841 - 02:47:32.145, Speaker A: This is what's called a Merkle tree. Now the most the root on the top. So this hash, the final hash on top is a 32 byte hash. Now basically what this does is it gives us a cryptographic guarantee about the underlying account data of all the different accounts. And what that means is that it ensures integrity. So it's really easy for us to verify that a given account state is actually part of this Merkle tree by verifying it against the state run. Now there are two relevant programs here in the program.
02:47:32.145 - 02:48:19.317, Speaker A: There's a light system program which is sort of an on chain dm and it mirrors the Solana system program. So all it does really is it writes to the Merkle tree, it enforces the generic account model that Solana also does have. And then it also deals with verifying the uniqueness of PDAs. Next up we have the compressed token program. And as Nick already mentioned, compressed token program mimics the SBL token program. So what it does is it just enforces the SBL data layout on top of the account model that we have for compression. Now there's one other important concept that I want to highlight here in this section and that is the concept of the forest of state knuckle trees.
02:48:19.317 - 02:49:05.247, Speaker A: Well, there's some nuances there and that's why we have forest of those. So in short, foresters manage the light forest. What that means is when we look at the compressed state changes, what actually happens when you update a compressed account is that you actually add a new account state to the tree, you append it and then you zero out or nullify the old state. There are two implications of this. One implication is, well, whenever there's a update, the root changes, right? Because the state underlying changes and therefore the root must change as well. The changes trickle up the upside down tree. Now there's a second facet to this which is, well, the trees fill up over time.
02:49:05.247 - 02:49:39.845, Speaker A: Eventually they get full and so that's where the forest of light trees comes in. Forest denotes basically maintain a state route. So they update the state route and so an asynchronous process and then they also roll over false state trees. Now I should note that for your own state trees, running your own force unknown is permissionless. And lastly we have the indexer. Yeah. So I'd like to next introduce Photon and essentially it's the open source indexer for ZK expression.
02:49:39.845 - 02:50:33.409, Speaker A: The purpose of the indexer essentially is to listen to what's happening on the chain with respect to compressed accounts getting updated, created, mutated, etc. And this is essentially it is caching the current state and it's also responsible for generating the proofs that you can then use to verify the data or to also mutate the data, if you so choose. So in terms of features, it's fully open source and production ready. And we've intentionally tried to make some improvements and take the learnings we've had from working with the first variant of compression to make this indexer much easier for everyone to use, regardless of whether you're an individual developer or if you're an enterprise or RPQ provider. First off, local development is far easier. You have a cli, it's like a one click thing where you just run it and it'll automatically work with your local development. We also have an explorer that works locally, so it's more of a dev focused explorer.
02:50:33.409 - 02:51:14.219, Speaker A: So you can kind of see your compressed accounts visually and understand what's happening, look at the transaction history, etc. Next, I want to talk about something important which is snapshot support. It will generate snapshots at a daily period, which is really important because it allows anyone else to start the Photon indexer from a snapshot and they no longer need to go and re index from Genesis, which means your boot times and start times are a lot faster. And as you can see here, we are able to catch up in about 15 minutes or less. Also the advantage of having snapshots is it increases your sort of replication factor or your sort of, I guess your replication factor. It's like the. It makes it easier for anyone to Run it.
02:51:14.219 - 02:51:54.845, Speaker A: Because if, say, any RPC provider stops wanting to offer support for compression, you just need to go grab that snapshot and you can run it yourself. There's no real risk anymore because we can offer these snapshots and store them on somewhere decentralized like filecoin. And lastly, I wanted to point out that I guess I already mentioned this, but it really is built for everything from individuals to enterprises. So if you want to index your own data, you can run Photons. That's only indexing a subset of the data. It means you need much lower hardware requirements, smaller database, et cetera. You can run up a SQL1 CLI command, or if you want to index everything as an app, RPC provider, it also of course facilitates that.
02:51:54.845 - 02:52:24.793, Speaker A: So how do you use it? Well, it's available today on an Eclios plan. You can also, as I said, run it yourself, or you can just talk to your other RPC provider and just ask them to start offering it. Awesome. So one other major thing to highlight is developers. Developers, Developers, Developers, developers. We are focused on developers. And so there's three major things that we've built and that we're building out and improving on.
02:52:24.793 - 02:53:19.433, Speaker A: And the first thing is the SDK, which is like Web3js, if you use Solana Web3js, but full compression. So what that means is if you have your compressed token transfer, all you need to do is you need to first fetch your compressed token accounts, then you can use those token accounts to fetch a validity proof from your RPC or a dedicated prover node. And then lastly you can just build your instruction like you would with the SPL token program. So you build the instruction, you tell it what you want to send, how much, which mint, right, and to whom, and then you can go off and build your regular Solana transaction. All right. The second thing is you saw it in the demo as well in the beginning and Nick highlighted in it which is the full local development setup. So we have this test validator that comes pre initialized with all you need for local development.
02:53:19.433 - 02:53:52.105, Speaker A: So this is all the programs. The Photon indexer runs locally, the index prover node runs locally. So you have all of that ready to go. And then lastly, anchor macros. So if you are into Solana program development, you've probably heard, heard of and used anchor. And basically our goal is to make developing with compressed accounts feel exactly the same as developing with regular accounts. So this is what this looks like.
02:53:52.105 - 02:54:43.525, Speaker A: If you have written an anchor program, you will feel the similarities. All right, so next I want to talk about Airship. This is something we've built to essentially let people start using ZK compression today for users essentially. And what it is is it is a mass airdrop token. Essentially it's very easy and cheap to use and you have either a UI you can use or a CLI and everything's open source, you can go use it, you can fork it if you want and make changes as you need. But essentially what I want to point out I guess is that in the best case, you airdrop these compressed tokens and over time the ecosystem starts using compressed tokens for all sorts of different applications. But say you just want to immediately convert that, you can't, you can just decompress it right away.
02:54:43.525 - 02:55:35.241, Speaker A: We've also built that into why. So essentially your worst case is that using Airship would basically be a pre built airdrop tool that you could use and it just be the same as using normal tokens. The other thing I want to point out is that it automatically supports airdropping to Solana mobile holders and can also airdrop to any token sub holders of a certain token or an NFT collection. You can also provide your own CSV if you have a pre generated list of users you want to pair talk to. Probably the easiest way to go over it is just to show a demo. And in this demo what we're going to do, we're going to use the UI and we're going to use a CSV in this case. And then once you import that, you're going to go and specify the token you want to airdrop and the amount, confirm everything and then you can run it.
02:55:35.241 - 02:56:37.975, Speaker A: Now one thing that's nice too is that both the CLI and the ui, if say you lose Internet connectivity or something goes wrong, you can resume your airdrop from wherever it is, keeps track of that state, which is quite nice because some of these airdrops might take a little longer, like 30 minutes or 45 minutes if you're doing a lot. All right, so the TLDR ZK compression scaled Solana and we hope that you've all now sort of gotten a glance and sort of a high level overview of how exactly it scales Solana. But then there's, you know, that's basically cheaper accounts, right? And then solving a state proof problem, and one note on this is basically the state growth problem, right? The way that ZK compression solves this or gives a solution to solve it is that you can store the. You basically only store the final root hash of all the accounts in the Active validator memory. Right. So that's effectively how we approach the state growth problem. Now there's these two scaling problems that.
02:56:37.975 - 02:57:11.509, Speaker A: But ultimately what ZK Conversion does is we think it's creating a new design space for apps. And there's two types of apps basically. And we have listed a bunch of ideas on the next slide and there's two segments. So one is just like dealing with cheaper state. So I'll just run through a list and there's a lot more that we've seen people do and that we like to see. We have SBL token compressors, 1 billion meme coins. I think that's an interesting one.
02:57:11.509 - 02:57:58.135, Speaker A: And then prediction markets for Twitter posts. You could also use state compression with ZK to create identifier PDAs for deep end networks where you basically register your different nodes on chain. And then there's the second section which goes into the ZK part and into the verifiable compute part. And three things I want to highlight here that I find very interesting are verifiable reward calculations. So we have some sort of like verifiable off chain compute. Just in a previous talk you've heard about console, that's one approach to do it. And then you can plug into and actually write that data to the Merkle tree roots that CK compression maintains.
02:57:58.135 - 02:58:25.275, Speaker A: Now there are two other ideas. For instance, trust minimized bridges where you basically sync local routes again. And then ZK identity protocols. I think that's also something that's pretty interesting. So there's a bunch of these ideas. We have a lot more out there in the documentation as well. But yeah, this should just give you sort of a sense of how broad the application are for ZK compression.
02:58:25.275 - 02:58:53.827, Speaker A: So this is live on mainnet today, so there's nothing stopping you from getting started. We have docs, we have demos, everything to start. There's also Devnet, local net, Testnet support, whatever you need. We also are hosting a hackathon. We still have time. There's up to $45,000 in prizes. And also I guess as we wrap up, I also want to give a special thanks to all the people who are behind this project.
02:58:53.827 - 02:59:29.695, Speaker A: We have Pedro Kuhn who worked on the Helio side, and then we have Yoret, Michael, Sergey and Tilo from the Light Protocol core team. And we have about five minutes left, so we can run through a Q and A if anyone has some questions. Awesome. And I believe we will have some staff out here who have mics that they give to people who have questions if that doesn't work out, then I'll just go around and ask directly. Does anyone have questions? You can raise your hands. I'll just go around then. Okay.
02:59:29.695 - 03:00:15.589, Speaker A: Yeah, let's start here. Sure. So the question is, what's the incentive to run the forester nodes? Take that one. Yeah. So running a Forrester node, the way that we see it, it's very similar to running RPCs and running photon indexers, is that when you care about your own compressed state, as an app developer, you have an incentive, natural incentive, to make sure that your state trees are being maintained. And so we have an incentive to either run a node yourself if you want to sell, or you could pay another provider for it. Anyone else? Maybe over here I can jump down and the gray shirt.
03:00:15.589 - 03:01:18.241, Speaker A: Oh, I got a mic. Awesome. Yeah. Okay, so when you're compressing states, what's the difference with the state compression program like on the SPL library? And the other question is like your token program created by you, is that supported by any exchanges? So creating tokens in your token programs does not compatible with the existing ecosystem. How do you fix that? Okay, yeah. I'll start with the second question, which is essentially, if I get it correctly, you're asking, is the compressed tokens, are they compatible with exchanges and defi, and if not, how do you rectify that? So essentially the answer is sort of yes and no. They're not directly compatible because they need to actually support them, which they can do, but you can decompress them.
03:01:18.241 - 03:02:04.793, Speaker A: So if you have a compressed token and you want to decompress it, you can convert it into a normal token, regular SPL token, and then you can use it in defi the exact way you normally would. So there's no real lock in. But we do hope that basically because you get to keep the cost savings if you don't decompress and it is very easy to use, we'll see more and more people basically building applications that leverage the actual compressed state. Now, I guess while we're here, I will mention that if you want to do rapid fire trading or something like decompressing is a better way to go. Compressed state is best for cold applications and regular counts are good for hot state. And that's kind of one of the big important things of this whole system is that we have that state growth problem. Right.
03:02:04.793 - 03:02:33.665, Speaker A: So essentially there's tons of state there that is just cold. And now we're able to move that to a compressed state, which has all the benefits we talked about. Awesome. Any other questions? I Think there was another question as well. That's my first part. Yeah. So to repeat, I guess the question was around why don't we just use the regular SPL account compression program and what it changes? And Nick has highlighted this in the beginning of the slides.
03:02:33.665 - 03:03:31.645, Speaker A: There's a couple of improvements that we've made where we basically figure out we have to rebuild this from scratch. And this includes the support for PDAs, right? So like, like what that actually means is like proving not only that your state is part of a local tree, like inclusion, but also being able to prove in an efficient way, so like within the transaction size limit, basically that a given address is unique. So what that means is that you have something that's called an address tree. And this address tree is very similar to a state local tree, but with one nuance. What you actually do is by proving inclusion in a leaf, you prove exclusion of a certain range of numbers, right? And so what you can do is you can actually display or handle the whole address space. In our case, it's 248 bit address space within much smaller Merkle trees. And so that's how you get the uniqueness property.
03:03:31.645 - 03:04:17.225, Speaker A: And that's something that we added that we basically had to rebuild from scratch. And then I guess the fundamental difference as well is we're using zero knowledge proofs snarks to keep the proof size consistent, independent of, you know, how many accounts you want to update, read or write in one transaction and then how many inclusions or exclusions you want to prove. And this is very important because Solana transactions are very small by nature. So like 1.2 kilobyte. And the way to achieve these like fast proving times through to generate these proofs, you have to actually use a different hash function for these state local trees. And so therefore we could use the original SPL account compression program and then build our system program and compress token program on top of that.
03:04:17.225 - 03:05:26.255, Speaker A: I think we have time for one more quick question, if anyone else has one in the back there. Are there any limitations around the concurrency that's happening inside a single tree during a solid? I'll take that one. Sure. So the question is, what are the limitations in regards to concurrency when using compressed accounts? And Nick mentioned it in his one answer, which is that if you have account updates to the same account, like you write to that same account many times on a block, you should not use compression for that. What you can do is you can just keep that specific account permanently decompressed as a regular on chain account. For instance, if you have an AMM pool account, you want to keep that one decompressed, right? And then basically all the other state that is colder in this hot account. It's designed, the system is designed in a way where you can then interact with the decompress accounts that mix and match within one transaction.
03:05:26.255 - 03:06:09.125, Speaker A: Awesome. I think that puts us at the end of time. So we'll wrap up here, but thanks for the questions and again, thank you everyone for having us going. Keep it going and welcome to the stage, Jacob from Risk Zero. Nice to see everyone excited to continue to like expand on the CK stuff going on Solana. So the title of the talk is Boundless Execution on Solana. First of all, let's do a little bit of a history recap.
03:06:09.125 - 03:06:56.075, Speaker A: In general, blockchains are kind of in this dilemma of security through decentralization and everyone kind of makes trade offs, right? So you can have like higher hardware requirements, more or less node operators, different sort of execution limits, and different sort of block frequencies. In general, when you think of execution on a blockchain, you're constrained by the smallest node. Why? Because that person has to like keep up, continue to execute transactions. With ck, we get boundless execution. Instead of being restricted by the smallest node, we become a sum of them all. With ck, you can have really brief verification that someone's done an execution correctly. So if someone wants to generate and you know, has 30K GPUs, they can do 30,000 GPUs worth of verifiable execution.
03:06:56.075 - 03:07:32.473, Speaker A: If someone has 100, then you can do 100. So you kind of get this really nice property that you can just do a lot more execution. Let's do a really brief history of ck. In general, I think CK has been talked about this like holy grail technology more on the Ethereum ecosystem side since 2015, 2016. I think it's kind of obvious that there's not many applications alive today. Real quick, just mention here, when people mention CK normally, they're normally talking about verifiable compute. That verification factor of it.
03:07:32.473 - 03:07:56.855, Speaker A: You can add privacy on top as well. So why are there no ZK applications? Right? Well, ZK is a little bit broken. Performance has not been there. There's been a lot of research around it. It's been inaccessible. The example I always give is currently you have to write these like ZK circuits. Most of you can probably code the game of chess in a high level language.
03:07:56.855 - 03:08:39.529, Speaker A: If I ask you to code the game of chess represented by polynomials, probably less accessible, and then there's also like an ongoing maintenance and security issue. If you ever need to change your CK program, you normally have to change a large portion of your program. The circuit is also really hard to one audit and make secure in the first place. So Risk zero fixes CK development. All you need to know about this is we essentially made a CK circuit that looks like a cpu. We can take Rust code, compile it down to a RISC V and generate a proof that this code has been executed correctly. So what does this mean for a developer? Right, it becomes really usable.
03:08:39.529 - 03:09:05.255, Speaker A: Okay, so you just write programs in Rust. You can use 70% of the most popular rust kit inside the ZKB. Your development time is 1000 less. You don't have to worry about. You don't have to worry about the security as much and the maintainability. If you want to change your program, you just change the line of Rust and you're getting going. You don't have to get your circuits audited and then you get this boundless proof part of it.
03:09:05.255 - 03:09:36.973, Speaker A: We have this other innovation called continuations. We can kind of just generate proofs for infinity. So we kind of like stitch them on the back of each other. So let's talk right, like why should a developer care about becoming boundless? I'm going to share some examples that are all being worked on today by partners. First you get like boundless skeuomorphic execution. Today execution in CK is cheaper than anything on chain. We can verify a Dex swap for a tenth of a cent inside the ckpf.
03:09:36.973 - 03:10:10.625, Speaker A: So you know we have like roll ups. There's some people on Solana looking to do using a CKM network, extensions, co processors. Unfortunately this video is not loading. We actually ran the original version of Doom inside the CKVM with rendering. There's the picture. Now next you could do some more complex trading strategies. We have one partner, not specifically Tokamak, but you can track a moving price average over a month across multiple assets, across multiple chains, doing way more expressive things.
03:10:10.625 - 03:10:45.503, Speaker A: And lastly we can start to like bring in web2 infrastructure on chain. So here's a good example. We can do like sort of like CK login with the Gmail we generate a proof that you actually own a JWT token. We can also do this with oauth tokens, Twitter logins. You can find this in the example on our website. So if you would like to figure out more risk 0 is you can find all the ZKBM documentation on the left and then we're building a protocol so we're calling it the verifiable compute later. It lets any chain elastically demand on execution.
03:10:45.503 - 03:11:09.565, Speaker A: You can think of it a lot. You know how, just how Chainlink brought price feeds to every chain. We're going to bring ZK to every ecosystem. Perfect. Thanks, guys. Okay, we have one more before lunch. Please put your hands together for Yannick from Akium.
03:11:09.565 - 03:11:57.891, Speaker A: Encrypt. Everything, compute, anything. That's what we're building with Archeum. So I'm Janik, co founder and CEO at Archium, and today I want to introduce you to the technology that we're building and how it addresses some of the most pressing challenges in privacy and data security. So we are building the global supercomputer for a hyper encrypted Internet. So imagine a world in which any data can be stored securely in an encrypted way, while it remains possible to do anything with this data. A world where we can analyze, process and learn from information without ever having to expose it.
03:11:57.891 - 03:13:00.925, Speaker A: And so we are building the infrastructure and the technology to allow for this to happen in a trustless and efficient way. The way it works is that Archeum is a purely computational stateless network that runs entirely on encrypted data. And so we can have encrypted data that sits on Solana, that enters Archeum, and then within Archeum, this encrypted data can be securely processed. And the way we are able to process this data is through cryptography, more precisely, secure multiparty computation. And the way it works is that encrypted data is being seen securely split into data shares, and those data shares can then be processed in parallel within the Archeum network. And so once those computations have been finished, encrypted outputs can be produced and settled back on Solana. So Archeum becomes this autonomous asynchronous execution machine that allows for arbitrary computations to be executed on Solana.
03:13:00.925 - 03:14:14.535, Speaker A: One of the innovations we've designed is ARCS os, the first decentralized encrypted operating system that powers Archeum. And on top of ARCs OS, it's possible to deploy encrypted isolated environments, MXEs, MPC execution environments which allow for the arbitrary processing of encrypted data. We've also designed our custom Rust compiler that allows arbitrary Rust programs to be compiled into a format that Archeum understands and can securely process. And with this compiler combined with our frameworks, it becomes possible for developers to add confidentiality and security to their applications by simply deploying their apps in an encrypted environment. The most magical thing about our Architecture, I think, is our cryptographic security model. And where traditional distributed systems fail, if a majority of participants become compromised, Archaeom has security against a dishonest majority. So as long as there's one single participant that isn't maliciously collaborating, isn't compromised with all the others, Archeum can remain secure.
03:14:14.535 - 03:15:22.165, Speaker A: And this cryptographic security model, however, doesn't come at the cost of performance. And so with our breakthroughs in MPC protocols, malicious behavior identification and combined with GPU and hardware acceleration, we are 10,000 times so many orders of magnitude faster than fully homomorphic encryption when processing fully encrypted data. Now, what becomes possible with this system is to build fully confidential on chain applications and fully confidential off chain applications. Archeum is a purely computational network and so Archeum can be utilized to build confidential and efficient markets on Solana, imagine Solana Defi. But now fully encrypted and efficient at the same time. It's possible to facilitate very data intense applications. So to facilitate data aggregation or node authentication for deep end applications.
03:15:22.165 - 03:16:28.671, Speaker A: And most impressively I think on a technological level is that we are able to allow for collaborative and federated learning within Archium. So we've made significant breakthroughs. Floating point operations and real number arithmetic that allows for many parties to run collaborative machine learning and fully encrypted AI models without having to trust any single individual. So those are just a few of the use cases that become possible with the kind of confidential computing that we are building with Archeum. Archeum is this dedicated network that developers can use to add confidentiality and encryption to the applications. Thank you, thank you so much for joining us here on the Right Curve this morning. We've got a lot more programming coming up, but before that there will be a lunch break.
03:16:28.671 - 04:19:29.357, Speaker A: So enjoy your lunch and we continue here at 3:00pm thank you. It it it it it it it it it it it it it it it it it it it Education community. Today I will be your best friend for next two hours to introduce a fantastic lineup of the speakers who are going to be sharing all the nitty gritty details of their tech and inspire you. So we are going to start with our lucky first amazing speaker, Jerry Shao from LFC Labs. The new topic we're going to talk about is WTF is svm. So please welcome Jerry. Good afternoon everyone.
04:19:29.357 - 04:19:59.569, Speaker A: My name is Jerry and I'm one of the co founders at Ellis Labs. And today I'm going to be talking about the svm. There's been a lot of interest these days about what the SVM is and what you can do with the svm. And I'd like to sort of explain my take on it. A few months ago I made a tweet online describing what I think the FVM is and what the spec is. And throughout this presentation I'll be going over each act of that tweet. And there are like four major points that I made through that.
04:19:59.569 - 04:20:33.721, Speaker A: So SVM stands for Solana Virtual Machine. And what the Solana Virtual Machine is, is an interpreter for EBPF bytecode. And you can see here this is what I mentioned in the tweet. I don't think anyone knows what that means. So I will start from the top, which is a speed run of computer architecture, which is a course you might take and an inter course you might take in college. But a computer or CPU is literally just a machine that can execute simple instructions. These instructions include things like adding, multiply, subtracting and dividing numbers, keeping track of numbers and.
04:20:33.721 - 04:21:08.955, Speaker A: And so there are two ways you can do this. There are things called registers, which are essentially numbers that are really close by, and memory, which are numbers that are really far away. These instructions can jump to a previously executed instruction and they can also conditionally execute different instructions. The programs in the room are known as loops or if statements. And there are a few key takeaways from this. The first is that ball information, including the CPU instructions, can be represented with numbers. And as mentioned in the previous slide, all the instructions are acting on numbers.
04:21:08.955 - 04:21:44.875, Speaker A: These instructions are executed sequentially. So the CPU receives a list of different instructions and given the default behavior, it will just execute one after the other. But jumps and conditionals will have slightly different behavior. They will move the instruction pointer to a different place in that list. And lastly, a standard collection of CPU instructions is known as an instruction set architecture or isa. So what is ebpf? EBPF stands for Extended Berkeley Packet Filter. And it's essentially just the ISA for Solana.
04:21:44.875 - 04:22:16.685, Speaker A: And that effectively just means that every Solana program is a list of EBPF instructions, also known as bytecode. Here we see a diagram of how each instruction is organized. It's made of exactly eight bytes. The first byte is the opcode that corresponds to what the instruction actually does. The next byte contains indices for the registers source and destination. Again, a register is just a number that is closely accessible to the cpu. The last two things are the offset and em.
04:22:16.685 - 04:23:16.105, Speaker A: And these are just hard coded numbers that the CPU is able to use to perform some computation. And what is an interpreter, which is the Last part of that first point in the tweet. An interpreter or a virtual machine is essentially a way that you can execute or simulate this instruction set execution in software. And this is sufficient for basically any type of application you might want to build on a programmable platform like Solana. So you can use this to program tokens or NFTs or order books or AMMs. What it looks like is really not that complicated. You have a list of instructions, you go through them one at a time, you figure out what registers they use, and based off of the instruction, you decide whether you move your program counter or PC to the next instruction or somewhere else in that list of instructions, which you can kind of see in the pseudocode on the right hand side.
04:23:16.105 - 04:23:45.149, Speaker A: So that was the first point. It's an interpreter for EBVF code. The second thing that you need to have in an svm, or it's really the counterpart to the interpreter, is this transaction processing unit. And it's something I'll refer to as kick. There's an execution environment that follows something that's known as a Solana programming model. And those are essentially just a set of rules. I like to think of this as a type of a referee.
04:23:45.149 - 04:24:40.261, Speaker A: So the execution model is something that wraps around the underlying virtual machine and it essentially tells you, or tells this system whether the virtual machine is enacting a state change that is acceptable or one that is unacceptable. It also intakes a user transaction. So the user transaction will come through the execution environment. It will figure out how to build the vm. The VM is a black box that executes, and after execution, the execution environment will determine whether or not the VM performed an acceptable action or an action that needs to be denied because it violates some rules. And those roles are known as the programming model, which I think Solana developers in the audience will be somewhat familiar with. The program model is essentially the list of rules that are enforced by the execution environment.
04:24:40.261 - 04:25:28.655, Speaker A: And there are a couple examples I list here. For example, a very obvious one is that Lamports or SOL cannot be created in a transaction. The accounts can only be modified by the programs that own them. Users must declare all the accounts up front and then no RE entries allowed. And what that means is essentially if you have a program it calls other programs, it cannot be re invoked in that same execution call stack. And there are many more. The programming model isn't limited at these points, but I think the high level takeaway is that the execution model is essentially something that wraps something really generic which is the EBVF interpreter and the way that it's able to control the inputs and outputs of that interpreter are defined by this program model, which is essentially just a simple rule set.
04:25:28.655 - 04:26:28.075, Speaker A: So Act 3 is about the actual byte layout of the programs that are executed in the vm. So each program that is executed on Solana is given an input set of parameters that are serialized to the virtual address space that can be accessed by the interpreter. And this in my opinion, is the only true spec found in the svm. This is the only thing that is like enforced by the existing execution model, because the execution model is building the VM with a spec in mind. So on chain programs must specify this custom by layout because the execution environment is passing them those bytes in a particular format. The parameters of all programs are found at a particular address and just a hard coded address somewhere in the virtual address space. And what is found there contains all the inputs necessary for that program to run.
04:26:28.075 - 04:27:03.325, Speaker A: This includes the accounts that are needed to act. So this is like the state that the program requires in order to do execution as well as the inputs. So inputs can include the number of tokens that something needs to transfer or which instruction inside a program needs to be executed. All of this is represented inside these parameters that are serialized into the virtual memory. And yeah, so it's a pretty complicated spec. There's a lot of stuff on the screen here. I think the high level takeaway is there is a specific format for everything.
04:27:03.325 - 04:27:56.191, Speaker A: This is a very difficult or very complex documentation to read through, but essentially what it entails is how that address space is laid out. You need to specify the number of accounts, you need to, for each individual account there is a specific format. The byte layout is extremely well defined. And at the very end, after you've listed all of the accounts counts, you lay out what the instruction bytes are. Basically these are the specific inputs for the program to tell it what to do during execution. And lastly you have the program id, but this is by definition a spec, because this is what the execution environment does to populate the virtual address space prior to program execution. And if, if the BPF program does not respect this particular interface, the behavior will not be as expected.
04:27:56.191 - 04:28:54.241, Speaker A: And so you might ask, like, I think some of the people in the crowd might be SVM developers and they might not know about the spec. And the question is, why don't you know about it? Well, the reason is because it's hidden away from the developer behind this entry point macro or if you use anchor, there's this hashtag programmacro that abstracts away all this complexity, which I think is a good thing. The thing that I think is potentially less positive is that it's a relatively inflexible interface and it's really difficult to modify without breaking any backward compatibility. But all that being said, it is a legitimate spec that needs to be followed if you want to build some sort of SVM information that is compatible with existing programs on Solana. Fact 4 is about the JSON RPC. I think this is an optional piece of the spec, but I think it's a rather important one for practical reasons. This is essentially an API server that you can send post requests to and it will return data in a predefined format.
04:28:54.241 - 04:29:42.265, Speaker A: And this is a very standardized spec, which means that if you implement a JSON RPC server with the expected inputs and the expected output serialization format, any client code that can interact with the Solana JSON RPC can also interact with this custom JSRPC server. And here are just some examples. It's a very simple post request with a JSON format of what you want to do. This is a call to getaccountinfo and the format that's returned is standardized. And as long as you follow the schema for GetAccountInfo on any implementation of the JSON RPC server, everything should work fine in a given client. So I finished the tweet. There is one key point that I wanted to go back to.
04:29:42.265 - 04:30:33.575, Speaker A: The last line is that the only real spec will always be the wire format. This is something I truly believe, because no matter what the software implementation is doing, that doesn't really matter to the user or it doesn't really matter to the application developer. The thing that really matters to the application developer is you can build some input in some way, you send it to some black box and it comes back in the expected format. And what ALICE is doing is it's essentially following this wire format spec, and we believe that will lead to the proliferation of the svm. So what is alice? ALICE is the blockchain for verifiable finance. We view verifiable finance as combining the transparency of defense with the performance of traditional finance. It is a new implementation of the SVM specifically built for financial applications.
04:30:33.575 - 04:31:08.813, Speaker A: And I think there are some key properties here that make Atlas particularly suitable for those types of applications. There are 50 millisecond slot times. There is low latency, high throughput, and low jitter. These are all properties that are extremely desirable for any type of financial system or trading system. And lastly there are opinionated sequencing rules, which means that Atlas is able to prioritize certain types of behaviors based on what it's catered to. At Ellipsis Labs, we believe that infrastructure should be built with a purpose. Infrastructure should never be built for the sake of purely building infrastructure.
04:31:08.813 - 04:31:50.313, Speaker A: There should be some end obligation in mind. And an important thing that we left here at the end is that program execution and the JSON on RPC are backwards compatible with Solana, mainly that it respects the wire format of Solana. And the reason why we think this is valuable is that there's a whole array of tools and existing source code that knows how to interact with the Solana ecosystem. And Atlas should be able to utilize that blossoming ecosystem to build new and better applications. Atlas testnet is live today. You can sign up here. We have QR codes that point you to the Atlas website as well as the Atlas Twitter page.
04:31:50.313 - 04:32:37.617, Speaker A: We truly view Atlas as the next evolution of the svm. And I think this is very powerful tech. I think the SVM in particular is a very powerful programming paradigm. I hope for it to be the default for all future blockchain applications that continue to compete with the stronghold of traditional finance. Thank you so much. Next up, a product keynote from Anna Yuan from Perenna. Hi everyone, how's it going? I'm Anna, founder of Karena.
04:32:37.617 - 04:33:22.135, Speaker A: Super nice to be back at another breakpoint. Today I'm going to talk about infrastructure for money. Follow us on Crypto Twitter for more updates. So imagine if banks have to go sign on merchants one by one around the world. We would all be stuck in Singapore because we would have no food E and nowhere to go. The way Visa revolutionized payments is how I see stablecoins would be able to revolutionize the way money exists and moves. With over a dozen of stablecoins slotted to launch on Solana in the near future, the need for a unified, frictionless stablecoin layer becomes all the more apparent.
04:33:22.135 - 04:34:15.355, Speaker A: During my time as stablecoin lead at Solana Foundation, I saw a critical missing piece of our infrastructure. So if we don't do anything with many, many stable coins coming, we'll have fragmented growth. With Perenna, I aim to build scalable networks, so we're building systems that enable money movement and financial operations. How I see stablecoins is they're like digital dollars in your PayPal or Grab account, except with universal acceptance and whoever wants to accept it can do that. So it's a much better version of previous digital colors. Let me introduce you to our first product, Numerair Numerous is a bounded extensible multi asset stable swap with configurable equilibrium. That's a mouthful.
04:34:15.355 - 04:35:07.835, Speaker A: What that means when I say bounded is you don't need to actively manage liquidity. It's multi asset using the star model. Credit to our CTO Ben somewhere around here who spent nights and weekends writing this up to launch a breakpoint. It is also configurable equilibrium. So this is one of the first waves kind and we used a custom curve for Solana. So why this is super important is because instead of pairing stable coins for every single stable coin that's launching at the moment, you have to pair with at least half of the incumbent stablecoin on Solana, which is usdc. And now you're getting a bunch of distorted pools with fragmented superidle liquidity with Piranha, all liquidity is available to trade against all the other liquidity on the protocol.
04:35:07.835 - 04:36:03.073, Speaker A: Just like Visa, Perona lets you spend your assets anywhere that accepts its underlying. And instead of getting a Visa or a car from a bank, you can acquire or mint pereta stablecoins and use to pay trade or store value on chain. So the stablecoin landscape is evolving and we see two trends. The first trend is regulated stablecoins are going to change the way payments work in the next five to 10 years. Second, synthetic money, which is isolated and completely independent from the traditional financial system, will change the way money exists in the coming decades. We anticipate a proliferation of fiat stablecoins and synthetic dollars to coexist due to geography and regulatory regimes, each serving distinct purposes. And without infrastructure like Numerair, we risk fragmented growth where simple transactions become costly.
04:36:03.073 - 04:36:35.171, Speaker A: So this is what current fintechs look like. It's relatively isolated. We do not want to reinvent the wheel and end up in an isolated fragmented system again. Numerair is just the first step. We'll continue enhancing the product and next we'll support stablecoin issuer diversification and launch a trunched synthetic dollar with isolated risk profiles. Think of us as sanctum for stablecoins. We're not here to outcompete other stablecoins and be the only one out there.
04:36:35.171 - 04:37:28.894, Speaker A: We're here to empower different stablecoins with liquidity and utility. Having a unified single point of entry for projects to integrate stablecoins with will grow the pie together. Our long term vision is to create entirely new forms of money from diverse assets. To merge money's two purposes of store value and medium of exchange, and to challenge the very definition of money by decoupling the unit of measure from the point of trust. A decentralized organization at its core. I put quotation marks on hiring because we're not really hiring for traditional employees. Like a company, we're collaborating with many defi projects and payment projects to create a monetary stack with liquid underlying rails for borderless Money movement.
04:37:28.894 - 04:38:11.915, Speaker A: So we're looking for coders, philosophers and artists who are passionate about this cause. You can join us on Drip House, Crypto, Twitter or Telegram, and I look forward to welcoming you all to our community. Please let me know if you're interested in contributing. Come find me afterwards. Thank you all. Thank you Anna. Next up, a product keynote from Marco Marus of Bridge hi Marco here from Bridge.
04:38:11.915 - 04:39:38.794, Speaker A: Bridge is an API platform for payments using stablecoins. Stablecoin Orchestration enables developers to easily go from the US dollar or Euro into any stablecoin and back from a stablecoin back to Fiat. So Euro to USDC or converting USDT to USD or USDT on Tron to USDC on Solana. And from the perspective of payments, this year in B2B we'll see over $4 trillion of cross border money movement go on chain. From the consumer perspective across the Global south there are tens of millions of users choosing to receive their earnings and to manage their savings on chain in various different stablecoin based wallets. Today we're announcing not just the ability to earn and save and manage in stablecoins, but also to be able to spend via a card that spends directly from that stablecoin balance everywhere that cards are accepted, which enables an everyday real world use case for stablecoins. We're making this announcement together in collaboration with the Squads Labs team who you'll hear from in a little bit right here.
04:39:38.794 - 04:40:59.429, Speaker A: But meanwhile I get to showcase a little bit of the user experience so users on the Fuse Wallet will be able to do it natively within the Wall Wallet create a card account. They'll go through a very simple terms of service and KYC process and it's worth noting that in this experience this is a self custody card product. Users will maintain control over their assets. This is enabled via a card balance that is delegated from the Fuse Wallet main account and controlled via some daily spend limits all enabled via the SQUATS Protocol Smart account. From there it's a beautiful modern day card experience where users will be able to see their number, set a daily spending limit, see recent transactions and manage the whole history of card spend all natively within the app and of course the card will be usable over Apple Pay. So this is a card that works on in person card, present transactions and ecommerce just like any other card. If this is interesting to you, and I hope it is, check out the Fuse Wallet and you can reach out to us anytime for any questions at SalesRidge XYZ.
04:40:59.429 - 04:41:37.645, Speaker A: And we'll be around here. So looking forward to chatting with you. Thank you. Enjoying the talks everyone. So we're gonna have another amazing talk lineup coming soon. It's from Batas Lipiski of you gonna be introducing to you the word of Cube or the technical aspect of it. So please welcome Batosh.
04:41:37.645 - 04:43:04.915, Speaker A: Hi everyone. So most of you know Cube as a hybrid exchange, but it's not just an exchange. What we built over the last year is actually much more. We started with a decentralized NPC and we built a custody layer that allowed users to settle to multiple, multiple chains. Solana, Bitcoin, Ethereum and others. On top of that we deployed one of first Solana forks that's running multiple validators and we are calling it a guardian network that is used for a settlement layer and that's what's used to settle the traits and net them them across multiple layer ones. On top of all of this, we are running a matching engine that we built that's high performant with crossbook liquidity.
04:43:04.915 - 04:44:42.715, Speaker A: But I'm not here to talk about an exchange that we built. What I wanted to talk about is actually the next part of our journey which started actually with intents. So when we started building Cube we wanted everything to be an intent. So every single order that we submitted over the last year on Cube, what's an intent and what is an intent is basically a signed object that you submit to a layer one that we are running that then executes through our network and then settles to layer 1s. And what's happening is we can then execute multiple complex strategies through that network. But what we want to do next is actually open that network and we are going to call it isometric and it's going to be an intent network and everyone will be able to submit intents to network and use it to verify settlements on multiple chains. It will have two tiered validator consensus.
04:44:42.715 - 04:46:28.405, Speaker A: It will be using the centralized NPC that we built and through the decentralized MPC integration layer that we built, you will be able to actually use the value on those different layer ones without cannibalizing it. Which is pretty interesting because most people, when they build layer 2s or additional chains, what's happening is they are cannibalizing the value of those chains and we want to avoid that. So how we are going to do this, we introduced this component called a composer that is going to take the intents from the user and route them through SPM on Solana and then push them to the mpc. And then for the same layer that cube is using right now, you will be able to execute the intents on the layer 1s so effectively you will be able through the apps that you will be able to publish and execute and interact with all the chains that Kube Exchange right now is integrating. Right now we support more than 10 different exchanges and through that network we executed more than 5 billion of volume. So now imagine you will be able to build apps on top of that and interact with that network directly. And how is it going to happen for our intent execution engine? And we built a couple of different things that actually prove that concept.
04:46:28.405 - 04:47:22.073, Speaker A: So when we started building an Exchange we wanted to make sure that that network is actually fairly robust. So other than starting with just the network and then proving that concept later, we actually wanted to be the client of what we are going to build. So recently we built this thing called implied order books. And that's what this diagram is showing here. And it's very complex crossbook arbitrage and order routing strategy that executes across multiple chains. You can use it right now yourself on the Exchange, but it's just an example of what you will be able to build on top of the network. So what we are doing there is calculating on chain an implied calculation across multiple order books that are running for example in this case on Bitcoin and Ethereum and allowing you to route orders through two different networks.
04:47:22.073 - 04:48:30.955, Speaker A: And then we find that complex user intense and settling across three different chains. So how does on top of that what will be happening is we'll be pushing intent verification. So when users join that network they will be able to use non custodial wallets, OpenID with zero knowledge proofs and passkeys to submit their intents that will be going through the composition layer, through the verification and the reification of our network. And the MPC integration layer will be pushing all of that to different layer ones. And the MPC integration layer was built in a very interesting way because what we wanted to avoid there is building custom smart contracts and bridges that introduce additional risk of security. And the last part of that network is two tiered proof stake system with MPC that we are adding. That one is pretty interesting.
04:48:30.955 - 04:49:07.645, Speaker A: So what will Be right now the network operates with just guardians and what's happening there is the guardians are head selected right now. We select them for a couple based on a couple of categories. They need to use high availability strategies where they are running their hardware. They need to be fairly security focused. We are selecting them from well known Solana validators right now. They need to become trusted and performance driven. But what we want to do is make sure that in the future anyone will be able to become the Guardian.
04:49:07.645 - 04:49:58.873, Speaker A: And there will be a couple of ways to do that. You will need to comply with all those different things that you will be able to perform like staking in order to become the guardian. And the rest of the validators will be able to vote on you to become a guardian of the smaller set. And then the validators of the normal chain that will be running will be just acting as light clients that are fully permissionless and everyone will be able to join. Those will be just like normal validators that we see on the Solana network that are community driven participants that earn validating and securing the network. The backbone of that network will be what you would expect which is will be launching the new token which is called ISO. What you will be able to do with it is you will be staking.
04:49:58.873 - 04:51:08.015, Speaker A: The staking will be key component of like becoming the guardian that I mentioned before. It will be used for the governance and also the ability to change how we are building the MPC and all the code. So all the code that cube is running right now will be open sourcing it and you will be able to participate in the development of it when all of it will be happening. So Q1 and towards the end of this year we'll be opening the Guardian network to the new participants. So if you're a current validator of Solana or other chains, come talk with me after this talk and happy to figure out how you can actually start joining the testnet before the token launches. Then we'll be launching pretty soon after that the token and the Mainnet and after that the actual network will give moving to the Ford Foundationless model where people will be able to actually build the apps just like Duke. Thank you everyone.
04:51:08.015 - 04:52:07.555, Speaker A: Thank you. Next up we have a product keynote from Tristan Fisa of Zeta Markets. Hey everyone, welcome to Breakpoint. So I'm Tristan, I'm one of the co founders of Zeta Markets and I'm here to talk to you today about Zeta X which is our vision for the ultimate purps trading platform. And I'm also going to be Talking about a lot of the leaps and bounds that we're making on the infant infrastructure side to get Solana defi to real time scaling. So what's happened in the last year since Breakpoint in Amsterdam has been a lot happening. So Solana has really found a niche for itself as the layer for fast, cheap and scalable applications.
04:52:07.555 - 04:52:29.013, Speaker A: We've seen this reflected in the TVL growth over 10x from 300 million to $4.6 billion. Likewise on derivatives volume, that's gone up over 20x as well. Super impressive. And on the Zeta side, over the last year we've processed over $12 billion in volume across 150,000 users. So no small feat there. However, there's a lot more to go.
04:52:29.013 - 04:53:00.415, Speaker A: What's holding us back and how do we get the next 10x? So price discovery is still unfortunately happening on centralized exchanges. Also, congestion on the L1 tends to hurt reliability. For a lot of applications like ourselves, rising priority fees lead to higher costs. And when we at Zeta are doing a single digit percentage of Solana block space, this is like a consideration for us. Furthermore, UX is still, you know, lagging web two, it could get a lot better. And we're still the third chain by derivatives volume, so we're not the number one. We're only at 10% market share.
04:53:00.415 - 04:53:41.305, Speaker A: We got a lot more to go. And so where does Zeta X fit into this? We want to build an exchange with the performance of a centralized exchange, but with the security of a decentralized exchange. So really give these guys a run for their money on Solana. What are some of the features of our exchange? Essentially, we're still sticking with the central limit order book model, except we're making it 100 times faster than what we already have. And in that kind of model, we think clubs are the best. They give you great price efficiency and they don't have the impermanent loss and slippage that you see on amms. Furthermore, making some pretty big improvements on the latency side, as you can see, we've taken it down from 400 milliseconds that you used to on Solana down to 5 milliseconds of confirmation.
04:53:41.305 - 04:54:25.479, Speaker A: So that's actually even faster than some centralized exchanges. So very impressive there. On the user experience side, we can abstract away gas fees now as well as provide a much better wallet UX so social login passkeys, all these things that make it delightful for users. On the congestion side, we found a solution on our architecture to minimize congestion and I'm going to get to that in the next slide and on the security side it's defi. So of course we want to be self custodial and any off chain audible computation that we do is going to be ZK proven with those proofs posted down and able to be verified on the L1. So this sounds like magic. How is this possible? What have we done to make this work? And that's where I want to introduce Bullet, which is going to be Solana's first real time L2.
04:54:25.479 - 04:55:08.725, Speaker A: We've been building this for roughly the last six months with the effect of trying to extend Solana to ultra low latency use cases. So what does it look like? We have Solana L1 for settlement and data availability and then we've built essentially this L2 stack here. So we have these chain level enshrined perps, lending and spot primitives. This all sits under the kind of Zeta X umbrella as our defi super app. And this all runs in a zero knowledge virtual machine. On top of that we're going to have this permissionless application layout. So anyone building in the SVM space, building smart contracts will be able to build say a vault, an algo stablecoin and tap into those perps and lending liquidity that we have.
04:55:08.725 - 04:55:47.437, Speaker A: And we know everyone complains about L2s and how they have fragmentation and it's a pain to bridge, but because Solana is so fast inherently itself, we think we can get a really good bridging experience here. So 30 seconds in because of finality and then 30 minutes out, hopefully with a bit of ZK magic in there. So it hopefully won't feel like you're actually bridging to the L2 too much. And so enough talk, let's get into a demo and show you what there is to see there. So jumping into it here, we're going to see the UI that you know and love on Zeta. So you can bring your own Solana wall or you can do kind of social login here. So here we're going to log in with Twitter, no cross phrases needed, which is amazing.
04:55:47.437 - 04:56:06.173, Speaker A: We're going to do. Once we've bridged in, we can actually deposit our funds into the margin account. So we're going to put 1000 USDC in there. No kind of wallet confirmation that you need to do. It just goes straight through like a Web2 app. We're going to go trade through here, place a trade and boom, straight away, instantly filled. It feels like Binance at the end of the day.
04:56:06.173 - 04:56:34.907, Speaker A: And you can see the audible also updating every 50 milliseconds or so, which is much, much faster than what you've seen on the L1. So yeah, where does this leave us? We've got TestNet coming in Q4 of this year. It's actually probably going to be early Q4. We're shipping super hard and so we're going to do a closed beta for that. So if you're a Zepp staker, we're going to give you early access. We want to get you kind of power users on board as well as if you're a veteran market maker or trader. We want to work with you to dogfood the product.
04:56:34.907 - 04:57:03.025, Speaker A: So you can check out the link here and register your interest there for the closed beta projectbullet xyz or you can visit the QR code there. It's going to have all our socials where we're going to be posting a lot more messages and updates to keep across. And if you're around on Sunday as well, we're hosting a Trader drinks so feel free to come by that. That's all I got for you today. Let's make defi grain again. Exciting. Thank you Tristan.
04:57:03.025 - 04:58:06.845, Speaker A: Next up, our product came out from Shane Malidor of Forged. Forged is a free to use software platform for blockchain builders to execute on all essential pre TGE and post TGE activities. So as a blockchain builder, you can use the platform for things like designing tokenomics, engaging market makers, managing your cap table tracking, token unlocks, monitoring liquidity and so much more. So when it comes to launching a token, I think that we can all agree that crypto has no shortage of thought leaders and experts. They like to lecture us on things that we should and shouldn't do. They do this in the form of long form tweets, publish blog posts, things like avoid low float, high FDV, don't get screwed by your market makers. 5 tips for a Successful Fundraise the list goes on.
04:58:06.845 - 04:58:42.705, Speaker A: Some of this advice is valid, but it's all about execution. Talk is cheap. So amidst all of the noise, who do you trust? Is it the one off advisor with 40 projects on their LinkedIn profile? I think not. I think that as long as you're equipped with the proper tools and data, you can actually operate as the subject matter expert. And that's where Forge can help. We help support all essential pre TGE and post TGE activities. We are free to use and most of the tools are do it yourself.
04:58:42.705 - 04:59:16.159, Speaker A: So let's check out some of what we have to offer starting With Token Designer, this is an end to end software toolkit for all things tokenomics related. So if we zoom out, tokenomics are really just a fancy phrase that describes how value is shared and distributed within a decentralized ecosystem. It's just a matter of supply and demand. So we offer you software to build that supply and demand out seamlessly. Starting with the supply, it's your pie chart. It starts with who's going to receive tokens and at what rate they are going to receive those tokens. Then we move on to the demand drivers.
04:59:16.159 - 05:00:00.641, Speaker A: This is an exercise in modeling out who's going to buy and hold your token. We allow you access to software that will help you quantify estimations of demand based on your protocol's unique utilities and mechanisms. Where it gets really fun is we help you simulate post TGE performance based on these inputs. So if simulated post TGE performance sucks and your price is going down, only you can adjust the inputs and optimize for a more successful launch strategy. Once you've finalized your tokenomics, you can publish a whitepaper with just one click directly from the platform. Once you finalize the tokenomics, use us for engaging market makers. We have integrations with over 30 major market makers on our platform.
05:00:00.641 - 05:00:41.203, Speaker A: We have an automated RFQ process and we have software that allows you to seamlessly analyze the engagement proposals and make sure that you have a fair partnership. Next up, we have support for exchange listings. Historically this has been a black box within the ecosystem. We allow you access to tools to actually track historical performance on listings, get access to what listing fees are, and even assess formal due diligence process in order to get this done. Centralized venues and once you launch, your token forge transforms into a command station, giving you full transparency on all things token related. It starts out with monitoring your market maker. Now historically when you engage a market maker, you might get some transparency on trade activity.
05:00:41.203 - 05:01:20.039, Speaker A: Usually it's in the form of a static PDF, doesn't really provide much value. What we do is we integrate directly with your market makers. We consume data related to their trade activity and consolidate that data to a centralized dashboard. You can use this dashboard for tracking things like does your market maker represent a meaningful percentage of global liquidity and volume? What do their loan utilization ratios look like? It's all about maximizing the engagement, getting the most bang for your buck. Finally, we can take a look at token unlock monitoring. This is where you track inflation, monitor sell pressure, see correlation between them. I don't know about you guys, but in my opinion price is sort of like the ultimate in crypto ux.
05:01:20.039 - 05:01:59.345, Speaker A: If your price goes down only or community hates you, they're going to tell you you have busted fundamentals. If price goes up and to the right, everyone loves you. They believe that your token utility is amazing. So if you're seeking to optimize for price performance, you need to track inflation and counteract that inflation with demand drivers. This is a tool for doing just that. What's more, as we overlay historical unlocks with price performance, so you can see the correlation between the two of them and prepare for future unlocks that may be potentially bullish to your community. So zooming back out, if you are set to launch a token at some point in the future, there is a ton of noise in the ecosystem.
05:01:59.345 - 05:02:57.523, Speaker A: Equipped with the proper tools and data, you can operate as the subject matter expert. And that's where Forge can help. We are free to use for blockchain builders within the Solana ecosystem so that you can forge your own path. Thanks so much everyone. You can create a free account today or reach out to me if you're a service provider or a market maker and you're looking to get integrated with the platform. Thank you, Shane. Now we're gonna have amazing next talk, a product keynote from Imran Khan of Alliance dimrain.
05:02:57.523 - 05:03:51.591, Speaker A: How's everyone doing? All right. So over the past four years of building alliance, what we've realized is the fact that founders need two key areas of focus. One is be relentless on their vision, but two, also be flexible as they're building their startups. Paul Graham once famously said, building a startup is a lot like building a rocket ship in parallel to writing it. The key is to stay closer to users iterate, be stubborn on your vision, but also be flexible on your details. So I know I have five minutes, but I want to give you 20 key lessons that I've learned building a startup, and also alongside that, building startups with founders like Tensor Pump and many others. As you know, TWA alliance has been around for about five years now.
05:03:51.591 - 05:04:24.325, Speaker A: Here are some of the startups that we've incubated. We've had about 150 startups that have came through our accelerator program and about $11 billion in valuations. And so what I want to spend the next four minutes on is talk about the 20 lessons that I've learned and many of our founders have learned. And if I could, and if you could take away one lesson out of this whole presentation, I've done my job. The first is always start with a small problem. Don't Go after that. You know, VCs always will tell you, go after the biggest market ever.
05:04:24.325 - 05:04:46.845, Speaker A: You know, give me the total addressable market, blah, blah. Usually that's wrong. And the right answer is go after a small group of users. And two is either look for science based. That's new. I mean crypto. We're lucky enough that we have many areas of places to experiment.
05:04:46.845 - 05:05:07.131, Speaker A: And so those are two things I want to leave you with there. Go after. Avoid consensus ideas. A perfect example of this is prediction markets. We've had like, I don't know, 50, 60 prediction market pitches and we continuously hear that over and over again. Avoid it. Find something that no one's looking at.
05:05:07.131 - 05:05:38.965, Speaker A: It gives you time to build on it, experiment and then once you're ready, the market will come carry you the rest of the way. Build for a small group of users. Find maybe 25, 50 users. I'll talk a bit more about that within 30 days. If you have 30 days, you build an MVP, a small etiquette concept to help validate your thesis. So let's say you have an idea that you want to go build after and you want to validate it. Build an MVP first and push yourself to launch within 30 days.
05:05:38.965 - 05:06:18.337, Speaker A: Do things that don't scale. So an example of this is we have a startup that we're incubating today called the Live Bet, which is a live streaming tips prediction market bounties app. And what we did here was instead of resolving using Puma protocol or whatever, whatever the team themselves are resolving in house, don't overbuild. Use the tools that you have necessary and just be as bare bones as possible. But launch quickly. Recruit your users one by one, you know, famously. And the best example I can give you is the Tensor team.
05:06:18.337 - 05:06:57.861, Speaker A: When they first came out with their kind of bare bones MVP, they recruited 50 people in their talk chat just to validate the product, ask for feedback and continue to iterate. And if it turns out that the feedback is wrong, that's something that you as a founder will have to decipher. And this is what I meant by that. So don't take feedback literally. Use your intuition as to where you think the product is going to go and try to build the product based on where the puck is going. Get to consistency. Get 50 to 100 daily active users that are so on the chart you'd want to see kind of like a bounce.
05:06:57.861 - 05:07:39.675, Speaker A: That means that you're building something and people actually like it. And then from there, once you have some sort of steadiness in Dallas and you see it kind of like an upward trajectory. Then what you want to do is start to kind of think about what your business model is going to look like. Drill down on your metrics and figure out what is causing the growth. Look at organic usage, look at how referral systems work and how users are actually coming and discovering the app itself. Do people love the product? And if they don't love the product and you're starting to see that you're stagnating within the daus, then you may have a leaky bucket. Be persistent.
05:07:39.675 - 05:08:20.705, Speaker A: I'm always going to tell the story Where Pump Fun DM 3000 people just to use a product which shows you the combination of relentless focus and focus on acquisition. Celebrate small wins. Building a product, especially the mvp, takes a lot of time. Work hard and be available all around the clock. And one more thing, I think remote work is that so if you aren't remote working, if you are remote working, I would say don't do it. And then finally protect your equity. Always raise small 500k to a mil once you get to like 50 to 100 users and then slowly grow from there.
05:08:20.705 - 05:08:35.315, Speaker A: Raising little will teach you to do more with less. Be frugal. Be frugal. Be frugal. Hire and stay lean. And stay lean as long as possible possible. Tensor famously had two.
05:08:35.315 - 05:19:05.795, Speaker A: It was just Ilya and Richard for a very long time. Thanks guys. Well everyone, I hope you are enjoying all amazing talks. So now we're going to have a short break to setting up the stage for the Fireside check coming soon. So please stay tuned and then we will see you very, very it it. So we have Yasir from Animaka Brands and Jason Law from OkX going to be discussing about what is token, what is the best institutional layer of your project once when you're launching the project, what it means and how it can make you succeed. So please welcome our two amazing speakers with.
05:19:05.795 - 05:19:32.721, Speaker A: Hello everyone. All right, good to see everyone. I'm Jason. I'm here with Yat Yat. You want to give a really brief introduction? We've got 15 minutes. Sure. My name is Yadam, Chairman co founder of Animoca Brands.
05:19:32.721 - 05:19:54.701, Speaker A: We're known as an investor in this space but we're actually a builder operator known for gaming. But we do everything and today we have over 540 portfolio companies. All right. And I'm chief innovation officer at OkX. We're an exchange, we're a wallet. We do a lot of stuff to support the ecosystem today here. Yeah, we're going to talk a little bit about the institutional layer and how that affects tokens.
05:19:54.701 - 05:20:19.141, Speaker A: What is the meaning of tokens, where we are at today? And hopefully we can help some of the token projects here take something back and show. I mean, so. So, I mean, I guess this is a crypto conference, but we're about to send you a survey. So how many of you here are actually planning to launch a token or have launched a token? Raise your hand. Yeah, okay, interesting. It's kind of like left hand versus right side. But anyway, it's a lot of viewers, maybe sort of 40% of the room.
05:20:19.141 - 05:21:02.849, Speaker A: And actually, I think this is basically, you know, when you launch a token, a lot of people think about it as a way of fundraising and all that kind of stuff. But actually, fundamentally our belief on tokens is that they are representations of network effects. So you can raise money on them if you want, but know that when you do so, you're actually selling a piece of your network. And when we describe it as a way from network effects, which is really the most valuable thing when you, for instance, join the Ethereum network or the Solana network. Sorry, I'm at the wrong conference. In this ecosystem, owning the tokens actually give you access to the network. The opportunities in the Solana ecosystem, and you're not actually in that ecosystem because you're expecting the foundation to build everything for you.
05:21:02.849 - 05:21:30.387, Speaker A: You're actually here because you've got exchanges like OKX participating, or you've got Builders, or you've got Star Atlas, or you've got all these other companies that are actually doing some stuff in the space. So actually the network effects inherent is why you're doing the ecosystem. The stronger the network effects are, the more valuable the ecosystem becomes. It's not the yield that you make from it, it's the network benefits that come from it. And so when. But what's happened, of course, is that these are representations of networks. Networks can be small as well, they don't all have to be big.
05:21:30.387 - 05:22:14.589, Speaker A: So we're a believer that there's going to be many, many, many networks. And I think this year, with, you know, pumpkin fun and a bunch of other ones, we've basically seen the advent of millions and millions of new tokens being launched, which on one hand you could say, oh my goodness, attention pollution, my project going to sort of stand out, or the other way to look at it is actually you can stand up more because if you have certain capabilities, you will stand out from essentially the massives. And my mental model of the meme coins that we see today is actually very much like chat rooms in the early days of the Internet or mobile apps in 2010, 2011. Right. You've got first a concentration of a few popular places and then next thing you know you have all sorts of chat, all sorts of places. What do they do? They're all about drawing your attention. Right.
05:22:14.589 - 05:22:59.127, Speaker A: And that's actually what tokens represent when you talk about network effects. They're actually ways in which you can measure the value of your network effect, which is essentially a form of an attention economy. And I think, you know, as we sort of delve deeper into this, the one thing I want to stop here with is that the institutional aspect heralded with Bitcoin ETFs now means that if you want to stand out, then actually you need to be able to demonstrate that your token actually is institutionally interesting. Interesting because an institution won't buy a meme coin, but they will potentially buy your project if they believe in about your value. Because to me pricing is actually the App Store. If your project has a reasonable pricing level, that's a discovery in the App Store. We're a mobile game developer.
05:22:59.127 - 05:23:20.689, Speaker A: In the early days we used to have something called the top grossing charts. And the top grossing charts was actually the way in which people found which apps were popular. Why? Because you saw from that measure the value of things. Apple didn't like that. Because Apple didn't like the fact that the applications that were actually most popular weren't necessarily the ones that they wanted to succeed. Right. So they took away the gross ranking charts.
05:23:20.689 - 05:23:50.019, Speaker A: But actually what they did was they removed essentially discovery. But in crypto, the discovery, the initial discovery. And so if you are projected as well, you get discovered that one of the projects that are the narratives are the ones that are institutional backing. Bitcoin, of course, Ethereum, Solana and Ton. Right. And actually now with Boca, we have a similar one in that era because institutions can back it, because they can understand it. And maybe the closing thought is that if you're able to pitch to institutions, that's how you stand out.
05:23:50.019 - 05:24:22.875, Speaker A: Institutions are only going to invest in things that understand that they basically can take a long term view on this one. So I think that's something that wasn't the case a year ago, but now basically is absolutely important. And at OkX we obviously work a lot with institutions globally. We did a survey with the Economist magazine, just came out earlier this month and it turns out that actually you wrote a piece recently too in Quintailgraph. That highlighted how few institutions have yet have already come into the market. It's no single digit percentage. Exactly.
05:24:22.875 - 05:25:20.439, Speaker A: They're all still on the sidelines. Our survey with the economists found that over the next three years, 60% of institutions are going to deploy capital into these markets. And so any advice for these projects as they talk to institutions, how do you get their interest in the first place? So I think the parallels are very similar to actually the markets at large, right? But accepted with tokens connected into one. So when you think about sort of a startup in the traditional pre token world or pre web3world, you build a startup, raise money from VCs and then actually what happens is that they develop it up to a point and then maybe you get to a point where the company might be able to go public. And so what we now have as a public narrative is actually a token launch and that actually accelerates much faster. So the entrepreneur that needs to be able to navigate a sort of product company now has to also manage a kind of public company, right? That's not necessarily one skill. So often you have founders who are building the company and when they go public, someone else comes in and runs this.
05:25:20.439 - 05:25:57.505, Speaker A: And basically when you launch a token, actually it happens pretty much sometimes even before the product launch. So there are some differences around how to do that. So that means it's not just a roadmap, it's basically whether you're able to sort of project your plan, explain your story. Obviously you have to be doxxed depending on what kind of project you're running, so all these things become relevant. But I think that's the opportunity because that's how you stand out. So the capability is to stand out because you're able to communicate to them. And by the way, institutions are not just all over the world, right? And because of Bitcoin ETFs, we now have reason why we think it's an opportunity.
05:25:57.505 - 05:26:41.045, Speaker A: It's also how people are in it. By Nehemiah, about 50 or 60 billion dollars in the Bitcoin ETFs. And so the next wave of them thinking, okay, great, I've got this sort of macro assets like buying gold, right? It's like an index to the whole space. But now I kind of want to sort of go into certain other narratives that I might understand better. Whatever project you have, whether it's deep end, whether it's gaming, whether it's entertainment, culture, identity, it doesn't really matter. There are actually investors in the space who actually really understand, understand those business segments. They're the ones that you can appeal to right? Now I would say the other thing also is that different flavors of VCs so I think, you know, OkX, we have obviously a early stage VC fund as well.
05:26:41.045 - 05:27:16.359, Speaker A: Right. But some groups like ourselves and others also have a liquid fund. So what that means is we actually also support and buy tokens on the market. That's not true for every vc. And I think, you know, I think it's worth sort of discussing a little bit the narratives around people saying, oh, VC backed projects are not good because they basically dump on retail. But it depends what kind of VC, just to be clear, right? Because some VCs and it's not because they're negative about it, it's because their mandate, they're running third party, they're running funds from third parties is not their money. So the mandate is essentially after three or five years they have to make a return, right? That's normal.
05:27:16.359 - 05:28:03.251, Speaker A: So are forced to sell a token. It's not that they want to, but then there are some institutions where they invest on a balance sheet or so they actually invest from the, you know, they can invest in liquid tokens. So that means that when you think about raising capital, depending how much you're raising, right, Whether which stage you're raising, you have to look at also say, well, do you have the capacity to be a liquid investor? Do you have a team that can do that? Or is your participation in your project going to sort of bring liquid funds into your company as well? Right. So there is this value add. And of course, from an attention standpoint, when you are a consumer, you want to also be able to see who has done the homework about the project. And you know, we always say, you know, dyor, right? Do your own research. But the problem is that when you have millions of tokens in the space, it gets harder and harder to be able to do that research.
05:28:03.251 - 05:28:50.871, Speaker A: And so you'll find more and more that these institutions, as they enter the space as we do either traditional markets, they will start posting their research and posting their publications and explaining why they have a thesis which will become more helpful. And that part is still lacking in web3. You only have a few research outlets, but you'll find that we're doing that more and more in Open Terra recently for instance, and other institutions like that. Speaking of, just to highlight your point about how many tokens are coming to market these days on our wallet, every week we mark and certify 120,000 new tokens so that you can search it in the search bar and make sure that you're finding the right one and things like that. It's crazy. It's an explosion. I mean Jupiter over on the other stage made an awesome announcement earlier that will continue to lead to these sort of explosion of tokens.
05:28:50.871 - 05:29:34.433, Speaker A: And so what you're saying is really good advice both for the projects themselves, but also the people that are looking to participate in these networks. Right, Correct. And I think also how do people actually find who are the liquid funds that are, which tokens are they supporting or participating in? Where do we get that information? I mean, I think, you know, there's groups like us, but there's many other investors out there. You can just simply ask a question. You can say, hey, okay, it's liquid for investing. By the way, can you help us make introductions to liquid funds or do you have a liquid strategy for instance? Right, so some, those are questions we didn't have to ask three years ago because remember three years ago when you were talking about gaming, there were really three or four projects to look at. You look at Metaverse, there are like two.
05:29:34.433 - 05:30:09.535, Speaker A: Right. So the concentration actually is only on these few projects. So it was easy, you know, now with millions, Yoga, just Data point, the Altcoin space, not just Bitcoin and Ethereum and Solana, the Altcoin space actually increased by almost $300 million from a year ago. But yet it feels like, oh my goodness, well if it's gone up so much, why are my tokens from a year ago not actually increasing in value the same way? And that's because you have this attention. You know, we're at 2,3 million more tokens right now and there's going to be 2,3 million probably in the next six months. Right. So again, the way to stand up is the institution.
05:30:09.535 - 05:30:46.575, Speaker A: And I guess the kind of investor you bring in who has institutional capability is relationships is also important. For instance, the institution will say, oh, okay, if this company was involved or this partner is involved or this VC is involved and there's a certain level of homework that was done, I'm willing to talk to them. And you can look at the partnerships. It's easy. Like who has this VC worked with in terms of funds and what announcements have they made? There's ways to do that. Of course there's not unlimited capacity. And by the way, just to be clear, I'm not saying that you must go to a VC because it's only if you want to make a stand up project that ends up being very large.
05:30:46.575 - 05:31:05.103, Speaker A: You probably need that support. But you know, the other thing I want to sort of comment is that, you know, not every token has to be a billion dollars to be successful. Right. I mean, I think we've gotten a little spoiled in the narratives of previous years where everything is like billion FTP or nothing. No, no, of course not. Or 100 million market cap is regulating. No, it's okay.
05:31:05.103 - 05:31:39.113, Speaker A: I mean, you know, the world is run by SMEs. They're run by businesses that are very, very successful running good projects that could be worth millions or tens of millions, and that's fine. And maybe they're not necessarily PC investable in the classic sense, but that's okay. Look at everything you experience in the real world, whether this is a restaurant or whether this is a business or an artisan or art, whatever, these are great businesses that are making decent money and don't have to necessarily be, you know, worth what people used to think they would be. Right. So it was like, I think that's part of that. I think the markets previously had kind of spoiled it because we want to bring more people in the space.
05:31:39.113 - 05:31:57.209, Speaker A: Right. Maybe another data point. 80% of the US equity market being the best equities market in the world, is institutional. And that's the reason why it's stable. Many of the markets that are, which I won't name, that are very retail driven and are not actually very institutional, are very, very volatile. Some relationships. Right.
05:31:57.209 - 05:32:22.621, Speaker A: And I think basically what you'll find is that institutions enter the space, you end up finding basically more of a balance. And maybe another counter argument, institutions come in, are they actually going to. Is it against the ethos? Are we going to sort of worry about sort of, you know, becoming more centralized because Bitcoin is owned by the ETFs. Whatever. Well, let's be clear. I think the number of Bitcoin that's owned is still less than 7 or 8% in ETFs. Right? That's okay.
05:32:22.621 - 05:33:00.315, Speaker A: We're not actually saying it should go to 80%, but if it goes to roughly parity between basically consumer broader market and basically institution, that actually creates essentially a better balance. Because mass adoption isn't just about bringing users in, it is about bringing the institution in. If it wasn't for the institutional adoption, we wouldn't have the market we have right now. I mean, also institutions represent people too. Right? And I think we often forget that it's collective business interests of a group of people that are behind these institutions. So it's not like it's some Alien thing that's coming. Right.
05:33:00.315 - 05:33:30.239, Speaker A: They're also humans and they also have economic interests. And I think it is part of the maturation of our space. No doubt. We've been talking increasingly with a large number of institutions as they come into the space and they want access. Right. They start with, what we're seeing is this bifurcation of the market. You've highlighted Bitcoin, Eth, Solana, others where there are tried five products where they can now touch the space, but yet inevitably they will want to explore down the risk curve.
05:33:30.239 - 05:33:52.233, Speaker A: And that inevitably means looking at smaller networks and up and coming token projects. And we're hopeful that we can provide some of that education and that bridge. But also token projects themselves, like you said, have work to do too. Right. I think they need to be ready to manage and handle these institutions. Right. But I think again, when you're a builder, think about the other narratives that are going around.
05:33:52.233 - 05:34:24.525, Speaker A: There's a big narrative as well that's been floating around, sort of, you know, basically high FTV type of conversations around that. And you know, it's not to say that there aren't arguments around that, but if you have a fundamental project that is valuable, for instance, has nothing to do with. With the valuation, it has everything to do with community, the support for that. Right. There's plenty of projects that have value as well, that are high, that we've backed as well, that actually when they launch, do very well. Because there's fundamental support, whether it's institutional or from the consumer level. Because it's utility, for instance.
05:34:24.525 - 05:34:37.379, Speaker A: I think there is that aspect as well. So it's all relative, of course, but we can sort of create. I guess what bothers me a little bit is this broad brushstrokes. It's like. Or because everything has to be low value. No, of course not. Right.
05:34:37.379 - 05:35:00.459, Speaker A: Because maybe it's not fair as well. If you're a builder in the space, you want to get the fair value for what you're building that could be high or low. It doesn't matter what the value is, but you need to do what's fair for the project. Because after all, your community, who is there, or building something that's the one you're building, you're not necessarily giving it to someone else. Only the participation is projects that you bring in. If you're a game, you want to reward the gamers that build network effects. Right.
05:35:00.459 - 05:35:21.979, Speaker A: They spend the time, they're the ones who should be maybe receiving more value relative to late numbers. We get that. But that's basically how the game needs to be played to build a network. And I go back to the network effect. You have to build valuable network effects and if you don't, if you don't do that, then you basically create these kind of extractive networks where you know you can't create sustainable network. Network value. Right.
05:35:21.979 - 05:35:54.533, Speaker A: That sustainability is super influenced. Thank you Yad. Thanks for your insights. Thank you. Thank you Yad and Jensen sharing amazing insight how institutional players can support your token launch and even beyond the mass adoption and the success of your project. What amazing. So now next we're going to have a round of product keynote coming up.
05:35:54.533 - 05:36:26.607, Speaker A: As ever, the next one we're going to have amazing talk from Tenerfield of Codewallet featuring a live demo as well. So we're just getting ready. So please stay tuned for the demo coming up. Just giving a little note. So watch when you have a break. There's a lot of different booths with a lot of fun things. Gamers Village also you can look around all the buffets to play around and also see all the tech getting introduced to you.
05:36:26.607 - 05:37:27.819, Speaker A: So are we ready everyone? So please welcome Kenner Phil from the the promise of the Internet has been that anyone can build a community online. The challenge is one there's a lot of noise. There's a screenshot of my incoming DMs. You can see it's mostly spammers and scammers. Probably look similar for a lot of you. Now there are a ton of awesome people I've met through DMs, but it's very hard to filter. The other challenge is if you're a creator and you want to monetize, the options available to you are both extractive and inauthentic.
05:37:27.819 - 05:38:28.807, Speaker A: On one hand you can monetize indirectly through apps, but the platforms set very high minimums for clicks and impressions and that often drives perverse incentives on the type of content that actually generates revenue or you do product placements for things that you and your audience probably don't care that much about. So the opportunity we see is to empower online creators to build authentic communities with a global two way payments platform. Now on the left you'll see here a tip card. This is a new feature that we just launched and it's very simple. You can connect your X account to code and generate this custom tip card and you can share that tip card across anywhere that you're creating content, whether it's on Twitter, at the end of a thread, at the end of a video, on a live stream, put it in your bio. And already we're seeing creators all around the world both grow their communities and reward their communities. Now, this is a tip card from a guy, SMS or his name is Sean.
05:38:28.807 - 05:39:11.603, Speaker A: Now, Sean is awesome. He is the first person in his family to go to college. He works in H vac full time, but he does content on evenings and weekends and his goal is to buy his mom a house. And for two years he's been grinding away building this audience, but has yet to make money. Now, he set up his tip card just a couple of weeks ago and he's been sharing that at the end of videos that he's making, put it in his bio. He does Twitter spaces, gives a shout out there, and already he's earning a few hundred bucks here, a couple hundred bucks there. And beyond the monetization, what's been really powerful is that Sean has now been in a position to go deeper with his true fans and he's been able to start rewarding them.
05:39:11.603 - 05:40:07.729, Speaker A: So he's already seen opportunities where people that are helping, they're giving feedback on content, reposting, jumping up on stage during a Twitter space. He can then distribute some of the tips that he's getting and then it starts to go deeper and compound and build a network around that. And we've seen many other examples like this, but it is more fun to show than tell. So I'm going to do a live demo here and if we can flip over to my laptop. So got a tweet lined up here. I'm going to take a selfie just to make that a little bit more engaging. I'm going to use that, but then I'm going to flip over to code and I'll grab my tip card here and I can pop that into the tweet and there we go.
05:40:07.729 - 05:40:46.833, Speaker A: And let's see if I get. Maybe we'll get some tips. We'll see. So, I mean, it's as simple as that. The cool thing about tip cards is you can, it's portable and you can share this on any content platform and we'll start seeing if we get some tips. But the cool thing is we've already seen this be engaging for content creators and it's allowed people to go deeper with their communities. And this is still quite simple for now, but there will be more features that we start layering on top of tip cards.
05:40:46.833 - 05:42:01.835, Speaker A: So the best way to get access to that, and I've got a download link here, the best way to get access to that would be to set up your own Tip card, you'll get first access to any of the new features that we start rolling out on top of this platform. And you can do that by scan in this QR code, download code, set up your tip card and you'll be one of the first to get to experience some of these new layers and the opportunity to build authentic communities online. Thank you. Thank you, Tanner. Next up, a product peanut from Jess Hogwright of Re Own. Hi everybody, my name is Jess Holgrave. I am the CEO now of reown, which many of you might not be aware, until Tuesday was actually called Wallet Connect.
05:42:01.835 - 05:42:53.103, Speaker A: Wallet Connect has been a project that's been around since 2018. It was designed as a protocol to connect any app with any wallet within Web3, such that users can take all sorts of actions when they're doing things. So we've worked now for the last seven years to make over 150 million connections between apps and wallets, providing over 24 million unique wallet addresses with the ability to connect into applications. And it's been a wild, wild journey until this Tuesday, at which point we announced a new chapter for Wallet Connect. So what does that mean? Firstly, we announced that we are decentralizing the network. We've added the first third party node operators to the ecosystem and are in the process of setting up. We've set up the Wallet Connect Foundation.
05:42:53.103 - 05:43:39.923, Speaker A: The founder of WalletConnect, Pedro, is moving over to the foundation and perhaps most excitingly, we announced the launch of the WalletConnect token, which is going to be the token that governs and is the fee paying system for the WalletConnect economy. So in line with all of those changes, on Tuesday we also announced our new brand, reown, which is the brand and the company that is going to leverage the WalletConnect network to build better toolkits for developers. So that's what I'm going to talk to you about today, especially with respect to the Solana ecosystem. We own. Our vision here is that UX should be usable. The new Internet, the Internet of ownership, the Internet of crypto is what we're all here to build. But today it's really hard to use.
05:43:39.923 - 05:44:25.033, Speaker A: People have to deal with complex wallet systems, complex ways of interacting with apps, and we're here to make on chain usable for people. Riona is going to take over the two core toolkits that we've already built at Wallet Connect. So we've got AppKit, which is our toolkit for app developers, and WalletKit, which is our toolkit for wallet developers. Each of these at their core contains things that enable apps and wallets to communicate through the Wallet Connect network. Many of you will be familiar with that. You might have logged into a web app using a mobile wallet. You've scanned that QR code with the Wallet Connect symbol and we're providing, providing that connection to you.
05:44:25.033 - 05:45:07.771, Speaker A: And these are the things that are at the core of the new products, AppKit and WalletKit. But AppKit in and of itself is more than that. And that's why this is now part of reown and not just walletconnect. AppKit is a full stack developer toolkit for anybody building applications. And as I said, at the core it contains the WalletConnect modal, allowing any wallet to log into an application, but it also contains more than that. So we've now got email embedded wallets and the ability to log in with social accounts and create wallets for the new user that's coming to your application. We've got swaps and on ramps.
05:45:07.771 - 05:45:56.031, Speaker A: So a new user comes to your app, they create an email wallet and they can load and swap into any token that they want to. And I think what's most exciting and why I'm here today particularly, is to announce that this is now live and fully functional in Solana. So I'm really excited to share that we've got some really amazing partners who are launching with us. We've been working with Drift, with Jupiter, with several others to bring this as a full stack toolkit to the Solana development community. Here you can see those email wallets in action. And our goal is to make A, the developer experience delightful. You can download and get all of these features in a single SDK and B, to make your user journey better.
05:45:56.031 - 05:46:42.175, Speaker A: I think for too long in Web three, we have had too low a bar. We've expected users to go through pain in order to use our applications. And we're now reaching the point where I think every single one of you as an app developer really cares about creating a delightful experience for your end user, about giving them the ability to log into your application and use the features that you care about. You are not there to solve the user experience. That's what we want to help you with. You're there to create a delightful end user experience. And I think that by bringing you these tools, we're hopefully going to see it much, much easier for end users to connect, but to do more than that too, and to really benefit from all of your applications.
05:46:42.175 - 05:47:12.985, Speaker A: So please download, contact us, give us feedback. These are now available live. You can visit reown.com to access the new SDKs for Solana and we look forward to working with you going forward. Thank you. Thank you, Jess. So next up, a product keynote from Stepan Simkin of Scott Labs.
05:47:12.985 - 05:48:07.285, Speaker A: Hello everyone, my name is Stepan. I'm the Co Founder and CEO at Squad Labs. At Squat Labs, our mission is to grow the on chain economy. To achieve this, we focus on three main verticals. The first one is SquadsProtocol, the smart account standard for Solana and SVM, securing over 10 billion in value today. Second is Squads App, an enterprise platform for businesses to run their operations on chain trusted by over 250 enterprises today. And third, Fuse, a consumer smart wallet that unlocks enterprise level security for personal custody and is powered by two FA spending limits, recovery and native integrations for swaps, staking and stablecoin yield.
05:48:07.285 - 05:48:56.705, Speaker A: Today I'm thrilled to share with you some of the major developments within the Squad ecosystem. First, we have officially started development on SWAT Protocol V5 in 2025. A Solana runtime feature activation will increase CPI elements to match those of top level transactions. That will allow smart accounts to emerge as first class citizens, paving the way for broader adoption of account abstraction across the Solana ecosystem. In anticipation of this, we're designing V5 to fully empower developers building wallets, defi applications and payment solutions and looking for seamless onboarding, robust security and greater user experience for their customers. So what's new in V5? First is hooks. Hooks are separate programs that enable to programmatically tighten or loosen consensus.
05:48:56.705 - 05:50:11.285, Speaker A: They will allow developers to set granular spending limits or higher approval requirements based on transactions type or introduce program byte lists that allow to bypass smart account consensus when interacting with a specific program. Second major development is synchronous transaction execution. We are expanding functionality for single player use cases of SWAT's protocol and allowing execution of transactions in real time through multiple synchronous top level signatures that will enable more seamless multi factor authentication workflows for individuals and will cut down on overall transaction overhead. Third is new permissions and key tier adaptive time logs. Developers with Squad Protocol V5 will be able to grant superpowers to certain keys on smart accounts and combined with key tier adaptive timelogs they will reach this optimal balance of usability, security and recoverability. And finally, performance and memory improvements from a custom bump allocator to strategic user of zero copy serialization and incremental uploading for large transactions. We're aiming to maximize compatibility of Squad's protocol with a broader Solana ecosystem V5 with CPI limits increase will allow SVM developers to choose Smart Accounts as the primary user account infrastructure for their applications.
05:50:11.285 - 05:51:14.365, Speaker A: V5 is going to be formally verified and will be coming to Solana mainnet later this year. Reach out to us today to learn more or if you just want to be a candidate like our friend Armani. And now to the second announcement of the day, introducing Fuse Pay Fuse Pay is a virtual global VISA prepaid card that enables everyday real world spend of stablecoins directly from your Fuse Wallet. We're launching Fuse Pay in partnership with Bridge, an entirely new payments platform built with stablecoins to simplify global minor movement. Fuse Pay eliminates the need to directly interact with traditional banking rails and seamlessly bridges the gap between on chain and off chain payments. Fuse Pay is powered by Squad's Protocol Smart Accounts which ensures that the card is fully self custodial. When a card account is created, a separate Smart account is deployed with Mainfuse account acting as the sole signer and a daily spending limit is set for the benefit of Bridge to be used in real time as you make payments with your card.
05:51:14.365 - 05:52:33.449, Speaker A: We also allow the flexibility to withdraw from your current account back to the main account at any time subject to a short time loan. All of this is uniquely enabled by SquadsProtocol Smart account and the programmability that they provide. Fuse Pay will be initially available in the US with more countries coming soon and will go live later this year. Download Fuse today, set up your personal smart account and be amongst the first people to have access to Fuse Pay when it goes live. That's all I have for you today and thank you for your time. Beautiful People of Solana Breakpoint 2024 it's amazing to have witnessed the Solana ecosystem to grow to be what it is today and I'm really delighted to be able to be your emcee for the last hour of debates. Product keynotes + fireside chat my name is Vic and I would say we can kind of jump straight into it.
05:52:33.449 - 05:52:55.845, Speaker A: We are going to start off with a debate. First the debate. Non custodial wallets are overrated. Definitely going to be an interesting one. We all heard about not your keys, not your crypto. First we have Brian and of ecosystem success at Phantom. Give it up, give it up.
05:52:55.845 - 05:53:32.533, Speaker A: Then we have Sagar, senior Member of Technical Staff at Basics Z Crypto who will be your moderator of the debate. Can we give them another round of applause please? Last but not least we have Do CEO of Bastion please another round of applause. Let's get into it. Awesome. Great. This is on. It sounds like it's on, is it? Welcome everyone.
05:53:32.533 - 05:54:24.245, Speaker A: I am Sagar from A16Z and today I'm happy to welcome you to this debate on whether non custodial wallets are overrated. Our debaters today are Mads, who is a co founder of Bashtim, and Brian from Fandom, everybody's favorite wallet, I'm guessing in Solana land. So yeah, please, please welcome Mads and Brian. Thank you. All right, before we begin, I want to State that we, A16Z are investors in Bullet Bastion and Fandom and so we're truly neutral for this debate. And let's begin with some opening remarks. I'll allow each of you three minutes to make your opening statements and state any key arguments you have for this.
05:54:24.245 - 05:54:58.083, Speaker A: So maybe I'll use a recent Solana block to decide who goes first. So I'm going to pull up Solana beach here and if it's an even number block, Nas, you'll go first. And if it's an odd number block, Brian, you'll go first. All right, it looks like the last block produced changed again, but the last one I saw was even. So Nas, you get to go first with your opening statement. Cool. Well, first and foremost, thanks so much for being here.
05:54:58.083 - 05:55:38.675, Speaker A: Thanks so much, Brian, for participating. I think that it's an incredibly powerful full format for us to as in as an industry kind of like growing and you know, really just thriving. We have to kind of like question and take care of the hard stances every so often, even though, you know, kind of like sometimes virtually may have different opinions. So I wanted to start just a quick background on myself. I've been building in the wallet space and just a little space, custody space for quite a bit of time. Institutional side retail. Worked at Facebook on the wallet infrastructure and previously was at basic cc actually working with Cigar.
05:55:38.675 - 05:56:29.931, Speaker A: And you know, the way I'm thinking about it is that it's very important first as part of this conversation to establish the fact that custody and sub custody is not really kind of like a binary. Thank you. Sorry, I was not talking close enough to the microfilm custody and self custody are not really like a binary choice. It's very much a spectrum that is actually pretty multidimensional based on different types of controls that can be pulled from a software perspective, a hardware perspective, operational security, and so on. And so pretty important to keep that in mind as we talk. The second piece is actually there are kind of like two things to take into account. First is whether the wallet provider can actually move assets and perform actions on behalf of the user without the user's involvement.
05:56:29.931 - 05:57:24.559, Speaker A: And can the user perform actions without the wallet involvement? It's kind of always important to think about the negative controls and the positive controls essentially as part of self custody. So having said that, I like to oftentimes just think about what the the history of wallet and adoption in the space. And the first question that I have essentially for people always think about is who has onboarded the most users to the space? Who has onboarded the best majority? You have the 100 million people who have wallets and some form of crypto assets in the wallet. And the reality is those tend to be crypto exchanges, the coin of the World, Binance, Kraken and many others. Even though kind of like Wallet exactly existed for a while before that. Right. And I'm short of the crowd that had USB sticks and made mistakes by losing some of my assets and so on.
05:57:24.559 - 05:58:45.053, Speaker A: But I think that it really made it super easy for the vast majority of human beings to get into crypto. The part that was pretty interesting is that right after this kind of initial onboarding, a lot of tokens mine their wallet and obviously Phantom and many others have done it. Now Metamask and Phantom have spent a tremendous amount of time helping users graduate essentially from custody to self custody for users in a way that is safe. It obviously is taking quite a bit of time and there are pitfalls in edge cases. But the part that is very interesting that we're seeing in the recent years is very much like a recustodialization essentially of the system, I feel like on the Web three side with emitted wallets, where we're actually trying to get back to social logins or trying essentially to kind of abstract away as much as possible anything that is blockchain related. And as part of that we actually see wallet providers that have control over the authentication system, the authorization system and sometimes the key management system in a way that dictates who is allowed to sign what in which condition. So you know, that's pretty much like whatever we're seeing from Polymarket, from Friend Tech and so on.
05:58:45.053 - 05:59:50.209, Speaker A: You know, the ability to do very little with the wallet and very much kind of constrained to a single application in a way that is not that different essentially from a coinbase from in terms of user controls. So I wanted to kind of like start there and yeah, I'm very excited to. I know that we only have three minutes to go over activated, but the one thing that I Wanted to finish with is, you know, self density should evolve in my opinion towards the same trend that privacy. So it's basically opt in and opt out, kind of like giving the choice to users whether that same, like everyone should follow that and no one should have their data collected, for example, is really a choice and giving the users the choice. And second thing is a lot of solutions out there are very much one line of code away from getting hackers. So that would do Slowpack and many others even for self custodial wallets. So pretty much like one login, you know, away and one software or like human error away generally from getting your assets as a end user taken away without you being really involved in the process.
05:59:50.209 - 06:00:41.845, Speaker A: So self custody is giving you very similar properties to custody, often time in the way it's implemented today. Awesome, thank you. So sounds like you're firmly on the non custodial wallets or overrated side of this. Yeah. And the one thing that is actually kind of like on the session, we're seeing a lot of things with for example, like session, you know, like session keys where we actually see pushing shared custody. There are a lot of things essentially going in this direction where self desert wallets are trying to just give some form of kind of custody and control over the assets to like the central parties that are not the users. And yeah, I definitely think that in the way they're treated today, they're definitely over and do not apply to the vast majority of the human beings that I know outside of obviously these events.
06:00:41.845 - 06:01:02.865, Speaker A: Awesome. Brian, do you want to state your position on this topic? Yes. So I'm proud to say that I think Knockostolia wallets are completely underrated. Nos. That was great. That was surprisingly more nuanced and thoughtful than I thought you were going to come out here. I thought you were going to commit, you know, guns a blazing.
06:01:02.865 - 06:02:04.241, Speaker A: NAS has done a lot, if you're not familiar with. He's done a lot of really extensive writing on this topic and his firm is really, I think, very forward linking in terms of regulations and everything there. But I think, you know, you mentioned something interesting there in terms of the amount of people coming to crypto. How are they being onboarded? And we're proud at Fantom that over the last year we've onboarded over 7 million monthly active users to non custodial wallet. I think we're very proud of that because not just for us as a company that it was easier to build in Solana from a non conciliatory way, but we really believe that having access to self custody is incredibly important for the future of this industry and for the future of financial freedom. So at the end of the day, why does it matter? And what we think about it is self custody firmly aligns user incentives where we're putting users first. If it's self custody user has full access to a private key, they have the ability to fully exit a system that doesn't work for them, including phantom.
06:02:04.241 - 06:03:03.613, Speaker A: And we're at this really interesting point in time where not only on the regulation side are things murky and it's unclear what maybe is considered self custody and non custodial, but we're also from a product side really questioning what even is a what we're seeing embedded wallets, come on, we're seeing telegram bots, come on, we're seeing social sign of recovery. And if you've read Naz's blog, he has a lot of really great insights that take a lot of these providers down. And I actually agree with a lot of what he said where custody is a spectrum. But where I believe we stand is that not enough people are fighting for real self custody and at the end of the day it falls on us as industry leaders to push it forward. So when you look at something that you know is doing, claiming to be an embed wallet, at the end of the day their infrastructure has the ability to recover, you know, the majority of shards of keys in a shamir secret sharing scheme. Let's say that you can see the writing on the wall. We all want to avoid another FTX situation.
06:03:03.613 - 06:03:40.807, Speaker A: It's very tempting to say, well we should just go full custodial, full regulation. But if you look at the history of technologies, you know, going back to like telegram, radio, they tend to start very open with light regulation and as leaders form get market share, they tend to help influence regulation that reinforces them. And I think it's on us as law providers to see the value in self custody and to push and fight for it. So I don't think we're pushing hard enough. I think we need to keep pushing and it's our job and it's underrated. Alright, awesome. Thank you both for that.
06:03:40.807 - 06:04:24.473, Speaker A: It sounds like you guys are like more friendly than I expected. Yeah, it's getting started over so obviously I've come prepared with some questions of my own and I thought we'd start with the easy stuff and then try to get into the weeds a little bit. Can I start by asking each of you what wallets you use today? Maybe Brian, I'll start with you. What wallet do you use today and if you use more than one, why? I'm a maxi. I use Phantom, but I also use Ledger, which I have to say I bring a ledger into Phantom as well. I'm also a proud Solana mobile owner, so I've used Seafolt with Phantom as well. So are those like all the wallets used in Web3? Well, we could get technical.
06:04:24.473 - 06:05:16.829, Speaker A: We could say exchanges as well, I think for really opening it up to what we consider to be wallet. Yeah, exchanges. But for the purposes of what I consider to be an application standalone for managing keys, those are what they are. Awesome setups essentially with hardware ledgers, different brands and kind of try to really see their FTUs a lot of situations exchange stuff and have some stuff other like hiding custodial. So it sounds like neither of you is really fully in one camp or the other. Right? Like it's not possible to be completely in the custodial wallet space. I don't think that like we're really talking about us.
06:05:16.829 - 06:06:00.121, Speaker A: Right. Like, I think that like the people that are on stage, like we've come like a journey of multiple years of just like understanding the pros and cons, what makes it, you know, safe, just understanding the trade offs. We're not building necessarily for ourselves or building for a lot of people out there, just millions of people. And so I think that this is what we should be really. That's a great point. Is there something about your setup that you think like, my mom would never be able to use everything about your setup, Like, I'm just happy if my mom spends like a day without asking me about fixing the printer or the laptop remotely from she's in France, I'm in the US and she's fixed just like magic over the ocean. And I think that it's a lot of the same when it comes to crypto.
06:06:00.121 - 06:06:40.749, Speaker A: I've been trying obviously to get my reality that really come down to central exchanges for a lot of the aspects. Awesome. Okay, one more thing I wanted to get clarified. Smart contract wallets, abstraction, wallets, multisigs have recently become a bigger part of the wallet conversation. Where do these types of wallets fall on the custodial, non custodial spectrum, according to that question. I think that it really depends. They're kind of like the way I would like try for everyone in the room to have a framework is essentially just authentication, authorization and then key management.
06:06:40.749 - 06:08:11.843, Speaker A: Right. Like you essentially have these three kind of layers and sometimes it kind of can be complex where you have like an embedded wallet that actually is kind of like the main kind of a key managing some on chain accounts. So it really comes down to like how are you thinking about each one of those things? Do they run together? Are they kind of like linked? If they actually done sometimes separately by different parties, I would say that you end up with a fairly like highly like a lot of control essentially. I would say kind of a closer to custody than self custody in the sense that if the one thing that actually dictates who is allowed to sign what and when is actually the authentication system, then that can actually be spoofed, that can actually be manned in the middle, that can actually be intercepted and actually changing essentially the routes of the assets in a way that would make for example the request from one person lead to the unlocking and usage of the assets of someone else. I think that the big issue that people have, the misunderstanding that people have in the space is I'm the only one to see the keys, I'm the only one to have access to those keys. It's not what custody is more about control and the ability essentially to get your keys to do something. And if you have the ability to get the keys to do something without the person's involvement, that's sufficient.
06:08:11.843 - 06:09:01.407, Speaker A: And a lot of these systems actually tend to do that, which in some cases works great. A lot of limited wallets work great. Obviously you know, love polymarket and others, but I can do a lot of things without my approval. Brian, do you agree with that classification of swipe wallets? Yeah, generally. And I think how we think things about Fantom evolving over time is we think of phantom the application becoming an aggregator of many different types of wallets you would use. They all have serve different purposes and different trade offs. I think there's a lot we could do in terms of drilling down to how do you generate the keys, how do you actually use the keys, how do you store them? I think what we're most concerned about as a wallet company, we can put audits out every day if we wanted to.
06:09:01.407 - 06:09:48.355, Speaker A: But at the end of the day are we actually able to recover and get a key unencrypted without a user's knowledge or consent? And I think that's place that we never want to go. We want to fully avoid that. We actually just announced like 30 minutes ago. So not to put it on the spot, but a new embedded wallet product which we're really excited about. It's built on our own authentication scheme, but we were very intentional designing it. It took US a lot longer than we could have done because we leveraged a new open source protocol called Juicebox to store the pin shards that are used for encrypting such that they're outside of Phantom's control. So that even if Phantom went rogue and you had somehow you were able to get access to an encrypted secret somewhere, the encryption keys for that live completely outside of Phantom.
06:09:48.355 - 06:10:20.745, Speaker A: And I think that's something that's not talked about enough with these embedded wallet solutions. So you're actually thinking through what are all the steps of what parties could go wrong and basically get recovered from access, unencrypted access. Where would that happen? I think we as an industry need to push that if we want to make subcostee wallets accepted long term. Awesome. Okay. I think there's a burning question that most people attending this debate probably have. Not your keys, not your crypto is a core tenet of our industry at this point.
06:10:20.745 - 06:11:20.875, Speaker A: Do you think custodial wallets might undermine that for blood? Do I think custodial wallets undermine not your keys, not your crypto? I don't know if I fully understand the question, but I think the way I'd say like not your keys, not your crypto is you're in a good spirit. But even if it is your keys and it has your keys, you need to be thinking who else can even get access to my keys? And you know, like thinking through that as well. Just because somewhat the wallet shows you your key pair and your rephrased doesn't mean it's safe. I think trusting things to custodial wallets work for a lot of solutions, but you also need to think, you know what goes wrong there. I think Dashi is leading the way with regulation reporting all those strict requirements, but at the end of the day, custodial solutions will be subject to government intervention. And you know, maybe you trust your government today, it's a different question tomorrow. So again, if you use tools in a tool belt, you should have both.
06:11:20.875 - 06:12:15.029, Speaker A: And you don't think that it applies to software? I think it's basically about different trust assumptions and I think that there definitely is basically a lot of this humans are the issue and a lot of it. And you should be able to distribute your assets. I think between companies and software that I don't expect most people to to be fully building from source every line of a wallet that they write from scratch. So I think we need to have all options on the spectrum available. And yeah, we need to fight for self custody to be on that spectrum. I have a question for you. How many hops away from or essentially is Phantom? Okay, I'm going to answer the question.
06:12:15.029 - 06:12:56.575, Speaker A: How many hubs away from being able to move my assets without my knowledge is phantom today? What would it take to move assets without your knowledge? Well, you would have to fully like, basically we don't store anything unencrypted on our side. It's. I would recommend you read our most recent audit report which goes into detail on that. But it's current state, there's no way for like a phantom employee or anyone else to get access to that. That's all happening on your client and your machine, so. Got it. But someone is writing this code, right? Yeah, that's just pushing this code with like updates you guys launched.
06:12:56.575 - 06:13:31.747, Speaker A: I saw like recently an update with username which is actually, I think addressing is a big thing to fix in the space. But there are systems, there are people essentially involved in this process. Right. And generally you tend to be one release away, one kind of like the wrong build. Maybe the thing like a test build ends up being the production build. You know, Apple doesn't verify those things or Google Chrome doesn't verify those things. So in a lot of ways Fantom is one hop away from being able to log my key.
06:13:31.747 - 06:14:07.669, Speaker A: Just like a slope. Obviously there are a ton of controls in place. I'm just saying that it's something that is one hop away. Right. And everyone considered slope, you know, fairly self custody to the point where like when things happen, people said like oh Solana is hacked, but the reality is that they were one hop away from leaking those keys. So I guess my, my question here is not your case, not your crypto. It's really just even with self custody of wallets, with the best efforts, you're still a hop away essentially I would say from turning into full control over someone else.
06:14:07.669 - 06:14:40.255, Speaker A: Brian, I think I'll let you respond to that and then we're probably done with time. No, and I think it's a great point. I think you need to be also bringing, that's why bringing in things like ledgers, like spotted seat vaults where Phantom can't even get access to that is important. Like I said, they're all tools on tool belt. I'd say, you know, the same question also goes to the FTXs of the world which we all saw. And when that does happen, people reach for what they consider to be self custodial tools. We need to make push on the other end of the spectrum of self custody to make that safe.
06:14:40.255 - 06:14:58.117, Speaker A: Because the issue was actually with a fiat account. Right. That was actually like the lending was actually done on the ledger on the fiat side. I don't think that it was on the crypto side. Correct. I don't know those details, but I wouldn't be surprised if they were loose with the fiat side. I wouldn't be surprised if they were loose with the crypto side.
06:14:58.117 - 06:15:14.755, Speaker A: It's possible, but I'm probably not going to speculate on what happened there. That was my understanding, but awesome. It sounds like it's so sharp. Yeah, totally. I totally get it. Join us somewhere in the back for this debate continued. But yeah, thank you for joining.
06:15:14.755 - 06:15:48.699, Speaker A: I know there's like so much more we could have covered and probably should have covered, but it sounds like non custodial apps are overrated. It depends, but that's really the answer. I think we both agree that there's a spectrum to this. Yeah. Do we? I'm kidding. Join us in the back to learn more. So the way I think about it is that I think that they're actually underrated for people who should be graduating essentially from custody at some point to have their own who have spent essentially enough time in the space, we should try to move as much as possible.
06:15:48.699 - 06:16:50.477, Speaker A: And again, people just end up with both custodial wallets and south custodial wallets. That's kind of like I think the case for everyone here. But I do think that they're highly overrated for my mom, my sister, who ultimately just wants to pay their bills or just want to pick up different things, just want to be able to gain access to the system. So that's really kind of like how I'm thinking about it across the board. And I, regardless of this, really feel like it's a graduation process and that Fantom is actually doing a tremendous amount of work to make sure that people get to graduate faster than before. So yeah, I just want to kind of like just give a major props to my users. I wanted to just state that, but I really will see historio wallets triumph for the vast majority of the humanity kind of like as an entry point for the awesome.
06:16:50.477 - 06:17:23.095, Speaker A: I think on that note, we're probably going to have to get kicked off the stage. Thank you guys. All right, thank you, Naz. Thank you, Sagar. Thanks, Brian. Next up, we have a truly heart warming product keynote. And it doesn't matter at all if you are a cat person or a dark person, but in case you actually are a dark person, you are going to love this one for sure.
06:17:23.095 - 06:17:52.581, Speaker A: So we have Bonk for Paws only. Wait for it, wait for it. Possible on Solana. So let's give it up for Beats Director, head of Raccoon procurement and Bok for Pals. Next up we have Penites chief Sandy's officer CTO for those who don't know over at Bronc. So let's give it up for Bonk. Let's give it up.
06:17:52.581 - 06:18:22.847, Speaker A: Give it up. Gm. Gm Everyone, thank you so much for coming to our little talk. So I'm going to throw some numbers at you really, really quickly. We did a sampling of a poll about crypto vaults just a few weeks ago and we found some really interesting details. About 40% of people actually donate regularly, which we thought was a midway amount. Most donations actually come from credit, debit cards or traditional bank transfers.
06:18:22.847 - 06:19:02.565, Speaker A: And only about 27% of these donors actually use crypto. A lot of the likelihoods are because people don't know how transparency of the funds are being used. Tax benefits they can get from it. They also don't know whether or not the donation process is like super easy. So these concerns stem for crypto folks based on the volatility of the asset, lack of understanding, lack of security. So where do we come in? Bonk for pause. And who are we? We are a charitable initiative within the BONG ecosystem and we utilize innovative blockchain technology and engagement with global communities to drive meaningful change.
06:19:02.565 - 06:19:37.185, Speaker A: How have we done this? So so far we've launched three fashion shows. The first was in Hong Kong, then we held one in London. And for those of you who were here yesterday, we had a fabulous one right here at the location. So far we've raised just about 25,000 US. Some of it was collected in Seoul, some of it was collected in Seoul usdc. And we've been able to donate to our eight charity partners via the giving block. I'm going to hand it over now to Tendiz who will walk you through a little bit of the tech and how it works.
06:19:37.185 - 06:20:08.135, Speaker A: So let's talk about the tech. We partner with the Giving Blog to do this. It is an organization that helps facilitate crypto fundraising and donations through the blockchain. You can go on their website today and don't through crypto card or stock. What we did was build on top of their APIs to make something great. We filtered out animal charities that we cared about, elevated them and showcased them on our platform. The user comes to bump or PAWS filters to the charities.
06:20:08.135 - 06:20:50.045, Speaker A: They can choose if they want to donate anonymously without putting in donor info or want to get a tax receipt and put in their information. Then they select the donation amount. And if they want to donate in Solana or usdc, our Lambdas run and get an address for that charity for the user to donate to. And right after that donation we get a notification telling us through webhooks that the donation is complete. At that point, we add that donation to the user's history and we match the amount of donated donated money in bonk along with burning 1% of that amount in bonk. Win. Win for everyone.
06:20:50.045 - 06:21:17.675, Speaker A: Why is this great? There's increased transparency. Every transaction is on the blockchain and it makes auditing so much easier. The taxes for these charities are so much better and we all know taxes suck. This also increases efficiency. The charities get the money instantly, there's no middleman. And the giving block doesn't pool it to give it at a later amount. And obviously since we're using Solana, it's fast.
06:21:17.675 - 06:21:59.205, Speaker A: Another benefit that is non technical is the fact that it lends to financial inclusion. Any charity in the world can apply and be a part of this. Getting donations despite the proximity to donors. So what's next? Reed's poll showed that a lot of people want more anonymity. So we're working with a giving block to get a completely unique address for every donation and mix that address up using a smart contract. What that will lead to is that when user A donates to charity B, only the participants know that it was a donation and no one else. With that, I'll hand it back to Viz.
06:21:59.205 - 06:22:39.675, Speaker A: So how can you get involved? Visit us@bongforpaws.org Follow the journeys of all of the animals that we have there. You can also purchase items that are on sale from Menta. 100% of all of the merch sales from the Baobao fashion line will be matched by Bonk and donated via the DAP to our charity partners. Thank you guys for listening and coming out. Thank you. All right, 10 B's and B's.
06:22:39.675 - 06:23:06.571, Speaker A: Thank you so, so much. Gotta love you, Sambong. Alright, so the next product keynote for those who may know me in person. I'm kind of lazy by design, but that just means that I'm all about being efficient. I love efficiency. And for the next product keynote, we are talking about efficient Solana programs. So please bring back that energy.
06:23:06.571 - 06:23:34.665, Speaker A: Bring back that energy. We are having KB Gould, systems engineer at Temporal, please come to the stage and give it up. Give it up. Can you hear me? Yeah. So my Name is Katie Colton. I work at Temporal, a new learning firm. Today I'm going to be talking to you about efficient programs.
06:23:34.665 - 06:24:19.357, Speaker A: Over the course of the last few years we've seen a shift in priority from adding new features to improving the performance and robustness in the network. And we've seen this with the development of new clients. But Gigabyte client itself has seen a lot of improvements in the packet ingestion layer. We saw the migration from UDP to quic, we've seen optimizations in quic. You know, Temporal is working with some of the core teams to research and develop a new networking protocol to accelerate packet ingestion. Semper is also working on on QoS, so we need a way to deal with this larger packet volume. And yesterday we demoed our V0 QoS working at 1.4
06:24:19.357 - 06:25:00.175, Speaker A: million GPS per core. We've all seen Firedancer's AVX512 implementation of SigVerify that hasn't made it yet into the Galvan client, but I hope that a second independent implementation will be made in bronchitis. Version 1.18 saw a new scheduler and that was a massive step in the right direction in the runtime. We've seen a lot of work done on direct account mapping. I still think we have a long way to go, but there's a lot of work being done. There's also new SIMD that's going to massively reduce the amount of data that's copied in and out of VM for any instruction that uses another program.
06:25:00.175 - 06:25:51.355, Speaker A: And then we get to the point here where the VM invokes the entry point of a non chained program. And that is a very interesting transition in this critical path because it's the first time the code not written or selected by a core dev begins to execute. And so you may be able to see where I'm going with this, which is the core devs can deliver what is the most optimized client by whatever metrics you wish to put forth. On chain programs are inefficient. We will not realize the vision of Solana as blockchain for global scale. A lot of the programs on Mainnet inherit inefficiencies from the current tooling. So the compiler, the core abstractions and Solana program and the program frameworks all each independently inject unnecessary or suboptimal code and both the executable.
06:25:51.355 - 06:26:37.491, Speaker A: There's been a massive effort, very successful, to improve the developer experience on Sauna, but it is now time to make performance a Top priority. So I'm here to announce Peregrine, a framework for efficient asana programs. So this gets fixes a lot of the inefficiencies and it has enough utilities, extends alone as a framework, any instruction or count that it touches is all zero copy. It has the same separation, validation, execution. The developers have come to learn. And it's rust, it's not prog macros, it's not EBPF assembly. So you can just write performant, readable, maintainable, extensible code.
06:26:37.491 - 06:27:23.035, Speaker A: And that's the goal. You may have heard of this program that I wrote, nanotoken. This was sort of the first application of these principles. And with these techniques, we were able to reduce the size of the executable almost by a factor of three compared to spl, and almost by a factor of four compared to a totally new blank anchor program. It uses 100 times less block space per transfer, and even with all the overhead of the current agave, it still does 54,000 transfers per second on a single core. So this is totally parallelizable across distinct token count pairs. So add in 8, 16 execution threads and I'll let you do the math.
06:27:23.035 - 06:27:59.285, Speaker A: In addition to this, I'd like to announce Sauna program Cave. So this is just a collection of very simple programs that just illustrate these techniques. Just some simple ones that you may have seen before. And there will be a few primitives in there that have never been seen yet on Solana. And so, yeah, this is the future that I want for Solana. And if we execute, this is a shared mission. If we execute in a few years, we can all sit back and bask in the glory and admire the beauty of the symphony of silicon that we call.
06:27:59.285 - 06:28:43.341, Speaker A: Thank you very much. And it is the final countdown. Sorry, not sorry that you had to hear that anyways, but we are at our last talk today for today. And so 2024, ride curve stage, and we have a really exciting fireside chat. The topic is real money gaming in web 3. So please, I know it's been a long day, but let's give it up one more time, please. Come on.
06:28:43.341 - 06:29:06.929, Speaker A: Give it up for Ryan Day, head of sales at gameshift. You'll do better than that on the next one, I'm sure. Come on. And we have Daniel Laff, CEO of coinflow. Come on up, Daniel. Thank you very much. Hey, how we all doing? Seems really lively, so I appreciate that.
06:29:06.929 - 06:29:19.947, Speaker A: Thank you, guys. I'm Ryan. I'm head of sales at gameshift. Hello. Thanks for the support. We're here to talk about real money gaming. But real quick, if you want to introduce yourself, tell everyone and everyone, everyone in the world about yourself, that would be great.
06:29:19.947 - 06:29:39.075, Speaker A: Definitely. So yeah, thanks for the lovely intro ride after a long day and thanks for everyone sticking around. My name is Daniel Leib. I'm the CEO and founder at Coinflow. We are a company that helps merchants from web2, web3 and really any web. But we let them accept payments, cards, bank transfers, etc. And instantly settle to them.
06:29:39.075 - 06:30:03.693, Speaker A: And we also help them with payouts and we'll dive a lot more what that means games. Yeah. And so I guess it's important to talk about Game shift. Right. That's why we're here as well. We make it really easy for games to build and Solana. And so one of the things that we're really focused on right now is this idea of what real money gaming with blockchain can really do for players.
06:30:03.693 - 06:30:53.865, Speaker A: But I think it's also important to take a step back and kind of set the context around allowing of this stuff. And so the esports community in general is there is like the top 1% of esports players who are by and far and above the best, but they also get paid the most and then there's everyone else. And going from the bottom into that upper echelon is very, very tough. And so I used to run the 11th and 18th largest counter strike two communities in the world doing a lot of payments and tournaments and infrastructure. And so we would run into a lot of very big issues where trying to pay out internationally is a very big problem. And so typically if we have a tournament of probably like 100 winners, we need to set up about 20 different PayPal accounts. We need to do a lot.
06:30:53.865 - 06:31:18.611, Speaker A: And so the infrastructure really there for anyone that isn't kind of franchised at the esports level, it becomes very difficult. And so I think there's a lot of exciting stuff that can be opened up with real money gaming. But that's on the esports side. But I also think the payment side is a very important thing to kind of like set context for on what we're going to talk about here in a second. Yeah, definitely. Totally agree. Esports just generally how payments works today in Web2 in any game that you can think of.
06:31:18.611 - 06:32:01.967, Speaker A: Let's start with a classic real money gaming example, which is sports betting. Probably one of the biggest real money gaming sectors in the world from the US so one of the bigger companies there is DraftKings and how that flow of funds works is If I want to place a sports bet, what happens is I use my credit card, debit card or bank. Let's use a credit card in this example. And I type in my information as soon as the card gets authorized. What that means is the card networks in my bank says I have the money in my bank and the money can start moving to DraftKings who is a merchant in this case. That money will arrive in DraftKings bank account in two to three business days. But right away DraftKings goes, okay, we're going to credit Daniel's wallet which is in a database with some funds.
06:32:01.967 - 06:32:37.663, Speaker A: I can go and place a sports bet with that. And if I win, my database also gets credited back. If I want to withdraw that same thing, what happens there is they have to go and use their own cash balance sheet or treasury or get capital from somewhere else to go and pay me out. And in the US a payout is ACH rtp, which is instant, but ACH is two to three days. So you can see where this is pretty tricky where if I bought my credit card but DraftKings doesn't receive those funds for three days and then I don't want a sports bet, I want to get paid out. That's a pretty big problem, right? You're managing all this crazy float you're now becoming. You're really a fintech manager.
06:32:37.663 - 06:33:15.401, Speaker A: You do treasury management operations, which no gaming company wants to do. That that's like one extremely large challenge in context setting where we are today and how normal payments works. So setting you up for a T ball shot here, which is coinflow is the payment provider that we use for kind of fiat and off ramps and gameships. So we absolutely adore what you guys are doing. So tell us a little bit just like high level right now, an esports player, if they're in an amateur league, will typically get win at. Let's say they win $100, let's say they win $800. But usually these are smaller fees.
06:33:15.401 - 06:33:48.371, Speaker A: It typically takes about 90 days for that person to get their winnings from that tournament. And that's just because there's no infrastructure involved. So just like high level or however far you want to dig into it, how can coinflow, if you were to just roll out coinflow for esports oriented tournaments, what would that look like? Yeah, definitely. So going back to that same example, I just gave in that flow of funds. What happens is coinflow is a payments company. We can work with different types of merchants. In this case, Ryan mentioned an esports company that runs tournaments.
06:33:48.371 - 06:34:23.957, Speaker A: So this tournament merchant uses coinflow. They made a good choice. And as soon as Ryan, who's the user, wanted to enter into the tournament, enters his credit card information, as soon as that card is authorized, the bank and the card network, let's say Visa says, yep, Ryan has funds in that account. What we do is we push stablecoins on chain instantly on Solana for fractions of a penny. It lands in either that merchant is called the Esports tournament wallet or if they're really advanced using gameshift, our contract infrastructure. Exactly, our contracts for that. And as soon as that tournament finishes, right away, money goes to the winner.
06:34:23.957 - 06:35:10.209, Speaker A: And then with coinflow, we also have instant offerings going from stablecoins to bank account and the game and the tournament doesn't have to manage any of that infrastructure. They don't have to get in those licenses, they don't have to go and manage liquidity between moving funds from one bank account to the other or figure out how it's going to get there and the user can get paid out right away. So instead of waiting for 3, 4, 5 days to get your winnings with Coinflow right away, as soon as you win, you can get your money out. And you were telling me this amazing set about why people choose to go with one sort of sportsbook or something like that. That blew my mind. Yeah. So if anyone's used a lot of these sports betting apps, what you find out about them is you can't really deviate on the games that much.
06:35:10.209 - 06:35:54.277, Speaker A: One, regulatory reasons and two, they've been around for so long that product differentiation isn't huge. So a high 90 percentile of users will pick their sports books and other real money gaming applications based on how quickly they can get paid out. So if you allow people to instantly withdraw and realize those winnings, they will go and use your product more. So this faster money movement is something that is extremely valuable. And we see this not only in the real money gaming world, but in the US One of the biggest peer to peer money movement apps is Venmo. A lot of people have used Venmo and Venmo is one of their major revenue streams is they have two options to get your money out to your bank from the Venmo wallet. One is ACH takes two to three business days.
06:35:54.277 - 06:36:34.393, Speaker A: The other one is instant via RTP or push to card. That's right now going for 150 basis points. And most people choose that option. So you can see how much people really value getting that funds quicker and how Complicated it is for a merchant like an esports company to orchestrate that whole process. And while us being able to do that out of the box via APIs and them not having to worry about any of that financial movement really helps, man. 150 basis points in this economy, that's crazy. But yeah, so that's why I think one really important thing, right is a lot of, I mean everyone, I'm a big, staunch believer Web3 game is going to like Web3 gaming.
06:36:34.393 - 06:36:50.401, Speaker A: It's amazing. It's the shit we're going to make it. Right. But a lot of there hasn't been a proven business case. I think one of the things that Web3 Gaming has done really, really well is using tokens or NFTs as kind of a way to raise capital. Also used our acquisition strategies. Right.
06:36:50.401 - 06:37:43.565, Speaker A: And so one of the things that happens is if you're paying out and you're promising these players like money, but they can't take it out to their bank account to pay for rent or pay for groceries, which is like the big thing that they say in gaming, and if it takes multiple days, you're going to lose the retention. So you've spent so much effort and time and energy to get this gamer into your game, all of a sudden they're going to leave to go to another game because you can't actually get that money out. And so I think that that's one really, really good thing. But on that same vein is we haven't actually seen a Web3 game that has like a proven business model or new revenue streams within a given Web three game. And I think one of the things that when we were talking about this earlier, there's some new. Once you start putting money on chain, there's some really fun financial things that you can do that up until this point, games really haven't had access to before. So like, what can someone do? Let's say we have 100,000 people each with $10 in their wallet to go play for some real money gaming in some capacity.
06:37:43.565 - 06:38:37.217, Speaker A: What does that do for or potentially do for a game? Yeah. So right back to that full when you deposit funds onto the gaming platform to use the ecosystem, one thing that you can't really do today in the traditional web2world is monetize the money sitting on that platform, unless you're an extremely large company. So like, you know, people might have heard of Starbucks is essentially a bank because they have people deposited and they make money off that. Well, what you can do with stablecoins and other Yield bearing assets is as soon as funds get deposited into that tournament, you can start earning interest on that right away. So if you are a game that has $10 million deposit on your platform and you are making 5% APY on that, that's an extra half a million dollars in revenue. And half a million dollars in revenue can go a long way. Especially for $10 million in platform is a small to medium sized real money game that's drafting billions of dollars in that platform.
06:38:37.217 - 06:39:21.581, Speaker A: So that number really, really scales and can make a huge, huge difference. Yeah, I mean I think it's like incredibly important to think about why a lot of times game builders are why would I even put NFTs on chain? Why would I do any of this stuff? And I think what we're trying to, or what a lot of people are thinking about is how can we find new revenue streams. And if you can start to impress upon small indie studios or even bigger studios and there's this new revenue source and you can pour that money back into the players or back into your own pockets. Because that's what we do here, we put money in our pockets. Right. I think that that's like a very important thing. But then there's one other thing that I want to touch on briefly with you, which is if you're a game that's running kind of an international game, right, you want to have users from all over the world suddenly taking payments from everywhere, it becomes quite the headache running all those money transfer licenses.
06:39:21.581 - 06:40:05.399, Speaker A: So you mentioned that briefly, but I think like you guys handle this very nicely. Do you want to touch on that for a second? Yeah, I think the benefit of using a company that can sell stablecoins and is that as soon as the user gets the stablecoins you can plug into offramp providers. We have offramps in over 50 countries, but if we don't have it there, the user still has access to those stablecoins and likely there's an exchange in that country that user is domiciled in. And you can create a quick guide of saying, hey, take these USCC or USCC stablecoin and take this exchange. Without that, there really is no way of doing these mass payoffs other than manual operations. Yeah, I mean it's pretty exciting. I think there's a huge unlock.
06:40:05.399 - 06:41:15.551, Speaker A: And so one of the things that excites me the most about this is the idea that if you can roll out infrastructure in your game, one of the things that real money gaming brings into the equation is the ability for someone to come in and have new types of content without necessarily you as a game builder needing to build new storylines or chapters or seasons or anything like that. Right. Because you can just take your existing core game loop and add some extra color on top, but then you throw into the money aspect so you have another revenue stream that I think is really important. But then the last thing and what we talked about or what I mentioned at the very start is you have these amateurs that are looking to quit, like they're nine to five to do what they do, they're five to full time. And one of the things that if a game can roll this out internally very easily, you can start to get more gamers that can potentially leave their full time paying job doing whatever to start trying to chase this down more often. If you're an amateur in Rocket League, for example, you could be one of the best amateur players in the world. And the maximum amount that you're probably making is around $800 a month doing this.
06:41:15.551 - 06:41:54.729, Speaker A: And so if you can offer opportunities for gamers where even going from 800 to 1600, right. It becomes much more feasible for you to spend more time training to try and make it up to that 1%. And I think that's something that's often forgotten about is it's not just sure like blockchain, we can send money around to people, but it's these people who are out there really trying to make it maybe on Twitch or as a pro. And this kind of really unlocks that which I think is really exciting. Do you think that creates like just a whole new generation of gamers and people trying to become or turn into more than a side gig or even just turn into a side gig. Yeah, I think it's really. Yeah.
06:41:54.729 - 06:42:32.085, Speaker A: So it turns into something where people can earn money in new ways that I think or more money doing the thing that they love. But also it can go to a long tail of games. Right. Like there's only probably 10 games today where this is really a massive ecosystem. But if you can have it on everyday mobile games and you don't have to set up a whole league or something to do, I think that that's really cool. But then on top of that, as a gamer, if you're in there and you're able to put 25 cents down, a dollar down to go drop into a map, I think BR1 is a game that does this really, really well. If anyone doesn't know what you do is you pay a dollar to drop into a map and every kill you get get 50 cents.
06:42:32.085 - 06:43:05.839, Speaker A: And suddenly like this dynamic is really, really interesting where now there's a little bit of money on the line and so now you have a little bit of skin in the game and it really opens up a new kind of engagement metric that I think is really, really cool. But this is all we got. A minute and a half left. This all comes back to the idea of one of the things that gameshift is doing with coinflow right now is we're going to actually be running out or rolling out the ability to do real money gaming inside of games through our API. Very straightforward. We talk about this a lot already, but new content, Web3 enabled, all of this kind of stuff. And I'm supposed to push this clicker.
06:43:05.839 - 06:43:42.577, Speaker A: Ha ha. All right. But I think what's really, really nice is we can set all this stuff up with APIs for you guys straight out of the box so you don't really have to do anything extra. Tap into this. So if you're a game, mobile game that's doing kind of a casual thing, you can start to run what a cam from Fableborn likes to call lunchtime Esports. So you can start to do these small kind of money oriented things to try and re engage players or keep retention even at an all time high. So with the last 30 seconds that we have on the map, I'm going to leave this QR code up there for all you wonderful game developers that are out there.
06:43:42.577 - 06:43:57.859, Speaker A: Scan it and get in touch with me so we can talk about getting coinflow and getting Game Shift into all your wonderful games and running some real money gaming. I don't know, I want to feel excited at the end of the day. It's been a long day. It's been a long day. Hey. That's the energy we need. Hey.
06:43:57.859 - 06:44:04.283, Speaker A: All right, let's go. Yeah. Well, thanks. I really appreciate the time. Thank you. It's been great. Thanks everyone.
06:44:04.283 - 06:44:32.725, Speaker A: Thank you, everyone. All right, thank you very much. We are now coming to the actual final keys for a day. Sorry about before. And this is the actual ending of today. There's a great joke here to be made but I'm not going to make it. Instead I'm going to introduce the debate.
06:44:32.725 - 06:44:54.407, Speaker A: The topic is going to be about gaming. Makes to it a spicy topic. It is. The future of Web3 games will rely on SVM layer 2s. And first up we have Chris Zhu, CEO of Sonic SVM. Can I get a round of applause? Thank you. Thank you.
06:44:54.407 - 06:45:34.187, Speaker A: Next up we have Dev Burrell who is going to be Our moderator for this debate, he is the founder of Space Bank Gaming. Yes. Last but not least, we have Andrea Fortuno, co founder and CEO of Magic Block Labs. Get won by the round of applause. Thank you very much. So before we begin the debate, I do want to ask about the contenders here to kind of just give an overview of their product and what they're working on to get the context for everyone in the audience on where they come from before we actually go into the domain. Do you want to start, Chris? Sure.
06:45:34.187 - 06:46:15.957, Speaker A: Hi everyone, my name is Chris Zhu. I am the co founder and CEO of Sonic svm. Sonic SVM is a gaming SVM built on top of the base layer. Allows for harmonious synchronization between our rollup or SVM or network extension, whatever you want to call it, back to the base layer very, very fast. And we're building a gaming ecosystem that allows for any Solana game to go to market, build scale seamlessly and that is our product. Andrea, what are you working on? Hi, I'm the CEO and co founder of Magic Block. Magiblock is a high performance game engine for fully unchained games and fully on chain applications on Solana.
06:46:15.957 - 06:47:19.315, Speaker A: Our core product are ephemeral rollups. We essentially allow developers to build on Solana and develop leave the chain but tap on demand into these fast SVM instances that are deployed all over the world and give the same benefit of roll ups really or upchain without ever needing to leave the chain. Cool, thank you. So Andrea, I'm going to start with you. We're going to start with just asking about why does your opening sentiment on do games need an elderly? Clearly we believe that they don't believe in L2, at least in the shape or form that L2s are commonly kind of conceived. What we think though is that games clearly need some different properties compared to what the general VM that Solana offer can give them. And so primarily latency is one of the biggest concern when it comes to gaming, especially if you want to enable fast paced multiplayer games.
06:47:19.315 - 06:47:50.705, Speaker A: Another one is related to the cost of transaction themselves or even precompiles or customization at the random level. Typically game engine offer loops for developers. You don't get loops natively in the Solana random. So there's a couple of properties that are very helpful when it comes to gaming in that solution. Sonata doesn't have. So there's definitely properties that we think are needed. We just don't think that L tools and traditional L2s are a good fit for that.
06:47:50.705 - 06:48:59.739, Speaker A: Chris do we need an L2 for games on Solana? Not very obviously we do. I think to unlock the full potential of Solana gaming, it is necessary to have a gaming ecosystem. In our case a gaming SVM that is designated to the growth of all Solana games. I think traditional L2s on Ethereum, for example, actually is focused on increasing performance and speed, lowering cost. And I don't think that should be the necessity for Solana L2s. I think Solana L2s can actually focus on use case specific configurations, customizations as well as the general ecosystem building for specific use cases, in our case, gaming, and that it's very reasonable to have a craft or tailor made experience for each one of these games to build on top of a SVM gaming chain, just as some problems that it could potentially solve. Sonic existed because we believe that one, games need scaling solutions to avoid hotspots for low economic transaction values and keep the base layer for high value transactions.
06:48:59.739 - 06:49:47.059, Speaker A: And two, Solana allows us to have an atomic svm, meaning that we can get rid of the redeployment process for EVM L2s. That was a very big problem. And some might argue that liquidity is fragmented on top of Solana if there's ltus. But if we look at the total market cap of all games, including the tokens NFTs added together without a designated gaming chain helping these games go to market, launch their assets, that total cap is actually very small. So we actually think about it as a use case to inject liquidity for gaming into the chain as opposed to fragmentation of the chain itself. I can talk about this for. Yeah, so you brought up a couple of interesting points that I want to kind of drill into.
06:49:47.059 - 06:50:05.675, Speaker A: One of them was. Okay, so let's start with this question. Can you give me an example of a game that is made better because it's on Valve 2, whether it's Sonic or something else, than it would be on the baseball one? Yeah. So I think made better itself. We can define that a little bit. Right. Why do games.
06:50:05.675 - 06:50:47.531, Speaker A: The way I would like to define it is the game developers are going to make more money. Yeah, a lot of examples. If we look at what Ronin does very well, for example, Axie Infinity, maybe some of you already know about this game. Essentially after Axie's success, Ronin was able to capture the liquidity of the players and keep them in a decentralized community of super fans for this game. But they're also open to exploring other games. So when we talk about the generalized L1 when people's attention are not on specific games or gaming, it's actually very easily dispersed to financial assets such and so forth. One example of this recently is that we're looking at Space Nation, all immutable X.
06:50:47.531 - 06:51:41.407, Speaker A: We're trying to bring them into the Solana ecosystem. Huge MMORPG by one of the best producers. They look at this metric called on chain velocity of money. Where initially, if you print money In a traditional Web2 game for MMORPG, it might only flow seven times a day or eight times a day, but after they brought it on chain, because the take rate actually decreases, the users can actually sell their assets, the velocity doubled almost to 1213 and then the take rate stayed lower while the users actually had more enjoyment in actually trading the asset and having the meta game. So the developers actually ended up making more money even though the users gave up less. So why does that happen? It's because the economy is actually open and they're bringing more velocity to the money supply. Okay, so I want to go to ask about something that Chris brought up.
06:51:41.407 - 06:52:38.515, Speaker A: Chris just talked about trading assets on chain, and I know from our conversations, the stuff that you guys work on, you focus a lot on fully on chain games, working on primitives beyond digital asset trading. Can you talk to me about any kind of that are made better without visual assets and any other kind of primitive that they could be using and why they might exist on NL1 or on your ephemeral rollups? Sure, absolutely. I think there's an important distinction between games and fully launching games. Because when it comes to games, I think there's a net negative actually in building some of those games on NL2. When it comes to fully launching games, it's absolutely impossible to build those entirely on AND one without any sort of support. The reason why I'm thinking this way is because when Chris is talking about value accrual for developers, he's not really talking bringing Ronin as an example. He's not really talking about making money for developers.
06:52:38.515 - 06:53:18.161, Speaker A: He's talking about Ronin making a lot of money, which is true. They're accruing a lot of values in their own chain. And you cannot do that if you're on Solana. And also when it comes to bringing more liquidity, you're bringing more liquidity to your own chain, not to Solana. So games are actually worse off Monolith 2 because they don't have payments, for example, they don't have native LCC. One of the simplest form of benefit that Web3 can offer to games when it comes to full launching games. Specifically, I think there is an argument that you can make that having your own L2 is actually better because at that point you might need to tune the block time.
06:53:18.161 - 06:53:51.307, Speaker A: You might need to introduce other form of customization at the runtime level. As you were saying, that are not available on Solana. And for those sort of games, I think a solution that resembles an onchain could make more sense. Okay, so let me clarify that real quick. You're saying that for the on chain games we might actually do need L2s. Is that a correct statement? Yeah, I think for many gen they need some sort of scalability solution. Is it a scalability solution L2? That's a good question.
06:53:51.307 - 06:54:14.237, Speaker A: Thanks for asking. So we think there's a better way to build L2 which are ephemeral. And that's what we're focusing on. So the idea behind an ephemeral roll up is that you're not really moving the state into a separate chain. You're not really building an L2. That L2 is not real, it's just some mirror of the copy. It's a copy of the state that exists on chain.
06:54:14.237 - 06:54:45.775, Speaker A: So you benefit from persistent, you benefit from composability, you benefit from liquidity and from the incredible ecosystem that is Solana. But you can also tap into this customization of the runtime level. You can also tap into these faster performances. You, you can co locate the node to reduce the latency. You basically have the exact same benefit of an L2 without having those same problems in terms of fragmentation. And so we have to define what an L2 is. We argue that ephemeral rollups are not really an L2 because they're not real, they are ephemeral.
06:54:45.775 - 06:55:37.291, Speaker A: You cannot create new state there. But when it comes to bringing transaction in a way into this different ecosystems, into these different run types, totally for fully on chain games, Solana I think is not enough. Okay, so Drew just brought up a very technical point on why fully on chain games might be made better on L2s. But I want to challenge you on Chris and it's something that we talked about. You mentioned something about ecosystem growth. And one of the things that you had mentioned was how do you do things like publishing deals, value capturing, center token assurances and bring that back to the games themselves. What about the SVM? What about an L2 SVM technologically makes any of the business stuff better? Technologically? Well, that's what I'm saying.
06:55:37.291 - 06:56:18.935, Speaker A: Right. So if it wasn't a technological need for the SVM, couldn't you just do it on VL1? If. If your argument is the L2 makes the business side better, can't we just do the business side of the L1? Yeah, so I think theoretically speaking, maybe you could. I don't know. We think that it's a lot more reasonable for that to happen within a gaming ecosystem of a chain itself. The reason there is extent of alignment is the biggest and one of the largest problems to tackle when it comes to helping games publish or go to market. And games are businesses at the end of the day and the developers want to be able to acquire users and make money.
06:56:18.935 - 06:57:07.587, Speaker A: So when we look at a contract that we sign at help these games go to market or publish on top of Sonic, one of the biggest problems that you would have On a generalized L1 is that you actually don't have protocols that are specifically serving gaming needs. So let me challenge you on that. Why can't you just put those protocols on the L1 instead of on the L2? Like for example, you talk about incentive alignment. Assuming incentive alignment, something has to do with tokens, why can't you issue those tokens on the L1? Why can't you? So perfect question. You can introduce the Token on the L1. Actually we suggest our devs to keep their tokens on the L1 because SVM actually allows us to have a unified interface that allows base layer to communicate to the L2 or the rollup. And that is actually not previously seen on Ethereum.
06:57:07.587 - 06:57:39.533, Speaker A: Right. Ethereum has different standards across different L2s. And one of the biggest problem is that the liquidity doesn't have a home base to be shared. We can actually change that if we all agree that Solana itself is the base layer and the interoperability standard is the same by utilizing for example on those SVM API and then we just focus on execution. And now coming back to your question. Let's say a game is fully on chain. They're making money off of a take from the transactions or sharing a part of the generating gas or whatever.
06:57:39.533 - 06:59:11.563, Speaker A: However, the game makes fee off of high number of transactions. How do you share that with solana? To generalize L1, it is almost impossible for us to strike a custom deal with Solana if there is no on chain publishing entity for Solana itself. And then the block space, there's economic value for the block space which should also be shared with the games. Let's deep dive into that because I don't know if I quite understand that. So you're Saying that you want to share value back to the L1, isn't the L1 just making the value from transaction fees? Like why do you, why do we need a special way to put value into the L1? So when you say we, we want to share value back to the show. So I'm saying that the game developers want to share value off of all of the transaction fees that they are bringing to the L1 or to the chain itself. But can they do that by writing a smart contract that every time there's a transaction that goes through, some percentage goes to them as the take adverse incentive for any game that doesn't.
06:59:11.563 - 06:59:52.989, Speaker A: You don't necessarily need NFT trading volume to be very, very high to capture value. And Ronin for example, as a gaming chain does this better by having all of the necessary components, whether it be whitelisted or built by themselves to be on top of the ecosystem. So that if you're an MMORPG and you have only fungible tokens, you can also capture value off of those Dex transactions. Transactions. And we think that as a gaming chain we can have all of those necessary pieces designed for these games and then also share that revenue or share that economic incentive back to those games. Transaction fees are one example of that. But it's significantly harder to do on top of Solana L1.
06:59:52.989 - 07:00:09.039, Speaker A: I'm not saying it's impossible. I haven't thought of a very good way to execute. I mean just instead of taking transaction fees, just take a cut off the transaction. That's, that's how we do composable instructions. But yeah, so it's not just transaction fees. Right. It's also all of the protocols that's building on top of this chain.
07:00:09.039 - 07:01:05.709, Speaker A: If it's not designed for the games for publishing, then it's very hard to convince all of these protocols to share all of those fees with the games. Okay, Andrea, so Chris just talked a lot about this kind of composability and you talked about composability in a very different way, which is games working with each other. So using there will ever be business cases in the same way that Chris is talking about where games or have you seen any games that are like, hey, we want more business development done on the ephemeral roll up that we can't see, that we don't see on the LTO or something like that. So if you're talking from a publishing perspective, I think that's definitely value that we as a company can bring to games. But that's not the point of the technology. That we're building. The point is that we allow them to partner with other ecosystem actors and get the benefit from them.
07:01:05.709 - 07:02:05.421, Speaker A: A very clear example is a fully launching game that is being built right now with family rollups, is built on Solana and therefore can compose with another attribution protocol that is built to bring players to other protocols. So what they can do is that they can have this referral on chain system where if you bring a friend, you're going to earn a cut of the fee that they are spending into the amount of money they are spending into the game. That is a very simple example of how powerful composability can be. And that is only possible because you can compose one Solana with the state that is available on Solana. When it comes to cutting publishing deals, I don't think you have to really cut a deal with Solana if you are building a custom protocol. If you're building a custom marketplace on your chain, fine, you can do the same and you can share a fee with all the game developers that are building on you. So I think it's quite easy to redistribute value to game developers if that's the deal, if that's the biggest concern.
07:02:05.421 - 07:02:38.605, Speaker A: Right. But I think what Chris is trying to get at is that you have to go a step further, right. So you can't just build a technology, you also have to help them with distribution. And as we know in crypto, distribution is the name of the game. So how do you help with ephemeral roll ups? The same kind of distribution that Chris is talking about for those games that might build on that scaling olution? Sure. But L2 doesn't give you any significant advantage in that you can do exactly the same thing to help in distribution to open publishing and just stay on the L1. That's my main point.
07:02:38.605 - 07:03:18.311, Speaker A: Gotcha. All right. In the last couple minutes, Chris, what about address scaling solution is better for certain games in UIT in the ecosystem. So actually think ephemeral as a technology is super fascinating for super low latency meeting on chain games and if for putting all of the states on chain. Those are some of the use cases that as ephemeral roll up you can probably serve better. And the optimization on the validator side is probably also done very well. I haven't taken a look at the white list of features recently, but I've heard great things from some of the teams building on top of it.
07:03:18.311 - 07:04:37.093, Speaker A: And I do think that when we are working with some of the Solon native teams, they are obviously more inclined to tap into the liquidity of Solana. And we've actually developed tech to build that interoperability layer just to be inspired by some of the Magic Block features as well. So I think for the fully unchained teams that are native to Solana, maybe some of those games, if a lot of the states are all on chain, then it makes sense to build on Magic Block as well. Andrea, what solutions to or what games do you think would be better built on an L2 than on your scaling solution? I think what L2 temporarily offer is cheaper fees just because they are less congested. And so initially if you want to build up an ecosystem really, really fast, sometimes it's easier to just Deploy on an L2 because you have this sort of isolated environment and you don't have the same transaction activity or congestion that might happen on Sonar. But I don't think that is a good long term solution. So I think that Sonic is doing a really good job in terms of helping from a business point of view, the games and with publishing and with finding players and all of this stuff is very important when it comes to Game Studio.
07:04:37.093 - 07:05:03.839, Speaker A: But I don't think that it's necessarily a technological advantage. It's more of a kind of business and ecosystem play that you guys are offering. We will have a V2. Thank you guys for listening to this debate and hopefully you all play games and if you don't play a game like play video games, it's a nice time. But thank you all for listening to us. And yeah, I don't know if there's another talk right after us or not. Thank you.
07:05:03.839 - 07:05:15.605, Speaker A: Thank you. Thanks. Hello everyone. Thanks. What a day. What a day. What a day.
07:05:15.605 - 07:05:47.753, Speaker A: Thanks to everyone who is here. Thanks to everyone who was listening. This was it for the Right Curve Stage. But I highly, highly urge you to move over to the left curve stage where we will be handing out the Solana Awards. So if you want to see who gets this year's Solana Award, please please move over to the left Curve stage. Don't ask where it is, I don't know, but move over the Solana Awards. Great thing.
07:05:47.753 - 07:06:04.335, Speaker A: You do not want to miss out. Thank you for being here today at the right curve stage. Thanks for listening to my stuff, I guess. And we will see you at the Left Curve Stage 4 tomorrow at 10:30 depending on how long you party. Thank you very much.
