00:00:00.440 - 00:00:02.422, Speaker A: If we can't talk to each other, we're not gonna make it.
00:00:02.518 - 00:00:12.726, Speaker B: Sometimes I feel like I've bitten off more than I can chew. Most of the time, I work in a glass jar and lead a very uneventful life. A face full of glass hurts like hell when you're in it.
00:00:12.790 - 00:00:14.638, Speaker A: That's weird. That glass looks half full to me.
00:00:14.686 - 00:00:15.262, Speaker B: Eating glass.
00:00:15.318 - 00:00:21.434, Speaker A: Eating glass is staring into the abyss. Glass. Who gives a shit about glass? Who the fuck is this?
00:00:22.774 - 00:00:25.914, Speaker B: It's kind of part of our culture to eat glass.
00:00:26.894 - 00:00:29.274, Speaker A: Gotta get some safety goggles next time.
00:00:38.494 - 00:01:03.184, Speaker B: Hey, everybody, and welcome to Chewing glass, the show where we speak to developers building in the Solana ecosystem. Today we have a very special guest, Noah Prince. Noah is an OG Solana builder. He's come in to us through the creation of strata protocol and more recently, doing some really cool stuff with wireless networks and helium. So, Noah, welcome to the show, man. How's it going?
00:01:03.564 - 00:01:05.396, Speaker A: Good, good. How are you?
00:01:05.580 - 00:01:22.584, Speaker B: I'm doing pretty good. It's good to have you here. So, normally, the way we kick this show off is we started from the very beginning just to get to know a little bit about you. So how did you get your start in computer software?
00:01:23.044 - 00:02:03.952, Speaker A: Yeah, so originally, like, all throughout high school, I wanted to be an aerospace engineer. I just thought rocket scientists had a good ring to it. I actually even applied to the Air Force academy, but didn't get in. And then first year there, I'm working on aerospace engineering, and my brother Jordan, he's building this game that teaches people how to program, and he needs a guinea pig. So I start using his game, and I learn how to. I learned how to program Java. And then pretty quickly, I've made my own little AI that just goes and hunts and kills everything and is taking over the game.
00:02:03.952 - 00:02:28.864, Speaker A: And I realize, damn, I think I'm in the wrong profession. So very quickly, I took a CS class, and I took an intro computer engineering class because I figured it was one of those two. And I actually ended up going with computer engineering and then, you know, did an internship at the same company that my brother was at. Really here. A recurring theme of following this guy.
00:02:29.324 - 00:02:33.784, Speaker B: So did you end up getting a master, or did you end up getting. Graduating with a CS degree?
00:02:34.244 - 00:03:01.656, Speaker A: I graduated with a degree in computer engineering, which is. It's pretty close to CS at University of Illinois. It just has a little bit more of the low level stuff. Working on electronics, I chose that because I saw a lot of materials for cs online, but, like, nobody could get me, like, an oscope locally. I had to be in like a, you know, a lab. So I was like, I'm going to do the thing that I need a university lab for. Nice.
00:03:01.720 - 00:03:09.244, Speaker B: So you were like working in c or like c or something like that. Like using that to like move a crane around or something?
00:03:09.624 - 00:03:21.284, Speaker A: Yeah, the, the very intro class of computer engineering is like you build like a robot and stuff, so you're like soldering things, which is pretty cool. I still do that occasionally. I built my own keyboard. Nice.
00:03:21.444 - 00:03:27.744, Speaker B: Yeah, I've actually seen some stuff. You got some haters online with your insanely ergonomic keyboard.
00:03:29.684 - 00:03:32.304, Speaker A: It's just osphot and he wants one now.
00:03:33.604 - 00:04:03.724, Speaker B: Oh, yeah, that's just that one guy. One annoying guy on the Internet. Cool. So you got a computer engineering degree and then say you got an internship. And so like, what's the trajectory from there in your computer software and, like in your, in your software? I know, I know, I know a little bit, like from historically that you did some tradfi stuff, but like, was that out of the gate or did that sort of like, what was the sort of progression there?
00:04:03.884 - 00:04:37.580, Speaker A: Yeah, so I actually kind of started originally as a web dev. I actually went to this company called Yellow based out of Chicago. They do like recruitment tech. I was there for, I think, about nine months before my brother and his friend Chris come to me and they're like, we're doing a startup. You should come along and be employee number one. So that was actually my first brush with startups and I did that for about two years. That was interesting because when you start a startup, you're like, okay, six months, make or break, we're going to know whether or not it's done.
00:04:37.580 - 00:05:10.974, Speaker A: But that's not the way startups work, you know, very much. Two years in, we weren't dead, but we were kind of limping along and didn't really have much traction. So, you know, we decided, well, I decided to call it Jordan decided to call it before I did. And the other guy, he's actually still, he's still grinding on it. But from that, you know, you just level so much. You level up so much in your short time doing a startup, building something unique because you like you, if you can't find the answer to something, you don't have someone to go to. You just got to figure it out.
00:05:10.974 - 00:05:32.694, Speaker A: And so I learned a ton and that's how I got into tradfi. I think out of school, I probably never would have passed the interview. I went to Akuna, and that company is insanely competitive to get into. They interview so many people. But it just happened that a lot of the stuff that I ended up building at that startup kind of taught me what I needed to know to pass that interview.
00:05:33.034 - 00:05:38.738, Speaker B: So you joined that company as I guess, building trading systems.
00:05:38.866 - 00:06:32.392, Speaker A: Yeah, so that I joined. So I kind of made a career transition unintentionally from web dev to like big data infrastructure. So that job was very much like, how do you deal with the huge amounts of data that are coming into the trading system? So there's market data where you've got like the price of every option in the world and the entire book, but there's also the entire trading system. You can think of it like a decentralized network where all of these applications are sending messages to each other and all of those messages that they're sending to each other are also really important. To index, all this stuff has to be indexed really, really, really quickly so that trading can make decisions on it. Then you also have to index it historically so they can go and back test against it. So it's a really interesting problem.
00:06:32.392 - 00:06:57.396, Speaker A: Big data infrastructure in general is super interesting, but especially at these tradfi places where you can't make compromises in terms of latency, leads to a lot of really interesting designs. So I very much enjoyed the kind of systems architecture of it. Everything started with a meeting of the whole team just in front of a whiteboard, drawing out squares. Cool.
00:06:57.500 - 00:07:06.384, Speaker B: So I'm assuming, were you only, were you in c or like what were you, what, what programming language are you using?
00:07:06.884 - 00:07:19.644, Speaker A: I was actually scala. I actually really like Scala. Yeah. Solana is the first time I've used a, like a low level language professionally. Really.
00:07:19.724 - 00:07:35.070, Speaker B: I actually, I didn't realize all the sort of, I thought most of the tradfi and a lot of that stuff just for performance purposes was typically low level. I know a lot of people complain about Java not being as performant as it should be.
00:07:35.262 - 00:08:05.690, Speaker A: Yeah. So the stuff that's on the critical path. So the trading engine was all c and then they even actually have FPGA's where they do hardware. So they're doing crazy shit between Ethernet frames. The level of performance is crazy there. But for the data indexing, basically all of the big data open source tools are JVM based. You've got spark, and so it kind of makes sense to use scala for that.
00:08:05.690 - 00:08:06.066, Speaker A: Yeah.
00:08:06.090 - 00:08:19.608, Speaker B: So you pretty much, that was the majority of your non crypto career was spent in that one company or did you bounce around doing similar things in that industry.
00:08:19.786 - 00:08:48.956, Speaker A: No, it was about eight months at yellow, about two months at that startup with Jordan, and then. Or not two months. Two years at that startup with Jordan, and then another two years at Akuna. So by the time I left there, it's actually, it was kind of hard to convince me to come to Solana. I had recently gotten to the point where I was leading the data infrastructure team, so team lead position. I actually love that company. Like, the work was a lot of fun.
00:08:48.956 - 00:08:55.784, Speaker A: I loved my co workers. But, yeah, I mean, we can get into the story of how I got suckered into Solana.
00:08:56.484 - 00:09:16.576, Speaker B: Yeah. So you're in web two, you're doing all these things. Like, were you actually paying attention to any form of crypto at that time? Like, bitcoin trading? Were you sort of just like, that's not for me. Like, that seems, like pretty weird, or were you actually involved in it at all?
00:09:16.720 - 00:09:36.364, Speaker A: Yeah, I mean, Akuna had a, like, a crypto trading team, and so we, you know, we helped out that, that desk a lot. And, you know, often their needs were very different than the, you know, traditional exchange path, I would say. But I hadn't, I hadn't even, like, created a wallet or done anything like that.
00:09:36.784 - 00:10:15.412, Speaker B: Okay, so now let's. Let's jump ahead. Like, you're actually probably the first guest that I've ever had that, like, was not, like, hasn't really touched crypto at all, which is kind of pretty surprising. I think we're like twelve episodes in, and then here you are today, just, like, completely immersed in all this stuff. So. So let's go ahead and get this started and start talking about how you got your intro into building in crypto. You are a Solana native developer, right? You never built on ethereum.
00:10:15.412 - 00:10:20.812, Speaker B: You never built on the other l two s or anything. You just came, you jumped straight, straight into Solana.
00:10:20.948 - 00:10:26.304, Speaker A: Oh, yeah, yeah. I actually have a funny story about my first experience with Ethereum.
00:10:27.244 - 00:10:28.532, Speaker B: Yeah, let's hear it.
00:10:28.708 - 00:10:52.244, Speaker A: Yeah. So I was working at Akuna leading the data infrastructure team. Loving it. My brother goes from Citadel to Solana and he tells me about it, and it's cool. And I'm curious about it because I'd never really looked that much into blockchain. I'd never looked that seriously at it. And of course, the first thing he tells me is, you should come here now.
00:10:52.244 - 00:11:03.914, Speaker A: He's like, there's some real stuff happening here. You need to leave tradfi and come here. Which, if you know Jordan, that's him. Like, when he believes in something. He goes hard.
00:11:05.774 - 00:11:11.014, Speaker B: But I was like, no, he wasn't going to let it go until you quit your job and came over there.
00:11:11.174 - 00:11:38.078, Speaker A: Yeah. And indeed he didn't. And he kept asking, and, like, you know, Solana kept heating up, and I kept saying no. And finally, I, you know, so data infra was, as you said, like, you know, JVM is not that performant. Datainfra was starting to go towards rust because, you know, the, the memory efficiency processing that much data is actually useful. So I was like, all right, um, you know, I learned a lot of languages in my career. I kind of like to just learn them for fun.
00:11:38.078 - 00:12:11.124, Speaker A: Cause I feel like you, you know, you kind of learn a different viewpoint every single time. Um, so I was like, sure, I'll, like, I'll build something on Solana so that I can learn rust. I'll do, like, a. A fun little in and out 20 minutes adventure weekend project. Um, and so at that time, my brother had started. Him and Bartosz were, like, talking about this thing called bit clout, which had blown up at the time, which was social tokens and the ability to basically buy someone on. Everybody remembers where they were when that happened.
00:12:11.124 - 00:12:39.184, Speaker A: Yeah. So I was looking at it, and I was like, they have this monospace Twitter. And I was like, nobody's going to want to use their twitter. But, like, the social token idea was kind of cool. It's like, oh, it's like an interesting way to try and monetize. So I thought I would build that thing on Solana because I figured there was no point in it being its own blockchain. I thought I would build it on Solana and I would just make it as, like, a chrome extension pop up on top of Twitter.
00:12:39.184 - 00:13:07.880, Speaker A: And as I'm building this, I show it to Jordan, and then Jordan shows it to some other people, and then they tell me to put it into the Solana summer hackathon. And then, like, before I know it, I'm like, somehow I'm working two jobs. Like, I work 40, 50 hours a week at a cunha. I come home, I work another 40 hours doing this side project, and the side project just starts to feel more real than the main job. And so I. At a certain point, just.
00:13:07.952 - 00:13:14.604, Speaker B: And Metaplex was the thing at this point in time, though, right? Like, Metaplex was, like, in its infancy whenever you started your little project.
00:13:15.274 - 00:13:30.274, Speaker A: Yeah. So Metaplex was token metadata. The pull request for token metadata was actually how I learned to program Solana. Okay. My brother was like, here's a pull request of something I just did. Read it. And that's how you're going to learn how to program on Solana.
00:13:30.274 - 00:13:56.312, Speaker A: This is like, before anchor, you know, this is like the OG, like balancing a checkbook style. Solana, you get the accounts in the wrong order. Sorry about you. And it was hard, man. Like, back then, it really was like chewing glass. I, you know, it was like three weeks of working, like 80 hours because I was doing, you know, both of these projects, and I actually almost called it quits. I was like, this programming model is so effing hard.
00:13:56.312 - 00:14:30.034, Speaker A: I am done. Like, this is terrible. And my wife, actually, ever the fan of sunk cost fallacy, was like, you've already, like, you already put this much time into it. Like, we've been fighting because, like, you're never, like, you're never, you know, available. You need to just go through with it. And so literally, like, that same week, I kind of got past the hump where, I don't know, I guess I, like, saw the light and truly understood Solana's programming model. And that week, I, like, rewrote our entire smart contract in like two days.
00:14:30.034 - 00:14:33.510, Speaker A: And it was. Since then it's just been smooth sailing.
00:14:33.582 - 00:14:37.320, Speaker B: Just for the, just for the audience. We're talking about strata protocol, right?
00:14:37.502 - 00:14:56.812, Speaker A: Yeah. Well, what was then kind of wombo, which was like, social tokens. We ended up pivoting away from social tokens because we realized, like, oh, we actually created some really cool generic tools to launch tokens because that's what a social token is. Someone needs to be able to click a button and launch a token and not have to think about it.
00:14:56.908 - 00:14:59.620, Speaker B: I forgot about wumbo. I really did.
00:14:59.732 - 00:15:28.744, Speaker A: Yeah. I mean, bitcloud kind of, you know, all the social token things kind of died out. And I think it's because NFTs sort of took that. NFTs ended up being the thing that you use to leverage social movements. Having that personalization attached to it was, I think, key in the social movement that a token just couldn't do. Right. Or at least it didn't do as well.
00:15:28.744 - 00:15:35.684, Speaker A: But people are still launching tokens and so strata protocol, honestly, strata protocol is still being used by people to launch.
00:15:35.724 - 00:15:45.020, Speaker B: Tokens, fully immutable at this point. I think I remember you saying that you locked down that program a while ago.
00:15:45.212 - 00:16:33.784, Speaker A: Yeah, it went like six months or so without any kind of changes to it, so figured it was time to throw out the keys, which I honestly, I think a lot more people should do. The only reason that I'm using squads right now is because it's immutable. Like, I know that that multisig is only accessible by the people that are in the multisig. There's no, like, update authority that can rug that from me. But, yeah, I mean, that was my first experience with crypto. It was, you know, I actually really, really love fire hoses of information. Like, my favorite part often of any new job is like, kind of getting a little bit of like a, like a, it's basically like a college degree in whatever that job needs, right? So, like, you know, when I first went to fintech, I had to learn all about options trading.
00:16:33.784 - 00:17:13.846, Speaker A: And when I came to crypto, I had to learn all about crypto, and it's, like, very, very dense. And how do you create a wallet? How do you create a hardware wallet? But, yeah, I mean, my first experience with ETH was, again, on this learning path. I bought some USDC on FTX. Hate to see it. And I wanted to send it to my ledger. And I didn't know at the time that USDC was available both on Sol and ETH. So I copied the address from my ledger, which was an ETH address, and then I sent, like, $20 worth to that.
00:17:13.846 - 00:17:48.182, Speaker A: And then I realized, like, wait, how do I get it off? Because I messed up. It's ETH, not Sol. And so then I had to go and transfer my $20 off back to FTX, but ETH was going to charge me, like, $10 to send my $20, and it was going to take 20 minutes. I was just like, and at this point, the only thing I had ever used was Solana. Like, I, you know, like, less than a cent transaction fees and things go through in, like, 5 seconds. And I had to spend $10 to send dollar 20, and it took ten minutes. And I was so upset.
00:17:48.182 - 00:17:57.834, Speaker A: I was like, I've been rugged. This is terrible, but I digress. Now I figured it out.
00:17:58.614 - 00:18:48.996, Speaker B: So I want to talk a little bit more about this sort of wumbo thing. And you said you had built this. You were sort of basically rebuilding bitcout on Solana. And along the way, you ended up building some tools, and you mentioned tools where people are launching tokens on Solana. Can you give us a little more information on what strata actually eventually evolved into? And, like, what was the sort of, like, I remember whenever that that transition happened, and you, like, went, like, full blown strata, and you were, like, constantly trying to get people to use it and, like, to make their lives easier, and I'm pretty sure safer. But, like, what did strata like, become, like, at the end of the day, like, what was the. Or what was.
00:18:48.996 - 00:18:53.146, Speaker B: What was the plan? And, like, what was the actual final result that you ended up with?
00:18:53.300 - 00:20:22.584, Speaker A: Yeah, it's funny because we, you know, we experimented with a lot of different business models. We probably shipped like five separate products in the span of, like, you know, eight months or so. What strata eventually became was just a place to go and like, okay, how do I actually create a token? How do I make sure that it shows up in Phantom Soulflare? All of the wallets, which ended up actually taking. Doing a lot of work with Metaplex and the wallets to make sure that we weren't using this crazy token list, GitHub repo, which is a story in and of itself. And then once you actually have this token, how do you initially offer it to people? How do you bootstrap liquidity for a token? Because your goal is eventually you want to have an oracle or pool or something set up with your token where you can swap soul for your token. But how do you get there? We ended up building this really, really cool auction mechanism called an LBC, just loosely based off of an LBP from Ethereum. Then not that many people were launching tokens, but a ton of people were launching nfts and they kept crashing the network because the network at that time didn't have fee markets or any kind of protection against multiple people trying to go for a single resource.
00:20:22.584 - 00:20:40.944, Speaker A: And so we actually took this auction mechanism and we put it in front of NFT mints so that the more people minted, the more the price goes up. And when people stop minting, the price starts falling. So it kind of created like a natural, I guess you could call it like a rate limiter on the mint, like a financial rate limiter.
00:20:42.934 - 00:20:48.714, Speaker B: At this. Like, that was sort of like the final, like, product that you landed on.
00:20:49.174 - 00:21:19.650, Speaker A: Yeah, we kind of, you know, while we were in talks with helium, kind of the other route that we would have gone if we didn't go acquisition was that we were going to build like a fully on chain token graded group chat. And we hit. We actually did build it. It's still in the strata repo. Somebody can go and use it if they want. But honestly, dialect is doing that way better than we ever would have. I mean, I don't know that dialect's on chain, but I don't know for that scale that you necessarily want it to be on chain anyway.
00:21:19.842 - 00:21:45.498, Speaker B: Yeah, like, dialect is crushing it right now. They went product first, and I think everybody can say they love that. I like that we're seeing a new next generation of products, like squads and dialect and so many other cool things are popping up. We went through a time where everybody was sort of building the same shit over and over again. And, like, we're starting to see, like, that, like, evolution. It's not. I feel like it's like, right on the cusp of more people.
00:21:45.498 - 00:22:12.566, Speaker B: Like, I like, like, Shaq is building social legos via gum, which is gonna be really cool once that starts to gain more adoption. So I just love seeing this. Not, like, not the same. Like, I love defi, love nfts, but I also love seeing people start to do new things. And we're. Solana's getting there and moving way faster than most other, other blockchains right now. So it's super exciting.
00:22:12.566 - 00:22:18.594, Speaker B: I think this, over the course of the next six to twelve months, we're going to start to see even.
00:22:20.534 - 00:22:20.894, Speaker A: More.
00:22:20.934 - 00:22:59.654, Speaker B: Innovation and way cooler apps. You mentioned this acquisition, and I was actually, before I get to that acquisition part, I had a couple other questions. Just because we've been talking about this, and it's like, you've already sort of described your experience building on Solana, like, in those early days. How does that, like, it sucked. You had a really bad time. You wanted to bang your head against the wall and basically quit, but you stuck around. Like, what's the difference? Like, just sort of, like, in, like, between then and now, because I recently saw you talking about helios and some other things, and then we obviously have anchor.
00:22:59.654 - 00:23:05.814, Speaker B: Like, what's, like, what's the increase in productivity compared to those early days versus now?
00:23:06.594 - 00:23:40.244, Speaker A: Now it's much closer to solving the actual problem. We called it chewing glass back in the day. And that's like, my GitHub username is literally chewing glass, because the things that you dealt with, they weren't hard technical problems, they were pedantic. It was like, I didn't pass the accounts in the right order, and so the transaction failed, but it didn't tell me why it failed. It just, like said, it failed. And you had to type the same piece of code five times. It typed the same accounts list out five times.
00:23:40.244 - 00:24:24.908, Speaker A: And God forbid you had a signature wrong. It would just tell you that signature verification failed, not which one. It was chewing glass, because it wasn't that it was hard. It was just so, so annoying. It took discipline. Now the chewing glass has been pushed to the outer fringes, where you're working on new stuff like compression. But really, for the most part, the actual core of writing a smart contract is do you or do you not understand Solana's accounts model? Because it really is actually a really reasonable transition for me coming from data infrastructure to Solana, because all building smart contracts is.
00:24:24.908 - 00:25:02.004, Speaker A: Is building a system of microservices that have a reasonable data model that is shared between them. When you start thinking of Solana like a NoSQL database, suddenly this stuff starts to feel a lot more familiar to, like, web two land. And so I also start my Solana design on a whiteboard. Like, I started my data infra design, but now, like, you know, anchor has made it so disgustingly easy to spit out smart contracts that, like, I don't spend as much of my time as I would like to writing smart contracts. Most of the time is spent building stuff around the fringes. Like the smart contract. It needs a user interface.
00:25:02.004 - 00:25:08.496, Speaker A: You need actual web two services. Sometimes, like in the case of helium, where you have oracles, more react than.
00:25:08.520 - 00:25:09.416, Speaker B: You want to write.
00:25:09.520 - 00:25:39.500, Speaker A: Oh, God. I know. It's hilarious because so much of Solana is, like, back end engineers forced to write reactors, and then you have, like, front end engineers forced to write smart contracts. You know, I actually think the transition is. I think it's easier for front end engineers to learn how to write smart contracts than it is for back end engineers to learn how to write good Uis. It's just like, so many front end engineers are, like, scared. They're like, I can't do that.
00:25:39.500 - 00:25:57.172, Speaker A: I can't touch rust. I'm sorry, but, like, you totally can, and it's not that hard with anchor. I mean, like, even the tools that you see where you can, like, now write smart contracts with Python, like, the python, the way that it translates to the rust, you can tell, like, the rust is not that bad.
00:25:57.348 - 00:26:46.756, Speaker B: Yeah, I mean, I have these conversations with everybody, and usually the question is, what was harder to learn, rust or just Solana? And the answer is typically Solana, like, getting down into accounts, model, PDA's and all these things are typically, like, most people, once they get past the hump of, like, looking at, like, the syntax of rust and being like, what the hell is this foreign language? And then just, like, actually realizing that they can do it, like, Solana, especially people coming from ethereum, because people ask me how you transition from Ethereum to Solana, and usually my response is, forget everything, you know, and then start there. Um, because, like, trying to make those side by side comparisons is not going to make it. You're going to have a bad time.
00:26:46.940 - 00:27:13.856, Speaker A: Yeah, I think for me, the best comparison I've had with people is like, learning Solana is like the first time that you go from. Most people learn object oriented programming first. It's like when you go from object oriented to functional programming, and the very first time you start with functional programming, you're like, what is this? This makes no sense. I don't understand how it's organized. And then after a few weeks, you're like, okay, this is better. Some of these patterns are really awesome. I love the immutability.
00:27:13.856 - 00:27:34.694, Speaker A: I love how easy it is to parallelize things. Solidity to Solana is the exact same thing. It's like, okay, the model is different. There are way more accounts, but because of that, it's way more parallelizable and way more performant. And you just have to kind of learn this different model. It's a little bit alien at first, but once you get it, it's great.
00:27:35.314 - 00:28:09.410, Speaker B: Yeah, I mean, you hear it all the time. Like, people, like, even people that are low level engineers will come into Solana and it's not even on the Solana side. It's like, most c engineers do not, like rust for at least the first three months, and then you check back in on them and they're like, ah, this is pretty okay. I don't hate it anymore. And then it usually sort of progresses from there. So I want to jump back to another part that you had mentioned, and you were talking about strata and, like, your sort of transition, like, to helium. Like, so I'm a little.
00:28:09.410 - 00:28:22.506, Speaker B: I was a little confused, actually. What happened at that point? Like, I didn't know if you had got acquired, like, or, like, what happened? Like, what was the situation? Like with, like, you getting connected with helium and did you get acquired by them?
00:28:22.650 - 00:28:48.462, Speaker A: Yeah, yeah, acquired. Aqua hired. It's somewhere in between. So we. We actually, over the course of strata, had built a lot of the things that helium needed for their hit 51. So, like, our bonding curves are effectively what they needed for their treasury. So this ability to take sub dao tokens and swap them back through the main dao tokens.
00:28:48.462 - 00:29:22.332, Speaker A: And we had also done some work with grape on Solana to kind of split their dao into many subdaos. So we already had a little bit of experience, but, like, obviously the whole of helium is much, much larger than that, really. Helium needed a team that has shipped things on Solana and could just hit the ground running. Right. Like, they wanted to get this migration done. They didn't want to spend the time trying to go through the learning curve with Solana. So it was just kind of a natural match.
00:29:22.332 - 00:30:02.574, Speaker A: We were at the point with strata where like, yeah, it's cool. It's a great tool. It's open source. People are launching tokens, but it was the start of a bear market and not that many people were launching tokens. So we were at the point of pivoting. We were like, okay, what if we did token gated group chat? We're back to the drawing board. And at that point is like, okay, so do we go back to the drawing board and try to come up with something completely new, or do we take this thing that exists that's already awesome? Helium is really, really cool, and do we just ship it through? And for me, I was ready to go.
00:30:02.574 - 00:30:33.374, Speaker A: Being a founder is extremely hard. I found out the hard way that I am much better at tech than I am at being a CEO. And so this ability to go right back into some hard tech problems that have really large impact was a pretty attractive thing to do. So, you know, we ended up doing what is effectively an acquihire with some, you know, stuff taken from the open source strata repo. But we're not using any of those contracts.
00:30:34.074 - 00:30:59.914, Speaker B: Yeah, like, you hit on a point talking about, like, helium wanting to get some people from Solana, like, to hit the ground running. And, like, they had their own. Doing their own blockchain thing, and they were sort of just like, you know what? I saw it on the saga launch, and it was basically like, you know what? Screw that. Like, let's. Let's. Let's move to a, like, a performant blockchain, and we'll stick to the wireless stuff that we know how to do and focus our time on that. And then one of those things sounds like they.
00:30:59.914 - 00:31:22.152, Speaker B: They were like, you were hired to be like, hey, we got this guy. He's already crushing it, so, like, let's bring him on board. The one interesting piece that I just, like, keep seeing anatoly talk about recently is that how, like, every hotspot on helium is an NFT and my brain's probably a little too small to understand, like, what that actually even means, but, like, I don't quite get it.
00:31:22.248 - 00:32:07.428, Speaker A: Yeah, so it's a little bit of a shift of thinking. I feel like, you know, when people hear their word nft, they're like, oh, okay, like a jpeg, right? Like, I'm buying a piece of art, right? But really, like, what an NFT is at its core is this thing that indicates that you own something, right? Like, it points back to your wallet and it cleanly shows up in your wallet. And that's exactly the trait that we desire for, like a physical item in this world. Right? Like, I own a hotspot. Makes sense that that hotspot should show up in my wallet and that I should own it. So it just made sense for us to represent the hotspots as nfTs. But that's basically where the similarities between your typical NFT collection drop.
00:32:07.428 - 00:32:19.104, Speaker A: Like everything else, these things are pretty advanced NFTs where there's a bunch of on chain data associated with them and they're accumulating rewards for mining and stuff like that. They're also compressed.
00:32:20.024 - 00:32:32.008, Speaker B: So what are you personally doing? Like your personal focus right now or not even just right now? What have you been doing at helium? What sort of cool stuff have you been up to?
00:32:32.136 - 00:33:13.734, Speaker A: Yeah, so myself and team, so me, Brian, Thor, and it's actually a really small team. There's just three of us working on the smart contracts. Helium foundation has much more people that are working on things like the Explorer, but it's a small team working on the smart contracts. And we've shipped out pretty much the entire. Well, not pretty much the entire scaffolding of how helium works on Solana in about six months. And this includes things that were not on helium to begin with. So this idea of subdals and a treasury between them, this idea of tokens flowing into these treasuries, all of that is fresh on Solana.
00:33:13.734 - 00:34:01.044, Speaker A: We had to get really creative to ship this much this fast. I think it's like ten different contracts. I've been trying to make tweet threads occasionally of some of the efficiency gains we've got. The very first thing that I did when I started working on this was I went into anchor and contributed this ability to do custom account resolvers. And resolve has one relationship, so that I could completely nuke all of the account munging crap that you have to do, because we save so much time by not having to write thousands of lines of SDKs. Just like, I can't understate enough how much time we save by doing that. But then we've had a bunch of other interesting problems since helium.
00:34:01.044 - 00:34:56.164, Speaker A: I mean, one is, helium is huge, right? And typically, when you write a smart contract, you don't go from zero to 100 immediately. Your TVL kind of slowly builds up with helium. We're going from zero to an entire network with hundreds of thousands of users just using it. So we put in a lot of security features and backstops like our circuit breakers to make sure that if something goes wrong, not everything disappears. Another hard problem to solve was starting to lose my voice. Another hard problem to solve was just the sheer amount of state. How do you take all that state from one blockchain and dump it on another blockchain without absolutely spamming the crap out of it? So we found a good way to do that as well, which I'll probably, if I have time, maybe by the time this podcast comes out, that tweet thread will be out.
00:34:58.364 - 00:35:20.624, Speaker B: So just because we've been talking about helium, and I think a lot of the listeners might know what helium is, but maybe it's worth just retroactively sort of describing the grand vision for helium in the simplest way possible, just like, what is helium and what is it going to bring to this space?
00:35:21.364 - 00:36:24.364, Speaker A: Yeah, so the idea of helium is to basically be the people's wireless network. So if you think, like, traditional wireless network, let's take 5g, right? Verizon goes and they buy up land to put up 5g towers. Well, I guess 5g isn't all towers, but they're going and putting up 5g hotspots. The idea of helium is what if you just allow people to do that? So people buy hotspots, they put them on their house, and then for providing network, they mine tokens, and to use the network, you burn tokens. And so it's this nice little closed ecosystem where the people who are using the network are paying for it, and the people who are providing the network get paid for it. And by letting people build the network, it's able to get built much more quickly and more effectively and kind of get into areas that traditional providers wouldn't have otherwise been able to do, which is really important when you're talking about things like 5g that don't have very much range. Right.
00:36:24.364 - 00:36:45.814, Speaker A: Like, it's easy for Verizon to go put up a giant 4g tower and cover miles of territory, but 5g goes like 400 meters. So helium is kind of helping build these networks, but it's also a blockchain core project because the token incentivization. Yeah.
00:36:45.854 - 00:36:53.794, Speaker B: So, I mean, like, that's crazy interesting. Am I able to go out and buy a hotspot right now?
00:36:54.094 - 00:37:06.806, Speaker A: Yeah. So there are two networks on helium right now. One of them is Iot, which is a signal called lower one. It has like a. I think it has like a crazy high range. Like it's hundreds of miles. Well, not hundreds.
00:37:06.806 - 00:37:39.890, Speaker A: I think it's like 100 miles. It's really good for sensors that don't eat up very much battery life. So you can put out, like, a temperature sensor or something on a farm and have it last for ten years. Those hotspots are way cheaper, so you can get one of those for, like, I think, less than $400. Now, the are, you can only set them up in the US right now because there's some regulations around it and they're, they're a bit more expensive. But, yeah, you can just. Anybody can go, uh, you know, get one and set it up.
00:37:39.890 - 00:37:40.906, Speaker A: That's awesome.
00:37:41.010 - 00:38:18.616, Speaker B: Yeah, I mean, like I said, I saw it being talked about, uh, recently, and just, like, hearing the vision of it, like, in the beginning, it's just like, yeah, helium's coming to Solana. This is awesome. And then, like, you really start to dive into actually what's being built here. And, like, it's like, one of them. It's one of the most exciting things for me right now to know that these other sorts of wild infrastructure use cases that are only possible on Solana are coming here. So it's super cool to see. So, moving beyond helium, there's always sort of a few questions I like to ask as we wrap up the show.
00:38:18.616 - 00:38:34.024, Speaker B: And the very first one, and I know you've been building on Solana for a while now, is, like, what still sucks about building on Solana? You can pick one, you can pick two, whatever. But what really still sucks to build on Solana?
00:38:34.184 - 00:39:08.874, Speaker A: Oh, this is a hard one, because my personal philosophy is, every time that I find something that sucks, I just find a way to fix it and then give that back. Right. Like, I was annoyed as hell with the account munching, and so I made a solution, I guess, actually, on that note. So I made a solution. I made it in typescript. Now, anytime that I want to go and write something in rust and have it hit my smart contracts, it sucks. I feel like I've gone back to the Stone Age because I don't have my magical account resolvers.
00:39:08.874 - 00:39:43.868, Speaker A: So really what we need is some kind of thing that can language agnostic, go look at an IDL and resolve all of the accounts. And really, there's no reason that you couldn't build something that goes through a simulation of your smart contract, figures out what accounts it's going to need, and then passes those in. Like, I think that's Solana's biggest UX developer. Ux problem has always been the fact that you have to go and fetch all of these accounts and pass them in. Right?
00:39:43.956 - 00:40:03.780, Speaker B: Yeah. And, I mean, I don't know technically enough of, like, what kind of lift that is or how possible it is or whatever, but it's something that we've obviously been hearing for a very long time. And if it's possible to solve, then, then somebody's eventually going to do it. It's just not everybody's sort of as altruistic as you are.
00:40:03.932 - 00:40:20.852, Speaker A: I don't think other Noah is working on that, I think, actually. So with, like, the interface that we were throwing around in Chicago, I'm pretty sure they are actually trying to build out a dynamic account resolution thing. Just these things take time. Like, it's a big technical lift.
00:40:20.988 - 00:40:45.644, Speaker B: Yeah, I mean, but, like, I remember, like, in the earliest days when all we have was the core docs and people were like, nobody will ever learn rust. Nobody will ever do that. Who ever, like, build an indexer because nobody uses Solana. And like, that. Nobody will ever. Stuff always comes true eventually. So whatever people were currently saying, that'll never happen on Solana, it's going to, at least so far.
00:40:45.644 - 00:41:10.884, Speaker B: Like, historically, that's the way that it's worked out. But now that we talked about, like, what you say, like, sort of sucks on Solana, like, what, what is, what are the benefits of, for building on Solana? Not necessarily, like, we, not about the speed and all that good stuff, but I'm talking about, like, what, what is good about the developer experience of Solana, in your opinion? Maybe there are no, man, maybe there are some.
00:41:11.704 - 00:41:47.440, Speaker A: I can, I can go for ages on this one. The composability, like, jesus Christ. Like, the amount that we built here in six months would not have been possible with a team of three people virtually anywhere else, just because the amount of tools there are, like clockwork, amazing. Switchboard, amazing. Helios has tons of amazing tools. So, like, your ability to build things fast on Solana is honestly mostly limited by your ability to troll Twitter and find what cool projects are to use. And then, yeah, I mean, obviously the speed is great.
00:41:47.440 - 00:42:17.164, Speaker A: I was running a load test yesterday for the helium migration, and it just, like, it just, it feels so good to sit there watching the transactions tick up, like you're blasting hundreds of transactions a second. And the things like, yeah, it's fine. This is cool. And you didn't even spend that much soul to send that many transactions. It's still, it doesn't get old. Like sending, click, even clicking send to soul and having it go in like 1 second still hasn't gotten old for me.
00:42:18.344 - 00:43:06.742, Speaker B: Yeah. Like, as we're, as you're talking and talking about all those things that you just mentioned. All those things that things make building on Solana easier is, like, one thing I think about, because I'm always thinking about, like, how that gets improved. And obviously we have Jacob and the Devrel team that are working on, like, different things, like content. And then you have Noah and these other guys working on tooling, and there's like, so much like, and then we have third parties like Myrt and all these other guys that are building things to make life easier for developers. It makes me think that, like, one more, one challenging piece is like, as a newbie coming into the Solana ecosystem, and all I see is this content about, like, how to write a rust smart contract or how to do this. What is not really truly discoverable or understandable is like, what is the stack? Like, like, all those things you just mentioned.
00:43:06.742 - 00:43:33.760, Speaker B: Not everybody knows that you, like you. Like you said you have to suss it out on Twitter, like, and ask about it. But not everybody's gonna do that. If we want to gain mass developer adoption, that has to be, like, in your face somewhere. Like, for me to be like, oh, these are the tools. And that's basically like my Solana tool belt. Otherwise, you just hang out on Twitter until eventually, like, you make a thread and somebody realizes that, like, that exists.
00:43:33.760 - 00:43:42.616, Speaker B: And they've been here for a year and a half and had no idea, you know what I mean? Like, I think some of those are some of the more. Discoverability basically is a really important thing.
00:43:42.800 - 00:44:26.180, Speaker A: Yeah, I think so. You know, think back to, like, when I learned anything that's not Solana, how I go and figure out what tools there are. Usually there's like a awesome Solana GitHub page. I think somebody tried to do that at some point for Solana, but just because of the sheer pace of things that are getting built, it's very hard to keep something like that organized and keep something like that relevant. And also, how do you break it down? Because there's so many facets. Like, are you building something in Defi, are you building something in DPin? Like, it's something like, that could be really useful, but it's probably, you need a gardener. Like, you need someone to garden that.
00:44:26.212 - 00:44:50.336, Speaker B: So it is. So it is. It's super hard. There's multiple awesome Solana lists. Soul dev is actually doing this. They're sort of, they were like, they saved my life in the early days when I was the only, like, one of the, like, only two people in Devrel. I think it was like, maybe it was just me or actually Jacob and Donnie were here at the time, but, like, we didn't have the capacity to build out our own website.
00:44:50.336 - 00:45:31.288, Speaker B: And Soldev became this aggregator. You could go submit your own content, but eventually over time, like, we knew this. Like you said as a gardener, some of that content becomes outdated and, like, it's not like ethereum where, like, things are being, like, updated, like, every, like 5 seconds. Like, shit happens so quickly. New versions, like, how many candy machines are we gonna have that stuff, like, keeping up to date with that and keeping it relevant is hard. And also, like, when there's so much of it and it's not perfectly structured, it's overwhelming and somebody will go there as a developer and be like, fuck that, that's too much stuff. And I don't even know where to begin here.
00:45:31.288 - 00:45:46.734, Speaker B: So keeping that curated list of the best of the best stacks, eventually those things start to become apparent. But right now, I still think it's like, it's a little hard for new people to know what is the right thing for them to be using.
00:45:47.234 - 00:46:47.524, Speaker A: Yeah, that actually brings up another interesting thing of what Solana can do better, which is like, God, I mean, my brother started this, but we have such a, such a ship fast and break things mentality here, which is great. We ship a ton of stuff and Solana moves faster than any other chain, but it also breaks like no other. And, yeah, and not just like the chain itself. Right. But, like, you know, projects that you're building off of it. Like, I've kind of come to the expectation that when I try to integrate something new, it's going to be a little bit of sandpaper before it grinds into place. And then, like, everybody's shipping so fast that, like, you know, you build against the v two and all of a sudden the v three is out and, like, you know, it, it's hard, right, because there's, you want to have tons of change and tons of advancement, but also, you know, we lose the stability when we sprint so fast.
00:46:48.104 - 00:47:35.454, Speaker B: Yeah, it's a double edged sword, but, like, I'm in favor of continuing to keep pushing and not necessarily breaking stuff, but continue innovating quickly, even if it makes things outdated very quickly, is like, hopefully there's some backwards compatibility built in so it doesn't break shit. But anyways, we're about at the end of the show, I always ask one final question, and that final question is, what advice do you give to future devs building on Solana? Maybe they're sitting there on the sidelines wondering if they should get in. Maybe they're just getting started. But what advice do you have to them to sort of just inspire them to get to the next level? You have made a huge jump in transition very quickly. What, like, what advice would you give these people?
00:47:35.834 - 00:48:09.014, Speaker A: Yeah, so the first thing is like your learning phase. Um, well, I mean, you're always going to be learning, but read other people's code. Like, I learned the entirety of my original knowledge of how to program on Solana by reading my brother's pull request. Like, it's, the code is approachable. Like, once you, once you decide you're going to learn, it just goes, go read the SPL token code base and, like, understand how it worked. It's not that complicated, you'll realize. And, like, once you understand SPl token, that's like how 90% of the stuff on Solana works.
00:48:09.014 - 00:48:31.846, Speaker A: Go read SPl token metadata. Like, read other people's code. Read other people's anchors. Code base, anchor code bases. That's a really, really great way to learn. But in kind of tandem with this, you need to build something. Like, having something else to look at is really, really good for learning, but only if you're leveraging it to build something.
00:48:31.846 - 00:48:59.802, Speaker A: And you need to build something new. So you can always dip your foot in with a tutorial that somebody else has written. But when you actually want to learn something, you need to build something completely new that no one else has built before. Like my example, right when I was like, I'm going to try and build bit cloud on Solana. No one's done that yet. That is where the true learning is, is when you push yourself to the edge and you force yourself to keep going. Um, and Solana has plenty of mentors and plenty of people that are willing to help you.
00:48:59.802 - 00:49:08.094, Speaker A: And now there's a stack overflow. Like, the ecosystem has gotten much more helpful. But, like, the best way to learn is to force yourself to chew the glass.
00:49:08.474 - 00:49:30.120, Speaker B: Yeah, man, it's great advice. Um, and you're not the first person to give a version of that because. And, like, when everybody says the same thing, then, like, then you're probably, they know when there's smoke, there's fire. So I think there's a ton of truth to that. Well, thanks, man. Noah, it was a pleasure to have you. It's been a long time coming, so thanks for joining and I'll see you later, man.
00:49:30.312 - 00:49:32.224, Speaker A: Cheers. Thanks for having me. See ya.
