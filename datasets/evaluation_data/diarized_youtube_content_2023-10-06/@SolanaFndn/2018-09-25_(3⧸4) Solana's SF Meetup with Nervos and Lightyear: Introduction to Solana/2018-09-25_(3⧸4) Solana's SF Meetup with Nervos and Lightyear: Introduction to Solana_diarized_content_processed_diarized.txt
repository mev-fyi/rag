00:00:08.360 - 00:00:42.244, Speaker A: Hey everyone, I'm Anatoly. I'm the founder CEO of Solana, and we're building the world's fastest blockchain. So if you wanted to build a decentralized Uber or Lyft on top of unscalable Ethereum, you're screwed, full stop. So this was Vitalik talking about his own project, ethereum. I can say that you can actually build a decentralized Uber and Lyft on the project I started. Solana has 710,000 transactions per second on a one gigabit network. As its theoretical maximum throughput.
00:00:42.244 - 00:01:41.234, Speaker A: Nasdaq can do 500,000 transactions messages per second. Google serves about 350,000 ads per second. Visa does a peak capacity, 65,000 payments per second, and Ethereum and bitcoin do about 14 and seven. So there's a kind of orders of magnitude difference between current solutions and what is actually being deployed in the world today and what we can accomplish. So how we're actually able to do this, we have a technical innovation not actually in the consensus layer, we're using proof of stake, but in the ledger data structure itself. This is a way to keep track of time in a distributed network before consensus, and that enables optimistic and currency control and a bunch of other decentralized distributed systems optimizations. And I can get into the details of those, but we can do kind of a longer deep dive on that later.
00:01:41.234 - 00:02:28.046, Speaker A: But under the hood, it's really proof of stake with the permissionless clock that's available before consensus. So our network is only bound by bandwidth. So in a one gigabit network, if you can fit your transaction in 176 bytes, that gives you 710,000 transactions per second. On a 40 gigabit network, that's 28 million transactions per second. So how are we actually able to do this? Our implementation, it does no sharding. So like what that means really is that our solution is limited by the slowest node in the supermajority. How do we actually make that fast? And coming from the semiconductor industry, we're borrowing a design that's very common to cpu's.
00:02:28.046 - 00:03:19.070, Speaker A: It's called pipelining. So we've broken up this whole path of processing transactions into a bunch of pipeline stages, and each stage is parallelized. And how we're parallelizing it is we're bashing all this data and sending it to GPU's. So your $700 1080 Ti has 4000 CUDA cores, that is 4000 cores that are all able to do elliptic curve verification, they're all able to process bytecode, they're all able to execute smart contracts if you just use them. And this is where our expertise comes in. We're actually breaking up the data that's coming up from the network, sending it in large chunks of memory directly to the GPU's and processing all in parallel. So because of this massive parallelization, we're limited by the slowest thing.
00:03:19.070 - 00:03:57.704, Speaker A: We're executing in that one batch for that stage of the pipeline. So we're actually able to shove a lot of data through. Really it's not that much. One gigabit is, well, seems like a lot. Your interfaces between memory and your cpu's can do far, far more than that, you just have to use them. So the second problem is really networking. How do you, when you have one gigabit in and one gigabit out, how do you distribute this amount of data to all the nodes in the network? Imagine if I was getting transactions from everyone in the world and I had to send all the same data to each one of you and replicate it as fast as possible.
00:03:57.704 - 00:04:58.664, Speaker A: The technique we're using, it's called bandwidth multiplication. It was made famous by Bittorrent, and effectively what that means is I send each one of you a piece, kind of like these arrows are pointing, and then you guys send each other pieces of data and between all of you you replicate the full state. And we can use erasure coding to kind of manage some of the drops and packets. And because we have this awesome GPU pipeline for processing elliptical curl verifications, we can actually guarantee that the messages you're sending are not split spam because you have to sign all of them. So that allows us to use this very high performance data plane to replicate state as fast as possible between us and the rest of the network. And we're actually able to do this in a steady state, 100,000 transactions per second under 500 milliseconds. So sub second finality of like hundreds of thousands of transactions being replicated in a network.
00:04:58.664 - 00:05:23.284, Speaker A: So our peak right now is over 500,000. I didn't want to update the slide, it says 400,000. But this has been our progress. We have a testnet out on GitHub. It's Apache 2.0 license code. So steal our code fixer bugs, join our discord, and if you have any questions, please ask me.
