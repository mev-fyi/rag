00:00:03.680 - 00:00:08.697, Speaker A: Hello, everyone. Welcome to this week's Changelog. My name is Jacob. I'm joined today by Nick. How are you doing today, Nick?
00:00:08.841 - 00:00:10.553, Speaker B: I'm doing great. I'm doing great.
00:00:10.729 - 00:00:50.729, Speaker A: All right, so let's get started. So if you haven't seen already, Coliseum, the radar hackathon ended recently and the project submission list went live. So we saw 1359 project submissions, which makes this the largest crypto hackathon ever. Once again, it seems like every. Yeah, it seems like every one of these ends up being bigger than the last. This one is like 30 something percent larger projects mission wise than the last one. So it's great to see more slanted developers entering the ecosystem, building new projects and hopefully turning into new founders and new larger projects in the ecosystem.
00:00:50.857 - 00:00:59.205, Speaker B: Yeah, it's super exciting to see everyone building all this really cool stuff. And if you haven't gotten a chance to take a look at the directory of project submissions, take a look at them.
00:00:59.555 - 00:01:40.891, Speaker A: Yeah. And talk about founders being attracted to blockchains. So there was a recent A16Z report that was talking about like builder interest in blockchains and we found that Solana was the largest increase of builders interested in a specific blockchain, specifically founders. So that in all the different projects that they talk to, the pitches that they get, more and more people are building on Solana and the opportunity to build on Solana, meaning the. The availability of jobs. If these are the founders and actually getting through to building these projects, the availability of jobs will also increase. It's good to see opportunity and founders looking more into Solana.
00:01:41.083 - 00:01:51.051, Speaker B: Yeah, we'd love to see it. All right, let's go ahead and dive into some of the SIMD this week. We've got this one from Brendan Washington. Block writable account data limits. Jacob, can you tell us about this one?
00:01:51.163 - 00:02:22.889, Speaker A: Yeah. So SIMD184. So today there is a writable account limit per account of 100 megabytes. So per block on a specific account, you can only write to that account 100 megabytes each block. And there's no overall cap for all accounts being written to today on the cluster per block. So this is adding that cap and they're adding a cap. They're saying it's going to be two gigabytes of.
00:02:22.889 - 00:03:11.901, Speaker A: Hey, only this much account data can be written per block on the cluster today if the SIMD is approved and pulled in. This is the reason why that they are proposing this is there's another feature called direct mapping which will allow writing accounts to Solana make It much easier to do. So. And so they're saying like, okay, we're going to make it easier to write data. So now we're going to have to add a cap versus like previously there was more of a soft cap that was imposed by the transactions because you didn't have something like direct mapping that enabled more account data to be written. So it's kind of cool to see. I'm interested in seeing what the actual impact was or what the impact would be if this would be approved and pulled in, but only time will tell.
00:03:11.901 - 00:03:14.265, Speaker A: We'll be doing some analytics on this.
00:03:14.565 - 00:03:35.805, Speaker B: Yeah, this would be really cool to see how it plays out and some of the implementation details here. Moving on to some of the commits for this week, we've got this commit from Yeehaw. And it's actually fixing some of the issues that Windows developers were having being able to actually install and use the Agave tool suite on Windows. So Windows support is sort of being fixed up, which is great.
00:03:35.965 - 00:04:02.197, Speaker A: Yeah, super excited about that. And then we have another change by Andrew on the scheduler, kind of improving to the time to live on some of the things within the scheduler. This looks like it's specifically around address lookup tables, being able to understand when they're expiring and then resolving them correctly so that you know when to schedule a specific transaction. So it's cool to see this one actually get pulled in as well.
00:04:02.381 - 00:04:19.523, Speaker B: And then yet another performance optimization. Actually, this one is specifically to sort of batch transactions that are getting written to the database itself. And according to some of the metrics on here, it's about a two to three times increase on efficiency here, which is really great.
00:04:19.659 - 00:04:28.411, Speaker A: Yeah, that's kind of crazy too. It's. I feel like a lot of the times what we're finding is that there's two to three times efficiency increases on some of these everywhere.
00:04:28.443 - 00:04:32.931, Speaker B: It's like little, little areas all around and we're just like slowly working through them. It's great.
00:04:33.043 - 00:04:52.101, Speaker A: Yeah, I'm really looking forward to. We're not going to talk about these commits specifically today because they're not pulled in yet, but Alessandro's commits that he's been posting about on Twitter, where I think they're like 90, like 90% more efficient or something. It's kind of crazy what he's doing.
00:04:52.253 - 00:05:32.359, Speaker B: It's so cool. Speaking of cool things, this package metadata. So John Cinque created this new package where basically, in a nutshell, you can declare your program ID within your cargo toml for your program and there's this really fun interesting side effect here where if everyone starts doing this, it'll make it. So if you're testing or depending on other programs, it's super easy to determine what their program ID is which then in case you can fetch their program from the chain if you need it. So if you're using like a client SDK somewhere, you can easily grab their program, clone it locally for local development and testing and test validator sort of stuff. And so I think this is really fun.
00:05:32.527 - 00:05:39.207, Speaker A: Yeah, it's cool to see these little minor improvements to the developer experience because they really add up over time.
00:05:39.351 - 00:05:40.503, Speaker B: Oh yeah, they do.
00:05:40.679 - 00:06:02.635, Speaker A: Talking about developer experience. So I think this is a new resource that. Well, it's been a resource been a while, but Pinocchio. So if people haven't heard about Pinocchio, it's basically a dependency less version of Solana program. It does dependency free. It's dependency free, yes. Does it actually have no dependencies? I haven't looked at it myself.
00:06:03.015 - 00:06:07.679, Speaker B: That's the gist. It has no dependencies, no strings attached.
00:06:07.727 - 00:06:56.775, Speaker A: According to this. That's why it's called Pinocchio. Um, yeah. So it's a really cool way of doing Solana programs and I, I personally want to see something like this get more adopted or at least some of these changes that enabled this be pulled into like the Solana program itself so that you can get some of the efficiency because this both will decrease your build time making it to where you don't have dependency issues whenever you're pulling in different crates like there there's a bunch of really cool and improvements with this. There's some things that you have to watch out for is that like hey, the way that this handles pub keys and a few other items that you probably are used to within Solana program is different so you can't just do a one to one. But I would love to see this be built upon a little bit more in the future.
00:06:57.235 - 00:06:58.495, Speaker B: Yeah, agreed.
00:06:58.835 - 00:07:41.035, Speaker A: And then one more resource that I don't have here on this current window, but we just recently released a Solana bootcamp Solana developer Bootcamp that is 19 hours of content. If you're a developer, you don't even need to know blockchain, but you can go through this boot camp and learn how to be a pretty good Solana developer by the end of it to where you're building defi applications you're building like decentralized stable coins but at the beginning you're building like basic counters or you're learning what blockchain is. So it goes full end to end on the learning journey for developers to learn how to build in blockchain and specifically the Solana blockchain.
00:07:41.335 - 00:07:52.647, Speaker B: Yeah, it's like you said, it's about 19 hours of total, I guess, curriculum material and it's completely free out there on YouTube. And check it out, it's going to be awesome to see all these new developers coming in from it.
00:07:52.791 - 00:08:16.619, Speaker A: And last but not least, we have Stack Exchange. So this is the Stack Exchange leagues for this week. We can see Jimmy believe in. We have John Calum, Henry. I haven't seen Naravane here yet, so it's good to see some new people. Just as a general reminder, remember, if you contribute to Stack Exchange, it helps all current and future developers. Definitely go on there.
00:08:16.619 - 00:08:29.165, Speaker A: Upvote good questions and answers. That's the easiest way to contribute. Otherwise, answer good questions and ask your questions here so that anybody can Google and find your answers on Solana development.
00:08:29.505 - 00:08:32.945, Speaker B: All right, that's going to wrap it up for this week's changelog and we'll catch you on the next one.
00:08:33.065 - 00:08:33.625, Speaker A: All right, see ya.
