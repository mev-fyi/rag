00:00:00.840 - 00:00:01.766, Speaker A: If we can't talk to each other.
00:00:01.790 - 00:00:06.654, Speaker B: We'Re not gonna make it. Sometimes I feel like I've bitten off more than I can chew.
00:00:06.774 - 00:00:10.422, Speaker A: Most of the time, I work in a glass jar and lead a very uneventful life.
00:00:10.558 - 00:00:15.622, Speaker B: A face full of glass hurts like hell when you're in it. That's weird. That glass looks half full to me. Eating glass.
00:00:15.678 - 00:00:18.354, Speaker A: Eating glass and staring into the abyss. Glass.
00:00:18.934 - 00:00:20.454, Speaker B: Who gives a shit about glass?
00:00:20.534 - 00:00:21.794, Speaker A: Who the fuck is this?
00:00:23.134 - 00:00:26.274, Speaker B: It's kind of part of our culture to eat glass.
00:00:27.294 - 00:00:29.634, Speaker A: And get some safety goggles next time.
00:00:38.934 - 00:01:08.352, Speaker B: Hey, everybody, and welcome to Chewing Glass, the show where we talk to developers building in the Solana ecosystem. Today we have a guest who's not actually a developer, but I would probably consider him a heavy glass chewer. We'll get into more of that here in a little bit. We have Brian long from Triton one. Many of you who know Solana ecosystem well know who he is. He's pretty much a legend and many circles. Um, he also runs a validator, block logic, uh, for the Solana ecosystem.
00:01:08.352 - 00:01:11.364, Speaker B: So let's get started. Brian, how you doing, man?
00:01:12.184 - 00:01:14.904, Speaker A: Great, great, thanks, Chase. It's great to see you again.
00:01:15.064 - 00:01:43.878, Speaker B: I know. Like, I think. I think I. I started here a little bit over two and a half years ago, and, like, in that beginning time, I went and visited Boulder when there was a Solana foundation or, um, office out there. And I met you, and I remember having a good conversation, and, like, obviously, we've been pretty close friends ever since. At least when we do see each other, we live in two different worlds, pretty much. So the way we start this show out is really to try to get to know our guests.
00:01:43.878 - 00:02:14.050, Speaker B: You're not an engineer, but we'll sort of get into why I would consider you a glass chewer, because hard problems are hard to solve. So just, like, let's start it from the very beginning, as far back as you want to go. Like, how did you, like, you're in the Solana ecosystem now. There's obviously, like, a large chunk of information and history that happened there. But, like, where'd you get started? Like, where you. Did you go to school for, like, computer information systems or you, like. And something completely.
00:02:14.050 - 00:02:20.814, Speaker B: You live in Boulder. Like, maybe you were at a rock climbing and, like, that was your start. I don't know, but, like, how'd this whole thing get rolling?
00:02:21.514 - 00:02:51.334, Speaker A: Yeah, my business background. So my undergrad degree was in business. I have an MBA, both from the University of Minnesota. I'm originally from Minnesota, and we moved to Colorado in 2006. So yeah, even though I'm a business guy and I've got an MBA, I'm not a suit. I did learn to code along the way and I'm pretty decent with ruby on rails. So the web two stack.
00:02:51.334 - 00:03:16.064, Speaker A: But I wouldn't consider myself an engineer. So I think it's fair game that you say I'm not an engineer. So anyway, yeah, so business background. And then my wife and I started a company in 2003, a data gathering company in the US. We still own that today, and my wife runs that business and then I do some of the blockchain stuff.
00:03:17.004 - 00:03:42.214, Speaker B: Cool. So NBA started a business, so there's probably still a huge gap in between there and when you first discovered crypto. So let's talk a little bit about that journey into that data gathering company and then how you started to got into tech versus just the business side. Just walk us along the story.
00:03:42.954 - 00:04:25.726, Speaker A: Yeah, because when we started our business, it's a real estate data gathering business in the US, and we read all the real estate for sale ads in the country. And in order to start that business, I had to learn how to write code. So it was basically me, a laptop, my cell phone, and a wifi account, free wifi at Starbucks and learning how to write. Back then it was PHP and learning how to crawl the web and build crawlers and stuff like that. So that's how I started to make the transition from just being an MBA dude to being somebody who's more tech savvy.
00:04:25.910 - 00:04:32.126, Speaker B: So were you building aggregator websites in real estate? Was it real estate aggregation?
00:04:32.230 - 00:05:06.484, Speaker A: Yeah. Yep. Yeah, we were building bots to go out and crawl the web and back then not even all the data was online. So actually a data entry clerks that would, we take the Sunday newspaper with the real estate for sale ads and we'd have data entry clerks that would start keying out the data. And now that's all online, so we don't have the data entry clerks anymore. But yeah. So way back then, in the early days of the web, we were writing bots to go out and crawl and gather data.
00:05:06.784 - 00:05:32.694, Speaker B: Wow, you had somebody open up a newspaper and enter the for sale. That's probably a little bit harder to know when a sale would. Like, the aggregators today can go and like check on website when like a, a sale was closed. So you can immediately remove it. That had to be manually done. You had to go and check to see if this was a stale, was it sold, was it not, is it still exists? So that sounds like not a lot of fun.
00:05:33.354 - 00:05:35.494, Speaker A: No, no. Yeah, things were different back then.
00:05:37.874 - 00:05:45.694, Speaker B: And so it's still. You still do that today. So, like what? Like, where'd you go from there? Like, with that business and the rest of your career?
00:05:46.514 - 00:06:02.306, Speaker A: Yeah, so that business is doing well. My wife runs it right now and I'm engaged a little bit, but honestly, she runs the day to day of that business. And then I'm focused on all the crypto business for blocklogic and for Triton one.
00:06:02.450 - 00:06:03.114, Speaker B: Right.
00:06:03.274 - 00:06:21.534, Speaker A: But through that process, that's where I learned how web two programming, Ruby on rails and all that, and so started to build enough of a tech background that when I first heard of bitcoin that I thought, hey, this sounds really cool. I want to get interested in what's going on there.
00:06:22.474 - 00:06:38.414, Speaker B: But even before that, were you just an entrepreneur with that one business leading up all the way until this time where you heard about bitcoin or was there some other stuff there?
00:06:39.274 - 00:07:07.534, Speaker A: Yeah, well, we started that business in 2003, and that was the only thing I did. Before that I was working for another company and we sold the division that I was running, telexis Nexus. And then I started the data company. And, yeah, so we were entrepreneurs just out doing our thing and a good successful business that we still own today and along with the other ones.
00:07:08.274 - 00:07:26.314, Speaker B: Okay, so you just sort of alluded to, like, hearing about bitcoin. Like, tell me when that was. And like, without going too far, like, what were your. When was it, like, what were your thoughts on like the whole idea of what was going on there at that time?
00:07:26.474 - 00:07:50.014, Speaker A: Yeah. Yep, absolutely. So it was early, man. It was late 2009, early 2010, and I was solo mining bitcoin on cpu. The code for using GPU's wasnt even out yet. There were no asics at the time. And yeah, started messing around really early.
00:07:50.914 - 00:07:55.934, Speaker B: Well, bitcoin was worth nothing at that point in time, so why did you remind me?
00:07:57.474 - 00:08:11.144, Speaker A: Yeah, because I thought the tech was interesting and that there could be something interesting there. And for me, that was enough of a reason to mess around with it. It was sufficiently nerdy that, hey, I got to try this and see what's going on.
00:08:11.234 - 00:08:53.232, Speaker B: So, yeah, I feel like at that time though, like, so 2008, what was I like 2009? I was like 23 at the time and I still hadn't quite heard about it. I think it was in a couple years until I heard about it, but like, I don't know if I had heard about it in 2009, even though I wasn't like a computer nerd my whole life, like cis degree and everything. If I would have, like, having the. I feel like a lot of people that were that early, like, the foresight that's required is, like, pretty hard to have. You know, there was obviously a lot, but I wasn't one of those people. So it's pretty cool to hear that you were just. You were interested enough in that to think like, hey, there's something here.
00:08:53.232 - 00:09:02.964, Speaker B: I'm going to have a bunch of equipment and actually mine this thing. That's what was the early days? Like, fraction, like pennies?
00:09:03.264 - 00:09:43.630, Speaker A: Yeah, yeah. It was crazy. Ridiculously cheap, and it was cool. I mean, okay, I'm making some bitcoin, and that's cool. It wasn't a lot of money, and I had formed some impressions at the time, which I think I was both right and wrong. And I'll just admit when I was wrong, because there were definitely some things that I was wrong about, but there were also some things that I was right about. And I remember telling some friends at the time that bitcoin is too slow to be Internet money, and that's how it was being sold at the time.
00:09:43.630 - 00:10:03.794, Speaker A: So at the time, people were saying, hey, you can go into a coffee shop and you can buy coffee with bitcoin. And it's like, yeah, ten transactions per second. No, that's not going to. This is not Internet money. Come on. I still think I was right. That's just not an appropriate use for bitcoin.
00:10:03.794 - 00:10:27.530, Speaker A: And so then the narrative changed to where bitcoin was now, digital gold, and you should hodl it. And that's where I was wrong. I was wrong in the second narrative. I don't hold a lot of bitcoin today. I wish I did, but that was. Anyway, that was my impression at the time, both the right and the wrong.
00:10:27.682 - 00:10:49.374, Speaker B: And you did that. So you did the mining and just stayed interested in it for how long before, like, you moved on to whatever the next thing was for you, like, in the crypto? Let's. Yeah, let's not. I don't want to go too far too fast. But, like, you. How long did you, like, play around with bitcoin before you, like, discovered something else that was, like, really interesting to you?
00:10:50.234 - 00:11:36.006, Speaker A: Yeah. You know, I stayed engaged or just aware of what was happening in crypto, watching ethereum, watching bitcoin, things like that, but not really serious about it until about 2018, I think, when a really good friend of mine told me about Solana and what the guys were building, and he did his best to explain proof of history to me. Wasn't the best job, but it was enough that I got interested. He's like, hey, that's what I've been looking for this whole time, that I want speed. If we're going to have Internet money, I need layer one speed. This is interesting. So, for me, yeah, the story kind of skips from bitcoin to Solana 2018, 2019.
00:11:36.006 - 00:11:36.606, Speaker A: Preston.
00:11:36.630 - 00:11:46.674, Speaker B: And so during that gap time, you were just running your other business and still mining bitcoin, or did you sort of eventually just, like, did you mine it throughout that whole entire period?
00:11:47.614 - 00:12:01.534, Speaker A: Yeah, yeah, I did a little. I mean, it wasn't a big mine by any stretch. I would just call it dabbling. But, yeah, I had the miners running until probably 2017, when I finally just shut those down.
00:12:01.834 - 00:12:31.198, Speaker B: Okay, so heard about Solana. Interested in this tech, like, the worst. A lot of times we, like, we do these podcasts, and somebody has, like, a really long story, but yours is sort of interesting. You, like, have this successful business that you and your wife ran, but also mine, bitcoin. And then, like, flash forward, you're like, oh, cool, ethereum. And then, like, oh, wow, cool. Solana, even though the guy that you're talking about did a bad job of explaining it.
00:12:31.198 - 00:12:45.474, Speaker B: So then what you, like, did you go deep, like. Or where did. Where did you even find information? Like, did you see, like, the eight core innovations, like articles of Toli? Or, like, how did you dive into understanding what the hell was happening in Solana?
00:12:46.094 - 00:13:07.098, Speaker A: Yeah, yeah. So, yeah, when he told me about it, I said, okay, that's what I've been looking for this entire time. You know, how do I get involved? And the way for me to get involved was to volunteer, uh, to bring up a validator. And, uh, so my engagement was discord. Um, that's how I got started. First. Um, yeah, I read the white paper.
00:13:07.098 - 00:13:08.658, Speaker A: Yeah, the went to the website, though.
00:13:08.706 - 00:13:22.374, Speaker B: Found the discord link, went in there, and you saw, um, like, a couple. I won't name them on. On the Internet because, like, they'll hate me for talking about them publicly. But you met some of our core protocol trolls that, uh, welcomed you with open arms.
00:13:23.054 - 00:13:23.834, Speaker A: Yes.
00:13:24.174 - 00:13:25.114, Speaker B: Okay.
00:13:25.534 - 00:13:26.354, Speaker A: Yes.
00:13:27.534 - 00:13:40.914, Speaker B: But, like, you had the. So you, like, you were doing data collection at that other business. So, like, the validator thing. Like, did you know anything about that at all at the time when you, like, sort of jumped into discord?
00:13:42.254 - 00:13:49.998, Speaker A: I knew nothing. But the cool part was nobody else knew anything either. Yeah, we were all learning at the same time. Right?
00:13:50.046 - 00:13:50.754, Speaker B: Green field.
00:13:50.894 - 00:14:27.750, Speaker A: Yeah, yeah, yeah. You know, the devs were still learning and so the, the community was extremely accepting and embracing and helpful. And, you know, I, you know, Dan Albert was so patient, you know, explaining to everybody how this stuff was going to work. The rest of the guys were super patient, and that's what it took, right? Is just everybody kind of learning this stuff together. And so I still look back at those days and I always just laugh, right? And we all had great smiles, good laughs at the time. We're great friends. Now.
00:14:27.902 - 00:14:47.096, Speaker B: I'm curious to hear, like, who else? Like, not the core protocol guys, but the other Brian long is, in those early days, who was it, like, how many other sort of people like you did you find? Like, when you first got in there? Was it like five? Was it 20? Was it 50? What did that look like in those early days?
00:14:47.160 - 00:15:08.984, Speaker A: There were maybe a couple dozen back then. This was before testnet, right? So we were just doing dry runs, and there were maybe a couple dozen validators. Smith. Mister Smith. He's anon. We've gotten to be great friends in person in real life. We've met up several times.
00:15:08.984 - 00:15:31.396, Speaker A: We're great friends. Staking facilities, also great friends. Wolfgang and those guys. Let's see the lunar nova team. Leo Schabel when he was with Certes, then jump again. Yeah, we all helped each other out. There may have been some arguing or not even arguing.
00:15:31.396 - 00:15:35.920, Speaker A: Debating. You can't have crypto without a debate.
00:15:36.052 - 00:16:06.712, Speaker B: Well, you can't have Sol engineers without a debate because we all know that there's egos all over the place in that world. I love hearing these. I love hearing these origin stories, though, like how everybody sort of got their intro into here. So you jumped in to the discord. You, like, you made some friends. Nobody really knew what the hell Solana was yet, including the people building it or what it was going to be. And then you're sort of just like, working together, and you, again, didn't have those tech skills, but you want to run a validator.
00:16:06.712 - 00:16:20.204, Speaker B: Did you, like, start working with those guys to understand all that shit from the ground up? Or did you hire somebody to be your technical liaison for you as you sort of made your way into becoming a validator?
00:16:21.024 - 00:17:05.934, Speaker A: Great question. So back then, I could do it myself, and back then I could run a node on digitalocean, and it was pretty straightforward for me to run a node. And the administrative overhead wasn't real big. That did change over time when the network started to run faster and faster and faster, and we couldn't keep up anymore with virtual cloud nodes. It had to be on bare metal. That's the point where I needed help. And so Linus Kendall, whos now one of our co founders at Triton, is the guy who helped me out.
00:17:05.934 - 00:17:32.034, Speaker A: Hes a systems admin, network engineer at a global standard. The guys amazing. He was working for me at the data company. He was a contractor, he was helping me out. And I said hey, ive got this thing that I've been messing around with. It's getting really interesting, it's also getting really hard. And I need your help.
00:17:32.034 - 00:18:18.204, Speaker A: So and so, yeah, so now today, I mean if I were to give advice to people who are thinking about starting a validator, my advice would be to think as that you're going to need a team in all likelihood. And you need one person who's really good with Linux system administration. You need somebody who's good in the BD side. Maybe the two of you can do it alone, maybe you need a third to help out. There are some exceptional cases where we've some fantastic validators that can manage to do kind of everything on their own. And they're amazing people. I would say they're the exception, not the rule.
00:18:18.204 - 00:18:24.484, Speaker A: So for most people you should think about, if you're going to start a validator, think about doing it as a team.
00:18:25.594 - 00:18:52.814, Speaker B: All right, well let's, let's jump back and like talk about some, some more origin story stuff. So somebody you were working with who was really smart, you're like, hey, they're cranking up the speed. Was this like, was this before testnet during like was this one mainnet was live, like at that point in time? Like where, where were you at that stage when you had to pull in somebody that was a lot smarter with DevOps and that sort of infrastructure?
00:18:54.274 - 00:18:55.254, Speaker A: Mainnet.
00:18:55.554 - 00:18:56.858, Speaker B: Mainnet, yeah, main net.
00:18:56.906 - 00:19:33.344, Speaker A: So we dry Ron's piece of cake. Those were fun days too. I mean that's kind of a fun origin story because we'd have a couple, I forgot how many exactly, maybe a couple dozen validators. And we'd bring up the cluster. And then Michael Vines had a little tool that he called Rampi. And so he would bring out Rampy to play and then Rampy would just slowly escalate the number of transactions that it was sending to the cluster. And so eventually Rampi would knock over the cluster and then wed learn a bunch of stuff, submit our logs.
00:19:33.344 - 00:19:56.804, Speaker A: The engineers would go back, rework the software, fix some stuff, and then wed do it again. Another dry run, bring it up, out comes rampi, knock it over and rinse and repeat. Just keep doing this until one day Rampi came out and didnt knock it over. And so then we just said, hey, that's testnet. And that's how testnet was born.
00:19:57.144 - 00:20:17.004, Speaker B: Well, well, well, ramp, those rampy days taught you about the real days over the past couple years. Well, maybe they didn't quite prepare you for the, for the real pager duty, middle of the night calls, but I mean, like, that's pretty cool to hear. That's how like you guys were doing, like at that time.
00:20:18.364 - 00:20:33.372, Speaker A: Yeah, but it was mainnet when things started to get difficult and it was probably about the time that serum was being built and coming in and we were starting to get some traction, Preston, and complex.
00:20:33.468 - 00:20:49.428, Speaker B: Some complex transactions. When we're talking about not simple transfers, we're talking about complex defi transactions that not every case is necessarily handled whenever you start to get into that world.
00:20:49.596 - 00:21:20.414, Speaker A: Exactly. Yeah, yeah, the load was different. Everything was different. And there was another guy in the discord that was extremely helpful, and he had come in about Mainnet, Marko Bruken from Holland, and he's now also the third co founder of Triton one. And Marco was super helpful on the DevOps side. And I think Marco, quite honestly, has tuned more Solana servers than anybody in the ecosystem. And just incredible experience.
00:21:20.414 - 00:21:25.618, Speaker A: At that time when things were getting hard, Marco was also there to help.
00:21:25.666 - 00:21:31.134, Speaker B: Out just for the listeners. What do you mean by tuning servers?
00:21:31.554 - 00:22:19.124, Speaker A: Solana requires bare metal, and it also takes a very skilled technician because you do end up tuning some of the cpu cores, which might be saying, okay, we're going to, we need to run at a certain frequency. So we might, if we've got 32 cores on a cpu, we might actually take that down to 24 cores so that we can increase the clock speed on those cores as opposed to 32 without getting overly technical. That's the kind of tuning that's required is going in looking at thread allocations to say, okay, the proof of history thread needs to be pinned to a single core with no threading, no, no hyper threading, you know, stuff like that.
00:22:20.264 - 00:22:21.096, Speaker B: It sounds like an art.
00:22:21.120 - 00:22:25.088, Speaker A: So anyway, Marco is really good at that. It is an art. It's absolutely an art.
00:22:25.176 - 00:22:36.014, Speaker B: It almost like reminds me of like the analogy that it comes to mind is like tuning an instrument to an extent, which I mean, I guess you kind of are just a very highly technical instrument.
00:22:36.184 - 00:22:38.614, Speaker A: Yeah, yeah, yeah. Yep.
00:22:39.594 - 00:22:57.414, Speaker B: Yeah. Okay, so, so at what point in time did like. So you were running a validator, you had a couple guys like when did, when did like Triton is an RPC service, but your, your validator was something different. Like, which one came first? Or was this sort of birthed at the same time?
00:22:58.114 - 00:23:50.124, Speaker A: No, no, good question. So block logic was first my blocklogic validator. And even before Testnet days, it was after Mainnet was up and running and the load was getting to the point that labs was having. They were staying really busy keeping the RPC nodes up. Block logic first, and then Triton came along. The origin there was obviously, we had noticed that the rpcs were struggling. And then we made a proposal to Solana foundation to take over the mainnet rpcs and move them out of the cloud and move them onto bare metal.
00:23:50.124 - 00:24:12.344, Speaker A: That was how Triton was formed. It was originally just three guys and six servers, which is also crazy to look back and think that, wow, where were at with Solana today? Thousands of servers, amazing throughput, global scale. And the RPC stack started with six servers.
00:24:12.644 - 00:24:52.048, Speaker B: Well, it sounds like you guys took over another. That was a first step, additional step towards decentralization, pulling those rpcs away from labs and taking this external. And then obviously, since then, there's, there's a lot of competition in the, in that sort of RPC space. I mean, validators as well. But, um, I've seen your website, Trident one. I've seen the, the people you guys are running rpcs for, which, like, is pretty impressive. So, like, it's cool to see that this started as you just randomly interested, pulling in a couple people, running a validator, starting Triton.
00:24:52.048 - 00:25:04.554, Speaker B: And, like, now you're like, I mean, I can't have a bias here, but according to you, the most reliable RPC provider on there out there. Your words, not mine.
00:25:04.714 - 00:25:13.010, Speaker A: Yep, yep. Yeah, that's right. And we stand by that. We do feel really good about what we built.
00:25:13.122 - 00:26:13.410, Speaker B: So, yeah, and the, so the other stuff I wanted to talk about, and, like, I don't always love talking about it, but, like, what was it, 20? Was it 2022? Like, maybe January or February? The first, like, big, big deal fire drill. I want to like you. That was whenever, like, things got knocked over. All the, what do you call them? The, the liquidation bots would not stop trying to liquidate. And there was just like, was a very dark time in our lives. But, like, that will. I was in the discord doing nothing, by the way, except watching, like, probably drinking like, a beer, being like, holy shit, what the hell's going on here? And, like, that was my first experience watching, like, a real time, like, fire drill.
00:26:13.410 - 00:26:46.834, Speaker B: Like, get like, resolved and, like, it was pretty incredible to watch. Like, what's that? What's that? Like? Like, or what was that first one? I mean, I know it happened a long time ago before that, but I think this was different because we spent 2021 in a really good position, and, like, all of a sudden something that wasn't handled was happened and, like, knocked everything over. And then, like, you guys have had to figure out, I think the process has got streamlined since, but that was like, holy shit, guys, what are we going to do?
00:26:47.854 - 00:27:30.522, Speaker A: Yeah, yeah. And every one of those has been different. So I, if I were to characterize any of the restarts, it's just that they're all different. And it, it's hard to have a playbook as validators. We've talked about, you know, how do we, you know, how can we have a standard playbook, uh, for doing a recovery like this? And at the end of the day, it's hard to have a standard playbook. So we just need to basically, basically then just focus on principles of saying, okay, where are we going to meet to discuss this? That's discord. Um, and, uh, how do we, you know, how do we identify the root cause of the problem? That usually means bringing in labs because they wrote the software.
00:27:30.522 - 00:27:56.794, Speaker A: And, uh, so then bring in labs will be there, the validators will be there. Start just discussing solutions. It absolutely looks like sausage being made. I know, on discord, it's nuts. Most people are just sitting there with popcorn, popcorn and beer. Just watch and people debate and argue. But then finally we figure it out, right? We end up with a solution that makes sense for that particular event.
00:27:56.794 - 00:28:02.074, Speaker A: Never fun, especially in a 24/7 environment.
00:28:02.864 - 00:28:03.320, Speaker B: Right.
00:28:03.392 - 00:28:49.814, Speaker A: When it goes down, there is always somebody in bed. So we're, you know, you have to wake people up. Those of us that are awake are going to have a really long day, lots of 24 hours, days for our team. Happily, we have people spread around the globe so we can use that to our advantage. And then in a really long restart, we'd have people kind of basically saying, we would say, okay, you go take a nap right now. So depending on where theyre at in the world, if its nighttime, go take a nap and get some rest because you need to be up and fresh so that the next set of guys can go to bed and get a nap and then they can be fresh for the next set. So, yeah, so we would just try to manage it that way.
00:28:49.814 - 00:28:56.754, Speaker A: Of course. Pager duty calling people, getting them to come in and get servers online.
00:28:57.554 - 00:29:14.674, Speaker B: Yeah, I like to. I, like, like I said, I think it's always useful to sort of address the past. Like, luckily, in knock on wood, like, things have been really great lately. I think it's not said enough. That sort of validator community is, like, some of the unsung heroes of the ecosystem. Like, it's, like, it's. It's.
00:29:14.674 - 00:29:55.574, Speaker B: It's not just a compliment for the sake of complimenting somebody. It's like, without all of that shit, we wouldn't be where we are right now. Um, I've seen people step up and, like, just take the lead all their own, and, like, all of a sudden, like, labs, engineers are on the side and, like, I mean, they're always there, but I've seen, like, validator community just step up and just, like, start coordinating this. Um, a lot of people I've seen on, on the Internet talk about, uh, oh, it's centralized because you're in discord. And I think. What is. What does Tolly say about that? Coordination is, like, um.
00:29:55.574 - 00:30:06.378, Speaker B: Like, it. It's. It's. You can still be decentralized even though you can coordinate. That doesn't make any sense to, like, there. It's not like a mutually exclusive thing. So.
00:30:06.466 - 00:30:11.242, Speaker A: Yeah, yeah, yeah, come on. I mean, how else are we supposed to do this?
00:30:11.338 - 00:30:18.850, Speaker B: We don't have to. We don't have to not be able to talk. Like, it can still be decentralized or whatever, but, yeah, yeah, it's.
00:30:19.002 - 00:30:33.898, Speaker A: Yeah, it's definitely the coordination there. And getting everybody to bring, you know, the cluster up with the correct version of the software. I mean, what's the hardest part of Solana? Yeah, go ahead.
00:30:33.986 - 00:30:37.034, Speaker B: No, go for it. No, go for it, Brian. All you.
00:30:37.154 - 00:30:55.238, Speaker A: I was going to say, each of those events, though, has made Solana better, right? Because we always learned, we always adapted, we built better software. I forgot which event it was in sequence. But there was one of those, whereas all the NFT bots that were going crazy, right?
00:30:55.366 - 00:30:55.702, Speaker B: Yeah.
00:30:55.758 - 00:31:30.978, Speaker A: And to the point that we had 100 gigabits of traffic inbound to the validators when it was their turn to be leader. But we're talking ten gig ports on these machines. There was absolutely no way any computer could stay online. Forget it, right? I don't care what blockchain it is, it's going down. And so, you know, and so that was where we had to stop and say, okay, how do we bring this thing back up? Because those bots were still running, so we couldn't just bring it right back up and expect a different outcome. Right?
00:31:31.026 - 00:31:31.322, Speaker B: Yep.
00:31:31.378 - 00:31:33.226, Speaker A: We're going to bring it back down again.
00:31:33.410 - 00:31:33.922, Speaker B: Yeah.
00:31:34.018 - 00:32:07.944, Speaker A: Yep. And so that one took some coordination that even took metaplex getting involved because they had to create an upgrade to candy machine. I remember. So, yeah, basically, we kind of coordinated them getting candy machine fixed along with some fixes on the validator software, and then kind of bring them up together. Of course, the cluster had to come up first before they could upgrade the program. But there was, we ended up with something that kind of worked. It was not perfect, but it worked, and we got better, is the point.
00:32:07.944 - 00:32:20.496, Speaker A: And, yeah, so every single one of these solon has gotten stronger. We introduced quick as a result, fixed a lot of bugs in the process, and it's getting to be good.
00:32:20.680 - 00:33:28.256, Speaker B: Yeah, I've talked about this before, and I think I even maybe talked about it with Tolio on a previous episode of the show. And it was just like, that quick and all those things that took, it took like a while before people could even figure out why that was happening. Like, actually technically, before the quick and the fee markets and everything else was proposed. And then the implementation took even longer, and people were like, what the hell's going on? And all that time, the network was performing like shit for. And it was like a very, it was a dark time, I think, for everybody. The applications, the validators, the RPC, the people that worked on the core protocol, like, everybody that was rooting for Solana to, like, succeed, it was just like every day. Sometimes it would be a, like a small mint that would be enough to just, like, not knock anything over, but it just, it made it not usable at the time, and it was horrible, and we got blasted.
00:33:28.256 - 00:33:52.494, Speaker B: But like you said, like, it made the validators, the code base, everything else resilient. It also made the people that stuck around here just as, like, participants in the ecosystem resilient, because we've been through hell and back in terms of, like, supporting an ecosystem. Yet here we are, still here and better than ever before, but hopefully we continue to get better from there.
00:33:52.834 - 00:34:20.534, Speaker A: Yeah, yeah, for sure. Yeah. So on the infrastructure side, we've definitely gotten a lot better. The devs on Solana have gotten better as well. They've learned how to write more efficient code so that those NFT mats don't really hurt anymore because the code has just gotten better. The user interfaces and front ends have gotten a lot better as well. They were learning to write the software at the same time.
00:34:20.534 - 00:34:44.106, Speaker A: We were all learning how to run it and keep it running smoothly. I certainly need to give credit to all the Solana devs to, for what they're doing to better understand how the backend works. Why get program accounts is a very heavy call when you should use it, when you shouldn't. They're getting a lot better at their art as well. And that's good.
00:34:44.250 - 00:35:42.986, Speaker B: Well, then you have other people building abstractions and indexers who like action, which makes the DAP devs not actually even have to worry about that because you have these new tool sets that do it for you, that are written efficiently, that work directly with validators and RPC servers to improve that stuff. So it just, over time just, just like any piece of software, like it's the version you just get better and better and better. So I think everybody in the past like six months, again, knock on wood, has been very happy with the way that things have been going. And it's been like awesome to watch. I did want to reserve some time, if you want to, to briefly talk about some things that you've been working on. I know you have like a series of things that are named after like mountains or something that we've talked about. Is that, that's something you want to talk about on the show, like sort of like high level?
00:35:43.050 - 00:36:28.374, Speaker A: Yeah, yeah, yeah. There's one project in particular that I think is of great interest to the community and devs, you know, so your core audience of devs, this is also really important. But you were talking about our project Yellowstone and Yellowstone. We do have a series of projects underneath that umbrella. We named Yellowstone after Yellowstone National park because that's where all the geysers are. And the technology that we're using is all built on Solana's geyser feature for streaming data underneath that umbrella. There's one project that we call old Faithful.
00:36:28.374 - 00:37:05.474, Speaker A: And old faithful solves a problem that basically everybody in the ecosystem is bumped into if they want to run their RPC node, their own rpcs. And the problem is that they can spin up an RPC node, but they do not have access to the full block history. So they can't go back to Genesis and make queries. That's a problem, right? This is a blockchain. We need to fix that. And the current solution is to that. All the block history is contained in Google Bigtable.
00:37:05.474 - 00:37:46.124, Speaker A: There are multiple people with bigtable instances. So it's not like everybody's using the same instance, but nonetheless it means that there's gatekeepers. And if you want to get access to the full history, you have to go through a gatekeeper again. Thats a problem for a blockchain, we dont want that. Were one of the gatekeepers and we dont want it. We started old faithful with the goal to take the entire Solana blockchain history and mount it onto distributed storage. Were using Filecoin is the first platform that were loading the data into.
00:37:46.124 - 00:38:17.574, Speaker A: It's an awesome project because now we've got two layer ones. We've got the Solana and Filecoin working together in a common interest to solve a major problem for the ecosystem. Right now, as we speak, we're loading data. Later this year, we'll have the project done, and then it will be possible for somebody in the ecosystem to bring up a Solana RPC node and have access to the full history.
00:38:18.194 - 00:39:16.694, Speaker B: Yeah, I want to ask sort of like an ignorant ish question to you, because like, we know the way that Solana is designed is that like, you don't have to be able to see the full history since Genesis to guarantee that transactions like that, everything is legit beyond that, because just the way the design was set up, because like every hash is unique. And again, I'm going to speak like non technically that, like, based on that hash, you can guarantee that this is like, nothing's been altered or changed along the way there. But like what? Like, I can guess as to, I mean, I think the, it's an obvious, this needs to change. But I think the question is, like, what is the greater impact of this being more accessible to more people without gatekeepers, to those sort of. We're talking about archival nodes here, right?
00:39:17.554 - 00:40:06.308, Speaker A: Yeah, yeah. So it's for anybody who wants the transaction history. If you're looking at your account and you want to be able to go look at your history of transactions all the way back to when you started your account, that requires access to the archive. The typical RPC node or typical validator node will store one to two days of data. Even the data for a full epoch is a bit much for a server. It gets moved from local storage into the archive relatively quickly. That's why if you want access to history, that you would need to have access to that archive.
00:40:06.436 - 00:40:51.862, Speaker B: I could see needing access if I wanted to do my crypto taxes, and I could only get two days worth of data. So. I see. I mean, that's just one silly, I mean, I wouldn't call it silly. Example, pay your crypto taxes, everybody. So, yeah, I just wanted to pose the question to you, just because, again, we can guarantee that even without that, that the, the blocks are being produced and you can guarantee that there's been nothing changed or altered, but access to the full history can have some very important use cases for who knows? I don't even want to name any because like the, the cases for that are probably unlimited assuming we get a.
00:40:51.958 - 00:41:32.164, Speaker A: Yeah, yep, yeah, yeah you're totally right there. That, you know, for somebody who only needs current count state ARb bots for example, NFT mints, they only need the current state. They don't need history to do what they're going to do. And so it is possible today for somebody running an ARB bot to bring up their own RPC node and they'll be just fine without the history. But if you're a wallet or anything, know, data analysis, that platform, like anybody who wants to do statistical reporting, things like that, yeah, they need the history.
00:41:32.784 - 00:41:58.648, Speaker B: Yeah I mean I'm not going to lie, I've opened wallets in the past and being like where the hell was the rest of my transactions? Like I know I did some in the past like 30 days but where, where are they? So like you said, this is, it's a lot of data and it's got to be stored somewhere and anybody should be able to access that without having somebody gatekeeping that. Its a pretty cool thing.
00:41:58.696 - 00:42:36.566, Speaker A: Yeah exactly. Yeah and its truly a community led effort. Were leading it. Solana foundation provided a grant, Filecoin protocol labs, they also provided a grant in storage. Richard Patel was also a very early contributor to what were doing. Many people know Richard Patel, whos now with jump crypto working on Firedancer. He and Linus, our co founder, had spent some time talking a year and a half ago, at least a year and a half ago about how to fix this problem.
00:42:36.566 - 00:42:50.206, Speaker A: And so yeah, so weve had a lot of great contributions coming in from all over the ecosystem. This is not a project that Triton owns. Its our goal to give it to the ecosystem Preston, youre just facilitating it.
00:42:50.230 - 00:43:35.114, Speaker B: And getting it off the ground and with the ultimate goal of not owning it. And like this is sort of just this big open thing that, that is just owned by the community which like I think is I mean always the right way to do things but it's not always feasible for, it's not always feasible but anyways so that's a good segue. We don't have a ton of time left but I do want to get your thoughts on, just high level thoughts on the impact of fire dancer for you or maybe how it makes your life a living hell for a while as you try to figure out how to run it will, will that challenge you technically in your team? Technically, or do you think it's, that's sort of like a non issue? What do you, what are your thoughts?
00:43:35.974 - 00:44:34.686, Speaker A: Yeah, I, okay, a lot of speculation here, and, but I, here's how I think it's going to go down. They've done a good job. They, being fire dancers, have done a good job of working with labs to carve out the modules inside the Solana validator software. So drawing out points of demarcation and then building a consistent interface to that. So that firedancer could build a networking module that should just automatically plug in and play well with the rest of the Solana lab software. So the way that this will roll out is it will be modular. We'll start first with a fire dancer networking piece, and then that will expand into other pieces until finally, it might be 100% fire dancer, but running that hybrid mode should be just fine.
00:44:34.686 - 00:44:53.894, Speaker A: And so I don't, there's always going to be edges, there's always going to be bugs. Stuff is going to come up. But, you know, based on what we've seen for the quality of the code that that is fire dancer, it'll be about as smooth as it could be.
00:44:54.194 - 00:45:04.334, Speaker B: I'll put my, I'll put my money into Kevin Bowers and Richard Patel. I think that's a safe bet to make on those giant brains.
00:45:05.354 - 00:45:43.340, Speaker A: Yeah, yeah, completely. Yeah, they're doing an amazing job. So there's also this conversation or topic that comes up around that, like, ooh, it's going to be so efficient that we could run Solana on a raspberry PI. It's like, no, I'm in a different camp, and I'm in a much different camp. I do not want to run Solana on slower hardware. I always want to run Solana on the fastest hardware possible so that we can crank up the TPS. And, um, because we don't want to be where we're at today forever.
00:45:43.340 - 00:46:00.532, Speaker A: Right. We've got a trajectory where we want to go 50,000 transactions per second or better, and we're not going to do that on the raspberry PI sitting in somebody's basement. Um, you know, it's going to take high quality hardware in professional data centers, and that, that's how we, we reach our goals.
00:46:00.668 - 00:46:34.084, Speaker B: Well, well, the thing is, is I think there's, I see a lot of, like, conflating sometimes when people say, well, Solana is only at 4000 transactions a second. And I think the misunderstanding for people who don't actually know anything about this stuff is that like, that's because there are only 4000 transactions happening. That number could go higher. Assuming demand for block space went higher. I don't know what that could go on. Mainet. I know Testnet gets up into the 100,000 range as far as I understand it like quite high.
00:46:34.084 - 00:47:01.524, Speaker B: But like I don't know if the testnet tests are actually touching all these sort of complex defi transactions. So I don't think we actually even have an idea what this looks like assuming complex transactions on main net because like obviously the demand's not there right now. So I don't know where we would land. I'm assuming it's over 10,000, probably over 20,000. But that's my own speculation. I just, I have no idea. I don't know if anybody really truly knows the exact number.
00:47:02.964 - 00:47:42.804, Speaker A: Yeah, we can get there. The software is written in a way where the software can expand. The number of banking threads that we use on the validators can be expanded. Everything can be expanded. The current settings are appropriate for the current validator set and the current hardware that most people are running. But given faster hardware and given better software, we can crank that, we can turn that dial and the capacity goes up. So this is not a static blockchain where you're only going to get a certain TPS forever.
00:47:42.804 - 00:47:46.168, Speaker A: That's just, that's not reality.
00:47:46.216 - 00:47:50.364, Speaker B: The fact, well, we max out at the speed of light though, at least we do like that.
00:47:51.064 - 00:47:54.604, Speaker A: Yeah, okay. Yeah, good point. Fair point. I'll give you that one.
00:47:56.544 - 00:48:54.954, Speaker B: Yeah, it's, it's exciting, man. It's like, I love hearing the origin stories about like how you got your start just generally drifting into a Solana discord and pulling somebody from an old company, then pulling in somebody else who was also equally a smart Triton, your validator, and then just the validator community solving problems alongside core protocol developers. And now we hear, like you said, we got thousands of develop, we got thousands of validators out there validating nodes. Everything's like, at the very least, at the very minimum, we're in an upward trajectory. And that's just like minimum because I don't want to get overzealous here, is that at a minimum we are at an incline in terms of technology and understanding and getting better. And that's really all you can ask for. It might look a little more like hockey stick ish, but I'll just sort of say it's like this.
00:48:57.134 - 00:48:59.342, Speaker A: Yeah, we're heading in the right direction.
00:48:59.518 - 00:49:27.790, Speaker B: Well, Brian Long really appreciate having you on the call. You're the first non, like, official, like, developer on. On the show. I wanted to give some love to the validator community. And also, like, when I say, like, circling back to the beginning like chewing glass, it's mentally chewing glass. You don't have to be a rust coder to be doing that. Like, solving hard problems sometimes just means really deep thinking about how to fix some really hard shit.
00:49:27.790 - 00:49:45.654, Speaker B: And I think the validators are doing that even if they're not sitting there writing rust code. That's not like, there's a million ways that you can serve hard, hard problems. And it's not always just writing code. We all know how hard the hell of a life a DevOps person is. At least, like, from the horror stories I've heard.
00:49:45.694 - 00:49:53.234, Speaker A: Yeah, yeah, yeah. It is a thankless job. You hear from people when you're doing something wrong and you never hear from them when you're doing something right.
00:49:54.014 - 00:50:02.934, Speaker B: Exactly. Well, hey, man, thanks for hopping on the show. It was amazing to have you here. And I don't know, the next time I see you, hopefully I'll see you at breakpoint.
00:50:03.274 - 00:50:06.474, Speaker A: Yeah, for sure. Yep, yep. Hope to see you there.
00:50:06.554 - 00:50:06.954, Speaker B: Thanks, Chase.
