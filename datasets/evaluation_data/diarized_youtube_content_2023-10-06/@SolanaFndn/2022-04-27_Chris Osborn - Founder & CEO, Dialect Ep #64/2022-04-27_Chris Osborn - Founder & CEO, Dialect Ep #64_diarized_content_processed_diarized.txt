00:00:10.160 - 00:00:23.054, Speaker A: Hey, everybody. Welcome back to the Solana podcast. It is Joe McCann here again as your guest host. And today we have a very special guest, founder and CEO of Dialect, Chris Osborne.
00:00:23.174 - 00:00:24.894, Speaker B: Hey, Joe. It's great to be here.
00:00:25.014 - 00:00:49.662, Speaker A: It's great to have you. So I'm really excited about today's episode because what you are doing at dialect, I think, unlocks a lot of really interesting use cases in the Solana ecosystem. But first, I think it might be useful for the listeners to kind of get a sense of, you know, who you are and, you know, your background, and frankly, how you even got started with dialect.
00:00:49.798 - 00:01:24.104, Speaker B: So my background is actually in physics. I did my PhD in atomic physics at Columbia University. So this was like laser cooling and trapping of atoms, precision time measurements, and quantum computing stuff. I learned pretty quickly that what I really love to do is write software and build technology. And so I knew after graduating that I wanted to move to the west coast and work on some cool technology problems. I actually had an opportunity to split the difference, and I worked at Rigetti Computing. I don't know if you're familiar, they're a quantum computing startup and got to work on almost every part of their stack, including a lot of software and technology.
00:01:24.104 - 00:02:01.392, Speaker B: I helped lead one of the three teams that launched Quantum cloud services, which was like AWS for quantum computing. And that helped me realize that I really love kind of like, bridging the gap between hard tech and consumer problems and how do users interact with hard tech and got the itch to build a startup. And so actually started this company outside of crypto and participated in YC. We were building a consumer investing product and. And pivoted the company actually last fall, early last fall, full force into Solana, and started building dialect.
00:02:01.488 - 00:02:07.032, Speaker A: Yeah, that's great. I mean, can you maybe just in a few words, what is dialect?
00:02:07.168 - 00:02:46.018, Speaker B: Yeah. So with dialect, what we're doing is we're building what we're calling a smart messaging protocol for Dapp notifications and wallet to wallet chat. Those are the first two use cases that we're working on. And the best way to think about it is kind of like a decentralized inbox, a way to enable the messaging primitive between wallets. And I personally like to think about kind of like hair on fire burning use cases, the things that people need today. And one of the major use cases here is giving dapps a way to connect directly with their users, and that's through the main mechanism that users identify themselves on the blockchain, which is with wallets.
00:02:46.146 - 00:03:22.158, Speaker A: So, cool. So I mean, I remember meeting you many, many months ago last year, and was really blown away because one of the gaps that I was seeing in a lot of web3 applications, irrespective of the underlying chain, was the ability to have native notifications that are genuinely on chain and not using a service like Twilio or a web two or cloud computing context. So the users better understand what dialect is and can enable. Can you walk through maybe some canonical use cases of dialect?
00:03:22.316 - 00:04:28.322, Speaker B: Yeah, absolutely. The use case that got me into it right away, that first, just really compelling use case is if you're using a collateralized lending protocol, and you lend in token a and you borrow out token b, and as prices move, if you become under collateralized, the protocol or many protocols will end up liquidating your collateral on an underlying market. And in a world without messages and notifications, basically, up until today, a lot of early defi users relied on just like a pull mechanism. Like, I got to constantly come back to this product and refresh the browser and see how are my positions doing. And there have actually been some like kind of remarkable situations where when there were dramatic price movements, people could see that there was a wallet address on chain that was at risk of a very large liquidation. And folks were like, how do we get in touch with this user? How do we actually contact them and let them know that a problem? And so there's no question that there's a huge need here. Liquidations were the start.
00:04:28.322 - 00:04:58.226, Speaker B: We're now working with projects across Defi in various capacities. DAos is another really big use case we can talk about in a little bit. And nfts and so alerts about really important situations, obviously those are that first use case. But the holy grail with messaging is user retention and engagement. So even if you get beyond emergency situations across, whether it's nfts and more social, or whether it's daos and collaboration, there's just infinite use cases for technology like this.
00:04:58.330 - 00:05:27.470, Speaker A: That's really cool. I agree. It feels like almost every web3 project or protocol is going to need notifications in some capacity. I know myself, I've been in those positions where I need to add more collateral to a position, and I have to keep going back to it. Or more recently, using some of the structured product volume vaults that are out there where you can, if you want to, say, redeem some of your investment, maybe the interest that you've earned, you have to just kind of set a calendar invite.
00:05:27.542 - 00:05:28.678, Speaker B: That's exactly right, yeah.
00:05:28.726 - 00:06:00.876, Speaker A: And so to me, that's some friction for end users, but it seems like a solvable problem, and it sounds like that's what dialect is doing. But I'm curious, because today in a web two kind of cloudy world, push notifications, email notifications, in browser notifications, they just seem so commonplace to implement. So why is it that you think that this hasn't really been a thing yet in web3, what's been the blocker? And maybe then we can talk about why you chose Solana.
00:06:01.060 - 00:06:57.486, Speaker B: Yeah, this is actually a really, this is a super cool problem. The blocker is the following, and obviously nothing's ever truly a strict blocker. It's really just a question of sort of like, what are your priorities and what are you working on? So in web two, if you're like a typical startup, you're already running some backend service that's got a database and it's got some synchronous and asynchronous processes. And if you're building in web two, there's tons of web two tooling to support you. And so right into one of those backend services, you can sign up for Twilio, get your authentication keys, store them as environment variables, and then like any time there's a specific process where you want to send a user a text message, you just fire it off. Same exact kind of web two, SaaS system exists for Apple push notifications, Android Sendgrid, email, all of that. Where things get interesting in web3 is typically, and especially with like the more really web3 native projects.
00:06:57.486 - 00:07:42.564, Speaker B: You know, whether that's in Defi nfts, wherever your backend is, the blockchain. And there's some basic things that are different with most blockchains, like Solana or Ethereum. And that's that most information is public and so you can't store sort of like secret credentials on chain. And then in addition, you can't make HTTP requests to some other SaaS. So like, the SaaS model breaks down when you start building in blockchain. And so if you want to support these use cases for your users, you basically have to expand your engineering footprint, spin up some web two services that perform two processes. One is monitor the blockchain for the events that you care about, and then number two is decide that you're going to send messages accordingly, whether that's like Twilio email or push notifications.
00:07:42.564 - 00:08:12.224, Speaker B: And so that's part one and then part two to answer your question about why Solana. And this comes back to like my personal journey in crypto. So a friend told me about bitcoin way back in, like, 2011. And around that time, I was, like, first exposed to the proof of work concept. And it's like, easily top five most incredible things that I've learned in my life. Like, I didn't start working in crypto until now, but that had a huge impact on me. And I've been following along with everything that's been happening in crypto since then.
00:08:12.224 - 00:09:02.818, Speaker B: So, heard about Ethereum in 2016 when it, I think it launched in 2016. And what bitcoin did with proof of work and decentralization, and then Ethereum did for generalizing compute on chain and in a decentralized fashion. I discovered Solana in late 2020, I think early October 2020. And for me, what bitcoin and Ethereum did, Solana's proof of history and how it scales technology for ultra fast transaction settlement times, ultra low transaction fee costs, that to me, was as impactful. So I see that in the direct lineage of technology. So that was like late 2020, and Defi Summer was in full force. I was starting to use more and more technology, like more and more web, three native apps.
00:09:02.818 - 00:09:50.132, Speaker B: Over the course of that year, I mentioned I was working on a separate project. I saw the Solana ecosystem just absolutely explode. It was like a literal cambrian explosion. And so by the time it was like late summer of 2021, I was taking a hard look at what I was currently working on. And then I was looking at Solana and saying, every extra week that I'm not working on Solana is just a huge missed opportunity and pulled the trigger and moved full force into Solana. Solana's transaction costs and speed open up an enormous new design space that is really not feasible if you want to build a truly on chain messaging system on some other blockchains. And so if you're looking at fractions of a 10th of a penny in terms of the transaction costs, and then sub 2nd, 400 millisecond block times, that enables a very large new design space.
00:09:50.132 - 00:10:22.034, Speaker B: And so what I saw at the time was this opportunity to build a whole new SaaS layers. So with dialect, we're building developer tooling. We want to provide this end user experience for developers to build into their own dapps. And when you have any orders of magnitude improvement in performance, it just opens up a very large new space to build in. And so to me, it was a no brainer. There was no question in my mind. So I've been a blockchain enthusiast for over ten years, but Solana was that threshold that was sort of that Rubicon where I just knew it's now time to build.
00:10:22.184 - 00:11:12.290, Speaker A: Yeah, I mean, I feel like in other ecosystems, something like this, I don't want to say it's not possible. It just seems like it's impractical. And I think Solana's design, where it has this incredibly cheap transaction fee and speed, is perfectly suited for something like dialect. And on chain messaging, if you will, have you dug into, say, other chains, like maybe something in the cosmos ecosystem, or even just ethereum? And did you evaluate whether or not this could be done, or was it just kind of like at the baseline? Look, Ethereum is like, pretty expensive per transaction and relatively slow block times. This is going to work for, say, push notifications or wallet to wallet messaging.
00:11:12.402 - 00:12:01.540, Speaker B: Yeah, so that's a great question. I would say the following. There are some wallet to wallet chat and communication tools on Ethereum, and with many of them, what you do is you authenticate with your wallet, but the messages may be stored off chain somewhere else, and that's not obviously a total deal breaker. In general, I think the authentication problem, I know it's not specific to messaging, but it obviously takes a really front seat in messaging of who's sending these messages. And the general problem of authenticating with your wallet is just a fun design space. Personally, really excited to see messaging come online on some other blockchains. If you really want to run a fully on chain experience where the message source of truth is on chain, Solana really has several orders of magnitude on a lot of these competing chains.
00:12:01.540 - 00:12:33.618, Speaker B: Not that that's necessarily the future that exists long term. It may actually make sense for there to be more of a data centric l one that stores these messages. And so the choice for us coming full circle on this question is Solana presented an opportunity for us to build a relatively small architectural footprint. That means let's just keep as much on Solana as possible. We're decentralized first. We're not storing any messages in, say, firebase or any other web two services and really provide that great experience. And it's really just a question now of where we go.
00:12:33.618 - 00:13:15.188, Speaker B: And messaging between wallets is such an important and compelling use case. And I think we're seeing a lot more projects come online now that this problem is inevitably going to be solved in a cross chain manner. And we are excited about that future, but we're 100% focused on Solana for now. We'll also say, I didn't necessarily explicitly say this earlier, but Solana's proof of history concept and the way that it works some of the first podcasts I listened to about that in summer and fall of 2020 just really blew my mind. And so another big piece of it is go where there's just exciting technology, where the developers are extremely talented and everybody's really enthusiastic. And for us, there's just a no brainer. We're having a blast on Solana.
00:13:15.316 - 00:13:53.926, Speaker A: I hear that very, very often these days, there's been quite a bit of interest from developers. In a lot of cases, developers who have never written an Ethereum app or any sort of other web3 app are just diving into Solana and loving it. And so, speaking of developers, as a developer, how do I use dialect? Can you kind of walk us through the scenario? Is there an SDK? Is there a token I need to have? Or what is the kind of process? If I'm a protocol or a project today that wants or needs on chain messaging or notifications for my protocol or projects, how do I get started?
00:13:54.110 - 00:14:28.194, Speaker B: Let me answer in two parts. Number one is what you do today. Our messaging protocol is live and audited on the Solana mainnet, and we have open sourced our protocol and web3 client we build with anchor. Really love anchor. It's one of our favorite toolkits we've worked with. And so you can import that web3 client directly into your web app or some other process, some other service that you're running, and you can get started sending messages right away. As I mentioned, even for DAP notifications, the primitive is wallet to wallet messaging.
00:14:28.194 - 00:15:08.956, Speaker B: So in the same way that you might receive an email from a business, some kind of notification, they're sending from an email address that they manage as the business. Same thing goes here. You manage a key pair that you do your messaging with, so you can import our protocol and just start sending and receiving messages. The main way that most projects interact with our tooling is two part though, two layers on top of that core protocol. Number one is if you're a DAP and you need to send a notification to a user or message saying that they're at risk of liquidation. Let's come back to this liquidation example. You need to be monitoring the blockchain to detect that there's this event where you then programmatically send the message.
00:15:08.956 - 00:15:54.280, Speaker B: Same thing goes historically with Twilio or Sendgrid. You incorporate this code into your services like we talked about earlier. You need to be running these off chain services that help determine that events are happening and to write messages. We offer open source tooling around. This is called our monitor framework, and our monitoring service, which is our opinionated way about how to host that. You can then basically spin this up yourself, or you can host with us and you use that to write the very minimal code that's specific to your protocol. So let's say you have some way to query for the user's or the wallet's obligations, which is a term that lending protocols use, and you can get your collateral health or your risk of liquidation directly from that data.
00:15:54.280 - 00:16:58.484, Speaker B: Our monitoring service allows you to fetch that data, basically write the code that's specific to your protocol, and then that gets piped into kind of like a reactive framework that we use to determine whether or not to send messages. And so this is monitoring tooling that's specifically custom built for figuring out to send a message. And it can work very flexibly with other kinds of tooling. Maybe it's like you've got a Kafka messaging queue or some other kinds of like some projects actually have fairly sophisticated Web two infrastructure, but they're still interested in working with us because we handle the hard problem of just making sure at most one and just at least one message get fired off to a user. The second half is how do you surface these messages to users? So today what we're solving, what we're live with, are what we're calling in app notifications. So think about your favorite web two product. You sign in and maybe somewhere in the navbar you see a little notification bell and it's a button you can click to see that there are messages or something you need to know about from that product.
00:16:58.484 - 00:17:40.072, Speaker B: Today we offer basically like a single react component. We're prioritizing react. Most projects web apps are built in react, where you can drop that single component into the navbar of your dapp and right out of the box. If a user clicks that notification, they have the opportunity to fully onboard to the notification experience all within that single component. So it's like a modal that pops up that allows you to say, yes, I'd like to enable notifications for this app. And then once you've done that, you can kind of see what are you going to get notifications around. So it might be warnings about liquidation, pending liquidations, might be liquidations themselves, it might be actually more receipt style messages.
00:17:40.072 - 00:18:49.620, Speaker B: And so it might be, oh, you know, an order filled if you're using a Dex where orders fill asynchronously can be things around DaO collaboration. So one of the major use cases that daos we've been speaking to have been interested in is engagement and retention on voting. So you might receive notifications from a DAO telling you that you have 6 hours left to vote on a proposal, or that there's a new proposal, or that maybe you're near a quorum on the voting threshold needed to pass or reject a proposal. So there's all these different use cases and that really you get that right out of the box directly in your Navbar with this single react component. So that's in app notifications. What's coming soon and coming back to this question of just the broader messaging thesis, we're launching support soon for email, telegram, possibly text message, other kinds of web two means, because the reality is, even if the thesis and the vision is fully on chain messaging, we live in a world where many users rely on and really appreciate getting messages via web two. And so email is a no brainer and a lot of projects have asked us to support that.
00:18:49.620 - 00:19:12.906, Speaker B: So that's coming online very soon. Then Telegram is a little more of like a web3 native messaging solution that's still off chain. And a lot of projects have asked us for support on that. You can think of the dialect standard as both the on chain messaging standard as well as a suite of really out of the box tooling to allow Dapps to reach their users however they want.
00:19:13.010 - 00:20:15.104, Speaker A: What's really interesting about how you're thinking about building out your company and the protocol and kind of the suite of products is that it reminds me of kind of like early days of Twilio. So I wrote a blog post many years ago, probably ten years ago now, about how over the top messaging was really kind of this new platform play and we've seen through the myriad messaging apps and then kind of the power of iMessage on Apple and that, you know, the blue bubble versus the green bubble. And I think there's now regulation coming out of the EU that all these messaging apps have to interop with each other. But that took many, many years. And I think Twilio really captured a lot of the developer mind share around creating these kind of suites of messaging products. And it started with SMS. And so you mentioned something like Telegram, which I think everybody in crypto lives and dies in telegram.
00:20:15.104 - 00:20:34.442, Speaker A: I can barely keep up with it myself. I've written some telegram bots and they're pretty easy. If you have a fundamental understanding of how webhooks work, is that something that dialect will enable? Is that maybe some arbitrary webhook could fire? Or is it something that needs to be actually baked into the on chain program itself.
00:20:34.578 - 00:21:13.764, Speaker B: Yeah, so it's not actually for support. We want to keep the part on chain as light and simple as possible. And so you can think of these web two channels, such as telegram, as really just parallel rails. And so you have the detection of an event that a user wants to hear about, and that's monitoring data on chain. And then you have various channels which may purely be in one user's case. Oh, I just want to get an email, or I just want to get a telegram message from a bot that's managed by the project. The developer experience around Twilio and Telegram and whatnot are excellent, but what dialect provides here, if a dapp is interested in reaching their users by these means, is you just get it all out of the box right away.
00:21:13.764 - 00:21:47.230, Speaker B: You write a little snippet of code that fetches the data, that determines if a message needs to be sent. And then you say how you want each message to look, and that's really all you have to think about. The user will choose how they want to be gotten in touch with directly through the front end tooling that we provide. I think it was actually you, Joe, who mentioned this. To us, one of the key metrics is time to success. Crypto is moving at just an absolute lightning pace. And while every project that we've talked to really wants this tooling, it's never quite the first priority that they have.
00:21:47.230 - 00:21:52.958, Speaker B: And so what we're trying to do is really make that as simple as possible for these projects to integrate us.
00:21:53.046 - 00:22:26.430, Speaker A: So let's talk about some of the categories that exist, not just broadly in web3, but I would argue is probably more suited towards Solana, particularly the payment space. So Solana Pay has launched. There's a lot of people building a lot of really interesting stuff with Solanapay, from point of sale solutions to web apps and mobile apps, et cetera. Can you kind of walk me through an example of how, say, someone that wants to build something with Solanapay would utilize dialect?
00:22:26.542 - 00:23:20.254, Speaker B: Yeah, this is actually a really fun topic. Ever since Solanapay got launched, the team and I have just been super excited about the messaging use cases there. This is also a good template for talking about our smart messaging thesis. I'm going to segue from Solanepay into a broader discussion here, but I would start by saying the following. Solanapay is a standard for being able to perform transactions, being able to perform transfers between wallets on chain, and there is a very compelling messaging use case here. If you think about some of the standards in web two, whether it's Apple Pay it for transferring, or venmo or square cash, that kind of dynamic experience of being able to message between users and actually take action on the message. One of our key insights with dialect is this smart messaging standard we're building toward.
00:23:20.254 - 00:24:43.200, Speaker B: And you can think of that kind of like an interactive link preview in every Dapp that you use where you connect your wallet, you have signing privileges everywhere. And so where we're building, and this, a few minutes ago I said, here's where dialect is today, and the question is where we're going. And in this smart messaging future, we're allowing users to send basically interactive link previews. And you can think of a transfer request as one of the simplest use cases there. And so, for example, if you want to send a transfer request via a dialect message to one of your friends directly at their wallet address, you can send that and then they can take action right in the message, whether that's scanning a QR code that's rendered for them, or it's clicking a send payment message. Coming back to some of the use cases we talked a little while ago about, such as liquidation warnings or DAO proposals and voting prompts, the holy grail in user retention and engagement is being able to reach them and have them be able to take action right where you're messaging with them. And in web two, beyond these app specific use cases, whether it's a Venmo transfer request or similar, most of the time if you get an email, there's a link in the email and you have to click that and go out to another app, and maybe you're not logged in on your phone.
00:24:43.200 - 00:25:54.026, Speaker B: So you say, okay, in 5 hours when I'm back at my computer, I'll take care of this, or similar with a text message. What's really unique about messaging in Web three is that we can build a standard where you can take action right in the message. And so whether it's Solana pay, whether it's a vote yes or vote no on a proposal, or it's a quick deposit to top up your collateral to avoid liquidation, any of those things. With dialect and our smart messaging standard, what we're building toward is that kind of web3 native future. And so the last thing I would say about this is, yes, it's true that messaging and notifications are this really critical missing piece of Web three, and it's just a really known hair on fire problem. When we got started on dialect, the question we asked ourselves is not just how we fill in that missing piece, but also how we take Web three to a place that Web two can't as easily go. And this is because our thesis is web3 is going to reach mass adoption because of excitement, exciting and really compelling, delightful new use cases that products are going to start to come online.
00:25:54.026 - 00:26:18.706, Speaker B: Whether they take advantage of universal authentication like we're talking about now, whether they take advantage of composability of the global shared state of all the data existing on a single blockchain. Those are the use cases that are going to make it really compelling for the first billion users to onboard to web3. This is our thesis with small smart messaging. And Solanapay is a really key and interesting part of that picture, I'll be.
00:26:18.730 - 00:26:33.866, Speaker A: Honest, that is fascinating because one of the cool things about what you're mentioning is that push notifications or in app notifications become actionable. You can actually do something right there.
00:26:33.890 - 00:26:34.474, Speaker B: That's right.
00:26:34.594 - 00:26:50.190, Speaker A: Versus it being this delayed or async process. And so the use cases really open up pretty dramatically because of the fact that these, these messages are now interactive and you can do things with them.
00:26:50.262 - 00:26:50.742, Speaker B: That's right.
00:26:50.798 - 00:27:18.182, Speaker A: And have you guys thought through maybe where this could potentially work in like the context of a video game? You know, there's a lot, or even like the Metaverse. There's a lot of, you know, web3 games slash metaverse type environments being created. And I'm curious if there's, if sort of in game messaging makes sense or if it's something that is slightly different.
00:27:18.318 - 00:28:04.854, Speaker B: Yeah, in game messaging, I think is a fantastic use case. And we've spent a little less time talking to gaming projects, I think just because that's a little early on, as we have, say, talking to Defi NFT Dao projects. But one of the things I'm most excited about is like sort of the universality of NFTs as assets and all of the infrastructure that's being built around the things that you achieve and the assets that you acquire in game end up having a life and a value beyond that game. It's really compelling to us that there be interactive sort of like smart message experiences around that content at the very least. So I think gaming is an incredibly exciting use case.
00:28:05.014 - 00:28:38.202, Speaker A: Awesome. Yeah, I could see a lot of really cool integrations being utilized there and they just kind of don't exist today. I mean, frankly, there aren't a lot of web3 games, period. But I know a lot of them are coming online later this year. What about the traction of the company and folks that you're working with today. I know since you pivoted dialect into this smart messaging protocol business, things have really started to heat up. Can you talk about maybe how many people you're kind of signing up or any projects that are currently utilizing your product today?
00:28:38.338 - 00:29:16.856, Speaker B: Yeah, that's right. We're talking to a few dozen projects right now across a lot of the verticals that I mentioned earlier. We're going live with a handful of our first projects that we've publicly announced so far. So that includes squads and meaning on the DaO tooling side, jet protocol, on the lending side, bridge split on the NFT and NFT fractionalization space. Zero one protocol friction is another project. You mentioned structured products earlier and it's been a real joy working with them. One of the things that we believe is it's best to dog food your own tooling to make it better.
00:29:16.856 - 00:30:07.500, Speaker B: So we've just straight up been rolling our sleeper up to help build out with them, and that helps us get better and better at our developer tooling. Then there's just this other wave, as I mentioned, a few dozen other projects that we can't talk about quite yet, but are extremely excited to support and to support all these projects. We've also been growing the team pretty quickly as well, so there's a lot going on right now. And as we talked about earlier, it's an incredibly compelling use case. This technology has to exist, at the very least receiving an email or a text message or a telegram message. But where things really catch and where we really have a great time with our conversations is around this smart messaging future that we're building out. And that's when I think folks get really excited about the opportunity.
00:30:07.612 - 00:31:05.054, Speaker A: Yeah, I mean, I completely agree. It's really hard to imagine a scenario where an app isn't going to need some form of messaging or notifications. And given the direction and the future of the company, and where you guys want to take the product and protocol, it seems inevitable that folks are going to be adopting this. So maybe talk a little bit about how you're envisioning the future. You know, you have a very specific view into what you're doing with dialect, but by engaging with all these different projects and protocols, you can get an interesting view into what things are happening, what things are coming out soon, and maybe where you see things heading. The space is evolving and changing so rapidly and quickly that it's hard to predict anything. But what are some things that you see in the future? Not necessarily just for dialect, but also web3 in general, and how maybe dialect plays a role in that.
00:31:05.174 - 00:32:21.024, Speaker B: Yeah, I think if there were a single theme, and I'm not alone in saying this, it's just really what got me into crypto in the first place, and it's incredible to see it beginning to happen. I would say the thesis here is composability. So any blockchain that really makes global shared state a possibility. I think it might have been Chris Dixon who said composability is like compounding interest, it just causes this exponential runaway in technology. And the things I'm most excited about, and we are most excited about at dialect, is that composability. And so whether it's being able to exchange information and perform financial actions between DeFi protocols or it's the financialization that's going into some gaming tools that are coming online, like you said, that rely on some deFi infrastructure, like to me this is why it's going to be the sort of killer consumer experiences that come out of composability and global shared state that are really going to make for the next big wave in web3. And the way we're interested in that, in our own small way with dialect, and I didn't mention this earlier, is one of our visions here with smart messaging is creating a kind of decentralized inbox.
00:32:21.024 - 00:33:18.164, Speaker B: And so as we mentioned, our tooling today supports these on chain messages delivered directly to any given DApP, where the user enables and then can consume those messages in the DApp itself. But those messages can be consumed by anyone. And so there's this other half of the problem that we're working on that's coming online soon, where, for example, a mobile wallet could have an entire inbox and messaging section. And now you're talking about no matter which dapps you've enabled, you're receiving a true iOS or Android push notification directly to that mobile messaging experience that you have there. And that's just yet another example of composability. Like I said, I'm not alone in being incredibly excited about this, but it really is, I think, the kind of compounding developer experience that's just going to create a whole new set of really exciting consumer, like a new kind of Internet consumer experience.
00:33:18.624 - 00:34:02.138, Speaker A: That's awesome. I agree. And I think one of the areas that is no short of discussion in web3 is nfTs. And I've talked about this on some Twitter spaces and other podcasts where right now we're just kind of in the infancy of what NFTs can unlock. There's obviously, the art aspect of it, there's in video game assets, et cetera, et cetera. But one of the things that I am interested to hear your take on, and maybe how this correlates to dialect is NFT is in a person's wallet. You know, it's on chain, but the person interacting with the wallet is, you know, a customer, a user.
00:34:02.138 - 00:34:55.186, Speaker A: And I think a lot of companies want to be able to engage with their customers and users more directly. So is there a scenario where I have an NFT in my wallet and depending on, you know, the NFT mentor or something, maybe it's a brand, maybe it's a company, maybe it's an artist, maybe it's a musician, has a way to either via the NFT directly or utilizing dialect, be able to kind of communicate with me directly. And an example I always give is imagine Starbucks wants to airdrop, I don't know, some seasonal loyalty program thing, Christmas, Easter, whatever, spring break, you name it. And it's for people that have this NFT in their wallet and they want to airdrop them something or be able to communicate with them. Is this something that dialect would unlock, or do you think this is something that's more kind of NFT specific?
00:34:55.370 - 00:35:44.980, Speaker B: To be honest, I thought you'd never ask about this. This is this third part of smart messaging that we are just beyond excited about. And it touches on a few different things. But maybe I'll just say briefly, another key aspect of web two messaging that I think to many of us feels very broken is this question of inbound and cold, inbound and marketing and spam. And with web3's inherent financialization, there is this very natural situation where you can basically tokenize messaging and create markets around how different entities communicate with each other. And on the two extremes there. Or maybe let's talk about two to three points on the spectrum here.
00:35:44.980 - 00:36:34.704, Speaker B: If you, Joe and I just want a message with each other, there's sort of mutual opt in in the exchange of a token, and we can just message with each other. Similarly, if there's a business that I really love and I want to opt in, let's say, like you mentioned, I think you said Starbucks, I'll opt into that. And there may be some implicit under the hood kind of exchange of a token that allows for that messaging. There's also scenarios where businesses want to get in touch with individuals that they think are high value, and that's a cold inbound scenario. And in that scenario, a business might need to actually buy one of these tokens. Of yours on an exchange in order to engage with you. And by financializing that component of cold inbound, I think, one, it creates a much more harmonious kind of like cold messaging experience in web3 that in many ways is a bit much in web two.
00:36:34.704 - 00:36:58.878, Speaker B: But in the mutual opt in scenario, the messaging is effectively vanishingly small cost or effectively free and powering all of this. Kind of coming back to your point about nfTs, is the NFT primitive. And so this is a technology and an architecture we're exploring right now, and it's very likely that NFTs will serve that use case. It's a kind of technology and a use case that we're just like, beyond excited about.
00:36:59.006 - 00:37:26.910, Speaker A: Fascinating conversation today with you, Chris. Really appreciate it. The future is bright for dialect. The use cases that you've outlined are kind of no brainers. But what I'm really excited about is what we unlock in a web3 native context for smart messaging. I want to thank you today for joining the Solana podcast. How can people actually get in contact with you? Are you on Telegram or Twitter? If they want to contact dialect and get in touch, what's the best way of doing that?
00:37:26.982 - 00:37:51.888, Speaker B: Yeah, the best way to get in touch with us is on Twitter, and our Twitter handle is saydialect. That's saydialect. And we love engaging with the community. Developer feedback, we live and die off of that. And so if you have complaints about our technology, have feature requests, any of that, send it our way. We're also on discord. We have a discord community.
00:37:51.888 - 00:38:01.800, Speaker B: You can join that from our bio and Twitter. And then the last thing I'd say is we're hiring. And so if this technology is interesting to you, we would love, love, love to work with you.
00:38:01.872 - 00:38:18.088, Speaker A: Well, you heard it here first, folks. Chris Osborne, computer scientist in the quantum physics space turned smart messaging protocol engineer and architect. Chris, thanks so much for joining the Solana podcast. Looking forward to chatting with you again soon. See ya.
00:38:18.176 - 00:38:19.664, Speaker B: Thank you very much, Joe. It was my pleasure.
