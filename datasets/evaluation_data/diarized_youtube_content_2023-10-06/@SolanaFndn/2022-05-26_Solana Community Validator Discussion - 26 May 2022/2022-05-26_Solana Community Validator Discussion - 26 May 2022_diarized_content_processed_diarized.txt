00:00:00.200 - 00:00:38.276, Speaker A: Welcome, everybody, to the validator community call. We had a packed agenda today, but unfortunately Frank had a personal matter to attend to. So Frank from Genesis go isn't going to be able to present. So the only agenda item that's going to take some time is Zentetsu talking about his vote lagging proposal. So we'll take some time for that and then also talk about a few updates to the network. Not too many happening right now. Yeah, so to start it off, main net beta, the approved version, there is one, 9.24.
00:00:38.276 - 00:01:18.430, Speaker A: So make sure to move to 1.9.24 if you're on Mainnet. Beta testnet, the approved version is 1.10.19. Also make sure to upgrade if you're on Testnet. And then one other thing to mention here, the block production on Mainnet has been slow, and because of that production time being slow, clock times are actually off. So if you've noticed on Solana Explorers, a recently produced block might say that it's 30 or 40 minutes old. So the labs team is investigating this and it's aware of this, but just something to be concerned or not concerned, something to be aware of.
00:01:18.430 - 00:01:33.414, Speaker A: While the issue is ongoing, any new produced blocks are going to have an older timestamp on them, and that's it. Any questions about those before we hand it off to Centetsu?
00:01:36.554 - 00:01:44.914, Speaker B: I have a question. Yeah. Is that we know Testnet also is way, way, way behind. It's the same cause, and the solution.
00:01:44.954 - 00:02:05.014, Speaker A: Will fix both, as far as I'm aware, yes. They don't know the root cause yet, but they're investigating. Any other questions? No? Okay. All right. Well then, Sentetsu, the floor is yours.
00:02:05.394 - 00:03:09.914, Speaker B: Thank you. Okay, so there's a lot that could be talked about here. I'm going to try to keep it focused on this specific proposal and the reasons for for it. As many of you may be aware, voting on Solana is the mechanism whereby we all earn the credits that then turn into the staking rewards that our stakers earn, and then potentially by commission percentage, the amount that a validator may earn from that. And right now, the method for accounting for voting credits does not include any aspect that counts, how quickly the validators voting. And what that means is that some validators have discovered that if you delay your votes considerably, you can take a sort of longer survey of what's happening on the network and potentially make votes that are more accurate, which means they land on the right fork more often, which means that you get locked out less frequently, which means that you earn more vote credits. And there are a couple of validators that are doing this to a great extent, and there are potentially others that may be doing it to lesser extent.
00:03:09.914 - 00:04:37.508, Speaker B: If you, I have data to kind of show what the shape of that looks like, but there are only a couple that are very clearly doing it, and maybe another subset that has some aspect of lagging in their vote performance. So, having noticed this, I had an idea that perhaps we could have a modification to the voting algorithm, credit algorithm, to incorporate what I call the timeliness of a vote. So when a validator casts a vote, if that vote lands more quickly, which is to say closer to the slot that it's voting on. So if it's slot 100, and you cast the vote as soon as you see it, and that means it lands in slot 101, which is the earliest it could land, then you kind of get maximal credits. But if you're some reason delayed, either intentionally or just by happenstance of the network, it lands in slot 102, you might make slightly less credits. And what this then does is it makes any kind of an intentional lagging grossly unprofitable, because if it's, if the parameters are correct, then even a one slot intentional lag could undo all the positive effects on credits that, you know, would have happened by virtue of that extra lag, giving some greater lockout aversion. I kind of wrote up a proposal for that months ago, and it was met with half interest by Solana Lab.
00:04:37.508 - 00:05:34.354, Speaker B: So I kind of recognized that in order to make the proposal real, I'd probably have to gather the data to kind of show what would happen, what validators could, you know, what, what the differences would be in how vote credits are earned, and whether or not the proposal has the intended effect, and whether or not it has any effects that are unintended. And, and if any of those effects are, would be considered negative. So I have gathered that data. I gathered over twelve epochs, from 299 to 311, and I have written a proposal that describes how, what I think this proposal would look like, what it would do, and then also has tables that show the actual data of what the effect would be. And it has a little bit of discussion of, of what the outcome of that is, and overall, whether or not there are any issues. And so, I have a website that I made. I'm not a website designer, so it looks terrible, but please focus on the content.
00:05:34.354 - 00:06:20.552, Speaker B: And I will share that now, and I won't read through that, but I would like to at least show some of the data so that we all can understand kind of what it looks like. And after that, I'd like to talk about, if I have some time, some new changes that I've just found out about a day or two ago in how voting is done completely. 1.10 has a whole new voting methodology, and I think it's got a lot of aspects that we should at least be aware of because remember, we're the stewards of the network, so we have to, like, you know, Solana Labs makes the software, but that doesn't mean that we don't have any agency in giving feedback or pushback or anything. So I just want to make this issue aware so that we collectively can decide if we want to address it at all. So. Okay, so I'm going to share this now.
00:06:20.552 - 00:06:40.688, Speaker B: First, before I do share, are there any questions about anything I said so far? Okay. I mean. Okay, so I'm going to share. Let me get this going. Okay. You seeing that? Okay. Should be a.
00:06:40.688 - 00:07:17.730, Speaker B: Yeah, yeah, we see it. Very ugly HTML text page. Okay. So not going through the whole, you know, proposal, I just kind of described, you know, what I described the basic, in basic terms, you know, what the proposal is all about. And I also described sort of the parameters that I consider for how the algorithm, the new voting credits algorithm, would work. And there are basically three aspects to it. There's what I call a grace period, which is to say if, if the proposal was that every single slot latency, I call a slot latency, like one slot later landing the vote than you could have.
00:07:17.730 - 00:08:10.212, Speaker B: So if you're voting on 100, the earliest that it's possible to land a vote on slot 100 is 101, because you can't land it in 100 because 100 was never even finished being broadcast yet. So you can't possibly vote on a slot you didn't get. So 101 is latency zero, 102 is latency. 1103 is latency two. So grace period is this concept of. Because we can't expect every validator across the world to have the same natural network latency to other validators on the network, a grace period is a way to allow all validators a certain affordance for how long they can take to land a vote and still get maximum credits. The purpose of this is to make sure that validators that are far away or just having some kind of natural, they're just in some bad little place in the network, for whatever reason, aren't unduly punished.
00:08:10.212 - 00:08:45.774, Speaker B: As long as you can land a vote within this grace period, you get maximum credits. So the grace period is kind of important. Because if it's too low, then some validators may get unduly punished because they can't meet that very frequently. And if it's too high, then it kind of defeats the whole purpose of the proposal because each additional bit of grace period gives more room for lagging to occur. If grace period was 100, then it would have no effect because you could lag within 100 slots and still get maximum credits. Okay, so there's grace period. The maximum credits is how much are votes within the grace period worth? So let's say they're worth 20.
00:08:45.774 - 00:09:20.252, Speaker B: Then if you land a vote in the grace period, you get a full 20 credits. Credit reduction factor is when you're outside of the grace period, every slot that your extra latency, how much is your credits reduced? So if it was two, then every slot that you were slow would lose two credits starting with that maximum value. So the maximum is 20. You'll go 2018 1614 all the way down to one. And the important thing to remember is, another important thing to remember is this never gives zero credits. So it ends at one. So once we reach the end of the long tail and you're at one, it just stays one forever.
00:09:20.252 - 00:10:03.646, Speaker B: That way, it's never the case that a vote that could have earned credit credits gets no credits because you don't want to discourage validators from casting old votes. In situations that the network's having trouble and slots are really slow and votes might get old, you still want there to be incentive for those votes to get cast. Now, the incentive does get small because it's only one, but it's better than zero. Okay. So after I took these three factors and I ran the data with many different combinations, and I kind of zeroed in what seemed to me to be the best, and that was grace period four, which means that there's four slots maximum. You know, that anybody, if they land slots, land a vote within four slots, they get maximum credits. Maximum credit, 16.
00:10:03.646 - 00:10:45.800, Speaker B: And the important fact about maximum credits is it kind of establishes the shape of that curve. So if maximum credits is very high, then the curve drops very slowly, and every slot latency has only a very small effect. And then credit reduction factor, I just figured out as one, I tried 1.5 and two, which kind of, like, also changed the shape of the curve. And it just. The factors I was going for was basically to discourage lagging, which is the most important aspect of this proposal. But I want to temper that so that validators that have reasonable performance have as smallest sort of, like, negative or positive impact on their credits as possible.
00:10:45.800 - 00:11:50.230, Speaker B: And then also I wanted to minimize the impact on validators, especially in Japan and Singapore, which quite frankly, are the furthest nodes right now on the network. If you look at latencies and, you know, and all these factors, and I didn't want those nodes specifically to be unduly punished. So I kind of tried to, you know, consider those three factors, and I played with the numbers until I got what seemed to be numbers that had the greatest impact on discouraging lagging, but with minimal impact on other validators and minimal impact on the Japan and Singapore validators. Okay, then I have this big table with a lot of data, and I'm just going to show it rather than reading this. I have an average for the epochs that I collected, and I also have one table per epoch. If you want to go and look at specific epochs to just see what it looks like at a finer granularity, and also to see what the variance looks like between epics. An average could hide like very high and lows, but the average itself also tends to squash all the data.
00:11:50.230 - 00:12:34.224, Speaker B: But anyway, so I also have this broken down by validators and data centers. So you can look at data centers and see for the all validators within that data center what is the average performance of those validators, which is mostly used to look at geographic effects. Okay, but starting with the validators table, so this is what it looks like for all the averages of everything. And here on the left, we can see what the normal, the ranking is, the vote credits ranking, like who had the most and who had the least. And there's 1800. So it's a pretty long table, but we can see that the number one lagger, who's bindi, you know, was at number one in credits ranking over the entire average span of those twelve bit bucks. Number two was leapfrog.
00:12:34.224 - 00:13:02.608, Speaker B: Number three was private validator, which is the other kind of flagger known lager. Then we have cogent, then, you know, shinobi, and then it goes, you know, on and on. Some of them are private. And in fact, we have a very large block of private ones here. But then you can kind of see in the next slot where. Oops, sorry, where they end up after the TR stands for timely rankings. So after this proposal, where do they end up? Well, we see Vindi gets knocked way down, leapfrog next a little bit.
00:13:02.608 - 00:13:34.504, Speaker B: The other major lagger here gets knocked way down, and all the other ones kind of just shuffle a little bit, except for one interesting aspect is a lot of these validators get knocked way down too. And I think it's because a lot of these are AWS nodes. And my impression is that AWS nodes just don't perform that well. And right now they're up here, but they kind of get knocked down. And then if you look on the right column over here, oops, shouldn't click. I messed it up again, these are all sortable columns. Then you can kind of see both visually by looking at sort of the icons what the change looks like.
00:13:34.504 - 00:14:16.934, Speaker B: But you can also see what the actual rankings are after the proposal. So this table is kind of split in two. The left half is kind of the normal thing, and the right half is what it looks like, you know, after the proposal. But I also put this table, the column next to it, so you can kind of see the actual ranking changes more readily also. So another thing I noticed is that the icons, I think they kind of look a little better. Like, we see more known validators showing up here and more of these unknown, probably aws nodes getting knocked down and other nodes kind of coming into their place, many of which are known like public validators. Okay, so one, probably the most important.
00:14:16.934 - 00:14:32.434, Speaker B: I'm sorry, let me look, make sure there's any questions. Yeah, I mean, okay, so, yeah, I knew this would come up. I mean, I'm just going to put it on the line. My voting is the best. It just is. Like, it's low latency, lands the most. Just is.
00:14:32.434 - 00:15:11.992, Speaker B: So one aspect of this is that, yes, the best voter does kind of rise to the top. But another aspect you may want to be aware of is that if you look at the normal percent and the timely percent, these are the column showing for each validator how many credits it lands relative to the leader. Now, because these are averages over many epochs, this doesn't add up to 100%. It's complicated. But you can see that, like when you get down to 20 or 30, I mean, it's 94%. So like they're about 6% behind, but if you look at afterwards, they're actually kind of going up a little bit. What that means is the curve is flattening.
00:15:11.992 - 00:16:09.060, Speaker B: So like, yes, you know, the ranking stays kind of the same or maybe shuffles a little bit, but the overall curve squashes just a bit, 1%, 2%, which means that most validators are going to actually make a little bit more. The leader, which is me, will drop down relative to everyone else, will still be a leader, but everyone, most people's credits are actually going to go up relative to the leader, which means most people's APY is going to go up a little bit. Not everybody, but most or at least half are going to go up relative to the leader. So that's maybe a positive that others can see in this. But yes, I mean, it is true, it does go up, but that's just a natural aspect of this is the leading vote earner and also the latency here. I also have an average latency column, so you can see the average vote latency that's landing. And the latency here is about average.
00:16:09.060 - 00:16:23.532, Speaker B: Like 1.8 is around the average. So I'm around average. Some are really slow, which is why they're dropping down a lot. Some are really fast. What was this KTKD? I don't know. They got a really fast latency, so they bump up a little bit.
00:16:23.532 - 00:16:54.160, Speaker B: They go from ten to seven. So anyway, so if I sort by diff, we can kind of see the actual impact in the most convenient form. So this column here, this diff column is how much you're changing how much of givens validated ranking compared to the leader changes with this proposal. So we can see some really bad rankings. They're kind of noise because they start off so low. They might have only been running half an epoch or something like that. They're only earning 0.1%
00:16:54.160 - 00:17:11.002, Speaker B: of the normal credit. So these don't even really factor in. They're just complete noise. So I kind of ignore these ones that have really low ranking. But here we see VIMD is the first one that really gets knocked down by 21%. That's a huge, a huge difference. Completely eliminate all incentive to do that.
00:17:11.002 - 00:17:51.114, Speaker B: Kind of lagging some more of these really bad validators that only earn 1% of everyone else's credits, which means they weren't really running. Again, noise. Four ball gets knocked down pretty well. But if you look at validators graphs, four balls had very bad performance for a very long time. So it's unfortunate that there are going to be winners and losers, but they're going to be proportionate to how well they're actually performing on the network. And as we go down, you can see that there aren't too many that aren't really bad to begin with that have significant losses. But if you go and look at all of them, they all also have significant performance problems.
00:17:51.114 - 00:18:36.148, Speaker B: And if we reverse this, and I guess if we go down, I'm going to scroll about halfway, we can see that the average validator is gaining about 0.9% on the leader. Just that's what I meant before when I said, on average, most valuables are kind of gaining the curve is flattening a little bit, which is bringing most people's earnings up a little bit and the leaders down a little bit. But if we flip this and we look at who's winning the most, we see, again, noise. Because these ones that were so low ranked, it doesn't take much to sort of bump them up or down a lot. So ignoring the noise, we see, once again, KTKD. I don't know what this one's doing, but man, are they awesome.
00:18:36.148 - 00:19:03.056, Speaker B: They're like, votes are hitting really, really quickly, which is good for the network. That means that end users are going to get their blocks confirmed more quickly, which means the transactions are going to be faster, which is what we all want to happen. So I personally see no problem with someone that has this degree of good latency getting a little 1.5% bump from this kind of change. And that's the biggest bump right after that, it just gets smaller. This one bumped up 1.5. Block logic goes up 1.4.
00:19:03.056 - 00:19:24.220, Speaker B: You know, the bumps up are small. They're in the small percents. The bumps down are huge because they're punishing the laggers. So that was the purpose of this change. And my contention is that it has that intended effect. The last thing to look at would be the data centers. Are there any data centers that are particularly doing bad? And the answer is that it's really hard.
00:19:24.220 - 00:20:05.952, Speaker B: The data is so messy all over the place that I feel that it's kind of hard to draw trends. For example, if you look at Canada, there are, you know, well, most of them are down a little bit, but I find that this is kind of true. The shape is that it's hard for a whole data center to, like, not bump down a little bit, but there aren't too many that have positives, I'll say. Which means that since it's all relative, everyone's kind of, the difference isn't changing. If we all go down 1%, then in fact, the average hasn't moved at all is kind of what's happening here. But, sorry, I mostly did this because I wanted to look at Japan and Singapore, and we can see Japan and Singapore, but not Korea. This validator, for example.
00:20:05.952 - 00:20:34.588, Speaker B: This has one validator. So it's really hard to say, is this a data center or is it that validator? Yeah, they're getting hit hugely, but they, you know, it's possible that validator is just a really bad validator. For whatever reason, it certainly isn't the case that all korean data centers have this problem. Here's another one in Korea, and they're only down 0.5%. So I would say this is more likely the validator or some problem with that data center. That is the geographic region. And once again, Japan.
00:20:34.588 - 00:20:58.008, Speaker B: Okay, they're all slightly negative, between 0.6 and 1.2%. And if you look at Singapore, it's kind of similar story. Where is Singapore? Sg. Oops, that would be above before Richard. So we can see, you know, again, all slightly negative. But if you look at, for example, it's true they're also negative, but that doesn't.
00:20:58.008 - 00:21:41.038, Speaker B: Like, there are many regions that has that have that impact. For example, Germany, which should have very low latencies because it's very close to the epicenter of any. There might be one or two sort of co epicenters of the network, us, you know, US and Europe, but Germany is certainly close as anybody, and many of them are slightly negative to very negative. Like, here's one that's similar to that korean one. So my opinion is that although there's a lot of data, and it's hard to draw any really clear conclusions, data, geographic region has a very slight impact, but much more important is the data center and the validator quality. So for that reason, I feel that this proposal also doesn't unduly penalize any particular geographic region in the world. And the reason is because of that grace period.
00:21:41.038 - 00:22:20.638, Speaker B: If you took the grace period out, believe me, the results look very different, and Japan and Singapore would get crushed. But with that grace period, that effect is minimized while still having the positive impact of producing lag. Okay, so that's my proposal. I present it here because I'm hoping that right now I'm working on the pull request that will. I will submit to sublime labs. I'm hoping to get some backup for that, because I don't know if they'll listen or if they'll care or if they'll consider it important. I think it's important because rather than fighting a fire when it happens, let's fix something ahead of time, because more validators may end up doing this.
00:22:20.638 - 00:22:44.314, Speaker B: And the more lag we're introducing, the more we may be hurting. Who knows the interplay of all these issues. It could be one factor that could be causing the network to be performing badly. So the reason I present it here is because I'm hoping that when I do make the pull request, that I can get some backup that other validators can give feedback to sonal labs and say, we think this is important and we want this to happen.
00:22:45.534 - 00:22:47.230, Speaker A: Question from Brian for you.
00:22:47.382 - 00:22:48.990, Speaker B: Yeah, yeah.
00:22:49.022 - 00:23:23.038, Speaker C: Hi. Let's see. Well, thanks for your time to pull all this together. That's a lot of data, and I know that it took you quite a bit of time, so thanks for that. I just. I want to point out that I think there's a not visible selection bias here to consider, and that's because we have so few nodes present in the southern hemisphere. So South America, South Africa, Australia, and those latencies will be probably even higher than, say, Japan or Korea.
00:23:23.038 - 00:23:56.504, Speaker C: So let's just try to consider that as we're looking at this. And then secondly, do you have a ranking that shows what percent of the validators make it within the grace period or grace period plus one or grace period plus two? I actually think that's more helpful than the timely ranking that you've done, because that appears to favor vote modders as opposed to people that are submitting within the grace period. Everything is fine and there's nothing wrong.
00:23:57.164 - 00:24:41.934, Speaker B: Okay, well, a couple of things there. I'm not sure from this data why you say it favors vote modders, because it favors latency, and so there's no vote mod that I know of that is reducing latency. That's just kind of the only thing that really happens is latency gets increased, which I think we see here, for example. I think, I can't prove it, but we definitely see here, and we definitely see here. So the goal was not to favor anybody, but I think that regardless of who's presenting this proposal or what, you know, like, what the specific characteristics are right now, I like to think that the network should be rewarding faster voting. Like, I think that's just better. But I think you're right.
00:24:41.934 - 00:25:08.268, Speaker B: Like, there is. That's why I tried to temper this. Like, we do not want to make it the case that it becomes untenable to create a validator in South Africa or in Chile or something because the latencies are so high that you get. You just get crushed on credits. We don't want that to happen. Since I don't have that data, I can't say for sure. I just know that this was tuned to take those validators that seem the furthest right now, which is Japan and Singapore, and those don't seem to be unduly.
00:25:08.268 - 00:25:41.610, Speaker B: I mean, they are slightly impacted, I won't lie. But they're not impacted outside of a range that many other regions have. Data centers that are impacted. I think it's impossible to believe that there isn't some disadvantage being given to distant regions, but there is already a disadvantage there just to be aware. Like, the further you are, the more chance your packets are going to get lost in more number of routes in between, which means your boats might get lost. Who knows what might happen. So it just feels like what has to happen is the network has to grow so that it's big enough that those edges are no longer so far away.
00:25:41.610 - 00:26:18.526, Speaker B: And that's an incremental process, I think, and I don't know, it would be a philosophical question to say, should Solana be shaped such that it's better that every region in the world be able to participate, even if it means the network runs slowly and more poorly and confirmations take longer and it's not able to satisfy the promises that it makes about why it's unique and better, or is it better that it just kind of grow organically so that that leading edge gets wider and wider? And eventually it doesn't matter what region you are in the world, you're kind of close enough. The emphysetta is everywhere, you know what I mean? That's what I hope happens. I don't want to discourage any geography. That's never the case.
00:26:18.590 - 00:26:51.576, Speaker C: Yeah. What I'm suggesting is that just as we look at that grace period where you get max credits, is that you want to try to accommodate maybe the current latencies plus a little extra for future validators in the southern hemisphere sphere. And so there's going to be some headroom within that grace period. And then I. But I would. Again, I appreciate what you've done here, but it would be nice to see the percent that are actually making within the grace period. So we're not making, we're not picking the best voter.
00:26:51.576 - 00:26:57.464, Speaker C: We're saying that this percent of the validators is able to land a vote within the grace period.
00:26:57.624 - 00:27:34.470, Speaker B: Right. Okay, so I can address that very briefly right here. I think there's a way to gather that data more exactly, and I don't have that, but we can get an approximation by looking at the average post latencies. Now, the average doesn't is kind of misleading because one boundary may often go very high above, and then sometimes, like, it's hard to say what the spread looks like. And what's important is if you have a cutoff, it's how often you're above the cutoff, not what your average is. But the average does inform what that, you know, it's hard over the course of a million, whatever this is now, 1212 epochs is probably, or eleven epochs is probably twelve. I think it is anyway.
00:27:34.470 - 00:28:07.356, Speaker B: It's probably millions and millions of votes. So I think that these average vote latencies probably very approximately, very closely approximate how often validators are landing votes within the grace period. So if I look at this average vote latency column, if you go down to where it starts going over four, we have to go all the way down to, I don't know, the last. I don't know where we're at. The last 3%, 2%. It's a very small number. And actually, I'm not even there yet.
00:28:07.356 - 00:28:22.818, Speaker B: Well, I know I'm there. In fact, it's all on one page. It's all right here. These are the validators over four. Some of them are ones that we know shouldn't be over four. These are validators that for whatever reason, they're not in regions that are problematic. They're just lagging.
00:28:22.818 - 00:28:51.224, Speaker B: In fact, I haven't gone and looked at all these, but I think every single one of these is in that category. None of them need to be over four, at least according to their geographic region. Now, of course, if you're just barely under four, chances are you're hurting, too. Like, for example, this one, which we know is a lagger, just barely under four. So that means sometimes they're landing votes, you know, underneath that grace period, but oftentimes they're not. And so the further you get away from this, the kind of better you are. But you see, we get down to 2.5
00:28:51.224 - 00:29:27.150, Speaker B: very quickly, like the last. It's now we're at, I don't know, more than 90% or at least 2.5. So I feel like even if you had one more extra slot latency, which is about, you know, 500 to 700 milliseconds, which I think is easily several times around the world in terms. Well, maybe not. Maybe it's once around the world in terms of, like, overall latency possible. You're still within that. Now, of course, you know, being further away makes it harder to satisfy that you have to have better network quality and better validator to, you know, to make up for that, that extra distance.
00:29:27.150 - 00:30:02.110, Speaker B: But I don't know any other solution either. We just don't have it at all where we say, you know, anybody can kind of just cast their votes and try to get them in, and as long as within a minute or whatever, you're fine. Or we actually do try to create some incentive to push, you know, to push us towards better performance. But your points are very valid. I understand them. I can rerun these numbers with five or six if you want. I think I did at one point, but the difference was not great in terms of, you know, how it changed things, because as we see, most people are within the range anyway.
00:30:02.110 - 00:30:06.674, Speaker B: I feel like four already. I guess what I'm trying to say is I feel like four already has that.
00:30:06.994 - 00:30:21.854, Speaker C: Okay. Yeah. And that. So that's great. Right? So we feel like there's enough headroom there that future validators in the southern hemisphere are not penalized right out of the gate. And so that's great. So it feels like there's some headroom there.
00:30:21.854 - 00:30:36.950, Speaker C: And then as far as we're concerned, as validators, as long as we're landing within the grace period, there doesn't need to be a fight to say, hey, I'm faster than you are. Right. We're just in. The grace period is good enough.
00:30:37.102 - 00:30:42.526, Speaker B: And four slots of grace is four times, what, 600 to 700 milliseconds. We're talking several seconds.
00:30:42.590 - 00:30:43.006, Speaker C: Right.
00:30:43.110 - 00:31:18.566, Speaker B: And it feels hard for me to believe that there's values in the world that can't land a vote within several seconds. Like, you know, and if it can, then, I don't know that salon can work, to be honest. But. Okay, so then is there raw data? Was a question. So if you look on this page, I actually do link down here to all the raw data I have. The raw data which I gathered from the way this is, I was given access to Google bigtables by Solana foundation, which let me write some queries to pull down all this data and that's stored here. Now, you can't reproduce that unless you have access to their bigtables, but you can spot check this data if you want to.
00:31:18.566 - 00:31:38.920, Speaker B: What you do is you download this. There's a format that's described. If you read more of this documentation, it's a really simple format. It just says free slot for each block. Who voted on what? You can go. If you want to spot check this, go to explorer and say, if this data says that on this slot, this guy voted for that, then go and double check to make sure that that vote really was there. I've done some of that spot checking.
00:31:38.920 - 00:31:53.618, Speaker B: I think it's all accurate. But if you don't want to trust me, you can spot check it. At least. I certainly didn't fabricate this, about 160gb of data. I mean, this is all just pulled down from Google table. So the only way this is inaccurate, if there was a. There was a bug, I think, in the data gathering, but I don't think there's.
00:31:53.618 - 00:32:13.182, Speaker B: Then I also have this process form. So the raw data, you can. I actually kind of process it down into an easier to understand and easier to work with form. And that's what. Second file. So you're welcome to look at both of them, and they're both documented. If you go to the GitHub repo that I have, that actually would tell you how to reproduce exactly what I did.
00:32:13.182 - 00:32:49.354, Speaker B: Some of the steps here, you can reproduce even just using the data that I provided, if, like, you can't get it from, you know, big tables, and you can, even if you wanted to, you can play with your own. You could try latency six and or grace grade six and whatever, and you can see if it seems like I was dishonest and I cherry picked my own numbers in some way, but I didn't. But you can certainly, you know, or if you find something that seems better, let me know. I'd be willing to adapt, change the proposal. Yeah, I think I covered that. Um. Oh, someone asked to increase the text size.
00:32:49.354 - 00:33:09.530, Speaker B: I'm sorry. I never saw that. Sorry about that. Was vote backfilling determined to be beneficial? Yeah, it's hugely beneficial. I mean, I'll be honest with you, I don't think Solana lab's voting algorithm is right. I just don't think it is. And because what it does is it.
00:33:09.530 - 00:33:35.946, Speaker B: It waits until it, if it thinks it's gotten too far ahead, it doesn't say okay. When I realize I'm not too far ahead, let me go mature. Include those slots I could have voted on but didn't vote on, because I didn't realize yet that they were okay, but there's no reason not to vote on them. They were okay. The only reason I didn't vote on them is because the happenstance of you didn't see them in time, but had you seen them in time, you would have voted on them. So I just don't see any reason not to do it that way. It is more conservative.
00:33:35.946 - 00:34:05.594, Speaker B: It does potentially lead to lower lockouts because you're kind of committing less. But committing less also has an effect on network. If we're all committing less, it kind of means something in terms of what's getting confirmed. So I just don't personally think it's right. And I spent a couple weeks trying to craft a public pr that they could take, but the enthusiasm didn't really come for Solana Labs. They didn't really seem to want it. And it was very hard to make my changes work in a form that I thought they had any chance of taking.
00:34:05.594 - 00:34:33.354, Speaker B: Because to work within that code base, it's one thing to change software, it's another thing to change it in a way that is sort of like maintainable going forward. And that part was a lot harder. So I'm sorry to say I kind of gave up on that, at least for now. I know there were thread where vote retries broken and backfilling was discussed. I thought they might be helpful. Vote retries broken? Oh, yeah. Vote retrying is maybe you might refresh.
00:34:33.354 - 00:35:18.984, Speaker B: So there's another aspect of voting, and that is if you cast a vote, you kind of watch your router, kind of watches the seed that that vote land, and if it didn't land, then it's like, hey, maybe my packets got lost, let me send it again. Well, that is just doesn't work like that. Just that whole aspect of code just doesn't work at all because the condition that we check to see if we should refresh that vote is wrong and never evaluates the true. But honestly, that doesn't matter that much because most of the time you're kind of casting votes continuously anyway, so you're going to kind of keep going. It only really matters if somehow things get really bad and no one's receiving votes and you can't progress because you have no new slots to vote on. That's the critical moment where maybe recasting a vote could help the network. Unfortunately, that doesn't work.
00:35:18.984 - 00:35:47.962, Speaker B: One thing I'm sure they're fixing it. I mean, it doesn't work right now. One thing to consider is perhaps that four slots equals one leader, right? That's another thing. That's another reason I kind of like four. It means that a skip slot and everyone who voted in the previous slot being penalized unless it's four blocks. The reason I like four is because there's an aspect where if I'm the leader, if I know that if other people's votes are delayed, they earn less credits, then I could just, like, delay their votes during my slots. I could be like, oh, I got four slots to work with here.
00:35:47.962 - 00:36:28.650, Speaker B: I saw these votes in slot one. I'm not going to process any of them until slot four because then they'll all get lower credits. Does that make sense? So that would be a way that a leader that got more vote slots could try to, like, screw everyone else to try to, like, artificially change their own ranking. But if there's four slots, you can't really do that because even if you delay it for the maximum number of slots you have, they're all going to be worth the same anyway. Does that make sense? So that's why, another reason I like four. Now it's true that sometimes leaders get eight slots in a row, but that's such a vanishingly small case that, and I think the valuers aren't really going to try to screw the rest of the network just for that. And it's going to be obvious when they do.
00:36:28.650 - 00:36:46.322, Speaker B: There's a leader that never processes votes until his fourth slot. That's going to be obvious. Okay, so I've definitely like talked this to death. Is there any more questions? Okay, there's one more topic and that is this new vote update thing. But I don't have to do it now. If people just want to, want to.
00:36:46.338 - 00:36:53.462, Speaker A: Move on, maybe we could save it for another time. We're at time on this call, so perhaps in two weeks.
00:36:53.638 - 00:36:54.514, Speaker B: Okay.
00:36:55.054 - 00:37:06.894, Speaker A: All right, well, thank you, Zan, for doing all this research and for putting all the data out there for people to take a look at. I appreciate it. And thank you for all the questions and, yeah, see you all next time. Thanks.
