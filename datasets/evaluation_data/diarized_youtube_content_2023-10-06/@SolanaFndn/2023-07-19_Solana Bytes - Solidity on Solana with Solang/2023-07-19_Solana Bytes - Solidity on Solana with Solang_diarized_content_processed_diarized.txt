00:00:05.240 - 00:00:26.444, Speaker A: Hi, this is John with the Solana foundation developer relations team. Today we're going to talk about Soling. So what's Soling? Soling is a tool that allows you to build on Solana using Solidity. To get started with Soling, you'll first need to install the Solana ClI. Make sure to install version 116 and this will allow you to build your program. Next you'll need version 0.28 of the anchor framework.
00:00:26.444 - 00:01:00.324, Speaker A: So anchor is a commonly used framework across the Solana ecosystem that's used to simplify the process of building Solana programs. With anchor 0.28, you can build with Solang directly through anchor. Once you've installed Solana in Anchor, you can check the versions by running Solana version and anchor version. To create a new project, simply run anchor init. Provide a project name. This will give you a new project with all the boilerplate code ready to go.
00:01:00.324 - 00:01:50.842, Speaker A: Then you can see the end of the project and check out the starter code if you're using versus code. Soling also comes with a convenient extension to help with syntax highlighting. Next, let's go over the starter code starting with the contract itself. So here we have a basic smart contract with a constructor that initializes a state variable, a flip function to update the value of the state variable, and then a get function to return the value. The program id annotation is simply used to specify the on chain address of this contract and the payer annotation is used to specify who is going to pay for the account that stores this value here. Next, lets go over the test file to see how to interact with the contract from the client. First we generate a new key pair that's going to be the address of the account we create to store this variable.
00:01:50.842 - 00:02:42.024, Speaker A: Here we create a new data account by calling this new instruction that corresponds with the constructor within the contract, specifying the wallet public key as the payer, and providing the address of the account we want to create. Next we use the get function to return the value stored on the account and then we use the flip function to update the value. Next we use the get function one more time to return the value of the updated state and log it to the console. To build your program, simply run anchor build and to run the test, simply run anchor test. Here we can see the transaction signature of the transaction that created the data count. The initial state is set to true and the updated state is set to false false. You can also inspect the program logs and see that hello world was printed.
00:02:42.024 - 00:03:06.334, Speaker A: As expected, this was a quick overview of how to get started with Solang. If you'd like to learn more, visit Solana developers program examples and under basics and tokens, you'll find reference implementations for common Solana use cases. If you have any questions, feel free to drop them on Solana Stack Exchange. And if you have questions for the maintainers themselves, you can join the Hyperledger Foundation. Discord Channel thanks for joining us on this episode of Solana Bites and have fun building everyone.
