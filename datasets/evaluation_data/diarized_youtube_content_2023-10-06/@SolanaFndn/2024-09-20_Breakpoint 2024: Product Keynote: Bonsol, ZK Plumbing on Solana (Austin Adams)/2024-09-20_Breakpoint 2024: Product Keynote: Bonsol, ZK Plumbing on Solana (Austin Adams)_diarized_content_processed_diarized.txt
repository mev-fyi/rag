00:00:03.680 - 00:00:25.605, Speaker A: Hi everyone. Thanks for coming to my talk. Today we're going to be talking about bonsol, an off chain compute framework. This is the first in a series of advanced cryptography products. So make sure to stick around because there's some cool stuff coming. Yeah, like he said. I'm Austin, I work at Anagram.
00:00:25.605 - 00:01:24.133, Speaker A: A little bit about Anagram. We're a shadowy organization that builds things, we advise companies and we invest in them. A little bit about myself. My super secret name is Ospot on the Internet and I've been in the ecosystem for a little while and built a few things like bonsol, which like I said, is a off chain compute framework that turns it from only possible on Solana to everything possible on Solana. Unfortunately, my notes aren't showing up, so I'm going to wing it now. So have fun with that. We know that we love our amazing censorship resistant global state machine and that there are things that are truly in this industry only possible on Solana.
00:01:24.133 - 00:02:00.567, Speaker A: But that comes with some limitations. Part of the limitations are what makes Solana fast. And those limitations, as we advance the core protocol, they start to get lifted, they start to get better, but they're still there. And they cause developers lots of headaches. Some developers have to split their protocols and make it more complicated. Some developers have to use cranks and continually crank their program. Other developers just, they have these great ideas, but they haven't built what they want to build because of these limitations.
00:02:00.567 - 00:02:43.519, Speaker A: Even worse are teams that have these, you know, they have to run these relayers, these off chain computer, but they run them in a very trust me bro fashion. With bonsol, you no longer have to say trust me bro. You can run off chain, compute and verify it on Solana. It essentially extends your program off chain. So imagine if your Solana program could run without any compute unit limitations or transaction size limitations. That's essentially what Solana does. Sorry, what BONSOL does, you want to grab some transactions from three years ago and check out what happened in them.
00:02:43.519 - 00:03:20.083, Speaker A: You can do that. You want to bring under collateralized loans with an underwriting process on Solana, with private data, you can do that with Bonsol and so much more. If you want to run an AI model to detect Mert or Tully in a picture before you get to mint an nft, you can do that too. The sky's the limit. So today BONSOL is on mainnet and Devnet. Haven't really announced it too much, but you can play with it. You can run a node and make money.
00:03:20.083 - 00:03:58.507, Speaker A: You can break it, tell me how it sucks. You can come build on it with me and you can figure out what you want to do with Bonsor Unlimited Compute. There's a lot of value in Bonsol as it stands today, but there's a lot more that we want to build. But we want to build it with you, with the community. We want to hear what you want and want many of you to become contributors to the project. Right now it's in the dawn of its existence. It's out there chilling on Mainnet and Devnet because we want you to be able to play with it, but but we want to add tons more things.
00:03:58.507 - 00:04:40.435, Speaker A: We want to integrate it with these cool new products you're about to hear, you're going to hear about after me. And we want to bring a bunch more security and things to it. After Stage one is going to be stage two where we do a bunch of cool stuff on the proving and incentive side and anything that you guys want to do and we might go down the restaking meta side. And then number three, I had to put this in here because everything's better in threes, but I have no idea what stage three is about, but I hope it would be audited and ready for billions of dollars to run through it. Thanks for coming to my talk. If you want to scan this QR code, you can check out our docs and come find me if things break. And yeah, thanks for.
