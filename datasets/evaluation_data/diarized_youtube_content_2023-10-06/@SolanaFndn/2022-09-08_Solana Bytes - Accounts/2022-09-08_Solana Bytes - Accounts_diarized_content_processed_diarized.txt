00:00:05.440 - 00:00:48.054, Speaker A: What's going on, everybody? Today, we're going to cover accounts in some detail, right? So we're going to take a look at ownership, we're going to take a look at signers, we're going to talk about programs and figure out how all this stuff kind of fits together. So here's the data of an account on Solana. The public key is obviously the account's address. The balance here is obviously it's balance of soul, also called lamports, the smaller denomination of soul. And then we've got this owner field, right? Like, what is this? What are all these ones? We will actually come back to that. But this is a program id, so executable, right? We have this boolean here. And if this is marked as executable, what that means is this account, the data within it is actually a program.
00:00:48.054 - 00:01:28.534, Speaker A: It's rust code that has been serialized down to bytes, and it can be executed on the runtime as a smart contract or program. So that's all that means. If it's marked as executable, this account is a program, and then the next epoch that rent is due, right here, the rent epic. Now, what this really means, and we'll cover rent in a later video as we look at account data. But this basically means that every so often rent is due on an account, right? Like if an account is a certain amount of storage size, and it has to actually pay for that storage size. So every so often they're gonna have rent due, and the account will tell you what epic this is actually due at. Sorry, let's walk it back to this owner field, right, because this is super important here.
00:01:28.534 - 00:02:22.134, Speaker A: So this is a program id, like we said. And this particular program id is that of the system program. So what is the system program? Well, the system program is one of many native programs on Solana, and this program in particular is responsible for creating new accounts, doing some things with account data, transferring Sol or LAN ports, some basic operations. The key, though, is every account that's created on Solana is owned by the system program, but the system program is allowed to change that ownership. So what does that even mean, that an account is owned by a program? Well, take a look at this diagram here. This is a basic transaction instruction that might be attempting to change an account data. So the client is going to actually sign this instruction, or the transaction with the private key of the account that it desires to change.
00:02:22.134 - 00:03:13.038, Speaker A: And then the program that it's talking to and sending these instructions to is going to check to make sure that itself is the owner of the account and that the private key of the account has authorized the change. If those two things check out, it'll successfully modify the data. Now, when it comes to the system program itself, the system program is the default owner, and that's because the system program is responsible for creating accounts and the creation of an account looks like this. So you have a private key, and you go and generate a new key pair. You got a new public key, new private key, and you want to register that public key with the system program. This is what you do when you create a new account. So you request to register that new public key, and you authorize a debit from your original account to pay for the new account's rent.
00:03:13.038 - 00:03:53.704, Speaker A: You sign that instruction with both private keys, and the system program will go ahead and create this account for you. And as you can see, it'll mark itself as the owner, and it'll assign the account the address or public key that you submitted. Now, when it comes to changing the owner, that can actually be done in one step. Let's take a look at Solana Web three js. If we go down here to the system program, we open this up, we can see that there's a function here to create an account. And this function is actually going to take in create account params. And as you can see, we got from public key Lamports new account, public key, the program id is going to be the owner and the space.
00:03:53.704 - 00:04:20.684, Speaker A: Here's a little test file we got going that's going to be using that exact setup. So what that's actually going to return is a set of instructions, and then we can send that instruction with a transaction like we've seen before. So really quickly, let's just break down what we got plugged in here. So we got our local key pair as the payer. We're going to drop one soul in there, one lamp or per soul. And that's going to come from our payer, right, our local key pair. The new public key is going to be the one that we generated.
00:04:20.684 - 00:04:47.544, Speaker A: So we generated this key pair, and now we're registering its public key with the system program. And as you can see, this function comes from the system program. So we're sending it to the system program. This function is going to package up the instructions that are going to be targeting the system program. And then down here for the program id, we can use whatever program id we want. In this example, I'm going to use the system program. But if we set this to something different, like the token program, or any other program.
00:04:47.544 - 00:05:10.806, Speaker A: Like I said, you can actually create the account and change the owner all in one instruction. And then we set the space to zero because we're not really setting any data. So let's run it. You can see we had a successful test. We'll grab that public key. And you can see right there is the information that came back from the Solana runtime. And it shows us the one sold that we deposited shows us all the information we saw earlier.
00:05:10.806 - 00:05:24.484, Speaker A: And again, the owner, since we set it to the system program, is going to be those all ones. And that's really it, guys. That's accounts in a nutshell. There's a little bit more to it that we'll see as we go through more complex examples. But those are the basics.
