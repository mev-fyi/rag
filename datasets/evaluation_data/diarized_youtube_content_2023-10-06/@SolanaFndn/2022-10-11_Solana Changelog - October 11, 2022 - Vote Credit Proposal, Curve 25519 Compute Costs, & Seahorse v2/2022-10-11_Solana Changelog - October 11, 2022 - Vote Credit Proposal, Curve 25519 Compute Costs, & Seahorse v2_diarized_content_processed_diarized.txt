00:00:00.240 - 00:00:10.638, Speaker A: Hello and welcome to this week's Solana Changelog, where we discuss all of the commits have happened in the past week. And for the first section, we're going to talk about a proposal highlight. Jacob.
00:00:10.726 - 00:00:54.020, Speaker B: Yes, so this past week there was a timely vote credit proposal. So what this is, is like, hey, there have been known instances of validators taking some time to put their votes through so that they can make sure that they go on the majority for that way that they can get their votes to count towards the credits. In order to combat that, there's going to be a, there's a proposal to give specific amount of credits, every slot, to those that vote quickly. So like, hey, are you a low latency voter or a high latency voter? And this has some kind of grace period over x amount of slots? Definitely check out the proposal to read more on it.
00:00:54.072 - 00:01:00.036, Speaker C: So wait a second, you said that they earn credits. What are these credits? Like, how can, what kind of credits are they?
00:01:00.140 - 00:01:29.936, Speaker B: Yeah, so the proposal kind of like talks about like, hey, there's a x amount of credits every block or slot and it will be distributed based off of the low latency voters and high latency voters. So low latency voters will get more. And then given that those credits at the end of every epoch, the, they get a reward based off of like how quick and low latency votes they put in each slot.
00:01:30.040 - 00:01:33.604, Speaker C: So like your reward is then based on like your accumulated credit.
00:01:35.384 - 00:01:49.314, Speaker B: Yeah. Versus now it's like, hey, whoever votes for the majority block gets the credit. And so it's kind of incentivized to wait so that you vote on the right fork and don't waste transactions.
00:01:49.424 - 00:01:50.118, Speaker C: Cool.
00:01:50.286 - 00:02:19.556, Speaker A: Any commits stick out to anyone? Well, actually one of the ones that actually stuck out to me was the compute costs for curve 25519 operations are going to go down. And yeah, you might recognize that 25519, that's like, yeah, from PDA's. I guess when you're now validating your PDA's on chain, the cost of that particular operation is going to go down to now you have more compute units to play with.
00:02:19.660 - 00:02:57.124, Speaker B: Yeah. The reason why it's going down, I believe, was because previously it was just like they put in placeholder values and now they put more realistic values for how much that compute would cost. And then another commit that I saw was like, hey, they're kind of moving the cache for the TPU connection cache out so that they kind of separate between like quic and UDP. It makes it a little bit easier to code in the future, especially on the Solana rust client, because, hey, UDP is going to be deprecated at some point. Let's make sure that we're able to call it via Qwik in the future.
00:02:58.344 - 00:03:30.026, Speaker A: Another one that actually stood out to me was a change that was made that allowed. Actually what was happening was zero Lamport account were kept based on the previous full snapshot rather than the current slot, which meant that on estimation, about 25,000 slot worth of zero lamp accounts were not getting cleaned up when they could have been. So there's like a slight modification to the code that's just made something a lot more efficient, which I thought was quite cool.
00:03:30.210 - 00:03:59.144, Speaker C: Yeah. I also saw that they made some changes so that validators can kind of like reset back to the slot that matches their last voted slot. So basically they're unable to reset back to like the heaviest bank on the fork. That includes their last vote. If the heaviest bank matches their vote slot, now they can reset to a slot that matches their last vote slot. And basically that means it kind of like disallows resetting back to a slot that's part of an invalid fork.
00:03:59.224 - 00:04:13.254, Speaker B: Cool. Yeah, and that helps out for like, whenever a slot is. Something wrong is going at a slot, basically that would cause consensus problems, right? Yeah. And what, uh, what resource of the week do you have for us today, Joe?
00:04:13.414 - 00:04:38.650, Speaker C: Oh, yeah, we got Seahorse v two. So Amelia posted an awesome thread on Twitter and she released v two as a beta. And there's a little bit of, you know, cool python goodies in there. Right? Like, we got better use of data types. I think dictionaries are available too, you know, so it's gonna be a little bit more comfortable to write Python. Like, it's gonna feel a little bit more natural for Python devs. So definitely check out that thread.
00:04:38.650 - 00:04:41.214, Speaker C: It's pretty cool. And it's also pretty exciting, of course.
00:04:42.274 - 00:04:47.534, Speaker B: Cool. I believe I also saw that, like, CPI is allowed now in a seahorse feed to YouTube.
00:04:48.394 - 00:04:50.210, Speaker C: CPI for any program.
00:04:50.282 - 00:04:59.234, Speaker B: Yep, that was the Solana change log this week where we go over each changes. Catch us next week when we go over the changes for the following adios.
