00:00:03.880 - 00:00:10.825, Speaker A: Hello everyone. Gm gm. Welcome to the Changelog. This week I'm Nick from the Solana Foundation Devrel team and today I've got Jacob with me. How you doing, Jacob?
00:00:10.905 - 00:00:12.665, Speaker B: I'm doing well. Let's get started.
00:00:12.825 - 00:01:01.553, Speaker A: Let's do it. I mean, let's talk about Colosseum. Friendly reminder for everyone who is interested in the Solana Global Hackathon put on by Colosseum, the Renaissance Hackathon as it's called. You can find all the details on colosseum.org talks about all things Hackathon, the dates and some of the prizes, the different tracks and one of the really cool things that I like telling and reminding people about the hackathon is everyone who submits and is a track winner for any of the Hackathon tracks, they're eligible to join the Colosseum accelerator, which is this really cool like Y Combinator style accelerator for the Solana ecosystem. Tons of mentorship, additional help with doing project reviews and hopefully getting some additional funding. Not to mention the Coliseum accelerator will also help you get some more additional funding directly.
00:01:01.553 - 00:01:03.793, Speaker A: So friendly shout out to our friends at Coliseum.
00:01:03.889 - 00:01:37.565, Speaker B: Yeah, and just a quick tip, if you are building in Coliseum, talk about your project on social and building early because that's what gets the judge's attention of your project and will make it to where they're looking for your project whenever they look at the results. So do that early, talk about your projects and like actually showcase what you're building. We'd love to see it. Like feel free to tag us on it. Moving on to what the proposal this week will be. This is Simny 129. This is proposed by some people at JMP or the Fire Dancer team.
00:01:37.565 - 00:02:22.137, Speaker B: It's just a update to Alt BN1286 syscalls. It's adding some error codes or simplifying the error codes so that we'll have a better developer experience on the other end of understanding what went wrong whenever using this alt BN128 call. Now I don't believe this call is currently activated on mainnet, but when it is is with this we'll get different error codes and you'll be able to tell what's going on in your program when you call this error, this syscall. So it's a great one to have, I think. Nick, you asked me right before this like, why is this in simd? It's just error codes. So syscall error codes are governed by consensus, not other error codes. Like if you're running your own program, but Syscall specifically are.
00:02:22.137 - 00:02:24.401, Speaker B: So that's why it has some ds.
00:02:24.513 - 00:03:06.885, Speaker A: Gotcha. Good to know. Go ahead and shift over to the commits this week. This one is the coolest one. Merged in just one hour ago onto the main branch of the Agave client By John Shankwe the man, the myth, the Legend One of the things that's been happening on Solana recently is people have been struggling with sending transactions via the CLI client, specifically with deploying programs. So this is one of the many changes that are in the works or have already been implemented to help ease that pain a little bit. And specifically it's for sending and confirming transactions in parallel so it can actually send transactions a lot faster because it does a way better job at actually parallelizing the transactions that the CLI client is actually sending.
00:03:07.265 - 00:04:05.963, Speaker B: Yeah, this is awesome change and I hope this is one of many that will make sending transactions via the CLI whether or not you're deploying programs or just sending from one person to the other easier. Overall, another commit this week is this is another commit under the when restart simd. So there's a SIMD going over how to properly decide which is the heaviest fork and which one to automatically restart from that's currently in discussion. I don't think it's been pulled in yet, but when the onset team is doing a lot of work to one do some of the work that is not required or it's required for one restart but it's not like going to change everything like this can be part of the cli. So you can very quickly find the heaviest fork, understand what's going on and better basically debug the cluster. So this is a cool thing. I think all the commits around wins to restart, which is a hilarious name, is really cool as well.
00:04:05.963 - 00:04:56.627, Speaker B: Would love to see the SIMD come to consensus at some point in the future though. Another thing I wanted to touch on is a lot of people are adding stake weighted QoS, peering connections between RPCs and VEN validators. Currently the way is a little bit difficult. There is going to be a guide out at the time of this video release on how to do that, but the way you do it today is a little bit difficult where you're having to basically choose what stake weight to apply to different IPs or different RPCs via. I think it's like the staked override flags as well as there is another flag that you have to run on your RPC but it only sends it to your validator. This One makes it a little bit easier to where it also will send also to the leader, not just the validator that you choose. So you have a better chance of getting included in the block.
00:04:56.811 - 00:05:45.141, Speaker A: Yeah. And then web3js we've got the tech preview number two. If you recall, many months ago, around the Breakpoint time, Stephen Lucher and the Web3JS team from Anza, they released tech preview number one at Breakpoint. Steven did a phenomenal talk, amazing stageman. And he did an awesome talk that talks about what the new Web3JS is going to look like and released Tech Preview number one. Now Tech Preview number two has been released just a couple of days ago and it's full of all sorts of new additional changes, some of them breaking From Tech Preview 1 From the way that I read this change log and one of the really cool things about this is we talked about Create Solana program, the amazing tool that Loris from Anza put together. And the Tech Preview number two here actually starts using Create Solana program within it.
00:05:45.141 - 00:06:04.669, Speaker A: So you can actually get a full end to end solution for web3js things and also fully generate clients for JavaScript based clients for your on chain programs. In fact there's a link in here for some of the auto generated core programs like System Memo and Account Lookup tables which is really cool.
00:06:04.837 - 00:06:46.617, Speaker B: Yeah. So if you're interested in trying it out and improving the developer experience for the new web3 like please report anything that you find that is like kind of confusing as an issue on the Solana Web3js repo. That way we can make sure the developer experience is the best as possible. When it's not a preview, we don't want it to go live. And there's something that's really confusing and that now that's kind of stuck because now you have to make a major version to make that change. So yeah, try it out, give us our feedback, make this better for everyone in the future. And then on the Resource of the week there is a new guide and there's actually a set of guides on how to optimize your compute usage on Solana.
00:06:46.617 - 00:07:34.543, Speaker B: So this is a really good to follow guide to understand like hey, you have a program, it uses X amount of compute and since you're using priority fees, you're paying for every compute to run that program and get the best user experience possible on Solana. Well if the compute is lower, you pay less or your users pay less. So let's figure out how to optimize it. So one of the things is like there's very simple changes. It's like, hey, if you're doing some like base 58 encoding in your logs for logging public keys, don't do that and use like concatenation or the key log function. That will use like an order of magnitude less CU overall. So this guide will go through many different ways of how to lower the CU on your programs.
00:07:34.543 - 00:07:59.515, Speaker B: Definitely check it out, see if there's any easy wins that you can have for for compute optimization optimization in your program. And then moving on to this week's Stack Exchange league. So this is what we do to showcase like, hey, these are the people that have gotten the most reputation week. So we look at the top three. We have John Chinque, we have Yan, which is a new person. I haven't seen them up on this league yet. We have Jonas and Burger Bob.
00:07:59.515 - 00:08:14.547, Speaker B: So shout out to all of them for making the top and helping out with developer support on the Solana Stack Exchange. Because you know, a lot of people are asking questions in Discord if you want them to be able to just Google the results. Answer on Stack Exchange.
00:08:14.731 - 00:08:19.299, Speaker A: Yeah. And I guess that's it for this week's change log. I hope you guys had a good one and we'll catch you next time.
00:08:19.387 - 00:08:20.195, Speaker B: Bye bye. Adios.
