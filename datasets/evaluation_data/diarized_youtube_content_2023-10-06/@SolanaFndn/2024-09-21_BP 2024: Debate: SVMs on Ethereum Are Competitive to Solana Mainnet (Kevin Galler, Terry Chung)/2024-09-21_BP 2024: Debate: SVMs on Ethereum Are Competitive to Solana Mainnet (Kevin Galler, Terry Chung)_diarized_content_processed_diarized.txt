00:00:13.120 - 00:00:22.689, Speaker A: All right. Good morning, everybody. I hope you're having a great time. Hope you're having a great time at breakpoint. It's the fourth one. I think it's the most packed. 6,000 tickets sold.
00:00:22.689 - 00:01:08.919, Speaker A: It's been a great one so far. Today I'll introduce a topic. We're talking about SVM and evm and is that competitive at solid mainnet? First I'll sort of introduce a topic and then we'll get into it right after. So you've probably seen quite a few conversations on Twitter and other forums about network extensions and L2s and whether those are parasitic or competitive with Mainnet. There are many conversations about fees and MEV and execution and DA and how these things actually affect Mainnet. Do these things actually have a roll back to Mainnet? Are you actually taking these fees away from stakers and validators and actually important people that are sort of helping secure the network? There are quite a few different types of VMs that actually end up settling to Solana. There's the SVM, there's the EVM, there's the move VM, and there are a few other types that end up doing bridging or side chains or things like that.
00:01:08.919 - 00:01:22.715, Speaker A: But all of it, is it competitive or is it not? We're not really sure. So that's what we're going to try to get into today. So first we'll introduce Terry from Eclipse and he'll give a little bit about himself and then a little bit about why he's against or thinks that's parasitic.
00:01:23.025 - 00:01:35.205, Speaker B: Yeah. Hey, guys, I'm not Frank from DGODs. Terry from Eclipse here, head of strategy. Eclipse is Building the first SVM L2 that settles to Ethereum, uses Celestia as DA. Great to meet y'all.
00:01:37.545 - 00:01:38.665, Speaker A: And then Kevin.
00:01:38.825 - 00:01:46.113, Speaker C: I'm Kevin, developer relations for Monad Labs, Background in computer architecture and signal processing.
00:01:46.289 - 00:01:57.663, Speaker A: Cool. Yeah, let's get into it first. Kevin, you're on the fore for this, right? So you think that SVM and EVM is actually competitive to Solana Main. Net? Can you explain why you think that is?
00:01:57.759 - 00:02:46.937, Speaker C: Yeah, I think, like, fundamentally, like, if you're a shop owner and if someone is going to a different shop, you know, like, the entry point is where you have a lot of advantages, right? You can collect fees, you can collect mev. And so, like, if that entry point is somewhere else that has an intermediary in between a lot of, like, the value capture mechanisms that drive a lot of the incentives behind blockchains, then fundamentally you are somewhat competitive. Now, I think there are constructions that can mitigate that a little bit. But for the most part, and as they exist today, I think there is a pretty strong case to say that they're competitive in a multiple different ways. Even just on like developer like mind sharing stuff. Like if you have to build for, for multiple environments like obviously it's hard to build an Android app and an iOS app. Right.
00:02:46.937 - 00:02:50.193, Speaker C: And so having to do that like obviously split splits.
00:02:50.249 - 00:02:53.625, Speaker A: Yeah. Terry, why don't you think they're parasitic to Mainnet?
00:02:53.705 - 00:03:46.389, Speaker B: Yeah, so let me make a distinction here, right? Like Eclipse settles to Ethereum. And so when you say that it's a different shop, different entry point is parasitic to the fees and MEV of Solana. Eclipse is connected to Solana essentially by a third party hyperlane bridge. And so there are other execution environments that are also connected to Solana by the same bridge construction that are also execution environments where you can do substitute type of behaviors that might be similar things like you know, taking out borrowing against certain collateral. The fact that the action is similar does not make the state substitute. Right. The fact that there is a wormhole bridge connecting Avax and Solana does not make Avax defi directly competitive and parasitic against the MEV and the fees of Solana mainnet.
00:03:46.389 - 00:04:27.269, Speaker B: So Eclipse, you know, you can discuss it that in the context of Ethereum that might be a different conversation, but in the context of Solana, number one, we are not, you know, settling to Solana. We're not parasitic for the MEV and fees of Solana. But number two, state is fundamentally non substitute in that. Let me give you a kind of concrete example here. Say the emergent behavior on Solana Defi is that I deposit Solana or Jito Solana and against that I borrow PayPal USD to buy whiff on Jupiter. None of those assets first of all exist on Eclipse. So fundamentally, because the state is non fungible and non substitute, you cannot even do the action that would generate MEV and fees on Solana mainnet on Eclipse Mainnet.
00:04:27.269 - 00:04:44.705, Speaker B: So on Eclipse what you might instead expect is I would deposit Ethereum and then I would borrow Solana and by thereby I would gain, you know, exposure to the Solana asset instead of say, you know, doing something that can be directly correlated, directly doable and substitute on Solana mainnet.
00:04:45.085 - 00:05:13.241, Speaker C: I mean, I guess I could just say like that's the same argument from the Solana side. It's like I could do Solana denominated Ethereum defi, right, with the same trust assumptions as a Bridge over using Wormhole with Ethereum assets on Solana. And so in that sense, like if you own the door to the store and customers are coming into your store and your store takes fees on the activity that the customer is doing, like I still think that's competitive.
00:05:13.353 - 00:05:50.855, Speaker B: But yeah, fundamentally there is no, like there isn't a trustless bridge to Solana from Ethereum. And so therefore kind of the state that exists on Solana I.e. ethereum DeFi adjacent is significantly less than what is going to be there on Eclipse. And by that argument you could also say, yeah, there's not going to be a lot of trustless Solana deposits on Eclipse because of that argument. And that's fair because I think that even puts us further away from the parasitic and fees argument because you know, if we have full assets in State that is much more Ethereum defi adjacent, taking advantage of the SVM execution, that gives us a completely different use case compared to what is possible in Solana. Mainnet.
00:05:50.895 - 00:06:07.047, Speaker A: Okay, so he just said state there. Right. So Solana was originally built and envisioned to replace Nasdaq, to replace traditional finance. And a lot of what Tolle says is a large integrated state machine where anybody around the world can access that state. Right. Historically you'd think that L2 is actually fragment state. Right.
00:06:07.047 - 00:06:19.817, Speaker A: That state is actually partitioned amongst multiple L2s. And I'm not really sure if that actually changes it if you actually sort of settle back to Mainnet. So can you talk more about this sort of like integrated versus modular approach and actually how does state fragmentation actually affect the SQL and evm?
00:06:19.921 - 00:06:41.173, Speaker C: Yeah, I mean like, I think fundamentally, like you are fragmenting state and like the value prop of Solana is to unify state and like that is competitive. Right? It's a competitive vision of what one layer is used for versus another layer. Right. And so yeah, I mean like maybe there is different state over there, but I mean, I think the point of Solana is to eat the world's state.
00:06:41.219 - 00:06:41.665, Speaker A: State.
00:06:41.785 - 00:06:46.201, Speaker C: Right. And so if we can get that state representative representation on Solana, I think.
00:06:46.233 - 00:06:47.281, Speaker B: That is the goal.
00:06:47.433 - 00:06:51.313, Speaker C: Right. And if you're not doing it, it is competitive.
00:06:51.449 - 00:07:27.171, Speaker B: Yeah, yeah. So my response to that would be that puts any execution environment fundamentally competitive with any other execution environment. It makes Monad competitive with Ethereum, it makes Monad competitive with Solana, it makes, you know, any eth. L2 competitive with Solana. Because we are fundamentally, and I kind of repeat this a lot, is that we are, we are SVM roll ups settling to Ethereum and in fact, the way I like to think about it more is that we're kind of like a beachhead, that it's like a Solana infiltration into the Ethereum ecosystem. Right. And kind of what we've experienced firsthand is there are quite a lot of EVM dapps that come to us at the first entry point into coming into the Solana ecosystem.
00:07:27.171 - 00:07:38.785, Speaker B: They're like, hey, Eclipse, you know, you guys are an evml or you guys are Ethel too. Can you please help us port our contracts over into rust? And once we do that, that is kind of the upfront work that it takes for them to also deploy on Solana mainnet as well.
00:07:39.805 - 00:08:32.433, Speaker C: I actually wouldn't really disagree with that in some sense because like, as Monad, we see this a lot, right? A lot of the entry point into the EVM is coming over to Monad. But there is an element of if you want to be the world's global synchronized state machine, right. I do think all L1s and L2s have an element of competitiveness or why would we be here? Like I think we're all kind of in this world of trying to be the best. Like otherwise we wouldn't be building the technologies that we're building. And while some of these things are symbiotic in ways in expanding to like different audiences, like I said before, it does split developer activity and time in some ways. Like fundamentally, if I think, like I think if you're an app and your expansive, your expansion plan is just to go to another chain because you didn't find product market fit on the original chain. Like I don't know how that's supposed to solve the problem.
00:08:32.433 - 00:08:49.145, Speaker C: Right. And so like a lot of these apps who like want to come over to Monad, like it's great but like we would like to see them innovate on what's possible on Monad, right. Within the EVM sphere and like really push boundaries of like actual product market fit and new use cases.
00:08:49.225 - 00:09:11.935, Speaker A: All right, so let's move on to fees and mev. Right? So why if an L2 has some other execution environment, non consensus, but still sort of doing like top of block ordering or sort of building some block and sort of posting that state that back to mainnet. Like why when you're taking MEV as a sequencer or why are you taking sort of fees away from VL1? Why is that? Why is that not parasitic?
00:09:12.095 - 00:09:57.475, Speaker B: Yeah. So in the concept of the debate, in the context of the debate, we're discussing whether SVMs on Ethereum are parasitic to Solana. But the question you posed was, if I'm taking fees and MEV away from the L1 that I settled to, why is that not parasitic to the L1? And fundamentally here the L1 in question for us is Ethereum, right? And the argument against that that I have is that Eclipse by that network is a network extension on top of Ethereum, in that what you can do on Eclipse is fundamentally something that you cannot do on Mainnet. And this is by definition because we are an SVM and Ethereum Mainnet is an evm. So all the applications that exist and all the kind of activities that are fundamentally doable, that are only doable on an SVM that will deploy to Eclipse, are again, not possible on what the L1 is.
00:09:57.895 - 00:09:58.755, Speaker A: Thoughts?
00:10:00.335 - 00:10:43.813, Speaker C: I don't have a disagreement with that, honestly. Like, if you're building an SVM on an evm, obviously you can do like, different things on it, right? But I do think, like, as L2, you are being like this middleman between mev, right, that you're capturing. That's not going to the L1. Now, I do think there's a world in which you can build smart contracts that capture MEV for applications, right? But the L1 still determines like, congestion fees, especially if your blocks are full. And I do think that's like, fundamental to actually incentivizing the validator set to find value in running the chain. And if the L2 is capturing that, right, it's like actually diminishing, like the value prop of being a validator on the L1.
00:10:43.909 - 00:11:07.265, Speaker A: Yeah, understandable. All right, so next, let's move on to Mindshare. Right? So if you're building an svm, maybe using the SVM SVM API, right? And settling to Ethereum, right. You're actually not using the same clients that the traditional L1 is using. With Agave, you're probably using a fork. You don't have the consensus involved. You probably have like direct mapping these feature gates that aren't even activated yet.
00:11:07.265 - 00:11:17.605, Speaker A: These new curves. How do you sort of think about that separation between the SVM that's forked and used by the L2 and then the L1 that might not actually upstream any of those changes.
00:11:18.585 - 00:11:41.153, Speaker C: I mean, historically we haven't seen a lot of upstreaming of changes, right? The way that it's worked so far is like the mainnet client is then forked and pared down for the other use case. I haven't seen a lot of contributing back to the actual core client. And So I mean I'm more of looking at what has existed till today and just saying like I haven't seen evidence of that.
00:11:41.249 - 00:11:44.105, Speaker B: Yeah, I think that's a definitely. It's a long cycle.
00:11:44.145 - 00:11:44.345, Speaker C: Right.
00:11:44.385 - 00:12:39.645, Speaker B: And I think the Eth land has a bit more examples here where especially a lot of the ZKL2s, they pioneered and even invented all these new proof systems as well as optimizations to existing proof systems that are now being used to, you know, extend in co processors, Ethereum, compute and or even in the future ZK prove layer one blocks. And if we get to the point where, you know, ethereum itself is ZK proving layer 1 blocks using some of the proof technology invented by the L2 teams, you know, namely zksync, starkware and Polygon, that is a significant contribution of these roll up teams. Back to you, the future roadmap and the capacities of the L1. And with SVMs, frankly we've been live for, I don't know, two weeks, three weeks at this point. So it is a little premature for us to discuss what are the core contributions we're making back to the Solana ecosystem, to the Solana client, to the Agava client. But it is definitely something that we're very mindful of and something that we want to achieve in the future.
00:12:40.025 - 00:12:53.325, Speaker A: Yeah, makes a lot of sense. So can you switch when is it not parasitic, right? Like when do you think SVM on EVM that sort of settles to Ethereum is not parasitic or it's not competitive to slime it?
00:12:53.445 - 00:13:38.287, Speaker C: Yeah, I mean I think like as far as developer tooling, like that's something we've even seen on the evm like the proliferation of the same execution environment, it motivates people to build auxiliary tooling for these ecosystems. That ends up being very helpful for app migration and adoption and stuff like that. I also think that a construction with a base roll up actually does make a lot of sense and I think this is what network extensions on Solana are. They're just fundamentally like based roll ups. Right. So their fees go back to the sequencer sent. So I do think there's constructions where it is like actually symbiotic and I do think there is some developer mindshare things especially honestly like it's a vendor lock in stuff like it's good for a developer to feel like they can go somewhere and not be completely tied to a single ecosystem.
00:13:38.287 - 00:13:51.171, Speaker C: But again if you're not finding product market fit in your app and you're just hopping from chain to chain to try to expand your user base. I don't know that that's gonna fix your problem. I think you actually have to expand with product market fit and stuff like that.
00:13:51.283 - 00:13:54.379, Speaker A: Yeah. All right, so when is it parasitic and competitive to Mainnet?
00:13:54.467 - 00:14:25.533, Speaker B: Yeah, I think there is a case to be made say when we have exhausted the kind of expansion of growth in crypto such that it is really a PVP ecosystem and a closed loop system. Right. Like the number of developers that we're going to convert into crypto and building crypto is absolutely finite. And you know, in that case, you know, if you're competing with the product that is purely based on SVM execution, it has nothing to do with, you know, non substitute state, then yeah, it is competitive there, but I think we're kind of far away from that world.
00:14:25.629 - 00:14:39.455, Speaker A: Yeah, fair point. All right, we have five minutes maybe let's get into technicals. But first I want to actually get to one thing. So why, or like what types of developers want to build on SVMs that settle to Ethereum? Like what do you actually gain by doing that? Or like building on clips.
00:14:39.535 - 00:14:39.791, Speaker C: Yeah.
00:14:39.823 - 00:15:22.995, Speaker B: So one interesting cohort that we've seen is Ethereum developers that are Solana curious and I think there are quite a lot and they see us as kind of an easy entry point. Right. It's not say, oh, we're leaving Ethereum for Solana, but it's we're deploying to an SVM L2 that is also an Ethereum L2 and therefore, you know, we are already on XYZ Ethereum L2, it is just a cross dep. But by doing that work, obviously they're also going to go to Solana mainnet. So we've actually seen quite a lot of inflow of developers like that who have said hey to Eclipse, can you help us like port our contracts into rust? And then of course, you know, I do expect them to see them on Solana in some time in the future. That's number one. Another use case that, you know, I personally am excited about is Solana Eth Defi.
00:15:22.995 - 00:15:50.765, Speaker B: So we have a trustless bridge from Ethereum. So we expect a lot of Ethereum assets. I think just because of our VM association, we will see Solana assets that cross over from some path or another onto Eclipse. And I'm personally excited about things like using ETH collateral to borrow Solana, using Eth collateral to lever long Solana perps just by the type of exposure in terms of assets that I have wanted. So that's something I'm Pretty excited about.
00:15:50.845 - 00:15:56.757, Speaker A: Yeah. Why do you think people should just build on an integrated chain, like on a Monad or on a salon? Like, why should you pick that over null 2?
00:15:56.861 - 00:16:33.575, Speaker C: I mean, I think, like, composability is like a fundamental property of blockchains I also think that when you start looking at external da, like, you can't get around the fact that you're adding a network op, so there's like latency games that start happening and like, you compound this with execution layers that are, like, going at speeds where the stuff starts to matter. Like the latency to the da, like starts to matter when you have a lot of, like, value in flight. Right. And then you have to, like, for a user, you have to reason about all these trust assumptions. As an app developer, you now have to pick different stacks. Right. I think a lot of apps would rather just have like an integrated stack and be like, this is my full stack solution.
00:16:33.575 - 00:16:38.975, Speaker C: Things just kind of work here. And I think we've seen that in a lot of different integrated environments.
00:16:39.055 - 00:17:25.488, Speaker B: Yeah, this kind of sounds like an integrated versus modular debate. And here's where I want to point out that Celestia is going to get to 1 gigabyte blocks on mainnet 6 significantly faster than monad can get to the same DA throughput, simply because they don't have to focus on things like execution and they don't have to focus on, you know, all the other innovations that Monad is driving in the ecosystem which are beneficial to their stack and execution of EVM and faster execution there. But fundamentally, just by focusing on one thing, you know, they're able to come up with all these new innovations that increase DA throughput, that increase verifiability while increasing DA throughput, which is also very important. And, you know, that's kind of the whole idea of modularity. Right. By specializing, you have people who are just working and focusing on one thing, and that improves at exponential pace faster than people focusing on the whole integrated environment.
00:17:25.616 - 00:17:34.552, Speaker C: But I would actually argue you're actually like introducing latency to verifiability, which the property of a blockchain that you want to have fast is the verifiability of.
00:17:34.568 - 00:17:46.655, Speaker B: The data, not verifiability of the DA layer, because that's just a DAS, like client on Celestia, but verifiability of the L2 blockchain that writes their DA to Celestia, because you have that again, you said the latency ping of reading from a separate DA layer.
00:17:46.735 - 00:17:50.343, Speaker C: Right. Whereas in an integrated chain, you're just reading the Hard drive.
00:17:50.439 - 00:18:07.405, Speaker B: But today, right, Celestia is infinity times more da throughput than Monad because Monad is now live. But once it is live, I'm not quite sure what gigabyte blocks or how much gas per block you are going to have or da capacity that you are going to have. Celestia is just going to be like 100 times more.
00:18:07.945 - 00:18:10.281, Speaker C: We'll see, we'll see, we'll see.
00:18:10.393 - 00:18:25.313, Speaker A: So we have two minutes left maybe. Let's try to get into the technicals. Like do you, what do you disagree or what do you have hot takes against sort of SDM on evm? That's how it's Ethereum, right? Like what are things that you don't think work? Like censorship resistance or sort of like STF proving?
00:18:25.409 - 00:18:56.117, Speaker C: I think for me it's more of just like the L2 trade offs. It's like you're losing real time censorship resistance. And they talk a lot about like, oh well, you can exit, but there's actually delay to that exit. And for financial markets that can be very, very impactful. Right? And so if you have to get in line, markets are moving in real time. You want to get your orders off the book, you want to place bids and cancels. And if there is a situation where real time censorship resistance matters for global finance, that's actually incredibly important.
00:18:56.117 - 00:19:08.095, Speaker C: And the risk that market makers have to take on things like order books that we're hoping that these new scalable environments enable, like the risk for the market makers on that order book could go up exponentially.
00:19:08.795 - 00:19:50.005, Speaker B: Yeah, totally agreed. So real time sensor resistance problems in an L2 exist because you have one centralized sequencer. And the kind of question that people pose is, okay, if that one centralized sequencer which is run by the sequencer operating company starts to censor your transactions, what happens to my say, collateral, that is borrowing that I'm borrowing against, that can then be liquidated and, or censored, whatever. Right. So I think the core question I have to pose in the last 30 seconds here is what happens if you just simply increase the number of sequencers? What is the minimal viable set such that you do get real time censorship resistant guarantees while not incurring the overhead of massive consensus set over a permissionless validator?
00:19:51.015 - 00:20:07.991, Speaker C: I would like to know that as well. Because if we have multiple, you know, like honestly at a point where you're having like multiple sequencers, like you kind of have to have, I guess in a rotating sequencer you don't have to have that. But like I don't understand why you would just not use the base roll up where your sequencer set is the L1 itself. Right, right.
00:20:08.023 - 00:20:41.205, Speaker B: Because that that's kind of two ends of the spectrum, right? You have one sequencer and then you have the full entirety and sensitive resistant guarantees of the L1 proposer set. But my position is that with PBS we have already seen builder centralization to the fact that where, you know, the vast majority of blocks are actually built by a few entities and I think most blockchains, the financial incentive is there to go to that direction. In which case is there a number that we can choose in the middle of the spectrum where you get that censorship resistant guarantees in real time such that it is sufficient for DeFi to flourish while not having to incur the overhead of going all the way here.
00:20:41.335 - 00:20:48.385, Speaker A: All right, we're at time. I hope that was interesting for you. All three of us will be around at breakpoint. Hope you have a great last day and have a great rest of your day.
