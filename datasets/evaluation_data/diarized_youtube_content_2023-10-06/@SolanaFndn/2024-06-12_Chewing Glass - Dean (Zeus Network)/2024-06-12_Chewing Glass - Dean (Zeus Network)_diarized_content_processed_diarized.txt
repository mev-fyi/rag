00:00:00.360 - 00:00:07.422, Speaker A: If we can't talk to each other, we're not gonna make it. Sometimes I feel like I've bitten off more than I can chew. Most of the time, I work in.
00:00:07.438 - 00:00:12.646, Speaker B: A glass jar and lead a very uneventful life. A face full of glass hurts like hell when you're in it.
00:00:12.710 - 00:00:15.182, Speaker A: That's weird. That glass looks half full to me. Eating glass.
00:00:15.238 - 00:00:16.958, Speaker B: Eating glass is staring into the abyss.
00:00:17.086 - 00:00:21.314, Speaker A: Glass. Who gives a shit about glass? Who the fuck is this?
00:00:22.694 - 00:00:25.834, Speaker B: It's kind of part of our culture to eat glass.
00:00:26.814 - 00:00:29.194, Speaker A: Gotta get some safety goggles next time.
00:00:38.644 - 00:01:06.200, Speaker B: Hey, everybody, and welcome to Chewing Glass, the show where we talk to developers building in the Solana ecosystem. Today I am coming from New York City podcast room for the very first time. I am joined by Dean M. Little. He is a based engineer from the Solana ecosystem. He is an educator with web3 builders alliance and Solana Turbine. He also, within that group, works with their dev shop, building public goods for the ecosystem.
00:01:06.200 - 00:01:26.844, Speaker B: And more recently, he is actually building some really cool stuff with Zeus network, which is bringing bitcoin to Solana. So we'll talk a little bit more about that later. So, Dean, welcome. I've been thinking about having you on the podcast for a very long time. Here you are. Let's talk about some base stuff. How you doing, man?
00:01:26.984 - 00:01:29.748, Speaker A: Good, man. It's a pleasure to be here. A long time coming.
00:01:29.916 - 00:01:53.344, Speaker B: Yeah, sweet. So the way we kick this show off is let's hear the origin story of Dean and how and when he got into just software in general. Like, were you, did you go to school for this? Did you start this sort of, like when you were three years old, writing binary code? Like, what's the deal?
00:01:53.984 - 00:02:56.772, Speaker A: Yeah. So the first time I ever did software engineering, I guess if you could call it that, I was probably like nine or ten, and my dad had a z 80, and I pulled out the book and figured out how you could punch the commands into that to program the z 80 to do some random stuff. And then, yeah, essentially I started out pretty early with computers. Like, I grew up with them, which is probably not that big a deal these days, but for someone from the nineties, it's a thing. And then I kind of got into modding games and I got into design and stuff like that. And then I realized I can implement really great web and app designs and stuff, but if I can't code, I'm not going to be able to bring these things to life. And so that was kind of my driving force to sort of throw me more into the coding side of things.
00:02:56.772 - 00:03:01.588, Speaker A: So, yeah, I started really young and sort of that's how my career progressed.
00:03:01.716 - 00:03:12.276, Speaker B: Okay, so you got interested in software at a super young age. Like, did you actually take the official route of going to school for software, fully self taught? Like, yeah, yeah.
00:03:12.300 - 00:03:46.590, Speaker A: So I went to, I went to university. I did a double degree in, like, business and computer science. But, like, I was getting, like, 100% on all those things without going to class. And, like, my lecturers were not very good, so I just kind of, like, dropped it just to, like, graduate faster. But no, I think education is really not about sort of necessarily, like, formal qualifications. It's more about, like, your attitude to learning and applying yourself to that, in my opinion. So very much self taught.
00:03:46.590 - 00:03:59.654, Speaker A: And, yeah, done a lot of things, you know, have a very long sort of history of freelancing on a crazy amount of different projects. And when you just do enough, like, different things, you just get a very wide skill set.
00:03:59.814 - 00:04:10.806, Speaker B: So I know you pretty well at this point. I'm assuming whenever you were doing some of the more formalized stuff, you just figured you were smarter than your teachers. So you, for the most part, right?
00:04:10.870 - 00:04:41.250, Speaker A: Like, you know, like, I wasn't really super keen to sit there and just, like, get 100% in Java class because, like, java to me was like, why am I learning Java? And so it was just kind of, like, it felt like a waste of time. There's definitely, like, some great teachers out there, but it just, like, wasn't for me. I think, like, I'm more like, what is, what is, like, the cutting edge right now? And, like, how do I get amongst that? And overwhelmingly, you're just not going to find that academia, you're more likely going to find that in, like, web3.
00:04:41.442 - 00:05:12.624, Speaker B: So let's sort of flash forward, like, to get, like, on a little bit of a timeframe. Like, okay, you've been doing this since you're nine, probably tinkering around learning languages, like, like, let's say, like post 18 years old. Like, what was, what was sort of, like, your first, like, actual what. What I would consider maybe maybe like a career sort of role or something that was, like, super, like the first, like, maybe really big media impactful thing that you build on. Like, what was it? What language was it? Like, what was the, what was the thing?
00:05:13.124 - 00:06:05.552, Speaker A: So, like, I started my own business when I was like, 15 doing web design. So I saw, like, all of my classmates and stuff were kind of like, you know, working at, you know, fast food joints or whatever, but I kind of just decided, like, from a very young age, probably because my dad is also, like, an entrepreneur, that, like, I would rather do my own thing and be the master of my own time. And so I kind of started off doing web design, and I built a whole bunch of web apps and stuff like that. And then I realized that web design is kind of going out and we're kind of coming more into mobile. So I did mobile for a while and I worked on a few mobile apps, and then beyond that, it's really crazy. I actually got into an aerospace startup, and so I was working on embedded systems for an airspace.
00:06:05.568 - 00:06:07.444, Speaker B: How old were you at the time of doing that?
00:06:10.544 - 00:06:12.016, Speaker A: Early twenties, I think.
00:06:12.040 - 00:06:13.016, Speaker B: Okay, cool.
00:06:13.200 - 00:06:33.094, Speaker A: And so that was cool. But obviously, like, you know, most rocket companies don't actually survive. And by the end of that, it was around about 2017. And I'd heard of bitcoin for a little while, but I sort of dipped my toes in the water there, like, you know, and that sort of kind of got me started in, like, a new direction. And so.
00:06:33.594 - 00:06:38.082, Speaker B: So you didn't. You didn't spend a whole lot of time, like, in the career world.
00:06:38.178 - 00:06:43.018, Speaker A: Like, I've never had a job. I've always been self employed. Yeah, yeah, always been self employed.
00:06:43.106 - 00:06:48.170, Speaker B: So you were sort of just mostly hacking around, doing a bunch of random stuff.
00:06:48.242 - 00:06:48.578, Speaker A: Yep.
00:06:48.626 - 00:06:51.214, Speaker B: And then you found out about bitcoin in 2017.
00:06:51.954 - 00:07:10.666, Speaker A: More like, I found out about it earlier, but, like, it didn't, like, click for me. And then in 2017, I realized, like, hey, I can, like, build apps on this thing. Right. But then by the end of 2017, I realized, like, oh, actually you can't because it's, like, expensive and congested and slow. Right. And so that kind of got me looking at, like, what are my other options?
00:07:10.770 - 00:07:21.174, Speaker B: Right, so you realize that you couldn't really build apps on bitcoin, but, like, I'm pretty sure in our conversations in the past, like, you did do some stuff on bitcoin or with bitcoin, right?
00:07:21.634 - 00:08:10.270, Speaker A: Yeah. So, like, from my perspective, like, ideologically, I was a big blocker. So, like, I think the 1 mb block cap is bullshit. And I think that if you go and look back at all the writings of Satoshi, they all reflect that. And, yeah, I think it's, like, laughable to think that we can't transmit much larger blocks today with zero security trade offs, considering the smallest photo that you've sent from your phone today is, like, what, ten megabytes or something? So I think that takes, like, a fraction of a second to send anywhere in the world instantly for free. So I think. So I didn't really, like, follow sort of all the BTC stuff that much because there really wasn't that much that you could do.
00:08:10.270 - 00:08:48.124, Speaker A: Like, if you look at Satoshi Dice, basically, Satoshi dice got wrecked by essentially transaction fees. And when segwit two X kind of fell through, basically, bitcoin was totally stagnant all the way up until ordinals recently, and then things really kicked off again. Now, the other thing about that is the harbingings and stuff like that, but I really think ordinals and just putting data on chain and things like BitVM and just the concept of, hey, we can actually use bitcoin to compute things, run scripts and stuff like that is a super hot topic and everyone loves it.
00:08:48.594 - 00:09:32.398, Speaker B: Yeah, obviously we're going to get into some really cool stuff about bitcoin here in a little bit. So let's talk now. So just to recap, like, you started tinkering around with modding when you were nine. You were doing web design by your 15, did some, like, aerospace stuff, and then, like, just sporadically not having a job doing random stuff came across bitcoin in 2017. And, okay, now we're at the point where you are like, okay, I can't really do anything here. This is not the place for me. I don't want to jump too far into the Solana stuff yet.
00:09:32.398 - 00:09:46.076, Speaker B: But I'm assuming you did other stuff in other places. So prior to Solana, what things were you exploring? What did you do there? And sort of like, what kind of stuff were you, like, did you learn in these different areas?
00:09:46.260 - 00:10:07.084, Speaker A: Yeah. So since, like, the aerospace stuff folded, I think around like, 2015, 2016, something like that. And then I sort of got into full time blockchain development. From 2017, I did a whole bunch of different projects and stuff like that. Started out on bitcoin, and then I dabbled with, you know, Ethereum and a handful of other chains. And then I got.
00:10:07.164 - 00:10:11.812, Speaker B: What were you specifically doing in the. I would like. I'd like to hear, like, what kind of stuff you were doing on those chains.
00:10:11.948 - 00:10:18.494, Speaker A: Mostly. Mostly built building casinos and stuff like that, as well as hacking and auditing icos.
00:10:18.914 - 00:10:20.202, Speaker B: Things really changed then.
00:10:20.258 - 00:10:40.708, Speaker A: So, yeah, so I look like a lot of investors that I knew back then would throw big money at the icos and the ICO, boom, boom. So they would be like, Dean, can you hack this? And I'd poke at the contract, and if I couldn't hack it, then I'd be like, you might still get rugged. But at least from a tech perspective, I think this is safe.
00:10:40.826 - 00:10:42.484, Speaker B: Did you invest in icos?
00:10:45.224 - 00:11:12.334, Speaker A: Yeah, like a couple, but, like, not. I wasn't super into that. I was kind of. So, like, my biggest thing I did was, like, I was working on eos and I built, like, the largest casino on eos. I was, like, the first hire at that company. And so, you know, you really want to admit that publicly I'm a hire, so it's fine. Yeah, and then, yeah, sort of beyond that.
00:11:12.334 - 00:11:29.618, Speaker A: I kind of just did a whole bunch of, like, random contracts and stuff, and then I ended up through, like, being, like, in big blocks. Like, I ended up winning the BSB global hackathon, too. And so I ended up, like, working in sort of, like, big block bitcoin for a couple of years.
00:11:29.746 - 00:11:33.534, Speaker B: I'm not even sure what that is. Can you explain to listeners what that even is?
00:11:34.734 - 00:12:10.748, Speaker A: It's a. It's a very interesting scam with a very fun community around it. And, yeah, don't look into it, but, no, but it's, you know, the idea of, like, if bitcoin scaled is, like, super interesting, right. Because it's like, it's got, like, this, like, there's like a trillion dollars of liquidity right there just, like, waiting to be used for something. And, you know, a lot of purists will say, like, oh, it's just supposed to be money and whatever, but, like, I think you can do a lot more than that. You know, money has a lot of applications and, you know, it's very interesting. So.
00:12:10.748 - 00:12:18.068, Speaker A: But, yeah, so I kind of. Yeah, built on, like, I've probably built on, like, I think about, like, 1415 different chains.
00:12:18.196 - 00:12:22.628, Speaker B: What was your favorite chain to build on before you got to the best chain?
00:12:22.796 - 00:13:00.732, Speaker A: Probably, like, Eos before it, like, really went bad, you know, why is that? Like, tech was just revolutionary at the time. You know, it was the best implementation of deposit. It had, like, really great smart contracts and it was type safe. Like, at the time, you're comparing to Ethereum, where you have this slow, expensive evm thing and unsafe math functions and all this stuff. Eos was pretty great for the time. And I think that a lot of people learned a lot of lessons. Basically, all of the lessons that we learned in blockchain basically come from understanding the limitations of problems with Ethereum.
00:13:00.732 - 00:13:24.940, Speaker A: And then new chains come up and kind of, like, implement all the work that all these people from Ethereum that have done because they don't have this, like, technical debt. And so kind of as we keep moving forward, like newer blockchains that implement all of these years and years of research and experience that we've got from having not just distributed money, but also, like, distributed compute really benefit from that?
00:13:25.092 - 00:13:55.388, Speaker B: Yeah, yeah. I mean, you know, obviously you hear about Eos a lot, and it's usually talked about just vc chain goes. A lot of the stuff that, like, you know, Solana has been compared to it in the past. But it's interesting to hear, like, somebody as technical as you who like, is no bullshit type of guy who is sort of, like, advocating to say this was pretty revolutionary. So, like, honestly, that's, that's kind of cool to hear that. You had a good ex, at least on the technical front, had a good experience there, certainly for the time.
00:13:55.436 - 00:14:03.828, Speaker A: Right. It ultimately failed because of governance, but the tech, that sort of opened my eyes to the fact that the blockchain trilemmer is bullshit.
00:14:03.996 - 00:14:14.784, Speaker B: Okay, so what was, again, still sort of staying a little bit before Solana? What was the last chain you were working on before you got onto Solana?
00:14:15.124 - 00:14:27.504, Speaker A: Yeah, so I was working on BSB before I came to Solana. In fact, I was kind of, like, doing both at the same time. So, like. Like, I kind of got into Solana the extremely, extremely early days.
00:14:27.844 - 00:14:30.544, Speaker B: Are we talking 2020? Are we talking 2021?
00:14:31.004 - 00:14:56.444, Speaker A: So I first heard about it. I believe in 2020. Like, I could go back and check the message logs. It was, like, a long time ago, but, like, a really long time ago. Like, totally followed me on Twitter. Like, we talked about, like, building a highly performance Solana client in C or whatever. But, like, I never, like, did it, but, like, so, like, for the longest time, for probably, like two years, the only person I knew in Solana was, like, toli.
00:14:56.444 - 00:15:16.908, Speaker A: Like, I didn't actually know any of these other people. Oh, and, like, one of the core devs had an old account that followed me and we talked at the time, but, yeah, I knew, like, two people, but it was near them. And then kind of in the very early days, like, the developer experience was, like, really bad, and I went into.
00:15:16.956 - 00:15:28.652, Speaker B: Discord, and then, like, I tweeted this recently. You went in the discord and you. You either you might get the answer to your question, or Trent might just roast you and you never come back.
00:15:28.668 - 00:15:30.420, Speaker A: That's exactly the letter. Yeah, yeah, that was.
00:15:30.492 - 00:15:41.064, Speaker B: That was Devex. Because whenever I got there, I was in the discord, like, trying to figure out how to do my job, and I was like, oh, my God, there's nothing here.
00:15:41.524 - 00:15:46.118, Speaker A: Yeah, I mean, like, you have to make sure these people are serious, right? Like, it was good.
00:15:46.286 - 00:16:39.774, Speaker B: Yeah, I say that it's. I always say this, that I think it was like, it was a blessing and a curse to have really bad dev ex in the beginning, because what it did, the first onboarding of engineers to the Solana ecosystem were the most dedicated people, like Armani, and a lot of these early stage protocols that came on mango and some of these guys that just, like, they were like, we don't give a shit how hard this is, because the performance of this is what we need to build what we build. So, like, the base layer of engineers that came onto Solana were just so incredibly talented and oddly enough, very social. Um, so they were willing to help other people. Like, you don't normally see that in most tech industries, engineers aren't on Twitter and they're not talking, but, like, they just sort of formed this. They were the base of onboarding the next generation of. Of engineers, because they real.
00:16:39.774 - 00:16:55.518, Speaker B: The whole meme of, like, chewing glass, it's not really true anymore. It's sort of ironic why the podcast is still called that. Like, obviously there's some pain and there's some engineers that are still chewing glass, but those are the guys that are, like, way deep into this, and you're probably one of those guys, to be honest.
00:16:55.686 - 00:17:17.552, Speaker A: Yeah, so. Absolutely. Like, I think, you know, back in. Back in those days, like, Dorian Solano was like, really, you know, it was just. It was really difficult. Like, I didn't quite understand enough. I guess I could have invested more time into it, but I had seen 100, a thousand of these.
00:17:17.552 - 00:18:08.694, Speaker A: Oh, I'm the next eos, or I'm the eos killer, or blah, blah, blah, pop up. I think the thing that actually really interested me at the time is Toli was the only guy who was talking about erasure coding, GPU acceleration, not just GPU mining. I've done a lot of run mining pools. I've done a lot of GPU mining and custom algorithms and stuff. But that, to me, is visionary, knowing where this thing's got to go if you really want to scale. That was the thing that really caught my attention, was this aggressive parallelization and scaling mindset. And also, I was, I'm, like, by default, way more attracted to the concept of, like, you know, go fast and break shit, as opposed to being, like, overly conservative.
00:18:08.694 - 00:18:46.520, Speaker A: Like, certainly it's mainnet beta, and I think that, like, you know, don't take the tag off. Like, find all the problems, you know, before you take that tag off. And I think that that is, like, a fundamentally, like, much better attitude compared to being hyper conservative about everything, so long as you balance that against. Don't. Obviously, loss of funds is bad, but ux issues, downtime, whatever. We have to stress test these systems. And the thing about Solana is it fails gracefully when these things happen, and it allows us an opportunity to go and really find out what went wrong and fix it.
00:18:46.520 - 00:18:48.650, Speaker A: So that was really attractive to me.
00:18:48.752 - 00:19:38.348, Speaker B: Yeah, tell that to the fudders. But anyways, like, I mean, the. I mean, at the end of the day, like, it sucks when these things happen, but at the end, like, this is beyond anything that's ever been done. Like, as far as I'm concerned, maybe you know better than I do. Like, obviously, distributed systems exist, but decentralized distributed systems that are, like, globally coordinated between people that don't really know each other, like, is really fucking hard. So, like, I think most engineers understand that, but sort of, like, the peanut gallery on the Internet will take anything to knock it, even though they don't really understand how challenging these things actually are. But at the end of the day, every time those things have happened in the past, knock on wood, it's gotten better.
00:19:38.348 - 00:19:52.584, Speaker B: You know, like, 2022 sucked. It was, like, one of the worst years of my life. It was so painful. There was, like, only a few of us from foundation that were public on Twitter. Obviously, we get destroyed. Now, thankfully, Mert's here. He's the one who takes the heat, so.
00:19:52.584 - 00:20:11.464, Speaker B: Thanks, Mert. Thank you, Mert. But, yeah, like, this is. This is. We're getting there, you know, and lessons are being learned every single day. And I know you're sort of, like, in the weeds. You have your own stuff going on, but, like, you're obviously actively vocal and in communication with the core engineers, which is.
00:20:11.464 - 00:20:37.302, Speaker B: Which is super awesome. Um, so let's talk a little bit about, like, and not necessarily what you're doing right now, but, like, leading up to when you inevitably started doing. Doing some education on Solana. Like, what's. What kind of stuff were you doing on Solana prior to getting involved in that? Like, we just tinkering around. Like, were you. Were you submitting to hackathon fraud? Like, any hackathons? You just generally.
00:20:37.302 - 00:20:48.254, Speaker B: I know you. You're the guy who goes as deep as humanly possible to figure out why things suck. So, like, what were you actually doing on Solana before you jumped into the educational side?
00:20:48.594 - 00:21:55.494, Speaker A: Yeah. So, before Solana, I built a company called Bitpeng, and what we ended up doing was using Solana for payouts for that company. And then. Yeah, so bitping is like a distributed. It's a distributed network that you can use to essentially, like, imagine doing things like ping or getting, like, the quality of a video stream or whatever, right? So imagine being able to use people's Internet connection to basically crowdsource network intelligence so you can find out, like, am I blocked in this country? Or is this ISP rate limiting me or whatever. So we basically were a company that solved those problems, and so we ended up using Solana as payment rails, because people doing these little jobs, it's not worth $100, but it's also not worth nothing. The thing about Solana is it enabled these tiny, tiny little micropayments to enable you to pay people for extremely small amounts of work.
00:21:55.494 - 00:22:35.444, Speaker A: There's actually this huge amount of value on the Internet of maybe sub 20 cent, but more than zero cent or more than a fraction of a cent value that just has never been captured by credit cards, PayPal, et cetera. We integrated Solana into that. Then we did a bunch of exploratory research into how feasible would it be to run the entire company on Solana. Ultimately, we didn't quite manage to make it work, but that's kind of what made me, like, really seriously consider it as an option to base our entire business on there.
00:22:35.784 - 00:22:46.104, Speaker B: Cool. Between that and where you are now, was there anything else, or were you sort of. Was that the only other thing that you had done on Solana prior to where you are now?
00:22:46.224 - 00:23:01.116, Speaker A: Mostly that. Right. I did a bit of tinkering. I have some other friends who did stuff, and I would, like, help them with code. I would audit contracts here and there. But I hadn't launched anything or done anything serious on Solana up until that point. I just was like.
00:23:01.116 - 00:23:08.904, Speaker A: I was Solana curious. Obviously, good tech is good tech, and I really appreciate good tech.
00:23:09.604 - 00:23:45.246, Speaker B: Cool. Well, yeah, I've talked about this a lot. So sort of understanding how you got started. That's pretty cool. I actually didn't know that you had done another business, that you were leveraging Solana for payments, which is a pretty cool thing to hear, I guess. The. So now, as I mentioned in the opening of this, I met a year and a half ago with a couple guys, which was Jeff and Nate, which are part of web3 builders alliance formerly, and the Cosmos ecosystem.
00:23:45.246 - 00:24:18.298, Speaker B: Lily Liu, the president of foundation, had introduced me to these guys, had a conversation, obviously super charismatic, really excited to do Solana stuff. So I needed some people just like that to build this, like, advanced sort of educational program. They came to me with a proposal. I was like, this is great. This is kind of what I would be doing on Solana if I didn't work for Solana foundation. So it was like, well, hell, yeah. Now we have somebody who's going to do this.
00:24:18.298 - 00:24:51.388, Speaker B: A couple cohorts in. I didn't even know who you were until, like, way into that. You were sort of just this mythical creature that was, like, helping these engineers, like, upskill alongside, obviously, Jeff and Richard, which I don't. To this day, I'm not sure if I've even met him. He's also still a mythical creature to me. But anyways, web3 builders alliance was doing stuff on Cosmos, ran a couple cohorts on Solana. Results were great people.
00:24:51.388 - 00:25:15.620, Speaker B: The feedback was great. And then we finally met, and I kind of find the man behind a lot of this. Obviously not taking credit away from Jeff or Richard or anybody else, but how did those. How did you meet these guys? To sort of build out one of the most advanced and most thoughtful sort of white glove educational programs on Solana? How did that happen?
00:25:15.812 - 00:25:53.064, Speaker A: Yeah, so this goes back probably about, like, four years. Four years or so ago. I built, like, a proof of work mining system, kind of similar to, like, ore on Solana, but it was built on bitcoin. And I had done a bunch of crazy stuff with that, also, like, working with a company called 21 e eight. And Richard was kind of in the loop with all of that at the time. And he'd seen sort of some of the stuff I'd done. If people can write GPU code, they're usually not a bad deaf.
00:25:53.064 - 00:26:28.422, Speaker A: And I was kind of looking for my next thing. I just moved to Taiwan, and I was looking for my next thing to do. And Richard was like, hey, man, like, you know, we're looking for people to join, you know? So I believe that he had done the first cohort. I can't remember if I was the first or the second cohort. I think it was the second one. And, yeah, I came in as. I came in as a ta, and basically, like, jeff just, like, interviewed me.
00:26:28.422 - 00:26:52.668, Speaker A: He's just like, hey, man, Richard said, you're, like, the best dev that he knows. And so we got this ta position. It's probably really easy for you. Like, all you have to do is know rust. And I'm like, okay, well, I've been, you know, writing rust for, like, five years at this point. And then, yeah, so I just joined as a ta. And, you know, the real huge benefit of being a ta, right.
00:26:52.668 - 00:27:35.560, Speaker A: Teacher's assistant, if people aren't familiar with the term, is you kind of get to sit back and observe. So your role is kind of like two things, right? You're kind of watching what's going on and trying to figure out, like, if there's people struggling, like, can you help them in the chat, or can you dm them? Or what can you do to get people unstuck, right. But that also leads you to, like, sort of understand the inherent sort of inefficiencies or problems with, you know, your curriculum or your course or teaching or whatever, right. And so while I was the ta, I kind of rewrote the entire syllabus, and then I ended up making, like, a huge, like, library. I think there's, like, I don't know, eight or nine, like, very high quality anchor contracts just on my GitHub.
00:27:35.632 - 00:27:37.944, Speaker B: And what's your GitHub for the audience?
00:27:38.104 - 00:27:58.694, Speaker A: Dean M. Little. You can find. Yeah, it's the same as my Twitter, same as my telegram. Anyone wants to get in contact, feel free to say hi, follow me, whatever. Yeah. So there's an escrow, there's a vault, there's an amm, there's a dao, there's a token sale, all the standard contracts that you would have to write.
00:27:58.694 - 00:28:33.606, Speaker A: So my biggest challenge was I'd only ever done native rust on Solana, so I kind of had to learn anchor. Anchor is a little bit weird. It's kind of like training wheels for Solana dev. It solves a lot of problems and then introduces some of its own. But overall, I think it's a net positive, because I think it really helps us to get people started with Solana Dev. It gives them something to go off. So I built out all this library of anchor stuff, and then it just accelerated from there.
00:28:33.606 - 00:29:05.518, Speaker A: We started being like, what if anchor could do this? And then realizing there's actually problems with the actual Solana repo. And then it's like, oh, what if we could fix this? And so, you know, one thing led to another, and so basically from a ta, I became a teacher. I helped to sort of, like, rewrite the curriculum with, you know, with Jeff and Richard and just collaborating with everyone there. And then eventually after, I think it was like, two or three cohorts, my students ended up, you know, taking my job, replacing me.
00:29:05.686 - 00:29:08.474, Speaker B: This is exactly the way that it should happen.
00:29:08.904 - 00:29:24.896, Speaker A: Exactly. So the course is currently run by Srinath, one, Andre and Leo. And, yeah, they're all graduates of the course, so they're all our own people. Yeah, it's beautiful. Yeah.
00:29:24.920 - 00:29:54.936, Speaker B: So just for the audience and I talk about this often, and I usually get a bunch of messages about the program itself. WBA is an advanced program. A lot of this requires you to sort of. You don't. If you're a gigabrain engineer, you can come into this without knowing Solana and probably be successful if you're a fast learner. But we have a, like, WBA has a lot of people coming in who are actually skilled engineers already on Solana looking to take. This is not a boot camp.
00:29:54.936 - 00:30:17.040, Speaker B: This is not like a four week educational, luxury boot camp. Jeff, once you meet him, he runs this like a football team. You're a family. You get, this is a white. It started out about like 25 people at a time. Very white glove, I think, like. Cause Mike McKenna, who does dev education at Solana foundation, we ran him through the program.
00:30:17.040 - 00:30:46.630, Speaker B: It's about 20 hours a week of dedication time. Like, I mean, give or take some hours there, depending on how seriously you want to take it. But the goal here is to take people to, like, advanced, top level engineers. And at the beginning, it was, they called cadets. Cadets and graduates of that cadet program can move into what they call the artisan program. Some of these guys already have a product. You guys mentor and support them.
00:30:46.630 - 00:31:09.064, Speaker B: Some of these other guys maybe don't have an idea that, like, that still just need fostered in other ways. And then you put them onto your third piece, which is your dev shop. So it's. Yeah, cadets, artisans, and you guys have a dev shop. You've. You've basically built some public goods via grants from Solana foundation. You've done some things for Bonk and others.
00:31:09.064 - 00:31:36.684, Speaker B: So, like, there is. They have a very strong dev shop. So you guys, with the way the phrase I phrase, the way I phrase it is you don't waste a single piece of the cow. We'll either help you build your product, we'll bring you into our Dev shop. And if you're none of those, we will help you get a job in the ecosystem or will turn you into an educator, which you've done to replace yourself. And now you're sort of just there in case people need you. And also, I think you're focused a little bit more on the dev shop side.
00:31:36.684 - 00:32:29.162, Speaker B: So WBA, it's an incredible program. If you're really serious about becoming a true engineer on Solana. And with all that said, you do the dev shop stuff, you're writing a lot of code. You're probably fighting with Trent about prs that you want added to the Solana repo, but at this. But at the same time, you've more recently are working on something called Zeus network, which is bringing bitcoin tech. And I don't know how I'll let you rephrase my misconceptions here, but bringing bitcoin tech onto Solana, bringing bitcoin liquidity onto Solana. So let's talk a little bit about Zeus, what it is, maybe even how it works, because I'm assuming people are going to be like, how the hell are you even doing that? Is it an l two? Give us the details about what you guys are doing at Zeus.
00:32:29.162 - 00:32:32.574, Speaker B: And, like, what's the impact of this going to be on the Solana ecosystem?
00:32:32.954 - 00:32:57.062, Speaker A: Yeah, so, like, definitely, like, my explanation of this sounds very different to, like, Justin's or whatever. Right? Cause I'm just like, coming at it from the tech angle. But Zeus kind of started out, you know, about like half a year or so ago. Justin called me up and he's like, bro, how do we put bitcoin on Solana? Because he could see that there's going to be this narrative of l two s and blah, blah, blah.
00:32:57.158 - 00:33:02.294, Speaker B: That narrative is coming. And Solana being involved in that narrative is highly important, in my opinion.
00:33:02.454 - 00:33:40.084, Speaker A: Yeah. And he's like a total Solana Maxi. He's told me he basically only holds bitcoin and Solana. They're the two chains he cares about. And he was one of the first people to, I think maybe if not the first, to introduce Solana here in Taiwan to people. So I kind of, because I had a background in bitcoin development, and I've done a bunch of cross chain stuff and whatever, it just really played into my skillset and I sort of laid out well, okay. Solana actually already supports all of the primitives for the bitcoin protocol, so that's a good start.
00:33:40.084 - 00:34:17.890, Speaker A: The only one that's missing is schnor signatures. Right. So I had a library that I'd been working on that was for ordinals, for like, you know, I'd be working on it for probably like a year or so in rust. And it happened to already kind of be Solana compatible just because it was rust. And the only thing that wasn't was like, you know, the cryptography stuff. And so I sort of said, like, okay, we could leverage this along with SPV simplified payment verification. And so long as we could figure out a way to do Shnor in Solana virtual machine, we would have the entire protocol covered.
00:34:17.890 - 00:34:51.063, Speaker A: So we could do validation of. We could validate blocks, scribds, transactions, signatures, you name it, that's where it started from. And then eventually what ended up happening was I ended up cracking schnorr signatures in SVM via a trick. You can sort of abuse one of the syscalls to make it do things that shouldn't. And luckily, one of those things is you can validate signatures in SBM today.
00:34:51.923 - 00:34:57.315, Speaker B: Tweet that I saw that said, I got bitcoin running on Solana. Is this. Was that the moment?
00:34:57.499 - 00:35:29.744, Speaker A: Yeah. So you could quite literally, like, every single aspect of the bitcoin protocol, you could validate every single block, every single transaction, every single signature from Genesis until today. Inside of SVM, you could run a mining pool. Inside of SVM, Solana could just become a mining pool. So you could actually. The entire protocol is now implemented. So there's not a piece of that puzzle that we can't sort of throw onto Solana, execute, validate, etcetera.
00:35:30.044 - 00:35:54.954, Speaker B: So I think there's probably going to be, obviously, some questions around this that people are going to wonder, like, how is this maintained? I think you and I discussed it a bit, but it's like how this is sort of secure, like, whether it's a bridge, a multi sig, how is this bitcoin liquidity brought onto Solana safely? Essentially, yeah.
00:35:55.454 - 00:36:33.374, Speaker A: So I think the best way to think about it, right, is like, you are bridging assets from one chain to another. But I don't think calling it a bridge is really fair. And then it does also utilize multisig. But to just call it a multisig is also not really accurate. The best way I could describe it is imagine if Solana was part of an MPC wallet, an MPC multiparty compute. Imagine if Solana itself, the Solana blockchain, had a bitcoin wallet, and the Solana blockchain itself could via. Oh, we got the love hearts coming out here.
00:36:33.374 - 00:37:35.864, Speaker A: The Solana blockchain itself could generate an address and say, hey, deposit bitcoin to the address of the Solana blockchain. It could validate the existence of that transaction via SPV. So, basically, validating proof of work, it could then proposed transactions to sort of go out and be sent on the bitcoin network. If you could do that, if Solana itself could actually function as a wallet, well, then you would actually have no ability for anyone to influence what that Solana program is doing. So that Solana program could basically permissionlessly receive liquidity and it could propose transactions. The only thing that it actually needs help with is signing a transaction that's outgoing. What we have is a quorum of individuals who are elected by essentially staking lsts.
00:37:35.864 - 00:38:26.206, Speaker A: All of those sanctum tokens that you've seen now, HSOL Joomsol, bonk Sol, all of those liquid staking tokens, they could be used as collateral. And the really nice thing about using them as collateral is there's no loss of capital efficiency because they're already yield bearing. You're not just locking up dead money. So people can basically become a signer in the Zeus network by staking lsts. And then the LST states actually function as an election mechanism to elect a quorum of signifs. Those signers, they have their keys aggregated. So schnor can actually aggregate public keys into a single key.
00:38:26.206 - 00:39:19.308, Speaker A: And then what happens is the Solana program will actually generate transactions. And then all these people can do is sign or not sign the transaction. And if they choose to censor a transaction, we can slash them. And then in the absolutely unlikely event that this entire quorum colluded to steal funds, we would slash their lsts at a 10% premium. What would happen is then anyone who had their ZBTC could essentially claim their lsts at a 10% premium, so they would have a free 10% arbitrage. So either existing ZBTC owners would reduce the CBTC supply for a free 10% arbitrage, or people would deposit additional bitcoin liquidity to Solana to balance it out.
00:39:19.396 - 00:39:34.784, Speaker B: So you're basically keeping this as safe, as secure as possible so that nobody that's essentially participating in the Zeus network is going to see any downside here. So this is sort of protection mechanism.
00:39:35.424 - 00:40:03.538, Speaker A: Yeah. So essentially, like, it is secured by collateral, but it also makes the smallest amount of trust assumptions you could possibly require. Right. It's not like a multisig held by, like, three people and, you know, they could just collude and do whatever. Right. It's, it's over collateralized. It will not accept, like, the Solana program will literally not allow you to accept liquidity beyond a certain threshold if you don't have that much LST.
00:40:03.538 - 00:40:07.450, Speaker A: Like, those meant that much in lsts staked.
00:40:07.642 - 00:40:08.194, Speaker B: Okay.
00:40:08.274 - 00:40:33.074, Speaker A: So, yeah, essentially it will not, like, take, take on more bitcoin liquidity than the protocol is able to handle. And so, yeah, basically, you'll never, like, reach, like an under collateralized situation, and you can't, like, have these people, like, propose transactions, the transactions proposed by Solana itself. So, yeah, all signers could do is sign.
00:40:33.814 - 00:41:35.642, Speaker B: Well, yeah, I mean, like I said, I've known you for a while, so you don't really talk about things unless you are like, have a super high conviction. And obviously you're extremely technical and, like. So I have a lot of respect for that and hope because like I mentioned earlier, if this, if Zeus works and this gets adopted and bitcoin or Solana is involved in the bitcoin narrative via this, there's some, there's some other ones out there that are doing very similar things, which, like, I want everybody to be successful in this world. But, like, for you guys particularly, like, if this does work, it's huge. I don't think people really can grasp sort of the technical stuff is for the devs and, like, oh, wow, that's fucking cool. But for everybody else, imagine 10%, 5% whatever of bitcoin liquidity starting to transact on Solana. That's a lot of liquidity being ported over to Solana that is safe then, that it can transact very quickly.
00:41:35.642 - 00:41:40.858, Speaker B: And there's just a lot of really cool stuff that just opens up to the ecosystem.
00:41:40.986 - 00:42:45.382, Speaker A: Yeah. Certainly compared to a centralized exchange. If a centralized exchange just took your funds, you'd be screwed in this situation. The worst case scenario, you get a 10% arbitrage, right? So you, like, you make money, right? If you consider, like, you know, if you consider, like, trying to bridge to, like, another bitcoin, l two, like, the problem. The problem that they come up against is like, they're all starting from scratch, right? Solana already has an extremely mature defi ecosystem, right? So if you have bitcoin on Solana, like, we could just, like, plug it into, you know, like Soland or Camino or Jupiter or whatever, right? Like, all of this infrastructure already exists. Liquidity already exists, right? So really the question then is, like, how do we get more liquidity, right? Like, you see, like, with less tbl that, like, Solana outperforms ethereum frequently, right, in terms of total volume transacted. Well, how could we inject, like, another trillion dollars into Solana? Well, guess what? You, like, go to opencoinmarketcap.com,
00:42:45.382 - 00:42:52.684, Speaker A: right? And look at, like, the number one spot, and there's like a trillion dollars of liquidity sitting right there doing not very much, right?
00:42:52.724 - 00:42:53.060, Speaker B: Yeah.
00:42:53.132 - 00:43:37.934, Speaker A: Now, and if you look at the block subsidy, like halving and halving and halving, right? We're down to a very low subsidy at this point. And miners are actually really interested in this idea of staking. Restaking, lending, whatever with their bitcoin, because they need to find other, like, new ways to remain profitable. So I think that there's definitely. It's definitely, like, it's the right time and, like, for this, for this narrative to occur. And I think that Solana is very well positioned to capture that because it's one of the only chains, maybe the only, maybe, like, one of, like, two or three that could actually implement all of these bitcoin primitives and actually, like, capture all that value and actually be able to, like, process it.
00:43:38.354 - 00:44:04.964, Speaker B: Super exciting stuff, man. So we're going to move on to the lightning round. We're going, like, this is the round where we sort of keep the answers short and mainly just two questions and then finally an additional one. So, in your experience, for you, the answers are always different in flavor, depending on the type of engineer. But, like, number one, what sucks about building on Solana and what would, like, essentially what sucks and what would you like to see that's better in your experience?
00:44:05.264 - 00:44:31.862, Speaker A: I think it's really hard to actually, like, make a meaningful change. So if you release a really good library, it's hard to sort of, like, get it in front of people and get adoption. If you fix something in the Solana repo, it's hard to get it merged. If you fix something at anchor, it's hard to get it merged. Right. It's really hard. Like, there's a lot of extremely talented people and the tech, there's so much, like, because Solana was, like, scrapped together.
00:44:31.862 - 00:44:38.182, Speaker A: Right. Like, very quickly by a bunch of, like, cell phone guys. Right? Like, there's still.
00:44:38.358 - 00:44:40.702, Speaker B: I like the way you put that. That's really funny.
00:44:40.878 - 00:45:09.578, Speaker A: But, like, there's still a lot of low hanging fruit there that is yet to be optimized. Right. But it's very hard for someone who's not, you know, already well known or not from Anza or one of these big companies to sort of come in and have a big impact on these things, you know? And so I think that that definitely needs to change because it would be great to sort of see sort of impact and influence being more decentralized in the space.
00:45:09.706 - 00:45:40.694, Speaker B: Totally. I mean, totally agree. I mean, this is true for everything that we do, like, decentralizing this and getting way more people active. Like, we're starting to see from, like, my point of view, we're starting to see events become decentralized. Foundation is no longer the gatekeeper of events. You want to do something, apply for a grant to run something. Solana summit is happening in Malaysia soon, which is basically being put on by Jupiter and then facilitated by ecosystem teams.
00:45:40.694 - 00:46:06.644, Speaker B: Same should be true on the tech side. Get more people involved, actively involved. Obviously, it's not easy when priorities are, when you have network congestion and a lot of things take precedence. But, like, overall, I totally agree with the sentiment there. So next question. What is good about building on Solana? Technical or non technical? Whatever you have to say. Like, what's the sort of best part about building on Solana?
00:46:07.384 - 00:46:56.426, Speaker A: So I think, like, what I would say is it's got really good vibes. You know, like, building with people in Solana is like a lot of fun, and there's generally just, like, good vibes. And I think that that's because a lot of the people building here are either just really positive because Solana is so community focused, so they're really sort of like positive people facing people, or they're like really hardcore glass chewing dev types who are just really all about performance. And so I think you get those two people, you've got really nice people and really smart people. You kind of put it together. It's really good vibes. And I think too, like, you know, like when I was, like, working on the type a blockchain, weak hackathon for the bonk project, right? Like, they needed to, like, accept a currency.
00:46:56.426 - 00:47:14.460, Speaker A: They needed to accept Solana for donations for animal shelters and stuff like that, right? But they wanted to pay in banquet. Well, like, guess what? Like, I could just, like, throw a Jupiter swap in the middle and bang. Like, you know, it's a mature ecosystem. Transaction fees are low. Performance is high. High. There's very few things that you can't do.
00:47:14.612 - 00:47:39.784, Speaker B: Yeah, cool. All right, man, final, final question. And this is not really a question. It's more so, like, what's your advice to, like, somebody that's getting started on Solana or maybe who just started their journey for them to, like, essentially be successful, you know, like, it's hard to. You're coming in new, you don't really know anybody trying to navigate the tech, the ecosystem or whatever. What's the best advice you could give to somebody new?
00:47:40.114 - 00:48:01.934, Speaker A: I would say build yourself a platform right now. There are many ways you could do that. You can get really good at Twitter. Some people are just naturally geniuses at Twitter. Most people are not. The other thing you can do is you could natural genius right here, ladies and gentlemen. But the other thing you could do, right, is you could join a program like WBA.
00:48:01.934 - 00:48:32.402, Speaker A: We would certainly help you to build that platform. And shine light on whatever you're doing and give you the resources and tooling to do that. And then the other thing I would say is participate in hackathons and any kind of, like, regional events wherever you can. Sort of grow your influence, obviously. Like, there's a lot of regional events. Like some of our cohort people, some of them are hackathon winners, right. But a lot of them that didn't end up winning the hackathon managed to win, like, their regional events for the hackathon.
00:48:32.402 - 00:48:49.808, Speaker A: Right. And that has really elevated all of their sort of portfolios. Right. I would really recommend get involved in things like that that are going to help you build your brand and your image and then figure out what you're really passionate about. Find the right people and go and do it.
00:48:49.896 - 00:49:28.352, Speaker B: Yeah, just dive in and do it. And this is something I sort of reiterate on a regular basis. Don't go into hackathons with the mentality of I have to win this. Go in with the mentality of I have to complete and see my idea through. And if you lose, which I don't consider a loss, if you actually did it because you're better, like, you've done something that 99.9% of people have not done, go back to the drawing board and then figure out, like, okay, this didn't work, what's the next thing? If you look at tensor, you look at Fluxbot. Like, a lot of these guys, they did two or three of these major hackathons and lost every single one of them.
00:49:28.352 - 00:49:57.028, Speaker B: And then they went back to the drawing board and they came back and, like, they were not going to stop until they hit on that idea. So just don't get, don't, don't get disheartened. If you don't win. Just know that this is just once, that's just one step forward. You learn some lessons, go on to the next. You know, like, this is how you succeed in any industry. So just like, just get involved, be active, talk to people.
00:49:57.028 - 00:50:26.514, Speaker B: WBA is one also rise in RISC I N.com is working on some things to help build up your skills to prepare you for web3 builders alliance slash Solana Turbine. So at Solana Turbine on Twitter, follow them. Make sure that you are. Go to their website if you need dev shop work, check them out. If you're looking to apply to one of their cohorts, go get on the waitlist. They just kicked one off.
00:50:26.514 - 00:50:43.902, Speaker B: They kick every, every three months, a new Solana turbine cohort is kicking off. So get involved and that is it. Dean, thank you for joining. Finally. Glad to get you on the show. We talked about a lot today. Hopefully some people learn some things.
00:50:43.902 - 00:50:46.354, Speaker B: And thanks for hopping on, dude.
00:50:46.654 - 00:50:47.790, Speaker A: Thank you very much.
00:50:47.902 - 00:50:49.074, Speaker B: All right, cheers.
