00:00:00.160 - 00:00:26.392, Speaker A: Hello, everybody. So welcome to this week's Changelog. The first thing we need to check out is the project list of the grizzly song drops. So there's many, many submissions, and you can here scroll through the list and see all the projects with their nice picture. You can click on it, you can check out the GitHub links, and there are amazing projects in it. So I really suggest that you have a look at them.
00:00:26.518 - 00:00:37.116, Speaker B: Yeah, the projects are very high quality this time around. I'm looking forward to one who wins this hackathon, as well as like future hackathons as they increase quality over time.
00:00:37.300 - 00:00:40.064, Speaker A: What kind of commits did you find this week?
00:00:40.524 - 00:01:47.924, Speaker B: Yeah, so today's proposal is the click service. So this is a proposal under Sund's. What this click service is, is it's trying to solve a problem of getting or latency issues between like, Asia versus the rest of the world, etcetera. So, for example, whenever turbine is propagating the blocks or the shreds over to the different validators across the world, some validators might get them late sometimes because of location across the world. So this click service, what it does is it kind of creates clicks or it's optional clicks, so where a validator can forward directly parallel to the normal retransmit stage to the validators that they choose. So if you have a validator, say, in America, and you want to transmit quickly to a validator in Asia, you can do that faster than turbine by optionally deciding, like, this is my dedicated validator or click that I want to transfer to. So it's a pretty cool proposal.
00:01:48.064 - 00:01:57.300, Speaker A: Interesting. So I directly send it to the leader if it's in Asia, for example, like directly to their transaction process unit, or how does it work?
00:01:57.492 - 00:02:42.034, Speaker B: Right? So it's not, not always the leader. So say, like, Jonas, you and I are friends, right? Say you're running a validator in Asia and I'm running a validator in America. I want to send my shreds to you directly so that you get them quicker. It's so that like, hey, if you are running a geyser service on top of that validator, you can get the updates even faster. And this is very required if you're running deFi services in Asia or something like that, because you want to get the trades as fast as possible so that you can react to them as fast as possible and equal to the rest of the world.
00:02:42.654 - 00:03:17.438, Speaker A: That makes sense. Thank you. I also found another thing about geyser, by the way. Now, if you're a geyser developer. It's way easier for you to work on plugins because you can now hot reload the plugins. So basically what this commit enables you to do is your validator will every 10 seconds check the plugins folder and then directly load the new plugins on the fly. So you don't really need to restart your validator in between, which would imply that you need to catch up with the network again and it takes some time and would be very inconvenient.
00:03:17.438 - 00:03:20.262, Speaker A: So this will definitely help the devs.
00:03:20.358 - 00:03:40.794, Speaker B: Yeah, that's so awesome. I really appreciate, I believe this was done by KV or caveman Loverboy on GitHub, which is a community like outside of labs, fire dancer, cheeto or mango. It's like actual community contributed and he's done quite a few things with Geyser and this is another major improvement to geyser that he's made.
00:03:40.894 - 00:03:46.426, Speaker A: Oh, that's amazing. Yeah, I saw him on Twitter a few times, so that's cool that the community chips in.
00:03:46.570 - 00:04:25.654, Speaker B: Yeah. And another commit I saw was the account data size limits on transaction fee. So there's a lot of different knobs that they're adding to transaction fees, but they're all defaulting to zero. So this is a new one of, hey, maybe in the future accounts can be like, the account size can be related to a fee that you pay. So based off of like if you increase the size of your, of your account in a transaction fee, you would pay that extra fee and this would be on top of rent. Now, right now it's defaulted to zero, but in the future with like SMD and a lot of research, maybe it can be changed to more than zero.
00:04:26.314 - 00:04:36.594, Speaker A: So I would theoretically, like, if I have like big accounts, like 64 megabytes or so, then this would go into the fee calculation, right?
00:04:36.894 - 00:04:41.234, Speaker B: Yes, it would go into the fee calculation for your transaction.
00:04:42.054 - 00:04:47.594, Speaker A: Cool. Yeah, that makes sense because the validators have more work with them. So it sounds really good.
00:04:48.094 - 00:04:48.446, Speaker B: Yeah.
00:04:48.470 - 00:05:28.926, Speaker A: Another thing that I found is the Solana Developer Forum has a new section and it's the tooling section. And if we click on here, we can already see the first proposal, which is local test validator plugins, which I'm super happy about because it will help us like if this supposedly goes through and someone works on it, it will make developing locally way easier. So you can write like start your validator already with a few deployed programs. Currently, this is a bit inconvenient to get the mainnet programs into your local validator. And yeah, if someone really builds some tools for that or plugin structure that would be really great.
00:05:29.110 - 00:05:55.752, Speaker B: Yeah, that's one that I propose, actually. It's a really exciting proposal just to like get, instead of figuring out and reinventing the wheel, every time that you have a new program you want to add, you can just add a plugin and install. It would be really simple. The other proposal I believe on the tooling section is about logging and getting a good logging framework out there also really cool and kind of required for if you want to have like production level services.
00:05:55.918 - 00:05:57.308, Speaker A: Yeah, that's super useful.
00:05:57.436 - 00:06:16.556, Speaker B: Yeah, the tooling section is incredibly useful. So if you have an idea for a new tool you want to be built, go ahead and propose it in the tooling section and you could hopefully find other people that are interested in building that tool alongside you. But yeah. So that is it for this week's changelog. Thank you for coming. See you next week.
00:06:16.700 - 00:06:17.404, Speaker A: See you next week.
