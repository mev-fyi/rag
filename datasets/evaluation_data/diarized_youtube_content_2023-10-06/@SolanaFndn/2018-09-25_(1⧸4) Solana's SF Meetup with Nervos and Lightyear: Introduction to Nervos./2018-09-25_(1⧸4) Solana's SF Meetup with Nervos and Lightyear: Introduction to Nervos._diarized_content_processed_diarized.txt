00:00:07.200 - 00:00:36.490, Speaker A: All right, so first, thanks for having me here and thanks everybody for coming. So today I want to talk about designing a general purpose common knowledge base. And that's my email. All right. Okay, so we'll start with common knowledge. Right? So what is common knowledge? So it's both economic as well as a logic term. So common knowledge means the knowledge that I know, you know.
00:00:36.490 - 00:01:19.818, Speaker A: And I know that you know. And you know that I know, you know. Right. So it's the, it's the basis of how basically, you know throughout the history how humans will collaborate and work together. Right? So common, other systems, in the beginning we carve rules data on this stone tablets. Then nowadays we don't do that anymore. One example, for example, common knowledge is when I'm driving to a four way stop sign, I know that if I'm the first person approaching this intersection, then everybody will let me pass first.
00:01:19.818 - 00:02:05.252, Speaker A: And I know that everybody knows as well. And this is how we don't get into collisions in intersections. And that common knowledge is basically, we were educated by things like traffic manual or the police sometimes. So anyway, so throughout the history, common knowledge formation and preservation has been mostly manual and also in between humans. And now in this new age, then blockchain is basically an automatic machine to accumulate and preserve common knowledge. And we'll get to that in a bit. So let's look at specific versus general purpose common knowledge basis.
00:02:05.252 - 00:02:50.454, Speaker A: And we say bitcoin itself is the first common knowledge base. Blockchain common knowledge base. It's a very specific purpose. The purpose is to preserve balances on a trusted ledger. So if you look at bitcoin Etxos, it basically has this amount semantics that shows how much bitcoin there is in the Utxo. And then it also has this hard coded validation function. So how do you, other than just data structure, how do you trust this ledger? And that's done by all the nodes performing validation functions, which is the sum of all input uxos, it's going to be the sum of output utxos.
00:02:50.454 - 00:03:45.162, Speaker A: Right? So to summarize fixed data structure and then fixed validation functions to be a specific purpose knowledge base. And then, so what we do in nervos to build a general purpose knowledge base is to generalize the bitcoin utxo model. We call this the cell model. So basically, instead of just amount, we allow users to define any data structure that you want with a schema. Instead of just this fixed validation function to check inputs and outputs balances, we allow you to define any functions, the custom functions that you wish and then have that as a descriptive language and run the VM. Think about the cell model in nervous. It's a generalized form of bitcoin juicer model to be able to support more semantics, more than just payments.
00:03:45.162 - 00:05:03.478, Speaker A: Okay, so I want to talk about some trade offs, right? So building a common knowledge system versus building a computation system, right? Decentralized. So we just put a few projects over there, probably the most well known computation platforms, right? So for example, Ethereum says it's unstoppable words computer. Um, so for computation platforms, the computation semantics will be explicit, right? This is, uh, expressed with Ethereum, for example, with a smart contract. And then what do you want smart contract to do? Uh, and implicit data semantics, that means the data stored in Ethereum, it's the result of computation, right? So you have to know the semantic data within the context of the smart contracts. Then you understand what they express and what they mean for computation platforms, the competition, which is what the users of competition platforms demand would be TPS. So transaction per second, as well as unit competition price. So there's always going to be more innovative projects coming up that promise a faster TPS and then cheaper price interoperability, mostly domain specific RPC style computation.
00:05:03.478 - 00:06:17.090, Speaker A: So you basically call a method or function on the smart contract and then pass in the data that the computation needs. So if you compare with the knowledge systems, and then this is, we'll go through this and then we'll go through the tradeoffs reflecting the two systems. So Norvos, for example, we want to be the word trusted common knowledge base. This is our base layer, and then, so our data semantic is explicit, right? So data semantic expressed by data structure definition, as well as what you considered as valid data, right? So that's schema plus validation, and then the computation semantically implicit, right? So we don't demand that the developer, you have to say how this exactly generated. So we just take the computation generated result of computation generated off chain and then try to validate it. So competition in terms of, you know, we haven't seen another system that do knowledge, but the competition will be, you know, as a knowledge platform, how secure this platform is, right? So whether we can do a good job, preserve the common knowledge interoperability just to compare. So instead of RPC style, this is a more like, you know, different platform will pass us dumb data objects.
00:06:17.090 - 00:07:12.524, Speaker A: And then the, again, the semantics is expressed with the schema definition and then the validation stored on CKB on the rows. Okay, so this is like the obligatory mention of the triangle, right? Scalability, security and decentralization. And then let's put this in context and see how we have to, how when we designed this platform, you know what we thought about the trade offs. So for competition platforms, right? So scale computation on chain, and then a lot of it comes down to, for some projects here at least, it's about reducing or limit consensus scope to make the consensus run faster. So the security model is to, it's a single blockchain governed by this consensus. Consensus gives the security of the network. And so reducing consensus scope itself, it's very tempting and it could be a slippery slope.
00:07:12.524 - 00:08:17.554, Speaker A: And the reason is if you keep reducing the consistent scope, then your sacrifices on decentralization, another point that we'll come to later, it's a disappearance of full nodes, and a lot of it comes down to the cost of storage, the bloat of global state. Then it's become harder and harder to run a full node. And then for us, we want to, again, the value that our users demand is more about security over the preservation of knowledge, right? So we scale computation options. So our story about scale competition is not to scale that on chain, right? And that comes down from compressed intermediate state transitions. This is typical L2 scaling of network, a blockchain network governed by. Okay, so our security comes not just from the consensus, but as well as the crypto economics with the interaction between the main chain as well as the L2 solutions. So we want to uphold the invariant of decentralization.
00:08:17.554 - 00:08:57.972, Speaker A: We think that's the core value of blockchain systems. So we protect this ongoing, we want to, there are two ways to protect full nodes. Those are very, very important in the blockchain system. So there are two ways. One is you find out the economic way to motivate the full nodes to operate, pay for them, compensate, which there isn't really a good way to think about that. And the other direction is to make as cheap as possible for people to run phone nodes, and that's the direction we're going anyway. Okay, again, this is really short intro, so I don't have a lot of time, but I welcome questions, uh, in the, in the panel discussion.
00:08:57.972 - 00:09:38.778, Speaker A: So in the end, so what we got is a layered architecture because, you know, as you have seen, our, uh, permissionless blockchain we call nervous CKB. CKB central common knowledge base is, uh, plays a very limited role in this, um, in this system, right? We don't want to put all the computation on chain. We want to push them out. We want to use crypto economics to incentivize people to be able to run for nodes and then to limit the global scale, global state. So our tokenomics, basically, they can people, if people need to pay, if people need to store data on CKB, then they have to pay with the ongoing cost of liquidity of the token. Okay. And all the.
00:09:38.778 - 00:10:06.834, Speaker A: So we want to build the base layer best suited for L2 solutions. So they could be, you know, channels, blockchains, they could be even centralized services as well. So anyway, so that's my brief intro of the project. And again, oh, we're hiring. So we're hiring engineers, great engineers, people that, you know, with the business background, the marketing community. So feel free to email me or talk to me afterwards. That's it.
