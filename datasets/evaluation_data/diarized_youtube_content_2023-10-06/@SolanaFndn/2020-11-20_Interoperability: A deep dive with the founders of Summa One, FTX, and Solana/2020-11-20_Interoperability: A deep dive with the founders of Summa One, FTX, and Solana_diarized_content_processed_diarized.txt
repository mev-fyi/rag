00:00:12.960 - 00:00:14.070, Speaker A: All right, we're live.
00:00:14.222 - 00:00:20.234, Speaker B: Welcome, everyone, to the 8th event of the Solana Wormhole hackathon. We have another.
00:00:21.174 - 00:00:22.534, Speaker A: No, we have.
00:00:22.694 - 00:00:26.682, Speaker B: We have a one on one with the founder of Circle, Jeremy.
00:00:26.798 - 00:00:27.202, Speaker A: Okay.
00:00:27.258 - 00:00:54.974, Speaker B: And then we have a liquidity pools conversation. So they're almost there. And then I'll stop giving these intros and everyone can go back to building. So. Yeah, well, welcome, everyone. This is, this is the 8th event this week, and we are going to be doing a deep dive into interoperability. And we have Sam from FTX, we have Anatoly from Solana, and we're excited to have James, who is the founder of Sumo one with us today.
00:00:54.974 - 00:01:28.344, Speaker B: He's an expert in interoperability. So this should be a great conversation for everyone, for all the folks that are new. Real quick one down is we have a chat section over here on the right hand side that seems like folks are already taking advantage of. Feel free to just drop any commentary during the panel there. And then we have a questions tab in right beside it to the right during the conversation, drop any questions you have for the panelists, and we'll take the last ten and 15 minutes to answer the most upvoted questions. I think with that, tolly, I'll let you take away from there and you'll have fun.
00:01:30.644 - 00:02:10.434, Speaker A: Awesome. Thanks, Austin. So interoperability is like, actually, this was my bread and butter. Like, my entire career building operating systems is all about interoperability. You guys hear? That's one of my kids screaming for a movie. I get movies whenever I'm on the panel. So I, like, I was wondering, like, James, since you've been working on this for, like, forever, do you think this is a similar problem to, like, iOS, Android interop, or is this, like, fundamentally, like, lower and harder or easier because it's just cryptography?
00:02:10.854 - 00:03:11.344, Speaker C: Well, you know, I have relatively little experience with iOS and Android interoperability. The thing about this is that theoretically, it should be easy interoperability. We're usually talking about having, like, clients and just building light clients, and we've been doing that for a decade now, and we should know how to do it really well at this point. The problem is that people keep coming up with all these new consensus systems and all this, like, proof of history or proof of stakeholders stuff, and the light clients change every year or two, and the state of the art keeps moving forward. And all of these chains, like Ethereum, they only have a few signature algorithms, they only have a few hash functions. And so any new cryptography, we have to just completely redo everything. And so the main problem, like, with interoperability right now is that the base chains keep moving too quickly for us to build proper interoperable systems and onboard users.
00:03:15.764 - 00:03:53.574, Speaker D: I sort of feel like there's a little bit of a lack of ambition also in some of the interoperability projects. I might be wrong about this, and I definitely think that some of your projects have been exceptions to that. I feel like they're among the only ones where I read them. And I'm like, yeah, that's a real attempt at interoperability done right. And others, I'm like, that's like kind of a useful product, but it's like the vision isn't for ultimate interoperability, really. I don't know if they under sometimes unclear to me whether or not the projects understand that, or maybe I'm wrong or maybe I'm holding him to a shitty standard.
00:03:53.614 - 00:04:00.350, Speaker A: But what would be totally ambitious? Like, what is like an ambitious interoperability thing?
00:04:00.502 - 00:04:47.384, Speaker D: Yeah. So, I mean, I sort of see, like a few dimensions. One is the sort of like trustlessness. I don't know what that means exactly. Like, obviously you can get down to it, like, what's a blockchain? Right? And like, like, I hear you on that, but like, you know, roughly speaking, kind of like, you know, has the same security guarantees as the layer ones involved. And, and, and that, like, you, other than like the validators of the layer ones or block producers or, you know, whatever that is going on there that you can't get fucked over by anyone. Sort of like no one else can choose to take your funds or something like that.
00:04:47.384 - 00:05:25.764, Speaker D: That's sort of like one dimension. Then the other dimension is like, can you do something on chain from one chain that affects another chain? I think that's like a little bit of the holy grail is like, can you have a smart contract on one chain that, like, really does affect the other chain in like kind of a predictable way so that you can get composability or at least some sort of like weak, slightly, like slightly, slightly wonky composability cross chain? I think those are like things that I would see as like, really the goals.
00:05:27.424 - 00:05:58.204, Speaker C: Yeah, I think the, we kind of think about the two layers there as the transport layer is how our message is being passed. Right. And then what message is being passed on top of that transport? And, like IPC goes a few layers further and adds these connections and channels and things like that and a lot more standardization around it. But the goal really is that a contract on Ethereum should be able to message a contract on some solana or celo or another blockchain and should be able to call a function and have an effect.
00:05:58.904 - 00:06:01.204, Speaker D: Yeah, I totally agree.
00:06:03.464 - 00:06:42.204, Speaker A: This is like kind of like where I think we start getting a breakdown of what is trustlessness and what is something calling a function. And this becomes very kind of ooey gooey and what are the security parameters and who can get screwed and how, I think are like details that are really hard to kind of write, like get right, I think. And this is why I think, like, to your point, like ambition, like this stuff is hard. And being, what does it mean to be extremely ambitious just to do all of it? And like, that's typically hard.
00:06:43.104 - 00:06:56.994, Speaker D: Oh, I agree. It is hard. Um, it's. I, well, it is hard. I don't know if it's like the hard disks thing, but it is hard.
00:06:58.214 - 00:07:21.210, Speaker A: So, like the summa auction thing, I think was a kind of a brilliant construct because in that auction, the contracts trusted the proof of work weight. Right. Of the blocks you were verifying, and that's it. So you kind of had some economic bounds on the, like somebody had to spend a lot of electricity to go muck with this auction. Right, right, yeah, yeah.
00:07:21.282 - 00:08:08.294, Speaker C: Well, you know, the, the way the auctions work basically, is that the Ethereum contract is locking up Ethereum and making what happens to that ether dependent on what happens inside the bitcoin chain. Right. And it does that by following bitcoin's consensus, by checking the proof of work that's going on over on bitcoin. And this was extremely difficult to figure out and get right, simply because bitcoin has almost no features that we expect from modern blockchain. And it was really fun to build. I'm optimistic that in the future, interoperability won't be that difficult and won't have quite that many implementation details to nail down.
00:08:09.874 - 00:08:41.354, Speaker A: So I find that, like, the difficulty of taking that approach to proof of stake networks is that we don't have objectively measurable economic weight to any headers. We just have a bunch of keys that we think are not screwing us. And therefore it kind of reduces to a multisig. Right. Like there's a fancy multisig that signs a header to a block and. But it can sign arbitrary headers to arbitrary blocks.
00:08:41.974 - 00:09:09.556, Speaker C: Yeah. Well, I think, you know, the goal here is that we can do slightly better than a multisig. I think we can get at least as good as a light client gets. Right. A lite client's not just blindly trusting disconnected headers. It sees it's checking some amount of the history and making some probabilistic good enough security assumptions. And it beats out just trusting a group of validators by I think, a significant margin.
00:09:09.556 - 00:09:12.344, Speaker C: And that's really what we want here.
00:09:14.604 - 00:09:35.684, Speaker D: I do think that there's, oh, I think like fraud proofs can do something here where like, like, I think one of the things that you can do is like, if you think that someone's sort of like pulling some bullshit that you can call bullshit. And like if you want to go through the work, you can dig through the whole fucking history and be like, nah, like that, not a good header.
00:09:36.224 - 00:10:29.946, Speaker A: So to me, like that is actually like, Sam, that is exactly like kind of where I see wormhole moving is that the speed of a multi tick cannot be beaten, but nobody can call bullshit on it right now. And I think what's really cool next step to add is a like, client proof that can actually, like effectively, like it's a very simple model. There's a logger request on Ethereum, a logger responses on Solana. And if those ever don't match, right. If there, if you can find signature like signatures of the validators that show that this multisig didn't match the logger request responses, then there's an insurance pool that will pay you something. And clients can, whatever, if they feel like it, take as much risk as they want through the, through the snake, right? And this pool only needs to be called during a bad event. So it's like gas deficient, right? Like, go ahead, Sam.
00:10:29.946 - 00:10:30.234, Speaker A: Right?
00:10:30.274 - 00:11:03.112, Speaker D: Oh, yeah. I mean, I think it basically works if you get every detail right, like the devil's in the details. But I think that's right. That that's the answer. It's optimism. Right? But I mean, Optimus, not the company, but the idea. But I think a lot of people, I kind of get the sense seeing attempts at this that like some of the attempts could really, really badly use someone who's good at thinking about this type of problem about it's sort of trading related, it's sort of risk.
00:11:03.112 - 00:11:57.030, Speaker D: It's very similar to risk parameters on derivatives. But thinking about things like how long do you have to wait? What can you do to minimize the effective time that the average transaction takes to go cross chain while still allowing full, you know, full bullshit calling ability if people want it? And like, how much insurance do people need to put up? How much do you need to punish people for lying? Like, what parameters do these need to be such that in practice, everyone's behavior is just going to be to cooperate, and that if they don't, then the defectors are not. It's not just that they're punished. They're. They compensate so much that if someone else defects, you're happy. Like, that's the ultimate goal, is to get to a point where if someone holds up your transaction, you're happy because they're going to owe you so much fucking money that, like, yeah, sure. All right, I'll take the week delay because I'm getting twice as back, much back at the end, you know, like.
00:11:57.030 - 00:12:07.994, Speaker D: And, like, really tuning that to, like, work is what gets you from, like, the kind of two week times that you're quoted down to, like, literally three blocks, and you're done 99.99% of the time.
00:12:08.534 - 00:12:13.494, Speaker C: Well, kind of what you need in order to do that is to get somebody to accept that risk. Right.
00:12:13.534 - 00:12:14.114, Speaker D: Yeah.
00:12:15.014 - 00:12:58.774, Speaker C: And usually this should be the validators or the people relaying headers across chains, but you can build out credit markets to do that for you as well. The real difficult part, though, I think, isn't going to be finding people to accept the risk. It's going to be establishing, well, a fraud proof is like proof that somebody lied. Right. And in order to know if they lied, we have to establish what the truth, what the facts are in the case. And, you know, unfortunately, establishing facts for some of these things is extremely expensive to do on chain. So the real question is whether we can get that, like, fraud proof evaluation, the evaluation of what actually happened and what's true down to a reasonable amount.
00:12:58.774 - 00:13:02.660, Speaker C: And then we had the fraud proof. So we only have to do that once in a while.
00:13:02.802 - 00:13:03.192, Speaker D: Yeah.
00:13:03.248 - 00:13:05.696, Speaker C: And make the amortized costs very low.
00:13:05.840 - 00:13:24.024, Speaker D: I think that's a real key. I think it's making it such that if you almost never need to get to the fraud proof level, it's there. It's all on chain. But you get so horribly punished for making it go to fraud proofs if you're wrong, that like, it just, like, you know, it basically never happens. Yeah.
00:13:24.064 - 00:13:45.542, Speaker A: So that is like. Yeah, that's kind of like that design philosophy is very true to me because you kind of start what is the fastest implementation, and I'm not going to compromise on that one thing and then build layers to make it good enough for everything else. That's basically how my brain works. Right. Like, so I can skip a lot of the.
00:13:45.638 - 00:14:11.484, Speaker D: I think it's doing even more than that. I think you're underselling it. Like, it's simultaneously saying, what is very close to the fastest implementation, but also holds up to the strongest level of trust if you really need it to. Like it's this thing where like in theory you're sort of not compromising if you structure it just right such that you never need, such that you almost never need to rely on that. And so it's so fast.
00:14:11.824 - 00:14:25.732, Speaker A: That's not always possible because like in the case of this insurance model, if the three Ethereum miners happen to also be the people that are putting up bonds in the insurance pool because they have all this extra ETH.
00:14:25.828 - 00:14:26.148, Speaker D: Yeah.
00:14:26.196 - 00:14:28.784, Speaker A: They can basically block all the fraud proofs.
00:14:29.404 - 00:14:48.184, Speaker D: Yeah. More generally, like whenever I think I've solved interoperability, someone says the word fork and I just like go crawl under a hole. Right. It's like, I mean, I just, I don't, I don't, I have no fucking clue how to handle a fork in it. Like provably secure on chain way. I don't even know what it means.
00:14:49.414 - 00:14:50.954, Speaker C: It's a real pain in the ass.
00:14:52.374 - 00:14:55.542, Speaker A: So the nice thing about the. Go ahead, sorry.
00:14:55.678 - 00:15:19.212, Speaker C: The limitation there is really you're trying to get information about this chain over there and you can't do that any faster than that chain finalizes itself. With bitcoin we can do that on the order of an hour and in Ethereum we can do that in tens of minutes, you know, but uh, yeah, you can't go faster than the chain you're trying to read. Yeah, ever.
00:15:19.268 - 00:15:29.988, Speaker A: So for the fraud proofs, I think you can go faster because if there is any block header that shows that these guys misbehaved, then the payout, then you get a payout.
00:15:30.116 - 00:15:32.864, Speaker D: Oh, what an orphan block though.
00:15:33.444 - 00:15:37.944, Speaker A: But it doesn't matter. Why, why did they sign this? Why did they sign this transfer.
00:15:40.024 - 00:15:40.336, Speaker D: That.
00:15:40.360 - 00:15:47.688, Speaker C: Applies to like specific kinds of proof of stake protocols. It will never work that way. For proof of work.
00:15:47.736 - 00:15:53.800, Speaker D: Yeah, sorry, sorry, I was thinking proof of work, I agree. For proof of stake you can sometimes do things like that. For proof of work. It's pretty tricky.
00:15:53.992 - 00:16:04.244, Speaker C: For proof of stake. What you want to do is make the economic cost of lying about it very large or convince one of these creditors to take that economic risk on for you.
00:16:04.984 - 00:16:18.900, Speaker D: Yeah, that sounds right. Actually that's a decent point. You get better treatment if you have proof of stake versus proof of stake. I guess introducing a proof of work, nasty. Obviously introducing bitcoin is a fucking nightmare because like no smart contracts.
00:16:18.932 - 00:16:23.860, Speaker C: But I really like bitcoin. But it does cause some problems.
00:16:24.012 - 00:16:28.664, Speaker D: Yeah. This is not a strong point. It has many strong points. This is not one of them.
00:16:30.364 - 00:17:07.054, Speaker C: So, working on TPTC, we have to look at the bitcoin chain, and we have to handle a lot of those issues. And we had to build in reorg handling for bitcoin. And unfortunately, because the smart contract needs to do something, eventually, we have to build in a specific, pretty much fixed time limit is we wait what we think is safe, and if bitcoin reorgs beyond that, things break a little bit. So setting that security parameter for any cross chain communication is very difficult.
00:17:07.994 - 00:17:10.654, Speaker A: What parameter did TBTC pick?
00:17:11.194 - 00:17:18.254, Speaker C: We picked accumulated difficulty. So the amount of proof of work put on top of a transaction.
00:17:19.274 - 00:18:03.704, Speaker A: Awesome. So that is like, actually, I think is my argument against the need for strong subjectivity and full evaluation of the bitcoin blockchain at all. Like, if I set up a new exchange and I'm receiving BTC, I can basically price that BTC against my local electricity and only transact when I feel like somebody's paying me a fair amount for that BTC. Right. Like, and then I'm kind of like, covered my ass. I at least know that there's, like, equal amount of risk on both sides. And that's probably good enough for, like, proof of work chains for like, for the foreseeable future.
00:18:04.804 - 00:18:13.384, Speaker C: Yeah. Is to check if the work that's been put on top of a transaction is 100 times more than the amount of value being sent.
00:18:17.404 - 00:18:57.294, Speaker A: Is that like, with proof of stake, though, like, do you think interoperability is going to be, like, the hard part for me? There is always thinking about from the perspective of the users of the remote network. I'm an ethereum holder, and I send my stuff to Solana. I don't really trust Solana. I don't trust soul validators. They're getting paid in soul. Like, if they take my ETH, I don't even want to care if they get slashed in solve. You, like, my money? And you said, well, I have this other money that I will destroy if I run away with your money.
00:18:57.294 - 00:19:03.254, Speaker A: Okay, good.
00:19:05.594 - 00:19:10.562, Speaker C: I have to believe that those costs are real. Yeah, yeah.
00:19:10.618 - 00:19:20.384, Speaker D: So, yeah, but I mean, that's, that sort of comes down to, like, there's no point in having interoperability with a chain if you, like, assign zero value to that chain.
00:19:22.684 - 00:19:27.544, Speaker C: Yeah. Yep. If you think it's worthless, why are you working with it?
00:19:30.044 - 00:20:13.684, Speaker A: Yeah, this is like, these are hard, hard questions, but there is no way to price this from like, a proof of work way perspective. Right? Like, there's no way to, like, you and I can make that decision. But, like, an algorithm that's running in a box and a blockchain cannot. Right. These are like, this is where this becomes difficult to. And I think in somewhat intractable problem. I think if you have insurance pools and they have USDC or something like that in them, then you kind of have some stronger guarantees about, like, what are the risks that you're taking?
00:20:16.304 - 00:20:17.084, Speaker C: Yeah.
00:20:21.984 - 00:20:50.180, Speaker A: Are you guys, I guess from your interoperability hat, like, how important is EVM compatibility? Or like, what do you, like you as an engineer, right. What is your take on it? Because I hear some engineers actually throw up a little bit when they hear.
00:20:50.332 - 00:21:02.904, Speaker D: Yeah, just briefly, because I see assassins in the chat. What is EVM? It's the Ethereum virtual machine. Basically. The question is, can you copy paste Ethereum code and does it just work on a new blockchain?
00:21:04.164 - 00:21:11.780, Speaker A: And can you as an engineer, honestly make that statement going from Ethereum to proof of stake network?
00:21:11.972 - 00:21:44.584, Speaker D: Yeah. So it's, first of all, I think, with some proof of stake networks, I think the answer is basically yes. I mean, I don't think it's like, literally yes, but I think practically speaking, there just do exist chains with which it is just not that hard to move Ethereum code over to it, like, anything. That's actually true of a number of chains. It's not trivial, but, but, but you just see, like, things get copied over those chains, like, way quicker than they go to non EVM chains. It is BSC, right? Like 24 hours after BSc launch, it had projects on it. That doesn't happen if you're not EVM compatible.
00:21:44.584 - 00:22:13.724, Speaker D: So it just, like, clearly is worth a lot right now and is practically a real thing. It's. I've become, like, less. I mean, I got, like, massively more, like, buzz, like, massively more important than I used to. I then started slowly downgrading do that, actually, for different reasons. I sort of thought, over time, decides a bigger and bigger barrier to not be EVM compatible. Just like a massive one is there to split the world into EVM compatible and non EVM compatible chains.
00:22:13.724 - 00:22:39.674, Speaker D: Why am I building on a non EVM compatible chain? I think that's so fucking important. And it's like, it's important on some scales. Like, for some things, it's crucial. Just think, that's not the big thing. Long term. Short term is just unbelievably important if your goal is to get yield farms quickly. It took Solana an extra two months to get yield farms because it's not EVM compatible.
00:22:39.674 - 00:23:23.382, Speaker D: But it's like, I think that's not where the EV is. I think the long term expected value, it's from the upside tails where things get huge. And when things get huge, like, it's just so much, massively bigger than all of defi put together right now that I think you, at one point, anatoly, like, pointed out that, like, everyone in. In crypto programs, in solidity, no one knows anything, but solidity is an exaggeration. But if you go to, like, zoom out, like, massively, more people program in rust than solidity in the world, and that, like, maybe that's actually pretty important. And that, like, so much more of the world is not defined than is defi right now.
00:23:23.558 - 00:23:26.286, Speaker A: That is a tiny community of engineers.
00:23:26.350 - 00:23:44.484, Speaker D: Yes. See, I think the big question is, like, how much are you focused on getting DeFi, existing DeFi projects in the next year, versus how much are you focused on either having new things built or getting things from outside of DeFi to get into DeFi, or just ignoring the next year and thinking about the next decade?
00:23:46.104 - 00:24:30.658, Speaker C: Well, I really agree with that. Is EVM compatibility is extremely important over the next two to five years, and I think it drops off pretty quickly after that. Ethereum has essentially three or four year head start on developer experience and tooling and just how easy it is to launch an app in the browser today. But that will not always be the case. Solidity is really kind of a mess, and the EVM itself is not a great programming environment. And so I think the value of compatibility drops over time. Today, you see, Celo is fully EVM compatible.
00:24:30.658 - 00:24:54.114, Speaker C: So is Tron BSc, like you mentioned earlier, ETH classic. But none of these really have, like, huge usage, and we worked significantly on the near EVM, which is seeing a few people using it, but really not very much yet. So I don't know that people have really seen much benefit from being EVM compatible so far.
00:24:54.894 - 00:24:55.674, Speaker D: Yeah.
00:25:04.274 - 00:25:55.614, Speaker A: Okay, good. My question, my, I guess, reasoning to that is that I think it's to do with, like, a lot of the points that Sam raised, is that the community is still quite small. Like, I think, like, Masari published that there's about 246 Ethereum developers, like, people coding in Ethereum. I think that number is probably a little bit larger. But if you look at GitHub, it's like, 900 engineers that have coded anything in solidity on the entire GitHub 900 accounts. Yeah, and I don't know how much bigger the real number is, but it's also not a small number. Right, like, 300 full time engineers is 60 million a year in Bert.
00:25:55.614 - 00:26:36.200, Speaker A: Right. So that is quite a large, that is quite a large organization engineering wise, but it's not a huge one. And that that is like both, like, enough of to run an ecosystem, but it's very hard to, like, split it. Right. You're not going to, like, create a new EVM compatible chain and all of a sudden have, like 200 of them going code on this because there's not, like, 200. Is 80% of the people currently working full time on Ethereum. This is too many of them to go do something else.
00:26:36.200 - 00:27:17.364, Speaker A: You need 5% of them to go try it. To me, that's in this weird, uncanny valley of there's enough people working on it that it's never going to die or probably not going to die for a while, but not enough to where, like, it can blossom outside of Ethereum. But I don't know if that's, like, a bad take, but I've seen this with, like, other programming languages. Like, Scala is a great example, like, julia, like, stuff that I have heard of, probably James has heard of, but I'm sure that Sam is like, these are, like, you know, languages that I would never care to even, like, bother.
00:27:17.904 - 00:27:18.684, Speaker D: Yep.
00:27:19.734 - 00:27:21.034, Speaker C: I like Scala.
00:27:23.894 - 00:28:06.234, Speaker A: Yeah. So I think this is like, a hard thing. Hard thing to plan for as a kind of like, running a startup, because building an EVM layer that doesn't join well with the rest of the system is really, like, takes a lot of mental, mental design mode. Like, how do we make sure that the stuff actually works? Well, because the goal for something. Yeah, the goal for us would be to take something like, aave run it inside Solana in an EVM layer that talks directly to serum without, like, the same amount of engineering work that it would have taken to just copy the logic into rust.
00:28:09.494 - 00:28:17.114, Speaker C: Cool. I would prefer writing rust. So if you can copy the logic, I would appreciate it.
00:28:20.094 - 00:28:50.204, Speaker D: Yeah, it's. I think there's also just this thing of, like, a lot of people learn standards based on the language they're using. And I think, like, one experience that, like, definitely I see is like, everyone thinks every chain tooling is garbage except for the chain they use the most, which I think has everything. And I think it's just like. Yeah. That you've figured out all the tricks on that chain. You know how to route around it's garbage, and so you feel comfortable with it.
00:28:50.364 - 00:28:52.864, Speaker C: Oh, I just think all the tool chains are garbage.
00:28:53.244 - 00:28:55.784, Speaker D: Yeah. You keep more perspective than many, then.
00:28:58.244 - 00:29:24.924, Speaker A: Engineers tend to know warts. I know there's a lot of warts, but those are like, like software kind of like, is scalable because engineers tend to not do the same thing four times. They'll do it like two, three times, but then they'll be like, fuck it. Just like, I'll solve it. Or like I'll yell at Anatoly to solve it. Right?
00:29:26.144 - 00:29:44.556, Speaker D: Yeah, yeah, yep. Tooling is so fucking important. It's. And also non dev tooling, even for. Even for coding. It's so important to have an explorer that works well so you can like sanity check things and like, you know, it's. That.
00:29:44.556 - 00:29:55.184, Speaker D: That's one thing. I think the one tool on Ethereum that I think is just fantastic is ether scan, and it's not. It doesn't do anything like that. Amazing. It just like, does all the things you need it to do, you know?
00:29:55.784 - 00:30:13.044, Speaker C: Yep. Even as you get more into engineering, etherscan does everything you might want. It does decompiling contracts. It has a debugger in the browser so you can step through the EVM opcode by opcode.
00:30:13.984 - 00:30:40.274, Speaker A: Yeah, that stuff is coming. That is actually on our roadmap. I think some of the coolest things is being able to go back in time and just click on a transaction and replay it and then modify the code and see actually start. Hey, if there's a bug, how do I fix it and start doing fast introspection and development? I think that's pretty critical.
00:30:42.014 - 00:30:51.680, Speaker C: Yeah, definitely. It's incredible how many features Etherscan has. Just like two clicks off of the transaction page.
00:30:51.822 - 00:31:11.264, Speaker D: Yeah, yeah, it is. It's sort of magical. I don't know, I think I've come to believe everything is trivial about it and then I'm like, wait, how did they do that for arbitrary transactions? But he's not just that knows how to parse, like simple sending of VRC 20 tokens. It works for things that aren't that too.
00:31:11.644 - 00:31:17.824, Speaker C: Yeah, it reports uniswap trades now in the transaction. Yeah, it's great.
00:31:18.514 - 00:31:25.002, Speaker D: It is just. Yeah, it labels, addresses. Well, it actually does a pretty good job of it, all things considered.
00:31:25.138 - 00:31:41.374, Speaker C: Yeah. So when I say that Ethereum is like three to four years ahead of every other chain in the tooling, I don't just mean like compiling and deploying a contract and interacting with it. It's all of this community periphery stuff that just takes a long time to build up and get. Right.
00:31:42.154 - 00:31:58.156, Speaker D: Yeah. I will say that I think you can supercharge it not in a week, but I think in like six months you can supercharge a few years of work if you really do it right. Although six months feels like infinitely long to me. But I mean, well, the, uh, the.
00:31:58.180 - 00:32:06.264, Speaker C: Downside of being first is that you spend a bunch of time, effort and money figuring out what you're supposed to do, and everyone who comes after you gets the advantage of that.
00:32:06.964 - 00:32:07.532, Speaker D: Yep.
00:32:07.628 - 00:32:36.124, Speaker A: But like, um, what's sad to me is that, like, had Ethereum used like a standard language, any language, that tooling already exists. And they could have like, been basically five years ahead, five years ago. Debuggers, like visual code can do all this stuff. There's playgrounds and rupples and introspection and all of this stuff exists. And like.
00:32:37.884 - 00:32:51.588, Speaker D: There'S something I often wonder. It's sort of a meta point. This is an example of, like, so many things. We're like, geez, they fucked up. I would have done it so much better. And sometimes they do go and build it better later. But of course later is so much easier and more than just being easier.
00:32:51.588 - 00:33:25.266, Speaker D: Like, I feel like you've built it better from the beginning, but it's worth so much less to build it better from the end than the beginning. And I feel like I'm also just like often not at the beginning and wonder where it's just like, almost no one's at the beginning. You have to get really lucky or whether there's just this thing of like, you know, I like there's just people who are really fucking good at seeing high level what's needed years before other people and building it. And maybe they don't happen to be the best builders of things because that's not what they're selected for, or whether it's all luck. I don't. I don't know.
00:33:25.450 - 00:34:15.774, Speaker C: Well, it's kind of funny because bitcoin and ethereum both suffer from kind of weird, this weird thing where the people who were building it were really good at seeing the big picture of what needed to be built and had no idea what already existed. So Satoshi and the early Ethereum foundation both re implemented a bunch of stupid things that they should have just reused other people's code for. And they did it in kind of bad ways that have caused problems in a lot of cases. One of my perennial frustrations with Ethereum is that every piece of the stack includes something custom that should have been off the shelf. The transaction serialization is custom. It should have been off the shelf. The merkle trees are custom, and they should have been off the shelf.
00:34:15.774 - 00:34:36.794, Speaker C: And the EVM is custom, and it should have been just off the shelf. There was so much useful, well maintained code out there that they tossed away to make a less useful, less well maintained version. And Ethereum ETH two isn't doing much better in that regard.
00:34:40.974 - 00:34:59.324, Speaker A: But I think, in their defense, I think it's often, unless you're an expert in that other code, it's really hard to adapt it to your vision with the kind of security guarantees that you need to build something like Ethereum. Right. Like.
00:35:01.984 - 00:35:39.464, Speaker C: I kind of agree with that for like the VM layer. I see why you would rebuild a new VM for this. But when it comes to serialization formats, there's a million of those and they're easy to use. Why are you going to write your own recursive length prefixing that nobody else has ever used or thinks is a good idea, and then five years later you're going to redo that entire thing and make it called SSZ and it's completely different and everybody has to rewrite everything again. Sorry, I get frustrated about this.
00:35:39.504 - 00:35:44.604, Speaker D: No, no, I'm glad you get frustrated. I'm fucking pissed that other people aren't fucking pissed.
00:35:45.664 - 00:35:52.356, Speaker C: This is just like engineering problems getting into the, like, under the hood of Ethereum. Right?
00:35:52.540 - 00:35:56.340, Speaker D: Yeah, I agree. Yeah.
00:35:56.532 - 00:36:02.076, Speaker A: I kind of like get, get away from shitting in Ethereum because I.
00:36:02.180 - 00:36:04.064, Speaker D: Why would you like to get away from that?
00:36:05.124 - 00:36:20.072, Speaker A: I think that like, it's like transformational, right. Regardless of the mistakes, getting it done and getting it out was the most important part. Part. And they got that right, right. Like that. That's really hard to, like. You can do that and screw everything else.
00:36:20.248 - 00:36:21.004, Speaker D: Yep.
00:36:23.984 - 00:38:01.274, Speaker A: I like, I think that like some of the interesting tech that is coming out from forcing their bad choices by for, because of the bad choices they made are like things like roll ups and actually in, in regards to inner chain compatibility because like, as soon as I saw this like kind of roll up design, like what I, what I saw was a piece to logically tie the multisig that is this remote chain right from my perspective, to follow some set of rules of how it's moving my funds around in the southern chunk of consensus. Like I can actually, like, if I have a roll up that is guaranteeing transfers, the trustlessness, I think, goes up. Imagine there's a roll up running, there's an EVM running in Solana, and there's this uniswap implementation running in Solana, and people move into this thing and treat it like a roll up. What's cool about this is that state is settled at Solana, you could trade against that state immediately on serum, like in the same state machine. But from Ethereum's perspective, it's just looking at the logic of this roll up and now we're synchronized to these giant state machines without incurring those kinds of icky security, that security boundary where here validators. I hope the lite client proved that Ron doesn't screw me.
00:38:05.094 - 00:38:13.354, Speaker C: There are ways to use roll ups to do these complex cross chain things, but I think we're still a long way out from them being practical.
00:38:14.694 - 00:39:09.234, Speaker D: I sort of think that maybe there's a difference in vision for them, that there's sort of a question of what's the goal of a roll up? I don't know if it's right or wrong. It's not what I would choose. Like, the sense that I'm getting is that the way roll ups, sort of roll ups and l two s and a lot of other things are sort of interchangeably being envisioned right now is as a way to speed up a particular ethap, which is just like not a very ambitious goal for it. Like, it's like, you know, it's like even composability amongst multiple dapps on the same or different roll ups or whatever seems to be not much of a priority. Seems like kind of a lane. Like, it just. You ended up back in CFI, you know?
00:39:10.414 - 00:40:00.904, Speaker C: Yeah, it's in kind of an interesting spot. The only roll ups that have launched are a few ZK roll ups, essentially, and validium. There's a lot going on, but any roll up with arbitrary contracts, it's still a few months off at least. The thing I really like about rollups is that they let you play with different state and execution models. The fuel rollup is Utxo based, which lets you parallelize a lot of stuff. And you actually can process transactions faster that way because you don't have to do them all in a row. But I think one of the interesting things about Solana and a few other chains is that they let you play with the execution model a little more natively.
00:40:00.904 - 00:40:11.584, Speaker C: The idea of having an EVM and a BPF execution environments inhabiting the same machine in Solana, for example.
00:40:14.064 - 00:40:50.304, Speaker D: Yep. So it gets back to a thing that I like. I do search is still pretty strongly, like, the best l two is a good l one that, like, yeah, you just get so much more juice out of your l two if you can have things composed within it, like, and like some sort of security there, and pretty soon you're like, yeah, that's what a blockchain is, and interchangeably think about, like, is it l two? Is it its own l one? I don't know. Sort of a semantic difference and a difference in importance or something like that. But. But that also doesn't seem to be the primary vision right now for them. Instead, they seem to be, like, two year holding locks until ETH two hopefully saves it.
00:40:51.644 - 00:40:56.624, Speaker C: Well, ETH two recently moved to the roll up centric roadmap. Right?
00:40:56.964 - 00:40:57.604, Speaker D: Yeah. Okay.
00:40:57.644 - 00:42:02.902, Speaker A: That's changing roadmaps is what really accelerates development, I think. Like, I think the l one l two thing is frustrating to me because it seems like, in my mind, the best kind of bridge is almost an l two implementation. To your point that the best l two is an l one. I think the irony there is that the best bridge between two l one s is an l two secured bridge where you have native insurance on both sides, making sure that, you know, if somebody screws up, that those local actors get punished right to the hill. And that is effectively what every l two layer thing that you can imagine is, like, they get punished in local ETH, not in remote magic coins that they don't trust. Right. So that is, like, the irony there is that, like, if we build, like, you know, when wormhole rolls out and all the additional kind of features that we want rolled out, it will be, like, as good of an l two as anything else.
00:42:02.902 - 00:42:06.314, Speaker A: Like, without the same security, like, guarantees.
00:42:09.774 - 00:42:46.968, Speaker D: Yeah. One thing I'll say, just to echo something that, like, Randy mentioned in the chat, I mean, she said what your guys thoughts are. I've, like, noticed some shifts in my thinking about things over the last few months. And, like, one of them also, I think maybe this is, like, something other people kind of realized years ago. I don't know, whatever is that, like, there's. Interoperability is really cool and valuable, but it's not the. Like, I think it's not the most important thing.
00:42:46.968 - 00:43:11.474, Speaker D: Like, I think the most important thing is building something worth interoperating with. And, like, building something valuable, something. Something good, something with potential, something better. That's the most important thing. Something people want to use. And once you have it, then I think there's sort of, like, this multiplier on it of interoperability. But I think that, like.
00:43:11.474 - 00:43:57.074, Speaker D: And you can sort of see this if you look at the differences between, like, first drafts of the serum white paper versus, like, the projects rolling out right now. Like, there's some differences there. And I think this reflects a lot of that, which is that, like, I think the first drafts are sort of a little bit narrow minded in some senses in that they're like, yeah, sort of like focusing on building, like, a single thing that was, like, slightly useful and then building a ton of interoperability into it. And she's like, it's going to be so much work to get this, like, prize that isn't worth that much. Like, like, build. Build the great thing and then figure out, like, and have, have you try really hard to get people to use it if it's great. But the first step is sort of the most important one.
00:43:57.694 - 00:44:02.674, Speaker C: Yeah, well, don't bother building bridges to places no one wants to go.
00:44:05.974 - 00:44:33.166, Speaker D: Yeah, yeah, no, I agree. I think it's also like, I kind of think that defi summer fucked up a lot of incentives here, too. I mean, sir, it's, I think just one thing which every time I meditate on, it just, like, shocks me again. I've thought about a hundred times. It's shocking. The hundred first time is, like, if your goal is to make, like, $20 million in three months, right. First of all, just, like, take a step back.
00:44:33.166 - 00:44:58.680, Speaker D: That's a fuck ton of money. Like, like, it's actually a lot of money. There's a lot of money on big scales. Not just, like, a lot for a person. That's, like, more than most giant, successful crypto businesses make. Like, whole businesses make, if that's their goal, $20 million in three months this year. Like, fuck all this shit, right? Like, it's just like, you issue an ERC 20 token in May and you have something.
00:44:58.680 - 00:45:53.314, Speaker D: You have a Twitter handle, got some graphics, you've got, like, some reason that people temporarily want to own some of it. Even if you get more of it, you're, like, halfway there. Like, it's, I mean, not literally just that, but it's not that different from literally just that. And just like, so many things about how I think, like, people have been thinking about Defi over the last. Over the last few months have been warped in subtle ways and sometimes in obvious ways by that, but sometimes in subtle ways, like, just prioritizing things that because they're, like, because they help you literally launch an ERC 20 token. And there's so much, you know, there's so much value in that as compared to building an amazing product. And I think that, like, it probably will take, like, a good year for the world to unlearn some of those lessons.
00:45:53.694 - 00:46:04.994, Speaker C: Well, you know, I was around for 2017 and I was around for 2014, and, you know, this, this is sounding pretty familiar. To me.
00:46:06.474 - 00:46:07.294, Speaker D: Yep.
00:46:08.194 - 00:46:27.454, Speaker A: I think, like, every boom, like, I mean, this goes back, like, in the nineties, dude, people were launching every kind of thing on the Internet that made no sense. That only made sense if you imagined a world where everybody had a computer in their hand, which was like, took 20 years to build. Like, so.
00:46:29.714 - 00:47:03.302, Speaker D: Yeah, and it's like, I agree, but I think there's a subtle thing where, like, a lot of people have the wrong reaction to that, right? Like. Like, yes, most of those businesses were gonna be worthless, and many of them were obviously worthless in retrospect. Like, what the fuck is that? But the problem is that, like, people's reaction was like, the Internet's a scam. Like, not quite that, but like, you know, apps on the Internet are a scam. Like, that was a silly idea. Obviously, the.com bubble was silly.
00:47:03.302 - 00:47:50.352, Speaker D: And in fact, if you just blindly bought everything in the.com bubble, you'd be a billionaire now, right? The amount you made from Amazon and Google and Microsoft and Apple just would have dwarfed the amount you lost from pets.com or whatever. And so the answer wasn't that Internet apps are stupid, it's that a lot of the Internet apps were stupid and people hadn't quite thought well or hard or have enough context to know what to build or to be able to figure out which of the things people were building were going to have value. And maybe some of. Was it just random? But probably some of it wasnt random, but people then just went to dismiss the whole thing. I feel like theres a little bit of that in Defi or risk of that, that the war becomes like, vegetables are good or defi is bad, and thats one version.
00:47:50.352 - 00:47:58.974, Speaker D: But I think maybe the war even becomes like, current ETH dapps are the best thing in the world versus defi is bad. And do you think both of those are false?
00:48:00.194 - 00:48:28.420, Speaker C: Yeah, I think it is unlikely to be a binary. Defi is the best or worst thing in the world. And like the.com bubble, enough of the current people working in this industry are going to get extremely wealthy that the industry will be around long term regardless of what happens to this particular bubble. I think we've already kind of hit that point for better or worse.
00:48:28.572 - 00:48:56.662, Speaker D: I agree. I also think the world is weirdly contingent, like, more so than people think. I agree. At this point, we've reached a stabilization point of, like, I'd be shocked if crypto were like, basically gone in five years, but like, there's sort of this turning point. Like, crypto might be in a very different place if the ICO boom had lasted two more months. I think it's, like, an interesting thing. I don't think it's fated that it ended when it did.
00:48:56.662 - 00:49:16.120, Speaker D: It was going to crash at some point. I don't know. It's going to be, like, November or May 2018, November 2017. Anywhere in that range could have happened. And the reason I think this is incredibly important and bad for crypto, by the way, incredibly bad how it went. And I don't know if it's unlucky. I mean, maybe it's very lucky they even got to that point.
00:49:16.120 - 00:49:59.426, Speaker D: But in, like, January 2018, like, every major business in the world was having board meetings about, like, are we going to do the crypto thing? Like, there? None of them did it. Almost none went in. But they're all talking about it like, like, Goldman Sachs was talking about it. Like, all the quant shops in the world were frantically trying to talk to their compliance departments about whether they could frantically try and spin up a crypto desk or not. Like, every investor either. What was, like, had heard so many of their annoying friends talk about investing in bitcoin that they were thinking maybe theyd do it. And it was, like, really close to getting institutionalized.
00:49:59.426 - 00:50:20.942, Speaker D: Like, I think, like, three months away from getting substantial institutional lock in. And then icos crashed in, like, February ish, January, February 2018. And almost none of the institutions were in. Almost all of them were still in the board meeting phase. And that kills the board meetings. Right? Like, you get to the next board meeting, like, okay, lets just, like, thats sort of embarrassing. Like, lets not talk about the last board meeting.
00:50:20.942 - 00:50:28.074, Speaker D: Lets pretend that one didnt happen. And I think that set institutional adoption of crypto back by, like, five years or something.
00:50:32.514 - 00:50:57.054, Speaker A: I mean, like, personally, thank God, because, like, I think having, like, a bunch of more enterprise noise in the space would have, like, I think probably, yeah, yeah. Set the development back by five years as well. But that is, like, I think, like, I don't know why we got to this topic away from interoperability.
00:50:57.874 - 00:50:58.654, Speaker D: Yeah.
00:50:59.364 - 00:52:05.334, Speaker A: But I think some of the challenges in interoper are those that are kind of crossing fintech because I don't really see the technology that much different being interoperable with Ethereum versus Solana and an established banking system in Solana, that if we want to actually trust the remote chain and trust the remote state, I think the most boring way to do it is to trust a single key pair. But, like, doing all of this kind of, of, like, more interesting things is what, like, I think can, like, be way more ambitious, right? Like, imagine, like, instead of, like, you know, bank of America or whatever, having a key that signs stuff. They actually ran fucking Ethereum and an EVM and we could talk to them and, like, write contracts and interrupt that. That, to me, is like a far, far more ambitious kind of, like fuchsia, but still feels, like, very far away. I'm guessing Sam is tweeting.
00:52:05.714 - 00:52:36.530, Speaker D: No, directly, I don't know, shitposting in the chat here about sushiswap. And I think this is another case. I think, like, just like, one bad judgment call by Nomi had, like, incredibly large ramifications for defi. Like, you know, it's sort of like, like, in a way that that, like, it. It's gonna take a while for. For those ramifications, if ever to, like, fully be diluted out from the system. And, and, yeah, I mean, literally, it's weird.
00:52:36.530 - 00:52:54.814, Speaker D: Like, I don't know, like, one guy I don't fucking know is gone. Like, maybe just, like, you know, got stoned or something and, like, had a really bad day. Like, you know, made it a bad decision and, like, yeah, okay, there go, like, you know, I don't know, a few hundred billion dollars of mark to market wealth, you know?
00:52:55.754 - 00:52:57.818, Speaker C: Yeah. Don't mark your wealth to market.
00:52:57.946 - 00:53:31.884, Speaker D: No, you don't. But, but you sort of do, right? Like, obviously you don't really do it like bitcoin at this point. Like, you market to market, right? Like, and, but ETH you mark to market like, any of the top ten, but, but, like, that list can grow. And, like, I agree, you don't mark a brand new coin to market, but it sort of happens over time. That's also sort of an interesting thing to watch. It's been very interesting to watch the evolution of FTT over the last year and a half from speculative. Who the fuck knows what this is to one of the more trusted coins.
00:53:31.884 - 00:54:12.074, Speaker D: It's not the most heavily traded, it's not the most hyped, but it's like, you know, a lot of the industry now just sort of, like, marks it to market. Like I do. I mean, I think at this point it's like, you know, that's sort of the right thing to do. Right? There's, like, such a big difference between now and year and a half ago. And of course it makes sense, right? Obviously, like, FTX is, like, gone from, like, who the fuck knows what it is? Like, but it's been sort of, like, really interesting to watch that up close. And I have a feeling that chainlink feels pretty similarly if you add an order of magnitude on. And that's.
00:54:12.074 - 00:54:34.504, Speaker D: It's a powerful effect when the world sort of comes to decide that something has exited the highly speculative phase and entered the. This is, like, whatever. Like, basically think it's right, you know, phase.
00:54:38.764 - 00:54:43.424, Speaker A: Yeah, but how long does that take?
00:54:44.924 - 00:54:58.444, Speaker D: It depends on what you do. But, like, I mean, I think, like, you're. I think, like, year is the right unit. Like, I think you're talking, like, six months to ten years, but, like, a few years. I don't know. Right. Like, you look at coins, right? Like, list the coins that you trust.
00:54:58.444 - 00:55:20.154, Speaker D: The coins where someone said, like, I'm gonna give you $5 million. This coin. Coin. And just like, all right, cool. I just got $5 million. Right? For how many coins would you feel like that? And, you know, I think the answer is, like, you know, a lot of the coins have been around for at least two to three years and are still around and, like, didn't just crash and burn.
00:55:24.574 - 00:55:26.834, Speaker A: Austin, is it.
00:55:27.424 - 00:55:28.524, Speaker D: This is the.
00:55:30.624 - 00:55:55.464, Speaker B: Hour warning. That is me. Yeah, I was just jumping in. There have been a few good questions in the chat. It looks like James is covering some of them. Looking through the questions tab, it seems like you all covered most of that. I don't know if either of you all or any of you have anything about.
00:55:55.464 - 00:55:58.304, Speaker B: That was me over Ledger.
00:55:59.724 - 00:56:02.476, Speaker A: I don't know. Do you know anything about overledger, James?
00:56:02.540 - 00:56:04.984, Speaker C: I don't know anything about Overledger.
00:56:05.364 - 00:56:05.796, Speaker D: Nope.
00:56:05.820 - 00:56:06.628, Speaker B: There you go.
00:56:06.796 - 00:56:07.212, Speaker D: Cool.
00:56:07.268 - 00:56:07.796, Speaker A: Easy enough.
00:56:07.860 - 00:56:08.584, Speaker B: That was.
00:56:09.164 - 00:56:29.684, Speaker A: What's your take on Polkadot and the difference between, like, different vms and shared security, but. Or same, you know, running in different states? Right, like, state sharding, but same security via virtual machines versus no state sharding. A bunch of ems all gloved together.
00:56:30.504 - 00:56:53.354, Speaker D: That. That question is not pulling any punches. That's not like a. Do you think that all of its hype is merited, or do you think that. Yeah, I don't. It's. I mean, it's done quite well in some ways.
00:56:53.354 - 00:57:10.734, Speaker D: It's, you know, the coins done quite well. Be interesting to see what happens to the ecosystem. They're trying like this. It's not a ghost chain, and it's not like a pump and dump, and it's not like they're really trying to build out that ecosystem. I'm not.
00:57:12.794 - 00:57:38.014, Speaker C: From a technical perspective, it tries a slightly different trade off than anything else. You have cosmos, which is heterogeneous, chains with different security models. You have ETH two, which is homogenous chains with the same security model, and you have Polkadot, which is heterogeneous chains with the same security model. So it's actually, like, exploring a different part of the trade off space than anything else out there.
00:57:39.124 - 00:57:39.904, Speaker D: Yeah.
00:57:40.684 - 00:57:59.304, Speaker A: That, to me, is worthwhile. Like, I mean, like, why not, right? Like, that? I don't know. Right. That, I think, is, like, you could have swapped Gavin for any tech stack and probably would have been pretty, pretty good.
00:58:00.644 - 00:58:16.684, Speaker C: Yeah, well, you know, people in old timers in crypto have a saying that you don't bet against Dan Larimer either. So I think there are a few people here who are gonna do well on any project. They start at this point.
00:58:17.424 - 00:58:22.164, Speaker D: Yeah. Cool.
00:58:22.824 - 00:58:26.004, Speaker A: Did you guys have a second choice for serum?
00:58:26.544 - 00:58:31.484, Speaker D: Yeah. Oh, boy. Oh, boy. Do you know the answer to that?
00:58:31.864 - 00:58:32.884, Speaker A: I don't.
00:58:34.664 - 00:58:52.964, Speaker D: Okay. I mean, Ethereum would be sort of the pc thing to say here. Just like, maybe the right answer. Like, there's sort of a decision point. We almost went down the Ethereum path. Like, it would not have been a very different project. Like, it would have been like, get something out in two weeks that has a token type project.
00:58:52.964 - 00:59:44.854, Speaker D: Everything ambitious we tried on Ethereum was not going to work. I mean, it's like, spent three days working on it. You can't probably, like, hey, this is, like, we're just orders of magnitude away here. Like, but, yeah, when we almost went down that path like that, that was our plan. We were going to build on Ethereum and sort of, like, just were thwarted repeatedly by the throughput. So after that point, when we, like, really started deeply exploring other chains, I, you know, I think that we talked to Solana before we talked to some of the best competitors to it, which just means that, like, they didn't get a chance to be, you know, I sort of like. But.
00:59:44.854 - 01:00:23.864, Speaker D: And there's others which I just think, like, they weren't launched at the time. Like, I'm be honest, like, you know, I think, like, it would have been interesting to see, like, what the conversations with Nir and avalanche and a few others would have been if they were live three months earlier than they were. You know, I think that, like, I'm pretty, pretty happy with the vision of Solana. I think basically nothing else shares it, but, like, it also, like, made the decision easier that, like, a lot of the most hyped things were just, like, almost live, and that was not live enough. But I.
01:00:24.684 - 01:00:27.104, Speaker A: That 60 days is a big difference.
01:00:27.844 - 01:00:46.324, Speaker D: I'm gonna be honest. There's one project I talked to, I think it's like, the most unambiguously correct advice I've given is, like, early June. And, like, they gave me the roadmap. It's like nine months to mainnet. And she's like, look, I agree with a lot of what you're doing. That's a mistake. I don't care what's going on.
01:00:46.324 - 01:01:11.824, Speaker D: That can't be the right answer. Like, June 2020. The answer is not nine months to mainnet. I don't think it's a crazy plan, but is a conservative one. They could have done in a month if they'd killed themselves for it and cut corners. And I think the answer is, you do what you can, you put up warrant. I think that's not the time to have nine month roadmaps.
01:01:11.824 - 01:01:19.194, Speaker D: It's sometimes you see an opportunity, and that opportunity is just not going to be there forever.
01:01:22.974 - 01:01:42.084, Speaker A: I, as an engineer, learn that you can't really have a roadmap that's more than six to eight weeks out. It basically goes into a known number of options and territory. It's intractable. Might. Might as well, like, have me, like, pick bitcoin prices. Like, just.
01:01:44.864 - 01:02:09.874, Speaker D: Yeah, you've had similar experiences and it's really important to have them in the back of your mind. Right. Something which is like, we'll work on this in three months, is like, three months is not a meaningful time. It's like, this would be good to have, but it's not currently something that's on our roadmap. But, like, we want to keep this in mind. At some point we might decide that it's time to do it, and we have no idea when that is. That's what that really means, you know? Yeah, yeah.
01:02:11.134 - 01:02:11.606, Speaker A: What a.
01:02:11.630 - 01:02:13.314, Speaker B: What a politically correct answer.
01:02:14.654 - 01:02:46.944, Speaker D: Yeah. So we actually did explore other l one s, and we're going to think about building on some. We especially looked at a lot of the EVM compatible ones and. Which were 100 times faster. And, you know, I think that that would have been an interesting path to go down, I think. I, like, there's, like, the problem with it, just like it was sort of this shitty middle was a big problem. It's like neither the thing that everyone would know how to use, nor was it, like, the thing that had the most potential.
01:02:46.944 - 01:03:07.640, Speaker D: And so I think that was, like, the reason that we didn't. In the end, it's just like the, like, the story didn't seem so super coherent for it being the right, the best choice, but. But I think it's like an underrated choice. And I mean, right, okay. Someone saying, just say eos already. I'm like, I'm not saying necessarily eos. Like, that's a class of things, right? Like, you know, like.
01:03:07.640 - 01:03:10.804, Speaker D: Like things like that, right? Like, oh, I would have.
01:03:11.464 - 01:03:12.244, Speaker A: Yeah.
01:03:12.784 - 01:04:27.074, Speaker D: I mean, you say that, but, like, it's like, it's that or you can't build it, right? Like, but before we talk to you guys, it's like, do we want an order book or do we not want an order book? You know, because we're not going to get the order book on Ethereum. Like, the fuck else are we going to do? Like, you know, there actually aren't that many, like, non ghost chains that, like, were live four months ago and could handle an order, right? Like, I. Tron Ethereum BSC was not live. There is finance chain. Um, there's like, you know, it was sort of like this, this list of, like, heavily shit upon chains that were actually cutting edge tech two years ago and until, like, six months ago were, like, plausibly the best tech in terms of throughput. Like, obviously, there's a lot of other considerations here, which I'm sweeping under the rug, but the question what about ETH? Is not allowing an order book not enough throughput? Here's, like, some context. Like, the, right now, the serum dexs, how many are, like, are they live? So it's a order book as an on chain order book and matching engine.
01:04:27.074 - 01:04:40.034, Speaker D: And they're using something like 400 GPS right now, and that's like 40 times the entire Ethereum network. So it's like, yeah, if the chain has less than 1000 GPS just can't do order books.
01:04:45.954 - 01:05:20.454, Speaker A: Proof of work. Just cannot work with, like, low latency block times. It's just possible, right? So that trade off is like, the trade off we're making is this, like, subject weak subjectivity trade off. Everything is weekly subjective, right? Like, you kind of, like, connect to the network and do a side channel to verify that this is Solana. You can't do that. You can't, like, take that and, like, you know, you can't make the trade that without making that trade off. You can't build a fast blockchain at the end of the day.
01:05:20.454 - 01:05:38.334, Speaker A: And that is, I think, like, a hard thing for, like, the OG crypto community to swallow. I think at the end of the day, this is like the split between bitcoin, Maxis, and ethereum axis, I think, goes to this and ETH, Maxis, and everyone else. Yeah.
