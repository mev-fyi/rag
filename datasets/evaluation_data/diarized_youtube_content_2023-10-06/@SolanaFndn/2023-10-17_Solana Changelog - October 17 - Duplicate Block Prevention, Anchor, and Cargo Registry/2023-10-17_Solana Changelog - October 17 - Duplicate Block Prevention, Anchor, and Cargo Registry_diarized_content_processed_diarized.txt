00:00:03.680 - 00:00:10.518, Speaker A: Hello, everyone. GMGM. Welcome to the changelog. I'm Nick from the Solana foundation dev rel team. And today we've got Jacob here with me. How you doing, Jacob?
00:00:10.646 - 00:00:11.910, Speaker B: I'm doing well. How are you doing?
00:00:12.022 - 00:00:15.982, Speaker A: I'm doing well. I'm doing well. Let's, let's dive into the changelog. What's on the docket for today?
00:00:16.158 - 00:01:01.714, Speaker B: Yes, so first thing on the docket today is using turbine for duplicate block prevention. This is actually 70 71. This just came in. And what this is doing is it's kind of using turbine as a way to prevent duplicate blocks, along with like Merkel shreds, what they kind of do. And you can read the full description of what the SIMD designs or puts out as a design is they take five forks, they store them on the validators, and they use this to basically duke out and figure out which is the right fork. That is correct. This is to help prevent a, say a validator produces two blocks and tries to fork off the network in two different directions.
00:01:01.714 - 00:01:30.812, Speaker B: This is to help prevent that and make sure that we don't have these issues with duplicate blocks in the future. But yeah, if you are interested in learning more about the SIMD, definitely check out the duplicate block prevention SIMD on the Solana improvement documents repository. The link will be in the description. Next up, we have our commitment highlight, which is cargo registry service for deploying programs, which is really, really cool. Nick, you want to talk about a little bit?
00:01:30.948 - 00:02:07.334, Speaker A: Yeah, this one's super cool. It's part of a lot of the efforts going on with runtime v two. And basically the gist of this is it allows the Solana blockchain to effectively act like a rust crate registry, just like crates IO does. If you're a rust developer and you're used to that experience. So you'll be able to use your local test validator and eventually Devnet, Mainnet, so on and so forth to actually publish your programs just using your normal cargo publish CLI commands. There's some configuration that you have to set up within your cargo toml and some of your other configuration you have to do. But yeah, this is super cool.
00:02:07.334 - 00:02:15.598, Speaker A: This is just another type of thing that's going into the boost and developer experience that we're soon going to experience on Solana. It's going to be cool.
00:02:15.766 - 00:02:42.846, Speaker B: Yeah. From the looks of it, you're actually using your key pair as your authority for publishing your packages, your crates, onto Solana, which is really cool. Like to create like a package manager almost on Solana for programs. So you actually log in to your registry, which would be basically your RPC with your key pair, and then you can just use cargo publish to publish the crates. That's really, really cool to have.
00:02:42.870 - 00:02:43.914, Speaker A: Yeah, super cool.
00:02:44.294 - 00:03:08.118, Speaker B: The other commit that I see this week is there's actually a rust upgrade. So we finally got upgraded to 173.0, which I believe is the latest version as of the fifth of this month. So that's the 5 October. So this brings up a whole lot of new changes. Previously I think we were at 1.64, which is really old.
00:03:08.118 - 00:03:24.334, Speaker B: And if you remember, or if you've run into these issues where you run into dependency issues or rust. Hey, you have rust version here on your local, but actually it should be this version. This should help solve this or at least get us up to date for the future.
00:03:24.674 - 00:03:26.874, Speaker A: Paying down a little bit of tech debt. Always good.
00:03:27.034 - 00:03:41.746, Speaker B: Yes, definitely. So look forward to this being released. It should be, I believe, in the 1.7. Yeah, it's in the 1.7 release, which already has been 1.171.17. Thank you. It will be in the 1.17
00:03:41.746 - 00:04:14.248, Speaker B: release which has already been tagged. You can use it and download the CLI and you'll come with Rust. One dot, seven, three dot, zero dot. Next up we have a couple of resources and a couple highlights that we want to give out. So Acheron has recently helped push out anchor programs, getting a lot more efficient. So what that means is actually the binary size itself dropped dramatically, roughly about 33%. This is because instead of cloning each account, they're now using references.
00:04:14.248 - 00:04:44.260, Speaker B: So your program binary, which is now 33% smaller compared to last release in anchor, this actually something was brought up is like, hey, does this affect how compute units are used? And actually yes, but it also goes down. So both compute unit usage as well as the program binary size is smaller, so you can deploy with using less soul and you can make your transactions do more with the new version of Anchor that's coming out.
00:04:44.442 - 00:04:55.680, Speaker A: Yeah, it's super cool like this. These types of things are some of the things like my favorite things to see as a developer in ecosystem, like cost reductions, speed improvements are always great. I love them.
00:04:55.832 - 00:05:11.684, Speaker B: Yeah, we're continuing to improve the developer experience bit by bit. And while it seems when you're going through each part very small changes, this one's actually a big change overall. It's actually a very large improvement.
00:05:12.304 - 00:05:50.162, Speaker A: Yeah, I mean, speaking of big improvements and big changes, web3 js like this perfect segue here. Solandy actually just released a video of one of the first videos that I've actually seen about anyone using the new version of web3 j's. Currently it's the experimental branch, soon to be released candidate ready? Shout out to Steven Lusher and his breakpoint talk. Breakpoint coming up. And yeah, if you're interested in how the new web3 js kind of works, and it's a big shift, there's going to be a lot of changes that happen with it, but it's so much better, more efficient, smaller bundle sizes, the works. It's going to be really great once adoption happens for it.
00:05:50.298 - 00:05:57.354, Speaker B: Yeah, I think the bundle size is something a 10th of the size of the previous web3 js, which is.
00:05:57.514 - 00:06:02.706, Speaker A: Significantly smaller, fully tree shakeable, driven by typescript. It's awesome.
00:06:02.850 - 00:06:24.458, Speaker B: Yeah, it's crazy. I think it only uses eight different dependencies, which is crazy. But yeah, another great developer experience improvement. Definitely. Check out Steven Lusher talk at Breakpoint on it. But that's all we have today for the changelog. Thank you all for joining us and we will see you next week.
00:06:24.458 - 00:06:24.850, Speaker B: Bye.
