00:00:01.240 - 00:00:41.634, Speaker A: Everyone. My name is Jerry and I'm one of the co founders of Ellipsis Labs. At Ellipsis Labs, we build deepfi primitives for the future, and the first project that we contributed to is called Phoenix. Phoenix is a spot limit order book Dex on Solana, and it is designed by x traders to create intuitive interfaces for market makers. The reason why we decided to build Phoenix was based off of existing experiences of developers in the space working with other order of primitives. We realized there was a big pain point in onboarding, and we realized that this was a problem that we needed to solve. So one of the biggest features of Phoenix is that it is crankless.
00:00:41.634 - 00:01:34.578, Speaker A: What this effectively means is that when trades are made on Phoenix, your funds are immediately available for withdrawal after a trade, and there's no need to rely on third party for settlements. This is fundamentally different from the previous designs on Solana, primarily through serum, which relied on a crank for asynchronous third party settlement. Phoenix is live on Solana mandate today, and there's a trading UI for both mobile and desktop. I introduced Phoenix for the first time about a year ago at break point, and one year later, here we are again. I want to give a list of the milestones that have occurred since then. The program was deployed to Solana Mainnet in late February. The UI for Phoenix was launched in late August, and the program is deployed with verifiable source code that is publicly available to this date.
00:01:34.578 - 00:02:43.434, Speaker A: Phoenix has done over $500 million in trading volume, and there have been integrations with Jupiter drift and other top trading firms on Solana. So a natural thing to ask, after all of these milestones, is how can we measure the success? What are some things that we can look at to quantify how Phoenix has done? How has it performed over the past year? The natural metric to look at is market share. Market share is, roughly speaking, the percentage of volume for a particular market that gets routed through different venues. In the graph that you see here, we see that for four different venues, orca, lifeinity, radium and Phoenix. How the market share is distributed in the graph on the left, we see that after Phoenix launched, the market share grew steadily over time, and at this point occupies roughly around 20% of Sol USDC volume on Solana Solar. USCC volume is the most important out of all of the markets because it does the most volume across the chain. And so we think that this is a relatively good benchmark to measure the success of Phoenix.
00:02:43.434 - 00:03:34.324, Speaker A: On the right hand side, you see what's commonly referred to as TVL, but here we are calling it liquidity share. And roughly what that maps to is the percentage of locked volume on each of these different venues and the proportions of this compared to everyone else. And one thing that I want to note is the amount of market share that Phoenix is able to to do compared to these other venues with a limited amount of liquidity. This indicates that Phoenix is a venue that is extremely capital efficient because it's able to produce similar market share with less underlying volume. And we think this is a very, very compelling feature of the product. This other graph is a subset of the previous graph. It also includes a few more venues.
00:03:34.324 - 00:04:53.568, Speaker A: But this is another way that you can evaluate the effectiveness of the pricing on Phoenix. Jupiter is the top aggregator on Solana, and when a trade gets routed to Jupiter, this generally means that that trade price is the best across all the chain, because Jupiter will look at many different venues and decide which one will give the user the best trading price. Therefore, if you look at the market share from trades that go through Jupiter, this roughly corresponds to the percentage of the time that the venue has the best price on chain. And you can see very clearly from this graph that since inception, Phoenix has slowly accrued more and more market share from Jupiter for all trades, including the sole USDC route. And to this date, it roughly does between 20 and 30% of the volume. So market share is one way that you can measure success and performance, but the other, and one that ties back to the title of this talk about sustainable liquidity, is this idea of LP performance, or market maker performance. A traditional way that you can measure the performance of a market maker is to dissect each individual trade that is made by this participant and compute a number that's known as a markout, which is defined here.
00:04:53.568 - 00:05:28.244, Speaker A: So there's a very simple equation here, and it's based off of four variables. There's d, which is the trade direction. This is going to be equal to one if the trade was a buy for the market maker, and negative one if it's a sell. There's p, which is the price of the trade. There's I, which is a reference price. So this is the most complicated one, but effectively you can think of this one as defining some fixed interval in the future, say five minutes, and figuring out what the price of the asset that was traded was at that point in time in the future. And the last value here is q, which is the size of the trade.
00:05:28.244 - 00:06:38.454, Speaker A: And when you look at this equation, the easiest way to interpret it is this would be the realized true profit and loss of the trade if it was exited exactly some interval in the future at the reference price. I and the punchline here is that the graph that you see on the left hand side of the slide represents the cumulative sum of all the markouts of all the trades that occurred on Phoenix over a four month period. And we see that the shape of the line is up and to the right, basically indicating that the markouts on average made that was accrued from trades on Phoenix has been positive for the market makers. On this next side, we see the same metric calculated for orca, which is a cl amm. This is a concentrated liquidity amm pool pioneered by Uniswap V three, but ported over to Solana. Here we see that the graph doesn't look as similar. We see that the shape of the graph indicates that the average trade made by these Lp's in the pool are negative.
00:06:38.454 - 00:07:27.384, Speaker A: And I want to note that this doesn't have to do necessarily with the underlying primitive, but more to the fact that the liquidity in this pool is passive. So if we look at this comparison, we see that the market analysis, it indicates that the market makers on Phoenix are more profitable than the liquidity providers in orca. And the reason for this is because of active liquidity. The liquidity on Phoenix is able to move around and the prices change dynamically without trades, whereas almost all of the liquidity that is available on orca is passive. So let's define these terms a little bit. We have this idea of active liquidity and passive liquidity, and this overarching question of which one enables more sustainability in the market. Let's talk about passive liquidity first.
00:07:27.384 - 00:08:08.390, Speaker A: So passive liquidity is effectively this way to allow users to deposit funds into a pool, and this pool will be repriced based off of trades that are made against it. And the way that it's repriced is based off of some formula that's defined in the code. Generally for users, the rebalancing occurs relatively infrequently. And an important thing here is that users are not often interacting with their liquidity. So the main idea with these amms or these passive liquidity pools is to set and forget. Active liquidity is quite a bit different in this world. Market makers are actively updating their quotes to represent price changes in the outside world.
00:08:08.390 - 00:09:08.530, Speaker A: And the main benefit here is that it provides flexibility and customization with trading strategies. However, because it is more complicated and more sophisticated, there is more automation required to manage these positions, and it is less accessible to resale traders. As a result, there is a steeper learning curve to providing active liquidity, but it provides benefits. Primarily. The benefit is that the market maker is able to bring price information to the chain, which means that prices can move without trades happening, and this fundamentally protects them against adverse selection. If there was a trade that could have been made against a price that was available on chain, but the market maker actively canceled that price before the trade went through, they prevented themselves from making a trade that would have been more detrimental to them than positive. The other point I want to make is that market width is not always static, and one thing that market maker might want to do is adjust their spread based off of market volatility.
00:09:08.530 - 00:09:56.554, Speaker A: The more volatile the market is, the more likely the market maker will want to quote wide instead of tight. And being active enables you to adjust that spread. On the right hand side of the slide you can see a graph of different instruction types that interact with Phoenix, and by and large you can see the vast majority of these instructions correspond to things like placing orders and canceling orders. Fills rarely show up. This indicates that most of the compute time that's spent by these active market makers is really just adjusting prices. So I talked a bit about active and passive liquidity, and I talked a little bit about Phoenix's performance. I want to mention a little bit about why Solana is a good choice for an active liquidity primitive.
00:09:56.554 - 00:10:55.424, Speaker A: And it really comes down to two main things, fast blocks and low network fees. Solana's real time throughput is roughly 4000 transactions per second, and the blocks are roughly 400 milliseconds. What this means is that the chain can roughly keep up with the outside world, or it can keep up with the outside world better than a chain that has slower throughput capabilities. And the reason why this is important for active liquidity is that the expected price movement on an outside venue or centralized exchange will be much smaller when the block time is smaller for a four second block on Solana versus a twelve second block on ethereum. And here's a graph of the live transaction sets of the chain. The low network fees are also important because network fees directly eat into the profitability of a market maker. Because market makers need to place frequent transactions, the low fees on Solana enable market makers to place more transactions without paying the same cost.
00:10:55.424 - 00:11:46.954, Speaker A: If the fees were higher, it would create a less attractive environment for market makers. A simple thought experiment we can do here is to think about opportunity costs for providing markets. Suppose a maker requires $50 an hour of opportunity cost to pursue market making on some chain or on some exchange. If they expect to make roughly $60 an hour from quoting, but they have to pay over $10 in fees, it's no longer worth it because their opportunity cost to pursue this opportunity was $50 an hour. And the numbers here are really arbitrary. They can change a lot based on market conditions, but the fee economics need to work out. And it so happens that Solana's fee economics work out to make it so that active liquidity doesn't burn more fees than it produces revenue.
00:11:46.954 - 00:12:34.974, Speaker A: Lastly, I want to talk a bit about the difference between limit order books and amms because these are the two primary primitives used for spot liquidity in crypto. There are really only two main differences between these primitives, expressibility and fill behavior, and I'll go over these in future slides. Amms were designed primarily to be gas efficient. They were designed for Ethereum, where the more gas you use, the more you need to pay. But this is no longer as necessary for a chain like Solana and on a limit order book. One of the benefits is that you can update more frequently and you can support more complex behavior. And that kind of goes into the next slide about expressibility, which I would define as being able to define the shape of liquidity.
00:12:34.974 - 00:13:07.626, Speaker A: There are roughly three types of primitives that I'll go over here. The first one is a vanilla amm like uniswap v two. This effectively just follows a simple price curve of xy equals k. All of the liquidity. When trades occur against this, it updates to this curve. And this is the least expressive because no matter what you do, you know exactly what's going to happen after the trade is made. The second category is this thing pioneered by uniswap v three, called concentrated liquidity.
00:13:07.626 - 00:14:01.734, Speaker A: And this is slightly more expressive because what a user can do is express a tick range in which they can provide the liquidity. And what this allows them to do is effectively limit the position to certain areas of prices, but it doesn't give you them the full flexibility. And the main reason here is you're not able to set any dynamic feedback fees per tick. Everything is all based off of the same parameters. The last category here is limit order books like Phoenix, which is by far the most expressive, and you're able to implement more sophisticated strategies using a limit order book. The second main difference is the fill behavior, which is what happens to liquidity after trades occur. The primary difference here is that amms will immediately replace liquidity on the other side of the book after a trade goes through.
00:14:01.734 - 00:14:53.184, Speaker A: An example is if a user were to buy Sol from the SoleUSDC pool and Amm, some of the USDC that was made during the trade will be deposited on the other side of the bid. Effectively what you can think of this as happening is that after the trade is made, the price on either side of the trade will be moving in one direction. Um, and the, the liquidity will be replenished rather than removed. And on a live in order book, what happens by default is that the liquidity will disappear immediately after a trade. And what this requires the active market maker to do is they need to decide when they will replenish that liquidity. So there are a lot of pretty high level differences between these primitives. Uh, but crypto is this pretty broad space with a lot of different innovative ideas and building like spot liquidity primitives.
00:14:53.184 - 00:15:46.452, Speaker A: And I don't think that either of these is really the end state. But clearly, based off of the data that we've seen and a lot of the ways in which these primitives operate, it's very evident that active liquidity must be a piece of whatever designs take place in the future. So to conclude, I want to say that sustainable liquidity is possible, but what needs to happen is that it has to be more active. Order books are a great financial primitive for enabling active liquidity, but they're not necessarily the end state. In Phoenix P two, we'll have some ideas for how to maybe merge some of these two underlying primitives between order books and amms. Basically there are a lot of features that, a lot of positive features that exist across both primitives, but you need to utilize them in the right way to make the best financial primitive available. So this is certainly not the end state.
00:15:46.452 - 00:16:00.964, Speaker A: And lastly, Solana's performance and low cost enables a lot of innovation in the protocol design space. This is really a call to action for all the developers out there to please stop copying ethereum, because on Solana you can do so much more. Yeah, thank you so much.
