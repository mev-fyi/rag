00:00:09.480 - 00:00:56.052, Speaker A: I'm Austin and this is validated today. I'm speaking with Armani Ferrante, co founder and CEO of Coral and a venerated hero of the Solana ecosystem. Armani and his team were the developers behind anchor, Solana's most popular smart contract development framework, and backpack, a wallet and platform for ex nfts. In April of this year, Armani launched his first NFT project, Madlads, which was also the first XNFT collection built for backpack. The success of Madlads came at an important time for the Solana NFT community and attracted many new holders from the Ethereum ecosystem, including former validated guest and host of bank list David Hoffman. When I set out to do this episode, I thought wed be talking about these very backpack xnfts, the future of mad lads. And we get there eventually.
00:00:56.052 - 00:02:09.278, Speaker A: But the first half of this conversation is an open ended reflection on Armani's journey as a developer in the slana ecosystem and the values and design philosophies that initially attracted him to it. We get a glimpse into Armani's thoughts on blockchain circa 2018 that l two s were not going to be the answer to scaling that the app chain thesis could be the answer to everything, and how his discontent with the status quo ultimately drew him into Solana in the earliest days of the network. I came into the ecosystem in January of 2021, and even at that point, Armani felt like a Solana og. We discussed the ethos of the Solana developer community, its evolution, and the existential importance of the question what do we build next? Ever? The contrarian Armani poses a thought experiment where a blockchains entire stack is guided by a single entity. This is obviously not how Solana or any blockchain works, but it raises some interesting questions. How would a singular but benevolent controlling entity impact priorities for the network, and what ends up getting built? This leads to a comparison of Ethereums and Solanas base layers, the differences in standards models between Ethereum and Solana, and the tradeoffs between agile versus waterfall development. This is just a taste of some of the threads you get into over the course of this 1 hour plus conversation.
00:02:09.278 - 00:02:32.226, Speaker A: Its an episode that raises a lot of questions without prescribing definitive answers. I'd love your thoughts on this episode. As always, you can reach us@validatedlana.org dot let's jump in Armani, welcome to Validated.
00:02:32.410 - 00:02:33.906, Speaker B: Thank you so much for having me.
00:02:34.010 - 00:03:04.524, Speaker A: You've been in the Solana ecosystem for a long time, but you've been building a whole bunch of different things attached to various projects over the years. I I think for those of us that joined the Solana ecosystem in 2021, you're probably most well known for anchor. For the folks who joined the Solana ecosystem in 2022, you're probably most well known for backpack. For the folks who joined in 2023, you're probably most well known for Mad Labs. So it's been quite a. Quite a journey. But I want to start out with when was actually the first time you started building stuff on Solana?
00:03:04.864 - 00:03:50.378, Speaker B: That's a great question. I think it had to have been September of 2020, right after Defi summer. That's when really all of the magic started happening. I think the big event at the time was the Sushiswap vampire attack. That was the big thing happening in crypto at the time. I mean, everybody was buying every single token on the planet that had to do with a vegetable. People yield farming to Valhalla, and Solana had just launched, and the promise of a global decentralized, censorship resistant on chain Nasdaq was one of the most compelling stories at the time.
00:03:50.378 - 00:03:53.698, Speaker B: And I think that was really the moment when I came in.
00:03:53.866 - 00:04:31.774, Speaker A: So that's very early. I joined in January of 21, and the stat that I think was really interesting at that time was the number of programs with a daily transaction through them on the network was, like, 35. And that was good. Like, that was actually, like, a real success for a network that was a little under one year out in mainnet beta, and especially compared to some of the other networks at the time. But, like, Solana was like a nobody basically at that time, especially in September. I mean, this is a period of time when, like, I was working for bison trails. We were working with about 20 or 30 different protocols.
00:04:31.774 - 00:04:53.646, Speaker A: We technically supported Solana, but, like, I, after a year and a bit there, had basically never had a conversation with anyone at Solana. I was running, like, product marketing for bison trails. What on earth attracted you to Solana in September of 2020? Like, how did you even start getting into this network and decide that, like, oh, this is something interesting to actually build on, not just another l one?
00:04:53.830 - 00:05:59.774, Speaker B: So I originally came into crypto in 2017, was working on Ethereum, got an deep into l two s for a while, and then very quickly realized that I wanted to work on a new blockchain that was just built in a different way. I was briefly at Oasis Labs for a while. That was a project that spun out of Berkeley professor Dan Zong, and I ended up leaving that company. But basically, during that time in, I guess, 2019 to 2019, 2020, I was really looking for a blockchain that was non sharded. Sharding was like a big thing at the time that wasn't focusing on l two s, although I still really am a fan of l two s and think there's good use cases. But I was really looking for teams that were scaling at the base layer with just traditional, more traditional, at least parallel transaction processing techniques. To me, this was just a property that just seemed really obvious at the time, and there wasn't a lot of people working on it.
00:05:59.774 - 00:06:34.024, Speaker B: And Solana was one of the first systems that was really in production, that was scaling linearly with respect to some resource, with respect to hardware. On the Solana case and Oasis, they were trying to scale with respect to different tendermint committees that were running independently. But that was really the property. It was linear scaling with respect to some resource. Solana kind of the first team, I think, that was really able to, as far as I can tell, that was really able to execute on that. And it really just came down to that. It was just from a distributed systems perspective.
00:06:34.404 - 00:06:56.194, Speaker A: Yeah. So you mentioned you were at the time getting into l two s beforehand. I think a lot of us at the time saw the idea of l two s. That was still very early from a technology standpoint. Right. L two s on proof of work was like a weird sort of concept. Like the proof of stake migration was coming soon, perpetually.
00:06:56.194 - 00:07:30.326, Speaker A: Obviously, we eventually got there, and a bunch of the l two s are launched now. But this was a time when the promise of l two s were thousands of transactions per second, as opposed to the low single hundreds we're seeing today on l two s. But at the time, it was a pretty odd bet to say that the l two s are not the solution. Sharding is not the solution. What did you see in the time that gave you either pause about sharding as a scaling solution or the l two promise not matching up with what you were seeing on the ground.
00:07:30.470 - 00:08:54.399, Speaker B: So it's funny because it feels like a contrarian take if you are inside of the crypto bubble, but I feel like it's pretty non contrarian, pretty obvious take if you just are looking at it from the point of view of just like I don't know any other database on the planet, but my view on rollups has always been, and the reason why I like them so much is very much less from the perspective of let's scale this base layer, and it's much more from the perspective of spawning off independent experiments or vms that might be run by different companies. I'm a big fan of the cosmos view of the world, as much as that might sound odd. As somebody that's been working on Solana, where I really view the end state of a lot of different applications and companies as eventually spinning up their own app chains. You saw this on Ethereum with Aave, for example, where eventually you grow to a scale where you want to control a lot of the stuff that you're working on. In the context of games, this is really interesting. In the context of social media, this is really interesting. I think rollups are really compelling from that point of view where it's less about scaling the base layer, although that might be like a nice tangential property, and it's much more about building a specific application that you can't do on the base layer because maybe the base layer made some design decision that you disagreed with.
00:08:54.399 - 00:10:04.178, Speaker B: Because you can't design a single database, there's trade offs, and you might want to, want to take different trade offs depending upon what you're building. I'm a big fan of rollups, and particularly cosmos from that point of view. And I think if you take a step back for a moment and answer the question that you're asking, I think the thing that gave me pause was really just complexity from the perspective of an application and product developer, where it's hard enough to have users on a single blockchain. And now the moment you start introducing bridges and you start introducing another independent system, and you start introducing fraud proofs and you start introducing settlement times, this really complicates the user experience significantly. It complicates wallets, it complicates apps, it complicates dexs, and how you reason about all these things. I mean, at the end of the day, people don't care if they're using a blockchain or postgres or visa or Mastercard. They care about it being fast, they care about it being seamless, frictionless, and all these things, right? They care about the product and the app that they're looking at.
00:10:04.178 - 00:10:36.312, Speaker B: And so from the point of view of, like, you know, how do I build the best applications? And how are these systems, these large, decentralized systems like the Internet built? They tend to be like, the simple solutions tend to work the best. And I feel like a lot of the, or at the time, at least, I felt like a lot of, like the l two systems design violated a lot of these, like, simple design principles that I think we've learned over the past 30 years of computing and this experiment called the Internet. Yeah, yeah.
00:10:36.368 - 00:11:41.310, Speaker A: It's funny, I want to meme this too much, but there is sort of this thing where it's like the bell curve of IQ and you've got Solana on one side and Cosmos on one side and you've got l two s in the middle, where there is this sort of nature, where you either want everything completely interoperable on one global state, or you want the Cosmos version of this, which are not really composable, but interoperable ecosystems that are sort of run in the app chain model. But it's interesting because Cosmos, when I first came into blockchain, I looked at Cosmos and I said, that's it, that's the solution. And it hasn't happened. I think it's really interesting that the app chain thesis has not been proven to be one that it seems like developers or users are particularly interested in. And I guess I've always wondered if that is more of a UX issue around the problems of having app chains. And interacting with app chains is difficult, or if there's actually, like a good technical underpinning reason these things haven't caught on. Do you have any sort of thoughts on what that is?
00:11:41.462 - 00:12:11.206, Speaker B: I feel like it's a combination of things. So the reason why a system like Solana or Ethereum is so attractive is that the serverless model is just too good. It's too good to be true. It's like, oh, great, I can launch a backend and I don't have to run. I don't have to have an AWS account, I don't have to have a server. I don't have to wake up in the middle of the night if this thing goes down, it just works. And that's a really incredible property to have if you're building a product, because it just simplifies the whole developer experience.
00:12:11.206 - 00:12:41.726, Speaker B: I mean, there's obviously Solana and blockchains and smart contracts in general have their own challenges. But in general, that's a really nice property. And the moment you start getting into app chains, you lose that property. You need to have a really good reason to be running your own consensus mechanism. It's complicated and you need to find independent validators and you need to decentralize if you don't want to be decentralized. And maybe you can make the argument that it's less important to even use Cosmos, and that's maybe one of the most important parts.
00:12:41.910 - 00:13:24.546, Speaker A: I've always viewed app chains as the dream. The enterprise blockchain hype. Hubble blue of 2016 to 2018 was trying to get to, but didn't know how to get to. Like, I'm not sure that an app chain can ever actually be decentralized. I don't mean that from the perspective of, like, can it have 150 validators are independently operated, but that diversity of economic interest is a really important piece of chain security. And, like, if USDC were an app chain and USDC got hacked, there's zero questions that it would be rewound if USDC got hacked. On Ethereum, I think there's maybe a 20% chance that the Ethereum community would do any sort of state modification to undo the hack.
00:13:24.546 - 00:13:41.544, Speaker A: There would probably be some other complicated system, like a burn and remint or something along those lines. But it's interesting when you talk about that, because I think there's like a. There's a thing about app chains that feels like it is like a perfect solution for the enterprise blockchain that was never really worked in 2017.
00:13:42.764 - 00:14:32.808, Speaker B: I mean, you do see this come up. Taking a step back a moment, we always talk about blockchains from the perspective of these public blockchains like Solana and Ethereum and bitcoin, where anybody can hook up into it and use it for value transfer. And the whole world is using this thing, but ultimately, it's very useful in other domains as well. And I think tendermint, as a piece of open source, reusable technology is an incredible example of that. One of my favorite tendermint products is just silo from jump, where it's a really simple idea, where they're a big trading firm, they trade billions of dollars. I don't know how much they're trading in crypto, but they're one of the biggest in the world, and they needed a custody solution to safeguard all their crypto. Right.
00:14:32.808 - 00:15:30.772, Speaker B: They don't want to necessarily have it all in hot wallets. They don't want to necessarily be slow and have everything in, like, a ledger multisig. And so what they built was they built this solution where they combined tendermint based Cosmos blockchain with an MPC protocol, where in order to control their wallets, what they basically do is they send a transaction to their cosmos blockchain that does some policy checking on whether that transaction can actually execute. And then they have this MPC group observing the blockchain and taking a look at the transactions that are happening, and then running a distributed keygen to sign the transactions to and from their wallet on the blockchain. And that's a really incredible piece of tech where it's simple. They probably built that in a relatively quick amount of time. They are the only users of it and it allows them to sleep well at night.
00:15:30.772 - 00:15:31.424, Speaker B: Right?
00:15:32.004 - 00:15:48.724, Speaker A: Yeah, it's so interesting. It's a use of app chains to provide the security a blockchain provides without necessarily providing the decentralization of blockchain provides. But you still have both that security from a technical standpoint and security from an observability perspective.
00:15:48.844 - 00:16:39.606, Speaker B: Yeah, I mean, you see, I mean, if you look at tendermint, the analog in classical distributed systems are like Paxos and raft, these consensus protocols that provide fault tolerance, but not byzantine fault tolerance, and they're used all over the place. We just don't know that they're being used. Whether you're using Kubernetes or ETCD or redis or whatever, I feel like blockchain has done a really good job of bringing all this stuff to the forefront and educating the world about it, but maybe not too great of a job at bringing it to the back and then actually building the things that people care about on top of it. But this is a long winded way of me saying that I think this silo product is a great example of tendermint just being an incredible piece of technology that you can use as a primitive to build other really useful things where trust is minimized and you can build more robust systems in an adversarial environment.
00:16:39.790 - 00:17:21.672, Speaker A: It is really interesting when there's a certain weirdness to tendermint where the l one token, if you can call tenderminds and l, you can call it Cosmos and l one, which, like, I'm not really sure you can call Cosmos and l one, I'm not sure what we should call it. It's definitely not an l two, it's definitely not an app. If it's an l one, it's questionable. Um, but it's incredibly useful. But, like, the point of bitcoin is to secure bitcoin. The point of Ethereum is to secure ether and allow people to build things on top of it. But, like, fundamentally, what you're concerned about with Solana or Ether and Ethereum or bitcoin is not the certainty of the applications built on top of it.
00:17:21.672 - 00:17:52.534, Speaker A: Like, the network architecture is really built to make sure someone can't maliciously change the state of the network. It's not necessarily built to provide application level certainty. That's a byproduct of the architectural design that obviously is the smart contracts we all know and love. But it's interesting when you hear. To hear you talking about tendermint in this way, because it feels like it's actually a very different take on what the purpose of the consensus layer is. Do you agree with that?
00:17:53.034 - 00:18:19.624, Speaker B: Yeah, no, no, I agree with it. I think I'm very much viewing it from the perspective of, well, we have this consensus primitive, and then on top of this consensus primitive, you can build other stuff, but it's really just a bunch of computers all agreeing that this is the linearized state. Right. That's all it is. And then what that linearized state represents and does is more or less up to you. But at the end of the day, that's what it does.
00:18:20.124 - 00:18:36.644, Speaker A: So given all of that, what made you interested in building something on Solana versus building something on an application specific instance like cosmos? Walk me through a little bit of where that decision came up for you.
00:18:36.804 - 00:19:18.686, Speaker B: I think the thought process was there's a couple key components. I mean, the initial conditions of Solana were truly extraordinary, where you had this insane amount of intention that came into the industry off of the back of a brutal, brutal bear market, where I don't know if you remember 2019, but a lot of people just left. 2017 was incredible. 2018 was interesting. The promise of a world computer was the coolest thing at the time. It was so cool that I was like, all right, I told my manager at Apple, I have no plan whatsoever. I just want to go work on open source tech.
00:19:18.686 - 00:20:09.280, Speaker B: Ethereum is the coolest thing at a time. LFG. So many engineers, I think, were just really captivated by that story. And so many teams like Solana of raised at that time when there was this promise, but it was really unfulfilled. And us, as like, a collective kind of industry, we're trying to all figure it out. And I think not only was Solana super interesting from a systems point of view, but it was also just finally something that started. You saw the beginning, the flame starting to kindle, I think, so to speak, where I think when FTX came in, that was like, at the time, FTX was the darling child of the industry, right? SBF had saved kind of sushiswap and crypto.
00:20:09.280 - 00:20:52.526, Speaker B: Twitter was going crazy about that. And he had built this incredible kind of cross margining system that was really novel at the time. And it's easy to forget the excitement that was stirred up in those early days from that potent combination of things where you had in Solana. I saw firsthand, I think, how hard it was to build a blockchain like a new l one, and to get people to really care about it. I feel like the ingredients that Oasis had were pretty solid. It was definitely some of the smartest people I'd ever worked with before, but nobody cared. That was really the challenge of going from zero to one.
00:20:52.526 - 00:21:38.566, Speaker B: Like, nobody really cared. It was like generating that demand was so, so hard. And I think with Solana, it really just had all of the incredible ingredients where it had just incredible engineering. It was great timing. It had excitement that was being built up around this kind of narrative that Anatoly had been talking about for years of, like, a decentralized Nasdaq. And then you had one of the big players in the space whose specialty was order books come in. And I think all of those ingredients just led to a really unique place where you had a bunch of engineers from tradfi institutions, you had, like, jump come in, you had people from, like, you know, Citadel leave their jobs and come in.
00:21:38.566 - 00:22:02.818, Speaker B: It was a very different group of people at the time that were really interested in finance and trading, and. And I think that was obviously, this ecosystem has changed in many different ways. I think it's much more dominated by NFTs now than it is people with trading backgrounds. But that was really the narrative at the time that made it so unique and exciting and made me want to take a look.
00:22:02.986 - 00:22:42.934, Speaker A: So you mentioned part of your impetus there was that you wanted to go work on the coolest open source tech. That was the way you found yourself in the ethereum world, and eventually the way you found yourself in the Solana world. I think there's a pretty strong dotted line between that and the work on anchor, let alone backpack. But what about open source felt important to you? There's a type of person that, like, gets taken in with open source, and there's a type of engineer that's very happy spending all of their career working on a closed source database, whether that's at Microsoft or Facebook or any of these, like, large social media companies. Like, why did open source feel important to you at the time? And what about it still does today?
00:22:43.394 - 00:23:22.240, Speaker B: I'd say there's a bunch of different points that I would make. I think purely from a selfish engineering point of view, it's just more advantageous to work on open source. You write some code, normally it's closed source, you give it to a company, and that's that. But if you get to work on Apache two software or GPL or something like that, something with a permissive license, and you write some code and it's there and it's actually useful where you can reuse it in the future. You can look back on it. You can learn from some of the most amazing people around the world. I think when I was building anchor, for example, a lot of people would just like file issues or open prs and I would just learn a lot of stuff.
00:23:22.240 - 00:23:58.024, Speaker B: And you get access to all of this incredible talent, I think, that you otherwise wouldn't get access to it. And you can start meeting people and build the network. And I think a good example of this is a lot of the early backpack engineers came from anchor contributors where you just had these really special people that would randomly open prs and you dm them and you'd be like, hey, you're doing really good work. Do you want to get paid for this? And they'd be like, no, I got a job. This is just fun, I don't need to get paid. And that's such a unique response I think. And of course they get paid now.
00:23:58.024 - 00:24:31.558, Speaker B: And I think that's just a really incredible way to build a career as an engineer. That's definitely one strong component of it. Another component of it is simply just crypto and decentralization. I think this is something I've talked about before, but in the context of smart contracts the whole point is to be decentralized and to not have a single point of failure. That's the entire point of a blockchain really. If you're going to be consistent with that and honest about it. In order for you to be decentralized you really have to have the source available in some way, shape or form.
00:24:31.558 - 00:24:58.442, Speaker B: People have to actually be able to see what theyre using. And if thats not the case its kind of just smoke and mirrors. And I think in the context of any defi protocol thats certainly the case. And if you want to be centralized, thats totally fine. People, I think, seem to make this mistake when we have these conversations where they think im like an open source maxi everything has to be Apache two or GPL v two or whatever. Its totally okay to be centralized, its totally okay to be closed source. I support that 100%.
00:24:58.442 - 00:25:07.134, Speaker B: Jerko, I'm a big believer at jircode. You do whatever you want, but if you're going to go out into the world and say you're decentralized, then well you should really be decentralized. I think that's quite important.
00:25:12.274 - 00:25:39.304, Speaker A: I want to get into a little bit of the stuff that you and the people in your orbit have been working on over the years. The first time I met you and learned about you was in early 2021 when I just joined. And folks were saying that there was something called anchor that you were working on, and that anchor was not a new programming language, but Anchor was going to make programming on Solana much easier. How would you describe anchor for developers?
00:25:39.344 - 00:26:00.184, Speaker B: I would describe it as react or Ruby on Rails for Solana, where you can build smart contracts on Solana in a way that's, I would describe, ten times faster and by default, ten times more secure. And it's really as simple as that for folks that are not developers. I would just describe it as the way you build one of many ways to build smart contracts on Solana.
00:26:01.004 - 00:26:12.348, Speaker A: Let's go into a little bit on that developer side. When you first joined the Solana ecosystem and you started building stuff on the network, what did you see that convinced you that there was a need for something like anchor?
00:26:12.516 - 00:26:31.964, Speaker B: Yeah, it was quite simple. My first smart contract I ever wrote. It took me a very long time to ship it, and it was very insecure. It was those two things, honestly, I was just scared and nervous. It was really as simple as that. And I was like, oh, my gosh, if I'm feeling this way, I'm sure other people are feeling this way as well. And I think developer tooling is extremely important.
00:26:31.964 - 00:27:04.446, Speaker B: At the time, there wasn't many developers on the network at all. I think this was before the first hackathon, and it's September 2020. I had seen a lot of these things built before. I think parity had ink, Oasis had its own system, Ethereum had solidity, these frameworks for targeting the virtual machine. And I was like, okay, well, rust macros are fun. This is a really important problem. I went into the discord, asked Michael vines if anybody was going to build such a thing.
00:27:04.446 - 00:27:31.550, Speaker B: So I was like, this is super obvious. Somebody should build this. Why aren't you guys building this, Michael? And he's like, no, somebody in the community should build it. We have our hands full. And it was really simple as that. And, like, as a quick aside, I use this all the time when I'm talking to my team and talking to others, which is like, Solana as an organization is just world class. I feel at ruthless Solana Labs in particular, at ruthless prioritization, just ruthless prioritization.
00:27:31.550 - 00:28:03.966, Speaker B: It's such an incredible case study where every other blockchain basically would have built anchor in house, every single one. They would have raised the money, they would have blocked Mainnet release but Solana said, no, we are going to just prioritize what matters, which is making the core system go as fast as humanly possible. And if that's valuable enough, other people will come in and be incentivized to build anchor because they'll need to make whatever it is that they want to do happen. And I think that's a really beautiful story, but I digress.
00:28:04.110 - 00:28:19.932, Speaker A: No, I love that, because ruthless prioritization is interesting, the way I will often describe it, as a network that rewards and embraces ruthless practicality. But that's on the builder side and the application side. It's interesting when you think about that on the sort of like the base side too.
00:28:20.028 - 00:28:21.108, Speaker B: Yeah, definitely.
00:28:21.276 - 00:29:00.374, Speaker A: I will say that a lot of the engineers who were around in the early days and continue to be, I mean, the core contributor network now is probably five different organizations, right? But especially back in the earlier days, that sort of ruthless prioritization of like core is core is core. We do not build things that are not part of core. And that idea of what is in scope and out of scope of core, it attracted a certain kind of developer to the network in the early days. I think that started to change, and some of that's just a process of growing up. But it's really interesting to sort of hear you talk about that. Do you think there still is that sort of ruthless prioritization today?
00:29:00.714 - 00:30:01.238, Speaker B: Yeah, I mean, I think it's a little harder to see because I think the network's at a stage now where it's really an unchartered territory, where the original goal, the original objective is very clear, and startups having clear objectives is quite important. It makes your life so much easier, where it's like, all right, make the thing stay up and make it go as fast as humanly possible, faster than any other blockchain. And I think those goals are more or less achieved. There's obviously work that continues to be done on the reliability side, and I think you can continue to make it go faster. Things like Firedancer will just continue to just blow people's minds, I think. But the question of ruthless prioritization is like, well, what are you now prioritizing? Because if you've summited that mountain, not to say Solana has, I mean, it's obviously going to be a continuously evolving piece of software. It's just the challenges that I think, I don't know if it's core or labs or foundation or ecosystem companies would be prioritizing.
00:30:01.238 - 00:30:18.314, Speaker B: It's just we're in murky waters at the moment because we're on the frontier. It's like, well, we have all this incredible tech right now. The question is, what does this unlock that's never been built before in the history of computing? And that's a much more challenging problem and also a much more exciting problem.
00:30:18.654 - 00:30:52.814, Speaker A: Yeah. And it's kind of one of these problems where there is a certain amount of the infrastructure exists. Good luck. Right. Every once in a while, you sort of see these, like, folks, and this is a product of Twitter, and Twitter is not the real world. And all of those caveats that are sort of like, what is Solana Labs, Solana foundation, mango, jump jitto. Pick your core contributor organization doing to build things that are truly only possible in Solana.
00:30:52.814 - 00:31:28.182, Speaker A: And there, you know, I see that. That spirit of sort of ruthless prioritization. The place you continue to see it, is an unwillingness to climb up the stack. Like, I think the token program work on token 22 is about the highest, or, like, the state compression work is like the highest. I think you'll ever see those organizations climb up the stack, but there's this unending drive from, like, folks to say, no, no, no, you need to build something. Application layer, you need to build, like, the way wallets should interface with contracts. Interfaces is a huge topic.
00:31:28.182 - 00:32:15.374, Speaker A: And the funny piece about this is the best ideas on the application and infrastructure level, and I would say anchor falls into that category, have historically never come from the people that would be described as core. And that's one of the things that I really think is remarkable about this network is how much community ownership was embedded so early in the project. And part of this was just, quite frankly, budgetary. Solana Labs had very little money. In 2020, there's a change that has happened, I think, over the last maybe 18 months where the network's more successful. There have been larger fundraisers from something like Solana Labs, and they have way more engineers and used to work for them. There's many other core contributors that have been brought on, and there's a transition that's taking place in terms of what.
00:32:15.374 - 00:32:24.594, Speaker A: What is the right thing to do now? And I think you really, you nailed it there, where you're sort of like, the question now is, what are people gonna build that we've never been able to build before?
00:32:25.214 - 00:33:10.588, Speaker B: So I have mixed feelings about this topic. On the one hand, I love everything that you said, and I wholeheartedly agree. And I think if you wanna take the stance that you're decentralized and that you really embody whatever ethos you wanna ascribe to crypto twitters perception of what crypto and public blockchains should be, then what you said is so spot on. I don't know if there's a prescriptive take. If there is a prescriptive take, I think that is the one to take. But the other side of me wants to viciously push in the other direction and say, well, I think there's been a lot of incredible examples of blockchains pushing in this direction. Let's push in the other direction.
00:33:10.588 - 00:34:27.868, Speaker B: Where what happens if we have a single entity that is focusing on the entire stack all at once? And what does that change about what we build and prioritize? I think you see this in a couple incredible examples, right? You see this in Apple and Amazon are maybe the two best examples of this, where you had orgs that Apple took the contrarian and bold stance to not only build the hardware, but to also build the software and to own that user relationship and to build, hands down the best products on the planet. Yeah, and that was really a contrarian take at the time, right? Given that Microsoft was like the biggest company in the world, and they were just saying, all right, we're going to focus on our core competency, which is, which is software in the operating system. And with Amazon, it's like another great example of this, right? Where instead of building AWS, they built the bookstore first. They built the thing that the users wanted. And from that product, they were able to reverse engineer all of the interesting infrastructure that was required to make that bookstore work. And once they built that for the bookstore, then they said, okay, well, let's generalize this for other companies, because if it's useful for us, it's probably useful for other folks as well.
00:34:28.036 - 00:34:28.740, Speaker A: Yeah.
00:34:28.892 - 00:35:15.128, Speaker B: And you haven't seen this approach taken much at all, at least not successfully. There have been folks that are trying to do this in crypto, but none that have been as successful as Solana or Ethereum or bitcoin. I mean, maybe you can make the argument that bitcoin was this. Bitcoin was where the bookstore was basically cash. And he said, okay, well, to build cash, we need this proof of work thing. But I feel like from this point of view, this is pushing in the other direction where you can look at Solana and you can say, well, what should we be building into core that's able to facilitate the bookstore? Let's not even look at it from the perspective of the bookstore. Let's look at it from the perspective of a block explorer, where if you're building a block explorer, the first thing that you would build is you would build anchor.
00:35:15.128 - 00:36:21.766, Speaker B: Because if you go look at explorer dot solana.com and you start searching stuff, what do you see? You see a bunch of raw bytes and codes that no human can possibly look at. And the reason is because the base layer of Solana is so general, it makes no assumptions whatsoever on the format of the data, whether it's instruction data or account data. And it turns out, as a developer, this is one thing that I think ethereum does very well and Solana does not so well, which is it imposes very strong opinions on what the base layer is. Actually, a lot of people don't fully appreciate or realize this, but Solana is a much, much more general unopinionated system than Ethereum is from this point of view, where when you go to Etherscan, you actually have this really incredible experience where you can look up any smart contract or any piece of data directly from the blockchain. You can say, these are the accounts, these are the smart contracts. They probably see the code in there.
00:36:21.766 - 00:37:22.494, Speaker B: And not only that, I can also interact with the program, and I can pretty transparently go from one thing to another and traverse that graph on the blockchain. And that's because everybody uses the same set of tools, everybody has the same format of their data. And the network itself imposes very strong opinions through ERC standards and through tooling standards that Solana has taken the very, a very different stance on, which was that we are this very unopinionated message bus, and if people want these things, they can build it at a higher level. And from this point of view, I don't know if that's the right stance to take. I would argue that it's the wrong stance to take, because I don't view l one s or blockchains as these unopinionated systems. I very much view them as very opinionated systems, especially given all of the compute and runtime constraints. And those constraints unleash a lot of creativity, I feel.
00:37:22.494 - 00:37:35.942, Speaker B: And so I think this is maybe another kind of perspective that is very different, and I think is a lot of fertile area for experimentation for other kind of folks that are aspiring l one developers.
00:37:36.078 - 00:38:21.634, Speaker A: Well, it's interesting you talk about it in this way, because I think, famously, at this point, there is no protocol level NFT standard on Solana, right? Like Metaplex is entirely built in, for lack of a better term, user space, right? It takes three accounts and it throws a bunch of stuff in them and then everyone agrees how to interpret that stuff. There's no 721 standard equivalent. That's like baked into the protocol level on Solana. And I guess it's interesting to hear you to talk about it from this perspective, because the constraints that Solana imposes are there, but they're at the base layer, right? Like transactions have a certain type of determinism that they do not have in the ethereum ecosystem.
00:38:21.674 - 00:38:21.850, Speaker B: Right?
00:38:21.882 - 00:39:05.512, Speaker A: Like what I mean by that is like a transaction on Solana must specify all of the accounts it wants to talk to before it can possibly execute on Ethereum. Who knows where it's going to go before the transaction simulation actually begins, right? Those things aren't specified out in advance. And so it's interesting to say that, like, Solana is actually very opinionated, but at a level that is so far down that it's basically baked into consensus and block packing and all those sorts of things, as opposed to being on that developer level. Where have you seen that? Because you've obviously built in both ecosystems. Where have you seen that be something that is really advantageous in the Ethereum ecosystem beyond the block explorer example?
00:39:05.698 - 00:39:37.054, Speaker B: I think the whole conversation around interfaces is relevant here, where you have these opinionated standards of what an NFT or a token or a wallet should or shouldn't look like. And it's built around this very robust social layer that Ethereum has. It's really an incredible thing. If you go to the ether research forums or the Ethereum magicians forums, they have probably the most robust social layer out of any l one. And it comes. I don't know where it comes from. I don't know if it comes from Vitalik's blog post.
00:39:37.054 - 00:40:53.304, Speaker B: I don't know if it comes from something in the water in Toronto in Waterloo, but it's a really incredible thing. And I think this really robust social layer that is happening not only at the core engineering level, but also at the application level is something that creates a lot of advantages for not only teams building, but also for folks that are using the stuff that the teams are building. The best example of this is just NFTs on Solana and Ethereum, where you brought up the example of metaplex. And I think one of the pain points and one of the challenges that we realized we needed to solve as an ecosystem over the past year, particularly with the collapse of FTX and serum, was just these single points of failure at the app level where at the core blockchain level, I think we can pretty confidently say that Solana is extremely, I mean, sure, the network's gone down, from my point of view, as a quick aside, it's not about the network going down. It's about the time between the network going down. And as long as that gets longer and longer, that implies that we're improving. Right.
00:40:53.304 - 00:41:49.566, Speaker B: And as long as that time goes to infinity, then we're good. Get to five nine of uptime, and we're in a good spot. But I digress. But I guess the point is that I think interfaces are extremely important where we need to be able to specify asset standards and protocols in a general way such that we don't have these single points of failure. There shouldn't be a single dAO or a single company or a single key that controls any asset standard on Solana or Ethereum. And we realized this as soon as FTX went down, obviously, right, because, and it was an incredible case study in decentralization, specifically on Solana, where you had all these teams spin up almost overnight. You had, like, open book and the main go team and all these folks all around the world just spin up, just be like, you know, serums down.
00:41:49.566 - 00:42:45.302, Speaker B: We need to spend up something else. Let's get liquidity, let's get market makers, let's spin up new Uis, let's move everything over. And that was really a testament to the community there. But I digress. Coming back to the interfaces conversation, we really need the ability to unlock multiple competing implementations of different asset standards. And you saw this with Metaplex, where you had a bunch of businesses that were relying on Solana nfts, namely, you had Magic Eden, you had Cardinal, you had Metaplex itself, of course, have all the wallet providers, and a lot of them were starting to become really worried about the fact that a single profit seeking enterprise, namely Metaplex, was controlling this asset standard. And that's not something that is Metaplex's fault.
00:42:45.302 - 00:43:36.512, Speaker B: It was simply something like they just built something that was so valuable and that the whole ecosystem wanted to use, that it outgrew them. And when I say outgrew them, I mean the incentives of the rest of the ecosystem became such that, so strong that there was this tension, I think, with this single program. And this created a lot of, for lack of a better word, conflict. And it created a bit of a mess, I think, at the social layer. So going back to your question, what is, like, this kind of opinionated stance, get you right, what are the upsides that you see on Ethereum? And I think these ERC standards, it's just a huge upside. It just creates a much more robust social layer, where you could have all of these independent companies depend on a single standard that's neutral, because it's not a program that's upgradable by a single company. It's simply just an interface.
00:43:36.512 - 00:44:15.694, Speaker B: It's just a set of APIs that we all agree to use at the social level. And the moment that happens, then you can have, well, you could have metaplex, have one program, you can have Maggedgeeton created another program, and the ecosystem can carry on in its way. And we're much more robust at this level. And I think this is a really important piece of social fault tolerance, if you want to coin that term. That is really important for blockchains, because it's not just about the tech and it's not just about going fast, it's also about managing the culture and the people. Yeah, and I think this is one of the key unlocks that being opinionated at the app layer gets you.
00:44:16.034 - 00:45:18.436, Speaker A: So there's a lot of interesting pieces here where the reference code for Metaplex was built by Slana Labs. I was on the group of six people who originally architected a lot of that metaplex code, but the code was not at a place where there was any sort of consensus definition around what the standard should be. The thesis at the time was what artists really needed was their own storefronts, and that auctions on Solana, because you could finally run auctions on a network that was cheap enough to do bids and cancels, that everything would be auction based. And it turns out almost no artists run their own storefront, and an infinitesimally small percentage of nfts are actually sold via auction. And so I kind of go back in time to like, if that standard had been enshrined at that point, we would not have, I think, gotten the NFT boom and explosion that we saw in the fall of 21, because basically all of metaplex was wrong except the code that let people mint nfts. And that's not a dig on Metaplex at all. It was just they pivoted very gracefully into supporting that.
00:45:18.436 - 00:46:14.588, Speaker A: But, like, everything about that thesis was wrong, except that people wanted nfts on Solana. And so at some point, like, I think Apache has a pretty good system for this, where they actually will acquire, for lack of a better term, IP, and they will bring it back into the Apache core web server product that is open source. But at some point, Metaplex goes out and raises $40 million. And is the Solana ecosystem supposed to come in and say, we're going to buy you out. Now, I'm really curious if you have thoughts on what the right migration is, because the knock on the ethereum ecosystem is, is that it took six years to ship proof of stake, and it took four years to ship. L two s and l two s are still nowhere near where they need to be. And like that process of, actually, for lack of a better term, that social consensus you're talking about is incredibly slow and incredibly fraught.
00:46:14.716 - 00:46:40.212, Speaker B: Yeah, I mean, this is the key question at hand, right? I think, yeah. I mean, maybe before even answering that question, I do want to say, like the metaplex example, it's one of many. It's not unique to Metaplex. It's simply the fact that it's a property of having a single program. That's it. It's nothing particular to them or that company. It's just that NFTs are probably the most widely used asset standard on Solana, and so everybody cares about it.
00:46:40.212 - 00:47:21.220, Speaker B: And so they're in an unfortunate position that there's this conflict over this. But you bring up the fundamental trade off of agile versus waterfall development. This is something. It's funny, this conversation's been had by several generations before us. Yeah, this conversation started in the eighties. We're babies in the context of the computing history, rediscovering everything that's already been discovered by all the wise old men and women that have built all this crazy stuff before, which is pretty hilarious. We're just rediscovering it in the context of blockchains and immutability, I suppose.
00:47:21.220 - 00:47:50.618, Speaker B: And Twitter. Can't forget about that part. Can't forget about Twitter. And you're right. I mean, speed wins, and we don't know what we're building upfront, and we need to iterate our way to figuring out what are the valuable things to build. On the other hand, there are useful interfaces that we have discovered and have built as a collective species over time. The Internet is a great example.
00:47:50.618 - 00:48:28.688, Speaker B: The thin waste for people in your networking 101 class, and if you studied computer science in uni, the thin waste of the Internet. Each subsequent protocol at each layer of the stack is a good example of this, where as long as you find good interfaces between different levels of the stack, each level can innovate independently. And so you can kind of have your cake and eat it, too. And that requires a lot of foresight. It requires a lot of genius. Maybe we're not as smart and innovative as the creators of the Internet, but I do think there is a trade off here. For sure.
00:48:28.688 - 00:49:15.382, Speaker B: I would also make the argument that if you had made metaplex an ERC type standard, it would have had a lot of junk in it, but it would have had the most important part. Sure, limited editions, maybe it wouldn't have taken off like Master editions is what everybody used. But really putting p nfts aside for a moment, the one thing that you really need is just that metadata URL. That's the main thing. So it's like, give me an API to read that thing so I can show it in nfts. And so I would take the stance that, well, if you did have that, I don't think much would have changed. And I think I would also take this stance that a good thought experiment for maybe not this podcast, but for listeners that have offline is like, well, what happens on ethereum because they don't have upgradable programs.
00:49:15.382 - 00:49:52.784, Speaker B: And the answer is basically proxy contracts. You get proxy contracts, but you also get, I would argue, more code maturity. You get people thinking about their program design more comprehensively because they don't just ship it because they know they can upgrade it later. And so on the one hand you go slower, but on the other hand you maybe get more of a robust API design that requires you to move more slowly, but also social consensus because it is immutable. So I don't have an answer here. There's trade offs all over the place. I just do the easy part of pointing out the problems.
00:49:59.604 - 00:50:44.754, Speaker A: I'm going to point out some of your problems now that you've decided to take on by building x nfts and backpack. And I think this conversation is a really interesting setup to this because you are now building a new standard. And I'm kind of curious how you think the philosophy that you've talked about, like how is this informed? Let's cover what an X NFT is, but then let's get it. Like I really want to get into, like how this has informed, the way that you've gone about trying to build something that can operate as a public standard, like what is the graduation path of what you're building with XNFT, into preventing it from becoming a serum problem or a metapack problem, or a pick your central protocol problem.
00:50:44.914 - 00:51:28.444, Speaker B: I think ultimately standards become standards, not because the standard is so good or it's objectively the right thing. I think standards usually become standards because of distribution and product market fit. And as much as it's fun to theoretically pontificate about what is the best way to do something and argue about it over a forum for a bunch of time. Ultimately, at least, it's my view right now that the most important thing in crypto at the moment is demand generation. I think a lot of really incredible problems have been solved. I think we have incredible infrastructure. I think Solana is just a testament to that.
00:51:28.444 - 00:52:12.894, Speaker B: My thinking behind XNfT and backpack is really, how do we ten x the number of users in the industry, and let's do that as fast as possible. And if we don't do that, then nothing else really matters. And so I think it's no coincidence that I find myself in the Solana ecosystem, because that's very much the stance that Solana has taken as a collective ecosystem, which is ruthless prioritization. Let's grow demand and grow the pie as fast as humanly possible, because we ultimately don't know what we're building and the customers are going to tell us what to build.
00:52:13.274 - 00:52:50.048, Speaker A: I want to push you a little bit on this because you said something which I think is spot on. Standards become standards because of adoption, but it's possible that a standard becomes a standard because of adoption without actually becoming a standard, like we just talked about with metaplex and, you know, interfaces and all these sorts of things. Well, interfaces is trying to solve something that is a problem because of this. How are you thinking about the XNFT standard and how that wouldn't run into a situation where a year and a half from now, the community is mad that our money controls the XNFT standard?
00:52:50.176 - 00:53:29.744, Speaker B: I think ultimately, it's pretty hard to solve this problem without an extraordinary amount of trust when adopting a given standard. Right. Like, if you are using xnfts and you have a business and you're taking the stance that I'm going to now put the future of my company on the back of this standard? It's the same thing as putting your faith in the Twitter API, right. As long as that program is upgradable. Right. And so there is an element of trust there, which I would think is a pretty undesirable property, and I don't have a solution for that other than trust me, bro. Yeah.
00:53:29.744 - 00:53:58.072, Speaker B: I think there is an element of, like, find product, market fit, grow, and then transition out into and spin off the standard from that. Right. And I think that's what's happening with Metaplex, where it wasn't their job to build the standard immediately. Right. It was their job to grow nfts on Solana. And now that nfts are the most important thing, there's, like, all of this social pressure trying to, like, bring that program into the public good domain?
00:53:58.208 - 00:54:43.782, Speaker A: Yeah. Do you think we need something like a B Corp? Like, if there was a structure where you could say something like, we are building backpack out of this company coral, and we're going to start from the beginning by saying the standard is not monetizable, and if we ever try to monetize the standard, we're in violation of our charter or something along those lines. And like, Mozilla has done this by building a nonprofit arm and a for profit arm, but that's obviously a boatload of overhead and paperwork. Like, do you think there needs to be some way to allow standards to be developed by centralized entities, but also build some sort of protections into that system? Or is that just like what a foundation should be doing?
00:54:43.918 - 00:55:30.676, Speaker B: I think it comes down to incentives. I don't think there's any right or wrong way to do any of this. The question is, how are you building this in a way that aligns the incentives of the people that are using your thing properly? So I think maybe without pointing out any individual company, because I think it's easy to get lost in the weeds here. Ultimately, I think one solution, maybe like the most crypto native solution, is, well, okay, you should do a token. If you have a token and not financial advice, speak to your lawyers. I'm not telling you to do tokens or anything like that, but I will describe the interesting effects that tokens have in theory on open source software. And maybe the whole point of a token is to get a bunch of people around the world to care about a given piece of software that they otherwise wouldn't care about.
00:55:30.676 - 00:56:28.634, Speaker B: That's really kind of what it does. And there's some other stuff like, you know, support assistance and stuff like that, but it's about contributing value to a network of some sort. That network might be a group of validators or miners around the world. That network might be a group of NFT creators and launchpads and marketplaces. That group might be a decentralized exchange and a set of market makers and a set of uis that are operating, all operating this thing independently. And in theory, this is really hard in practice, but in theory, you reward people with that token proportionally to the value that they are creating for that network. That is the theoretically optimal way to create open source software on a blockchain where you have the ability to bootstrap network effects and you have the ability to sustain something for a long period of time while minimizing kind of conflict at the social layer because, you know, the people that matter are indeed getting rewarded properly.
00:56:28.634 - 00:56:47.762, Speaker B: Right. And I think that is maybe like a really good way to think about it. Now, in practice, it's really hard to do this, right. Um, especially if you have mining mechanisms inside of a smart contract, right. Cause they can be gamified, they can be civiled. Like, you see this, like liquidity mining all the time. People just like, emit a token, then dump it on the market, and it goes down to zero.
00:56:47.762 - 00:57:29.338, Speaker B: And then people, you know, don't care about it, right. But in theory, this is how it should be set up. And you see this with l one s quite effectively where l one, tokens, I think, are super important because, I mean, putting aside the securities analysis, which is a super important separate thing, but this is maybe one of the most important areas to experiment on. And I think one of the reasons why we don't see this happen so much is because all the legal uncertainty and a lot of the really smart people that I think can innovate here simply don't want to because they're afraid. I've never created a token, but I probably would if I felt like there was good rules for it. Because I'm an engineer, I want to live in the US, I'm an american. I just don't know what the rules are.
00:57:29.338 - 00:57:59.592, Speaker B: And so I've just taken the stance that, all right, I'm not going to create a token because I'm scared, and I'm not going to innovate on this. Really important place to innovate on. And so I think that is a really important topic, a great solution to open source software, to be honest. And where you see a lot of the problems is when you have people that are creating a bunch of value, not have any say in the value that they're creating. And this isn't specific to tokens. Right. You see this in companies, you see this? This is why you get forks of networks.
00:57:59.592 - 00:57:59.976, Speaker B: Yeah.
00:58:00.000 - 00:58:13.044, Speaker A: This is uber. This is waze. This is any. This is the self checkout line at the grocery store. Right. This is anything where you're outsourcing a function of labor in exchange for someone else's value.
00:58:13.164 - 00:58:48.600, Speaker B: Yeah. And it all comes down to incentives, I feel. And so, should there be a standards body like you suggest? I don't know, but I think that this is like, incentives really is the main problem. And I think with nfTs, you see this on Ethereum, right, where the biggest marketplace, opensea, they create the smart contract because they're incentivized to do it. Right. That's open source and people see it, but their business relies on it and people forget that's how open source tends to work. It's not like, oh, we're going to do open source because we want to feel warm and fuzzy inside.
00:58:48.600 - 00:59:15.054, Speaker B: It's, well, we do open source because we need a bunch of people to buy in and we need a bunch of independent entities to all agree that this is indeed the standard. And I'm not going to have my business rely on Kubernetes unless I think that Google is going to properly run it and not take me out. Right? Yeah. And that's ultimately, I think, how you get sustainable functions of these kind of shared pieces of software.
00:59:15.174 - 00:59:24.150, Speaker A: Yeah, I think that's really interesting in the context of the way that you and the team there have started going about building something like backpack.
00:59:24.222 - 00:59:24.454, Speaker B: Right?
00:59:24.494 - 00:59:35.948, Speaker A: So anchor, it should be no surprise to anyone, is in part funded by just a public goods grant from the Solana foundation because no one should be monetizing something like anchor directly.
00:59:35.996 - 00:59:36.156, Speaker B: Right?
00:59:36.180 - 01:00:18.716, Speaker A: It's an indirect monetization thing, but something like backpack fully open source wallet, fully open source, standard, zero moat there when it comes to like a code and technical base. I'm curious how you think about that decision to build a business that way. Right? There are many wallets out there that are closed source and have monetization strategies behind them. There are a few that are open source and have monetization behind them, but most of the time that is through MEV or some sort of secondary channel for that. So especially in this economic climate, in a time when it's very hard to raise capital, what's the pitch to build something like backpack open source?
01:00:18.900 - 01:00:33.818, Speaker B: So, I mean, quick clarification, because I know there will be a bunch of pedantic folks listening to this. Technically, backpack is not open source, it's source available, if you care about that language. The license is not like Apache two or GPL. The license is for non commercial use.
01:00:33.946 - 01:00:35.642, Speaker A: Okay, that's a very good clarification.
01:00:35.738 - 01:01:05.160, Speaker B: For me, it really comes down to this point of consistency and honesty and like, being consistent with like, what you're building. If. If I were not in crypto, backpack would probably be closed source. And it basically boils down to the wallet being the single point of trust. It's the most trusted piece of software in the entire stack, basically. I mean, there's other points that are equally important, like the smart contracts and the base layer. But the wallet is really where things can go wrong, where you can basically, if you're doing self custody.
01:01:05.160 - 01:02:07.684, Speaker B: If the wallet has a bug in it or if the developers are malicious or anything like that, then it can basically just rug you. And so for me, it's all about just consistency and honesty, right? Where if we're going to be in crypto and if we're going to take the stance that self custody is important, then in the same way that a smart contract for a DaO needs to be open source and not open source, the source needs to be available so that you can actually see what you're voting on. So that, you know, if you're upgrading on a byte array, right. You need to know that byte array represents exactly what it is, right. Otherwise it's all smoke and mirrors, right? And it's really the same ethos, I think, where it's all about just consistency and honesty and eating kind of your own pudding, right? It's just like if you're going to advocate for self sovereignty and decentralization and asset ownership, and if that's going to be the product that you make, well, it's not very honest. If that product, if you can't see the code, it really comes down to that. Otherwise, you know, I'm a big believer.
01:02:07.684 - 01:02:14.944, Speaker B: You write your code, you can do whatever you want. Companies are made to make money, that incentives are everything. It's just about honesty, I think, and consistency.
01:02:15.124 - 01:02:46.058, Speaker A: You were talking earlier about the idea that what would happen if there was something in blockchain built where one entity controlled the whole stack and really focused on user experience. When you're talking about anchor backpack and now mad lads, there is a stacked progression there where we're going from very general to more specific to an actual consumer facing application. Was that intentional or is that just sort of the way it made sense to build things?
01:02:46.186 - 01:03:20.838, Speaker B: Yeah, I mean, both. Like, I don't think when I created anchor, I said I was going to build x nfts and backpack and mad lads, but I think it was a very natural progression where you're thinking. I was thinking to myself, well, what are the important problems to solve? And it made sense to go up the stack. I think at the time, coming into Solana in 2020, it was all about getting developers and bootstrapping an ecosystem. And I was like, all right, this is the most important, like, way I can contribute. And it was also just like a gaping hole in the ecosystem. And then with backpack, it was very much like, well, demand is the most important thing.
01:03:20.838 - 01:04:07.906, Speaker B: Now let's focus on creating demand and building a consumer application so that the entire world can use crypto in their day to day lives. And then with mad labs, it was very much a combination of like, okay, well, we have this xnft protocol. We need to dog food it ourselves. Nfts seem to be this very unique social kind of technology that came out of crypto and that is uniquely created by crypto. In order for us to get insight into that, we probably need to go through that exercise of creating one of these communities so that we can truly understand what we're building and who we're building for. And it was very much a natural progression. And I think what this allowed us to do is to think about the product in a full stack manner.
01:04:07.906 - 01:05:19.036, Speaker B: And I think the best example of this is soul abstraction. As a quick TLDR for folks that aren't following my Twitter sole abstraction is this interesting protocol that we've made that requires three things. It requires XnFts, it requires a smart contract wallet, giving you account abstraction and soul binding, and it requires a UI client side wallet. The use case is basically I can, as an independent external entity, airdrop arbitrary assets really on Solana. But honestly, you can work on arbitrary blockchains and airdrop them onto a single NFT community and align it to that community in a way where the incentive is inextricable. And it's like, wait, what does that mean? So there's this problem where NFTs are these attention machines. You have things like mad lads, things like bored Apiac, Club d gods, kleinosaurs, where you have 10,000 pieces of art, hopefully 10,000 people all around the world that are all incentivized to work together to create these decentralized brands.
01:05:19.036 - 01:06:12.090, Speaker B: And this narrative around the intention economy on social media has really been picking up steam. A lot of folks are now marketing to these NFT communities. You see this with mad lads, for example, like zeta markets, Cypher Protocol. A bunch of these other Defi protocols are now trying to convince the mad lads to use their products and protocols, so they're marketing to them. It's a classic use my product, get some reward system. And so NFTs, from this point of view, are really valuable kind of institutions, for lack of a better word, to market to. And so if you want to do something like airdrop, a token or a game asset, or give a discount on your pizza shop, how do you do it? Right? And so one way of doing it is to airdrop to the wallets directly to each individual holder of that NFT project.
01:06:12.090 - 01:07:19.346, Speaker B: Now, the problem with this, the reason why you actually don't want to do this is because it decouples the incentive from the NFT project together, right? So it's like you have this mechanic where you airdrop to the holders, then the holders dump the NFT, and then now the collective group is now separated, and you want to keep that collective group together, because if you take the view of the world that we're stronger together than we are separately, then that's a good thing to keep in mind. And so, soul binding rewards to an NFT project is pretty valuable. But the challenge is, how do you build this? So you have these protocols like ERC 6551 that have been created on Ethereum, where you have the NFT as a wallet. But now the challenge with this is, well, if you have the NFT as a wallet, what are the assets that are being given to those NFTs? You have tokens and NFts. These are the two asset standards that are in all wallets today. But there's a lot of other assets, right? There's like, you know, vesting accounts, there's like unique game assets. Like Aurora, for example, has their like, DNA protocol.
01:07:19.346 - 01:09:17.274, Speaker B: You have competing implementations, you have like defi protocols, you know, liquidity pools, things like this, right? There's like this long tail of asset standards that people might want to do, particularly if the whole point is to, well, target market to a given NFT community to get them to try out your product, right? So if zeta markets wants to open up perp positions and give it to an NFT community, because, I don't know, they want them to learn about how to, I don't know, go long and short, different kind of markets. That's something that can be done. And it's like, well, how do you do all this? How do you permissionlessly airdrop arbitrary asset standards in a safe and secure way to NFT communities as a whole? This is what sole attraction basically allows you to do. You have at the base layer you have xnfts where, okay, if you wanted to do tokens and nfts, you don't necessarily need xnfts, but if you want to do a vesting account and break out of that kind of mold, then you need this portal into the asset, into the data representation on chain. So xnfts are needed to have arbitrary assets, and then you need account abstraction and soul binding at the smart contract layer. So this is like where anchor would come in, where you need to build a smart contract that basically revokes and maybe without getting into all the technical details, Solana's got some unique properties at the runtime that allows you to revoke signing authorization and do an opaque CPI safely and securely, where the signing authorization is scoped to that given XNFt that's being used. And then at the top level of the stack you have the wallet, which basically is required to basically see what you're signing again, leveraging Solana's unique runtime capabilities where you can actually see what program you're using, see what you're giving mutability and signing authorization to, and then make a safe smart contract call from the client with your private keys to the smart contract, and then interact with that XnFt in a full stack way.
01:09:17.274 - 01:09:44.705, Speaker B: And so, you know, this is a long winded way of getting back to the original point, which is like, yeah, if you kind of tackle the entire stack, if you leverage the unique runtime capabilities of Solana, have a nice framework like anchor for building these smart contracts safely, securely and quickly, and then have a wallet to be able to leverage all of these things, you can build magical things that have never been done before. And I think that full stack approach is quite compelling.
01:09:44.889 - 01:10:58.196, Speaker A: It's interesting to hear you talk about this in this way, because airdropping tokens is sort of very similar to dropping an instruction set, right? There's sort of these like, there's a lot of like bad kludgy analogies we can get into here, but it's sort of like, oh, I can press a button on a mechanical computer and a thing will always happen, right? But the minute you're able to actually build just the smallest amount of programmability into that system, you get variability. And variability means fungibility, and fungibility means you can create all sorts of different types of experiences where if I press the button, something else might happen and I can control what that something else is that happens. And the way you're talking about soul abstraction here, it's very similar from a mechanics unlock standpoint of we can do one thing at a time, we can do multiple things at a time, we can now the same way with XNFT, you're talking about like we are building a entirely interactable front end into an NFT. And with solo abstraction, you're taking the concept of airdropping an asset and replacing it almost with airdropping something similar to a program. Is that a reasonable analogy?
01:10:58.340 - 01:11:29.922, Speaker B: It's a much more elegant analogy in description, to be honest. Nfts and tokens and airdropping have all these negative connotations with it because of all the frothy bubble behavior that we see in the markets. But ultimately this is what it is. You're airdropping code safely and securely and permissionlessly to communities. What that unlocks is so much more powerful than just airdropping some currency to people. It's really an instruction set, and I think that's a much more elegant description.
01:11:30.098 - 01:11:32.418, Speaker A: Is there a mad lads for sole obstruction coming?
01:11:32.546 - 01:12:01.490, Speaker B: Yeah, there is. If you open up backpack and you click on your mad lads, what you'll see is you'll see a UI for staking where you stake and you get some loyalty counter that just starts accumulating. That is the first step to the system. So the smart contract is basically done, but the next step is that inventory view. You can think of World of Warcraft. The product we're building basically is. It's like a World of court Warcraft inventory view, where you can airdrop items onto your World of Warcraft character.
01:12:01.490 - 01:12:43.424, Speaker B: And each one of those items gives you a quest. That's basically what it is. And that quest might be a vesting account, it might be a game, it's just an instruction set. It's whatever it is that you want to do on a blockchain or that somebody else wants incentivize you to do. And so I imagine use cases like, I'm going to lollapalooza and I am walking to the concert and then somebody air drops something to an NFT community that says, here's a map of Lollapalooza. Here are all the different things that are happening, the different stages, the different musicians come to these booths and do X, Y and Z, right. These really open ended experiences that can be tailored to a given community.
01:12:43.424 - 01:12:48.276, Speaker B: But yeah, we're building this and this is more or less going to be the mad lads xnft.
01:12:48.460 - 01:13:11.474, Speaker A: So maybe last question. How do you tune out the noise and the craziness of building in blockchain so you can actually build in blockchain? And what advice would you give someone who is starting out as an engineer and they want to sort of think about doing something similar, but all they see on Twitter is everyone's mad. Money's hard to come by.
01:13:12.014 - 01:13:48.974, Speaker B: Yeah, it took me too long to learn this, I feel, but there's actually not that many people that are shipping stuff from the outside. It feels like everything is built already. Everybody has all these really incredible ideas, like there's no good opportunity or business. But if there's one thing I've learned, I feel from my time in Solana, it's like just build the obvious thing. It turns out that there's not that many people that are doing it, and it's mostly just people on Twitter trying to scare you away from building stuff. It's really as simple as that. So if you're an engineer, I mean, there's really.
01:13:48.974 - 01:14:11.248, Speaker B: There's such an incredible shortage of really passionate kind. Definitely shortage of kind people, but really passionate and skilled builders. And so if you're looking for stuff to do, there's just like an it. Like, I can just talk for days about stuff to build. I feel just go for it. Honestly, like it. Especially if you, like, have confidence in your abilities as, like, a dev.
01:14:11.248 - 01:14:34.354, Speaker B: If you're just, like, trying to, like, learn programming, then it's probably a different thing. But, you know, there's just not that many people. And I feel like opportunities are endless. And it's really easy to, like, look at things. Like, a wallet is a great example. There's a million wallets. It's, why would I build another wallet business? But it turns out there's tons of places to innovate.
01:14:34.354 - 01:15:04.624, Speaker B: Backpacks shouldn't scare you from building a wallet. You should build one. It's less about the starting point and much more about how you evolve over time and as you learn about the problems that need to be solved and adapt and figuring out where you end up. And I think that is maybe the most important thing, is just like, get out there, get started, start building. There's not that many people doing it. You'll learn a bunch of stuff along the ways. And it's not about the starting point, it's about the ending point.
01:15:04.624 - 01:15:06.484, Speaker B: And I'll leave it at that.
01:15:06.784 - 01:15:11.816, Speaker A: Well, Armani, thank you so much for joining us today here. This was a great conversation.
01:15:11.920 - 01:15:13.444, Speaker B: Yeah. Thank you so much, Austin.
01:15:16.994 - 01:15:26.114, Speaker A: Validated is produced by Ray Veli with help from Ross Cohen, Brandon Ector, Emira Valiani and Ainsley Medford. Engineering by Tyler Morissette.
