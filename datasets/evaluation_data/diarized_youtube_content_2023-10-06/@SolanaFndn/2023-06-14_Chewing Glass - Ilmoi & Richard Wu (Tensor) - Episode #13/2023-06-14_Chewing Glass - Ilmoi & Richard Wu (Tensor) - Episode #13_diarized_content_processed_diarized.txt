00:00:00.440 - 00:00:01.406, Speaker A: If we can't talk to each other.
00:00:01.430 - 00:00:02.422, Speaker B: We'Re not gonna make it.
00:00:02.518 - 00:00:05.150, Speaker C: Sometimes I feel like I've bitten off.
00:00:05.182 - 00:00:06.294, Speaker B: More than I can chew.
00:00:06.414 - 00:00:10.062, Speaker A: Most of the time, I work in a glass jar and lead a very uneventful life.
00:00:10.198 - 00:00:12.726, Speaker B: A face full of glass hurts like hell when you're in it.
00:00:12.790 - 00:00:13.294, Speaker C: That's weird.
00:00:13.334 - 00:00:17.954, Speaker A: That glass looks half full to me. Eating glass. Eating glass is staring into the abyss. Glass.
00:00:18.574 - 00:00:20.094, Speaker C: Who gives a shit about glass?
00:00:20.174 - 00:00:21.434, Speaker A: Who the fuck is this?
00:00:22.774 - 00:00:25.914, Speaker C: It's kind of part of our culture to eat glass.
00:00:26.894 - 00:00:29.274, Speaker A: Gotta get some safety goggles next time.
00:00:38.374 - 00:01:07.936, Speaker C: Hey, everybody, and welcome to Chewing glass, the show where we speak to developers building in the Solana ecosystem. Today we have a couple guests. Great guests. We have Ilmoy and Richard from tensor. Super excited to have you guys. Lots of stuff going on in your world. I'm sure you're busy as hell right now, but it's great to grab some time with you and have you guys on the show to sort of just talk about your journey throughout this whole wild world of crypto and Solana.
00:01:07.936 - 00:01:21.240, Speaker C: So just to sort of kick it off, we'll just go from, for you, Ilmoy first, and then on to Richard. Is just to get know you guys a little bit better. Is like, so how did you, how did you guys get involved in software?
00:01:21.432 - 00:01:51.664, Speaker A: Yeah, so I'm a self dot de v. I didn't go to school for cs, but it was always something that I dabbled in. I did biology, and then I did finance and just kind of wrote scripts here and there. And then at some point, there was just a point in my life where I said, okay, you know what? I actually want to try and become an engineer. So I just quit my job and actually moved in with my folk for a couple years and just coded straight for two years. And so, yeah, I guess that's how I got involved in software.
00:01:51.824 - 00:01:53.844, Speaker C: So how long. So how long ago was that?
00:01:54.304 - 00:01:56.524, Speaker A: About three and a half years, just under.
00:01:56.824 - 00:02:16.312, Speaker C: Oh, nice. So just straight up self taught engineer. Like, I mean, we're seeing a lot of, we're seeing a lot of that lately, actually. One person on the developer relations team is also totally self taught and, like, is like, like a rust wizard now, so it's pretty cool to see. So how about you, Richard? How'd you get started on your software journey?
00:02:16.448 - 00:03:10.464, Speaker B: Yeah, I would say I went more sort of the, the traditional way, you know, took a bunch of CS classes in high school, at least where we are, you know, you can take Cs electives in high school, teach you the basics of programming. So you learn like for loops, you learn what a stack is, what a queue is. Took that all throughout high school. In fact, I was actually initially thinking of becoming like taking biology. It's funny how biology, I was actually thinking of like going into the sciences and, you know, eventually going to medical school because that's what like, I mean, like stereotypically, that's what like chinese parents want is, you know, a doctor, doctor son. But it's that last minute to actually go into software. So I went to university for a software degree, took, you know, cs, actually later transitioned more to a math focus and did a bunch of statistical courses.
00:03:10.464 - 00:03:25.324, Speaker B: When I graduated, I actually did took a more research, math focused role as a quantitative research at a hedge fund. But I was still doing a lot of coding then and I'm still doing a lot of coding now.
00:03:25.904 - 00:03:48.754, Speaker C: Cool. Same format. I'm going to go in the OR. I'm actually going to start with you this time. Richard is like, so you guys were both completely different stories of how you actually got into software. What was your sort of journey? Like, what kind of companies were you working for? Like, what kind of like software languages were you developing in, like prior to like this point in time?
00:03:49.214 - 00:04:39.034, Speaker B: Yep. So I went to this, I went to a school called the University of Waterloo up in Canada. What's special about Waterloo, specifically for a lot of their engineering programs and CS programs, is that almost everyone takes what we call co op terms or internships for the rest of the world and we basically end up doing four to six four month internships at a number of tech companies. So for me, my first internship was at Shopify, which is a very big tech company now in Canada. My second internship was at Google down in Mountain View. My third internship was at a startup called Cockroach Labs. They build distributed SQL databases that automatically essentially shard and you don't have to think about sharding your SQL database ever again.
00:04:39.034 - 00:05:04.906, Speaker B: Then my last internship was at a hedge fund called Citadel. I'm sure most people know about Citadel from the Robinhood meme stocks saga there. I was actually doing more quantitative research. So my first three internships was software engineering internships and my last internship was doing quantitative research. And that's how I decided to do quantitative research full time right after I graduated.
00:05:05.050 - 00:05:13.338, Speaker C: So when you were doing those internships, what kind of coding were you doing? Were you in Python or what were you working with?
00:05:13.506 - 00:05:56.606, Speaker B: Yeah. So at Shopify I was mainly doing Ruby on Rails and I guess Ruby Bash, maybe a bit of JavaScript, a bit of HTML because Ruby on rails had a couple of HTML bits to it. It's not like react nowadays at Google it was more low level, so it was c, it was a bit of golang. At cockroach labs, everything was in Golang. And then at Citadel did mostly python. And also at two Sigma, which was my full time job after I graduated, also did a bunch of python and a bit of Java.
00:05:56.750 - 00:06:19.154, Speaker C: I'm actually really interested now to hear Ilmoy's story because, like, coming from sort of a non traditional software background and like, sort of like hanging out, living with your parents for a bit and just like teaching yourself to code, like, what's your software journey? Did you sort of just work privately or were you working for companies when you were teaching yourself to code? Or like, what did that look like for you? And like, what were you sort of mostly doing?
00:06:19.534 - 00:06:55.324, Speaker A: Yeah, the good thing about jumping into coding when you're a bit later into your career is that you don't feel the need to work for somebody. Hopefully you have a bit of money saved up and so you can just work whatever you want to work on. And so for me, my entry point was Python and data science. That's pretty natural when you're coming from like finance or biology, because there's a lot of data to look at. And so that's the thing that gets you excited about coding. That's the thing that you first think about. So, yeah, I did a bunch of python, kind of explored data science, quickly figured out I didn't have enough brains to do like serious ML, and I was like, all right, I'll just jump into web app development.
00:06:55.324 - 00:07:34.880, Speaker A: And so what I then did was because I had all this, like background from my previous jobs where I was a product manager in like machine learning related things. I basically thought, well, one thing that missed or like, lacked in my previous workplaces was like a simple service to spin up a GPU that I could spin up within a minute and just start coding in a Jupyter notebook. The first project I built was this thing called GPU Land. Literally, the website was GPU Land. And you would go there. It looked like an eighties website. There was one button to sign up, and when you signed up, there was one button to pay.
00:07:34.880 - 00:07:41.584, Speaker A: And when you upload a $10, you could spin up a GPU with another one button. There was nothing else there. You really didn't go wrong.
00:07:42.844 - 00:07:44.944, Speaker C: You guys like simplifying things?
00:07:45.364 - 00:08:09.064, Speaker A: Yeah, well, some of our users might disagree when they look at the platform. I guess that's definitely the aspiration. And so, yeah, that was it. And actually, the product was relatively successful. There's like, a thousand likes on Reddit, on the machine learning forum, and a lot of people use that. And I kind of kept it going for, like, maybe a year. I was basically, like, renting GPU's in, like, cheap data centers and then making them available on the service.
00:08:09.064 - 00:08:50.414, Speaker A: And because I wasn't making any money, it was like a total DevOps nightmare and also a total anti fraud nightmare because people kept renting these and mining bitcoin with stolen cards. Perfect. Eventually, I shut it down, but that gave me really good experience because I built basically a full stack app with pretty serious DevOps behind that. And, yeah, I guess because I was always interested in finance and games, crypto was a very natural attraction for me. And that was also the time when other, like, new blockchains were popping up and I kind of got sucked into the crypto rabbit hole building stuff, first on Ethereum and then on Solana, and then, yeah, I guess ended up here.
00:08:50.794 - 00:09:22.106, Speaker C: Yeah, that was sort of like, what I was about to lead up to. So it's sort of like the perfect segue, but, like. But before that is, like, what was your sort of, like, entry point into crypto? Not into, like, development or any of that stuff, but, like, did you, were you were, were you, like, aware of it? Were you buying it, was there? Or were you just, before you bought anything, you just started building own blockchain? Like, how did it work for you? Buy some Ethereum, buy some bitcoin? Or did you. Not interested at all. How was that?
00:09:22.250 - 00:09:33.910, Speaker A: Yeah, so I bought ethereum at the peak in 2017, I threw $5,000 in, and my manager at the time told me that I'm an idiot and I'll.
00:09:33.942 - 00:09:35.030, Speaker B: Never see that money again.
00:09:35.142 - 00:09:54.390, Speaker A: And, I mean, he, frankly, wasn't wrong at the time, but what he didn't realize was that I would also forget about this crypto account for basically four years. And lo and behold, I opened it during the bull run in 2022, and at $5,000, actually became $10,000, even though at some point basically went to, like, 500. Right.
00:09:54.502 - 00:09:56.634, Speaker C: Did you send a screenshot to your manager?
00:09:57.074 - 00:09:59.014, Speaker A: No, I didn't. I should have.
00:10:00.194 - 00:10:13.506, Speaker C: Hey, it's never too late. How about you, Richard? Man? Like, what was your sort of first intro into crypto? Like, you were doing some internships and stuff? Like, were you, like, interested in crypto? Like, in those pre building own blockchain days, I would say.
00:10:13.690 - 00:10:48.954, Speaker B: I mean, I had, like, glimpses of crypto. So I went to Waterloo, which is the school that Vitalik actually went to. And so Ethereum was a pretty big thing back when I started school, because it was right around the time that Ethereum started. I was there in 2015, and that was shortly after Ethereum, the white paper came out. And so there were a bunch of people talking about crypto, but I had no interest then. I was very focused on tech, changing the world. Crypto was sort of this random, obscure thing that I didn't really pay attention to.
00:10:48.954 - 00:11:44.064, Speaker B: It wasn't until when I went down to the Bay Area for my Google internship in 2017, and that happened to be the time when Crypto was going crazy, that I just hear people in the Google cafes talking about crypto. One of my friends from Waterloo, who I was interning with at Google, actually brought it up and said, hey, I just bought a bunch of Ethereum on Coinbase. He mentioned that it's going to change the world. People are going to start programming on this decentralized blockchain, and everything will be fine and dandy. I sort of bought into that, bought a bit of Ethereum on Coinbase, actually bought right before the big bull run and got out with a decent profit, but that was the end of that. I didn't touch crypto after 2017 until basically when I met Ilmoy. That's when I started to get back into crypto again.
00:11:44.204 - 00:12:01.288, Speaker C: So you guys, did you guys meet, like, and got involved in Solana at the same time, or was it totally separate? Cause, like, the really what I. What I wanna, like, understand is, like, what got you interested in Solana? And sort of curious if that happened, like, together, or if it was sort of just separate.
00:12:01.456 - 00:12:32.976, Speaker A: Yeah, I mainly went with Solana because of the really handsome Chad founder. I think that's basically the main reason. Yeah. So, no, in all seriousness, though. So when I first got into Ethereum development, I was basically terrified because I thought that the programming environment was trash. It was really hard to work in, and obviously me at that point, being like a one year old professional developer, so knowing everything, it was hard. I just didn't like solidity.
00:12:32.976 - 00:12:55.832, Speaker A: All the tools fell backwards. And the other thing was, I struggled to see how you could build a really smooth application because everything was very slow. Clunky. Metamask was clunky. And that's when I started looking around and kind of thinking, okay, maybe there's something else. And Solana was basically the only blockchain that kind of really grabbed my attention. And that was because how did you.
00:12:55.848 - 00:13:14.424, Speaker C: Even find out, how did you even, like, like, hear or find out about it? Because, like, when I met you two years ago, and I just, like, started working here, like, people didn't really, not a ton of people knew about what the hell was going on or even how to build on Solana at all. So, like, how, how did you even, like, hear about it in the first place?
00:13:14.764 - 00:13:42.894, Speaker A: Yeah, it's pretty unsexy. I just went down the list on coin market cap, and, you know, like, this chain was like number seven, or I click on it, see what it is, see what the programming environment is like. But to be honest, like Solana. So I was going to say I really enjoyed, I like the fact that it was rusty and I wanted to learn rust. I liked the fact that it was paralyzed and so it was a lot faster. I played around with some of the apps like radium and serum at the time, and I thought they were really smooth. I liked that a lot.
00:13:42.894 - 00:14:26.696, Speaker A: And I think the other thing that I saw is that there seemed to have been, like, really organic excitement around Solana where you would go into discords and you saw people, like, just excited to build stuff, and you could feel that this wasn't paid for excitement. This wasn't some sort of thing where because the foundation gave somebody money, they were doing this. And that wasnt necessarily the case when you went to some of the other blockchain discords and those felt a bit more dead and a bit more quiet. And I think I basically decided that Solana was going to be it. Bought a book, and rust learned to program. It took forever to build my first smart contract, which was a on chain lottery. And, yeah, the rest is history, I guess.
00:14:26.880 - 00:14:56.990, Speaker C: No, that's awesome, man. Yeah, like I said, for the viewers, we met each other in discord probably two years ago, just talking about random stuff, asking if I could help them find a co founder. Sort of like seeing each other on the twitterverse, and then all of a sudden, now here they are. But we'll get to that here in a bit. But Richard, how about you, man? Did you get pulled in by Ilmoy onto Salon? Did he come and snag you up? Or did you sort of land here on your own, or how did that work out?
00:14:57.152 - 00:15:51.000, Speaker B: Yeah, I would say for the large part it was Ilmuy and basically me looking for a co founder and him being on Solana, that convinced me to start looking into Solana and start building on it. I'd say, like, before that Solana was on my radar just because a lot of the. I had a couple of colleagues at two Sigma where I was working before I decided to work on tensor, and they had heard about Solana because it was very big amongst all the trading firms. So obviously, jump is a huge factor of it. At the time, Alameda and FTX were huge backers of Solana. It was seen as the blockchain for anything sophisticated when it comes to defi, when it comes to trading. And that really piqued my interest, because what I did at the time, day in, day out, was predicting stock returns and trading related research.
00:15:51.000 - 00:16:50.056, Speaker B: And so Solana was very interesting because it had sub 1 second confirmation times, which makes a lot of sense if you're trying to build a blockchain that could scale to handle thousands, if not eventually tens of thousands of trades per second. And it seemed like Ethereum was definitely not going to make it there for a really long time. A lot of the other blockchains that I looked into, I think one was like, ripple was more on with payments. And then there was this whole SEC lawsuit, which kind of scared me a bit. Cardano, which I think at the time, when I looked into it, didn't have smart contracts, which was kind of interesting. And there are a number of other blockchains that had a bit of buzz around it, but didn't really have the almost cachet that Solana had amongst the trading folks. Obviously, when I met, oh, Moi, he mentioned that he was building on Solana, and that kind of, like, sealed the deal for me to, you know, start.
00:16:50.056 - 00:16:51.644, Speaker B: Start working with him on Solana.
00:16:52.344 - 00:17:07.496, Speaker C: So did you guys, like, before we get too deep into, like, tensor, before that, did you guys attempt any other thing? Or was it like NFT marketplace out of the gate? Or did you guys go through some iterations on ideas?
00:17:07.680 - 00:17:59.614, Speaker A: Yeah, the first idea was not a marketplace. It was nFts, though. First idea was an oracle for NFT pricing. Our hunch at the time was that NFTs would financialize in all kinds of interesting ways, and that for most of those ideas, you basically needed a robust price feed available on chain. And so we decided to hack together a simple oracle that would parse historical NFT sales transactions and do a bunch of statistical magic to try to make the price hard to manipulate and relatively stable. And then we connected that to a oracle on chain. We used switchboard on Solana, and, yeah, basically made it available to protocols, lending protocols, derivatives protocols, to build NFT products.
00:17:59.614 - 00:18:13.344, Speaker A: That was a little bit premature at the time. Looking backwards, I think the market was not ready for that. And of course, now it's obvious, but back then it was not. But I guess that first project, which probably took us about a month, was how we first started working together.
00:18:14.164 - 00:18:53.968, Speaker C: Yeah. So, like, what was the actual, like, obviously the, there was a handful of NFT marketplaces already existing. Like, it started with Solanard and then there came some, nobody thought that they were ever going to lose. And then a couple other ones popped up and, and then next thing you know, there's magic Eden. And, and like that, that landscape, you start to see a lot of people talking about building out NFT marketplaces. Pretty competitive sort of landscape to jump into. So, like, what was your sort of inspiration to, to be like, you know what? Fuck it, we're going to go ahead and build an NFT marketplace even though that there's competition that nobody thinks can lose right now.
00:18:54.096 - 00:19:33.472, Speaker B: Yeah, we definitely entered a very, very competitive landscape, especially given all the opportunities we had on Solana. Like, it was probably the most competitive thing that we could have built within nfts. In hindsight, maybe we shouldn't have tried to. They say competition is for losers. Maybe we shouldn't have tried to compete. But I think one thing that really stood out to us when we were trading on the existing marketplaces, like magic Eden, like Solenart, like hyperspace, was that as an NFT DJN who wanted to sweep a bunch of mints for these, I think at the time it was like, okay, bears was minting. Then there was like trippin apes, which was really big.
00:19:33.472 - 00:19:47.384, Speaker B: Like, these new mints had a lot of activity going. Like, had a lot of velocity when it comes to trading. And it was very difficult for us, like, like human clickers, like click, like.
00:19:47.424 - 00:19:49.168, Speaker C: Hit a button, do a thing, like.
00:19:49.256 - 00:20:32.384, Speaker B: Like click sign on the wallet, you know, wait for it to simulate, you know, all of that stuff, right? That was like just way too slow, especially right after the mint when these NFTs were just flying off the shell. And we felt that this experience could be so much better. We thought about our experience with trading on binance, trading on different centralized exchanges, and we knew that it could be so much better. We knew that data could come in much faster. Everything could be near real time, if not real time. Listings could update. Like, given how fast Solana is, in theory, listings could update every single block and the user should be able to see the latest listing that happened in the latest block.
00:20:32.384 - 00:20:45.484, Speaker B: And so we wanted to essentially take the centralized exchange trading experience and bring it to nfts because we identified this pain point that we ourselves faced. And a lot of other people, a lot of other people face it at the time as well.
00:20:45.644 - 00:21:13.410, Speaker C: Yeah, I mean, like, that's awesome. Like, you, like, I think I tweeted about it recently. I don't really trade. I'm not, like, a super big NFT to Jen, but, like, I finally started using, like, tensor around, like, the mad lads sort of mint, and I was just like, holy shit, this is, like, this is incredible. So it was a really cool experience, just like I said. I'm like, oh, I don't have enough minutes in the day to try every product out there. And then, like, madlads came around, I'm like, all right, let me check out tensor.
00:21:13.410 - 00:21:53.362, Speaker C: And I was like, this is great. So, like, well done. I guess one thing that would be really good to sort of understand is, like, you built this really incredible product. Like, what was your experience, like, building on, like, Solana throughout this whole process? You know, you have this incredible product, like, how. And we're sort of, like, focusing here on, like, the developer experience for you guys. Like, did you have everything you needed? Was it really hard to figure some of this stuff out? Was rust hard? Was the, like, Solana sort of programming model, like, challenging? Like, what, what was really, like, how was that experience building out tensorflow?
00:21:53.378 - 00:22:32.230, Speaker A: Yeah, I'd say it was a lot of chewing glass, pun intended. But in all seriousness, though, I would say that the on chain part, even though people from outside Solana think it's scary, is actually the easiest part. Like, writing the protocol. Yeah, there's a few gotcha seem to get here and there, and maybe using anchor for the first time is a bit unintuitive, but to be honest, you pretty quickly get the hang of it. And if you go into anchor discord and use the search box, there's, like, a 99% chance that somebody already asked the question that you have. So everything's at your fingertips. It's not super hard for us.
00:22:32.230 - 00:23:57.944, Speaker A: And for a product like tensor, the part that was actually the most difficult was the data infrastructure, because to make it as fast as it is and to make it process as much data as Solana is generating, you basically need to try a few different designs and patterns and ideas around data engineering. And that includes everything from how do you stream data? How do you package it? How do you store it? We're actually going through probably our third migration of data storage right now, where we just keep finding that the existing solutions don't scale, and we have to move up to more advanced data store types, I'd say if you're building something real time, especially with nfts, this is the other thing, right? So when you're building a DeFi product that only does tokens, the amount of data you'll have to handle is a lot less because all the transactions are very small, all the instructions are very small. There's no metadata, there's no images. So your data engineering infrastructure will be pretty thin. When you're doing anything at nfts, it's like the polar opposite, where maybe the instructions that you execute on chain are simple, like, it's just deposit or withdraw, but because the nfts come with a whole blob of data, each one, and you need to display that, update that, keep that updated with external sources, the amount of data engineering that you have to do is insane. And I think on Solana, compared to Ethereum, that's even larger because Solana is faster, so it generates more data faster, and you have to ingest and parse all of that.
00:23:58.924 - 00:24:33.568, Speaker C: Yeah, it's really interesting, especially the number one viewers of the. This show are mostly, like, developers, and it's always comes up, like, people get into crypto or they want to build on blockchain and they're scared and they don't want to worry about. They don't want to, like, try this new thing or think, like, I have to learn how to write a smart contract. But, like, when. When you talk to, like, the tensors of the world and a lot of other projects, they're like, we're good on the smart contract stuff. We don't need that. We need people that can build shit on the front end to scale this, like, smart.
00:24:33.568 - 00:25:00.928, Speaker C: I don't. I throw this out there. It's like 20 smart contracts was like, 20%, maybe less of the job. Everything else, like, you can come into blockchain and never write a single line of, like, smart contract code and just make that front end side of that. So performant and be in the space. And I don't think a lot of people really, truly understand that. Eventually, it would be nice if you, like, doing some front end stuff, make it more performant, and then you start to learn, like, how.
00:25:00.928 - 00:25:31.194, Speaker C: How the. You're talking to these smart contracts and maybe eventually do it. But you could go your whole life in web3 and never touch a smart contract. And I think this is something people don't fully understand. You can just be a react dev forever and be building in web3, and it's something that people really don't talk about a whole lot. But Richard, like, how about you? How was your, like, is your experience similar to Ilmois in terms of, like, building on Solana? Was it, was it the developer experience side of things? Was it challenging for you at any points in times?
00:25:31.494 - 00:26:00.586, Speaker B: I think I lucked out in that I had sort of ilmoi by my side when I started learning Solana dev. So once you have, like, someone who has done, you know, months of glass chewing on Solana when, you know, the developer ecosystem is fairly, you know, immature, now it's. Now it's like night and day. But, like, when Ilmoy started building, I'm sure, like, there were no docs on anything. You kind of have to figure stuff out either in discord or, like, in private telegram chats or what have you.
00:26:00.610 - 00:26:02.894, Speaker C: Just had to figure it out, man. Sink or swim.
00:26:03.714 - 00:26:20.154, Speaker B: Exactly. Which, which is good. I think that's an experience every developer should have, is having no docs and only source code to go through, and maybe having a handful of other devs working by your side where you just go back and forth with and try to figure things out together.
00:26:20.274 - 00:26:20.650, Speaker C: Right.
00:26:20.722 - 00:27:01.388, Speaker B: That's like a really good skillset to learn as a dev is being able to figure things out without docs. And so, like, you know, I had Ilmoy by my side and he basically just sort of, like, brain dumped everything he knew about Solana and, like, what to do, what not to do, what to look out for security. Like, security wise, what you should be doing with your anchor PDA's in order to ensure that no one can create a fake PDA and try to, like, you know, drain, try to pretend to be like, a signer, like, all of that stuff. You can't really, like, there's no books on it. I'm sure there might be some now, but there are no books on it initially of, like, what to do and what not to do. It's just like, you know, collection of Twitter threads by Armani and maybe a.
00:27:01.396 - 00:27:03.212, Speaker C: Couple other guys, basically. Yeah.
00:27:03.268 - 00:27:41.250, Speaker B: Like, tell you what to do and what not to do. So it was, it was really cool to have someone who knew all of this, who I could just ping with questions. I think going forward, like, there are enough developers and resources now that people can feasibly learn how to write a secure and good Solana smart contract by themselves. Like, in theory, you could even use some of the new large language models that are maybe trained on more recent data on Solana and just create a large language model to figure out how to write things a certain way on Solana.
00:27:41.442 - 00:28:20.760, Speaker C: Well, if more people would open source their smart contracts and we wouldn't even need smart contract developers anymore. You just start composing things together. That's like the future if everybody open source their code, of course. But so, I mean, like, that's cool to hear about. Your experience, I guess would lead into this sort of like, speed round of questions is like, what sucks about Solana? What sucks about developing on Solana? Just something that's like, maybe annoys the shit out of you or bothers you whenever you like, throughout your experience. Like, what's that thing for each of you?
00:28:20.912 - 00:28:42.584, Speaker A: I think right now Solana is in a funny place with getting developer help where when I joined, there was like an active discord, and you could go and, like, dump your question and somebody would pick it up and sometimes people would ignore it, but if you asked it enough times, they would, they would answer it. And I thought that was actually pretty effective. An anchor discord was the next place where that happened a lot.
00:28:42.624 - 00:29:00.924, Speaker C: It was effective. No, both scalable. Like the main, a lot of the time is like, the core engineers are in here answering the same question 25,000 times a day. An incredible use of engineering power. This is kind of why the shift to stack exchange happened, but it'll take a while before that gets filled out. But anyways, go ahead, continue.
00:29:01.004 - 00:29:14.548, Speaker A: That was basically what I was getting at, that the stack exchange makes total sense why that's the next logical move. And I remember, like, we had to, like, get enough votes to even get it going. But outside of that. Yeah, I can see your head shaking.
00:29:14.596 - 00:29:32.356, Speaker C: It was a, I mean, they shut us down once. They said it got bought it, which somebody probably tried to bought it to help us, but, like, they ended up canceling it. We had to start it all the way over again. Actually, they've, since then, they've no more. They've shut down all web through. You're not allowed to get another stack exchange for another blockchain anymore. They were like, we're done with blockchains.
00:29:32.356 - 00:29:35.464, Speaker C: So Solana has. Right? Solana is the last.
00:29:38.524 - 00:30:01.084, Speaker A: Yeah. So I guess, like, the stack exchange just needs to get a bit more populated, because right now it's, it's a bit empty and sometimes questions aren't answered. I will say this, though, GBD Four is actually surprisingly good. Like, actually no surprising amount of information about anchor and whatnot. Sometimes you can literally just copy paste the anchor error you got and it'll just, like, tell you, this is what's wrong. So if you haven't tried it, definitely try it.
00:30:01.424 - 00:30:31.414, Speaker C: Oh, nice I didn't realize that. I mean, I know that people have ran like some information, like on documents or like documentation that might answer some questions, but I didn't know you could get like more specific sort of dev related stuff answered honestly. So, I mean, that's, that's super cool. I have not touched GPT four yet. How about, how about you, Richard? What sucks about like anything on Solana, whether it's building or whatever, sort of just like comes top of mind for you?
00:30:31.954 - 00:31:36.316, Speaker B: Yeah, I think the worst part about, so we do a lot of like, data indexing because we're an aggregator and we have to essentially listen to all of these NFT marketplaces. So to give you an example, like, in addition to our contracts, you have to listen to Magic Eden's contract, you have to listen to Solanart, you have to listen to Haiti swap. If you listen to elixir. The biggest issue right now is that all these programs are upgradable, which means that someone could, in theory, change up the, essentially the IDL or the instruction interface. So one day they might add an additional instruction argument, or they might move the accounts around when you sort of call these instructions, which changes up how you're supposed to almost like parse and make sense of these instructions on chain, and that can break a lot of things for us. And sometimes this happens sporadically. I'm not going to point names to specific marketplaces, but let's say a marketplace that just launched, decided to move a bunch of accounts around, and now the buyer is in position five instead of position two.
00:31:36.316 - 00:31:50.464, Speaker B: And in order to figure out whether a certain wallet bought something from this marketplace, we have to go back, manually, inspect it, compare it to what's displayed on their website, figure out like, oh, okay, the buyer moved from position five to two.
00:31:50.924 - 00:31:51.372, Speaker C: Yeah.
00:31:51.428 - 00:32:25.424, Speaker B: And it's not really a nice way to handle this because everything is so low level on Solana and things can change underneath you. You're basically reading bytes, right? And you have to somehow, you know, interpret like, especially if they don't open source the contracts, you have to interpret like, oh, okay, this account looks like it's a buyer. This account looks like it's a seller. This instruction argument looks like it's a price. And it's a lot of like, annoying blast chewing and setting up a bunch of alerts whenever the contracts change and going back and retroactively fixing your parsing logic.
00:32:25.584 - 00:33:11.626, Speaker C: Yeah, I mean, it's a really good point. And it's like immutable. Being mutable means that it sort of screws up, like, composability, because you can compose all these things together, and then somebody can change something one day and it screws up the entire stack for everybody. So, I mean, it's a problem. Like, you see totally out there a lot of times advocating for just like, once you've had x amount of time of the smart contract with no real issues. It's, it's like Noah Prince did with his protocol. He was like, okay, I've had x amount of time with no issues, no hacks, no exploits, and then he just threw away the keys, and now it's immutable.
00:33:11.626 - 00:33:47.326, Speaker C: So hopefully more people get to that phase. Like, we're still in this sort of go go. Like, I gotta have. I got to be able to update this smart contract. But as people move on to new versions, they should start making, like, the more stabilized versions to be immutable. We'll see it eventually, I hope, because otherwise, not only. Not only what you described is, like, it makes your life a pain in the ass if you can change a smart contract, but, like, somebody could literally change a smart contract and steal all your money and there's nothing you could do about it.
00:33:47.326 - 00:34:08.732, Speaker C: So as a user, I mean, but, yeah, so, so we sort of talked about what sucks about Solana and so, like, what's, like, what's the best part about Solana for you guys? Like, individually? Um, like, what would you say, like, and just something that makes you love Solana development or whatever it might be?
00:34:08.908 - 00:34:27.216, Speaker A: Yeah, I'd say two things. First of all, I still really enjoy working in rust, and I think any developer does. It's a really nice language, and you can do a lot of really cool stuff. I will say this, by the way, for anybody wondering, you actually don't need to know the full spectrum of what rust can do in order to do Solana development.
00:34:27.400 - 00:34:28.484, Speaker C: Not even close.
00:34:28.984 - 00:34:59.434, Speaker A: Not even close. No. Like 10%. So if you look at the rust book and 80% of it is, how do you move something to a different thread or do something really complicated, like async runtimes and cross threading? You don't need any of that. You need pretty much the basics and a little bit about lifetimes, but still, it's a really nice language to work with. So I think that's one thing. On a more, at a higher level, I think what excites me about Solana is the unexplored design space.
00:34:59.434 - 00:35:33.170, Speaker A: I feel Ethereum at this point is at the point where the things that you could have built with the constraints of Ethereum people built. Solana right now is at a point where the constraints keep shifting every two and a half weeks. And so the things you can build just keep changing, and there's like endless opportunities for new products and new ideas to blossom. Our favorite right now is compressed nfts. We think you can do a lot of really interesting things with those. We're personally exploring them. We know that other people are, but there's so much more than just compressed nfts.
00:35:33.170 - 00:35:36.020, Speaker A: And probably that's my favorite part about salon. Right?
00:35:36.202 - 00:36:23.422, Speaker C: Yeah, it's. It's like we spent so much time in the early days, people just trying to figure out how to hell the build on Solana. And now, like, now it's getting a little bit easier. People are getting up to speed faster, and people are starting to explore, like, different things, like you guys doing, doing what you've built, and then you have, say, dialect doing what they've done, and you have gum doing, like, social. And Solana and all these sort of Lego pieces are starting to come together and, like, it's gonna be wild because I took a two years to go from, like, literally just core documentation to where we are now. And people are getting up to speed, like, but I think that trajectory is going to, like, be a little bit more of a straight line up over the next, like, twelve months at least, in my opinion. As people start to realize, you see one person doing something like that you never even thought of, and then the next thing you know, like, it just, like, takes.
00:36:23.422 - 00:36:41.926, Speaker C: It just opens people's minds up to be like, wow, they did that. I know what I can do. Like, that's way cooler than that, and then keeps going on and on forever. So I like that answer about the design space, undiscovered design space of Solana. That's a pretty cool answer. How about you, Richard, and what do you love about Solana?
00:36:42.110 - 00:38:10.794, Speaker B: I think, for me personally, I think what's cool about Solana is that because, one, there's a lot of data that comes out of Solana because transactions happen so quickly and there are actually a lot of organic users using Solana every single day. That creates very interesting engineering problems where now we're not just like building a DAP, that just hits an RPC every time you want to pull data and just like, loads it on the front end. And all of that can happen without any significant engineering changes or engineering thought to it. I think Solana is very different in that you do need to think about setting up a data pipeline if you're dealing with a ton of data. If you're, if you're working on a very heavy data product, like a data heavy product, like an aggregator or a marketplace, then you need to think about, how do I scale this so that whenever more users show up on our platform, let's say we go from 1000 users to 10,000 users in a week, how do I ensure that I'm not just spamming the RPC every single time I want to pull data, all that stuff? It's difficult because Solana does produce a lot of data, perhaps not as much as a Google sized company or a Facebook sized company, where they have billions of users every single day. But eventually, we're going to get there. And you need to really think about how you design your data pipelines, how you design your infrastructure to handle, in theory, millions of transactions per second.
00:38:12.054 - 00:39:01.702, Speaker C: Obviously the last, I don't even know, since breakpoint, you guys have been here since before then, been building, like, what kept you on Solana? Because, like, ever since the last breakpoint, at least leading up until now, it's like, it's not been the most fun ride for most of us. So, like, what, what kept you building on, on Solana? Like, why did you stay here throughout that whole, sort of, just, like, everybody thinks that, like, Solana ecosystem is totally dead, 75 devs, nobody's here, everybody's leaving, going to all these other crazy places. Like, what kept you guys here, like, building throughout this with no guarantees that, like, that those rumors were, they could have been, they could have ended up the opposite way. So, like, what kept you just grinding and building tensor?
00:39:01.878 - 00:39:35.184, Speaker A: Well, there's two ways to look at it. You could say, okay, everybody left, it sucks. Or you could say, okay, everybody look at all this opportunity for the takers. You know, there's two ways to look at it. And I think we looked at it the second way and continue to look at it the second way. Like, holy shit, if we were competing with, you know, ten times more smart guys trying to build NFT marketplaces, do you think our chances of survival and success would be higher or lower? Right. So I think for us, it's just like, fundamentally nothing changed about Solana.
00:39:35.184 - 00:39:51.370, Speaker A: The programming environment is still awesome. The blockchain is still fast. Toli and the gang are putting a lot of work into making it even cooler and faster, smoother and more stable. And we don't see anything changing the fundamentals and narratives and fud that just comes and goes.
00:39:51.402 - 00:39:51.546, Speaker B: Right?
00:39:51.570 - 00:40:10.162, Speaker A: Just like markets, you can't make startup decisions based on that because then you're going to fail. You can't go with the flow. You have to have conviction and vision into what you think is going to work. And so for us, it was just that, right? Fundamentals are still there. Fewer people are trying. Great. Like, we'll do more.
00:40:10.162 - 00:40:12.884, Speaker A: Good for you guys, good for us. Right?
00:40:13.074 - 00:40:16.072, Speaker C: Yeah. You have anything to add to that, Richard?
00:40:16.248 - 00:41:15.158, Speaker B: Yeah, I mean, I think, like, just thinking about a. Thinking about, like, if you're thinking about, like, what opportunity is the best for us to pursue. Around the time when Solana was getting the most fud, when FTX collapsed, and, you know, people thought FTX is equal to Solana or SPF, is Solana, like, from a reward to risk perspective, like Solana was? If you're deep in Solana and, you know, sort of like, what the ecosystem is like, and that there are still thousands, if not tens of thousands of, like, real users using the chain every single day. NFT volume was still, you know, 600,000 Solana, if not more, which is about the same as during the sort of bull run mania, then you know that there is something here, and all the fud is unjustified, and you, as a builder, have the greatest opportunity given that everyone else has left the chain. So basically, like, what Ilmui said. Yeah. You know, that for us as builders is exciting.
00:41:15.158 - 00:41:35.114, Speaker B: And the fact that we still believe, fundamentally, that Solana is one of the only chains that can scale and handle the next million users who onboard onto crypto, like that is something that we still believe and we. We don't see changing because of all the recent events or all the fud that happened.
00:41:35.154 - 00:41:38.338, Speaker C: Yeah, I mean, and with fire dancer coming, it's only going to get better. Right?
00:41:38.506 - 00:41:39.994, Speaker B: So, cool.
00:41:40.034 - 00:42:10.744, Speaker C: So to round this whole thing off, I always love to ask the guests to sort of give, like, some piece of advice. There's some developers out there thinking about getting into blockchain, or maybe they just started working on Solana. They have no clue what they're doing yet, or they're just sort of, like, maybe not really fully into it. Like, what's your advice to somebody that's just getting started that night? Maybe either skeptical or they just, like, maybe think it's too hard, but they really want to build on salon. Like, what advice would you give to those guys?
00:42:11.124 - 00:42:30.852, Speaker A: Yeah, I'd say you don't have to commit your life to it when you. When you start. So, you know, a great place to jump in and sell on hackathons. That's kind of where we started. So those things are about a month long. You can do them alone or you can do them with other people. If you don't have friends who are interested, you can find other people to work with.
00:42:30.852 - 00:43:05.334, Speaker A: In discords, you kind of get a really good sense of the ecosystem. You get to meet other devs. There's different skill sets. There's a bit of a tetris type game where you try to match with the right people. It's really fun, actually. And then you guys also get to build something that actually uses Solana, and you get to present it. You work on that for three, four weeks, probably spending a couple hours a day, and then you just decide, like, is this right for you? Is this not, like, are these the people maybe that you were working with? Do you want to do something else with them? Or maybe you don't, but you decided that Solana is interesting enough that you want to go deeper.
00:43:05.334 - 00:43:07.866, Speaker A: So I'd say that's probably the best way to start.
00:43:07.930 - 00:43:35.630, Speaker C: Yeah, yeah. No, I mean, that's some pretty cool, like, advice. And, like, I totally agree. It's like, it's that one twice a year, maybe three times a year in the past that you get that one shot you've been learning how to build, and it's like, go ahead and shoot your shot and just go see if you can build it yourself. Find a team, get sort of embedded, and just, like, try. Even if you don't, even a lot of people don't finish. It doesn't even matter because that was enough to get you motivated to, like, just try to build something.
00:43:35.630 - 00:44:17.644, Speaker C: And then if you don't, then just keep going and wait for the next one. And then, like, you know, there's a lot of people who completely didn't get noticed and won hackathon, and then two, two or three hackathons later, they're winning first place. You're not gonna win every time, your first try, like, I mean, not even hackathons, just in everything. So it seems like the ones, like, you guys that stuck around and a lot of the people that stick around until they actually find, like, where they need to be, end up being successful, you know, you just have to have, you guys have to be persistent and consistent. And how about you, Richard? What sort of, what advice would you give to these new devs coming in here and just getting learning about Solana?
00:44:17.824 - 00:45:08.492, Speaker B: I think with any dev project or Devs, web two, web3, Solana, Ethereum, Cosmos, whatever, I think the best approach is to always have some sort of product or have some sort of milestone in mind where you are building up to. Let's say it's a product, let's say it's a protocol. Let's say it's a proof of concept that you have in mind that you want to build, see it all the way through, and try to deploy or launch that protocol, product, whatever, and actually get users using it. Because I think you'll learn the most by working on a product end to end versus just starting a project. That sounds cool. Having this grandiose, very complicated architecture where there's 15 different moving parts that you have to build. It takes a month to build each part.
00:45:08.492 - 00:45:37.904, Speaker B: And just giving up halfway because you realize this is going to take forever. It's much easier to just start with a smaller project, essentially build it end to end, and then iterate on top of it and build the next thing that you have in mind. I think a lot of projects end up becoming stale, becoming irrelevant, because people give up halfway, maybe because it was too complicated to begin with to build, and they just wanted to move on to the next shiny object.
00:45:38.224 - 00:46:13.212, Speaker C: Yeah, yeah, yeah. I mean, I think that's true for a lot of people. But eventually, if you could, like you said, like we said, if you keep at it like, and you find your passion and you find like that, that one idea clicks and next thing you know, like your tensor and you're like one of the top marketplaces in the ecosystem, which is like an incredible, like, sort of underdog story, I think, in my, in my opinion. So congratulations and all your guys success. It was great to have you on the show and see you next time.
00:46:13.388 - 00:46:14.572, Speaker A: Thanks for having us.
00:46:14.708 - 00:46:15.364, Speaker B: Appreciate it. Chase.
