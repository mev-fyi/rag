00:00:01.680 - 00:00:43.154, Speaker A: Good morning, everybody. Oh, that's loud. My name is Phil Hetayatnia, and I'm the co founder of Airfoil. We're a firm that's helped over 150 companies across the web3 space build and design their products, including some work with Solana Labs. And I'm here today to talk about design bright and early on Friday, or as I would call it, designing usable apps in 20 minutes or less. So before we get started, there's a QR code on screen, because there's going to be a lot of resources that I'm citing the presentation, and I want to make sure that you have a chance to download those or use them later in whatever applications you're using. And we've also got a link up there as well, so hopefully that can be helpful beyond today.
00:00:43.154 - 00:01:27.676, Speaker A: Quick background into airfoil. As a company, we're basically a design and engineering firm that partners with early stage founders to help them design and build their products. That ranges from elusive to the fine folks at Drip, Bonfida, Zeta markets, drift protocol, and, of course, Solana labs with Solana pay and many more. But I want to start off today by talking about why design fundamentally matters before we get into the nitty gritty. And I'll start with actually talking about one of my favorite youtubers. This is a guy named PP Peter, and he normally does videos where he does things like, for example, I went to the cockroach infested communist hotel in Moldova. But one day, he decided to go to the country of El Salvador.
00:01:27.676 - 00:02:17.554, Speaker A: And the reason was because he had heard that El Salvador was embarking on a brand new experiment. Faced with rising crime and a financial system that really wasn't all that dependable, he wanted to learn more about how El Salvador was implementing cryptocurrency for everyday transactions. The government had launched its own wallet called Chivo. They'd set up stations around the country to allow people to get easily onboarded. They were going to embark on something no other country had ever done, which was use crypto on a day to day basis in a way that's easy to use and accessible for everyone. But when he actually got to El Salvador, he had a bit of a rude awakening. He saw situations like, is it possible to pay with bitcoin here? Shakes head I have Chivo, but I somehow close my accounts and I don't know how to open it.
00:02:17.554 - 00:03:45.294, Speaker A: At the end of the day, a country was fully willing to embrace the crypto vision that we all have, but ultimately, they weren't able to actually use the tech in practice, this is precisely why design is so important. It's because bad design makes users think that crypto isn't for them. And there's a further consequence to this as well. When users don't feel that crypto applications are including them, they then begin to pay more attention to this than any of the valuable tech that we're building and talking about at breakpoint. And when users begin to think that crypto is all for grifting, then meaningful change like discord implementing wallet connect directly into the application or minecraft servers beginning to token gate their experiences so that the people putting those gaming experiences together can more easily earn money, gets shut down, hindering our progress and making it harder to make the web a better place. And I would contend that this lack of focus on design is resulting in us standing to lose the single greatest opportunity of our time to build an open, innovative and free web for the world. So how do we fix this? I would argue that even if we're not all professionally product designers, we can adopt the mindset of designers to make our applications better, more usable and more useful for the masses.
00:03:45.294 - 00:04:06.846, Speaker A: So what is design? I think there's a bit of a misconception that design is about art. And this was the reason that I didn't initially get into design after college. But design is more about psychology. It's about understanding our users. There's three main types of design. There's product design, which is designing the complete solution. There's UX design, which is designing the method.
00:04:06.846 - 00:04:52.154, Speaker A: If you press this button, it goes here. And there's UI design, which is designing the details. Now, I'm going to focus today on the first two because I think those are the most important to get right. But I think a lot of times we think that the third one, UI design, is basically the whole thing, when it really isn't. As Don Norman put it, in the design of everyday things, design is an act of communication, which in other words, means that building is about you, but designing is about them, understanding your user and working backwards from what's in their head to make sure the experience is easy for them to use. So I'm going to talk about three main principles today and also give you a lot of practical advice that hopefully you can implement in the applications that you're building. But let's start with the importance of communicating with your users.
00:04:52.154 - 00:05:16.370, Speaker A: And for that, let's start with a very important principle of copywriting and design. Starting with why. There's a TED talk that I love by a guy named Simon Sinek. And it's called how great leaders inspire action. And in it he describes the way that Apple sells its products. He gives this example. How does Lenovo sell a laptop? Well, they say that it's got a 1080p screen, that it's got excellent battery life, that it's really, really beautiful and nice to use.
00:05:16.370 - 00:05:36.708, Speaker A: That's the what. The how is that? Lenovo invests heavily in R and D. They have the best designers, the best engineers, et cetera. But the why is really vague. In general, it's not really clear, but Apple does the opposite. We believe that technology should fade into your everyday life. We believe that everything you use should be simple and easy to use.
00:05:36.708 - 00:06:01.448, Speaker A: That's the why. The how is. Then we hire the best designers, the best engineers. The what? We just happen to make computers want to buy one. It's a completely different pitch, but it strikes human psychology far, far better. Now, this applies to digital product design as well, especially when it comes to landing pages. The what? A crypto wallet and gateway to blockchain apps.
00:06:01.448 - 00:06:40.094, Speaker A: Discover, collect and sell extraordinary entities. Those are all the things you can do with these applications, but they're not why you're there. Focus on why, and everything totally flips. Why should you use Bonfire to tokengate your content and experiences as a musician? It's to bring your community together. Why should you use Stello to protect your wallet and make sure that you don't inadvertently connect it to scams? It's so that you can explore web3 with confidence. Why should you use friction as a Defi protocol to get better returns? It's smarter returns on your crypto. It's enabling you to be smarter and feel smarter.
00:06:40.094 - 00:07:23.474, Speaker A: Starting with why means that our pitches will actually land and users will think that the products we're building are genuinely for them. So once we've convinced users that they should go along with us and they should try the products that we're using, we then need make sure we keep them there. And for that, we need to mind our user's health bar. Now, probably everyone in this room has at some point played an rpg where as you walk around the map, little by little, the health bar goes down, goes down, and goes down. As users proceed through our applications, a similar dynamic is at play. Users are doing work for us. They're downloading our apps, they're downloading wallets, they're connecting wallets, they're engaging in actions, and little by little that health bar becomes down and down and down.
00:07:23.474 - 00:08:05.460, Speaker A: So how in an rpg do we get users to be able to continue moving through the map. Well, we throw them power ups, right? And that's precisely what we can do in digital product design as well. This is Glow wallet, a Solana wallet that I'm a huge fan of. And when you think about it, there's no reason that those two screens need to be there at all. You could simply go from create new wallet directly to that last screen there. But they don't. Why it's important to show the wallet turning and falling through space, a beautiful animation, and just tell that user welcome, because that's that power up that's refilling that health bar, that's getting your user excited again so that they'll continue through the experience.
00:08:05.460 - 00:08:43.527, Speaker A: And we don't do this often enough in crypto. A really great example of this is actually Argent's web wallet. When you enter in your email, it then sends a code to your email. You go, you enter it in, and then as you type in your password, this locked animation to the side begins to move and scramble and change, giving you feedback as you're going on. Why did they do this? It's exactly that. It's to refill that health bar, give those users a dose of excitement so that they'll continue through the rest of the onboarding flow. Knowing that that onboarding flow is going to be tricky when uis are slow, it's also important to give users feedback.
00:08:43.527 - 00:09:24.344, Speaker A: This is why it's important to have toasts that show people that a trade, for example, that hasn't fully gone through is still confirming. You don't need to have fancy animations or illustrations to do all of this. Sometimes it's just enough to tell users that an action is happening and not just assume that they're going to be able to figure that out on their own. Now, a great tool to do this is called the user journey map. And in the link at the beginning of the presentation, I've actually linked to this particular figma example so you can take a look at it on your own. But in a user journey map, we actually chart out exactly that. Here's a user's actions, touch points, here's what they're thinking, and importantly, here's how their feelings are changing across the UI.
00:09:24.344 - 00:10:00.784, Speaker A: By default, users will get less and less psyched as they go on in whatever it is that we're building. So we've got to make sure to include steps to make sure that their feelings go up and improve. But second, we know that crypto is rough. We know that there's a lot of different steps to onboarding that are difficult to use. But this is something that's true in web two as well. What we don't do a good enough job up in crypto is preparing users for jumps in that flow so that they're effectively ready to go. Now, the good news is that in Solana we have an excellent wallet ecosystem.
00:10:00.784 - 00:10:36.334, Speaker A: We have wallets that are well designed and easy to use, that look nice, and that are attractive to users. But here's some screenshots from the Solana mobile launch last year in New York. Now, Solana introduced a massive improvement in UX with seed vault, which allows you to simply scan your thumbprint in order to authenticate a transaction. But here's what that user flow actually looks like. If I click buy now, I'm then sent to another screen to approve the transaction. I then don't see the thing I'm buying, but I see just an approved flow. I press approve, and then a new seed vault thing comes up that asks me to approve the transaction.
00:10:36.334 - 00:11:30.274, Speaker A: Now that's pretty clunky, and it's also something that's pretty scary. If a user enters a screen and is immediately told that they're going to be losing something, in this case losing 2.1 sol, that's a good reason for them to just cancel out of the flow entirely, and then they don't get the utility of the applications we're building. Now, sometimes these are just limitations to what operating systems and what blockchains can do. So how do we get around that? Well, here's an example of an app called Clover, which allows you to share photos with your friends. In order to share with your friends, it needs to access your contact list on your iPhone. So what happens when you access the contact list on the iPhone? Well, it puts this dialog up there, and if you say don't allow, then the iPhone will permanently lock out the application from having access to the address book, which effectively makes the entire application useless.
00:11:30.274 - 00:12:17.912, Speaker A: So how do we solve this problem with an interstitial use address book? Inviting friends is simple when choosing them from the address book on your phone. Otherwise, you have to type contact info individually. What's brilliant about this is it takes something that would normally be scary, giving away your data and reframes it as something that's actually helpful. Don't you want to make it even easier to share with your friends? If you just press this button on the next screen, we're going to take that complexity away and make everything easier and simple for you. Sometimes it's by adding in a step and reframing a point of friction as something helping the user that actually leads the user to having a better overall experience. Now, do we do this in web3? No. Most of the time we just throw up the wallet and say, hey, go sign this thing.
00:12:17.912 - 00:13:01.678, Speaker A: And it means either that users click away and then don't get to use the apps we're building, or they get used to signing everything and end up signing away their entire wallet. Another great example of this is on Reddit. Now, Reddit wants you to download its own mobile app because it knows that that's the best possible experience that's going to get you to keep coming back to the application. But if Reddit just said download the mobile app, no one would do it. So what do they do instead? They say this page looks better in the app reframing, the act of downloading it as something that will make your experience as a user better. That's the point. You need to explain how taking these actions benefits users, not just compelling them to do it.
00:13:01.678 - 00:13:39.494, Speaker A: So how can we do that? With connecting wallets, one place for all of your collectibles. Never log in again. Access for mobile and desktop. Reframe the act of getting a wallet and connecting one as something that makes the user experience better, not as a necessary step that they need to take in order to use it at all. And we can take this in a bit more of a meta sense as well. Give first, then expect in return. A year ago in Singapore, I saw this at the Raffles hotel in Singapore that was thanking users from coming to this real life NFT gallery, but asked them to go through this number of steps just to get a wallet and get an airdrop to thank them.
00:13:39.494 - 00:14:33.816, Speaker A: But my contention is that everything in design can be reframed as give first, then ask. A year ago at the Solana hacker house in Barcelona, a team at Airfoil created this called Bloombox. Instead of asking somebody to go download a wallet on their phone and then send you the wallet address, and then you could send them an asset. To get started with crypto, it allows users to simply send an asset directly into this box, send a link to somebody, they open up this beautiful spinning box, they open the box and then they receive the asset and are then presented with a screen that asks them if they want to onboard directly into a wallet or begin exploring crypto. It's fundamentally the same action as asking somebody to download a wallet, but it feels completely different. It feels like they're getting something first rather than having to do the work first to onboard. One app that I really like that does this very well is that of dialect, the wallet to wallet messaging app.
00:14:33.816 - 00:15:14.364, Speaker A: When you enter dialect for the first time, you're presented with a sticker pack. Now, why? Because when you're onboarding to a brand new chat app for the first time, you need to onboard your friends. That's a lot of friction, that's a lot of work that you need to do so that you can go and chat with people. But rather than dialect telling you go do work for dialect, dialect says, thank you. Here's something to reward you. If you want to use this in a conversation, you need to onboard your friends to dialect give first, then ask. But one theme that I've mentioned across this talk as well is I'm talking about adding in steps, which is the opposite of what you often hear in design.
00:15:14.364 - 00:15:48.824, Speaker A: Less steps equals better, right? Wrong. Oftentimes more steps is actually better because onboarding should be compelling, not just compact. Onboarding is a journey. Users start at a landing page. They then go through an onboarding flow that primes the user. It explains to them why the application is going to help them, gets them excited about the application, and then finally they enter a home screen or a dashboard that then leads them to the action that they need to take. That entire process is onboarding, not just the process of them creating an account or authenticating directly.
00:15:48.824 - 00:16:21.946, Speaker A: Now, we don't do this very often in crypto as well. We throw people directly into the application and let them figure their way around so they can click any of the buttons on the screen. But ultimately none of them are going to work until they actually connect their wallet. Now, this is done in the name of simplicity. Jupyter, for example, is probably one of my favorite apps in Solana. It's beautifully designed, but in order to learn how to use Jupyter for the first time, you need to go into their Gitbook. And I hate to say it, but when users have to turn to gitbooks to learn how to use their applications, they're not going to Gitbook, they're going to YouTube.
00:16:21.946 - 00:17:00.702, Speaker A: And it's people like this who get to actually have control over the onboarding flows that we're building, not us as developers. So how do we solve this? Well, oftentimes it's by giving users more steps and more context in the applications themselves. This is gridlock wallet, which is a cross chain wallet that we help design. And Gridlock has something called social recovery, which enables users to have their friends recover their wallet for them. But that creates a point of friction because then those friends have to go and all download the wallet themselves. So instead of having a really quick onboarding, we have a longer one that informs users really why they should become a guardian. To help users recover their wallets.
00:17:00.702 - 00:17:38.844, Speaker A: Rewards them for it literally says, congratulations, you're now an essential part of protecting someone's assets. It's adding in those steps that ends up making that onboarding effective and finally manage your users attention. Now, I have one key point here, which is the importance of keeping users focus on one thing per page. The reason that interfaces like this are beautiful and simple to use is because they boil everything down into its simplest form. Quite literally, it's one screen to play and it's one screen to select. They don't put both on the same screen. There was a study, this is called the jam study.
00:17:38.844 - 00:18:20.294, Speaker A: It's kind of an old psychology study that basically looked at two scenarios. One where you had 60 jams at a grocery store on a table, and one where you had six. So the question was which one would perform better, which one would result in in more sales? Well, the table that had more jams on it, more people stopped to look at the jams, more people stopped to figure out which one they might want to buy, but which one actually had more sales. Ultimately, it was the one with six jams. Because when we add another point of complexity in our interface, we don't add another point of complexity, we multiply complexity. That's why interfaces like Coinbase's UI for example, have only one button in bold blue. Buy and sell.
00:18:20.294 - 00:19:08.700, Speaker A: This is why when you go to buy a sole domain name on Bonfita, we've highlighted only add to cart. This is why when you use family to onboard your Ethereum wallet. I thought this was pretty cool. They only show one seed phrase box per screen as opposed to showing them all at the same time. There's example after example. But when we're able to pare down every single page into doing one key thing, we're able to channel our users attention and make sure that they have a good experience overall and don't feel overwhelmed so that health bar doesn't come down. Now, this isn't the way that most apps look, because fundamentally, most apps are built for us, people that have been in crypto for a while who are ok with that level of complexity, but we need to understand that user attention is like a spotlight.
00:19:08.700 - 00:19:44.104, Speaker A: Anything in bold colors, anything that's highlighted is taking the user attention and dragging it in a particular direction. On this screen. I look first at redeem, then at provide liquidity, then at USD Coin, it should be the opposite. I should first read something to explain what the page is, then understand the different options I have and then click redeem. You'll notice this in the gridlock example as well. Every single screen has only one thing highlighted in bold blue, and that's very intentional. It's to make sure that you always are looking to the most important thing first.
00:19:44.104 - 00:20:23.972, Speaker A: It's okay if this ultimately makes onboarding flows longer, as long as it reduces the amount of complexity on any given screen. So I've tried my best in 20 minutes to run through a bunch of principles of product design. Hopefully they can be helpful to you. But what I hope most as our industry continues to grow and develop and change, if we adopt this mindset of design in everything we do that will be able to truly realize that vision. To make crypto accessible for everyone and to make it clear that crypto is for everyone. It's a decentralized network. It's an open and free and equitable web.
00:20:23.972 - 00:20:28.284, Speaker A: It's not for grifters, it's for builders, and it's for designers. Thank you.
