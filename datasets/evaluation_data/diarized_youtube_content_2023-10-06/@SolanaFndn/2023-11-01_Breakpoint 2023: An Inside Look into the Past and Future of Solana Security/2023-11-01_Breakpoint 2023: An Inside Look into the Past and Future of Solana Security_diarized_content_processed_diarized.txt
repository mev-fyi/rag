00:00:03.640 - 00:00:30.424, Speaker A: Hey, everybody. Great of you all to be here this early time. I'm excited to tell you a bit about the past and the future of Solana security. Kind of like an inside look, my personal views into it. And I kind of, like, want to ask the question, like, has Solana become more secure? Like, we at some points been hearing, like, Solana is, like, really hard to develop for. And that is like, kind of like this eat glass mentality, which kind of, like, makes some insecurity. Right.
00:00:30.424 - 00:01:06.580, Speaker A: And back in 2020, that was definitely true. But, like, right now, like, how does it look like? And first, maybe a bit of who am I? I'm Thomas. I'm the CEO and co founder of Neodym. We're like a security research company on Solana. And basically, our whole founding mission was, like, provide security on Solana. That was the whole reason we even exist. I myself come from maybe a hardware security, computer engineering background, so not so much crypto.
00:01:06.580 - 00:01:39.134, Speaker A: But then three years ago, I basically entered this crypto security market. And, yeah, been really digging it. The technical complexity is just really amazing in this space. And it's really interesting, the challenges you face. So let's start with the dark ages, as I like to call them, like, back in 2020. Mainnet just launched in March of 2020, and Solana was still trading at $1 per sol. So it's like the early times.
00:01:39.134 - 00:02:04.864, Speaker A: And me at the time, I was still at university studying my computer science degree, and now nobody really understand Solana. It's really new. Developers are starting to pick it up. And then a friend of ours comes to us. We have the CTF team. We are playing cyber security competitions together. And a friend of ours from this team says, hey, there's this Solana thing.
00:02:04.864 - 00:02:16.180, Speaker A: Go look at it. That's interesting. And they have a bug bounty. And maybe you find something. I found something already. Go look. And we were like, it's crypto.
00:02:16.180 - 00:02:46.814, Speaker A: I don't know, maybe. And people start looking a bit, and then we start finding things. And then motivated by that, we just start looking more and more and more. And in the end, we had probably 100 different bugs in the Solana blockchain itself. Most of them weren't really that severe, but it was still stuff we actually found. Me at the time, I was still at university. I'm good at security, but still, it was kind of interesting just doing that on your own without having a company behind you.
00:02:46.814 - 00:03:19.544, Speaker A: And then Solana starts picking up steam like we are in 2021 now. And the big event of this year in the beginning was like, February inflation got enabled. And like, with this beginning of inflation for us was like the real moment. Ok, now it's going to take off because now there's incentive to stake. You're going to have stake pools, you're going to have all of these protocols popping up. But still nobody really knew how to write these contracts. There was a lot of code out there, and a lot of code was bad.
00:03:19.544 - 00:03:56.092, Speaker A: And then since we have done so many work with the core protocol itself, we were really good at already understanding what is Solana, what does it do? How does the programming model look like? Solana foundation basically approached us, hey, please help us. A lot of smart contracts, do you want to take a look at them? And we were like, I mean, I don't know, we're still, like, in school or like, we're students. We don't really have a company. Like, it's kind of difficult. But then we just meant, okay, this is a once in a lifetime opportunity. There's, like, this market, in this market, there's, like no player. And, like, we already have market fit.
00:03:56.092 - 00:04:24.328, Speaker A: Like, we're good. We know what we're talking about. Let's fund the company. And that's, like, basically where neodymium comes from. And then the market just like, insanely exploded in, like, August of 2021. I mean, salt spiked to, like over $200. And that was the time where you had these huge protocols which are just like rushing to market because there was, like, money to be had there if you were first to market, if you were the first exchange, if you were the first stake pool, whatever.
00:04:24.328 - 00:05:01.144, Speaker A: And that led to, like, rushed code, and rushed code is always, like, a bit bad for security. So we started looking at these smart contracts and started finding, like, so many bugs in there, just like calling a program via CPI and not checking the program itself. I think this was one of our favorite bugs. And these bugs, they were really critical. You had alameda FTX pumping money into these protocols, and there were hundreds of millions, if not billions, in these protocols. And I just been a student a year ago, and five digits was a lot of money and six digit sums. This was just like, huge amounts of money.
00:05:01.144 - 00:05:51.090, Speaker A: And now I have a bug in a smart contract, which I could steal a billion with. So that was really insane time. And we kept finding these bugs and quickly fixing them, and the whole ecosystem was really grateful for us to secure this kind of things. Yeah. And then there was also the first breakpoint for us. And during this first breakpoint, we already held a talk, thinking like an attacker, where we went, like, we have to educate the community about how does security on Solana work? What are the big pitfalls? And there was also the initial release of Anchor, which I think is right now a solid stone in the security ecosystem here. Then we had 2022, and that for us was maybe a bit of a depressing year just because there were two big hacks.
00:05:51.090 - 00:06:18.714, Speaker A: There was wormhole and there was Mongolia. And yeah, both of them, a lot of funds were at risk, and then was FTX and it kind of crashed. It didn't look that good for security. And I think that's where a lot of this impression that Solana is insecure comes from. But all of these protocols, by now, they've done huge steps to improve the security. And I think the ecosystem learned a lot from that. And let's go to the present.
00:06:18.714 - 00:07:03.076, Speaker A: By now, I think just like a couple of years ago, Solidaz recovered where it was a year ago, just pretty much breakpoint to breakpoint and core. The Solana core code is much more solid now. Contracts are also much more solid. A lot of these contracts are now just using anchor, which prevents a lot of the basic bugs. And it's a great framework, but I still think there's some room to improvement for that in the future. So I also want to take a look at the deployed contracts. How is the security ecosystem looking right now? And just looking at the ecosystem, we see there are 6000 different contracts on Solana right now, all of which are just deployed.
00:07:03.076 - 00:07:51.594, Speaker A: This is an increase of 30% over last year at breakpoint. So we see that there are still a lot of people developing new contracts. Not all of them are maybe used that much, but still all of them should be secure. And about two thirds of all of the contracts right now are using the anchor framework and only like one third are using some custom framework or no framework at all. If we just look at much used contracts, we see there are 33 which are really the big arbitrage contracts will have over 100 million calls this year alone. But if you look at over 1 million contract calls this year, it's 250 contracts. So 250 out of these 6000 are important right now.
00:07:51.594 - 00:08:46.384, Speaker A: And, yeah, so the thing I like to hammer, which I think is like one of the big issues in the Salana ecosystem right now, are like upgrade authorities. A lot of people, I mean, I'm sure the ones here know, but I'm sure the wider ecosystem doesn't really know about that. Contracts are upgradable. Many, many of the contracts just have some upgrade authority which can completely replace the implementation. And even if the contract itself is secure right now. If this upgrade authority is lost or compromised or whatever, the contract might be upgraded to a malicious one. We've recently seen that with a synthetic hack, there was this DAO, which was just inactive, and hackers took over this DAO and did a contract upgrade and were able to steal some six digit sum of money.
00:08:46.384 - 00:09:09.040, Speaker A: So I think that's a really important thing for the community to grow. We've seen some of the with RJ protocols have really excellent solutions there. Just like a multisig with a bunch of trusted parties published. The parties are all verified. I think that's great. But just like as an ecosystem, we don't have a good structure which just everyone can follow. Everyone is kind of home rolling in their own thing.
00:09:09.040 - 00:09:48.750, Speaker A: Some of them are great, some of them not so much. So I think this is a large part where we want to work on. In 2023 alone, we had 22,000 contract upgrades. So if you consider we have 6000 contracts and 22,000 upgrades, that's like on average, each contract upgrades every three months. Yeah, I mean, there's no time for auditors even to look at all of this code. I'm sure a bunch of these contracts are testing contracts, but still the average is like a bit too high for my liking. And then there are bugs.
00:09:48.750 - 00:10:29.054, Speaker A: Like we've seen a lot, lot less of these common, you are missing an owner check bug. These all basic ones because everyone's using anchor nowadays. Anchor checks that for you. What we do see are more business logic bugs, which are always hard to detect in any kind of program. Then maybe more Solana specific. We see that you do have account checks, but account checks in relation to each other are maybe not met. Like is this the token account really the token account of the mint or like of the vault? Like I check, it's a token account, but maybe not the relation of all accounts together.
00:10:29.054 - 00:11:11.682, Speaker A: So that's one thing with the. And I've been talking to developers a lot among this conference, just like learning, like what are the pain points of the developers? And something I've been told is like, rounding errors are really scary for developers right now because that's something unique to this low fee blockchain. Like on Ethereum, if you have high fees, rounding errors don't really matter. They're just not exploitable. The fees are always going to be larger, but on Solana, the fees are so insanely low and you can put so many instructions in a single transaction that rounding errors may become worth it. Now you have to really think about, I have a pool and the user pays some money in and then they pay some money out. Do it round down, do a round up.
00:11:11.682 - 00:12:16.184, Speaker A: I think that's something where we can maybe create a bit more guidance and really have to think about what's going on there. Yeah, and we've also seen a bunch of bugs which aren't really smart contract bugs at all, popping up like stuff which is more like RPC related, like maybe you want to parse an event and look at the logs for that log. Parsing on Solana is currently a really hard problem and I think we're going to see that more and more in the future as like the smart contracts itself become more secure. Focus is going to shift a bit more like away from the contracts and more like at the ecosystem around the contracts, like how you're going to use them, how do the web interfaces look? Are there social engineering attacks you could run against the users? All right, let's look towards the bright future. I mean, that's why we're all here today to have an excellent discussion about what's coming up. I'm excited for a bunch of the talks today because we are still a young ecosystem compared to a mature ecosystem like Ethereum, which has all of these, these tools. Solana is only like three years at Mainnet, not even that.
00:12:16.184 - 00:13:11.180, Speaker A: So yeah, we going to have to create more documentation, we have to create more tools. Right now with the bear market, we've seen that a lot of the protocols just have more time to spend on security, which is really great. We see a lot of the big protocols just really taking a step back and analyzing what do we want in our next version of a contract to be, to implement that, to audit that and then to launch it. And this is like a really great place to be in. And I hope we can keep that once the market starts picking up again, because I think this philosophy of design first and then launch second is really important for security, which is hard to keep with a lot of market pressures from the outside. And we also see use of easy to use multisigs squads. Recently we audited which had like this easy to use multi stick which people can use for upgrade authorities and stuff.
00:13:11.180 - 00:13:45.134, Speaker A: So I think there's like a lot of stuff happening there as well. We also see more validator clients. I mean, this is a hot topic, I think, of this whole breakpoint is like fire dancer recently launched on Testnet with partial implementations. And I think just like for a core network perspective, that's amazing. You'd no longer have the possibility even for bugs in Lana labs. Implementation of the validator to corrupt state in a way that's not going to be noticed. So once that's live, I think just like from a core state machine security way, that's going to be amazing.
00:13:45.134 - 00:14:29.710, Speaker A: And then there's RPC security. I think that's also something a lot of the users don't really know about. Like everything the user does is trusting one single RPC right now. Like if the user wants to know, how many tokens does he have, he looks at output of an RPC node. If the user wants to transfer tokens, he sends the transaction to an RPC node, and then the RPC node tells him this transfer succeeded and he's basically completely reliant on that. And right now, there is no easy way beside running your own validator to be 100% sure that what you're seeing is really the truth. And I've seen a lot of interesting work happening there.
00:14:29.710 - 00:15:06.594, Speaker A: We're going to have a panel later today on RPC security, and we've also liked the tiny dancer folks. They've been doing some really great proposals, like SIMD 64. This Solana improvement document just was finalized, which has a way to do transaction receipts. That's the way to prove that a transaction was included on chain and it was successful. So I think these kinds of ways which like an RPC node might just, here's the result, and here's a proof that this result is true. That's going to be great. Just like even though users might not necessarily know about that, this is just going to improve that before they even be our issues.
00:15:06.594 - 00:15:47.978, Speaker A: And then we have runtime v two. That's what I'm personally most excited about, because the typed smart contracts that are going to come with it are just going to be such a paradigm shift in smart contract development. And I think it's going to make smart contract development a lot easier. And also for us as auditors, maybe easier to understand and follow because types are always a great way to reduce bugs. That's something I really love about rust, just like all the type system that's great. And doing that cross programs, it's going to be amazing. And we've also seen very, very many miscellaneous fixes in runtime v two, like they've been doing.
00:15:47.978 - 00:16:38.890, Speaker A: A lot of smart contract upgrades are now no longer become immediately active, but at the end of the slot, this is just some tiny things which users are never going to notice, but which makes it for us as auditors a lot simpler. And the mental model will improve how we can look at contracts, and I think that's going to improve the whole ecosystem without anybody really knowing about it. Yeah, and then there's security tooling. I think that's a large part where Solana is lagging behind Ethereum right now. We don't really have a lot of good free availability for everyone security tooling. If you're a smart contract dev, I mean, yes, of course you use anchor and then you do some checks. But did you do all the checks? Writing integration tests in Solana is kind of painful right now.
00:16:38.890 - 00:17:24.054, Speaker A: And then you have upgrades, you have borsion compatibility issues. So that's something I think we just need to have a discussion like what tools do we need, and then we need to build them and we need to make them available for everyone. I think that's really critical because once we do kind of these siloed security implementations of individual auditors, I don't think that can be really an ecosystem win. I want these open tools that everyone contributes to and everyone can use for that. We will be releasing Riverguard later this evening at like 515 o'clock. I'll be having a talk here, introducing that. I think there's some really exciting tooling that tries to go in that direction and provide something to everyone for free.
00:17:24.054 - 00:18:04.046, Speaker A: I hope you all be there and listen to the talk. Yeah, so if you have any ideas about security tooling, just start this discussion. I think for me, that's the most important point of this breakpoint, talking about these security tools. How can we improve anchor? How can we develop some scanners? Yeah, and there'll be amazing talks ahead. If you just look at the schedule today, all the talks that are here, most of the people are really excellent speakers and the topics are really interesting. So please have a discussion about security. Come to our talks, and I'm excited to be here.
00:18:04.046 - 00:18:05.654, Speaker A: I hope you are too. Thank you.
