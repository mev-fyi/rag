00:00:00.160 - 00:00:06.238, Speaker A: Hello, everyone, GMGM. I'm Nick from the Solana foundation, and I'm joined with Jonas, also from the Solana foundation.
00:00:06.326 - 00:00:07.446, Speaker B: Hello, everybody.
00:00:07.590 - 00:00:20.718, Speaker A: So let's just dive right in. Huge shout out and congratulations to the helium network and their developer team. The helium network has completed their migration to the Solana blockchain. That is no small feat.
00:00:20.846 - 00:00:29.228, Speaker B: Yeah, I'm super excited to see that. And I heard they even use compressed nfts to migrate all their state to Solana, right? Yeah.
00:00:29.276 - 00:00:59.082, Speaker A: So all of the hotspots and the actual like hardware that powers the helium network, they're all represented as compressed nfts on the Solana blockchain, which is super cool. And then they also used similar techniques of state compression, but slightly different, to actually store the entirety of the state of the helium blockchain as like a single account on Solana using a merkle tree and compression. So that's just, that's just so cool.
00:00:59.218 - 00:01:33.386, Speaker B: Yeah, it's so cool to see complete networks migrating to Solana. Another few cool things I saw this week, like the first commit is the CLI has now a find program address command. So you can very conveniently now directly in the CLI, just type find program address followed by the program id and the seats, and it spits you out the PDA. So I think there's something that was missing. Like whenever you wanted to do that in the CLI, you had to write your own program or use the JavaScript and yeah, now we can just directly do it in the CLI. So it's really cool.
00:01:33.570 - 00:03:06.136, Speaker A: Yeah, it makes it a lot easier for a lot of developers and people working on tooling to just derive their PDA's really quickly directly from the CLI, instead of having to like write some boilerplate code to reuse just to generate their PDA address or derive their PDA addresses. So that makes it really convenient. And I guess our proposal SIMD proposal highlight for the week, I'm gonna go with proposal 47, SIMD 47, which adds a new syscall or proposes to add a new syscall to get the last restart slot. So every time the Solana network has to restart, should we ever have to in the future, this will make it so programs on chain can programmatically get the last restart slot so they can tell if a restart has happened as part of the hard fork process, which I think is really, really useful, because when you take into account anytime any blockchain is down for any amount of time, or there's a delay at processing transactions, there's off chain data that gets stored in the chain via oracles. But if there's a delay in processing transactions on chain, those oracles won't be able to keep the blockchain up to date with that off chain information. That could include prices of assets off chain from centralized exchanges or things like that. But what this new syscall would allow, it would allow these programs to be able to determine if a restart happened recently.
00:03:06.136 - 00:03:16.560, Speaker A: So that way they can handle that and try to minimize the amount of arbitrage that is potentially happening and limit some bad actions from bad actors, which I think is super useful.
00:03:16.712 - 00:03:22.616, Speaker B: Yeah, that sounds really good. So in case it ever happens again, it will be not such big of a deal, right?
00:03:22.800 - 00:03:24.134, Speaker A: Yeah, yeah.
00:03:24.214 - 00:03:43.474, Speaker B: I found another few cool things. For example, there's a name service. Now, basically it's a repository open source, which is combining all the different name services that currently exist on Solana. For example, Onefeeda. And which was the other one you mentioned earlier?
00:03:43.814 - 00:03:45.470, Speaker A: It's the on Sol team.
00:03:45.582 - 00:04:26.194, Speaker B: Yeah, the on Sol. And then it also provides all the other endings like backpack, bear, bonk, glow, poor ABC. And it creates a very convenient JavaScript library where you can just query the name of a certain wallet and the profile picture. So for example, you could now take your bonfida address that you have, Sol, combine it with your Twitter account and you would get the profile picture, or you can get the profile picture from a backpack wallet from their name ending. So that's a really nice thing. And I'm very happy to see that all these different services now get combined and yeah, I'm definitely going to try it out.
00:04:26.494 - 00:04:31.194, Speaker A: Yeah, for sure makes it a little bit more convenient to try to use the different service providers.
00:04:31.574 - 00:05:09.654, Speaker B: One more other thing that I found, like Helios, it's an RPC provider on Solana. They released a cool new feature. It's like Solana program account webhooks, you maybe already know Webhook get program accounts is a very slow call because it needs to go through the whole memory and try to find this program accounts. And yeah, what they did now is they have a web hook for these, so you can just subscribe to a program and they will constantly push all the updates of all the accounts to you. So maybe it's still not the best way to rely on program accounts, but it's very good that this is now possible, I think.
00:05:09.774 - 00:05:21.098, Speaker A: Yeah, more developer tooling for the ecosystem is always good. And yeah, they're doing good things over there. I guess it's kind of a lighter changelog that kind of wraps it up here. So thanks, everyone, for watching.
00:05:21.146 - 00:05:22.194, Speaker B: Bye bye. See you next time.
