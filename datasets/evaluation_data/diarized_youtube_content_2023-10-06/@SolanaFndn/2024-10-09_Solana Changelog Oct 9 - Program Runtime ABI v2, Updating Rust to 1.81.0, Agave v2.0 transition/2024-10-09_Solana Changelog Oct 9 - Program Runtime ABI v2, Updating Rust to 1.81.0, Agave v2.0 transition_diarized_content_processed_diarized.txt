00:00:03.840 - 00:00:09.553, Speaker A: Welcome everyone, to this week's Changelog. My name is Jacob. I'm joined today by Nick. How are you doing today, Nick?
00:00:09.729 - 00:00:13.169, Speaker B: I'm doing well. Excited for the change log as always. Let's dive in.
00:00:13.297 - 00:00:32.993, Speaker A: All right, Jumping right into it, we have SIMD177, which is program runtime. AVIV2. You may have heard about some of this stuff two years ago at Breakpoint. The one was the third. That was the third Breakpoint by Alexander and I think it was Alessandra. Right. They were talking about program.
00:00:32.993 - 00:01:11.535, Speaker A: The new program runtime stuff. This is specifically the ABI V2 part of it. There's a lot of different changes within this specific SIM D. I definitely recommend reading through it and figuring out all the things that affect you as an application developer. Some of them, it's not like the big cost, but what's really cool on it is that things like reducing or removing the CPI call limitation, increasing the amount of accounts that you can call within a single CPI. I think that's increasing it to 256. I remember correctly, 256.
00:01:11.535 - 00:01:42.081, Speaker A: Great. And then there's a lot of changes on serialization deserialization that basically makes the runtime better and more CU efficient. So this will make a lot of our programs cost less CU on the cluster. So it's a really big change. Definitely recommend going through this and reading about all the different things that are within it and what. What actually happens. Um, but yeah, looking forward to hopefully this passing at some point.
00:01:42.081 - 00:01:53.129, Speaker A: It probably won't pass in the current state because there's still some TBDs to work out. Uh, but passing at some point in the future so that we can see a much more efficient network going on.
00:01:53.297 - 00:02:23.095, Speaker B: Yeah, this would be really cool to see, especially as an application developer, seeing the CPI limitations either go away or have more leeway. One of the things to note in here is that Alexander mentioned that a lot of the stuff will be able to be abstracted away from application developers since the SDKs will handle it all under the hood, which is nice. So it will look fairly similar but still be optimized and less CUs across the board, which is generally good.
00:02:23.555 - 00:02:31.495, Speaker A: Yeah. Looking forward to at least testing it out and seeing like how programs work with this once it gets the test. Net.
00:02:32.195 - 00:02:53.237, Speaker B: Yeah, should be fun. And then onto the commits for this week. We've got two that we wanted to sort of shed some light on. We have this one from Brendan Washington. Increase the writable account cost, hash map size. So basically there's every time there's currently A hash map of about 512, sort of. There's a hash map of 512 in there currently.
00:02:53.237 - 00:03:12.945, Speaker B: And this number was decided on like three years ago, but based off of the current network volume on Mainnet, basically this just raises that number from the default pre allocation to make it so it doesn't have to constantly readjust or like flush the hash map and go through that. So it sort of pre allocates ahead of time a larger amount and then is a little bit more efficient.
00:03:13.365 - 00:03:16.021, Speaker A: Always love to hear new efficiencies being added.
00:03:16.093 - 00:03:17.435, Speaker B: I love efficiencies.
00:03:17.605 - 00:03:48.005, Speaker A: Um, and then another commit that we have is the upgrading rust to 1.81, which looks like it came out just last month. So it's finally. We're starting to get up there with current versions of Rust. Just as a note though, this will be getting up there in version month, but this will probably be a while before we see it on the cluster because it doesn't look like this is getting bat backported to 2.0, so it'll be in 2.1, which will likely be early next year.
00:03:48.005 - 00:04:29.025, Speaker A: And yeah, so that's what we like to see. Speaking of 2.0, there is a release schedule currently for 2.0 says they're going to call for adoption roughly October 14th, possibly October the week of October 21st. So we only have so much more time to make our upgrades to transition to 2.0. So if you are using any of the RPC API calls that are being deprecated that are listed on the screen right now, definitely make sure you upgrade to the replacements so that you don't have any downtime or perceived downtime on your applications.
00:04:29.965 - 00:04:44.603, Speaker B: Yeah, and then same thing with various crate versions also listed in this transition guide. If you're using any crates that have been either deprecated or sort of renamed, you need to make sure you also update those. If you have shell scripts or using any of these, you need to make sure you update those as well.
00:04:44.739 - 00:04:57.299, Speaker A: The big one for developers is Agave install. Yep. So if you want to install the new cli, you have to use Agave instead of the Solana install one previously.
00:04:57.467 - 00:05:20.945, Speaker B: And then on the Stack Exchange for the week. Shout out to everyone on Stack Exchange that's been doing fighting the good fight over there, helping out the ecosystem, answering questions. We've got Jimmy and Truett are sort of leading for this week and I'm actually not familiar with True it, so it's good to see sort of a new face on there. And then we've got some other people. Abdullah and White Seal Child. Everyone's doing great work.
00:05:21.245 - 00:05:31.917, Speaker A: Yeah. Shout out to everyone and just know y'all are helping out all current and future developers on Solana. That about wraps us up this week. Thank you for listening and we'll see you next week.
00:05:32.101 - 00:05:32.397, Speaker B: Bye.
