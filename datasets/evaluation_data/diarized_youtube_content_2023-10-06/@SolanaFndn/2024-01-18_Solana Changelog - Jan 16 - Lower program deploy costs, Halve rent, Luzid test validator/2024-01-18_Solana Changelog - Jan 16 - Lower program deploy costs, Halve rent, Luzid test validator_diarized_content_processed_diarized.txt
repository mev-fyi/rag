00:00:04.120 - 00:00:11.334, Speaker A: Hello, everyone. GMGM and welcome to the changelog. And I've got a special guest here today. I've got Mike McKenna, also from the Solana foundation. How you doing, Mike?
00:00:11.454 - 00:00:12.174, Speaker B: I'm very well.
00:00:12.214 - 00:00:19.294, Speaker A: Yourself? I'm doing well. I'm excited. I'm excited to have you on the changelog. This is your first changelog, so it's great to have you here.
00:00:19.414 - 00:00:25.158, Speaker B: Yeah, here I am in the beautiful podcast lounge at the Solana foundation office. It's very exciting.
00:00:25.286 - 00:00:28.594, Speaker A: Yeah. Very brightly lit background. I'm very jealous.
00:00:29.324 - 00:00:32.092, Speaker B: It's also been a big week in Solana as well.
00:00:32.188 - 00:00:36.024, Speaker A: It has. It has. Let's talk about some of the commits. What have you seen this week?
00:00:36.644 - 00:01:06.632, Speaker B: This is a great one from Godmodegalactus. Thank you very much. Godmodegalactus. It's for deploying large programs. I think as time goes on, we're going to see more people developing larger and more complex programs. It used to be until a few days ago that if your program was particularly large, the block hash that you use as part of that transaction may actually expire. It may no longer be in the last 150 block hashes.
00:01:06.632 - 00:01:14.964, Speaker B: So that is now fixed. So if you've been having problems deploying larger programs or you were concerned about that, then that is now resolved.
00:01:15.824 - 00:01:24.542, Speaker A: Yeah. This fix should trickle out in the next couple of releases. Unless you're building from source, then you could get this fixed immediately because it's merged into master.
00:01:24.718 - 00:02:02.636, Speaker B: There's another cool pr that's been merged for large programs as well, and it relates to the cost to deploy programs. It used to be that the cost to deploy programs was twice the size of the program, and the idea behind that was to allow the program to be upgraded over time and use more space. That has now been changed to one x, which reduces the cost to deploy all programs on Solana, but particularly relevant for people who deploy large programs as well.
00:02:02.820 - 00:02:36.094, Speaker A: Yeah, this has been a really interesting one. We actually gave it a shout out, this idea of this CLI update coming out. We gave it a shout out a while back on the changelog when the feature was put out to actually allow programs to be extended. Now that that's live on Mainnet, we need the Cli fix. John Cinque over at labs actually published the CLI fix. It takes care of that. It actually segues into this next one that because the new accounts are taking up less space, so you're putting in less lamp ports into actually publishing a program into the buffers.
00:02:36.094 - 00:03:09.420, Speaker A: Someone had actually discovered that we were actually a little bit short on the default amount of lamports, or rather the default amount of space that was being used to calculate the lamp ports. So it was missing some metadata. This was never really noticed before because, like Mike said, when you would deploy a program, you're putting enough lan ports for nearly twice as much space as you would need in order to be able to upgrade your program in the future. But now that the default is to use less space or the minimum amount of space, we realize that we're missing a little bit of data in there. So that's also been fixed.
00:03:09.612 - 00:03:28.426, Speaker B: I love that we're kind of tightening things up and focusing on people. People deploying. Yeah, good things are happening there. Speaking of speeding up, actually commits to Solana itself, I think, is the last one. That's also pretty exciting.
00:03:28.570 - 00:04:06.598, Speaker A: Yeah, yeah. I mean, there's. There's this other commit which is kind of along the lines of commits to the Solana repo. Specifically, if you. If you've experienced submitting a pr or forking the Solana repo, all of the CI CD kind of actions and everything are going to trigger this pr. Actually disable some of the cron schedules on any of the forks that would happen, and forks on the git repo, not like forks in the Solana chain as the chain progresses, but it makes it so the CI CD pipeline is a little bit faster. And so if you're submitting additional prs and working on making changes, this actually improves your developer experience and your speed a little bit, which is really nice.
00:04:06.598 - 00:04:06.990, Speaker A: Yeah.
00:04:07.022 - 00:04:32.334, Speaker B: I think even people who aren't committing to Solana core can appreciate. Anyone who's ever worked on a project with really slow ci can appreciate the kind of just the annoyance when you're waiting for it to fix and get a result, either a yes or no, and maybe it's a no when you need to iterate again, and then you need to go through the whole process. So anything that speeds up that process is more than welcome.
00:04:32.674 - 00:04:57.164, Speaker A: 100%. And then I saw this. I chose this SIMD. SIMD 101, half rent or have rent, I suppose. This one is super interesting. We're talking about all of these changes of deploying programs and rent, and this proposal actually changes how much rent or how much rent is actually required for an account to be rent exempt. So it's a pretty interesting proposal.
00:04:57.164 - 00:05:00.996, Speaker A: You can give it a read through and give your thoughts on the repo.
00:05:01.100 - 00:05:18.766, Speaker B: Yeah, the discussion in that is really, really interesting. So there's all kinds of, I guess, different incentives at play. There it's probably not worth going into now, but it is a good read if you're into the economics of blockchains.
00:05:18.950 - 00:05:27.310, Speaker A: Yeah, it's pretty interesting. All right, let's go into resources now, Mike, did you see any resources that caught your eye? It's a shameless plug for you a little bit in this one.
00:05:27.502 - 00:05:54.274, Speaker B: Yeah, it is. There's a thing that was until last week, it was called node helpers, which, if you weren't aware of this, you've probably got some boilerplate code that you've written or that you've copy pasted from someone else to do common Solana things. It might be reading private keys from a file or from your environment or writing them out. It might be. What else do we have in there?
00:05:54.654 - 00:05:56.158, Speaker A: Yeah, request and confirm airdrop.
00:05:56.206 - 00:06:33.934, Speaker B: Airdrop, yeah, that's actually a new one. So request and confirm airdrop is. Sometimes you ask for an airdrop and you await the request for an airdrop. And when that await returns that transaction hasn't quite finished yet, you go and ask for some kind of. I like to think of Devnet Sol as monopoly money. So you go and ask for some Devnet Sol and it hasn't actually arrived yet by the time you use it. And then if you rerun that transaction, suddenly everything is fine because the airdrop is completed now.
00:06:33.934 - 00:07:07.684, Speaker B: So request and confirm airdrop requests an airdrop. Wait till it's actually ready to use and actually returns back the current balance of your account. I thought that was a nice way to do things. So, yeah, I'm sure there's a lot of people who probably cut and pasted the same 1012 line function there. We've got something in there now, but there's going to be something coming into web3 js as well in the future, which is exciting, too. But if you want a preview for how it could look, um, check out the helpers repo.
00:07:08.024 - 00:07:22.200, Speaker A: Sure. All right. Uh, yeah, there's a, there's this other. Did you see this really cool lucid project from Thorsten, this Solana test validator on steroids, as he calls it. Did you see this thing? This is super cool.
00:07:22.312 - 00:07:25.440, Speaker B: I love this. This is, and this is my favorite thing from the whole last week.
00:07:25.552 - 00:07:27.152, Speaker A: Oh, absolutely it is.
00:07:27.288 - 00:08:03.884, Speaker B: I'm a big, like, I love localnet. Some people are like, if they like to develop on Devnet, just the idea of running a local validator, it feels really natural to me as somebody who came from a web two background, whereas programming against localhost, et cetera, you occasionally have to download some program that may not necessarily be in the default localhost programs, but that's easy to do. I just love running my own validator. This is super, super cool. And the thing I am excited about in particular are these snapshots.
00:08:04.504 - 00:08:34.432, Speaker A: Yeah, they're super cool. So a quick high level like you can, we'll have the link in the description for checking out this video and finding thorsten as well. And like, the idea of the snapshots is he's effectively with this like custom wrapper for the test validator. He's able to do it to adjust the actual ledger itself because you have access to the file. So you can, he's actually adjusting the state within the file, the ledger file, which is really, really cool. So you can kind of do rollbacks and roll forwards of different state changes within your test validator. So it's really cool.
00:08:34.432 - 00:08:35.720, Speaker A: Give it a check out.
00:08:35.872 - 00:08:59.902, Speaker B: The reason I'm excited about this is I can imagine some really complex, hard to debug issue. And being able to have snapshots like this and roll back something to a known state and analyze the blockchain at a point in time is super useful for getting that great visibility you need to debug difficult problems. I think this is amazing work.
00:08:59.958 - 00:09:17.918, Speaker A: Totally. Yeah. This is going to be a great boost for developer experience. And if you're a new developer, I'm going to give another shout out for Sol. Andy creates a lot of really great videos on how to do all sorts of different things on Solana. And, you know, if you're, if you're trying to learn Solana development, check out his videos, check out his content. He's, he's really awesome.
00:09:17.918 - 00:09:48.904, Speaker A: Very personable. Like, I love Andy so much. He's such a character in, and I mean that in all the best ways. Andy, because I know you're watching, but kind of a PSA. If anyone else is out there and you're creating developer content, whether it's written guides and tutorials or videos, then tag the Solana Devs Twitter account and tag myself, Nick Frosty, and even Tag Mike, tag us all, and we can try to help share it out and get some extra discoverability on anyone that's creating content on Solana. It's gonna be great. Let's all create more content.
00:09:49.684 - 00:10:02.076, Speaker B: Yeah, 100%. I think Solandy and the cookbook were probably the two biggest resources had, I guess probably a year and a half ago now when I was first getting into Solana development. So.
00:10:02.140 - 00:10:26.900, Speaker A: Yeah, yeah, same. And then the last thing I want to touch on is stack exchange. Got our obligatory plug for stack exchange. And just like we did last week, we're going to start shouting out all the people that are having the most amount of interactions and the highest rank on Stack exchange each week. So for this week, we've got a mills is ranked number two. And good job to Emils on all of the answers and questions that he's been participating in. And shout out to everyone else on here.
00:10:26.900 - 00:10:40.624, Speaker A: Got Solandy, of course. And don't forget, check out stack exchange if you have any questions on how to do anything. Solana development, check out the docs and check out the stack exchange. But that's going to wrap it up for this week's changelog, and I hope everyone has a great one.
00:10:40.924 - 00:10:41.444, Speaker B: See you guys.
