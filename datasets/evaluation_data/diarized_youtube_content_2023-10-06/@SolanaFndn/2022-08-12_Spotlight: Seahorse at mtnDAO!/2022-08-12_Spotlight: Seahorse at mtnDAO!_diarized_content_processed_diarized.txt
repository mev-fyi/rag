00:00:00.440 - 00:00:10.434, Speaker A: I'm Joe coming to you live from Mountain Dow from Solana Dev relations. And I'm here with a couple folks from Mountain Dow. Go ahead and introduce yourself, guys.
00:00:11.214 - 00:00:13.154, Speaker B: Hey, all, I'm Nick.
00:00:15.494 - 00:00:18.794, Speaker C: How's it going? My name is Elias Marino. I also.
00:00:19.974 - 00:00:24.114, Speaker D: Hey, everyone, I'm grant. I'm a Devrel intern at Solana this summer.
00:00:24.734 - 00:00:27.274, Speaker B: Hey, I'm TJ. I'm building mountain pay.
00:00:28.304 - 00:00:52.884, Speaker A: Nice. And we have been messing around with Seahorse with just dropped. It's a python framework for anchor development to build Solana programs in Python. So we all kind of messed around with it for a little bit. We've been working on it at Mountain Dow and we just wanted to kind of talk about it, share our thoughts and show a little bit of a demo, I guess. So I guess we'll go around the room. What did you guys think of building on Seahorse? First impressions?
00:00:55.004 - 00:00:56.324, Speaker D: Yeah, it's super easy.
00:00:56.444 - 00:01:10.580, Speaker B: It's good up and running. I basically just ran a single command to download the CBOR Cli and was off to the races, copy pasted the calculator app in and everything worked. Yeah. One word.
00:01:10.612 - 00:01:26.804, Speaker C: It's easy, super easy to get started. Even if you know, just basic python. If you understand simple Solana concepts, you're able to get running pretty fast. It only took me a couple minutes to get the whole dev environment up and running.
00:01:27.584 - 00:02:03.774, Speaker D: Yeah, I definitely agree with that. I think something for me that was unique is that it just abstracted away a lot of the rust concepts that I didn't really understand because, I don't know, I started with my rust exposure was with the build space project and they kind of glossed over a lot of these terms that were a little confusing. So I think with this, it's like I kind of understood, like, every line, which was like a lot more comforting. And I think it's like it was a good place for me to start. I definitely wanted, like, keep going, keep building stuff on it.
00:02:05.114 - 00:02:32.994, Speaker B: Yeah, yeah. I resonate with a lot of that. I also don't have, like, a lot of familiarity with Russia, haven't worked with it too much. There's like a few times I've tried to stand up Solano smart contracts and have definitely had difficulties with it, like errors from either anchor Rust, CPI's, all that kind of stuff. And I worked with it for a few hours today and I had a lot easier of a time.
00:02:34.014 - 00:02:35.110, Speaker A: I thought it was really awesome.
00:02:35.182 - 00:02:45.954, Speaker B: And I think I'll also be able to use the rust that it outputted to, like, learn more rust. I think that'll be cool to do, like, later.
00:02:46.074 - 00:02:47.250, Speaker D: Oh, yeah, definitely.
00:02:47.402 - 00:02:51.802, Speaker A: Maybe you want to show that you got a little demo going. You want to maybe show that on screen?
00:02:51.858 - 00:03:37.804, Speaker B: Yeah, for sure. Won't really go over too many, like, seahorse details, but this is just like a python smart contract. You can do classes which replace, like, the different structs. Your functions translate to rust functions, and then you just build it and it converts over to, like, rust equivalents. So here are all the different handlers that get outputted. And then it just kind of looked, if you've ever worked with anchor before, it looks exactly like a kind of the structure of an anchor project, and that comes with the test as well. And so this is just like a token swapping, like, escrow contract.
00:03:37.804 - 00:03:45.760, Speaker B: And you, would you do that the same way you would do, like, testing if you're writing, like, the anchor program yourself.
00:03:45.872 - 00:03:46.640, Speaker D: So, yeah, you have to.
00:03:46.672 - 00:03:48.040, Speaker B: You have to write the test.
00:03:48.152 - 00:03:51.404, Speaker C: It does generate the idea for you to then be able to write the test.
00:03:52.384 - 00:04:00.452, Speaker A: So, technically speaking, you could write your program in python and then just drop your IDl in your front end. Interesting.
00:04:00.508 - 00:04:01.676, Speaker B: General interesting.
00:04:01.860 - 00:04:35.442, Speaker A: So this has huge implications for, like, onboarding people to Solana, who maybe are a little bit intimidated by rust or maybe haven't worked with, you know, a language like that before. So, like, what do you guys kind of think? Like, any kind of thoughts on that? Like, especially you, Grant, who, you know, somebody who knows Python and maybe hasn't learned so much about rust. Like, I feel like there's some really big implications there. And, you know, I think we can kind of use this to get people in, in an early stage in their development career. What do you guys kind of think of that? We'll start with you, Grant. Yeah, totally.
00:04:35.498 - 00:05:37.504, Speaker D: I mean, I thought it was a lot easier to understand than even some of the starter rest tutorials. Like, I feel like, yeah, like, kind of like what I mentioned earlier, every, every single line, you know, what it's doing. And I think there's that higher level way of thinking is, like, a good way to approach it as a beginner, and it's less intimidating, I think, just like that, how you feel about it is a big factor that determines how much you want to continue. So I think I would definitely be more interested in using seahorse and building rather than, like, dealing with all of the nuances and lower level decision making that happens with rust. So, yeah, I would say it's definitely an improved beginner experience. Awesome.
00:05:37.624 - 00:05:45.296, Speaker A: And Grant or TJ, like you guys both said, you, you struggle a little bit with rust. Would you also consider using this as.
00:05:45.320 - 00:05:46.616, Speaker C: Like a tool to look at the.
00:05:46.640 - 00:05:50.184, Speaker A: Rust it creates then and try to learn that way, which is something you would do.
00:05:50.264 - 00:05:53.456, Speaker B: Yeah, no, totally. I mean, even with like CPI's and.
00:05:53.480 - 00:05:54.336, Speaker A: Stuff, like, I think it was like.
00:05:54.360 - 00:06:22.554, Speaker B: Two or three weeks ago I was trying to do CPI's for like with like another friend and we would call them like, people who like, knew what they were doing more than us and we could not get like accounts creating through CPS. And here I did it like almost immediately and that's like, I think the cool part is like, it's, it like kind of wraps up stuff and someone knows what they're doing on the backend lets you move forward and then like, yeah, you can go back afterwards and recreate the harder parts.
00:06:22.934 - 00:06:25.062, Speaker C: Yeah, kind of piggybacking off that.
00:06:25.198 - 00:06:25.494, Speaker B: Yeah.
00:06:25.534 - 00:06:58.094, Speaker C: Definitely lowers a barrier for developers that are wanting to get into Solana, into the ecosystem and understanding what really is going on with these smart contracts. One thing I'm curious about is what will developers do as far as seeing this as a stepping stone for rust or something that they'll use exclusively to write smart contracts? I definitely think there's room for both 100% and I definitely think we will have both. Just another avenue for accessibility for developing in this ever growing ecosystem.
00:06:58.754 - 00:07:17.524, Speaker B: I could totally imagine you start building out your smart contract and then you want to do something a little more complicated and you hit a roadblock because you want to like import something. Metablex is done and you can't like deserialize it. I mean, it just came out like yesterday, so we could be arguing on that, right?
00:07:18.544 - 00:07:22.648, Speaker A: But, yeah, I could see it though. That'd be awesome. There's a lot of legs that it.
00:07:22.656 - 00:07:24.112, Speaker B: Could grow already, you know, like, there's.
00:07:24.128 - 00:07:25.256, Speaker C: A lot of places it could go.
00:07:25.360 - 00:07:53.404, Speaker A: Obviously, the better support that the creator Amelia gets from community, the further this thing could go. So anybody who's watching this, if you're interested, if you want to contribute, the link is going to be in the description. Go ahead and jump on and just contribute to this project because we really think it would be really super important to Solana, to a lot of developers, pretty much anybody in web3. Thank you guys for watching.
