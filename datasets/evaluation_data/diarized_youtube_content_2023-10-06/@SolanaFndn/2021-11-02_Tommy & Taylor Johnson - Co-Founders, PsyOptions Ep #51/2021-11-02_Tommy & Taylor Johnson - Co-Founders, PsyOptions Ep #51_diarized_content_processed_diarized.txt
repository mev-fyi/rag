00:00:10.320 - 00:00:19.046, Speaker A: Hey, folks, this is anatoly, and you're listening to the Solana podcast. And today I have with me Tommy and Taylor, co founders of the psyoptions protocol. Awesome to have you guys.
00:00:19.150 - 00:00:20.182, Speaker B: Thanks for having us.
00:00:20.238 - 00:00:26.754, Speaker A: Cool. So what's the origin story? How did you guys get into crypto, and what made you build psyoptions?
00:00:27.814 - 00:01:04.472, Speaker C: Crypto? I mean, it goes back to. I mean, I remember watching the Ethereum ico just being a broke college student, but, you know, felt we were too broke to actually throw anything into. And, you know, that's a big regret. But that kind of shaped up how we got into Solana later on, really dove deep into everything back in 2017, right before the summer hype. And then in the summer hype, tried developing a little bit on Ethereum, doing some solidity development in the spare time, but never, I never jumped full time into it until psyoptions. Taylor has a little bit of a different history with crypto.
00:01:04.528 - 00:01:27.844, Speaker B: Yeah, I've actually been full time in crypto since late 2017. After Tommy and I shut down a previous business we started in school, we were looking for different things to do, and I knew crypto was kind of had a lot of hype in 2017. I was like, all right, this is definitely an industry I could see myself being a part of. And eventually took a job at Blockfolio and then as well as doing some freelance solidity development and been full time ever since.
00:01:27.964 - 00:01:32.744, Speaker A: How did you guys meet? What was, like, the genesis for you guys to go build site options?
00:01:33.444 - 00:01:47.932, Speaker C: Well, Taylor and I are twins, so we met a long, long time ago. We've always been hacking on ideas and stuff, and, I mean, I guess what really? Taylor kind of had his eye on Solana from 2018, right, Taylor?
00:01:47.988 - 00:02:00.306, Speaker B: Yeah, pretty early on. I remember multi coin writing about it. I was like, oh, this is actually a really sweet architecture. Solves a lot of problems that we saw on Ethereum and kept following before Mainnet beta was launched.
00:02:00.450 - 00:02:43.614, Speaker C: Yeah. And so we, I mean, had been tinkering around, created, like, a GitHub organization last summer, the same thing, like the same one we're using now, and just started, like, reading the documentation and then had a few projects we tried in the fall that never really took off. And then in October, we were surfing with Tristan from FTX, and he was just talking about serum and everything that they were working on. So we kind of knew what was in the pipeline and wanted to just have that in the back of our mind. We did the first hackathon, didn't place built like a trusted third party oracle. And then after that had an issue with Tradfi trying to get API access to automate an options trading strategy. And that was kind of what kicked it off of.
00:02:43.614 - 00:02:59.792, Speaker C: We were fresh off that first hackathon, wanted a fresh idea, kind of had our feet wet in Solana and I was like, Taylor, what if we just built options into the blockchain? We can get this API access built in. We have the order book already there. There's some basic infrastructure and that was kind of like the Genesis.
00:02:59.888 - 00:03:26.296, Speaker A: That's awesome. Limited access to data was one of the reasons I started building this thing, because I used to try to build stupid deep learning models on interactive brokers and you never have access to data. It's always like even the quality is really suspect. Do I really know that this is where things got executed? Or did they just copy and paste stuff from a database with a bunch of errors?
00:03:26.480 - 00:03:40.360, Speaker B: It's terrible. If you want good data quality, you have to pay up for it. That's why Bloomberg terminals is 20 and month. And if you're just a hobbyist or just trying stuff out, it's just not feasible to pay that much.
00:03:40.472 - 00:04:02.154, Speaker A: Yeah, this is like, to me, I think part of the beauty of the space right now is that you can kind of build up a lot of what finance is with just a bunch of hobbyists. It's kind of like Linux, you know, Linux in the nineties you're, you're competing with Microsoft, billions of dollars of engineers building stuff, but it's just a bunch of people over the weekend can compete. It's kind of crazy.
00:04:02.234 - 00:04:02.866, Speaker C: Yeah, it's wild.
00:04:02.930 - 00:04:06.058, Speaker B: I think that's one of the best parts. You know, all that, all that coordination.
00:04:06.186 - 00:04:17.404, Speaker A: So what are the challenges? You guys are one of the earliest, I would say, teams working on Solana. What have you guys seen? Or what were like the real painful points, what got better, what still sucks?
00:04:17.564 - 00:05:01.288, Speaker C: Oh man. All right. I mean, this first Solana season hackathon, the one that we won, we wrote everything in Solana native. I remember pinging Armani back in February saying, hey, I hear you're working on some framework. Like what can I poke around and checking out the repository? But it wasn't anywhere near complete or I mean I didn't dive in enough to use it for the hackathon. So now I rewrote the entire american option protocol in anchor and it took me very little time to actually write that. So like it has the development lifecycle and just like ease of getting up to speed has improved.
00:05:01.288 - 00:05:02.504, Speaker C: Ridiculously. Yeah.
00:05:02.544 - 00:05:04.338, Speaker B: And documentation has improved too.
00:05:04.456 - 00:05:10.454, Speaker A: That's awesome. What is, what is anchor doing for you guys that native rust isn't?
00:05:10.534 - 00:05:33.222, Speaker B: I mean, it's helped, it's helped simplify our integration test. So, like, that's one thing that we try to do when we first started was we wrote our own like integration testing framework in rust. I guess I wouldn't even call it a framework. It was pretty, pretty rough. But, you know, anchor kind of takes care of that. You're just writing your tests in JavaScript. It's pretty easy to get up and running and then also handling a lot of different edge cases that you wouldn't have to think about, right.
00:05:33.222 - 00:05:44.922, Speaker B: Checking, checking account, you know, account addresses and other things just to bring safety in and kind of removes a lot of those headaches that if you're just getting started and trying to hack something together, you're not really going to be.
00:05:44.938 - 00:06:44.866, Speaker C: Thinking about deserializing accounts. I mean, like token accounts and things like that, right? You just have your accounts like structured, passing that into the context and it deserializes all that. I mean, the amount of like little issues we had just because like, oh, we misordered one thing in the array because when we were refactoring, like the accounts array, and it's like, what the hell is going on? And then you're like trying to debug and add messages and stuff, like, because you're just like, oh man, like what is like, and then it all turns out to be, you know, a typo or you fat fingered moving one line up, or, and it was so like the account structure in dealing with that is just like incredibly easy. You don't have to deserialize anything yourself. Anything like that has the token SPL, token program or even some of the Dex infrastructure. It makes cross program invocations a lot easier. Been working with some teams for this hackathon and wrote a bunch of cross program invocation examples for these teams to get up and running with psy options pretty quickly.
00:06:44.866 - 00:06:51.658, Speaker C: It was just seamless for them to use our data structures and serialize and deserialize because as long as we're all using the same framework, it works.
00:06:51.706 - 00:07:13.364, Speaker A: Yeah, this was my decision, can blame me, but I really didn't want to build a shitty framework. And until people started building on Solana, it was really hard to know what do they need, you know? Like, I think it would have been worse if we build a bunch of code that like nobody could like build with because it would have been incomplete and we, yeah, I'm going to say it takes a lot of discipline to do that.
00:07:13.744 - 00:07:14.784, Speaker B: Yeah, yeah.
00:07:14.864 - 00:07:16.044, Speaker A: Versus laziness.
00:07:16.944 - 00:07:35.636, Speaker C: I mean, it makes sense to offload it onto like the actual Dapp developers, right? It's a different beast when you're programming the underlying system versus like the actual just salon runtime program. So it makes a lot of sense, kind of how anchor came about and who really is leading it.
00:07:35.700 - 00:07:46.824, Speaker A: Can you guys tell me what worked really well or like what features or anything like for any other devs that when they're coming into building in Solana, what stuff is actually feels like a superpower?
00:07:47.224 - 00:08:24.048, Speaker B: Well, one thing that's improved a ton is the SPL token program and how you manage the token accounts and whatnot. That's definitely something that a lot of the new developers on Solana don't have to deal with. But back then we were building into our UI the ability to have multiple accounts for the same SPL token, and it was super frustrating and whatnot. So using those associated token accounts and other kind of, I guess, I guess you could call them wrapper programs or things like that, that just improve the UX significantly. Understanding those and why they're there is pretty important when someone's getting started.
00:08:24.216 - 00:09:17.952, Speaker C: I think taking it a step further too, of how does the associated token program work, and what's really under the hood is the program derived address. I put together some documentation for people starting to onboard to psy options or related protocols. You need to read up all these Twitter threads, these documentations on PDA's, because there's just so many things you can do with a PDA that's very unique. You can get a mapping just to accounts, you can create a unique constraint for psyoptions. Right now there's no reason to have more than one of the same option. And the fungibility of those options are based on the expiration date, the strike price, the asset pair. We just have a PDA that is seeded with those parameters and it creates this unique constraint.
00:09:18.008 - 00:09:24.504, Speaker A: Oh, that's cool. So you encode the constraints as basically hash it into the address, the PDF.
00:09:24.544 - 00:09:25.096, Speaker C: Exactly.
00:09:25.200 - 00:09:30.760, Speaker A: And the taker then has to satisfy those constraints to be able to take that trade.
00:09:30.912 - 00:10:08.776, Speaker C: No, not on the trade level, just on the general structure for creating the option. It's like, ok, if you want to spin up a BTC, see 70,000 USDC strike for the October 29 expiration. Just that structure that creates that. Because that structure is the core structure of psy options, the PsI american program. And that's what then controls the option token mint and writer token mint and how you dole out those option tokens. And so it's just like, there can never be more than one of those specific to those constraints. So it's, you know, separated from the trading concerns.
00:10:08.800 - 00:10:09.216, Speaker A: Got it.
00:10:09.280 - 00:10:09.432, Speaker C: Yeah.
00:10:09.448 - 00:10:14.976, Speaker B: I think you were thinking of your stateless escrow, right? I thought that was a, that was a pretty cool proof of concept.
00:10:15.080 - 00:10:42.040, Speaker A: Yeah, I wasn't sure that you guys already built, you know, like, I didn't. I think this idea has been around in crypto for a while, so I wouldn't be surprised if you guys used it too. But I like that idea that because you don't want to generate like, infinite number of these markets, right. If everybody enters the same data, then it's going to spit out the same BTC like, month increment, whatever, like May 2021 option or whatever you want.
00:10:42.152 - 00:11:29.750, Speaker C: Yeah, and like, we've seen it too. Like, it's really useful to have these deterministic ways to like, look up an account address. So it's like, look, I can just check if this option market already exists by using these parameters like these, the psy options market exists. And we also ran into like some issues that we had to hack together, like on the client side. Because serum doesn't have these kinds of constraints, an adversary could come in and spin up multiple serum markets for the same asset pair. And then when you're pulling that data from the chain on the client, it's like, well, which one is your UI using? Which one are these automated traders using all that kind of stuff? How do you sync them up? And so that was like a pain point and we had to whip together a package. But now with CRM's permission, markets some other stuff.
00:11:29.750 - 00:11:48.110, Speaker C: We can now use PDA's to say this is deterministically how the UI is going to determine the market. Here's how everyone else should do it. These are the seeds. And then it keeps everyone in line in a more decentralized way rather than having to have some NPM package with metadata and it's painful to maintain.
00:11:48.222 - 00:11:57.148, Speaker A: Got it. That's cool. What actually runs the market? Is it a CRM queue? Like a CRM v two or v three queue?
00:11:57.286 - 00:11:59.504, Speaker C: Serum V three right now for the Americans.
00:11:59.584 - 00:12:09.272, Speaker A: Awesome, man. That's super cool. How was that integration? Is that like blood, sweat and tears still, or the tooling itself around serum getting better?
00:12:09.328 - 00:12:10.368, Speaker B: It's getting better.
00:12:10.496 - 00:12:11.416, Speaker C: Blood, sweat and tears.
00:12:11.480 - 00:12:31.200, Speaker B: Yeah, but it was definitely blood, sweat and tears. I think that was. I think that's what took us. The longest part in the original hackathon that we won was doing the serum integration, and we weren't even doing any cross program invocations to serum at that point. It was literally just client side integration. And that was really difficult. No documentation.
00:12:31.200 - 00:12:40.844, Speaker B: Got to read through the source code. I think we even found some bugs in their typescript package and had to patch it ourselves. Definitely blood, sweat and tears there.
00:12:42.144 - 00:13:06.756, Speaker C: There's still room for improvement. I'm dropping lists every time as hackathon participants start asking or users or complaining about settling funds. I'm just got a constant stream of, hey, we should document this and add the flow chart for that, because all the customer service is kind of offloaded to the people using the CRM stuff. So it's like we get that inflow of feedback from users and other developers building on top.
00:13:06.820 - 00:13:32.634, Speaker A: Yeah. People don't realize how strapped every team is. Agree for engineers at best. Like, no customer service, nothing. Just pure software, open source software. It's not like when you look at a market cap of something, you think there's like a equivalent to market cap. You know, s and P 500 company with 30,000 engineers just all like, cranking away.
00:13:32.634 - 00:13:36.774, Speaker A: Um, thank God it's not, honestly. Yeah, yeah.
00:13:36.814 - 00:13:54.506, Speaker B: It's got its ups and downs. It's, you know, at least you can move fast. It's not a bureaucratic process, but at the same time, you know. Yeah, customers, customer support definitely dwindles. And I think 70% of people are probably testing in production. So people, you know, the end users are just going to have to deal with that and understand that's just the way things are done in crypto right now.
00:13:54.590 - 00:14:00.242, Speaker A: What do you guys need? I guess, like, how close are you guys to launch and what are, like, the next blockers?
00:14:00.418 - 00:14:33.450, Speaker C: So we actually are on mainnet trading with BTC and ETH markets right now. We have been live since the end of August just with BTC and ETH for the September strike. Then we upgraded to v two of our american protocol with serum permission markets. So we can eventually close those markets. And so that gives us the ability to open a bunch more. And so, yeah, so we're live with those. We're working with a couple other partners to get some soul markets up pretty soon, so we'll probably announce that here.
00:14:33.522 - 00:14:41.134, Speaker A: Awesome. What have you guys seen in terms of, like, adoption and, like, how are people using it? And has anyone surprised you with, like, what they're doing?
00:14:42.034 - 00:15:19.084, Speaker C: I wouldn't. It's tough right now from the retail side, using our user interface I think what the biggest thing that I'm excited, I mean, there's been a lot of great feedback. Options are not an easy instrument to use. Managing your own positions is tough. And so we've gotten a lot of great feedback from the community and it's kind of shaping what some of these projects that are working on during this hackathon. I think that's what's most interesting and surprising is these teams that are building on top and they're not user interfaces. These are protocols that are going to be managing certain strategies and rolling positions for users.
00:15:19.084 - 00:15:53.546, Speaker C: And so you can kind of have this more passive product like, you know, it's like a ribbon finance to the basic ones where it's just selling covered calls and secured puts or things like that. But there's a lot of plans, I don't want to leak their alpha, but a lot of plans for additional products where it's more just kind of set it and forget it. And it has, you know, certain properties detailed out to hedge for various things, give you certain direction on volatility and just, it'll make all these products so much more user friendly for retail, but also big institutions that are looking to hedge existing exposure.
00:15:53.610 - 00:15:59.138, Speaker A: That sounds like you guys are kind of building more of like infra level for options. That's awesome.
00:15:59.226 - 00:16:22.180, Speaker B: Yeah. We chalk up the v one american that we built as just a primitive and as decentralized as possible. It doesn't rely on oracles, it doesn't need pricing information. So it's the only dependency is the Solana runtime and SPL token program, I guess now CRM with the permission markets, but the original one had only SPL token as dependency.
00:16:22.372 - 00:17:19.648, Speaker C: Yeah, I mean there's like, so there's like capital inefficiency with the american style because you can exercise at any time up until the expiration. So we're about to hopefully announce pretty soon, like we have a European that we've been working or we've architected and we're going to break ground on that. We'll crank it out pretty quickly that will have a little bit more dependencies, but it'll be more capital efficient because it'll be auto exercised and we'll have a margining system built into it and the American will continue on because we're going to do, we're going to build, I like to call it like Carta for DeFi, but just a place where people, we whipped out a vesting contract the other week and we'll be able to show people their tokens that are vesting their options, that are vesting the ones that have currently vested, and the options all in their portfolio and whether they should exercise them or not, it'd be less like trading based and more of just like an interface for managing your portfolio of, like, vesting stuff and options.
00:17:19.696 - 00:17:23.484, Speaker A: So that's awesome. Wow. How many engineers you guys have?
00:17:24.784 - 00:17:38.764, Speaker C: We actually just hired another front end guy today. So we have two full time front ends. And when we hired another protocol developer, so we're two full time protocol developers, then we have a community guy, marketing guy, and then a couple of part time and open source contributors.
00:17:39.184 - 00:17:50.924, Speaker A: That's so small. I mean, like, that's awesome. I feel like this is like the biggest thing in crypto, is that how fast small teams can ship really sophisticated products?
00:17:51.344 - 00:18:22.452, Speaker C: Yeah, I think the, as I've learned, the hardest thing nowadays or right now is like, it's not the programming, it's the architecting the system to fit the runtime and developing the instruction set. Once you wrap your head around how that whole system works and you have your instruction set, writing actual code is not that hard. If you actually take the time to just think and focus on, and you have to have the knowledge and experience to understand that, it's pretty easy to start architecting a bunch of stuff and delegating and managing a little bit more.
00:18:22.508 - 00:18:55.874, Speaker B: The thing I will say on that, though, is that especially the runtime changes here and there, but the changes aren't that drastic. But when you're using dependencies like serum pith, whatnot, those change a ton. And so you're seeing a ton of changes on serum. So one week you might have architected something for serum V three sounds great. All of a sudden, serum updates to some new thing, and you have to. That might change the optimal architecture for it. So you kind of have to be nimble in order to, to just go with the flow.
00:18:55.874 - 00:19:00.866, Speaker B: As different protocols update and as new versions come out, new architectures are viable.
00:19:00.970 - 00:19:16.026, Speaker A: It's weird to think of immutable code but still having dependencies, but something with serum, you're so dependent on liquidity in those markets that if they move to v four, you have to update because you can't point to an empty market.
00:19:16.210 - 00:19:49.526, Speaker C: Yeah, we bring a lot of the liquidity ourselves. These are brand new markets that we spin up. It's not as much of a pain point, it's more just like announcing and coordinating, but it's more of like, the european protocol and architecture depends on a lot of the stuff. Like, it doesn't depend heavily on the SPL token contracts aren't represented as spls and so it's depends on this new architecture that they just announced that bonfide has been working on. So it's just interesting. So you have to keep up to speed with what exists in the ecosystem so you can constantly be like, is there an improvement? Can we squeeze something out of this.
00:19:49.550 - 00:19:54.850, Speaker A: Is the european option. Are you also planning for, for it to be like oracle free or no oracle?
00:19:55.002 - 00:20:22.014, Speaker C: No. Rely on an oracle just for the exercise. I think we're wrapping up the architecture. We're going to develop this one totally open source from the scratch. I just put up the boilerplate repository and it's open source. We're going to open source or at least make public the architecture so everyone can read and comment on it while we're just cranking it out in the next week and a half. There's an oracle dependency just on one instruction just to actually lock in the index price.
00:20:22.014 - 00:20:40.186, Speaker C: That would be for the expiration, but we don't see it being too risky of a dependency considering it's not an instruction that has a lot going on. So we can do a lot of like checks. We could pull two different oracles, you know, and kind of reduce the potential pitfalls there.
00:20:40.250 - 00:20:50.054, Speaker A: Yeah, this is, this is a hard problem too. When an option is exercised, it's still going to hit like the Sierra market to actually like exercise the price.
00:20:50.584 - 00:21:08.984, Speaker C: No. So just on the base layer, the Europeans, it's just going to, I mean, essentially the architecture is locking in the price and then users basically have to settle up like the positions in collateral themselves. I mean, the best way to describe this one is like derabit on chain. It's really just like p and L, not the full underlying.
00:21:09.024 - 00:21:16.502, Speaker A: Okay, so you can actually settle in any collateral, right? You could be, you could have an option on Sol, but settle in like wrapped ETH or whatever.
00:21:16.688 - 00:21:56.878, Speaker C: Well, this one, it's actually going to be, well, it's going to settle in the currency that it's trading. So like BTC, it's going to kind of have this siloed market and account that holds like all the BTC and manages the entire portfolio, like margining for like someone's BTC options. And so it kind of has its own realm of just, this is the BTC world and everything settles in BTC. Everything's traded in BTC and like premiums or even in BTC, but then it just uses the USD index price to actually settle up on the strike and then Seoul would have its own world with its own portfolio margin system. So they're not cross margined between all those at the moment. Got it.
00:21:56.966 - 00:21:59.994, Speaker A: Is cross margining something you guys are also thinking about?
00:22:00.334 - 00:22:13.044, Speaker C: Yeah, I mean, it's one of those things where it's like we want to just crank this out and ship fast because it improves from the existing architecture for when it comes to a trading perspective. And then we'll kind of discuss a more improved cross margin system.
00:22:13.084 - 00:22:31.388, Speaker A: Do you think that there's like a gap still in like this idea that I think what's popular on DeFi or like Ethereum is like liquidity mining and like, I just want to put my tokens and get yield. And is there a gap between that and options trading and like central limit order books?
00:22:31.556 - 00:22:32.988, Speaker B: I think there's a knowledge gap.
00:22:33.036 - 00:22:33.364, Speaker C: Right.
00:22:33.444 - 00:23:09.064, Speaker B: It takes, if you're dealing with, you know, the closer you are to dealing with the primitives, the more knowledge you need to have. Right. Like the more hands on you have to be in managing your positions and whatnot. So I think that reduces the addressable market or the end users that are willing to participate. And so that's why you have people building programs and tooling on top to manage the position. So it can be more passive. Because I think that's one of the biggest things that drove a ton of people to DeFi, is the passive yield, all the token incentive programs and whatnot.
00:23:09.064 - 00:23:25.142, Speaker B: I do think that there's a bit of a gap, but it's slowly being closed. And the more passive it can be, the more non crypto people or even crypto native people. But the less financially sophisticated you could say will come in and utilize Defi.
00:23:25.278 - 00:23:43.766, Speaker A: You guys imagine that. Or there's probably somebody already building this where I have my token, I get, I'm an LP, which is under the actual thing behind that position is a covered call or some other fancy strategy like iron condors or whatever. Right?
00:23:43.870 - 00:23:48.366, Speaker C: Yeah. So that's what, there's a couple teams from the hackathon building that right now.
00:23:48.430 - 00:23:49.374, Speaker A: That's awesome.
00:23:49.534 - 00:24:24.188, Speaker C: That's what I'm really excited about because that's what we've seen. There's just not much. I mean, there's decent order flow. I haven't looked at the volumes because we're just kind of very focused on product. We kind of know what the low hanging fruit is. So we're not focusing on the vanity metrics at the moment and not really talking about the TVL and whatnot, but it'll just increase order flow because these people can just get passive yield from covered call products or they can hedge certain positions just by depositing tokens and it's all going to be managing these underlying options and straddles and things like that.
00:24:24.236 - 00:24:38.314, Speaker A: How long does it take to go from, let's say I wanted to build an iron condor or something like that as a strategy, can I do that? Do you guys have examples already reference implementations for things like that?
00:24:38.434 - 00:24:43.974, Speaker C: Are you talking as a protocol or as just a user using a client?
00:24:44.474 - 00:24:52.818, Speaker A: Here's my dAp. I'll take tokens from LP's and then automatically generate the positions and psy options.
00:24:52.946 - 00:25:43.938, Speaker C: The hard part actually isn't generating the initial positions. The hard part is handling how they want to roll if you're trying to do it over time where they just can keep that open. So generating the positions is super easy, easy placing the orders. We have examples like CPI examples in the repository for minting options, exercising, placing an order, opening a serum, open orders account, all that kind of stuff. Just kind of been cranking out examples as people ask for them and then it's really onto those teams to handle that really tough part of how should we roll. Certain concerns in there for manipulation, there's certain concerns like for front running, there's certain concerns for eating through the order book and having to build your own like Twap like into it and stuff like that.
00:25:44.026 - 00:25:58.754, Speaker A: Yeah, man, you guys are taking on some really tough challenges. That's cool. This is something that I wanted to get good at, trading, trading options and deep learning into these things, but I couldn't. Never got it to work.
00:26:00.094 - 00:26:29.018, Speaker B: I mean, it's a full time job. That's why we try to focus on the primitive and lower layers and try to get that right so then other teams can focus if they're much more financially savvy or have better trading backgrounds, can handle that. It's a full time job to be a trader, to come up with those models, to build those positions and roll them. It takes a long time and you constantly have to be updating them too.
00:26:29.106 - 00:26:31.738, Speaker A: How long did you guys trade options before?
00:26:31.906 - 00:26:59.156, Speaker B: Not much. We're just retail traders. I interned at an investment bank once a while back, but to the extent of my full time finance career, that was about it. Then we would trade options just here and there, but nothing serious. And then, I mean, when we wanted to automate that options trading strategy, you know, that that would have been probably the first automated system we would have built. I don't think we built an automated.
00:26:59.220 - 00:28:03.708, Speaker C: Option trading strategy before that. Yeah, I would say we relate best with like, the retail speculative yellow option users rather than like, very sophisticated options traders. But, you know, it's, it's been nice, kind of like building this and winning that hackathon and getting some attention because then those people kind of show up and we have some really smart trad five people who have been around crypto, some really smart trad five people who have never been around crypto. Kind of contributing to the thought leadership of where we should go, what's needed to get to certain structured products and things like that. And that's been super helpful because we've been early in Solana and have the engineering capabilities and knowledge to work with them of translating their vision into a Solana architecture. And so we've just been helping as many teams as possible that kind of have that background and can bring that knowledge. And then that's why we're just like, look, we'll help you as much as you can because you're going to help us answer some of these questions that we don't know.
00:28:03.708 - 00:28:08.404, Speaker C: So it's been good to kind of fill out the team and the surrounding circles with that.
00:28:08.444 - 00:28:36.024, Speaker A: Do you think that DeFi is something that, like, I always think of it as growing kind of faster than tradefire versus replacing it. Do you think, like, these products are good enough to, like, compete with traditional finance or are we just going to see more stuff being built on open finance because it's easier? Like, I don't have to go talk to like, a CME to launch an option for my in game bullets for my shooter game or something like that.
00:28:36.844 - 00:29:09.132, Speaker C: I think it will be just the fact that, like, it's, it's open and anyone can do it. There's, you know, kind of looking at the architecture here and, and designing, like, an ideal architecture for the most, like, capital efficient system. It's just like, not really like, you could do it in c five so much easier than you can do it in Defi. Like, I don't even know if it's truly possible. We're kind of still just on the back burner trying to figure out, like, how you could, you know, portfolio margin, everything. Right. I think a lot of teams that we've talked to are all thinking about that in the back burners.
00:29:09.132 - 00:29:24.132, Speaker C: Like, how do we margin against everything? So I think it's definitely just like, it's moving faster. I think they will rival C five, a lot of these products, but I think they're still going to be both working hand in hand.
00:29:24.228 - 00:30:06.944, Speaker B: Yeah, I think both have their ups and downs, the speed that defi innovates because of the open source nature and things can be represented, and it's all digitally native. It just makes the pace of innovation faster, also makes what you can build much faster. Not that you're not beholden to regulation in DeFI, but CFI, there's a lot more red tape. You got to jump through hoops in order to be able to launch a market. You can't. You can't just launch your own equities exchange. It takes tons of money and resources and whatnot, so it stifles innovation in that respect.
00:30:06.944 - 00:30:41.076, Speaker B: I think even if DeFi can't become as capital efficient as CFI, you're still going to have more innovative products, more flexibility in what you can do with your assets, that at the end of the day, you might not need that capital efficient, high, super fast, low latency systems to do what you want to do with your assets. I think there's a place for both. And I think DeFi is just going to continue to innovate and outpace growth. In terms of tradfi, our goal is.
00:30:41.100 - 00:30:48.464, Speaker A: To get that latency to be as low as physics allow, and then we're competitive.
00:30:49.124 - 00:30:49.916, Speaker C: That's why we're here.
00:30:49.940 - 00:31:27.206, Speaker A: Let's do it, man. Won't rust until we're building an Atrino emitter detector. I just think with gaming, especially the first massive multiplayer games, instantly, within six months, had a market for the digital items there. As soon as you get something like Star Atlas or equivalent World of Warcraft that's decentralized with all these assets on chain, I think the idea of options as a service, people are just going to. Well, whatever I got golden people want to use because this game is hot right now. It's definitely going to. People are going to definitely spin up those markets.
00:31:27.206 - 00:31:29.222, Speaker A: It's just going to happen 100%.
00:31:29.318 - 00:31:56.440, Speaker C: I mean, we've been talking about game. I mean, we're gamers ourselves and I mean, I haven't played a game since I really dove into Solana development 1112 months ago. But I'm hoping to get back to it once. Like Star Atlas and Aurora and all those other, you know, Kaiju cards. Everyone starts actually launching the gameplay. I'll jump back to gaming, but we've been thinking about it a lot and what could be done with this american primitive. And that got us into talking to other teams and other games just to see what's out there.
00:31:56.440 - 00:32:21.618, Speaker C: And then I actually got connected with Metaplex and built out a contract that they just announced that's focused on gaming and it all stemmed from trying to think about these games. Everyone's so early and not really thinking about how these game assets are going to plug and play into defi protocols and things like that. And there's still just like so much work and research that needs to be done and some infrastructure that needs to be built for it all to work perfectly together.
00:32:21.706 - 00:32:58.514, Speaker B: Yeah, I think the interoperability for gaming is still, like, there's still going to be some rough edges there because it's harder to build standards across games. But I think once you'll have a few games come out and maybe they'll have transferability between games and whatnot. But it's going to take some time and some trial and error before we get to this on chain metaverse where you can transfer assets between different game worlds and whatnot. But I do think that is going to be one of the ultimate killer applications on blockchain.
00:32:58.594 - 00:33:01.346, Speaker A: What are you guys excited about out of this hackathon?
00:33:01.490 - 00:33:20.520, Speaker C: I mean, for me, it's really just the products, the stuff we've mentioned with the structured products, passive yield products, all that kind of stuff coming, like being built on top of psy options, very heads down on, like, product and everything at the moment. So aside from the people that are pinging me, asking you for help, I don't really know what else is being built.
00:33:20.672 - 00:33:37.870, Speaker A: Yeah, yeah, likewise. I'm. I see nfts being launched and then I'm like, deep in the trenches, you know, optimizations, I guess that's good, right? Like, it means that, you know, there's more, more stuff to do than you have times you start actually going heads down and working.
00:33:38.032 - 00:33:51.962, Speaker C: But there's a lot. I mean, the roadmap with just these teams alone is like, ridiculous. We have so many products that we want to, like, whip out on top and, you know, hoping to launch like the first few in the next week or two and, and then the framework's kind of there, it'll be a little bit easier.
00:33:52.018 - 00:34:11.844, Speaker B: Well, it's just fun to see people building on software that you've built. I'm sure, I'm sure you and the rest of the Solana team get excited as new projects come out, new people innovate. And I think, I think that's one of the more fun things to do, is just sit and watch what people come up with, because you can't come up with every idea yourself. So might as well open source stuff and have community kind of run with it, for sure.
00:34:11.924 - 00:34:17.024, Speaker A: What should we be looking out for? Like, what do you guys have any uh, any announcements you want to leak?
00:34:17.364 - 00:34:46.760, Speaker C: Oh, man. Uh, sole options coming soon. Um, passive yield products that will make it extremely easy for people to get volatility exposure or um, you know, generate yield like, and this is just like, this is yield that's not going to go away, right. A lot of these pools are based on rewards and API is based on rewards and things that will dry up and aren't sustainable. But the volatility is something that everyone is a little bit more sustainable in a sense. Sure. Volatility will decrease over time.
00:34:46.872 - 00:34:48.840, Speaker A: These are covered call strategies.
00:34:48.952 - 00:35:34.654, Speaker C: Basically the first few are the most simple covered call and secured put strategies, but then there's going to be a few other vaults coming out. For once these are launched, then I'll focus on a few other vaults that have different strategies. I mean, eventually we started talking to some other teams, like symmetry, because we want to get a good crypto index because then we can create, if we get liquid index options, we can create a nice volatility index for certain baskets. So that's on the horizon. You need that rolling and rebalancing infrastructure and that's kind of like what you, you know, we've been working on the past few weeks or other teams have been working on and then it's, you know, formulas for just managing an array of positions.
00:35:34.694 - 00:35:40.374, Speaker A: What is your development process? Like, how do you guys go to like build, test and like ship?
00:35:40.454 - 00:36:12.726, Speaker B: I mean, in terms of like roadmap and how we determine what to work on. It's pretty ad hoc. Like things change up weekly, bi weekly, but you know, we try, we try to run in two week sprints, at least just pick like, okay, what, you know, based on user feedback. Check GitHub for issues. Obviously anything that's blocking usage is number one priority and then it's all right, what do we want to see built? What do our partner, partner teams need and how can we get them going? Tom, you have anything to add to that?
00:36:12.910 - 00:37:09.774, Speaker C: Yeah, I mean, protocol development too. I sit and focus and start drafting up a full architecture doc with the instruction set and potential functions that are needed. Black box some stuff just to make it a little bit easier and then put it to do to dive in later. And then you have this whole instruction set and a general outline and framework and you know it's going to fit into the Solana runtime because you've made sure that the constraints are handled. And then I dive into running a test driven development process with anchor, just doing full integration test. You end up writing a lot more test code, but I just find the confidence level is so much higher. You can refactor and upgrade versions, and you're just so confident in your code when you have all those tests, then it cuts down the time from Devnet testing where everyone puts up a contract and then just relies on interacting and to test it.
00:37:09.774 - 00:37:13.210, Speaker C: Especially when you're building a primitive, you want to have all those cases handled.
00:37:13.282 - 00:37:22.168, Speaker A: In your use case, specifically with options. What kind of bugs are most worrisome? Is it like overflow or like actual, like, logic and economics?
00:37:22.296 - 00:37:55.394, Speaker C: Probably logic and economics. I mean, overflows, like, I mean, the american protocol overflow is not an issue. Not really. I mean, we do all the check math, of course, but, like, it's not an issue. Maybe if we get some weird altcoins eventually trading, like, then we'll have some weird issues. But I'd really just say logic, economic attacks, things like that. When we get into, like, the capital efficient Europeans that has, like, the margining system built into the base layer and liquidation built in the base layer, and just like, always thinking about, like, account management, right? You have that limitation of the number of accounts you can pass in and how to architect around that.
00:37:55.474 - 00:38:03.146, Speaker A: So if Solano could change one thing, what would it be? Or anything. Two things, finite number.
00:38:03.210 - 00:38:12.990, Speaker B: Come fix fixed, fix fixed account. You know, fixed account lengths. Like, if we could have dynamic, you know, make it dynamic, I think that would, that would be great.
00:38:13.062 - 00:38:14.774, Speaker A: The data. The length of the data.
00:38:14.854 - 00:38:15.542, Speaker C: Yeah, the account.
00:38:15.638 - 00:38:26.494, Speaker A: That's actually, like, I don't know if you guys saw, but like, believe re growing reallocation from the program itself or the account that it owns, it. I think it might be live already in 1.8.
00:38:26.614 - 00:38:29.190, Speaker B: Yeah, I think I saw the pr for that.
00:38:29.262 - 00:38:29.590, Speaker A: Okay.
00:38:29.622 - 00:38:47.204, Speaker B: But that's, that's one thing that, you know, when people jump over from ETH to Solana, that's like, probably the biggest gotcha that we're like, oh, crap, like, I can't, I can't readjust or, you know, create a larger array, more mapping data, whatever. So that's one thing. And then also the number of accounts you can pass into an instruction.
00:38:47.244 - 00:38:47.804, Speaker A: Right.
00:38:47.964 - 00:38:50.068, Speaker B: That can kind of open up more.
00:38:50.236 - 00:39:02.260, Speaker C: Yeah, I mean, I think 1.8 handles a lot of these headaches, but you still, when you kind of think, when you're trying to think, like, for the long term, just the limitations in general, like, I'm assuming they're always going to be there, right?
00:39:02.292 - 00:39:39.948, Speaker A: You know, like 109. The goal is to double the, the transaction size, basically, so the number of bytes that a transaction can maximum size. That means you can double the user data or encode more, put more accounts in there. So there's always a limit because of the real time nature of the system. You're not, like, submitting an arbitrary large transaction that then the block producer decides, okay, I'm going to pick this one. You're really, like, how do I write to the block right now? And making sure that doesn't slow everything down is a challenge. But really cool, man.
00:39:39.948 - 00:39:50.984, Speaker A: You guys are shipping like crazy. It's awesome. It blows my mind that you guys were a hackathon team. That is. Now there's teams in the hackathon on top of psy options.
00:39:51.804 - 00:40:04.444, Speaker C: I love it. I've been doing office hours every Tuesday and Thursday, just letting people come in and ask questions because it's just nice to see people building on top, and we're going to do whatever we can to, like, help them out and keep them there.
00:40:04.564 - 00:40:14.628, Speaker A: That's super cool, man. Really, really good to catch up with you. Thank you for coming on the podcast. Was there anything you want to add for the listeners in the final kind of bit?
00:40:14.716 - 00:40:28.588, Speaker C: Yeah, I would say check out psyoptions to trade your BTC and ETH right now. Seoul coming soon. And then we'll be announcing an under collateralized european protocol pretty shortly. Going to try and crank that out as quickly as possible.
00:40:28.676 - 00:40:36.354, Speaker B: Yeah. And get in touch. There's no shortage of projects that. That we can dream of, and I'm sure others are, too, but happy to help any, any team out that we can.
00:40:36.434 - 00:41:05.524, Speaker C: Yeah, and if you're a protocol, too, looking to do option liquidity mining with american style options, reward contributors with options, or, you know, use the style options vesting contract. We're trying to get that. I mean, the vesting contract's a unique one where you can kind of delay your vest. The recipient has the option to delay their vest if the issuer grants it. So that way they can kind of keep pumping the vesting and the potential taxable event. Not an accountant, so don't take that tax advice. Right.
00:41:05.524 - 00:41:06.684, Speaker C: Not financial advice.
00:41:06.764 - 00:41:09.556, Speaker A: Not accounting advice. Not financial advice. That's awesome.
00:41:09.620 - 00:41:11.224, Speaker B: Yeah, no advice.
00:41:12.404 - 00:41:14.196, Speaker A: That's super cool. Well, thank you, guys.
00:41:14.260 - 00:41:14.732, Speaker C: Thank you.
00:41:14.788 - 00:41:15.364, Speaker B: Thanks for having us.
