00:00:06.760 - 00:00:40.274, Speaker A: All right. Hey, how is everyone feeling? Everyone who is not in the seats, I don't know who I'm talking to. Come on down so it's not awkward for me and everybody who's speaking, grab some front row seats. I know it was probably a long night. There were lots of parties last night, but y'all should be feeling really good. Paul from Pantera Capital says that Solana is a top competitor with ETH and other smart contract blockchains as it relates to developer adoption and momentum. So from the Solana team, thank you all for being here.
00:00:40.274 - 00:01:02.032, Speaker A: Just a couple housekeeping notes, same spiel as before. If you're tweeting about the conference, use the hashtag hash Solana breakpoint. Tell us what you're loving, what you're hating, as long as it's not too terrible, and we'll try to fix that. You can always come to me. I will be here at Sud. Liz Boa, if you are confused about where you're at, this is Sud. This is the developer stage.
00:01:02.032 - 00:01:25.528, Speaker A: Always come to me with questions. Wi Fi, how to get to the other venues. There are shuttles and tuk tuks outside, so you can grab those to get around to the other venues. The other venues are LX. So LX is our ecosystem stage. It's where you're gonna hear about all the stuff that's been brewing for the last two years in the Solana ecosystem. And then you can also go to Astufa Freea.
00:01:25.528 - 00:01:55.656, Speaker A: I had forgot to mention this yesterday, but there's an NFT gallery inside of that greenhouse and so that'll be really cool to see. That's also our growth stage. So anything getting to the next million or billion users on Solana, those are the conversations you're going to hear over there. It was a long night for me too. And then in terms of sponsors, so I wanted to mention our sponsors who are here. Serum is outside, just right here where the food is at, so go hang out with them. We also have several sponsors upstairs.
00:01:55.656 - 00:02:17.284, Speaker A: We have neon labs who have a bunch of shirts and stickers. Really cool vibe with the stickers there. And then also Atani and star Atlas are up there. Let's see. Is there anything else? Nothing else that I need to say? If you have questions, you can always reach out to me. I will be here all day. And then we also have this short little highlight reel from yesterday, so we can go ahead and play that.
00:02:39.904 - 00:02:55.894, Speaker B: And we can do that with Solana. The VM can basically take c or rust code and turn that into a smart contract. You're like one of my heroes. We are therefore integrating Solana into brave as soon as we can.
00:03:16.074 - 00:03:32.478, Speaker A: All right. This venue is so great. Every time I see this venue upstairs, it's wonderful. What a great developer venue. All right, so our first thing up, I'm really excited about this. We have Alessandro Lassi and Christian monog. Sorry, did not mean to butcher that.
00:03:32.478 - 00:03:53.434, Speaker A: From Coinbase. They've both done an extensive amount of research on the Solana blockchain, and so they're going to go through what they've learned about Solana through the blockchain, how they've been able to grab some data from there, and then what they've gleaned in terms of user behavior. So, Christian and Alessandro, come on up to the stage.
00:04:02.994 - 00:04:46.686, Speaker B: Good morning, everyone. Thanks for the brave people who woke up to come attend our presentation. I'm Alessandra and I'm a blockchain researcher at Coinbase. Oh, and I'm Christian. I'm also a blockchain researcher, and we are part of a crypto data foundation team in Coinbase that takes blockchain data and try to extrapolate insights from it. So, to start, what is blockchain analytics? This is a bit how we see ourselves at work. So, blockchain data is public and there is a lot of insight that can be taken if someone can look through it and what is behind the surface.
00:04:46.686 - 00:06:07.296, Speaker B: And today we are going to introduce a bit the concept, like, who can benefit from blockchain analytics and how can you use it? So, to start, who should be using blockchain analytics? I think, we think that everyone in the crypto space can get some insights from that. And in particular, if you are a protocol team or an NFT developer, you can see from the blockchain which kind of users are interacting with your protocols and what is the behavior that they are having. So, for example, if you have a DeFi protocol, you can see how people interact with your pools. How long do they stay in the pool? Are they just coming to take the incentives that you are given and then run away? So there are a lot of developments also on the tokenomics and on the structure of a protocol that you can get from on chain data. And for NFTs is the same. The second kind of users can be investors. So there is a lot of alpha and blockchain data that can be taken if you aim to just participate for investing purposes.
00:06:07.296 - 00:07:21.414, Speaker B: So you can see which kind of users are interacting with certain protocols and tokens, and you can kind of see what the big whales are doing in crypto, momentum is a big thing. So following what big players are doing has been a profitable solution in the past. And even if you are just an individual that trying to play around with investing, there are many tools that can help you to get into this analytics and have an edge on other investors. The last tiers of our exchanges, where we from and exchanges can use blockchain analytics for many different purposes, can be compliant. So to avoid to receive funds that come from hacks or exploits. And we can try to collaborate with the victims to try to get the funds back. Or we can get a series of insights on products like a sea, how the funds are moving on the blockchain.
00:07:21.414 - 00:08:29.430, Speaker B: So how you can do that, there are three main solutions, according to our experience. So you can use open source blockchain explorers, which are the easiest way, so they are public free most of the times. Some of them are also really good and give you very good insights, but you are always kind of constrained of what they choose to show you. So, for example, timeframes, or displaying data into charts and download the data. And they lack on another, most of the times, on another very important part on blockchain analytics, which is labels, trying to label addresses or according to the behavior that they have. So you can see what these players are doing. So usually some blockchain explorers are very good, some others still can kind of just do really pure exploring.
00:08:29.430 - 00:09:21.754, Speaker B: So you can paste transactions and see if the transaction are actually being confirmed on the blockchain. If you're going to go, if you want to go a bit further, there is a second type of thing which you can subscribe to, analytics tools. Most of these tools are actually really great. So there are some Nansen AI or dune analytics that are open to individuals as well, and they allow you to query their data, download their data. You can access to their proprietary set of labels, which is, as you said, very important. But again, the constraint is always, you can see what the currency that they support, so they don't have. Usually it's hard to support from the day one of blockchain from scratch, having all the data and all the events and everything parsed and indexed properly.
00:09:21.754 - 00:10:07.394, Speaker B: So that's another limitation. And if you want to go even further, there is the third option, which is, again, the one we do, which we run our own analytic infrastructure, and you have the maximum flexibility. And especially, we think for Solana, which lacks this kind of analytics at the moment, that could be a very powerful and interesting project to pursue. And we know that there is a lot of interest for blockchain data. So unfortunately for Solana especially is not that easy because of the amount of data that ker Solana infrastructure can process. And Christian now will guide you through some of these difficulties. Yeah, thanks, Ali.
00:10:07.394 - 00:10:57.724, Speaker B: So there's a reason why major analytics tools have not onboarded Solana despite its popularity. These numbers are the reason why there's 2500 transactions per second and 37 billion total transactions on the Solana network, which means the ledger size is about nine terabytes and it grows by two terabytes every year. This also means that validators don't store the full history. And so compared to bitcoin or ethereum, where the full history is stored on its nodes, it's much harder to sort of fetch all this data or find all this data in one spot. There's also different levels of problems that we have with ETL ing in Solana data. Raw chain data, of course, is what I just mentioned. But also indexing and getting useful indices is also really hard.
00:10:57.724 - 00:11:45.602, Speaker B: So, for example, an index we might be interested in is like balance over time for an address. And due to total transaction size, it can be quite difficult to calculate these indices. Very computationally expensive. Also, there's event calls on Solana, which means parsing those event calls are also extra computation you'll need to do to get more insights beyond just like balance over time. So all these things combined together make Solana pretty difficult to onboard onto analytics tools. So now that you have a general understanding of what blockchain analytics is, and sort of some of the challenges we've faced with Solana and doing analytics on it, we thought we'd walk you a little bit through some of the insights we found. First, we're going to talk a little bit about Solana versus other layer ones.
00:11:45.602 - 00:12:21.720, Speaker B: Then we're going to show a little bit about how users get on board onto Solana based on what we see. And then finally, we'll do a little bit of an overview of Defi on Solana. So our first graph here, visualization shows activity against other layer ones. So we have Solana, Ethereum, Cosmos, Zelo, avalanche and Algo. And the metric we're measuring here is active addresses. So, active addresses are addresses that made a transaction within a given time period. In this case, the time granularity is a day.
00:12:21.720 - 00:13:19.540, Speaker B: So you can see that ethereum, which is like a mint color, is about 750,000 active addresses for the past few months. And Solana has been sort of linearly growing over the past few months. And what this means to me is not that necessarily more users are there, but that there's a lot more activity on Solana, probably because transaction fees are much cheaper and there's a much higher throughput in transactions. So this is a nice proxy we have for measuring how active or how used a blockchain currently is. The next thing we wanted to look at was total volume locked. So this is a way for us to see specifically in this case, we wanted to look at how much total volume is locked into deFi protocols on different layer ones. So here TVL is the amount of cryptocurrency locked within DeFi protocols.
00:13:19.540 - 00:14:14.990, Speaker B: And so the proportion here shows like it's a value of dollars. So we see that Ethereum starts off as the king of Defi, and over time, we see different protocols end up grabbing more and more value overall. And to me, this indicates it's not a zero sum game. There's a lot of value to be had in the defi market. And even though Ethereum is no longer the only Defi king, we see that Solana, binance, and others are doing pretty well since March of this year. And then if we zoom in onto a couple of these, we see something pretty interesting. So Solana, as you may know, is not EVM compatible, whereas these others are.
00:14:14.990 - 00:15:14.014, Speaker B: And we find that here we also measure TVL, but instead of it being a proportion, we're measuring it in terms of dollars. And we see that with EVM based DeFi protocols, there's a sort of initial spike as users get onboarded on very easily because of how traditional evms are. But since Solana was not like that, they sort of have their own ecosystem and their own app space. And so they grow more linearly, whereas the others sort of spike in the beginning and then sort of level off. And one comparison we like to make this, we liken this to sort of like Apple having their own ecosystem, whereas, like every other protocol on here is kind of like Android in an open source environment system. Now, Ali will talk a little bit about how users get onboarded onto Solana. Thank you.
00:15:14.014 - 00:16:11.874, Speaker B: So we started taking a look at activity on bridges. So now that there are many different blockchains that users can interact with, it's important to monitor bridges. That allows you to move from one blockchain to another. And especially we wanted to see from Ethereum, which is basically where DeFi was born and where users usually got onboarded over the past year, we wanted to see how many people was trying to bridge into Solana. And you can see here, chart that displays unique depositors on the wormhole bridge. And we can see that August and in particular September, there is a spike of users per day. And then this kind of activity is flattening over October and now at the beginning of November.
00:16:11.874 - 00:16:59.650, Speaker B: And this is the same for the total value locked into the bridge. So the total value locked into the bridge is important because when you bridge from a blockchain to another, you lock the funds into the bridge and the same amount of token is minted on the new blockchain. And we can see again that is a similar pattern as the unique depositor. So there is a spike in September, and then the total value locked is slowly decreasing. So we wanted to try to analyze why this is happening. So it's people going away from Solana, or maybe there is any kind of another type of onboarding that users do. And we try to look at volumes that centralized exchanges have on Solana transactions.
00:16:59.650 - 00:18:03.880, Speaker B: And as we can see, starting from September, there is a consistent activity growing into transactions that these exchanges do. And this can be used as a proxy as well of like more users are directly buying, maybe on ramping from fiat to solana on exchanges and withdrawing and participating to the ecosystem. It's interesting to see how Bitfinex ahead of the launch, we think that the spike in number of transactions is because they created a preset number of addresses that they assigned then to their users. This is data that we take ourselves at Coinbase analytics, and it is data that we see from the blockchain. So it might not represent the full pictures, of course, of the exchanges activity. That's what we could see. We can also see how many Solana were withdrawn from centralized exchanges over time.
00:18:03.880 - 00:19:06.392, Speaker B: And here we can see that there was a spike in activity, let's say in September, but there is not really a consistent trend upward. And here, the interesting thing is that it reveals that FTX, which is a very important participant on the Solana ecosystem also in terms of centralized exchanges, play as a very important role. And binance is following right after. So those are the most active exchanges that we could find operating with Solana. So now that we've talked about how users get onboarded, we wanted to talk also a bit about what's happening in DeFi on Solana. So we wanted to try to see which are the trends. And of course, we can see here that among the major DeFi protocols that we evaluated, there is a consistent trend upwarding on the total value locked.
00:19:06.392 - 00:20:28.996, Speaker B: The amount is in dollars. So of course, the grow is also influenced by the price of the assets underlying growing. But we can definitely see that while radium and serum started earlier this year, then with the new commerce, this is not, as Christian said before, like a zero sum game where DeFi protocols steal user from each other. But we've seen that there is an organic growth that the more protocols, the more people get onboarded. And here we can see what a bit of a trend. So like, which are the most consistent over time or usually, as we said, protocols use incentives to bootstrap their network and try to get users to use the platform as quick as possible at the beginning. So it's important for us here to notice if there is an organic growth in the total value locked, or if there are spikes in use, that can be a sign of users just getting in and farming all the tokens that they can with the incentives at the beginning and then move out and go to new farms.
00:20:28.996 - 00:21:46.734, Speaker B: So this for us is interesting data that can show to protocols which kind of behaviors and features of a protocol can help them to organically gain user traction, rather than having a lot of bootstrap at the beginning, but that not being able to retain the users. And this is something that is not like a solana, only related. It's definitely also, we've seen it extensively in the past on Ethereum as well. And there is a statistic, I think, from Nansenai that they say that around 70% of the users that go into a pool to farm tokens at the beginning of a launch of a protocol, they live within 24 hours. So that's definitely something that helped the protocols to grow. But I think that the expected behavior is to then stay and try to grow together. These are another charts that show us which market share this protocol have.
00:21:46.734 - 00:23:01.662, Speaker B: And it's very interesting for us that five of these protocols are dexs, and they kind of share the same, almost the same market share. So there is not really a couple of protocols that own a lot of the volume like that could be in Ethereum with Uniswap and sushiswap. But there is a kind of uniformity around here, which is very, very interesting to see and if it will be able to play out also more in the future. Yeah, so all this data is being taken from us and assembled the kind of elaborated from mostly open source intelligence, open source website. So only the labels that we applied to centralized exchange change our proprietary of our product. So that's a very what we wanted to demonstrate, that a lot of data is out there and it's just ready to be consumed and can be very valuable to take data driven decisions on this space. This is all for us.
00:23:01.662 - 00:23:15.734, Speaker B: I wanted to leave some time for potential questions, or if there are known, we're gonna hang out here a bit later as well. So if you wanna come talk to us. Thank you, everybody.
00:23:16.394 - 00:23:20.134, Speaker A: If anyone has questions. Yeah, I got you. I'm right here.
00:23:20.914 - 00:23:55.814, Speaker B: Hi, there. Thank you. So you mentioned how there's at some point, the. Effectively, the data trail stops in terms of. Of analytics. So looking forward into the future, if the validators aren't really storing that data, what does that look like from an analytics perspective? How do you hypothesize what has happened before that? That's a good question. I think that it's something that we are exploring at the moment ourselves, and we are trying to see what's the best solution.
00:23:55.814 - 00:24:32.674, Speaker B: A solution could be to just save some checkpoints in time ourselves as well, on our database, and try to then rerun backfill anytime that we want to apply new heuristics or new algorithms on the data set that we own on our property database. So I think that if you run your own analytics, it's important to have the whole history of the blockchain eventually. So that's kind of separate from the proof of history that you mentioned.
00:24:34.374 - 00:24:38.354, Speaker A: Any other questions? I can come around with the mic if anybody's got anything.
00:24:40.734 - 00:24:41.554, Speaker B: Yep.
00:24:44.054 - 00:24:59.904, Speaker A: Hi. Thank you so much for the overview. I'm not sure whether it's, like, the right moment to ask this question, but I was wondering whether you could share more on the kind of tools that you use to explore the blockchain and get to these conclusions. Thank you.
00:25:00.204 - 00:25:53.690, Speaker B: Yes, thank you for the question. So a lot of these data that we have taken, we have quoted the sources. We have a website that is named Defi Lama, which is very good for anything DeFi related. And there's a good coverage also for Solana. So you can see what's the total value locked on each of these protocols, how they are growing over time, and you have the possibility also to download data from them for their API. So even if you want to do your own analysis, you can take the data locally on your computer, and then you can elaborate and draw charts on what you want. Other sources that we have taken from Dune analytics, which doesn't support Solana at the moment, but was the data that we've taken to see flows from Ethereum to Solana through bridges.
00:25:53.690 - 00:26:49.334, Speaker B: And that's a subscription kind of tool, so you can use it for free as well on the platform, and you can query with SQL the database, but then you cannot download the data unless you subscribe. Yeah. And the last one was another website named Chaincrunch, which we found very useful having some data on general network statistics and protocols on the number of transaction tokens that are moving. Also, that's an interesting topic because we recently launched USDC on Solana and was interesting to see how it played. Started to be a very important role on the ecosystem. So stablecoins are important for to grow a system. So some of these are all open and so.
00:26:49.334 - 00:27:12.464, Speaker B: Yeah. And I think one other tool, we didn't use it in this presentation, but Nansen AI, I really like for analytics, it's really cool. They have computer generated labels so you can find whales or other things that might be interesting to you. Definitely use it to just poke around and see what's interesting on Ethereum.
00:27:14.404 - 00:27:19.748, Speaker A: Other questions out here, they will be around.
00:27:19.796 - 00:27:20.740, Speaker B: Yeah, behind there.
00:27:20.892 - 00:27:22.104, Speaker A: Ah, okay.
00:27:22.484 - 00:28:27.004, Speaker B: And as we said, there is not much data at the moment on Solana. So I think, again, it could be a good, interesting opportunity to develop. Have you done any research into the distribution of wallet sizes to drive all that volume? Because one of the criticisms I hear about Solana is it's held by a small number of whales who control the market. But have you seen that retail surge driving a lot of that volume? Is that something you've looked into? We tried, and some of the data that we can take, we haven't got an actual answer on that. But some aspects that you can use as a proxy for it are, again, bridges. So see the size of transactions that get bridged. So if few addresses send large amounts on the other blockchain, we can assume is mostly very concentrated and waste driven, or even withdraws from exchanges.
00:28:27.004 - 00:28:51.884, Speaker B: Like if we see a withdrawal of few hundred dollars or even few thousands, we can assume it's mostly retail audience that is withdrawing and trying to participate on the ecosystem. But yeah, we haven't gotten a solution. But that's a very interesting thing we should have definitely displayed. Yeah.
00:28:53.804 - 00:28:56.464, Speaker A: All right, last one. If someone's got one.
00:29:04.604 - 00:29:36.824, Speaker B: When you had a graph about the new accounts on Tlana, the growth of it, is it only signers or is it every account in a transaction? It's number of distinct addresses that are transacting on a given day. And that includes not only accounts, but also programs. So that can also be. Not only is generally used as a proxy for users that are using the network, but is. Yes, yes. Signage. Sorry.
00:29:36.824 - 00:29:42.224, Speaker B: So, yeah, it's. Yeah.
00:29:42.964 - 00:29:48.660, Speaker A: Awesome. Okay, thanks so much, guys. That was super interesting. I love looking at blockchain data. Thanks so much.
00:29:48.692 - 00:29:49.384, Speaker B: Thank you.
00:29:51.344 - 00:30:23.864, Speaker A: All right, the next thing, this is how this day is going to work. It worked the same as yesterday, but in case you all weren't here, we basically have a contextualizing panel, and then we'll have several developer workshops around that same topic area. So the topic area we're starting out with today is Solana in the multi chain world. So Solana is sort of fast becoming a blockchain of choice, just past Cardano, I guess. What was that, Sunday, Monday. So watch out for his hawk, I guess. But fourth largest blockchain.
00:30:23.864 - 00:30:50.814, Speaker A: But also, it's not a winner choose all or winner takes all kind of market anymore. It does seem that we are moving towards a multi chain world with people looking for blockchains that suit their use cases. So this next panel is all about Solana in the multi chain world. And I'm going to go ahead and bring up Sean Young, who's with Solana Labs, and he's going to be the facilitator of this conversation today. Sean, come on up. And panelists, come on up.
00:31:11.734 - 00:31:57.306, Speaker B: Hello. So, as the market matures, we'll end up with multiple chains, most likely. On top of that, the central bank might start issuing their own currencies. So we'll have to start solving problems of cross chain transfers and development on different blockchains. So in order to discuss this, I have a panel. So, Andrey Falaf of CTO of Neon Labs, Michael Burgess, CEO of the Ren Project, and Van Foo, co founder of technology floating Point Group. Welcome.
00:31:57.306 - 00:32:30.224, Speaker B: Thank you. Thank you. So, all of us have worked on various aspects of cross chain royalty chain technology. So I think it would be most interesting if we start off by each of us introducing ourselves, what we've worked on, what problems we have solved, and what challenges we have faced. And then after that, we'll do some questions. Andre, you start. Ok.
00:32:30.224 - 00:34:03.574, Speaker B: I'm CTO in the neon labs, and our team have developed an ethereum virtual machine for Solana. It's a not classical virtual machine, it has a different design. Our EVM is executed by the Solana virtual machine, and we can upgrade it in any time to do it, our governance should sign the transaction for upgrading, and that's all. After that, any user transaction which can be formed using any Ethereum toolkit can be sent to the Solana cluster, and the Solana cluster will execute user transaction in parallel Ethereum like transaction and stores data in the Solana state. So any application from the Ethereum ecosystem can be executed on the Solana yesterday and today we show in workshop how it works. If you want, you can come on the second floor. I will show you in live how I download open Zeppelin contracts, compile it in Ethereum toolkit, and upload to Solana Cluster and call its message.
00:34:03.574 - 00:34:33.856, Speaker B: Okay, wonderful. Thank you. Yeah. So, Michael Burgess, CEO of Ren. We're an interoperability protocol or a bridging protocol, and we support a variety of layer ones, but Solana as well. And to date, we've brought around $600 million worth of assets to Solana, with a total of 200 5300 million TvL at this stage. Majority of that's in bitcoin, but we also support a variety of other legacy assets.
00:34:33.856 - 00:34:53.404, Speaker B: Filecoin, zcash, so on. Yeah, so it's. It's been quite successful. The Sloan team's been great to us. Yeah. And I think a few things that makes RenvM relatively unique is two things. First of all, this minting and burning of assets is fluid or permissionless.
00:34:53.404 - 00:35:22.328, Speaker B: So essentially, the user sends in real bitcoin to a bitcoin address. It's then custodialed by RenVM, our network. And then a one for one SPL token is minted on the Solana blockchain as RenBTC, and then they can go and take that and do what they wish with it. A majority of our success at this point has been through the saber pools. These one to one amms. They've allowed us to bootstrap a fair amount of liquidity, and that's where we've seen a majority of our success at this stage. The second point is it's composable.
00:35:22.328 - 00:36:01.650, Speaker B: And so what that means is RunvM is a network. It's a decentralized custodian, so you can embed arbitrary contract data within a smart contract call. So an example is, is a user wants to send bitcoin, real bitcoin, to Solana, but then deposit it to a saber pool, for example. So they can do that all on one on chain transaction. So RenvM will take the bitcoin custodia meant that one for one SPL token and then automatically deposit that into a saber pool. So the user really just has to send in real bitcoin, and that's it, and then it's deposited. So, Rohit, actually, one of our developers will be speaking on this after the panel.
00:36:01.650 - 00:36:26.154, Speaker B: So if you want to learn more about it and how it all works. Yeah, definitely, definitely join that. Yeah. So that's what makes renvm unique. And I think one thing to note that we're working on, it'll come out in the next couple weeks, maybe a month, is something called host to host. And that will allow us to take any generic Erc 20 token and mint it on Solana. So we'll be focused on stable coins at first, of course, so that's where the highest liquidity is.
00:36:26.154 - 00:36:54.456, Speaker B: But yeah, I think that'll bring a variety of more assets and more liquidity to the Solana ecosystem and allow, again, this fluid minting and burning that I mentioned. Yeah, so we're super excited and the slot team has been great. Thank you. Good morning. My name is Van and I'm pretty stoked to be on this panel right now because normally I'm the most technical guy on the panel, but not in this case. Definitely not in this case. So I work on a company called Floating Point Group.
00:36:54.456 - 00:37:51.548, Speaker B: And what we do is we help traditional financial institutions trade, settle in custody. They're crypto. What this looks like is we set up NPC wallets so that customers can give us their assets and trust that we can work with their assets in a safe and secure way. And then afterwards we get them the best price, as well as move their wallets to any DeFi protocols or any cold storage that they would need. And a lot of the DeFi work that we do, I won't regurgitate what Michael has already said, but we basically, what this they do, what Michael says is with serverless functions, and it's a lot of headaches not being able to solve that problem on the blockchain level. Instead, we have to have a lot of weight functions, a lot of asynchronous functions just to wait on Ethereum, wait on the slower chains to maximize yield farming for our customers. In terms of the next steps for us, we're going to grow our team.
00:37:51.548 - 00:38:39.314, Speaker B: And so, yeah, if you guys are ever interested in working with the smartest guys on the block, aside from these guys, talk to us. Thank you. So I work on Solang. Its a steady compiler which can compile synerty into native Solana, but also native Polkadot and native Ethereum E wasm. So I'm kind of used to working with different communities and it's a good thing because the different communities all want a new compiler so different groups can work together. And even though even everyone's working on their own chain, there doesn't seem to be any problems cooperating. It seems to be quite.
00:38:39.314 - 00:39:37.678, Speaker B: Everyone seems very cooperative. Van, when I spoke to you, you mentioned that financial institutions, you help financial institutions evaluate different chains. So what criteria would they use to compare chains? Yeah, so I'm sure everyone in the audience has heard about the blockchain trilemma, right? You can only have two of the three. Three being scalability, security and decentralization. Well, in the future of blockchain, institutions will care about a few other things too. We've seen already some of these things, permissions with respect to ripple and xrapid. You've seen a better UI UX with respect to the newer blockchains out there that are a little bit easier to use than bitcoin.
00:39:37.678 - 00:40:29.240, Speaker B: And really, transparency is a bigger one that will come out in full force once institutions start moving in. And it's not, I don't think it's realistically possible to have one blockchain solve all of those problems. Instead, you would need to have a multichain solution. There would be a blockchain per solution. And hopefully the surface area of all the blockchains combined together adds up to meet all of the standards that you're looking for. And where I see Solana playing a part in all of this is that because of its focus on scalability, it definitely has a place in being the nexus blockchain. Like where everything gets settled and sort of where Michael spoke kind words about the sabre community and how their protocol is moving tons of money right now and their TVO is incredibly high.
00:40:29.240 - 00:41:05.564, Speaker B: Shout out to Ian if you can hear me. That's how we see the future of blockchain as well. Where all the other larger chains, or not larger chains, sorry, all of the other chains on top will communicate down to the solana layer, will make all the bridges will exist on the Solana layer. All of the money will move through the Solana layer. By virtue of the fact that Solana has focused on scalability, that doesn't mean that other chains don't have their place. A chain with transparency will be on top of Solana. A chain with security will be on top of Solana.
00:41:05.564 - 00:41:55.918, Speaker B: But yeah, I really do see that the realistic paradigm of the future of blockchain will be a multi chain future. Michael, do you want to say anything more about that? Yeah, actually I couldn't agree more. I think Solana will serve, and this is pontificating here, but I think Solana will serve as kind of a global settlement layer for a forex market. I mean, we're going to be bringing a variety of stable coins over that are not native to Solana. And there'll of course be native token contracts like USDC that are just natively minted on Solana. So you can think of it again as this global settlement layer for a forex market where you have all these stablecoin assets coming in. Pair that with the saber pools and you can move one to one to a variety of the different assets.
00:41:55.918 - 00:42:44.314, Speaker B: And with Solana's speed, I think that's going to be very conducive for that type of product to come about. So yeah, I'm personally looking forward to it. I mean, of course that'll be something. Just bringing the assets and the liquidity of course, will be an effort, but then creating again a nice UX on top of that where an individual can just come in with Dai or whatever the stablecoin they have and immediately switch it out for whatever they want and either keep it on Solana or burn it back to another chain of their preference after they've actually done the settlement. So, yeah, couldn't agree more. You mentioned bridge aggregators, which was a new concept to me. Can you talk a bit about that? Yeah, I'm just kind of assuming they'll pop up, and I know there's a few teams working on them.
00:42:44.314 - 00:43:21.572, Speaker B: Just as we have Dex aggregators on Ethereum. A user doesn't want to go to uniswap, sushiswap curve, a variety of these standalone liquidity pools. They want to go to a nice clean UI and I want Ethereum for Dai. And then the bridge aggregator tells, or excuse me, the Dex aggregator tells them the best price that allows fees. So just apply that concept to a bridge aggregator as well. You'll set your parameters, whatever that might be, and they'll pick and choose the best bridge for what you're looking to accomplish. And I think, I assume it will come true.
00:43:21.572 - 00:44:12.374, Speaker B: We'll see. But I think that kind of falls under the umbrella of improving Ux, just generally for the user. They don't want to sign transactions, they just want to show up with their asset and get whatever they're looking for or bridge it accordingly. Yeah, I think it'll be a concept or a theme in the coming months. Okay. Slightly switching and how the development experience of writing contracts is working multiple chains hasn't been great so far. Why is that? At the current time, a community from Ethereum has a very big knowledge base.
00:44:12.374 - 00:45:43.064, Speaker B: If you try to find some information about how you should develop the smart contracts, most answers which you will find will be about the solidity language, sometimes about the VYPR, but the most recommendation about the solidity. The community is very big and the situation is progress. And after some time there are a lot of blockchains which support CVM. And the VM became the standard in the blockchain industry. If you want to develop an application, the first which you will find it's some libraries, some recommendations and radio applications for Ethereum and Ethereum. Like blockchains, this standard allows to integrate different blockchains together in easy way. And what I think about it is that if we will bring the Ethereum virtual machine to the Solana, it allows to integrate technology base of the blockchain industry to the Solana.
00:45:43.064 - 00:47:07.184, Speaker B: It became too easy to grow the community on the blockchain. It brings a lot of developers, a lot of device and other blockchain applications already exist on the market. So what I think about it, that developer, developer experience is a very big advantage for any blockchain. I think that's all. So you've been working both in the start of community and Ethereum community to make this work. So what's it like working across communities? Are communities receptive or people prefer to work on their own? There are two tasks which we should resolve. The first task which that we should allow the applications to run on the Ethereum or the Ethereum applications to run on the Solana.
00:47:07.184 - 00:48:24.412, Speaker B: But it's only furthest. The second step, which want both communities, the Ethereum and the Solana community, it's integration between them. And this is our main competition at the current time, we created an Ethereum virtual machine, can execute simple Ethereum, not simple any Ethereum application, but the next step should integrate with Solana. So this is the main point of both communities. The Ethereum and the Solana applications from Ethereum want to get the sources and fast integrated with Solana infrastructure. When Solana community waits Ethereum applications to integrate with them. This is the main direction of our communications with both communities, Solana and Ethereum.
00:48:24.412 - 00:49:01.000, Speaker B: Okay, Michael, what's your experience of working with different communities? I'm bridging them. Yeah, yeah, of course. So we support, I think of seven blockchains at this point. So we have Max and I is one of my team members. You know, we're in the trenches dealing with community members from a variety of ecosystems. You know, Ethereum's been great to us, of course, a variety of our volumes been there. That's what we first supported, you know, and they all, they all have their nuances, of course, but yeah, Ethereum has been great, but Solana has been fantastic.
00:49:01.000 - 00:49:54.596, Speaker B: I mean, I think the easiest thing to say is they're just hungrier, you know, that be the community members, the developers, the Dapp developers as well. Yeah, I mean, everyone's a bit hungrier here, so they've all been great to us. Everybody's relatively collaborative. So yeah, it's been a pleasant experience with the Solana community specifically. And yeah, I mean, to piggyback off your point previously, I mean, I think developer tooling is so crucial. That's something that we put a lot of effort in, at least on the ren team, we've this ability to move assets to and from Solana. We have a third party SDK and basically that allows any user, or, excuse me, any developer to basically build an application or front end that allows you to their Dapp to bridge assets using RenVM under the hood.
00:49:54.596 - 00:50:36.604, Speaker B: So we've put a decent amount of focus on that as a result, and it's paid off. So I think just to support your point, developer infrastructure is crucial. Yeah. So to summarize, Solana has been great from a community perspective. Sean, if you wouldn't mind me asking, what's your experience with coordinating two developer communities? It's been very good. You notice that communities tend to very much work in their world. So in fact working across communities is great because you get a slightly bigger view.
00:50:36.604 - 00:51:28.410, Speaker B: But I haven't come across anyone, any difficulties working across communities if we're wanting to be very supportive. Writing a compiler, as I'm doing, is quite a large task. So I think there's a realization across communities that working together to make this possible is a great way of doing this so that together we can build something which individually would be a lot more difficult. And yeah, it's been a really great experience. I come from a closed source background. My compiler work has been mostly closed source before this, and working both open source and across communities has been. I know, but it's been absolutely fantastic.
00:51:28.410 - 00:52:13.814, Speaker B: You get to work with the great minds and on very interesting technology. So I really, I couldn't be happier, to be honest. Yeah, and just to point on the community aspect, I mean, blockchains just, you know, as long as there's one node that has the records, they are pretty much permanent. But what actually would kill a blockchain is the lack of community. And it's great that Solana has such a strong community, and it's great that Solana is also infecting effectively other communities with it. Infecting meaning that the other communities have to compete with Solana. There are, you know, cosmos.
00:52:13.814 - 00:52:41.774, Speaker B: There are people in cosmos right now that were from Solana and made money off of Solana. Testnet. There are, you know, there are people like mister. Sorry, Sean. Sorry, I was going to call you Stephen. There are people like Sean who moved from Polkadot and to Solana and brought his energy from Polkadot into Solana, has made Solana a little bit faster than it needed to really be. It's already too fast enough.
00:52:41.774 - 00:55:04.854, Speaker B: But, yeah, I think community is the end all, be all of what makes blockchain great. I think it might be interesting to kind of gaze in the crystal ball and think about what sort of things we think, how the market is going to develop, how you hope or envision this space developing, because this is a very important part of the whole blockchain story. So I would like to give Andrej, what do you think? I'm seeing that not developer, not developer decide which application he want to bring to the market. The market told him which applications are now required by the market. And this is an intuition. When some developer find a level which not used by other applications and which requires by the market, and if he found it, the market will welcome such application, you can sell to market any application or any language which are not needed by the market, maybe you can explain any other aspects of this question. What do you think? Are you referring to Michael or referring to any of you? Yeah, no, I'm happy to speak on what I would like to see.
00:55:04.854 - 00:55:27.250, Speaker B: I've been pushing this narrative for a while. I mean, just a general kind of overview of where you think the market and the Solana ecosystem is going. Is that the general. Yeah, well, it's sort of in a cross multi chain, kind of. Yeah. So I would pretty much piggyback off the point I had mentioned previously. And again, this is that narrative I've been pushing, really, since curve came out.
00:55:27.250 - 00:56:08.396, Speaker B: You know, 2020, 2019. It was very clear to me that one of these blockchains will be a global settlement layer for a variety of assets, whether that just be cryptocurrencies, real estate, whatever, doesn't matter. It'll be put on chain, and then there'll be a global settlement layer. And I think with the advent of sabre on Solana, there's a really solid chance that that will indeed be Solana. So, again, this forex market, I think, is something I'm really excited for, and we're personally pushing for as an organization. But that's quite conducive, I think, to this ecosystem in particular. So that's important, of course.
00:56:08.396 - 00:56:49.824, Speaker B: But then there's a huge cross chain component to all this. We've got native assets that are minted on Solana, like USDC, we've got a bunch of native ethereum based stablecoins, whether that be algorithmic or some other variant. So they'll need to be a part of this. And then eventually we'll get to cbdcs that are backed by nation states. They'll likely be on their own blockchain, but they might be native to Ethereum or Solana, who knows? But nonetheless they'll need to be bridged to some degree. So creating infrastructure for that particular use case is crucial, and that's something we plan on working on. So that's kind of how.
00:56:49.824 - 00:57:30.828, Speaker B: Well, that's what we're predicting and building for, basically. Yeah. So I'll leave it at that. Dan, do you have any? Yeah, so I guess I talked a little about what Tradfi would want to see, but I'm not sure if you guys care about Tradfi. But what I want to see as a developer myself is that right now, you know, Solana is rain in rust. A lot of people here are very familiar with JavaScript, are very familiar with Python. I'm sure some of you guys are familiar with, I don't know, sorry, I was going to say brain fuck.
00:57:30.828 - 00:58:31.310, Speaker B: I guess I said brain fuck. But there's a language for everything, you know, whether it's a trivial language or whether it's a high level language like Python or JavaScript, or whether it's a low level, low level language like rust. And I think that the blockchain you will use will be highly dependent on what application you will try to work on. So right now, I think that crypto as a whole is trying to solve the infrastructure problem. You know, building the right infrastructure, making the right design decisions in order to further our goal of building the right apps afterwards. Luckily, we're getting, I think we're getting quite close to solving the scalability problem, and perhaps another blockchain will solve another problem. But at the end of the day, what I want to see with the blockchain community as a whole is that cross chain interaction will be easy.
00:58:31.310 - 00:59:39.074, Speaker B: Inter blockchain communication would be easy. If I could put in USDC Solana, get out USDC algorand or USDC Ethereum, that would be great. And there are pros and cons to each USDC description, but at the end of the day, there is going to be enough demand for all of these blockchains. Okay, what about you, Sean? What do you think about it? I tend to look at it from a developer experience, and at the moment, most of the languages are still evolving for smart contracts. So stability is very ethereum centric. That would be nice if that could be more cross chain. There are various rust frameworks for different chains, each with advantages and disadvantages.
00:59:39.074 - 01:00:27.958, Speaker B: Just need to kind of settle in some sort of way right now. If you want to port your smart contracts from one chain to the other, you can either do everything EvM or you can rewrite your contracts. If you rewrite your contracts, you need to reorder them, and that's expensive and comes with risk. So some solutions that would be good, and I think time will bring that. Anything anyone would like to add? Round of applause for Sean. I will say one thing. We are hiring.
01:00:27.958 - 01:00:40.364, Speaker B: I forgot to mention that. So if you want to work on this vision that I've outlined, please apply at jobs dot renproject IO. Thanks, guys. Thank you. Yeah, cheers, man. Thank you so much, Ron. Thank you so much.
01:00:41.494 - 01:00:53.494, Speaker A: That was awesome. Thank you, guys. Also, Van, you are more than welcome to curse. You guys can. Yeah, get off the stage. It's that time. But you can curse on my stage anytime you want.
01:00:53.494 - 01:01:13.224, Speaker A: Thank you so much. All right, so it is time to get out your laptops. We have some workshops coming up for you. We are switching out Michael at Rin for Rohit at Rin. And he's going to show you how to make cross chain dapps with Rin. So, Rohit, come on up.
01:01:23.084 - 01:02:41.400, Speaker B: Yeah, hi, my name is Rohit and I am a developer at Ren. And yeah, over the last couple of years, we've built some amazing infrastructure, multi chain infrastructure for developers to bridge assets across chains. We initially started with bitcoin, bridging bitcoin to Ethereum as a one, as one representation called Ren BTC. And the most important functionality which RenVM provides you is that it is decentralized and there's no single authority that controls the key which holds your bitcoins or any assets. In the last one year, we tried to focus pretty much on building an abstraction over all these chains. And this abstraction is pretty cool over all these EVM chains which were popping up over the last year, including avalanche, Binance, smart chain, Polygon. And it was towards the end of last year that we started building on Solana.
01:02:41.400 - 01:03:54.404, Speaker B: So you could bridge assets from bitcoin, Zcash, or these Utxo chains to Solana. So, yeah, this is just an overview of how RenVM, how developers could think of RenvM. They could think of it just as a black box. And you do certain operations on one chain and you tell RenvM that, oh, I've done this operation, and RenvM validates this, whether you've done it right, whether there is some issues in that or not. And if all checks within RenvM are satisfied, then it gives you this kind of a signature, which allows you to mint your assets on the host chain. So after we launched on Solana, it was around five months ago, we've had close to $500 million worth of volume and the total value locked, which have been bridged to Solana, it's mostly BTC, but a lot of Luna and these tokens. The total value locked right now is close to $250 million.
01:03:54.404 - 01:05:06.984, Speaker B: The biggest mint amount was close to 29 bitcoin. So I'm just. Because this is a developer workshop, so I'm just going to take you through step by step. What do you do as a user to interact with RenvM or a developer? So you first interact with RenvM and get a gateway address. This gateway address is sort of like a unique identifier for your transaction, so that RenvM knows what it's going to verify and who it wants to give the result to. And once you get this gateway address, you do your bitcoin transaction, send the bitcoin to this gateway address, and it's basically a script address, which RenvM has, is able to pull funds from into its own wallet. Once you do your bitcoin transaction, you submit a RenvM transaction to RenvM, and this transaction includes fields like the transaction hash, the outpoint.
01:05:06.984 - 01:05:54.034, Speaker B: And this is when you send this information to Renvm. RenVM waits for some confirmations for your transaction to be confirmed from RenVM's point of view. And once it verifies all of this data is true and that you've submitted your transaction, the transaction is complete. There have been sufficient number of confirmations. Then it gives you a signature. This signature is a signature with a sec p curve, which is the cryptographic curve used by Ethereum bitcoin for its cryptographic primitives. You use this signature to mint assets on the host chain or the target chain, be it Solana or ethereum or polygon, whichever chain.
01:05:54.034 - 01:06:56.284, Speaker B: So in this case, Solana, we have our Solana programs, which are able to verify this signature. And if everything is verified, the SPL tokens are minted to your recipient address on Solana. Once you have these representations on Solana, and you want them back on the original chain, for example, you want to burn these Ren BTC tokens back to bitcoin and back from Renvm and receive bitcoin. You burn those tokens and this creates a log on Solana, which is persistent log saying that oh, this is my burn nonce and this is the amount I've burned. And you send all of this data to NVM. And NVM again validates whether this transaction happened. This burn log exists on Solana and it verifies the checks.
01:06:56.284 - 01:07:58.514, Speaker B: For example, how many tokens you've burned deducts some fees for RenVM and it releases those bitcoin back to the address that you really want them to, you want to receive them on bitcoin. There is a different burn functionality which we will soon have when we enable ERC 20 tokens coming from Ethereum to Solana. So for example, you could have Ren Dai on Solana. And if you want to burn this rendai, you burn those tokens. Tell Renvm that I have done this operation. Renvm gives you back a signature giving you authority to release those funds from the Ethereum smart contract. And you can release those rendai because in this case renvm cannot release those assets directly to you just in case of bitcoin, because for bitcoin you need Utxo to release, but over here you need gas and it's the user's operation.
01:07:58.514 - 01:08:48.754, Speaker B: So the user can take this signature and make a transaction on Ethereum to get back their locked die. So this is a little bit of code. Any developers here? Yeah, that's great. So Ren JS is our JavaScript developer tooling. You can use ranges to basically build, to bridge assets from between any chain to any chain. And we have built some functionality which allows you to specify which chain you want to use as the source chain, the chain you want to use as the destination chain. And a lot of stuff is done for you by the Ranges library.
01:08:48.754 - 01:09:52.563, Speaker B: For example, the step which I mentioned before where you deposit your tokens and you deposit your bitcoin to the gateway address and then Renvm is waiting for the sufficient amount of confirmations. So you can see here is just some instantiation. And you see here the asset, let's say in this case is filecoin. You create an associated token account on Solana, which is the account which will hold your SPL tokens. When you mint and you create a lock and mint, you wait for renvm to give you a lock and mint gateway address. So when you say lock and mint, it's lock my bitcoin and allow me to mint it on Solana in the form of RenbTC so lock and mint accepts these parameters. What asset you're trying to bridge, from which chain you're trying to bridge this asset and to which chain this asset goes to.
01:09:52.563 - 01:10:53.240, Speaker B: So here, in this case it's Filecoin. From Filecoin, then VM network is, you specify which network you are dealing with. Is it testnet or mainnet or something? And going to Solana. And this gateway allows you to watch for events, for example, like on deposit, when the deposit is confirmed. So you could see we create a new promise, and as soon as the gateway receives the deposit, it fires this event for you and you can see whether it's confirmed. I've just put some dummy code there, so not to do a lot of stuff there, but once this deposit is confirmed, you can then await Renvm to give you a signature on that. Once you have it signed, you have a TX hash, which is the transaction hash for RenvM.
01:10:53.240 - 01:11:57.454, Speaker B: It's not a bitcoin or Solana transaction hash, but it's the RenvM specific transaction hash, and it gives you a status whether, you know, according to RenvM, it's successful or not. And once you have the signature, you can just await deposit mint. And this should give you a transaction hash, which is a Solana transaction hash for the tokens which will be minted to you on Solana. So a basic, the most basic JavaScript integration is as simple as this. You could obviously do a lot of stuff, a lot of other checks on your front end, depending on what you wish to display or what you wish to do when the deposit is confirmed or whether it's signed or not, handle failures. You can do all of that, but this is the most basic. And yeah, I think we've been able to abstract over the chains and assets so well that it's less than 20 lines of code just to bridge assets.
01:11:57.454 - 01:12:47.828, Speaker B: So on the Solana side, we have two main instructions in our program. One is the mint and one is the burn. This is just the interface for both those instructions. We make use of program derived addresses. You'll see it everywhere in our Solana implementations, because the token itself, the token mint itself is a program derived address, depending on which gateway you are interacting with. So whether it's the bitcoin gateway or whether it's the Filecoin gateway or something like that, and including the mint log. So the mint log is to persist signatures, for example.
01:12:47.828 - 01:13:44.298, Speaker B: We don't want someone to reuse those signatures and mint assets again. So it's that and you have the burn instruction. The burn instruction is to burn your SPL tokens and create a burn log on Solana. I'll just go into a basic rust integration test for people who want to build backend logic with Renvm. So this is an example for burning tokens on Solana using Renvm. So you specify the burn amount, and you specify the recipient of those assets on the original, the source chain, for example, you specify bytes encoded bitcoin address. Or you could specify a filecoin address where you want to receive filecoins.
01:13:44.298 - 01:14:22.368, Speaker B: In this case, it's bitcoin. And you can see the burn log is a program derived address, depending on the nonce of your burn. Using this, then we create a burn transaction. And the burn transaction consists of two instructions. The first instruction is the SPL tokens burn instruction, and our gateway verifies whether you've burned those tokens with the correct program, the amount. And we get all of this information from that instruction. Yeah, that's it.
01:14:22.368 - 01:15:04.182, Speaker B: It's as simple as this. You create this burn transaction, you sign it, and you process the transaction. This is the basic rust integration for renvM. We are also, at the moment, we don't support Solana as the source chain, but in a couple of months we'll be ready with that as well. So you could mint Ren Sol on Ethereum, something like that, or on an EVM chain, an l two. Yeah. And the reason why we couldn't do it, as of now, is because Solana uses different cryptographic primitives.
01:15:04.182 - 01:16:04.706, Speaker B: And then, VM being a decentralized custodian, all the nodes participate in an SMPC protocol to produce the signature, which you need to mint those assets. And those nodes, at the moment, they participate in an SMPC protocol, which produces a signature on the SECPI curve, which Solana doesn't use. Solana uses the Edwards curve. So the way we are going to implement it is something similar to what we did for ERC 20 tokens. So you lock your assets with the program on Solana, and to release those assets at the time of burning, you need to verify your SecPI signature on Solana, something like that. So we'll have it in a couple of months? We are still working on that, yeah, that's the end of the workshop. Any questions from developers here?
01:16:04.880 - 01:16:09.754, Speaker A: If there are questions, I can come around with the microphone. I know everybody loves to talk into a microphone.
01:16:13.334 - 01:16:52.974, Speaker B: Okay. Hi. You said the tokens are locked for a period of time. So what's, like, the time normally expected? Like, is it a few milliseconds or 100 milliseconds? Or is it a longer time, the verification time? It depends from chain to chain. For example, on bitcoin, we wait for six confirmations because it's a proof of work. Chain, we wait for six confirmations. So for bitcoin, it's about an hour before RenVM declares it as the truth for us.
01:16:52.974 - 01:17:24.070, Speaker B: But for Solana, 30 block confirmations is finality. And as, because it depends, it's not proof of work. So you could say something like less than a minute. So in less than a minute, this transaction will be assumed as confirmed from Renvm's perspective. So it depends from asset to asset and chain to chain. Yeah, there's many interests in Solana. Yeah, it's pretty quick.
01:17:24.070 - 01:17:24.794, Speaker B: Yeah.
01:17:26.054 - 01:17:28.674, Speaker A: Any other questions while I'm here?
01:17:33.294 - 01:18:34.124, Speaker B: Hi. For the mint and burn interface, you need to provide the program id for all the different chains you want to reference. Do you have a centralized place where you can find a list of all the program ids? So, the program id depends on which gateway you're interacting with, which asset that gateway is meant to serve. So we have a different gateway for bitcoin, we have a different gateway for filecoin, etcetera. And at the moment, we have not published this crate because we are working on some documentation. Once that documentation is complete, we'll be publishing this crate for different networks. So you'll get to use this, you'll get to import this crate within your source code, and you can access the gateway for a particular asset on whether it's Devnet or testnet or mainnet.
01:18:34.124 - 01:18:37.204, Speaker B: So you can get those addresses from there.
01:18:39.424 - 01:18:48.664, Speaker A: All right, we probably have time for one more. If anybody's got one by the time I get to this stage, that will be done.
01:18:49.124 - 01:19:45.820, Speaker B: Okay, just a simple question. Do you guys have plans to, like, incorporate all ERC 20 tokens? So the protocol itself is permissionless, and it's pretty easy for us to add a token or to support a token, but we are doing it based on the volumes of those tokens. So whether a token has sufficient volume so that we could, because RenVM collects fees for each of these burns and mints, etcetera. So, yeah, it depends on the volume. When we launch host to host, which is already on the testnet now, probably in a couple of weeks or something, we'll have it on Mainnet. We have a lot of stable coins like Dai, USDC. We have magic Internet money.
01:19:45.820 - 01:20:02.118, Speaker B: We have some tokens like FTT, I think around ten to 15, maybe 15 to 20 tokens but, yeah, eventually, if the token has enough volume, the users want it to be bridged between chains. We could add it within a day.
01:20:02.166 - 01:20:06.794, Speaker A: Yeah, well, now I have a follow up. What is sufficient volume look like then?
01:20:08.774 - 01:20:41.094, Speaker B: It's relative because volumes keep going up or down. At the moment, we are trying to choose the 15 to 20 top volume tokens which people are looking to integrate with cross chain ecosystems for, for example, Solana. People are looking for the magic Internet money on Solana, be it native or be it bridged from Ethereum. So that's something which is important to us, whether it will receive adoption or not. Yeah.
01:20:41.754 - 01:20:44.666, Speaker A: All right, great. Thank you so much, Rohit. That was awesome.
01:20:44.690 - 01:20:45.210, Speaker B: Thank you.
01:20:45.322 - 01:20:57.794, Speaker A: Thanks. All right, next up we are bringing Sean Young from Solana Labs back up to the stage and he's going to talk about solidity for Solana. Sean, go ahead.
01:21:09.134 - 01:22:01.804, Speaker B: Hello. Is it possible to have my slide? So this is for the stability devs out there. We've got a whole new tooling set for solidity for Solana. This allows you to take solidity and compile it into native standard contracts, which should make it very fast and has a number of other advantages. So at this moment in time, if you want to write a smart contract for Solana, if you want to do a native one, you'd have to write it to Eden Rust or in c. I think c is also possible. Now, if you want to use steadily, then you have to use an EVM layer in order to make that work.
01:22:01.804 - 01:22:56.178, Speaker B: So this is a project where we don't use EVM, we take civility source code. You can compile it directly to BPF smart contracts. This is a completely new compiler, which is a completely new compiler written from scratch. I started this in 2018 on a rainy Sunday when I thought I can write my own one. I have a background in compilers, so I had been looking at the Ethereum tiny compiler, and they don't use LLVM and they have a handwritten parser. So I thought by starting this product from scratch, we can do a number of new things. We can write it in rust, we can use acidity grammar, and by using LLVM we can do codegen for different chains and make it also very efficient.
01:22:56.178 - 01:23:53.674, Speaker B: So we can generate very efficient code. However, if you want to compile to Solana natively, then there are going to be differences. There's lots of technical details, implementation details of Ethereum, which become evident in the language like gas, for example, which doesn't really exist in Solana. On Solana you have a budget, and you have to execute within that budget, so you don't really have the content of gas left. So if your source code uses gas left, then all that just has to be taken out or has to be replaced with something equivalent. Also, because we're not running on an EVM virtual machine, we're running on BPF. If there's an assembly statement in a source code, then that won't work either, because we don't have EVM instructions.
01:23:53.674 - 01:24:47.252, Speaker B: So those sections have to be rewritten. But those two we've paused up Uniswap, for example, those changes are quite small, so reordered should also be quite small. No, wrong way. So apart from functionality, which is different because we have a whole new compiler, we can also add functionality, which is a bit more difficult with the Ethereum compiler because that targets just Ethereum chain. So we can do things like ED 255 1.9 signature verifications. We have a print function, so if you want to debug with your solidity code, you can just use print, which makes life so much easier.
01:24:47.252 - 01:25:23.440, Speaker B: You can even do string compares and string concatenations, and you can do string formatting. All of those things are not possible on Ethereum. We can extend the language whatever way we see fit. So we want to be sensible about what we could possibly add to the language. Nope, didn't. Again, we also have some more tooling, so because we've written rust, we can use a whole bunch of rust grates. There's a rust grateful for language servers, so we've implemented that.
01:25:23.440 - 01:26:22.144, Speaker B: And so we have a language server, which means we also have a visual studio code plugin which gives you nice little hovers of types and so on, and gives you warnings and errors and squiggly lines. So it's nice for the development experience. It should also work in other ides. We have a new NPM library called Atslan Acidity, which allows you to deploy call and stability contracts, get events, get return values, et cetera. All of this requires slan of 181 because we needed to add some functionality to Slana to make this work. So just a simple example, very very very super basic contracts just to show what it would look like. So you have a flipper, then you compile it.
01:26:22.144 - 01:27:05.592, Speaker B: So you're on Solang with a source file. You say I'm compiling for Solana, then the output is you have a bundled so so that's a native Solana contract file. You have an Ethereum AbI file, and it also outputs a line saying the account data for this contract needs to be 17 bytes. So that's just useful information. So you can use the minimum amount of data for your contracts. So here's some JavaScript to make it work. So you connect, you read the API file, you read the so file.
01:27:05.592 - 01:27:39.964, Speaker B: This is just some stuff to do. An airdrop for your local test program. So you load the program once. So the program, the compiled program is load once. So unlike Ethereum where each contract has an entire copy of the entire code, on Solana we have one contract which contains the code and that can be reused many times. So if you want to deploy the same contract twice, you don't have to pay for it twice. You only pay once for the upload of the contract.
01:27:39.964 - 01:28:38.924, Speaker B: So you have uploaded the code. You need an account to store the account state, so you generate the key pair on the program you call deploy contract with some information about the contract, including construction arguments. Also the amount of space you want the account to have, which is 17 from the earlier slide. We probably need some sort of better metadata so that information is passed along automatically. And then you get a contract as a result on which there's a functions interface where you can call the get function. So this get function is the same as the too far away. The get function is the same as the get function here at the bottom.
01:28:38.924 - 01:29:12.620, Speaker B: So this function is view. So here we can, because the function is viewed, we can do simulate and then the function is simulated so you don't need to pay for it. We have a new version of the library which does this automatically for you. You don't even need to parse simulate. It's not quite published yet. We'll do that soon. You can also call the flip function on the flipper, and then when you get it, then the state has been flipped.
01:29:12.620 - 01:30:03.850, Speaker B: So the await contract functions flip that will do an actual transaction. So that's a very basic example. So a few more technical details. So in syntity your logic types are 256 bits, and in BPF that's not the case. In BPF, registers are 64 bits, which means that the code gen for some instructions has to be a number of instructions. So if you add to uint 256, that's four instructions for four adds to make each 64 bits work. If you have a multiply divide or modulo or so, then it gets a bit more complicated.
01:30:03.850 - 01:30:55.774, Speaker B: You have sort of begin kind of functions you need in order to make that work, but often the value actual values involved on that large. So there's a code path in Solang which tries to reduce the strength reduction on multiply, divide, etcetera. So here we have a loop from I from zero to ten, multiplied by 100. The compiler knows that value can never exceed 64 bit, so it will just truncate the values and do a 64 bit multiply. So it could even derive. So this is what it can do currently. Maybe in the future what we can do is derive that the variable I could just be 64 bit, even simplify the code even more.
01:30:55.774 - 01:31:51.670, Speaker B: So there's a number of optimizations we can do. So this is not the only solution. There's also neon Vm. Of course, Neon VM offers very precise EVM compatibility, so you can take any contract which is written in any state of the version and it will just work. However, it has to simulate each each EVM instruction other, so that's just slower. Solar compiles native code, which means you just get faster code and you also get access to native features. So like the print function, the program log, you can just print directly to that.
01:31:51.670 - 01:32:48.864, Speaker B: With neon Vm you don't have the functionality because it doesn't exist in Ethereum. So it's not an Ethereum compiler, she's just not going to have it. So in the end of the it's very useful and for some use cases it might be a better solution. But here we're trying to do acidity dialect for Solana. So we're now at a point where all the built ins, everything works, they all got unit tests. So now we're at a point where what we really want is people to start using it, and we want to help you. So if you're shady, tdev, you have some contracts, please try it out, tell us what you think, tell you what can be improved, and we really want to make it work.
01:32:48.864 - 01:33:32.084, Speaker B: So we're here to help. We need more functionality, we need more bridges to native things. So in the moment you can't access Spl token and you can't do calls from security to rust contracts, vice versa. So that's definitely very important. That's the thing I'll be working on next. Now that we have our own compiler, we can extend the language any way we see fit. So what features missing? Acidity, what can we add? There's lots of data structures which are missing.
01:33:32.084 - 01:34:23.194, Speaker B: You don't have trees, you don't have arrays which you can grow, push or pop memory arrays. There's lots of things that could be added to solidity. So as long as it's sensible, I just don't see any reason why it shouldn't be added we've got more processing power on Solana, so. Yes, we would like to work on that. Yeah, so I just wanted to talk about it briefly. We have a lot of documentation, mainly about the language, which kind of mostly is the same as the Ethereum CDC compiler. We have a discord channel and.
01:34:23.194 - 01:34:33.514, Speaker B: Yeah, please try it out. Let us know what you think. That's it. Are there any questions?
01:34:34.514 - 01:34:35.602, Speaker A: Any questions?
01:34:35.698 - 01:35:24.650, Speaker B: Okay, so you didn't speak a lot about data storage. For example, on Ethereum, you have mappings that can hold an unlimited amount of data. And then Solana, you have icons that have like this ten megabytes limit. So how do you deal with this? Yeah, so, okay, so like you say you have this key value store on Ethereum, which doesn't exist on Solana. So this is all handled transparently. If you have just fixed width fields that just become fixed, like the clipper example, that's just a fixed amount of account data you need. If you have a mapping, for example, then you can add and remove elements.
01:35:24.650 - 01:36:20.560, Speaker B: In that case, there's a mini heap which can do malloc and free on the account data. So that's all handled transparently. There's no key value store anymore, it's just the account data which just usage grows as is needed. But what happens when the ten megabytes limit is reached? Because unmapping, it's just unlimited. You can have a mapping that holds more than ten megabytes of data, but if you try to store ten megabytes of data on Ethereum, that's going to cost you a lot. Yeah, but there are multiple users that are storing on the state, so it's not all the same user storing data there. Yeah.
01:36:20.560 - 01:36:45.964, Speaker B: So at the moment, you are limited for one solidity contract is one Solana cap. So you are limited by that. Yes, yes. There might be a way of splitting that if necessary. Yeah, this is true. This is limitation. Sure, we can work it out.
01:36:46.544 - 01:36:53.216, Speaker A: Probably have time for one more question if anyone's got one. Okay, cool.
01:36:53.280 - 01:36:53.632, Speaker B: Awesome.
01:36:53.688 - 01:37:20.864, Speaker A: Thank you so much, Sean. We are going to bring up the next panelists pretty quickly. Yeah, round of applause for Sean. All right, so we up next is van, who you saw earlier on the panel. He's from Floyd floating point group, and he's going to be talking about onboarding institutions to using Defi safely, specifically Solana Defi. So, van, come on up.
01:37:30.124 - 01:38:04.084, Speaker B: Hey, guys, I know that I'm the last piece between you guys and lunch, so I'll keep it quick. So, yeah, my name is Van. I want to talk a little about Defi and how institutions, which are our current set of customers, work with Defi. A little about floating point group is that we help traditional financial institutions trade, settle and custody their cryptocurrency. Yeah. So without further ado. So, yeah, what is Defi right now? Defi has grown a large, large, large amount.
01:38:04.084 - 01:38:21.740, Speaker B: The. In past year of. In fact, the yields have. Sorry. The year to date growth has been 57 billion. And that's a lot more than. Yeah, that's a lot more than I expected when I started floating point group, as well as when you guys probably started exploring crypto.
01:38:21.740 - 01:38:44.234, Speaker B: Right. We're all excited for this. Yeah. The change that's happening right now. Now, with respect to traditional financial institutions, they're excited about DeFi, but not for the top right corner. They're not excited for 9999% yields. They're not excited for getting the best nfts.
01:38:44.234 - 01:39:19.034, Speaker B: They're not looking to make $20,000 on an NFT. What they're looking for is something a bit less grandiose. But just as important, they just want the ability to beat the current ten year treasury bond. Right now, that is less than 1%. If we offer, and by we, I mean the DeFi community as a whole, offer something that is a little bit better than 1%, in this case 4.48%, then we're golden. And that's how we can get at least the financial interest of traditional financial institutions on our side.
01:39:19.034 - 01:40:16.702, Speaker B: So, yeah, with respect to how floating point group advises the institutions that we work with, we generally have a list of blue chip stocks. Generally, blue chip stocks has a variety of criteria. They're traded on Coinbase, they're traded on Kraken. The SEC has not explicitly said anything of injury to them. And lastly, the contracts are all auditable. And that Floatingpoint group ourselves have read the details of it in order to recommend to our customers in good faith to use these defi products. So, yeah, what are these products? I'm sure you guys know all these products listed here, but the one that we will talk a little bit more about, at least with respect to tradfi, is borrowing and lending traditional finance.
01:40:16.702 - 01:40:51.814, Speaker B: They have a lot of capital. That's why we're so interested in working with them. But they're not looking to make, again, the next NFT. They're not looking to do anything better than 5%, which is what a yield aggregator would provide. And in addition, yield aggregators are an issue because they will aggregate a bunch of yields from different protocols. And having more protocols mean more surface areas for attack. So, yeah, here is a little landscape of what DeFi is and how traditional financial institutions are judging it.
01:40:51.814 - 01:41:28.484, Speaker B: The green is what traditional financial institutions consider safe. The yellow is a little bit more risky. These are where hedge funds and asset managers tend to play a part. And the red are very adventurous hedge funds. So I don't think you guys are going to be surprised about anything here. We already know that synthetics are a really big issue. The SEC, Gary Gensler, specifically said that synthetic stocks are definitely under the purview of the SEC, just by virtue of the fact that they're a representation of stocks.
01:41:28.484 - 01:41:59.290, Speaker B: On the top left corner, you have just simple cryptocurrencies. This would be where you can imagine the government buying it, some kind of corporate treasury buying it. And, yeah, on the diagonal is the space for hedge funds. And in FPG's case, our set of customers are hedge funds. So, yeah. What are the risks that are involved with Defi? Well, the first risk is default risk. I won't go into more detail.
01:41:59.290 - 01:42:35.434, Speaker B: I'm pretty sure there's one word that you guys are all familiar with, and the word is rug pull. Rug pulling is a big issue for Solana, mainly because the code is less readable. By virtue of the bike. Yeah, by virtue of how it compiles. And in addition, there is a lot more nfts being minted out or being created in Solana, just by virtue of the. The lower cost inhibitions of Solana. The second part is the tech, as I mentioned, a little bit, audits are quite important.
01:42:35.434 - 01:43:37.884, Speaker B: Audits are, of course, a little bit more challenging in Solana because it's a different language compared to Ethereum. The auditors that are popular on Ethereum are only slowly moving to Solana right now. And yeah, they're getting their bearings, but it will be a while until the auditors for Solana have the methodology to actually move forward with a lot of the new projects in Solana. And lastly, I want to give a shout out to the crate project on Solana. It's creating a more understandable, basically an API for API specification for auditors to read, for the hedge fund engineers to read, for us to read, in order to understand what's actually happening in the hood for Solana. So, yeah, the second part is regulation. So regulation has been pretty substantial in the past year.
01:43:37.884 - 01:44:34.858, Speaker B: I'm sure you guys are familiar with AML, which is anti money laundering. What that entails is that we have to make sure that all of the money, most of the money in cryptocurrency is, you know, clean money. We don't want to be using some of the, we don't recommend to our set of customers to be using tornado cash, for instance, because the set of customers that use tornado cash are not the set of customers that hedge funds want to be involved with. The second thing is that the SEC has been, has been tough on DeFi. The big issue here has been CFI lending. Originally, traditional financial institutions have actually been using the CFI lending platforms just because that is a third party solution for them. They didn't have to access DeFi themselves.
01:44:34.858 - 01:45:37.228, Speaker B: But now that CFI has been getting into much more trouble, hedge funds and whatnot, are looking into deFi just directly in order to solve the problems that they want to solve, which is make money. And lastly, the CFTC luckily is not being very stringent on the regulations of crypto. So yeah, go with them. And the last, yeah, and the last thing I want to talk about for traditional financial institutions to get into DeFi is transaction monitoring. So as you can see here, this is a, yeah, this is a DeFi platform. I've hidden the name, but you can see that the level of severity, even though there's a few high risk and a few mediums, is still considered low risk at the end of the day. So what does it mean to be high risk? Well, it's connected to a high risk exchange.
01:45:37.228 - 01:46:26.316, Speaker B: I won't name any exchanges or there could have been a rug pull and the money was sent to said exchange or defi venue and liquidated, and the proceeds were liquidated there. The trad five does not want to be a part of that. Now I want to give you another platform. And as you can see, this platform, you know, it looks relatively alright if you look right to left, but there's just this one big red blip and that one big red blip. Despite the fact that there's less risk indicators, just that one blip has made this, the severity of this, this project quite high. And therefore this project is, you know, eliminated from the purview of traditional financial institutions. And lastly, yeah, I want to talk about yield aggregators.
01:46:26.316 - 01:47:05.360, Speaker B: So the issues with yield aggregators is that they're connected to much, much much more projects. They make money, as you guys know, from aggregating the yields of different protocols and yield farming. And the issue with yield farming is that you're moving tokens from one protocol to another, to another to another. And so what traditional financial institutions have to do is analyze all of the different protocols. So in our case we can see that, you know, everything is medium to low to high, and, you know, you can even see a sushi swap considered high. But then this is definitely eliminated because of harvest. Harvest is a.
01:47:05.360 - 01:47:46.964, Speaker B: Yeah, harvest is a less popular blockchain. And right now, before we actually move into. Yeah, I won't speak any more about Irvis and. Yeah, so the future of Defi is that, provided that we actually address the concerns of tech auditing, as well as, you know, increasing the honest participants of Defi and decreasing the probability, as well as the potential for rug pulls, we hope to see that, you know, blue chip stocks. Blue chip. If I can be recommended. As you know, I'm sure all of us are big fans of serum solenart, mango and sunny.
01:47:46.964 - 01:47:51.364, Speaker B: Yeah. So that's it. Are there any questions?
01:47:53.344 - 01:47:57.004, Speaker A: There's questions. I am here to give you the microphone.
01:48:04.424 - 01:48:59.014, Speaker B: I think it's time for lunch then if there's no questions. Okay, so how big is the demand or interest from tradfi in Defi? What's. What's kind of feeling? Yeah, so the demand is, at least from our perspective, and a little bit more about us. We have offices in New York, Singapore, we have an office in Cayman, and we see a lot of demand from everywhere traditional, whether it be Asia, whether it be the US, whether it be Europe. What's stopping them is effectively a green, a stamp, a green light from government to actually move in. They're happy to move in there right now due to COVID, as well as the stagnation that's happening. They're looking for yields in any way they can, and this is one of them.
01:48:59.014 - 01:50:24.584, Speaker B: One question, given the kind of lack of flexibility institutional investors have, like, they have their mandates. It takes them time to kind of change, like the type of investments they can make with the funds they manage and so on. What's your feeling or your understanding of the situation of the industry in terms of how much institutional players and how much capital is kind of locked? Like willing to get into crypto, willing to get into DeFi, but not able, because they haven't been able to sort out, like, all the issues they have to sort out with their limited partners and so on, and how will it play out in the following months, years and so on? Yeah, so just going back into the matrix. So just to summarize your question a little bit more, you're asking, what information do I have that I can share that traditional financial institutions are interested? I will say that a lot like the green is, you know, lending, borrowing and staking. I would say that a large. A lot of the Ethereum staking is traditional financial institutions. That is a very clear cut case where traditional financials can just say, hey, we can be a part of this and that there's no issues with that.
01:50:24.584 - 01:50:40.844, Speaker B: And right now, that's how they're generating their yields. Now, as for this market size of Ethereum staking right now, I'm not too sure off the top of my head, but it's drastic. The number of stakers are drastically favored towards the institutions.
01:50:43.364 - 01:50:45.624, Speaker A: We probably have time for one more. Okay.
01:50:52.924 - 01:51:26.424, Speaker B: Would you say that stable coins are the entry point for institutionals into this field? Yeah, that's a great question. So not particular. There are two set of institutions. One that is trying to generate yield, and one is that it's trying to generate. That's just trying to take some risk and, you know, buy bitcoin and hold bitcoin. For a long time, I've been talking about a lot about the former. There is also cases of the latter as well.
01:51:26.424 - 01:51:49.434, Speaker B: You know, microstrategy is a great example of the latter. But as for the former, yes, it's mainly doing. Yeah, it's mainly using stablecoins to actually generate yield. Stablecoins are in a great area for my risk matrix. Doesn't really list stablecoins here, but stablecoins is definitely in the top left. Yeah.
01:51:50.934 - 01:51:58.054, Speaker A: All right, great. Thank you so much, Van. That is all. Please give a round of applause to Van.
01:51:58.214 - 01:51:59.194, Speaker B: Thank you, Van.
01:52:00.754 - 01:52:29.774, Speaker A: All right, and now, like he mentioned, it is lunchtime and break time. I just wanted to let you know what's going to happen when we come back from the break. We're going to have a session on developer funding in the Solana ecosystem. So probably a lot of you are interested in that. And then we have our degens on Solana, both a panel and a bunch of workshops. So if you're interested in defi yield, farming, all that good stuff, you should come back here. Those start about 120, but yeah, go be social.
01:52:29.774 - 01:53:15.616, Speaker A: All right, we're coming back from lunch. Everybody finish up and come get some seats. We've got a good round of sessions for you this afternoon. I just wanted to mention. So at 02:00 p.m. That's not now, but 02:00 p.m. There's going to be a neon labs workshop upstairs.
01:53:15.616 - 01:53:42.624, Speaker A: They're just going to have some mics take you around. It's about an hour long. Yesterday I said neodyme, which was not correct. There's just a lot of overlapping names in this space, but neon labs workshop upstairs at 02:00 p.m., otherwise, we're going to go ahead and bring up our next speaker. He is talking about developer funding in the Solana ecosystem. So I'm sure a lot of you are really interested in that, how to get grants, joint accelerators, talking about some quadratic funding, I think, as well.
01:53:42.624 - 01:53:44.684, Speaker A: So Eric, come on up to the stage.
01:53:55.444 - 01:54:42.776, Speaker B: So good afternoon, everybody. I hope you had a great lunch. So today I'm going to talk about developer funding the Solana ecosystem and how that worked in the past half year, and also what kind of developer funding mechanisms we can invent and what's coming in the future. So, I'm Eric from Dora Hacks and Hacker link. So what we're doing is basically we're creating a permanent global hacker movement, and we're doing that through two key components. So the first component is Hackerlink IO. So its mission is to fund and grow the web.
01:54:42.776 - 01:55:32.314, Speaker B: Three, open source ecosystem in a multi chain world. And we're building a set of crypto native developer funding toolkits for funding the multi chain ecosystem. And of course, Solana is one of the most important infrastructures in the multi chain era. And secondly, we have Dorahex. And Dorahex actually, we found it very early in 2014 as one of the very first hacks organizer in China, and later became a global hex organizer in 2018. And what Dorahex is doing is a decentralized community of Hackson organizers, hackers and developers. So it's a community behind the movement.
01:55:32.314 - 01:56:16.758, Speaker B: So a little bit more about Hygron link. So currently there are four major functionalities on Hacker Link. So first of all, as a developer, you can submit your project, mostly open source projects, to hacker Link as a builder. So there are two things you can present to the community. One is you can fill in the static information, your project, your vision, your description, et cetera, on your team. And secondly, there are a lot of milestone updates that you can fill in on Hacker link. And secondly, there is most important functionality called grants.
01:56:16.758 - 01:57:12.488, Speaker B: And what I mean here is specifically for quadratic funding grants. So Hacker Link is hosting quadratic funding grants for more than 20 ecosystem right now. And over the half year, year, the Solana ecosystem has run two major APAC quadratic funding grants with hackers on Hacker Link. So in total, we have distributed quite a lot of funding to more than 1600 developer projects, which we call builder. So if you submit anything on hacker links, cloud builder, and there are a lot of community contribution and a lot of ecosystem contribution. And now we have more than 30,000 active builders on Hacker Link. And other than that, now we have more and more virtual hackathons.
01:57:12.488 - 01:58:13.284, Speaker B: So hacker link is also supporting virtual hackathons. And there is another function called Bounty. So any project, whether big or small, if you have any problem, you can throw the pricing to a smart contract and the developer can take the challenge and solve the problem and take the price. So today I'm going to mainly talk about what happened in the previous two quadratic funding rounds. And before that I will talk a little bit more about quadratic funding. So who of you have heard about or understand quadratic funding? Can you let me know? Okay, who haven't? Okay, I think I need some introduction here. So basically, quadratic funding is a way to engage the community as well as the ecosystem to fund projects.
01:58:13.284 - 01:59:14.728, Speaker B: And the idea is coming from quadratic voting, a very important thing from mechanism, from the radical markets. And what quadratic voting is doing is balancing the pros and cons of the traditional voting mechanisms. So traditionally we have two major voting mechanisms called one person, one vote and $1.01 vote. So on one side you have one person, one vote, which is widely accepted in the real world by most of the democracies, and it's working pretty well. But the problem of one person, one vote is that if somebody cares more about something, you cannot cast more votes into that thing. So whether that's a proposal or a project or something, politically we're living in a very dynamic society, and obviously one person, one vote has its own limitations.
01:59:14.728 - 01:59:35.756, Speaker B: And on the other hand, we have $1.01 vote. $1.01 vote is actually widely used in the blockchain space already. So on the infrastructure level, proof of stake is kind of $1.01 vote. And in Dow governance, for example, coin voting, just like simple coin voting, is a kind of $1.01
01:59:35.756 - 02:00:32.664, Speaker B: vote. So in the $1.01 vote system, basically you can throw money into whatever you are super interested in. But obviously the problem is there are other regards in the system and there are super rich individuals who can dominate the system very easily. So the idea of quadratic voting is that so everybody has a set of voting costs, and you can use the cost to vote for the projects or proposals that you are interested in or you care about. But when you vote for any particular project, the cost of the vote increase every step. So if you are interested in, for example, one project, the first vote costs one and second vote costs two, and so on and so forth.
02:00:32.664 - 02:01:29.526, Speaker B: So the total cost of voting is increasing in a quadratic way. So this is the idea of how you can limit the power of super rich individuals. So think about an example. If somebody has more than 5000 tokens in a system versus a small individual who has only one token, the person who has 5000 token probably only got 100 votes versus in a normal coin voting system he got 5000 votes. So how quadratic funding works is basically you have a set of community contributors and you have a list of projects in the ecosystem. So we consider all the community members. For example, Solana community members are the community contributors.
02:01:29.526 - 02:02:27.594, Speaker B: So the community contributors in a certain period of time can contribute to the projects whichever they like by donating tokens. So on the other hand, there is a price point. Normally it consists of donations from the treasury of the ecosystem and some of the sponsors from the ecosystem. And the prize pool is there. And the prize pool will be eventually distributed based on the quadratic voting results. And as for the developers or the projects, the total funding any developer project can get is some of the community contribution and the ecosystem price pool. So it's a double wing for any of the projects.
02:02:27.594 - 02:03:29.694, Speaker B: So how does quadratic funding actually work on hyperlink? So we're basically dividing the whole process into three steps. Of course, before you start the round, you have to inject price pool and you have to do all the logistics. But first step is submission. And in the first phase, so normally we will host a complimentary hackathon and so the hackers and developers can, can team up to build something new or they can improve something that is existing. So buildo is submitted and Hacksung is hosted and everybody is teaming up. So in the second phase, the community jumps in and it's a voting phase. So this is where quadratic voting and quadratic funding happens.
02:03:29.694 - 02:04:55.104, Speaker B: And at the end of the second phase, very importantly, we enter the surface. It's post round analysis because the quadratic funding mechanism itself is vulnerable to multiple kinds of attacks. And most importantly, so there are, there might be fraudulent projects and there might be collusion and there might be projects that are not fitting to the requirements of the grant, et cetera. So there is a whole mechanism that we can use both technology and some kind of judging criteria to complete the postground analysis, make the round fair. And after all these three phases, basically the prize pool is released and the developers can withdraw the funding and they can use the fund to support their developments. So next I will introduce a little bit about how we are building the Solana native quadratic funding on hacker link. So there are several parts of the work.
02:04:55.104 - 02:05:45.074, Speaker B: So the first part is front end integration. So this is done by Hacker link team. And there are a lot of infrastructures. Hackerlink has to provide for quadratic funding. And most importantly, we have the voting front end where people can submit their builder, and as a community member, everyone can check out every project in a round and their details, their milestones, their updates, etcetera. And there is a vote button. So just by clicking the vote button, the front end is interacting with Solana Quadratic funding smart contract, and the voting will be done on chain.
02:05:45.074 - 02:06:52.234, Speaker B: So it's currently supporting both Solana token and also SPL token voting. And secondly, we have several gamified things on the platform. One of them is leaderboard, and during a round you can see the ranking of these projects, their community contributions, their subset matching amount, etcetera. So normally there are a lot of fun during this voting period because everybody is in a competition. So in the first round we supported solid, and in the second round right now, we are supporting three wallets, phantom, solid and the slope. So basically we're aiming to support most of the major wallet in the system and very importantly, the Solana Quadratic funding smart contract. If you're interested, it's open source, you can access it on GitHub.
02:06:52.234 - 02:07:58.044, Speaker B: So super special thanks to Yihau from Portal and also Justine from the Solana team who contributed to the smart contract and worked with the hackneying team for the integration back to April. So the voting is unchanged. So voting goes through the smart contract. And if you are interested in the code, check it out. And secondly, we have the post run analysis tour is also contributed by another anonymous community member called no job. And so I think he's from some project in the Solana ecosystem, but we don't know who he is. But he provided the very first script for anti CBO detection, and we're still building our system based on his original script right now.
02:07:58.044 - 02:09:13.494, Speaker B: So these four components, the contract, the front end integration, wallet integration, and postground analysis, analytic tours consist like they all together make the Solana quadratic funding grants happen. So here is some results from the Solana aPac QF round. So the first round happened between April and end of June, and it was happening in parallel with the Solana seasonal hackathon, or seasonal hackathon. And except this one is only in Asia. So this is a QF one supported by serum and iridium and also supported by a bunch of blockchain communities in Asia. And the second round actually just ended last week. And so this is quadratic funding round two at East Asia, and this one was supported by Solana Ventures, serum radium and slope.
02:09:13.494 - 02:10:07.332, Speaker B: And the results from the two were pretty impressive. So in total, we got more than 130 projects accepted. And in the first round there were around $283,000 distributed to 93 projects, and there were more than 100,000 community votes. And in the second round there were $240,000 contribution distributed to 41 projects. So there were a lot of very exciting projects coming from the grants. And here is a subset of that. And actually there are more.
02:10:07.332 - 02:11:06.552, Speaker B: There are 100 plus more. And so when these projects attended the hackathon and quadratic funding grants, they were super early stage. And many of these projects have been pretty successful in terms of private and public funding or in terms of launching their product right now. And they have become important components of the Solana ecosystem. And in the first round we got a lot of defi projects, and in the second round we're seeing many other kind of projects ranging from NFT styles, gamefights and wallets and tour kits, etcetera. So this is what we are super proud of and we are super excited about. So these are about two quadratic funding rounds.
02:11:06.552 - 02:12:00.104, Speaker B: And next I will talk about. So, other than quadratic funding, what are the other ways to fund open source projects that are existing on hacker link? So I will talk about four mechanisms. The first thing is an extension of quadratic funding. So we are building a grant funding, and this is allowing any DAO or project to create grants and fund its own developer ecosystem. Because in the future we're seeing daos and many ecosystem projects growing. And the ecosystem projects also need to fund their own developer community. And so this is where grant factory comes in, and every project can create their own grant with minimum permission from us.
02:12:00.104 - 02:13:18.204, Speaker B: And secondly, we are allowing every project to create a buildable NFT. So a builder NFT is basically an NFT that is treated based on a hamburger text like rule, which means the NFT is forced to to sell. But whenever the weft is sold, a part of the premium goes to the open source developer as a way of funding. And we're launching a new feature called Rootbox. And what Lootbox is doing is that you can attach an arbitrary smart contract to your NFT, and whenever the NFT is treated, the smart contract is triggered, and you can program any programmable incentives into the smart contract, which is super exciting. And we are launching a loot box hackathon this weekend and hope you can participate. And certainly there are a lot of nonprofit projects, because in its nature many of the open source projects are nonprofit, they are not necessarily making money.
02:13:18.204 - 02:14:15.754, Speaker B: So traditionally these projects find themselves very hard to reach any funding. But we are having a new mechanism called continuous funding, which is allowing these organizations to exist on funding curves and they can do price discovery and get support from the community as well. And lastly, we have kudos, kudos. Another way of funding and it's very simple, I don't need any explanation here. So lastly, how to contribute. So there are three things we care about right now, and if you are a developer, we super welcome you to join the community and work with us. The first thing is build postground analytic tours for Solana grants.
02:14:15.754 - 02:15:11.510, Speaker B: So this is very important because we have the auction voting. So we always want to guarantee the fairness of every quadratic funding round in the future. So we are keeping developing the algorithms and toolkits for anti CBO attacks, anti pollution and solving other problems. So we are lack of the capacity of building such tools in our own team. So we want to work with the community developers on this side. Secondly, migrating existing hacker link protocols to Solana contracts. So we have a set of EVM based protocols and it's going to be super great if somebody is up to migrate this contract from EVM to Solana.
02:15:11.510 - 02:16:11.044, Speaker B: And lastly, building crypto native funding mechanisms and integrate with hiking link. So if you have any idea, because I do think there are, there is an infinite space of innovation here. So if you have any idea for interesting developer funding scheme or mechanism, you can drive them into smart contract and we will support with Dorahex community. Yeah. So if you want to contribute or if you want to follow us the information and if you are a developer, check out GitHub or send me an email. All right, so this is today. This is for today and hoping you enjoy, we're expecting more quadratic funding runs in the future.
02:16:11.044 - 02:16:44.653, Speaker B: And let's hack something interesting on Solana and let's build something interesting together. Thank you. Hey, how's everyone doing? Bartosz from Solana. I will be emceeing for the rest of the day. We'll have DJ and son Solana moderated by Mati. If you want to have talk with me during the talk, I will be upstairs. Let's go.
02:16:44.653 - 02:17:38.402, Speaker B: Good afternoon everyone. Hopefully everyone had a good lunch. My name is Maddie, I'm the head of growth at Solana Labs. And today we have a great set of speakers here to talk about one of my favorite topics, which is degeneracy on Solana, which is basically a lot of the stuff that you see, with Defi yield, farming, trading, lending and borrowing. And so we're going to cover a lot today. Just to give some context about the DeFi ecosystem on Solana, it peaked out over 15 billion in TVL just recently. That's up about 14 billion just the last, I think, four months.
02:17:38.402 - 02:18:07.644, Speaker B: So the growth rate is quite high. Trading volumes on protocols like radium and serum are going up quite a bit, and there's a lot of new primitives coming online. So I'm really excited to speak to all of these guys about what they're working on and also kind of their views on the market. But first, maybe it'd be good to just go around the panel and introduce yourself and your companies you work for. Yeah, absolutely. Thank you, Mehdi. So I'm Goose Wayne.
02:18:07.644 - 02:18:37.776, Speaker B: I'm with the Goose FX project. GooseFX is basically a complete Defi suite. You can do crypto trading, synthetix. We're launching our NFT store about in three, four weeks, and single side liquidity pools. And we're also working on some very cool stuff, such as NFT lending and hopefully NFT perps, so you can ape into those cool. I'm Henry Elder. I'm with foresight.
02:18:37.776 - 02:19:16.044, Speaker B: We're an order book based prediction model, prediction market. We're built using the anchor framework on top of serum. And I guess we're doing a soft demo launch at Foresight exchange during the conference and then a proper Devnet demo in early December and then mainnet a couple of months after that. That's me. Hey, guys, I'm Geoff Rico, founder of Exotic Markets. Our goal with exotic is to offer structured product and sustainable yield for everybody. So we try to keep the things very open in type of products that we could do, type of underlying we could use.
02:19:16.044 - 02:19:53.838, Speaker B: So we can use like typical cryptos or things like that. But even like, why not call USDC in a way? And our target is to tell people, come to exotic, reply to some questions, and then we will suggest you like, with your risk aversion and things like that, if you're on the market, some like yield products where you would get paid like real yield in USDC, BTC Solana, whatsoever. My name is Yutaro. I am one of the founders of orca. We are building the most user friendly Dex on Solana. If you haven't used it before, please just go to orca. So right now, even my dad was able to figure out how to do a swap.
02:19:53.838 - 02:20:25.094, Speaker B: So anyone here can do it. Cool. So before we kind of jump into the nitty gritty of defi and your projects. I'd love to start out with just more of a philosophical question for each one of you. So I know that some of you have been anon at some point or have not been. I would love to just go around the panel and kind of get your views on the pros and cons of starting a crypto project as an anon or not. So maybe, Goose, do you want to start? Yeah, sure.
02:20:25.094 - 02:20:55.334, Speaker B: I mean, the pros, I guess, are pretty apparent. You're kind of behind the scenes. You can work on the product, very focused on that. I guess people aren't dming me on my personal Twitter or anything. Too much. Cons would definitely be always thinking of, you don't want to get doxxed. We launched on exchanges this week and one of the exchanges put my full name on the website, so we had to take that down ASAP.
02:20:55.334 - 02:21:47.564, Speaker B: But yeah, there's always some risks there, but otherwise it's been a great experience. I guess my philosophy is just that it's very difficult to be anonymous on the Internet unless you've got incredibly good operational security and even Guzman, you're here in person, so someone recognizes your face out there, who you went to school with or something. And yeah, I think the con for me is just that it's like the mental load of having to think, am I going to get doxxed? Have I just revealed my information? Have I spent too much time in one time zone? It's just easier just to be like, okay, cool. I know that I'm totally public. I haven't hidden my second name even on discord. I guess I'm relatively open about who I am and just having that awareness, that's ok. That's the, I guess, direction that I'm taking.
02:21:47.564 - 02:22:09.854, Speaker B: I can just work around that. I can be like, ok, cool. I'm not going to say anything too crazy since I know it's under my real name. I save it for the Degen panel. Yeah, it's a bit harder, I guess, to be anonymous today. I mean, we would like to be like Satoshi, I guess, but it's a little bit tough sometimes to onboard. Like in our case, like for example, like arbitrageurs and everything.
02:22:09.854 - 02:22:37.844, Speaker B: It's really important to talk to them, to explain like the background of the team, especially part of the team, is like former vault traders in edge phone. So we cannot just hide our names. It's difficult. Yeah, yeah. I think we have a fairly strong stance here, which is we think that in five years, all of the founders for these protocols will not be anonymous. And I think the reason for that is pretty simple. These founders have a lot of responsibility and they need to be held accountable.
02:22:37.844 - 02:23:17.344, Speaker B: And I think that despite all the regulatory uncertainty, founders should be very transparent about what their intentions are and what their motivations are and the value that they're trying to create in the industry. So that's why we're pretty proud of being not anonymous and having our real identity out there. Interesting. Okay, so getting into DeFi, there's been a lot of new primitives that have come out over the last few months. Whether it's a different flavor of AMM or obviously serum is an order book. I know Henry, you're building an order book style prediction market. A lot of different types of borrow lend protocols.
02:23:17.344 - 02:24:05.108, Speaker B: I guess. What primitives have you most excited, whether you're incorporating it into your project yourself, or you can also answer, what do you think is missing in terms of primitives that you'd like to see get built out over the coming months? Whoever wants to start? I love mango, mango markets. I did some work for them for their ido pool, but in terms of the product they have, my mom uses mango just to, to put money on there and it's a very easy. People don't realize that mango is also a borrower lending protocol with pretty good interest rates. And then a lot of my friends will do perp trading, so there's a lot of arbitrage to be done there, a lot of market making. So I guess that's my favorite one. And then also I guess shout out to jet protocol as well.
02:24:05.108 - 02:24:48.530, Speaker B: They're another bar lending protocol, but our front end engineer said that they have a very good interface. We're going to probably put an interface to that protocol on our website as well. Yeah, actually some things that help us a lot to build exotic is to talk with zeta markets because they're offering something more traditional on the option site. Some things that I've been using when I was in Edgefund. And so it will help us build more sophisticated, structured products using their platform and their data. Cool. And it wouldn't be a degen panel if we didn't talk about tokens and token economics and incentives.
02:24:48.530 - 02:25:46.048, Speaker B: So my first question is, when do you guys decide for your projects to release a token? Because on one hand you can release it immediately and maybe incentivize people to use the product and kickstart your growth cycle. But on the other hand, if you do that too early and you don't have a sticky product, people are going to come for the yield and then filter out the back of the funnel. I would love just to go around the room and get your views on when to release a token. How do you think about timing? So yeah, I don't know who wants to start? I mean, I can start. We just had our token launch exactly seven days ago. That was a hectic experience, starting from the tokenomics, I guess. You know, we spent a good as a team three to four months coming up with the tokenomics, running it through the investors, with the advisors, the community, people that are involved and making sure we hit all the targets.
02:25:46.048 - 02:26:33.238, Speaker B: That made everything fair. But also, you know, goose effects is doing a lot of different things. NFT store liquidity, providing trading, etcetera. So we needed to design the token tokenomics to be able to have enough supply to provide liquidity to these different aspects of the platform. But also we didn't want to just like mint 10 billion tokens or whatever as far as launching on exchanges when you're ready. I think personally what we've seen and I think what works out best is if you have at least an alpha and you have a decent community. We had a pretty big community and discord that we were always engaging with in the very beginning for the first few months and keeping them very engaged.
02:26:33.238 - 02:27:17.256, Speaker B: And then when we had to launch, everything went well from there. Cool. So we haven't launched a token yet and I think again with philosophy is just that the best time to launch is when the product is more or less finished or you've got your v one out there for us. We're building an Oracle DaO for listing and resolving markets. And I guess we're very much taking the attitude that if we're going to launch tokens to make the whole listing and resolving of prediction markets more decentralized, we want people to be active members and active participants in the DAO. So it's not just sort of, we want to avoid people just holding a token for the sake of it. That's our main goal with that.
02:27:17.256 - 02:27:48.708, Speaker B: So much more of a cooperative style model than a, I don't know, buy and hold. Yeah, no, that's like a SRM. Yeah. Actually I do agree with you. I mean it's never an easy decision because actually you just have one shot, so just make it good at a good moment. We've decided as well to wait, that we have the product life because I think it's where it makes sense, especially because we are going our way for sure. So we want people to be able to participate to the new structure products.
02:27:48.708 - 02:28:28.600, Speaker B: I would like to see the new pairs that we like to have on the platform. And also we are incentivizing people to stake because they will get trading fees reduction when there's a token. So we decided to just push it back when we have the platform so it can be used like day one. Yeah, I think it's a hard question to answer and it really depends on conditions. For example, for us, we felt like we would have some time on our hands because we were able to start early. So we committed to launching the token well after we found product market fit. But current conditions are fairly different.
02:28:28.600 - 02:29:34.152, Speaker B: It's a lot more competitive. So you may want to think a little differently or you may want to. I mean, I guess you could still just wait until you feel like you have a product in tokenomics that makes sense, especially given that once you have the token out, you can't take it back. It's like taking a company public, except you can't even really go back private at that point. And really it's like, can you build something? Can you build a movement where you can bring new people in to the product? And then when you come to a decision like, hey, this is when we need to release a token or provide some sort of incentives to use the product through token distribution. How do you structure, I guess, for your products to make sure that you're attracting the right type of user? Because if you have maybe a broad program, maybe like you saw in the early days of Ethereum defi, you could just get a ton of speculators. They're actually not good fits for the actual product.
02:29:34.152 - 02:30:34.334, Speaker B: They just want the tone token. So how do you like versus like, you see kind of more advanced forms of distribution now where you have to do certain actions within the app that are specifically beneficial and that are maybe you find to have more retention within your customers. So I'm just curious, like how do you structure the actual token launch? Yeah, I mean, for us, we have like 50,000 people on our telegram and it's a nightmare because everyone's just saying, when can we get 1 million returns on the token? And it's just been one week. So what we've done is reward the alpha users. People are using the alpha testing bug bounties, people who are just generally engaged with the ecosystem and don't really care too much about the price. We want to reward those users and we're definitely tracking all the alpha testers and that's been really good. A lot of word of mouth comes to play as well.
02:30:34.334 - 02:31:20.636, Speaker B: Getting people through your network, your friends, VC networks, different whale friends that I know, getting them involved as well. So yeah, our approach is probably going to be something similar to how mygo does it with their liquidity incentives. So outside of rewarding people who are directly involved in the DAO, I think that market making is a very important thing as well. So we can pretty much reward anybody who provides liquidity on the order book. So if you've got any maker orders and they're close to the inside price, then you will get some seer tokens or mango tokens. And that seems like you're incentivizing the behavior you want to see, you want a liquid market and you want people to trade on it. So that seems like a pretty reasonable approach.
02:31:20.636 - 02:31:40.514, Speaker B: But again, it's all experimentation. And I think Defi 2.0 versus Defi 1.0 is that you want people to not make more from just using your product. So there's some products, I guess, that are borrow lending that supposedly you can earn more by borrowing. Basically they pay you to borrow. You want to avoid that.
02:31:40.514 - 02:32:33.536, Speaker B: Yeah, actually it's the same for exotic, for early users, definitely there will be some incentive, especially for valuable feedback, useful to see how the community reacts to it and to incentivize this kind of participation. After we keep like poor for the liquidity mining for the guys that will provide liquidity, although it would be just for the beginning, because liquidity would be like rewarded with like USDC Solana whatsoever, part of the trading fees of the protocol. So we just like maybe help a little bit for launch and definitely for arbitrageurs. That's people that we really want to have on our platform too. And we are also thinking maybe to reward the biggest users, biggest retail users, maybe through NFT, you have been the biggest user of that month or that week on that product. This NFT could be maybe unlocked for some exotic tokens. Yeah.
02:32:33.536 - 02:33:13.304, Speaker B: For us, I think at a high level we do two things. One is we try and be as consistent about our messaging. We say, okay, this is how we are creating value and this is our tokenomics. We keep it as simple as possible and this is how you can participate. The second thing we do is we pay close attention to the data. We pay close attention to who's yield farming, who are the token holders, are they buying, are they selling? And then is the distribution kind of what we want ultimately, when all 100 million tokens are distributed. Got it.
02:33:13.304 - 02:34:17.132, Speaker B: One thing you mentioned there is the importance, I think echoed across all of your answers, community feedback, rewarding people that really care about the protocol, which is the ultimate goal of a lot of these DeFi protocols, is to become fully decentralized, to be Dao controlled. Similar to my previous question about when do you release a token? When do you decide to move to this pure Dow governance model about decisions of even product decisions about your respective projects? Because again, on one hand, in the early days of any product, it's helpful to be a little bit more centralized in terms of the development team. You can make quicker decisions versus what you see with a little bit more of the mature defi protocols. It's sometimes kind of a mess on coming to decisions on important product evolution. So yeah, I would love to get your guys opinion on when to implement a Dao. Yeah, that's a great question. I mean, it's what you said in the beginning.
02:34:17.132 - 02:34:46.780, Speaker B: We have so many features that we want to release once they're on main net. Everything's bug tested, everything's working properly. And I think that's a natural transition where we can go towards a dao. But if you do it, I mean, what we've seen early on, if you just go immediately to a dao, you can get locked up in the proposals and then the dev team is get slowed down on the process. So that's at least our plan in the future. I mean, I think we can go to a DAO almost immediately. I mean, maybe.
02:34:46.780 - 02:35:28.950, Speaker B: I like the orca approach of getting product market fit first. I mean, that makes a lot of sense. So once you have a product that more or less works and you can just switch to a DaO model, and then it's almost like a homeowners association where you're kind of funding projects that are going to just improve the quality of the protocol overall, whether it's a front end or the smart contract or the marketing, just the overall experience. And that can come from a DaO. And like you said, the decision making part of it. I feel like if you have product market fit, a lot of those hard decisions and those design decisions have already been made, and unless you're doing a massive of pivot or something, then you're screwed. But so long as everything's kind of taking on nicely, I think it could work.
02:35:28.950 - 02:36:11.762, Speaker B: Yeah, it's never an easy decision when to do it. Actually, we've thought about it and we want to have users at first and arbitrageurs and everything on board it at first before we decide to move to dao things. So that's why we're flowing quite a few projects. Thinking about mango markets, actually, with going to that transition as well. We are looking at the different models of what people do, because you have Dao and Dao in a way, you have fully, fully decentralized Dao with participation for the code and everything, and you have more Dao as management of the project, which in our case, new products we bring or everything. It's not an easy decision, but we're looking a bit like what people do. Yeah, same here.
02:36:11.762 - 02:37:13.570, Speaker B: We're kind of looking at what people are doing. Um, the, it's, it's tricky because the regulatory uncertainty definitely plays a factor. Um, what we see is that, uh, you know, to be honest, there's a lot of decentralization theater out in the crypto ecosystem. Um, and we feel like there's also a lot of inefficiently governed daos out in the ecosystem as well. Um, we don't have like, fully formed thoughts here, but one avenue where potentially considering is something that is inspired by like corporate governance, which is something that has been proven out to work, but we're still trying to figure it out right now. One thing, when we were, before we got on stage, I asked a few of you about like, your funding situation, and some of you have raised outside capital. It seemed like some of you have a different view on maybe taking the more mango approach, not taking a dollar of VC capital and just doing it pure through an I can ido type format.
02:37:13.570 - 02:38:15.164, Speaker B: Would love to get your guys thoughts on when to involve venture capitalists or outside investors, institutional investors, versus like, you know, running an ido from the ground up and just being from the community. Well, yeah, so I wrote the ideo of pool code for Mango. So I'm big pro on that model. I think that, yeah, venture capital, you want to make decisions for your company or your project that improve it. And if most of the advantages of venture capital are you get some money, and then on the other side you get more lawyer hassle, you have to have a legal entity that exists somewhere with a bank account that can receive this money, bullshit like that, and you just get another boss. I don't like bosses. If there's a really good strategic partnership that's available, for example, market makers, they're good people to partner with or take money from, if that incentivizes them to market maker on your protocol.
02:38:15.164 - 02:39:00.412, Speaker B: But aside from that, if you can, and if you can, it makes you hungry, so it makes you try to build something fast enough. It's more like the bootstrapping approach. Right. You need to get to product market fit or profitability much quicker if you're not just sort of coasting on, you know, $3 million of VC funds. Yeah, I mean, I have a ton of respect for projects that pass on VC funding. When Ori and I started, we, our actual initial plan was to not take any VC money, but kind of given the market conditions, we felt like it was appropriate. And we were also able to sell tokens with etherea lockup at essentially $2 a token when it initially started trading at $1.
02:39:00.412 - 02:39:44.660, Speaker B: So we feel like we were able to at least not screw over the retail because there are legitimate concerns or complaints about VC's taking essentially risk free money and we wanted to essentially minimize that. Yeah, go ahead. We've decided actually to work with a few strategic VC's because we need like some participants. I are very familiar with this kind of products and then we wanted to get them involved as well. Like kind of partnership like, they help us, unlike pricing, arbitraging and everything, and also with some funding. So it's a bit of approach we've chosen. But like you mentioned, a lot of respect for projects that decide to just do it.
02:39:44.660 - 02:40:13.216, Speaker B: Like. I mean, I would also add that VC's do add a ton of value. A lot of it is just not really visible. It kind of happens almost as like an advisory role or resources that they provide for the founders and the team. So, you know, it is definitely tricky. And I still do have a lot of respect for projects that pass on VC funding, but I think there are two sides. Well, I haven't heard of many projects that have sold VC tokens for like twice the listing price.
02:40:13.216 - 02:40:57.164, Speaker B: So that's pretty impressive. Yeah, I think it goes both ways as well, if you can. I mean, I started off building GoosefX kind of as a side thing and then we got a lot of interest and then we didn't want to raise money in the beginning, just like etoro, and we started finding VC's and partners that actually were a really good value add. So we were very strict on who we wanted to bring on to the cap table and so far everyone has been very helpful. Got it. Do you think this not necessarily related to VC funding, but more. The previous question about daos and who controls it matters from a regulatory perspective.
02:40:57.164 - 02:41:54.124, Speaker B: I feel like some products are geoblocked in certain regions, some are not, and they seem to correlate to where their funding source came from, whether they're anon or not. And so I'm curious to know, like get your guys perspective on that? I mean, yeah, I can comment on this, since Orca was blocked from us IP addresses until fairly recently, I think September, if I recall correctly. So, I mean, the reason why we did it was because of. Yeah, just regulatory risk. There was a lot of uncertainty, and we wanted to at least get the token out before opening it up to all IP addresses. It's definitely not an ideal situation, but we're kind of trying to make the best of, you know, just reality. Cool.
02:41:54.124 - 02:42:38.108, Speaker B: We have about five minutes left. Wanted to open it up to you guys to maybe just chat a little bit about, like, what, what you're really excited about on Solana when it comes to Defi. What do you, what are you looking forward to? And, like, what do you think? The future of the network and ecosystem? So maybe you want to start, Goose? Yeah, sure. I think there is a myriad of different things. I was just talking with my team earlier, and we were discussing how can we get people onto Solana. Like crypto native people. Of course, it might be easier to come and play in DeFi, but there's a lot of people out there that don't know crypto, and then, of course, they won't know Defi, and most of those will go to Ethereum.
02:42:38.108 - 02:43:20.432, Speaker B: And so we want to bring the best user experience to Solana. So that's kind of one of the core tenets at GoosefX, but also, I think, projects like Slo, Phantom, Soulflare, et cetera, all the other wallets, that'll be a great onboarding feature for them. From the ape degen side, I'd say I'm most interested in NFT perps in the future because goose effects is technically goose financial exchange. So our core thesis is, like, developing trading products. This is something very out there. I was just talking to Meltem yesterday, and she was talking. Talking about soul perps.
02:43:20.432 - 02:43:49.460, Speaker B: And I don't mean Solana perps, but actually the next step, your metaverse, putting your subconscious over there and then valuing your character and being able to take perp positions on, I guess, your soul. So that's. That's pretty way out there. Wow. Yeah, I don't know, it's like I'm just. I'm just living in the moment, bro. So, you know, we're mostly trying to make do with what's available in the San ecosystem at the time, rather than sort of being like, oh, in ten months from now, it'll be great.
02:43:49.460 - 02:44:27.284, Speaker B: But, like, right now, yeah, we're just looking at what all the pain points are for. Our demo launch and just trying to get rid of as many as possible. Like for example, one of the big issues with using serum early on was that there was this settle button and you had to manually settle any maker trades and a lot of people would come into the discord and be like, oh, I lost my money and it's all this stuff. And you said you just have to hit settle. So I put a bit of effort in and just got rid of that as much as possible just to smooth the user flow. So the more stuff that comes out, that makes it an easier user experience, I'm excited for. Yeah, I think actually what's very interesting in Solana is that recently we got a lot of great, great projects.
02:44:27.284 - 02:45:04.754, Speaker B: And something that I feel like in the community is between the projects. People really try to work together to team up to see, I'm not going to rebuild this, let's work together, let's try to integrate some functions. Serum is actually one of the best example, I guess. And it's really something like very pleasant as a developer on a project. Yeah, I'm excited for so many things. Gaming, dao tooling, just all the other Defi primitives building out and. Yeah, I mean, just hoping that I have enough time to check everything out.
02:45:04.754 - 02:45:43.284, Speaker B: Cool. Coming down to the end here. One more question, though, about one thing you mentioned, Goose, was mobile wallets. Most of DeFi today is browser extension, web based. But the fact of the matter is a lot of people maybe who need Defi services around the world don't have the desktop or laptop computer. They have a mobile phone just in their pocket. I think that was the vision for DeFi, was to bank through this next gen financial system.
02:45:43.284 - 02:46:03.314, Speaker B: I'm curious how you guys think about DeFi moving to more of a mobile interface and how you guys see your products evolving with that movement. We have a mobile first interface. Wow. Yeah. Yeah. Even though there weren't really any mobile wallets, I guess when we were building it. But yeah, it works very well on mobile foresight exchange.
02:46:03.314 - 02:46:11.906, Speaker B: Got it. Cool. Yeah. That's something that we keep at core as well. Like, we want users to just be able to just take out the phone. I mean, we all do it. It's much faster than switching on the computers.
02:46:11.906 - 02:46:45.768, Speaker B: And like you mentioned, some people don't even have a desk or computer anymore, so we keep it in mind. Yeah, yeah. We also built a responsive interface, but even then we were surprised by how many people, I guess we shouldn't have been, but we were surprised by how many people only use their phone to interact with crypto. My pipe dream is to see essentially a third operating system that has first class support for crypto that's not iOS or Android. But who knows? Maybe we will see it, maybe we won't. Cool. All right, well, that's about it for today.
02:46:45.768 - 02:47:20.024, Speaker B: Thank you so much for your insights, and I'll see you out there on the pools. Thank you. Speaking of pools, we're launching go FX on Orca's pool in two days. You guys can even know that I'll be there. All right, so this one will be awesome. If you're a developer and you want to learn how to secure your smart contracts, you definitely want to befriend those guys. And it will be moderated by my personal friend, the Og of Djen's Dominic.
02:47:20.024 - 02:48:16.152, Speaker B: Go, guys. Awesome. It's great to have you guys all here, and it's kind of crazy to see where we are today. And I think all of you here have, or probably will play a massive impact on the future of Solana's growth and just helping it remain secure and helping upskilled developers as well, to write better code and help us create better infrastructure that hopefully create positive value in the long term. Maybe I'd love to start off by maybe just some quick intros with. By each of you, just to give some background on yourselves and what you've been working on. And we can maybe dive into some specifics afterwards.
02:48:16.152 - 02:48:32.804, Speaker B: So, Scott sounds good. Hi, everybody. I'm Scott Carlson. I'm the head of the blockchain center of Excellence at Nagrakadelski Niagara. Kodelsky owns Kdelsky Security. Personally, I'm a 30 year cyber guy, so I've been doing this for a long time. Formerly of PayPal and some large american Fortune 500 companies.
02:48:32.804 - 02:48:57.910, Speaker B: Hello, everybody. My name is Piotr Delas. I'm an offensive security engineer and Solana lead at Halborn, an offensive security company. I moved on from the traditional cybersecurity field to something that's way more exciting if you're a hacker. Yeah. Hi, I'm Patrick. Patrick Reich.
02:48:57.910 - 02:49:38.826, Speaker B: I'm from Neodymium, a newly founded cybersecurity firm that started out doing security audits for Solana. Yeah. My name is Vitaly Evlachov. I'm PR relations and communication manager at Happy. We are basically tackling the cybersecurity protocol and the incidents after the effect of the, let's say, exploits of the smart contracts and, yeah, I think we are kind of tackling the pivotal and we are undertaking the pivotal role in the kind of workflow and the pipeline of the hacks and incidents of hacking. Awesome. Thanks.
02:49:38.826 - 02:50:42.994, Speaker B: So, obviously, it's this new ecosystem, new vm, and there's a lot of potential attack factors. And I know some, if not all of you here have probably looked at, if not audited, smart contracts from other ecosystems before. And I'm kind of curious to pick your brain and understand what the differences have been coming from either traditional software or other defi ecosystems, or just other ecosystems in general within blockchain, and coming to that transition towards Solana, do you mind talking me through how that journey's been? So maybe we joke about this thing called compensating controls. In the traditional security world, there's generally a stopgap if you mess up your traditional security system. And as these blockchains have gotten built, whichever one they build the feature first, not the compensating control first. And so when you lose on a blockchain, you lose that fast. And in the traditional world, you have to hop through a bunch of hoops to actually game the system.
02:50:42.994 - 02:51:48.464, Speaker B: And that, I think, is the biggest realization for a traditional security company is to realize that your exploit happens now, not I can look at dwell time and I can find them in the network and I can chase them around because it takes a while to hack a traditional thing and it takes instant to hack a blockchain. Yeah, exactly. I'd like to echo that, because in traditional security, you have an army of security devices that guard the whole infrastructure, whereas if you wanted to hack a bank, you have to hack possibly dozens of people in order to get to the vault, which is guarded by, like, five big guys with. With guns. Whereas if you want to hide when you want to hack a vault, crypto vault, you know, all that's required to do that is one missing access control in the smart contract code, which is supposed to be immutable. So if it's not there, it will never be there. So it just takes one guy to spot the pitfall and trade the funds, and they're gone and beyond recovery.
02:51:48.464 - 02:52:39.054, Speaker B: Well, it's actually a bit different for us because everybody at neodymium is a hacker, a CTF player, like capture the flag, those are hacking competitions, and everybody has a different skillset. So approaching Solana wasn't that different from approaching anything else because, of course, it's vastly different compared to a lot of other things. But with everything we approach, we have to get into it, have to familiarize ourselves, have to develop tools, gain the proper understanding of the technology. So we are skilled in doing that. We've been doing that for years. And so it was, I wouldn't say it was easy to get into Solana. It was just a normal progression, getting into Solana and breaking things, because that's what we're good at.
02:52:39.054 - 02:53:22.890, Speaker B: Yeah. In our case, I think when we deployed on Solana from the ethereum, the kind of essence of the Solana is higher throughput and the speed of Solana is higher. And when for our case use case, it's really the, the importance lies in the speed throughput and that we can store our database, that we can store database without paying much of the fees. And Solana kind of checks off all of these conditions. Yeah. And the vision for you guys specifically is kind of hopefully to build this repository and be something like an open zeppelin of the ecosystem. Yeah.
02:53:22.890 - 02:54:25.104, Speaker B: I would say our kind of the utility of happy is storing the database on wallets, compromised wallets, so we can actually propagate the information about the compromised wallets in instance. So let's say a centralized exchange gets hacked. We can immediately notify other, kind of connected to our protocol, other entities about the hack. And this is crucial since, let's be honest, security audits are not and all be all solution. And I see people kind of frequently talk and blame smart contract auditors that they haven't done a great job auditing a contract, but you actually can do the, you know, the comprehensive work on the smart contract audit, and there is always an omission that you are kind of facing. So, yeah, we are kind of acting on the potential incident that can happen after. Got it.
02:54:25.104 - 02:55:26.742, Speaker B: And actually that leads into something I'm curious about. As well as auditors, there's obviously a lot of pressure and expectation, and there are teams out there who kind of see getting an audit as just getting a stamp and maybe don't have a high expectation. But how do you guys feel about that? How do you guys try to manage that and ensure that the quality remains top notch? And do you think that's, how do we change that? How do we improve the quality and ensure that we really are adding a ton of value here? I think when you hire a security expert, you hire people who are really good at logical flows and complex systems, because if you look at what we're building today, these Defi pools and these reusable, stackable things, most of the big compromises lately haven't been the encryption. They haven't been the chain, they haven't been the reusable things. They've been. I stacked this on this, and I swapped that for that, and then I put it over there. And once you chain that, you know, it breaks.
02:55:26.742 - 02:56:01.648, Speaker B: And that's hard for a human being to go through every possible permutation, especially when it's a one way transaction that if you get it wrong, the money's gone. And so we're human, right? Humans make mistakes. And the best you can hope for is that the right people have looked at it and made it safe to use that it's really, really, really hard to make it not safe to use. Like, I think that's the goal here. And it's not just about that one contract. It's about this whole layer of stuff. You gotta watch out for the people, the front end, the wallet, the chain code, the encryption, the chain.
02:56:01.648 - 02:56:42.380, Speaker B: You know, it's this whole stack of things. And without people thinking through all those layers, it's tricky. Yeah, like, exactly. That's what we're trying to do at Halborn. Like, we try to take the holistic approach because smart contract is just a piece of a puzzle. Like, you can ddos a frontend web app through a contract because, like, the input is not validated. And like, one of the things that I guess would increase the security of the whole space is to just have people realize, have the developers realize, because in the end, it's up to them how secure the contract is.
02:56:42.380 - 02:57:09.220, Speaker B: Because we've seen it. You hire an audit firm and you say, this is the comet you want to audit. But then there are some other changes introduced right after launch, but also after the audit. And then the auditors get blamed. And that's not kind of right because we did our job. We checked everything. But we can't anticipate the future.
02:57:09.220 - 02:57:55.124, Speaker B: We can anticipate what hackers will do on the code, on the piece of software we were given, but we don't have a crystal ball and we can't tell what are the features that are going to happen if they're not there as we audit them. Yeah. And the community doesn't go and check the report and say, oh, the commit hash is different. They just go, oh, money was stolen, it's your fault. Yeah, there's a stamp, it's secure. Well, the thing is, there's a major problem because just checking the commit has just different. You can't really check what's on the chain because there's no currently, there's no viable, reproducible build where you can match the source code to the actual smart contract that's running.
02:57:55.124 - 02:58:33.632, Speaker B: I mean, that's possible on Ethereum, which is really nice and which I believe is something we definitely need in Solana, because let's say we at neodymium ordered something, we give out the report, or perhaps even on chain assert that, yes, we have audited this. It looks safe and sane. To us, that means nothing because the pretty much every contract includes the upgradeable loader. There might be dao. There mightn't. So you can just change the code at any time, and there's no way to verify what's actually running there, then that needs to change. That's.
02:58:33.632 - 02:58:59.148, Speaker B: I mean, yeah, it's difficult managing the expectations as yes, you are. You order him this, it needs to be perfectly safe. Well, we're all humans. We make mistakes. And like Scott already said, the main thing you hire auditors for is not what we call the low hanging fruits. That's the software you wrote a blog post about. But the actual logical box.
02:58:59.148 - 02:59:36.776, Speaker B: The box the interactions between different parts of the contract, between different countries and all the other bugs you only see if you actually spend your time thinking about the contract and investing a whole lot of time and energy into it. If I can add something to that, it's really important that you have a decentralized team of different skill sets, different ages, different qualities. Some are hackers, some are not. Some do post incidents, some pre incident, because that's the. The whole story you need. You should never trust the user to get it right. So please don't do that.
02:59:36.776 - 03:00:14.118, Speaker B: You should never trust that you're the smartest one in the world, because there's probably somebody smarter who has more money than you trying to break into your thing. So remember those two things. When you're building and you have spent weeks or months or years developing this, we looked at it for two days or five days. We're certainly not experts like you are. So you have to remember that, too. So when you come to us, it will take us a while to figure out what you were intending to do. Did you do it? Did you get it right? I think we've talked about this a lot, a couple of times now over the last couple of days, so help us understand what you've been trying to build.
03:00:14.118 - 03:01:30.058, Speaker B: And I think part of security, and here is, if we know what you intended to do, it helps us decide if you're doing it safely and if it ends up not going safe. Right, then what do we do after the fact? Right? Yeah. I think from the perspective, like myself, I'm not a smart contract auditor, and I see that being in the space cybersecurity space in general. I see that people kind of underappreciate the kind of effort that is being put in, in the reviewing of the contracts. And especially I had like two days ago browsing coinmarketcap and I noticed that there are a lot of like doggy coins, kind of copycats, and they tend to actually use forged smart contract audits that are actually reviewing the contract itself, but rather the kind of website content and how website looks. And yeah, it's kind of funny, actually, to look through these funny and at the same time also excruciatingly painful. Just when you've seen it all, just when you think you've seen it all, you see something near.
03:01:30.058 - 03:02:11.292, Speaker B: Yeah, and the funny part is that they don't take it seriously. Although the real smart contract auditors actually are meticulous in the kind of review phase they need to. They deal with a lot of, kind of, especially if it's a lending protocol, you're dealing with the large chunks of assets that worth a lot of money. So, yeah, it's kind of pitiful to see exploits of the, you know, and forgeries like that. Yeah. So, you know, this is the developer stage. I'm sure there's a ton of devs in the crowd as well, like kind of diving into something a little bit more tangible.
03:02:11.292 - 03:03:16.808, Speaker B: It's probably hard to get into the details, but as a mental framework or things that you've seen as issues within the Solana ecosystem while auditing or just simply doing peer reviews, what are some of the key low hanging fruit issues that you're consistently seeing or things that maybe some of the developers here can keep in mind to hopefully write safer code. And by the time it gets sort of gets to an auditor or goes to production, hopefully it's a little bit more robust. This blog post that you guys did are some of the top ones. One of the strengths of Solana is its upgradeability, the ability to assign rights, the ability to allow people to operate with permissions. And that's also super scary. And if you let anybody do anything they want to your contract, they will. And that's, I think the biggest thing we find over and over and over and over is, hey, did you check to see that? That's actually your program, right? These things, these are the common ones.
03:03:16.808 - 03:03:47.480, Speaker B: They've become the known things now, but they're still not. You don't just click a button and it puts it in for you. So you still have to think, what did I write? How do I verify it's true? Right. That's kind of what you find every time the same. Yeah, that's what you see a lot. Like I already said, those are the low hanging fruits. What we also see a lot is people like who the developers not thinking about a threat model.
03:03:47.480 - 03:05:10.124, Speaker B: Like, if you have operators, how trusted are your operators really? Because we've seen a bunch of contracts where operators are not really restricted. And if your trust model is not that you trust them, ultimately they could just rock pull the whole contract and that's not really the way to go. So maybe when designing your contract, you should always keep in mind that you want to actually figure out your treadmill before you go to an auditorium. And another thing I want to say is that I implore to developers, please use nice format as nice coding styles. It doesn't just make it easy for us, but if you have a good code quality, it also helps you write better code because certain patterns are always discouraged because they automatically lead to worse, more vulnerable code. If I can add to that, as someone who has some full stack dev experience, what really highlights Solana is the separation of the, say, execution layer from the data layer. So we have the account model, and I can understand for a dev that comes from say, traditional software development, that can be exotic, let's put it this way.
03:05:10.124 - 03:05:50.764, Speaker B: And it's like a database, right? So when you execute a program, it's like you're plugging in a database. And if you don't validate the database, if you don't know what to expect from the database, you might end up executing some data that shouldn't be there. And it's like. So we're saying blockchain is really different. But if you think in terms of principles, so we all know the CIA, triads, so we have confidentiality, integrity and accessibility. Or access control depends on where you find it. It's all down to the rare, because the money is stolen, because access control was not implemented.
03:05:50.764 - 03:06:54.484, Speaker B: And it's just as true for Solana as for Ethereum and anything else. But it's more difficult in Solana because you have to think about the execution layer and the data layer and the controls that you have to implement are different for both of these sales layers. And in terms of how much of this low hanging fruit do you think we can solve with automation? And how far does automated smart contracts tooling get you? And is there some tangible point you could point to? I don't know if it's tangible yet. Static and dynamic analyzers, which have implemented best practices over the years in other languages. You used a variable and you never called it used a variable, but you never checked it. Like these sorts of things will show up in our Semgrep rules or whatever toolkits come along that support this. We're still learning rust as a community and how to apply it to the use cases.
03:06:54.484 - 03:07:32.330, Speaker B: The tools will come next. It won't tell you that your logic is bad, but it might tell you that when you run it in safe mode that you have matched wrong or whatever you want to call it. But we as developers commonly turn off safe mode because we hacked it together and we broke all the rules. So we can't expect the tools to help us when we don't want to use them. So please use them if they exist. Like even if you start with compiler warnings, they are there for a reason, your program will build. But if the compiler compiler is pretty smart.
03:07:32.330 - 03:08:13.364, Speaker B: So if the compiler says there could be something wrong, not even like immediately wrong, but there's something like a variable you're not using. The compiler understands the language, possibly even better than you do if you're a really brilliant developer. So just please don't ignore it like Rust is. Rust is difficult, but it's also a great language. It has, I guess, the best community in the world according to stack overflow. And you have all these automatic tools, you can find outdated dependencies, you can find all sorts of stuff. It's out there for you.
03:08:13.364 - 03:09:27.722, Speaker B: Like, I can't see any reason why you wouldn't do that because it will ultimately make your life easier. And it will make our lives easier as auditors as well, because then we see you take security seriously. Yeah, I have to totally agree. We personally wish that there were more and better static analysis tools because pretty much all the low hanging fruits can be prevented by using static, like missing signage checks, missing owner checks. All that stuff can be prevented not just by using the automated scanners, but use libraries like anchor. They go a long way to helping making your code more secure. I mean, they are not a replacement for audits though, because as we already established auditors, they need to check your logic that the way you do stuff is actually safe and sane and all the other d trivial box is something that of course we audit and we tell you about it and we want you to fix, but that's not what we actually want to focus on because having a logic checked is way it's not, I wouldn't say way more important, but it's important and you can't automate it.
03:09:27.722 - 03:10:09.764, Speaker B: You could never automate it. Yeah, I think it's kind of of fair to stress that the automated tools are more of a complementary stuff rather than being, again, Bo and o solution. And if I were to draw a comparison, it's like making an incision. There are tools that can help you make an incision, but you actually need to go in the midst, so to speak, and actually deal with the issue yourself and make sure that the kind of intricacies are resolved. Got it? Yeah. There's an interesting comparison here real quick with math. We don't ever question using a cryptography library anymore.
03:10:09.764 - 03:10:27.084, Speaker B: Every auditing company on the planet has audited it, so it's probably okay to use. So don't. If you invent your own math, then you come again. But now we trust it because it's gone through this process for 20 years. This stuff has not gone through the process yet. We're in the middle of that process. That's actually a big point.
03:10:27.084 - 03:10:57.160, Speaker B: If the tools, if there's libraries there that are well established and tools are there, just use them. Don't reinvent the wheel because you will make a mistake. Writing software isn't easy. It never has been. And even as an auditor, it's way different knowing that software is bad and writing good software, a skill that not many people possess. Yeah, got it. And I guess, how do we.
03:10:57.160 - 03:11:52.400, Speaker B: I think, like all of you probably are probably swamped. There's obviously a ton of requests. I feel like every audit I speak to has a backlog of like several months at least. And obviously there's a bottleneck there. Curious, like, how do you think we can, number one, encourage more security researchers from either the traditional space or ones who are interested, like just learning to become developers and interested in security research to come toward or come into the blockchain space. And I guess the other one as well is just trying to raise the bar for existing developers with an ecosystem through education or other means, such that hopefully the workload is less in some way or a bit more manageable. We are in this build phase, so everything needs to be audited all at the same time.
03:11:52.400 - 03:12:19.764, Speaker B: The last hackathon had, what, 400 projects that all finished at the same time and sent requests to three companies that do this. Of course, the backlog is months. There will be educational seminars. People will get better at this over time. There is something that people need to understand is human time. Reviewing is much slower than dev time building. So there's some things you should probably think about when you're launching.
03:12:19.764 - 03:12:43.924, Speaker B: If you built it in a weekend, it still might take five weeks to audit because it's some complex thing. That's the reality of the situation. But maybe slow roll your tlv, maybe add a couple of features before you finalize. Think about how you're doing releases so that your release ends up when we're done. Right. That kind of makes sense. Do a module at a time.
03:12:43.924 - 03:13:06.920, Speaker B: If it makes sense, break it apart. Yeah, and plan ahead. Like, don't just tell us you want an audit next week. Yeah, well, sorry, but that's not gonna work. I mean, we do need to complete the completed code or at least modules, like separate modules. We can audit because we can't just audit it and you make changes and we don't audit the changes. That's not how it works.
03:13:06.920 - 03:14:21.568, Speaker B: So when you plan for release, always plan for the audit at least a month ahead, two, three months ahead. And if you request an audit, maybe also send your timeline so we don't have to waste time requesting all the information. Don't just ask for an audit, but give us actual tangible information about your project so we can better schedule you and cater to your needs. Yeah, we also like to see that you actually, as developers, as project managers, because these people also reach to us. You really care about security. It's not like you want only a stamp of approval so you can launch on this or other exchange. Like, we work with some pretty big layer one protocols like Terra Avalanche, and we like to see all these people, they treat security seriously and they actually put a lot of effort themselves to make their own stuff secure rather than just because we as auditors, we don't want to step into your shoes and tell you how the code should be written because you end up reviewing your own code.
03:14:21.568 - 03:15:11.782, Speaker B: And you should never do that as an auditor or even as a developer, because if you create something, you're not really the best person to try and look for weaknesses at it because you have rose tinted glasses and everything's perfect and it just works. But then again, you have someone who might not be that involved in it from the start and they might see something that's not quite right with it. And you shouldn't get all defensive when somebody tries and points some pitfalls in your code because they're not your enemy. The enemy is out there. We're trying to secure you from the enemy. Yeah. I think to hearken back to the encouraging people to get actually interested in the cyber security auditing, smart contracts.
03:15:11.782 - 03:16:00.346, Speaker B: I think the kind of concept of crypto in general is to reward. So you actually need to reward people to get into this cybersec so since kind of crypto hinges on the idea of tokenization and so on, you actually need people to, if you want people to get engaged, you need to reward them. So I think making bugs bounties and something along those lines are kind of useful in this regard. Yeah, that helps. Yeah. Well, book bounties are an essential part of getting, like, security research into the field, researchers into the field board. Also from what I've gathered from other researchers is a lot of researchers are freelancers and they need money to pay the bills.
03:16:00.346 - 03:16:58.794, Speaker B: So maybe offer an option to not pay them in tokens that are locked for a year because you can't lock tokens. I mean, an example model we've seen sometimes is offer a set reward in stablecoin or whatever, you can cash out on offer twice the amount, twice the current rate in lock token. That's one way. So it's always cheaper for the project to hand out a token. We understand that, but it's also better for the security researchers if they have an option to pick the lump sum that's better for them at the moment. One thing that we also encourage people to participate in, because bug bounty is basically working, but before you start working, you should actually learn it. And what's best for learning in hacking ctfs platforms like Hackthebox, things like that.
03:16:58.794 - 03:17:49.974, Speaker B: We have these for Ethereum. We can't see all that many in Solana, and they're great because it's like taking baby steps. You learn access control, you learn all the basic stuff. And we do find issues with business logic, but usually the issues are quite simple and they could be easily avoided if you did, like, basic training that's user friendly and explains each and every step as you go through it. So that's something I'd love to see in the space. Yeah, I think partially the initiative should come from Solana itself, so that actually projects that deal with the security have a leeway to actually work on these in this field, actually expose their expertise in this kind of regard. Yeah, yeah, fair enough.
03:17:49.974 - 03:18:20.134, Speaker B: Well, good feedback for us as well. And, you know, there's a workshop tomorrow I think the neodymium team will be hosting. I've also seen, like, paradigm start to launch, like, some ctfs earlier this year. You guys, obviously, neodymium obviously did a CTF as well, and I hope to see more, you know, whether it'd be Halbourne and Kudelsky get more involved with workshops and CTF longer term. I think that'd be awesome to see. I did want to say thank you to you because you individually helped most of these projects come be safer. You sent them to us.
03:18:20.134 - 03:18:33.390, Speaker B: And so thank you for being a leader in that, because happy to help. Happy to help. Yeah, that's pretty much a time for us, but really, really enjoyed it. Thank you so much, guys. Thank you. Yeah, thanks for talking. Thanks.
03:18:33.390 - 03:19:08.404, Speaker B: Alright. Okay, that was awesome. Hopefully everyone knows how to secure their smart contracts. Reach out to those guys to review your code. The backlog is quite heavy for some of them, so like months don't wait. Even if you are not done, I think it's always better to reach out and plan ahead with securing it. And next, the perfect match defi and encore from Henry.
03:19:08.404 - 03:20:21.434, Speaker B: I should ah, very good. So this is a talk for aspiring smart contract devs. You get a lot of people coming into the forum and they ask, should I use Solana core or should I use anchor? And my response unfailingly is just use anchor. So imagine for a second that you're a new smart contract dev to the Solana ecosystem and you want to build the next great DeFi dapp. But then you discover the Solana programming model, and it's confusing as fuck, and it's throwing bytes at you left, right and center, and you don't know what to do with them. But thankfully, there's the anchor framework. And the anchor framework defends you by converting those bytes into a usable, human readable format.
03:20:21.434 - 03:21:20.664, Speaker B: It provides a set of tools and clean APIs for common functions in the slan ecosystem. And it also eliminates a lot of the foot guns, which I guess beginning devs would run into, and even more advanced ones, of course. And eventually that will give you the confidence and the strength to overcome the Solana programming model and build the next great DeFi dapper. So just a quick who am I? I programmed the idopool code. It's a token sale mechanism designed to combat the botting of other token sale launches that we'd seen in the Solan ecosystem. And it was designed by Daffy of Mango, and it's been used by Mango, Parrot, Orori and Saalin to raise over $275 million at this stage. My own project is foresight, which is an order book based prediction market, which is using anchor framework and built on top of serum.
03:21:20.664 - 03:21:59.172, Speaker B: So back to anchor. What's great about anchor? So the first thing is how it handles serialization for you. There's two main types of serialization in Solana. There's the transactions, and then there's the account data, and then again, moving on, there's program derived addresses which are PDA's. And the great thing about PDA's. So pdas are essentially a way to find the public key for any particular account on chain. If you know the format of the seed, you can find the public key.
03:21:59.172 - 03:22:35.330, Speaker B: And this is great for two reasons. The first being that on the front end accounts and public keys are really easy to find. The alternatives are to hard code them or to do like a find program addresses, lookup and then filter, and then filter again. And that's super slow. And the second is security, which I guess these guys are talking about. So you can add the seed into your program and that way your program knows exactly what public key it should be getting and it gets very hard to slip in incorrect accounts. And then the other thing that I really like about anchor is just that it helps you write cleaner code.
03:22:35.330 - 03:23:13.916, Speaker B: So again, there's some like very clean APIs for common functions. So initializing accounts, particularly when it comes to the SPL token accounts, the mint accounts, associated token accounts, and then also cross program invocation, there's a consistent API for that. So cross program invocation is trying to call a program from within your program. So calling another program. So for example, you want to call the SPL token program if you're going to transfer some tokens, or you want to call serum if you want to place an order. And there's some really good APIs for that in Anker. All right, here's the dangerous part.
03:23:13.916 - 03:23:38.376, Speaker B: No one thought this was a good idea. Counterconnect. I think we're good. We got Internet, I have it memorized anyway. So if that fails, well, let's wait and see what happens. The things that I was going to show you. Oh yeah, here we go.
03:23:38.376 - 03:24:09.924, Speaker B: So this is if you were to type in on the command line anchor Initdao. This is the files that you would get. This is like the default initialization. This is the test file just for the client side. And this is the actual program itself with the real meat of the logic. So in the Sana program model you want to store data on an account, activating extensions of course. So here we go.
03:24:09.924 - 03:24:55.774, Speaker B: So first off, what we're going to do is we're going to store data in an account and that's derived default. And I guess we're going to make a Dao. So like daos, but it's going to be a very, very basic one and we're going to call it DAO details. And then in that we're going to store who the DAO authority is, so this could be a multisig, it could be a public key linked to something that actually votes. And then we're just going to set like a max supply, which is just linked to say how many tokens can be. And that's the data, that's the format of the data that is stored actually on chain. And this little macro here does the serialization deserialization for you.
03:24:55.774 - 03:25:39.932, Speaker B: So again, in Solana, you need to know what accounts you're going to be using. So we need to tell it which accounts we're going to send in so that it can know what data to load up. And the first thing that we're going to need is the authority, and that's going to sign the transaction so that we know for sure that this account is sending that transaction. And then we're going to do a little quick PDA. So we're going to initialize a PDA and we're going to set some seeds. So our seeds are going to be based on the affiliate authority itself as ref. And then we're just going to do like a namespace thing.
03:25:39.932 - 03:26:04.084, Speaker B: So we're just going to call it dowdeets. And then we add the bump, which is, again, there's a lot of details to pdas that you don't really need to know immediately. And bump is one of them. And we're going to payer equals authority. I guess we can just make a new line there. Cool. And then this is going to actually be diodeets and it's going to be an account.
03:26:04.084 - 03:26:48.596, Speaker B: And we just need to tell it what type of data is going to be on there, which is again, this dowdeet struct that we've just made there. And as part of initialization, there's the system program, which I don't know how familiar you'll become with it, but it's sort of how you initialize accounts. You have to initialize the space, how much data is going to be on it, how much space, Solana, you want to put into it. But honestly, I never interact with system program all that much, apart from just putting it in as an account. So this is one of these fucking things. Anchor knows what the system program account public key is. And so it has like this program system to make sure that when you're sending that transaction, it is the correct address.
03:26:48.596 - 03:27:17.564, Speaker B: And someone hasn't just tried to cheat you by slipping in a little bit extra. So let's see how much more we can get done in time. So we're going to let the user or whoever is sending over the instruction decide what the max supply is. And then our business audits is going to go in here. So we're going to borrow a mutable reference. So I think we'll say Daudet's equal to unmute. And then we're going to get one of the accounts and this one is going to be daddies.
03:27:17.564 - 03:27:50.864, Speaker B: Right? And then we're just going to like, again, anchor handles all of this, right. You assign this mutable reference and then all you have to do to update the data on that is just assign it. Did I get that right? Account dates? No, that's fine. Dyedeets authority. Dow authority is equal to CTX accounts authority key. That looks good. And then we'll update the max supply with the value that was passed in.
03:27:50.864 - 03:28:21.724, Speaker B: But maybe you guys would want to be more secure in checking different things. Let's see what confine. We've got no field dowdy. It's on type mute and initialize. You know what, YoLO, moving on. So this is your client. So this is what your front end dev or your full stack dev is going to be looking at.
03:28:21.724 - 03:29:20.964, Speaker B: And then we get to see the value of program derived addresses here. So to get the public key for this data account where we're going to store the details of our dio, what we have to do is just assign, we just have to use a find program address. So hacker Web three, I think it's in public key findprogram address. And then we just put in our seed. So our seed is it's our authority, but in this case it's just going to be our provider's wallet public key and then put that to buffer. And then, oh yeah, and then buffer from Dao Deets. And then just because again, another one of these quirks about how program drive addresses work, you need to namespace it to the program's public key as well.
03:29:20.964 - 03:29:47.784, Speaker B: Oh yeah. And we want to initialize what our Mac substitution. And that's just going to be a new anchor big number. And I guess we'll just give it 20 million. That seems like a reasonable number to pass in. Okay, so await program RPC, initialize. That's going to call our function on the blockchain.
03:29:47.784 - 03:30:26.102, Speaker B: So we're going to pass in our argument Max and then we're going to need again pass in, excuse me, the accounts. And for accounts we're going to have the authority is going to be the program provider. Wallet public key diodes is already there and system program is stored, I think on the Web three library system programid. Cool. And that's it really. I guess I'm also going to show you some fancy stuff. Not fancy stuff.
03:30:26.102 - 03:31:16.218, Speaker B: Well, I'm going to skip ahead a little bit, but you've got to realize that comparing Solana core with anchor, it's really all the stuff that you're not seeing here, right. You're not seeing all of the serialization effort. So for example, there's four main, I guess, serialization steps. There is, you've got to take this transaction and you've got to convert all those bytes. So you've got the bytes for any arguments you've got. So that's the data, you've got the public keys of the accounts, you've got the function that you want to call, and then you've kind of got a format that you're calling. And then in your actual program you need to have all this code that says ok, which function am I going to go to? How am I going to parse that data? How am I going to deserialize all these accounts and all the account infos? So that's the transaction serialization.
03:31:16.218 - 03:32:05.270, Speaker B: And then there's the account data serialization where it's like, okay, I've got bytes on an account. I want to read those bytes and put them into this struct. And then I want to also be able to update those bytes and send it back and have it update correctly. So that's one of the really great things that I think that anchor takes away. And then I'm going to show you the PDA part, which is. So we've assuming there wasn't a compiler, we've initialized our account and we're going to look it up. So we're going to do, let's do await this one's hard anchor account diodeet and that's dads fetch.
03:32:05.270 - 03:32:42.986, Speaker B: And then we pass in the public key of this daddeets. And then it's really as simple as that. You fetch it, you've got the data, and we could just do console log max supply and then I guess dadits data max supply. All right, six minutes left. Let me just quickly look at this. There is no field diodes on type and mute. Initialize CTX accounts.
03:32:42.986 - 03:32:56.594, Speaker B: I've probably done something wrong there. So let's look at this. CTX accounts authority. Someone shouting out the answer. Let's put pubs in front of all these. Oh no, no, I see it now. I haven't closed this properly.
03:32:56.594 - 03:33:11.222, Speaker B: Okay. Yeah, yeah, that's where it is. Perfect. And then we just put that inside there. Nope. This is why people told me not to do live coding, I think. Oh, yeah.
03:33:11.222 - 03:33:23.154, Speaker B: And then we put dao authority or dad eats. Cool. All right, let's hope it over and out of time. All right, anchor test. And anchor test. That's it. You just hit anchor test.
03:33:23.154 - 03:33:40.906, Speaker B: It compiles, it throws up a validator. Local validator. It's pretty amazing. Undefined is not a function. Oh, yeah, that's going to be this one. Did I use await? Let's just do a canvas. Ok.
03:33:40.906 - 03:33:58.320, Speaker B: And then I'm going to just abandon it if this doesn't work. No, fuck that. All right, life coding over. I'm all about making your life easy. You don't need to see things. Compile to know that it would compile if I had an extra five minutes to debug it. So.
03:33:58.320 - 03:34:27.412, Speaker B: Yeah, so from having like hundreds of people come into the anchor discord, the Solana discord, and ask like, oh, I'm making my first program. Here's the vow that you need to make, right. Don't use vexostrings. Design around using fixed arrays. Strings are just u eight s in a fixed array, so overallocate if you need to. But there's not great support for variable length data structures like vexor strings and anchor, or presumably Solana, but I don't know. Avoid optional accounts.
03:34:27.412 - 03:35:02.628, Speaker B: So optional counts a variable number of accounts you're going to pass in. Again, not well supported in anchor. You really want to think about having separate functions where you initialize a data account and then you do the business logic on that data account. That's the best way to think about it. And then another weird thing, anyway, please just wrap your sol in an SPL token if you're going to use it, because it allows you to treat Sol as an equal member with all the other SPL tokens. Otherwise you need to have a whole other separate set of logic just for Sol. And it's like also really not supported well by anchor.
03:35:02.628 - 03:35:26.650, Speaker B: But Spl tokens are. So just wrap your sol and then, yes, some of the facts of life, there's almost no documentation, but this isn't like a thing against anchor. This is a thing against both anchor and Solana. So I feel like it's an even. Yeah, I don't know. Some people don't like discord or some people haven't used discord. Maybe you guys are boomers or something.
03:35:26.650 - 03:36:04.746, Speaker B: I know I'm one, but just join the Solana on anchor discord. There's a discord search function. If you didn't know, it's very useful. So use keywords and phrases, type in your error messages, and then only then ask a good question. So ask something that I can give a reasonable answer to, or Alan CHQD can respond to. So ask good questions, please. And yeah, I don't know, because like some of the Solana core devs, not Solana core devs, but just there, there seems to be an attitude that like, there's something wrong with anchor, that it's not being promoted more.
03:36:04.746 - 03:36:51.552, Speaker B: So I guess that makes me a toxic anchor maximalist. But really what I'm just trying to do is like, I don't know, I want to help people get a better mental model of like the account model in Solana and how it will work works. And like, from my own experience, I didn't understand the default approach when I used anchor. It helped you really get an understanding of like, okay, here are the accounts, here's the data, here's the functions, here's how it all works together. And like, when I go into the client and I have to like manually decode, I don't know, spl token data and stuff like that, I'm able to do that now where I wasn't able to do it before. And I think that's just because I have a better mental model and I hope that other people can also benefit from that. Is that it? Oh, that's it.
03:36:51.552 - 03:37:08.648, Speaker B: I also have two minutes left. Okay. I can tell you all the great things about foresight now. So what's the acronym for that? Mofos. So we've got. What's that? Oh, yeah, minting. So one of the terrible things about prediction markets in like Auger, you have to decide between minting a token.
03:37:08.648 - 03:37:28.356, Speaker B: So you mint a yes and a no, and then you sell the yes or the no, or you buy on the order book. And even Vitalik was like, I don't know which one to do in his post about the trumpet. So we get rid of that. We have like a thing on the back end. You just buy yes, you just buy no. It's a single order book, no complication. The o, we've got order books.
03:37:28.356 - 03:38:16.220, Speaker B: So none of this amm stuff, which a lot of people use, because like, bad thing with Amms and prediction markets is that information changes very quickly. You can very easily have a massive price change just based on the fact that something bad happened in the world and the information has changed. I guess with prediction markets or with order book based markets, you can say, here's what my model says? My model says 70%. Doesn't matter what the price is. I'm just going to set my price at $0.70. Works fees, I guess polymarket and some other places, the way they do fees is it's on trades, but we want to switch to like a profit based model. So if you're taking money out of the contract, then we'll charge you some small fee on that and then settling.
03:38:16.220 - 03:38:32.784, Speaker B: I guess I've said this too many times, this conference, but serum has this thing where you have to hit a settle button and it's pain in the ass. So I just wrote some logic using the permissions serum market. It just kind of gets rid of that. So it's pretty nice. Pretty nice. Ux not having to do any of that stuff. Cool.
03:38:32.784 - 03:38:56.094, Speaker B: And I think that's it. Thank you. Thank you. Okay, thanks, Henry. That was awesome. Next, we have Ayesha to talk about Yelp and market making from Ledger prime.
03:39:13.554 - 03:39:48.194, Speaker A: Who's controlling that? Thank you. Hello, everyone. My name there? Yes, tech working. My name is Aisha Kiani and I work at Ledger prime. We are a quantitative hedge fund active in the Solana ecosystem. Aside from ledger Prime, I also teach at NYu. I teach blockchain and distributed ledger technology technology at NYU Tandon, which is the school of Engineering.
03:39:48.194 - 03:40:40.474, Speaker A: Previously I was at Republic Crypto, a founding member, a personal angel investor in over 30 projects, and a very early employee at consensys. So I have seen the rise of Ethereum in front of my own eyes, and it's actually pretty exciting to see the growth of Solana now. So very excited to be here. Very excited to be talking about what we see within our portfolio companies on the market, making sign on the yield strategies. And as we are, as we're investing in the ecosystem, where do we see the lack in between? So, just a quick overview. We're a multi strat hedge fund deploying a quant and systematic investment approach. We have over 150 million under management at this point and have worked and invested in over 40 Defi projects.
03:40:40.474 - 03:42:00.984, Speaker A: Ledger prime is one of the largest liquidity provider on several c five derivatives platforms such as Darabit, Bit.com, Comma, Ledgerx, Paradigm, and CME. We're owned by the same holding company as Ledgerx, and yes, both of us were recently acquired by FTX for the licenses, but we're an independently run operation aside from Ledgerx. But we're also very active users and investors in several salon and Defi derivative platforms such as psyoptions, Drift, zeta Hero, and mango markets Ledger prime also provides early and predictable liquidity in a variety of liquidity pools like Orca. I know they're around right now, sunny Radium and Apricot. So the Solana ecosystem advantage that we've seen as compared to, you know, other chains, many yield farming and trading strategies deployed by retail and active traders are currently not feasible on ETH given the high gas transactions and slower speed. However, on Solana, these strategies are not only more profitable, but it's also easier to manage risk on the systematic side given the quick speed of entering and exiting the positions.
03:42:00.984 - 03:43:06.504, Speaker A: Team building on Solana don't have to worry about L2 solutions, which I think currently they have a huge advantage over. And then obviously, Solana's extensive relationship with a variety of trading firms and market makers has helped them build a solid network effect. The current hurdles that we've seen across all chains in DeFi option markets is that variety of possible options, contracts, expirations and strike make it computationally expensive to build on. Chain necessity for order streaming and cancel replace of orders makes it expensive from Gauss cash cost perspective. That's why we think that Solana is a better alternative. Furthermore, options have expiries and constant creation of new options. Contract increased gas costs, obviously robust on chain portfolio margining and liquidation system is very much needed before DeFi options can compete with CFI.
03:43:06.504 - 03:44:15.364, Speaker A: From a capital efficiency perspective, market makers need a liquid on chain delta one, which is like in forms of spot perks or future markets to delta hedge options. Risk and the application of AMM model for DeFi platforms can lead to severe impermanent loss, which I don't think that we have a very concrete solution for at this point. A couple of our portfolio companies that we are currently advising and have invested in to overcome these hurdles drift. We are an investor in drift and also a future liquidity provider. We know drift is building on. Solana product design can be used as a guide for existing and future DeFi projects. They're building hybrid MM pool and order book alongside with cross margin and liquidation engine.
03:44:15.364 - 03:45:25.370, Speaker A: And basically they're starting with the launch of like a very robust perps market before they enter the options, because perps need to exist in order for the options market to succeed very well. And then that's enabling market makers to better hedge in a capital efficient manner. We have psy options, which is, you know, a def, sorry, which is, you know, a DeFi options platform on Solana, which is a very innovative approach, just like american options with the serum order book Zeta sophisticated options protocol focused on building and under collateral option system. Note that most option protocols are fully collateralized, which actually makes for traders to lock up a lot of capital. But Zeta is the only one on the Solana ecosystem that's under under collateral, not collateralized, which gives it an advantage, a huge advantage. Apricot Finance, which is a lending pool on Solana. One of the first first.
03:45:25.370 - 03:46:26.274, Speaker A: And the users can earn yields, can earn yields and farm on their ERL assets. One thing on the yield side, we have just started speaking to projects that they're working on yields out of the liquidity pools and yield farming as well from a very traditional market strategies brought on chain like selling options and arbitrage and cash carry. These projects are still doing structured products for yield. First we've spoken to katana Frixion and exotic I know is in the room also. So those are like better options for yield and then exotic, like I just mentioned, exotic. You know, their structured policy, a better product, you know, to earn yield through option strategies. O one protocol.
03:46:26.274 - 03:47:53.626, Speaker A: Also one of our portfolio companies, they're about to launch everlasting options, which means that these options don't expire, which makes them particularly useful if traders don't want to consistently roll their positions into new maturities. That's a hurdle that every trader phase like either by the end of week or month, but the Friday of like, you know, the end of the week or the end of the month. The necessary attributes for the Defi derivatives markets to work portfolio margining, cross margining and liquidation engine enabling partial collateralization. Obviously capital efficiency is a huge deal for all of us here. Ability to delta hedge for option market makers via robust spots and perps vision protocols in terms of speed and cost, which is in the form of L2 on Ethereum. But Solana hasn't had to face this kind of an issue. And then if AM pulled the ability to deal with the impermanent loss we have theta decay as well as capital efficiency and obviously right like a robust community of professional options market makers, enabling accurate pricing and deep and consisting liquidity, which is the most foremost important thing.
03:47:53.626 - 03:48:57.712, Speaker A: And that's why I started my presentation by saying that this is one advantage that Solana has over other ecosystem, the relationships we're trading for firms. Just my very, very quick opinion from our portfolio managers on what they thought, you know, as compared market making on Solana as compared to other chains. They think that it's an excellent part and very similar to traditional finance market makers. Obviously with time it needs a better, better infrastructure, more responsive RPC nodes. The other thing is, like, with time, we'll probably see issues with, you know, size to allow for more complex atomic transactions. Obviously, growing pains may need to further reduce gas fee from, like, you know, 5,000,000th of a soul or as one sold to keep price rising or, you know, market making just based on one Solana. I think that could also be an issue.
03:48:57.712 - 03:49:54.974, Speaker A: And then the other thing is that save more info on chain instead of databases, for example, when there's a dispute about liquidation, better and more transparent risk management tools beforehand and on chain tools will help resolve issues faster. That's why we probably see, you know, a better transparent transaction system on chain is the wider solution to go. But like I said, so far, we've really enjoyed working with the ecosystem and the projects that are building on it. And thank you so much. I think that's all I have for today, but I'm around if anyone is building on Solana, happy to talk to you about it. I think the transaction speed, the throughput, and, you know, the club has a lot of promising features that we're looking in a very next promising chain. Thank you.
03:49:59.074 - 03:50:58.214, Speaker B: Thank you. Next one will be super fun. Where is the Orca og? Building us a boat? Yes, he's coming. Okay, Yutaro from Orca, let's go. All right, cool. All right, so today I'm going to be talking about how to build an arbitrage bot on orca. I'm going to keep it pretty light today, and then I'm also going to try and keep some time, maybe five minutes at the end for questions if anyone wants to ask anything.
03:50:58.214 - 03:52:04.576, Speaker B: But essentially how I'm going to structure this today is talk a little bit about orca, the arbitrage strategy that we're going to do, and then also kind of implementation details of the arbitrage. And then at the end, I'm going to dig in a little bit into the kind of implement, essentially the Solana account model and what's actually going on underneath the hood so that you can take all the learnings and generalize it for other arbitrage opportunities. Okay, so how to build an arbitrage bot using Orca's SDK first, what is Orca? It's the most user friendly Dex on Solana. I already said this before, but if you haven't used it before, just go to Orca. So right now, anyone can figure it out, so please use it. But in addition to being the most user friendly Dex on Solana, we have also developed a developer friendly SDK right there. We see scuba.
03:52:04.576 - 03:52:22.572, Speaker B: He helped develop it. It's great. It's very user friendly. Go check it out. And we're going to do arbitrage using SDK. So I probably don't have to go over this, but just in case. What is arbitrage? It's essentially just taking profit by.
03:52:22.572 - 03:52:54.474, Speaker B: By finding dislocated markets and then having profit or taking profit in some specific currency. So it could be like Seoul or USDC, whatever. And you can kind of do this, right between whatever two markets. So it could be between a Dex and a sex. It could be between two dexs. Here. I'm going to focus kind of on something that you can do primarily on orca that I think is fairly interesting.
03:52:54.474 - 03:53:39.776, Speaker B: So the inspiration for this today is a tweet from my friend Tenxray. Essentially, he found that on sabre, you could buy Lidosol for cheaper than actual Sol. So he essentially just borrowed a bunch of solutions, bought Leidosol on sabre, and then unstaked it, waited till the next epoch, and then made 500 sol in profit. So, you know, I'll let you figure out how much that is in USC. So there are these real arbitrage opportunities out there. You kind of just have to go find it. And if you can do it programmatically, it can be a lot simpler.
03:53:39.776 - 03:54:25.804, Speaker B: You don't have to be in front of your screen all day. So kind of based on that, here's the setup. So it's super simple, right? First step, you find the Sol msil pair, and then you find any moment when you can buy msoul for cheaper than Sol. So there's a bit of a detail here where msoul is. Since it's stake Sol is always accruing Sol. And that means that the fair exchange rate between Sol and msoul is always decreasing. So I think right now, one msoul is worth like 1.0
03:54:25.804 - 03:55:23.924, Speaker B: something sol. So if you find an opportunity where you can buy it for less than the actual cost, then you can make profit by taking that and then unstaking it on marinade. Super simple setup. You can also kind of like, find more advanced version of this where, for example, you can, let's say, go through USDC, MSul, but you can do like, Sol to USDC, USDC to mSoul, and then you unstake Msul. Right? And then the number of combinations or permutations go on and on. But this is the simplest setup possible. Okay, so what does the code look like? This is really kind of taken from the readme, and it's really just to showcase how simple the SDK is.
03:55:23.924 - 03:56:30.844, Speaker B: So the first few lines were just importing things from typescript decimal. So we're using essentially fixed point math here and solanaweb3 js actually just to get a temperature check. Who has used the Solana web3 JS library before? Who has written rust Solana code before? Okay, cool. So I think I'll probably breeze through this a little bit because I think it might be pretty straightforward. But essentially line five and six, we're connecting to the production instance of Solana, and then we're getting this orc object, and then from there we can figure out which pool we want to swap with. And then you decide, okay, what is the input token? It's either a or b. Here it's Sol.
03:56:30.844 - 03:57:31.704, Speaker B: And then how much do you want to trade? And then the first step here is you get a quote. So this is akin to kind of, when you enter a number in the UI, you can get a quote, you can get the amount that you expect to get get out, but you can also get the minimum amount that you need to receive before you get a slippage error, which is generally defaulted to 0.1%. So the last line here is you take the quote and then it tells you, okay, what is the expected output amount. So how much do we expect to get? We can use that and then compare that against the fair value of msoul against Sol. And then if it's less, then you can trade. Simple as that. So here, execution, how does that happen? It's pretty straightforward here as well.
03:57:31.704 - 03:58:20.218, Speaker B: So once you get the quote, you have to pass in essentially the private key or the wallet instance that is going to sign the signature, essentially like funding the transaction and then funding the input token, the soul. And then you simply call swap, in this case the payload. So we have two steps here. One is calling swap, and you get the payload, and the second step is execute. The reason why it's set up or split up in two steps is because we want to support both cases. One is when you have the private key in memory and you're signing directly. The second one is typical for kind of like the web environment where you're connected to Phantom.
03:58:20.218 - 03:58:53.834, Speaker B: And then Phantom is doing the signature with the signing process. So we want to be able to pass in the serialized transactions that phantom can do the signing. And then we send it off, off, and really that's it. So in addition to that, what else is necessary? So we got to figure out what is the fair value. There's a few ways to do this. I think looking at the Marinade API, I think you can figure out what is the fair value. And then the second step is the unstaking part.
03:58:53.834 - 03:59:58.524, Speaker B: Step two, we gotta unstake, but this is actually pretty. You don't even really need to automate it if you don't want to, because you have, I think, a two day window to unstake. So you can kind of just do it manually every two days. But if you want to automate these things, sometimes you don't have the SDK available to you, right? Sometimes you kind of have to find the instruction interface in rust and then work with that, and sometimes that's non trivial. So the second part, I'm just going to talk a little bit about what's going on underneath the hood so that you can take these other protocols that don't necessarily have an SDK and then figure out how to interface with it programmatically. I was originally going to use my laptop, but it wasn't working, so I just pasted some code here. So sorry for kind of the resolution being a little messed up, but this is the implementation for the swap function.
03:59:58.524 - 04:01:23.704, Speaker B: So if we go back, it's line eight right here. Here is the definition. So I guess before kind of just jumping into this, I think what I'll try and do is explain the Solana account model in plain English, which tends to be hard to do. But what we're doing here is we are creating an instruction. So an instruction at the end of the day is just a series of bytes that define which program we want to execute, what is the instruction that needs to be executed, and then what are the accounts that have to be passed in, and then what are the instruction arguments? So here I guess we can jump straight to line 155. We have resolve or create associated token address. So what is going on here is when we're doing a swap, what's really happening is we are sending a token from your token account to the pool's token account, and then you're asking the program for the amm to transfer the output token to your token account.
04:01:23.704 - 04:02:29.762, Speaker B: But one step that's necessary here is that you need to actually have a token account. And I guess this is where the Solana account comes in. Essentially, anything that you want to do, you needed to specify a, specify fixed amount of bytes in the Solana blockchain that you declare that you control. So if you want to own a token, you have to essentially say, I want to allocate space in the blockchain to handle these tokens, and then I want the permissions to transfer it to be owned by my private key. So what's going on here while I'm home, t five is we're saying if I don't have a token account, create it. If not, just return the existing token account. And then there's another 1169, which is create an approval.
04:02:29.762 - 04:03:15.386, Speaker B: So this is akin to like ERC 20 approvals, if you are familiar with Ethereum. But this is essentially just granting permission to transfer tokens. And this part is pretty important because it's essentially kind of a security mechanism. This is saying that the most that can be transferred is the specified amount, amount in U 260 U 64. And that means that even if you pass in this instruction to a malicious program, the most damage you can do is transfer out, you know, the amount that you specified. Otherwise, I think there are alternate ways. There are essentially alternate ways to pass in these permissions, but they have the potential of essentially taking all of your tokens.
04:03:15.386 - 04:04:19.694, Speaker B: And that's what we've been seeing happening in essentially these like popular NFT drops where you have these fake accounts. What they're doing is they're asking you to sign your account, and then that essentially gives up a lot of control over your tokens. And then the last step is creating swap instruction. So this is kind of the key part. So I'll dive into that. So there's a ton going on here, but I think kind of understanding this is a nice way of understanding what exactly is going on, right? So kind of something. One thing that is like unfamiliar or unfamiliar kind of programming paradigm for Solana is that the color of all these functions have to essentially specify exactly what is being read from or what is being written to.
04:04:19.694 - 04:04:57.980, Speaker B: So this is pretty different from anything else. Like even solidity programming. Solidity programming kind of just, it's really just like specifying what is a contract that you want to execute and then what are the instruction arguments, and then inside the instruction argument or inside the actual function that is being executed. In the smart contract, it dynamically accesses state from blockchain and then also dynamically reads to state on the blockchain. You can't do that in Solana. And I think that's probably the most important kind of thing to keep in mind when doing Solana programming. You have to say, okay, these are exactly the bytes that I want to read from.
04:04:57.980 - 04:05:42.780, Speaker B: These are exactly the bytes that we want to write to. And that's exactly what's going on here. So if we look at line 533 to line 542, we kind of see essentially everything that we want to do for a swap. So what do we want to do for a swap? Well, first we want to read from the token swap program, which contains all the business logic that is involved. And then we also want to know about the specific parameters for the pair. Right. And we want to know.
04:05:42.780 - 04:06:43.152, Speaker B: Okay, so where are the tokens being held for this pair is Sol and mSul. And then what are the permissions that we require? And then one, also a pretty important one, although it's kind of minor. Line 540 and 541 is essentially like protocol fees that are being taken out. So the way that RMM works is one five bps are being taken out as a fee to go to a separate account. And then that's being essentially used as part of the tokenomics to generate revenue for orca. So, to recap, the first two is essentially just data that is specific for the sole episode pair 535. That is essentially the permissions to transfer tokens to the.
04:06:43.152 - 04:07:16.804, Speaker B: Essentially transfer the user's tokens. In this case, it's Sol, to. To the sole amsoil account. Line 537 through 540 is essentially the five token accounts that we care about. So that's going to be the user soul, the pool soul, the pools msoul, and the user soul. And then 540 and 541. We already mentioned 542 is kind of the business logic for the token program.
04:07:16.804 - 04:08:03.484, Speaker B: So I think kind of like understanding. Okay, like, what does each account do? Kind of helps you understand what's actually going on under the hood. So if you ever kind of want to see how different programs work in the Solana ecosystem, the best way to do it is to look at the instructions and look at the counts that are being passed in and look at kind of the variables that are being used. And that kind of gives you a sense of, you know, how the instructions are working underneath the hood, even if the smart contract is not necessarily open source. So that's something that I would recommend. And, yeah, that's it for today. I'll be around afterwards.
04:08:03.484 - 04:08:31.654, Speaker B: So if you have any specific questions, I'm happy to answer them for you, but hopefully you got a better sense for how to do arbitrage on the Solana ecosystem using orca specifically. Thank you. Thank you. Okay, next, marinate finance with Michael. The repository is great. They are very well organized. If you are coding, go check it out.
04:08:31.654 - 04:09:27.504, Speaker B: Well, he's coming. Hey, all. So I'm Michael. I'm a contributor at Marinade Finance. And actually, first of all, I wanted to thank Orca for making a nice presentation about amsel. So, at this point, I'm not thinking what's left, but yeah. And we could all use some stretch.
04:09:27.504 - 04:10:15.304, Speaker B: And I was actually curious, like, are there any marinators in here? Any MSOL hoarders? Would you raise your hand, please, for me? Okay, thanks a lot. Thanks a lot. And it's great to meet you guys finally off chain. So, in the next few minutes, I'm going to talk about what liquid staking is really about and how marinade fits in, and also how it goes even beyond that to make Solana fundamentally better. But before we dive in, and before I show you how marinade works, let me share a quick story how it all started. So, back in February, we participated in a hackathon on Solana. And what we did was a prototype of a liquid staking solution.
04:10:15.304 - 04:11:19.754, Speaker B: And we chose liquid staking because it aligned perfectly with the three core values or objectives that we are after. Which is like, number one, we want to take Solana and make it the most secure and decentralized. So back in February, there were only eleven validator nodes that could collectively hold the network and stop it. So we wanted to do something about it. And two, to bring the best user experience to Solana, to make it really easy to use it, to remove the barrier between the people out there and the cool technology in here. And in our case, that meant to allow the people to be able to stake their soul just by hitting a button. And three, to make Solana composable or capital efficient, to build this utility layer, not only to unlock the staked soul, but also to connect the different parts of the ecosystem and have them work together.
04:11:19.754 - 04:12:01.784, Speaker B: So those were like the three main objectives, the high level ideas we still are after. And I would say that we made some progress. So Marinade has been live for only about three months. And the stake sold now through marinade gets delegated to more than 400 validators. We distributed more than $20 million rewards of the staking rewards through the MSO price. And we've seen a massive growth. Like, we went from zero to almost $2 billion TvL in those three months, making it into the top 30 Defi projects on Solana.
04:12:01.784 - 04:12:59.144, Speaker B: And what's kind of special is that marinade was built without any VC money, without any private sale or token sale. So it was thanks to the community behind Marinade that made it what it is today, that they all helped us make it marinade how it is. And also, we've recently released a governance token MNDe, to start shaping the future of the marinade Dowel that will set the next steps for marinade. And to reflect on all of this, marinade gets a bit new look. So for us, it doesn't really matter if you're a big small, if you're a fish, a shark, a whale, or whatever, is that you care about Solana. All of you here care about Solana. And that is what connects us all.
04:12:59.144 - 04:13:35.264, Speaker B: So we are trying to be really inclusive here. And I think that if you care about Solana, you should care about Marinade. And here's why. So as a sole token holder looking to earn some additional yield, you're actually facing a dilemma. In the old world, you could go and stake your sol and lock it in to secure the network and earn the staking rewards. Or you don't stake your soul. You go to defi and provide liquidity, lend it and earn some rewards this way.
04:13:35.264 - 04:14:29.494, Speaker B: But now, actually, with marinade, with this liquid staking solution, you can do both of this. So how it works is that you deposit your soul in marinade and marinade sends you back the MSOL. The MSOL token is like a representation of your staked soul in the pool, so it effectively unlocks your liquidity. And when I talked about how important it is to make the user, the user experience, right, to drive the adoption, let me show you a quick, like, how it works in this new app in progress. So you visit the app, and we try to play the video, you connect the wallet, then you choose the amount of Sol you want to stake. You hit that stake Sol button, approve the transaction, and that's it. You're now staking.
04:14:29.494 - 04:15:01.024, Speaker B: So that's the cool thing, right? That you just converted your Sol to MSOL, which again, now represents your stake. So you can forget about creating multiple stake accounts, choosing the right validator, and delegating your stake. This is all done behind the scenes by you, by marinade. So this is just like a swap. Like a, like a swap on the radio. Mororca, actually. And you can take a ram sol and unstake it back to Sol anytime you want.
04:15:01.024 - 04:15:45.404, Speaker B: So you don't have to wait. This traditional three to six cooldown period, you can do it immediately, but, like, wait. There's much more you can do with your m soul. But before we get to the interesting defi strategies, I'd like you to be a bit more curious and like to think about what happens to those staked Sol to marinade. Because this is where it gets quite interesting and it's often overlooked. So let's talk more about it. On one hand, you know, the marinade works quite hard for the user to allow them to unlock the sole staked liquidity.
04:15:45.404 - 04:16:30.444, Speaker B: And on the other hand, it works, I would say, even harder for Solana to make it more sensory, persistent, more robust, and more decentralized. And to understand how it's done, we need to touch on the delegation strategy. So let me present you what makes Solana Solana? Today, there are more than 1000 validator nodes on Solana, right? That's what makes Solana. But the problem is they are not all the same size as this. If we look at the amount of salts staked on those validators, you know, a bit more like this, and in reality, it's even more drastic. The differences. But let's say that those are the top 20 validators having enough stake to be able to collectively stop the network.
04:16:30.444 - 04:17:42.884, Speaker B: So those are the top 20 validators having 33% of the total source staked. So we wanted to do something about it. As I said, and while I'm impressed by all the projects now launching on Solana, and actually the speed of execution on Solana from the different projects, the tough question is what it matters if we don't make this right, if you don't make the most robust, decentralized and secure layer for all the other projects to run on Solana. So actually, like, we want to change this. We want to change this. Our goal at Marinade and with all the community is that it's not ten or 20 validators, it's more like 100 or even more of them. And that's why marinate goes and skips those top 20 validators and delegates the soul to the rest, to the other well performing validators, so that we can spread the stake around and it gets more evenly distributed.
04:17:42.884 - 04:18:53.834, Speaker B: And this is all done by this transparent, permissionless, like, open source strategy that anybody can see how it's done, and anybody can check the score of their validator, and anybody can spit up a new validator and get staked by marinade as long as they fit the criteria. So there is nothing like white listing, so that we can take Solana, you know, as is, and make it more like this, more robust, more decentralized, make it better. And this is how marinate makes Solana more censorship resistant behind the scenes. So you can think of MSOL like a sol stake to more than 400 validators. So you're actually diversifying risk, both for you and the network. And if you want to be smart, you can use that link at Bitly mbrankpoint one and put it on Twitter. And actually, if there would be a validator that would stop performing, marinate tracks it and goes and rebalances the stake for you.
04:18:53.834 - 04:20:09.464, Speaker B: So MSOL would be something like an ETF index of the source, take to hundreds and hundreds of validators on Solana so you don't have to put all your eggs in one basket, which is quite cool. And now to the fun part. Right? So most of the people know about this part, which is like, you can take the MSOL and use it in Defi. So while MSOL will not probably buy you a drink at this conference, you can do pretty much anything with it in the defi ecosystem in Solana. So you can go and put it in the liquidity pool, you can put it to radium, to orca, Sieber, Mercury, Aldrin, Atrix, you can put it pretty much anywhere and earn some trading fees. This way, you can also go and lend it or use it as collateral and borrow against it on the top lending platforms such as port, Apricot, Larix. And actually, it happened at this very conference that yesterday, Amsoil got listed on pith network having another reliable source of the price feed.
04:20:09.464 - 04:20:51.884, Speaker B: And just this morning, we got excited because we found out that Solend actually listed MSAL as well. So even now, you can use MSOL even on Soland on the lending platform. And what's even more exciting is that today we are happy to announce that we've partnered up with Chainlink coming now to Solana. And Chainlink will provide the whole security and the whole reliable price feed for the other projects on Solana to make it even more easier and more secure to integrate with marinade. Yeah, thanks. I feel like Steve jobs now. Thanks a lot.
04:20:51.884 - 04:21:41.744, Speaker B: All right, so that was, like, the landing part, and then we're not done. Two weeks ago, actually, the MSOL got listed on the one and only FTX exchange. So even now, people can go to the FTX and they can swap their USD for Ram SOL directly, skipping the Sol completely, which is a big thing. So on FTX, it got accepted as collateral and for conversions. And we're in touch with another top tier exchange that should follow quite soon as well. All right, so what's left, right, what's next for marinate, you're asking? Probably right. And what kind of a talk would it be if we didn't touch the expensive jpegs? So, yeah, the nfTs.
04:21:41.744 - 04:22:47.052, Speaker B: That's probably the only excuse right now why people are not all in amsoil, because you can't use your amsoil to buy or mint NFT. And as you might have guessed it, this is going to change as well. So we're in touch with multiple projects on Solana with multiple NFT projects, and we are ready to take the next step to denominate NFTs in MSOL. And what's more, we are looking at nfts as a way to connect and to engage our community, and also to connect with the other communities across the Solana ecosystem. So we're actually about to introduce our own NFT strategy and connect it to the marinade token to bridge the gap between fun and governance. So we're really looking forward to that. Next, we might talk about security, since there are more than 7 million solenoid staked in the platform.
04:22:47.052 - 04:23:53.828, Speaker B: So we should touch that. We are quite happy that we're done now with the third audit done by Kudoski Security. And we've also invited more than 50 blockchain engineers to the marinate codebase, including the top developers from radium, serum, FTX, mercurial, orca. So they are all in there to have more eyes on the code. And the program is designed to be non studio and permissionless so that anybody from the outside can go and call the program, and also that the MSOL tokens stay on your wallet, so it's still your wallet. The next dimension would be the ecosystem governance. That means that marinade as a program is operatable by a multisig 611, which is run by the top ecosystem players in Solana, such as serum radium, Orca, Mercurial, FTX, Alameda.
04:23:53.828 - 04:24:48.896, Speaker B: So we have many parties in the governance as well to make it as secure as possible at this very moment before the token is out there, and to be able to do the token voting. And next, as I mentioned, the transparent delegation strategy. So everybody can check, and they can go and see where marinates takes the soil and what validators get the stake. They can check their performance and how it's done, because the formula is out there, it's open sourced, and we even do like the epoch reports, so that anybody can see what's done and how it gets staked. So what's left? What's left is to invite all of you to come and be part of a marinade. As I said, the project is bootstrapped. So we didn't take any vc money, we didn't do any token sales.
04:24:48.896 - 04:26:04.504, Speaker B: So what we like to say is that the only way to get the governance token and the seat around the governance table is actually by contribution. So this is a call to all of you to come build together with us and start shaping the future of the marinade Dao and also set the next steps for marinade, because we can't do it all just by the team that went back in February and tried to build this. You can go to docs dot Marinade Dot finance to learn more about how we work, about the ongoing projects and what's next, and also to go and apply to become a contributor yourself. You can go there, you can talk us at Twitter on Discord, or even here. You can support us. So we'll be very happy to have you guys in the conversation with you. So, once again, we started Marinade with this promise to take Solana as is and all its amazing technical capabilities and prepare it even further for this adoption, massive growth, and to improve it in general.
04:26:04.504 - 04:27:21.880, Speaker B: So we are actually thinking that we are building here an infrastructure layer for Solana to bring in the best user experience for the user composability and decentralization. So today, I invite you to change your mind and think this way. The way you think about marinated amsoil is that by using marinated amsoil, you're not doing liquid staking, but you're actually making Solana fundamentally better, because you're helping Solana get more decentralized, more capital efficient, more composable, the most secure and easy to work with. So, yeah, it's been great to spend a few minutes in here, guys, with you, to have this talk for you. And as I said, we'll be happy to get in touch with more of you, but that was it. Thank you very much for having me and happy staking. So, next, some oracles.
04:27:21.880 - 04:28:41.160, Speaker B: How do you pull data into your dapp? Mitch will talk about that from switchboard. He's a good friend, and they've been doing great work. So I look forward to it. Thank you. Wow, look at this. We have a lot of familiar faces here. Hi, Zach.
04:28:41.160 - 04:29:37.134, Speaker B: How you doing? Welcome. Well, this is actually fantastic, and it's such an honor to be presenting at Solana Lisbon. And I think what's even more amazing is that I think I recognize about a third of the crowd here, which shows just kind of what kind of community Solana is. And I feel so lucky to have been part of this so far and to be building switchboard and bringing so much utility to Solana and for all the builders here, it's amazing to be building the future of Defi and web3 with all of you. But before we dive into oracles. Let's take a step back and actually look at the current state of the blockchain's ecosystems and how things are progressing and what direction the Solana community is actually moving into. So starting with the big picture, smart contracts have allowed us to decentralize, secure and trade just about any asset type on chain.
04:29:37.134 - 04:30:33.374, Speaker B: One click. The blockchain has become a new medium for anyone to become a banker, artist or trader across censorship resistant markets. The broader ecosystem has given birth to daos and the rise of dapps like micropayment platforms, reputation systems, lotteries, prediction markets and p two p marketplaces. And of course, the explosion of nsts. Then Solana has come into the picture, which has allowed us to actually scale these blockchain applications with cheap costs and high transaction throughput. But as blockchain grow to that of web scale, bridging data from the web has never been a more critical piece into unlocking the next wave of applications. Oracles help us accomplish just that, making high integrity information available from the Internet onto the blockchain.
04:30:33.374 - 04:31:41.934, Speaker B: However, current Oracle solutions have a few limitations. For example, existing oracle systems incentives are statically set regardless of downstream use cases. You can't customize Oracle rewards and stashing mechanisms based on the use case of a data feed. So how could somebody trust an oracle that only has a stake of $100,000 when it could be supporting an AMM with billions of dollars locked in its pools? Beyond that, most Oracle solutions have a centralized control over what parties are allowed to be an oracle operator, and data sources are vetted by a centralized group. This goes against the ethos of the blockchain and why all of us are sitting here today. Can we allow the future of applications to have a centralized source of trust, of selection of data providers where we can't ensure oracle operators are properly incentivized? To tell the truth, I'm not confident we can trust any centralized source to make decisions that are right for all consumers. That's why we built switchforward.
04:31:41.934 - 04:32:55.594, Speaker B: We enable any developer to create their own customized data feed. I'm going to find the right side here for this. We enable any developer to create their own customized data feeds, configuring everything from data sources to oracle redundancy levels to update intervals to incentive models. We put the power of data feed creation and curation in the hands of the developer, which brings us to our mission, which is to enable the community to bring 1 million data feeds on chain by making all data on chain and off chain reliable, accessible and composable for the world. Now, how are we going to accomplish this mission? We can break this down into three core goals that we aim to fulfill. First is flexibility and composability. From Rest APIs to Websocket sources to HTML pages to on chain accounts, we can ingest, parse and transform the data and make it readily available on chain with as little as a few clicks.
04:32:55.594 - 04:33:41.100, Speaker B: You can take data from sports platforms, census data, or something like the current price of tungsten cubes and put it on chain. Next is feed personalization. As the publisher of your own data, you can configure oracle redundancy, rewards and slashing as well as update frequency to ensure oracles are properly incentivized for your use case. Switchboard also offers an native incentivized curation pipeline. No longer will you have to rely on a centralized party to decide what data sources are reliable and which are not. In short, switchboard is the blockchain's gateway to a high integrity Internet. So before we go into our v two incentive models, let's review switchboard v.
04:33:41.100 - 04:34:26.752, Speaker B: One. If you wanted to create a personalized data feed, you would need to do multiple steps. One is to create your own fulfillment manager, two is to onboard or run your own oracles and three is to manage feed updates yourself in switchboard V two, this is all managed for you. So with that, let's take a look at our preview of switchboard V two. And that screen I was showing is the entry gate to our data pipeline for actually getting new data on chain. Users will be incentivized to actually categorize and label data from the Internet, and abis to be used by publishers to bring data on chain in three clicks. And let's show how this is going to work.
04:34:26.752 - 04:35:10.024, Speaker B: Now here we have a few people set in the community that have pre populated our store labeling a few APIs from the common crypto APIs. They crack in Coinbase and so on, as well as a few sports APIs and NFT floor APIs. So here we can see that this user is trying to make a crypto price feed. We can look at this pre curated solusd price feed that has already set up multiple sources to pull this data from. You can have the whole details here and you can add this to your cart being ready to publish as your own data feed. You can also bundle these and batch them in a single publishing model. So if you want to add some sports data feeds as well for your application, you can do that in three steps.
04:35:10.024 - 04:36:00.219, Speaker B: Here we just show an example of looking at some of the NFT floorplaces too. And we're going to add a second component to this bundle before we go and publish. Now we are on the next page where we're actually fine graining the sources you're using for your publishment. So if you don't trust that's a hubby or a Kraken, then you can remove that from your data feed so you can select what sources you actually want to be pulling based on your trust model for your application. Before we actually take the next steps for checking out a feed, you connect your phantom wallet to process the payments and what this payment will do is it's going to be used to distribute a payment model for all of the oracles and updaters. Resolving your feed we have one final step to make final modifications to your feeds before you go and publish and then we go and press checkout. Now this screen is a bit interesting.
04:36:00.219 - 04:37:01.783, Speaker B: What you can actually do is you can specify the length of time that you want your feed to be updated for because as the publisher, sure you are the one sponsoring this feed and paying for it to be up and live for a certain amount of time. You can also specify the reliability which specifies the minimum stake required needed by oracles to actually resolve your data feed updates so you can choose your security model which affects the price point. This also modifies how many oracles need to be used for each update. So you can specify your redundancy levels as well and we give you a summary of how much this is going to cost for the total duration of your feed at the bottom here. So we go and press checkout and you'll see that this will be transferred to a switchboard escrow wallet to make all of your accounts that you need for your data feed. And this will publish your data feed account to a pub key. You will get all of your jobs that have been associated with your data feed published as well as well as permissions to use something we call an oracle queue and a crank and I'll review what those are in a minute.
04:37:01.783 - 04:37:47.484, Speaker B: And once this is up this data feed will automatically start being updated by matched oracles. So you don't have to do any selection of oracle groups, you don't have to find sponsors for your data feed. This is all automatic. Now we go on the block explorer and we get the pub key of our data feed. We copy this and we go to our terminal and we fetch the state of our account and we get the latest value here. And now we have to wait to get the current state and we see that the soleusd price feed that we just created is already being populated without any extra steps or infrastructure from the user. So anyone can go collect data from the Internet and publish their own data feed and automatically be matched with oracles and updaters for your data feed.
04:37:47.484 - 04:39:26.693, Speaker B: Let's go back to the presentation here. Now how did all these steps actually work to get your data feed automatically matched with oracles and updaters? So you, as the publisher that visited our website, are the one to actually create these data feeds? And on checkout these feeds are sent to an associated crank and an oracle queue that will be the ones to actually resolve all your requests. Every time an oracle wants to a data feed wants to update there will be a set of crank turners incentivized to be popping new elements ready to be updated from this data feed crank and once that update is triggered, this data feed will collect n oracles from an oracle queue and from there they will be woken up with an anchor event by oracles that are listening on the websockets for an aggregator update eventually type, and if their pub key matches the update event they will respond with the results in the job and they will take the median of the job and return that into the data feed. And once the minimum number of oracles have actually responded, we mark the result that's received as confirmed and that's how we actually go through these update rounds with these automated update calls. Now let's talk about the incentive models for V two. We have four main Personas that people can act as in switchboard v two, we have curators who are incentivized to populate the switchboard catalog with high quality data. The more a curator sources are used in published feeds, the more they are rewarded.
04:39:26.693 - 04:40:21.084, Speaker B: Then we actually have the publisher which we just showed the flow here. And publishers are the ones that are creating data feeds. They reward curators for their work at the time of publishing by giving a certain percentage of published funds to all of the job curators. They fund an escrow that's going to be paying out the oracle operators as they make their updates and crank turners as they request updates for a data feed. And as I just mentioned, the crank turners are the ones actually constantly trying to move that crank. And if there's any data feed that has a timestamp that is beyond the current Oracle Solana native timestamp, Oracle will pop that queue and trigger the update and they'll receive a small reward as well. Then Oracle operators are rewarded or slashed with a certain scale of the distance of the round median based on the oracle's reported value at the time of an accepted round.
04:40:21.084 - 04:41:14.644, Speaker B: So right now, let's talk about how far we've come since we actually launched in April. During our V one, we did lots of outreach to the community to see what types of data they wanted supported on chain. Since that time, we've supported 120 data feeds live on chain and we still continue to support those. And with Solana's cheap costs, it's been economic for us to actually do 2 million feed updates per day. At this time, we operate about 3% of Solana's main net traffic with all of our feed updates and with our reliability standards and SLA's that we've been kept that we've been keeping up. We formed strong partnerships with ten core ecosystem projects and have about 20 mainnet users that we know of in the growing Solana community. And the V two that we have just presented in this presentation will be live November 22.
04:41:14.644 - 04:41:46.424, Speaker B: We'd also like to give a special thanks to some of our partners that have really helped us improve and build this amazing product. And a special shout out to step finance, aver hedge finance and Solrise who are being added to this list as we speak, and all the other amazing teams that we are just beginning to begin our path with. Also, a special thanks to Brian Long and Linus and the rest of the RPC pool team for their many hours of support and optimizations for our high throughput needs. And thank you all for your time and interest in switchboard and we hope you integrate soon.
04:42:30.884 - 04:42:32.156, Speaker A: We're going to take a break, right?
04:42:32.220 - 04:42:32.652, Speaker B: Yeah.
04:42:32.748 - 04:42:33.244, Speaker A: And then we'll.
04:42:33.284 - 04:43:55.846, Speaker B: Ten minutes, 15 minutes. All right. Hey, so before we start, the next one will take ten minutes break, so if you want to grab drinks, they are behind you. Other than that, just mingle together. Hey, so we are going to start with indexing your data from Solana. Jonathan from Aleph Im. So, hey.
04:43:55.846 - 04:44:19.492, Speaker B: Hello everyone. So I am Jonathan Shamul, aka Moshe Malawar on Twitter, telegram, etcetera. That's just a nickname. My real name is Jonathan. I'm the founder of Aleph Im. Today we will speak on how to deploy your Solana indexer on our network. So first and foremost, thank you very much, Solana, for inviting us.
04:44:19.492 - 04:44:55.674, Speaker B: It's a really great conference and I'm really thrilled to be here. A bit about us. So what's Aleph? I am a decentralized cloud computing platform. We provide storage, as in file storage and database storage and computing as in the serverless computing. You can think of it as something like AWS lambda or some similar things. So in a nutshell, it's like a decentralized AWS, Google Cloud, or whatever cloud platform you might see. Our network is not a blockchain.
04:44:55.674 - 04:45:45.394, Speaker B: We don't have blocks, but we accept messages coming from blockchains. A message from a blockchain is like a private key, gives you a public key, gives you an address. So if a message is signed by any of the accepted address shims, it is accepted by the network. We currently accept addresses from Ethereum, Polkadot, Substrate, Cosmos, Cosmos, SDK, Polygon, like all the EVM chains, and obviously Solana. Our network works with core channel nodes, which are the controllers of the network for which you need to have skin in the game to run one of these. And they are currently doing a part of the storage stuff. But in the near future everything will go towards the resource nodes.
04:45:45.394 - 04:46:54.174, Speaker B: The resource nodes are those that are actually providing resources, as in storage resources, computing resources, etcetera. The computing resource node will go live sometime next month, and the storage resource node will go live in early 2022. So let's zoom in a bit on the computing resource node, because that's what is interesting to us. For the indexing part, we have two kind of load balancing one which is cloud load balancing, one which is virtual, where you ask the network to find which VM can answer your request, and then on demand, a micro virtual machine is started with your own root file system. Unlike your code inside, your code can access ipfs, all kinds of blockchain data, decentralized databases, our own database system or external sources here. For the blockchains, obviously we're contacting Solana. And for the storage, we will also support other kind of storage in the near future like Arweave, Filecoin, etcetera.
04:46:54.174 - 04:48:08.494, Speaker B: Now, about our subject today, so what is an indexer? Why would you need to index your data? In general, when your dapp accesses a website, OK, you have a front end, your front end, we can host it on IPFs, whatever. But then you need to contact RPC servers, that's cool. But then if you have millions of users, you start mirroring them. So an indexer allows you to have some kind of firewall between your users and their PCs, because the state will be stored in a database and you can also add stuff to your status. You could add prices from Coingecko, status from another smart contract, whatever. And most importantly, you can have history like trade history, transaction history, price graphs, whatever, and then it replaces a centralized backend here in our case, because most of the DApps do that on a centralized server. Here we are doing it in a decentralized way.
04:48:08.494 - 04:49:07.734, Speaker B: So how does our indexing work on Nf Im? So here we have zoomed in even a bit more inside our micro Vm. So when you start your applications it will index data from the blockchain. Like when you start it, it gets the current state and then goes back in time to get history. But when you launch it instantly it will get the current state and then go back for historical data. Store this inside the node local file storage which is persisted between multiple launches of the same node and then it will get the data out through GraphQL. We can also have a snapshot system to restart from a previous point if we want to get faster. Let's say your application has a spike in demand.
04:49:07.734 - 04:49:55.288, Speaker B: The network will spawn multiple instances through the whole network for you. So to do a quick demo, we didn't release yet our full open source framework for indexing for Solana. So what we will do today is to make a very simple indexer, self contained indexer. All the source code will be made available on our Twitter. Later we will send a link. So we create a simple counter app which has a value that we can increment or decrement in a dapp or for a program, and we log the state as a log inside the program so the history is kept and we don't have to look at all the account state all over the time. So let's whoops.
04:49:55.288 - 04:50:41.794, Speaker B: So here is the code of our very simple program. We are using anchor, obviously. So we have three function. We create our counter, we increment our counter and we decrement our counter. The very important part here is the log that we are adding on. This log is quite interesting because we will parse it later. I know that anchor is working on some kind of serialization for the logs, so in the future you will be able to use the standardized serialization.
04:50:41.794 - 04:51:51.062, Speaker B: So now how do we build our indexer? When you create an indexer with our framework, here itself contains everything is there. Normally you will only have boilerplate code. You make a parser for the instruction you explain when there is a new request that comes, how do I know what function has been called and what are the arguments, et cetera? We need to decode the data part of the transaction. Then we define the program id, we define the logic, and we prepare the graphql output. So let's have a look a bit more in detail to that. So in the domain, this is where we process the transaction. So once we have a transaction that has been parsed, we will look into it and we will parse what we had before, which was splitted by an equal number.
04:51:51.062 - 04:52:23.724, Speaker B: So it's split by it. We set a counter and we return a state. Our state is countertime stamp. And in the process, whenever we receive a new transaction, we are verifying that is the timestamp superior to the previous one that we have? If yes, we set the current state. So whoops. Parser support programs and here is how we define the parser. For our program.
04:52:23.724 - 04:53:25.044, Speaker B: We have a program name, we have the instruction code, which is the start of the data of the transaction that we then map to create increment decrement. We have the instruction data layout, which has the authority for the create and nothing for the increment and decrement because we have no arguments. And then we explain what are the accounts that are called here and there. Again, if you are using anchor, all this can be made way simpler. Anchor on the client side, then we set a schema where we explain what are the constructors, etcetera that we have. We have only one data type here, which is the pulse state, which is a counter on the timestamp. And inside our schema we say what we have.
04:53:25.044 - 04:54:11.134, Speaker B: So we have two types of call in graphql. One which is pulse, and one which is pulse history, which is the actual history on the data. Then we have the resolvers that that gets you all the data out here. For pulse it will just get you the state, and then for the history you have a limit reverse on some arguments, and then it gets inside the whole database and gets you for each transaction your data out. So let's try this. So I have already, I have it already running here. I have a little script that will write on the smart contract and do increments and decrements.
04:54:11.134 - 04:54:58.544, Speaker B: And let's have a look. So here in my graphql I do two queries, one which is pulse, one which is pulse history as we have seen. So this one gets us the current state and the other gets us like the history, and we can see all the history of the latest pulse if I rerun it. It is changing in real time. We did a very simple UI that is showing the current state at the moment. So all this is in local, so it works, but it's pretty centralized so far. Now I won't upload it on the Alex Iam cloud right now because with the Wi Fi uploading a wall node program.
04:54:58.544 - 04:55:43.744, Speaker B: I'm a bit aware of the demo effect, but I uploaded it just before I came here. So it's a very complicated URL. Alef Sh or Alef cloud. It's two kind of domain, two different load balancer that gets you toward your micro VM. And we will also support in the near future custom domain names as well, so that your application on your world back end can run inside the cloud on demand. It will spawn up your micro VN with your code, which is the code that we have seen just now, and it works. This indexer is now stored on the left AM network.
04:55:43.744 - 04:57:12.070, Speaker B: So this indexer is decentralized right now. So a bit then about the whoops tick tick tick. So as is, it feels like it's a bit complicated or whatever, but it's really simple because you will just write your queries, you get a simple result out, you can get arguments, et cetera, and then you can do things that are much more complicated than that. And we have been working on a few other indexers, like for example radium dot in Fo, which is an indexer for the radium Amm. The good part of that is that you can see the world trading history, you can see all the swaps, liquidity, removal of the liquidity, and in the same way all this data is available as GraphQL. And then we can do queries here to get all the data out and all the data is open and available to the general public. So if you are querying data from Solana, we will likely already have some kind of data endpoint available for you.
04:57:12.070 - 04:58:14.408, Speaker B: So I've shown radium, we also have orca dashboard, sabre dashboard like this one, and the one that we are pretty proud of is the serum markets dashboard, if I don't have a demo effect because of the Wi Fi. So you can see all the data. So all this data is open. If you want, you can get all this data out. This one is available, this one is actually open as well. In the same way for all this theorem data, you can get all the tokens, all the transfer, you can get, oh, LCV data for the pairs on serum, even if they are permissioned or not, et cetera. So that's for the indexers.
04:58:14.408 - 04:59:03.510, Speaker B: We are also working on indexers for a lot of other projects. Currently we have a partnership with Port Finance, with whom we are building an indexer on many more up and coming that will be announced in the next week and months. So thank you very much. I will perhaps I still have a bit of time. So I will show you a little video that explains how the network works. The Internet is broken, flows through centralized networks controlled by just a handful of companies. But there's a change coming, a monumental shift.
04:59:03.510 - 05:00:01.424, Speaker B: And at Aleph IM, we're supercharging the transition to a new, decentralized era. An era that provides fully decentralized cloud storage, computing and identity services powered by incentivized, self hosted servers built from the ground up. Our unique architecture blends both off chain and on chain technologies to support an ever growing constellation of blockchains and companies. We've built the tools that allow you to store any file of any size on our proven decentralized network. Protect your precious nfts securely on our network for eternity with our pioneering backup dapp. Unleash the power of our decentralized virtual machines, allowing you to run dapps in any language that can also read and write to blockchains, or be triggered by often on chain events. Be empowered to store, build, and launch incredible things in this new era of decentralization.
05:00:01.424 - 05:00:40.034, Speaker B: Join us at Aleph Im. Thank you so thank you very much for your attention. We also have a dev hub that is available. We have a lot of documentation. We have tutorials coming up for the micro virtual machine as well. And you can also find us on Twitter and telegram. And we will release all the code that has been shown before as open source in the coming hours.
05:00:40.034 - 05:01:39.854, Speaker B: We will put it on Twitter. So thank you very much, everyone. Hey, guys. Hey. So next from solarity, Guido and Thomas. We'll talk about redefining everything on Solana. Hi everyone, I'm Thomas and I'm a student at UC Berlke.
05:01:39.854 - 05:02:04.684, Speaker B: Study electrical engineering and computer science. Hi everyone, I'm Rocco and I'm studying computer science engineering at Milan Polytechnic. And today we'll be speaking about Davers. Let's redefine. So let's talk about Davers. So we thought about naming Davers the most decentralized metaverse infrastructure that we could think about. And with let's redefine, we mean repurpose defined networks.
05:02:04.684 - 05:02:58.174, Speaker B: Since right now the DeFi treasuries are overhearding with money, and we believe that they can have a scope, they can have a goal for common good. And that's why. And we think the best way to actually use those money is through a virtual land and through a virtual world. But right now, the problem of the decentralized virtual world is scarcity and abundance and their static nature. And so we thought about using this Goldberg polyhedron that has twelve fixed pentagons. That would be unique landmarks, but it can be infinitely expandable with equal tiles, with equal hexagon tiles. And we thought about a cool use case for this is to have a treasury, an NFT dao treasury, using it.
05:02:58.174 - 05:03:39.682, Speaker B: And this treasury would be open source, and everything would be visible. So we don't have problems with possible regulations or with governments. And with its nature, we thought about using two different models, thought about using a posivers and a negiverse. And the posivers would be the nonprofit Dao, and the negiverse would be the for profit dao where the land in the negiverse, it's used as a service. So for example, it's going to be like a subscription model. So Netflix, for example, something will happen inside this world. To enter this world, you will need to own a tile of that word.
05:03:39.682 - 05:04:15.068, Speaker B: And on deposivers, it's going to be a nonprofit model. And that's basically what actually builds the Negaverse and the treasury. So in the negiverse, the money flows in inside the treasury, and on deposivers, the land flows out and is given by the owners of those lands. So, for example, there can be a negiverse that can be a game or something that people will have to pay to get in. And then there can be the posivers that it's actually the daos of builders that creates the project. And in this way, we can have daos as service. So basically them communicating together.
05:04:15.068 - 05:04:54.640, Speaker B: So the for profit metaverse and the developers and the daos of builders and creators, so that they can directly be retributed. And this would be our Dao versus archetype that we thought of. So, yeah, so a posiverse has a new tile equals a new member of that Dao, and a negiverse is a new tile equals a new customer. And there are multiple layers of the word that you can unlock. So you can unlock a volume, and when you unlock volume, in the posiverse, you unlock basically membership tiers. That puts you on top. And the membership tier is provided by the users inside the posivers.
05:04:54.640 - 05:05:50.936, Speaker B: While on the negiverse, you're basically unlocking, if you buy more space, more layers, more height layers, you're unlocking different service. So for example, Tinder premium, Tinder gold, and so on. And with this structure, we can have continuous fundings, since basically there are going to be different people holding the negiverse, having a terrain inside the negiverse, there can be people who just care about an open source decentralized metaverse, or people who just want short term gains. And all of them inside the layer zero. If you own a layer zero land, layer zero tile inside the Nagiverse, you have a voting power and you can elect a posivers. And the posivers are twelve. The posivers are twelve, since twelve is the fixed number of pentagons in the Goldberg polyhedron structure, and an infinite number of hexagons.
05:05:50.936 - 05:06:33.444, Speaker B: And the hexagons are the actual users. So for example, the warden of the north ecosystem interest and everybody else. And so you can vote your posivers, you're basically dao of developers that you want, and you have the possibility to continuously fund them by unlocking new tiers, new layers. Because when you unlock new layers, you're actually giving money to the treasury, to the negavers. And so you are providing fundings to those posivers, continuous fundings to those posivers. And of course, if we look at the Goldberg polyhedron structures, we can see that it's expandable. So you can have more tiles, and more tiles equals more DaO members if it's a nonprofit, or more customers if it's a for profit Dow verse.
05:06:33.444 - 05:07:16.606, Speaker B: And in this way you can even have an NFT fractionalization too. So this is how the world will look like. There are basically those pentagons with points are the Dow versus, are the positive versus, and we can see how the layers are actually structured and how it is going to look like. So the self organized world, there will be different height for different volumes. And you can have buildings made by users that can be public, that can be private. And there will be roads connecting those buildings, and connecting pentagons and stuff inside the world that you want to create. And then there will be, of course, roofs and parks that will be useful in the survival mode.
05:07:16.606 - 05:07:54.946, Speaker B: And then you can have neighborhoods that are basically really basic form of daos with agent layer zero plan tiles. So for example, you and your friends have five tiles together, and you want to have, I don't know, a japanese theme. You can have that with your own rules and with your own stuff. And here there's the quick code for what we did. So on the right there is the code for the rust code for the creation of the polyhedron. And on the left, the upload of the new polyhedron phases metadata. So the meta tags of the coordinates and the other stuff, but we don't really have time to go through it.
05:07:54.946 - 05:08:50.922, Speaker B: So you can find more on GitHub at SolaritVr and how we thought about having basically the maximum decentralization for these diverses are to have those hexagons. So these like multiple numbers of tiles vote for these periodically electric pentagons. That would be just people. And those periodically elected pentagons have the power to propose an expansion of the word. And if the hexagon accepted, they are the one who are going to sign the new tiles generated. And the hexagon members have the power to grant basically a new layer to other members, so they can have more voting power and they can have recognition for their work. Because how we thought about it is that those rewarded would be the most active people from the community, or people who shown leadership roles.
05:08:50.922 - 05:09:29.344, Speaker B: And those two will vote together if they want to remove someone from the dawbers. So for example, if one is not active enough and there is enough consensus, he will be eliminated from the DAO. We can say, and this is a quick recap, so basically we want to have the solarity divers that can be the benchmark for anybody. Since everything is going to be open source. Everybody can create their own thing and can add whatever they want. And whatever you build on top will be added to this basically open, unstoppable metaverse growing stack. Everything will be available to everybody to create whatever they want.
05:09:29.344 - 05:10:27.714, Speaker B: And since everything is on chain, the governance is on chain, there will be economic parameters and functions that can be studied. So there will be police data that would be the parameters, incentivized data, that would be the functions and economical data, that would be the economical transactions that happened on the on chain governance. They can be studied through a machine, learning on policies. And since we don't know much about it, we can have a lot of testing, a lot of failing, a lot of trying with these things. And it's basically effortless, because everything is basically testing on a game. And the next thing, since we want to have the earliest decentralization as possible, we thought about having different rounds for the land tile auction. So the first round is going to be really, really cheap, so that everybody can afford it, and everybody can have their own say inside the solarity divers.
05:10:27.714 - 05:11:11.474, Speaker B: So everybody can enter, everybody can have their own land. And on the second round, third round and fourth round and so on, the price will exponentially increase. So that if you want to speculate and you want to be, for example, I take kun, you will actually increment the price. So there's more fishes who could just afford. Maybe the first one will have the floor price incremented. And to avoid bots and stuff like that, or people creating 1000 wallets we thought about using KYC or proof of humanity. And as soon as the action ends, you can trade the land, and the unsold tiles will be natural reserve or parks that will be useful on your own case or in the survival mode.
05:11:11.474 - 05:11:54.258, Speaker B: There are going to be some use cases there. Okay, so we thought about running a simulation, and this is approximated, so it's not gonna happen, but it could, as you can see, as the price goes up is the gray line. Less people are involved and less tiles are sold. And in the third graph there, you can see the economic power raised through this land auction. So in a case, case one is not many people join the auction, so there's not much sold in the treasury. In the case two, medium people join and there is a bunch of stuff in the treasury. And in the third case, a lot of people join.
05:11:54.258 - 05:12:59.858, Speaker B: And there's more stuff in the treasury, in the treasury. But the cool thing about it is that we're gonna have the land NFTs auction, and then we're gonna have a government governance tokens auctions to govern the money that has been raised. So that way we could achieve early decentralization. Here is how we plan on using land as incentives alignment for DeFi users. Because what we feel at this stage is that many DeFi protocols, they just hoard Defi fees and treasuries, and they are not used to do many stuff. So we thought about using virtual land to coordinate DeFi users, to automatically retribute builders and creators to grow a common and free infrastructure. So basically, this virtual world, you could be like a landowner, and instead of trading on some other exchange, you could trade on the defi stock of that virtual world, and you could use the fees to fund public goods, maybe a common infrastructure metaverse.
05:12:59.858 - 05:13:49.480, Speaker B: So we are going to develop open source VR headsets, stuff like that. And this is a simplified overview of how value created is distributed to value creators. And yeah, basically we're going to have Defi NFT trading sponsor experiences and survival mode. And as you can see there, there's the miner fund, the builders and creators Fund. So everything there is geared towards redistribution of value created to value creators. But the end goal of solarity is to get enough fees to self sustain a virtual world where the computation fees are paid by the Defi fees. And that way you achieve the most decentralized and independent the network.
05:13:49.480 - 05:14:23.304, Speaker B: So if you pay for your own computation, it should be like the most neutral approach. So neutrality nowadays is something that is kind of sick. Okay, this is a technical overview. So basically, our approach is to have something like Google Stadia because we need low latencies. And to do that we're going to have miners and clients. But you couldn't have a miner in Shanghai and a client in Lisbon because you need to have low latencies. And nowadays you cannot do that.
05:14:23.304 - 05:15:17.864, Speaker B: But anyway, the way it should work is that maybe people that want to buy gaming hardware or stuff like that, they don't have the money to do that, but they could buy it and lend the power when they're not using the GPU's. So that way they can afford it to play it and they can land it when they're not using it. And on the other, on the left there, there's a kind of complicated scheme, but it's all about the payment layer for the miners and the clients, and the payment layers from players to players. And instead of clogging monolithic chains with useless nfTs, we could use a dag. And a dag is cool because it's felesome. So if people want to play your game, they don't have to pay fees because they made the computation themselves. And it's also infinitely scalable because the confirmation in a dagger provided, the more users are there.
05:15:17.864 - 05:16:09.228, Speaker B: Okay, so another cool thing that we thought about is having a game engine with nfTs. Because if you have a way to prove ownership of some content, then we could have a shot at define multimedia content piracy. So if you're a creator, you could have like your game or movie or experience, whatever, and you can have an NFT there and the engine that is the transition function. So what shows stuff on like on a monitor or on a VR screen or whatever. So the output is verified through the engine that you actually own the NFT that is required to play that stuff. And also this is a simplified overview on the self sustainability of the project. And as you can see there, we got the founding members of the DAO that just kickstart everything.
05:16:09.228 - 05:17:02.982, Speaker B: And then DaO as an advanced crypto economic system, that is, we got a paper on it is like 80 pages, so we didn't want you to go through it, but it's cool. By the way, the DAO just sends my money to the creators and builders and they get to build the world that they imagine. So they are free to build whatever they want and they build together. And then hypothetically, meta land speculators arrive and they get even more resources to those creators and builders and they keep on building. And we thought about achieving a world equilibrium where users and advertisers are able to sustain this virtual world where the fees on the advertisers are able to pay for the computation of the users. So that way you can have a Google Sedia experience, but for free. This is a detailed overview on the sustainability of the project.
05:17:02.982 - 05:17:46.440, Speaker B: And these are the economic cycles. Basically what we have is that the faces of the polyhedron, they can be expanded in height, as we've seen before. And we got a mathematical function assigned to, to find out what the costs are. And we can have a measurement on the demand of the land upgrades and use that as a bias announcement in the spending plan of the DAO. So, to give a basic explanation of this stuff, the community token has a supply of 314 million tokens. And to upgrade the world to the maximum expansion, you need like trillion tokens. So there are not many, there are not enough tokens at the beginning.
05:17:46.440 - 05:18:35.832, Speaker B: And that means that when you upgrade a land tile with a community token, you transfer it to the DAO, and then the DAO transfer it to builders and creators through posivers that we talked about before. So that way you're able to found creators with the demand for the virtual world. And that is cool. So this is the final overview, basically. Basically we're going to have here is the NFTs land auctions that are going to provide the funds for everything, and then we're going to have a governance token auction to actually make it decentralized, because if you raise that amount of money but you have the keys, we don't do that. Okay, so basically this stuff allows you to build building blocks based on the Goldberg governance. And then when you have building blocks, you build stuff.
05:18:35.832 - 05:19:26.434, Speaker B: So yeah, you build a self assembling, self sovereign and self sustaining metaverse, but we don't use meta anymore. Okay, so now that infinite and effortless scalability, we can have any VR e commerce application, any DAO stack solarity, any permissioned planetary token based metaverse, and any permissionless planetary token based metaverse with the same Goldberg structure. And this is a highly complicated scheme that shows how this stuff is solarity. This stuff is the computation network. And this stuff over there and over here are just other people that could leverage on the computation network. And basically you get small fees on those stuff, and then it gets into the treasury, and the treasury is able to pay for the computation. Yeah.
05:19:26.434 - 05:20:25.144, Speaker B: And, yeah, so right now we're just a small team of engineers. We have some in Berkeley, some in Milan, and we would love some help with the UI UX development since, yeah, we are all engineers we don't know much about design, and we would like some help with the governance and smart contracts room. Since our end goal is to make creating daos and smart contracts programs really seems effortless and that everybody can do it with basic UI and basic website that we call governance smart contract room. Something that we want to focus on is the DAPPS deployment, since once we have the structure ready, it won't be that hard to have people upload their own stuff on top of it. And there are so many new projects, so many cool ideas coming on Solana. And we want to help them to have VR experiences or just browser gaming experiences. And if we can help them, we would love to help them.
05:20:25.144 - 05:21:05.818, Speaker B: And if they can help us, we would love to receive help. We also would like to focus on research and development of meridocratic systems. And usually, if you want to do, like, some good work, you need a lot of people with different mindsets, but that are open to discuss and find, you know, common grounds to actually build something that, you know, is really decentralized. So we work on. We also would like to work on commonly adopted standards. And usually the way these standards emerge is that people, they, you know, they say, this stuff could work. Other people say, yes, it could work, and then slowly they find commonly adopted standards.
05:21:05.818 - 05:21:17.754, Speaker B: And we also would like to find new DAO members so people that are in interested in daos, you know, we do something cool together. Yeah. Okay, so thank you. Yeah, thank you. Okay.
05:21:22.934 - 05:21:39.336, Speaker A: All right, thanks so much, guys. We're changing it up because I don't know where bartage is, so. Hey, everyone, I'm back. It's Bailey. It's me. Okay, we're gonna get started with the next session. I have Elliot and Lucas from Bonfida.
05:21:39.336 - 05:21:44.924, Speaker A: They're coming up to talk about leveraging serum's asset agnostic order book. So, guys, come on up.
05:22:04.754 - 05:22:41.080, Speaker B: Okay. Hey, guys. So I'm Elliot, and this is Lucas, and we're two of the on trained developers at Bonfida. And today we're here to talk to you about something we're very much excited about, and it's Bonfide's vision for Serum's future. Essentially, Bonfida and Serum have been linked closely together basically since Bonfire's inception and release. This partnership has been basically in our DNA from the very start. And we've built services and we've built applications on Serum's infrastructure.
05:22:41.080 - 05:23:13.628, Speaker B: And so we feel that serum is really a foundational component in the solar ecosystem. And we really want to establish this fact, and we really want to invest into serum. And so this is what we came up with. So let's talk about the asset agnostic order book. So let's first go through what serum is. I think most of you here know what serum is, but let's remind ourselves for a minute. Serum is a decentralized exchange.
05:23:13.628 - 05:24:28.824, Speaker B: It relies on the central limit order book, and it's really the reason why it's so powerful, so flexible, so revolutionary. It's the first central limit order book decentralized exchange that runs on a blockchain. And this is in part, in, well, in large part due to Solana's impressive performance and also due to the quality of serum's engineering. So serum as a market is just a product that we're very much excited about. But the only problem that we see with Serum is that it's a beautiful piece of engineering and technology, but it's really wrapped up, and it's really enclosed into a way too specific implementation, because the serum Dex can only be used to swap Solana program library tokens, so SPL tokens. So in terms of the kind of variety of assets and the kind of variety of applications that you can think of that the CRMDex can actually deal with, it's kind of limited. And what we really want is to unleash this technology and to really make it usable by everyone for many different use cases.
05:24:28.824 - 05:25:36.464, Speaker B: And this isn't simply something that we want to do. It's something that we've observed in the world because other projects have constantly been forking serum's code base and to create new central limit order book based markets. But this is the kind of approach that we want to move away from. We want to have a common component that can be used by every team to build custom order book based markets, which for basically any asset. And this is where this idea of the asset agnostic order book comes in. This vision, this key part of, of our vision, which is the asset agnostic order book, is really a part of a free, pronged approach to basically split up what makes serum great into different products. The first product that we, that will be really the cornerstone of this whole thing will be, of course, the asset agnostic order book, which the serum implementation will be called serum core.
05:25:36.464 - 05:27:25.906, Speaker B: On top of that, you'll have what's nowadays the serum decentralized exchange serum Dex, which will be built, which is already actually built on the agnostic order book pending release, and the final component, which is something that is still kind of in the design process, but we're gradually having more and more of an idea of what it will look like. The final component is the serum network, because as builders ourselves of smart contracts on chain, one of the things that comes up every time, almost every time, when building complex smart contracts, is the fact that there's always some kind of cranking mechanism, there's always some kind of operation that needs to be run on a schedule in order for the smart contract to perform normally. And since Serum has really been in the game of running production production level, well, basically running complex smart contracts in production since basically the beginning, what we want is to leverage Serum's network of cranking servers and enable developers to just leverage this computing power, this availability reliability, to abstract away this need for basically running your own crankers. Yes. So I'll be giving you a quick overview of how the agnostic asset agnostic order book works. And what we saw at Bonfida was the main structure, the main framework that was useful in the old serum version, and that we wanted to extract into a new module, into this new theorem core. So mainly I'll be going over what we saw is an order book.
05:27:25.906 - 05:28:30.934, Speaker B: For us, an order book is like a framework that matches, that allows for storing and matching of orders. And orders have to be represented only by a quantity and a price, essentially. It does not need to be a specific asset, it does not need to be a specific token or anything. It can be any kind of contract derivative, any kind of thing that you would want to exchange that is quantizable and that you can set a price on. So this is how you then can represent this abstract order book where you have, when you want to sell or buy the bids, or asks with a different price every time, and the different orders. Of course there will always be a spread, because if an order crosses the spread, it will be matched with another order from the other side and be then filled. So, to further explain how the asset agnostic order book actually works, we'll be going through the different inputs that are given to the program, in our program.
05:28:30.934 - 05:29:25.496, Speaker B: So there are the quantities, as I said, the limit price. The thing is that you cannot have only one quantity because you could be filled on each kind of assets actually on the base or on the quotes. So you need to set a certain limit on the quantity you want to be matched on both of these assets. Then there's the price, of course, the side, which is natural. And then we added there's also the parameter of match limit, which is important for developers that will be developing the caller programs, what we call the caller programs. It's like when you want to use the asset agnostic order book, you are developing a caller program that will be using it with cross program invocations. And the match limit lets you calibrate actually performance of the asset agnostic order book because it lets you set how deep you want to go into the search of the order book when you want to match different orders.
05:29:25.496 - 05:30:53.046, Speaker B: If you would, for example, set a gigantic order, you would be matching all of the order book. And this is why you have to limit it in a then there's the callback info, which is an important piece of the data structure that lets the asset agnostic order book communicate some information with the caller program that Ilyat will be getting into later. And then there are the post only and post allowed inputs which let you kind of shape the trade behavior of your order. With this you can implement a fill or kill immediate or cancel or limit kind of orders. And then the self trade behavior, which is a bit self explanatory also, which is how the order will trade if you match with your own order actually as a user in the order book. Going further, there's a first way of how the asset agnostic order book can actually communicate with the caller program, that is with the order summary structure. This order summary is information that the asset agnostic order book will write into the event queue, which is a structure I'll be getting into later, and that the caller program can then use read during the new order instruction, actually just after the CPI call to do some early business logic, to do some early locking of assets or transfer of assets and stuff like that.
05:30:53.046 - 05:31:58.230, Speaker B: That is there to be more efficient and have a better to be more efficient. Essentially, in this order summary, you have a unique order identification number and also what happened during this early matching. During the new order instruction, that is, the total base quantity, the total base quantity posted and enhanced the total quantity that was matched, which is a subtraction of both. And this whole thing is then stored in the event queue to be read by the caller program. And the event queue is something I want to get into also because it's quite important to understand why it exists and what role it plays in the asset diagnostic orderbook. The event queue also exists in the older serum version, and it's because it exists because of one fundamental limitation of the Solana runtime. The Solana runtime has a limitation that you cannot dynamically call, read, or modificate any accounts within an instruction.
05:31:58.230 - 05:33:06.130, Speaker B: You need to know beforehand what kind of accounts you will be passing through and using. That means that if you have an order book like before, and you want to match certain orders. You don't know exactly which order you're going to match, so you don't know which users you're going to match, and you can't put them into the instruction beforehand. This is where you need some kind of buffer, which is the event queue, which will take some of the results of the new order instruction, store them in a circular buffer where you can then process them later and have the caller program act on these events, but with the appropriate accounts, with the maker account. For example, if an order was matched, and yes, this is why this structure exists. In this structure there are two kinds of events that can be inserted. There's either fill, which is an event that corresponds to a match between two orders, an exchange of two assets with some relevant information about the orders, but also the callback info which Elliot will be explaining later.
05:33:06.130 - 05:34:04.750, Speaker B: And then there's also the event out type, which corresponds to a deletion of the order book from the order book. That could be like when an order is completely matched or when an order is cancelled, for example. Yes, in this kind of scenario, and I think yes, that's for you, the final kind of implementation detail that you want to talk about, well, not implementation detail, but usage detail. That's very important for developers is this idea of callback information. If you look at the whole system, essentially the entry to your interaction with the asset agnostic order book is the new order instruction. But the end of this flow only happens at the consume events end. So you have in some way to transmit some information through that cycle, even though the beginning and the end of the cycle can happen at very different times and in very different transactions and in basically different contexts all the way.
05:34:04.750 - 05:35:07.174, Speaker B: So this is why you have callback information in practice. It's more often than not something very simple. It's probably a public key of a user account or a public key that tells you what user you're talking about. And it's basically the kind of information that you want to transmit to yourself at the consume events side of the processing cycle, basically. So it's a very simple idea, but it's also very key in implementation because you define this once and then you have to roll with it because it's a fixed size vector and it's determined when you create the first instance of the asset agnostic order book. But of course there will be more documentation for this once the code is released and we'll have great documentation for this. But this is really what makes the asset agnostic order book, really asset agnostic, this really abstract way of transmitting information.
05:35:07.174 - 05:36:02.970, Speaker B: So the final thing that we're going to walk through really quickly is how you would actually implement serum Dex using those very simple primitives. So the first thing we have is the callback info. And so in the case of serum decks, the only thing you want is the user account, right? Because you want to identify the matching parties when you're performing a fill, for instance. But you also want to know the feed tier of each user, because depending on their feed here, your business logic will deduct a different amount of fees. So this is something that you actually have to transmit through the order book. If we look at new Order, it's also very simple. And one thing that you can do with the Dex and that you can't necessarily do with all different kinds of markets is you can add a bit of preemptive logic.
05:36:02.970 - 05:36:20.654, Speaker B: The idea is that even though the processing cycle isn't completely finished, even though you're not at the consumer events side of the processing, you can still know at new order the quantity of assets you've actually been matched with. So you can kind of predict.
05:36:22.714 - 05:36:23.002, Speaker A: You.
05:36:23.018 - 05:37:43.544, Speaker B: Can predict the taker volume basically for any order and perform all transfers immediately. So you have this shortcut mechanism which allows the asset diagnostic order book to be compatible with instantaneous operations on the taker side. And the final thing I'm going to really talk about is the fact that you can really build other stuff on the asset agnostic order book. And the first thing we did once we had the asset agnostic order book ready was to build a perpetual futures market based on the asset diagnostic order book. Even though right now it's not released, it should be released pretty soon, would be my guess. We built a perpetual futures market in a matter of weeks, whereas when confronted with the same problem a few months ago, it took us a lot more time and we actually had to implement a virtual automated market maker instead of having an order book, as we soon found out. And as was very clear, the order book is a superior solution because it allows for basically very flexible market making strategies, and it's impossible to front run an order book in the same way that you could front run an automated market maker.
05:37:43.544 - 05:38:58.462, Speaker B: So we're all very, very excited about this perspective of enabling people to really take the best technology around, to really take the best, best of what serum has to offer, which is really, it's very powerful matching engine, it's very powerful order book and enabling teams to build their visions with basically the best tech right, because we've stuck. This is a real need we've identified in the community because we've talked to financial people, basically to people, financially minded people who have all these amazing concepts for very exotic derivative products. But the barrier of entry is just so high right now, because if you want to build an order book right now, you need to really get into it and really have some experienced, well, Solana contract developers. But the promise of the asset agnostic order book is to really open up the gates. Right? Anyone can build pretty much any derivative products on the same technology and then we'll all share the kind of analysis tools and all. Well, all kinds of, you can imagine all kinds of sharing of technology. So I think, yeah.
05:38:58.462 - 05:39:54.684, Speaker B: So I'm gonna provide you with a few useful links here. Of course, feel free to reach out to us on the bond feed at Discord, on Telegram as well, or even on GitHub. Or you could also try and reach us on the Bonfida messaging app, which is an end to end encrypted app which basically works entirely on chain using Solana, of course. And we actually have an App Store app ready right now if you want to download it. You can reach us at, well, you can reach me at Eliot Sol and you can reach him at lcchy Sol there. We will be glad to answer any of your questions anywhere, not just on the Bonfide messaging service, but if you reach out to us on the bonfide messaging service, we'll also be glad to kind of nerd out with you on the fact that we're communicating entirely trustlessly and just really on the blockchain with each other. Well, we've been very glad to be here.
05:39:54.684 - 05:40:35.554, Speaker B: Thanks for your time and I hope you get to build amazing things with these things. Thank you very much. Alright, this one will be awesome. I don't know if anyone of you looked at the stake pool contract. John is the man. He's my best friend at Solana. He helped me from the beginning.
05:40:35.554 - 05:41:19.750, Speaker B: I look forward to it. All right, how's it going, everyone? Okay, before we get started, just out of curiosity, has anyone actually looked at that stake pool contract by any chance? Hey. Oh yeah. Thanks guys. So it's, I guess first I should introduce myself. So I'm John, as Bartosz. Very nicely said, we started working together on the token swap program, which eventually we worked with the CRM team a bit that being became serum swap.
05:41:19.750 - 05:41:41.254, Speaker B: And then that sort of got sunset. Yeah, serum swap fans. Hopefully that was for that. All right, so today we're going to be talking about the stake pools. So this has been a thing that Anatoly talked about yesterday. If you caught his talk in the beginning, sort of the next frontier for how he wants to see stake distributed throughout the network. And we're very excited about it.
05:41:41.254 - 05:42:09.626, Speaker B: The problem is, it's kind of complicated. There's a lot of documentation there that I wrote hoping it would be very, very useful to people, but then it got a lot of people confused. So finally I was like, let's make a quick start guide and let's just do this together. We're going to create our own stake pool here today. Then this way, if you ever want to check it out yourself, you'll know that actually you can do this. It's really just a couple of steps. So right now, you'll see I'm literally on our documentation.
05:42:09.626 - 05:42:31.924, Speaker B: I know that people, people have very strong opinions about our documentation, us included. Hopefully, this one is going to be all right. If it's not, you just send me a message. I usually fix it up within the day, like, especially if it's going to be this, since I said it. Now, my honor's on the line. So the things that you need for this, it's two things. You'll need the Solana tools and you'll need the stake tool.
05:42:31.924 - 05:42:48.810, Speaker B: Cli, there are already links to do that. When you go through it by yourself at home tonight, when you're at your place, you're like, you know what? I kind of want to start a stake pool. It's been such a good time. I'm really riding the high of Solana. Let's do it. You'll install all that there. So there's a bunch of sample scripts.
05:42:48.810 - 05:43:13.376, Speaker B: They're all on GitHub. It's all open source for you. We wanted to make this as easy as possible. And then, you know, obviously, if it's not easy, you come bug me, I'll answer your questions. So essentially what we're going to do, we're going to set up a test environment. We're going to create a stake pool. We're going to throw some validators onto it, we're going to deposit into it, we're going to do a rebalance, and I'm putting this in huge quotes.
05:43:13.376 - 05:43:39.608, Speaker B: It's going to make a lot more sense later, trust me. And then maybe we'll do some withdrawals if we feel like it and have the time. So the first thing is, I'm just going to set up a little test environment with a local validator. I don't know if you've ever done this before, we have to do something a little special, which is a little sketchy, but it's fine. It's your local network. It's not going to affect anybody. You're going to create a bunch of fake validators that you can delegate to.
05:43:39.608 - 05:44:04.116, Speaker B: So I will run this script. All right, thank you. Autocomplete. So this will go ahead and set up your validator. It'll give you the stake pool program directly in it, and then it's going to create a bunch of vote accounts. Great stuff is happening. So you see you've got a bunch of pub keys for validators that you can now add to your stake pool.
05:44:04.116 - 05:44:30.444, Speaker B: So if we look at that file, the validators file, you'll see ten keys. Great. None of these are real. These are really just for your fake testing environment. They're not real. Eventually, if you want to deploy to mainnet or testnet, you can create your own file just like this. You put all of the pub keys of the different validators that you want to add, and then eventually it'll add them for you.
05:44:30.444 - 05:44:56.744, Speaker B: So that's step zero. That was step zero. So next step one, we're finally going to create the stake pool. So there's a CLi to do this. It can be really tricky for people because it's just like a ton of flags. And I understand that, like a CLI command that has 40 flags is going to be really confusing to people. So there's another script that we're going to update, and I'll go through all these bits as we update it together.
05:44:56.744 - 05:45:28.176, Speaker B: All right, so I tried to make this clear, but like, shell scripts, it's like, shell scripts are some of the most, like, personal things. You think you've done it right and people are like, who would write it this way? It passed the lint. So this is like the closest that we can get. So I'm gonna go through the fees. People have been very confused about these fees before I even get to that. People think sometimes fees are like scammy or weird or like, no, I don't want to do that. I want to be pure about things.
05:45:28.176 - 05:45:57.344, Speaker B: Just keep in mind, if you have no fees on your stake pool, you will lose money. Oh, maybe I should really define what a stake pool is. Stake pool, essentially. Before we even get to that, what you're going to do is take on a whole bunch of different validators inside of a stake pool, and it's just going to be a bunch of stake accounts underneath. So if you've ever used phantom or soulflare or any of the command line wallets. You can delegate your soul to a validator. You can only do one.
05:45:57.344 - 05:46:28.584, Speaker B: And the stake pool is essentially just a bunch of stake accounts. And you have one stake account per validator that you, you want to include. That's pretty much it. And then it takes care of doing a lot of the inner manipulations for you. So now with the fees, there are really main three sources of fees inside of your stake pool. The first is going to be every epoch. So since your stakes will hopefully be gaining some rewards every epoch, you can get a portion of those rewards.
05:46:28.584 - 05:47:04.006, Speaker B: This part confuses people. There are two sources of fees that will come in. There's the normal validator commission. So if you've ever staked with a validator and you've seen like, oh, they're a 10% commission, they're 100% commission, 0% commission, they already get a portion of your rewards from your stake. So now on top of this, your stake pool will be taking a portion of the rewards perceived by the stakes in the pool. A portion of the rewards perceived by the stakes in the pool. Every part of that was important, I swear.
05:47:04.006 - 05:47:27.686, Speaker B: And this is, this makes a lot of sense, because if you're running a stake pool, you actually will have costs. You will be making transactions to rebalance your pool. Maybe you'll be adding, removing validators. Depending on what you see in the network, you actually have a cost to running a stake pool. So it's really just fair to charge something for your services. So we're going to set this to, let's say five basis points. So this is kind of cute.
05:47:27.686 - 05:48:01.274, Speaker B: You put in your numerator and your denominator. So five basis points is five over 10,000. The other ones are a lot clearer. As far as fees, they're deposit and withdrawal fees. So when people either deposit their soul or their stake and then eventually withdraw it, a portion of that will go towards you as the manager. This one is actually really important too, because especially the withdrawal fee is a very interesting one. If you have a stake pool that has just like zero fees for withdrawals, you can use it to arbitrage between different validators.
05:48:01.274 - 05:48:23.134, Speaker B: This is, a lot of people find this quite interesting. If you're into the economics of different attacks, this can be quite important. For example, if you know that a validator is going to misbehave and you have a big stake on it. If there are no fees, you can deposit it into the pool and then take it out on a different validator. If there's a slash, you don't suffer. So fees are pretty good. Let's.
05:48:23.134 - 05:48:37.654, Speaker B: I guess we'll do. Let's do five basis points again. I'll do it for both. Great. The next one is pretty nice. It's a referral fee. This is one I'm pretty excited about.
05:48:37.654 - 05:49:35.564, Speaker B: We took this, actually off of, of the serum model, the idea that if someone administers or helps with a deposit into your stake pool and you have a deposit fee, the referrer can get some percentage of that back to them. So sort of the big thing that we're thinking about is a defi app or a wallet. If they want to integrate with stake pools, perhaps a stake pool with a 50% referral fee will encourage the wallets to start using you will encourage the defi apps to start integrating you as well because they'll get back a little bit of stake pool tokens every time a deposit goes through them. So let's be nice. We're going to put this at 80 and then this other parameter, the max number of validators. I don't know if you guys have programmed on chain, maybe you know that compute budgets are very tricky and very low. So this is like the absolute maximum that we were able to fit.
05:49:35.564 - 05:50:02.644, Speaker B: I had to do some things that I'm not altogether proud of, but they were audited and they were fine. But, like, you had to do some gross things. So we can get 3950. It was 4000 for a bit, and then we added like one extra transfer somewhere, and then we blew past that limit. So it's 3950. The only reason this is important is because it creates a bigger additional upfront cost. So a pool like this is probably going to cost a bit over two sol to deploy.
05:50:02.644 - 05:50:21.656, Speaker B: So let's go ahead and run that. So you see, it just spits out a bunch of info. The important things you probably don't care about the full command to create the pool. The interesting things are going to be the mint. Whoops, the mint. That's going to be your pool token. And then actually, that's probably the most interesting one.
05:50:21.656 - 05:50:41.058, Speaker B: And then also the stake pool address you can provide. All of these parameters are totally customizable, so if you want to use something else, you can. Don't worry about that. And now we can see that this exists if we run the list command on the stake pool ClI. And so we'll see that there's nothing in it. Great. But then you see all of your fees are displayed there.
05:50:41.058 - 05:51:05.034, Speaker B: Your referral fees, all good and so nothing's been deposited. So the next thing that we're going to do, step two, step one is, is a tough one. Step two, we're going to add validators to the pool. So back in step zero, we set up those ten validator vote accounts. We're just going to go ahead and throw those into the pool using that command. There's a nice little script that does it. It takes your little file that you created earlier.
05:51:05.034 - 05:51:23.660, Speaker B: Great. So this is going to go ahead and throw them all in. Cool. It's nice when it's fast. By the time I'm done talking is when it's done. So let's take another look. And so we'll see that there's now those ten validators that are included inside of the stake pool.
05:51:23.660 - 05:51:41.972, Speaker B: There's still no stake. We haven't deposited anything in there. So the next step is we're actually going to deposit. Oh, another, just one last thing. The cost. So to create the pool costs us about two sol and then to add each validator, you'll have to put in a certain minimum. And that one is zero.
05:51:41.972 - 05:52:03.560, Speaker B: Zero for everyone that you add. And this is for the rent exemption. And then one tiny little amount so it says staked and or cruise rewards. So the next thing is we're going to deposit. There's two ways that you can deposits honestly. The simplest one for most people is just going to be depositing. Sol.
05:52:03.560 - 05:52:40.224, Speaker B: Most people don't really like to work with stake accounts, especially new users. So that's the one that I'll demo. Just be aware that it is possible to deposit stakes into a stake pool. So this means that it's another way of attracting users. People that already have big stake accounts but don't want to miss out on any of the rewards, they can deposit their full stake account into the pool and get back pool tokens, same as when you deposit soul. So I'll go ahead and deposit. Great.
05:52:40.224 - 05:52:58.884, Speaker B: So we'll deposit 100 fake soul. Great. So you'll see that that 100 was deposited. We'll take another look at our soul. So you'll see up here there's 100 soul available inside of the pool's reserve. Everything else is still at zero. And then if I look at my token balance, I'll see that I have 100 tokens.
05:52:58.884 - 05:53:45.080, Speaker B: Cool. So the next bit is rebalancing. So this part's a bit tricky. This is something we've really been wanting to make easier and people get a little bit confused about it. So the point is, over time, as the network evolves as certain validators maybe perform better, perform worse, or maybe you get along more with some over others, you'll want to rebalance the pool. So that means that you'll probably want to maybe decrease the stake on some of the validators in the pool, you'll want to increase on others. Right now, there's really only one good, well, good one program that really does it, and that's the Solana Foundation's stake o Matic, which is referenced in the documentation.
05:53:45.080 - 05:54:03.534, Speaker B: You can go ahead, you can give it a whirl. It works. The foundation runs it every night for their foundation delegation program. I really thought I was going to get around to it. I started on Python implementation. It's not totally done, but it'll make things easier for people. I know that there are a few people that do.
05:54:03.534 - 05:54:44.334, Speaker B: If you do any sort of data analysis, if you really want to take a lot of chain data, a lot of validator data, start crunching it in order to figure out what are the optimal amounts that you want to put on each one. You'll have a Python implementation that you can use. It's like 50% of the way there. I'm getting there, but I'll give you a very simple example. I just made a quick shell script that we can run, which won't really rebalance. It'll simply increase the amount of stake on each validator rebalance. So really all this is doing is it's going to be depositing a little bit into the pool, and then it's going to increase the amount of stake on each of those validators.
05:54:44.334 - 05:55:34.006, Speaker B: So we can go ahead and check this out. So you see now, each of the stake, sorry, each of the validators have a little bit of a balance on them because we increased the stake. And so this, if you're running a test validator, you can do something cool and have it really short epochs, which means that the rewards accrue a lot faster, which means you can sort of see these things evolve over time. But for this, I want it to be safe, and I just use a normal test fan validator. And then eventually, if you want to withdraw, that's also a possibility. Oh, it's not going to work, because I'm using long epbox, but that's pretty much it. We've now started a stake pool that has ten validators inside of it that we've deposited some soul into, that we've gotten some pool tokens out of.
05:55:34.006 - 05:56:01.364, Speaker B: So again, we can see we're still at those hundred pool tokens because me as the pool token holder. Nothing changed. It was the pool manager is the one who actually rebalanced everything. So we're really excited about this. It's sort of like the next frontier. We hope for staking and will really help spread out stake in a way that's a lot easier. And this way, if you're just an end user, you don't need to delegate to 100 different validators.
05:56:01.364 - 05:56:24.830, Speaker B: You can trust yourself. Well, if you trust the pool, you can trust your stake to the pool and know that they'll actually distribute it in an equitable way. And that's it. Thank you very much. All right, this was awesome. We have extra ten minutes, so if you have questions for John, you can answer them. Just raise your hand and I will walk around with the mic.
05:56:24.830 - 05:56:55.952, Speaker B: Anyone has questions? No, no questions. Oh, there. All right, go ahead. Yeah, sorry I made you hike a half mile there. So this was an excellent presentation. I really appreciate it. I have some fundamental questions about like how do you maintain the validators inside of your actual pool? So take for example, you have like maybe like more than ten validators.
05:56:55.952 - 05:57:53.812, Speaker B: You actually have more like 100, right? Or some larger set like this, let's say for God knows whatever reason, one of them is like, oh, I'm taking a vacation, I'm going to shut down my validator and goodbye. Then what happens when you want to kind of rotate out some of the lower performing ones and rotate in some new ones? Do you have to redeploy an entirely new contract or are there some good ways to do this, kind of like list maintenance? Yeah. So that's a huge part of it. So what we were doing actually with those sort of increases, that rebalance, it's exactly what we're trying to do there. So if you know that someone's going to go offline or something, you can, through the stake pool program, you decrease the amount of stake on them. It all works through stake accounts inside, which I won't bore you with the really fundamental nitty gritty of how it all works, but the idea is that it will deactivate a portion of that stake and then you have to, to wait two days for it to deactivate. And then the stake pool program takes care of it for you.
05:57:53.812 - 05:58:18.870, Speaker B: It will merge it back into the reserve and then you can go ahead and increase on other validators. So you always can rebalance as you wish. The one specific thing is you can only do really one thing per epoch per validator. So it's either you increase or you decrease or you do nothing. Is that good? Yeah. I wasn't able to touch on the fundamentals, mainly because this was. I wanted this to be quite technical so that we can actually get it up and running.
05:58:18.870 - 05:58:45.878, Speaker B: But if anyone does have fundamental questions, I'm happy to. Yeah, I have a question. Oh, sorry. Yeah, I'm wondering about the nitty gritty of it. Yeah, sure. And so I have a smart contract I want to write about that uses staking. It doesn't necessarily have to do with validators, but I'm wondering if I could either ask you questions about your code or check out your smart contract to kind of re appropriate it for my dapp.
05:58:45.878 - 05:59:00.262, Speaker B: Yeah, sure. So I guess I have to be really specific. So the staking that we're talking about here is the Solan and native staking. So that's just like, just sole stake to validators. If you're talking about, like, radium pools, things like that, it's a different form of staking. I can. We can definitely still talk about it.
05:59:00.262 - 05:59:17.858, Speaker B: I'm also into Defi and all that I'll find after then for that. All right. Yeah, sure. Yeah. For the staking contract, you can also check Solrise team. I think they released their version. And if you stop by the hacker house, I think there's few people that are working on the heroes staking contract that's specific to the SPL tokens.
05:59:17.858 - 06:00:13.612, Speaker B: Any other questions for John? Could be Defi doesn't need to be stake pools. No. All right. Thank you, John. All right. Okay, next we have Gabe from ceramic. He will tell you how to use arweave or ipfs to create mutable content for your dapps.
06:00:13.612 - 06:01:06.614, Speaker B: Things like nfts for games. Welcome. Hey, thanks for coming. So, for those of you that don't know, I work at a company called Three Box Labs, which makes a product called ceramic. And I'll be talking about how you can have mutable content for your centralized applications. So if we go back in time and think about the promises of blockchain, it was to solve exactly this, to not have these centralized data silos. Fellows of big tech companies, and to have a more egalitarian society of data on the Internet that probably resembled more of this than those big tech companies owning everything.
06:01:06.614 - 06:02:17.704, Speaker B: But the question I'd like to ask you all is, have we achieved this dream? And I think the answer is clearly no. I think we look more like a picture on the last slide, but replacing the tech company names with blockchain names and maybe some storage companies. So this is how most centralized applications look today you have essentially silos of user data. You have user's wallet, their smart contracts, maybe IPFs or arweave or SIA network, or any other decentralized storage backend and a user table. And this is a problem because data is often still siloed between applications, or even between blockchains on the same blockchain. So I'd like to propose a way to change this, to solve this problem by having data be more distributed and shared between applications. If we go way back in time, you can think about the innovation that blockchain had this agreement on, central state enhance peer to peer communications.
06:02:17.704 - 06:03:18.746, Speaker B: But the main problem is it's difficult for all data. And you may be saying, wait, we're at a conference on Solana and I can store a ton of data because it's so fast, which is true, but you might not want to store all your data on chain. And for most, blockchain just doesn't work, work quite well. So going a bit forward, we can look towards some of the data shapes that have existed in decentralized applications. On top left you'll see merkel trees, which were used in bitcoin and many other chains since then to represent hashes of data. On the right there, you'll see a graph that represents git data, this kind of graph of different commits and pieces of data that are linked together. But the key insight here is that all of these can be represented as a dag directed acyclic graph, and more specifically a merkle Dag and a codec that we use to do this is called iPlank data.
06:03:18.746 - 06:03:51.004, Speaker B: That's what IPLD stands for. It was pioneered by the protocol labs team responsible for ipfs. And this is how they encode their data. And their codec is really the key that makes this concept possible of sharing data across different chains and across different storage networks. And one of the insights here is that you'll see there are different color boxes for different data types. You associate a schema, a data shape for each of the data types. And as long as they encode to this graph, you're able to link them together.
06:03:51.004 - 06:04:52.048, Speaker B: So if we now look at sovereign data, we want two key properties. We want cryptographic verifiability, whether it's file on ipfs, a contract on Ethereum or Solana, and maybe a token. But we also want mutability. But in that mutability, we want a consistent way to reference the data and have it really scale, and also a transparent way to see who controls what data, who's able to read, write or execute any piece of data. And the end goal is to make the Internet verifiable by combining these properties. So today, there are two key classes of solutions that try to address this. Some are based on public keys controlling what happens where the protocol labs team has ipns, which is a way to associate a key pair with any set of data set of hashes that are on IPFS secures.
06:04:52.048 - 06:05:37.384, Speaker B: Scuttleblood and others do similar things. And then the second class are more like state machines that just store event logs. And this is a way to link data together in a decentralized way. But none of them really combine both of them, which is key to anchoring to the blockchain enter ceramic. So ceramics innovation is to have mutable data objects as a primitive, and that means having an audible commit log. You see each change revision to the data, much like git. And the event processing can represent the state, whether it's the sum or just the head, or any specific commit you can access.
06:05:37.384 - 06:07:00.954, Speaker B: We're built on top of a W three C standard that's up and coming called centralized identifiers. We've been actively involved in the W three C decentralized identity foundation and a few other standards bodies to help work on this technology. But what a decentralized identifier is, is a way to represent multiple keys and the changing of keys over time. So you might think of your identity today as your Solana address or your ethereum address, but that's pretty fragile because you're associating your identity with all your financial information. So you might often want to have multiple addresses associated, you might want to have key rotation, you might want to have more traditional security controls that are quite limiting by what's available by single addresses today. So dids are a way to link together multiple blockchain addresses and even change them over time, while having a persistent identifier and mutable pointers. This is a key so you can have what we call a stream of data, which is that essentially commit log, where you can see what's the latest data in your version, and you can see who authored the data at any point in time, in addition to seeing the state of the did document, decentralized identity document that corresponds with the stream and commit at any point in time.
06:07:00.954 - 06:07:47.694, Speaker B: And we have a top level concept called stream types, which you can think of as data types. Right now we have a few key ones, but you might imagine different streams to store, like key values, or lists, or markle dags, or any stream type of data that you are interested in. I won't go into too much detail here, but the guts of ceramic kind of look like this. You have a signature for some data. You write that data to any object storage you want, whether it's arweave or filecoin, or s three if you want. And you bring your own key from any blockchain, or it doesn't even need to be a blockchain. And at some point in time, we checkpoint that data to a blockchain.
06:07:47.694 - 06:08:36.232, Speaker B: This is our current architecture. We're kind of migrating away from this, so it's a bit more flexible. But the concept is, store your data where you want, use the authentication that you want, and have really high integrity as your data changes. So what can you do with ceramic? I don't think we're quite at the point where all the potential has been realized, but we're starting to see some really exciting applications. And the first is the vision of a unified user identity. If you're on the Internet today, you probably have a ton of accounts, whether it's Google, I hope not facebook, maybe Twitter, Discord, God knows how many others. But there's a problem here, because those identities are not your own.
06:08:36.232 - 06:09:42.284, Speaker B: They're owned by these third party companies. And you've probably seen a lot of instances of censorship where these companies shut off people's accounts or limit their controls, and that's not great. So the key that ceramic enables is something that's more of a global user. Table so the dids on the left represent different addresses that may be associated with the user, and you can list out all your keys and relations to different pieces of software with really fine grained access controls. So this inverts the locus of control from all these companies having your information and controlling your identity, to you being the source of truth for your own identity. And I do want to mention here that you might not want all this to be public on a blockchain or any storage, and you can encrypt anything. That's something we're working hard on, making it so that you can disclose what you want to who you want, when you want, and still have the integrity guaranteed by blockchain and decentralized file systems.
06:09:42.284 - 06:10:44.714, Speaker B: So wouldn't it be great if you only had one identifier that you controlled, and you just use this everywhere, independent of storage, blockchains, and centralized corporations? So this kind of leads us to an idea of a decentralized, anti fragile data ecosystem. To give an example, if I have an account on one service, and they have the idea of a name as like a string or some text. And another service has an idea of my name, but it's not a string or text. It's maybe like a more complex object that has all the metadata associated with it. You can't think of these identities as transactions. You can't bring one to the other because they have different data shapes. But ceramic insists on using data models, JSON schema, and some other types to make this really strong and say, here is the definition of our person, our name, so it can be ingested into other systems.
06:10:44.714 - 06:11:54.976, Speaker B: And tangibly, this looks like assigning exactly the data shape of each entry in a published manner. And this will be a key functionality of ceramic to have this global table of data models that are used and accepted and become authoritative for different areas of knowledge, whether it's employment history, or who a person is, or a user account or anything else. And once we have this kind of system, we can really harness the shared network effects of having a global user table. One example I like to think of is preference data relating to movies. You might be on Netflix and Hulu and HBO Max, and each of these services are competing to get your preference data and show you the best movies. And it's really annoying to have to either like things or dislike things, or watch a bunch until the suggestions are relevant. But really, it would be best if you were able to share your preference data across all these and you just have better content immediately.
06:11:54.976 - 06:12:46.004, Speaker B: But that's a problem that's not solvable today, because the data is not yours. And I think we're moving towards this world where instead of competing for retaining users in your user base, in your database, you can retain users by the, quote, quality of your service. So that's what this technology enables us to move towards. So the end goal of ceramic is to Unsilo and free humanity's data. And we have a ton of projects starting to build on us across different blockchains and storage systems. And Solana's up and coming, and we want you to build too. That leads me to some developer documentation for our network, which is launched in Mainnet as of earlier this year, and we're expanding out more nodes all the time.
06:12:46.004 - 06:13:07.204, Speaker B: We have a few hundred projects and ever growing. So please come build with us, both on our network and our identity protocol. And last thing is, we're hiring. So if you're looking for a job or interested, come talk to me or send me a message, and we'd love to work with you. And that's it.
06:13:11.904 - 06:13:26.608, Speaker A: Awesome. Thank you so much. All right, that's basically all we have today. But there are parties, as always. I'm going to head over to Astufa Fria. Astufa Fria is one of the conference venues. If you haven't been.
06:13:26.608 - 06:13:37.864, Speaker A: It's very beautiful. It's in a greenhouse. It's amazing. So from six to, I think six to 08:00 p.m. We're serving drinks over there. There's an NFT gallery in the gardens, so definitely check that out. It's for freezies.
06:13:37.864 - 06:14:10.714, Speaker A: The other parties, I just had them pulled up. Well, so if you go to the Breakpoint 2021 website, there's a concurrent events tab and you can see all the parties that are happening, at least the ones that Solana has stamped of approval on. There's an NFT gaming with Pluto and Argo at a rooftop bar at the hotel mundial. And then there's one more Solana cyber security audits. Oh, yeah, somebody was just asking me about this. I don't know where this is at, supposedly hacking, but that's from six to ten. That could be kind of cool.
06:14:10.714 - 06:14:26.154, Speaker A: And then popcorn. Network and impact are having an event as well. NFT gaming. Yep. So those are the events. This is all we've got here on this stage. Thank you so much for coming.
06:14:26.154 - 06:14:42.274, Speaker A: This has been a real vibe over the last two days. Totally packed house. Love to see it. And we have one more day tomorrow. We've got a big cybersecurity intensive tomorrow, so if cybersecurity is your thing, you should definitely be here for that. All right, that's it for all of us. Bye.
