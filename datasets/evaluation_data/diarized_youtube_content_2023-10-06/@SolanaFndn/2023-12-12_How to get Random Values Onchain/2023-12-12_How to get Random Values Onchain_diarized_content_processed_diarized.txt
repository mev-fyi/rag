00:00:00.200 - 00:00:36.134, Speaker A: Hello everybody. Today I gonna show you why it's really hard to get randomness right on chain. So in rust you can very easily get a random value using Xorshift, and you can then initialize this XOR shift with, for example, the current slot or the current block hash. Or you can just take a SHA 256 hash of something and use this as your random value. The problem with that is that some malicious actor could take another instruction, put it into your transaction, and then let the whole transaction fail if he doesn't like the outcome. This one you can solve by using Sysvar and checking for other instructions in your transaction. The problem with that is that there is jitto, which is another validator client, and it enables transaction bundling.
00:00:36.134 - 00:00:57.766, Speaker A: So someone could create a bundle and let the whole bundle fail if there's an outcome that he doesn't like. So the only safe way of getting random values on chain is actually using an oracle or anything that cpis into your program and puts the random value like that. This is very inconvenient, but sadly, it's the only way how you can get really safe random values on chain, especially when there's money involved. Bye.
