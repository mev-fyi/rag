00:00:03.520 - 00:00:33.310, Speaker A: Hello. Today we're gonna create a token on Solana and for that we're gonna use the new token program, the token extensions program and the metadata and the metadata pointer extension. If you want to instead use the metaplex standard you can find the documentation here. And yeah, the first thing you need to do is you need to install the Solana ClI tools. So for that you just follow this guide here. Basically you just need to run this command if you're on Mac. And there are some extra steps if you're on windows.
00:00:33.310 - 00:01:06.380, Speaker A: And that's all you need for this tutorial actually. So the first thing we're going to do is we gonna create ourselves a key pair. So I gonna create a new folder using McArdir and in the tutorial it says nice token. But today we're gonna create a super token. So we create a folder and then we gonna go into that folder super token and there's nothing in here yet. So the first thing we're going to do is we're going to grind as a key pair. What this means is now the ClI is searching for a key which starts with key.
00:01:06.380 - 00:01:29.974, Speaker A: This is just so that we can easily identify it. And then we will have this key pair and this folder and we have everything nice together. We're going to put the metadata in there. And here you can see that it takes a while. So it takes like 10 seconds for this one. If you have more letters there like four or five, then it already takes, takes quite a while longer. So now this created your key pair.
00:01:29.974 - 00:02:09.866, Speaker A: This is a JSON file and has your private key in it. So keep it safe because whoever controls this key will be able to control your token. Basically mint more tokens, update the metadata and eventually also freeze token accounts and so on. So the next thing we're going to do is we're going to set this key pair in our Solana Cli as a default key pair. So for that I just gonna type key here and press tab and then it will take the key pair that is in this folder. So now we can see this is the current Solana Cli config and we can see that it's now using our key pair here. And from now on it will just use this key pair for everything.
00:02:09.866 - 00:02:41.162, Speaker A: And you can always see the configuration using Solana config. Get we can already see we are currently on Devnet, but you can also like go to Mainnet. You can just say solana config set um for Mainnet and UD for Defnet. So now we are on Mainnet. And now we are back on definite. The next thing we're going to do now is we're going to grind us the key for our mint. So because we want our mint to have a nice address.
00:02:41.162 - 00:03:07.302, Speaker A: So in the explorer it will say like soup. And then the key afterwards. So what we're going to type here, now we want a key pair that starts with sup for our super token. Now it's grinding again. Finding us a token. And this will now actually be the token for the address for our token, for our token mint specifically. So next we need some solve so we can pay for the token.
00:03:07.302 - 00:03:36.034, Speaker A: So we just gonna type Solana airdrop two here and this will give us some sol. And since I did this earlier already, this doesn't work. So there's this nice guide here which shows you how you can get Defnet Sol. And I will now go to this web faucet here. And if you want to find out your address, you can just type Solana address. And then I gonna copy this one, I paste it here into this Solana faucet. I say I want one soil.
00:03:36.034 - 00:04:11.982, Speaker A: And yeah, now I'm getting this all in this key pair because we're going to do everything on Defnet. If you want to go to mainnet later, you just say like hey, config. Um. And then you run the commands again that you, that you see here in this guide. Okay, so now that we have some sol, it's time to create the token mint. And on Solana in the SBL token, there's a bunch of other token standards that you can find at the end here in the guide. But today we're going to create an SPL token and every token has a total amount of U 64, which is an unsigned integer with 64 bits.
00:04:11.982 - 00:04:58.810, Speaker A: So it's basically just this big number here, 18 and then I don't know what it is, trillion, trillion. And, but you can also set a decimal number somewhere like if you basically the numbers that you want after the comma, USDC for example, has c six decimals. And if you leave it on default, then it will create you a token with nine decimals. So this means after the comma you have another nine decimals, but every token amount is actually represented in the blockchain as a U 64 because it doesn't do any floating point operations. And now we can already create our token, actually. So I just going to copy this command here. And the only thing we need to do is we need to replace this key pair with the one that we created.
00:04:58.810 - 00:05:39.530, Speaker A: So in my case it starts with sup and here we can see it does Spl token create token. And then we put the program id of the new token extension program. And then we also say that we want to enable metadata. So now I run this and this is now already created the token. And this is also the place where you would be adding addition token extensions actually. So now if you go to this guide here you can see all the different token extensions. So you can for example now here add also a transfer fee or make it interest bearing or implement a transfer hook which lets you add new functionality to your token and so on.
00:05:39.530 - 00:06:11.946, Speaker A: This is not possible after the mint anymore. So you need to do this at this step actually if you want to do that. But now we want our token to look nice in the explorer, right? So we're going to add some metadata and the metadata is just a JSON file, an offline JSON file which we will save in decentralized storage. And there's a bunch of different ones. So for this example we're going to use web3 storage which is free up to 5gb but you need to sign up there. This one loads up the files to ipfs. Then there's a cord.
00:06:11.946 - 00:06:28.306, Speaker A: This one is uploading files to arviv. You can also just use a GitHub. So you just commit it into a repository. Just make sure that you are actually linking them to the raw content of it. Then there's also shadow drive. This is like a solana native solution. This one didn't work at the time of writing this.
00:06:28.306 - 00:07:00.476, Speaker A: You can also use metaplex metaboss if you choose the create command here. And you can also just upload it to google Cloud storage or Amazon or host it on your own server or whatever. But for this one we're going to do decentralized storage on ipfs using this web3 storage solution here because it's just like very easy and convenient. First we need to create this. So I just kind of type code dot here. This will open visual studio. And you can already see our two key pairs here.
00:07:00.476 - 00:07:37.804, Speaker A: This is the one for our token mint and this is the one like our wallet that has the soul that pays for this token. And I'm just going to create a new file here. I'm going to call it metadata j jason and then I'm going to copy in this preset here. And now you can tell me how we should call it. I would say let's call it super token and the symbol will be super and but we're still missing this image here. So first we need to upload an image actually. So for that we're just gonna ask jpt to create us an image.
00:07:37.804 - 00:08:25.438, Speaker A: So can you please generate me an image of a super coin in 512 times 512 with transparent background? So now this is generating, then we will just download this file, upload it here. And then we're gonna put the address of this image into this JSON file. Then we're going to save the JSON file. And then we upload the JSON file. And then we're going to add this JSON file link from the metadata to our token mint. And then we are already done. So oh we have this nice, this nice token here is super token.
00:08:25.438 - 00:09:01.211, Speaker A: It has like a little bit of a superman in it as well. So we're going to go to downloads and I gonna rename this to super token. And I'm going to rename the end here as the PNG because I'm not sure if the other format works. So then I go here into the web3 storage, I go to upload, I drag and drop this icon in here and I press upload. This is now uploading it to ipfs. And after a few seconds we will get the link. So now we have the link here.
00:09:01.211 - 00:09:36.842, Speaker A: We need to make sure that we are not pointing to this preview but we actually directly link to the image. So now I copy the link to this image and I'm going to put it into the JSON file. And now I gonna upload open this JSON file in the finder and I go back here and I also upload the JSON file. So for that I also just drag and drop it in here. I press upload. And then we have also the JSON file on chain. So here again I make sure that I'm actually getting the link directly to the file.
00:09:36.842 - 00:10:06.914, Speaker A: And so now we have the correct metadata and now we're going to add this metadata to our token. So I'm going to copy this command here which does Spl token initialize metadata. I paste it in here. Then I get the link from ipfs from our token. I'm going to paste this in here. There's probably some way how I can like delete this quicker. But let me paste this in here.
00:10:06.914 - 00:10:51.524, Speaker A: Then we gonna say the symbol should be super, the name should be super token, maybe lowercase. And now we also need to add here the mint address. So that is the address of this of our super token of the mint. So I gonna delete this and I gonna paste in the super token mint address here. And now we can see that we are creating SPL token initialized metadata for our mint with the name super Token, the symbol super and with our JSON file that we uploaded to IPFs. So that worked. So now we should be able to already look at our token.
00:10:51.524 - 00:11:27.948, Speaker A: So let's go to Solana FM and we make sure that we are on developer mode because we are currently on Defnet. Then I gonna paste in this address here and here. We can already see our token with an icon. So this is, this is really cool. Now it's already indefinite and you could now easily also deploy it to mainnet. The next thing we want to do is we gonna mint some of these tokens because yeah, otherwise the token wouldn't actually exist for that. What we need to do first though is we need to create an account.
00:11:27.948 - 00:12:01.460, Speaker A: So for that we just call Spl token createaccount. Then we put this address of our token again of our token mint. So I'm gonna copy this, I'm gonna put this in here. And now this is creating a token account because for every token that you want to save somewhere you actually have the token mint, where all the metadata is and how many tokens there are. It's all saved in the token mint account. And if you want to actually hold some tokens, you need to put them into a token account. And this tokens account are derived from the Mint.
00:12:01.460 - 00:12:42.736, Speaker A: So you have like a bunch of token accounts that are all basically derived from the Mint and the token program that you are using. And we are currently using the token extensions program. So now we have an account and now we're going to mint some of these tokens. So for that we just call SPl token Mint and we again put in the address of our token that starts with soup. Oops, okay, that was wrong. So we will spl token mint, then we copy our mint address again and we want to mint 100 of these tokens. So let's see if that worked.
00:12:42.736 - 00:13:13.942, Speaker A: So now we have 100 tokens and if we go here back to Solana FM, we should now be able to see that there's actually 100 of these tokens. So circulating supply is currently zero. And if we refresh this a few times, then it should be 100. So now this is 100. And now what we can also do is we can transfer it to another wallet. So let's say I want to transfer it to this phantom wallet, for example. So for that I just gonna type splash token transfer.
00:13:13.942 - 00:13:49.760, Speaker A: Then I need the address of my mintagan then I need to say how many I want to transfer so I want ten. Then I need my friend's address. So this will be this phantom wallet here. And then what I also need to say minus minus fund recipient. That means that I am now paying for the token account of the other person so that he can actually also hold tokens because otherwise he wouldn't need to pay himself. But since he is currently not there, I'm going to do that. So fund recipient.
00:13:49.760 - 00:14:30.992, Speaker A: So now we have ten tokens we send to our phantom wallet and you can see already have a good and a nice token here already. But if I reload this a few times now we also have our super token here and it will hopefully also load this icon. After a while the token also showed up in Phantom so you can see it here and we can also see the token in Soulscan for example. And here you can see the additional metadata and the extension that we added. So we have a metadata pointer which is actually pointing back to the mint. And then we have the token metadata which has our name, the symbol, the update authority which is our key here. So keep that one safe.
00:14:30.992 - 00:15:10.442, Speaker A: And then we have the Uri to our metadata which then has the Uri to the image. So now here at the bottom of the guide you can also find some further links to some articles. So there's some rules on token launches, how to navigate token launch lists and you can see all the other token extensions here. So yeah, I would recommend you try, try it out, experiment a little bit with these different extensions. Maybe try out interest bearing token or transfer fee token or especially the transfer hooks are very interesting I think. And yeah, now you can use your token for whatever you want. You can use it in the game, you can use it in deepen, you can use it in decentralized finance.
00:15:10.442 - 00:15:14.426, Speaker A: So yeah, try it out, build a token and see you guys next time. Bye.
