00:00:03.720 - 00:00:10.718, Speaker A: Hello everyone. Gmgm. Welcome to the changelog. I'm Nick from the Solana foundation devrel team and today is Jacob. How you doing, Jacob?
00:00:10.846 - 00:00:12.086, Speaker B: I'm doing well. How are you doing?
00:00:12.190 - 00:00:28.118, Speaker A: I'm doing well. Let's, let's get to this changelog. I'm super excited for the metaplex c hack. Hackathon. It's about a month long hackathon. It's coming to a close now. There's a bunch of tracks that are all focused around compressed nfts and I'm actually personally one of the judges for the dev tooling track.
00:00:28.118 - 00:00:37.782, Speaker A: So shout out to the hackathon if you are building something or if you're submitting a project, I look forward to seeing all the ones that you, uh, that everyone's built. And don't forget to share it on Twitter too.
00:00:37.958 - 00:00:45.582, Speaker B: Yeah, definitely share on Twitter. That's how you get people to know about your project and potentially even help you win because more people know about it.
00:00:45.718 - 00:01:08.818, Speaker A: And then I guess we can just roll into the simd for the week. So this week is simd one one eight. It's a partitioned epoch rewards. It's actually an update, a revision to one of the older SIMD's of SIMD 15. And the Anza team has made some updates to the design and basically reproposed it with the new design and how they're thinking about implementing this.
00:01:08.986 - 00:01:35.054, Speaker B: Yeah, so if you're interested to learn more about SIMD 118 and what the changes were, just check it out, you can read it today. This will go through like the different changes on partitioned epoch rewards. Moving on to the commits, there's been a few commits this past week. One of the ones is there's an update version to 119. So you might say, hey, 119, we don't even have. 118 is actually getting ready to bump us to 2.0 eventually.
00:01:35.054 - 00:02:23.088, Speaker B: So there is a ongoing effort to bump everything to a 2.0. What this will do is it'll remove a bunch of the deprecated code and methods that were in the 1.0 versions of the different SDKs. So we will have a full list of the information that is deprecated and the functions that are deprecated in 2.0 and we'll put that out probably in the next changelog. Uh, but yeah, definitely look out for 2.0. Uh, there's also some other changes that this, this comes with is that they're probably going to separate the CI for different parts of the Monorepo so that things can be built on different release schedules, uh, and have a more accelerated release schedule for smaller SDKs instead of having everything tied to the validator.
00:02:23.256 - 00:02:26.120, Speaker C: Yeah, it'd be super great once we get there. I'm super excited.
00:02:26.272 - 00:02:47.634, Speaker A: And I guess speaking of the validator, one of the other commits from this week was an improvement to the get token largest accounts method. Specifically this method was basically gets the biggest accounts for any mint. So if you think like if you want to get all token holders of USDC or whatever token you can think of, this actually gives a pretty significant speed improvement to that.
00:02:47.974 - 00:03:33.274, Speaker B: Yeah, this was actually originally done by KV as well. So what they did is they took this BR and made it into multiple separate prs and pushed it in. So we should have more optimizations into the RPC. Moving on. There's also been some updates to the anchor downstream project CI for the Solana, the Solana repo. What this kind of does is, and it's really great that they do this, is that every time they make a change, definitely every time they make a change for the Monorepo, it'll do a check on the downstream projects of anker to make sure that they're still compatible. So this is to prevent breaking changes, breaking anchor and programmer development in the future so that we can have a smoother developer experience.
00:03:33.734 - 00:03:43.814, Speaker A: And I'll say it's actually more than just anchor. Come to find out, when I was looking at this pr and some of the related ones, I also found out that Openbook is actually one of the downstream projects that also get checked with this.
00:03:43.854 - 00:03:45.270, Speaker C: So there's a little fun fact.
00:03:45.422 - 00:03:46.542, Speaker B: And metaplex.
00:03:46.718 - 00:03:52.614, Speaker A: Yeah, there's like five or six different very widely used protocols and projects in the ecosystem.
00:03:52.654 - 00:03:53.862, Speaker C: So awesome to see.
00:03:53.998 - 00:04:29.264, Speaker B: And then moving on to the next commit, we have the program set upgrade authority sign only. So this kind of allows you, and this is what my guess is the purpose of this is that if you want to just sign the transaction with setupgrade authority on your CLI, you can do this for offline transactions. So that you sign it and then you send your transaction hash to some other online device and then send your transaction. Previously you probably had to do this in a much more manual way. So this is a nice improvement to the general CLI.
00:04:29.564 - 00:04:48.644, Speaker A: And then everyone's favorite thing is zero copy. There's actually this improvement that this refactoring that actually makes it so some of the accounts copying that was happening now just gives references. So it's effectively like a zero copy sort of thing. So it's just another speed improvement and overall improvement. For all accounts actually on this one.
00:04:48.804 - 00:05:27.188, Speaker B: Yeah, that's really cool to have. Reminder, if you have any speed or optimization improvements that you can think of on the validator, the RPC, feel free to check them out. You can create an issue just to kind of test the waters of whether or not it's an interesting change. And then happy to see more contributors on the Solana protocol. Moving on to BPF loader upgradeable. So this is just exporting a specific helper get program data address. This is to help out with the future of if you've seen the recent SIMD's being approved of, I think it was like 72 and a few others.
00:05:27.188 - 00:05:55.154, Speaker B: This is in the future when they move everything from their kind of like the core programs or native programs to your actual just basic BPF programs. This is a first step of the process. So looking forward to that change is probably going to be later this year is my guess, when they move everything to just core BPF programs. But looking forward to it, it'll make things a lot simpler to upgrade, change and call.
00:05:55.654 - 00:06:39.008, Speaker A: And speaking of making things more simpler, which I guess is, yeah, correct grammar, sort of the unified wallet kit, this was this cool project that I recently found from Jupiter. So the Jupiter team basically made a more flexible and more customizable wallet adapter. They're using the same wallet adapter, things under the hood like wallet adapter standard and the base packages that were created by Solana Labs and the Anza team. And they're giving a better developer experience built on top of it, including full localization support, which is really amazing. And you get more flexibility on how you're actually displaying the wallets that your application supports and being able to handle some additional things in there.
00:06:39.056 - 00:06:40.384, Speaker C: So super cool to see.
00:06:40.544 - 00:06:43.584, Speaker B: I didn't even realize they had localization support. That's really cool.
00:06:43.664 - 00:06:44.896, Speaker C: Yeah, I know, it's really cool.
00:06:45.040 - 00:06:54.120, Speaker B: I know that's a feature that a lot of people wanted on the original wallet adapter. So it's good to see people building on top of the wallet as standard and making things even better.
00:06:54.312 - 00:06:55.160, Speaker C: Oh yeah.
00:06:55.312 - 00:07:43.156, Speaker B: So finally, we kind of wanted to talk about stack exchange. So the past week we've had our leaderboard here and seems like White Seal is the winner of the past week. Same with Sol, Andy and I believe is what believe in. These are people that have gotten the most reputation the past week, so shout out to them if you're interested in helping out with stack exchange. Just answer questions, ask good questions and upvote and downvote answers and questions based off of whether or not they're good for you. And then the last thing on stack exchange is that there's actually a moderator election going on. So if you can see here, the moderator election has two nominees, and this will basically allow more moderators to come on to stack exchange and help us out make things a little bit simpler.
00:07:43.156 - 00:08:00.356, Speaker B: So definitely, if you are able to vote for your moderator on the stack exchange election, and we will, this should be done sometime the week of this video goes live. That's it for what we have on the changelog this week. Thank you all for joining, and we'll see you next week. Bye.
