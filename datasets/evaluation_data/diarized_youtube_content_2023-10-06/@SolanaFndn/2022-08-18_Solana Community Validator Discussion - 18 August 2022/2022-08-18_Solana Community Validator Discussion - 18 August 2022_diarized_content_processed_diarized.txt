00:00:00.360 - 00:00:28.962, Speaker A: All right, welcome everyone to the validator community call. We've got a full agenda today, so if you've noticed, I've added a little bit extra time to the meeting. We've now got 45 minutes. That'll probably be the standard going forward, just because we've noticed meetings have gone over. So just an overview of the agenda. We've got Leo here from Jump crypto. He's going to talk about fire dancer, which is the alternative client that jump crypto is building.
00:00:28.962 - 00:00:56.214, Speaker A: Super excited about that. So that should be a great talk. A few announcements I'm going to do. I will talk about the feature proposal that we're going to be doing on Testnet for the minimum stake delegation. So we'll get to that. Barrett from Cypher Crypto is going to talk a little bit about validator futures and get input from you all. And then Sunny from JPool has a new product called Staking Kiwi that he wants to talk about and demo.
00:00:56.214 - 00:01:01.224, Speaker A: So a lot to get to. Let's jump right in and have Leo talk about fire dancer.
00:01:04.564 - 00:02:01.762, Speaker B: Yeah. Hey, so I guess most are aware of fire dancer, right? So there was this big announcement. Jam Crypto essentially announced that we put our top tier R and D team that used to build most of the low level trading infrastructure that is making chum competitive in HFT markets. And basically, yeah, we have many of these folks basically now building an alternative Solana consensus node implementation in C. Yeah, that's the gist of it. I'm sure there will be many questions that I'll be happy to answer. Kevin Bowers, or head of R and D and chief scientist and a number of other titles who is basically leading the project.
00:02:01.762 - 00:02:18.334, Speaker B: And much of the low level design that is directly derived from the kind of highly parallel optimized networking architecture that jump trading uses internally adapted to blockchain.
00:02:19.644 - 00:02:27.784, Speaker A: Before we get into questions, maybe you could talk a little bit, Leo, about what the point of an alternate client is, like, why it's a good thing for the network.
00:02:29.444 - 00:02:53.464, Speaker B: Yeah. So essentially. So there are two big advantages from this. The biggest one is decentralization run. So the big goal here is to have a super minority of network running an alternative line. And that brings like massive, massive, massive improvements in safety margin and just general. Yeah, general robustness.
00:02:53.464 - 00:04:17.264, Speaker B: Because the second implementation is essentially just the clean room thing built from scratch. Obviously, looking at the existing implementation by rewriting all of it in a different language, different ecosystem, different cultures surrounding it even. And all that means that it's much less likely that any security issue is going to affect both clients simultaneously or not. Any, like any laps in judgment or decision making from either of the two teams ends up having outsized impact on the network. So let's assume there, like the CEO Rust library for low level cryptography, ends up having a security issue that can be exploited and is exploited, then one of the two implementations is essentially going to disagree, right on the state. There won't be consensus and the network halts rather than basically proceed with an invalid state transition. Yeah, so that is the biggest goal here, decentralization, not in terms of number of validators, but decentralization in terms of leadership, in terms of actual implementation efforts.
00:04:17.264 - 00:05:32.914, Speaker B: The secondary goal obviously is performance jump. And Kevin Bowers in particular, basically spent the past few decades making things as fast as possible, using whatever means possible, being extremely close to the limits of hardware, because that's what you need to do when you're doing a high frequency trading. I like to call it mechanical sympathy. It's a term for basically being extremely aware of the limits of your platform and then writing code that basically like a well oiled machine, makes efficient use of it. Yeah. Obviously both implementations will have to improve for overall network performance to increase, but it's going to be a natural process if one implementation charges ahead and basically shows the way, takes new design approaches, just experiments with what's possible, new data structures, benchmark target to improve the other implementation again. So the big secondary goal here is obviously to increase network performance.
00:05:32.914 - 00:06:05.614, Speaker B: Some benefits are going to be immediate line just improving replay performance, or just becoming better at participating in the existing network. And other improvements are going to take longer because you need the whole network to catch up. But even if a small percentage of the network is on the long tail improves performance, that is going to have an outsized impact just on the outlier blocks and so on. So, yeah.
00:06:08.634 - 00:06:14.854, Speaker A: Great. There's a lot of questions in the chat. First one from Brian. Is there a timeline on the new client?
00:06:17.274 - 00:06:56.194, Speaker B: Yeah. So if you ask engineers for timelines, they'll tell you it's done when it's done, because there are just so many unknowns that there obviously are timelines. I think the official announcement said we are hoping to make significant progress in the next twelve to 24 months. That's all I can say because. Right, this is large project, but yeah, just take a look at how long it took for Solana Labs to build the original client and expect something that is like a similar order of magnitude. Yeah. Too early to make any specific promises.
00:06:56.194 - 00:07:51.284, Speaker B: There are some. So the way this is going to be approached is we are starting with the existing Solana and then modularizing and basically start replacing components one by one. So having both processes run alongside each other, first starting with, say, TPU, then building new TPU implementation and wire that into the existing client and so on, until there's basically nothing left of the. And there's only fire dancer, and then it's fully independent. So it's not like there's going to be work done for two years and suddenly there's new validator client, but it's like an incremental improvements kind of process that that's probably going to lead to a lot of changes upstream on the Savannah lab side as well. So.
00:07:54.084 - 00:08:08.980, Speaker A: There'S a question from Zentetsu essentially asking, will there be some sort of protocol or way of making new changes, a consortium that decides on how to change both clients? Dan had an answer there. I don't know if Dan wants to comment or.
00:08:09.172 - 00:09:46.244, Speaker C: Yeah, basically, like the. This fire dancer coming in, coming into the world. And also even with, you guys know, Geeto is coming online as well with their own fork of the Solana Labs code. And so we're really already in a place where, yeah, there's absolutely a need for this sort of, like, kind of social consensus, you know, validators, like the human validators, you all understanding and accepting potential new changes to the protocol. So, yeah, we're actually going to be kind of rolling some stuff out, making some proposals to the community here. It's really something I'm hoping personally to focus on over the next several months, establishing something like improvement proposals and how we're going to, as a community, as well as all of the different core development teams, one just sort of debate and come to social consensus on what a proposed change to the protocol might look like. And then something that looks much similar to how we do consensus gated feature activations rather than single key feature activations for the enablement of new features to, say, kick on at a particular epoch or slot boundary, rather than any one team or even just two teams having unilateral or bilateral control over the entire community.
00:09:48.464 - 00:10:18.568, Speaker B: Yeah. So that's one, I think, that is just going to come naturally from the whole process. Right. So it's obviously going to slow down development in a good way because it's no longer just merging pr and then telling us about it, but it's going to be much more similar to, like, an Ethereum RFP process, where you actually have to go through rounds of consensus across all stakeholders. Sorry. I think that you're having some echo there.
00:10:18.736 - 00:10:19.684, Speaker C: Oh, sorry.
00:10:20.864 - 00:10:52.686, Speaker B: Yeah, so that's the idea. So there about back room discussions. Yeah, so there won't be any background discussions. Obviously, all of the engineering discussion is already public today on Discord, and that won't change. So there's going to be a separate discord for fire dancer. All the protocol level discussions, pretty much everything is going to be out in the open, just like Solana Labs is doing something else.
00:10:52.710 - 00:11:50.476, Speaker C: I would just comment is like, with the exception of Ethereum, there's no other proof of stake protocol that has ever gone through this. Every other proof of stake network has one single implementation and generally one team that is guiding and shepherding its development. That's been the case to date, with Solana Labs submitting majority of the code. And obviously we're starting to see more and more community contributions, which are awesome. But I think to the Ethereum community's credit, they've actually done a really good job of establishing the eips, Ethereum improvement proposals, getting a lot of input and a lot of debate from different parties before sort of consolidating. Okay, by social consensus, this is what we've agreed to. And then each of the core development teams on the various ethereum clients goes and implements it.
00:11:50.476 - 00:12:06.764, Speaker C: And then you can do all. Obviously, there's a period of interoperability testing on Testnet before any of this stuff would be rolled out to mainnet and flipped on. So I think they've done actually a really good job modeling what something like that could look like for the Solana community as well.
00:12:08.704 - 00:13:01.484, Speaker B: Yeah, so to address the question about RPC. So there's actually no plan to faithfully reimplement the existing JSON RPC API. The goal is to, if there's going to be any RPC functionality, it's going to look like the gaseous plugin where there's like a low level interface for accessing state rather than putting the actual server and database inside the client, because, yeah, we've all seen how that turned out. So, yeah, so the big focus here is really like consensus nodes and validators actively participating in consensus, because that's where like the big Bayview ad comes in, in securing the network. So any idea on hardware requirements?
00:13:01.604 - 00:13:04.772, Speaker A: Sorry, I was going to just ask the hardware requirements question.
00:13:04.828 - 00:13:51.464, Speaker B: So go ahead. Yeah, any idea on hardware requirements? So this Lana lab snow is not known to be particularly resource efficient. So the big goal is obviously to be a lot closer to bare metal performance. There's a lot of overhead right now that is basically not like intrinsic complexity. That is irreducible, but really just copying data too many times, not having the most efficient locking algorithm and so on. So there's many tiny little inefficiencies. And the big goal is to obviously lower hardware requirements for the same level of performance.
00:13:51.464 - 00:15:00.678, Speaker B: How to make any promises there? There are some things that are irreducible, like signature verification. Nobody's going to make significant improvements in verifying signatures because that would actually be kind of scary because that usually means you broke the crypto. So you still have somewhere between 30 to 60 microseconds on each transaction verifying each signature. But just like things like replay, overthinking the general network protocols, there are many possible improvements here, both to the overall spec, affecting both implementations, and also fire dancer implementations that should lead to lower hardware requirements. So the eventual goal is to be able to process millions of transactions. That's the big hub. So doing millions of transactions on the single ten gigabit link, it sounds ambitious, but when you look at a single ten gigabit link can essentially do millions of packets, it's really just software not keeping up.
00:15:00.678 - 00:15:18.994, Speaker B: So we are actually pretty far removed from the, the actual real upper bounds, the glass ceiling of where you're actually hitting memory bandwidth, IPC caches, and many other limits. So.
00:15:23.814 - 00:15:32.634, Speaker A: So one last question. Looks like Overclock's wondering if there'll be custom hardware, if there's plans to do custom hardware for this client.
00:15:33.694 - 00:16:14.120, Speaker B: So there are dreams about custom hardware. Obviously one of the like, signature verification, one of the big bottlenecks obviously is verifying signatures. There are many. There's a lot of brainstorming around. ASICs jump obviously has a ton of experience dealing with FPGA and ASIC hardware, and that is definitely something that's on the roadmap to investigate. So, like building proof of concept, even determining whether it makes sense or not. There are obvious decentralization concerns with custom hardware because you gotta get someone to manufacture it.
00:16:14.120 - 00:16:59.664, Speaker B: Ideally, you get multiple people to manufacture it. IP cores, you don't have a large abundance of network stacks that fit inside an ASIC or FPGA, just like everyone's using the Linux kernel right now. It's an open discussion, but it's definitely something that's being actively investigated. Personally, I think it's very likely that we'll be seeing custom hardware eventually, not just one platform, but many, because that is natural progression of things. HFT trading is always ahead of everyone else when it comes to this. So when you assume the same trajectory for blockchain, yes, we will end up with custom hardware eventually.
00:17:01.754 - 00:17:36.530, Speaker C: One thing I would just clarify on that is, whatever the future of custom hardware may or may not be, there's no expectation that custom hardware or anything that is massively overpowered compared to today's Solana validator, hardware that wouldn't be a requirement to run the initial implementations of firedancer. It should still be pretty close to parity with what's required to run a validator today. Even that should give us some improvement as well as a lot of the software code based diversity security as well.
00:17:36.722 - 00:18:19.756, Speaker B: Yeah, so what most people forget about custom hardware is that is really highly specific to workloads. Right. You build custom hardware if you want to do one specific thing really well. They call it general purpose x 86 computers because they're actually like somewhat okay at a lot of things. So it would be a nice problem to have if we actually ended up hitting the very limits of compute hardware, because that means we squeezed out the last bit of performance we could. So that would be a nice problem to have. And that's.
00:18:19.756 - 00:18:44.674, Speaker B: Yeah, I would say it's many years in the future. Kevin's team. I can't speak for Kevin's team, obviously here. Commodity service and hardware. Yeah, we are very, very far away from actually making full 100% use of them. We like using, I would say, five to 10% at best.
00:18:46.734 - 00:18:51.114, Speaker A: Question about GPU. Is there any plan to incorporate GPU's more into the new client?
00:18:53.414 - 00:19:31.564, Speaker B: Yes, pretty much. Same answer here. So the big thing with GPU's, it's a similar thing than FPGA is actually, by the time you copy data to the GPU, most of the time, it's actually cheaper to just do the work you were going to do on it anyway. Because modern cpu actually kind of, sort of, kind of good at it. It's like when we're discussing QH performance, and everyone's like, but you can speed up QH using an ASIC. And then you realize that, well, all the modern CPU's basically have instructions that do hashes really fast. And that approaches async performance.
00:19:31.564 - 00:20:10.188, Speaker B: Yeah, that's the thing here. You need to actually be really, really good at GPU. Part where it's actually worth copying the data over and taking the context, because you still need to receive it on your network interface. Then you need to shove it over to the GPU processor there, then get the result back. So that is also something that just needs benchmarking. And like, Solana Labs already has nice GPU implementation, but it's seldom used. Just because all the recent cpu's they're just really good at stuff and it doesn't really provide much of a benefit.
00:20:10.188 - 00:20:57.206, Speaker B: So there are some exciting prospects here, like modern network interfaces that can basically copy packets directly to the GPU to process them there. So you skip that context switch where you have to copy data or at least share memory, the GPU. So yeah, that's among the thing that is going to be. That is going to be benchmarked for sure. But same answer here. We are still a long way away from actually leading GPU's to increase network performance by what are probably large multiples. We're doing 3000 transactions or so, maybe.
00:20:57.206 - 00:20:57.710, Speaker B: Yeah.
00:20:57.782 - 00:20:58.182, Speaker A: Recent.
00:20:58.278 - 00:21:14.274, Speaker B: Yeah. We're seeing actually four to 5000 block transactions recently. Yeah. At modern network interfaces. Yeah. Can process millions of packets per second. There is a lot of, there's a lot of range there.
00:21:14.274 - 00:21:24.844, Speaker B: GPU's might end up becoming interesting just for things like signature verified, because that is likely one of the next bottlenecks.
00:21:28.264 - 00:21:32.644, Speaker A: All right, I think that's all the questions. Any other final thoughts for fire dancer?
00:21:36.504 - 00:22:18.016, Speaker B: Also, just to respond to Sanchetsu here. Yes. Actually improving network throughput is one of the primary goals. There are two components here. One is just improving the software stack, obviously. The other is actually improving the protocol. The whole effort is not just in rebuilding the existing implementation one by one, including anything that Kevin's team might disagree with, but it actually means also rethinking any design decision, proposing a better protocol to distribute blocks, to do consensus and so on.
00:22:18.016 - 00:22:49.204, Speaker B: That all goes back to the standardization question. So many of the improvements will eventually trickle down to every client. Really, just understanding where the limits are is actually going to be a pretty big boon right now. I don't think anyone can tell you with perfect confidence how network performance scales by number of nodes, because, yeah, that requires just level of benchmarks that has not yet been done.
00:22:53.824 - 00:22:57.124, Speaker A: All right, thank you, Leo. Sorry, go ahead.
00:22:59.504 - 00:23:01.232, Speaker B: I'm good. Okay.
00:23:01.328 - 00:23:05.324, Speaker A: I want to say thank you, Leo, and super excited to see what jump builds.
00:23:05.774 - 00:23:07.194, Speaker B: Quick plug on that.
00:23:08.494 - 00:23:28.554, Speaker C: We're doing a Twitter spaces tomorrow. Myself, Anatoly, Leo, and Kevin Bowers from Jump, who's leading the engineering side, as well as Kanav, who's president of Jump Crypto. So I think at this, I think it's 24 hours from now. I'll find the link. Just FYI, it's happening tomorrow.
00:23:30.174 - 00:23:30.790, Speaker B: Cool.
00:23:30.902 - 00:23:53.394, Speaker A: All right, shout it out when it's in there. Okay, so some announcements I want to get through before we get to the rest of the presentations. 1.10.35 is now recommended for Mainnet. So make sure to upgrade. I want to say thank you to Brian Long and the Triton team for getting us ready for QWik and the QWik checking tool that he's been using. So yeah, awesome, Brian, thank you.
00:23:53.394 - 00:24:37.484, Speaker A: Make sure to check in with his list to make sure you're up to date on QWik. And you, can you have the server and the client running or, excuse me, the server running on Mainnet. One more announcement. If you're in the delegation program and you are subject to the new metrics requirements, there are 17 people that were wrongly penalized for not having metrics. Those 17, unfortunately there's nothing we can do. It should be correct in the next epoch. We apologize, but just to give you the scope of the bug, it was only 17 clients that were affected, so it shouldn't be too many of you.
00:24:37.484 - 00:25:14.714, Speaker A: I have the list if you're curious if it was you, check in with me. But yeah, just be aware of that. Next thing I want to mention is the proposal for the minimum sole delegation. So the feature proposal. Sorry, one sec, I've got a barking dog in the background. Let me close this door. Okay, sorry about that.
00:25:14.714 - 00:25:49.240, Speaker A: So there's going to be a feature proposal on testnets. We are going to do it on testnet first as practice. So starting this Monday, we will initiate the feature proposal on chain. The feature proposal will essentially send you all a SPL token in proportion to how much stake that you have. So if you have 10% of the stake on Testnet, you will get 10% of SPL tokens. In order to vote to activate the feature, you will transfer those SPL tokens to a specified address. So we're going to test this out on Testnet first.
00:25:49.240 - 00:26:30.498, Speaker A: If you agree with raising the stake delegation minimum to one soul, then transfer those tokens to that address. I will also send a message about this in announcements. Just be on the lookout for that. Starting Monday and lasting for two weeks, we'll have that feature proposal. Okay, yeah, that's all my announcements. Any questions about those? I see Brian mentioning there's 15 validators that still need to implement quick, so be on the lookout for that in discord. Okay, great.
00:26:30.498 - 00:26:34.174, Speaker A: Is Barrett on the call? I wasn't able to see you in the list.
00:26:36.154 - 00:26:48.382, Speaker D: Okay, we are here with the Cypher team. Barrett is not here, but we are ready to talk about Cipher whenever appropriate in the call.
00:26:48.518 - 00:26:59.474, Speaker A: Okay, yeah, great. I was looking for his name, couldn't find it. All right, so this is the Cypher team. They are going to talk about futures with validator rewards and get feedback from you all. So take it away.
00:27:00.294 - 00:27:04.462, Speaker D: Awesome. So my name is Patrick, this is Alex. Hi.
00:27:04.558 - 00:27:18.174, Speaker E: I'm the co founder of Cypher Protocol. Barrett is my other co founder and Patrick is our technical research and many other, many other hats core contributor.
00:27:18.674 - 00:27:46.554, Speaker D: Yeah. So thank you so much for having us on today. I do have a, like a slide deck. If it's appropriate I can throw it up and if not I can just go give you guys a quick rundown. Oh, sweet. Then I will share, share the screen here. Okay, sweet.
00:27:46.554 - 00:27:49.274, Speaker D: Are you able to see that?
00:27:50.494 - 00:27:51.814, Speaker A: Yep, we can see it.
00:27:51.974 - 00:28:32.890, Speaker D: Fantastic. So yeah, we have been like recently exploring actually. First I'll give you the rundown and Cypher. So we are a derivatives engine built in Solana. Initially we're launching like dated futures on single token pairs or yeah, single tokens like Sol ETH, BTC. We've got some pair futures and really we're derivatives engine designed to launch contracts on any underlying. And after like consulting with people at Everstake and a few other validator groups, we've identified that there could be a need actually for validators to hedge their rewards.
00:28:32.890 - 00:29:55.156, Speaker D: And really what that means is like the rewards you get from the inflation rate as well as managing stake movement as well. And we're quite well equipped to actually offer these services because of our scalable engine. Really with a price feed we can launch dated futures on any underlying. And so essentially the current environment, the way that we see it and would love all of your insight on it, is that essentially you have your capital expenditures and your operational expenses that you're all very familiar with running a validator. And part of the issue, especially with the volatility of soul, is being able to cover those expenses and like forecast your like revenue. And part of the, the problem that we would like to help solve is essentially offer these, these vaults in which you can sell your rewards in the future. It's like similar to the way that in traditionals like agriculture, mining and airlines, right? They'll have like these trading desks that will go and sell futures on oil or sell futures on different commodities markets.
00:29:55.156 - 00:30:57.232, Speaker D: To be able to manage the volatility in the supply chain in terms of supply and demand, I think to really continue to help scale miners, I'm sorry, validators across the Solana network, I think it could be beneficial to have a tool where validators can easily sell essentially their rewards on whether it's every epoch, every quarter, every month, right. That allow them to lock in the USD like value of those. And then the long side of the contract would receive those rewards periodically throughout the duration of the contract. And so, yeah, we have like a small mock up here. The point of this is really to say, hey, we know that you guys don't want to, like, handle, sorry, I am receiving a call anyway. Right. So for validators, you wouldn't want to actually spend too much time trying to manage your positions.
00:30:57.232 - 00:32:04.184, Speaker D: And so we essentially would construct these vaults that allow you to deposit some collateral for a position and then go and sell your rewards and without having to actively, like, manage this position at all. And so you would receive your USD payment upfront if you wanted to go short and sell the rewards. Say that you were concerned about stake moving out of your validator or network activity decreasing, resulting in lower transaction fees and even sole volatility as well. It would abstract the whole trading experience away from the validator. Just focus on minimizing the variance in your operational cost costs and, like, properly forecasting your revenue. And, yeah, just to reiterate, we've got some, I mean, dated futures are like the go to standard generally for doing these kinds of like, hedging operations in traditional markets. And so we would love to get your feedback on like, certain timeframes for these, whether you're interested in them and understand, like, where you guys are coming at.
00:32:06.664 - 00:32:14.804, Speaker A: So I think there's a question from Zen Tetsu about the withdrawal authority and if he has to give that over to you, what's the. How would that work out?
00:32:15.864 - 00:33:13.334, Speaker D: Yeah, so essentially there's a few ways we were considering, like, going about creating these, these vaults, one of which would be like, rearranging. Right. The, like, rewards address to the wrong side of the contract. So rewards are periodically, like, paid out to the person who's long and you receive the upfront payment or the dollar value of those rewards initially as the cost of the contract. And so, yeah, another protocol called Acemia, which is being built on avalanche right now, is, I think, exploring a similar solution or like a similar product. And the way that theirs works is essentially like taking the address that the rewards would go to on the validator and like actually substituting the one that's actually long the contract, if that, like, help answers the question.
00:33:16.194 - 00:33:31.904, Speaker A: Yeah, I think the fear there might be that you also give control over to the validator. Right. So you can change the identity key there. You can change, you basically have control of that validator. So I think that's his biggest concern. But Zan, feel free to jump in.
00:33:34.204 - 00:33:35.184, Speaker D: Certainly.
00:33:38.724 - 00:34:36.134, Speaker E: That is, that's really good feedback and we appreciate it. And those are all things that we can solve from an engineering perspective. So just a little background on engineering specifically with cypher is I'm not sure if you all are familiar with hoc. If you've seen Hoke and toke on Twitter, they're brothers from Portugal, incredible engineers. Hoke is full time at Cypher. He's the one who architected this proof of concept vaults for the Solana Summer hackathon. Actually, we built it in 36 hours from scratch on top of cypher to demonstrate how composable and easy launching new markets on top of cypher is.
00:34:36.134 - 00:35:32.794, Speaker E: So we do have the engineering resources and experience to custom build this specifically for you all. That's the only way we release products, is not something that we think is cool to trade, but based specifically on market demand. So we are looking for direct feedback on how to custom build this specifically for you guys. And again, for those of you that aren't traders, where it could be intimidating. Back to Patrick's example. A very simple one would be trading corn futures. Say, if you are a farmer, and what that looks like is a farmer is going to be looking at the price of the underlying commodity, which is corn.
00:35:32.794 - 00:36:24.428, Speaker E: And they know generally how much all of their fields yield at the end of a given harvest season, but say they see a price that someone is offering, $4 a bushel for corn, and it's in February, the farmer doesn't have any grain left. The farmer can decide to lock in that four dollar price for x amount of his supply, hoping that when he gets to harvest and he has the actual product, that the price of corn is either $4 or lower. So the conceptual point is to forward sell your supply or inventory to increase your profitability and operational expense.
00:36:24.476 - 00:36:36.984, Speaker D: Planning. And to answer the question. Yeah, I know, I glanced around the question with the withdrawal authority, I will have to. Barrett should be on the call.
00:36:37.764 - 00:36:38.972, Speaker B: He just texted me.
00:36:39.108 - 00:36:59.024, Speaker D: I will have to talk with the engineers on that because I do not have the exact architecture of these contracts. But this is a very good concern, and thank you for highlighting that, because we will certainly need to keep that in mind as we continue to design these. That's the product.
00:36:59.564 - 00:37:02.324, Speaker A: Yeah. Zen Tetsu. Do you want to respond there? It looks like you got your hand up.
00:37:02.364 - 00:37:35.480, Speaker F: Yeah, I'll try to keep this brief. I mean, I understand. I think most of us understand what futures are for and how they work. The real question here, though, is in the real world with corn futures, the farmer is under a contract that can be sort of legally enforced by a court. But here on blockchain, you're only going to enforce it by smart contracts. And I think those of us who understand how, you know, vote accounts are paid out and managed would require us to give over vote authority, vote. Vote withdrawal authority, so that you could guarantee that, you know, the future that we bought gets paid via that vote account.
00:37:35.480 - 00:37:59.734, Speaker F: Otherwise we're just another customer, like any customer that could buy a future. It just so happens that, you know, that we buy it based upon what we think our validator is going to make. And so I just want to understand if you expected validators to just sort of be normal users of this, who you maybe give some special UI treatment to to make their lives easier or if you actually expect to use, use a smart contract to set up real verifiable payments to your system.
00:38:00.634 - 00:38:48.924, Speaker D: Certainly, I think currently it would be the latter of those. We would design a contract actually to handle the transaction between the long and the short side of the contract to make sure that we have that specific architecture to handle that. So yes, hopefully that is like, we would love to consult with you as well as we continue to like design the architecture of this. We just wanted to understand initially if we can, I mean, the demand for this kind of product and like understanding how it can. Yeah, obviously affect forecasting of like your revenue.
00:38:50.024 - 00:38:50.992, Speaker B: Essentially.
00:38:51.168 - 00:39:07.924, Speaker A: I want to be make sure we have time for sunny to talk. Is there a way that people can get in touch with you? Obviously MV validators in the Discord channel is a good way to solicit feedback, but if you want direct communication with Cypher, is Cypher trade the best way or somewhere else?
00:39:08.264 - 00:39:30.864, Speaker D: I will send our emails in the chat, but obviously I will also, I'll link our twitters as well. But yeah, Cypher trade, yeah, we don't have any communication links on that website so I will attach the emails of the team. So that's probably the most frictionless way to get in touch with us and.
00:39:31.444 - 00:39:34.820, Speaker E: We can set up telegram or signal groups.
00:39:35.012 - 00:40:04.278, Speaker D: Yeah, I really appreciate all your guys time and thank you for the insight because we certainly still have some work to do on the architecture of these. But just want to understand the need for this and want to make sure that we're focusing on abstracting some of the managing these positions and so you guys can focus on what you do and just be able to minimize the variance in your operational costs. Really. It's the goal. All right.
00:40:04.286 - 00:40:21.834, Speaker A: Yeah, I see the emails there. So Patrick, at is that offpiece IO and Barrett offpiece IO thank you, guys. Now Sunny is going to talk about staking Kiwi, his widget and new products. So sunny, go ahead.
00:40:22.294 - 00:40:22.998, Speaker G: Yep.
00:40:23.126 - 00:40:23.794, Speaker B: Hi.
00:40:24.094 - 00:40:30.682, Speaker G: Thank you for having us. I think Patrick needs to turn off his screen sharing so that I can.
00:40:30.798 - 00:40:32.414, Speaker D: Yep, thank you.
00:40:34.354 - 00:41:13.574, Speaker G: No problem. And I hope my Mac survives so long because it's like really hot right now. Give me a second. Yeah, here it is, taking Kiwi introducing. It's been actually up for some time and yeah, we never got around to like presenting. So the idea is, well, yet another validated dashboard. But we tried like to build it with the features in mind that we were missing and the other solutions like this one.
00:41:13.574 - 00:41:32.094, Speaker G: So what we really love about our dashboard is like how fluid and fast it is. And you would definitely see it if my Mac wasn't over here right now. Honestly, just try it out. Yeah. It is not like this. It's never like this. Promise.
00:41:32.094 - 00:42:40.076, Speaker G: So right now there is the APY sorting. We plan to add a couple of other options like our own scoring that is also interesting for our validators in the jPool. It's the scoring our system uses to choose and distributes. We are going to add scores from stakewees, from validators app, and maybe some other metrics. One of the important things I wanted to mention is like we are very open to any kinds of feedback and we would be grateful if you guys took the time to come by our discord or Telegram group, whatever, and, and tell us what you would like to see here. The idea is like this is what you see is for the delegators why we think it is also an interesting solution for the validators as well. Like let me click, for example, Ben's validator here, cogent crypto.
00:42:40.076 - 00:43:14.544, Speaker G: This is like a mini page for a validator if you're small. If you don't have a web page with staking with web3 interface on it, you don't need to call it, you just can use this one or another option. You use our widget on your own webpage. Very easy. Your what key is here already. So all you need to do is like copy these two snippets of code, insert it into your own HTML code, and there you have it. You can choose like a dark.
00:43:14.544 - 00:44:06.334, Speaker G: There you have your own like staking interface on your web page, some info here and of course the ability to stake right away to the validator. One more thing we wanted to like discuss on Discord and telegram, whatever is like the last conversation we had with zantets on Discord. If you guys think it is a good idea to hide the super minority by default or should we show them? Should we have this off by default and maybe have a small one triangle? If you stake to this one, you should understand the centralization risks, etcetera.
00:44:08.854 - 00:44:09.278, Speaker B: Yeah.
00:44:09.326 - 00:44:49.044, Speaker G: And one last not least thing is an interesting feature that we plan to implement at some point in the near future I hope is an on chain messenger. So we want here to have an ability for the delegators to message their validator securely and for the validators to broadcast messages to their validators, to their delegators. I'm sorry, their stakers. That's pretty much all I wanted to share. We don't have much time as I see. If you have any questions we'll be glad to answer those.
00:44:49.384 - 00:44:52.804, Speaker A: So Zentetsu is wondering if you support merging and splitting.
00:44:53.104 - 00:44:53.964, Speaker G: I think.
00:44:54.344 - 00:44:55.256, Speaker C: I think it's on.
00:44:55.360 - 00:45:32.324, Speaker A: Can you hear me? Maybe the audio. Can anyone else hear me? Yeah. Okay, Igor, I'm not sure if your audio is on. Can you hear me, Igor? Darn. Well, it sounds like he's having some audio issues. Maybe we can take this to discord and see if he has an answer. But I am curious if merging is splitting is supported there.
00:45:32.324 - 00:46:35.154, Speaker A: Let me try messaging. Well, I think we're at time and maybe we have some technical difficulties here so let's wrap it up. But Igor, we can give you more time next call if you want to answer questions and just do like a mini Q and A at that point. So thank you everybody for joining. Thank you Leo from jump crypto. And thank you the crypto team or, sorry, I think somebody's. Yeah, there we go.
00:46:35.154 - 00:46:47.114, Speaker A: And thank you for the cypher trading team for talking about validated futures. Like always, this will be online. Thank you everybody and see you in two weeks.
00:46:47.214 - 00:46:47.826, Speaker B: Bye.
00:46:47.970 - 00:46:48.514, Speaker D: Thanks, Tim.
00:46:48.554 - 00:46:49.570, Speaker B: Thanks everybody. Bye.
