00:00:03.680 - 00:00:10.513, Speaker A: Hello everyone. Gm gm. Welcome to the slot of Changelog. I'm Nick from the Slana Foundation Devrel team and today I've got Jonas with me. How you doing, Jonas?
00:00:10.689 - 00:00:14.881, Speaker B: Gm gm. I'm doing great. Very excited for this one. Strangelog.
00:00:15.073 - 00:00:41.709, Speaker A: Yeah, there's some really good stuff in here. Let's go ahead and start with the SIMD for this week we've got SIMD187 stricter elf headers. It's actually labeled 187 but I think it should be 189. You can see my, my note there on the PR. So we'll probably get the title updated. But either way this is a kind of an interesting sim deep. Basically Alexander from Anza is proposing that we sort of just restrict the ELF headers.
00:00:41.709 - 00:01:03.195, Speaker A: And one of the interesting side effects that happens here sort of intentionally is that it can make programs a little bit more efficient, from my understanding. But it also adds some additional security benefits because if you just sort of ignore some of the other header information, the runtime doesn't need to process it. So it's just a little bit more. Reduces the attack surface, which is nice.
00:01:03.695 - 00:01:37.155, Speaker B: Yeah, maybe very, very quickly what an ELF file even is. So there's the L file is what? Like when you compile your program you get an ELF file and then you can put additional stuff in this ELF file. Like for example, the security Txt is written directly in this elf file and then on certain headers you put places in the elf file you can read data. And there were also some ideas of putting idls into the ELF files actually from some other people. And this is now of course probably not possible anymore if this one goes through this. Nice point for discussion for everyone, I think.
00:01:37.575 - 00:01:57.735, Speaker A: Yeah, should be interesting to see what people think about this one and we can move on to agave version 2.1. It's currently in pre release status, so pretty soon officially version 2.1 is going to be released and officially snapped and tagged so people can start investigating what's new in 2.1.
00:01:58.555 - 00:02:25.715, Speaker B: Yeah, very excited. The new version is coming 2.1, so that's really cool. On another note, there is a breaking change in it already between 2.0 and 2.1. It's about the Dalek grade. So if you're running into problems with this, if you like, yeah, get dependency problems there, what you can do is you can either pin version 2.0
00:02:25.715 - 00:03:03.503, Speaker B: or you go with all versions to 2.1 because that's already fixed again. And since this is kind of annoying of Course, but this is actually was done to fix a very, very old dependency problem, which was the zero rise crate dependency. And you can see this is already around since 2022 and supposedly I think this will be fixing this discussion. You can see it's a very long discussion. There were many workarounds around it, so now they finally put it in the version. But this might be a breaking change if you are upgrading from 2.0
00:03:03.503 - 00:03:09.143, Speaker B: to 2.1. So maybe if you are just doing 2.1 then you will not have any problems.
00:03:09.239 - 00:03:23.525, Speaker A: Yeah. You got to basically make sure that you're using every single crate that you use needs to be either 2.0 and below or 2.1 and above. So you can't mix and match the two minor versions. That's basically the solution for it.
00:03:23.825 - 00:03:28.565, Speaker B: Yeah. And then the next thing. What is this one about?
00:03:28.865 - 00:03:51.567, Speaker A: Oh, this is another fix for qwik. Alessandro has gone through. We've talked about a couple of changelogs now. Alessandro has been working on a bunch of QWIK improvements, both at the Quinn crate, which is the rust implementation for qwik, and sort of just making another improvement to Solana's QWIK stack, which is awesome. Yeah.
00:03:51.591 - 00:04:22.157, Speaker B: And it's really nice. Like Alessandro is like very optimistic and he says like we are going with our client to 1 million TPS and he's like, he has 5 bucks that he wants to fix, so let's see how this turns out. But definitely good stuff. And also being pulled back to Quinn so that other people can also use it. I think it's really nice. This is a very short one. Just the Borsch helpers are now extracted from Solana program and moving into their own crate, Solana Borsch.
00:04:22.157 - 00:04:35.025, Speaker B: So I think you might need different imports for that. But in general it's nice because the less you need Solana program, the more often you can leave it out and save space. That's how I understand it. Right.
00:04:35.405 - 00:05:01.655, Speaker A: Yeah. I think there's an interesting side effect and John sort of mentions it here. It makes it now possible to rewrite certain programs without ever depending on the Solana program crate. So you could in theory, I suspect you should be able to switch to something like Pinocchio, which is a zero dependency version of Solana program. I think it's a little bit more efficient as well, a little bit more optimized. So this is just one step further to that. So I don't know, maybe.
00:05:01.655 - 00:05:03.715, Speaker A: And is going to rewrite some of these programs.
00:05:04.015 - 00:05:22.763, Speaker B: Yeah. Pinocchio is actually really Nice. It has a different entry point which doesn't allocate, I think doesn't allocate any memory in the entry point itself and saves a lot of cu. So if you have any problems there, you can try the new entry point. Yeah. And I think Solandy also made a video about it, so you can.
00:05:22.819 - 00:05:23.795, Speaker A: This was a good one.
00:05:23.915 - 00:05:32.171, Speaker B: Yeah, yeah. I love his videos. And this is. This is a good one. And the next thing. Oh, this is an important one.
00:05:32.363 - 00:06:04.303, Speaker A: Very important. So the new version of Web3js, it's basically officially here. It's been a release candidate for release candidate status for a while now and version 2.0 is going to become official very, very soon. So if you're not Already looking at Web3js version 2.0 and seeing how to do the migration from version 1 to version 2, got to start looking at it now. Figure out the differences in how to implement the various changes required within any of your applications.
00:06:04.479 - 00:06:32.035, Speaker B: Yeah, and this is maybe coming soon already. Maybe it will come a bit later. So if you're a content creator and you want to create some content around it, I think now it's a good time doing this because it is quite different. There are some things that are like working a bit differently, so people might get confused and it would be good if you have more examples on it and just more people using it and giving feedback as well. Since it has been a release candidate for a long time, but there might still be bugs in it. Yeah.
00:06:32.075 - 00:06:48.555, Speaker A: And related to it. Actually Anza has put together a sort of reference wallet adapter using Web3js. It's also in the Web3js repo under the examples directory. So you can see there's a full REACT app example how to use the new wallet adapter with the new Web3js.
00:06:49.455 - 00:07:06.639, Speaker B: Yeah, so definitely everyone try it out. Now is the best time to start because eventually it will come. And it's also. It's way faster. It's super small. Like you only basically import the stuff that you actually need, which is really nice. And there's a new anchor version coming soon.
00:07:06.639 - 00:07:11.087, Speaker B: TM 0.31. Do we know when this is coming?
00:07:11.151 - 00:07:31.795, Speaker A: Actually I don't, but there's a whole bunch of changes that are already being filled into the release notes for version 0.31 already. Everything that's listed here in the current release notes for it. It's a draft pr, I think it's an open status, but it details a bunch of the really cool, amazing changes that are coming in 0.31.
00:07:32.375 - 00:08:02.747, Speaker B: Yeah, there's cool stuff in it. There's an IDL builder, there is upgrade to Solana version 2.0 as well. Then we have no IDL tag for flag. Lots of convenience features that you can now build with a certain feature as well. We have some new language features and lazy account. Then we have unnamed init account structs and some new token 22 functions as well that some people were actually missing before.
00:08:02.747 - 00:08:10.555, Speaker B: So there's lots of cool stuff in it. Yeah, give it a try. It will come soon. You can already build it from a branch if you want.
00:08:11.175 - 00:08:15.995, Speaker A: Yeah, sure. All right, to wrap up the changelog, Stack Exchange.
00:08:16.335 - 00:08:45.165, Speaker B: Yeah we have Jimmy on top again here with 113 points. Then we have John C, Mike, Shelda, Joey, Jacob is here, Hannah. And there are a bunch of unanswered questions last week, but now a bunch of people came in. But now is a good time. Like there's lots of people coming in. Many people have like questions. So it's a good time to like, let's help our new devs that are coming in and yeah, have everybody collect some points.
00:08:45.785 - 00:09:03.975, Speaker A: One of the other things you can do on Stack Exchange is if you're personally struggling with some random bit of like Solana development, you can post a question and answer your own question at the same time. So as you learn new things or struggle through something, you can post the question and the answer to help other people in the future if they come up to that same issue.
00:09:04.635 - 00:09:08.395, Speaker B: Yeah, that's a good idea. Also makes it easier for everyone to find. Good idea.
00:09:08.475 - 00:09:13.259, Speaker A: Exactly. All right, that's going to wrap it up for this week on the changelog and we'll catch you next time.
00:09:13.427 - 00:09:14.275, Speaker B: See you next time. Bye.
