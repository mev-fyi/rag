00:00:08.480 - 00:00:59.078, Speaker A: So, hello everyone, I'm Nikhil, I work at Lightear. And before we get started, I was wondering if you all can tell me with a show of hands, how many of you have heard of stellar before? That's great. And how many of you all have built projects on stellar? I just see one hand, two hands. Okay, great. So hopefully by the end of tonight, you all will all be more familiar with Stellar and be more inclined to build projects with stellar. So today I'm going to be talking about what are some of the challenges in building blockchain infrastructure? How do we solve some of those challenges using stellar? And why would you even use stellar in the first place? So before getting into that, let me tell you a bit about Lightyear and what we do. As Shinju was mentioning, Lightyear is a company that develops software, apps and infrastructure for the stellar ecosystem.
00:00:59.078 - 00:01:59.990, Speaker A: Specifically, we contribute to Stellar's open source infrastructure and make sure that we are playing our part in scaling the network. We also help companies integrate onto the stellar network, help them working with the APIs, and figure out exactly what their needs are so they can make the best use of the network. And lastly, we are coming out with our first product, product, which is a front end for the stellar decentralized exchange called Stellarx. This allows people to trade on the decentralized exchange using the front end that is made by lightyear. Now, for those of you the few people that are not familiar with stellar, and to make a more formal definition of what it is, stellar is a decentralized, permissionless, multi currency, public blockchain network built to exchange value using tokens. Now, I highlight the multi currency part of this, because currencies are a first year citizen on the network. The concept of an asset, which is what is the same thing as a currency, is central to the whole network and the ecosystem.
00:01:59.990 - 00:02:59.174, Speaker A: So going into the challenges of building blockchain infrastructure, so one of the biggest challenges is decentralized operations. So for anyone that comes from a traditional software company, a lot of the DevOps that you work on is probably all the servers that you control, and you're not concerned with what anyone else is doing aside from how they use those servers. Now, when you're working on a decentralized network, you have to think about how the whole network itself gets upgraded, rather than just your own node. So these are some of the considerations that you need to make while performing upgrades. And one of the lessons learned for us is to keep communicating with the community on when the changes are coming out, exactly what those changes are going to do and what the best way and the timeline is to upgrade to these new versions. The second one is scaling the network. So a big part of this is figuring out with the community, again, what are the needs of their scale.
00:02:59.174 - 00:03:57.264, Speaker A: And what we try and do with this is to anticipate what these needs are going to be in the future. So, for example, the stellar consensus protocol is designed to be low on computational cost, with the intent that as this network gets used more heavily, it would be easier to scale as well. As we are in the process of implementing lightning networks, lightning channels specifically. So this is going to take a lot of the heavy usage off chain, and as the usage of the network grows over the next few years, lightning would be ready to support this. The third one, which is something that I work on for a big part of my job, is scaling the data side of the network. So what I mean by that is, how do you get a lot of the data in and out of the network? There's people that are sending payments all around the world, all stored in the same network, stored in your very node. So we need to make sure that this is fast and efficient as well as inexpensive for partners to run.
00:03:57.264 - 00:04:52.088, Speaker A: So what we do with this is we have a web server called Horizon, which serves as an API gateway to the network. So you can take in a lot of the data that comes in through the network. And Horizon will store that in different SQL data structures that you can easily query through a JSON API. So to show you a visualization of that, this is a diagram of how the architecture of an application might look on the stellar network. So I've highlighted in the center, the red part is the horizon node. So it sits in the middle between the stellar core node, which is kind of like, if you're looking at Ethereum, it's kind of like geth and all the applications that you might be using. So what Horizon does specifically is it takes in a lot of the historical data from stellar core and saves that in its own database, while stellar core is then free to delete all this data.
00:04:52.088 - 00:05:39.904, Speaker A: And if you ever want to sync the network back to some historical state, you can always communicate with other horizon instances which might be the same entities that host those stellar core instances that you trust. But essentially, stellar core is written to be optimized for decentralized communication, whereas horizon is optimized for the data transfer as well as storage on the network. So now let's go into why you would use Stella. So some of the reasons are a single dollar can fund 450,000 transactions on the network. So it's relatively low cost for anyone to use. And this is great for micro payments which is something that people have a big use case for. The second one is that it's relatively fast so it closes in less.
00:05:39.904 - 00:06:14.742, Speaker A: Each ledger closes in less than 5 seconds. So this makes it usable in a common daily scenario. The third one is that you can create as many tokens as you want in the network. And this is one of the things that I like the most about the network because you can have tokens for anything. It can be a stablecoin, it can be ICO tokens, it can be tokens that represent carbon credits or coffee tokens, anything that you can imagine. Now the next one is the decentralized exchange which we call the Dex. So this allows you to trade any of these tokens that you've created.
00:06:14.742 - 00:06:56.714, Speaker A: Um, in, in a way by which it's completely secure as well as fast. Now um, this brings me to the last point which is path payments. So this allows anyone to trade tokens with anyone else in an atomic fashion. So you might want to pay in one currency and someone else might want to receive in a different currency. And you can make that happen without having the payer trust the token that the receiver wants to trust. So an example of this might be let's say that there's an employee who works at Google and they want to keep all their life savings in Google stock. Now when they want to go and buy coffee way into the future, they can actually pay with their Google stock.
00:06:56.714 - 00:07:38.604, Speaker A: And using the Dex, a small part of their Google stock is going to get converted into enough coffee tokens to pay for the coffee provider. And the coffee provider might offer a discount to pay with those tokens. And that's all possible because the payer, who's the Google employee, can pay with the Google stock, but not necessarily holding any of the intermediate tokens that might exist. So concluding my talk, here are some of the resources that you can use to get started with Stella. I would recommend taking a look at the GitHub and also the stellar API docs. If you want you can take a photo of this to get you started and hopefully a lot more of you can develop on stellar. Thank you.
