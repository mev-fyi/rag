00:00:01.400 - 00:00:26.034, Speaker A: I heard advice yesterday that I just visualized that there is no audience. This is actually perfect so I don't even have to bother myself doing it. It's kind of organic. I understand that some people are still on the coffee route, some are missing the trains, but I'm happy that you need such number. Give me a moment until I realize. Okay, sweet. So a few weeks ago when I was creating the talk, I was trying to figure out what I can talk about.
00:00:26.034 - 00:01:00.634, Speaker A: Something that has a beginning and has an end. How do I start it? Why don't I actually pick something that I'm going to code name as a cake? And it's something that brought D reader to light in the last one year. It's something that I consider a lie and something that I consider a misconception. It's coming from Solana Mobile, Solana foundation. But let's build a story first before I go with that. Why I have the screen below first. I'm Yas Volorvich.
00:01:00.634 - 00:01:39.572, Speaker A: I'm a professional developer for more than five years. At this point I'm mostly freelance and agency work. I'm located in Croatia and I'm not actually a mobile developer. So maybe this topic is not quite for me, but let's see where it goes. I'm building dreader with a team of 7D reader is a platform for discovering, reading, collecting and trading digital comics. The project has been around, the idea has been around for 15 months and the project has been starting to work full time almost two months ago, maybe a bit more. And everything that you're going to see in the following slide comes from our experience over the last year.
00:01:39.572 - 00:02:33.154, Speaker A: Year plus I'm going to answer for answer a few questions. What, why, how and when when it comes to mobile and the best one to actually start with is why? Why do we actually will even consider mobile? It's. The answer is kind of obvious and it's a tiny bit disappointing. It's because mobile addiction is much better than the pc addiction PCs personal computers are think of past laptops are already taking over and we can also see that mobiles are taking over laptops. I think since last year mobile devices took over the laptops and computers. When it comes to daily user time across the world, that's purely because of mobility or portability. In the end it's called mobile phone.
00:02:33.154 - 00:03:13.610, Speaker A: And the same reason why laptops across our PCs is the same reason for mobile devices there. And when we look at the conference here, out of three, five, I don't know how many thousand people, I don't see a single personal computer. And maybe at some point you're not even going to see as many laptops. We're going to see mostly phones, maybe. First we have to ask ourselves, why do we want our users to have a mobile app? And why do our users actually want us to build a mobile app? So it's a two way relationship. Just a second. I have a good point here to make.
00:03:13.610 - 00:04:11.590, Speaker A: Yeah. We have to ask ourselves, does our application has to be portable? Does it have to be mobile? Will our users use it at a family dinner? In a train, at a commute? Will they use it at a funeral? A good rule of thumb if somebody should build a mobile app is will your users use it at the toilet? If your users would use the app on a toilet, that's a good ground for a mobile app. Otherwise you can just build a desktop or a web app. And in the end we hear all those catchphrases like, are you building a portable library? You can use it on the go, at the palm of your hands, in the pockets while wiping your batches, etcetera. It does hold the ground, to be honest. And another perspective on why you might want to go mobile is if your application is one of the following categories. This is average weekly time spent in app.
00:04:11.590 - 00:05:02.854, Speaker A: Mostly it's social, because of interaction with our users and push notifications, but also gaming, communication and entertainment. Music. So if you're on a flight, if you're on a train, you're going to read a comic, you're going to listen to music, you're going to play a game. If you're one of these categories, that might actually be a good answer. Why do you want to build a mobile app if you're not on these? You have to ask yourself, do you really need a mobile app? For the next part, if we have realized at this point that our users want to use the app at a toilet, we have to ask ourselves, what are we actually going to build? Are we going to build an Android app? Or an iOS flutter? Or react native dark theme or light theme? Landscape or a portrait mode? Or maybe choose a chain like a solana or something better, like Ethereum. For that, we have to first know two things. Audience.
00:05:02.854 - 00:06:04.360, Speaker A: Which countries are we targeting? What's the gender? What's the age? What are their preferences? How much money do they have in their pockets? In their wallets? When are they mainly using their phones? At which events are web? This skeptic, essentially all of this research falls into the category of being a project architecture. We have to figure out what the user is to know what we want to build. And we also have to know our limits. What's our budget? What does our team look like? What's the deadline for delivery? And in the end, is there a baby on the way? Are there any funerals planned? Something like that? Our team is crazy. We're a team of seven, and we had two marriages, three kids, and two funerals in the last year. That actually all plays a role on how do we define what are we building? Because we have to plan our roadmap correctly, we have decided for the following options. In the case of dreader, a majority of our audience, we have three hotspots.
00:06:04.360 - 00:06:34.476, Speaker A: One is american comic market with Marvel and DC. The other one is Europe with french belgian culture, comics like Asterix and Oblix Smurfs, Lucky look, etcetera. And there's also a huge asian market with mangas. Mangas, etcetera. So we have to think about multi language support. We have to think about stuff like majority of our audience is three to one ratio, men between women in Asia, it's two to one. So we have to figure out which comics they actually want to put on the platform.
00:06:34.476 - 00:07:26.622, Speaker A: Are we going to prepare the platform and design it in such a way that it's mostly targeted towards action comics? Or is it mangas? Or maybe it's Romans? Maybe you also want to build for a specific language. French people normally don't speak as good English as Americans. Of course, all of that has to be taken into account, and it has to go to such detail that we have to consider the facts where. Which fingers are our users using. So, as we were searching through current mobile experiences on comic creator applications, we have come to the realization that a lot of them use a thumb to scroll, infinite scroll, on pages, which is a good thing. But the issue is that outside of the comic pages, you have to go to other screens and switch between different fingers or switch between different hands, which is not quite optimal. So our whole user experience is built in such way that it's catering to an infinite scroll.
00:07:26.622 - 00:08:10.202, Speaker A: You can see the discover screen, like on Netflix, where you just browse, swipe up and down, or like a newsfeed on Twitter, and reels on. I think reels are on Instagram. And all those details matter to know what are we actually building. That's something that's not necessarily in the field of project architecture. It's also, when it comes to UI UX design, a case for pwas. If you don't have enough budget and you don't have enough capacity or you don't have a a mobile developer, you're going to go for progressive web apps. In case you haven't heard of them, they're just glorified web apps with a manifest file which tells a mobile browser how to open that file in a full screen so it looks like a native app.
00:08:10.202 - 00:09:06.392, Speaker A: I can go in for all of these points, but in a nutshell, if you don't have enough budget, if you don't have mobile developer, if you don't care about push notifications on iOS, if you don't care about additional security besides HTTPs, you go for PWAs. There's no reason for you to go for a mobile app route unless you have enough money because it's that much harder to do and it's a different concept. The best option is to go for a mobile responsive web application. That's my take. But I think GPT is also going to agree with me because majority, I assume majority people think that pvas are a good future for mobile and I think about current state is about 10%. Applications on Google Play Store are actually progressive web applications and people don't even realize that they're not native. When to switch from pwa to native.
00:09:06.392 - 00:09:49.754, Speaker A: In case we actually started with PWA when we had push notifications, when do we actually ship the app to the Google Store, Apple Store, when do we pay more attention to user experience, user interface and when to advertise and many other events that we have to figure out along the road. So I'm only going to answer the third one and fourth one. Apple Store, just lower your expectations. If you're working on mobile and working with nfts or web3, it's going to take a few months. Apple is still in an area where they want to have that control. There's not fully open to web3. I think Google, from my personal experience, Google is trying to make an ally with web3 communities and they want to become a hub for web3 applications.
00:09:49.754 - 00:10:33.454, Speaker A: You should definitely check out for Google Play, but with Apple Store, lower your expectations. And when it comes to when do we release our application? When we draw the line and say, okay, this is enough, focus on user experience, user interface and features, and let's go to Google Play Store. Normally we can see on Solana, crypto, Twitter, we can see myrt, Toli and guys like those saying, just do it now. Like if you have anything that could be considered minimal product, do it now. Go to the market, see if there's feedback for it, see if there's reaction if anyone is going to go there. But I would argue that with mobile applications, it's actually a bit different. You don't want to rush into it.
00:10:33.454 - 00:11:12.934, Speaker A: 50% of applications that are published on Google Play store severely lack user experience. They have even the basic errors and 75% of them. Actually, I think I mixed up the numbers. 75% basic user experiences and 50% of them lack basic security measures. I'm gonna. Is anyone here from dialect perhaps? Like from the team? No? Okay, then I can talk about them a bit. So there's a case study for dialect that I did, and dialect is the best NFT minting experience that Solana had in years.
00:11:12.934 - 00:11:30.374, Speaker A: They introduced compressed nfts. The minting was very simple and onboarding. With a wallet, it was similar to Stepn. You just go there, create an account, it automatically generates a wallet for you. You click on claim and you got an NFT. It's perfect experience. But when you go to Google Play Store and see Dalek, it has a 3.5
00:11:30.374 - 00:12:11.764, Speaker A: star rating. Why does such an application with such a beautiful experience has a 3.5 star rating? It's because in my opinion, they listened to that voice that said, we have to go to the market, we have to ship our mvp. We have to see if there is enough audience interested. And what happened is they lacked basic features when it came to communication. The chat there, if anyone tried using it, had issues like if the screen went black or you couldn't see the chat history and stuff like those, and they suffered instead of if they had. In my opinion, if an application like Dali has enough money to continue developing instead of going to the market, mobile apps should delay it as much as possible.
00:12:11.764 - 00:12:44.334, Speaker A: Reason is the following. With a web app, it's simple. User goes to the web app, they can try it out, and if it has some issues, okay, that's it. But with a mobile app, users spend time to look for the app, they download it, and they're much more unforgiving. If you make a single mistake where they don't know how to create an account or do something, they're just going to delete the app. If they download the chat application and they don't know how to chat, or they don't see the chat history, they're going to delete the application. Full disclaimer I really love dialect.
00:12:44.334 - 00:14:11.452, Speaker A: I love what they're doing. But I think they sent us a message that maybe if you have enough budget and mobile apps, if they have enough budget, they should delay it until their user experience is as good as possible now how to build on how to build mobile apps I think this is actually the most boring part that I wanted to throw the slides out and I already submitted the presentation in case someone is actually interested in how to build mobile. There's a whole mobile team I'm here and feel free to ask me around later, but I'm just going to talk about the user experience. If you're targeting to build a dapp on mobile, which kind of user experience that I believe is going to kick off at some point is instead of going to be relying on stuff like mobile wallet adapter or wallet as a service, stuff where people offer that baked in wallet experience, whether it's through third party APIs like Segnize or having some SDKs, and how I imagine consumer Dapps to go around in the next few years, it's most likely going to be the case where you have a username email password. Ideally there would also be a login with Gmail button, but we're still too lazy to implement that and the wallet connection should be optional. That's something that people have realized at this point. So far, wallet has been a first class citizen in web3.
00:14:11.452 - 00:14:42.114, Speaker A: You connect the wallet, you can use the app and that's it. We don't even know who the user is. That's how drip house works as well. If Driphouse had a list of 30 40 50,000 email addresses, that would be such a powerhouse. Until we have a connect button, I don't consider them to be as big as they might look like. There are go again throwing dirt at our projects. The reason why wallet connection should be optional is also simple.
00:14:42.114 - 00:15:46.152, Speaker A: When people go to the app, they want to read stuff, they want to see free comics, they want to interact with the application without having to do something that they don't know how to do. They don't even know what phantom is, they don't know what software is. Why would they have to install another application to be able to use us? So we picked the route where people can just register their account and they can read free comics like on any other comic platform. If I have to build a native app, if I want to build mobile first, I think I already mentioned during the presentation everyone can take the route of progressive web apps and if you want to level it up, we can also go for the trusted web apps, which is another route to take to publish on Google Play Store. I already mentioned the 10% apps on the Play Store are progressive web apps. I'm sure that the number on app play store is much lower if they have any. There's a way to publish progressive web apps on Applesauce as well through some tools, but I'm sure that that's a bit bigger barrier there.
00:15:46.152 - 00:16:48.464, Speaker A: And there's most likely like 1% when I'm talking about Pwas, I'm also going to mention an example of Twitter, Pinterest and stuff like those. All of them actually had that Unicorn reached that unicorn phase with progressive web apps. So that just goes sends a message that there is no real need for native apps. At some times you can reach the unicorn phase with just a pvA. Some people believe that pvas are limited to mobile browsers, but you can actually even use the progressive web app for a desktop application, which is really beautiful experience because again, you don't have to learn the desktop development, you can just use full screen open through the Chrome browser. And the last one is developing Saga and Solana Dappstore is exclusive. If I were Solana mobile team, maybe I would just rebrand Saga to Saga Android just so people actually realize that it's an Android device.
00:16:48.464 - 00:17:24.404, Speaker A: Releasing on Solana Dappstore is also releasing on Google Play Store. It's complimentary. And in the end, Solana Dappstore did a huge failure for us because it gave us 200 downloads even though we haven't even had a v one yet. And those are actually, if you want to release to an audience and you don't have a v one yet, you're not ready. You have that poor user experience that I talked about. Solana Dappstore is actually quite well because those are mostly Solana enthusiasts that want to support new projects and they're ready to install it. They're ready to stumble upon bugs, they're ready to send you feedback.
00:17:24.404 - 00:18:17.414, Speaker A: If somebody is building a Google Play app on top of Solana, definitely release on Solana DSR. For that reason, the audience is much more forgiving for the end fundraising. This sentence below might be too harsh, but the number is correct. So I did a small Google form questionnaire a few weeks prior to the talk. Almost 30 projects, mobile projects from Solana Ecosystem have submitted it. The questions were simple. Have you heard of Solana quality pitch opportunity? Have you heard of super team grants? Have you heard of Grizzlan? Have you heard of Solana mobile grants? Have you heard of Solana foundation grads, et cetera? And I wanted to come to some kind of conclusion where the projects that have bigger funding are much more likely to reach the Google Play Store phase.
00:18:17.414 - 00:19:19.594, Speaker A: But I was actually proven wrong. I was shown that even though some projects haven't got any funding, they still reach the Google Play store. Which actually leads me to the cake later. But to finish off the fundraising point, why 80% people? There are only five to four opportunities on Solana to get funds as a mobile developer at the moment. And I already mentioned Solana quality, super teams, Lana Mobile, maybe even some other hackathons like Encode, and 80% of them haven't drained all the sources. They were building mobile applications for six to nine months, and they haven't received a single penny for it. Why do you even build a mobile application if you not even go look for validation on some entity at least? And the cake? The cake was my expectation that if you get a grant from Solana Mobile, which we did, if you get a prize on Grisathon, if you get a few more prizes, a few more fundings, the project is going to be successful.
00:19:19.594 - 00:19:46.384, Speaker A: That's not really the deal. Even if you get $2 million, even if you get $20 million, it doesn't really relate to the success of the project in any way. The main judges are going to be the users. I also have another cake, which is a lie, potentially from either Solana Mobile or Solana foundation. But I already threw enough dirt, so if anyone's interested in that cake, feel free to reach out to me later. And that's actually it. Q and A is after the stage.
