00:00:14.680 - 00:02:13.556, Speaker A: Can everyone see my screen? Let's just give people a few minutes before we start. So I guess we can start. I think we have enough people. So today I will be talking about fifth, which was a high frequency oracle on Solana built by PIV network and you can integrate it right now on Devnet. I will walk through how to use PIV in your rust code and how to use it in react code, what are different account structures and how to interact in general. There is already data published on Devnet that you can start using. Um, let me just make it bigger so everyone can see it.
00:02:13.556 - 00:03:10.554, Speaker A: I think I always forget that. Okay, so starting from the very top level, there's like three main accounts on Solana that you are interacting with PiF. So if you take this, you have the, the mapping account that lists all the effectively products that are being listed and there's potentially multiple of them. Then for each mapping that you query, you have a product that describes what is the symbol, what is the status of the price, what is the status of that product, and then there is a price. So whenever you need to query something, you will actually need to start first by querying mapping. If you want to query multiple prices, you will need to query multiple products. And then for each product you will need to query the price and usually following Solana model, if you are doing it in react, you will need to subscribe to the prices for updates.
00:03:10.554 - 00:04:49.114, Speaker A: But you probably don't need to subscribe for updates on products, at least right now. So jumping to the example I just want to log into, this is the first link. So let's leave all the questions about not related to PIF till the end and I will kind of address them. So the best place to start right now by researching PIF is in the PIF network repository under PIF example cloned Dapp scaffold repository and created a super simple react and rust application that queries PIF from Solana blockchain and then displays the prices. So if I go to the react page, this Solana Dapp right now displays the list of prices that we query from Devnet. You can always check that you are in Devnet here and first I will kind of walk through the high level what is the application and then dive to the code how it was implemented. You can connect wallet here and I'm using Fantom and you can execute super simple transaction that displays just the prices in Solana program from PIF.
00:04:49.114 - 00:05:23.554, Speaker A: So this executes the transaction. You can go to the explorer. Once this is confirmed in the logs, you will actually see that I queried a bunch of prices. So right now this is passing Google to this specific call in the contract. So you can see all different properties from Google, including the price. So the price right now is around 2300 as displayed here. So you can also just see displayed in messages executed on the contract.
00:05:23.554 - 00:06:12.094, Speaker A: So jumping to the code that I have, let's start with the top level, how you can configure that. This is the simplest Solana program, so it only has lib rs. So first if you want to pull PIV client, reference it here with Solana program as well. Right now the version is one one and you can start coding against it. So whenever you are using the first program, like the main program account from PIF, you need to pass product and price to ensure that you have all the validations. You don't want to just pass the price because that doesn't have all the information for you to check if nobody's spoofing the accounts. So for the security reason, always pass this to accounts.
00:06:12.094 - 00:06:51.634, Speaker A: Then you will need to perform a bunch of checks. They are all listed here. So you need to check if this is a product type that you are looking for. There is this magic number that identifies the PIF accounts, if this is a valid version, if the price account is valid, and then if you're actually getting the actual price that's specified in the product. So once you have all those checks, which are important for the security reasons, you can start decoding the data from the price. And this is just showing you, this is super straightforward. You get the PIV client price object and you can start decoding it.
00:06:51.634 - 00:07:39.190, Speaker A: So the main thing that probably everyone will be interested is just price. So you can go PIF, underscore price, act price, and that's pretty much it from the rust code. So super straightforward to integrate on the rust site. So before I switch to react, maybe I can answer any questions about rust. First, if this is like straightforward enough for people, there is a bunch of other properties that you see in the accounts in here. So if you go to price in the price, you have the calculation type of the price. And this is like all described here as well.
00:07:39.190 - 00:08:14.986, Speaker A: So right now PIV supports only spot price, but eventually it will support PWAP and volatility. This is already included in the price type that's provided here. And then, like I was saying, the first top level account you have mapping. So from the mapping you can get the list of products and those are public keys that you need to query. So you, because this is a fixed size array. If there is a lot of products at some point deployed, you potentially need to acquire for multiple mappings that have your product. Yeah.
00:08:14.986 - 00:08:54.018, Speaker A: So in this program it's super straightforward. There is no instruction. So like there's no, no enum that you need to pass to say, what is this instruction? Like? I just like literally passed a bunch of accounts and displayed the data from it. So this is like even simpler, like much more simpler example than what you would have normally because there's no action. This is just logging. If this program was a bit more complicated, you would probably have enum like in all the Solana program library codes that specify what specific function you are executing to take action. But they wanted to make this example as straightforward as possible.
00:08:54.018 - 00:09:44.414, Speaker A: It's just like bare bones, nothing else. So switching back to the structs like this one, the mapping product, you probably will not be interacting with mapping on the rust side of things if you are building a program on Solana, but you will definitely be interacting with product itself and the price. So product, the main thing that it contains is the price account. So that gives you the information what you should query for the price. And it contains list of attributes that are like reference data. So you have like a string that displays, you have string that displays like that you can display on the front end and a bunch of other properties. But this is really not defined in the protocol.
00:09:44.414 - 00:10:25.872, Speaker A: What goes here, it's really just key value pairs. And then you have the price info. And the price info is really what everyone will be interacting with, at least from the Solana program side. And the key things that you have in here is really, like I said, the price and the confidence interval. So the confidence interval is allowing you to see how wide the price is from the current midpoint. And this is something that is not necessarily available in most of the oracles on other blockchains. And this way, I think the PIF is extremely powerful because once they add also support to t, wow.
00:10:25.872 - 00:11:42.172, Speaker A: You will be able to decide from your program which path you want to take. Do you want to take aggregated price or potentially the latest price that arriving at every slot on with Solana and decide is that price with the confidence interval something that I should use, for example in the liquidation engine or not? Or maybe in Amm, if you are building a Amm that takes PIF and uses the PIF spot as the mid price for the execution. Yeah. So you have right now, if you go back to the documentation here, this one, this is really like mapping product and then price and then each product potentially will have different types of prices. So hopefully that answers the question. Right now you only have one type, really this type price that you can identify what are different types like later when they will be added. All right, so that's pretty much it from the rust side, super straightforward.
00:11:42.172 - 00:12:31.804, Speaker A: From the consumer side. Yeah. But the t web is not available yet. So right now you only have like one type of, of the price, which is just price itself. But eventually this enum could be expanding to more and each one will be stored in a separate account that you query. Okay, so switching back now to the, to the client side, how you want to query that. So the easiest way to go about that right now there is like the main Oracle public key and this is really just like one of the mappings.
00:12:31.804 - 00:13:23.444, Speaker A: So if you query that mapping, what happens then? It gives you the list of products. And I'm using get multiple accounts to query all the products from that given mapping and then parse it into specific object. All these functions like parse product data and parse price data are available in the NPM package that was published when the fifth client was released. So you can download that, you can install it using NPM. Let me just find it here. It's PIV network client. So once you start the code, all of that, you can connect effectively the product and the symbols together.
00:13:23.444 - 00:14:38.114, Speaker A: So what happens here? I have the basic listener on each of the prices, using connection on account change and then going fairly fast. So I assume in here that you already watched the previous twitch streams about how to code on Solana, and you have understanding of how Solana RPC works and how the account model works. But if that's too fast, just let me know and I can answer more questions specifically on Solana. This will query effectively all the prices right now that are available on Devnet using just three simple RPC calls, with only one being really active. This one, if you're building something on the front end that's using only a few prices, let's say similar to Mongo, you only support, you actually store somewhere in the config list of products. You don't need to query them constantly from the Solana blockchain and you just query for the latest prices and pass them to your contract. So one thing worth mentioning is the list of accounts right now is published here.
00:14:38.114 - 00:15:51.877, Speaker A: So if you are looking for what are the symbols and what are the different products and price accounts, if you don't want to query them yourself, you can just go to pivot network developers consumers accounts. And this will list all the different available keys, which is very handy if you just need to pass something for testing. And now I will just show quickly how I'm calling that basic contract from the code that I have here. So in the PiV index, I created the simplest instruction possible, which is like literally everything is read only. It takes two keys, a product key and the price key and the program ID that I just deployed, and I'm executing that transaction. So when I execute that transaction, just returns a transaction id and displays it in the explorer, something super straightforward. So you should be able to like if you know, Solana, at least on a very basic level, you should be able to take this example, potentially modify this code in here that we have for perfect.
00:15:51.877 - 00:16:38.954, Speaker A: So you can open that in integrated terminal. For example, the visual studio code, you can just write cargo build BPF that will build it. And at the end of the build it will give you a command to deploy it. So I can take that, deploy it to Devnet. So you literally just copy that pass like minus u devnet that will deploy it to Devnet and give you the id of the program that was deployed, that you can modify. And on the client side, I just store id here that says Pivhella world, and you can start interacting with it if you build more complex programs. So this is like fairly straightforward demo.
00:16:38.954 - 00:17:34.898, Speaker A: The other thing that we started adding, if you go to Solana program library, that's a bit more complicated. But if you want to take a look at that, that's useful. There is this PR lending, PR that is taking borrow lending platform that we have in the Solana program library and extends it with fifth Oracle that was literally just published today. And that has a bit more complicated setup because it reintegrates it into the liquidation engine. It doesn't take advantage of the confidence interval yet, it just takes the spot price. But you can see how you could integrate it into much complex system to save like the products that are being used, the prices that are being pulled, and then how you liquidate. Sure.
00:17:34.898 - 00:18:33.204, Speaker A: So you should be able to call CPI from the program, like encore program. I know Norbert from synthetify built the anchor wrapper around the objects that PIF exposes. It should be fairly straightforward. So all the code that PIF has that's open source is just using simple like C struct, like C compatible structs with the basic layout. So like any serialization should be able to handle those. And the other thing that's also super interesting about like piffling is, it's one of the bigger programs right now that's using actually like C for deploying like interacting with like the Solana program. So if you are a C developer and you want to build something on Solana, this is also a good example of like how you could interact with the blockchain.
00:18:33.204 - 00:19:22.484, Speaker A: And you know, all the other examples are usually rust. So the dev network guys that like, great job at actually like integrating that into a C C framework and you can use it as a great example. Yeah. So that's the current potential limitation. If you need to pass 20 tokens into your program, you would need to pass 40 accounts which will effectively not fit into a transaction. So the solution to that problem would be building some form of aggregator that operates on a crank that community could potentially run that takes the price accounts and puts them into a single account. That this gives you the overview of the data that you need.
00:19:22.484 - 00:20:23.250, Speaker A: Hopefully that answers the question. All right, so we are almost like halfway through. Try pulling the examples from the GitHub repository, building it yourself, modifying the rust code. Take a look at the pr that we have for lending. I think we'll publish also a curve for the token swap. But if you are thinking how I can play with this for the hackathon, I think this is actually a great use case where you can play with PIF. So you could go to token swap program, which is an implementation of automated market maker on Solana, and you could build effectively a curve that takes a perf pricing for the spot and uses that depending on the confidence interval to execute the trades.
00:20:23.250 - 00:21:12.922, Speaker A: So if you are in the small confidence interval, you use the spot. And if you are not from PIF, and if you are outside of the confidence interval that you consider acceptable for a given pair, you could use basically the reserves from the automated market maker to execute the trade. So the newbie question, I guess, like you will, you will need to know rust to create a program on Solana. That being said, there's plenty of operations that you can do on Solana that don't require rust experiences. If you are just JavaScript developer, you could do a lot. Even just this super straightforward example about PiF. You could build everything in rust, like in JavaScript, without knowing rust.
00:21:12.922 - 00:21:59.286, Speaker A: You could use these prices, combine them with, let's say for equities. You could combine them with Yahoo finance data to build some form of screener that lets you scan for fundamentals on equities and on crypto, you could pull different moving averages and kind of use it as a screener as well, and maybe different technical indicators like RSI. So I think, again, you need to have some programming knowledge if you want to build something on top of Solana. But I don't think you need rust to provide a lot of value to people that are using the blockchain. All right. Yeah. So there is a lot of possibilities.
00:21:59.286 - 00:23:01.908, Speaker A: I think some things are easier than on other blockchains and some things are a bit harder. But there is a lot of people that are building. If you have an idea for the product and you are part of the hackathon, Solana team can help you find a match within the existing teams where you can provide your expertise. There was at the beginning a question when PIF is going live to Mainnet. So we don't have, based on the conversations with PIF network guys, I don't think they have a fixed date when they want to go live. But they said within two, three months it will be available on Mainnet, on Solana as a base layer to execute the prices because it's the fastest blockchain. And those prices will be then replicated through wormhole to Terra and Ethereum, which I think is like super interesting use case because it really shows where Solana as a blockchain can be used for just like high frequency financial applications.
00:23:01.908 - 00:24:18.168, Speaker A: And then the data that's a golden source of Solana can be replicated through Armhole to other chains to leverage the defiant existing ecosystems out there. So the hello world, like, look, this is specific to PIF, but you can literally go to this example that we built here for PIF examples and the program here. This is like a hello world program that queries. It gets two accounts with some data and then just messaged on the output some of the information. So this is the simplest program that you can really build on Solana because it doesn't take any action other than just printing. Yeah. So the main difference really provides high resolution data versus like most of the existing oracles, operate on some form of consensus that aggregates the information.
00:24:18.168 - 00:25:28.960, Speaker A: And that works really well for the sources. Like for example, prediction markets, where you have a binary outcome of an event that caps when the game today. Yes and no. And there is very little like arbitrage after that first thing is published. Unless you are trying to be malicious with financial markets and prices, you really want to have an option to sometimes operate on something that's really high frequency and because of the confidence interval, it lets you protect against flash crashes. So it's better to use something like PIF than, for example, rely on just subscribing the data from a single market like Coinbase and what happened months ago to compound. But if you start aggregating across multiple exchanges and then publishing the prices in some form of aggregated T WAP number, that's cutting off bunch of use cases that you potentially want to incorporate into your program.
00:25:28.960 - 00:26:59.674, Speaker A: Like for example, for execution, you want to have the latest spot and execute at the best price available, potentially, whereas for liquidations, I could see the argument for both cases. Maybe you want to give the buffer to your users like, hey, we will not liquidate you if confidence interval is really outside of the bounds, but if it's a really tight thing and your loan is going bad, the protocol will liquidate you. So with PIF and the vision that they have, this will really let you, from the protocol perspective, fine tune the operations like liquidations and executions to the level that I don't think has been possible before. So in terms of the token, I think it's best to take it to discord and ask the team itself. I think they have a wendtalk and channel where you can ask the questions like that. This is primarily a developer talk. What are the other questions? So from the data integrity perspective, the PIF network will have a bunch of trusted publishers and that will be published on the PIV network website as well.
00:26:59.674 - 00:27:58.434, Speaker A: So people that want to be publishers, they can reach out right now, I think through discard to PIV network and say they want to be publishing the data. So from the account limit for transaction, that's Solana's specific question. Right now, that's around like 30 accounts that you can pass to a single transaction. So if you are building a protocol that really requires a lot of prices, it's best to somehow aggregate those prices into a single account before you send them to your program. Yeah. So for the NFT metadata that we have, I will publish eventually the documentation that I was showing to in the previous talk. If you have more questions about that, just reach out to me on discord.
00:27:58.434 - 00:29:04.050, Speaker A: I'm like be underscore on Solana Discord that I can take any questions offline. Let's just keep it to PIV specific questions or like Solana basic programming questions right now. So right now the publishers like they need to be verified, as far as I know, for the Devnet. And there's like the voting process I think based on that. But I don't see the publisher code yet. So I primarily focus, I guess here right now on the consumer side, how to use it in the smart contract and how to use it on your front end. But they will have section here to describe like all that in detail and in terms of the vision.
00:29:04.050 - 00:30:20.200, Speaker A: Based on my conversations and what's really also exciting about PIV, they view this really as golden source of financial data. So right now they are trying to solve the hardest problem first, which is how can we have high resolution, high accuracy and high frequency data on the blockchain. But eventually you could like imagine they will start publishing data that has lower frequency. Like let's say you want to access some form of fundamental data about equities like EPs and maybe like earnings information. So let's say there is like earnings information coming about like some form of tech company that is correlated with crypto and potentially impact on some of the crypto currencies. You could use then PIV in the future to build something like that to execute trading strategy that takes both equities and crypto into consideration. Okay, any other questions? Maybe you want to show me something specific? Like I can show you anything in the code.
00:30:20.200 - 00:31:46.836, Speaker A: If something was not clear, I can repost all those links on the Piv discard after this talk. Right. So let's give people like two or three more minutes, I guess, for questions, and then we can move it to discord. And I will start publishing the links right now on discord. So flux, sure, I can talk about Flux aggregator. So Flux aggregator is a competing solution on Solana. So it's worth to mention that PIV network is not the only oracle on Solana that you can use right now.
00:31:46.836 - 00:32:58.124, Speaker A: And Flux aggregator is something that right now is reviewed by Chainlink. There is a separate repository with the examples that you can take a look at. We will probably organize some other talks about other oracles like Flax aggregator and how you can use them. But in principle it's kind of similar with the main difference being the flags. Aggregator subscribes right now to prices from multiple exchanges and tries to aggregate them and publish them, which is, but without the confidence interval, which is a big key differentiator from PIF and also because the prices are coming directly from the exchanges and they don't have necessarily good arbitration logic for that right now. I would disp if it's available. All right, so I'm just posting everything in general channel.
00:32:58.124 - 00:34:11.514, Speaker A: No, I have not heard about Gravity's project, but if you have more details, just send me on this card and I will definitely read on that more. All right, awesome. Thanks a lot. Okay, I think we are good for today. If you have any more questions, don't hesitate to reach out on either Solana discord directly on the PIF discord. There is a lot of developer support right now going through the hackathon. The PIF has dedicated award for people that are going to build the most innovative solution with PIF.
00:34:11.514 - 00:34:23.923, Speaker A: So if you want to brainstorm with me separately offline about your idea for the hackathon, happy to help with that. And super excited about everyone that joined and thanks for building on Solana.
