00:00:10.280 - 00:00:41.774, Speaker A: Welcome to the Solana podcast. I'm Austin Federa. Today we're talking about a new partnership between Metaplex, the NFT implementation on Solana, and strata Protocol, a toolkit that helps developers launch tokens. They've built some new tools to help creators set dynamic pricing for NFT mints, and these change the economic incentives around nfts, which will hopefully reduce the botting of NFT mints. We're joined by Noah Prince, the co founder and CEO of Strata Protocol, and Austin Adams, a software engineer and lead protocol developer at Metaplex. Gentlemen, welcome to the Solana podcast.
00:00:41.934 - 00:00:42.534, Speaker B: Thanks, Austin.
00:00:42.574 - 00:00:43.150, Speaker C: Thanks for having us.
00:00:43.182 - 00:00:43.910, Speaker B: Glad to be here.
00:00:44.022 - 00:00:52.048, Speaker A: Great. So let's go ahead and start out today with just an overview of Noah. What is strata, and what are you guys trying to do in the space?
00:00:52.246 - 00:01:39.320, Speaker B: So strata protocol at its core is a protocol for launching tokens and managing the liquidity around those tokens. We have a variety of different auction mechanisms, and we can launch tokens anywhere, from small tokens that you don't really know who the counterparty of the trade is. There's not going to be much volume all the way up to large tokens where you want to do a large offering and then eventually put those on a Dex. How we ended up getting into this space is just that. Our auction mechanisms for tokens also offer a solution for the NFT botting situation. So we thought long and hard about how to keep bots from botting the token launches that we have. And if you launch one of those tokens and then put it as the entry price to a candy machine, you get a dynamic pricing candy machine.
00:01:39.432 - 00:02:12.666, Speaker A: So let's talk a little bit just to kind of roll back to what strata really is trying to accomplish here. You mentioned it's a solution for launching tokens and providing initial liquidity for those tokens. What are the challenges that people run into when actually launching a token? I think if you look across the space, you'd see that there are hundreds of different tokens run by hundreds of different projects across the Solana ecosystem, the majority of which were not launched with something like a launchpad or, you know, basically a protocol to help them go through that process. What are the challenges that people are facing when they're actually looking at launching a token?
00:02:12.770 - 00:03:15.976, Speaker B: Yeah, so I think token launching kind of comes in a few steps, right? Like the very first step is the ideation phase, where you're trying to figure out what your token is. Do you have multiple tokens? What are the tokenomics? And somewhat in that same phase is where legal comes in, and to a lot of degrees, that is the hardest spot, is where you're going to figure out what your token does. But a lot of times for people launching a token, there's this kind of big, okay, we know what we want to do, but how do we physically create that, that token? And then how do we go and do things like auction that token off? So, like, I want to sell some of that token to investors. I want to sell some of that token to all of my community. How do we actually distribute that thing? And then after that, there's the step where you've distributed it, you've collected some money for the token that you can use to bootstrap the project, and then you also want it to be tradable on a Dex or on an amm, and then you go and set that up. So strata is really there to help with the creation part of the token. And for really small tokens, we also manage the liquidity.
00:03:15.976 - 00:03:30.320, Speaker B: So if you don't want to even care about, like, what is an amm, what is a Dex? Who is the counterparty to a trade? We have a way you can launch a token and it's basically one click. The protocol just takes care of all of it for you.
00:03:30.472 - 00:03:56.696, Speaker A: Yeah. So if you think about, like, maybe a year ago when someone was trying to launch a token, there was lots of technical components in actually creating and launching that token, but you'd have to go and submit something to the Solana token registry. You'd have to then go ahead and set up a permissionless pool on something like serum. You'd have to go ahead and try and get it verified to get it actually listed there so it would show up in the list. Someone didn't have to add it as like a custom market. And all these things are functionally automated through you guys at this point, correct?
00:03:56.800 - 00:04:16.672, Speaker B: Yep. So for the most part, those things are automated. You still need to go and set it up on a mm after you bootstrap the liquidity. But, yeah, we're basically making it permissionless to go and do this. The idea was to make it as easy to launch a token on Solana as it is right now, to launch an NFT, which metaplex has kind of done a great job of.
00:04:16.768 - 00:04:43.396, Speaker A: And so there's been a lot of organizations that have tried to create launchpads or create basically systems of easier onboarding on the Solana blockchain. A number of them haven't really gone anywhere, or they've been sort of overrun with, I would say, very low quality projects that are just trying to find a quick way to launch a token. What's the reason you think that strata has had a bit more success here and not fallen into some of those traps?
00:04:43.580 - 00:05:17.698, Speaker B: Well, I think the first big trap there is talking about projects that are obviously disingenuous. They're trying to cash grab. They're not actually a real project. And when you talk about creating something permissionless, you want to get away from that. The barrier to entry should be low so that anybody can do it, because tech is tech, but we don't want to be the ones that are creating the list of all the different tokens that we think that people should buy equally. Metaplex isn't doing that. Metaplex doesn't go out and tell you which projects to buy.
00:05:17.698 - 00:05:47.328, Speaker B: There are plenty of launchpads that have their own lists that'll tell you who they think you should buy. And there are plenty of Twitter influencers who will tell you that as well. That's one way that we're doing it. The other way that we're doing it is trying to make it easier for these projects that are smaller and maybe don't have all of that. All the idea of how to do everything that's complicated with launching a token. They just want a simple token. Things like social tokens are like little community chat projects, making it easier for those.
00:05:47.456 - 00:06:14.232, Speaker A: So some of the interesting things you guys have done, in addition to the ability to create a new token or sell an existing token. Bootstrap liquidity is this idea of a fundraise and the dynamic pricing of NFT mints. On the fundraising side, what did you sort of see in the changing ways people wanted to use tokens, or the changing use cases for tokens on Solana, that really led to the idea of a fundraise being something that a launchpad protocol should build tooling for.
00:06:14.408 - 00:06:55.860, Speaker B: Yeah, so fundraise was inspired deeply by constitutional, which, if you didn't see it, was this thing where a bunch of people on ETH just band together. They said they were going to buy a copy of the Constitution of the United States of America. There was an open bidding that happened. I think they raised like 30 or $40 million and ended up getting outbid. But it was still this example of a community coming together and bootstrapping a ton of liquidity to do something cool. And the idea was that there will be shared ownership of the constitution, or at least this copy of it, after the bidding was done. And so how you do that mechanically is just you're collecting money into a pool that somebody then uses for the bid.
00:06:55.860 - 00:07:20.624, Speaker B: And then as you're collecting money, people are getting a token that represents their share of that pool. Even after you've used the money, they still have the token. And so with the constitution dao, you had the people token. And that's just one of many ways to launch a token. And why our launchpad is kind of formatted like a wizard, because we want it to be kind of like a no code tool where it asks you the questions that you need to answer to get towards launching your own token.
00:07:20.744 - 00:08:47.106, Speaker A: It's super interesting to think about the implications for some of this stuff for the intersection of real world assets like something like a constitution, and then the intersection of the ability to have full liquidity through something like a token mechanism for this. So I think that's a very interesting use case for it. And one of the great things I think about Constitutiondao, when we saw that all happen, is it's still going, right? There's still a community there that's still passionate about this thing that they failed to create but now has turned into something else, which is in a large part, a lot of the story of NFTs on Solana as well is that they start with one mission. Suddenly something changes and trash pandas are now fighting plastic in the oceans and all these other projects are building real community service components into them. When you're looking at the idea of a no code solution here, what was kind of the reasoning for something like that, for more complex protocols? I guess the thing that I'm trying to tease out here is there's an assumption from a lot of folks that if someone's not sophisticated enough to figure out how to launch a token, they're probably not sophisticated enough to launch a project on a blockchain. That's obviously not necessarily the case, but that is part of why you've seen launchpads in general or less code solutions be something that tends to have a lower quality project coming out of it. In general, how do you respond to some of that criticism, or look at the different ways that we just need to change our mentality around what a token is meant to be used for?
00:08:47.290 - 00:09:39.434, Speaker B: Yeah, I think there is that tendency, but as a dev, it's all about tools. For me, it's how can I get something done with the least effort possible that meets all the requirements? When you give tools to devs so that they can launch a token really easily, the devs can spend time focusing on the things that matter and not the things that don't. Part of it is that. But also you need this primitive, and you need this primitive to be easy because we're in the infancy of tokens right now. There's just one token. We're starting to see more complex systems like stepn pop up, where you have systems of tokens where that's just two tokens, all the way up to things like Wumbo and Bitcloud and rally, where you have hundreds and hundreds of social tokens, and these things all start to interconnect together. And you can start to do really cool things when you can create systems of tokens.
00:09:39.434 - 00:09:43.346, Speaker B: And that's something that you couldn't do in the past without this kind of primitive.
00:09:43.490 - 00:10:37.724, Speaker A: Yeah, it's fascinating. So, Austin, let's talk a little bit about the interface here with metaplex NFT initial mints. So one of the things that we've observed over the last few months is that, that the increasing demand for NFTs on Solana and also the, I would say, real success of projects and building a strong community pre launch has created situations where there is both a high incentive to bought the launch of an NFT, but also there's just extremely high demand for these things when they're coming up for initial mint. Some of that's driven by expectations that they might be able to flip them. But a lot of this is just organic community demand for a project that they feel very excited and interested in. There has been a few attempts to create systems that would either increase the fairness or would try and reduce the incentives for botting. One of these was the fair launch protocol, which was created as sort of an extension of the candy machine toolkit.
00:10:37.724 - 00:10:48.570, Speaker A: But Fairlaunch protocol never really caught on from a community standpoint. So what is sort of different in the approach here that you think is going to be successful in creating better incentives and dynamics?
00:10:48.732 - 00:11:34.570, Speaker C: I think the reason that this will be more successful is we will market it a lot harder than we marketed fair launch. But also the mechanics of Fairlaunch weren't really, and they could have been changed. They weren't really a great experience having to wait and then not knowing if you were going to get things. The NFT mentor, once that casino style experience, they pull the lever, they get the thing. They know right away they're having fun. It's addicting. With the dynamic price mint coming in, we get that addicting and fun feeling while still getting some technical protection against spots and making it a little bit more advantageous for creators.
00:11:34.570 - 00:11:38.386, Speaker C: If they've created demand, they're getting rewarded for that demand.
00:11:38.530 - 00:11:51.726, Speaker A: Yeah, that's super interesting. So let's walk through, I guess, from both of you. What is the flow that both a creator and a user goes through if the project that they're trying to mint is using this new dynamic pricing powered with strata?
00:11:51.910 - 00:12:48.366, Speaker B: Yeah. So the flow right now is a little bit broken up, and that's the point of this partnership. But right now, you launch a normal candy machine through metaplex. You grab the id of that candy machine, and then strata has a UI where you can plug in that id and it converts it to a dynamic pricing candy machine. Now, from a user standpoint, this looks pretty much exactly like the usual mint interface they're used to, right? You just click a mint button, but the price is changing, so the price is just slowly ticking down. And occasionally it bumps up when somebody purchases something. And you can also switch tabs and you can go look at kind of a price history plot, but as a user, you're trying to figure out at what point do you want to, like enter, right? At what price do you want to pay? And bots are playing the same game, which is an unsolvable game, right? Like when do you enter a live market is a question that nobody knows the answer to.
00:12:48.366 - 00:12:53.614, Speaker B: So it feels very much like a normal min. It's just that the price is kind of moving and it's a game of who flinches first.
00:12:53.774 - 00:13:25.444, Speaker C: That's the current experience. But as I'm sure you'll get to, we hope to create a deeper integration together that can utilize Strata's tech and Metaplex's tech for the entire experience without needing to go from one place to the other. But using our new UIs and CLI tools, they can create a dynamic price candy machine that also gives us even more bot protections than we had before without having to go from one website to another.
00:13:25.744 - 00:13:42.810, Speaker A: So what is the dynamic pricing set based on? What are the mechanics that go into actually setting what that amount should be? And how much volatility do you expect to see throughout the course of a typical 10,000 mint that might sell out in the course of several minutes?
00:13:43.002 - 00:14:12.440, Speaker B: Yeah. So generally you want to establish what is basically the order of magnitude of the price. So something that's going to be in the 0.01 sol range versus something that's going to be in the ten Sol range, they're pretty different, and it would be hard for any system to account for that. So generally what you're doing is you're setting kind of a range that you expect. So in the case of divine dogs, they were one of the very first ones that we did this with. They were minting an NFT that they thought would probably sell for two soul.
00:14:12.440 - 00:14:36.696, Speaker B: Now they're kind of associated with the gods, and so 3.33 is a magic number for them. And so they actually set the starting price at 3.33 sol, and the minimum price at 1.1 solar. The idea was the minimum that they were willing to take as a project to get the funding to do what they needed to do was 1.1 sol, and they thought that people would pay up to 3.3,
00:14:36.696 - 00:14:56.680, Speaker B: but probably not much more. What happened with that was that I think the average price ended up being 2.32, but generally you want the price to start slightly higher than what you think people will enter at, so that bots don't have an advantage to spamming. They're just kind of waiting for it to fall down, and then it'll hit some fair price, and it just kind of oscillates around the fair price.
00:14:56.872 - 00:15:12.616, Speaker A: You mentioned a few things there where it sounds like projects have to do a bit of estimation around what they expect to see. Like, what are the either software or just like human tools that someone should be looking at when they're trying to figure out, like, where do they start with dynamic pricing?
00:15:12.800 - 00:15:49.068, Speaker B: Yeah, I mean, I think to a lot of degrees, this is similar to right now, people are just deciding a fixed price for their mint, which is even more dangerous. Like, you have no idea if it's going to sell out for that fixed price or not. If you're a really hyped project, it probably will, as long as you set it like less than ten soul. But there's also a stigma. Soul bears came out and set it to ten soul, and people got pretty mad about it. So I think for most projects, this range of it depends what Soul's current price is. But right, like, this range of one to five sol is generally reasonable.
00:15:49.068 - 00:16:05.068, Speaker B: If you get really far off on the price, it can go above the starting price. But, like, we haven't seen that happen in practice. Like, usually projects have a pretty good idea of what they're going to sell for, or at least like a ballpark. They don't know exactly, but they know a range.
00:16:05.116 - 00:16:52.384, Speaker A: Yeah, just because this was one of the first prominent uses of the fair launch protocol, where the community of degenerate trash panda mentors banded together and actually crashed the price, they all basically colluded against the project owners to mint at 0.1 sol. When the pre mint tokens had been trading at like three or four sol on the exchanges and obviously the price has gone up from there. But it's a very interesting dynamic when you give the community the tool to set their own pricing. You do open yourself up to a certain amount of collusion, which I think is fascinating. No one would have thought that in a free market open system you'd be able to get a bunch of degens who are trying to optimize for the most value they can create to all band together and try and basically drive down the mint price of an NFT.
00:16:52.544 - 00:16:57.484, Speaker B: They also got to change their vote in the second half, which made it a little less risky to bid small.
00:16:57.864 - 00:17:06.144, Speaker A: Yes, that's true. So that sort of one tiered system is part of the dynamics here that you think make it more robust against something like that?
00:17:06.304 - 00:17:46.808, Speaker B: Oh, yeah. I mean, so we've done a couple of mints with it now, and every single time in the discords, I actually hope that someone proves me wrong because it will be kind of interesting from a psychology perspective. But usually there's like a band of people in the discord that are like, nobody buy, nobody buy. We're going to let the price fall really low. Like, the bid's small, but because it's so real time, what ends up happening is like, it hits a number that's like really, really good, and it's just like a prisoner's dilemma. A few people defect and then everybody sees that a few people defect, and all of a sudden the faction that was trying to like, hold back and like, not buy, everyone starts buying and the price starts ripping because it's the lowest price that they're going to see.
00:17:46.936 - 00:17:50.792, Speaker A: Yep, totally. It's really interesting the way those dynamics play out.
00:17:50.888 - 00:18:04.844, Speaker B: Yeah. Honestly, like, if your project gets hit by this and the people actually manage to do a prisoner's dilemma experiment where nobody defects, you have an amazing community. I don't even know that you need the money. Like, your community is incredible.
00:18:05.184 - 00:19:07.122, Speaker A: Yeah. It's also, you know, it's worth noting that for the more successful projects out there, they have made many multiples of the initial mint revenue on secondary sale royalties. So it's kind of this interesting dynamic where you really want to bring the strongest community possible into an NFT project, but at the same time, you need to fund appropriately for whatever your medium term goals are to make sure you can actually deliver on any roadmap you've sort of laid out as a project, which is really interesting. So when we're looking at some of the underlying architecture here and how it interfaces with Metaplex. I know there's a whole bunch of work on Metaplex that's been rebuilding a lot of the way that some of these contracts work. There's a whole expansion of what's possible on Metaplex coming soon. Austin, how are you thinking about additional tooling, like Strada and other types of partnerships that will make it easier for a lot of this work that's being done to actually be deployed and usable? The difference between reference implementation engineering and actually production engineering, I think on a.
00:19:07.138 - 00:20:24.558, Speaker C: Case by case basis, we always look at where we can stay generic and composable, meaning one contract calls into the metaplex contracts, and the metaplex contracts stay as this, like, secure core that, you know, we audit very frequently and, you know, we're taking care of all that nonsense for the community. But in other cases, we identify a piece of technology that's really good, and the composable way of doing it doesn't give us the guarantees necessarily that we want. And so we look at a deeper level of integration. The recent gains in, like, shipping velocity that metaplex is getting are coming more from, like, Ci, CD and, like, you know, looking at ways to improve our software stability so we are not scared to ship. And I think that's what Metaplex is moving into as we're stabilizing and as we're trying to remain the base infrastructure for NFTs, as well as move into some exciting new landscapes. So with this specifically, we do have some big changes coming to canning machines soon. We have some big changes coming to optional changes for everyone coming soon.
00:20:24.558 - 00:20:44.376, Speaker C: But this one here falls right in line with our anti botting work. And so we're heavily invested in making this as deep of an integration as it needs to be and shipping it as soon as possible, as well as shipping it not just in the contract level, but shipping it in our UIs and Clis that are coming up or are out.
00:20:44.480 - 00:21:28.564, Speaker A: Yeah. Interesting. So I'd actually love to dig in a little bit more on how you're thinking about multiple layers of contracts or interoperable contracts that all can, I guess, give optionality in terms of how someone wants to deploy something. What are those different components, and how are you thinking about, like, so classically, every time you have a contract, talk to another contract, you've created an attack vector. Right. This is like most of the hacks that you see across Defi and on Solana and on other places in Solana are non validated fields, right. There's some ability for someone to inject something into the contract at a point that someone thought wasn't injectable, that ends up creating an outcome that's not desirable for the users of that protocol or that contract.
00:21:28.564 - 00:21:53.776, Speaker A: That's like a very standard attack vector. So not to go too far into the security of this, because of course that may be a separate conversation, but when you're thinking about that sort of multiple contract architecture, talking back to one central contract, what are the types of things you are thinking about, or the metaplex protocol is really thinking about from an architecture standpoint to make that secure, stable, but also upgradable and able to respond to the needs of the community quickly?
00:21:53.960 - 00:23:04.648, Speaker C: Yeah, that's a great question. So I do believe it does depend on what the contract does in a large part. But generically, when we think about web two land, when we've all created public APIs that take in user input, we can think about those as if they're analogous to we're allowing someone to direct their digital plumbing pipe at our digital plumbing pipe, to use the euphemism or the saying that we're just all digital plumbers. I think I like that. One of the ways that we approach this is just being extremely careful on validating the input and being very restrictive with what specific instructions and what specific things a transaction can do when calling into our contracts. So for example, with candy machine, although it is not as composable as other programs may be, we restrict the specific programs that can call out to Kenya machine and we restrict what they can do. We look at the instruction data using the instruction sysvar.
00:23:04.648 - 00:24:19.966, Speaker C: For those who are non technical, that just means we can inside of the instruction or inside of the program, we can look at the instructions that are coming in and we can validate the input that's coming in. But for other programs such as auction house, we actually have purpose built it to be composed over. And the way that we handle that is by bringing all the things that we want to make sure always stay secure into the contract. So the token account creation, the mint creation, for example, the transfers, all of those are in the core auction house transaction protocol. But we've created this other system of composability called auctioneer, where people can put their additional logic, such as token gating, timed auctions, even dynamic priced auctions via strata can be done at that layer. So like I've said, in summary, it does depend on the contract for candy machine because it's such a target for bots. We are very restrictive, but we hope to find additional ways to loosen those things to allow more contracts to compose over it while still getting more bot anti botting guarantees.
00:24:20.150 - 00:25:04.836, Speaker A: It's kind of an interesting question here. When you think about on most layer ones or L2 s, the implementation of an NFT is something that's sort of done, I guess you call it, at the l one or l two level, at the protocol level, as opposed to at the application level. Metaplex is a little bit different in its architecture. The tokens that are built are fundamentally still SPL compatible tokens, and they're built more like an application level. And by application, I mean it's not hard coded into the base Solana code. It's actually running on top of it, which is a little bit different of an architecture than you see on something like Ethereum. What are the both advantages and challenges that both of you have run into because of that difference in architecture?
00:25:04.980 - 00:25:23.106, Speaker B: Yeah, so I did a deep dive at one point on composability on Solana versus ethanol. Fundamentally, the NFTs on ETH and even the tokens that are on ETH are just following an interface. So it looks a lot like interface extension. I'm going to get real deep in engineering if I don't be careful here.
00:25:23.170 - 00:25:26.034, Speaker A: No, no, no, let's do it. This is the back half of the podcast.
00:25:26.194 - 00:26:04.534, Speaker B: Cool. Okay. Yeah, so it looks a lot like interface extension and classical, like object oriented programming. So you think like Java is kind of the, the big example of object oriented programming. Now, Solana actually ends up looking a lot more like functional programming, where you've got these contract endpoints that are effectively like functions that operate over some state and then output a state, and then the next function can take that state and do something with it. Now, like a lot of people will tell you when they're learning functional programming coming from object oriented programming, it's scarier at first. It's like chewing glass.
00:26:04.534 - 00:26:41.912, Speaker B: It's a little bit more complicated, but there's a lot more that you can do with it. My example of composability actually is the current state of the integration with metaplex, where you talk about how there are different security vulnerabilities with checks. But a token is the absolute interface between us and metaplex, and that's the only interface. The single check is whether or not you have the token that allows you to mint this candy machine. And we just output that token. So we are a function that takes in some soul and outputs a token. They are a function that takes in a token and outputs an NFT.
00:26:41.912 - 00:26:58.888, Speaker B: And actually, they don't have to know about each other at all. It's only the user interface that knows about it. So this is kind of how we generally deal with composability on Solana, and why I like this model a little bit better, but I am a little bit of a functional programming Maxi Austin, what about you?
00:26:59.016 - 00:27:44.324, Speaker C: Yes, I believe that the metaplex model for NFTs is actually quite brilliant. And I'll talk about the pros first and maybe the cons second. I believe one of the reasons for our enormous growth is because our contracts are like APIs. You don't need to deploy your own contract. You don't need to manage that. You don't need to have everything that can be known about your implementation done ahead of time, and then deploy an immutable contract. You can iterate and fail and try again and do new things on top of our programs without having to, one, manage the security of the program two, without having to really be an expert.
00:27:44.324 - 00:28:33.540, Speaker C: And I know that you don't have to be an expert to launch an ethereum NFT series because there's some great tools. But I think that's one of the reasons people choose Solana. Devs choose Solana. Creators choose Solana to run their NFT projects is because the metaplex contracts were brilliantly designed as APIs, whereas they could have been designed in an interface model. Now, the cons of that are the metaplex development team now needs to look at backward compatibility every single day. Any change that we make, we have to micromanage that aspect all the time because we don't want to break anybody's use of the system. And through our Dao, you know, we need to ensure that what we're doing is reflective of what the community wants.
00:28:33.540 - 00:29:06.964, Speaker C: So another con would be that some people see it as less decentralized. But in reality, because it's a community project, it doesn't seem so decentralized when you can build right on top of it and do whatever you need to. Because we try to keep the protocol light and do less things, I see that we can move into both areas. We can produce an interface like system while getting this contracts as API feel. And I think that's some of the backbone of some things that you'll see coming out of metaplex soon.
00:29:07.304 - 00:29:44.374, Speaker A: So when you think about something like backwards compatibility, what is metaplex see as its sort of role and responsibility there? Right? So famously, for a number of years, Android had like seven different versions of the Android API that Google had to support because folks just would not update their apps and Windows still has backwards compatibility with like stuff that was probably about when most of us were born. What are you guys thinking about when you look at that sort of backwards compatibility and how long or what kind of functionality needs to persist for x amount of time.
00:29:44.784 - 00:30:32.306, Speaker C: So what we try to do is never break you unless it's security related. If it's security related, we fix it as soon as we can and we announce as quickly and as widely as we can. That hasn't happened very often. And currently we think that we kind of take the semantic versioning approach where we will give you a long amount of time. Now, we don't have a rigorous set amount of time yet, very new as a project if you think about it, but we will always provide you a new instruction and deprecate the old instruction. And it works perfectly fine for a long time, and it's very rare. In fact, it's only happened once, where we will remove old instructions.
00:30:32.306 - 00:31:16.060, Speaker C: Part of that is looking at our contracts as APIs and when you look at microservice patterns, because that's how we think about them, our contracts are microservices. You know, look at the traffic of your instruction. If you're seeing it, the traffic go down, people have moved to the other one, you're in safe territory to start announcing that, hey, we're going to start moving on from this specific instruction. But if you see it holding steady, that's a good signal from your community that that thing still needs to live or you need to educate and do more work. And that's how we'd like to see it. I think in the future we'll see probably more rigorous guidelines around how long we're going to keep things out. But right now we'd be nothing without the people using it.
00:31:16.060 - 00:31:21.644, Speaker C: So they're our top priority. When we're shipping new things, we don't want to break anyone.
00:31:21.804 - 00:32:21.608, Speaker B: Yeah, I think at least how we've been approaching it with strata is that I am very, very bearish on the idea that I'm never going to have to change anything. And so actually every one of our smart contract endpoints, every one of our arguments, every one of our piece of state has a v zero next to it. Some of them actually have a v one already then in SDK land. So like in JavaScript, we wrap these calls with things that don't include v zero, and we wrap them in interfaces such that if we ever have to change anything, we just bump it to v one at the protocol level, change the interfaces, leave the v zero endpoints around for a while and then, like Austin said, watch the traffic and then slowly deprecate them. But yeah, I mean, I think you kind of have to accept that these things are living, breathing things and like most APIs, you just have to version them. Now, a lot of people who don't have v zero next to their things, don't worry, you can put v one next to anything. V zero is just the lack of a tag.
00:32:21.608 - 00:32:22.616, Speaker B: It's okay.
00:32:22.720 - 00:32:37.800, Speaker A: So all of this depends, of course, on creators and people launching NFT projects, actually adopting and using the dynamic pricing tools. What's your pitch for? Why someone who's launching an NFT project should do it this way as opposed to doing it the way that's currently done?
00:32:37.912 - 00:33:32.330, Speaker B: Yeah, so one of the big things, I mean, even if you like, watch Frank, he is talking all the time about how he wants people who are long term as project. He doesn't want paper hands, he doesn't want flippers, right? So right off the gate, you've got to acknowledge that having people that are just buying the project to flip it immediately aren't really good for your project long term anyway. I mean, if you were going to overprice your fixed price mint, you just weren't going to sell out. And so this will help you sell out, which is ideally what you want, right? Because you're picking the quantity of the mint so that you have a certain size of community. Now, if you had underpriced your fixed price mint, this actually means that you're going to get more funding to do what you want to do. And that's what matters, is that you can actually execute on your roadmap. Now, it's not like that price discovery isn't happening, right? Like it is still happening.
00:33:32.330 - 00:33:49.438, Speaker B: If you price your mint at two Sol and the NFT is actually worth ten Sol, it just drives up to ten sol on the secondary. But you know who makes that money? People who are flipping it and don't care about the project. So I would rather have that money go to the team than people who are flipping it any day of the week.
00:33:49.606 - 00:33:54.766, Speaker A: I'd love to hear from the metaplex side what the pitch is to use it that isn't just, it doesn't break the network.
00:33:54.910 - 00:33:56.074, Speaker C: Then I got nothing.
00:33:56.614 - 00:34:27.379, Speaker A: Because this is like, the thing is, one of the things about crypto is we have to assume everyone is a evil, self interested actor at all times who cares primarily about what they're trying to accomplish from a financial standpoint and isn't a altruistic actor trying to make the world's best decentralized computing environment possible, or else all of the assumptions of how blockchain works start to break down. So I think that's kind of one of those questions that if either of you have something addressing that sort of side of things, and yeah, totally, I'll.
00:34:27.411 - 00:35:36.496, Speaker C: Go with Metaplex's side of why I use dynamic price mint. So from the metaplex side, we realize that canyon machine has been bought it so badly and we want to increase fairness for the collectors, creators and the community. Just like Noah said earlier, we want to incentivize long term holders, people to be a part of the project because NFTs are showing us they're more about community than they are really, like a financial mechanism. They are a financial mechanism, but they've exposed this incredible new psychological phenomenon for collectors. We've seen click farms and bots and extensions, not even if it hurts the network, but just hurting the experience. So one way that dynamic price mint helps is by making these click farms and botters have to think twice, have to actually do some calculation, and have to do it in a fast and real time manner. So this helps them be able to take part in the project even if they didn't get into the discords or other things like that at the right time.
00:35:36.496 - 00:36:00.882, Speaker C: It's also going to help us move past this whole allow list trend in the community where you have to do all these specific things to get a spot, and then you get a spot and you get a chance to mint, but then you don't actually get to mint. And so hopefully this makes the work that's required just being a part of the community and having the desire and the funds to to mint.
00:36:00.978 - 00:36:01.642, Speaker B: Well said.
00:36:01.738 - 00:36:21.818, Speaker A: Awesome. Well, I think that does it for today. Thank you both for joining us to talk about this new launch of a strata support for dynamic pricing on Metaplex and creating new tools for creators to be able to actually implement this. If folks want to read more about it or want to consider using this for their next drop, where should they go to find more information?
00:36:21.986 - 00:36:59.096, Speaker B: Yeah, so for now it's actually if you go to app dot strataprotocol.com and you have a candy machine id, you can launch one directly right there. We also have on docs dot strataprotocol.com comma. We have extensive documentation on how to set up one of these dynamic pricing mints and a YouTube video on how to do one and even do one with a whitelist in the future. We hope that this is directly on Metaplex's documentation and more built as a first class citizen into the candy machine and Metaplex's new uis such that you don't need to be bouncing around from strata to Metaplex. It's just there for you.
00:36:59.190 - 00:37:10.084, Speaker C: Yeah, 100%. Stay tuned on the Metaplex docs and on our blog, Twitter radio station. Oh wait, we don't have a radio station yet. Yet. Great.
00:37:10.244 - 00:37:12.660, Speaker A: Well, thank you both for joining us today.
00:37:12.852 - 00:37:13.844, Speaker C: Thank you, Austin.
00:37:13.924 - 00:37:14.604, Speaker B: Thanks for having us.
