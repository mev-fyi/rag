00:00:03.320 - 00:00:03.936, Speaker A: Hello.
00:00:04.062 - 00:00:05.034, Speaker B: Thank you.
00:00:07.214 - 00:00:07.662, Speaker A: Yeah.
00:00:07.718 - 00:00:48.084, Speaker B: So I guess for context, this presentation, we do a lot of work in the Solana ecosystem. We do a lot of smart contract audits, but also we try to help out when things go wrong. And hopefully, usually, actually, since now they've not been products that we've audited, thankfully. But when things do go wrong and people do get hacked, we try to be there to also help respond. And I thought it'd be interesting to throw together a presentation to kind of talk about the patterns that we notice as we look to these products that have gotten hacked, and hopefully throw together some concluding thoughts for how products can avoid getting hacked and what things to kind of look out for.
00:00:49.744 - 00:00:50.160, Speaker A: Yeah.
00:00:50.192 - 00:01:19.458, Speaker B: So as a brief agenda, I'm going to give a summary of sauna hacks since the start of this year. There's a really big one in February. Since then, there's been a couple other comparatively smaller ones, but still quite large relative to other incidents. Deep dive into two hacks, which I thought were particularly interesting. One is nirvana. The other would be this market manipulation that we've seen lately. And then finally, some concluding thoughts.
00:01:19.458 - 00:01:23.164, Speaker B: Overall, pretty short presentation. Hoping to keep it nice and sweet.
00:01:24.584 - 00:01:25.008, Speaker A: Yeah.
00:01:25.056 - 00:01:59.054, Speaker B: So this is kind of a timeline of all the major incidents on Solana. We saw warm hole with like $320 million, I think cashier was $60 million at some point. And then there's a couple other, like, under $10 million hacks in the middle. Then. I mean, we saw, I think some people didn't really want to determine a hack, but there was, you know, mango, which was the result of market mutilation. They underpriced or they miss put collateral parameters, and they listed low liquidity collateral. And then I think at the very end, we actually stuck this on.
00:01:59.054 - 00:02:41.294, Speaker B: We wrote the presentation, and then we edited it a few days ago. There was one, I think it was like two or three days ago, Soland, close to the start of breakpoint. We were hoping that there weren't going to be any hacks at breakpoint, but unfortunately, Soland snuck in there $1.2 million, you know, not, not a huge deal or, you know, relatively speaking. But yeah, and I think also there was the slope incident that we helped respond to, which was, you know, I guess, different from smart contract hacks, but still probably something worth noting about. Yeah, basically, there's been a lot of money lost through exploits. I think if you sum it all up, more than $500 million.
00:02:41.294 - 00:03:25.878, Speaker B: I think, actually, I was on another panel where we're talking about this, and one funny question we had was, is the amount of money that we lost in Defi hacks more than the TVL of Solana? And I think it's not true right now. I think we've lost slightly less than the TFL of Solana still. But it's kind of worrying, right? It's like the magnitude of these things. After mango happened with $100 million, some market makers, some market participants got really scared and they pulled out a lot of TVL. Right. So there's a lot of peripheral effects from these incidents that affect Solana as an ecosystem beyond just the massive loss of capital. If I remember correctly, after the mango incident happened, Solana TVel dropped by around 400 million.
00:03:25.878 - 00:03:47.084, Speaker B: So there was an application factor of around four times over the hack amount and the hack amount, much of which was actually returned and the damage to Solano TVL. So I think this is something that is probably actually pretty interesting. Worth taking a look at. Yeah, let's take a look at Nirvana and mango markets.
00:03:48.464 - 00:03:48.776, Speaker A: Yeah.
00:03:48.800 - 00:04:31.476, Speaker B: So the first one, Nirvana, I think it was, yeah. Comparatively, this was a pretty interesting hack, because as we were responding to this, we noticed that it was like a pretty non trivial hack, actually, that happened. So the root cause of the exploit actually involved calling a function with a specially constructed parameter. So in this case, they had, I believe it was like the third parameter of the swap function, took in a price hint, and then if you set that price hint to zero, you were able to manipulate the swap price. So I guess that's a little bit technical, but the TLDR of this is that it actually required a non trivial level of understanding of the project in order to perform this exploit.
00:04:31.490 - 00:04:32.084, Speaker A: Exploit.
00:04:33.304 - 00:05:09.604, Speaker B: And Nirvana was also closed source, which was also pretty worrying. Right. So I think kind of Nirvana was potentially banking on the fact that, you know, they were closed source, they didn't really need to do like a full comprehensive audit, and then they were able to, you know, scoot away. But I think Nirvana is, like one of the first instances. I believe there was one before Nirvana, actually. But Nirvana was one of the first instances of a closed source program on Solana getting hacked. And I think this is a really pivotal moment because before, like it or not, a lot of people on Solana kind of assumed that, oh, yeah, if your program is closed source, you don't actually need to worry about it too much.
00:05:09.604 - 00:05:33.718, Speaker B: You'll probably be safe. Decompiling Solana programs is pretty hard, even for people with a lot of expertise. Right. Like, we published a blog post on decompiling Solana programs through binary Ninja. But it was a really non trivial process. It required a lot of engineering effort to actually get get working. And we're pretty confident still, even with our level of research, that it would take a lot of time to decompile a standard Solana program.
00:05:33.718 - 00:06:08.486, Speaker B: I think this Nirvana exploit really showed that it actually is possible, even if your program is closed source. We don't think the attacker actually decompiled the program. We think what probably happened is they did some sort of side channel analysis. So they used SDK, for example, and then played around with the numbers and noticed that when you pass in this zero price parameter, you're able to affect the swap price. Yeah, I think this is kind of an example of how even if your program is closed source, maybe there's a way to break it and eventually people will notice. In this case, it was actually for a relatively small amount of money. I believe it was definitely under 10 million.
00:06:08.486 - 00:06:28.814, Speaker B: I forgot the exact amount for what it was. I think this is hopefully a warning sign to developers. The next one would be mango. So if you guys aren't aware, mango was a really big incident on Solana, I think around a month ago. All these timelines kind of blend together because there's a lot of hacks, unfortunately.
00:06:29.634 - 00:06:30.074, Speaker A: Yeah.
00:06:30.114 - 00:07:12.458, Speaker B: So the TLDR of this was they listed a low liquidity asset, the mango token itself, the mango governance token. On Mango, the attacker was able to perform a market revelation attack to drastically increase the price of mango. And then due to that, they borrowed out all of the reserves. So I think the total amount lost was $100 million. After some negotiations with the attacker, I forgot exactly how much. I know the mango dao is fully collateralized, so all people who deposited money were made whole, but the mango treasury, probably middle eight figures, was completely drained. Um, so, yeah, I think this is really, really bad.
00:07:12.458 - 00:07:33.850, Speaker B: There was a lot of money lost to this. Um, and I think this kind of shows, or it kind of unveiled, revealed a flaw in, like, the slant ecosystem. Right. Like, a lot of projects similar to mango didn't really think that there would be attackers with large amounts of collateral willing to manipulate the market. Um, they didn't. They didn't really think that this was, you know, a viable attack vector. Right.
00:07:33.850 - 00:08:01.458, Speaker B: When designing these programs, even as auditors, we read the code, but sometimes we're not as involved in the hyper parameter choices. Right. We don't really comment on what LTV you set for your collateral ratios. We don't really comment what types of collateral you list. And I think as auditors, it's kind of. We're becoming increasingly aware that it's kind of our responsibility to also look at this stuff. We also need to be thinking about the economic side effects of.
00:08:01.458 - 00:08:21.870, Speaker B: Of what is actually happening in the real world. Right. And I'd also say that this is probably something that is ongoing. When they initially listed the mango token, there was a lot more liquidity. It was a bull market. There was probably very active market makers providing liquidity, so this sort of attack would be much harder to perform. On the other hand, they kind of just kept it around.
00:08:21.870 - 00:09:02.374, Speaker B: They didn't really tune the parameters. And unfortunately, when the bear market hit, all of that liquidity dried up. It became a lot easier to spend. I forgot, I forgot exactly how much they spent, but I think it was low. Six figures, actually. So, like, a really small amount compared to the hack itself, spend a comparatively quite small amount of money to drive up the price and then borrow out the mango reserves and, yeah, I guess another example of how people are, like, how this is affecting everyone is. Soland a couple days ago, actually got hit with a very similar incident where the attacker manipulated the price of Hubble, or USDH, on the sabre stable pool.
00:09:02.374 - 00:09:08.514, Speaker B: So it was like a USD USDH stable pool on sabre. It had around $100,000 of liquidity, I believe.
00:09:09.054 - 00:09:09.430, Speaker A: Yeah.
00:09:09.462 - 00:09:46.054, Speaker B: And then attackers able to swap through it, drive up the price by eight times, and borrow out around a couple, I think, like $1.2 million of stable coins from solon. So, as a note, you know, this didn't hit solon's main pools. Their main pools were totally. It was like one of the side pools, but still, I think it's like, this shows that people are willing to engage in this kind of market manipulation attacks. Attackers with relatively large amounts of capital, hundreds of thousands to millions of dollars, are willing to engage in this kind of stuff. And, yeah, I think it's like a huge blind spot in the salon ecosystem.
00:09:46.054 - 00:09:58.934, Speaker B: I know for sure that we've been talking too many teams, um, who've been kind of concerned about that, trying to advise them more on the parameter choices. Um, and, yeah, I think that's something that probably, as developers, hopefully you guys are thinking about as well.
00:09:59.674 - 00:10:00.098, Speaker A: Yeah.
00:10:00.146 - 00:10:24.688, Speaker B: Concluding thoughts? Um, yeah, I think three things here. One, attackers are getting, you know, a lot more sophisticated. We saw, I. I believe the first closed source exploits on Solana, just keeping your program closed source isn't going to be enough. Um, we also saw Nirvana is also a non account issue. So it was not just passing in the wrong account, it was actually interacting with the logic of the account. So, yeah, attackers are getting a lot more sophisticated.
00:10:24.688 - 00:11:00.540, Speaker B: They're actually reading your code, and they're going to be able to perform exploits if they do exist. The second, I think, is this shared security assumption. In the Solana ecosystem, mango and Soland were hit because they were probably the largest by TVL. We know for sure that other lending protocols that we've talked to are also concerned with the same scenarios. They probably would have been affected. Luckily for them, the bigger ones got hit first. But, yeah, it's like well capitalized attackers with large amounts of collateral are willing to manipulate the market to try to drain collateral.
00:11:00.540 - 00:11:11.140, Speaker B: And whether or not this is a hack is, I think, semantics. I think for protocol developers, it's really, you can lose a lot of money if you don't pay attention to this. So you should probably pay attention. Yeah. And then last one.
00:11:11.172 - 00:11:11.452, Speaker A: Yeah.
00:11:11.508 - 00:11:35.394, Speaker B: Being closed source isn't enough. I think Solana as an ecosystem is pretty closed source. A lot of products that we work with, try to, for security reasons, which I think is probably true, or I think being closed source is probably a decent mitigation for at least some period of time. I think this is an indication that it's not going to be a mitigation for a longer period of time, that eventually, at some point, you're actually going to have to reason about your code and make sure that it's actually secure here.
00:11:36.254 - 00:11:36.958, Speaker A: Yeah.
00:11:37.086 - 00:12:01.022, Speaker B: Thank you. I think kind of as another closing word, one thing that I'd say is we're pretty active in the ecosystem. We actually do care about these projects. If your project gets hit by one of these incidents, as a general rule of thumb, we don't bill for actually any of the time that we spend doing incident response. If you get hacked, we're not going to try to sell you any hours. And hopefully this never happens to you guys. But if it does, please reach out to us.
00:12:01.022 - 00:12:27.714, Speaker B: We'd love to help. We want to make sure that both for you and, like, the health of the ecosystem that, you know, Solana actually does stay safe. And, yeah, we've worked with, we've worked through a lot of the hacks, I think most of the hacks on the timeline we've responded to in some fashion. So, yeah, hopefully, hopefully we never have to respond to any of your projects. But if it does happen, feel free to ping me on that telegram. Oh, I guess I don't have my telegram on there. Yeah, feel free to ping me, like, either via email or on Twitter.
00:12:28.814 - 00:12:29.190, Speaker A: Yeah.
00:12:29.222 - 00:12:30.014, Speaker B: And I think that's it for me?
