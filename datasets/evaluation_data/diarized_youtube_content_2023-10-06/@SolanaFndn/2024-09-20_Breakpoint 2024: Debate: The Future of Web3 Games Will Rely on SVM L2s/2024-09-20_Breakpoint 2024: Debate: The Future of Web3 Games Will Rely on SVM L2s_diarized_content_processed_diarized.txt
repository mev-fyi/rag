00:00:04.440 - 00:00:18.937, Speaker A: So before we begin the debate, I do want to ask both the contenders here to kind of just give an overview of their product and what they're working on to get the context for everyone in the audience on where they come from before we actually go into the debate itself. Do you want to start Chris? Sure.
00:00:19.081 - 00:00:47.215, Speaker B: Hi everyone, my name is Chris Zhu. I am the co founder and CEO of Sonic svm. Sonic SVM is a gaming SVM built on top of the base layer. Allows for harmonious synchronization between our rollup or SVM or network extension, whatever you want to call it, back to the base layer very, very fast. And we're building a gaming ecosystem that allows for any Solana game to go to market, build scale seamlessly and that is our product.
00:00:47.555 - 00:00:49.175, Speaker A: Andrea, what are you working on?
00:00:49.635 - 00:01:18.091, Speaker C: Hi, I'm the CEO and co founder of MagicBlock. Magiblock is our high performance game engine for fully on chain games and fully on chain applications on Solana. Our core products are ephemeral rollups. We essentially allow developers to build on Solana and never leave the chain, but tap on demand into these fast SVM instances that are deployed all over the world and give the same benefit of rollups really or upchain without ever needing.
00:01:18.123 - 00:01:33.985, Speaker A: To leave the chain. Cool, thank you. So Andre, I'm going to start with you. We're going to start with just asking about why does or like your opening sentiment on do games need an L2 on Solana?
00:01:35.645 - 00:02:24.962, Speaker C: Well, clearly we believe that they don't believe an L2 at least in the shape or form that L2s are commonly kind of conc. What we think though is that games clearly need some different properties compared to what the general VM that Solana offer can give them. And so primarily latency is one of the biggest concern when it comes to gaming, especially if you want to enable fast paced multiplayer games. Another one is related to the cost of transaction themselves or even pre compiles or customization at the runtime level. Typically game engine offer loops for developers. You don't get loops natively in the Solana runtime. So there's a couple of properties that are very helpful when it comes to gaming and that Solana doesn't have.
00:02:24.962 - 00:02:35.454, Speaker C: So there's definitely properties that we think are needed. We just don't think that L tools and traditional L tools are a good fit for that.
00:02:35.754 - 00:02:38.795, Speaker A: Chris, do we need an L2 for games on Solana?
00:02:39.495 - 00:03:44.505, Speaker B: Very obviously we do. I think to unlock the full potential of Solana gaming, it is necessary to have a gaming ecosystem in our case a gaming SVM that is designated to the growth of all Solana games. I think traditional lt, for example actually is focused on increasing performance and speed, lowering cost. And I don't think that should be the necessity for, for Solana lt. I think Solana ltus can actually focus on use case specific configurations, customizations as well as the general ecosystem building for specific use cases and in our case gaming. And it is very reasonable to have a craft or tailor made experience for each one of these games to build on top of a SVM gaming chain, just as some problems that it could potentially solve. Sonic existed because we believe that one, games need scaling solutions to avoid hotspots for low transaction, low economic transaction values and keep the base layer for high value transactions.
00:03:44.505 - 00:04:26.975, Speaker B: And 2 Solana allows us to have an atomic SVM, meaning that we can have. We can get rid of the redeployment process for EVM L2s. That was a very, very big. And some might argue that liquidity is fragmented on top of solana if there's L2s. But if we look at the total market cap of all games, including the tokens NFTs added together without a designated gaming chain helping these games go to market launch their assets, that total cap is actually very small. So we actually think about it as a use case to inject the liquidity for gaming into the chain as opposed to fragmentation of the chain itself. I can talk about this for.
00:04:27.875 - 00:04:44.051, Speaker A: So you brought up a couple of interesting points that I want to kind of drill into. One of them was. Okay, so let's start with this question. Can you give me an example of a game that is made better because it's on L2, whether it's Sonic or something else, than it would be on the base L1?
00:04:44.203 - 00:04:49.303, Speaker B: Yeah. So I think made better itself. We can define that a little bit. Right.
00:04:49.439 - 00:04:55.271, Speaker A: Why do games need. The way I would like to define it is the game developers are going to make more money.
00:04:55.423 - 00:05:32.301, Speaker B: Yeah. Then a lot of examples. If we look at what Ronin does very well, for example Axie Infinity, maybe some of you already know about this game. Essentially after Axie's success, Ronin was able to capture the liquidity of the players and keep them in a decentralized community of super fans for this game. But they're also open to exploring other games. So when we talk about the generalized L1, when people's attention are not on specific games or gaming itself, it's actually very easily dispersed to financial assets and so forth. One example of this recently is that we're looking at Space Nation, all immutable X.
00:05:32.301 - 00:06:20.977, Speaker B: We're trying to bring them into the Solana ecosystem. Huge MMORPG by one of the best producers. They look at this metric called on chain velocity of money. Where initially, if you print money In a traditional Web2 game for MMORPG, it might only flow seven times a day or eight times a day. But after they brought on chain, because the take rate actually decreases, the users can actually sell their assets, the velocity doubled almost to 12:13 and the take rate stayed lower while the users actually had more enjoyment in actually trading the asset and having the metagame. So the developers actually ended up making more money even though the users gave up less. So why does that happen is because the economy is actually open and they're bringing more velocity to the money supply.
00:06:21.081 - 00:06:51.771, Speaker A: Okay, so I want to go to you, Andrea, to ask about something that Chris brought up. Chris just talked about trading assets on chain, but I know from our conversations, the stuff that you guys work on, you focus a lot on fully on chain games, working on primitives beyond digital asset training. Can you talk to me about any kind of games that are made better without digital assets and any other kind of primitive that they could be using and why they might exist on L1 or on your ephemeral roll ups?
00:06:51.923 - 00:07:28.099, Speaker C: Sure, absolutely. I think there's an important distinction between games and fully on chain games. Because when it comes to games, I think there's a net negative actually in building some of those games on Unel 2. When it comes to fully on chain games, it's absolutely impossible to build those entirely on an L1 without any sort of support. The reason why I'm thinking this way is because when Chris is talking about value accrual for developers, he's not really talking and bringing Ronin as an example. He's not really talking about making money for developers. He's talking about Ronin making a lot of money, which is, you know, true.
00:07:28.099 - 00:08:17.519, Speaker C: They're accruing a lot of values in their own chain and you cannot do that if you're on Solana. And also when it comes to bringing more liquidity, you're bringing more liquidity to your own chain, not to Solana. So games are actually worse off pol2 because they don't have payments, for example, they don't have native. One of the simplest form of benefit that Web3 can offer to games. When it comes to specifically, I think there is an argument that you can make that having your own L2 is actually better because at that point you might need to Tune the block time. You might need to introduce other form of customization at the runtime level, as you were saying, that are not available on Solana. And for those sort of games, I think a solution that resemble an upchain could make more sense.
00:08:17.687 - 00:08:24.881, Speaker A: Okay, so let me clarify that real quick. You're saying that for fully on chain games we might actually do need L2s. Is that a correct statement?
00:08:24.993 - 00:08:31.745, Speaker C: Yeah, I think for many jar they need some sort of scalability solution that goes beyond.
00:08:31.865 - 00:08:34.005, Speaker A: Is it a scalability solution, L2?
00:08:34.865 - 00:08:55.969, Speaker C: That's a good question. Thanks for asking. So we think there's a better way to build L2 which are ephemeral. And that's what we're focusing on. So the idea behind an ephemeral roll up is that you're not really moving the state into a separate chain. You're not really building an L2. L2 is not real, it's just a mirror of the copy.
00:08:55.969 - 00:09:25.087, Speaker C: It's a copy of the state that it exists on chain. So you benefit from persistent, you benefit from composability, you benefit from liquidity and from the incredible ecosystem that is Solana. But you can also tap into this customization at the runtime level. You can also tap into these faster performances. You can co locate the node to reduce the latency. You basically have the exact same benefit of an L2, but without having those same problems in terms of fragmentation. And so we have to define what an L2 is.
00:09:25.087 - 00:09:45.777, Speaker C: We argue that ephemeral rollups are not really an L2 because they are not real, they are ephemeral. You cannot create new state there. But when it comes to bringing transaction in a way into these different ecosystems, into these different runtimes, totally for fully on chain games, Solana I think is not enough.
00:09:45.961 - 00:10:19.225, Speaker A: Okay, so Andrea just brought up a very technical point on why fully on chain games might be made better on L2s. What I want to challenge you on, Chris, and it's something that we talked about. You, you mentioned something about ecosystem growth and one of the things that you had mentioned was how do you do things like publishing deals, value capture, et cetera, token assurances, and bring that back to the games themselves. What about the SVM? What about an L2 SVM technologically makes any of the business stuff better?
00:10:20.205 - 00:10:21.157, Speaker B: Technologically?
00:10:21.261 - 00:10:35.573, Speaker A: Well, that's what I'm saying. Right. So if it wasn't a technological need for the SVM, couldn't you just do it on V1? If, if your argument is the L2 makes the business side better, can't we just do the business side on the L1.
00:10:35.629 - 00:11:19.825, Speaker B: Yeah. So I think theoretically speaking, maybe you could. I don't know. We think that it's a lot more reasonable for that to happen within a gaming ecosystem of a chain itself. The reason there is extent of alignment is the biggest and one of the largest problems to tackle when it comes to helping games publish or go to market. And games are businesses at the end of the day and the developers want to be able to acquire users and make money. So when we look at a contract that we sign and help these games go to market or publish on top of Sonic, one of the biggest problems that you would have On a generalized L1 is that you actually don't have protocols that are specifically serving gaming needs.
00:11:20.255 - 00:11:34.567, Speaker A: So let me challenge you on that. Why can't you just put those protocols on the L1 instead of on the L2? Like for example, you talk about incentive alignment. Assuming incentive alignment, something has to do with tokens. Why can't you issue those tokens on the L1? Why can't you?
00:11:34.751 - 00:11:52.333, Speaker B: So perfect question. You can introduce the token on the L1. Actually, we suggest our devs to keep their tokens on the L1 because SVM actually allows us to have a unified interface that allows base layer to communicate to the L2 or the rollup. And that is actually not previously seen on Ethereum.
00:11:52.389 - 00:11:52.629, Speaker A: Right.
00:11:52.677 - 00:12:39.565, Speaker B: Ethereum has different standards across different L2s and one of the biggest problem is that the liquidity doesn't have a home base, you know, to be shared. We can actually change that if we all agree that Solana itself is the base layer and the interoperability standard is the same by utilizing for example Anza's SVM API and then we just focus on execution. Now coming back to your question. Let's say a game is fully on chain. They are making money off of a take from the transactions or sharing a part of the generating gas or whatever. However, the game makes fee off of high number of transactions. How do you share that with Solana? To generalize at one, it is almost impossible for us to strike a custom deal with Solana if there is no on chain publishing entity for Solana itself.
00:12:39.565 - 00:12:45.165, Speaker B: And then the block space, there's economic value for the block space which should also be shared with the games.
00:12:45.325 - 00:12:59.065, Speaker A: Let's deep dive into that because I don't know if I quite understand that. So you're saying that you want to share value back to the L1. Isn't the L1 just making the value from transaction fees? Why do we need a special way to put value into the L1?
00:13:01.645 - 00:13:03.061, Speaker B: So when you say we want to.
00:13:03.093 - 00:13:07.623, Speaker A: Share value by game developers, game developers who are making.
00:13:07.759 - 00:13:16.015, Speaker B: So I'm saying that the game developers wants to share value off of all of the transaction fees that they're bringing to the L1 or to the chain itself.
00:13:16.095 - 00:13:23.807, Speaker A: But can't they do that by writing a smart contract that every time there's a transaction that goes through, some percentage goes to them as the take, but you can't.
00:13:23.871 - 00:13:26.135, Speaker B: One, you can't capture the gas itself.
00:13:26.255 - 00:13:26.967, Speaker A: Right.
00:13:27.151 - 00:14:31.321, Speaker B: And two, I think it's also very difficult for all of the other protocols, Dex marketplace included. So if you look at immutable access contracts, for example, we talked about this briefly, where when they're publishing a game, their ecosystem actually utilizes Uniswap for DEX or token swaps, and then they build out their own marketplace. So all of the on chain publishing deals that they actually do, their milestones are based on NFT volume. And that creates an adverse incentive for any game that doesn't necessarily need NFT trading volume to be very, very high to capture value. And Ronin, for example, as a gaming chain, does this better by having all of the necessary components, whether it be whitelisted or built by themselves, to be on top of the ecosystem. So that if you're an MMORPG and you have only fungible tokens, you can also capture value off of those DEX transactions. And we think that as a gaming chain, we can have all of those necessary pieces designed for these games and then also share that revenue or share that economic incentive back to those games.
00:14:31.321 - 00:14:41.177, Speaker B: Transaction fees are one example of that. But it's significantly harder to do on top of Solana L1. I'm not saying it's impossible. I haven't thought of a very good way to execute.
00:14:41.241 - 00:14:47.445, Speaker A: I mean, just instead of taking transaction fees, just take a cutoff transaction. Right. Like that's how we do composable instructions.
00:14:48.425 - 00:15:00.853, Speaker B: Yeah. So it's not just transaction features, it's also all of the protocols that's building on top of this chain. If it's not designed for the games for publishing, then it's very hard to convince all of these protocols to share all of those fees with the games.
00:15:00.949 - 00:15:31.345, Speaker A: Okay, Andrea, so Chris just talked a lot about this kind of composability, and you talked about composability in a very different way, which is games working with each other. So do you think there will ever be business cases in the same way that Chris is talking about where games. Or have you seen Any games that are like, hey, we want more business development done on the ephemeral roll up that we can't see, we don't see on the L2 or something like that.
00:15:31.845 - 00:16:26.695, Speaker C: So if you're talking from a publishing perspective, I think there's definitely value that we as a company can bring to games. But that's not the point of the technology that we're building. The point is that we allow them to partner with other ecosystem actors and get the benefit from them. A very clear example is a fully launching game that is being built right now with family rollups is built on Solana and therefore can compose with another attribution protocol that is built to bring players to other protocols. So what they can do is that they can have this referral on chain system where if, if you bring a friend, you're going to earn a cut of the fee that they're spending into the amount of money they're spending into the game. That is a very simple example of how powerful composability can be. And that is only possible because you can compose on Solana with the steel is available on Solana.
00:16:26.695 - 00:16:50.051, Speaker C: When it comes to cutting publishing deals, I don't think you have to really cut a deal with Solana if you are building a custom protocol. If you're building a custom marketplace on your chain, fine, you can do the same and you can share a fee with all the game developers that are building on you. So I think it's quite easy to redistribute value to game developers if that's the deal, if that's the biggest concern.
00:16:50.203 - 00:17:11.481, Speaker A: Right, but I think what Chris is trying to get at is that you have to go a step further. You can't just build a technology, you also have to help them with distribution. And as we know, crypto distribution is the name of the game right now. So how do you help with ephemeral roll ups? The same kind of distribution that Chris is talking about for those games that might build on that scale solution, sure.
00:17:11.513 - 00:17:23.245, Speaker C: But L2 doesn't give you any significant advantage in that you can do the exact same thing to help in distribution, to help in publishing and just stay on the L1. That's my main point.
00:17:24.185 - 00:17:25.673, Speaker B: Gotcha. All right.
00:17:25.689 - 00:17:35.447, Speaker A: In the last couple minutes, Chris, what about and address scaling solution is better for certain games that you might see in the ecosystem?
00:17:35.591 - 00:18:32.635, Speaker B: Yeah, so actually I think ephemeral rollup as a technology is super fascinating for super low latency needing on chain games. And if we're putting all of the states on chain, those are some of the use cases that as ephemeral rollup you can probably serve better. And the optimization on the validator side is probably also done very well. I haven't taken a look at the wide list of features recently, but I've heard great things from some of the teams building on top of it. And I do think that when we are working with some of the Solana native teams, they are obviously more inclined to tap into the liquidity of Solana and we've actually developed tech to build that interoperability layer just to be inspired by some of the Magic flaw features as well. So I think for the fully on chain teams that are native to Solana, maybe some of those games, if a lot of the states are all on chain, then it makes sense to build on Magic Block as well.
00:18:33.255 - 00:18:40.490, Speaker A: Andrea, what solutions or what games do you think would be better built on an L2 than on your scaling solution?
00:18:40.605 - 00:19:30.765, Speaker C: I think what L2 temporarily offer is cheaper fees just because they are less congested. And so initially if you want to up an ecosystem really, really fast, sometimes it's easier to just Deploy on an L2 because you have this sort of isolated environment and you don't have the same transaction activity or congestion that might happen on Solana. But I don't think that is a good long term solution. So I think that Sonic is doing a really good job in terms of helping from a business point of view the games and with publishing and with finding players and all of this stuff that is very important when it comes to Game Studio. But I don't think that is necessarily a technological advantage. It's more of a kind of business and ecosystem play that you guys are offering.
00:19:31.585 - 00:19:33.125, Speaker B: We will have a V tier.
00:19:35.105 - 00:19:47.793, Speaker A: Thank you guys for listening to this debate. And hopefully you all play games and if you don't play a game like play video games, it's a nice time, but thank you all for listening to us. And yeah, I don't know if there's another talk right after us or not.
00:19:47.849 - 00:19:48.785, Speaker B: Yeah, thank you, thank you.
