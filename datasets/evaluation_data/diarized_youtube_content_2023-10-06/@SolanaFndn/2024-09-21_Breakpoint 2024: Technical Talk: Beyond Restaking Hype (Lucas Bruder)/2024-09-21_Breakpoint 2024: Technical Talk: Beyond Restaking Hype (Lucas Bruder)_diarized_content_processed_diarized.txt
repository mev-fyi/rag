00:00:05.080 - 00:00:43.141, Speaker A: Hello everyone, my name is Luke Spurter. I'm a co founder of Jito Labs. I'm here to talk about restaking and moving beyond the hype and the implications of JITO restaking for Solana protocols. A little bit about myself. Some of you might know me as Buffaloo on Twitter, contributor to Solana Core. Between finding bug bounties in the Solana validator to contributing to Jito and building a lot of the MEV infra on Solana, my background is in computer engineering and firmware. So I'm going to talk a little bit about Solana.
00:00:43.141 - 00:01:18.075, Speaker A: Why are we here? Why do you guys like Solana? I think it's the best place for builders. Solana loves builders shared vision. You know, there's not a ton of politics on Salata. You know that everyone can get behind Anatoly's vision of propagating information at the speed of light around the world. Everyone's kind of rowing in the same direction towards the same thing. There's extremely rapid iteration. If you used the network a few months ago to using it today, it's like night and day.
00:01:18.075 - 00:01:53.415, Speaker A: There's been a ton of improvements at the network layer. You know, Fire Dancer is coming online or I guess it's online today on mainnet. So things are just moving very, very fast. You can do more on chain. Look at some of the order books on Solana that you know, you can't do that on Ethereum or some of the other networks. So because of this, all these things, Solana is the best network for builders. Now let me talk about stakenet and like I think this is like only possible on Solana protocol.
00:01:53.415 - 00:02:27.313, Speaker A: Stakenet is the brain of the JITO Soul stake pool. So maybe some of you saw last year we talked about stakenet and it's live today. It's been live on Solana for a few months now. And stakenet is responsible for operating the JITO Soul stake pool. And it's completely decentralized. It's running the state machine on Solana where it will delegate stake to different validators. If validators start performing poorly or there's better options, it will remove the stake and move it to a different validator.
00:02:27.313 - 00:02:48.867, Speaker A: All the scores and metrics that you see on the screen here, those are stored on Solana. So you can see this like bonk validator that JITO runs. You can see the score of 97.63. You can see all the MEV Commission scores. All this data is on Solana. Solana is the database. This other chart is the State machine.
00:02:48.867 - 00:03:19.975, Speaker A: So you can see if you go to jito.net, you can see this running. It will run and periodically rebound the stake pool. Stakenet's pretty cool, but there's some issues with it. You can see here, this is a. The X axis here is the epoch, the Solana epoch and the Y axis is just different properties of different fields. So you can see on the software version there's a few epochs where the version wasn't uploaded.
00:03:19.975 - 00:04:19.505, Speaker A: You can actually see the network on here going from one version to the next version and the upgrades of validators on the network. There's also been some bugs in the cranker where it will upload the wrong data on a permission feed. And a lot of the data on stakenet is available on chain, but there's a few things that aren't available on chain and so it's essentially a permission to Oracle. So yeah, there's better uptime. Would like to see better uptime on some of these things. If it's going to run a stake pool which currently today is roughly 13 million SOL and continue to grow, this data needs to be very reliable. There needs to be incentives for kind of cranking these keepers and there needs to be punishments if you upload the wrong data or you're late or your keeper goes down.
00:04:19.505 - 00:05:16.425, Speaker A: Yeah, jito, it's a pretty technical protocol between the mev, the liquid staking and now kind of the restaking and we have a few different products at various stages of decentralization. And we realized that there's kind of a common theme between a lot of these things and there's something missing that was required to decentralize things much more than they are today. And so this is the main reason why we created the restaking protocol. For those that don't know, restaking is essentially just the assets of. It's the process of staking assets to secure a network. And I put the RE here because JITO restaking lets you stake any asset. How does it work? So you have a few different parties in the restaking protocol that all kind of work together.
00:05:16.425 - 00:05:51.561, Speaker A: So you can think of networks. It's like a rule based protocol, protocol, decentralized. These can be running on Solana. The most obvious example here is an Oracle or perhaps like the stakenet keeper that I was just showing you. And this network defines the rules for how do rewards work, how are validators and operators punished? You have operators as well. Operators are running the software for the networks. This can be an L2, can be the keepers that I just mentioned.
00:05:51.561 - 00:06:25.427, Speaker A: And then you have stakers and these are the people that are staking to these operators. And one of the main things with restaking is that assets can be shared across multiple networks. So you can do shared, you can do isolated networks. The JITA restaking protocol is very customizable and very flexible. So yeah, JITO restaking, it's a multi asset restaking protocol for node consensus networks. It's SVM native, so it runs on Solana. Spent a lot of time optimizing the code.
00:06:25.427 - 00:06:52.451, Speaker A: A lot of zero copy and very efficient asset agnostic so you can use a variety of assets. Yesterday I was on stage with Jeremy announcing Renzo's easy usdc. So there will be networks that can work with usdc. You can stake that. And it's also very flexible. You can change the arrangements of networks, what assets you support. If you're building a network you can launch it with jitosoul or SOL or usdc.
00:06:52.451 - 00:07:28.837, Speaker A: Once your governance token is out, you can start to kind of move some of the security over to that. And so it's very flexible. Another main primitive of this is the vault receipt tokens. We kind of saw what was happening with LRTS and especially liquid staking tokens. You can think of vault receipt tokens like liquid staking tokens on Solana. So you are staking to the vault and you get back a receipt token that is a tokenized representation of your pro rata share in the pool. And so this is built into the program.
00:07:28.837 - 00:08:03.035, Speaker A: You do not need to build a vault receipt token or lrt. The protocol just has it built in and you can continue to use it in defi, go on exchanges, borrow, lend and all that stuff. So yeah, beyond the hype, I think it's important to highlight some of the use cases of restaking. First one is stakenet. I showed you guys the data. This is actually a copy paste of a graphic that I put on the slide last year. So we've been thinking about this for a while.
00:08:03.035 - 00:09:48.503, Speaker A: Being able to kind of decentralize some of the Data fields for Stakenet so it can be truly permissionless and Jitosoul and other LSTs that want to use it can run forever without requiring centralized services. One of my favorite use cases of this reseeking protocol is Squads squads as you guys know, largest multisig on Solana and they are building Squad's policy network. This will act as another signer on your multisig and it allows for very, very custom and flexible arrangements for signers on the multisig so you can think of like automation and thresholds and things that are really hard to calculate and perform on chain can be offloaded to a network of keepers and these are examining the transactions and checking the policies and they all come to consensus on signing, acting as a signer on the multisig. Something else that we're in the process of designing and building and this will be the first network that we build and it's kind of a precursor to other networks is the reward network. And this will allow. If you are building an NCN or a vault and you want to distribute rewards to stakers and operators, this will be a network that will handle that for you. So essentially what you can do is you build your network, all your on chain information, let's say Oracle for instance, and you want to distribute it to different operators based on some criteria.
00:09:48.503 - 00:10:39.845, Speaker A: Then you can write this off chain logic that will run on a variety of operators and that will essentially all compute a merkle root and a merkle tree and they will upload it on chain and that will come to consensus on how rewards are distributed. So we're actively dogfooding this technology and the platform. I think that's the only way that these platform kind of plays can succeed and there's certainly some other things that we're working on that will be shared soon. So yeah, wrapping it up. I think Solana loves builders. It's the best place to build compared to a year ago to where we are now. It's incredible to see the progress that's made on the actual technology, the ecosystem and all the builders that are coming in.
00:10:39.845 - 00:11:22.495, Speaker A: The reason we created this restaking protocol is because we think that Solana is the best place to do restaking and it solves a real problem for jito. We want to make Stakenet truly decentralized. We want to decentralize a lot of products that JITO builds and this is the way that we think is the best way to do it and expect to see JITA restaking live in later 2024 and some of the network starting to come online later this year and early next year. That's all I have. Thank you guys.
