00:00:03.880 - 00:00:11.625, Speaker A: Hello, everyone. Gmgm. Welcome to another episode of the Solana Changelog. Today I've got Jonas with me from the Solana Foundation Devrel team. How you doing?
00:00:11.665 - 00:00:15.417, Speaker B: Hey, Nick. I'm doing great. Very excited for the changelog.
00:00:15.481 - 00:00:19.297, Speaker A: Yeah, you excited? All right, let's get to it. What commits did you see this week?
00:00:19.481 - 00:00:37.573, Speaker B: So let's start with this one from Jean Shinquer. Try to reset deploy slot on all cloned accounts. So this was a bug that was. Recently people had problems like cloning accounts in their local validator, especially using anchor and Jacob created an issue and now it's already fixed. So that was very quick and very nice.
00:00:37.709 - 00:00:39.045, Speaker A: Fast turnaround. Love it.
00:00:39.125 - 00:01:04.355, Speaker B: Then maybe another one. Add the option to record transactions to Ledger tool. This is a thing that whenever there's a problem and maybe there's an outage or the network needs to be restarted, now we have the way to write all the transactions actually on the disk and then you can directly look at them and see which one actually caused error. So this would be very helpful. So in case we ever go down again, which we don't hope this would.
00:01:04.395 - 00:01:23.577, Speaker A: Help, what also helps all the core engineers that are doing all the immense testing, and probably the Fire Dancer team as well, to do all the testing that they do for testing out new features. So if they're working on a new feature or new bug fixes, they can test it locally in like kind of siloed clusters. So it also makes that a little bit easier for them too.
00:01:23.771 - 00:01:58.235, Speaker B: That is a very good point. Yes. And then we have the update requirements for the validators increased a little bit and now it's also written in the docs. So now it's like recommended to have 16 cores with 3 GHz and also snapshots are a bit larger. So like 500 gigabytes is recommended here. And what else do we have here? One terabyte for all three, the account indexes. So, yeah, this is now if you're running a validator that's recommended to have a little bit better hardware.
00:01:58.395 - 00:02:08.979, Speaker A: Yeah. That would also apply to RPCs as well. So not just consensus nodes, the voting validators, but generic RPCs that are just like handling transactions and supporting the network that way.
00:02:09.107 - 00:02:11.011, Speaker B: Yeah. Then did you see this one here?
00:02:11.163 - 00:02:46.063, Speaker A: Yeah. Yeah. Speaking of RPCs, John Shankway again, he updated one of the RPC endpoints, I think actually two of the RPC endpoints to include some information about interest bearing tokens. So if you're using the interest bearing extension on the token Extension program. This update actually includes some of that additional information within getting parse token accounts to actually get the correct UI amount for some of these. And then he also notes some other fixes in the future to try to add this information into other sections of the RPC responses. But there's going to be some additional work that needs to happen for that.
00:02:46.199 - 00:02:59.437, Speaker B: Yeah, it's not in all of them. Again I think when you do get past account then you get now the correct UI amount But for example in transaction status you wouldn't get it yet but this probably on the way for later soon tm.
00:02:59.581 - 00:03:17.357, Speaker A: Yeah and then there was also a new syscall was added will be added shortly. It'll be enabled during using a feature gate but get epoch state new syscall. It'll be useful for a couple of different things and Joe Buffalo here kind of lists out some of those things for the future.
00:03:17.541 - 00:03:30.049, Speaker B: Yeah it unblocks a few things in the validator actually you can now have like on chain validator governance for example and secondary consensus mechanisms. So this was for her before, not possible. So this is nice to have.
00:03:30.177 - 00:04:09.241, Speaker A: Yeah, it'd be great for SimD89 too. And then we got the sweet commit from Jstari. He actually basically did this pretty hefty refactor in order to make it so the point in which validators are processing transactions and doing the fee payer check basically making sure that whoever's designated as the fee payer actually has enough funds to actually be deducted, their balance to be deducted, signature verification, that kind of stuff basically refactored when that fee payer check happens. So it makes it so validators will actually process less transactions, they'll do less compute on invalid transactions. So it's a little bit of a nice little optimization there.
00:04:09.433 - 00:04:10.745, Speaker B: Yeah, that's great.
00:04:10.865 - 00:04:11.305, Speaker A: Yeah.
00:04:11.385 - 00:04:14.505, Speaker B: Then we have another program that has moved to core bpf.
00:04:14.665 - 00:04:34.675, Speaker A: Oh yeah, the core BPF initiative. Yeah. So Joe Buffalo, he's been basically the master of the core BPF initiative. The address lookup table the ALT program is ready to be moved to core bpf so it's under feature gate and once it's enabled then we'll have just another program on core bpf. And that initiative just keeps on going.
00:04:35.175 - 00:05:22.579, Speaker B: Yeah and talking about more BPF programs we have the SIMD153. Oh yeah, it's about the Elgamal proof program. So it's what we talked about I think two weeks ago. So this is more zero knowledge functions directly as syscalls in the runtime basically and like you can do, for example, validate that private key, public key is actually owned by someone else as a zero knowledge proof and so on. And this SIMD is mostly about it that it gets decoupled from the token program because as you know, like these have been added for the confidential transfers. But theoretically you can use these algomal proofs for all kinds of cool use cases. And so that's why this is like it should be renamed to only.
00:05:22.579 - 00:05:50.075, Speaker B: I think it's called the zero algamal proof program or something. And just so that it's not coupled to the token program anymore because the runtime is basically for all programs and it shouldn't be narrowed down to be only for the token program. Right. So yeah, I think this is probably a good thing, but it will probably delay a little bit the confidential transfers on mainnet, if I understood this correctly.
00:05:50.495 - 00:05:52.407, Speaker A: Yeah, soon TM though.
00:05:52.591 - 00:05:54.087, Speaker B: Yeah, very soon.
00:05:54.231 - 00:06:15.039, Speaker A: All right, let's go ahead and dive into some resources. There's this really sweet one, like I love vanity addresses. KV here wrote this sweet Twitter thread that describes how you could actually kind of optimize the way that the vanity addresses for programs are created. It just speeds it up a lot, which is really fun and really cool.
00:06:15.167 - 00:06:35.841, Speaker B: Yeah, yeah, it's totally cool. He has very good tricks on how he makes it faster. So for example, you don't need the elliptic curve point arithmetic if you just use Create account with seed. And yeah, he points it out all here, but I think it's not open source yet. He says he wants to do it on the weekend, if I read this correctly. So. But this is going to be really cool.
00:06:35.841 - 00:06:41.137, Speaker B: You can have like, he says like up to nine digits in the pub key. You can grind with this.
00:06:41.281 - 00:07:00.199, Speaker A: Yeah. And then he plans to release like a GPU version so you could use your GPUs to grind for vanity addresses for programs. So which makes it. So if you want like a really long vanity address, you could throw your GPU on it with these optimizations and make it so you can get like, even cooler, even longer vanity addresses which, like, I think it's really fun.
00:07:00.287 - 00:07:10.943, Speaker B: Yeah, I'm definitely going to get a. Oh yeah. And this one is really cool for gaming. As you know, the Solana Game Jam is coming up. The next speedrun by MagicBlock.
00:07:11.039 - 00:07:12.471, Speaker A: Shout out to MagicBlock.
00:07:12.623 - 00:07:42.185, Speaker B: Yeah, and all the gaming SDKs are like in super hard working to get like all the new features in and optimize their SDKs. And this one is the new phaser template. It's not New but it has been updated to use the tiplink official wallet adapter. And this one is like really cool because it lets you have a wallet just with the Google email address. So I think this is really cool. Maybe more game SDKs will actually integrate this. And yeah, Redheads NFT project.
00:07:42.185 - 00:07:50.385, Speaker B: I think Block your Sarus is behind this. So this is really cool. All open source. And then what is this about?
00:07:50.685 - 00:08:16.805, Speaker A: Yeah, this was this article that Joey. We've given him shout outs on the. On the show a couple of times now, but he wrote this article a little while ago about optimizing the stockpile V2 program. So he kind of like firsthand experience as a developer trying to optimize the compute within his program. He details a whole bunch of stuff in there, talks a lot about Quadratic funding and how that works and how to optimize that specifically. So it was a nice little. A really great developer focused article.
00:08:17.225 - 00:08:31.047, Speaker B: Really cool. Especially now with the new schedule and makes it even more important that you update your programs to have like to save see you. And we have some guides about this and some videos so we're going to put them again in the comments probably.
00:08:31.191 - 00:08:32.415, Speaker A: Yep, absolutely.
00:08:32.575 - 00:09:04.445, Speaker B: And also there's like a really nice article from Helios. I think Ichigo wrote it about the Solana 118 release and it has like everything in there about a new scheduler, how it works. You can like learn how Solana works actually like the Ingress Sig Verify banking stage and all that stuff. It's a very good read. So I would totally recommend. This is the new scheduler. It has like this dependency graph of accounts to be able to better put the transactions in the block.
00:09:04.445 - 00:09:06.845, Speaker B: It's a really nice article.
00:09:07.145 - 00:09:08.809, Speaker A: That's cool. I'll give it a read.
00:09:08.977 - 00:09:11.825, Speaker B: Yeah. And now let's look at the Stack Exchange.
00:09:11.945 - 00:09:29.525, Speaker A: Yeah. Last but not least, the Stack Exchange for the week. We've got shout out to everyone on Stack Exchange that's over there helping answer a bunch of questions. Helping new developers and experienced developers. You got Jimmy who's at the top this week. And then there's Joey again who wrote that article about Stockpile. And we've got Ari White Seal Jonas.
00:09:29.525 - 00:09:34.785, Speaker A: That guy's pretty cool. Childhood. Yeah. Great work everyone on Stack Exchange this past week.
00:09:36.005 - 00:09:39.705, Speaker B: Really really cool stuff. Burger Bob is also here. Solandi.
00:09:40.005 - 00:09:45.585, Speaker A: Yeah, all the usual faces. But that'll wrap it up for this week on the changelog and we'll catch you next time.
00:09:45.925 - 00:09:47.185, Speaker B: See you. Bye bye.
