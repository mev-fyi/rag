00:00:08.119 - 00:00:56.284, Speaker A: I'm Austin and this is validated today. I'm speaking with Ori Kwan, co founder at Orca, a human friendly defi protocol in Solana. For orca, human friendly isn't an empty catch line in a landscape of clunky web3 applications, orcas, UX and UI really stand out. And this is by no means a coincidence. Ori is first and foremost a designer and its rare for web3 projects to be founded by people who care about design, by people who actually incorporate usability into their vision. From day one, Bad UX is one of the main things holding web3 back, and according to Ori, cryptos history of Bad UX isnt just because of blockchain software constraints, its also because of the underrepresentation of designers voices. Im a big believer that projects ship their charts and if you don't elevate designers and product folks, you won't get products that are well designed.
00:00:56.284 - 00:01:40.402, Speaker A: An important takeaway is that design means more than slick user facing animations. Ori and her co founder bring the same intentionality to their developer facing products, too. Unlike many developer tools on blockchain, orcas SDKs and documentation are as thoughtfully designed as their consumer facing products, but designed with developers in mind. Ori helps us understand how she thinks about building web3 products that are desirable, feasible, and viable. A couple of our conversation highlights include the relationship between UX and UI and how the best technology doesn't always win when it comes to user onboarding. Let's get into it Ori, welcome to validated Austin.
00:01:40.458 - 00:01:41.666, Speaker B: So good to be here.
00:01:41.810 - 00:01:51.732, Speaker A: Yeah, this is going to be a great conversation. There's a lot to talk about when it comes to the intersection of crypto and design. But first, run us through your background a bit and how you got into crypto, of course.
00:01:51.908 - 00:02:34.444, Speaker B: So most of you may know me as the co founder of Orca, the leading crypto marketplace on Solana, but before that I actually had a background that was really nothing to do with crypto at all. So I'd say my original roots come down to always being some blend of technology and art and design. So I started out studying computer science at Stanford, where I specialize in human computer interaction. And I kind of laugh thinking back to high school when I wrote my comment app essay on how I wanted to do something at the intersection of technology and design. So that really was something that just kind of called to me. After that I worked in ed Tech at Coursera. It was my first job working as a software engineer, built out some of their learning interface.
00:02:34.444 - 00:03:29.926, Speaker B: Then when I was actually working at a startup in New York, is when I became more and more into design, just wanting to get more and more to the root of making sure we were solving the right problems for the right people. And that's the journey that actually took me to Tokyo, where I was working at Ideo, a pretty well known design firm there for a couple of years before I had a kind of chance encounter, actually, with my co founder, Yutaro, who was actually already really deep in crypto. He's very passionate and just very brilliant when it comes to all things math, economics, cryptography, and of course, the intersection of all those things is crypto. And so our meeting really became, what can we do with that skillset of a deep understanding of crypto? Yutara was actually at the Ethereum foundation at the time, and as someone who really cares about building really intuitive experiences on top of these more advanced and sometimes inaccessible technologies, so I say that's the story of orca.
00:03:30.110 - 00:04:22.264, Speaker A: Yeah. So I think one of the pieces I want to tease out here is you, as someone who's been in the world of design, working at Ido, you look at Crypto. At that time especially, it was the most anti design industry you could possibly look at working in. You talk to folks who have been building in crypto, especially folks who were early on Ethereum and UX and design in crypto. It always felt like not even an afterthought, like it wasn't even something on the table. All of the conversations were focused on technology use cases, like, how do we build the most impressive technology? And just like the best technology is going to win out, and we don't really have to think about anything on the other side. I'm curious, what won you over to the idea that you could build something on blockchain that was going to be designed forward and that that would be both interesting to you and interesting to the market.
00:04:22.604 - 00:05:13.424, Speaker B: I would say it was never even a question of having to be won over. If any product is going to be relevant to people, it needs to be designed for a particular use case and for people's needs. And so when it came to what can we do with crypto, I was actually just shocked that this wasn't already the mindset. I was frankly just appalled when I started playing around with some of the existing applications at the time and finding that it really did feel like, and I think I can especially feel this because I am an engineer by background. They took the underlying data models and basically splashed them onto the page in the closest possible approximation of those data models, which often is essentially like a table. And so going from there to actually making something useful obviously needed a design process in between.
00:05:14.324 - 00:06:13.128, Speaker A: So the difference between when I started using technology on a day to day basis, which really, for me, I was born in 1990, so it's probably somewhere around 2002, 2004, is where I start actually building a gaming computer and starting experiencing, interacting and living online. And the design difference between a BBC message board then and even discord now, not that discord's the world's best design, but the expectations from a use and design perspective are so much higher. And you look at sort of the design of modern products, and they feel like they're built for humans in a way that they maybe weren't in the earlier days of technology. What do you think it is about crypto that sort of kept that back? An experience I have had onboarding friends to crypto, especially before Solana, is they look at these things and they go, why are all these designs totally wild? It feels like it's got its own language that is completely separate from the rest of the software world. Would you agree with that?
00:06:13.296 - 00:07:30.228, Speaker B: I would agree, and I would say that that stems to a large degree from the incredibly challenging software constraints that crypto presents. Crypto has always sought to solve particular problems, and I think these are problems that many of the listeners in this podcast are probably already familiar with. But just to recap, in case, we're talking about things like having this essentially eternal and fully globally accessible data persistence, right? So being able to always count on data, being there, being available, and being verifiable, decentralization as an ethos is a big part of crypto, but it also comes with these particular advantages of transparency, of accessibility, of persistence. But those come with trade offs. And I think that's something that not everyone understands, is that it is incredibly difficult to build on top of a blockchain because it offers these advantages. It's not necessarily as fast or at least as instant as people may expect when they're coming from the world of web two, right? And so I think it's a little bit challenging because user experience, as we understand it for digital products is often actually predicated on speed. Right.
00:07:30.228 - 00:07:55.104, Speaker B: Things need to feel like they're almost instantly reactive these days if you're blessed to be in a country that has high speed Internet access. But crypto, I think, has long been stuck more in this technology development phase, where we're almost like doing research on the base layer and simultaneously trying to develop these products that are competing with web, two products at the same time. And that's tough.
00:07:55.924 - 00:08:28.814, Speaker A: Yeah, it's super tough. And I think the whole idea of like, oh, crypto is speedrunning x or Y or z. I think you really see that when you're looking at people trying to, as you're saying, build the base layer and build the user layer at the same time. And that's an incredibly difficult thing to do. You mentioned something before. I kind of want to dig into a bit, which is that the technology sometimes dictates the design and the interface decisions. Can you talk a little bit more about what you mean by that and how some of the paradigms of the technology impacted the early designs of crypto?
00:08:29.234 - 00:09:15.440, Speaker B: Yeah, in many cases, I would say design is really more of a science than an art. There is some amount of art to it, but especially user experience is really a science. It's about understanding what users need, what users want, what users are already familiar with, also making smart business trade offs when it comes to putting those things together into a workable product. But technology is a completely different science. Right? And so when you're thinking about how to optimize, let's say, for a TPS, you may not really be thinking about this entirely different science that requires a different set of specialties. And early on, there just weren't many designers in crypto, like, not many UX designers especially. I think that's something that people get really confused about is the difference between UX or UI.
00:09:15.440 - 00:09:42.852, Speaker B: And it always, as a designer, triggers me a little bit to hear them lump together into UI. Ux. People love to say the Ui Ux of Xyz is so good. I'm like, okay, which one, though? Because when it's left to engineers to do design, basically they do the minimal UI design, right, to put things on paper. And so that leads to things like I mentioned earlier, just like endless tables. Like, so many defi products are just tables. And that's because, you know, really what it is.
00:09:42.852 - 00:10:03.944, Speaker B: At the end of the day, it's a database. Crypto itself, like a blockchain, is essentially a database. And so if you take all of this information and just lay it out in a table, they're like, okay, great, people can access the data. It works. But that's not necessarily, again, the most familiar or intuitive way that people access data, especially now in this world of web, two products that have evolved to do so much of the work for you.
00:10:04.604 - 00:10:21.234, Speaker A: Yeah, I want to get into sort of how you and orca have rethought some of the ideas of how you display data, especially in the context of defi. But just to sort of take a step back a second, how do you think about the interplay between UI and UX from a designer perspective?
00:10:21.854 - 00:11:29.532, Speaker B: Ux should definitely come first. So ux involves all the things that relate to, again, what is it that people really need? What is it that people really want, and what is the value that people get out of this product? And so when I start designing a product, I always start from there. Like, what is the ultimate value that we want to deliver from people? And then how does this product deliver that value? And so even before, usually I'm like wireframing or drawing any type of button or table or card or anything, I'm thinking about what are the things that people need to do with this product? Right. In the example for orca, people need to be able to buy and sell cryptocurrency, right? So we can talk about those types of things. We can talk about how they want to be able to buy and sell cryptocurrency quickly and to instantly know whether the trade succeeded or failed, and to know what to do in the case of retrying. And all of those things, once we've identified what those things they are, they need to do have many different translations into a UI. And it's almost as if, you know, there are three different ways to do the same thing.
00:11:29.532 - 00:11:44.282, Speaker B: You could pour your coffee into a mug, you could pour it into a tumbler, you could pour it into a glass, and each of those things may deliver the coffee to your mouth, but they'll do it in a different way. And depending on the particular context that that person is in, the drinking vessel of choice may be different. Right?
00:11:44.458 - 00:12:25.504, Speaker A: Yeah, I think that's really interesting. And I kind of want to dig into this experience of what good ux means in the context of something like orca. Because one of the fascinating things that you're trying to do is that there's sort of three different categories or product offerings that orca has. There's sort of the main thing people might be familiar with orca, which is sort of like a very crypto curious, very friendly interface. You have a pro interface, but then there's also a huge part of orca that's actually a developer facing SDK that gets integrated into other types of applications built on Solana. How do you kind of think about almost the UX objectives for those three different types of products?
00:12:26.084 - 00:12:52.604, Speaker B: Totally. Let's dive into that. So, first of all, is the orca, so interface that many folks I think, know and love and think of as orca. And as you mentioned, that one historically has been much more about helping folks who are we. Sometimes we call them, like, crypto curious, right? Like a little bit. Maybe they own a few nfts, they trade here and there, but don't know. You know, they can't explain to you all the details of how a blockchain works, and they shouldn't have to.
00:12:52.604 - 00:13:58.264, Speaker B: Right? Like, I think in order for these products to be more accessible, we can't expect everyone to come on and give you a sermon about zks or anything. You know, like people should be able to just come on, connect their wallet and make a trade and everything around orca. And also the new orca that we're going to be launching in mid April is geared around that. Sometimes I laugh, actually, that people still say that Orca's UX is, or UI UX, as they may say, is incredible because it's really just something that I cobbled together in a few months with a few user interviews early on. I think it could be so much better. But to answer the rest of your question, the needs are incredibly different when you're talking to, say, a pro trader, right? What they really want to see is a detailed candlestick chart, so they can do technical analysis potentially, or they're wearing their market maker hat and they want to be looking into the liquidity ratios and different pools. And so orca naturally has these three products, right? Like sort of this trading product, this liquidity product, and also this SDK, which builders can use to tap into the trading and the liquidity.
00:13:58.264 - 00:14:42.754, Speaker B: And when it comes to builders, the considerations are different yet again. Right. So builders, usually they have some other objective that they want to achieve. And plugging into Orca basically allows them to take care of some of the stuff that they don't necessarily feel like they personally need to put attention into. So they can, for example, hook up their web3 game to the blockchain without needing to know too much about the details of a blockchain and having the right functions that they're looking for, even the right languages. Orca was recently integrated into the unity SDK for Solana. And so that opens up a whole new audience, I think, as easy as possible and as frictionless as possible and as good of customer support as possible are all part of the overall UX for SDK.
00:14:42.754 - 00:14:45.738, Speaker B: And that has really no UI element at all. Right?
00:14:45.906 - 00:15:23.724, Speaker A: Right. Yeah. You know, you mentioned the kind of user interviews as a piece that was important in that initial, like, discovery phase for the orca. So interface design there. I always find user interviews fascinating because I've been at so many companies that have attempted to do them and never managed to actually pull any real product insights out of it, which I'm sure is a problem in the process and not obviously the concept of user interviews. But how do you conduct those? Well, to inform some of your product and design decisions without sort of running into the sort of the small sample bias problem. What are you looking for when you do a user interview?
00:15:24.184 - 00:16:05.854, Speaker B: It really surprises me that you say that because I can't imagine them not being useful. I think if there is something too specific that you're looking for, you're already doing it wrong because you need to come in with a very open mind. Right. I think I generally come in with a loose hypothesis and let's just give an example. Maybe my hypothesis is that users want to see a very detailed price chart, right? And so, for example, they want to have a lot of different functions on this price chart. They want to be able to draw lines, as we may say, and do technical analysis. I could come in with that hypothesis for a particular product and do some interviews and show people the price chart.
00:16:05.854 - 00:16:45.384, Speaker B: And usually what I'll try to do when I do these interviews is actually say very little. I like to do what I call a mental model test in the beginning where I just show them the interface and see how they react. Because I think a big mistake that a lot of folks who don't have a lot of experience running interviews make is to over explain. But the reality is when these users come and actually use the product, I'm not going to be standing there looking over their shoulder being like, oh, but don't press that button, press this button. And I just said, see how they react. And I think if that is the right type of chart for the target user, and I've correctly identified the target user for the interview, they'll naturally be like, oh, yeah, I'm so used to this. I use these trading view charts all the time.
00:16:45.384 - 00:17:15.174, Speaker B: I'm just going to blah, blah. And then it would be really great if you added this. But then if I show it to someone who has actually very little experience with trading and that's not what they're looking for, they're going to be like, oh my God, I have no idea how to read this. I don't really know what to do with that. Right. And so I think a lot of it is not like, it's not about asking people to tell you what to design. It's about seeing how people react to a potential design, or asking probing questions to understand their background, and then cobble it together into insights that then later inform the design.
00:17:16.034 - 00:17:46.242, Speaker A: It's interesting because I think at this point in the technology cycle, everyone has an opinion on Twitter struggles, particularly under Jack Dorsey. And I think one of the things that you often hear is that Twitter listen to its users too much, which is such a counterintuitive piece of feedback. Right? We usually think of companies listening to their customers as a good thing. So when it comes to Orca, how do you balance the desire to better serve your existing community while also thinking about what you need to do from a design and product point of view? In order to reach new users, you.
00:17:46.258 - 00:18:45.656, Speaker B: Need to have a strong product point of view. And often design gets lost in that. I think especially in crypto, because nobody with a really design background or design focus is at the head of the table. And I think that's where we've been somewhat lucky, maybe I should say, with orca, in that Yutaro and I as co founders, I think naturally bring this very yin Yang focus on design and technology and kind of wear those hats that we separately bring to the table, but with equal weight. In contrast, a lot of protocols, everyone who's at the head of the table wears either, usually a technology hat, maybe sometimes a business hat, but really not that design hat. And so when we think about what products to build, it's a mix between, okay, what do we understand about the market and what types of products have product market fit, what types of products are feasible, but then also which products have that unique desirability from the user perspective?
00:18:45.840 - 00:19:34.910, Speaker A: Yeah, I think from the outside, it's a very ambitious task that you have decided to take on with orca, with supporting these sort of three different tiers of products and communities. It feels, you know, looking across the crypto landscape, there's very few protocols that have chosen to do something sort of as, as diverse. You usually see this idea of, like, we're gonna expand into a new product category, not that we're gonna create a new interface paradigm, whether that's graphical interface or API interface, to access what is fundamentally that same, that same core product. I think there's a lot that people can learn from that experience of saying we don't necessarily need to rebuild the product. We need to think about the ways people can interact with it, that suit whatever they're trying to do better. It's a really interesting insight there.
00:19:35.102 - 00:20:38.150, Speaker B: It's in some ways unique and in some ways. Not a lot of people think about building an amm, right? I think that we're far from the only Amm on Solana, but I do think we take a pretty unique perspective when it comes to framing what an amm can do. I think what we've learned from having our concentrated liquidity Amm live for over a year is that the framing of a concentrated liquidity Amm is one that's unfamiliar and actually alienating to a lot of the target audience. The types of folks who are best suited to use a concentrated liquidity Amm is very different from the types of folks who use a more typical constant product amm. And I know that not everyone listening to this podcast knows the details. So a typical Amm can provide liquidity a lot more passively, because everybody who provides liquidity to the pool is essentially sharing in the same types of returns, given that they're providing essentially across the entire price range. But on a concentrated liquidity Amm, you have to provide a specific price range.
00:20:38.150 - 00:21:42.174, Speaker B: And so folks who are essentially able to better understand market movements better will be able to provide liquidity a lot more effectively. But those types of folks are generally order book users. They may use order books on centralized exchanges or even on on chain order books, but the way they think about trading is usually coached in many, many years of experience doing trading on these other interfaces, which do feature things like candlestick charts and limit orders, etcetera. And the reality is that a concentrated liquidity amm is more like an order book than it is like a constant product amm, despite the name, and can actually power that type of interface, which is actually incredibly game changing, if you ask me. I think it's something that's also pretty uniquely doable on Solana with this type of experience, because it can provide such a smooth and high TPS. And Orca itself has actually done very, very well, even in times of network congestion and downtime. To be able to provide that type of experience is something that's really, really new for DeFi.
00:21:42.174 - 00:21:45.834, Speaker B: And that, again, I think is just going to be pretty groundbreaking and exciting.
00:21:46.264 - 00:22:06.764, Speaker A: How do you think Orca accomplishes that? What's that interface you've built between the way the protocol works, the way you interact with the underlying Solana blockchain, and the way that that's displayed to users that consistently provides a satisfactory user experience even during periods of congestion? What's going on under the hood that makes that possible?
00:22:07.824 - 00:23:30.498, Speaker B: What's going on under the hood is, well, first of all, it's a really solid smart contract. I always, to be honest, I laugh a little bit when people are like, but what happens if XYZ Ethereum protocol just bridges over to Solana and then competes with you guys? That's just not how it works. It's a completely different programming environment, a completely different virtual machine, and a different language. Even if it were possible to just bridge over some EVM amm to Solana, I just find it very difficult to believe that it's going to work as elegantly because Solana has these different concepts that it's built around, like account access and having to specify specific accounts that make it more performant. Right. And so I think what we have at the core is an extremely solid, smart contract that today, I'm knocking on wood here, has never been exploited and has reliably provided this trading experience for over a year on main net. But on top of that, we have an extra layer of going the extra mile to translate that into these many different forms that you mentioned, into a trading interface, into a liquidity provision interface, and into an SDK that serve more specific use cases and that are constantly evolving as well, because as we all know, crypto evolves at the state of light.
00:23:30.498 - 00:23:37.294, Speaker B: And so just sitting on the interface that was shipped out the first time is unlikely to remain competitive.
00:23:37.714 - 00:24:10.904, Speaker A: Yeah. So I want to pivot a little bit and talk about developer experience, which is sort of a subset of that sort of user experience category. How do you think about developing UX for something that is specifically developer facing? I feel like most of the time people put out an SDK, they put out some documentation, and they sort of say, well, now developers can use it, but that's hardly ever what it takes to actually get adoption of an SDK. What has been orcas sort of success path into getting integrated with all these other types of applications and games?
00:24:11.204 - 00:25:31.734, Speaker B: It's a strong point of view at the end of the day, and this is coming back to what you were saying earlier about Twitter. Listening too much to your audience is essentially the same as designed by committee, right? If twelve different people come to you and ask for twelve different things, and you just put them all into the SDK, you'll get something that could theoretically serve all these different use cases, but is unlikely to really fit together into a holistic whole, and unlikely to necessarily translate to a wider variety of use cases as well. And so this is something where I can take exactly zero credit as never having written a line of our SDK, but can give a ton of credit to the architects of the SDK. On the Orca team, who do have a ton of experience writing SDKs from being engineers for ten plus years in the web two world. And I think this is like a pretty unique advantage in some ways with crypto. I think crypto never fails to blow me out of the water with how devs just get younger and younger and younger. But a lot of the devs on the Orca team are actually from these long web, two engineering backgrounds, and I think that serves orca very well because this strong point of view is then tempered by the ability to go out and actually speak directly with users that we get with crypto, take that feedback and then integrate it into the holistic vision, as opposed to taking feedback piecemeal, like you say.
00:25:31.854 - 00:26:25.262, Speaker A: Yeah, there's always been this weird interplay where it seems like the best built products for developers have a lot of empathy in the quality in which they're built. But at the same time, most engineers building the products want you to do it one very specific way. And you sort of end up with this fractured system where you have either a product that is very intentional about the way you have to build it, but is not very flexible, or you end up with the Microsoft problem where there's 45 ways to do the exact same thing. There's no right way, and people can really get almost lost in choice. So when you've been working with some of these engineers that are building the SDK, as someone who has not built SDKs before, how do you help them figure out what the right balance is to strike?
00:26:25.438 - 00:27:31.204, Speaker B: This is actually not something that I personally need to help them with, because I think a good developer knows this already. But I think as a UX designer and engineer, what I can say is that developer experience is a lot less different from user experience than people may think. It's about trying to present tools or interfaces or products, as you may say, that people already know how to use without an instruction manual, you failed. If you present an interface or an SDK that requires a human to explain it in code, it might be about using function names that these developers can intuitively understand the purpose of, or even very clear variable names. And so if you're not a developer, I think what I can give you as a very simple example is, let's say you are given this toolkit. This toolkit has a hammer and a wrench. And I don't know, I'm not actually a person who uses hammers and wrenches, but you know how these things, you intuitively know that a hammer, hammer, nails, and a wrench is used for, I don't know, these turning things, what are they called?
00:27:31.244 - 00:27:31.508, Speaker A: Turns.
00:27:31.556 - 00:28:30.964, Speaker B: Turning things. Turning things. These are familiar concepts. And similarly, if you give a toolkit of code to a developer and they see a function that says that the name of the function is turn and it's a game, they'll probably know that it's used to turn something, but what is it used to turn? Right. And so maybe if you have a function that's called turn character, they'll know that it's turning the character itself. Or if they have a function that's called turn wheel, then you'll know that it's turning the wheel, right. And so you just want to be as clear and as specific as possible in the design of the functions themselves, in their placement with regard to one another, and with the rest of the code, for developers to be able to intuitively understand how to use them and when supplementary information is needed, having those in the comments, like directly there, or even having really, really good documentation that's kind of built into the code in the form of, let's say, function headers, et cetera, can all be super, super helpful for Dx.
00:28:37.444 - 00:29:08.348, Speaker A: So there's the idea, which I'd call a myth, really, that at the end of the day, the best technology wins. I hear this a lot when people talk about Solana. People draw this straight arrow line between Solana's the world's fastest blockchain. Therefore it means Solana is going to be able to serve the world's information. Therefore Solana is going to be the only blockchain. And that sort of arrow projection technology never really moves in an arrow projection system anyway. It always moves in fits and starts and jumps, and it bops around a lot between different types of things.
00:29:08.348 - 00:29:48.784, Speaker A: And if you look at straight line arrow projection from AI, we wouldn't have had this emergence of chat GPT, it would have been a much more slow, gradual ramp up over the last five years. How do you think about the competitive advantage of that kind of experience? And, like, what you need to do to actually take something that's like the laboratory technology, right? The capability of Solana to have incredibly fast finality and very fast transactions per second, or the technological underpinnings of a concentrated liquidity market maker, and then actually turn that into something that has a chance of actually winning out in a marketplace of ideas.
00:29:49.364 - 00:30:31.180, Speaker B: I love that term, marketplace of ideas, because I think that's really what it is. Like people are getting hit by so much information nowadays, and if that information is not relevant to them. They have no choice but to filter it out because brains just can't handle that much. And so right now, what we have is this world of so many competing chains, right? You have the so called ethereum killers. Not really an idea that I believe in. You have like the whole EVM ecosystem. And in some ways, they're all kind of trying to do the same thing, right, be this decentralized technology layer, but those details just don't matter to the average person.
00:30:31.180 - 00:31:15.906, Speaker B: I think BD, marketing and design are all incredibly underrated when it comes to this battle of the blockchains, and they're very related. Actually, BD and marketing is very interrelated with branding, which is a part of design as well. And so when I think about which chain is ultimately going to get the majority market share, I think it's which chain is actually going to be able to provide utility to users that they actually believe in long term and actually will actually just use on a daily basis. I think we're still very far away from that. And right now we actually are, for the most part, still in a largely speculative stage. Right. People are speculating on the potential future value of these technologies.
00:31:15.906 - 00:31:58.374, Speaker B: And as much as I think Degen speculation may not be something that I'm personally excited about, or a lot of the industry is personally excited about, it does have value. Speculation is actually what allows ventures to be funded. I think it's not entirely bad. But what these chains also need to focus on Solana, but also all the other chains that are competing is building these real use cases. Because long term, that's what's ultimately going to drive demand, drive volume, and making sure that these experiences are things that people actually know how to use. Because if you look at a lot of the products right now, people can't even, are just too scared to even save a seed phrase if they're not really looking to use crypto on a daily basis. All the setup is already enough to scare someone off.
00:31:59.314 - 00:33:00.644, Speaker A: Yeah, that's really interesting when you think about it that way. I want to go back to the bull market because I think the rise of the bull market was a really interesting time period. It was when everyone started talking about, oh, crypto is going mainstream. We have to really focus on user adoption. And if you look at the data of what actually happened between, let's call it like, early 2020 and early 2022, it feels like we didn't actually do that much onboarding and the products that were actually developed and the idea of what these things could be apart from a few examples of something like orca, it was still very theoretical. And the actual usage of these things and the actual experience of people integrating this into their lives wasn't backed up. Would you agree with that? Or did you actually see more real adoption that you would call almost like web two grade onboarding?
00:33:01.064 - 00:34:01.202, Speaker B: There was very little onboarding at all. I'll come out and say that the wallet experience is still the experience that I'm the most disappointed in across all of DeFi, it is so hard to use, and none of these wallets that serve a large number of users really do what's necessary to handhold people through the process. But at the same time, I almost don't feel like there was a big need for that at the time, because there's only so much you could do in DeFi at the end of the day if there aren't too many things that average users would actually do, and especially users who aren't interested in speculating on tokens, and there's just no need for them to set up these things. There's no need to onboard someone who's not actually going to use any of the functionality that is available once you have a wallet. And so that's where I think the bigger issue lies, is finding that product market fit. And I think it pays to be patient here. It does take a long time for technology to sometimes mature to the point where it can become relevant to people.
00:34:01.202 - 00:34:34.834, Speaker B: 100% believe that that will happen for crypto and for blockchains. But often being early or too early is actually the same thing as just building the wrong product. Even orca wasn't really focused on onboarding at the time because there was so much development to be done on just the core concentrated liquidity amm, and making sure that the infrastructure is in pace for these eventual use cases. And even now, during the bear market, I think it's a perfect time to be focusing on getting that technology truly ready for these more everyday, person relevant application, so to speak.
00:34:35.334 - 00:34:44.270, Speaker A: So what do you think it would actually take for crypto user onboarding to move past the meme stage and move.
00:34:44.302 - 00:35:17.642, Speaker B: Into the reality part of it is just blockchain stability. Like it or not as much as. As an engineer, it's easy to understand how a small bug can lead to like a big outage. Outages really scare people away, right. The idea that they wouldn't have access to their money and potentially a large amount of money when they're self custodying is very, very, very scary. I think we need to have a lot of empathy for that. And so part of it is just proving that the technology not only works, but works reliably over a very, very, very long period of time.
00:35:17.642 - 00:35:49.366, Speaker B: You know that I love Solana and the journey getting here has been, like, incredible and all these highs and lows, but I think we need at least, I don't know, a year where Solana doesn't go down at all. And I think once that happens and once people actually have that confidence, then more and more people will feel confident building out these applications that require a lot of confidence in the continual uptime of a blockchain and putting in more liquidity and all the great network effects that come along with that.
00:35:49.470 - 00:36:09.084, Speaker A: So if we go back to our example of Twitter, in the early days, Twitter had a lot of problems in terms of stability and its underlying technology, but those problems didn't necessarily choke user onboarding. People still downloaded the app and started to use it to say what they were eating for breakfast or they were taking a walk. What about blockchain? Onboarding feels different from the first stages of Twitter.
00:36:09.584 - 00:37:10.990, Speaker B: It's money. Money is, like it or not, what people need to survive. People putting a significant amount of their life savings into crypto and then having a blockchain go down and not having access to their money, potentially when they need it most. Right? Because a lot of the time when people can't actually access their funds, there are the times when things are extremely volatile, when people are panicking and selling x, y or z token to try to get out, and then they can't do that because the network's too congested or there's downtime or the protocol itself isn't coded. Well, you can see how one experience like that, and that just strikes fear into someone's heart for ages after that. And these things have network effects, too, right? If it happens to one person, they'll tell all their friends about it. And so I think this is where the difference between something like Twitter, where if it goes down for a little bit, maybe it's a little bit inconvenient, but hopefully nobody is losing their life savings and a blockchain going down and the price of the assets that they're holding moving dramatically during that time, it's just night and day.
00:37:11.182 - 00:37:33.144, Speaker A: Yeah. So what do you think that folks who are building protocols should be thinking of from a UX perspective or a developer experience perspective that they're not today, when you look around the landscape of applications, like, what are some of the advice you have to founders or to folks who are trying to improve either the design or the experience of something.
00:37:33.644 - 00:38:22.572, Speaker B: Trustworthiness is sexy in crypto. It's not something that people generally think of as sexy, but trustworthiness is just so necessary for a crypto protocol. And I say I picked the word trust in particular because I think we like to talk a lot about trust lists in blockchains, but when it comes to users trust, once it's gone, it's really hard to win back. And so that's actually a huge focus of what orca, the new Orca is actually all about. Because frankly, this interface, it's gotten a little crusty from my perspective. From a UX perspective, has also gotten a little crusty from a technology perspective. And that's something that we saw with the latest volatility with things like bonk, is that it's just really hard to get a trade through these days when the network is volatile.
00:38:22.572 - 00:39:10.808, Speaker B: And a lot of that just has to do with the underlying way that things are coded. And so the new version of orca is all about things just working. The theme for the new orcas, as I put it, is it just works. And the idea is you just put in a trade will automatically adjust to the priority fees under the hood, automatically refresh the prices at the right interval so that the trade will go through. And I think that's something where people often, again, expose too much of the underlying technology to users. On other protocols, you have to manually adjust these priority fees. But if you're just some random bob off the street, how does Bob know how much priority fees to set? Unless Bob is a dev, I don't know how many priority fees to set to get a trade through on another protocol.
00:39:10.808 - 00:39:26.994, Speaker B: Just take care of that for me, that's why this product exists. And so I'd say when it comes to how to win that trust from people, it's about making the product just work with as minimal technical knowledge necessary as possible and work reliably.
00:39:27.734 - 00:39:49.594, Speaker A: How do you think about the intersection of trust and accountability there? What is that? I think when most people think about trust in blockchain, they're talking about things like audit reports, they're talking about things like having a bug bounty program. But I think your definition of trust is a little bit different than that, and maybe more user centric and less developer centric.
00:39:50.214 - 00:40:39.538, Speaker B: It's very holistic. Trust comes from a lot of different places in crypto, or rather, trust has a lot of different elements. It does include things like having audit reports from reputable audit firms. And it includes things also like, even a doxxed team, so that people know that the people developing this product are not going to just suddenly one day walk away and leave the people who are using the protocol in the dust. But it also involves, I think, an interface that reassures people as to what's actually going on. And again, that's a big area of improvement that I'm really excited about that I'm just nerding out on this because I've been designing this product, and it's all about winning users trust for the past few weeks. But I think right now in crypto products, usually when your transaction is processing, it's this almost like, I don't know if you've ever felt this, but it's like really anxiety inducing moment.
00:40:39.538 - 00:41:07.314, Speaker B: Like, oh my God, does this trade actually go through? Did I actually, like, send $5,000 to Austin? Or did I accidentally send it to Austin's address plus one extra character, you know? And it's just like, people not really being in the loop as to what's going on. Like, the interface is not really visually showing what's happening and even having to, like, go to a separate website, whether it's soul scan or whatever, to see what's going on with your transaction, that's just mind boggling to me. Like, all of this needs to be in the interface.
00:41:08.344 - 00:41:36.904, Speaker A: Yeah. That confirmation timepiece is such an interesting one because I think especially the first network I really used after bitcoin was Ethereum. And I remember buying some ethereum on Coinbase and sending it to a wallet, having five minutes of just uncertain anxiety as that process was going through. Because these are not human readable addresses. These are systems that, for a trustless system, require a lot of faith.
00:41:37.884 - 00:42:18.564, Speaker B: And these little design details will go a huge way to reassuring users as to what's going on. To give you an example, in most wallets nowadays, when you actually have a transaction in progress, that's not really reflected in the wallet interface itself. If I send you 5000 USDC, for example, my USDC balance may not actually show that the 5000 has been deducted until it's actually processed on the other side, but that can be difference of many, many seconds, right? If not longer. And so in between, I think we've all experienced like, oh, I don't think that went through. I'm going to send another $5,000. And you're like, wait, shit. Now I have like, two transactions on the blockchain for $5,000.
00:42:18.564 - 00:42:39.404, Speaker B: It's like, not a small amount of money. And so even just having something like a pending or processing state that's actually to the second, if not on the order of milliseconds, can give people this reassurance that something's going on. And so I think even if the interface can't instantly send money, like the way that, say, a Venmo can feel like it should at least tell you and give you a sense of how long it might take.
00:42:40.384 - 00:43:06.504, Speaker A: Yeah, well, it's funny you use Venmo as an example, because of course, Venmo clears on the Ach rails and is nowhere near instant. Even though it might provide an instant feeling user experience on the backend, it still has to run its way through the ACH network and still takes many hours to days to actually clear. That's a really good example of how too much allegiance to the underlying technology paradigm can actually really hurt the experience of using something.
00:43:07.484 - 00:43:51.672, Speaker B: Yeah. And of course, venmo is the definition of centralized, right? So I think what they have to their advantage is, let's say something doesn't actually clear on the Ach rails on the backend, they can kind of like, figure everything out on their centralized books, right? And just like, make sure that you'll get what you need at the end of the day. But crypto by nature of being on a decentralized blockchain, just can't do that. I think that's why we need to take a different approach to displaying to the user what's going on. And maybe we can't instantly credit your account, so to speak, because if it fails, it's like, that's that. But at least you can be very, very clear to users about what's actually happening and provide guidance in the case that something does fail. For example, something that the new orca does that I'm really excited about is dynamically adjusting priority fees.
00:43:51.672 - 00:44:02.384, Speaker B: And so if the first time your transaction doesn't go through, the interface will be able to automatically adjust. So it's much more likely that it'll go through the second time, even if you're putting through the exact same transaction.
00:44:02.764 - 00:44:13.724, Speaker A: So before we wrap up today, two more things. Where can people stay up to date on you and orca? And what resources would you recommend for folks who are maybe building a protocol and want to take their design more seriously?
00:44:13.884 - 00:44:51.700, Speaker B: So you can find orca on Twitter, at orca. So, so for Solana, and you can find me also there@twitter.com. Orithaorca. O r I t h e o r c a. Right now I'm actually just started. I'd say something new and exciting. For me, it's a little bit nerve wracking, which is really starting to build more in the open, putting out more and more screenshots from my design process, like sharing more snippets about how I think about different aspects of the design process, with the hope that this is something that's helpful to people in understanding how to tackle that very tricky intersection of design and technology and blockchains.
00:44:51.700 - 00:45:39.252, Speaker B: So maybe that's one place to look. But beyond that, I would say the number one piece of advice I would give to a protocol that's really just getting started and wants to take design more seriously is to put someone for whom design is their top concern at the head of the table. I think no matter how good your designer is, if they're just going to get overridden at every turn by the head of engineering saying, well, that's really cool, animations, yada yada, but we just don't have time for that, and that's just not going to make it into the product, then you just don't really have good design. Right. And so, yeah, find a designer. If you're lucky enough to find a designer who is very passionate about Ux and is good at what they do, put them at the head of the table and give them equal voice to product and engineering. Otherwise, it's basically as good as not having a designer at all.
00:45:39.388 - 00:45:45.600, Speaker A: I have to say, one of the most true statements I think anyone has ever said is you ship your chart.
00:45:45.692 - 00:45:48.484, Speaker B: I love that. And speaks for itself.
00:45:50.384 - 00:45:53.264, Speaker A: Well, Ori, thank you so much for coming on validated today.
00:45:53.344 - 00:45:55.884, Speaker B: Austin, thank you so much. So fun to chat.
00:45:58.984 - 00:46:08.604, Speaker A: Validated is produced by Ray Belli with help from Ross Cohen, Brandon Ector, Emira Valiani and Ainsley Medford. Engineering by Tyler Morissette.
