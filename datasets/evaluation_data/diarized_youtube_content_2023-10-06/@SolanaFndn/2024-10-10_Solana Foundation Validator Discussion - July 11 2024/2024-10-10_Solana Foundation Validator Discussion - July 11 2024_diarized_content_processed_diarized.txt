00:00:02.240 - 00:00:38.475, Speaker A: Welcome everyone to the Solana foundation validator discussion July 11, 2024. Oops, there we go. So agenda today want to highlight the OpenSSH vulnerability quickly. Again there was an announcement in Discord but just in case anyone missed it, pretty high severity issue so I want to make sure you don't know about it. You haven't taken any action to update right away some Validator updates. Talk a little bit about Fire Dancer bug bounty. We also have Liam here to give an update on Fire Dancer and kind of where the development is at this point.
00:00:38.475 - 00:01:10.779, Speaker A: Then some usual topics. Looking for Validator educational workshop topics and reminder of the events happening around Breakpoint. So let's get into it. First and foremost the OpenSSH vulnerability. If you are on Ubuntu 2204 or 2404, your version of OpenSSH if you had not updated since I think July 1st, you are vulnerable. So please go and update. The details are at this notice.
00:01:10.779 - 00:01:54.971, Speaker A: Let me bring that up. If you click in here to the CVE reference, it tells you which versions on the different versions of Ubuntu have been patched. So if you're not running this version on 2204 or this version on 2404, your SSH version is vulnerable and the mitigation is really easy. Just APT update and app upgrade openss. You can use this command to get all the security critical updates in your APT repo. So put that in the chat. One sec so that.
00:01:54.971 - 00:02:54.155, Speaker A: That should give you the list of packages that are security critical updates and a question around this as well. Open up slideshow again, is there anyone in the group that's running unattended upgrades for security fixes? No, there are people that have thought about it. Worried about kind of upgrades without your knowledge or just yeah, yeah, I. I can understand the like having something upgrade without you being present and worrying about the consequences, but I'm curious to just anybody's tried it out, so if you're not familiar, you can configure unattended upgrades to just automatically upgrade only on security fixes. Ideally those shouldn't be breaking changes, they should just be patching vulnerabilities. But something to explore. All right, moving on.
00:02:54.155 - 00:03:28.245, Speaker A: So again, if you haven't updated and you're on 2204 or 2404, please do it right now for mainnet beta updates. Not much going on right now for mainnet beta. As far as operators are concerned, 11815 is still the recommended version. Again, if you're on 2204 or 2404 upgrade ssh for testnet 118.17 is still currently the recommended version for testnet 2.0. Should be recommended relatively soon. I don't know exactly what day yet, but I'd expect it soon.
00:03:28.245 - 00:03:59.807, Speaker A: As part of the 2.0 release, the labs Solana Labs repo will no longer be supported. So Solana Labs will not be releasing a 2.0. Only the agave repo will have 2.0. There is a transition doc if you're still on Solana Validator instead of Agave Validator. So I'll put this in chat. It gives essentially some recommendations on what you should think about when upgrading.
00:03:59.807 - 00:04:49.187, Speaker A: Essentially, the binaries that are going to be changed are Solana Validator goes to Agave Validator, Ledger Tool, Watchtower, et cetera. So yeah, just be aware, it should be a pretty easy switch over, but something to plan for at least for testnet operators. Any questions on that? All right, yeah. And again, even on Testnet, it's a good idea to upgrade your OpenSSH if you're on 2204 or 2404. Switching gears a bit. Fire Dancer has released a bug bounty for their Fire Dancer version point or 0.1. For those not aware, this is the version of Fire Dancer codename Frankendancer.
00:04:49.187 - 00:05:36.959, Speaker A: It's essentially the Agave validator with Fire Dancer taking over for the TPU and a few other pieces of the validator. So if you're interested, if you're a security researcher, core contributor that is interested in finding bugs and participating in this bug bounty, I'd highly recommend checking it out. This is not for any of the Agave code base in Frankendancer, but it is applicable to any Fire Dancer code base that you find. Let me send the link sec. So bug bounty details are here. It spells out pretty clearly which things are and are not considered part of the bug bounty. So you can see all the details.
00:05:36.959 - 00:06:04.323, Speaker A: But tldr, there's, you know, pretty lucrative amounts of bug bounty out there if you find critical bugs, so highly encourage people to check it out. The bug bounty is lasting for 40 days, so it's a limited time. Yeah. Nothing else. Liam, anything you want to add to the bug bounty before I move on?
00:06:04.419 - 00:06:54.985, Speaker B: Yeah, I will say, and I've been told this multiple times now, it is. Many will call it a bug bounty, but it is a competitive audit, so it is limited time. As Tim mentioned, it's time box and it is also, you know, the rewards are based on like the number of submissions that are and things which are found and based on the severity of those things which are found and submitted. So not a traditional kind of long running bug bounty where they're based on class necessarily, but I would refer everybody to the details that were sent at that link, the immunify link. But yeah, please promote this, push it around because it's really important to us and there's a lot of money for people to win.
00:06:56.965 - 00:07:15.177, Speaker A: Awesome, thank you. And then transitioning back to Liam again. So great update from Fire Dancer that Liam posted on Twitter. Fire Dancer on testnet has built a block and there's a thread that Liam has there. I'll put in the chat, but Liam's here for more updates.
00:07:15.361 - 00:07:57.797, Speaker B: Yeah, so we've been working pretty hard. So Frankadancer has been coming along. V.0.0.1 has been coming along and is going through its course. But the main Fire Dancer client, yeah, we built our first block on testnet which was kind of about a year ago and a couple maybe like I'd say not 18 months ago, but 16 months ago, we had just ran our first block on mainnet through the runtime and now we were able to build a block on testnet which is like no easy feat. We're still working on a lot of stuff. There will be more updates as time goes on.
00:07:57.797 - 00:08:03.865, Speaker B: But yeah, we're all in the trenches just trying to get it all working.
00:08:06.925 - 00:08:29.105, Speaker A: Congrats. Huge accomplishment. Any questions for Liam around? Fired answer? Quiet group today. Okay. Oh yeah. Again, congrats, Liam. And very cool, very cool to see progress there.
00:08:31.375 - 00:08:34.383, Speaker C: So this was also the Frankendancer build, right?
00:08:34.439 - 00:08:37.007, Speaker A: It was not. No, no, no, no.
00:08:37.071 - 00:09:04.611, Speaker B: Frankendancer has been able to build blocks on testnet for a long time. This is like the full client doing all the consensus rules. Like there's so much that goes into that. So I can just expand a little bit. Like what goes into the full Fire Dancer client is like doing all the consensus stuff, basically getting 90% of like 90% of the way to actually voting on blocks as well. Like is just consensus. Right.
00:09:04.611 - 00:09:35.869, Speaker B: So, you know, getting, we're getting close to voting as well. So, you know, getting the runtime absolutely perfect to match the rest of the cluster. So that's taken 18 months in and of itself with like seven engineers working on it full time. Yeah. And then just like numerous other little things that like, hey, our tools suck and like, you know, we can't iterate quickly. So like there's like all these things have to come together and that's kind of, you know, Comes together just to build one block and then crash. Right.
00:09:35.869 - 00:09:36.745, Speaker B: So.
00:09:42.645 - 00:10:00.635, Speaker A: Any other thoughts? Questions? Yeah, go ahead. Auto, I think you're still on mute.
00:10:03.135 - 00:10:04.355, Speaker C: Sorry about that.
00:10:09.655 - 00:10:13.035, Speaker A: Did you have a question? Yeah, go ahead.
00:10:13.625 - 00:10:52.105, Speaker C: Thank you. This is amazing. Super excited and congratulations. I know there's going to be a ton of information coming out as we get into Breakpoint, but as a newcomer, I can't stop myself from asking kind of how this fits in with Anza and whether you see people running both alongside each other, sort of like Anatoly talked about ages ago, and just kind of what your general thoughts are. But if it's too wide raising a question, we can feel free to move on.
00:10:53.245 - 00:11:07.585, Speaker B: I can answer pretty succinctly, I think. I think so. Obviously, like, running both has its expenses and for the validator operators on here, they're thinking about that already. Like, you know, okay, it basically doubles the. Like, I got to run both of these things now. And they're not. It doesn't make sense.
00:11:07.585 - 00:11:40.859, Speaker B: If you actually run both on the same machine, that will cause its own set of problems. And it's unpredictable because the way Firedancer works, the way Solana works, they're not going to be really happy if you're running both because they're both hogs of resources. They're both going to want to use the CPUs at all the time. There's an expense question to ask when you do that. But the other question is, can I run this as my backup or as a hot spare? The distinction being that one. One will come back up if one of them fails. And I see that being like, much more realistic.
00:11:40.859 - 00:12:08.155, Speaker B: And we can just. We'll build tooling to do that when we get some time, and we'll. We'll build the tooling to be able to fail back and forth between the two. But yeah, I certainly see like, for example, this happens with Ethereum as well, where like the big settlement, people like circle and all that will run all of the nodes and then only continue if they all agree. And so we may build something like that as well.
00:12:11.815 - 00:12:16.635, Speaker A: There's a question about POH in the chat. Essentially, is Fire Dancer POH single threaded?
00:12:17.815 - 00:12:36.665, Speaker B: Well, that's an interesting question. The POH is single threaded for generating a block. So when you pack a block and that's intentional, that's by design, that FOH is designed that way. But on verification, we have a means to do every single. It's all done on multithread. The verification is done multithreaded.
00:12:40.245 - 00:12:45.565, Speaker A: And then Zentetsu Has a question about essentially, can you expand about all the big.
00:12:45.645 - 00:14:05.339, Speaker B: Oh yeah, so they might like, so they all have to like, so the exchanges, like, you know, Coinbase, Kraken, all of them circle who does a lot of like USDC settlement. They're concerned about like, at least this is what I've heard, right? So they're very concerned about like, hey, I want to make sure that like the whole cluster will agree on this next block regardless of version. And so they're, they're particularly concerned about making sure that, hey, all of these clients, when they all run, hey, I want to make sure that they all agreed on the same exact state, AKA they produced the same exact bank cash. So like, would they have all voted on the same block or would they have made some different decision? Which is kind of an interesting requirement, but I don't see that being necessarily something that the validator operators, the big validator operators being something that they want to do. I would see them wanting to use like for example, maybe Agave as their backup as like say Fire Dancer has some, some fault, then Agave could be the fallback for that. So Zentetsu asked, how does Coinbase have anything to do with what other operators are. So it's about rpc.
00:14:05.339 - 00:14:30.735, Speaker B: I'm just talking about RPC now, right? I'm just talking about RPC nodes who really, they want to be extremely certain that the state of the chain is consistent amongst all possible client implementations. As an extra safety measure, it's less about validators validating blocks. I would see validators, validators potentially running a backup or a hot spare.
00:14:35.795 - 00:14:37.215, Speaker A: Yeah, I think that makes sense.
00:14:39.315 - 00:15:07.369, Speaker D: All right, I'm just going to jump in. Yeah, I'm just confused because I think the original question was like, how does Fire Dancer and Agave work together? Or maybe play in the same space? What's the long term plan? I think that was kind of the question. And then you talked about how bigger players on Ethereum have some kind of concerns about making sure that there's coherency. And what I didn't understand is what does that actually mean? Do they somehow try to enforce that or do they create governance mechanisms to try to prevent.
00:15:07.507 - 00:15:08.925, Speaker A: No, no, no, no, no, no, no.
00:15:08.965 - 00:15:35.195, Speaker B: It's purely, it's purely like a, hey, let's just halt. Like I. The only reason I see you running both of the clients at the same time is the case where like, hey, these two clients, they disagree. Let's just halt any of the RPC operations we're doing right now, like sending transactions like Doing all these other things that we would normally do. Let's just hold on to them for a minute and see like, and you know, reach out to some people and see what, what's going on. Right?
00:15:36.215 - 00:16:04.307, Speaker D: So I think you're talking about from the perspective of like, if you were to run two clients at the same time, why would you do that? And I guess you're saying the answer is they kind of become their own little local consensus where they have to agree. Them agreeing is sort of double each, double checking the other. I'm not sure if that was the original question. I don't know. I mean, it's an interesting use case. I just thought maybe, I thought the question was more about in the wider ecosystem, how did the two versions. So why do you choose one over the other? I don't know.
00:16:04.371 - 00:16:53.315, Speaker B: So I would say this. So people are saying like, okay, let's suppose fired answer is a lot faster than like agave from day one. But let's say that's the case and let's say that we even could make it take advantage of that because like, even if it was a lot faster, it doesn't actually necessarily mean that you could take advantage of that. Because there are block limits, right? Like there's 48 million CE limits. There's all these other things that even with all this excess performance now, we may not take advantage of from day one. Now the question there is, can we increase that, those block limits, how does that affect agave if we don't increase them? Like, can validators run on lower spec hardware? I'd argue that from day one it will be. The answer will be summarily no.
00:16:53.315 - 00:17:44.415, Speaker B: But the real question is, yeah, how do they play together? I think they continue to play off each other. I think this puts a little bit of once finance is live and has some good stake behind it, it puts a little bit of ease on ANSA to be able to go off and fix a bunch of their stuff to catch up to where we are. So it allows them to kind of step back a little bit, let us take the, the wheel for a little bit and kind of then go and fix, clean up the house, right, and figure out what's going on in their, in their stack to kind of reach where we're at and we can kind of play this game of like, you know, going back and forth about, you know, okay, where are the performance problems? Where can we kind of eke out the next little bit? Does that answer the question?
00:17:46.915 - 00:17:55.035, Speaker D: I mean, it answers my view of the question. I'm not sure if it answers Otto's original ideas about what his question was.
00:17:55.335 - 00:18:01.995, Speaker C: No, that was. It was really helpful. Of course it stimulates more questions, but I'll shelve those for now.
00:18:07.135 - 00:18:08.079, Speaker A: All right.
00:18:08.247 - 00:18:10.715, Speaker C: And thank you for helping me clarify them.
00:18:13.855 - 00:18:25.841, Speaker A: Cool. All right, well, thank you Liam for the clarification. Let's move on. Yeah. So validate educational workshops. Plan to do another one next week. Looking for a topic right now.
00:18:25.841 - 00:18:56.819, Speaker A: So if anyone has a topic they'd like to discuss. I think the hardware one last time was really valuable. A lot of good discussion there. Would love to get more kind of operator involved discussions going. So yeah. Any. Any thoughts right now? Anybody have an idea of a topic they'd like to see? Monitoring discussion.
00:18:56.819 - 00:19:10.615, Speaker A: Cool. Okay. Some ideas in the chat. All right. Yeah, I'll. I'll pose the question and be planning as well and we could see if there's some ideas. But we'd love to get something going for next week.
00:19:10.615 - 00:19:45.415, Speaker A: And then a reminder about Breakpoint. Breakpoint is coming up fast. 71 days until Breakpoint starts September 20th and 21st. Tickets are at salon.combreakpoint and of course for validators, the side events are going to be where it's at. So Block 0, September 18, Stake Point, September 18 and MEV Day, MEV DeFi Day September 19 are all at this link solana.com Breakpoint side events, which I'll put in the chat.
00:19:45.415 - 00:20:27.175, Speaker A: So if you're an operator and going to make it to Break Point, I highly recommend that you go to as many of the side events as you can here. All really, at least I had a really good experience last time last time I went and I think everyone who organized those events did a great job. I don't know if any of the organizers are on the call if they want to add any more detail there. See, it doesn't look like it. Yeah, I don't think they're here. But again, highly recommend. Should definitely check it out if you're going to be in Singapore.
00:20:27.175 - 00:20:59.915, Speaker A: I think applications are still pending. I can check on that for you with Brian from Jito. So I'll ping him to see. But I think they do kind of a periodic approval. Out of curiosity, how long have you been waiting for the yes or no weeks. Okay. Yeah, I'll check in with them.
00:20:59.915 - 00:21:22.965, Speaker A: Yeah. Any other Questions about block 0 break point? All right, otherwise that's it for topics. Anything that people want to bring up? Yeah, fair. Go ahead.
00:21:23.665 - 00:21:39.885, Speaker E: I'm just running on the status of 1663 to pull request to allow Central scheduler to work with swq. It's. It seems like it's kind of stuck and I'm wondering if there's anything that we done to move it forward.
00:21:42.705 - 00:21:46.125, Speaker A: I think maybe Steve's on the call.
00:21:47.755 - 00:21:53.435, Speaker F: Oh yeah, let me go. Let me ask Andrew. I don't remember the latest on that one. I haven't been following it.
00:21:53.595 - 00:21:56.415, Speaker E: Don't hate me, Steve, you're good.
00:21:56.995 - 00:22:05.575, Speaker A: I mean, I think that the fix was in 116 or 17 if I'm correct, but I could be wrong.
00:22:08.955 - 00:22:10.335, Speaker F: I think there's a.
00:22:12.245 - 00:22:13.061, Speaker B: Oh, I'll double.
00:22:13.093 - 00:22:39.625, Speaker F: Check with Andrew, but I think there's like a more proper fix in two. But like, remember that like the new scheduler was supposed to like, I think the adoption curve for the new scheduler was a lot higher than we thought it'd be in 118. Like I think somebody posted Block Rewards and then everybody flipped it on. So I think there's like a more proper fix that we have. Are not going to backport, but I, I don't know. Let me double check.
00:22:41.855 - 00:22:43.155, Speaker A: Okay, thanks, Steve.
00:22:43.495 - 00:22:44.355, Speaker E: Thank you.
00:22:49.175 - 00:23:00.159, Speaker A: Any other topics to bring up? Yeah, go ahead. Take care.
00:23:00.287 - 00:23:36.176, Speaker G: So I started like running a test net and also mainnet validator just like a month ago or something. And I was wondering like when I can expect some, at least some steak from the pools. I don't know, do J and Marinade and all of them, do they have like, like a minimum wait time of like 10 epochs or something? Like it's. Is there something that you can expect or is it just unknown? 20 epochs.
00:23:36.277 - 00:24:04.874, Speaker H: Okay, so Jito has a 20 epoch look back. So the chances of you getting on before 20 epochs is unlikely. And then it has a 10 period epoch where it's. They, they check every 10 epochs. So you need at least 20 epochs. And depending on where you land in their 10 scoring period, it could be, you know, 25 to 30. And then I believe Marinade has a 10 epoch.
00:24:04.874 - 00:24:14.725, Speaker H: Maybe it's 14 now with their latest, their latest scoring change, but that's going to be changing in probably a couple months too.
00:24:15.745 - 00:24:19.245, Speaker G: Okay. Doesn't sound too bad. Thank you.
00:24:20.105 - 00:24:21.485, Speaker A: Yeah, Zen, go ahead.
00:24:22.705 - 00:25:09.075, Speaker D: So I have created a stake pool and recently got a more significant chunk of stake into it, which means that it actually has a meaningful amount of stake to supply to a subset of validators. So with regards to your question directly with my pool, there's no delay. It rebalances 5% every epoch. So it means, what that means is if you make the delegation criteria, then immediately you'll begin to get stake. I noticed that you aren't meeting the criteria for my pool because it's based upon some performance metrics. And I looked at your performance metrics. There are some things you have to work on, but if you can improve those then and you could raise yourself up to, you know, one of the top performing validators, then you would immediately be eligible for stake, at least from that pool.
00:25:09.075 - 00:25:20.925, Speaker D: I don't quite know why some of these pools do it only every 10 or 20 epics. That seems like a long time span, but I guess they have their reasons. But at least in terms of the Shinobi Performance Pool, it's kind of immediately.
00:25:21.455 - 00:25:22.755, Speaker G: Okay, thanks.
00:25:26.855 - 00:25:32.315, Speaker A: Sorry. Go ahead. Zantetsu, what's the name of your pool?
00:25:32.735 - 00:26:43.067, Speaker D: Shinobi Performance Pool uses all the many of the performance metrics that have been gathering data about for quite a long time now. The things that I use to create the poor performance list, if anyone's familiar with that, I use those plus some additional metrics to create a composite score that's entirely algorithmic and that has no input for me, aside from setting the weights that are used for the various metrics to decide which ones are more important or less important in terms of summing up the total score. And we have some validators that are very high performing but weren't receiving much stake that thankfully now are getting a little bit of a stake boost because of that. And if anybody would like to know more about the delegation criteria or how those performance scores works, you're welcome to join the discord or just look up, you know, the website associated with the stake pool and there's details there. And I'm always happy to answer questions too. It doesn't have enough stake to like, you know, spread out something like jito, like, you know, tens of thousands to hundreds of validators. But it's targeted at 40 right now and it's supplying between 8 and about 15k state to those.
00:26:43.067 - 00:26:44.255, Speaker D: To those 40.
00:26:47.075 - 00:26:48.415, Speaker A: Yeah, fair. Go ahead.
00:26:49.355 - 00:26:51.155, Speaker E: Zan answered my question. Thanks.
00:26:51.315 - 00:27:01.655, Speaker A: Cool. There's a question about your pool, Zan. If it's automatic or there's some application process.
00:27:01.955 - 00:27:23.725, Speaker D: Yeah, it's automatic. There's no application process. The only thing is that I manually blacklist validators that if I can detect what I think are sybils, usually it's just by naming. I'll only leave one of the sybils eligible. So if you have like three nodes all named the same thing, then one of them I'll leave pull eligible. The other two I will not. And then I also blacklist any automatically, any and all SFTP rejects.
00:27:23.725 - 00:27:41.875, Speaker D: So, you know, if they've determined that you're a Sybil, then you get rejected also. Otherwise everybody else is eligible. But you're only going to get stake if you kind of have a good, you know, performance across a wide range of metrics, as are tested by the pools algorithm.
00:27:44.335 - 00:27:56.459, Speaker A: Very cool. All right, I think that's it. Thank you everyone. And yeah, there's a link for Xan's pool in there.
00:27:56.607 - 00:28:45.585, Speaker D: Oh, can I just say one more thing? So the way my pool works, it does not consider APY at all in terms of deciding who to stake to. The only thing is it has the standard 7% commission limit. So if you're under that 7%, you can get stake if you have good performance. My goal was to allow validators to actually charge if they can do better. So, you know, if you do better performance wise, like if you're actually voting fast and having high success and good, you know, low skip rates and all these things, then you could actually potentially charge a higher commission and get the same stake as someone who has lower performance but higher apy. That was kind of the goal of it. So just focus on getting your performance up and you could get into that pool and you don't have to run 0%.
00:28:45.585 - 00:28:47.805, Speaker D: I mean, you can, but you don't have to.
00:28:50.515 - 00:29:09.275, Speaker A: Cool. All right, we'll end it there. Thanks everyone. And reminder, there is a community validator led discussion happening in two weeks and very likely we'll do a educational workshop on the 18th a week from now. So see you all soon. Bye.
