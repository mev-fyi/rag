00:00:05.400 - 00:00:37.798, Speaker A: Hey, everyone. I'm here today to talk about the new, upcoming Solana learn pathway that has done in collaboration with both figment and Solana Labs. And so today we're really going to be talking to all the developers out there. We want to show you what is Figment learn. What can you do with Solana on Figment learn? What is a Solana learn pathway. I want to show you how it works, what it looks like for you, what you can do as a developer. And then we want to bring up some folks from the Solana labs team, go through some Q and A, learn more about Solana, learn more about why you should consider it for your next project.
00:00:37.798 - 00:01:02.364, Speaker A: So I want to jump right in. I want to get right into a demo and show you what is learn. How can you do it with Solana? First, I'll show you a couple slides and then Guillaume will take over and actually go through a brief demo about what's going on. And then we'll get to all your questions. So if you have questions along the way, use the little ask a question section at the bottom. But we want to show this is really for developers today. We want to show you how you can use this, what you can expect to learn, and then answer all your questions about Solana.
00:01:02.364 - 00:01:25.038, Speaker A: So let's get started. I will share my screen. Okay, here we go. Okay, great. And can you guys give me thumbs up? Can you see my screen right now? Perfect. All right, here we go. So I want to talk about really two things today.
00:01:25.038 - 00:02:11.534, Speaker A: What is Figment learn? And how is it helpful for developers? And then two, how can you get up to speed with Solana and consider using Solana for your next web app? So when we started Figment learn, we really wanted to solve two problems, two really big pain points we found for developers who are building in web3, which is, where are the docs? How can I get standard docs? How can I learn about these different protocols? How can I compare different protocols? I've heard about Solana. I've heard about Ethereum. What are the strengths of each of them? What can they do unique for my project? So this is why we created this website called Figment Learn. And I'll give you a quick demo of it in a minute. But learn is at learn figment IO. We'll provide the links in the chat, but it's really a place for developers to go and learn about web3 development. If you've been a web3 developer and you launched some apps, maybe social apps or mobile apps, and you want to learn about blockchain.
00:02:11.534 - 00:02:59.722, Speaker A: This is a great place for you to come in and learn things. And so we really started from this first pain point, which is where can I find documentation? How can I compare these protocols? The next thing we did is we said, okay, once we've taught people the basics, allowed them to compare protocols, we actually want to go through interactive tutorials. Okay, how do you launch your first smart contract? What is a smart contract? Let's back up. We created these series of tutorials. We call them a pathway. So pathway takes you from literally starting from getting your development environment set up all the way through, launching a smart contract, interacting with the blockchain, that's really what we want to go through today, is show you that process and how it works. As I mentioned, this is all at learn figment IO and it's a place for you to compare protocols, look up documentation and complete these tutorials as well.
00:02:59.722 - 00:03:46.194, Speaker A: What we found is that as we taught developers this process and introduced them to all these new blockchains, we found that the number one question we heard was, okay, how do I get tokens? How do I actually do this on Mainnet? This is what we really did next. As we said, if you go through and complete all these pathways and all these tutorials, we actually help you get started. We'll give you a little amount of tokens, around $50 worth of tokens to actually get started, to start deploying your first smart contract. If you want to test out staking on Mainnet, that's really what we want to talk about today is how can you learn about becoming a developer on Solana? Get some, a little bit of tokens to get started and really start building in web3. That's what we're going to show you today. It's very simple to do. I mentioned the website learn figment IO.
00:03:46.194 - 00:04:08.894, Speaker A: I'll show you that in a second. And then I will also show you this service called Datahub. One of the things that's sort of a surprise to many developers coming into web3 is the fact that you need access to a full note. You need your own copy of the blockchain somewhere. Data hub is a service that provides that for you. The thing to know is all this is free. You can do all this today, starting right after we're done here today.
00:04:08.894 - 00:04:45.050, Speaker A: And if you want to go further and deeper, there's more to do there. But really what I want to talk about today is getting started and that's what I'll show you now. So the place to start is really here at learn Figment IO. And if you scroll down, you'll see right here exactly what we're talking about today, the Solana pathway. As I mentioned, there's a ton of other networks here if you want to compare and contrast and look at the docs. But really, for our purposes today, we're just going to look at the Solana pathway. So if you click into it, it tells you a bit about it, a bit of an overview, just so you know what you're after and some of the core concepts.
00:04:45.050 - 00:05:18.616, Speaker A: But if you want to click get started and set up the project, you go through here and it shows you there's a basic repo, an app you can clone to get started. And Guillaume in a second will show you what this looks like. But we'll show you a few things you'll need to do to get started. So first, you'll want to go and clone this repo, and the second thing you need is you need an account on data hub. Good news, it's free. I'll show you what that looks like right now. Here on Datahub, there's you go to Datahub, you click on Solana, and here is your API key.
00:05:18.616 - 00:05:47.174, Speaker A: So right now it's blurred out. You can show it or copy it, but you'll need this. So you can actually start submitting transactions. And as you go through the project, this is where you'll verify that everything you're doing is actually working. So as you go through this tutorial and start looking at everything that's happening here. So go back to data hub and click start and click verify to make sure that you're actually doing things as you go, connect to the Devnet, create a key pair, fund your account, all these things. And so it's sort of like if you've ever done test driven development, it's sort of like that.
00:05:47.174 - 00:05:55.254, Speaker A: You want to get the green check mark as you go, and we'll be verifying they're actually completing the code correctly along the way. So I'm going to actually pause here.
00:05:55.334 - 00:05:56.350, Speaker B: And I'm going to hand it over.
00:05:56.382 - 00:06:20.304, Speaker A: To Guillaume to actually show you what this looks like. So the things we've introduced so far are this website, learn figment IO, where you get started, and data hub is the place where you go to actually go through and verify your tutorials. But I want to show you really what you'll be doing as a developer and what you'll be learning. So I'm going to stop sharing my screen here. And Guillaume, if you want to go ahead and share your screen, you can show people what we've built and what they'll actually be doing as a developer.
00:06:20.844 - 00:06:22.268, Speaker C: Cool. Absolutely.
00:06:22.396 - 00:06:23.380, Speaker A: I see your screen now.
00:06:23.452 - 00:06:24.284, Speaker C: Can you guys see my screen?
00:06:24.324 - 00:06:24.904, Speaker A: Cool.
00:06:25.484 - 00:07:16.214, Speaker C: What ND showed you was the setup of the project. Once you're done with this, once you've cloned and installed all the NPM dependencies and added the environment variable for the API key of Datahub, you should be able to just simply yarn start and start this little client side application we've built. This app is built on top of create react app, which is the canonical way of creating react app these days. We've made a few little tweaks. The main thing we've added is obviously we've incorporated this NPM package which is Solana web3 js, I think it's called. This is the main JavaScript library that we're going to use in this pathway to interact with the devnet of Solana. There's three clusters, Mainnet, Testnet, Devnet.
00:07:16.214 - 00:07:40.052, Speaker C: We're mostly going to use Devnet. I'm just going to show you guys how the first step would work. All the other steps are working in the same way. Once you actually run yarn start, you'll see this little app that boots. It should automatically open it on localhost 3000. Otherwise just visit it. If you actually look at the instructions, every step works the same way.
00:07:40.052 - 00:08:13.510, Speaker C: It introduces you to a few key concepts. In the first step, it's really the JavaScript SDK that Solana built. Then it gives you a little challenge. Previously, all the other pathways we did were very heavy on the copy and paste and we thought that it's really taking away a lot of the learning fun of the struggle of the. I'm not sure where to go reading the docs. This is really what the day to day life of a developer is. No matter if you're a web two developer, web3 developer, it all starts that way.
00:08:13.510 - 00:08:23.264, Speaker C: So what we thought is let's give people a little challenge. So the way it works is that you should see my visual studio code. Right Andy?
00:08:25.804 - 00:08:27.356, Speaker A: Yep, yep. Ok, cool.
00:08:27.380 - 00:09:07.284, Speaker C: I wasn't sure if it was my whole screen. So the way it works is that you'll be on this first step. We will tell you to go to a file and some of the code won't be working. We haven't implemented the whole thing. We basically build this whole applications and then remove the few strategic places so that you, you can actually can get your hands dirty and actually learn how to use the Solana SDK so in this case we haven't implemented the connection to the SDK. So I'm just going to write it real quick. You can just create a connection instance using the URL that we give you, which is the one using the API key.
00:09:07.284 - 00:09:40.828, Speaker C: You can then call. I'm actually going to copy and paste so you don't watch me code, which is always painful when it's live. But for each step, by the way, there is the solution because we don't want any developers to get stuck. So there's the challenge which gives with a bunch of hints and then there's a solution. We really encourage you not to look at the solution, but here it is for you. If you're stuck, once you actually save, you'll see that this page automatically reloads. We get the HUD reload of react of the create react app and then you can just move to the next step automatically.
00:09:40.828 - 00:10:28.564, Speaker C: And as soon as you move to the next step, if you actually don't do anything, you'll get an alert that tells you hey, you got to implement the generate key pair function. So you would just simply go through the instructions on the second step, learn about account and key pairs, look at the challenge, figure out how to use the documentations and then implement that. And then automatically this page would reload and you'd be able to go to the next step. So yeah, I'm not going to show you all of them because it defeats the purpose of you guys actually going through this pathway. But we've really tried to hand hold and give you hints when the time is right and do something really interactive. So I'll stop sharing my screen now and the last thing I'll say is, in terms of I'm not sure how to stop.
00:10:28.644 - 00:10:29.636, Speaker A: It's always, oh, there we go.
00:10:29.660 - 00:11:00.464, Speaker C: It's probably here. Close video. The last thing I'll say before I give it back to Andy is I'm a web two developer. Most of the people who are going to go through this are web two developers. What's important to understand is really that on the client side, building a decentralized application is the same. It's usually a rails or vue running in the client. The only difference is that instead of interacting with a server, which is on the proprietary servers of a big web corporation, you're actually talking with a public blockchain.
00:11:00.464 - 00:11:32.756, Speaker C: And this is really what we want to do. You're going to build a client and then the last two steps are going to be about understanding, deploying and interacting with a smart contract which is called a program in Solana World. So in the end, if you do this whole loop, you'll basically bid the client side the contract program, which will be deployed, and then you'll have a full 360 web3 experience, and there's like $20 in Sol token for anyone who actually completes it and gets verified. So that sort of gives you a little overview.
00:11:32.820 - 00:11:33.044, Speaker B: Yeah.
00:11:33.084 - 00:11:34.236, Speaker C: Andy, back to you.
00:11:34.420 - 00:11:56.794, Speaker A: Thanks, Guillaume. That was great. And so, yeah, if you've joined us in the past and you've seen how we've done pathways, this is a really new approach. And the goal here is that instead of going through and hitting some APIs and being left with a pile of scripts, at the end, you actually have something in the browser, something you could really build off of. We'll start addressing some of the questions we're receiving. I saw one of them was, hey, look, I want to build a game. Eventually.
00:11:56.794 - 00:12:39.754, Speaker A: If you've never built on salon before, this would be a great foundation for you, because at the end you'll have a lot of different things you could build off of, or at least patterns you can use to go and create new accounts and things like that. Really what we tried to do here was create something which is much more interactive, much more, almost like if you've done like a capture the flag type thing before, things like that. And so, yeah, it's new for us. We're really excited about it and really want to hear your feedback. The last thing I'll say before I kind of introduce the team, we sort of go through some of the q and a is if you get stuck, there's a number of places to get help. So as Guillaume said, we really want to present you with the challenge, and if you get stuck, you can look at the solution. But we also have a really active community of other developers going through this right now.
00:12:39.754 - 00:13:02.786, Speaker A: So there's a, our community is, I think we linked it up to earlier. It's in our discord. It's called the figment learn discord. You know, there's thousands of developers in there who've gone through this process, and we'll be going through this process as well. So if you get stuck, if you have anything you want to share, please join that. And actually, in the error messages, some of the error messages include the link to our discord. So if you get stuck, hopefully right there in the error message, you can click it and kind of just go into it.
00:13:02.786 - 00:13:34.236, Speaker A: The last thing I'll say is, you know, we created this and we really are looking forward to people who want to extend it, fork it to add to it. We also reward people who want to create tutorials. And so going through this process, I think at the end of it, you'll get $20 worth of soul. If you go ahead and submit a tutorial to us, it doesn't have to be like this web app. It could be a standalone text tutorial. We also will award $500 worth of soul. So if you kind of get to basics and want to extend your knowledge or share what you've learned and do some other things, we're really looking for active people that want to contribute tutorials.
00:13:34.236 - 00:13:42.842, Speaker A: We've had people do it for a lot of different protocols, so if you need some suggestion or guidance. So happy with that, too. Okay, great. That'll conclude we actually have a list.
00:13:42.898 - 00:13:57.346, Speaker C: We'Ll actually publish after this, a list of suggested tutorials. So if you don't know where to start and a little bit confused and you just want to see like a list of 15 2025 ideas that we and son on the team built, we'll provide this. So we'll probably just post a link at the end.
00:13:57.530 - 00:14:16.914, Speaker A: Great, great. So I wanted to just jump right in and get to the demo, show you guys what you can do, but now I want to get to the Q and A. We've crowdsourced a lot of questions beforehand. Please keep adding them down in the ask a question at the bottom. Make sure to try to get as many as we can. But before we do that, let's take a step back. We got two people from Figment here, of course, myself and Guillaume, who have been talking with you guys.
00:14:16.914 - 00:14:25.746, Speaker A: We have two people joining from Solana Labs. We have Chase and Austin. Chase and then Austin. Do you guys want to introduce yourselves and what you focus on with Solana? Sure.
00:14:25.890 - 00:14:45.564, Speaker D: Yeah. So my name is Chase. A lot of you might know me. I've been pretty active and vocal on social media since I started. Basically, I'm the developer relations lead. My goals pretty much quite align with what you guys exactly what you're doing right now. We want to make the onboarding process for developers as easy as possible.
00:14:45.564 - 00:15:05.102, Speaker D: Right now, there's probably a high barrier to entry, and what you guys have created right here is kind of reducing that friction. And I think one of the biggest things that you've already touched on is that a lot of people think to get started in Solana, you immediately need to understand rust and these low levels programming languages, which is not the case.
00:15:05.198 - 00:15:05.430, Speaker A: Web.
00:15:05.462 - 00:15:37.374, Speaker D: Two developers can come in, build their own wallet, build a Dex use serum, do any of these things without touching the rust portion? Obviously we have a huge demand for rust developers in the Solana ecosystem right now. It's actually crazy. But if you want to come in and get your feet wet and really just start experimenting, you could build your own simple dapp using straight up JavaScript. I do want to give a shout out. There's a couple other projects. There's a C sharp SDK that just got built. There's a Java, there's a python, and there's a couple others in the pipeline.
00:15:37.374 - 00:15:50.314, Speaker D: So almost any web two developer has the ability to dive in right now with the languages they're familiar with and experiences APIs. And then we're going to convert you to rust developers.
00:15:52.494 - 00:15:55.822, Speaker A: Yeah, great. Thanks for that, Chase. Austin would love to hear from you as well.
00:15:55.998 - 00:16:37.234, Speaker B: Hey, I'm Austin. I work on product and marketing here at Salon Labs. One of the main things we've been working on over the last, really, six months is about improving the developer tooling and experience. So, you know, our role working with the foundation here is really to make it easier for people to build and deploy applications. Sometimes it's web two applications, sometimes, you know, one of the, one of the software packages that we have coming soon is from a community member, is going to be a swift SDK. So trying to bring more mobile experiences to the Solana ecosystem besides just the wallet system, but that really, that infrastructure layer tooling that allows people to build great applications on top of that. You've really seen this take off in the DeFi space as well.
00:16:37.234 - 00:17:02.254, Speaker B: But with all of these kinds of applications. Yeah, this goes back to data hub as well. You need to be able to talk to nodes, submit transactions, read data from the blockchain, all that sort of thing. So we're really kind of excited for this and the tutorial system to really kind of expand what's possible and easy in terms of developing on Solana. I will also say that I joined from a competitor to figment. So I feel like a little bit of a spy sneaking in here today.
00:17:03.114 - 00:17:17.866, Speaker A: Hey, it takes a village. The way we think about it is we have some good ideas. Lots of other people have good ideas. It's so early. Let's just keep building. There's a lot of territory for everyone. So first we got to bring everyone along with us.
00:17:17.866 - 00:17:20.626, Speaker A: So that's our mindset. Yeah.
00:17:20.650 - 00:17:57.794, Speaker B: And it's been such a really, I will say the last, the last. We have a hackathon that just wrapped up. So I think we have an announcement coming soon. About winners from that. And really all of these sorts of applications, from the ability to access nodes easily without worrying about infrastructure, that was, I would say, a large problem a lot of developers were facing three months ago. Things like data hub really are making this much, much easier every day for developers to not have to worry about the infrastructure systems that they're running on. I think that's a pretty major step in making the web two development experience possible on web3 as well.
00:17:58.534 - 00:18:07.862, Speaker A: Perfect. Yeah. Well, thanks, Chase. Thanks, Austin. Really appreciate that intro. It makes a ton of sense. And so we have a number of questions, like I said, that we sort of crowdsourced before.
00:18:07.862 - 00:18:24.994, Speaker A: We're accepting questions right now at the bottom of the q and A. I'll try to get as many as possible, but I want to kick it off just to make sure for it seems like a number of people already familiar with Solana. If you're not, can one of you guys, can you give us a pitch for Solana developers listening today? What makes Solana special? What should I think about Solana for my next app?
00:18:25.304 - 00:18:30.044, Speaker D: Austin, I'll let you take this, and then I'll just follow up with some additional information.
00:18:30.384 - 00:19:13.244, Speaker B: Yeah, it sounds good. So Solana is a layer one proof of stake chain. It's designed for long term scalability, high transaction throughput, and has a token economic and validator economic system that keeps transactions cheap relative to whatever the asset price may be. The real idea behind Solana is if you had a concurrent state blockchain. So no sharding associated with it, but it has the ability to scale as hardware increases in power. And this is a pretty different concept if you look at something like bitcoin. Obviously the security of the network comes from the fact that it gets harder and harder to mine blocks as more people participate in computational power increases.
00:19:13.244 - 00:20:10.584, Speaker B: Solana is really built to use that additional power that comes from Moore's law. Just computers get faster and faster every year to increase transaction throughput and not rely on software innovations to deliver that predictable scaling into the future. So one of the main promises of Solana that we've been able to sort of see it deliver just in the 18 months since mainnet beta went live, is that it gets faster and it keeps getting faster. We want to build a platform that over the long term is going to stay viable for developers. I think a lot of us have been around long enough to remember when Ethereum was very cheap to use. And this is not a knock on Ethereum, but as the asset price has increased so dramatically, the cost of doing things on the network has increased. The way that Solana has been structured, from an economics incentives perspective, is even as asset prices increase, you both have transaction scaling, which will allow that cost per transaction to stay very, very low over the life of a developer.
00:20:10.584 - 00:20:41.622, Speaker B: So that's really, I'd say the main pitch for Solana is you don't have to worry about programming on sharding. You get the speed and the throughput and the block finalization of 400 milliseconds. And really, when you're looking at that, it means you can build web3 applications that feel to a consumer like a web two application. You're not waiting ten minutes for confirmations. You're not having to deal with sharding, which is, if any of you tried programming on it. It's an adjustment, to say the least. And so you're kind of able to sort of, in our view, hit that nice middle ground.
00:20:41.622 - 00:20:46.514, Speaker B: Plus, working in rust is a joy for those who have made the transition over to it.
00:20:47.064 - 00:21:41.854, Speaker D: Yeah, and I had a feeling Austin was going to go for that angle. So I definitely just kind of wanted to reiterate on the fact that I think there's this kind of weird resistance or just hesitation for web two developers. Like, I was a web two developer for ten years, and to make that transition into blockchain, there's a stigma around it and all these things. This is complex, but really, as a web two developer, you can really just dive right in and start interacting with the blockchain just like you would with your own centralized server API. And so don't be scared. It's really, especially with what you guys created, it's amazing. So just run through that, see how easy it can be to do transactions, set up wallets, and just build on, so on, and just like you were working with, with your own native centralized application.
00:21:42.434 - 00:21:57.626, Speaker A: Got it. Got it. So that's very helpful. Thank you, Austin. Thank you, Chase. I want to also ask Guillaume a similar question. Guillaume is also coming to blockchain just in the last six months, and he's looked at a few different ones for you going through the process of learning.
00:21:57.626 - 00:22:24.906, Speaker A: Solana, what were the big aha moments? Or what things stuck out to you as unique things that you learned as you created this pathway? You're on mute, by the way. Yep. All right, sorry. All right, I'll keep going. He's holding us in suspense. Cool. So I actually have a slightly different question, which is you seem to be very active in terms of building community.
00:22:24.906 - 00:22:33.034, Speaker A: How does your approach to building community sort of differ from other blockchain ecosystems or sort of what's your overall strategy for building community? Developer community.
00:22:33.454 - 00:23:20.378, Speaker D: So I actually came from another project. I was part of the Ken eco system. I was developer relations advocacy over there. And one thing that I really learned about building a developer community is paying attention to your developers, speaking with them, having one off conversations, being available to them, because like if you spend that time to be available to them, it's going to be a lot more sticky of a community. I get messages all the time saying thank you for always answering our questions. I just went through about 200 DM's this morning between Twitter and Discord. I answered all of the ones that weren't asking win moon and just being engaged and answering the questions and just really trying to be there for the like.
00:23:20.378 - 00:24:00.702, Speaker D: We have some extremely talented rust engineers out there that need very heavy technical help, but I'm really focused on getting people to cross that line into web3 and start building on a blockchain. And I think the more put myself out there, the more I engage. It is really the best part of, or the best way in my view, to build out that community is just, we're here to help, so don't hesitate to ask questions. And that's really the essence of developer relations. It's called that for a reason. Like you spend time relationship with the developers and they're going to stick around as long as you help keep them motivated.
00:24:00.798 - 00:24:41.996, Speaker B: So, yeah, and I'd say even to go a little further than that, if you go into our discord and you go into some of the development channels, that is where our engineers work. There is a little bit they do in our own private internal slack. It's generally around like security bug reports we've gotten or something along those lines. The development is done in the public. It's not like we do a bunch of commits on GitHub in private and then publish the finished repo or publish it in a batch update, you can see us working in real time. And on the engineering side, that ethos has really pushed forward into the rest of the community. We try and be as transparent as possible.
00:24:41.996 - 00:25:23.510, Speaker B: When people call us out on something, we try to give complete answers, both on technical questions and then on policy related questions, too. You know, this is an open source project at the end of the day, right? Like Solana Labs is one ecosystem player. The Solana foundation is part of it. You know, we are, we are writing a minuscule fraction of the amount of code that's out there now, and that is in production environments across the Solana ecosystem. And so that's, that's kind of what community is really all about in this is like, we are like, we, as Solana Labs, are help building tools. The Solana foundation is like, has a custodial relationship. And like, that's it, right.
00:25:23.510 - 00:25:52.854, Speaker B: The long term vision here is not that this is a blockchain where people in the Solana foundation are writing most of the code. This is sort of the way I think you keep moving things forward. Well, is like you trust the community as much as anyone can possibly trust the community. And that's like how software gets developed. We have on chain governance. Those are just some of the small pieces to it, but it really is about building as much in public as possible.
00:25:54.794 - 00:26:25.740, Speaker C: Yeah, I'll echo that with the working in public. I think that's a huge reason for developers to trust a project, a foundation, a blockchain. It's such an amazing thing to do. It's really inspiring for a developer also to see real people working, building the pipeline in public. I think that we have the same approach, in a way, to community, in the sense that right now we're also sort of very centralized. We answer every message. People come to us, people come to Figment, DM me, DM, like all the people who work on Figment, and we answer everything.
00:26:25.740 - 00:27:12.546, Speaker C: But the goal is really for us long term, to be able to slowly sort of retract and let the community live and people be peers. And instead of all coming to us to build tutorials or coming to us to get rewards for questions, just ask anybody. And without even knowing if that person works for figment, if that person is, is an experienced web3 or Solana lab developer, it doesn't even matter. That's sort of the vision, like, and I think from my perspective also as somebody who's new to that world, industry, quote unquote, is a lot of projects start, start a little bit centralized, because you have to start that way. And then little by little, they remove those dependencies. They, like, unpin themselves from their community and start creating something that is very decentralized. So in a way, we are like a symbol of this change we want to see.
00:27:12.546 - 00:27:15.254, Speaker C: And so we're trying to do this also in the same way.
00:27:15.754 - 00:27:51.126, Speaker D: Yeah, and you're really unblocking, enabling, and motivating developers and just being there to answer. And I think one of the things that I forgot to touch on, and I'll just talk about it briefly so we can move on, was feedback. So I've only been here for about a month and a half. We just completed the hackathon. I sent out a feedback form. We got about 400 responses. I think, as expected, a lot, a lot of the feedback was about the lack of tutorials, the lack of walkthroughs and guides and kind of curation of resources, which is something that I'm heavily focused on right now.
00:27:51.126 - 00:28:11.654, Speaker D: And you obviously fit right into that. So I think in the next few months we're going to really see a space where somebody can jump in and be like, I'm new, I go here, I'm somewhere in the middle, I go here and then basically just follow along those sort of paths and everybody has a place to go.
00:28:12.874 - 00:28:50.546, Speaker C: And just answer the question that Andy asked me earlier when I couldn't mute. I'm sorry. The way you're talking about Battachase is actually, honestly the same framework. We're thinking about it. We actually sort of divide our Personas in the same way. Like the new beginner who's confused and really needs a lot of handholding, somebody who's a little bit more intermediate and is not afraid to look at the source code and like, you know, spend a few hours figuring out something out, and somebody who's more advanced, who actually is seriously looking into using those technologies to build, like, a business, to build an application. And we really think in that way, and I think that's maybe to answer now, really and these questions.
00:28:50.546 - 00:29:23.156, Speaker C: That's probably why we feel like, so strongly about collaborating with you guys, because I think we're very aligned. We're aligned with a lot of other projects, but there's something special, I think, with you guys, where we feel very aligned with what you're trying to do and really bridge that gap. Like really. And I mean, I know we use that expression all the time, but really try and bridge that. Like have empathy, have perspective. Like have the perspective of somebody who's confused and can help other people who are confused. And the last thing I'll say is, on top of the stuff we've built, I've been also very inspired by the stuff you guys have built.
00:29:23.156 - 00:29:57.304, Speaker C: I think you have a token swap program, which is also this full stack dapp, which is really amazing, which I think I actually built the Uniswap. A tutorial for the Uniswap clone, which I think is an incredible app. It's written all in typescript. The code is really, really great. I think for now the pathway is a very good beginner content. I think the uniswap clone you've built this token swap program is a much better intermediate advanced. If anybody here is a little bit bored with the pathway, go straight to.
00:29:57.304 - 00:30:05.994, Speaker C: You'll have a blast. Like, there's enough code to spend weeks understanding all the intricacies. So yeah, that's all. That's also something great you guys have done.
00:30:06.114 - 00:30:06.986, Speaker D: That's awesome.
00:30:07.130 - 00:30:32.844, Speaker A: Yeah, very good. Yeah, thanks for that, Guillaume. So we talked about once people are in your discord how they can dm you chase everyone dm chase with all your questions. Just kidding. There's community there, but the people have already arrived there. What are you guys doing to sort of attract new developers into web3? Do you have a specific strategy around web two to web3 or from other blockchains to test your blockchain? What are you doing to sort of attract developers in that way?
00:30:33.584 - 00:31:01.444, Speaker D: So basically right now is, like I said, I've been here for about a month and a half and I'm pretty much still in the weeds with kind of constructing and kind of architecting the best way to do this. So full disclosure, like this in the past, probably month, is when I've really been focusing on this and I have some really good ideas, but like nothing really to share right now. All of that stuff will be made public probably in the coming months.
00:31:02.544 - 00:31:06.040, Speaker A: Okay, Austin, you want anything you want to add there?
00:31:06.192 - 00:32:01.234, Speaker B: Yeah, I mean, one of the things that's really been, I'd say the most impressive is like we haven't done a lot of recruiting of developers so far, and we still have this like incredibly vibrant development community. The best recruiters for developers are other developers is just people successfully building applications and then other people seeing that success and sort of getting involved on that. You know, one of the early, one of the early things I think is worth talking about is serum. So serum is a decentralized exchange, but it takes it like one step further because there's a central limit order book that's built fully on chain, so they actually run cranks on this central limit order book. For those of you who are not familiar, it's the same order book system that a centralized exchange uses. It's the same thing that the Nasdaq uses. It's a much more advanced system than just a basic amm or a curve function amm.
00:32:01.234 - 00:32:56.954, Speaker B: But the way they built it, it's super open. So you look at something like radium. They decided to build an owner front end for it that allows multiple liquidity pools to all tie into that as well. It's a very interconnected ecosystem, and this is partially because Solana encourages the reuse of existing on chain programs in order to create interconnects between things, as opposed to fully deploying a copy of it every time you want to use that same program. So there's been a lot of just organic developer adoption. It's definitely something that like, especially as, as we sort of move from like an emerging protocol into a more established protocol and a more established development environment, you know, the recruitment becomes something that, you know, that's, that's why chase is here, as in part, is just because we're taking this very seriously in terms of how do we get a billion people using crypto? It's through fantastic applications developed by developers that have a more consumer focused, less defi focused too. Over the long term.
00:32:56.954 - 00:33:03.414, Speaker B: We have a really, really strong defi development community, and we're looking to replicate that success in other areas, too now.
00:33:03.914 - 00:33:19.494, Speaker A: So you hit on one of the questions that someone asked in the Q and A, which a click start answering. Now the question, here's a question. Is there a library or marketplace for third party programs? You mentioned you wanted sort of reuse or people to extend what they're doing. How can people find out what's out there and what they can use?
00:33:20.154 - 00:33:42.414, Speaker D: Yeah, so right now in our Solana documentation in terms of libraries, we have two sets of programs. We have the native programs. I think probably the most popular one of the native is the system program. That's how you transfer soul from one account to another. And then we have the Solana program library. And this is for all the token programs. There's a swapping program.
00:33:42.414 - 00:34:03.940, Speaker D: There's a, I believe the staking programs in there. So that is all in the documentation. So I think under the runtime libraries where the native programs are. But at the top of our docs dot solana.com, there is the program library. And you can go there and you can see all of those programs. It's fully open source.
00:34:03.940 - 00:34:29.568, Speaker D: Like I said, if you're going to build a Dapp using those, you're not really inventing anything new. You're just throwing a front end on something that exists, but at least that gives you an introduction. I think one success story that I had heard was Bonfida saw what serum had done. Serum is completely open source. And they were like, I don't necessarily like how this thing looks. I'm going to build my own and make it really nice and pretty. They did that.
00:34:29.568 - 00:35:16.804, Speaker D: And then once they started building that, they went ahead and started getting curious and then started building their own custom programs. And then, like, that's kind of like the path that I see for a lot of web two developers is basically what I've said a couple times already. I know, but it's like you get in there, you build with these custom programs that already exist or these existing programs, and then once you get curious, you poke around, you're like, how is my AP actually talking to this program? And then once you figure that out, you're like, oh, I'm going to go make my own little program. Maybe that program just does something very simple. Like, you send it in an account and an amount of soul, and that immediately sends it to another account, whatever it might be. And then you just, now you're in the rabbit hole, and hopefully you're stuck forever.
00:35:18.024 - 00:35:29.564, Speaker A: Okay. Yeah, thanks for that question. User et al, extraterrestrial. Thank you for that. I don't know if that's what it is, but thanks for that question and thanks for popping in there. But Austin, you also said something. You mentioned Defi and nft.
00:35:29.564 - 00:35:55.598, Speaker A: Of course, these are sort of floated to the top of mind for a lot of people who are looking at crypto, and it seems like there's, you talked about why doing different defi apps on Solana might, might be a good idea, especially with the strength of serum and all the open source stuff there. Do you want to touch on anything, any of the other use cases you either go into nfts or other things you see coming down the pipe, whether it's daos or anything else, is there anything that you really see that might be Solana might be well suited for or things you hope to see more of?
00:35:55.766 - 00:36:52.328, Speaker B: Yeah, certainly. So, you know, I want to touch quickly on Metaplex, which was something that recently launched on Solana. So Metaplex is sort of the best analogy that, like I kind of used to describe it, is like the central exchange versus the decentralized exchange. Metaplex is basically a decentralized NFT exchange and store. So right now, most of the marketplaces rely on a central authority to run them with Metaplex, every user who spins up a storefront, which is basically just a web two front end that connects into a on chain program that's run in obviously a fully decentralized way because it's an on chain program that actually mints the nfts. So there's no centralized authority here, unlike an opensees or a rarible or something along those lines where there's a company running it. So that's a great example of program reusability, where anyone can create a storefront or, I mean, quite frankly, you don't even have to use the front end code that Metaplex created.
00:36:52.328 - 00:37:31.324, Speaker B: You could build your own front end code because it's just talking to an on chain program spec, which is pretty cool. I see Chase just put the guide down there in the chat. It's definitely worth checking out. They've done a really nice job building that up. So that's been really kind of, I'd say, interesting to see. When you talk about what are some of the best uses for something like Solana, in some ways, describing what are not good uses for it is sometimes even more helpful. So if people are looking at sort of the thermodynamic energy security you get from bitcoin or Ethereum, you're not going to get that matched on something like Solana because the protocol is not.
00:37:31.324 - 00:38:19.780, Speaker B: Not built with those sort of same incentives in mind. A good way to think about this is like execution layer versus settlement layer. So in the fintech space right now, all of the innovations happening on the execution layer, that's Robinhood, that's all these fintech apps, that's Venmo. Settlement is basically the Federal Reserve, right. In a us system here, Solana, it's sort of long term play is very compatible with a world that has Ethereum as its base currency or bitcoin as its base currency. You're talking about basically wrapped assets being deployable on a chain that allows for super fast transactions at incredibly low costs. That is really like, what you need in order to be able to build consumer focused web3 applications.
00:38:19.780 - 00:39:01.624, Speaker B: So at the end of the day, what we're really talking about is, like the web two, experience that everyone knows and loves. On Twitter, well, you know knows and loves maybe a little bit strong, but knows on Twitter, on Facebook, on any of these sort of like, centralized web two platforms, you can build and replicate that in a web3 environment. And Audius is a great example of this. Audius is a decentralized streaming platform, sort of a soundcloud, but decentralized. They're using Solana for all of the play counts, tracking all the analytics, all the likes and follows. It's fast enough, you can basically replicate, and cheap enough, you can basically replicate Google Analytics with it. That's pretty rare.
00:39:01.624 - 00:39:08.144, Speaker B: It's really anything that requires high transaction throughput and fast transaction throughput at really low cost.
00:39:08.844 - 00:40:09.934, Speaker D: Yeah, I wanted to touch back on the metaplex stuff really quickly, and I think it's important for everybody to know. I'm actually working on creating a quick little video to show how to do this. Hopefully somebody out there wants to do a one click install for Metaplex, possibly a hosted service, but essentially just by cloning that GitHub code and running about three commands and adding like two configurations, you can actually get a metaplex store set up on a domain in about five to ten minutes. And that comes you're the owner of the store, you can let other people be creators, you can mint nfts, you can auction nfts, you can let other creators auction nfts, and you can actually even split the payouts amongst multiple creators. So it's, and this is all out of the box just by simply running it. And obviously there's some things that could be added. I think it's actually four programs instead of just four different programs combined.
00:40:09.934 - 00:40:44.352, Speaker D: So that was that. And then one other thing. I've been seeing a lot of buzz about this lately, and who knows how quickly it'll happen. But there's been a lot of talk about somebody trying to do a decentralized social media network on Solana. I would love to see it. I'm not sure like the complexity required or there's a lot of variables there, but Solana could definitely if you can scale to the Nasdaq, you can scale to a social media network. Hopefully in the future we start seeing some prototypes for that, because I would.
00:40:44.368 - 00:41:09.642, Speaker A: Love to see it. Great. Thanks for that. What I want to do now is do a series of questions, and I want to address developers who are sort of different points of familiarity, meaning just starting blockchain, already know blockchain and sort of already have launch an app. And so, Guillaume, I want to start with you. The top vote right now for how many? Six people have asked how long would it take for a non blockchain developer to learn the basics and build the simple dap with figment? Learn. So let's say you're coming and you're going to do the pathway here.
00:41:09.642 - 00:41:13.834, Speaker A: You've never done blockchain before. How long do you think it might take them to get through this pathway?
00:41:14.814 - 00:41:49.184, Speaker C: I think it would take a beginner probably maybe between an hour and 2 hours to finish the pathway if they were doing it really well. Not just copy and pasting solutions, but actually looking through the docs going on Discord, asking other developers what's a key pair, what's a transaction, what does that mean? What's a confirmation, et cetera. It would probably take a few hours. You wouldn't have to write actually any smart contract or program. It would be written for you, that's sort of like another layer that I wouldn't really count for a developer, for like a beginner developer.
00:41:50.124 - 00:41:57.704, Speaker A: And so let's say it takes 2 hours. What are the key concepts you think they take away and what would be the next step on the path?
00:41:58.084 - 00:42:37.010, Speaker C: I think the key concept we're trying to really expose in this pathway are a connection with an API, a key pair, which is a super important concept, which is the equivalent of what accounts like a user account is to web two. That's what a key pair is to web3. Let me see what else we have here. A balance. The idea that every account has a balance and anybody can check it, and transaction. And we do two transactions in this pathway. The first one is actually to transfer tokens from, from one account to another.
00:42:37.010 - 00:43:14.690, Speaker C: And the second one is actually to deploy a program or smart contract. And it's actually really interesting to understand that conceptually it's the same thing, like, and that's something as a web two developer, it's same thing. I see Austin like it is. I think it's a good sort of first order approximation to consider that if you want to deploy smart contract or if you want to just transfer any value, you're actually using the same function, the same function on the SDK, which is in this case send and confirm transaction. And that is sort of like a crazy thing to consider. One of them has data, but not the other one doesn't. Only has like an amount, basically like go and, you know, go and have a look.
00:43:14.690 - 00:43:35.244, Speaker C: It's a little bit trickier than that, but it is the same thing. You're actually deploying data or just sending an execution transaction to the blockchain. So connection, key pair, transfer, and then interacting with a deployed smart contract are sort of the four or five key concept that you would understand if you actually went through the pathway.
00:43:35.664 - 00:43:58.124, Speaker A: Got it? Got it. Okay, that makes sense. And so that's for someone who's just getting started, learning the basic concepts. Maybe a question for you, Chase. What are the common stumbling parts or points where people get stuck? The concepts are hard for people to grasp. What can we tell people about to sort of say, hey, other people have struggled with this before, you might run into this. What are the things you might want to call out as people start learning more about? Solana?
00:43:59.044 - 00:44:54.714, Speaker D: Yeah, so still basically spending my time gathering lots of this feedback. But to be honest, I think for now, the number one piece of feedback that we get is developers come in and they go to the website, they read like Solana's fast and cheap and great. And then they go to the documentation, which is highly technical documentation. Any web two developers probably not going to spend too much time on there. So actually the biggest hurdle is just letting developers know that you don't have to dive in and figment you guys are basically unblocking this massive hurdle that we've seen right now just by offering this to show you going through this using the web3 and then deploying a simple, like, you're really unblocking the biggest blocker there is. It's not like people stumble along the way. It's like they get to the beginning and then they go forward or they don't.
00:44:54.714 - 00:44:59.024, Speaker D: And that's pretty much what I've come to find out so far.
00:45:00.164 - 00:45:25.680, Speaker A: Yeah, that makes sense. And so let's keep going down this path. So someone asked a question, hey, I want to create a game as my first project. And so maybe the thing I want to focus on for this question is not like, how should the game work? What are the different pieces of the puzzle for this person? Do they need to run a server anywhere? Do they need a database somewhere? Is this fully serverless? Like they want to deploy something? What actually take what piece of the puzzle for a developer here?
00:45:25.792 - 00:46:29.300, Speaker B: Yeah, this is a really good question because I think when someone asks something like, oh, I want to make a game that involves blockchain, the question is always like, where actually is blockchain? Plugging into your stack in your system? So, like, to take the metaplex example, everything on Metaplex is web two, except the auction and minting and transferring the NFT. So, like, you know, when you're looking at a game, it's sort of like, do you want the leaderboard to be on the blockchain? Do you want all of the items to be on the blockchain? Right, as nfTs, do you, do you want to create an in game currency that's actually an SPL token and that way you can bypass the 30% fee on in the Apple store. Right. Like, all of those are different ways you can bring blockchain into, I would say, like non native blockchain experiences. But like, we don't really create this distinction very well. I think as a development community, globally, across blockchain is like you open up trust wallet, 95% of trust wallet is not blockchain data. It's just an app that then happens to talk to a bunch of blockchain data.
00:46:29.300 - 00:46:47.542, Speaker B: It's an interface for it. I think that's one of the big things to understand is what are your goals with making something? If you can develop a game now, you can absolutely develop a game that has on chain components built into it. And, you know, we have a few examples of people who have done that. But I'm sure Chase, you've got some other thoughts on this too.
00:46:47.678 - 00:47:19.792, Speaker D: Yeah, a little bit. I think the first thing I would. If you say, I want to build a game, do I need to? What do I need to run? I would. The first thing I say is like, are you planning this to be a large game? Like, you can use our public servers, but there is a recommendation you will get rate limited once you reach a certain point. So if you're trying to turn this into a full large scale project and get tens of thousands of users, you would have. And we actually, there's a couple people out there that are doing RPC servers as a service. So that's also something.
00:47:19.848 - 00:47:20.680, Speaker A: Including us.
00:47:20.832 - 00:47:54.202, Speaker D: Yeah, yeah, yeah, yeah. So there's. Yeah, and that's. That's one option. The other thing is, if somebody has to build a game, it's gonna be like, how do I start this right now? Depends on the time of game because. Or the type of game because Siri for Cope has already built a web based game that you can go on there and play, which is pretty awesome coming from other languages, like with the C sharp SDK. I want to say that this might actually be an unblock for developing Unity games.
00:47:54.202 - 00:48:03.974, Speaker D: I'm not 100% sure on that, but since Unity is c sharp based, then this might be a really high leverage thing for developers coming to get into gaming.
00:48:04.334 - 00:48:18.234, Speaker A: Got it. Got it. Okay. I want to ask one really specific question. I want to move on to the next thing because we don't have much time left and there's a lot of questions. So someone asked in the chat, it looks like Dave White. When should I use a blockchain versus a SQL database? Let's really zero that in to say.
00:48:18.234 - 00:48:27.394, Speaker A: Imagine there's some users table. Where would you recommend that they put their users table? Is that something they would have off chain or on chain or is not of context to answer that question?
00:48:28.174 - 00:48:55.720, Speaker D: Well, that basically depends on if you're trying to be a full blown decentralized application. If you are trying to do that, it's 100% possible to store all of your data on chain. Like serum. I believe all serums order books. I think one important thing, and I'm just going to touch on this because I've been thinking about it a lot lately, is in Solana. Everything is an account. Your wallet is an account.
00:48:55.720 - 00:49:40.194, Speaker D: Your program is an account. Your arbitrary data, it all lives on in an account. And our engineers are probably going to kill me if I say this wrong, but I think the only distinction between them is the metadata. That tells you, is this an executable program? Or, what's the balance of this thing? So once you kind of grasp the concept that everything's an account, like, I can make this a wallet, this could be a program. This can just store arbitrary data or user data, or however you want to do that. There is a ten megabyte limit per account, so you would have to be able to structure this properly to make sure that that would actually work. I think over time, the plan would be to increase the size of account storage, but right now it's ten megabytes.
00:49:40.194 - 00:50:07.010, Speaker D: And you also would have to, like, I don't want to get too deep into this, but every account requires some form of rent, and you can be rent exempt if you put enough sole or lamports into that to do that. So it really depends on the cost. Probably a higher consideration is the cost, and whether you're trying to be a full, decentralized application or kind of just. There's always that in the middle between web two and web3.
00:50:07.162 - 00:50:09.482, Speaker A: Got it. Well, that's really helpful.
00:50:09.618 - 00:50:41.828, Speaker B: I just wanted to add one little bit to this, which is like, some of this comes back to a Genesis blockchain versus a weak subjectivity design blockchain. So with something like Ethereum, you can always run an ETH archival node. You can pull every bit of transaction and state history. Get back to Genesis. Because Solana is a weak subjectivity chain in terms of how it does security. It does not have this sort of, like, Genesis origin focus in terms of how it tracks stuff across accounts. So what you want is a database that has, like, lots and lots of history attached to it.
00:50:41.828 - 00:51:20.704, Speaker B: There's a ton of great solutions you can do to, like, bring that data on chain, and you can actually, you know, but, like, one of the things for that is the design principles of Solana is, again, on execution layer. So if what you want is this, like, long history, transaction by transaction report, like, you may have to run your own archival node to pull that, the same way you'd have to do it on Ethereum. But, like, you can't really trust the ledger history to be on every. On every validator within the system if you're not specifically looking and storing that data yourself, because the chain does not require that for security. The same way a proof of work chain does.
00:51:21.004 - 00:51:40.388, Speaker A: Got it. Got it. Okay, so we are kind of going on this path of, like, you know, learning Solana 101. Where are the stumbling blocks? You know, when should you use the database versus a blockchain? Let's go all the way. Let's say this person has now launched their game. It's very successful. It looks like there's a lot of ways to get funding to sort of keep either committing open source code or maybe towards projects.
00:51:40.388 - 00:51:53.140, Speaker A: You know, I think. I think I saw the Solana foundation has a big fund, like, measuring hundreds of millions. What are the ways that people can either get grants for open source work or funding for their projects for people who are really looking to scale up what's available? Jeff?
00:51:53.172 - 00:52:14.680, Speaker B: Yeah, it's a great question. So there's a huge number of Solana ecosystem funds nowadays that exist that are all looking to do investment across the network. I think there's about 160 mil of ecosystem funds that exist nowadays. So that's. That's pretty awesome. There are also places like radium has an accelerator program. Now.
00:52:14.680 - 00:52:43.584, Speaker B: There's a lot of ecosystem things that exist, grants within the Solana foundation. It's definitely an activity that it does. A lot of those grants focus now more on infrastructure layer plays. So if you're building something that other people can build things on top of, or you're building something that increases censorship, resistance, that's where a lot of those foundation grants are headed nowadays. But there's definitely still. Solana has a. Solana Labs does investments in projects as well.
00:52:43.584 - 00:52:47.524, Speaker B: So there's lots of opportunities to get funding in those spaces, too.
00:52:48.704 - 00:53:02.400, Speaker A: Perfect. Okay, great. So we're almost out of time. I want to click through a bunch of quick questions, make sure we address them as we go. Someone asks, does the operating system matter? Looks like every developer uses macOS. I think the answer is no. You can develop them wherever you want.
00:53:02.400 - 00:53:17.244, Speaker A: Maybe some of the examples are macOS, but I think that one's an easy. No Linux windows Mac should be fine. This is a question about the pathway, maybe. Guillaume, you want to take this one? How heavy is this pathway on rust? I'm starting to learn rust. I think the answer is not very heavy, but anything you want to add there?
00:53:17.404 - 00:53:58.796, Speaker C: Yeah, it's mostly JavaScript. The rust program that we're deploying is the hello world program that Solana wrote again, because it's for beginners, and we don't want to overwhelm people with rust because it is a little bit intimidating. So the only thing you have to do, the only thing we're really teaching you is how to understand it. First of all, we go line by line and sort of, well, like blog by of like little logical blocks and we try and really explain what happen, what's happening. The second thing is how to build it, aka compile it, and then how to deploy it. That's all you have to do. If you don't understand rust, you actually can go through the whole pathway if you want to.
00:53:58.970 - 00:54:13.576, Speaker A: Okay, great. Someone has a question, maybe. I don't know if you know this one. Chase, any good sources on structuring your project? Meaning is there other projects you look at in the source code and copy or anything about structuring your overall project best practices?
00:54:13.760 - 00:54:50.724, Speaker D: Yeah, I would actually probably say if you're a web two developer looking on how to structure a project, probably take a look at the project serums GitHub. They have designed this really well and it's like they have great component structure that's not going to, I don't know if that's going to give you the best overview of an entire project, but project serum is definitely one that I point people to a lot just because they've been here for a long time and they've had time to refine this along the way.
00:54:51.864 - 00:55:32.634, Speaker C: As far as the client side is concerned, again, like as we like a big thread of the past hour we spent together is how do we like demystify like web3 for web two developers? And again, the truth is it's the same thing as like structuring a client side web two project. You're going to write like custom hooks, you're going to try and like you're going to test your code the same exact way. You're going to try and reuse component, you're going to be able to use like UI component kits. I posted one in the chat oyster swap that you guys have written. Again, I've mentioned it earlier, but I didn't post the link. This one is amazing. It's much more complex than the pathway and you should really look at it to understand how you can.
00:55:32.634 - 00:55:46.344, Speaker C: And the Solana json that Dave White just posted is also really good. I don't know Austin and Chase if you've seen that one. Yeah, it's a developer who wrote a little client library. It's a really good one, so I'd really recommend those standards.
00:55:46.644 - 00:55:55.664, Speaker A: Got it. Okay, let's keep going. On the lightning round, is there something like the graph, the graph.com or equivalent for indexing or querying data on slab?
00:55:57.884 - 00:56:02.420, Speaker D: I think Austin, you're on mute. You might have a better answer than I do.
00:56:02.532 - 00:56:49.370, Speaker B: Yeah, there's a few things that are in the works. I would say that RPC pool has some data analytic tools available as well. On that, there's no reason that you couldn't get a lot of that stuff from Datahub. Assuming that there is enough historic records there on the chain, I believe as well, we are eventually. Well, let me just say we have an ongoing project to move the entire chain history, with a certain amount of delay onto Arweave for long term storage to make it more queryable and accessible by people. Because right now, you do have to run an indexer, basically from Genesis to get all this data. So that's something that's in process right now.
00:56:49.370 - 00:57:17.982, Speaker B: I don't have a good timeline for when that's going to be done. If anyone feels particularly impassioned to pick up and help us work on this, we'd love to chat. You can find us on discord as well. But that would be something we'd be interested in talking about again, because it doesn't have the same origin requirements and genesis requirements. It hasn't been something that's needed as much. But, yes, it's a short version. It's a long term goal for us.
00:57:18.118 - 00:57:37.150, Speaker A: Yeah. Great. Okay, there's a few more questions. We can't get to them all today, but thanks, everyone, for adding questions. And I like to close with what I call the magic wand question. And the magic wand question is, I give you a magic wand, you can wave it in anything you want, either improve Solana or change blockchain wherever you want, take it wherever you want. But what are you doing with the magic wand, Chase? Do you want to.
00:57:37.150 - 00:57:38.126, Speaker A: You want to go first?
00:57:38.270 - 00:58:19.134, Speaker D: Yeah, sure. If I had a magic wand right now, and I'm going to base this purely on this point in time, I would be able to make everybody that was developing or interested in developing on Solana, a senior rust developer. Okay, that would be my magic wand, because, like I said, the demand is high right now, and all these projects are looking, and. And I think once we are able to get that pool, like the projects in Solana and ecosystem is going to grow exponentially. People are looking to develop really custom, all kinds of custom protocols, and.
00:58:20.914 - 00:58:21.242, Speaker A: That'S.
00:58:21.258 - 00:58:26.334, Speaker D: A huge need right now. So, yes, I would convert everybody to a senior rust developer.
00:58:26.834 - 00:58:28.802, Speaker A: All right, I'll work on that magic wand for you. How about you?
00:58:28.818 - 00:59:00.274, Speaker B: Also, I would love to see us hit 10,000 validators in the year. I think that's. So there's about right around 700 validators right now on Mainnet. There's probably twice that on Testnet. That's sufficient to provide very good security, but it's never enough, is the short version. We always want to see more. We want to push the Nakamoto coefficient as low or high, depending on how you count it, as we can possibly get it across the network.
00:59:00.274 - 00:59:18.574, Speaker B: And so we've got a few initiatives to this degree, but as far as I'm concerned, decentralization and censorship resistance matters very little until it matters a ton. And that we want to be the network that's the most prepared for this.
00:59:19.514 - 00:59:45.250, Speaker A: Got it? Yeah. Thanks for those two answers. I really appreciate it. So we hope today that we could introduce new web two developers to web3 and give them a place to go get started, really, with the Solana pathway. If you get stuck, great news. There's tons of places to help and if you want to contribute back tutorials, you can even get paid more Solana tokens to do that. If you want to go get funding for open source work, there's room for you there, too.
00:59:45.250 - 01:00:27.734, Speaker A: I think the main takeaway is for people at each phase of their learning about Solana, or even in blockchain in general. There's something for you here and there's a supportive community of people ready to help. And so one of the big learnings for us is when we started doing figment learn, the number one customer thing, we said, we talked to developers, we said, why aren't you launching your next project on blockchain? And the response was, I don't know who to ask when I get stuck. And so really, that's a lot of what we're doing is there is no sort of established stack overflow for what we're trying to do here. And so we're sort of solving with people right now. And so that's why the big emphasis on community, the big emphasis on tutorials, is we need to build this up. So I really appreciate you taking the time, chase and Guillaume and Austin today.
01:00:27.734 - 01:00:38.094, Speaker A: And so if you have feedback on the pathway, if you have anything you want to extend it or correct it, if we have any errors, please reach out. And so thanks, everyone, for your time and we will see you guys online. Yeah.
01:00:38.134 - 01:00:55.674, Speaker D: Thank you guys so much for creating this. This is absolutely amazing. So I'm excited to get some feedback from all these people that are running through this. I personally have it, but I plan to do that probably today or tomorrow and then kind of just see how this goes. But again, thank you so much.
01:00:55.794 - 01:01:25.740, Speaker C: And the last thing I'll say is this is the 6th or 7th pathway that we do. And every time we change something, every month we release one. Every time we change something, this one is a big change. And everything we've done is based on feedback from users and foundations. So whatever. Like, we've made changes last week based on a few people, like, on two people from their community saying we should do things like that, and we just make changes right away. So I cannot stress how reactive we really strive to be and how much we want to listen to the community.
01:01:25.740 - 01:01:30.344, Speaker C: So if there's anything you want to change, let us know. We can make it in a few hours.
01:01:30.804 - 01:01:35.404, Speaker A: Awesome. Great. Thank you, everybody. See you guys. Bye, guys.
