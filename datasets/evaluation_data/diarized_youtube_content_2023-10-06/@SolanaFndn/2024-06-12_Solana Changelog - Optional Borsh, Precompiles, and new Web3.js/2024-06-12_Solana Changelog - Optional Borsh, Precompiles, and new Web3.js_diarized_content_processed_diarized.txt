00:00:03.680 - 00:00:10.502, Speaker A: Hello everyone. Gmgm welcome to the Solana Changelog. I'm Nick from the Solana foundation devrel team, and today I've got Jacob with me. How you doing, jacob?
00:00:10.638 - 00:00:12.154, Speaker B: I'm doing well. How are you doing?
00:00:12.814 - 00:00:37.212, Speaker A: I'm doing well. I'm excited for the changelog as always, and I'm just going to dive right in. You know, we're going to talk about this new SImD. I thought this one was pretty cool. SIMD 152 for precompile. And I was actually unfamiliar with this idea of precompiles, but I read through this and I, I like this one little bit in here about Fido passkeys. Basically, the SIMD is proposing creating a standard spec for these things that are precompiles.
00:00:37.212 - 00:01:13.514, Speaker A: And effectively there's two precompiles that exist right now. It's for the ED 25519 curve and the SEC p signatures, which are like the Ethereum like signature curves. Basically these are, these precompiles exist, they just do some signature verification things. SIMD is proposing creating a common spec for these, so that way more can be added in the future, especially for Fido pass keys, which I think is interesting. The author here gives a note for that. So yeah, this was a really cool one.
00:01:14.094 - 00:02:00.950, Speaker B: Yeah, it's cool to see, especially making it more easy to add more of these different precompiles. I know in general previously, it takes a lot of work to add any of this stuff, especially when they did any type of caching algorithm. Solana seems to want to add every single one under the sun. And I know that every single time that it's added, it adds a lot of work to the fire dancer crew and other clients because they have to rewrite it from scratch. Especially if I think Sig, given that Zig is so new, would also have to rewrite it from scratch because they probably don't have the right libraries to use these. So it's a cool symb to see go through. It hasn't been accepted yet, but if you want to join the conversation, feel free to add your discussion points to it.
00:02:00.950 - 00:02:21.458, Speaker B: The next thing that we have is the commits. So we have two commits that I wanted to shout out is like one Buffalo Joe, our good friend, our previous Devrel here on the team, he created a compute budget crate, pulling it out of the big, I think, was it the Solana program runtime? Um, or. Yes.
00:02:21.586 - 00:02:23.098, Speaker C: Uh, so basically a lot of these.
00:02:23.146 - 00:02:32.930, Speaker B: Different changes that removing crates and pulling into different crates, it helps it to where like, hey, if you do not use it while you are building your program, you have a faster build time.
00:02:33.042 - 00:02:34.186, Speaker C: Um, so it's great to see this.
00:02:34.210 - 00:02:40.282, Speaker B: Type of thing and the same thing even, actually same thing, but even better. Um, Kevin did this.
00:02:40.378 - 00:02:41.506, Speaker A: Kevin, heavy.
00:02:41.690 - 00:03:00.478, Speaker B: Yes. Shout out to Kevin. He made borscht optional in the SDK and program crates, which is a great change. Like huge improvement to developer experience. What we saw, if you remember, about a year and a half ago or. No, a year ago, actually. Yeah, a year ago.
00:03:00.478 - 00:03:47.384, Speaker B: About a year ago that the Borscht upgrade on Solana program actually broke a bunch of things within the ecosystem. So if you went from anchor zero two six to anchor zero two h, you had to do a whole bunch of work to upgrade. This makes it optional to where you will never run into that issue again, which is awesome. You can already see the like, anchor maintainer is putting the rocket emoji on it, so Akron loves it. Honestly, this is an awesome change and I'm so happy for this because it's just going to remove so many headaches in the future, especially when there was going to be another borscht upgrade soon. So it's a great change to see. And then what else have you seen, Nick?
00:03:48.044 - 00:04:45.784, Speaker A: Yeah, and like we've talked about a couple of times on the changelog the last month or two, the core BPF migration still underway, still going through, I think last week we actually mentioned the SIMD amendment to update the migration process, specifically the upgrade authority for the core BPF programs to make them on a feature gate via multisig. And good old Buffalo Joe here, he's already added in the code to have that support. So once this feature gate will actually go live, I believe this will be on a feature gate. Once this functionality goes live, when the core BPF programs begin their migration, then we'll be able to actually update them via feature gates, which is really cool. Then the next one is related to that, is that setting the upgrade authority for some of those core BPF programs that need to have an upgrade authority removed, this just makes it so that can be done automatically instead of needing an additional manual step.
00:04:46.724 - 00:04:54.068, Speaker B: So I guess I have a question on that. These are native programs. They're being moved to core BPF like normal programs, right?
00:04:54.196 - 00:04:55.476, Speaker A: Yep, that's correct.
00:04:55.660 - 00:05:01.544, Speaker B: This is removing them and making them set to the feature gate. Is that how it works?
00:05:02.284 - 00:05:50.914, Speaker A: Kind of, but kind of not so big picture. The end goal is all of the native programs that exist in the Solana runtime, they're going to be removed from the runtime itself and they're going to be put into just a dedicated BPF program. They're all the core programs. So core bPf name is a name. And once all of these programs are into what we'll rather when any of these programs are in this core BPF process, that in order to upgrade them, instead of having to make version upgrades with the rest of the runtime, the code can be published and ready to go and the actual upgrade will actually occur with the typical feature gate process. Just like any of the other features that go that way, validators can effectively choose when they're upgrading each of these core BPF.
00:05:51.774 - 00:05:59.618, Speaker B: Got it. Yeah, that makes much more sense. Um, this is a cool change. I'm looking forward to this being completed. My understanding though, it's going to be.
00:05:59.666 - 00:06:07.170, Speaker A: Quite a long process. They're doing some of the smaller ones first and then eventually get through the rest of them.
00:06:07.362 - 00:06:13.858, Speaker B: Yeah, the smaller ones and they're still a bit scary like vote program. But we'll, we'll figure out how it goes as we go.
00:06:14.026 - 00:06:15.138, Speaker C: Uh, the next thing we're going to.
00:06:15.146 - 00:06:27.810, Speaker B: Go through is the resources of the week. Um, we have two resources this week. One of them is there's a new technology preview for the new web3 js. Um, so this is tech technology preview three. If you haven't tried it already, what.
00:06:27.842 - 00:06:29.178, Speaker C: This is is there's a bunch of.
00:06:29.226 - 00:07:05.124, Speaker B: Changes going on with web3 js to make it smaller, bundle size more efficient, easier to extend. I would definitely check this out if you haven't already. And the best part of this is it's a preview for a reason. Check it out, try it out. Give your feedback that like, hey, this devx on this specific part sucks because if you do it now, you can get it before a major release and you can actually get it into where the Dev X is better in the long run. So it's cool to see this happen. Definitely needs more testing though.
00:07:05.124 - 00:07:07.532, Speaker B: So if you haven't tested already, please do.
00:07:07.588 - 00:07:30.886, Speaker A: Yeah, test it out. Give your feedback. You can see in the very first line there of the tech preview, it says in response to user feedback, the web3 JS team, Stephen, Lucher and Loris, they're really in Callum too. They're really taking all that feedback to heart to make this the best possible user and developer experience they can. So share all your feedback. Open issues on the web3 JS repo.
00:07:31.070 - 00:07:34.034, Speaker B: Yes. And then one more resource of the week we have.
00:07:34.414 - 00:07:35.494, Speaker A: Oh, this one's cool.
00:07:35.614 - 00:08:23.250, Speaker B: Yeah. So if you've been running into like zero x 10 x, zero errors, with web3 js and been confused about it. You now don't have to be because it'll give the information about what that error is along with the log. So what we found out is that all the information about your transaction and the error that came with it were actually being sent back by their PC, but they were being truncated by web3 js. This allows you to see the full log, the full stack trace every time you run into an error, instead of being like, what the heck did I run into with Zero X one? Especially as a new developer. So sorry to everyone about your wealth of knowledge of memorizing error codes. Now you can actually just read the error message.
00:08:23.402 - 00:08:24.894, Speaker A: You could just read the log.
00:08:26.594 - 00:08:36.170, Speaker B: This is also specifically with 19921, so upgrade it if you want to see these new error logs. It'll come with everybody's new build as well.
00:08:36.322 - 00:08:52.982, Speaker A: Yeah, good stuff. And then to wrap up the week, we'll do our stack exchange shout outs. So big shout out for Jimmy and Ari. They're the top of the list up there. Of course, John Chigue is also up there, and Jonas. And you got some of the other friendly faces we see all the time. And everyone, keep up the great work on stack exchange.
00:08:53.118 - 00:09:01.334, Speaker B: Yeah, it's helping out a lot. There's been a ton of new users every week on stack exchange. So like, whoa, we actually have 17,000 users.
00:09:01.494 - 00:09:02.478, Speaker C: I feel like the last time I.
00:09:02.486 - 00:09:06.274, Speaker B: Looked at this it was like 12,000. So, wow, okay.
00:09:06.654 - 00:09:09.470, Speaker C: A lot of new developers entering the ecosystem. This is the best way to help.
00:09:09.502 - 00:09:12.352, Speaker B: Them and grow the ecosystem. So please help out.
00:09:12.518 - 00:09:14.668, Speaker C: But that will wrap up this week's change log.
00:09:14.716 - 00:09:17.100, Speaker B: Thank you all for coming and we'll see you next week. Bye.
