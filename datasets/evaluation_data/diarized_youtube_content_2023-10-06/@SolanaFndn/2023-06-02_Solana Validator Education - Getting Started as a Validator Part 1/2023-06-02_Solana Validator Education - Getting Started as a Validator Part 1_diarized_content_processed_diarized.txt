00:00:02.960 - 00:00:11.034, Speaker A: All right, welcome, everyone, to the Solana Validator educational workshop. Today, I'm going to be talking about setting up a validator for the first time.
00:00:11.974 - 00:00:17.554, Speaker B: Some weird glare, is there some weird glare on my screen or. No? Okay. Sorry.
00:00:19.094 - 00:01:02.564, Speaker A: Yeah, we talked about getting set up for the first time as a validator. This is probably review for some, but hopefully this is something that we can point to in the future with people coming into discord and asking questions about validator setup stuff. The goal here is going to be to talk about conceptual things a little bit first. So essentially like what you're doing when you set up a validator, some key points that you're sort of going through along the way, so you don't just do it mindlessly. And then hopefully, assuming all goes well, we'll do a live validator setup demo. The goal for the setup is just going to be to get a validator running. There's going to be some kind of corners cut there where it's not maybe the best setup.
00:01:02.564 - 00:01:36.524, Speaker A: The plan is for two weeks from now to do another, another one of these that's focused mainly on operationalizing everything. So this week is just going to be the bare bones of getting the setup running. Two weeks from now. It'll be more monitoring and metrics and the things that you kind of want to do after you get the initial setup going. Yeah. So a quick overview of sort of all the steps that you're going to go through. To set up your validator, you need the Solana cli installed.
00:01:36.524 - 00:01:59.200, Speaker A: So you'll install that if you haven't already. You'll need to create a vote account, and you'll need to fund the identity key pair for voting with that vote account. Assuming you're creating, creating a voting validator, you'll need a server. And there are various ways of setting up a server. I know some people sent tetsu included, use colocations, but I would say the majority are probably running a bare metal.
00:01:59.232 - 00:02:00.644, Speaker B: Server in a data center.
00:02:02.864 - 00:02:27.520, Speaker A: You'll install the Solana Cli on the server that you've acquired, however you do that. I want to make the distinction here that we're set installing the CLI twice, and that's because I think the docs kind of lump together creating the vote account and running everything on the server into kind of one operation. But really, the vote account setup doesn't need to happen on the server and.
00:02:27.592 - 00:02:29.404, Speaker B: Probably shouldn't happen on the server.
00:02:30.304 - 00:02:36.088, Speaker A: You want to set up your vote account separately from operations on the server. The server should really only have access.
00:02:36.136 - 00:02:38.778, Speaker B: To the identity key pair, never the withdrawal key pair.
00:02:38.936 - 00:02:59.614, Speaker A: We'll talk more about that in a second. We're going to talk about formatting the drives if you need to do that. Some servers have these formatted, some don't. We'll go through some quick formatting with NVMe drive validator startup script, and then finally running the validator and making sure.
00:02:59.654 - 00:03:01.462, Speaker B: You'Re caught up to the chain so.
00:03:01.478 - 00:03:48.880, Speaker A: That your validator is operating as expected. Things that I'm not going to cover today that I'll cover in the future talk so, building slotted from source it's recommended to do that for all validators. You should make sure that the binary that you're running is built from the actual code, from labs or from wherever you're getting it, and doesn't have any modifications. Also, this can add some performance improvements because it could be built for your hardware specifically instead of a generic setup. I'm going to talk about mounting the NVMe drives using fstabs. If you're a validator of restarts, for whatever reason, like the machine itself restarts.
00:03:48.912 - 00:03:50.524, Speaker B: You won't lose those mounts.
00:03:51.864 - 00:04:02.220, Speaker A: Log rotate, setting up system d, setting metrics, and monitoring your validator using Watchtower. So all these things are important and definitely should be covered. But I don't think we'll have time.
00:04:02.252 - 00:04:05.984, Speaker B: Today, so I'm going to skip over all this stuff for now.
00:04:09.804 - 00:04:47.444, Speaker A: A quick note here, so there might be some confusion sometimes when you're just getting started on what the difference between a validator and RPC is. Consensus validator in this case and an RPC, they're essentially the same software, they're just running with different flags. So a consensus validator is a voting validator. It participates in consensus. It votes on the inclusion of blocks, whereas an RPC server does not vote. Typically it passes the no voting flag and the full RPC API flags. That's really the main distinction is just how you run the software.
00:04:47.444 - 00:05:27.406, Speaker A: But what I'm going to be talking about today, and the point of these next two talks, is focused solely on a consensus voting validator setup. Maybe we'll do an RPC setup in the future, but for now, voting validator is the focus, and in order to attract stake, participate in consensus, produce blocks, do all these things. You need to create a vote account on chain that's not required for running an RPC server. And to do that you use Solana create a vote excuse me? Solana create vote account command, and there's three keys that you're going to be creating in order to create that account, you need an identity key, a vote.
00:05:27.430 - 00:05:29.714, Speaker B: Account key and a withdrawal key.
00:05:30.214 - 00:05:42.514, Speaker A: And we'll walk through that setup shortly. Any questions so far on just the distinction or anything people think I should point out here?
00:05:47.154 - 00:05:48.374, Speaker B: Okay, cool.
00:05:49.594 - 00:05:57.426, Speaker A: So I think one thing that new operators and maybe even lazy operators do is that they use the same key pair.
00:05:57.610 - 00:05:58.690, Speaker B: Can I go back?
00:05:58.882 - 00:06:21.978, Speaker C: I just want to point out that all the things that you're saying to do, you can do on Testnet to sort of prove it out so you don't have to do it on Mainnet. So it's a great idea to follow all these steps on testnet with some testnet stole you can get for nothing by just doing an airdrop or getting from someone else. And you can just check all your steps and make sure that you know what you're doing, that you know exactly the set of steps are going to work and then do it on main net where it actually costs money to do it.
00:06:22.106 - 00:06:57.570, Speaker A: Yeah, great point. Uh, exactly where I was going. So I'm glad you, you went there first. Um, so all these things like Zantesu was saying are things that you, you know, maybe someone could argue you don't have to do on Testnet, right? Because if your withdrawal key pair is stolen on Testnet, you're not losing, you know, financial, you know, you're not losing main net. Sol but I would argue that just like sentence, who said you should practice in Testnet what you're going to do in Mainnet. So, you know, a lot of operators have the same identity key pair.
00:06:57.602 - 00:06:59.534, Speaker B: Whoops, sorry.
00:07:04.854 - 00:07:44.496, Speaker A: A lot of operators because maybe they're lazy or because maybe they don't know one of the two. They set up the identity key pair and the withdrawal key pair as the same key pair. That's a terrible practice and definitely not something you want to do on Mainnet. So I would say as you're learning and as you're testing these things out, do everything on testnet like you would do on Mainnet. Create a withdrawal key pair that's separate from the identity key pair. Put this withdrawal key pair in some sort of cold storage, either a hardware wallet, a multisig or maybe both as a quick plug. Right after this call, there's going to be a call to talk about key pair management.
00:07:44.496 - 00:07:54.244, Speaker A: So if you're curious about this stuff, if you don't really understand all of it, going to the community led validator call right after this would be a great option.
00:07:56.544 - 00:07:58.394, Speaker C: And yeah, one more thing.
00:07:58.474 - 00:07:58.890, Speaker A: Go for it.
00:07:58.922 - 00:08:19.254, Speaker C: Don't use the same key pairs on Testnet and Mainnet. It's easy to use the same file and be like, oh, I'll just create a vote account on Mainnet at Testnet and then use the same Vodacon and Mainnet and they're the same key on two separate networks. Bad idea because you can get confused. You can use the wrong key pair in the wrong time and accidentally do something you don't want to do. So use separate key pairs for different networks. That way you won't make that mistake.
00:08:19.754 - 00:08:21.730, Speaker A: Yeah, great point.
00:08:21.802 - 00:08:22.082, Speaker B: Yeah.
00:08:22.138 - 00:08:30.814, Speaker A: I mean, key pairs, it doesn't cost you anything to create a key pair. If you have thousands of, of key pairs. Maybe that's not a great idea. But you should definitely separate out your.
00:08:30.854 - 00:08:33.194, Speaker B: Testnet key pairs and your main net key pairs.
00:08:33.574 - 00:08:46.614, Speaker A: So you don't like, Zantesa was saying, accidentally get confused. Yeah. So just a quick review here. There are three key pairs that you're going to create for your vote account. The identity key pair, the vote account.
00:08:46.654 - 00:08:48.274, Speaker B: Key pair and the withdrawal key pair.
00:08:48.734 - 00:09:27.110, Speaker A: Identity is used for paying voting fees, identifying your validator. This one is a key pair that's going to live on the server or it is needed by the software at least to run operationally. So it has to be what's called a hot wallet. It has to be a key pair that actually is used by the program. The vote account key pair, once it's created, is really just used to identify your validator. It doesn't really have much of a, it doesn't have much power other than just being an identifier for where delegators want to delegate their soul. So not terribly concerned with security on this key pair.
00:09:27.110 - 00:09:46.012, Speaker A: But the withdrawer key pair is a critical key pair that you do not want to lose. It has the ability to withdraw funds from your vote account. It can change the identity key pair, it can change the withdrawal key pair. So a lot of power there and definitely something you want to keep safe, keep in a hardware wallet or multisig.
00:09:46.068 - 00:09:49.052, Speaker B: Or both potentially, yeah, Zantatsu, go ahead.
00:09:49.148 - 00:10:17.978, Speaker C: Just want to point out the votecon key pair. While you don't need it for anything explicitly, I think that you shouldn't throw away the private key. You don't need it because the public key is all this need to identify the vote account. But it may come to be in the future that we start signing messages using the private key pair to prove things. Prove, I don't know, you know, on, maybe on discord. We have a way to prove that you're the identity, the validator you say you are. It may be that you want to use that private key pair eventually to start signing messages that prove that you have that vote account.
00:10:17.978 - 00:10:35.254, Speaker C: And for that reason, you should. The private key pair, although it's not super critical, you should still keep it. Like, you should keep it. You should keep it secure so that no one else steals it and then can sort of, like, sign things as if they're your validator and sign messages and maybe act like they're you when they're not in a social environment. So.
00:10:35.794 - 00:10:48.038, Speaker A: Yeah, that's a fair point. Yeah, I guess I shouldn't be, uh, so dismissive. Like, you should use best practices and back this up and keep it secure. But I guess I want to make the distinction that it's not as critical.
00:10:48.086 - 00:10:49.726, Speaker B: As a withdrawal key pair. Right.
00:10:49.750 - 00:11:06.038, Speaker A: If you lose the withdrawal key pair, someone essentially has access to your validator and could take over operations and you lose any stake delegated to your vote account. So I would say the, the level of criticalness, if that's a word, of.
00:11:06.046 - 00:11:08.034, Speaker B: The withdrawal key pair, is the highest.
00:11:12.914 - 00:11:14.234, Speaker A: All right, how are we doing on time?
00:11:14.314 - 00:11:15.694, Speaker B: 15 minutes. Okay, cool.
00:11:17.114 - 00:11:53.522, Speaker A: A couple of other things I want to touch on. So there's usually a lot of getting started questions around snapshots, kind of what they are, what do you have to do to get one? And confusion around that. So I just want to point out a few things. All validators make snapshots as the validator keeps up with the chain. And the snapshot you can think of like saving your state in a game, right? If you're playing Super Mario or something and you get to a certain part in the level, you hit a save point and then you die. Maybe a minute later, you're going to go back to that save point. That's the same idea with a snapshot.
00:11:53.522 - 00:12:15.524, Speaker A: It keeps track of the accounts on chain at a specific slot. And if your validator advances, let's say, 500 slots, and then for whatever reason, you turn it off or it dies or anything happens to it, you need to restart, the validator will go back to that snapshot where that account state is at those slots and then catch up from there.
00:12:18.944 - 00:12:20.364, Speaker B: Yeah, great.
00:12:21.664 - 00:12:49.584, Speaker A: Validators create both full snapshots and incremental snapshots, or they have the ability to. And, yeah, one other thing to point out here maybe is not super clear, is that these save points that your validator is creating, they are sort of your local truth of what the blockchain is. And a validator's responsibility ultimately is to.
00:12:49.624 - 00:12:52.284, Speaker B: Keep the truth of the blockchain, right?
00:12:53.454 - 00:13:53.710, Speaker A: There might be some advice out there that's not the greatest when you're running into an error to just delete everything that you have locally and just restart from a snapshot. Ideally that should never be the case. If your validator is operating correctly, you don't have any major multi day issues. You should always be able to use your snapshots locally and start from local state. So anytime you restart your validator, hopefully you have a snapshot and you can progress from where that snapshot last left off. Just kind of as a side here. It's not only a good idea for you to keep local state, just to make sure your validator has a source of truth, but it's also a burden on the rest of the network when you blow away the ledger and blow away accounts and then start fresh because you are using what's called repair to get shreds from other validators and that process is slow and adds demand to the network.
00:13:53.710 - 00:14:05.446, Speaker A: So not super critical for the first getting started, but just know, going forward, as you operate a validator, you should ideally never need a snapshot from an.
00:14:05.510 - 00:14:11.102, Speaker B: External source once you get started. Yeah, yeah.
00:14:11.118 - 00:14:40.888, Speaker A: And Zen Tetsu added some comments in the chat there. Basically, the minute you run into an error, the first debugging step should never be just blow away the ledger and the accounts directory and start fresh. It's almost always the wrong advice and it's just better for you as an operator to get in the practice of debugging the issue using your local snapshot and catching up to the chain by sort of getting the full state of.
00:14:40.896 - 00:14:43.324, Speaker B: The ledger that you've missed since you restarted.
00:14:46.324 - 00:15:49.184, Speaker A: Yeah, and the one, and the main reason why you want to download an external snapshot is when you're starting your validator for the very first time. If you have never run a validator before and you don't have any snapshots locally, you have no state locally, you're going to have to get it from somewhere. And that somewhere is another validator that has created a snapshot and saved that point of the accounts and then you can copy it and download it locally, run from there. Okay, the last point I'm going to make is catch up and then we're going to get into setting up the validator. So like I said, when you restart from a snapshot, you're going to do a process called catch up. Essentially just means that wherever save point you left off in the blockchain, you need to catch up to the tip of the chain by getting what's called shreds, essentially just getting the slots in the ledger that you missed. Shreds are just a way that the client uses to pass data back and forth.
00:15:49.184 - 00:16:18.972, Speaker A: It's a smaller bit of data that's sized well for the network, but the distinction is not super important when you're getting started. The idea is just you need to get all the slots that you missed, and you do that by keeping track of where the chain is right now. So you're sort of participating in getting the new slots that are being, are the new blocks that are created after you've restarted. And you also need to download the.
00:16:19.148 - 00:16:20.784, Speaker B: Shreds that you missed.
00:16:21.404 - 00:17:02.910, Speaker A: So you're doing two things. When you restart, you're keeping up with the current state of the chain and you're also filling in the data that you missed since the snapshot. And the way that you can monitor these things is with two commands, either Solana catch up or Solana validator monitor. So we'll use both these commands and kind of see how they work. But the idea is you can get a sense of how many slots you are behind the tip of the chain and watch the progress as it goes. Ketchup will give you an attempt at figuring out the, the rate of catch up. And let's say you're 800 slots behind, but you're catching up at four slots a second.
00:17:02.910 - 00:17:05.166, Speaker A: Then it's a pretty likely that you'll.
00:17:05.270 - 00:17:08.526, Speaker B: Catch up and, and sort of meet.
00:17:08.550 - 00:17:16.382, Speaker A: The tip of the chain. But if you're using Solana validator monitor, you get similar output, but you don't get the rate of change like you do in ketchup.
00:17:16.518 - 00:17:18.034, Speaker B: We'll check that out.
00:17:20.254 - 00:17:24.283, Speaker A: Okay, so next step is live setup.
00:17:25.543 - 00:17:28.631, Speaker B: I'm going to keep this kind of.
00:17:28.647 - 00:17:30.383, Speaker A: In the background as, you know, things.
00:17:30.423 - 00:17:45.483, Speaker B: That we'll, we'll go over. Let me grab my terminal window here. Where am I? Oh, damn it.
00:17:58.244 - 00:18:01.204, Speaker A: Okay, so I'm going to do all.
00:18:01.244 - 00:18:04.024, Speaker B: This from the terminal.
00:18:05.644 - 00:18:41.984, Speaker A: If you're brand new to Solana world, you definitely need to be comfortable with DevOps managing and navigating through terminal interface, using SSH, basic commands, copy ls, executing bash scripts, things like that. So if this stuff is not comfortable to you, then you probably need to back up a second and learn a little bit more about the basics of Linux system administration and DevOps. As I go, I'm going to be working off of.
00:18:44.124 - 00:18:45.384, Speaker B: These notes.
00:18:45.884 - 00:19:03.884, Speaker A: These are some changes that I made to the docs. So they're not actually the existing docs, but I'm hoping when most people see this, the version that I have here is essentially going to be the version of the docs. So I'll try to go back and forth, maybe make the screens a little.
00:19:03.924 - 00:19:07.774, Speaker B: Smaller, but hopefully this is viewable.
00:19:11.354 - 00:19:43.264, Speaker A: And yeah, feel free to jump in with any thoughts or questions. I've got a lot of screens going on so it might be hard for me to see. Yeah, yeah. If you have any, any topics to bring up, just go ahead and stop me. I might not see the comments. Okay, so first thing we want to do is open up the terminal, install the CLI locally. The information about installing the CLI is here.
00:19:43.264 - 00:19:49.188, Speaker A: So it's just a bash command that you run to install the latest version. I've already got installed locally, so I.
00:19:49.196 - 00:19:57.928, Speaker B: Don'T need to do that. Let's see. Solana validators, this is me just checking.
00:19:57.976 - 00:20:29.566, Speaker A: All the validators on Testnet. So done that. The next thing we want to do is create an on chain validator vote account and fund the identity key pair for voting. Now notice here that I'm doing this locally on my trusted computer, whatever that may be for you, a laptop or, or whatever that you maybe even like an air gap machine, something that is not your server that you're going to.
00:20:29.590 - 00:20:31.046, Speaker B: Run the validator from.
00:20:31.230 - 00:20:35.982, Speaker A: And the reason I do this is because I never ever want, let me.
00:20:35.998 - 00:20:41.686, Speaker B: Go back a second here. Yeah.
00:20:41.790 - 00:21:08.390, Speaker A: I never ever want this withdrawal key pair ever to be on my server. There's no point in ever having that key be anywhere near the operations. And that's by design, right? You, you don't want this key pair to have any chance of being stolen if someone's running a keylogger, if someone's got something physically installed in the machine, right. There's any sort of security risk on the machine that you're running from, you should theoretically be protected because this key.
00:21:08.422 - 00:21:21.694, Speaker B: Pair never lived on that server. Okay, so in order to create this vote account, let me go back.
00:21:24.434 - 00:21:41.814, Speaker A: I need to create the key pairs. These commands are creating three different key pairs. The identity key pair, the vote account key pair, and the authorized withdrawer key pair. I'm going to use a ledger here instead of just a normal key so we can go through that process.
00:21:43.014 - 00:21:51.382, Speaker B: So let's create these two. All right.
00:21:51.438 - 00:21:54.206, Speaker A: You'll see here on disk I've got validator key pair.
00:21:54.270 - 00:21:58.454, Speaker B: JSon pub key here is here.
00:21:58.534 - 00:22:16.106, Speaker A: I can check the pub key by doing Solana pub key. And so this is the key pair that will live on the server and.
00:22:16.130 - 00:22:19.202, Speaker B: Identify your server next I'm going to.
00:22:19.218 - 00:22:40.994, Speaker A: Create the vote account key pair. And here's my pub key here. So delegators will now delegate to. Well, not yet, but once you start attracting external stake, however that may be, delegators would delegate those soul to this key pair.
00:22:42.654 - 00:22:43.822, Speaker B: Double check.
00:22:43.998 - 00:22:45.502, Speaker A: Yeah, Zanteski, go ahead.
00:22:45.638 - 00:23:00.854, Speaker C: I just want to point out once you have these key pairs, especially the vote account key pair, that's it. That's the one you're going to be using. So you may consider, before you go to Mainnet, you may want to use grind because a lot of people like to have vanity key pairs. And the Solana Keygen grind command will let you sort of put a prefix.
00:23:00.894 - 00:23:01.382, Speaker B: To a key pair.
00:23:01.398 - 00:23:08.004, Speaker C: It takes a lot longer to generate it, but you know, if you're going to do it, you have to do it before you make the vote account key pair for main net.
00:23:08.044 - 00:23:11.340, Speaker D: Just want to my mic work. Oh, it still doesn't work.
00:23:11.452 - 00:23:12.036, Speaker A: I can hear you.
00:23:12.060 - 00:23:12.972, Speaker C: Oh, it worked.
00:23:13.148 - 00:23:23.900, Speaker D: Oh, okay. Yeah, because I, that's a really good point because I tried to change my identity later and you can do it, but it's a big pain in the butt. So if, if you want a vanity key pair, now is the time to do it.
00:23:24.052 - 00:24:05.934, Speaker A: Yeah, that's a great point. So what they're talking about here is a key pair. When you're generating this key pair, it's essentially random, but that's the thing that identifies you to delegators. So if you have some branding, like best validator ever, right? And maybe you abbreviate that by BvE, you could use this grind command to have the first letters be Bve instead of just some random string. So it helps delegators a little bit identify your key pair by the branding and the way, I've never actually done it. But you'd use this grind command.
00:24:07.594 - 00:24:13.854, Speaker C: Yeah, you would say starts with space, BBE, colon, one to get one keyword.
00:24:15.314 - 00:24:15.986, Speaker A: Okay, great.
00:24:16.050 - 00:24:25.894, Speaker C: That'll happen pretty quick if you did it now because three letters takes like seconds to make. So if you said dash, dash, starts dash with col and then space, BBE, colon, one.
00:24:26.994 - 00:24:28.854, Speaker B: BBe, colon, one.
00:24:29.394 - 00:24:31.010, Speaker C: Yeah, cool. Press enter.
00:24:31.162 - 00:24:38.534, Speaker D: That should be almost instant. Like when you get up to like five, six, seven characters, it takes forever.
00:24:39.074 - 00:24:39.934, Speaker B: Okay.
00:24:40.274 - 00:24:56.384, Speaker C: Some prefixes aren't possible, some letters aren't possible. So be aware that you may have to substitute eyes for ones. And some sequences are a lot slower to generate than others, although I can't say what that is like, just some are just black holes that take forever and some happen more quickly. You're just lucky or unlucky.
00:24:57.044 - 00:25:01.468, Speaker B: Yeah. So let's say you're holiday or for.
00:25:01.476 - 00:25:04.024, Speaker A: Whatever reason you want to start with orange, right?
00:25:04.724 - 00:25:09.584, Speaker B: Orange, maybe zero. Nope.
00:25:12.284 - 00:25:13.464, Speaker A: Maybe not orange.
00:25:15.364 - 00:25:17.584, Speaker B: I don't know what grass.
00:25:21.084 - 00:25:40.140, Speaker A: So if that's what you want, the beginning of your validator key pair, you'd have to use this command, although this might take a bit of time. So anyway, that's what they mean by using the grind command. And that's probably what you want to do for your vote account and maybe your identity key pair as well. Anyway, so I'm going to kill this.
00:25:40.172 - 00:25:43.464, Speaker B: Just so we have to wait for it to grind through the possibilities.
00:25:47.004 - 00:25:47.356, Speaker A: Yeah.
00:25:47.380 - 00:25:48.424, Speaker B: Where was I? There.
00:25:48.964 - 00:25:56.820, Speaker A: Okay, so we've got our two key pairs now. We've got the validator identity key pair, the vote account key pair. I'm going to delete this vanity key.
00:25:56.852 - 00:25:59.944, Speaker B: Pair since we won't using it.
00:26:01.884 - 00:26:16.208, Speaker A: One more thing to point out here is that these key pairs are just, um, cryptographic keys that we created locally, right? They, they have no association with Solana yet, right? So if, if I do solana Dash.
00:26:16.256 - 00:26:22.776, Speaker B: Ut balance of this validator key pair.
00:26:22.920 - 00:26:58.304, Speaker A: It says zero soul because it doesn't exist on chain, right? If we fund that key pair and give it some soul, then it's going to actually exist in an account somewhere. But for right now, I think I just want to make the distinction that these key pairs are independent of any chain. And theoretically they can exist on multiple chains as long as you have the private key. I should say clusters. Multiple clusters. We're going to be doing everything on Testnet, but the same process applies to mainnet as well. So when you create your mainnet key pair, you're going to be doing the same thing.
00:26:58.304 - 00:27:03.444, Speaker A: The only difference is instead of Ut for Testnet, it would be Solana Dash.
00:27:04.064 - 00:27:06.032, Speaker B: Um, for main net.
00:27:06.168 - 00:27:14.084, Speaker C: Just real quick, if you say account instead of balance, you can tell the difference between a zero balance account and account that doesn't exist, just to be just in case you ever need to know.
00:27:18.824 - 00:27:19.744, Speaker B: Yeah, that's right.
00:27:19.864 - 00:27:26.724, Speaker C: So I'll say account not found if it doesn't exist. But it'll tell you something. If it exists and has zero balance, you'll still see something, just in case you're ready to tell the difference.
00:27:27.884 - 00:27:28.324, Speaker A: Awesome.
00:27:28.364 - 00:27:34.372, Speaker B: Useful, great.
00:27:34.548 - 00:27:52.664, Speaker A: So now let's go back to our overview here. We have created, I guess we haven't done this step yet. We're still creating the on chain validator vote account. We've created the identity key pair. We've created vote account key pair for the authorized withdrawal key pair. I'm going to be using hardware wallet.
00:27:52.804 - 00:27:55.844, Speaker B: If you can see. Let me stop the share for a second.
00:28:02.984 - 00:28:24.734, Speaker A: Yeah, so if you can see my screen, I've got a hardware wallet here. It's a ledger. It's pretty common to use ledger for hardware wallets, but there's other options as well. So this isn't an endorsement for ledger, just what I happen to have. But it's a good idea to think about other ways to secure the withdrawal key pair other than just saving it locally on your hard drive.
00:28:24.774 - 00:28:25.358, Speaker B: Right.
00:28:25.526 - 00:28:26.662, Speaker A: At the very least you want to.
00:28:26.678 - 00:28:27.994, Speaker B: Back this up somewhere.
00:28:28.974 - 00:28:32.454, Speaker A: But better practices would be to use.
00:28:32.534 - 00:28:34.114, Speaker B: A, let me share the screen again.
00:28:40.214 - 00:28:56.176, Speaker A: To use a hardware wallet, use a multisig or ideally do both. And I think in the next session right after this, they're going to be talking a bit more about using both an identity, sorry, multisig and a hardware.
00:28:56.200 - 00:28:57.284, Speaker B: Wallet to do this.
00:28:59.064 - 00:29:32.984, Speaker A: Okay, so now that we've got all three things, we've got the validator key pair, we've got the vote account, and we're going to use my physical hardware wallet here for the authorized withdrawal key pair. We can create the vote account and let's see here. So these steps are kind of simplified to make things a little easier. It uses the validator key pair that we created as the default key pair. I'm going to skip this for now so that we see explicitly what we're doing.
00:29:33.484 - 00:29:35.304, Speaker B: So let's do that.
00:29:37.384 - 00:29:42.328, Speaker A: So I'm going to skip this config set just so we're explicit about which key pair we're using.
00:29:42.456 - 00:29:53.164, Speaker B: Oops. And where was I? There. Okay.
00:29:55.064 - 00:30:11.484, Speaker A: Oh, again, I'm going to do Solana ut balance the validator key pair. You see, we'll have zero soul. If you remember before, the account doesn't exist yet. We've got to give it some sol to create the account. So we're going to do Solana airdrop.
00:30:11.824 - 00:30:20.096, Speaker B: One soul airdrop and figure out how to specify.
00:30:20.160 - 00:30:20.440, Speaker A: Okay.
00:30:20.472 - 00:30:27.244, Speaker B: Dash k for the key pair. Cool.
00:30:27.984 - 00:30:29.996, Speaker A: So I'm going to airdrop one soul.
00:30:30.120 - 00:30:32.104, Speaker B: To the validator key pair here.
00:30:33.524 - 00:30:34.516, Speaker C: No, you have.
00:30:34.660 - 00:30:40.344, Speaker B: Okay. Nope, airdrop request failed. This can happen when there's a rate limit reached. Rates.
00:30:41.324 - 00:30:48.396, Speaker D: Yeah, it usually takes a couple attempts because the rate limiting because people are botting it testnet.
00:30:48.460 - 00:30:50.332, Speaker B: Oh, sorry. That's why.
00:30:50.468 - 00:30:51.744, Speaker A: Okay. Yeah, yeah.
00:30:52.764 - 00:30:56.196, Speaker C: You also didn't put the dash k. I don't know if that's messing it up.
00:30:56.380 - 00:31:19.828, Speaker A: Yeah, this is great. These are probably common errors that people will run into. Because in here, in my config, I think we're assuming that this is also pointing at testnet. And I probably mentioned that somewhere earlier. But if you have not set up testnet as your default config, you need to specify that. I want to run this against the testnet cluster.
00:31:19.876 - 00:31:24.000, Speaker B: Let me put this up a little higher. Right.
00:31:24.032 - 00:31:31.144, Speaker A: So this dash UT command is basically telling the solana cli that the Rpc.
00:31:31.184 - 00:31:33.604, Speaker B: Server I want to talk to is the testnet server.
00:31:34.064 - 00:31:37.964, Speaker A: And let me just go to the help real quick to make that clear.
00:31:41.224 - 00:31:47.092, Speaker D: Yeah, and at least currently I think you're not going to be able to get more than one soul from an airdrop. It's a common mistake.
00:31:47.288 - 00:32:00.984, Speaker A: Yeah, yeah, that's, that's a good point too. Yeah. So I'm adding this u flag. You could also specify explicitly URL, but a nice shortcut is dash ut, where t means testnet.
00:32:01.684 - 00:32:08.260, Speaker B: So solana ut, airdrop one sol.
00:32:08.412 - 00:32:11.984, Speaker A: And I want to use the validator key pair json that we just created.
00:32:21.264 - 00:32:27.448, Speaker B: Cool. Looks like it's working. Awesome.
00:32:27.616 - 00:33:05.840, Speaker A: All right, so this signature in one sol means that we've gotten the one sol airdrop to that key pair. This only works on Testnet and Devnet, and on Devnet especially. You might run into some issues because people tend to want a lot of devnet soul for whatever reason. But on testnet, this should work. Well, on main net, this won't work because you can't just airdrop yourself sol whenever you want. So you'll need to figure out some other way to get Mainnet soul to your key pair. But we can check now that we have a balance and now we have.
00:33:05.872 - 00:33:07.804, Speaker B: One sole in this key pair account.
00:33:08.384 - 00:33:11.764, Speaker A: Notice also that if I forgot here.
00:33:12.584 - 00:33:14.044, Speaker B: Specify testnet.
00:33:16.064 - 00:33:33.080, Speaker A: I'll get zero soul. And that's because this Cli is now pointing to Mainnet. So the balance of this account on Mainnet is zero. The balance of that account on testnet is one sol. And we can make this explicit, actually.
00:33:33.152 - 00:33:36.076, Speaker B: Check the account, right?
00:33:36.200 - 00:33:40.396, Speaker A: Key pair does not exist on Mainnet, but if I do the same command.
00:33:40.460 - 00:33:47.304, Speaker B: On testnet, the key pair exists, the count exists, and the balance is one.
00:33:50.404 - 00:34:05.864, Speaker A: So all those are common mistakes, things that people get tripped up on. Useful to be aware of which cluster you're on. And double check that the account that you're trying going to, to send the soul to actually is funded once you've done the command.
00:34:08.484 - 00:34:09.704, Speaker B: All right, awesome.
00:34:10.164 - 00:34:26.300, Speaker A: So we've got some funding in that validator key pair. We have all the sort of steps that we need in order to create our vote account. I'm going to copy this command and talk through it. Actually, let me look at the docs first.
00:34:26.332 - 00:34:27.544, Speaker B: That might be more helpful.
00:34:36.104 - 00:34:56.134, Speaker A: So I'm using help here for the Solana create vote account command. You can see the required fields are the account key pair. The identity key pair that we created. Sorry, no, that's incorrect. The vote account key pair is the first one. The identity key pair is the second, and the withdrawal pub key is the third.
00:35:02.274 - 00:35:03.858, Speaker B: Interesting. Okay.
00:35:03.946 - 00:35:16.314, Speaker C: One thing that's often confusing is that different names are slightly different names are often used for different things. So in this case, the account is vote account, the identity is the validator identity. But you named it as validator key pair.
00:35:16.474 - 00:35:17.690, Speaker B: Yeah, kind of implicit.
00:35:17.722 - 00:35:26.280, Speaker C: The identity and vote keeper explicitly account here. So that's just something you're going to have to learn because all these tools just use slightly different names a lot of times.
00:35:26.472 - 00:35:35.616, Speaker A: Yeah, that's a great point. So identity key pair here is the on disk. We're calling that the validator key pair. The vote account key pair in this.
00:35:35.640 - 00:35:37.244, Speaker B: Case is the account key pair.
00:35:38.424 - 00:36:17.374, Speaker A: Kind of confusing by the naming, like you're saying. The comment to the right sort of clarifies it, but, yeah, not the most straightforward. So notice here that these three things are specifying the three arguments that are required here. The K flag additionally tells the command line what key pair to use in order to pay the fees when you're creating this account on chain. So this k could be the validator key pair because we have one sole in it. Or it could be some completely different key pair that you just happen to have some soul in. Right.
00:36:17.374 - 00:36:28.354, Speaker A: This part doesn't have to be anything related to the validator itself. It could be some completely different key pair that you use for something else. So that's especially relevant for Mainnet.
00:36:28.394 - 00:36:32.694, Speaker B: Right. This amount here can come from wherever.
00:36:33.874 - 00:36:43.596, Speaker C: Can I just point out that that would be a little bit clearer as key pair because some commands really do care about the dash k. It does more than just provide the fees. It like maybe is the authority for something.
00:36:43.730 - 00:36:44.088, Speaker B: Yeah.
00:36:44.136 - 00:36:50.824, Speaker C: Whereas in this case, if it really is just for paying fees, there is a dash dash fee payer that is a little more explicit.
00:36:50.984 - 00:36:57.448, Speaker A: Yeah, that's a good point. It should be up here in the help command as well, or the help output.
00:36:57.616 - 00:36:57.920, Speaker B: Right.
00:36:57.952 - 00:37:18.038, Speaker A: So there's a fee payer flag. And the fee pair is like Zen Tetsu was saying, the key pair that's used to pay the fees, there's also the K flag, which by default we'll pay the fees. But then like he's saying, in some cases we'll also be used for other things. So yeah, might be a little more clear.
00:37:18.166 - 00:37:25.474, Speaker B: Use fee payer here. Okay, so we've gotten all that stuff set up.
00:37:26.214 - 00:37:28.086, Speaker A: I'm going to copy this and replace.
00:37:28.190 - 00:37:30.394, Speaker B: K with fee payer, see how that works.
00:37:39.274 - 00:37:48.254, Speaker A: And then the last flag that we need is our hardware wallet. So I'm going to unlock my ledger locally.
00:37:53.074 - 00:38:04.464, Speaker D: Yeah, I agree with that change. That people understand that fee payer is a pretty universal flag. It's pretty clear to say, hey, I'm paying for this transaction using this key pair that's funded.
00:38:04.964 - 00:38:23.148, Speaker A: Yeah, that's a good point. I'll make that change. Okay, so we've got the, everything we need except for the output for, sorry, the ledger. I've forgotten how to reference the USB.
00:38:23.196 - 00:38:43.644, Speaker B: So I'm just going to find that and copy it over. Give me one sec. Oh, you don't use ledgers in Tetsu.
00:38:44.224 - 00:39:04.254, Speaker C: No, I use a paper wallet. I have key phrase and I print it out on a piece of paper and I store it in a very secure location and that's my master key. And then I recover it when I need it in very transient location and then I delete it afterwards, which is, I'm not saying it's a better process, it's just a different process.
00:39:06.554 - 00:39:12.066, Speaker A: To clarify what he's talking about, there's the idea of a paper wallet, which essentially is a key pair that you.
00:39:12.090 - 00:39:13.778, Speaker B: Don'T store on a file system.
00:39:13.946 - 00:39:19.474, Speaker A: You write it down somewhere and store it in a secure physical location. And then you can use this ask.
00:39:19.554 - 00:39:21.574, Speaker B: Keyword anytime you're using that key.
00:39:22.214 - 00:39:27.102, Speaker A: So it asks for the seed phrase in order for you to reconstruct the.
00:39:27.118 - 00:39:48.774, Speaker B: Key that you created with that paper wallet. So let me see. I did not have time to run through this, so hoping all goes well. Yeah, there we go.
00:39:51.234 - 00:40:04.850, Speaker A: Okay, so to specify the key pair coming from the ledger, I'm going to tell it to look at the USB drive and optionally you can give it a offset of some number. So I'm going to give it the.
00:40:04.882 - 00:40:06.774, Speaker B: Key, let's say 55.
00:40:09.194 - 00:40:25.836, Speaker A: Now with that secure element on the ledger, there is some seed phrase that's stored in that ledger. The whole point of using the ledger in this case is that it will never be accessed by anyone unless you.
00:40:25.860 - 00:40:27.704, Speaker B: Have physical access to this drive.
00:40:28.004 - 00:40:39.932, Speaker A: So it's critical that you store a backup of that key pair because if you lose that backup, of course, or sorry. If you lose the ledger, you lose that key and you lose the ability.
00:40:39.988 - 00:40:42.114, Speaker B: To access your validator.
00:40:42.534 - 00:40:55.726, Speaker A: So just like the paper wallet, you want to store the backup in a secure physical location or whatever. Makes sense for you. But yeah, with all of those disclaimers this should hopefully create a key pair.
00:40:55.790 - 00:41:00.434, Speaker B: On testnet for us. So let's go.
00:41:05.094 - 00:41:14.864, Speaker A: Here's our command. Create vote account. The dash ut tells us on Testnet we're specifying the fee pair which is the validator key pair. We've got the vote account, the identity.
00:41:14.904 - 00:41:28.872, Speaker B: Account and finally the USB ledger key 55 and nothing happened.
00:41:28.888 - 00:41:29.684, Speaker A: There we go.
00:41:30.224 - 00:41:31.080, Speaker B: Cool.
00:41:31.272 - 00:41:37.454, Speaker A: So we can look at this transaction. Just make sure everything looks good. Let's open up soul scan.
00:41:45.594 - 00:42:05.434, Speaker B: Oops. And I want to do that on Testnet, not Mainnet. There we go. Oh, looks like it worked.
00:42:05.894 - 00:42:34.834, Speaker A: Yeah, so 1 minute ago you can see that the vote account program was called. This is not decrypted by Solscan. But the idea is we're creating a vote account using those three things. Now the nice thing about this command that we just used, this withdrawer key pair again, never lives on the server. There's no reason for it to. It's never been on a computer. It only lives on that drive with the secure element.
00:42:37.374 - 00:42:38.114, Speaker B: Great.
00:42:38.494 - 00:42:40.286, Speaker A: Now the next step, if we go.
00:42:40.310 - 00:42:42.274, Speaker B: Back to our outline here.
00:42:44.454 - 00:43:01.866, Speaker A: Is to acquire our server. I've already done that. I've got a server that we're going to use and then install all the things we need on that server. And once we've installed everything we're going to copy the key pair over and run our validator. Unfortunately we're running a little low on.
00:43:01.890 - 00:43:05.174, Speaker B: Time, but hopefully we'll get most of the good stuff in.
00:43:05.674 - 00:43:21.404, Speaker A: Let me ssh to that server. I've set up an alias to ssh demo, but for whatever setup you've got, of course it's going to be like ssh root at your ip address here.
00:43:22.104 - 00:43:26.204, Speaker C: No, you better not have it set up that way. You should not allow direct root login via ssh.
00:43:27.384 - 00:43:28.364, Speaker B: Yes, yes.
00:43:28.944 - 00:43:38.724, Speaker A: Yeah, so it's bad practice. I just got this server like 30 minutes ago. Very bare bones. There's nothing set up correctly here. I'll go into more detail.
00:43:40.464 - 00:43:40.856, Speaker B: In the.
00:43:40.880 - 00:44:03.674, Speaker A: Next one, but for this one, just going to be getting started. Simple. I will be creating a sol account on this computer. So it won't just be root for everything, but yeah, for now it'll be root login, unfortunately. Okay, and we want to install the CLI. So let's go back here to our setup instructions.
00:44:04.094 - 00:44:08.022, Speaker B: We'll grab the install command and we'll.
00:44:08.078 - 00:44:08.914, Speaker A: Download.
00:44:13.174 - 00:44:35.274, Speaker B: Latest lana release version point 14.18. Okay, maybe if I try stable here.
00:44:43.474 - 00:44:45.082, Speaker C: Yeah, that's unfortunate.
00:44:45.258 - 00:44:46.610, Speaker A: Yeah, I don't know why that didn't.
00:44:46.642 - 00:44:47.214, Speaker B: Work.
00:44:52.434 - 00:45:16.158, Speaker A: But once this installs, we'll check what version stable was and then we can always upgrade to 114 18 after this is done. Okay, so we've installed the CLI on our remote server. Now let me go back to our docs. We've created our vote account. We've got our server. Now, we want to update all the packages. I've done that already to save some time.
00:45:16.158 - 00:45:23.794, Speaker A: So updated packages locally and we'll add a sole user to the server.
00:45:24.414 - 00:45:26.114, Speaker B: So let me copy this over.
00:45:29.334 - 00:45:34.340, Speaker A: This creates a sole account. I'm going to make the password very simple.
00:45:34.372 - 00:45:37.344, Speaker B: I'm just going to say something for the demo.
00:45:44.364 - 00:45:54.916, Speaker A: Now we have a sole user and I could switch to that user by doing Su, switch user to Sol. Now I have a Sol home directory.
00:45:54.940 - 00:45:57.984, Speaker B: That I can use. So let's exit there.
00:45:58.584 - 00:46:04.644, Speaker A: The next thing I want to do before I get into hard drive setup, actually, I'm just going to copy my keys over.
00:46:05.144 - 00:46:07.004, Speaker B: So let's do that. Now.
00:46:11.744 - 00:46:41.660, Speaker A: I'm going to do secure copy of the validator key pair Json to that server. And that's copied this validated key pair to my remote server. I'm going to ssh back. See, we've got it here. And then we'll follow along the instructions after that. This eventually will live in the sol directory.
00:46:41.692 - 00:46:44.064, Speaker B: So we'll copy that over. Let's just do it now.
00:46:44.604 - 00:46:46.364, Speaker A: So I'm going to move this validator.
00:46:46.404 - 00:46:49.348, Speaker B: Key pair JSon to home solution.
00:46:49.348 - 00:46:56.164, Speaker A: And then if you look at that, we're going to want the sole user to own this key pair.
00:46:56.824 - 00:47:05.564, Speaker B: So we're going to change ch own to home. Yeah, soul, soul.
00:47:06.584 - 00:47:08.640, Speaker A: I'm changing the ownership of this key.
00:47:08.672 - 00:47:14.964, Speaker B: Pair to be the sole user. And now if I look at it.
00:47:22.924 - 00:47:24.404, Speaker A: You can see that the sole user.
00:47:24.444 - 00:47:28.824, Speaker B: Is the owner and the group owner of the validator keypad. Json.
00:47:35.764 - 00:47:48.718, Speaker A: Yes, that's a good question. I'm curious how you all operationalize these things. Blake asked a question about installing the Solana Cli as the sole user. Also, the way I've set it up, I've got both the CLi in the.
00:47:48.806 - 00:47:56.394, Speaker B: Root account and the sole user account. So I'm going to Su to Sol. I'm also going to install the CLi here.
00:47:57.454 - 00:48:00.874, Speaker A: Maybe it's not the best way to do things if people do things differently.
00:48:01.614 - 00:48:03.434, Speaker B: Open to suggestions here.
00:48:07.014 - 00:48:09.754, Speaker D: I avoid using root for anything.
00:48:10.714 - 00:48:20.614, Speaker C: Yeah, I think probably you should have created the soul user first and Su to it before you did the install. That would be the only difference. You would have saved a little time, but whatever.
00:48:21.714 - 00:48:24.414, Speaker A: Do you all give your soul user pseudo access?
00:48:27.634 - 00:48:29.866, Speaker C: I mean I do but I do.
00:48:29.930 - 00:48:34.210, Speaker D: I do also, I used to not do that, but it's a huge pain in the butt.
00:48:34.362 - 00:48:49.484, Speaker A: Yeah, yeah, that's sort of the trade off I was doing. Typically when I set it up I have it, the whatever trusted user have pseudo access and the sole user does not. But yeah, it can be sort of annoying because then you have to go back and forth to do operations.
00:48:50.984 - 00:48:54.648, Speaker B: So anyway, this is sort of a.
00:48:54.736 - 00:48:56.936, Speaker A: Thing that each individual operator might have.
00:48:56.960 - 00:48:57.964, Speaker B: Something a little different.
00:49:02.104 - 00:49:18.234, Speaker A: Okay, so I'm now the sole user. I am looking at my Solana version. Looks like we installed an older version. As of right now the latest version is 114 18, which is recommended for Testnet at least. So I'm going to install that one.
00:49:19.014 - 00:49:21.634, Speaker B: Solana install init.
00:49:22.334 - 00:49:30.062, Speaker A: This command will install a newer version for you. As long as you have the slanted CLI installed already you can use it.
00:49:30.238 - 00:49:33.814, Speaker B: So install Solana install initially 114 18.
00:49:36.994 - 00:49:52.802, Speaker A: To see the latest version. What version is recommended for what cluster? The best way to do that right now is to go to discord and look at either testnet announcements, MB announcements or devnet announcements for whatever the latest recommended version was. I just happen to remember that 114.
00:49:52.858 - 00:50:01.914, Speaker B: 18 is recommended for Testnet. Okay, while that's going, let's go back to our notes.
00:50:07.894 - 00:50:26.084, Speaker A: Okay, so we've created the sole user. We have the validator key pair there. The next thing, which is optional depending on your server setup, is to format and mount the drives that you have for NVMe. Maybe it'd be useful to take just a quick tore into.
00:50:28.064 - 00:50:29.764, Speaker B: The validator requirements.
00:50:31.544 - 00:51:12.464, Speaker A: So in order to run a Solana validator, the system requirements are pretty high end. You can sort of browse through them here. The main thing is you need a fast modern cpu, pretty good clock speed. You want to make sure especially that you have extensions like the SHA extension which are present in intel ice lakes or AMD gen three or newer. You'll need at least 256gb of ram. Disk NVMe drives are recommended. Typically two separate NVMe drives are best, so you can separate the accounts and the ledger onto two separate disks.
00:51:12.464 - 00:51:17.116, Speaker A: And GPU's are not recommended. No operator that I know of uses.
00:51:17.140 - 00:51:22.634, Speaker B: A GPU, so it's not, not valuable here. Yeah.
00:51:22.714 - 00:51:38.154, Speaker A: Updated in my changes. So the current changes have a little bit lower specs, but the specs that are currently on the validator prereqs or, sorry, the valley hardware requirements are a little bit too low now.
00:51:38.274 - 00:51:39.834, Speaker D: These are much more realistic.
00:51:39.954 - 00:51:41.690, Speaker B: Yeah, yeah.
00:51:41.722 - 00:52:04.014, Speaker A: So there's ram, for example. 128 was recommended, but 256. 128 was the minimum, but 256 was recommended realistically. 256 is kind of the bare minimum nowadays and 512 or more is common anyway. So that was just a quick aside to talk about what machine you're going to be running.
00:52:05.914 - 00:52:07.614, Speaker B: Let's go back to our setup.
00:52:09.794 - 00:52:46.494, Speaker A: So we have these two Nvme drives that we needed in order to run our accounts in our ledger. You can get it done with one Nvme drive, but it's definitely recommended to have two. We're going to look at the drives so we see that the accounts are, these nvmes aren't mounted. We have to check, we've got them. So there's these two Nvme disks that are there, but they're just not mounted anywhere. I'm going to very quickly go through these setup steps and because I have not given that sole user pseudo access.
00:52:46.794 - 00:52:48.334, Speaker B: I'm going to do this as root.
00:52:51.674 - 00:53:07.254, Speaker A: So I've created a file system that's extension four on that Nvme zero and one. I'm going to do the same thing on the other drive as well for accounts.
00:53:09.784 - 00:53:21.576, Speaker B: All right. And then I'm going to change the ownership of this mount point. So let's, sorry, maybe I should slow.
00:53:21.600 - 00:53:46.504, Speaker A: Down a sec here. So I formatted these drives. You can see using this ls block command that we still have them here, but they are not mounted anywhere. In order to mount them, I need to create a space on disk to mount them. I'm going to make those directories now. So I'm making a directory called Mount Ledger.
00:53:46.924 - 00:53:48.944, Speaker B: I'll make another one called counts.
00:53:50.644 - 00:54:04.508, Speaker A: And now you can see in the mount drive or in the mount directory there's an accounts and ledger. I want both those directories to be owned by the sole user so that the sole user can write to them and read from them.
00:54:04.676 - 00:54:14.424, Speaker B: So I'm going to change the ownership now and do the same for accounts. All right.
00:54:19.244 - 00:54:25.144, Speaker A: So you see here now sol for both accounts and ledger. Now we can mount these drives.
00:54:25.864 - 00:54:34.124, Speaker B: So this command should mount it to the ledger. This one should mount it to the accounts.
00:54:39.304 - 00:54:50.584, Speaker A: I'm going to go maybe a little bit over just to the point where we actually have something running, but then we'll continue this. So for all those watching a video, we're kind of at time now. I will pick this up in two.
00:54:50.624 - 00:54:51.448, Speaker B: Weeks in the next call.
00:54:51.496 - 00:55:01.016, Speaker A: So I'll link the next video to this one. It, but I want to just get to the point where we're actually running something and doing catch up. So I'll just go a little bit.
00:55:01.040 - 00:55:04.416, Speaker B: Over right now and then go back.
00:55:04.440 - 00:55:12.512, Speaker A: And review in the next video. Okay, so if I do this command now, you'll see that these two drives are mounted somewhere.
00:55:12.568 - 00:55:14.056, Speaker B: We have them on disk.
00:55:14.240 - 00:55:17.648, Speaker A: We have three and a half terabytes for each drive, so plenty of space.
00:55:17.696 - 00:55:20.254, Speaker B: For the ledger and the accounts.
00:55:22.754 - 00:55:26.930, Speaker A: Next thing, there's some system tuning that we want to do. I'm just going to copy and paste.
00:55:26.962 - 00:55:48.314, Speaker B: This for now, go into a little bit more depth next time. All right? Do I need to do. Yeah, great.
00:55:48.734 - 00:56:12.336, Speaker A: So these are some system settings that you need to change in order for the validator to run properly. If you omit this step and don't tune your system like this, your validator will likely die pretty immediately. So pay close attention to the system tuning section that it's important for your validator to run correctly. And I'll go into a little bit.
00:56:12.360 - 00:56:14.844, Speaker B: More detail about what we're doing here next time.
00:56:16.544 - 00:56:38.192, Speaker A: I've already copied the key pairs over. I've already got the sole user. So the next step is the startup script. And this is a huge source of error for a lot of people when they're first starting out. These are all the different flags that you can pass. Well, I shouldn't say that. These are some flags that you can pass to the Solana validator command.
00:56:38.192 - 00:56:48.124, Speaker A: In order to execute your validator and start it running for the first 1st time time, it is by no means exhaustive. And there's a lot of different sort of configuration that can happen in here.
00:56:48.824 - 00:56:51.724, Speaker B: I switch to the sole user.
00:56:52.904 - 00:57:08.004, Speaker A: I would definitely suggest anyone who's new to get used to all the different flags that I'm listing here, and maybe even other flags that might be relevant by using the help command. So Solana Dash validator help.
00:57:09.704 - 00:57:10.216, Speaker B: Tells you.
00:57:10.240 - 00:57:16.544, Speaker A: About all these different flags. One that's useful maybe is the known validator flag.
00:57:16.624 - 00:57:24.684, Speaker B: We can go look at that. I'm going to do help and pipe it to less and then search for known validator.
00:57:29.424 - 00:58:13.674, Speaker A: So there's our known validator flag. A snapshot hass must be published in gossip in this validator to be accepted may be specified multiple times. If unspecified, any snapshot hash will be accepted. So what this is telling you is that as a validator, when you're starting up for the first time and you need to grab a snapshot from some other source, you can list the identity key pairs of all the validators that you essentially say that you're trusting. These validator key pairs. Identity key pairs are identifiers to validators on the network on Testnet, who you are sort of implicitly trusting to download a snapshot from. You can check information about these validators by doing slide ash ut validators.
00:58:13.674 - 00:58:24.194, Speaker A: That's the output of all validators with vote accounts running on the network on the cluster, I should say.
00:58:26.294 - 00:58:27.674, Speaker B: It's taking a minute.
00:58:29.954 - 00:58:31.970, Speaker A: And maybe I want to grep for a specific one.
00:58:32.002 - 00:58:35.122, Speaker B: So let's grep for one of the.
00:58:35.138 - 00:58:36.242, Speaker A: Validators in this list.
00:58:36.298 - 00:58:38.534, Speaker B: Let's go for 5d this one.
00:58:43.394 - 00:58:47.866, Speaker A: So you can see the information about this validator on testnet. This is the identity key pair.
00:58:48.010 - 00:58:51.174, Speaker B: This is the vote account key pair pubkey.
00:58:51.474 - 00:58:56.044, Speaker A: And this is some more information about the validator running. It's got 100% commission.
00:58:57.144 - 00:59:00.844, Speaker B: I can't remember what that is. Maybe the last vote.
00:59:11.304 - 00:59:17.120, Speaker A: This is the last vote. This is how far you're back from the tip of the chain.
00:59:17.232 - 00:59:20.404, Speaker B: This is the last root slot, etcetera.
00:59:20.834 - 00:59:22.962, Speaker A: You can also look in Solana UT.
00:59:23.018 - 00:59:29.094, Speaker B: Gossip and grep for that same validator key pair.
00:59:30.154 - 00:59:53.532, Speaker A: Gossip is sort of the contact information slash, also used for passing repair requests around. So you can search for gossip to find key pairs that you might be interested in, as well as the ip of that validator that's running on the network. And you can also see the RPC.
00:59:53.588 - 00:59:56.704, Speaker B: Ports if they publish those ports for that validator.
00:59:57.284 - 01:00:08.908, Speaker A: So I know that this validator has this IP address and it's running RPC on port 80. So useful for times when you might need to grab a snapshot from somebody directly.
01:00:08.956 - 01:00:10.944, Speaker B: We can talk about that a little bit next week.
01:00:14.504 - 01:00:21.576, Speaker A: All right, so we formatted Nvme drives. We are about to create a validator startup script, and then we will run.
01:00:21.600 - 01:00:28.804, Speaker B: It and try to monitor. So let's do that. Now I'm going to borrow this script.
01:00:30.904 - 01:00:34.216, Speaker A: I'm going to create a validator sh.
01:00:34.280 - 01:00:35.044, Speaker B: File.
01:00:38.244 - 01:01:14.394, Speaker A: Paste this in here. A very common cause of errors here that I want to point out is that sometimes people will add or change a flag and omit this trailing backslash. And that essentially means that this Solana validator command is ending right here with the missing backslash. And then this is a separate command in dash. That's not great because that means all these flags that you were intending to add to the slot validator command are no longer being added, so you're not specifying the ledger, the RPC port, et cetera. I will try to start up this.
01:01:14.434 - 01:01:23.294, Speaker B: Way and it should give me an error. Let's make this executable on our validator.
01:01:24.674 - 01:01:30.002, Speaker A: Yeah, and it says no such vote account address.
01:01:30.098 - 01:01:31.934, Speaker B: Let me go check this here.
01:01:35.094 - 01:01:57.442, Speaker A: Right, we're missing the vote account key pair JSon because we never copied that over. But we don't actually need the key pair. So let me just get the pub key. That's our vote account pub key. We can use that as well.
01:01:57.638 - 01:02:01.614, Speaker B: I'm going to put that in instead of the private key.
01:02:07.314 - 01:02:17.682, Speaker A: All right, so you can see that this command ran, it executed, it told us where the log was, but it immediately quit. So we can look in the logs and see why it quit.
01:02:17.858 - 01:02:22.894, Speaker B: I'm going to just tail the last hundred lines of the logs.
01:02:25.774 - 01:02:52.736, Speaker A: You can see the error here is that the command failed. Open the home soldier directory. It's looking for a ledger directory that's in the same directory as where we're running the command. The reason for this is that we forgot that trailing slash. Got this trailing slash at the end of the logline. This ledger directory that we want to.
01:02:52.760 - 01:02:54.284, Speaker B: Specify was not being used.
01:02:54.824 - 01:03:05.200, Speaker A: I'm going to put that backslash back in. I'm going to run this command again. And we lost it again.
01:03:05.272 - 01:03:14.904, Speaker B: Let's see what happened this time. Oh, interesting.
01:03:14.944 - 01:03:17.240, Speaker A: Okay, we got permission denied on the accounts directory.
01:03:17.272 - 01:03:26.278, Speaker B: Why is that? Okay, I think when I change ownership.
01:03:26.326 - 01:03:28.846, Speaker A: Of that, I did not make all.
01:03:28.870 - 01:03:36.354, Speaker B: The insides owned by the sole user as well. I'm going to go back and redo that.
01:03:42.414 - 01:03:48.460, Speaker A: So chowne r soul soul Mount Ledger. That should hopefully make everything in here.
01:03:48.492 - 01:04:15.444, Speaker B: Owned by the soul user as well. Why is that not permitted? Interesting. Limit. No file operation.
01:04:20.304 - 01:04:41.206, Speaker A: All right, well, I think since we're over time and I don't know what this error is, let's call it here. I will continue this in two weeks and we can, we can go from where we left off. I don't know exactly why I'm getting this error. I think it has something to do.
01:04:41.230 - 01:04:43.074, Speaker B: With the configs we just set.
01:04:43.694 - 01:04:49.794, Speaker A: So let's stop now and then on. Let me go back to that slide.
01:04:57.254 - 01:04:58.834, Speaker B: Where did I put that?
01:04:59.214 - 01:05:20.466, Speaker A: Yeah, it's back here on Wednesday, June 14, 1700 utc. We'll keep going. The goal for that call is to talk about operationalizing things, but we'll also just finish up with the validator setup. We're about ten minutes over time now, so I don't want to go too long. So let's reconvene two weeks from now.
01:05:20.490 - 01:05:21.894, Speaker B: And we'll finish this.
01:05:22.314 - 01:05:25.674, Speaker A: Thanks for everybody who joined, and see you again in two weeks.
