00:00:01.120 - 00:00:02.394, Speaker A: Hey, everyone, how you doing?
00:00:02.814 - 00:00:49.918, Speaker B: I'm Mac. I lead BDN strategy here at Metaplex, and I'm joined by Michael and Keith, two of our protocol devs. And we're excited to talk to you about compressed nfts on Solana. So for those of you who don't know, Metaplex provides the digital asset protocol and tools on Solana that power the second largest NFT ecosystem in the world. You're probably familiar with some of the programs that we have, things like token metadata, bubblegum, candy machine, auction house, and many others. We also provide a lot of key infrastructure tools and different developer tools on Solana, such as the Metaplex, Das API, Umi, Kenobi, and many others. There's been over 100 million nfts that have been minted through the Metaplex protocol across 14 million unique wallets.
00:00:49.918 - 00:01:32.086, Speaker B: And this has actually resulted in over a billion dollars of revenue directly to creators. So one thing that you've probably heard a lot about this week is compressed nfts. So the reason that people are so excited about compressed nfts is because it dramatically reduces the cost of minting nfts. And as you can see on this chart, there's not really any other chains that compare to this new reduction in cost. Even before salon, nfts were always incredibly cost effective compared to, say, ethereum nfts. But with compressed nfts, this takes this cost reduction to a whole new level. And so looking at the chart here, obviously the price of soul has moved around a little bit in the last week.
00:01:32.086 - 00:02:23.606, Speaker B: So I apologize. This is based on $30 per sol, but you could do anything from 100,000 nfts for just four sol all the way to a billion nfts for 500 sol. And when we think about something like another chain, like, say, Ethereum, a billion nfts would cost $31 billion, which obviously is quite unfeasible. And even if you look at other lower cost l two s, where a lot of what's been marketed about them is reducing the cost of, say, things like minting, it's still quite unaffordable at over $18 million. And so what gets us really excited about this is we believe that this will unlock use cases that are truly only possible on Solana. Looking at this chart here, there's not that many charts across crypto that look quite like this right now. If you look at the gray bars, these are token metadata nfts.
00:02:23.606 - 00:03:04.824, Speaker B: Or what most people in this audience probably know is just kind of regular nfts on Solana. But at the green bars that are shooting up to the moon right now. These are compressed nfts, or also known as bubblegum nfts. And really what we're seeing right now is just a lot of experimentation across Solana with compressed nfts across a lot of different use cases. There's a lot of teams right now that are help pushing adoption of compressed nfts. Obviously, you have our team that's spending a lot of time working on things like Bubblegum, the metaplex Das API, and a utility layer that we're also building to help making working with compression even easier. But there's a lot of other partners across the ecosystem that have played a huge role in getting us to the point where we are today.
00:03:04.824 - 00:04:00.094, Speaker B: Some of the different RPC providers, such as Helios, Triton, hello, Moon, and others, have played a key role in helping improve the DOS API and also provide really critical services when it comes to things like indexing compressed NFT data and other elements that are fundamental to compression. You also have APIs like Crossmint, Underdog, Tiplink, and others that make it easier to interact, and mint compressed nfts, and we're grateful for the work that they've done. There's also some really exciting dapps that are being built. You probably have heard a lot about drip this week. For those who don't know, they help connect collectors and creators through the distribution of low cost and oftentimes free compressed nfts dialect, a very popular web3 messaging app. You actually can mint the stickers that you use in the messaging app as compressed nfts. So similar to kind of the stickers you're probably used to using in Telegram.
00:04:00.094 - 00:04:58.236, Speaker B: Solar Plex is doing exciting things with compressed nfts and web3 social, and we're really excited to see adoption across all four major marketplaces on Solana. So Tensorflow, magic, Eden, Elixir, Sniper, all of them support compressed nfts so that collectors have options when choosing where they want to trade these digital assets. I'm sure many people in this room are also familiar with helium, who's been leading the charge on DPin on Solana. They actually used compressed nfts to represent over a million hotspots when they migrated from their own chain to Solana. And we're seeing a lot of different experimentation with creators as well. Everything ranging from just larger size collections that are more affordable and provide easier entry access to things such as games where there was one game called me Jump, where you could actually mint a compressed NFT, and that NFT represented a life in the game. So people were airdropped, a handful of these, you could play the game.
00:04:58.236 - 00:05:42.154, Speaker B: If you ran out of lives, you could say, go on tensor and buy a life for really cheap. And those were traded as compressed nfts. So we're excited to see a lot of this different experimentation that's continuing to happen. And what we're hoping will happen is even more innovative use cases, seeing different enterprises start working with compressed nfts, particularly as we make it easier for them. And I think the other area of different teams on Solana that's also really important is you're seeing wide adoption across all of the wallets. And so phantom solflare backpack, all of these give collectors and creators just as many options as possible to interact with compressed nfts. And with that, I'm going to hand it off to Michael, who's going to go more detail on some of the technicals.
00:05:44.094 - 00:06:18.932, Speaker A: All right, so most of you have probably been to a few talks this week that have talked about CNFTs and how they work. So some of this will probably be review for some people. But I wanted to focus in a little bit on how they work, specifically with the existing bubblegum compressed NFT program and the existing RPC indexers that we have today. So you'll see in this diagram that we have. Basically it starts with the client. And if you look at kind of item one on the diagram, it starts with like the client minting with the bubblegum program. It interacts with the bubblegum program.
00:06:18.932 - 00:06:44.858, Speaker A: It mints. That appends a leaf to an SPL account compression merkle tree through a CPI. And basically that's where the NFT is. And then it also emits a couple events. Those events end up in the ledger. So they are in the transactions on the chain. Item two on the diagram is where the rpCs, they get those events out of the ledger.
00:06:44.858 - 00:07:26.034, Speaker A: They parse them and they save them in an off chain database. Item three is kind of the last piece of this puzzle, where when the client wants to do like a git asset, they interact with the DOS API. They say git asset. The RPC gets the information off the off chain database and provides it back to them. Okay, hashing data into a leaf. So on the left here is the metadata arg's that can be up to like 457 bytes. And it basically attached together with, you know, with these other pieces and an owner and a delegate and a nonce, and becomes this 32 byte leaf.
00:07:26.034 - 00:08:07.240, Speaker A: You can see on the diagram that seller free basis points and creators are kind of separated out and redundantly hashed with the metadata arg's. That's specifically for the creator or for the marketplaces so that they don't have to pass all the metadata arcs around. They can just kind of have a blob of metadata and just get the seller free basis points. Rehash that and recreate the data hash. Ok, this probably looks familiar to some of the other talks, but this is like a merkle tree. Those leaves, you know, that bottom ish row, they're together in pairs, they're hashed together. They make the next set of inner nodes.
00:08:07.240 - 00:08:45.300, Speaker A: Those are hashed together, the next ones up are hashed together, et cetera, et cetera. Until you get this root node. The root node is the, you know, it's the merkle root. It's a 32 byte value that cryptographically represents the integrity of every leaf in that tree. So the blue nodes in this, I'll give you a bit of like terminology, the blue nodes, as they go up, they represent the patch for this particular NFC in this diagram. The green nodes, they're what's called the proof. So if you have the NFT data and just these proof nodes, you can hash those things together and get this merkle root.
00:08:45.300 - 00:09:31.124, Speaker A: You don't need all the leaves to do it. You can just use these pieces and recreate it and you can prove that this NFT is in this tree. And that's exactly how SPL account compression does it. OK, now I want to talk a little bit about the reference DOS API that Helios and Triton and others implement right now. And basically what it does is it runs a no vote validator that runs a geyser plugin that gets notified on transaction updates, you know, account changes, whatever, so that the validator doesn't get behind. It throws everything into a redis message bus. It just serializes it throws it in there and then elsewhere there's like one or more ingester processes.
00:09:31.124 - 00:10:21.964, Speaker A: This can be horizontally scaled to keep up with the demand. And it gets that data out of the bus, parses, it puts it in a format in a database and then the rest is like kind of what I talked about before. An API process is sitting there and when an end user calls Getasset or git asset proof, it serves up that data. Okay, now I'm just going to quickly go over the new items that we've done since last time we talked about bubblegum last year at breakpoint. So right after breakpoint last year, Noah Prince from Helium created the mint to collection instruction in Bubblegum. So pretty much now a majority of the CNFTs are members of a collection. We've done a lot of DoS API reference implementation improvements, Linus and others at Triton Nick and others at Helios, tensor metaplex, the community, etcetera.
00:10:21.964 - 00:11:13.682, Speaker A: There's been performance improvements, bug fixes, fixes to deal with, out of order indexing. Let me talk about that one really quick. When you index all this data, sometimes one transaction is missed, and then when you go back, you have to backfill it and not overwrite new data with older data. So we make use of the sequence number in the merkle tree to prevent out of order updates from corrupting the data. They've created the CL audits table tools such as fetch trees, Reindex URi, et cetera, Ci improvements, all sorts of stuff. Helios has added a few new DOS API methods like git assetbatch. We've created the Bubblegum UMI package in the rust client, which greatly simplifies interacting with both the Bubblegum program and the DOS API.
00:11:13.682 - 00:11:49.814, Speaker A: I'll show that a little bit later. We've also created the Bubblegum developer hub document documentation, which I guess that simplifies the developer experience interacting with bubblegum in the DOS API. We've created the digital asset standard repo, which holds the actual just standard methods. I'll talk about that later, too. We've created the Kotlin multi platform mobile SDK. And I just wanted to say, coming soon, we have update metadata for Bubblegum. Sam Orand at Tensor wrote the initial contract changes, metaplex did the indexing changes, and we're rolling that out with rpcs right now.
00:11:49.814 - 00:12:21.936, Speaker A: Okay, next, I want to just hit up a couple of misconceptions about cnfts. The first is that cnfts are not truly decentralized. There's this perception that if your RPC provider goes down that maybe the data's lost. But as you saw earlier when I talked about this, you know, it's all there in like the ledger. It's all can be replayed. So this first misconception is just like not true. Another thing we get asked sometimes is, do I need to notify my indexer of updates? Like, hey, I just did a mint.
00:12:21.936 - 00:13:02.274, Speaker A: Do I need to like, tell the RPC about what's going on? And the answer is no. As you saw earlier. Again, basically they are listening for those events with their geyser plugin, and they are always indexing everything. So that leads to the last misconception that you're tied to a specific indexer based on the first two, you know this is false. If everybody indexes all that data, you can switch between rpcs and get the same data. In fact, we created the digital asset standard repo specifically to help people know what is required to meet the Metaflex DOS API standard. And it's these methods getasset, getasset proof.
00:13:02.274 - 00:13:53.720, Speaker A: Those are the ones that you use when you're like interacting with bubblegum, transferring, burn, delegate, etcetera. And then there's the other ones, getassets by owner authority, creator group. Those are like, just give me information about multiple and then search assets, which is the most flexible because it's just a generalized query. So all these are defined in a JSON file in the Metaplex DOS API repo, and it's in the open RPC format. And basically this JSON, it defines the methods, it defines the parameters and the return types. You can go to that repo and you can use the OpenrPC playground and see exactly how this works. But then you can know you don't have to use the DOS reference implementation to be DOS API compliant.
00:13:53.720 - 00:14:30.798, Speaker A: You can create your own indexing, you don't have to use geyser, you can do anything. And as long as you meet this standard, your DOS API compliant. Okay, the last thing I want to do real quick is just kind of show what, how UMI packages simplify interacting with both bubblegum and the DOS API. So this is a really quick code snippet. And you can kind of see here that after importing things, you can create this UMI. You can specify your RPC endpoint, as we mentioned earlier. That could be helios, that could be Triton, that could be hello moon, that could be shift, and as long as it's DOS API compliant, it will work.
00:14:30.798 - 00:15:11.566, Speaker A: And then, okay, so now I want to transfer my cnft. I just call this getassetwithproof, and it gives me this object that contains everything that I need. It contains the proof, it contains the Merkle route, whatever other parameters bubblegum cares about, I actually don't even need to know fully when I do this. I just get the asset with proof in an object, and then I call transfer. I send that object to transfer along with the current leaf owner and the new owner that I want to transfer it to, and boom, the nfps transferred via bubblegum. So that's how easy it can be with some of our newer APIs to interact. So with that, I'll pass it over to Keith and he'll talk about some of the applications.
00:15:11.710 - 00:15:39.294, Speaker C: Yeah. So I'm glad to have you all here. Every time I try and tell my wife how cool cnfts are, she just walks right out of the room, doesn't even listen. So for full time, my full time job, I work for Metaplex full time, 24 hours a day, whatever. And when I'm done writing Solana programs, building dapps, I like to change things up a little bit. I go home, I mentally go home. I work on my side project breadheads, and I change things up a bit.
00:15:39.294 - 00:16:23.124, Speaker C: I build Solana programs and dapps, and, you know, get that out into the wild. So I've been in this situation where I'm building dapps, I'm working with Forcell, I'm working with AWS, trying to figure out what freaking AWS service I need to be using for the specific project I'm working on now, because there's what, 50, 61,000 of them. And so the best part of working out on any sort of Dapp project is integrating with Solana. Because it's easy, it's simple. Solana is your API, metaplex programs are your API. So really, CNFTs can do pretty much everything, use Solana. I still have yet to find an implementation that CNFts don't work great for.
00:16:23.124 - 00:16:50.396, Speaker C: Solana is secure, stable, and available. The Metaplex program library is stable, available, secure. Cnfts are stable, available, secure. Everything like that is inherited all the way up the stack. It inherits the stability of Solana and Solana itself. I think the past twelve months, we've had 100% uptime. It is a inherently decentralized service, so it is multi region by default.
00:16:50.396 - 00:17:13.352, Speaker C: And so you can really think of Solana as a tier four data center. That's the one you gotta pay out the nose for. That's the one AWS isn't gonna give you for free. Being present throughout the world. And all you really need to do that with CNFTs is a tree and a DoS RPC, of which we have plenty right now. And I want to go over a couple of use cases I've seen. Distribution is a huge one.
00:17:13.352 - 00:17:53.774, Speaker C: It's censorship resistant. When Metaplex got kicked off of Mailchimp because we're an NFT company, they didn't even review our claims, just chucked us right off. We worked with underdog, the great people there, and we distributed CNFTs for creator studio invitations rather than sending out an email. Because we're web3, we want to adopt the next big thing web3 tracking cookies and tracking identity is also a great application of CNFTs. If you transfer your CNFT to a wallet, you don't need to change your credit card information, you don't need to change your address. I just follow the. We can just as a provider, you can just follow the service from one wallet to another.
00:17:53.774 - 00:18:29.474, Speaker C: I think this is going to supercharge loyalty programs in the future. Somebody actually came to breadheads the other day, an owner of 27 Papa John's franchises and wants us to build a loyalty program using CNFTs because they know this is the future. They know they want to be a part of this ecosystem and we want to be there for them. Community is also huge. I don't know if the solar plex guys are here, but I use their platform every day. You can see how people can call like you already see in discord, how people pay for nitro to take the reactions they love to different servers. This with CNFts, you can inherently tie the reactions themselves to you.
00:18:29.474 - 00:18:56.796, Speaker C: You can take them with you where you go. They can be a part of your identity and you can meet other people who also love the same reactions. That's just one example of community. And my personal favorite is gaming. I've done all sorts of indie dev gaming for the past two decades in my programming career, and CNFTs are really the perfect application of this. I mean, I have a trading card game that was on the stage the other day and that would cost 1.2 sol for a regular NFT to print out 60 of those for a full deck.
00:18:56.796 - 00:19:25.046, Speaker C: I mean, you can do that with CNFts for a fraction of that price. You can print millions your entire run for a couple sol. And I really think CNFT are the perfect assets for gaming. It's an image, it's JSON data, it's stats, it's anything you want it to be attached directly to the NFT transferable. You can pull that all player data directly from that, load it into the game. And I really think we'll see gaming embrace cnfts and the blockchain going forward. But really the sky is the limit.
00:19:25.046 - 00:19:34.794, Speaker C: There are tons of applications. I am so excited to see what happens over the next couple months. What people implement, what new ideas. I haven't even thought of that come around and yeah.
00:19:36.654 - 00:19:37.174, Speaker B: Thank you everyone.
