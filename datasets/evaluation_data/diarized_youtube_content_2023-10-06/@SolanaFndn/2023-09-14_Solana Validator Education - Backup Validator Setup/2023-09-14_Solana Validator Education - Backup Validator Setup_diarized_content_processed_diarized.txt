00:00:02.080 - 00:00:11.754, Speaker A: All right, welcome, everyone to the Solana Validator educational workshop. Today we're going to be talking about setting up a backup validator for failover or emergency use cases.
00:00:13.414 - 00:00:15.874, Speaker B: Let's get into some details here.
00:00:17.734 - 00:00:49.052, Speaker A: So the agenda is, first to talk about what the backup validator does for you reasons why you might want it. We're going to talk a little bit about how the process works, and then hopefully do a demo of transitioning from one backup, one validated to the backup, and then back to the primary. This will be an actual voting validator on Testnet. So hopefully it'll be a good demo of a real world use case. Any questions or comments or anything, I'll watch the chat, and you can also.
00:00:49.108 - 00:00:50.824, Speaker B: Feel free to interrupt me.
00:00:54.104 - 00:01:47.484, Speaker A: Okay, so first of all, what is a backup validator? The idea here is as an operator, you're running two independent validators, one primary validator, quote unquote primary is the voting validator, and then you have a second validator that's not voting. So the only additional cost there will be the hardware cost. You won't incur any voting costs there. But the nice thing about this setup is that for any reason, if you need to transition from your primary for outage or anything else, you can switch over to the backup. There's one caveat here, which is that it is possible to accidentally double vote if you mistakenly use the same identity on both validators. So you just need to be aware of that case and make sure you don't do it. I'll walk through that a bit when we get into the chat details.
00:01:47.484 - 00:03:01.026, Speaker A: So some reasons for a backup validator that I kind of alluded to already, if there's any incidents of hardware failure or a data center outage, any sort of catastrophic issue where your validator goes offline, ideally that's not affecting your backup validator. So if you have, let's say, a validator in data center a with this provider, you might have your backup in another data center with another provider to mitigate any risk from, you know, network failure, hardware failure, complete outage from a data center. Like all these things have happened in the past, and it's good to have some insurance against. Another nice feature here is during a software upgrade, you can do an upgrade with no downtime. If you're have your backup validator, you simply transition the voting to the backup, upgrade your primary, and then you could transition back to the primary. And sort of a corollary of this is the time to recovery is minimized. That's one thing that we're really trying to emphasize and provide more resources for operators.
00:03:01.026 - 00:03:37.704, Speaker A: This coming half and year is to give people more and more ways to minimize their downtime and become a better, more responsive operator. Yeah. So there's many bare metal providers. I don't want to give specific names, but the foundation does operate a server program which I'll link to in the notes. So that is some of the options. There are others as well.
00:03:38.094 - 00:03:41.234, Speaker B: Let me put this in the chat.
00:03:43.254 - 00:05:01.354, Speaker A: The Solana foundation operates a server program where we've partnered with, I shouldn't say partnered. We have certain data center providers that have essentially provided month to month contracts for servers in bare metal data centers, and you, you can very easily get access to those in a couple of days return time. There are other competitors outside of the server program as well. I think if you're curious and you want to see others, I would just go to discord and ask in MB validators or testnet validators what people are using. Another thing that you can do to find out data centers is validators app as a website that tracks Solana validators. If you go to that site and you click through and look at the metrics, you can see that, you can essentially see what stake runs in which data centers. So you can find out what some of the validators are running in, some are using the cloud, but the docs, and I think especially the foundation, recommends bare metal server if possible.
00:05:01.354 - 00:05:50.374, Speaker A: That answer your question? So, okay, yeah. So back to the reason for running a validator. If it goes offline, hardware failures and software upgrades, all good use cases for having your backup. A couple drawbacks I want to mention. So, of course, cost, it's going to be more expensive to have two machines. I think once you get to any level of kind of even moderately staked validator, I think this becomes a pretty good trade off here. Like, you'll much rather have it in the case of an all day downtime if something really catastrophic happens.
00:05:50.374 - 00:06:37.578, Speaker A: Another option that I've yet to explore, but I think could be pretty powerful is using a cloud offering as a backup for maybe some sort of planned outages. So if you know you're going to do an upgrade at some time this week, maybe you spin up a cloud server for like an hour or two to access the backup while you transition and do the upgrade. A couple other drawings. Drawbacks, right. It's slightly more complicated operationally. You'll have to, you know, manage two servers and there is a risk of voting from two different validators, which will get you locked out. So all potential issues, but I think the risks are definitely not, as they don't outweigh the benefits.
00:06:37.578 - 00:07:30.634, Speaker A: So I would definitely recommend doing this if you have a mainnet validator that you'd like to support, a couple of resources I want to mention and plug here before we get into the details. So in the docs on docs dot Salon.com, there is a setup that uses an EDCD cluster, so essentially requires three machines. I don't know of any validators that are running this, but this is the thing that's currently in the docs. I'm going to be working on a setup in the docs that is simpler, that doesn't use three machine setup, but just for people who are interested, it's there. Michael Vines, who's one of the core engineers at Solana Labs, proposed a simpler way to do it with just two machines, and that's here in this validator identity transition demo. And then finally, Blake from Pumpkin pool, he's a validator in the community.
00:07:30.634 - 00:08:08.124, Speaker A: He made another demo for transitioning your validator that maybe is just a little bit more approachable. It also includes a video, so I'll be basing most of what I do off of that. Just open that up here. So this is the write up he did and the video that he created. He actually demoed this during a validator community call back in February, but for reference, it's there. And I think he did a great job of just laying out all the steps in his thinking, showing you how to do it. So it's all there, if you're curious, but kind of going to go over the details and then get into demo later.
00:08:11.384 - 00:08:23.264, Speaker B: Back here. There we go. All right. There we go.
00:08:23.344 - 00:08:29.724, Speaker A: Yeah, so those are the resources that I'm basing this off of. A lot of it is thanks to Blake and the write up he did here.
00:08:33.523 - 00:08:34.303, Speaker B: Yeah.
00:08:35.083 - 00:09:16.804, Speaker A: Okay, so an idea of what we're doing to make this work, you need two machines. So two different bare metal machines. You can't really get away with one machine being a lot lower spec than the other. Maybe your backup is slightly lower spec, slightly lower memory, because you're only using it for an hour or two at a time. But realistically, you can't get much lower end than what you've got for your primary. Both the primary and the secondary validator will have a non voting identity key. So just any random key pair that you're going to use as a temp, essentially, for running the validator until you start using the primary voting key.
00:09:16.804 - 00:09:54.180, Speaker A: I'll walk through the setup to make this a little bit more clear. But essentially the primary is going to be using the voting key pair that is staked. The secondary will be just running like an RPC server with any old key, it doesn't really matter. And then you'll transition the primary key, the voting key from your primary to your secondary. And your primary will then be using a non voting whatever key that you don't have any stake on. So that's the general idea. Both the validator startup scripts will use a symlink to the identity.
00:09:54.180 - 00:10:39.736, Speaker A: That's something that Blake mentioned in his docs. The idea there is that you can very easily switch between the unstaked and the staked key whenever you do the transition. And the primary validator is currently voting with the vote account key identity. So that's just standard operations for your validator. Your primary validator, the one that you actually have stake on and that you're producing blocks with, that should be running and voting with your vote accounts identity. Then the basic steps that we'll go over here in a minute is on the primary validator. You're going to wait for a restart window.
00:10:39.736 - 00:11:43.194, Speaker A: And the reason for that is if your primary validator is in a block producing window, you don't want to do the transition at that point. So you'll just wait for a period where you're not producing blocks. Once you've found that window where you're not producing blocks anymore, you'll change the identity from the primary to the. Excuse me, I should say you're going to change the primary's identity from the voting one to the non voting one. You'll update the sim link and then this last part, you'll copy over the tower file from your primary validator to your secondary validator. Anybody aware of the tower file, what it's used for? So this tower file is essentially the state of your validators consensus operations. If you don't copy that tower file over, you could essentially be violating what's called a lockout period.
00:11:43.194 - 00:12:35.944, Speaker A: So if you've voted on a fork, you can't immediately go and vote on another block if you're locked out. So this copying over is pretty essential. You want to make sure that that copy happens successfully, otherwise the transition could lead into some pretty bad states for your validator. Then on your secondary validator, once you've done all this on your primary, you verified that your primary is running the non voting key. The secondary then just assumes the voting identity. So you change the identity to the voting key pair and then you change assembly also to point to the voting key pair. When you do that change, you want to make sure that the tower file that you copied over is present.
00:12:35.944 - 00:12:45.714, Speaker A: So very key point here. This tower file must be copied over in order for the whole setup to work. Any questions on that?
00:12:51.334 - 00:12:52.154, Speaker B: All right.
00:12:57.614 - 00:13:08.994, Speaker A: Okay, so let's demo this. So I've been interrupted a bunch this morning, so I'm kind of in a sort of going to be a very live demo. So hopefully that's all right with people.
00:13:09.114 - 00:13:13.330, Speaker B: I'm going to open this up locally.
00:13:13.362 - 00:13:15.026, Speaker A: And then we can walk through it.
00:13:15.170 - 00:13:34.794, Speaker B: Let me get this out of full screen. Okay. Hopefully everyone can see that.
00:13:39.774 - 00:13:47.434, Speaker A: Okay, so I ssh to p one. This is my primary validator, and if we do.
00:13:50.294 - 00:13:51.194, Speaker B: Oops.
00:13:54.454 - 00:14:00.228, Speaker A: Regret for salon, you can see that it is here and running. We can run monitor.
00:14:00.396 - 00:14:02.904, Speaker B: I'll just cat this file so we can see it.
00:14:04.604 - 00:14:44.354, Speaker A: I'm going to run this Solana validator monitor command to see what the validator is doing. So Solana validator L is the path to my ledger. So I'm specifying that my ledger is at Mount Ledger, and then I'm going to run the monitor command to essentially see what my validator is doing, if it's on the tip of the network, if it's what keys it's using, etcetera. So I can see that my validators process these slots. This is the identity key, and this is the genesis hash. All looks good if we look at Solana validators.
00:14:51.914 - 00:14:55.654, Speaker B: Come on, make this bigger.
00:14:58.074 - 00:15:30.234, Speaker A: Hard to see here, but this is my validator and you can see it's on 116.2. We want to upgrade it to use 116.4 because that's the latest recommended version. If I do Solana dash dash version, you can see I've already upgraded my CLI locally, so all I need to do now is turn the validator off and start it back up again. But I want to do that while minimizing downtime. So what I'm going to do is transition to the backup validator.
00:15:31.334 - 00:15:35.794, Speaker B: And let's check that over here.
00:15:45.634 - 00:16:05.934, Speaker A: Yeah, so I'm on my backup now. And as you can see, the backup validator has a different key pair. If I run monitor here, the identity key is seven w for whatever. And if I do Solana Dash ut validators and grep for that key.
00:16:11.094 - 00:16:11.358, Speaker B: I.
00:16:11.366 - 00:16:47.504, Speaker A: Don'T get any results. So this is not a voting key pair, it's just a key pair that I generated to run this validator. Again, this is not voting, but let's see, I have the unstaked identity here. I do not have the staked identity yet. So my first step is going to be to copy over the staked identity to the backup validator so I can use that stake identity when I transition. So let's do that now. Sorry, I've got to exit back and forth here.
00:16:54.004 - 00:16:54.744, Speaker B: Actually.
00:16:59.884 - 00:17:01.304, Speaker A: I think.
00:17:02.304 - 00:17:03.284, Speaker B: There we go.
00:17:04.864 - 00:17:20.004, Speaker A: So I'm going to scp this thing over. It's at home Sol staked identity to this Ip.
00:17:21.864 - 00:17:25.604, Speaker B: Home sol staked identity.
00:17:31.724 - 00:17:51.264, Speaker A: All right. And now I'll just go verify that. Okay, I have the staked identity here. Just want to make sure the permissions are right. They are not.
00:17:51.924 - 00:17:53.584, Speaker B: So let me fix that.
00:18:08.994 - 00:18:26.914, Speaker A: All right, so we've got this staked identity. It is owned by the soleuser sol group. So now we can transition back and forth. I'm going to refer to that doc from Blake as a bit of a guide. Here.
00:18:29.014 - 00:18:31.554, Speaker B: We go. Make this a bit bigger.
00:18:35.294 - 00:18:53.074, Speaker A: Okay, so they've got a nice little checklist here that we can go look at. So we need two non delinquent validator nodes. Check. They're both running. They're both not delinquent. We need a junk identity on both validators. Essentially a non voting identity that we're going to use for either.
00:18:53.074 - 00:19:31.638, Speaker A: I've got that now on my backup. I've got both a staked and unstaked identity. Let's make sure that the primary has that as well. Yeah, so we've got the staked identity and the unstaked identity here as well. So all set up. Next step is validator script should both be modified to use a symlink as the identity. So the idea here is that the identity we're actually going to point our validator to is in this case called identity JSoN.
00:19:31.638 - 00:19:49.660, Speaker A: This is not a real file, this is a symlink. Right. If we look at this identity JSoN right now, it is pointing to the staked identity JSoN. And if we look at our bin validator file, you can see that the identity here is identity JSon.
00:19:49.732 - 00:19:57.132, Speaker B: It should probably just be the full path. Right.
00:19:57.268 - 00:19:58.424, Speaker A: So this.
00:20:01.324 - 00:20:07.704, Speaker B: Should also just be the full path. Great.
00:20:15.174 - 00:20:52.682, Speaker A: So this again is not a real file, it is a symlink. This symlink currently points to the staked identity, which makes sense because this is currently our block producing voting validator. But when we make the transition, this will then point to something else. It will point to our unstaked identity. Okay. And then the last bit, which I'm not positive on the necessity for, but we'll do it anyway. To comply here is adding the authorized voter to point to the staked identity.
00:20:52.778 - 00:20:54.774, Speaker B: So I'm going to add that as well.
00:20:55.114 - 00:21:25.884, Speaker A: I was hoping blake would join because this is a question I have for him. If this is actually necessary, this shouldn't really cause any issues because when you switch to a non staked identity, you won't be a voting validator anymore. So it shouldn't really matter. But yeah, for, I guess, completeness here, the authorized voter is going to be point directly at the staked identity, not the symlink. So add that here. I'll also add that to our backup.
00:21:44.284 - 00:21:45.704, Speaker B: Just copy this over.
00:21:52.104 - 00:22:25.264, Speaker A: All right, so now we've got the setup checklist all done. We've got our sim link, we've got the authorized voter pointing to the staked identity. Everything should be good. We already went through the basic idea of what we're doing. We've got these unstaked identities. We're going to transition from the staked to the identity on the primary, and the opposite on the backup. We've got the symbolic links set up, I think both on the.
00:22:25.264 - 00:22:28.784, Speaker A: Yep, both here in the primary.
00:22:37.524 - 00:22:38.384, Speaker B: All right.
00:22:39.244 - 00:22:46.304, Speaker A: Yep. I think we've got all of our setup steps.
00:22:46.344 - 00:22:46.928, Speaker B: Good.
00:22:47.096 - 00:23:31.184, Speaker A: The next step is to do the transition itself. And just like I was saying earlier, we want to wait for the restart window. We want to change the identity to our unstaked identity. So that's what's going on here. We're just using this command to set the identity while the validator is running from the staked to the unstaked. At this point, there will be a little bit of downtime, because doing this, after you do this command, you've essentially said that my validator is no longer voting. So from the perspective of the network, your validator is offline at this point because you don't have a voting validator anymore.
00:23:31.184 - 00:24:14.584, Speaker A: Then we'll change the symlink. The reason for doing the symlink change is if you have your validator set up to automatically restart on any sort of issue. Right. If the system d detects that your validator process died and it tries to restart it automatically, you don't want it to restart with the staked identity. So this symlink is just a quick way of saying, like, point this identity to my unstaked identity just in case the restart happens while I'm doing this transition. And then the last step here is to scp our tower file. That again is the important part for consensus here.
00:24:14.584 - 00:25:03.184, Speaker A: I'm going to copy this tower file over to our backup. So let's walk through those steps now. First step here is going to be to wait for a restart window. I'm going to just do 1 minute to make sure it's quick. For a real setup, you might want to do longer than a minute, a couple of minutes at least. This will take some amount of time. Looks like we're waiting for a snapshot to finish.
00:25:03.184 - 00:25:55.094, Speaker A: Notice that this is wait for restart window. There's also wait for exit, which actually stops the validator. In this case, we don't necessarily want to stop the validator. So next thing I'm going to do is change the identity. So new validator identity path is the unstaked identity. If we do Solana Dash ut validators grep for 141 b. You can see here that this is starting to fall behind.
00:25:56.634 - 00:25:57.734, Speaker B: Let's look again.
00:25:59.914 - 00:26:27.194, Speaker A: Yeah, 32 behind and counting. At this point, our validator is essentially offline. Even though it is still processing blocks, it's still keeping up with the network. This identity key pair is no longer online. Next step is going to be to symlink to our unstaked identity. Just so we don't have any accidents if we automatically restart. And finally we're going to scp the tower over.
00:26:27.194 - 00:26:31.034, Speaker A: Now this part I just want to make sure I've got the right ip.
00:26:32.414 - 00:26:40.714, Speaker B: You find that here? Yep, this is my backup ip address here.
00:26:42.794 - 00:27:20.238, Speaker A: So I'm going to SCP. Let me do this. As the root set up correctly, I'm going to scp the tower file from the ledger. The tower file is called tower one nine, your identity key pair. And I'm going to scp it to my backup to mount. This is whatever your ledger path is, right? So I think on my backup, unfortunately.
00:27:20.286 - 00:27:24.834, Speaker B: It'S data ledger, it's a different path.
00:27:28.214 - 00:27:35.174, Speaker A: All right, copying that over. That's all done now let's go to the backup.
00:27:38.674 - 00:27:39.534, Speaker B: Oops.
00:27:43.634 - 00:27:45.054, Speaker A: Verify it's there.
00:27:47.194 - 00:27:50.574, Speaker B: Actually, let me verify here.
00:27:56.314 - 00:28:01.944, Speaker A: So yes, we have our tower file from 141 volts. You notice there are two tower files here.
00:28:09.444 - 00:28:10.904, Speaker B: Right? Whoops.
00:28:16.444 - 00:28:36.014, Speaker A: We'Ve got two tower files, one from the validator identity that we're not voting with, and then the actual voting one. And then we will run the commands to actually transition this validator over. Oh, and before we do that, let me change permissions.
00:28:44.554 - 00:28:45.414, Speaker B: All right.
00:28:46.354 - 00:28:59.984, Speaker A: Now next thing we need to do is just set the identity for the new one. And again, this is going to be data ledger. In this validator.
00:29:02.284 - 00:29:02.828, Speaker B: We'Re going to be.
00:29:02.836 - 00:29:06.944, Speaker A: Using the staked identity and we're going to update this symlink.
00:29:10.924 - 00:29:11.824, Speaker B: Oops.
00:29:15.084 - 00:29:52.750, Speaker A: So now you can see that we're behind and this is going to be catching up. Right? So we're 547 slots behind doing catch up. The thing that I'm not entirely sure on is we took a little while to transition from primary to backup. I don't know what's happening in the validator when this transition happens, because theoretically this validator is also up to date. Yeah, there we go. Yeah, I think it's just a monitoring issue. So now we went from 600 slots behind to processed.
00:29:52.750 - 00:30:54.576, Speaker A: Right, because we never were actually behind. We just transitioned the identity. So if we look in Solana Dash ut validators, you can see now 141 volts is delinquents, but it should be not delinquent pretty soon. Yeah, still says delinquent, but should be up and running relatively shortly. And now that we've got our secondary up and running, we can go back to our primary and we could do any restarts or upgrades, or not upgrades, software version upgrades that we want. So now I'm running this on a key pair that we don't care about. It's not voting.
00:30:54.576 - 00:31:31.374, Speaker A: I'm going to wait for exit here. This is a salon validator exit command, which actually kills the process and restarts. Well, system D will restart it for me. And whenever this finishes, the validator will exit, we'll start back up again, and then we'll have a updated validator that's on 116.4, and then we can transition back, just do the same thing but in reverse to have this validator then running as a primary.
00:31:36.354 - 00:31:38.734, Speaker B: All right, let me see where we're at.
00:31:39.314 - 00:31:44.014, Speaker A: So that's all I've got as far as demos go. Is there any questions about the process?
00:31:48.194 - 00:31:53.498, Speaker B: Let me stop my share again.
00:31:53.546 - 00:32:05.984, Speaker A: A big shout out to Blake at pumpkin pool, who made the docs and I think made it pretty digestible. So I'll just put the link up there one more time.
00:32:17.364 - 00:32:17.700, Speaker B: Yeah.
00:32:17.732 - 00:32:32.354, Speaker A: So if you have, if you kind of want to run through it yourself, I highly suggest checking out his docs. Basically the same things I went through. But if you have any other questions or thoughts about it or experiences that you want to share, that would be helpful.
00:32:33.014 - 00:32:35.234, Speaker B: Otherwise we can end it now.
00:32:43.534 - 00:33:11.914, Speaker A: Okay, great. All right, thank you, everyone for joining. And again, we'll do another validator education workshop in about a month. I'll start announcing it pretty soon, but thank you all. If you have suggestions for topics, or if anyone wants to lead one, please let me know. Yeah, I'm trying to keep this on a monthly cadence. So if there's anything you're curious about, anything you want more information on, anything you think people ask questions about.
00:33:11.914 - 00:33:20.474, Speaker A: A lot in discord that you know, but you would like to have some content built for, let me know. Otherwise, see you all next month. Thank you.
