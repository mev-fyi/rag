00:00:00.200 - 00:00:21.074, Speaker A: Set up. So for the next talk we have Flynn, and for the sake of time we are continuing quickly. And I will be his mic as much as I can. So there we go.
00:00:21.494 - 00:00:56.556, Speaker B: I'll try and do both. Hello everyone. Okay, so, so what we're going to be going through really quickly is a product we've made in London. Actually, my team and I won the hackathon at ETH Global with this project and I wanted to showcase it a little bit here because we think it's pretty cool. So what we're looking at here is next JS on GitHub. And everyone's probably familiar with the issues tab on GitHub, although there's one really loud issue here, which is it's really a one way street. You're basically committing code to an open source project for street credentials for essentially the ability to say you're an open source developer.
00:00:56.556 - 00:01:38.214, Speaker B: It's not really a two way transaction. You don't earn from doing this, there's no financial incentive to do it other than increasing your job marketability and so on. So what we built is a product called get paid that basically turns these tags into essentially a financial layer. So if we flick over here to another repo, it's kind of blurry, but you can kind of make out the tags here. It says 150 USDC. So what you're actually seeing here is this idea where if you solve a specific issue, you will immediately earn the amount of tokens that are associated with an issue. And this means that we can sort of add financial aspects to a system which is kind of closed typically to financial incentives.
00:01:38.214 - 00:02:20.894, Speaker B: So how this kind of works is we have an application here and you can just basically have a GitHub issue and you basically log in to our application with GitHub. So there's no element of web3 involved in the whole process. You simply log in with GitHub and then that will essentially allow you to go into the application. And at this point here you can essentially fund repositories. So there's no need for elements such as metamask or anything that's fully embedded wallet. So you can go over to a repository and you can simply click fund and you can press the token that you want to fund and a specific amount, and then you can choose a date in which it's locked up until. And then you can just simply click fund.
00:02:20.894 - 00:02:57.014, Speaker B: We use an embedded wallet system, so this is through dynamic wallet. No need for metamask or even needing to know what a wallet is. You simply press confirm and you sign with your fingerprint, with the hardware embed key and that's how you fund a repository. So essentially what we're doing is we're tying an address to a GitHub repository and we think this is a really unique concept that we haven't seen before. It allows basically people to find repositories just like that. So I've just funded some USDC there to a repository which is this one here. And let's just quickly solve an issue and show the payment process.
00:02:57.014 - 00:03:34.464, Speaker B: Okay, so we'll just open up this repo here, I'll add a simple dot on there to I can make it larger. Yep. So I'll add a dot there to this repository and then I'll just push this up and then we'll quickly show this process here. Let's go like this. Yes. Okay. So what we've done is we've pushed a change to this repository and what I'll do is I'll just go ahead and say this is a new change and whatever the message is fine.
00:03:34.464 - 00:04:03.414, Speaker B: And I'm just going to open a pull request. So I'm now committing some code to a repository. I'm going to then act as both the committer and the repository maintainer in this case just for the sake of time. So now I have the ability to merge this as the maintainer. As the maintainer what I can do is essentially assign a label. We just saw this before, I'm going to say 150 USDC to this issue and now that issue is worth 150 USDC. If it's solved, then the person who solves it will immediately get that payout.
00:04:03.414 - 00:04:57.860, Speaker B: What I'm going to do is before I merge this, I'm just going to say down here, I'm going to assign this issue to, sorry, assign this pull request to an issue and so I just press on which one it's going to be assigned to. And so I know as the maintainer what it's actually solving. And just by hitting confirm that's it. The person is automatically paid through the platform and there's no need for any sort of intermediary element aspect in this just simply happens through the platform. And if I jump over here quickly and hit refresh, you'll see that if I go to the issues tab there is the payment process is automatically done through here. So I'll just refresh again here it is here the issue here. And you can see that if I bring this link up, it's a ether scan of 27 seconds ago of 150 USDC being paid automatically to the repo owner.
00:04:57.860 - 00:05:32.098, Speaker B: So basically a really, really streamlined way to just transact for solving issues on GitHub with no element of needing to know anything about web3 fully embedded wallets, a very streamlined process. And it sort of brings that financial rails that we all know and love through crypto into open source development, which has never really had the financial incentives sort of aligned with it as it should have, in my opinion. I have no idea how I'm doing for time. Three minutes. Oh cool. Wow, I sped run that really quickly. So we also build in a lot of filtering elements here.
00:05:32.098 - 00:06:29.632, Speaker B: So when you actually have an issue that gets created in GitHub, we summarize the GitHub, repo, the libraries and the issue description and so on as well. We use anthropic models on the backend to say that if a new issue gets created, we summarize it so that people can have a really easy to understand description of what an issue is. Because some issues on open source can be incredibly challenging for developers to understand, and that sort of increases the barrier of entry into open source in the first place. So we want to lower the barrier of entry and so we use a model to essentially summarize what that looks like and that makes it also translatable into different languages as well, because that's also a big problem with open source software, is not everyone is just speaking and writing in English all the time. So we do that as the issues come in. What this also allows you to do is it allows foundations to easily fund repositories. I can come in here and simply fund a repository, as I did a second ago, by hitting fund.
00:06:29.632 - 00:07:14.144, Speaker B: This is a far better approach if you're a foundation, like the Ethereum foundation or Arbitrum. You can directly fund a repository and then the team can allocate labels to the certain issues. Then they can actually visually see the progress that's actually happening towards that GitHub repository like codebase, rather than simply me trusting someone on the team, giving them money through a grant process and then just hoping that they do the work through milestones. So we really like this idea of having essentially a smart contract govern the rules around how someone can earn, and then using GitHub as that developer interface to be able to sort of track the progress as it goes. We think that works a lot better in our specific case as well. I think that's all I have time for, so if anyone has any questions, feel free to come chat. Thank you.
