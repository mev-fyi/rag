00:00:18.880 - 00:01:18.414, Speaker A: Hello everyone, it's my great pleasure here to present the web3 access protocol for Ethereum merchant machine. So my name is Chi and a couple of great intro for myself. I've been working in this space for six years. Before that I was a software engineer in big companies and got a PhD. My primary interest is in infrastructure and also for example Ethereum L2 and data availability technologies and also research grants from EF and op. So today I'm going to give an intro of web3 access protocol. So what is web3 access protocol? It's an Ethereum native protocol that designed to translate URL that started with web3? S scheme into EVM core.
00:01:18.414 - 00:03:34.334, Speaker A: If you're familiar with EVN JSON RPC core, this core is a core that's able to call the Ethereum virtual machine in a simulated way so that we can access the corresponding result of the transactions and with dial basically pushing this transaction into the Ethereum consensus network. And why we want to do so is that we are able to using the power of the spark contract that is transparent programmability and then allow to implement much more advanced feature besides current protocol for a lot of DAPPs, especially the front end of the DApps right now is heavily relied on centralized components, including centralized servers, IP and also the DNS. So basically we want EVM is able to use in this protocol so that it can be run as a decentralized unstoppable HTTP server so that you can not only be able to serve the for example Uniswap swap logic, but able to host the front end for example maybe tonado cache front end and it may be uniswap frontend but all the things now hosted on top of Ethereum smart contract. So it is already being register as an Internet authority scheme and also it has been its early version which is 4804 is already finalized in Ethereum ERC report. So why we want to have this kind of protocol to access Ethereum on chain data. One observation or one trend that we observe is that with the Ethereum Ethereum scalability roadmap, there will be more and more data that can be accessed on top of Ethereum, either layer one or L2 in an EVM way. So for example, right now Ethereum just launched their data availability upgrade, that is EIP 4844 or two months ago.
00:03:34.334 - 00:05:13.184, Speaker A: And the future upgrade of the DA will allow to publish 80 terabytes of tape data per year on top of Ethereum. That is a considerable amount of data that can be accessed from Ethereum right now it's mostly L2 transactions, but in the future you can easily use it to for example, upload mapped images, or be able to use it to host a personal blog, decentralized social network. All kinds of new types of transactions are now available on top of Ethereum with this scalability roadmap. And here, even without the scalability roadmap, a couple of the projects are already published. Their data, for example MFT images, that is on top of Ethereum. So all these MFT projects like for example cyber blockers members, I don't have any cyber blockers, but I just surprised found that they pay a large amount of money to store this SVG metadata on top of Ethereum, so that now you can read this data using smart contract clause so that it returns kind of like SVG XML, all those content on top of Ethereum network for every node. And this is the narrative is that when the user buys the token of MFT, it should not only just buy the smart contract and token id, but also the corresponding asset.
00:05:13.184 - 00:06:23.724, Speaker A: The images should be also owned and available together with the smart contract. Because in the early stage when people buy a lot of NFT, they're using centralized servers to host this data. Like images, it can be used in FFS, it can use HTTP server, but when after a couple years, if nobody would like to support this project and all the data just disappear. This breaks the rule of Ethereum, of philosophy of Ethereum is that deploy once runs forever. But now I binary after maybe two years if somebody did not run this server, sorry, you cannot find your images, you just have a token contract via the token contract and then some token id, that's it. And so those projects, they follow the Ethereum philosophy. So now I want to deploy ones access forever and they pay about $10 million per gigabyte in order to follow this philosophy.
00:06:23.724 - 00:07:40.614, Speaker A: So I was pretty impressed because they put so much effort, so much cost to realize that. And then I take a look at all these projects and found one called Tokenuri that returns where the images can be retrieved. And I'm quite surprised to found that even though all this data, for example, I can call this data using smart contract to return all these images like bitmaps or in whatever format, they're still using centralized servers to hold these images. I said oh, why? Because there is no such a protocol to directly access those content on top of Ethereum and display in the front end. So for example they still need to using some HTTP server, but now you are using web3 SS protocol. We are able to define hey, this is their smart contract, this is their Ens address. I want to call the random method of the smart contract and associate with this token.
00:07:40.614 - 00:08:57.464, Speaker A: Then it will directly translate this URL into an ISR call message and call into the EVM and return these images. And later you can find that you can use a gateway or any approaches. For example, we have a native browser, so just type this thing, then it will automatically show all those images fully on chain. And so in this way we can bypass any centralized party, even DNS, which is managed by a few root servers and also HTTP server and other services like ipfs. Because ipfs is not guaranteed, the data is available as the same as ethereum. So this is my original motivation that why we need this kind of protocol to help to enable more ethereum applications. So how to use web suite URL? First of all, it's highly inspired by HTTP, so a lot of ideas, mime, all these high HTTP requests, response, all these concepts are retained in the protocol.
00:08:57.464 - 00:10:38.620, Speaker A: But one major difference is that instead of using a centralized IP address or its DNS name, it use a decentralized smart contract. It can be used in DNS. You can also use a zero x contract so that you can using this single link, we can locate or decentralized resources that is on top of Ethereum and also multi chain supporting, which means I can locate on mainnet data that is chain 91. I can also locate any L2 or even other layer one EVM compatible chains. And second is that there's a way to translate basically the query part or the rest part that is the domain specific location of resources into a core data that is supplied in core so that I can tell the contract, hey, the user would like to access the balance of Zuckerberger or balance of rhetoric, or I want to access the images of some MMT images with its token id. So everything here is now very similar to HTTP, except that everything now is now using a more decentralized smart contract to host all this corresponding logic. So to access the data right now we have the gateway so that you can replace the corresponding ENS domain or the address.
00:10:38.620 - 00:11:29.704, Speaker A: Let's go x 20 hex using the gateway to supply as a subdomain so that now you are able to access those content, the gateway will automatically convert those URL into an Acom message and call the smart contract, return the content from the frontend. And we also have a multi chain gateway and a Firefox extension which allow users to type web3 comma, comma, something, automatically translate to a gateway link. So the users just paste their description link and access all this content. But still, this is kind of like sitting in the middle of web two and three. We call it web 2.5 way to access this data. And thanks to our community developers, they just voluntarily.
00:11:29.704 - 00:12:34.330, Speaker A: Developers fancy really cool ideas. One idea is to develop a native browser. So it's pretty like in the early stage, you see it has just a couple tabs without a lot of features of modern browsers, but anyone can just type web3 and with the link then it will automatically translate it into either core and retrieve the data and return from the front end. This is an example that we upload 100gb megabytes of the Vitality block on top of ethereum. It's on L2 because layer one is too expensive. But now Vitalik can now maintain its website using Ethereum so that he does not rely on any part third party services. So one example now we are working on is to unchain NFT images right now, even though the NFT images is not so hype at this moment.
00:12:34.330 - 00:13:44.464, Speaker A: But I think this is really great example. Especially there are a couple of NFTs, they already upload all this data on top of ethereum. So we implement a smart contract, follow the standard tells that hey, if you call a random method or random block method with the token id, then we will return a string that tells how the images looks like it's in the format of SVG, and so that we can access those images directly without any third party services following the web3 SS protocol. Another thing is Vitalik block, at that time there was about 40 megabytes. Right now I think it's about 100 probably I have some duplicate something. But yeah, at that time we upload 40 megabytes of data and because of Ethereum is too expensive. So we're using optionoma and so as experiment to see how we are able to pull a large number of data like megabytes of data, but high value data on top Ethereum and access in a fully decentralized way.
00:13:44.464 - 00:14:34.008, Speaker A: And there's a couple of the crazy ideas that's fine flying around. For example, build a decentralized, maybe TikTok, build decentralized GitHub, build a decentralized cracklist. One example is decentralized GitHub. Why? Because we found the tonado cache. Public repo is being frozen even though it still be accessible, because the second amendment of the United States constitution is not able to modify or develop on top of the bat because of sanction from the us government. Consider extreme cases that maybe Ethereum go. Ethereum may be also sanctioned because like a transaction it processes also many transactions.
00:14:34.008 - 00:15:50.114, Speaker A: How we are able to like circulating all those centralized attack and one idea that is this extreme cases then why not we implement decentralized gates on top of Ethereum, most likely in L2, so that now we are able to develop Ethereum on top of Ethereum. So this is something we envision that we are able to, I mean as one indicator of the maturity that's we believe that everything can be self contained. We may use some centralized server to accelerate this procedure, but there will be the ultimate data that can be accessed using this way and also following on the Atopa Ethereum scalability roadmap. So right now we have developed this protocol for about two and a half years. There are a lot of interesting ideas flying around. People are developing all kinds of crazy features, but there's still some issues that we are facing and definitely we welcome everybody can help us to solve this problem. One feature is like modern native browser supports.
00:15:50.114 - 00:16:54.914, Speaker A: For example, we are working with one of the top browsers to support this standard. And especially some of the browsers like Google Chrome has really really strict about how to support new protocol like ipfs or web3 into their native browser. So we still need a lot of efforts to make it happen. And this may also need some help from EF to make it happen. Another thing is like as we have running the gateway, but we found someone maliciously report ads and so when people sometimes type in maybe in different firewords, may classify as deceptive website. So definitely we have put a lot of effort fight back and fix these problems. Still, some of the firewalls like Kaposky is really sponsored slowly.
00:16:54.914 - 00:17:37.664, Speaker A: So I'm not sure they fix this problem or not, but they will be a different. I think this is the situation of the wild world, so that's something that we experience. Another thing is like the storage issue on EVM. The main reason is because the rhino EVM is super, super expensive to store any pieces to data. So the price is about 10 million per gigabytes right now, can be even more because the price increases these days. Which means that suppose we want some applications that can serve billions of users, or maybe just 1 million of users. It will be unacceptable because the cost is so high and TPA is so low.
00:17:37.664 - 00:18:55.048, Speaker A: So the solution is generally following the Ethereum L2 approach, both in terms of computation at the same time in terms of the storage. That's why we are building the SDH storage, which is Ethereum aligned storage solutions so that we are able to use Ethereum to verify off chain storage following similar rollout approach and using Ethereum DA as a way to publish data. There are a lot of extensions, couple of ERCs, both. For example, we can use a smart contract to standardize a file system interface so that now we are able to build to using smart contract to mark our file system and synchronize among them so that it will be easy to, for example, create a job box on top of the EC storage by managed by smart contract. We are also running on a couple of standards, for example supporting ens, we create a field called content contract versus content hash that right now for ipfs. So it tells which contract is responsible for returning web suite content in the Ens mapping. There's also a couple of others, like for example support more customized HTTP features.
00:18:55.048 - 00:19:23.364, Speaker A: Because HTTP has developed for about a couple of decades, it has a lot of new features that's incorporated. Especially there's a new HTTP two and there's a fixedma streaming protocol. A lot of things now has to be need to consider rather than a simple HTTP get request response. So that's all today's talk. I'm really happy to answer any questions. Thank you very much.
00:19:34.104 - 00:20:18.854, Speaker B: Thank you. Thank you so much. Really cool initiative. I wonder, it seems like the address doesn't come with the chain id, so I wonder what would the response look like? I mean, if it has, and I haven't seen, oh, there is chain id, but how does the response look like when for example, you have unsupported chains from the gateway? That's the first question. And the second question is about this gateway provider. It seems like right now there's one gateway provider. Is there going to be any mechanism for incentivization of these gateways because they're all going to be spammed by all these requests.
00:20:18.854 - 00:20:22.294, Speaker B: Yeah, I have other questions without just reach out later.
00:20:22.714 - 00:20:47.438, Speaker A: That's great. So first question is regarding how we support this multi chain different chain id. It's pretty simple. It's just like for example, have a list of the chain id. It's similar to metamask. So I just configure each chain id and its corresponding session RPC service. Configuring right now the gateway, or for example right now is using the EVM browser.
00:20:47.438 - 00:21:37.988, Speaker A: It also has a list of default RPC service so that you can just know which chain id is mapped to, to which there's RPC and core. Definitely in the future we want to have all this b, two b decentralized one way first is not decentralized first. It's probably called verify verifiable. So that the content that returned from the front end we can verify is really from a smart contract. For that direction. We are working with halos, which is like client of Ethereum, so that we are able to verify any content that is returned from Isaacall, make sure that this is actually returned from the latest block of affair. And another way to enable fully decentralized access is using Ethereum protocol network, which are closely working with the Ethereum protocol worker team.
00:21:37.988 - 00:22:28.978, Speaker A: So then now we are able to using Ethereum protocol network to it is kind of like ipfs, but every data is verifiable on top of Ethereum. So that now we are able to access all this content in a fully verifiable and a decentralized way. But for that cases it will be much harder to support multi chain because right now prone network only support Mainnet. So this is current status of supporting different chains. For the second question, what's the question? It's about gateways, different gateways. The gateway is open source, everybody can contribute to it, everybody is able to play with it. We may have to have some grant to the people who are able to maintain its personal gateway.
00:22:28.978 - 00:23:01.984, Speaker A: For example, IPFs has ETH, Nemo and EtH link. So we may offer some kind of grant, maybe small, but sufficient to be able to set up and experiment all these features or something new things on top of that, and also perhaps with also help from Ethereum foundation. So there's some program that we are initiating. If you're interested in it, feel free to contact me and then we can have some early grant program so that we have some basic support.
00:23:06.264 - 00:23:28.816, Speaker C: Thank you for the talk. You showed this slide where you showed the different browsers which you are in contact with, chrome and so on. I wonder that, I mean wouldn't it make sense to talk to Brave? I mean they have general ipfs support and. Yeah, sounds like that it would be obvious.
00:23:28.960 - 00:24:47.884, Speaker A: Yeah, yeah, definitely. I think from crypto native perspective brave is really candid. I really should add one logo that. So one thing is like probably how to connect with brave in a more like organic community way and then so that we can co build these things is one probably way to the question. So right now we are more kind of like prioritize how to enable the underlying infrastructure because like once we have more applications on chain applications using web3 URL, for example, fully on chain gaming or fully on chain social network, all these ideas create ideas being running on top of that, it would be much easier to develop this collaboration with the browsers because people have more demand on verifiable, a native way to access this data rather than using our gateway or any gateway that everybody can run. I think that would be kind of like good timing to say, hey, really need to have you guys to help us to enable this. But definitely if you have any suggestions or connection to help to accelerate this procedure, we are welcome to contact me and we would love to see how we are able to explore all is together.
00:24:48.424 - 00:24:49.364, Speaker C: Thank you.
00:24:52.824 - 00:25:15.534, Speaker D: Thanks for your talk. You're clearly pretty inspired by this project you're working on. I was wondering, what's the most powerful use case you imagine using all this technology for when you're working on this? Is there one thing or some things that inspire you as an image of of how this could play out in the future?
00:25:17.194 - 00:26:26.274, Speaker A: So I think the things like, I feel the web3, as Chris Dixon wrote books, is read write on. So web3 is something that enables ownership of everybody. But ownership is now I would say is just partially realized by the, by the network. So I think for those new applications they require higher level of omniscient, for example images or higher level of omniscient. My social identity with my connections like for example for cluster is working towards that direction. I think will be other interesting applications that web3 access protocol will enable. And definitely it's open protocol so everybody can experiment all these ideas so that to especially to inspire people to think about what kind of ownership we want and what kind of maybe for example ethereum like decentralized git that tells the ownership of the code.
00:26:26.274 - 00:27:13.416, Speaker A: Right now it's still most of code are hosted custodians by the GitHub. It's possible that we host this code also on top of the Ethereum so that we can own not only like fixed images but also our code of matrix, all these things. So there are a lot of open questions that flying around. But thanks to scalability roadmap, this become is becoming possible right now before it's just like insane, right? Nobody would like to pay 10 million /gb data. But right now suppose we can reduce to one to the 1000 or one to the 10,000 or one to 1 million, then everything is possible. Probably. Last question, what do you think is.
00:27:13.440 - 00:27:19.616, Speaker D: The best way currently to store videos images in most decentralized way possible?
00:27:19.720 - 00:28:03.010, Speaker A: In your. Yes, I think right now, in my opinion, if you have a lot of ether then definitely you can use l one. But paying a lot of money but more practical way I would say is to using L2s, especially Ethereum. All this data will be published on top of Ethereum layer one and then now you can use in L2. So they will make a copy of data at much much lower cost. Yeah, that's I think really also easy going away because audit L2 now is fully compatible with EVM. I think this is one downward direction.
00:28:03.010 - 00:28:50.780, Speaker A: And suppose I would like to store those like low value versus these are called values of data per bit. And for those data that may be relatively low. And there's also a couple of other solutions of filecoin army, but it is not so Ethereum line, right. It's out of Ethereum protocol and there's no way on top of Ethereum is able to verify the data is being stored off chain. So that's why I feel there's a huge gap there and that's why we are like to go through this. It's an off chain storage approach to solve this problem. Yeah.
00:28:50.780 - 00:29:00.324, Speaker A: For ease of storage, I have a talk yesterday, so feel free to maybe go to the ESA product. There's a streaming and that will tell us how technically we solve, try to solve this problem.
