00:00:00.560 - 00:00:32.124, Speaker A: Thank you. So, hi, everyone. Thanks for bearing with us. A long day. I'm David. I'm the co founder of Dwallet Labs and the Odyssey Network. I'm going to talk to you today about what we've been working doing on for over a year and a half now.
00:00:32.124 - 00:01:18.726, Speaker A: You're actually the first people to hear about it publicly because we very recently finished our research. So, yeah, I'll go over a bunch of different things and I'll try to. It's a lot of things to pack in less than an hour. I'll try to run through some of the things. If you have any questions, feel free to stop me and ask them. But if there are questions around, like, what can we do with this? Or this makes me think about something else, then maybe let's try and leave those to the end. So, yeah, we're going to talk about the first two waves of web3, the problem of access control, how it's addressed today.
00:01:18.726 - 00:02:18.274, Speaker A: Our solution to access control, which is de wallets. We're going to talk a bit about MPC and about our algorithm to PCMPC, and then we'll talk about why we believe this is the beginning of a third wave in web3, and then do a short comparison between d wallets and existing solutions, because people are always interested in those things. So, yeah, and then questions. So we'll do this very quickly. Right? Web three started with bitcoin and introducing decentralized value, and that was a first wave. Right after bitcoin, we saw all these networks popping up, each different kind of use, case or approach, or tech, created, like another separate network. So we have examples like Litecon and Ripple and Monero and Dogecoin.
00:02:18.274 - 00:03:28.462, Speaker A: So whether you cared about privacy or about memes or about corporate stuff, right, you created, like, your own network, and you had to incentivize network participants. You had to be experts in cryptography and in cybersecurity. And that was the catalyst for Ethereum, introducing decentralized applications, right, and smart contracts. So now, if you want to create a decentralized application, you don't need to be an expert in cryptography and security and set up your own network and incentivize participants. You just write a smart contract, and it's implemented on ethereum, right? And that led to deFi, nfts, daos, identity gaming, everything that we know today, because builders had just a much, much easier way to build those things, and it just scales better. But that also led to hundreds of platforms and frameworks for decentralized applications and Adin reminded me of my favorite XKCD comic about how standards are created. And that's what you have resulting out of the second wave of blockchain, right.
00:03:28.462 - 00:04:00.924, Speaker A: You have hundreds of silos that are separated. Some of them have kind of weak links between them, but not really. And it's just a huge mess. And the other very important limitation is the binary access control. So all of these networks are based on what is called public key cryptography. You have a public key that's derived from a private key, and if you have the private key, you can do whatever you want, and if you don't, you can do nothing. So it's a very, very binary access control schema.
00:04:00.924 - 00:04:33.206, Speaker A: So the problem of access control, which is what we defined as a problem that we wanted to solve, is that builders in web3 want to have great user experience and they want to have interoperability. And in order to do that, you need to kind of figure out a way around the existing binary access control derived from this private key concept. And to build granular, decentralized access control is extremely difficult.
00:04:33.270 - 00:04:33.494, Speaker B: Right.
00:04:33.534 - 00:05:18.224, Speaker A: You need to incentivize participants in a network, and you need to be an expert in how cryptography works in cybersecurity. And this is very, very similar to the problems that people had before Ethereum came along. So now it's not just about creating the application, it's also about creating a great user experience and interoperability. And builders are having the same problems. And usually what happens is that builders resort to centralized solutions. Right? And so if you want to allow people to do the most basic thing, which is purchase different currencies, different tokens, then you want to create an exchange, and then you just create a centralized exchange, and then they implode and people lose billions. And that's basically part of the problem of access control.
00:05:18.224 - 00:06:05.752, Speaker A: Yeah. So how is access control addressed today? Right, so you have, broadly speaking, self custody. Right. So either you hold a private key or more recently, you have more solutions around account abstraction, and then you have centralized access control, whether it's centralized exchanges or custodians or centralized NPC custodians, which is slightly better. And we'll also talk about the differences there. And then you have interoperability networks, so things like cross chain messaging. You have pooled custodial MPC networks, so things like Thor chain ICP, and you have siloed custodial MPC networks, which are very new.
00:06:05.752 - 00:06:45.780, Speaker A: And we'll talk about them as well. So these are kind of the ways that people are thinking about how to solve access control, you also have things like bridges. You have a lot of things that people are building into protocols in order to enable them, like IBC or things like that. But those are all very, let's call them ad hoc and patchy solutions in order to solve a very specific problem. They don't really create an infrastructure for decentralized access control. So how should a decentralized access control infrastructure look like? So we need it to be a low level infrastructure. We need it to be universal.
00:06:45.780 - 00:07:07.748, Speaker A: It can't just be relevant to a specific chain or a specific ecosystem or a specific use case. It needs to be flexible. So you need to be able to do whatever you want, and that will be enforced in a decentralized way. And it needs to be scalable. So you can't do something that can only support a certain scale, whether it's on the decentralization part or in the performance part.
00:07:07.796 - 00:07:08.052, Speaker B: Right.
00:07:08.108 - 00:08:08.652, Speaker A: Because you want it to be relevant to any kind of use case or as many use cases as possible. The other very important thing is that you need to uphold the standard web3 security guarantees. So one of those, or let's call them security principles. So one of those very important principles is that cryptography or cryptographic security is superior to, let's say, hardware based or economic based security, right? And that is something that when people solve access control, they tend to rely on hardware or rely on economics in order to make things work. But then you move away from kind of the premises of web3. Another important thing is permissionlessness and decentralization, right? You want to have open, permissionless settings and decentralized. I think those are kind of the core principles in web3.
00:08:08.652 - 00:08:58.374, Speaker A: And the last thing is the famous not your key is not your coin. Essentially, if you cannot prevent someone from spending your assets, that is the most basic security guarantee that you have in traditional blockchains. And that is also something that is being overlooked or ignored in order to solve the access control problem. So these are the things that we believe a decentralized access control infrastructure should have in order to really solve the access control problem in a holistic and future proof way. So our solution is a new blockchain, primitive. We call it a dwallet. Dwallet stands for a dynamic decentralized wallet.
00:08:58.374 - 00:09:25.854, Speaker A: That's our formal definition for a D wallet. It's a signing mechanism paired to a public key and constrained by dynamic access control that operates within a decentralized state machine. Um, and essentially a D wallet will have an address on any other blockchain. It'll be able to sign transactions for those blockchain. It is programmable and transferable. And, uh, you can't generate a signature without the user. So the user always retains ownership and control.
00:09:25.854 - 00:09:57.894, Speaker A: But you also can't generate a signature without the network. So you have granular access control, uh, that is enforced in a completely decentralized way. So that is what we wanted to create. And when we thought about ways to create it, we looked at the cryptography. There are a lot of approaches that you can take, but the ones that we focused on were around cryptography. And in cryptography, the most natural field to go to was MPC. I don't know how many of you are familiar with MPC, but we'll do.
00:09:57.894 - 00:10:20.550, Speaker A: Sorry. Before we go through MPC, we'll talk about the specific requirements of D wallets. So we have. A D wallet needs to be decentralized, permissionless. We call this concept non weakening. So using a dwallet shouldn't be weaker than using your own private key. So if now someone can spend your assets, then that weakens your security.
00:10:20.550 - 00:11:14.704, Speaker A: So it can be weaker. It needs to be censorship free. It needs to be generic, dynamic, scalable, and transferable. So generic means it'll sign transactions, arbitrary messages, right? It just, if it supports a signing algorithm, they'll sign that transaction. Dynamic means that you can write and change the logic, and it will be enforced. Scalable means that the performance will scale, and transferable means this is, we won't go into transferable, but we believe it's part of access control, right? If I can't trustlessly transfer a D wallet, then I can't really control the access to the D wallet. I will always have access to it, right? So as I said, MPC was the very natural field we looked at.
00:11:14.704 - 00:12:15.926, Speaker A: So MPC, very, very brief. This is a very, very brief and high level overview. So, just so we all are on the same page, MPC stands for multi party computation. It means you can compute with others without revealing secret information. A very common example for NPC is if all of us in the room want to know whether we're making more or less of the average of our salaries, right? So are we on the higher part or the lower part of the earning graph? So none of us wants to reveal their salary, but we all want to know whether we're above or below average. So you can use an MPC algorithm in order to do that computation and get the results without revealing your salary, right? That's a very basic example. In web3, MPC is used usually in the context of TSS, threshold signature scheme.
00:12:15.926 - 00:12:59.314, Speaker A: So TSS means that you have a threshold table out of the number n of parties that can compute a signature together. So what that means is, you know, me and two other people will all have like our own secret chair, and let's say the threshold is two out of the three. So two of us will be able to generate a signature together for a specific public key. So that's TSS. The signature will be verifiable against a public key, like any EoA. So from a blockchain perspective, there will be no difference between someone using a private key and someone using MPc. The process on our end will be different.
00:12:59.314 - 00:13:39.808, Speaker A: And that public key and the secret chairs are generated in a process called DKG, distributed key generation, where there's a sort of a ceremony that creates the public key and the secret chairs for all the parties. And a secret chair, all the secret shares can be basically reshared without changing the public key. So that's an important thing that we'll get to later. But if we are three parties and Mike's secret share was compromised, someone found it out. Right. And now we want to invalidate it. So we just reshare and then each one gets a new secret share, the public key stays the same.
00:13:39.808 - 00:13:55.814, Speaker A: So we can continue as usual without having like a third of our or half of the threshold. Right, right. Compromised. So that's very, very briefly on MPC. If there any questions or anything or we can move forward. Yeah.
00:14:01.114 - 00:14:04.414, Speaker B: It means that you somehow invalidate the old ones.
00:14:04.954 - 00:14:45.136, Speaker A: So yes and no. No. In the sense that it's cryptographically like the sum of those shares will cryptographically be the private key. So if you do get hold of all the shares, or at least a threshold of the shares, you will be able to reconstruct the private key. What it means when you reshare is that every, assuming that all the participants are, it's called semi honest, they want to still protect the mechanism. Then you are no longer using those shares. So now they're no longer in the danger of being compromised.
00:14:45.240 - 00:14:45.528, Speaker B: Right.
00:14:45.576 - 00:14:54.284, Speaker A: So now you have a new set of shares and you assume that they have also, like the other parties, have also destroyed their shares.
00:14:56.824 - 00:15:01.444, Speaker B: In general, when you mentioned the threshold signature scheme, it's something similar to Shamir.
00:15:02.544 - 00:15:27.484, Speaker A: No, no. I mean, Shamir has a lot of things that he created, but I'm assuming you're talking about Shamir secret sharing. No. So Shamir secret sharing, I mean, yes and no. It's very complicated. We won't get into it, but not exactly. So Shamir secret sharing sometimes is used within some NPC algorithms.
00:15:27.484 - 00:16:00.614, Speaker A: But what we're talking about is a secret share that isn't just used to reconstruct the key, it's also used to actually generating signatures, which is a different. Like you can't just use Shamria secret sharing to do that. It's part of a full algorithm, including the DKG process. Yeah, I mean, in short, like with Shamir secretary, you start with a private key and you break it up. And here you never have a private key existing in the first place. You do a DKG and that creates a public key and shares.
00:16:00.734 - 00:16:01.334, Speaker B: Okay.
00:16:01.454 - 00:16:31.286, Speaker A: That's like an easy way to explain it. Anything else? No. Okay. So MPC in web3 today has a lot of powers but also has a lot of limitations. So the powers of NPC is that it's generic, right. Just like a private key, right. You are able to sign transactions for any network, right, that supports the signing algorithm.
00:16:31.286 - 00:16:53.674, Speaker A: So let's say ECDSA or schnor, you'll be able to use that MPC algorithm to sign a transaction with that signature algorithm regardless of the structure. Regardless. It just signs the message. So it is generic. You don't have to integrate it into blockchains. You don't have to create a smart contract on every blockchain you want to support. It automatically supports everything.
00:16:53.674 - 00:17:50.396, Speaker A: It's cryptographically secure. So people think about NPC like you're taking the private key and you're breaking it, right? Like some of your secret sharing, right? You're taking the private key and you're breaking it into shares. But the image that people have is like the more shares that you collect, the closer you get to the private key. But actually if the threshold is whatever the threshold is, right, t t minus one will be just as secure as having none of the shares, right? Because it's cryptographically secure. So let's say we have 100 parties and the threshold is 80. If I collected 79 shares, I'm still as close as I was when I had zero shares to breaking the key. So that's very important from the cryptographic security standpoint.
00:17:50.396 - 00:18:29.770, Speaker A: It's a very important trait. And also it can overcome the binary access control of public key cryptography because you can have, let's take fireblocks, for example, because that's a very well known NPC custodian. So fireblocks, what they say is you hold one share. So now I can't steal your assets, but I will hold one share. And I will enforce access control. And you can go to our dashboard and say, this guy can spend $100 and whatever this department can spend together, up to $10,000. And this chain can be used and this chain can be used in this protocol and we will enforce it because we have a share and no one can generate a signature without us.
00:18:29.770 - 00:19:08.274, Speaker A: Right? So it allows to enforce granular access control. But what are the limitations of MPC? So MPC has many limitations. One is decentralization. So MPC algorithms today are not scalable in terms of the number of parties. We'll talk about why soon. But most MPC setups today are usually between two and five parties. Some stretch it a bit further, but the more parties you add, the performance is quadratically deteriorates.
00:19:08.274 - 00:19:23.340, Speaker A: So it's very inefficient. I think Thor chain pushes the limit of NPC to the maximum, and they have a maximum of 20 parties, which isn't decentralized by any means.
00:19:23.412 - 00:19:23.692, Speaker B: Right?
00:19:23.748 - 00:20:03.286, Speaker A: So decentralization is a big limitation. Another limitation is scalability. So MPC algorithms today are sequenced. You have to wait for a transaction to be signed before you sign the next transaction. And it is very, very slow, especially when you add more and more parties. But even with a small amount of parties, it's still, if you compare it to anything else, actually it is very slow. And the last limitation, which is a bit more trickier to explain, but it's very important, is that it can't be both permissionless and secure.
00:20:03.286 - 00:21:11.458, Speaker A: And that connects back to resharing. So one of the security assumptions that we talked about is that if I'm a user, no one can spend assets without me, right? So if there's an NPC T group, I have to have n minus t shares as a user or n minus t plus one maybe. Because if I don't want the other parties that hold the keys to perform actions without me, I need to be able to block them in the threshold. So that means that if we're trying to think about a permissionless setting where people can come and go, validators or nodes can come and go, then that means that let's say we have 1000 users and a validator now leaves, all of the users will have to participate in a resharing process with all of the validators, because nothing can happen without the user. So either I give up permissionlessness and I just say, okay, these are the parties that are going to do it, fire blocks or copper. So it's not permissionless. I'm going to be the other party.
00:21:11.458 - 00:22:15.254, Speaker A: Now we don't need to reshare or I'm saying, ok, let's let go of this security assumption that no one can take your assets without you being able to block them, because then I don't need you to reshare. So it can be permissionless. In Thor chain, for example, you have 20 parties, and the user is not part of the transaction. So essentially those parties can collude two thirds of them, right? 13 parties can collude and steal all your assets, right? Which is something that can't happen on Ethereum. So those are the limitations of MPC today. So when we go back to the D wallet requirements and we look at MPC today, the vast majority of requirements for D wallets can't be achieved with existing algorithms of MPC. So yeah, decentralization, permissionless, non weakening, censorship free scalability, transferability is a bit of an issue, but also probably can be achieved.
00:22:15.254 - 00:23:26.334, Speaker A: So we had to create new cryptography. So we created a new MPC algorithm called two PC MPC. As part of this algorithm, we achieved many, many cryptographic breakthroughs, um, in, in many different uh, places, some in uh, in zero knowledge proof range proofs, um, fully homomorphic encryption, uh, and MPC itself, a lot of, a lot of uh, breakthroughs in order to enable this. Um, but essentially this is how it looks like. Every D wallet has two parties, and both of those parties are required in order to sign a transaction, right? So that's called a two pc, a two party computer, but a network, right? So as we said, the user has veto, so no one can take your assets and the network can enforce decentralized access control. But the network itself is not really one party, right. It's kind of a hierarchical NPC, or a nested NPC, where the network itself is also an NPC of two thirds of the parties, right? So the algorithm is called two PC mpC.
00:23:26.334 - 00:24:05.834, Speaker A: Every signature is created when the user plus two, three of the network agree to sign a transaction. So that's essentially a D wallet. This algorithm allows for the D wallet to happen that way. And we'll talk through three major breakthroughs and why they enable the concept of Dwallet. So we talked about three problems, right? Decentralization was the first one. Existing MPC algorithms are based on unicast between parties. So the communication between the parties in MPC means that every party needs to talk to every other party, right? So the more parties you add, that becomes quadratically more complex.
00:24:05.834 - 00:24:52.104, Speaker A: So if it's two parties, then I need to talk they just need to talk to each other. If it's three parties, now each party needs to talk to two other parties, right? And so on and so forth. That's why when you get to 20, it becomes very, very slow and complex. In two pc and PC, we were able to build a protocol that has unicast communication, sorry, broadcast communication. So that means that every party sends one message to everyone and that's that. So that's linear, right? That's o of n. But we also were able to use amortized decryption, which we will not get into right now, in order to decrease that even more, to become constant.
00:24:52.104 - 00:25:24.774, Speaker A: So it's o of one. So this is orders of magnitude more scalable. And we were able to get to thousands of participants signing transactions in a scalable manner. So that's the first breakthrough. The second breakthrough is scalability in terms of the amount of transactions that could be signed. So as we said in existing TSS, transactions are signed one at a time. So you have a sequential process and then you have very high latency, low throughput.
00:25:24.774 - 00:26:07.422, Speaker A: It only really works when you don't have a lot of volume or for very passive custody use cases. If I don't do anything, then it doesn't matter if it takes a minute for a transaction to be signed and I can't sign anything else while that is being made, fine. But if I want to start doing trading, it's more complicated. And you can see that in things like Thor chain. So with two pc and pc, we support batching of multiple transactions. Whoops. Is it working? So we support batching of multiple transactions.
00:26:07.422 - 00:26:58.634, Speaker A: And not only that, we can batch multiple transactions. Also we can sign on transactions from different users. So different d wallets. So the network as a network can batch multiple transactions from any amount of users together and sign them, which dramatically increases scalability. And we were able to get to thousands of transactions signed per second, where we tested it with a user plus 1000 parties. So this is nothing even like you can't imagine getting to anything close in that with anything that exists today. And the third breakthrough is the steered approach, right? Being able to balance the security and the performance in a permissionless setting.
00:26:58.634 - 00:27:37.958, Speaker A: So with existing TSS, as we said, we can be both permissionless and ensure non weakening. And we have to choose one or the other. Every validated change requires an expensive process with all the users online, which is just something that you can't really expect. And two PC MPC created this hierarchy, this nested MPC, where the user just communicates with one party. The user doesn't care how many validators they are, who they are, what they do. It just communicates with their network. And the network itself is completely autonomous and flexible, so validators can join and leave, and that will have zero effect on the user.
00:27:37.958 - 00:28:24.794, Speaker A: It doesn't even need to know that that actually happened. So that's the third breakthrough. And that really solved all of the problems that we had that wouldn't allow us to create d wallets. We didn't touch on that censorship free stuff because that's like another hour talk. But we also were able to solve that aspect. So, yeah, the guy's happy I found the meme where he actually gets the balloon. So I would like to talk now about why we believe this can create the third wave of web3, and why this is meaningful, not just like as a specific solution for a specific use case, but can actually create.
00:28:24.794 - 00:29:30.488, Speaker A: Yeah. A whole new way of looking at web3. So protocols on Odyssey can utilize D wallets, right? So you can build any type of logic, any type of protocol that will be able to utilize D wallet and their capabilities. And if you can be implement. If you can implement, sorry, any logic that will be enforced in a trustless way across all of web3, then you can now think about different ecosystems, you can think about non smart contract networks like bitcoin, and you can think about public and private blockchains, right? All of that can now be governed from one, let's say, with one logic, with one contract. And the builders will be able to get both user experience and interoperability out of the box without figuring out how it's done or worrying about making it more decentralized or more secure. And you don't need to be experts to have decentralized access control.
00:29:30.488 - 00:30:33.820, Speaker A: So the same way that Ethereum kind of were able to or led to this explosion of new use cases and things that utilize web two because they removed that barrier for builders, we can have the same thing with decentralized access control. And we'll look at just like few example use cases, things that people usually talk about are in our custody and interoperability. So in custody, you can think about decentralized custody, right? Something that you don't really have today, which is big, but you can take it even a step further, and we call it bring your own wallet. So you can think about things that exist today, like centralized exchanges, right? You could build a centralized exchange that has zero reserves. It'll be completely centralized. The whole process of onboarding a user regulation, everything will be completely centralized. But all the exchange would have is a permission to do things with a user's d wallet.
00:30:33.820 - 00:31:10.094, Speaker A: So it will never hold the assets. It will only receive a permission to perform a certain trade to stake assets to whatever the user authorized them to do. So this is kind of. And you can think about bring your own wallet in different ways, right. You can connect your wallet to multiple exchanges, right? So you can use the same assets on different types of exchanges and get, I don't know, the best transactions. Or you can plug and play with custodians, right? If you're not locked into a custodian anymore, you can just plug out your wallet and plug it in somewhere else. But even more than that, you can think about things.
00:31:10.094 - 00:31:46.578, Speaker A: This is something that I call temperature. You can think about custody solutions that go beyond the binary that we have today of, for example, hot and cold wallets. You can think about a custody solution that will actually create a temperature for your wallet. So when you create a new d wallet, you'll be able to have six different identities. Each identity will have a different temperature. The coldest identity for that D wallet will have supreme power, super admin capabilities, and we'll be able to do whatever it wants. And that identity you will save in a safe in the swiss mountains.
00:31:46.578 - 00:32:38.544, Speaker A: But then you'll have all these other kind of identities with different capabilities and different privileges for that d wallet. And each one of them will have a different security posture. And now web3 starts to look a lot more like. Like web two, right? Because one of those identities will be able to be your Google identity, and one of them, whatever, right? It depends on the capabilities that it has, and you will be able to kind of adjust the type of risk management around your assets and your identity. So that's custody in terms of interoperability, right. We can think about the first trustless bridge between bitcoin and ethereum, right? Something that you couldn't really do today. Bridges are mostly centralized, and then you have these bridges that are part of protocols like IBC.
00:32:38.544 - 00:33:33.154, Speaker A: So that is the obvious solution. But I think that eventually the concept of bridging and wrapping assets will kind of go away, because when you think about natively multi chain defi. So you can think about a lending protocol on Odyssey that allows you to hold BTC as collateral on bitcoin and then receive USDC on polygon. And the logic will be governed through Odyssey so the assets never have to leave their native chains in order for you to use the value across different networks. And the same thing with amms, you can think about an amm that doesn't require you to take your assets and put them in a smart contract. Right. The logic will be governed across many, many different d wallets that provide the liquidity, but the assets never leave the wallets themselves unless trades happen.
00:33:33.154 - 00:34:21.624, Speaker A: And the last thing is, you can think about multi chain daos. You can think about a DAO that holds a D wallet and holds assets on other chains. And it also doesn't need these, um, you know, it doesn't need agnosis safe to manage access control, right? Because access control is built in the Dao on Odyssey. Um, so now you have a native access control mechanism for a DAO that can control assets and do things with those assets across all of web3. Um, so I think the way that you sh. You will think about interoperability will change once you have a infrastructure for decentralized access control, and then you have all these new use cases and things that we can, you know, we have some thoughts around them, but also people will come out with probably new things, right. You can have a de wallet marketplace.
00:34:21.624 - 00:35:07.478, Speaker A: So a way to just look at the time, okay, a way to price illiquid assets or entire portfolios, or even. Sorry. Or even a way to price the intrinsic value of a wallet itself, right? Imagine if you could buy the wallet that bought the first pizzas with bitcoin, right, for 10,000 bitcoins. Like, the wallet itself could have value. So all these things are. And then we have things like, I don't know how many of you are into gaming, but there's a huge black market in gaming. Not web3 gaming, like gaming in general, for boosting, where you pay pro players to level up your.
00:35:07.478 - 00:35:54.334, Speaker A: Your account. That could now be done in a trustless way because you'll be able to give permissions, not share your itunes password. I store whatever your Apple or Google password, but just give them access. And the other way around, pro gamers will be able to rent out their super cool accounts for people to play with for whatever. And then all these other things that people will probably come up with that can be now done with decentralized access control. So the last part is to talk about the existing solutions that we have today. And where do wallets differ? I chose four categories to compare across.
00:35:54.334 - 00:36:39.708, Speaker A: Spoiler alert, we're green with all of them. But, so the first one is user consent required, so you can't do anything without the user approving. The second one is that the access control is decentralized and robust. The third one is scalability. And the fourth one is that you have an open, Turing complete and natively multi chain infrastructure. So if we start with centralized access control, not a big surprise that it fails almost across the board. The only part where you have, sorry, MPC custodians perform a bit better is where the user centers required.
00:36:39.708 - 00:37:20.704, Speaker A: The whole premise of things like fire blocks is that you have this aspect. You don't have to trust me not to steal your assets, but you always have control of your shares. So I can never do anything without your consent. But still, in everything else, it doesn't really work. It's not scalable. There's no decentralized and robust access control, and it's not an open and natively multi chain infrastructure. If we go and compare interoperability networks, we have all these custodial MPC networks like Thor chain or ICP.
00:37:20.704 - 00:38:00.612, Speaker A: We have lit protocol, which is a bit different. There's entropy, which is not very clear what they do because they haven't released anything yet, but they're claiming to do something around that as well. So those networks don't have user consent required. That's the trade off that they have with permissionlessness versus, um, user consent. Um, they, uh, are not decentralized because of performance limitations, are not scalable. Uh, the only thing that is specifically, that's why I separated lit. So lit specifically does, uh, because it's a siloed.
00:38:00.612 - 00:38:42.374, Speaker A: Um. Uh, yeah, I don't know if I'll go into it, but essentially you can either say I'm creating a key pair and this is only your key as a user, but I'm controlling it, or you can say all of the assets of all of the users are in this pool and I'm controlling the pool. So Thor chain is a pool where all of the users assets are in one pool and I'm controlling it as a network or a distributed network. And with lit protocol, you can actually create a key pair that is just for you. You have the NFT and you tell. With the NFT, you tell lit protocol what to do. So with lit protocol, it does actually allow for Turing complete and natively multi chain infrastructure.
00:38:42.374 - 00:39:37.684, Speaker A: But again, it's not scalable, it's not decentralized, and you don't need the user consent with cross chain messaging. So that's things like CCIP layer zero XLR, so you don't have the user consent. The network can send whatever message it wants and you don't have any way to prevent that. The access control is decentralized and robust performance and scalability really depends on the network. I guess with a lot of them it's pretty satisfactory. But it's not perfect, and it is not an open and natively multi chain infrastructure. And the reason it's not is because they have to create an internal ledger for every network, right? Because the user assets are pooled in a way.
00:39:37.684 - 00:40:12.594, Speaker A: Right. Then if now layer zero starts to support, I don't know, Solana, it needs to have an internal ledger of what their users want to do. On Solana, it's not just generating signature and using the native authentication method of the target blockchain. So that's why it'll always be based on integration. It'll never be just an open and natively multichain infrastructure. Infrastructure. And the last thing is self custody, which as usual, performs much better than anything else.
00:40:12.594 - 00:40:57.964, Speaker A: So private keys, as we know, you have the user consent and you have scalability. But the problem is it's not decentralized and it is not an infrastructure. And with account abstraction, which is the closest thing, the only problem with account abstraction is that it is not a natively multi chain infrastructure, but it's just based on the specific chain that it's implemented on. And even within Ethereum. Let's say we're Ethereum maximalists and we believe that Ethereum is the only thing that matters. Even then, you still need to have this account abstraction set up for every L2, for every in the future layer three, and you need to have ways to manage that and have them talk between each other. It's a whole deal.
00:40:57.964 - 00:41:35.884, Speaker A: So account abstraction is an amazing step forward, but it still doesn't solve the fundamental problem of decentralized access control. And that's just ethereum, right? If we want to include bitcoin, other ecosystems, if you want to include private networks, which I think will be a big part of the future of web3, then that doesn't really give you the answer. So yeah, we have a bunch of explainer videos, if you want to take a look, that try to explain some of the concepts and some of the things that we did. Odyssey XYz is the website. And if you have any questions, I'm happy to answer.
00:41:45.784 - 00:42:04.380, Speaker C: Okay, how actually defi think will work? User signature is required for every account change, for every state change. So how do I provide liquidity if my signature is required basically for every trade?
00:42:04.492 - 00:42:12.692, Speaker A: Okay, so good question. The way that it is implemented is that. And I'll do it in a very, very rough way.
00:42:12.748 - 00:42:12.940, Speaker B: Right.
00:42:12.972 - 00:43:09.300, Speaker A: So it's more complex than that, but essentially the user share we have a two party computation. There's a network share and the user share. So the user share is encrypted on the blockchain and the way to decrypt it is through the access control mechanism. So whatever object odyssey is object based, so whatever object has the capability to use the D wallet will also be able to decrypt user share. So it'll be part of the, so if you give for example, defi protocol, the ability to liquidate your position on bitcoin, then it will have access to decrypt your user share. It won't be able to do whatever it wants with the user share because the access control mechanism, the network won't sign unless it's only liquidating the position when a certain condition happened.
00:43:09.432 - 00:43:10.104, Speaker B: Right?
00:43:10.644 - 00:43:14.824, Speaker A: So that's a very, very high level explanation of how it works. But that's how it works.
00:43:15.324 - 00:43:25.064, Speaker C: And you said that you did quite a lot of new stuff in cryptography and so is it peer reviewed?
00:43:26.204 - 00:43:46.274, Speaker A: Another good question. So first of all, maybe I can say just a bit about our team. We have some of the best experts in cryptography. We have eleven cryptographers. The 12th is joining next month. It's almost half of the company are cryptographers, a lot of them are phds. One of them won the Goodel award last year.
00:43:46.274 - 00:44:14.996, Speaker A: So really it's not just like people we picked up from the street, but we are publishing the papers. We already published the first one a couple of months ago about the first scalable threshold palier. And we are going to, we submitted some of these papers to Eurocrypt like other cryptography conferences. So they're going through peer review and yeah, everything will be published. Peer reviewed. Like, yeah, of course I will have.
00:44:15.020 - 00:44:26.304, Speaker B: A couple of questions. So is there anyone else to have a question before I just, you know, open? Huge discussion. Anyway. Wow, you know, awesome.
00:44:29.364 - 00:44:30.664, Speaker A: When token. Yeah.
00:44:33.604 - 00:44:53.864, Speaker D: Yeah, I guess you sort of alluded to this and you're like, I don't know, maybe too complicated. Another talk. But because it sounds like the premise here is you're basically okay, the API for this is a public key instead of a contract, and this basically lets portability everywhere. So how did you want transferability to work?
00:44:54.644 - 00:45:27.806, Speaker A: So transferability will basically be, let's take the most simple case. Let's say I created the Dwallet and now I did a bunch of stuff with it. I connected it to a lending protocol and I gave permissions to my family or whatever to use it. Now I want to transfer it to someone else in order for the transfer to happen. First of all, I would have to make sure that there are no, let's say, commitments. That can't be. That.
00:45:27.806 - 00:46:02.208, Speaker A: Yeah, that all the commitments can be undone. So, for example, if I gave someone permission to sign that I can't revoke, then I won't be able to transfer my D wallet. But if, let's say, I took care of all those commitments and now there are no commitments, what will happen is that the access control mechanism would reset. The new user will perform, will get all the access control privileges and then they will perform a reshare with the network. So the old user won't have access.
00:46:02.256 - 00:46:09.712, Speaker D: To the user share because you need both parties. You're sort of having the network trigger the reshare and also enforce the fact.
00:46:09.768 - 00:46:24.914, Speaker A: That, I mean, it will be built in, in the SDK. So it'll be like how the network works. But yeah, essentially it will make sure that the old use, first of all, the network will never sign with the old user again. First of all. And now we're also solving the cryptocurrency part by resharing.
00:46:31.814 - 00:46:44.274, Speaker B: Okay, now my battery of questions. You mentioned there are thousands of transactions per second or thousands of signatures per second. How, where?
00:46:44.934 - 00:46:48.054, Speaker A: How and where? What do you mean how and where?
00:46:48.134 - 00:46:53.124, Speaker B: Well, how? That's the obvious question. Where is it on chain?
00:46:53.824 - 00:47:33.108, Speaker A: So Odyssey network basically generates the signatures. So in MPC, the way a signature is generated, again in a very, very high level, is that parties create partial signatures and when you combine them, you get the full signature. So from the perspective of the user, I will be able to create a partial signature. And when the network creates the partial signature of the network, I'm able to combine them to a full signature. So the process of generating the signatures from multiple users with 1000 validators, we could get to a performance of, cryptographically speaking.
00:47:33.156 - 00:47:33.340, Speaker B: Right.
00:47:33.372 - 00:47:36.784, Speaker A: We could get to thousands of transactions signed per second.
00:47:37.284 - 00:47:50.376, Speaker B: Okay, so you do it on one client or. That was the question. Where I still.
00:47:50.480 - 00:47:52.104, Speaker A: You mean where is the signature stored?
00:47:52.224 - 00:47:52.808, Speaker B: Yes.
00:47:52.936 - 00:47:57.912, Speaker A: So the signature is stored on the chain. Right. You can query the chain and receive the signature.
00:47:58.008 - 00:47:59.024, Speaker B: And which one?
00:47:59.184 - 00:48:00.416, Speaker A: The Odyssey blockchain.
00:48:00.560 - 00:48:01.376, Speaker B: Okay. Right.
00:48:01.440 - 00:48:04.352, Speaker A: So the Odyssey network is a network of D wallets.
00:48:04.448 - 00:48:04.728, Speaker B: Right.
00:48:04.776 - 00:48:12.154, Speaker A: And that's its purpose, built to support the wallets and to allow the concept of the wallets. So the NPC is built into the consensus.
00:48:12.234 - 00:48:12.546, Speaker B: Right.
00:48:12.610 - 00:48:19.946, Speaker A: Everything is built in order to support D wallets. And then the signatures are generated by the network, of course, with the user.
00:48:20.010 - 00:48:20.450, Speaker C: Right.
00:48:20.562 - 00:48:36.502, Speaker A: But I'm talking about like the cryptographic capabilities of the MPC algorithm is that it is able to support signing thousands of transactions. So I don't believe we'll get to that volume anyway anytime soon. Right. And by the time we get there, we are hoping to get tens of thousands of signatures per second.
00:48:36.598 - 00:48:53.374, Speaker B: Okay, thanks. And the other one is one of the slides you mentioned the users and the validators. Can you elaborate a little bit on how it is related to the signing of whatever message needs to be signed? What's the difference between the validator and user?
00:48:53.494 - 00:49:00.316, Speaker A: So users are de wallet owners, right? So if you own a d wallet, you're a user of the D wallet.
00:49:00.380 - 00:49:00.748, Speaker B: Right?
00:49:00.836 - 00:49:28.504, Speaker A: So when I say that thousands of validators can sign transactions with multiple users, I mean multiple D wallets, right. Request the network to sign the partial signature of the network for their D wallet. And it doesn't matter how many users and how many D wallets because it's just part of the hierarchy, right. I don't care what, what's on the other part. Like the user doesn't care what's on the other part in terms of the network, and the network doesn't necessarily need to care who's on the other part.
00:49:29.124 - 00:49:59.064, Speaker B: Okay, thanks. And the other one is the, on one of the slides, when you made the comparisons, you compare the D wallets and account abstraction, right? So considering this is the D wallets are better in some cases for, due to this situation that you can actually sign any arbitrary call data or whatever message.
00:49:59.884 - 00:50:22.468, Speaker A: Yeah, but I mean, with account abstraction you could also create whatever logic you want on what will and won't pass. Right. And it has the same it if you're talking about a specific network. Right. And then scalability will be based on the scalability of the network. Right, but still, it's not something that is generic and universal.
00:50:22.556 - 00:50:22.780, Speaker B: Right.
00:50:22.812 - 00:50:32.304, Speaker A: So you can't use it as a access control infrastructure for web3. You can use it as a very good access control infrastructure for a specific chain.
00:50:34.484 - 00:50:35.264, Speaker B: Thanks.
00:50:39.404 - 00:50:51.368, Speaker C: Regarding validator set, how the key actually is transferred. So for example, I'm validating and I decide, no, I don't want to validate anymore how you invalidate my part of.
00:50:51.536 - 00:51:36.500, Speaker A: So that's also a process of resharing, but it's resharing just within the MPC part, not the two pc part. So if you go back to here, right. So when a validator joins or leaves here, the. Whoops, oh, okay. So, so the validators need to reshare between themselves. So we will have probably some clever way to optimize because we don't want to do it every time a single validator joins or leaves. But you also don't want to have too many validators who are not part of the consensus and still have some power in terms of owning shares or the other way around.
00:51:36.500 - 00:51:54.384, Speaker A: You don't want to have validators who joined and are not part of the signing process. So we'll probably find a way to optimize between the performance and, I don't know, like optimizing the cost of doing a reshare and the security of making sure that it's as close as possible to the active validator set.
00:51:55.284 - 00:52:00.064, Speaker C: So you don't need any on chain actions for this?
00:52:00.444 - 00:52:10.588, Speaker A: No, I mean on chain like on bitcoin or. Yeah, not regarding the users. It will be a process that will be part of the network for the validators.
00:52:10.756 - 00:52:13.420, Speaker C: So the address will stay the same?
00:52:13.452 - 00:52:20.664, Speaker A: Public key will stay the same, yeah, exactly. So with resharing. That's what I said in the beginning, when you reshare, the public key stays the same.
00:52:28.804 - 00:52:36.394, Speaker D: Two questions about is the network part. So one is if you're using.
00:52:38.894 - 00:52:39.390, Speaker A: Sorry.
00:52:39.462 - 00:52:50.114, Speaker D: Do some laptop recovery first. If the validators are doing NPC's, that sort of cap on the number of validators that can be in the network.
00:52:50.814 - 00:53:29.994, Speaker A: So I mean that's part of the, I think one of the major great things that we have, right, in terms of how much can it scale in terms of the number of parties. So we tested with thousands of parties and it's still scaled. We believe that in time, if we want to get to more than thousands, if we want to get tens of thousands, then we will probably need to optimize a bit more. But yeah, there's no theoretical hard limit like with existing MC algorithms where I think we got to like 30 something. When it just stopped working, it would take us years to generate a solution.
00:53:31.654 - 00:53:41.714, Speaker D: And I assume so under HUD, because validators and the number of them, this is like, it's just sort of standard, like proof of stake is the security mechanism for running the chain.
00:53:42.254 - 00:54:23.174, Speaker A: Yeah, it's proof of stake. We're considering doing some things around, so we're considering to doing some things that won't be just a pure classic proof of stake. We're also working on a long term plan where we would replace NPC as the way to implement d wallets. But that's based on cryptography that today is mostly theoretical. So there's probably like five to ten years till we're actually able to do that. But once we do that, then we don't need the economic mechanism at all. So then we won't probably need proof of stake.
00:54:23.514 - 00:54:32.530, Speaker D: Any. One more is if you've decided yet, what's the vm for doing the decision making on chain.
00:54:32.562 - 00:54:33.882, Speaker A: You mean the smart contract engine?
00:54:33.938 - 00:54:34.534, Speaker D: Yeah.
00:54:35.274 - 00:55:08.384, Speaker A: So yeah, we're probably going to launch the initial version with a fork of sui move. But eventually we have our own ZK wasm kind of smart contract engine that we're developing called Homer, which was the author of the odyssey. So that probably won't be ready for initial. We want to launch pretty soon. So that's probably going to be an upgrade, like, I don't know, the next upgrade of the network.
00:55:17.064 - 00:55:24.044, Speaker C: Just a quick one. These smart contracts will be used mainly for storing access rules. Right.
00:55:26.344 - 00:55:45.204, Speaker A: It's true and complete. So we believe that people will also build like NFT marketplaces or whatever. Right. The same shit that you build on every l one blockchain. But yeah, the main reason we build this is in order to enforce these access control rules across different networks.
00:55:45.284 - 00:55:50.348, Speaker C: So there will be also different kind of tokens inside the net. Inside.
00:55:50.516 - 00:56:07.592, Speaker A: So yeah, you'll be able to launch also your token. You'll be able to do anything you do on any generic layer one network. But yeah, that's not the purpose of the network. Okay, that's it.
00:56:07.768 - 00:56:19.244, Speaker B: Oh, you just mentioned that you would be able to do anything, like on any other l one network. So this is considered to be like l two or something?
00:56:19.864 - 00:56:31.974, Speaker A: No, it's an l one. Right, technically, but we don't consider it to be like, we don't call it an l one. Yeah, because we're. Exactly. We're not competing with Solana and Ethereum. Right. Like we're.
00:56:31.974 - 00:56:41.854, Speaker A: Our thesis is based on the fact that there will be a lot of l one s and l two s and whatever. And you'll need to have. And private networks, and you'll need to have decentralized access control across all of them.
00:56:42.394 - 00:57:04.528, Speaker B: And since for this whole process, it's actually to be implemented, or currently being implemented on your chain, is there like a fallback mechanism that whenever you would just shut down the chain that you can calculate it off chain anyhow?
00:57:04.696 - 00:57:25.882, Speaker A: So that's a good question. And something that we're. What we're thinking right now, but this is not like final in any way, is that we will also have a version of Odyssey. We're calling it black hole. That will. It will be the. The assumptions.
00:57:25.882 - 00:58:05.844, Speaker A: There would not be as, I don't know, absolute or radical as Odyssey because you would have a backup of the full key. So I, as a user, will always have the backup. So, for example, a wallet won't be transferable anymore because I know that the user always has the full key. And there are other things that you won't be able to do with that. You will have that guarantee. If the network goes out, I can always. So it will just help me use a decentralized mechanism to enforce access control without giving control of the actual full key.
00:58:07.104 - 00:58:08.724, Speaker B: So you'll be able to sign.
00:58:10.664 - 00:58:26.494, Speaker A: It'Ll either be a separate network, or you will just have two different types of D wallets on Odyssey. A D wallet that is trustless, completely trustless, or a D wallet that just uses the access control mechanism. But actually there's someone who has the full key.
00:58:36.394 - 00:58:43.730, Speaker C: If I have a full key and my wallet is participating in some defi or something else, that means that I will be able.
00:58:43.802 - 00:59:12.924, Speaker A: Just so you won't be able to participate in these things. Right, that's what I'm saying. Right. That's a trade off. So, like, for an institutional who really cares about making sure that nothing can ever happen to hurt their custody solution, right. They would probably say, okay, so I won't participate in those defi things, but at least I know that if Odyssey dies, I still have my assets. Right? But for most people who would want to take, like, when people participate in Ethereum, they take the chances that Ethereum will die.
00:59:12.924 - 00:59:43.174, Speaker A: Right. The difference with Odyssey is that you will secure all your assets from all the chains, and then it's like a larger risk. Right? But then maybe you'll have some of them on that kind of D wallet, where if Odyssey dies, then it dies, and then other assets that you're custodying, you'll have on something that you do have the backup or whatever. It's more about creating an infrastructure than creating the full solution. People can do whatever they want. Okay, thank you very much for listening.
