00:00:00.600 - 00:00:43.334, Speaker A: Okay, thank you. So, hello, everyone. I'm Joseph and I'm from Akiblok chain. We are a cybersecurity company auditors, and we are mainly known for auditing smart contracts on Solana and Ethereum. But we are also developing some open source and teaching blockchain. We had this problem that I'll talk about today, which came up to a solution. We are quite working with high profile protocols, and one of them is safe, and safe is very active in drafting new proposals and protocols.
00:00:43.334 - 00:01:52.974, Speaker A: And this ERC I'm going to talk about was drafted by safe. And we are coauthors of the ERC. But before I jump into the problem, I must give you some kind of like, introduction. So what is the auditing process as seen by the auditors? The second sentence is quite important in our view, like the whole quality assurance is based on some assumptions which are built from top to down. So of course the developers need to have some kind of tooling like framework on that they are building by their best practices, which means, for example, correct git flow, regular previews, or using the right design patterns. And on top of that, we are adding tests, which means, of course, the developers should be writing their tests. And that's another layer of security.
00:01:52.974 - 00:02:30.564, Speaker A: But they are just like unit tests. There are integration tests, but some special category of tests are fastest that we have separated here. And if this all is completed, then there is the audit. So without the underlying layers, the audit basically cannot much help or can basically tell that there's some problem, but the process looks like this. And of course, this is the impact on cost. So the things that have the biggest impact are the cheapest one. And audit, of course, is the most expensive one.
00:02:30.564 - 00:03:07.624, Speaker A: And this is how auditors see the audit regarding the process. Security as a process is not like one hop on hop of thing. And the good projects should be audited continuously, which means every release. And also the auditors always tell that, hey, please guys, get another auditor. So it's good to have everything reviewed by at least two teams. And of course, the audits should be public. So this is how we as auditors see the process.
00:03:07.624 - 00:03:48.274, Speaker A: The problem is that users see the process a little bit differently. And at least from my understanding, the user perspective on audits is this, which of course doesn't much help. It can bring some problems. And one of the problems actually happened to us. And you can imagine that there is a protocol who was audited sometime in the past, and the protocol, of course, wants to demonstrate it. It was audited. So they put the logo on the website.
00:03:48.274 - 00:04:39.764, Speaker A: And the user, he sees this. But what does the user doesn't see is the comment here, which is not of course on the website, which tells, yes, this company has audited the protocol, but it was two years ago, it was 30,000 revisions ago. The smart contract now looks completely different. And even the audit report three years ago has raised some issues that were some of them just acknowledged and not really fixed. So this is what the user doesn't see. And of course this doesn't work for the users and it also doesn't work for the auditors because from the auditor's perspective, when something happens, for example, the protocol gets hacked. So who is here to blame? Of course, the guys that have logo on the website.
00:04:39.764 - 00:05:35.922, Speaker A: Even if the audit actually happened two years ago and there's completely different protocol right now. The funny story is that this protocol got hacked and we were having a lot of issues by communicating that the hack happened in smart contract that even didn't exist in our audit. So this kind of make me very uncomfortable. And we wanted to find a solution for this problem for the users and for the auditors. And then I reminded myself that safeguys were speaking about some standard which they already named. And the standard is ERC 7512. And so we jumped into the conversation with them and basically we're a little bit trying to move the discussion technical towards the direction that we wanted to.
00:05:35.922 - 00:06:34.780, Speaker A: And with them we drafted this ERc and what was the motivation. So we are from the blockchain space, right? So our problem was with the logo on the website. But what if there is a distributed storage that cannot be manipulated and provides cryptographically proven data that's blockchain. Right? And so let's start just using that. So the idea is to store on chain the metadata from the audit, which then of course would work better than a logo on the website. And we just identified like for the first version for the draft, the very minimalistic set of data that basically help to solve this problem. So the important information is like who audited that? That's the name of the company.
00:06:34.780 - 00:07:23.404, Speaker A: We also have their field to include names because skin in the game, you know. So it's good to see who was the auditor, what was audited. So the scope, which means the contract or the GitHub commit, anything that helps to identify what was the scope of the audit. This also answers the question, if the audit is still wallet, if there is like newer commit or a newer version, then of course the audit is not wallet. Then important question is when was it audited? This also helps to answer the question if the audit is still valid or not. And also a question if the fixes that the auditors recommended were actually followed. So this, I would say is like the minimal set of data that we need to store on chain.
00:07:23.404 - 00:08:17.924, Speaker A: And so we did. This is the ERC and the structure is very easy. So we are defining basically the auditors, we are linking the report, the PDF of the report to be sure it cannot be manipulated. We are also including hash of the report, we are including list of auditors who work on the report. And we are linking there in this draft the actual deployed address on the chain, which means if it was on avalanche, then we include chain id of avalanche and the address that it was deployed to. And then the things as I discussed, which means when was it audited? And that's basically it. So this kind of structure is created by the protocol.
00:08:17.924 - 00:08:59.540, Speaker A: And once it's created, the auditor just signs that. And by the signature there's like approval that yes, this information is valid. And we have our skin game, which means that we are also confirming that this is how we perform the audit. And it's kind of like bigger space there in the standard, could have been included like the issues and we discuss this all. But in the end we just agree that let's keep it very simple. And basically when the auditor signs that, it means he's happy with the outcome of the fixes. So we don't need to include every issue and the state disorder issue.
00:08:59.540 - 00:09:31.674, Speaker A: But just like by the signature, the auditor approves that. Okay, we are happy. And now it can be signed. So is it the easy solution and what does it cover? The use cases. So it's a proof of the audit, which means there's a clear that it happened, it happened at some time and happened on some scope. It's also kind of like the other edge case. For example, the auditing company could modify the PDF of the report if they would oversee some issue.
00:09:31.674 - 00:10:29.478, Speaker A: They could edit there and be doing kind of this practices that shouldn't be done. So also, as we have on chain, the hash of the audit, it can be manipulated. So it's working on both sides. And another huge advantage is that by having this kind of on chain structure on Ethereum, we can query that programmatically by simple RPC call, which means it can be implemented, for example, by Req news. So, so far, when something is wrecked, they are just like following the tweets and trying to find from the tweets who was the auditor. So here it would be like very hard proof and it can be checked by an easy algorithm. And also my initial goal was that this should replace the logos on the website, which of course is not defined yet in the standard.
00:10:29.478 - 00:11:00.734, Speaker A: But we can imagine that there's for example, some kind of interactive dashboard that will show that it's audited and the audit is still valid. And this dashboard could be used then by the protocols on the website. It will also work for the end user. And that was the second part of the motivation. So this is the ERC in a nutshell. If you'd be interested, here is the proposal as it's drafted. The QR code leads to the Ethereum website.
00:11:00.734 - 00:11:42.266, Speaker A: If you would like to add anything, ask anything or help with anything. We have a telegram group, which is now quite small, but there are all the authors of the CRC. And now the goal is to basically have the draft finished and push it towards the production. So every protocol could be using this and it will help us to create safer space for the users. In the end, these are the companies that stay behind the CRC. So you can see that they are quite high profile auditors. Open Zeppelin, Ottersec, two bug bounty platforms, safe.
00:11:42.266 - 00:11:55.294, Speaker A: They are driving that most chain security. So it's kind of like good names and we are happy we are part of this initiative. So thank you and maybe you have any questions.
00:12:00.634 - 00:12:16.224, Speaker B: Hi, thanks. This is awesome. I have a couple of questions. First one is I think there already exists like document management standard, which was related to securities. Have you considered something like aligning with that?
00:12:16.844 - 00:12:44.716, Speaker A: No, this was a quick reaction. Basically the motivation was to keep it as much as lightweight as we could. But of course, even in this very small group, there are very different opinions because, for example, the bug bounty platforms, they wanted to look a little bit different. We want to look a little bit different. But like the very core that needs to be settled is like who audited it? When was it and what was the scope? And that's here. Okay.
00:12:44.860 - 00:13:33.214, Speaker B: Second question is, I can often see that there are like updates on audits, right? There is the audit and there is some following works by the project. And then there is like the updated document reflecting the outcomes of whatever project has responded to the audit. And those are literally not considered, like sometimes like not secondary audits. It's more like this is updated document. You know, sometimes we can see within the projects that you cannot see both of them, the both versions, the previous one and the new one, you only see like the new one. So do you guys somehow discuss this because the versioning is not here, but do you guys somehow discuss it how this would be handled? Versioning of the audits?
00:13:34.314 - 00:14:06.644, Speaker A: It's there actually, and you're right, it's the best practice that the audit is constantly being updated. So the good audit has like seven revisions, you know, and you can see even like the history how the protocol was evolving. You know, these are really the best audits. We are, for example, doing this with accelera. We just submitted revision number seven. So this is the best practice how to work with audits. Of course, the auditing company should never modify the previous versions.
00:14:06.644 - 00:14:37.954, Speaker A: We have rule append only. So whatever happens, append only. And exactly like here, it works that way that this structure is emitted for each revision. So basically, because when you have a revision number two, then the scope is not wallet. So basically if there will be, I know, dashboard, this would be then flashing red. It's outdated, but you will just as a protocol emit the new version of the contract. We started to sign it and there's new entity which is green.
00:14:37.954 - 00:14:45.954, Speaker A: So yeah, it's built in and we wanted to keep it simple. So there is no versioning, but every version should have its own representation.
00:14:46.074 - 00:14:53.494, Speaker B: So do you plan to have a secondary standard which would say this is a collection which reflects all those revisions?
00:14:53.864 - 00:15:01.768, Speaker A: We are not there yet. Like from my side, I am happy even with this because it's doing the job and we just didn't want to complicate it.
00:15:01.816 - 00:15:15.404, Speaker B: Okay, and potentially last question, because there might be a few more from the audience, and that is reading the ERC number. Do you guys consider this, that this could be like a little bit more adjusted that it would become the NFT?
00:15:17.864 - 00:15:35.994, Speaker A: I know that, for example, on, if I can tell the world on Solana, they are having discussions of having audit proofs as nfts here in the Ethereum space. I think it wouldn't be accepted that happily if I said polite.
00:15:37.614 - 00:16:32.264, Speaker C: Yeah, I think NFTs is kind of the way because otherwise you lose the link from the contract to audit me as like user of the contract. I cannot see like if the contract was audited or not because there is, there is link from the, from this audit contract to audited contract, but there is no backlink. So you, I think you need some kind of NFT or something like this to create this link and. But the question is what stops audit company or developers themselves from a spamming like hundreds of different of those audit contracts for their own contracts that they want to be audited or they want to look like audited and just like, you know, just show whatever is convenient.
00:16:32.604 - 00:17:01.092, Speaker A: Yeah, it's not here in the snippet, but they are in the ERC proposal is something like that, that every auditing company will have its own, like, verified address that will sign this. So basically, I know there will be a list of companies that, you know, have these kind of accounts for signing the structure here. And by that you can indify who signed it. If this answers the question, who will do this?
00:17:01.188 - 00:17:02.052, Speaker C: Qya.
00:17:02.228 - 00:17:20.224, Speaker A: No, you owe your auditor, like, decentralized community. No one. Yeah, but of course, like, everyone can sign anything. Of course. But I know for my size, for example, I will have, like on our website that this is our account that's used for signing of our audits or something like this.
00:17:20.304 - 00:17:22.044, Speaker C: But this is not trustless.
00:17:25.304 - 00:17:26.404, Speaker A: Propose something.
00:17:26.904 - 00:17:28.204, Speaker C: No, no, I'm just saying.
00:17:29.144 - 00:17:32.248, Speaker A: But yeah, it's like very mechanism to make it trustless.
00:17:32.376 - 00:17:33.244, Speaker C: Not yet.
00:17:39.764 - 00:17:53.064, Speaker A: So would you use it or not? Like, the motivation was like, better than nothing. It's the first step. We want to replace the logo and that's this.
00:17:55.484 - 00:18:10.034, Speaker B: We must think about the fact that such a structure, when we have this in the space that it can be used not only for the audits related to the smart contracts on EVM.
00:18:10.334 - 00:18:11.074, Speaker A: Right.
00:18:11.614 - 00:18:36.374, Speaker B: This is general approach, which I can see here that it says, there is the auditor, there is the document, and here's basically encryption of what he signed that he's saying, this is document from me regarding the audit. So it could be for any other chain or whatever. So that gives a little bit more opportunities to the auditing companies, I would say.
00:18:37.474 - 00:18:48.614, Speaker A: Yeah, I think this is like the very basic use case of blockchain to have some kind of hash stored on chain so you can verify the document. That's it.
00:18:53.594 - 00:19:26.754, Speaker D: I'm just curious if you're seeing some resistance or hesitance from auditors around the fact that, I mean, they spend a lot of time and money and resources in protecting their reputation. And it's very tricky because you can never have, like a foolproof audit. And, you know, no matter how good you are, something can always happen. But if it's like on chain forever and something happened, everyone can very easily go back, see that you audited it, and that hurts your. Like, is this something that you see resistance about?
00:19:26.834 - 00:19:56.294, Speaker A: Yeah, like, first of all, of course, like, in every disclaimer or sales call of a reputable company is like, it's a process. We are trying to do our best. Of course we can make a mistake. That's it. You know, all of the top auditing companies such as Trailblaz, Neodym, Openzep, all of them are on rec news. Sometimes they messed up, you know, that's, that's the fact, you know. So that's like the answer to the first part of the question regarding the names.
00:19:56.294 - 00:20:41.896, Speaker A: It differs. Like, some auditing companies are just using some kind of pseudo random names whatsoever, nicknames. My view is that we are confident and we must put our skin in the game so we have real names there. And of course, when someone messes up, he messed it up, you know, it doesn't mean that his job as auditor is over, but building a reputable history is some kind of value as well. So we are working with real names, but the standard doesn't tell, you know, if you actually have to submit there, the real name of the auditor of. If it's like Zero X hacker one doesn't tell, you know. So it's on the auditing company or auditing team.
00:20:41.896 - 00:20:57.084, Speaker A: In our case, we will have their real names. Okay, thank you.
