00:00:11.960 - 00:00:58.264, Speaker A: Hi, everyone. So, yeah, already, thanks for the introduction. I'm Pascal, co founder of Acrest, and it's actually very cool to be here because me and most of the team are based out of Switzerland. So it's cool to see events like these. Yeah, back on home turf as well, happening. Let's talk a bit about acrest and what the universe in web three is, and how universal interoperability kind of enables certain things. Might sound very buzzwordy on one side, I don't know, but let's drill down a bit in the term of also universal intervability.
00:00:58.264 - 00:02:44.182, Speaker A: If you, or most of you probably, if you hear the word interoperability, you might think more towards cross chain communication, bridging of assets, essentially connecting one web three ecosystem with another. So very focused in terms of web three to web three interoperability. There are even protocols or so called layer zeros like Polkadot or Cosmos that have kind of this inherent interability mechanism of cross chain communication between the app chains within their ecosystem built in. But usually this essentially stops there. So it's not an inherent way of breaking out of these specific ecosystems. So with the universal interoperability, we approach this whole thing a bit more on a holistic point of view. So zooming out a bit and looking at what really interability means, does it go beyond essentially only cross chain communication? So between web three to web three, what else can be included into this? And that's when we end up a bit at the current state of web three in general, if we are looking at this as well, usually we have applications that are built within the web three space, like DeFi applications that rely on certain off chain data, for example.
00:02:44.182 - 00:04:00.274, Speaker A: So you have price fees of like a bitcoin us dollar for a DeFi lending platform that needs to come on chain. Right. So there's no inherent way of getting that data that exists outside of the web three world into the web two world, but also the cross chain communication approach. Right, that I've mentioned as well, you don't have an inherent way of communicating between these chains. Right. It's not a given without any focus on, like bridging assets, which we have seen also recently, there are not as secure approaches out there, most likely focusing on the user experience if it comes to bridging assets, but also, in general, kind of having an easy way to communicate between these chains as well. And even if you're thinking a bit more towards novel or upcoming approaches, such as AI, using a way to get access to, for example, a language learning model into the web three space.
00:04:00.274 - 00:05:10.392, Speaker A: And as well, having seamless access to IoT, for example, that's not there yet. So you have a lot of these shortcomings because many of these individual ecosystems that exist in web three, they have a lot of unique value propositions, but without a way of inherently connecting all these worlds, essentially meaning the web three world, with the web three world, but also getting off chain data into that space. And the AI or Iot approaches as well. So you have kind of this vacuum that exists nowadays. But we think that this creates a huge opportunity for definitely a but as well as using acurist as an enabler for the whole web three space in that regard. And I've touched a bit on the way of how these ecosystems are sometimes very isolated. Right.
00:05:10.392 - 00:06:08.036, Speaker A: So you have, for example, Polkadot that focuses on the parachain or app chain approach. That gives you the ability to build for a certain use case. And that's also what we are leveraging here with acrist. So having the given way of the Polkadot ecosystem for us to build specific for the need of acrist, the protocol itself. And we get access to shared security with acrist, as well as a communication layer with all the other parachains in that ecosystem. But looking outside of that, it's not easily possible to interact with a chain on cosmos, for example, or on Ethereum, Tezos and many others. It's also not easily accessible to get data onto these chains.
00:06:08.036 - 00:07:17.172, Speaker A: So you have essentially a huge opportunity in that regard if you have a solution that is offering a good user experience to developers and that is also seamless. And this is what we are doing with acrist. So the acrist universe is essentially filling that vacuum between these various worlds. So having a way of interconnecting web two to web three through acrist, through this platform that acrist is, which is permissionless and decentralized at its core. So you don't have an approach in the middle that you need to rely on in terms of trust. And with this approach, what this essentially opens up is a vast number of use cases. So we can, on one hand, enable developers that want to build a DeFi platform, for example, that I've mentioned and that need access to public APIs.
00:07:17.172 - 00:08:25.466, Speaker A: And these price feeds. If they're building on Cosmos or if they're building on Polkadot, Tezos and EVM chains, it doesn't really matter for them because they essentially can utilize the acros platform to get access to that. The same goes for then using the acrist platform for these communications between the various chains and also getting access to the more novel things like AI or IoT. So let's take a quick look. I mean, this sounds very high level, this sounds very promising, you might think, but how are you actually solving this? And there are a few components. So on one hand, this is one thing, is focusing on the modular part. So the protocol itself is built that we can introduce these interoperability modules in the end.
00:08:25.466 - 00:10:15.752, Speaker A: So you can have the enterprise module, for example, which gives you access to web two, where public or permissioned APIs live. You can also get access to off chain computation through this. You have the hyperdrive module, which is the mentioned cross chain approach, as well as the singularity and mesh, which focus more on the AI and IoT side. So you have essentially a way with these modules to interconnect these various worlds with each other. And if we are looking at how this works out, essentially, how can we say that the dacrist is active in so many essentially verticals, right? So being able to have a more oracle use case, but also being able to do this cross chain communication. And everything boils down to, on one side, having this decentralized computational network, where you have a lot of parties providing computational resources. You have networks that are built up like these, with validators that utilize, for example, trusted execution environments, things like that, that are built with server hardware infrastructure, which is not as accessible as if you think about a mobile device, because a Google Pixel phone, for example, I can buy in almost every country of this world.
00:10:15.752 - 00:12:07.352, Speaker A: And if you further think about the security aspects of a mobile device, they are inherently portable, right? You have one, like everyone in here has one in their pocket, and you do e banking on them. You have your crypto wallets on them, and still your device, even though it gets stolen or you lose it, your funds of your e banking account are not immediately drained because of that. And this boils down essentially how these mobile operating systems were set up. So this goes for Android and iOS, that these have been built by Google and Apple with kind of sandboxing in mind, right? If you look at a Mac or Windows operating system there, you easily can kind of communicate between the applications here on the mobile operating system. This is very strictly given context to one application and not easily shared with these other apps running on the same device. And then even more interestingly, most of these mobile devices nowadays, they come with a hardware security module. So a chip, a hardware chip on the device that essentially gives the access to this trusted execution environment, which means that you can run a context within this trusted execution environment even more securely than you would do that in any other way.
00:12:07.352 - 00:13:22.054, Speaker A: So, what we are doing here is we are, on one hand, leveraging these mobile devices that are very secure and accessible for essentially everything that we have seen previously that is related to fetching data from somewhere or doing computation or fetching data for a cross chain operation. Everything happens within this trusted execution environment of these mobile devices. And as I've said, it's accessible. So what this means for acrest itself is that anyone can participate. So this means you can get like a Google Pixel four, a, something like that. You take it out of the box, you scan a QR code, and within five minutes, this device is dedicated as what we call an acros processor. So a way of an infrastructure provider for this whole network.
00:13:22.054 - 00:14:41.594, Speaker A: And the interesting thing is, as well, you're being rewarded for that. So it's essentially, you are becoming an infrastructure provider for acrest, and this can scale essentially to the thousands and infinitely, and you receive rewards because these devices are then being used, or the computational resources of these devices that you are providing are being used by the other side, which is the consumer side of acres. So, the developer of this defi platform that I've mentioned that says, okay, I need the price feeds for certain assets, I want the script to be run on these devices, and then the outputs given to my chain that I'm essentially developing on. So we have the computational resources that are provided, and then you are also earning, essentially rewards. But now we have the one side, we have the processors. So these off chain infrastructure providers that run these mobile devices. And on the other side, you essentially have the demand as well.
00:14:41.594 - 00:16:23.114, Speaker A: So the supply being the processors, and the demands on the other side, of developers that want to have interactions, right, that want to have this off chain data being processed and brought on chain, that want to have these various use cases. So, what we are doing is we're not limiting anyone. Essentially, we're enabling them with a marketplace. So it's not that you have to come to me and say, hey, Pascal, I need this verifiable random number on Cosmos, for example. It's not a centralized approach in any means, which means that it's completely self service. So you, as a developer that has interest of, like, I need a certain computation being done, you can go onto this marketplace, you create what we call an acrosthop, where you say, I need, effectively, this job, starting from tomorrow until the end of the year, I need it executed every 15 minutes, and I need this executed by ten, five processors on the other side and I'm willing to pay a certain amount for it, 1000 USDT for example. Right? And then the marketplace, which is essentially the core of the Acuras protocol, matches this request of consumers automatically on the other side with the processors that have said okay, these parameters match for me, so we have an automatic matchmaking between these.
00:16:23.114 - 00:17:38.687, Speaker A: So you have the onboarding, that is self service. On the processor side you have the onboarding and the seamless approach for developers essentially requesting these resources on the consumer side. So let's talk also a bit about lowering the entry barriers for this. If a developer on the consumer side needs to write this request in even just solidity, you have higher entry hurdles. So what this means is that if you want to have this also as a tool, for example to give web two enterprises a way to venture into the web three space, they first need to hire someone with the knowledge of the whole web three tech stack. And this is here different. So what you need to know essentially as a consumer for getting the resources computed through the acres platform is only JavaScript.
00:17:38.687 - 00:19:29.324, Speaker A: So you define this job that I've mentioned on the marketplace, you define in JavaScript code, for example, if it's a public API call where you're getting the data from, like you would do with just simple plain JavaScript. You can do computation, you can do certain algorithms, things like that, whatever fits your use case that you need to have processed by an arbitrary amount of processes on the other side, because you need the security. So you have really low entry hurdles to get essentially data processed and then being put on chain as well, wherever you need it in the end. One thing that I've mentioned forgot to mention on the marketplace here we are is also that given this trusted execution environment that we're utilizing, what we can essentially know for sure is that a script has been executed like it has been defined by the developer, because we can have a proof of execution submitted as well. So as soon as there is some tampering in between, the proof of execution would fail. But there is one thing that we cannot control through this verifiable approach, which is the uptime of processors. On the other side, your processor that you're running might go down because you don't have any Internet connection or your device might run out of power, whatever.
00:19:29.324 - 00:21:04.634, Speaker A: For that site. We have worked together with the University of Zurich as well on a reputation system, which means that we have these both ways covered. On one hand, the trustless approach in terms of verifiable execution, but also having a way to measure how kind of up processor was if he had a certain downtime, then his reputation score would essentially negate, making it not as interesting to, on the other side, consumers to start even utilizing this processor in the end just quickly, kind of an outlook, maybe also an approach where we're standing at the moment. So we have been seeing this like enterprise, these modules, the hyperdrive, whatever, for now, what we are kind of the initial focus is especially on these. So on the enterprise side, you can already use this platform to for example do computation or fetch. Public or permissioned APIs can also use it for cross chain communication. But we're further expanding these functionalities as well as the ecosystems that we will support.
00:21:04.634 - 00:22:13.624, Speaker A: As of now, Aqueous will become first a parachain on Kusama. So the incentivized testnet will launch within the next weeks and later on. This is then as well intended for a launch on Polkadot as the public chain. But as interability is also at its core for acrist, this does not mean that we are only serving the dotsama ecosystem like we have seen before. You can have easily a way to communicate with all these other ecosystems as well. So this is what we are then focusing on integrating or supporting down the road. So yeah, I mean, that would be kind of a high level intro from our side in terms of acrist, if you are a dev and want to play around with it, you can head to docs dot acrist.com.
00:22:13.624 - 00:22:51.686, Speaker A: Also if you want to see how the onboarding process is and how you can in the future earn rewards by getting a dedicated mobile device like a Google Pixel phone, you can head over to console dot acurus.com and do the onboarding of that. And yeah, also if you just want to participate in the community, head over to acrest on Twitter for example, or also telegram. Thank you very much. I don't think we have time for questions, but I'm around here outside as well. We do. Okay.
00:22:51.686 - 00:22:57.634, Speaker A: Okay, good. Very good. So anyone has a question? Yes.
00:23:03.334 - 00:23:29.062, Speaker B: So just so that we understand correctly here, the proof of execution means that some hardware that has been certified by some manufacturer executed this computation and signed the output. So it's not some cryptographic proof in the sense of a ZK proof or something like that. It's a trust based proof, right?
00:23:29.238 - 00:24:17.874, Speaker A: Yes. So like you're saying correctly in the end, by utilizing trusted execution environments for this and not CK proofs at this stage, which is something that we are evaluating as well, we have some trust assumptions in the hardware manufacturers. So if we are utilizing for this first version for example, Android devices. So for also Google Pixel folds or Samsung devices. So there are certain trust assumptions in these manufacturers. However, the thing there is that we are onboarding other solutions as well. So further down the road, there will be iOS devices supported and there will be even some server based hardware supported as well.
00:24:17.874 - 00:24:32.064, Speaker A: So you have the trust less approach in that sense that you don't have to rely on one specific device from one specific manufacturer, if that answers your question. Thanks.
00:24:34.204 - 00:24:39.944, Speaker C: Are there any other questions? There is one.
00:24:48.124 - 00:25:00.444, Speaker D: Hi, thanks for the talk. I have a question. You mentioned there's a rapid system. Can you go more into detail how this is kind of secured so you can obtain it?
00:25:00.824 - 00:25:47.764, Speaker A: Yes, that's a good question. And I'm not the one that has personally worked on it, so I cannot go into too much details, but there are certain events that you essentially get slashed in terms of your slashed in terms of your reputation. If you have certain offline events, for example, so you have a certain score that is then essentially reduced, or if you fulfill a certain amount of jobs successfully, you will essentially earn more in terms of the reputation score, but we will publish more on this, on the reputation itself as well. So happy that you can also check that out as well.
00:25:50.484 - 00:25:57.532, Speaker C: Is there any other question? I think on the top. Sorry, you have to run a bit.
00:25:57.588 - 00:26:06.276, Speaker A: Get a cardio in. Thank you.
00:26:06.420 - 00:26:19.764, Speaker D: If there's a vulnerability in one of these hardware modules that is detected, what would be the reaction to make sure that this cannot be used by some predators?
00:26:20.624 - 00:26:48.054, Speaker A: Yeah. So you have essentially a way of then also on the protocol side of things, detecting which devices run a certain version of the operating system. So you can, on a protocol level, also kind of excludes these devices and void their attestations. So you have a way to essentially control that as well.
00:26:52.514 - 00:27:04.986, Speaker C: So I would have also a final question. Maybe could you say a bit more on the marketplace, on the matching between consumers and the data provider?
00:27:05.050 - 00:27:05.694, Speaker A: Yeah.
00:27:06.004 - 00:27:09.868, Speaker C: Does it work? Or what is the intention or the mechanism there?
00:27:09.956 - 00:28:24.204, Speaker A: Yes, I mean, the intention is that this completely works, automated, so that no one has to interact, essentially for this to be matched with anyone else. And so how it works is that both sides, they define certain parameters. So on the processor side, you can, for example, define a certain job in terms of reputation score, in terms of assets, or how many jobs that you want to execute at the same time. And on the consumer side, you have a bit of more range in terms of defining requests, start end dates, intervals, also probably most notably the economic side of things. So how much you are willing to pay because then the processors can also say, I'm not even considering jobs that have a runtime of a month that are under 1000 USD, for example. So you have kind of both ways specifying the parameters, and then based on that, the matching and assignment happens, and then the processor starts to fulfill these and put the data on chain.
00:28:24.964 - 00:28:30.144, Speaker C: Okay, thanks a lot. Let's thanks Pascal for the interesting talk.
00:28:31.524 - 00:28:31.924, Speaker A: Thank you.
