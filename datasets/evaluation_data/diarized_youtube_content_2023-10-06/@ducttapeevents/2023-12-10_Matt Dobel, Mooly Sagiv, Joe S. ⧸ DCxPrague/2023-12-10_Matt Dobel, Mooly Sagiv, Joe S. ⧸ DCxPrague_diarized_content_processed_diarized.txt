00:00:00.720 - 00:00:28.664, Speaker A: Welcome to a conversation on Defi risk. My name is Joseph. I am not the Joseph that is listed on the website. I'm a substitute Joseph, but a Joseph nonetheless. And I'll be moderating a discussion today between a couple of folks with a couple of teams. I full time do pr and communications for Ethereum foundation, and I'll pass the mic so everybody else can do their intros as well. Hi.
00:00:28.704 - 00:00:44.804, Speaker B: Hi. Thanks for having me here. I found out that I'm going to be here this morning, which is fun. I'm Marek. I'm from Carmine Finance, and we try to ensure standardized Defi risk directly on chain.
00:00:46.384 - 00:01:08.492, Speaker C: Thank you. Thank you for having me here. I'm Ulisa give, originally from Tel Aviv University. In two days, actually, we will have five years for the Satora. Satora was established five years ago by Sherry Grossman and myself. We are a web three security company, Global. We have actually fantastic team here.
00:01:08.492 - 00:01:31.548, Speaker C: Yaroslav Tadeas, Otaka Martin. Martin is here. So we want to have. We have built a tool called shuttle approval. How many of you know of shuttle approval? Sounds like not many. All the people in the team, hopefully that's good. But therapoover is actually a tool for.
00:01:31.548 - 00:01:53.490, Speaker C: We call it formal verification. But you can think about it like fuzzing, in a sense, that it has some property, and then it checks this property. But it's unlike fuzzing, it's exhaustive. And it doesn't start in the initial state. It starts in an arbitrary state. So it can actually give you a bug, but it can also give you. It can tell you that some bugs do not exist.
00:01:53.490 - 00:02:27.664, Speaker C: And we work with many of the fantastic clients in this space to prevent bugs. We actually prevented many, many critical bugs. We also have another tool, which is open source, which is released about half a year ago. It's called the mutation test in gambling. It's complementary in order to check that the specification is okay, because maybe you have bugs in the specification. And also we are providing services for auditing, for formal specification, for incident response. And I'm, of course, very, very happy to be here.
00:02:29.804 - 00:02:55.636, Speaker D: Yeah, thanks. Matt Dobell. I lead business development and governance at Gauntlet. Gauntlet is a Defi native quant firm specializing in optimization and risk management. Currently manage around $10 billion of asset risk for people like Aave, compound, Moonwell, and others. Also do incentive fee optimization work for people like immutable, uniswap, tonsi, and some others as well. Thanks for having us.
00:02:55.636 - 00:02:57.464, Speaker D: Really happy to be here.
00:03:01.284 - 00:03:12.012, Speaker A: Okay, so my first question, I wanted to kick this off with. Was everybody here who's been wrecked? No? Anyone?
00:03:12.108 - 00:03:12.572, Speaker C: Cool.
00:03:12.668 - 00:03:27.024, Speaker A: Thank you for your work. I'm wondering what you think we as an industry have learned from the first three years of defi innovation following.
00:03:29.324 - 00:03:29.676, Speaker C: Let'S.
00:03:29.700 - 00:03:53.164, Speaker A: Say, post food farming of 2020 through whatever the last major vulnerabilities were. That was. No, there's been something far more recent than wormhole. Somebody give me whatever attack there's been the last two weeks. Poloniex doesn't count because it was centralized, but the.
00:03:54.904 - 00:03:55.752, Speaker C: Yeah, yeah.
00:03:55.808 - 00:04:30.424, Speaker A: Okay, so, so what are our major takeaways over the last couple of years? How, for people who, you know, are sitting here, for the people who watch this, have we evolved and what's next as far as how hardened things have become and how much work there is left to be done? And I say this with understanding that there's always work to be done or you guys wouldn't have work to do. But like in a sort of macro way, how far have we come, what's next, what lessons have been learned, what haven't?
00:04:33.544 - 00:05:13.504, Speaker C: I can start. I guess I'm the oldest here, so. Well, actually, hacks have been around before Defi, but one of the things that you can see in the defi, and I don't know if you took it, I think there's some studies that showing that actually the number of hacks over the years, if they are reduced, they're just getting more tricky and they're actually stealing more money. So the hackers get definitely learned something. So the hackers are doing good job. They are learning their ways. And I think actually we as a community, it's an interesting domain because my take is that there are several things that need to be done together.
00:05:13.504 - 00:06:30.378, Speaker C: We actually have to work all together because there's not a single sort of approach that will prevent all bugs and prevent, I think, the protocol themselves, the technology, people working together can actually be a game changer or for example, bug bounties, incentivizing people to actually work together to prevent bugs. I think that's at least my take. And another sort of thing that we think is important, and that's actually something that sometimes the protocol don't understand, is that there is a tendency between how fast you develop your code and how secure it is and you want to maintain this tendency. I think, and what we think as a company, and we try and I think we are doing, we are working actually with Harvey, with compound, with all of these teams. But what we see is that the earlier we go into the game, the more useful we are. And I think there are other companies which probably useful later in the game, but for us, we see that the earlier we, we are in the protocol, we provide more value by preventing bugs. And also people have harder time finding bugs after us when we come late to the game.
00:06:30.378 - 00:06:36.334, Speaker C: Even when we come with all our forces and our technology, it's much harder for us to provide value.
00:06:40.314 - 00:07:24.504, Speaker D: I think we've come quite a long way when gauntlet's also about to celebrate a five year anniversary as well at the end of the month. And so if we think kind of five years back, maybe more so just maybe the beginning of d five summer, there weren't a ton of financial primitives on chain compound grew to be one of the largest ones. And then people trickled in afterwards. First you saw a lot of lending protocols, then you saw people expanding into different verticals, like options, perpetuals, leverage, yield, et cetera. As the space continues to innovate, there's going to be more opportunity for hackers to find vulnerabilities and things. These are new systems. People are pushing the cutting edge of what technology can do, and that's always going to create kind of like potential vulnerabilities.
00:07:24.504 - 00:08:24.074, Speaker D: So, you know, what we've done is expand into new verticals as they start to get bigger. Really thinking about, okay, these verticals are getting usage. They have some notion of leverage or collateral or liquidations within that system, and it needs to be managed according to kind of like what the market is doing, what users are doing. And also from a macro level, the market changes so quickly. I mean, I think we have all been around for a little while. We've seen from last year to this year, and even in a month's time, how things can change. So not only like, you know, security audits are important, formal verification is important, but, you know, what that's doing is telling you, okay, is the code doing what it says it's going to do? And then what we kind of come in and do is say, assuming the code says it does what it does, how does it respond to different market scenarios, different environments? And that's where we come in and actively tune parameters on these markets, kind of in line with the way the market is looking, really trying to help different primitives find the balance between, like, risk and capital efficiency.
00:08:24.074 - 00:09:03.173, Speaker D: As new verticals pop up, I think it's super interesting for us to continue to dive in. We do a lot of research both on the academic side, also just kind of like lighter analyses. So as we see that, we dive in, we try to be early, really understand informed thoughts around. Okay, is this a system that we feel could be impacted by different market scenarios, liquidity environments? And if so, we start building that into our models and really training our models to understand how to predict these things, how to better understand how to respond to kind of quick market changes. And that's really where simulation comes into play. So we built simulation platform. A lot of gauntlet comes from algo trading, so really adapted a lot of simulation.
00:09:03.173 - 00:09:20.124, Speaker D: And one thing simulation is really helpful for is when you don't have a ton of historical data to train on. And so what we do is not only kind of use the data we have available, but then simulating kind of a wide range of market scenarios, whether that's edge case, best case, black swan, et cetera, kind of use all of that to help protect daos into the future as well.
00:09:20.944 - 00:09:54.564, Speaker C: Maybe just a quick follow on, Matt, that basically we are running a race. That's how we feel in sator. Every time we actually, like, I think, releasing Yaroslav every week or something, we are improving our software dramatically, but the code gets way more complex. So every time we come to the client, we say, we can handle your code. You say, oh, fuck, we have something way more complex. So we are running a race against the complexity of this space. And maybe just sort of the last thing I know, everybody say that web three is worse than web two.
00:09:54.564 - 00:10:01.704, Speaker C: I don't believe in it. Web three actually has a lot of techniques that web two doesn't have, and still, it's just hard to get right.
00:10:02.624 - 00:10:03.432, Speaker D: Thanks.
00:10:03.608 - 00:11:56.114, Speaker B: Yeah, so, from my perspective, when I, when I talk to different protocols, there's kind of realization that bugs and exploits will always be with us. The question is whether it's going to be that given protocol. And the question is, what is the probability that it's going to happen? And what is, what I feel like is changing a little bit, is that it's not only exploits where a hacker comes in, removes capital from the protocol or project, and essentially kills or makes problems for this project this way. But there's also other ways how to do this. So, for example, the profit of that hacker doesn't necessarily have to be in terms of getting capital from the attacked protocol, but it could be also by removing, for example, competition for a different protocol. For example, when it comes to options, which is what we do, which is, from my perspective, simple thing, but it's much, much more complex than, for example, amms or spot Dexs, then the level of complexity that you get additional is that suddenly you create possibilities where you can very, very cheaply move the price a lot, which impacts the liquidity pools and the prices of the options, for example. So it's kind of like an attack where your profit, just to summarize it, it's kind of like an attack where your profit is not monitor in terms of removing capital from the attack protocol, but in terms of destroying competition, for example.
00:11:56.114 - 00:12:32.354, Speaker B: That's something we were kind of looking at when we were looking at option protocols that are out there. So that's one thing, and another one that is connected to this is economic exploits, because when you start increasing the complexity, these become, I don't want to say easier to find, but they become available. But there's higher probability that those will be available. Not necessarily easy to find, but, yeah, available.
00:12:35.774 - 00:13:23.130, Speaker A: Interesting. So as I think about the years ahead for DeFi in general, I can't help but wonder. We don't seem to find the same rate of, let's say, fundamental exploits in ethereum clients in the bitcoin core. And as the biggest Defi protocols harden, they sort of earn this. Lindy. Everybody up here kind of rattles through aave compound in the swap and its front ends. I can't help but wonder.
00:13:23.130 - 00:14:18.084, Speaker A: There'll be plenty of business. There's always going to be new protocols. I mean, there's going to be innovation somewhere. But do you guys see a world where a few begin to serve a different purpose? Or I guess, let me rephrase your question. I can see a world where a few of them begin to serve a different purpose, where any pawn people in here perfect banks hate us. They have these releases that they put out about crypto native reports and a lot of the industry and the applications that we use these days are by the degens and for the degens, and some of them are the white hats and some of them are the black hats, and most of them are the users and airdrop hunters and everybody else. But when we think of the technology going mainstream, you think of a version or an implementation that is made to be usable by the mainstream.
00:14:18.084 - 00:15:01.290, Speaker A: And as this happens, I would imagine that our challenges, this is kind of what I was getting at in question one, the challenges change as well. The question in regard to DeFi risk is how those risk factors change as these systems harden over years and over years and over years. And this comment about the vulnerability vulnerabilities become fewer and far between, but that they are sort of higher stakes. I think we've seen that with a lot of the. What's the name? Of the group, the North Koreans Lazarus group. Yeah. So, you know, they get better at what they do as everything else kind of hardens.
00:15:01.290 - 00:15:26.034, Speaker A: But really, the curiosity here is, I guess, to sum it up, there will always be a cat and mouse game as new protocols pop up. But for the ones that become the biggest, the most dominant, that end up, let's say I'm going to run you through a fun hypothetical. Some amm somewhere is used as.
00:15:27.934 - 00:15:28.262, Speaker C: You'Ve.
00:15:28.278 - 00:15:57.324, Speaker A: Got a USDC equivalent and a USD, sorry, EURC equivalent. Some competition in here. Banks utilize them. They've got all the zero knowledge stuff that they need for them not to expose one another. Customer data. We've brought these tools to the general public where, you know, we can use them as crypto natives if we want, without going into their system, but they make use of them as well. But on the backend, this might be some version of AaVE, some version of Uniswap.
00:15:57.324 - 00:16:08.324, Speaker A: How does the risk game change once the systems are more hardened, but the pool at large is the general public and not just the crypto public.
00:16:12.724 - 00:17:27.704, Speaker D: Yeah, I'll have a different answer than probably these guys, and I think it goes back to what I said before, which is around. Even if you have hardened code and you know it's going to do what you think it's going to do as you expand that out, the economic profile or the economic risk profile of those assets, of the protocols change. What we also do is really look at who is using these platforms when we're making risk decisions around parameters. We look at who are the risky borrowers who come onto a platform in certain times and kind of lever up in a way that's unhealthy for the protocol, given how quickly those things can change from the economic risk side for us, we would need to continue to look at these parameters, adjust these parameters, understand the way interest rate curves are evolving, all for the sake of. Even if a user doesn't see Aave, they could still be susceptible to economic risk, which I think you had mentioned earlier. So I think as the code hardens, we're still in an ever changing kind of liquidity environment, and so therefore, there's just a lot of factors that we need to continue to look at. The second thing I'll say is probably more around the code is, as you mentioned, hardened.
00:17:27.704 - 00:18:08.094, Speaker D: I think it's still really early. I think even if you look at a uniswap or an aave and some of these larger protocols that you kind of like, when you say hardened, that's who I kind of think of they're still pushing new code, they're still building innovating, defis early. I think there are many people who want to be the compounds and aaves of the world. So I think we're going to continue to see this race, as you mentioned, and eventually we'll get to a stage where we can start to figure out how these go mainstream, what their uses are. I think stablecoins you already see in emerging markets are being used without even anybody even knowing they're using a stable coin. Would like to see that with more applications, too, though. Yep.
00:18:08.094 - 00:18:08.846, Speaker D: Thanks.
00:18:09.030 - 00:19:02.574, Speaker B: Yeah, like, I don't think that aave, compound, uniswap and so on, I don't think they will ever stop developing, to be, to be honest, because when they do, they stop innovating, and when they do that, they start dying, essentially. So I don't think that's ever gonna stop. But, and whether it's early or not for traditional finance to start using these, I have no idea. But in the last few weeks, we saw several banks that announced that they are moving, moving in. What I think is going to happen is there will be third parties insuring against the attacks. There are already through a few projects that are able to do that. Not sure if they would be able to do it on the scale that traditional banks would need, but they do that already.
00:19:02.574 - 00:19:48.790, Speaker B: And for them, it's not only to have the insurance implemented as a smart contract, but it's also kind of like reputation. So if the agreement is you get hacked, we pay for it, even though the hack would be done in a way that it wouldn't fit the smart contract. I think there will be payment anyway, because if there's not going to be like the insurance payment, the insurance company is not going to insure anything else. Right. Because the reputation is going to go down for them. So I kind of feel that it's going to move towards this just because. Yeah, I don't think that you can stop developing.
00:19:48.790 - 00:20:03.954, Speaker B: I don't think you can stop having bugs and exploits. You can do a lot to mitigate those, but you can't actually never have any bugs. So that's kind of like how I look at this.
00:20:05.094 - 00:20:43.156, Speaker C: I agree. I think there's, and also I agree with Matt here. I think there's sort of two things that we see actually getting more and more bugs that happened due to changes in the code. And you see actually most of the interesting bug last year, they're due to a small change in the code. Like Euler and others, people do very small changes and the other type of bug that we see coming, more and more bugs between interaction, between protocols. So you have like viewer entity by one protocol, and then it's being exploited by actually other, sometimes even on another blockchain the hackers are. So we see more and more bugs coming from changes in the code and interaction in these bugs.
00:20:43.156 - 00:21:32.424, Speaker C: The more you have innovation, the more you have even the most interesting protocol, like Aave Lido, they interact, and then there's other protocol more for building on top of them. So actually you see all of these interactions and they are just creating more and more challenges. And I agree with you, we cannot address all of them before the code is deployed sometimes. And also we are checking universal properties. Some of these properties are not universal. So I assume that more people will innovate and we see people innovating, we see new protocol, a gnome, a lot of people building new stuff, but we see that even with the old protocol, they keep innovating and they keep running to small issues, but also more complex issues due to interaction between different components. So it's not even their code, it's called, they are calling, or somebody else is calling.
00:21:32.424 - 00:21:48.624, Speaker C: So it's very hard for them to actually, or for us, because usually we get to work with them before they deploy, they come to us, and now after they're deployed, somebody's changing or somebody's using their code in a way that they have not perceived.
00:21:50.084 - 00:22:31.754, Speaker B: I just want to add one interesting use case. So imagine you're building your product that is connected to five other protocols. You get audited, everything is completely fine, everything is bug free, you deploy, you grow, and suddenly one of the five protocols that you depend on has a small change. It's completely fine, it's audited. The protocol on its own, doesn't have a bug, but that implementation impacts you. And without you doing anything, suddenly you have a problem that you might not even know about because it's hard to track all of the changes that you depend on.
00:22:33.894 - 00:22:38.742, Speaker A: Okay, if I can remember them both, this leads to, oh, we have another comment here.
00:22:38.918 - 00:23:34.728, Speaker C: Sort of spice it out a bit here, sort of be careful not to, I think the issue of insurance, and actually when we started this company, everybody was telling us the usage of formal verification is insurance. So I want to be a bit, at least I am a bit skeptical about insurance. First of all, we are ensuring a lot of value here. So if I'm insuring $5 billion, it's very hard to insure. And also, you probably know I'm not an insurance guy, but everybody know insurance, both insurance companies aware what's called the earthquake effect, that basically there is time that actually everybody go and claim and then you cannot pay. So I think insurance, I think bug bounties are doing very well, like immunify and others because. And they're essentially playing as insurance in some sense, because they're incentivizing you to get 10% of the revenue without actually stealing their money.
00:23:34.728 - 00:23:45.424, Speaker C: I think ensuring this thing, even if you work with the Torah or with other auditors and you formally. I would be a bit tricky. If you can answer, please.
00:23:46.124 - 00:24:07.954, Speaker B: Yeah, I have to have to agree. Yeah. It's like doing insurance. It's not easy for us. We try to simplify the world a lot, so we don't do generic things, we focus on standardized things that we can do quite easily. So that's kind of how we do stuff.
00:24:09.814 - 00:24:32.534, Speaker A: Also leads to a question of insurance. When the protocols become too large, when they're handling the bulk of. Feel free to take that one. Or had two others on my mind. Try to. Or here, I'll pass you back on this one. What about when.
00:24:32.534 - 00:26:00.128, Speaker A: Yeah, is this insurance piece possible when you have some big winners and they're handling, say, trillions in volume back and forth per year? The other questions, just if you wanted to take any of these and run, I can repeat them later. If the insurance one sort of does it back and forth had to do with. You mentioned both bridges and contract upgrades. So where I was going to steer it was, there have been protocol researchers that pointed out, for example, lido risk, and this has been a hot debate in the last months for a lot of different reasons. But one of these tail risks around one group having too much stake is, yes, it's a DaO, and I won't dig into all of this, but if fundamentally there's a contract upgrade. So skipping past all of that because you know where it goes, there's a want, I think, in some cases, for the systems to harden to the point where you can upgrade parameters but stop upgrading the core contract. Do you see this as at all likely, or do they need to continue to update simply because they're trying to innovate? Or could you see it as like maybe Uniswap, like where Uniswap v.
00:26:00.128 - 00:26:59.974, Speaker A: Seven, Uniswap v eight, or whereas v two still has a lot of traffic, the older ones continue to go, and groups only adopt a newer one if necessary. These two topics, bridges and contract upgrades, were, I guess they're slightly intertwined. Vitalik had that post about feeling like multiple l one s can succeed, but bridges between them will always carry so much risk that they may succeed in their own environments to get away from bridge risk. So, yeah, as far as risk mitigation goes, to try and put it into one question. Yeah. Do you think that this game of chasing new vulnerabilities will always exist because people will continue to try to, a. Upgrade contracts or b, constant need and use to try to bridge assets, or b, will we kind of learn to live in the environments that we're given? This is the.
00:27:01.754 - 00:27:36.762, Speaker B: Multiple things. One, the insurance for the big guys. It's absolutely going to be possible. The question is when? That's the only one. I think with the upgrades, I think there will be projects that will, that will say, hey, we don't do any smart contract upgrades, we do only some parameter upgrades and there will be projects that will continue the development and it's going to be, I feel like it's going to be throughout the scale in terms of the size of those projects. Yeah. And that's how I see this.
00:27:36.762 - 00:28:09.764, Speaker B: And bridges, to be honest, I have no idea. With some chains, some l one s, it's very, very obvious that they will focus on a niche market and that's what they will do. But I don't know what's going to be the difference how, for example, Solana versus Ethereum is going to evolve. At the moment, looks like Ethereum is winning, but who knows what's going to happen in half a year, right? Yeah. Not to mention five years.
00:28:11.024 - 00:28:29.576, Speaker C: Yes. Also, we don't know what will happen. We started building this for solidity. We moved to now we're supporting Viper, now we actually adding support for Rust and Solana, and now for rast and web assembly. It's hard for us. We are technology company. We actually don't know.
00:28:29.576 - 00:29:06.228, Speaker C: We go by what our clients tell us. As for upgrade versus non upgrade, we see that our clients are taking many ways. We see that some client actually prefer to have some of the code immutable, going back to immutability and actually having part which is mutable and also. But what happens that the client have their code immutable? It doesn't mean they don't innovate. It means that they will innovate in different ways. They will actually find a new offering in a different contract. So they're not actually the issue that you can be immutable without and still innovate.
00:29:06.228 - 00:29:33.588, Speaker C: And immutability, we understand it has some advantages. It makes your code, but it has some things, because if somebody finds an exploit, it's hard to change. But even with mutable code, we find, at least with Dao, it usually takes a while. And bug mitigation is very hard, even when you have a mutable code. As for bridges, that's a very, very hard question. We worked with bridges. It's very, very tricky.
00:29:33.588 - 00:30:05.888, Speaker C: We, of course, work with layer zero, fantastic team and others working on bridges. We work before deployment and try to do the best job we can for us, it's not the case that we. I think you mentioned that we cannot do always a good job because of things that are dynamic. Bridges are bad for us because sometimes we only analyze the code. So the things that we don't analyze, we can protect against. And that's sort of what happened in bridges. They are kind of built in different ways.
00:30:05.888 - 00:30:33.784, Speaker C: We usually like. In some cases, we handle the two types, we can handle two blockchains, but there's still a lot of interesting logic. We are checking logical properties and we cannot. We check the logical properties which are hidden in the code, but we cannot check the logical properties which are outside the code. So there's somebody, there's something which in the operation, maybe it's something. You guys have waste, but bridges are very tricky. But I think they are unavoidable.
00:30:33.784 - 00:30:37.304, Speaker C: You must have bridges because people want them.
00:30:39.564 - 00:30:55.682, Speaker D: Yeah. So I guess a few things to unpack here. First, we'll start with the insurance piece. I agree. I think these systems will scale and these products will scale. We'll see new forms of insurance and new things come on the market. We already see like pseudo forms of this today.
00:30:55.682 - 00:31:36.640, Speaker D: I don't want to call it insurance, because it's not. But if you look at lending markets, there's this notion of reserve factor, where a portion of the fund is going into a reserve that's then used to cover potential shortfall events. Not everybody has this notion of a reserve factor built in, but it's something that I have seen more and more teams kind of thinking about. It's like a rainy day fund, if something were to happen. The other thing I've seen more recently is people looking at treasury management in a lot more detail. Daos have struggled to really efficiently manage their own treasuries for the most part. And as a result, you have treasury managers who have come in and helped them do that.
00:31:36.640 - 00:32:36.494, Speaker D: Gauntlet, actually incubated a protocol era finance that's doing on chain treasury management for daos as well. And one thing we aim to do is kind of look at the portfolio composition of these daos really help them break it down in a way where maybe they want to control for expenses, maybe they want to control for Runway, maybe they want to control for covering liabilities, potentially. And so while era is not insurance by any means, smart treasury management can also serve as a form of some sort of insurance when you need it. The second piece was around immutability. I think ideally, everybody would like to have immutable code that they don't have to go back to and touch and either innovate in other ways or build on top of things and move on. I think even as we've seen people try to do that, and I really like seeing people do this, if it doesn't go well, it creates a bad user experience. I don't know if anybody was a depositor or is an ajna, but what we saw, and I really like what they're doing, is they built an immutable protocol.
00:32:36.494 - 00:33:02.714, Speaker D: They discovered a bug after it was built, and then, so therefore, they upgraded to v two. But at the same time, they had to get all their users to withdraw from v one. Trying to get users to unwind lending positions is pretty difficult, especially if you don't know who they are. And so I think a lot of people will look at that and say, maybe we're not ready for this yet, but people have to try, and people have to start somewhere. And so I appreciate that they're doing that.
00:33:09.014 - 00:33:11.782, Speaker C: They were very fortunate that they discovered it so heavy.
00:33:11.878 - 00:34:09.654, Speaker D: Yeah, not everybody is that fortunate. Third piece was bridges. So Gauntlet doesn't work directly with any bridges in terms of risk management. But what we pay a lot of attention to is bridged assets. So we work with protocols kind of across EVM chains, as well as cosmos, Polkadot, and some others. And so really what we're focused on is, like, if you're some sort of financial primitive that is utilizing bridged assets, really looking at, like, where the liquidity for that asset is in the case of a lending market, like, what does a liquidation look like in the case of lower liquidity environments? Are these susceptible to price manipulation? And so I think you have to put an extra level of scrutiny, not only on the bridge itself, but then also on bridged assets, which I think is why you see circle pushing to swap out synthetic USDC for their canonical USDC, and have people use their bridge because they feel that they're creating a more secure solution in general.
00:34:13.114 - 00:34:56.164, Speaker B: Just want to add one thing to the security pools that you mentioned, but those are insanely costly, right? So not sure. How much, how much ave has in the security pool today? A few months back it used to be it was something like 300 million. Now imagine that the cost of capital is like 5% per year. Suddenly the cost of the capital that is just lying there waiting for something to happen is 15 million a year. Right. Which is quite a big thing. Right? So that's why, for example, for lending protocols and the shortfall events, the insurance is actually like pretty nice example how to do insurance of standardized thing in Defi.
00:34:58.984 - 00:35:53.820, Speaker A: And thanks for all the answers. It's a funny time in the industry. We're trying to figure out if we're about to go back into this same loop of playing the same movie over and over again or. Yeah, if we'll have made adjustments based on all these past mistakes to at least implement some kind of moderate form of change. We have a couple of minutes and then I think lunch is probably outside. But I wanted to ask one question before we leave from here that you probably all have different perspectives on, but it's in regard to patterns, what your clients are looking for, where requests are coming on. If you were for requests were coming from, you've mentioned a few different protocols that you guys are working with now.
00:35:53.820 - 00:36:48.164, Speaker A: You mentioned we go where the customers want us to go for everybody that is connecting with new protocols, old ones, daos, whichever. Where do you see the defi space going in the next couple of years in terms of. I don't want to say consumer need, user need, user demand based on where you see them anticipating new feature sets? You've mentioned a couple different l one s, a couple different l two s feature needs. Is it still all user facing is circles pressure? Does this show you that somebody mentioned banks coming in based on some recent announcement macro level changes to defi that might set, let's say defi wave two. Apart from defi wave one.
00:36:50.384 - 00:37:21.074, Speaker B: The thing that I see is that things will get a lot more connected to the kind of real world. That's what I'm seeing. And when I talk to defi protocols, some of them are willing to say that out loud. Well, not in public, but privately, that they are trying to figure out how to do this. Some of them don't. But that's one thing that I see that will likely change.
00:37:24.614 - 00:38:18.386, Speaker C: Well, for us, because we work with protocols, we see two things they're really worried about. One is the, and maybe it's sort of for the ethereum, the programmability, how hard is it for them to write contract in this domain? It's very very hard for them because of a lot of things in this domain. And the other thing, maybe it's related to what you say and programmability goes many, many levels that you just writing something very, very simple because of gas, because of many things. It's very, very complex for them and they have to spend a lot of time to get it right. And that's also sometimes when they get the hex, because they don't. I mean some things are very, very hard to implement if you talk about ethereum. But if you look into Solana, I'm not sure it's even whether so many of the blockchain writing simple things tends to be complicated.
00:38:18.386 - 00:38:57.104, Speaker C: And the other thing that we see is that they're really, especially now in a bear market, but I think even before the security is very expensive for them, they would like to have the security much more affordable to them. They think that security prevent their innovation and of course now we see it more in the bear market. But they are ideally what they want. They want to program what they want and not get hacked, but that's essentially what they want. And they feel like they're spending a lot of time developing things. They will come to companies like us and then we'll find bugs. They are happy because we found them before deployment.
00:38:57.104 - 00:39:33.552, Speaker C: That's sad because they have to go to a drawing board and resign their thing. So they want to have, ideally they want to have less the reason to use us. They want to basically have some concept where they can program and get fewer bugs. And they are, if you look into the ethereum, people still need to write assembly. This is insane. Like people, I work in this domain for a long time, but you are manipulating a billion dollar code and you are writing code which is so susceptible to bugs. So you want to avoid it.
00:39:33.552 - 00:40:09.304, Speaker C: You want to find some kind of high level primitive, maybe it's account abstraction, maybe some things that the community provides for people have, or maybe just decent libraries for doing things that they need because they are writing code which is sort of very, very basic to implement things. And also on top of it, they have to pay to provider like us or others to get their code secure. And it's very, very hard for us. So we charge them for others. So they really want to be able to innovate in a way which is more affordable to them.
00:40:11.734 - 00:40:52.042, Speaker D: Yeah, I have a couple answers to this. So on the DeFi application side, what I've seen as a shift, and what I continue to see as a shift are protocols that are building basically as close as you can get to kind of like centralized systems with regards to execution speed. I'm really excited to see ZK technology continue to emerge. I think that will enable the user experience of a centralized exchange while keeping it within DeFi. So that's one thing that I think we're trending towards, and I'm excited about. The other thing is more at the ecosystem level. I think people are thinking more about systemic risk, a lot more than they used to.
00:40:52.042 - 00:41:20.974, Speaker D: I think we saw through a bunch of events last year, Celsius, FTX, even just through not really understanding your counterparty, how that can create systemic risk for ecosystems within DeFi. So I've heard more teams talking about that. We've been looking more into kind of systemic risk or risk at an ecosystem level. And I think as more people enter the space, as these get bigger, that becomes even more important. I think that was it.
00:41:21.014 - 00:41:21.634, Speaker C: Yeah.
00:41:25.414 - 00:41:41.464, Speaker A: We'Re perfectly on time. I think we're like 30, 30 seconds early. All right, thank you all so much, and thanks to all the participants here for educating me on Defi risk in the years ahead. And, yeah, please enjoy your lunch. If you're having lunch, if there's another talk, please stay. Round of applause for them.
