00:00:00.200 - 00:00:38.304, Speaker A: Thank you. Well, hello everyone. Thank you for taking the time to be here. I'm Alex Vinas, the product marketing manager at Calprotocol, or also known as cowswap. And today I'm going to talk about order flow actions in the MEV supply chain, or more specifically, on the transaction supply chain. So I've broken down the talk into three main topics. Everything about order flow auctions, production ready order flow auctions, where we look at MeV blocker and Cowshop, and then where is the value going and following the money? So first, let's try to explore what order flow auctions are.
00:00:38.304 - 00:01:33.774, Speaker A: How can you design them to be the most effective for the user's outcome? So what are order flow auctions? Right, order flow auctions are mechanisms that auction off multiple users orders to be settled by third parties, with the goal of returning as much value through the users that otherwise would have gotten leaked throughout the transaction. Supply chain and order flow auctions are important because they help to surface the true value of transactions. Because in the moment that you have someone bidding for those transactions at the initial step of the supply chain, then you're not going to leak as much value throughout the chain. And they also help mitigate the negative externalities of MeV. Because one of the cool things about order flow auctions is that you can design them. That, for example, front running or sandwiching is de facto prohibited. Or if you design the right mechanism, then even the mechanism is strong enough that you can do such things.
00:01:33.774 - 00:02:44.334, Speaker A: So how do order flow auctions work? Well, as I said, order flow auctions aggregate multiple transactions together and batch them all at once, instead of setting the transactions individually. So the first step is to gather the orders and send them to the auctioneer and put them into the auction. Once the orders are all together in the same auction, we send the information to the bidders, who then proceed to optimize the entire transactions of the auction based on the criteria that the order flow auction is trying to optimize for. Once that is done, then the bidders offer their bids to the auctioneer, who then proceeds to select the winning bid based on the criteria that the order flow action is trying to achieve. And lastly, the winning bid is pushed on chain along with the orders, all the orders that are within the auction, or at least push throughout the next step of the supply chain. But what are some of the important design decisions that you need to take into consideration when designing an order flow auction? And of course, these are high level, and there are many more types of decisions that you need to make. But the most important one, in my opinion, is what type of orders there are.
00:02:44.334 - 00:03:11.902, Speaker A: Either you have intent or transactions. And it's very important to make the clear differentiation between these two, because, of course, all transactions are intent, right? To transfer money. My intent is to transfer money. But there is a big difference between what an actual intent is and a transaction. And the big difference is that intents are fully composable. Right? I'm not hard coding the output like in a transaction. On the contrary, what I'm just saying is hardcoding the input, and I don't really care how you combine the output.
00:03:11.902 - 00:04:31.407, Speaker A: What I want to do is something. I'm not specifying where I want to do it. The second decision you have to make is who has the settlement rights for the orders in the auction? Is it completely public? Anyone can just simply plug into the auction and settle orders if they win. Is it public permission? Do you basically need to, I don't know, put a bond or stake something to participate in the auction as a settler? Or is it private? Is the auctioneer the only one that decides who has these rights? The third part is, what are the bids objectives? Does the order flow auction want to maximize MeV and then maybe return the value that has been leaked to the users? Or does it want to minimize MEV in a way that already the users are getting the value beforehand and they don't have to wait for this rebate transaction? And lastly, what type of information is shared from the orders to the bidders? Is it all the information? Do bidders have full access to the information of the trades? Is it only partial? They don't know everything, but they know enough information just to bid for it? Or is it all information, but obfuscated in a way that they can't really, like, game the system, and they have to express their through bid for it. But now let's look at the different levels of the stack in which you can perform more. The flow auction. The first level that you can perform the auction is at the Dapp level.
00:04:31.407 - 00:05:17.864, Speaker A: And this, for me, is the most interesting place to do it because it's the first stage of the user's interaction with the blockchain. Right in here, you have a lot of room to actually improve what the outcome of the user, transaction or intent is going to do. Basically, because the transaction, the kind of final message that is pushed on chain, has not been created yet. The second stage that you can do it is at the builder level. So basically you can create a private mem pool. And in here, even though the transactions have already been created, you still have room to optimize these transactions and basically kind of try to avoid as much value leak that the users has left. And in this case, these two type of order flow transactions at this level are specific, they have a goal.
00:05:17.864 - 00:06:02.526, Speaker A: In the case of the dub, it can be application specific. And in the case of the builders, most likely it's going to be to return value to the users and actually get their order flow. But there is one more level that you can do, an order flow auction that in this case is more generic, which is the validators, because essentially the validators just auction the entire block to builders and say, just give me the best transactions that I can make the most money out of. So now let's look at what type of order flow auctions there are. There are three main types. The first one is an RFQ auction, which is a price discovery system. Basically, the way it works is that off chain market makers or off chain bidders, you simply respond to the quote that they want to provide for the swap that's been given to them.
00:06:02.526 - 00:07:32.500, Speaker A: And I like, I was missing one thing, and I like to categorize this auction as single intent auctions, because basically the only thing you can do is just improve the price, right? And this is quite specific and quite narrow, only for market makers, because then you kind of provide a better price than Amms because you have a private inventory that you can basically turn off like a couple of points that Amms are not capable of doing. Then you have frequent batch auctions, which is a price discovery system on top of execution price discovery. And it works in a similar way. You have off chain system that basically calculate what is the best execution path and also what is the best price for the orders within an auction. And this is a multidimensional intent auctions, because instead of just having to provide a better quote for the price, you can actually provide better optimized execution, because you can do things such as like peer to peer trading or ring trades, which in the case of cowswap, that's where the name comes from, which is coincidence of once, which is when users are completely overlapping and they're matched with one another instead of having to go to the aMm. And the third type of auction that you can do is the block space aggregator auction, which is neither a price discovery or an execution path discovery. It's just simply worse by providing several benefits to the users that are using this type of auction, and mainly focus on giving the cash back or the value that the transactions from the users would have otherwise leaked in the supply chain.
00:07:32.500 - 00:08:35.958, Speaker A: So if you think about it, it's all about the auction. And it's finally nice to see that everyone is starting to pay attention to auctions, because if you design auctions pretty well, you can actually return a lot of value to the users. So now let's look at two production ready order flow auctions that specifically has been quite involved with, which is MeV blocker and Kausop itself. So MeV Blocker is order flow auction at the builder level, with the goal of providing privacy and fast inclusion for the users. At the same time, it also tries to give a better experience for MEB because the fact that you cannot be front run or sandwich. And also the aim of MeV blocker mainly is to redistribute the value to the users, which in the end are the ones that are creating this sort of value. So how does MEB blocker work? We have a user that connects in this case to the RPC, which is MEB blocker, and creates a transaction which would be this letter.
00:08:35.958 - 00:09:37.354, Speaker A: And here, as we can see, this is the transaction and this is the signature. So then MEb blocker, what it does is the couples the transaction with the signature for the goal of then sending it to searchers, who have to perform the MEV to return it back to the user. And the important part here is if you see the envelope, it doesn't have the signature. And this is important because then that means the searchers can only append transactions behind the user's transaction and therefore by the design, no, they cannot try to front run or sandwich the user. So then the way the searcher has to create the onsite bundle, it's basically like we have the user's transaction, then we would have the background, and then they need to include the payment to the user once they have submitted the bundle. And the best bit, all the different searches send different bundles to the RPC, right back to the RPC. Then the RPC makes certain checks in this case that you're not trying to front run the user or sandwiches.
00:09:37.354 - 00:10:35.732, Speaker A: So then if those checks go through, as you can see, then the MeV blocker includes the signature of the user of the transaction, so that then it can be passed along the supply chain, more specifically to the builder and particularly MEV blocker in comparison to other different protection RPCs out there is that instead of sending it to a single builder, it sends it to the ten major builders that are currently out there in Ethereum. And then the transaction just follows throughout the supply chain. It goes to the relayers and then it goes to the validator or the proposer. And once the transaction gets on chain, what we see is that the user gets up to 90% of the value if their transaction carries meV, and then the searchers get the ten remaining percent minus the fees that they have to pay for the validators. But currently MeV blocker has three endpoints, which is something that people don't talk about much. But there are three different use case for MEB blocker. The first one is fast.
00:10:35.732 - 00:11:15.148, Speaker A: This endpoint is just focused on fast inclusion for the transactions with the option of getting a rebate. But it's important to clarify that not just because you make a transaction, you're going to get a rebate. The rebate that you're going to get is based on how much meV, your transaction creates. Then the second one is no reverge, which focus on protecting your transactions from reverts at the expense of having a slower transaction inclusion into the chain. But the important part is that you have the guarantee that the transaction submitted there is not going to revert. So you're not going to have a failed transaction. And the last one is no rebates, which basically is focused on maximum privacy and fast inclusion, but no refunds.
00:11:15.148 - 00:12:18.402, Speaker A: So if you use this RPC endpoint, what you're going to get is that you're going to get the transactions directly sent to the builders, and then the transaction is going to be included quite fast, and no one is not sent to the searchers, so there's not possible to do anything or try to alter the transaction. And why is Mev blocker important for Ethereum? Well, Mev Blocker is important because it's the first step to redistribute value to the users, who in the end are the ones that demand the block space. Right. And Ethereum has been going in this fatal spin, that we keep hurting the users by offering bad prices and extracted value from there. So there might be a point that if we keep doing this, we might lose the users. It's also important because it can give you privacy right now, which is sometimes, depending on the user that you are, it's far more important than a rebate. And lastly, it's also important because it helps to the most unsophisticated users of Ethereum to actually not leak value through their supply chain.
00:12:18.402 - 00:13:23.442, Speaker A: And this, to be honest for me, is the most important aspect, because in the end we might think we're all sophisticated users, but you'll be surprised in general how many people need this sort of solution. And while Mev blocker is very important for Ethereum, it's still not as optimal as for example, Coswap, simply because in order to undo the user's mistake, you have to basically create a new transaction, which is the background transaction, and then add the transaction after that. So in essence, you're occupying a lot of the block space that you don't need to have to occupy. And now let's look at Cowshop. As I said, Cowshop is an order flow auction at the Dapp level. And basically Cowshop is couch up is the UI that underpins the trading mechanism, which is calc protocol, which just adds a batching layer on top of Amms and aggregators that allows to execute multiple trace together in a single transaction in Ethereum. But the goal of cash app basically is protect users from MEB.
00:13:23.442 - 00:14:24.624, Speaker A: Because in here, since you're leveraging intents, you sign a transaction and the signature kind of hard codes on chain what you're going to get, so you cannot be screwed for the lower end. Then it's also important because through intents we can enhance liquidity. Because in the event of being a perfect peer to peer trade, there's no need to go out through a liquidity pool. In the emms or in the case of ring trades, which are kind of like barter economy, you can match multiple users with each its own liquidity without having to do any hops on the Amms. It also gives fair pricing via uniform clearing prices, because every batch in couch has to have uniform clearing prices. That's also another case of MEV protection, because in the case, MEV protection arises because there's disparity within the same trading pairs in the same block. So in couch, this is not possible because all the assets that are trading in the same auction get the same price.
00:14:24.624 - 00:15:40.938, Speaker A: And lastly, it optimizes the fee consumption, because with batching you can also optimize transactions. But how does it actually work? Well, the first stage is to collect the intent of the users, in this case via the UI, or even at the smart contract level, and then the intent is registered into the order book. And then once we have enough intents, the protocol basically creates an auction and then distributed to the solvers. The solvers are the third parties that execute the transactions on behalf of the users and then proceed to optimize the trades within an auction based on the objective criteria that Koushab has, which is maximize the user surplus and guarantee that all the trades in the same batch are going to get the same trades. Once the auction is over, the solvers send the solutions back to the protocol, who then proceeds to rank them. And as I said, the winning solver is the one that maximizes the mode, the user's output. And once the protocol has selected a winner, in this case, let's say the middle one, then the protocol proceeds to push the transaction on chain, and then everything gets activated and resettled, and then the user, or the smart contract gets the tokens.
00:15:40.938 - 00:16:41.214, Speaker A: But why is couchwap important for Ethereum? Well, it's important because I said before, we go from inefficient blocks, where you have multiple transactions that occupy a lot of space and leave only a very little available block space for others. So, which means that then this available block space is quite in high demand and this is a cause of high gas fees. And also, another particular thing about not using cow swap or directly using imms is that in the end, the liquidity pools are on balance. Right? If I trade in here, this liquidity pool has the certain reserves, this one has another one, and this one has another one, which is the root cause of also toxic flow. And then with cowshop, we go from efficient blocks, because then all the transactions are bundled together into one single transaction. And then you have a lot of free space in the block, which means that then there is less demand for it, and then gas prices can go lower. And then also another part, because of the uniform clearing prices, you get the liquidity pools perfectly balanced.
00:16:41.214 - 00:17:28.410, Speaker A: So now let's look a little bit of where are people losing money? So, in January and February 2023, Egan five conducted an analysis where $48 million were leaked through the users throughout the supply chain. And here we can see that the big winner is the validator with $30 million, which is actually nonsense, because they're the ones that do the least. And that means that in general, people are overpaying for their transactions. And then the second winner is the searchers, because they take 7 million, and the builders who are the ones actually building the block, are the ones that get the list. And this is why we're focusing on building Mev Blocker and Kowsol. And so far, Mev Blocker has already have 65,000 different users. It has given back to the users 167 ETH.
00:17:28.410 - 00:18:15.470, Speaker A: And usually the wait time for your transactions to be included is 8.2 seconds. And then in the case of cowswap, we've helped protect around $24 billion of of volume. Through MeV, we have returned to the users around $115 million in volume that goes directly to the users by preventing them from Mev minimization. And so far we've had around 100,000 different users. So in conclusion, order flow auctions can bring fairness to the game, because if everyone knows the rules before playing the game, then it's more fair. It can also reduce MeV opportunities because batching transactions like altogether is harder to manipulate than trading transactions individually, then they allow for a better price discovery.
00:18:15.470 - 00:19:26.544, Speaker A: Because if you have a fair competition where no one has to worry about other steps after the supply chain, then people can reveal their true intent or their true bidding value. It lowers the transaction cost because with batching you can optimize all sorts of fee. And then there's one missing, but it enhances the liquidity, because with intents you can actually not only match users peer to peer, but with the use of uniform clearing prices, you also get rid of toxic flow, which is the case that now, for example, Balancerdao approved a governance vote that allows couch solvers to get a reduction of up to 80% in liquidity providers fee because basically the volume that the solvers are routing to balancer is non toxic. Therefore they're willing to trade against it much more easily and, and lower a better price. So in my opinion, intents, but the real ones, not the transactions, are the most powerful one tool to get rid of MeV and also give value to the users. And I also want to say thank you and acknowledge all these different teams that have done tremendous work and great content around order flow auctions. And also want to say that if you're interested in helping us, we're hiring.
00:19:26.544 - 00:19:36.444, Speaker A: So please apply in cloudify careers. And I don't know if I have time for questions. Time for one more question. One question.
00:19:47.344 - 00:20:11.064, Speaker B: Hi, thanks for the talk. Very interesting in the slides where you mentioned how MEV protects works. What if the builder is also the searcher and just inserts a front running transaction before his bundle? That only works if it's frontrun, basically.
00:20:11.564 - 00:20:31.532, Speaker A: I mean, in this case, then the builder will be kicked out of the order flow auction and it wouldn't receive the future flow. So we can't really prevent it, but we can only react after it. So I think it's within their interest to not lose this amount of flow that is coming through them just for free in a sense.
00:20:31.628 - 00:20:34.668, Speaker B: Okay, so you prevent that basically by kicking them out.
00:20:34.756 - 00:20:35.828, Speaker A: Yeah, exactly.
00:20:35.916 - 00:20:56.062, Speaker C: Thanks. Hi here, big fan of cow. I think you guys are doing great work for the industry, so thank you for that. My question is how many percent of intent get fully matched with your off chain pool before push to amms?
00:20:56.238 - 00:21:22.194, Speaker A: So this is unfortunately not a big number right now. I would say it's around maybe of the total volume, like 1%. It's not big enough. But this is an issue of just timing, because the auctions are quite short. It's not very common to actually have this type of coincidence of ones. Right. Because the users unfortunately don't want to wait for the better price, but rather want their transactions to be executed quicker.
00:21:22.194 - 00:21:45.100, Speaker A: So we can't really extend the auction. One of the things we're looking at is allowing users to basically signal that they want to trade, but they only want to trade if there's a perfect peer to peer match. So then basically this would just be like forever valid order until kind of like a limit order to get match with someone else. Yeah, I don't expect this.
00:21:45.292 - 00:21:53.424, Speaker C: Sorry. Quickly, how many percent of your intent pool are from professional market makers?
00:21:54.084 - 00:22:48.154, Speaker A: So zero. Well, I mean, I don't know because market makers can be users. Like, it's not the intents, it's not that market makers are connected and created the intents. Basically just the way it works is that users go to couchwap or another interfaces, try to trade, they express their intent, and then the solvers basically run the optimizations to execute those intents in the best possible way. If it's possible to do a cow, then awesome. If not, you can just look at different optimizations, because, for example, you have what we call unidirectional cows, which is if three users are trading in the same direction, then you can batch them all together in a single transaction. So cowers are not only for peer to peer, because then you can also have intermediate cows, which is like when two people are trying to sell different tokens, but they have a common hop in the path, then you can actually match them there.
00:22:48.154 - 00:22:51.134, Speaker A: Thank you, Alex. Thank you.
