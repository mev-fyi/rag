00:00:09.200 - 00:00:30.552, Speaker A: GM everyone, happy to meet you. I am Omji from Inkot club. I will be moderating afternoon session of the live stage. We are packed with amazing talks. So let me introduce our amazing speakers. We have next session is build and secure your web app to interact with the Ethereum app. We have Akram and Etienne from Ledger.
00:00:30.552 - 00:00:31.804, Speaker A: Please welcome them.
00:00:34.224 - 00:00:35.364, Speaker B: Thank you very much.
00:00:37.424 - 00:01:30.426, Speaker C: Hello everyone. So yeah, we are Akram and Etienne. And today we're going to talk to you about Ledger and more specifically how you can integrate to the ledger ecosystem as a developer. And we'll go through a little proof of concept together to see how this all works in practice because there's no better way of learning than doing things yourself. So before we start, who here is already familiar with Ledger by show of hands? Okay, that's who here has a ledger device at home? All right, so for those of you who don't know yet or at home watching this, we essentially make hardware devices to help blockchain users secure their assets. And we also have a software wallet that's connected to the device that helps people interact with it. One of these devices is the ledger stacks.
00:01:30.426 - 00:01:44.130, Speaker C: You might have heard about it. It's the brand new device. It's very cool. It has an e ink display. It's curved on the side. It does not come preinstalled with a chess background, but you can have your own, you can have an NFT on there if you want to. It's very cool.
00:01:44.130 - 00:02:11.932, Speaker C: And if you want, after this talk, you can come and meet us and you can come and try it and play with it. All right, let's dive in. So, yeah, I went through this already. Okay, so the different ways to integrate with ledger. Let's dive in. So first you have the embedded apps, which is the base layer. So essentially when you turn on your device, this is what you see often.
00:02:11.932 - 00:02:32.986, Speaker C: You open your device. You've maybe opened the Ethereum app on your device. This is exactly the embedded app level. You can build your own, you can submit it as well. Then we have another layer which is the connect your app. So this is more like a set of libraries to help you interact with your device. Typically you want to connect your app to your device.
00:02:32.986 - 00:03:18.924, Speaker C: We're talking about USB connections or Bluetooth for both web desktop and mobile. Then we have two parts which are really linked to Ledger live. So the companion app I mentioned, that's more user friendly way to interact with your device, we have the blockchain support. So this is how you can really interact with your blockchain on the Ledger Live app. So here you would have the native tokens management. So essentially the apps in ledger live to interact with your device. And we also have live apps which are all the decentralized apps also that lives on this layer to interact with your device.
00:03:18.924 - 00:03:36.294, Speaker C: You can build pretty much any of these layers and submit them and be integrated with Ledger. Okay. And now Akram is going to talk to you about what you need to get started, how you can start integrating your projects with Ledger.
00:03:37.114 - 00:04:07.052, Speaker B: Thank you, Etienne. So Etienne presented you the different kind of integration we do just to quickly get back. So we'll focus on the second one, the connect your app option. You have these four different pathways. The second one, the connect your app is the fastest straightforward way to integrate with the ledger hardware device. So we are going to kind of presentation workshops. So if you want, we can stop.
00:04:07.052 - 00:04:50.974, Speaker B: If you want to take pictures on how to do it, don't hesitate to interrupt me. So to connect your app, let's say you have a web application, a dapp. You want to allow your dapp to be able to communicate with Azure hardware device. There is a straightforward way to do it. So let's dive in with a quick kind of web app we build and put it on GitHub. I will give you the link of course, and show you how it works. So you just need a kind of package manager of course, a nano hardware device, a ledger nano device, an Ethereum address on your Ethereum embedded app and some libraries that I will show you just after.
00:04:50.974 - 00:05:46.306, Speaker B: So this is the link of the repo. If you want you can take a picture, do it at home, maybe this you can see, but here in the bottom you have the link of the repo so you can clone it at Ilmeleg Ledger example Ledger. You clone this repo and you will have a bunch of different workshops web applications you can play with. And the one we are using today is the signpersonal message tutorial we have and we showcase to explain how it works. So this workshop is using the EIP 191 functionality that will interact with the ledger hardware device through the Ethereum app. So once you clone this repo, it's ready. So you just have to do an NPM install and then NPM restart.
00:05:46.306 - 00:06:22.030, Speaker B: And this is how it looks like. So it's not pretty. The goal is here to show you how quickly you can build it. It's a really simple web app that will allow you to connect your hardware device and sign a message with your personal address. So you have these on localhost of course. So when you have your web app launched, you just plug your hardware device, open the Ethereum app and click on hash myMessage. This is what it's written here.
00:06:22.030 - 00:06:53.484, Speaker B: So you do it. So you open your ethereum embedded app. You have the option to sign the message. You sign the message, then it will display you a kind of hash. The hash message will have it, and below it you will have your address. How could I be sure that I am assigning this message, that everything is working correctly? You have a kind of tool called Runkit. So once you send your message, you take the hash.
00:06:53.484 - 00:07:34.010, Speaker B: Sorry, I pushed one, two, two more. Oh, now you told me this way. Yeah, yeah, perfect. So you go on Runkit, you take the hash you obtained earlier, you put your hash on the runkit, and you will be able to verify that you are the signer of the message. So this is how, and this is the bunch of code you have to run on Runkit. So it's already there. So how does it work? I show you, it's a really simple web application, no complication on the web application.
00:07:34.010 - 00:08:32.516, Speaker B: What you have to do, import the right transport library, the different hardware devices, ledger hardware devices, you can plug it through USB, you can also plug it through Bluetooth with your mobile phone. So depending on where your web application is working on a phone or on a browser, you choose the right transport library, so you ensure that you're using the right import also. And we have some docs with all the functions you can use. So depending on what you want to do here I use only the functions responsible for signing. So these are the functions for the signing part. If you want to do kind of send, receive, swap, depending on the complexity of your web application, you will have different functions that you can use. And here, this is kind of cinematic of the signing, signing compartment we have on the web application.
00:08:32.516 - 00:09:24.446, Speaker B: So you have to open the connection and do the needed steps to be able to sign the message. And on top of that, so when you will try to do it, of course you won't succeed at the first time, you will have bunch of errors that will show up. You just have to know how to handle the calls and also to handle the errors. And on top of that, on top of the functions you have kind of translation of all the errors you can have. That will help you understand the behavior of your device with your web application and ensure that you're building this in the right way. And that's it for the explanation, I think. Yeah.
00:09:24.446 - 00:10:15.886, Speaker B: So this is really the goal of this presentation was to show you how it's simple to integrate your ledger hardware device with, for example, an application you already have or you want to build, even if it's for sign in or for signing. Also transactions. As you saw, the web application is really simple, no complexity, really straightforward. So this is the goal of this presentation. We have of course other kind of integrations, but this one is the more efficient in terms of efforts, workforce time you have to spend on. And yes, that's it. So we have these integrations that are, most of them can say open source.
00:10:15.886 - 00:10:57.758, Speaker B: All the repos are accessible. You have a ledger HQ repo on GitHub, you can have a look at it. You will find all the embedded apps we integrated from Ethereum to bitcoin to Polkadot to really everything. You have all the blockchain we support today that are integrated with the code that you can read on the GitHub, the live apps, also the plugin, everything is on the GitHub and accessible to you. So don't hesitate to have a look at that. So we try to stay open, an open platform, but of course we have to have the final say. When you try to integrate something, it may take time also.
00:10:57.758 - 00:11:29.636, Speaker B: So don't be sad if someday you try something and it takes too much time. And we also want to ensure kind of quality for our users and security when they use the hardware device. That's why we have the final say at the end. And here are the different links you can have a look at. So the first one, the developers dot ledger.com comma. You will find what I explained earlier, echnon and myself.
00:11:29.636 - 00:12:13.134, Speaker B: You will find other tutorials, documentation, other libraries, code parts, code explanation, everything. If you want to try to play with leisure hardware devices as a developer, we have a discord where you can reach us when you have questions and if someone from Ledger is available. And also we have a community that can answer to you. Also don't hesitate to dive into the discord. We have a kind of blog where we explain some journeys. And the most important part, also with the developer portal, the repo, the Ledger HQ repo. Go on GitHub, type LedgerHQ and you will find everything I explained today.
00:12:13.134 - 00:12:30.054, Speaker B: And thank you. So we have time for questions. Don't hesitate to ask. Thank you very much. Thanks.
00:12:31.834 - 00:12:33.014, Speaker C: Any questions?
00:12:34.454 - 00:12:37.262, Speaker B: It was clear, perfect.
00:12:37.398 - 00:12:38.474, Speaker C: That's a good thing.
00:12:39.014 - 00:13:00.724, Speaker A: If there's no cache ins, I'd love to take the privilege and asking one question that all the developers here, you just share a lot of resources, how they can build a secure app utilizing ledger if there's any application you'd like to see that nobody really tackle or you want to see how people are utilizing ledger a little bit more. Any idea, tips?
00:13:03.504 - 00:13:04.008, Speaker C: Go ahead.
00:13:04.056 - 00:14:00.114, Speaker B: The first idea, and it's a good question because it is a subject we are trying to tackle today and we will push this year, is what we call the clear signing. So what we are trying to do this year and the next years and after we are trying to push clear signing initiative that will allow people when using a hardware device to. So when we say clear signing, it's allow user understand what they're signing. So when they use a hardware device or even a software wallet like other competitors, they have to understand what they are signing. Not only a hash, but to know that they are doing send, receive a swap, everything and avoid them to be scammed and everything. So there is this initiative we're trying to tackle this year. We already began actually, but we are trying to generalize it.
00:14:00.114 - 00:14:25.514, Speaker B: My English is not so perfect to a wider scope and this is a subject we began this year. Like for other partners, we also trying to push this to developers. So yes, if there is a subject you would like to tackle, this will be a high priority for not only ledger but also all users and users.
00:14:25.854 - 00:14:42.694, Speaker A: Very interesting. So if anybody want to know about ledger more, please catch these amazing engineers and try to learn more and testing hardware worldly. The newest one is going to be very curious, very interesting to try out. Please give amazing applause to our fantastic speakers and we will see you soon.
00:14:42.774 - 00:14:43.390, Speaker B: Thank you very much.
00:14:43.422 - 00:14:44.154, Speaker C: Thank you.
00:14:45.224 - 00:14:51.184, Speaker B: And if you want to have a look at the stacks device. Yeah, come over and don't educate us.
