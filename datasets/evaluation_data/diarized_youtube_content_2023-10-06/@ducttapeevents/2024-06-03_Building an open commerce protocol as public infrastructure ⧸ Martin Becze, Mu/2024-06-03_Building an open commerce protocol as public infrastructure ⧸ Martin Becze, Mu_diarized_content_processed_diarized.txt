00:00:08.440 - 00:00:31.504, Speaker A: All right, so up next, we have two speakers, Martin, a veteran developer in this space, creator of Ethereum, J's and Ewasam, as well as Mu, who in the last decade has been in the field of decentralization and enhancing privacy. So welcome to the stage, both of you, and thank you. Give a round of applause.
00:00:35.884 - 00:01:25.434, Speaker B: Hello, everyone. I'm Martin and Moo. We're going to talk about building an open commerce protocol as public infrastructure. So, yeah, we're hopefully going to explain why we want to protocolize commerce and why that's going to be good for everyone. So I think I've been in crypto for quite a while, and DeFi has been a lot of fun over the last few years. It has given liberating access to financial concepts, ideas, and markets that people never had before. And this is great, I think, but I think crypto can really be used in more than just this.
00:01:25.434 - 00:02:21.874, Speaker B: I think it can break out into the real world. So, to complement financialization that we see in DeFi, we are proposing to build open infrastructure for crypto native commerce, physical items, a decentralized marketplace for physical goods. So not only can you swap tokens for doge tokens, you can also buy your doge pizza. That is our goal. So in this talk, I'm going to describe, we're going to describe why we're doing this, how it's going to be done, the architectural comparisons of what has existed before, and some privacy aspects to this. Oops.
00:02:23.534 - 00:03:14.304, Speaker C: Okay, so first, why are we doing this? Many of you have probably heard the rallying cry, protocols, not platforms. So we'll go over that. We think that the advent of blockchains allows us to tackle some of the old and persistent issues with decentralized protocols that you've probably heard about. Blockchains also introduce a whole host of new features that help us to tackle some of the challenges of existing commerce, and of course, crypto as currency, which I'm sure I don't need to explain. So, protocols, not platforms. What do we actually mean by that? So the difference between a protocol and a platform is that the protocol is a set of specifications that anybody can implement. So it's permissionless and it's locked open, it can't be closed further down the line.
00:03:14.304 - 00:04:36.534, Speaker C: In our case, what this means is that we want to create a shared data layer, and this helps to challenge the current platformization of commerce, which is where we have these silos of data that allow, because of the lock in that they allow, create a situation where these platforms can exploit the users that are registered on them, so they can price gouge, and they create very high barriers to competition. So by creating this shared data layer, we're actually lowering those barriers to competition, allowing more applications to be built on top, and encouraging a more thriving kind of ecosystem. What this shared data layer also allows us to do is that the data is no longer owned by the platforms, but it's owned by the user. So the user can then make the decision themselves whether their data is consumed by a certain application or not. One of the exciting challenges about this actually is the privacy versus discovery challenge. So at the moment, when you have all this siloed data and the platform owns all of your data, they can serve you recommendations, so they can run recommendations over it, recommendation engines over it, sorry. And they can serve you things that you maybe want, but don't realize you want.
00:04:36.534 - 00:05:37.168, Speaker C: And so once you apply privacy to that, that becomes much harder. And we find it quite an interesting challenge. And we have a few ideas about how to implement kind of self selected revelation, so you can choose what data you want to reveal and you want to be recommended, things based upon, and what data you would rather keep private. Why add a blockchain to this? So some of what we're trying to implement can be implemented without a blockchain. Decentralized protocols long preceded blockchains. But some of you may have heard Moxie Marlinspike's talk from several years ago called the ecosystem is moving about how difficult it is to govern and run a decentralized protocol when you can't, when you lack coordination mechanisms, and you also lack monetization mechanisms. So I've spent the past ten years working in off chain, decentralized, privacy enhancing technologies.
00:05:37.168 - 00:06:18.334, Speaker C: I've spent a huge amount of that time writing grant applications, and it has been a challenge to keep these systems maintained and keep them being continuously developed. And blockchains allow us to address both of these challenges. They're an excellent coordination mechanism, and they allow for everybody who participates in the ecosystem to be rewarded for that participation. Blockchains also allow us to introduce a whole host of new features. What we know about existing commerce platforms is that they lack provenance. So provenance was one of the first ideas to be raised or to attempt to be applied in the blockchain space space. But back then, the technology wasn't mature enough, and now it is.
00:06:18.334 - 00:07:01.154, Speaker C: We have projects like circularize that are coming up, that document kind of supply chain verification, and that's quite exciting for purchasers, and they've also got, we've also got reputation and verifiable reviews. So what we know is that with a lot of existing commerce platforms, verifiable reviews are extremely challenging. Merchants can completely game the system and we can no longer trust what we see. Blockchains make that verification a lot easier to ensure. Blockchains also allow creators to implement a whole host of new community building, community reward like loyalty reward mechanisms. And they allow for fractional ownership and collateralization.
00:07:04.574 - 00:08:00.904, Speaker B: All right, so I'm going to give a bit of a technical overview of the system. I'm going to start with defining what this protocol, like, the boundaries of the protocol, like what it's actually doing or taking care of. So I have listed inventory as the first thing. It manages the inventory and the listings. Listings are obviously tied to the inventory and then orders. So orders are when an end user is purchasing something all the way up to shipping orders, track the state of a set of listings, transferring ownership. Then lastly we look at payments and checkout flow.
00:08:00.904 - 00:08:43.824, Speaker B: Those are like the four domains that we're concerned with. And here's our design goals. The system should be delegatable, and I mean something very specific here. The merchant should not need to stay online for a customer or user to see the listings or, or to purchase an item. So that work should be, we should be able to delegate that to someone else. That delegation should be trustless and it should be censorship resistant. And lastly, it should be accessible.
00:08:43.824 - 00:09:49.524, Speaker B: What I mean by accessible here is that we want the listings to be reachable from using regular web technology. In our case, we're using websockets. We don't want to require users to have to download a special client to access this network. And this is in juxtaposition to some earlier designs that we'll talk about. So how are we doing this? We have a relay system, if you're anyone familiar with any of these projects, noster, blue sky, scuttlebutt. Okay, so they all have a similar concept of relays, personal data servers or pubs, but they all essentially do something similar. And that is hold signed data from users and reserve that.
00:09:49.524 - 00:10:26.174, Speaker B: So our relays are very similar. They're designed to have minimal trust. So everything is assigned by the merchant or by the customer. It's put onto the relay and then you verify it. It does have a data availability problem, potentially, I will admit that, because relays can go down. Um, so it's up to the merchant to have more than one relay if, uh, they're worried about data availability. Everything is an event sourcing model or a simple log.
00:10:26.174 - 00:11:09.864, Speaker B: So, uh, all the edits to the store, um, are uh, signed messages that are put into a log that are put onto the relay. Um, this should sound familiar with you for probably because blockchain works similar. You have a log of transactions, relays can sync between themselves. So that is something a little bit different than noster or blue sky. Their relays don't do that. And then clients sync from the relay, just download events, verify the signatures. In addition, the relays also compute the state of the store.
00:11:09.864 - 00:12:07.226, Speaker B: So we have a materialized view. So all the edits to a particular listing is going to compute that listing and then it merkelizes the state and puts the stateroot on chain. And the reason we do this is for basically lite client support, so random people can, who are visiting the shop, you know, can download the current state of the shop instead of having to replay the entire log of events to compute the state. In the future, we also want to investigate using validium type constructs. Like, you know, the relays could also post a proof and they wouldn't even need to. Like we wouldn't verify the proof online or on chain, we just post it there and then the clients would verify the proof. So it'd be super lightweight.
00:12:07.226 - 00:12:57.864, Speaker B: We don't currently use full of diem because it's still fairly secure. As long as the merchant comes online once every like couple days and checks that the relay is computing the correct state. Not too worried about that yet, but that is a path that we're investigating. So what do relays do? They're quite simple. In the end of the day, they serve in store listings, they process events, they lock items. So when a customer or someone is purchasing an item, they make sure that it's not being purchased twice. And then lastly they watch for payments on chain and then notify the customer and the merchant when the transaction is complete.
00:12:57.864 - 00:13:37.154, Speaker B: We have a very minimal set of smart contracts. There's a shop registry which is ERC 20 or ERC 721, an NFT. And this is basically an access control mechanism. Whoever owns the ERC 721 can update and add clerks to the shop and also add and remove relays. The shop registry also, yeah, records the relays. So you look at the metadata of the ERC 721 to see where to load the data from. That will be the endpoints of the relays.
00:13:37.154 - 00:14:05.734, Speaker B: And then the other smart contract we have is a payments contract. It's also quite simple. It just does some simple validation of the payment. And we also have it call some hooks in case you want to do other on chain actions after a purchase has been completed, such as, I don't know, like issue an NFT or I don't know what, but like lots of different possibilities.
00:14:10.994 - 00:14:46.878, Speaker C: So, architecture comparison. So now that you've heard a bit from Martin about how the protocol actually works and how it's structured, you might be thinking, well, we've seen decentralized marketplaces be attempted before. We have done, but that was a while ago. So the OG of decentralized marketplaces is open bazaar 2016. They started, the technology was in a very different place back then. So their architecture was to have a node on every device. And this had two main problems.
00:14:46.878 - 00:15:36.814, Speaker C: One was that merchants had to always be online if they wanted their shop to be available for customers to browse or to purchase from. And there was no web interface, so you had to download an application onto your phone, whether you were a merchant or a customer, in order to access the marketplace. We're at a place right now where we're able to do something very different to this. So in the past year or so that we've been working on this architecture, designing it, Martin has been, has spent about a year doing that. We've seen a couple of other on chain marketplaces pop up in the Ethereum ecosystem. So I think this shows two things. I think it shows the technology has matured, usability is there now, and it shows that there's a massive appetite for this, and we're ready, and the time has come.
00:15:36.814 - 00:16:20.470, Speaker C: So, mass market, we see ourselves as complementary to these other projects. So we see ourselves as being able to offer a service that they can take advantage of. And what is this service? So this service has two goals, privacy and scalability. So we don't put everything on chain. We're creating an l two like protocol of a network of relays that allows minimal amounts of data to be stored on chain. So that's payments and proofs, so that you can always verify what's going on on the relays, and that the relays are behaving themselves. So if you were to store everything on chain, there's a big challenge of privacy, as I'm sure a lot of you are aware.
00:16:20.470 - 00:17:16.184, Speaker C: It's pseudonymous, it's not anonymous. And when you're talking about scalability, commerce is a hugely interactive ecosystem. So every time you increment inventory, decrement inventory, edit a product, add a new photo, create a shop, create a new, add a new clerk, and everything that you do, if you have all of this data on chain, that's going to incur gas fees and transaction costs, and you might deploy it on an l two, but then you're still, over time, accumulating huge fees. And so by creating this l two like design, we're massively reducing fees. So what we're hoping is that we can offer this service to these marketplaces that are popping up and help them to be private in scale. So that's two. So that's the open bazaar and the other new ones on Ethereum.
00:17:16.184 - 00:17:46.300, Speaker C: There's a third protocol that we stumbled across quite recently that we got a bit excited about, actually. It's called ONDC and the Beacon protocol. So it stands for open network for digital commerce. This is what it says on its website. Regulating e commerce monopolies and duopolies is one of the biggest challenges facing policymakers. The winner take all nature of e commerce platforms has provoked regulatory responses. Breaking up one platform might solve violations, but it will not fix a system that spawns them.
00:17:46.300 - 00:18:37.312, Speaker C: Because of the technological factors and economic incentives that exist today, the basic plumbing of technology needs to be fixed. So this is actually a project of the indian government who seem to have observed the same problems with commerce as it exists today as we have. But they're coming at it from a slightly different angle. So their protocol, they've created an open protocol that e commerce platforms have to plug into that merchants register on. So it's kind of similar in its design to ours, but it doesn't use a blockchain. By not using a blockchain, they are foregoing the fully decentralized governance that our architecture offers. And what ends up happening is that it's actually a permissioned system that you have to register with an indian government approved registry in order to be able to use.
00:18:37.312 - 00:19:25.354, Speaker C: So it's an open protocol and it does create a shared data layer, but it is permission, and you have to register with the indian government to use it. It's a protocol, but it's also not really decentralized. So you can look at this as similar to, like, a comparison between DNS and email, where DNS is an open protocol, it's decentralized, but it does ultimately have root servers and it does have gatekeepers. And because it doesn't use a blockchain, the last thing that it foregoes, the third thing is that it foregoes all of the innovative features that blockchains are able to offer, which include what I went over before, which is like provenance, fractional ownership, verified reviews, reputation, which we are able to offer. So those are the three other architectures and attempts to solve this same problem compared to ours.
00:19:27.054 - 00:20:28.026, Speaker B: All right, I'm going to talk briefly about privacy and what we're trying to keep private. The relays are authenticated, which means it will only serve a certain set of events to users who have access, and another set of events that are only meant to be public. Messaging is end to end encrypted between the customer and the merchant. Messages are also stored on the relay, so end to end encryption should just be default anyways. Public listings are always public, so we're not worried about hiding those. Inventory amounts are private, so unauthenticated users can't get them. But they're unencrypted, so the relay could see those in the future.
00:20:28.026 - 00:21:21.584, Speaker B: We could sort of investigate using zero knowledge or fully homomorphic encryption to hide these. But they need to be currently, they need to be public to the relay because the relay decrements the inventory amounts after something has been purchased. The other things that are encrypted are the order status and orders. Those are actually part of the messaging, and those are end to end encrypted. And all that stays off chain. So the metadata of who they're going to or the timing would also be harder to see since only authenticated users and the relay can see those messages, the encrypted messages. So that's it for now.
00:21:21.584 - 00:21:51.584, Speaker B: Come talk to us if you're interested on decentralized commerce and selling things for crypto or buying things for crypto. We have a website, we have some documentation. We have GitHub. Everything is open source. Of course, it's a pretty early stage, but yeah, we have some protocol documentation already. So let me know if you have any questions. Thank you.
00:21:56.204 - 00:21:59.824, Speaker A: So we do have time for one question from the audience.
00:22:06.644 - 00:22:25.214, Speaker D: This sounds really interesting. I'm curious, on the UX, for a user, how does the wallet interaction, or is there a wallet interaction? Like, if I want to sign up for an account and buy something and transact, is it through, like traditional, like, eoas or how does that work, just out of curiosity?
00:22:26.114 - 00:22:55.974, Speaker B: So as a customer, you're going to load the listings from the relays over websockets. They're going to have a price, they're going to have a payment endpoint, which is an address. And then, yeah, you just use whatever wallet you want to send a payment to that address, and then the relay watches that address for payment. So pretty simple.
00:22:58.434 - 00:23:00.214, Speaker A: One more and then that's it.
00:23:02.834 - 00:23:13.264, Speaker E: Really nice talk. Thanks a lot. Do you already think about some arbitration mechanisms? How do you deal with returns or non shipments and so on.
00:23:14.404 - 00:23:45.260, Speaker B: So, yeah, the payment. So arbitration is a very interesting topic. We do not deal with arbitration directly. But as I just was saying, like, the listings have a payment address that you send the payment to. This could be an arbitration smart contract. Right. You know, you could imagine systems being built where like, oh, you might pay extra to have, you know, this secure, well known arbitration system process your order.
00:23:45.260 - 00:23:50.504, Speaker B: Or you could just, you know, trust the merchant directly and you might have a selection between the two.
00:23:52.724 - 00:23:57.612, Speaker A: All right. Thank you very much. I guess if you have any further questions, you can be available after the talk now.
00:23:57.668 - 00:23:58.244, Speaker B: All right. Thank you.
