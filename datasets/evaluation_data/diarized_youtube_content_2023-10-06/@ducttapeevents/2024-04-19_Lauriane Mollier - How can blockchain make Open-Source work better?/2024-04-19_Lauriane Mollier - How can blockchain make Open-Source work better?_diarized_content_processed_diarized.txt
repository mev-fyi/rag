00:00:02.480 - 00:00:32.750, Speaker A: Hello everyone. So I'm going to talk about how we can make open source work better. So with blockchain, of course. So first, a little bit of introduction for myself. So like we are a non for profit organization based here in Zugfar, like in Switzerland. And then our goal is to reconcile open source principles with sustainable and ultimately make open source work better. So like we are a community based project.
00:00:32.750 - 00:01:08.172, Speaker A: So like we are built by the open source community, for the open source community. So if you want to join us or to support us, well, like you can come, like you're more than welcome. So let's start with the talk. So how blockchain can make open source work better. So first of all, well, what's open source? Right? Because there is a lot of definition, it's not very clear what is open source and what is not. So let's come back a little bit for a little short history. So open source started in the eighties and at the beginning it was all about freedom.
00:01:08.172 - 00:01:58.826, Speaker A: So the movement was led by Richard Stallman. And this guy was saying something very true, that with every program there are two possibilities and only two. So either the user is controlling the program or the program controls the user. And of course you guess in which side he was. And so he created in 1984 the Free Software foundation and established the free software Freedom, which was basically the freedom to run the program, the freedom to study and to change it, and the freedom to redistribute it with or without changes. Changes, sorry. So this freedom are like this principle are great for freedom, but well, there is like two main concerns that will arise.
00:01:58.826 - 00:03:13.308, Speaker A: So the first concern is that those principles, well, they don't make it very easy to establish a clear business model. And so like those developers, unfortunately, they usually struggle with financial, with financial problems. And that's like quite sad because if you think about it, those developers where they are fighting for what they believe it is true. So for freedom, and even if sometimes the project that they are building are used widely, everyone is using them, they get almost nothing and almost no money out of it. And the second problem of the free software movement is basically that the definition is mainly was established by nerds and so on for other nerds. But freedom, well, it's for everyone, right? We want everyone to have the right to be free using a software. So the goal, like the way to do that basically to bring freedom for everyone is that to bring a great product that people want to use and people want to pay for it.
00:03:13.308 - 00:04:17.106, Speaker A: And well, software engineering is not the only skill that you're required to make a great project. You also require other skills so that accounting, marketing, ux UI, whatever. And probably you will even want to make fundraise, especially if you want to compete with other proprietary solutions. And so in the nineties, well the easiest way to do that, it was to create a traditional centralized company that everyone knows. And that's how we witness the creation of red hat, MySQl for example, suse, et cetera, et cetera. And the problem with this kind of settings is like if your company is profitable, where you are going to attract him, right, like the investor and he doesn't care so much, or let's say more nicely, that is like your freedom and your principle that very secondary for him. So if your company is going to be profitable, well he will acquire you.
00:04:17.106 - 00:05:34.774, Speaker A: And in that case, well, what will happen? So in the worst scenario, well he can just decide to close force the code, right? Because if he doesn't see any financial incentive to let it open source, why? Why to have a code which is open source. And then the second scenario, which is a bit better, is that he can just let your project, yeah, like die. Like he can kill your project. And usually it's because he has like some proprietary software solution that is competing with your open source project. And then in the better scenario he say, okay, like let's, let's like the be the code open source, right? Because maybe some people that are using my product see a value in it, but the community will never have a say into the future development and of course he will never share profits with the community. And that is how basically starting from the two thousands exactly at the time where open source started to be very critical in the software industry, we saw a lot of venture capital starting to invest in open source. That is what his graph is showing.
00:05:34.774 - 00:06:13.214, Speaker A: And that led of course to a wave of acquisition by big corporation. So we saw basically redat being acquired by IBM, Mysql by Oracle, et cetera, et cetera. There is a lot of examples like that and well that is called nowadays mostly commercial open source. So this model of having open source project controlled by a centralized company is. Yeah, like commercial open source. And that, see it's, well, like that's not anymore about community. And that is, well, yeah, for him that's quite right.
00:06:13.214 - 00:07:02.208, Speaker A: That's what's great, right? Because it's not about community. He can take all the profits, he is very happy, but we are not. And that how like this movement of open source was at the beginning all about freedom. It became slowly, let's say more like source available, which is more like an open source washing like a marketing strategy to use the word open source. But basically there is nothing of the principle that was starting in the eighties. So yeah, so what's as a summary, what's the current open source landscape? So we have like I will call that open source 1.0 which refer to the free software movement which basically, well there is no clear business model so they usually struggle with finance and resources.
00:07:02.208 - 00:07:50.316, Speaker A: There is no investment which is feasible, but it's about community. The community is controlling the software and then the software is treated as a common good and there is some freedom, it's all about freedom, but unfortunately only accessible for nerds. And second, so second show that people have right now either open source 2.0 so that refers to the commercial open source where here they managed to establish very clear business model. There was some investment but it's all centralized and usually led by corporation. It's not about the community anymore and it's not about freedom at all. And so that is like the landscape of open source right now.
00:07:50.316 - 00:08:57.882, Speaker A: That is a tough choice between on one hand having a commercial success or upholding with the freedom and community values. And of course is like if I'm here it's because there is a good news because with web three we don't need to compromise anymore, right? We finally can have the best of both worlds. So I will call that open source 3.0 decentralized open source and then well we will have clear business model investment to project are feasible, the community will control the project, its project will be treated as a common good and then it will be about freedom for everyone. Okay, so how do we do that? How concretely can we achieve this goal? So first some principles. So if we want the best of both worlds, well we need to have the best of what the company setting is offering and decentralize that so that well the community is in control. So the first pillar of that is like to have a clear business model.
00:08:57.882 - 00:09:49.194, Speaker A: So you need to figure out a way that your project will generate some cash. And of course we will help open source projects with that. There is a lot of open source business models that have been proven for open source and in this talk we will just focus on one, which is bounty system. But you can imagine the following talk with other business models. So the second pillar is that you need to attract supporter and you don't want to attract him like the big investor who will take over your project and control everything. No, no, no, what you want is to attract a lot of little financial supporters or developers and then basically who are here with you from the beginning and are believing in your project. And the third pillar is to have a decentralized governance.
00:09:49.194 - 00:10:25.314, Speaker A: So here the goal is to distribute some voting rights to everyone that contributes. That means contributor of financial support. And the goal here is of course to not make it possible for someone or for a group of people to take over the project. And the second thing which is important in the decentralized governance is to not be slow, right? We really want to have the best of both worlds. So we want to be as efficient as the governance of a company. So that is a very complicated topic. There was already a lot of talks about that.
00:10:25.314 - 00:11:11.960, Speaker A: So for now we will skip this topic so concretely. So I was telling you, well, we will take an example the bounty system. So for the one who doesn't know what is a bounty system, so traditional bounty system works as follows. So there is a user and this user has a problem. So it can be like he wants a new feature, he wants the bug fix, he wants new documentation, whatever, whatever. And he is willing to pay some amount of money so that someone solves his issue. And on the other side we have a contributor who is willing to well solve the issue of the user in exchange of the money.
00:11:11.960 - 00:11:35.300, Speaker A: So that is the traditional centralized bounty system. So that works. But there is some flaw, right? There is some problems. So here we concentrate on three problems. There is other problems. So the first problem is like, well there is not only devs, right, that are working on a project you need probably like accounting et cetera. And no one will offer any bounty so that you close your accounting.
00:11:35.300 - 00:12:44.434, Speaker A: So that's. Yeah, so the second problem is that maybe you are not visible enough to get bounties, right? Because if you think about the dependency tree of a program where if you are on the top, you are the product or the program that people use it. So people know that you exist and so they will likely offer you bounty to use a project that you are building, but more down like you are on the debundancy tree, more people just don't know about your existence sometimes. And there is a very famous comics about that, about a guy in Nebraska that have been maintaining a library since ages and everyone is building on top of the library and the software of all this planet is relying on him, but he doesn't get any recognition and even people doesn't know that he exists. And so the third problem is that there is also no incentive to back the project at an early stage, right? Like why? Like as a developer you should join a project who was not successful. Yeah, like there is not so much sense. So that is also the problem that we want to solve.
00:12:44.434 - 00:13:32.028, Speaker A: Okay, so how we are going to solve those three problems? So first of all we're going to make one token per project. So here I picked two open source projects, so Scala and Linux. And so they will both have their own token, so Scala will have Sca and Linux will have Lin, then they will both of them have their own treasury in their own token. And then basically now when we want to pay a bounty, we don't pay any more in fiat, so like in normal currency like euro or dollars, but we will pay in the token of the project. So here if we want to solve a bug for Linux, we will pay in lean token. And you may wonder, okay, but what does it change, right? Like why paying in lean token will solve those problems. Okay, let's explore.
00:13:32.028 - 00:14:31.598, Speaker A: So first of all, so let's imagine that that is a total amount of the bounty offered. So the first problem we're saying, well there is other people to pay than just people like devs that are solving the issue. So the people that are solving the issue will not receive the entire bounty and we will take a portion of this bounty to put in the treasury of the project and after so that the project can decide itself. So in a decentralized governance how to use the money collected through the bounty. So it can be like pay the accountant, pay the server or whatever they want for having great success. Second problem, well they, maybe you don't have enough possibility to get bounties, right? Do you remember this guy in Alaska? So his job is very important and everyone is relying on them. So that's normal that if someone on the top like is receiving a bounty, that's normal that they give a little bit back of the bounty that they receive to him.
00:14:31.598 - 00:15:22.480, Speaker A: So that is what we're going to do. Like we're going a small portion of the bounty of and we are going to redistribute it to open source dependency. And third problem, so no incentive to back the product, especially at the early stage. So here we want to attract new developers at the early stage we want our treasury to go up. And the cool stuff here is if you manage to link the price of the lean token to the success of Linux, then basically, sorry. So if you link that, then basically you have your treasury who is going up and then basically you have more money to hire new people. So that's great.
00:15:22.480 - 00:16:10.124, Speaker A: And second, if there is this link between the success of the project and the price of the token, well, you will have track attract like an early contributor because he will have better reward if he join early. And if the project is successful, how do we do that? So by building a tokenomics. So like with every bounty that the project receives, we will take part of it and we will burn the token. And for the ones that are not so much in crypto, it's burning the token. It just means taking the token and remove them from the circulation forever. And so that has basically that diminishes the supply. And usually if the supply is diminishes and the buying pressure stays the same, well, the price is going up.
00:16:10.124 - 00:17:09.056, Speaker A: And that is how you turn a bounty into a virtual circle, right? So you have, basically the circle is if your project start to be successful, then that means that like more users are going to pay you some bounty, if more people are going to pay you some bounties, then more token are going to be burned and more the value of the treasury will go up. And then. Sorry. And if there is like a token in more token, there is like, sorry, I messed up, I wanted to say more token are burned and more token are collected to the treasury. And so with that, then we have the value of the treasury who is increasing, and then basically we have more money to hire more contributors. And so that means more success of the project, et cetera, et cetera. And that is how we are building an entire open source economy here.
00:17:09.056 - 00:17:41.132, Speaker A: And that is, in my opinion, how finally, open source will compete with proprietary software and how open source will win over proprietary software. And, well, we are not letting you alone with that. So we are building a platform that offers this framework and so you can come and implement that on your project. It's very easy. There is almost nothing to do. In one click you can find an issue, receive a token, etcetera. So that is under development.
00:17:41.132 - 00:18:05.812, Speaker A: So if you want to become a tester, well, feel free to join. And then, well, just want to emphasize that, well, we are a not for profit. We are built by the community. So if you want to come and build with us, very feel free to do so and to reach out. And then at the end. Oh, yeah. And if you can share this presentation with everyone and share the world, that would be very great.
00:18:05.812 - 00:18:08.744, Speaker A: Thanks a lot. And now it's time for questions.
00:18:12.594 - 00:18:21.014, Speaker B: All right, we have time for a couple questions. We have a few minutes. Does anyone have a question? Right here. We'll get you the microphone. Hold on.
00:18:27.194 - 00:18:57.234, Speaker C: Thanks for your presentation. One question. So if I understand it right, I pay now for the open source as a user, that's okay. What about liability? Because if I pay for software, I also want that if there are any bugs or something like this, there's support and there's liability. Just thinking about what's happening at the moment at XSet library in Linux. And how do you in this case, how do you punish developers that behave bad?
00:18:59.414 - 00:19:45.834, Speaker A: Yeah. So there is two questions in one. So let's say I will start by the last question. So how do you punish the developer that are using the system? So here basically you can put in place a reputation system where you can say ok, if you want to solve bounty for example. Well there is every time the one who is programming is the contributor and then there is a reviewer. And so you can have a reputation system. Who says more reputation you have more, you take part, more bounty you have basically because even if you're not malicious, if you're a junior developer who needs a lot of help, then that's normal, that the junior developer is getting less and then the reviewer is getting more because he will have probably more work.
00:19:45.834 - 00:20:12.014, Speaker A: And about your second question, that's a very complicated question. So there is a lot of projects in open source that are working around that, especially in the US, because nowadays with, I don't know exactly like the details, but it's more or less like you are liable for the projects that you are doing. So basically they help with that. So I think here it's better to use a project which is already covering that because it's a very complicated field.
00:20:13.914 - 00:20:19.294, Speaker B: Thank you for your question. Any other questions? Right here.
00:20:23.204 - 00:21:05.576, Speaker D: I think you proposed a very interesting approach. I'm just skeptical about one of your claims, and that is that you keep the investors out. That you keep the investors out because you say now the community is controlling, but actually the token holders are controlling and the DAO most likely is based. Well you didn't go into it, but I presume it is based on token voting. As capital tends to accumulate, so will power over the Dow. So that. Yeah, how do you want to differentiate community from investors in the web? Three sense.
00:21:05.720 - 00:21:47.586, Speaker A: So to be honest, you cannot. And so what? It is very interesting with investors and let's say even like if you classify like as a good investor, an evil investor, even able investor has some interesting part, right? Because they really care about their return on their investment. So they are pushing the project to be very effective, et cetera, and to be very successful quickly. So that's very interesting. So basically, which is problematic with big investors is basically they take over the control. So again, it's all about a balance. You need to give them a little bit of control, but not so much so that they can also make a little bit of pressure in the project so that the project they can succeed more.
00:21:47.586 - 00:22:21.904, Speaker A: And then basically for me, if you just come, just because you want to have a project which is successful and go back with your money and have to go to Bahamas, maybe you don't want people to control your project. Maybe it was one of the side. It would be very ok. I don't come back to the slide, but if you're a financial investor and you want like to have the product on the financial side where you are a contributor, so you have some voting rights. So for me it's just a question of balance and that's a very. Yeah. As I was saying, it's an entire talk on this topic.
00:22:25.324 - 00:22:37.412, Speaker B: Thank you. We have time for one more question. If anyone has one last question going once. Okay. All right. Give it up one more time for Lorraine.
00:22:37.588 - 00:22:38.004, Speaker A: Thank you.
