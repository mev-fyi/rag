00:00:00.400 - 00:01:10.614, Speaker A: But now let's go to our project Eckerst, which is a zero trust application platform with universal interoperability. It might sound like just a lot of buzzwords to you, but I'm going to outline like step by step in a three fold presentation why this is actually really, really important, also for censorship down the line in the next few years. And the first part is mobile cloud disruption. So what kind of hardware do we use, and how do we approach the problem of centralization in clouds? Then I'll quickly outline, like, the high level design and architecture of acrist. And last but not least, I'll highlight a few use cases, even though I got inspired to some new use cases now after listening to these talks all day. So, the problem with public clouds, we've heard it dispersed throughout the day, is, first of all, they're very expensive. We have monopolistic nature of the market, which leads to extraction of higher costs, or I mean higher prices that are really intransparent.
00:01:10.614 - 00:01:47.914, Speaker A: Then we have one keyword is the Patriot act. Lots of the big monopolies in cloud computing are from a big country in the west, which leads to not just physical centralization, but also a logical one. So legally speaking, they can censor you whenever they want. We have intransparent pricing, so there's an abuse of lock ins. You will just be charged arbitrarily. So could be a problem down the line. We all know this feeling, oh, we forgot the credit card on AWS, and then just keeps rising.
00:01:47.914 - 00:02:27.257, Speaker A: And it's not confidential, although there's approaches on how to achieve confidential computing in a cloud. So we have hsms and all these approaches, but at the end of the day, you still have to trust the operator, right? You cannot see the source code of these hsms. Even if you buy an HSM, you'll never see it. Otherwise they can close their store. So this is a problem then. Second of all, Moore's law is like a law that you might know about, is that the number of transistors on a microchip, I'll have to cheat. This one doubles about every two years, though the cost of computers is halved.
00:02:27.257 - 00:03:44.936, Speaker A: So I think we are still in Moore's law, if I'm not mistaken. But like, the hardware community is really agreeing on that performance per Watt is the new Moore's law, meaning that we have to think about decarbonization, about sustainability as well, and really think, does it make sense that I need a server for this? Or can I run it on a smaller device, which somebody today already mentioned with regards to state proof verification, I think all right, new chips change the game. You might think, oh, what is this guy doing? Is he trying to sell Google phones? No, I'm just outlining one example chip that is really changing the game, which is the Google tensor chip with all of these dedicated system on a chips design, which leads to very, very efficient computing. And I'm not just going to show you this marketing slide, but I'll actually calculate an example of a pixel phone compared with a traditional rack server. As you can see here, it's six times cheaper already. Good. Even if you think about secondary market, you can get a pixel device with working hardware without a screen, maybe for around $40.
00:03:44.936 - 00:04:13.974, Speaker A: So this would even be ten times less. But then when you look at the cpu mark, this is quite insane. You have more cpu power in one of these mobile devices than on a reg server. In terms of energy efficiency, the numbers are even more significant. We have a factor of 50 here. We have to pay $1.5 a month, of course, with comparable energy costs.
00:04:13.974 - 00:05:08.594, Speaker A: And then this is our approach, approximately $10 a month if you really use one processor dedicated for your use case. And on the other hand, we have a Google Cloud offer, so it's around 37 times cheaper to run something on Eccherst again, summary we also have the world's best hardware security module. Why do you think it's because the Titan M two chip is unbroken? Of course. Trust execution environments are a very critical topic. I could go on for hours and hours about that, especially when it comes to Intel SGX and this sort of thing. But the external co processor that is used in these phones is really outstanding and not broken as of today. Of course this can change in the future, and our architecture also allows for adaption with regards to that.
00:05:08.594 - 00:06:22.046, Speaker A: Again, the comparison, but now I'd like to highlight a bit the sustainability part, because the upcycling is really, really nice to see here. We can buy for around $40 a used phone. We can even rotate a working screen and camera through these phones so we don't have these issues as with the iPhones, where you cannot really do that. And then you can sign up this mobile device to become an accurate processor. This takes two minutes, literally just run it in kiosk mode, which means if you never heard about it, essentially the device will only run our processor binary, so it will be locked down with verified boot, and then also the hardware will be attested to. So we can be sure that inside of that device and inside of the Titan M two chip, it's actually cryptographically verifiable what is running, and you can see already people operating huge farms with these devices to test their use cases or just participate in the decentralized network. As you can see, the community is really active.
00:06:22.046 - 00:07:07.954, Speaker A: We have an incentivization of 250 canary echoon tokens as of today, if you run it for a full month. So in the future, these c echo tokens might be worth something. Now let's go in a more abstract and technical level about system design and architecture. I think we saw the trilemma upstairs or outside of here? I'm not sure anymore. Where did you put ethereum? I think most people put it in the security corner. I'm not going to argue on that or no scalability. I think it was flipped, so it's quite reasonable, especially with regards to the lido situation.
00:07:07.954 - 00:07:48.854, Speaker A: But in our opinion, this is actually a quadrillemmo. We didn't make this up. So we think in related work this has been discussed extensively as well, that effectiveness of computation is missing from the trilemma and also confidentiality. So confidentiality in computing, we heard it today with astex approaches. This is more on a protocol level where you actually encrypt and still put decipher text on chain. But in our opinion, you don't really need to put everything on chain in an encrypted fashion. But you can already use an off chain approach inside of one of these processors, depending of course on the use case.
00:07:48.854 - 00:08:30.064, Speaker A: So the problem space for us, as outlined before, is the centralization infrastructure. There. We approach it as a decentralized layer one. I know that the term layer one is very risky to use at an Ethereum focused conference, but we really don't see ourselves as a competitor to any other chain. We see ourselves as a connector, sort of, and also execution layer that can be used by anything that is looking for a zero trust execution layer. So the lack of confidential computing is also a huge issue, which we address with that aforementioned layer. I'll outline a little bit how that works.
00:08:30.064 - 00:09:28.310, Speaker A: One of the largest challenges that we see besides these protocol level challenges that were outlined throughout today is the oracle problem. Right? So how do we bring off chain data on chain price feeds and all sorts of other API requests? This we address with allowing these jobs to run inside of that decentralized network and following a zero trust approach. What that means is will be outlined soon, and also the fragmented ecosystem. This is the universal interoperability pitch. You've heard this many times before that chains need to be interoperable but there we also follow a little bit of a more nuanced approach that will be outlined also in the next slide. So traditionally we have a monolithic architecture. Of course this doesn't apply to all the chains, but from a very high level.
00:09:28.310 - 00:10:19.280, Speaker A: This is usually how chains are designed. With Acris we follow a more modular approach where we separate the consensus layer. We have nominated proof of stake on the bottom and on top we have this orchestrator. This is actually where jobs are being matched to processors, and all processors that are public actually have a reputation. So if you offer your device to the network you will have reputation allocated as well. So this is enshrined in the consensus layer if you want to use a specific processor. So if you're for example running, I don't know, centralized exchange or a Dex yourself, and you want to have your devices as the primary starting point for a query, then you can also use this directly.
00:10:19.280 - 00:11:18.074, Speaker A: So you don't need to use the orchestrator necessarily, but you can, which is why this is loosely coupled to the execution layer. Here we have live, as of today we have live the Acura secure hardware runtime which is running inside of these Google Pixel devices and under active development is the zero knowledge runtime. So I'll outline a bit further how the Acura secure hardware runtime works with an Oracle query for example. And then on the bottom you can see this universal interoperability layers. These are like modules that you can use out of the box, especially the native web two settlement and web3 settlement. We already have around ten evm chains interoperable with Ackerst and you can query any API you want and of course then persist this further how you wish. And of course on top of the application they are similar to others.
00:11:18.074 - 00:12:04.924, Speaker A: This notion might not be new to you. Of course there's different wordings around this idea and this is also not politically motivated. This is more a cryptographic statement as it's been used in the web3 space. Why? Because we have a permissionless orchestrator, so on the bottom actually matching these jobs to processors, and we have a reputation engine which is always continuously updating. So after every job that is successful or not successful, so a binary outcome, you'll have your reputation updated and it's the same. That applies also to the slashing and nominated proof of stakeholder. So if you nominate to a validator you'll actually also be slashed.
00:12:04.924 - 00:12:44.364, Speaker A: So not just delegate proof stick. And on the cryptographic side, on the hardware side this could also be extended to the zero knowledge runtime. But here specifically we have Android verified boot, no virtual te. So everything is running inside of that. A tested chip, not just a virtual environment. And that's actually like a first, didn't exist yet. So now let's think a bit from a system design or architect perspective.
00:12:44.364 - 00:13:33.002, Speaker A: The challenge is you don't have any confidential computing, you don't want anyone to see what you're running in your Google Cloud server. As of today, everybody that has the jurisdiction or the legal access can do that. So what are your two options? The top one, I'm not going to outline that further, and the bottom one is that you deploy your own co location, which is a lot of fun if you have lots of DevOps experience and a lot of money at hand. Otherwise that's not really feasible. So this is exactly where we see ourselves filling the gap with these three architectural choices. So now I'd like to highlight a few use cases and then also maybe outline what I thought about during the course of today. So of course we can implement on demand oracles.
00:13:33.002 - 00:14:32.394, Speaker A: We can also make them push based like they already exist. This can be fully chain link compatible, can also persist cross chain. We can have verifiable randomness which can also be sourced from anywhere and then settled anywhere. But also we can think of AI model training which we have running research project with University of Lugano. And we can also have incorruptible sequencers that for example, instead of running another permissionless layer publicly, for example, we could run this inside of acros processor consortium, that is then sequencing for example transactions confidentially we have all of these integrations. So as of today you can use any substrate based chain. Since we also built on top of substrate, we're EVM compatible, WasM compatible, and also bitcoin compatible is 90% done.
00:14:32.394 - 00:15:24.994, Speaker A: So this is the console. You have a user interface where you can choose from where you want to run the job or where you want to persist the job, because the job will be run inside of a processor. So as an example here, pull on demand oracles where instead of always pushing price updates, you actually as a user trigger the interaction with the dapp. So for example a swap. Then you need the price, right? You open a direct websocket channel from the depth, then you post request which then is executed inside of the processor. This could also be multiple processors. So if you don't trust a single processor alone, you could also do this in parallel with multiples.
00:15:24.994 - 00:16:15.154, Speaker A: Then you get back the price feed. Of course this should be signed by the API that is returning it and also by the processor so you can verify the attestation chain. Then this post is signed. Basically you post a sign transaction with your swap and also including the price update so it's sort of outsourcing the price update on demand to the user side. This exists already in a similar architecture as of today, but not with the same security level and confidentiality level. So now a short call to action. If you're a builder, a project that is interested in using this sort of technology, it doesn't matter which ecosystem you're coming from, we're agnostic to all the ecosystems.
00:16:15.154 - 00:16:39.274, Speaker A: Then you can apply to this builders program. We have 1.5 million allocated, 1 million as a price and 500,000 tokens for participants. You'll receive weekly mentorship etcetera. So I think you know what a builder's program is. I don't need to elaborate further. And last but not least, stop overthinking, start building and looking forward to any questions.
00:16:39.274 - 00:16:45.074, Speaker A: Thanks also thanks for putting me in last minute. Thanks.
