00:00:00.120 - 00:00:15.318, Speaker A: There we go. Attempt three. Welcome to the stage Aisling Conley from Dfinity. Thank you very much. It's great to be here. And, yeah, I'm sorry if I'm not what you expected. You can hear okay, I can't speak so loud.
00:00:15.318 - 00:01:01.062, Speaker A: I am a quiet girl who will try to shout a bit for you. But anyway, so I'm here to talk about vet keys, which is a protocol that we introduced to allow you to have many secrets on a blockchain. But first, I want to come and say gri z Mittenant. So I don't know how many of you are from Switzerland or from Zurich, but, yeah, this is the kind of word that people use to welcome or say hello in Zurich. And when I came, at first, people said this to me and I was like, what is this Fritzi thing they're saying to me? Anyway, so, yeah, it's welcome. And I just wanted to say that, like, I heard someone say, I come from America. I come from ICP.
00:01:01.062 - 00:01:28.334, Speaker A: And ICP is this Internet computer protocol, which you can see on the overhead projector, which is very old school and quite nice, actually. It's cool to be in a university to see this classic tech stuff. Can I send a fax here? And this kind of stuff. But anyway, it's cool. But I come from Internet computer. We call it ICP as well. But this is generally a layer one blockchain that now has lots of features, which I will tell you about today.
00:01:28.334 - 00:02:18.306, Speaker A: But, yeah, so why I kind of start, I'm here for two reasons, and there's kind of two strands to the story which lead to this privacy thing that I want to tell you about in a minute. The first kind of leg of the story is about this Internet computer, which launched in 2021. And the goal of launching this was to form a kind of new blockchain network that would serve the world software and systems. So, like, Bitcoin came along and gave us this very nice kind of financial system and this kind of peer to peer payment system. And it was great, but it was limited in a way, and it gave rise to all this kind of super cool, like people said, ah, now that we have this kind of digital secure payment system, maybe we can build this digital secure compute system as well. And so this is how Ethereum came along. I'm sure you know much more about Ethereum, so I don't need to go into that.
00:02:18.306 - 00:03:00.070, Speaker A: And actually, Wolfgang, I think, who talked before, will give a very nice talk about Ethereum tomorrow. So I do a bit of advertisement for him as well. But, yeah, Ethereum came along and it gave these smart contracts. And as you see now, a lot of the conversation around Ethereum is about how to scale it, how to make it more efficient and things like this. And we sort of came along in 2021 and said we want to build this sort of autonomous cloud that can facilitate real world systems. It doesn't have to be maybe the absolute most super secure, highly decentralized, million validators checking every signature. This is not needed for most stuff that runs on the Internet.
00:03:00.070 - 00:04:15.942, Speaker A: But somewhere between Amazon cloud and Ethereum is where we wanted to build something. So this launched in 2021. But the question is, how can you build something that has kind of the efficiency of a cloud service provider, but some of the kind of nice, idealistic guarantees that you hope to achieve from something like Ethereum, like a decentralized network? And I think one of the biggest problems at the time, in 2015, if you kind of place yourself back in this world, which is kind of fun now, to think that this was actually quite some time ago, the blockchain validators, one of the biggest things with bitcoin was that it needed, like, there were these full nodes that needed to download the whole blockchain and check all the state and check the full history. And the same with Ethereum at the time, and now there's lite clients and roll ups and ZK proofs and all this kind of stuff that gets around this. But at the time, this was not hyper efficient. And as we wanted to build this hyper efficient blockchain network that would host, like, really, the world software cloud, like, we needed to do something else. And at the same time, I don't know if you remember, there was like this, like, ethereum was kind of, bitcoin was taking off, ethereum was coming up.
00:04:15.942 - 00:04:38.768, Speaker A: They were like, ooh, these cryptocurrencies are a thing now. And they started calling them cryptos. And then all the cryptographers got up in arms and said, like, what do you mean, these cryptos? Crypto means cryptography. And there was all this kind of spatting back and forth on Twitter. I don't know if you remember, but I studied cryptography. So as a cryptographer, people got very defensive of the word crypto. Anyway, we lost the battle.
00:04:38.768 - 00:05:54.718, Speaker A: But at the time, the cryptographers started paying a lot of attention to blockchains. And I mean, to me, how many engineers do you need to change a light bulb? Like, how many cryptographers do you need to look at blockchain before you start realizing signatures are the answer to everything. And so with the Internet computer, I think one of the key, like, the first real main innovations of how this blockchain network could be different is instead of taking all this history and having to verify it all the time, can't we just, like, sign the stuff we verified already? And can't you just trust this? Like, we have provable security to show that you can't forge these signatures. We have, like, ways, I mean, you have a consensus network to prove that everybody agrees that this is the current state. So coupling these two things, surely this means that, like, you can just agree that because we've agreed on the history and because we've signed it, it can't be faked. And so this is what we aim to do. But in order to do that efficiently in a way that anybody can verify that, okay, because we've come up with consensus and because we've signed it nicely and because it can't be faked, but still someone needs to verify it.
00:05:54.718 - 00:06:39.972, Speaker A: And, like, if there's, here, you see these bubbles on the picture are supposed to represent smart contracts on the Internet computer. Like, if these smart contracts on the Internet computer are signing everything, saying, like, okay, this is. Okay, do you need public keys for all of these? This is going to be a key management nightmare. And so one of the real kind of big innovations of the time, at least around the Internet computer world, was the fact that you could have one single public key, one single private key from which you derive everything else. And all the kind of private keys of the smart contracts that sign and verify and attest to things could be verified. All these signatures could be verified with a single public key. So this was like the big innovation of the time.
00:06:39.972 - 00:07:30.906, Speaker A: And this was like a lot of kind of crypto stuff. And we call this chain key cryptography, but it depends on hash trees and threshold bls. I don't know how much you know about the technical side of this stuff, but this becomes important later. But then, yeah, okay, fine, you can have, like, one public key that can verify everything. This makes it super efficient. But at the time, I don't know if you also remember there was a lot of questions about setup. How do we set up this stuff securely? Like, all this decentralized stuff was coming around, and it's like, okay, I, as aisling, can generate a key and give it to you, but, like, who's to say that I I'm trustworthy enough to give you the key that starts all of this whole network? And so there needed to be a distributed way of actually setting up this master key in the first place, from which everything would be derived and whatever.
00:07:30.906 - 00:08:11.608, Speaker A: And so there was a very nice, another kind of key innovation of the time was this paper from Jens about non interactive distributed key generation and key resharing. So we need the key resharing for if, if validators come and leave the network, things change. You can't have a static system and you can't have static key derivation. So things change. So you need to reshare keys. Anyway, this was kind of one of the big things of the time. And I tell you this just so that you know and you can keep in your pocket now, okay, they have threshold Bls, they have these keys that they can use to sign stuff and get all this efficiency and they can set it up in a secure way.
00:08:11.608 - 00:08:41.283, Speaker A: This is great. And so, yeah, ultimately you have one master chain key that kind of allows all this signing and all this verification, and doesn't mean that you have to carry all this history around with you. And this is actually the public key there. It's just there, you can take this public key and you can verify any signature from the Internet computer with this key. And this allows you to verify transactions and correctness. And it can't be, can't be faked, you can't tamper with this, whatever. So that's one part of the story.
00:08:41.283 - 00:09:26.364, Speaker A: The other part of the story is that now that we have threshold BLS, it allows us to kind of integrate with the Internet very well. It allows us to kind of go in the direction of this cloud stuff. But also at the same time, as I said, we also believe in these kind of decentralized principles, these kind of ethereum ideals. This was supposed to kind of build on top of Ethereum, but how can you build on top of a network that you can't even talk to or whatever? And so ethereum relied on EcDSA signature. So it's a different type of signature scheme. And if we would want to talk to Ethereum, it would be necessary that we do ECDSA, so we can also sign things that Ethereum would understand. And so we did.
00:09:26.364 - 00:10:08.342, Speaker A: And so we implemented this ECDSA. And luckily if you do this, you get bitcoin and Ethereum for free because they both use the same signature scheme. So now it means that the Internet computer or ICP, can actually write to bitcoin, can write to the Internet, can write to Ethereum, and these validators can validate all these signatures in a very super efficient way. I won't go into this too much. But this is kind of nice because smart contracts. So this picture on the, to you, the right of the screen, is supposed to represent some portion of the Internet computer. And the keys on the notes, the validators at the bottom, collaborate together to sign some stuff.
00:10:08.342 - 00:10:53.482, Speaker A: They produce a key that can be used by the canisters which sign, or the smart contracts which sign transactions that can be read and change state on the Ethereum network. So we have this integration, we also do this with bitcoin, so you can sign transactions that can change the state on the bitcoin network. This is super nice, but my colleague will talk about this later in the afternoon. So I'm going to move on from that topic now. So, yeah, Bjorn will talk about threshold cryptography for multi chained apps. So how all this kind of signing and stuff can allow you to enhance, like take some nice features of ICP and use them in your Ethereum app, or use them in your bitcoin app, or add some functionality to bitcoin that's not there already. His later on.
00:10:53.482 - 00:11:36.254, Speaker A: But I say all these things just so that you know now and that you have in your pocket, okay, you have threshold BLS, you have a nice way to set it up, and you have threshold ECDSA, which allows you to talk to bitcoin and ethereum. But now the reason that I'm actually here is for privacy. And do, I don't know, like maybe a show of hands how many people care about privacy in the room? Okay, quite a few. I find it kind of funny because like in the blockchain world, so there's like a bit of a contradiction. I have. Do I have time to like, ramble a bit? Okay, great. This is the nice thing, when someone doesn't show up, you're like, well, let me now go into storytime.
00:11:36.254 - 00:12:24.808, Speaker A: This is like off off slides now. But like, for me, I care about privacy a lot. I did my PhD in privacy topics, so I could talk about this all day. But the interesting thing with privacy is that, so people don't like Google and people don't like Facebook because they can see your data and there's data leaks. And my data is even being sold Netflix for hundreds of millions of dollars and all this kind of stuff. So having a centralized system have control of your data is not good, because then those are profit maximizing organizations that are going to do what they need to do to maximize their profits at the cost of maybe you in your privacy and whatever little ideals that you might have, throw them out the window. And so this is not good.
00:12:24.808 - 00:12:56.160, Speaker A: And so you kind of then find this blockchain world where it's like, ah, it's decentralized. I'm taking out the middleman. There's no more Facebook, there's no more Google. This is super nice because you're like, yeah, damn the man. I'm going to build my systems. But then you build your systems and you realize that every goddamn thing that you do is public. And it's like you've seen all my, like, you've seen that I sold dogecoin, like, way too early and you've seen that I minted like, some crap nfts and it's like, shit.
00:12:56.160 - 00:13:32.260, Speaker A: Okay, it's okay. But like, I mean, that's fine now because it's like my web3 friends and they've done the same and it's okay. But if people are kind of doing analysis on this and if you want all this data, it's there and it's public. And when you're playing in the web3 world as it is now, that's okay. But I mean, I don't want my back details and all my things to be just in the open so that you can check. Because why not? And it's like, oh, because everyone needs to verify everything all the time. And it's like, well, maybe they don't need to verify everything all the time.
00:13:32.260 - 00:14:04.128, Speaker A: Hang on a minute. Like, what were we actually trying to do with these blockchains in the first place? We were trying to. It's like this security thing at the airport. Because one person did a bad thing, everyone now has to suffer and put their shampoo in little bottles for like ten years. It's like crazy. So because Google does some bad stuff and Facebook sells your data now, everybody's bank account details, essentially. And, okay, it's not a bank account, but like, their account and their money, which is real now, is out in the open for everybody to see and verify.
00:14:04.128 - 00:14:27.640, Speaker A: So this kind of sucks. And it also sucks, like, on the more technical. So this is the personal level, okay? I don't want my stuff. Just because Google sucks doesn't mean that I should have to suffer for all my data stuff. This is on the personal level, but on the protocol level, there's also, like some problems. Like if you think about, well, I don't know if it's a problem or not. It depends who you're talking to.
00:14:27.640 - 00:15:34.618, Speaker A: Like, it's a bit of a debate about whether this is a blessing or a curse, but there's this MeV situation. Let's not call it a problem, but there's a situation on a lot of blockchains where transactions come into the blockchain and validators need to build blocks, or someone, a block maker needs to build blocks and they order transactions. They package them, they build a block, they kind of confirm things, and then they're sent around to everybody else. But like these, like, depending on how you order the transactions, I mean, like, these transactions come with fees. So if transactions come with very high fees, maybe you put those higher. Or maybe because you can see what's kind of coming in, maybe you want to actually start ordering transactions yourself, or maybe you want to make some transactions yourself because, you know, I mean, there's a lot of kind of manipulation that can go on with transactions and things like this when you're making blocks. And on the one hand, this is a great thing if you're a block maker, because you can make money and you can put things in blocks that you want.
00:15:34.618 - 00:16:03.426, Speaker A: I mean, you can do all sorts of stuff as a block maker. But again, as a kind of end user, all I do is suffer and pay too much fees. And maybe actually my transaction doesn't make it into the block and I lose the gas that I pay to try and get in there and the transaction fails. So again, just because one guy is trying to make some money, I suffer. And this sucks. And this is to me because everything is open and everything can be seen and everything can be validated. So privacy on blockchains is like a huge issue.
00:16:03.426 - 00:16:28.684, Speaker A: Oh, I talked too much. Now the thing went to sleep. Yeah, it's a huge issue, and it's really hard to know how to solve it because also people need to see stuff to verify it. That's how the whole thing is built. So how can you do anything with any sort of privacy on blockchains? Okay, it's a big topic now. People are doing some stuff, the ZK proofs, whatever. So let me go on and try to.
00:16:28.684 - 00:16:57.044, Speaker A: I talked too much. Sorry. Okay, there we are. So, yeah, anyway, I go back to now trying to explain to you how we get some privacy, how we built this privacy tool that can be used either on the Internet computer, on ICP, or on Ethereum. If you have an Ethereum app, you can use this as a service or on bitcoin or whatever. So you can add some privacy wherever you like. So, yeah, earlier we saw that.
00:16:57.044 - 00:17:39.816, Speaker A: Now, because we have threshold bls, we have these smart contracts that are able to sign transactions on other blockchains because we have threshold ECDSA, smart contracts can sign transactions on other blockchains. So we want to just take this picture and kind of extend it. So, like, for privacy, what do I want to do? I want to not only sign, but I also want to be able to encrypt and decrypt stuff. Like, you know, bitcoin came along with their payments. So, like, why do we, and then Ethereum came along with like, a general purpose compute platform. Okay, like, maybe it's good, maybe it's bad, I don't know. But it is a general purpose compute platform.
00:17:39.816 - 00:18:05.358, Speaker A: So why are we still talking about transactions so much? It's not just about money anymore or like a fee or a token or whatever. It's like if you're computing, you're computing on data. It's generic, so it's not just about transactions. I want to be able to do the stuff that I do with normal data. I want to be able to encrypt it. I want to be able to decrypt it. I want to be able to manipulate it.
00:18:05.358 - 00:18:34.804, Speaker A: I want to be able to do whatever with it. So this is the model that I kind of work in, not that whatever I'm signing is a transaction. Whatever I'm signing is data. And so is there some way that I can sign this data that kind of hides it? And the answer is yes, actually. So these BlS keys that I mentioned earlier are very special in the sense that they're very efficient on the one hand. So this is why we use them. They're very fast.
00:18:34.804 - 00:18:58.868, Speaker A: You can batch them. You can do all sorts of interesting stuff with them. Them, they're deterministic, which means that, you know, every time you derive something similar, you can have the same one. You can, yeah, they have lots of special properties. I'll get to, I'll get to get to that in a second. But, yeah, I take this picture. And so we start with a threshold key derivation.
00:18:58.868 - 00:19:56.826, Speaker A: If you want some privacy, you need to be able to get a key that can encrypt your stuff. I think one of the nicest observations about BLS is that it also serves as a decryption key. So you can create a signature on something, and this something happens to be the public key for which the signature on it is a decryption key. And so all we need to do, basically, to be able to do encryption with the signature is to be able to derive this decryption key. And so this is what we do. So we have bls on the Internet computer already. We use it in every layer of the stack and so this key derivation, I mean this privacy tool that we have built is basically essentially just opening this to developers as an API so that they can use it too, because these keys have that functionality that can allow you to do encryption and decryption.
00:19:56.826 - 00:20:40.236, Speaker A: So the first thing we need to do is derive a key. But if you derive a sort of decryption key and you send it to a smart contract, I mean you're just sending secret keys around in the clear. This is obviously not good. And so you want a way then to be able to send your derived decryption key around in such a way that nobody in the network can see it because remember, we're operating in a public space, everyone can see everything all the time. And so you never wanted that. Your decryption key that you want to use for all your privacy stuff to keep the kind of public out of your transactions or your data. This also itself should not be sent around in the clear.
00:20:40.236 - 00:21:20.986, Speaker A: So encrypted, fine. So with this key derivation scheme we have a way such that this key can be derived in an encrypted way, so the user generates a transport key. It's like saying hey, ok, I'm going to ask you now to drive a key for me, a decryption key, something that I can use, I want to encrypt. Like encrypting data is easy, all you need is a public key, and a public key you can get from anywhere. The hard part is actually decrypting it. So I'm going to ask you to create a decryption key for me, me as an end user, and I want you to somehow get this to me without anybody seeing it on the way. So all I need to do then is ask you to encrypt it as well.
00:21:20.986 - 00:21:54.364, Speaker A: But how are you going to encrypt it? You need to encrypt it under this public key that I give to you such that when you send to me I have the decryption key which I can decrypt the derived decryption key. And so the system API looks a bit like this. It's just an API that gets decryption keys to users. This is the key thing to remember. So yeah, you derive and encrypt a key from a master key. The transport public key is the one that I send you to encrypt, which send back to me. And there's a derivation id which sort of acts as the public key in this case.
00:21:54.364 - 00:22:32.042, Speaker A: And so these are what we call vet keys. So this is the whole like these keys that we derive and transport to the user that they can use for decryption. We call them vet keys, and you can see why. So there are threshold keys, they're encrypted threshold keys. So you see the e and the t. And now you might be asking what is the v? And so the V is just that they're verifiably encrypted. So we want this to be sure that in order for the blockchain not to stall, basically you want to be able to give some guarantees that whatever I am deriving is actually a decryption key.
00:22:32.042 - 00:23:22.280, Speaker A: But because it's encrypted, you need to be able to verify on the encrypted derived key. So this is the verifiably encrypted threshold keys are what we call vet keys. And that's it. And so like from through secret shared keys across the node and the network, they collaborate together to produce these decryption key shares which they then encrypt send to the smart contract, which then sends it to the user. And this also resulted in another paper which was released last year. And it leverages the fact that BLS are also decryption keys. It uses elgamal to do this transport encryption to get the decryption key from the nodes to the end user without being seen.
00:23:22.280 - 00:24:07.264, Speaker A: The API is available, the full integration is still coming up later this year. And the expectation on speed and signing or key generation is that we can do hundreds of keys per second. And so the goal is that this will sort of serve as a decryption oracle for Ethereum apps. And again, if you want to see the multi chain, like how Ethereum apps can use features of the iC, that's Bjorn's talk later. But this is one of those exact features. And so some uses, I alluded to them earlier in the little speech, but like one is, let's say you want to build an end to end encrypted messaging app on chain and you want to. Yeah, I mean, like, you saw that Facebook messages were sold to Netflix this week.
00:24:07.264 - 00:24:39.736, Speaker A: I think that was the big news. So, like, having end to end encrypted messaging with nobody in between is a very good thing to have, and having it in a decentralized way is even better. So the trick here is that the vet keys, so the BLS signatures can function as the decryption key. We've been through this. So if I, let's say, want to send a message to you, I will encrypt it under your name. Like under your public key. And then you get your encrypted message and then you call out to the Internet computer and say, hey, I need to actually decrypt this thing.
00:24:39.736 - 00:25:04.160, Speaker A: I don't have a private key. And then you say, okay, given this identity, here's the private key for this guy to decrypt his message. And this is the whole point. So like, I think one of the biggest problems with privacy in blockchain in particular is this whole key management problem. So this gets around, all this key stuff. You can just derive your decryption key on demand. Another one is front running prevention.
00:25:04.160 - 00:26:23.724, Speaker A: So I talked about this at the start as well about this block ordering and how you might order transactions to suit yourself or make some transactions or get your transactions in. So if everybody, let's say in the room wants to send a transaction to make a transaction on Ethereum, if everybody in the room encrypts the payload of this transaction to the public key, let's say of the validator, everything is encrypted so that as they arrive, he can order them in a particular way and commit to this ordering such that when this ordering of encrypted transactions is committed to, then they can actually decrypt the transactions in that order to execute them. And there are actually people doing this. There's one group called shutter network that is doing this, but this is also possible on ICP. So you can just do this very for free, basically with this API. Another one is seed phrase backup. So another huge problem in web3 is that people forget to write down the twelve or 24 words of whatever particular recovery for whatever particular wallet they're using.
00:26:23.724 - 00:27:00.600, Speaker A: And so if we had a way to be able to say like, hey, I need to derive secret keys on demand. Exactly. This is what can solve this type of problem as well. So instead of having to write your seed phrase on a piece of paper and put it into a bank vault in Ubs on Banerstrasse or whatever, you can just encrypt your words. Like encrypt your seed phrase, store it anywhere on the Internet. Store it on the, okay, don't store it on the blockchain, but just store it somewhere. And then anytime you need to decrypt it, you can get your decryption key by calling this vet keys Oracle.
00:27:00.600 - 00:27:59.148, Speaker A: Let's say this is actually a community project. So somebody is building this on ICP right now. Another one is the deadman switch. So this is something that's also one of the community projects is working on. So there are some people who, let's say, have a lot of bitcoin and they want some kind of trustless way to be able to pass this bitcoin on to their kids in case something happens. Let's say, in the event that something goes wrong and they don't have the ability or the capacity to pass on their crypto keys to their kids, what they can do is encrypt their keys to, like under the public key, like their bitcoin keys, under the public keys of their kids, let's say. And if somehow this guy hasn't access to a computer anymore, the kids will be able to derive their decryption keys and decrypt, decrypt their daddy's bitcoin keys and have access to his bitcoins.
00:27:59.148 - 00:28:16.654, Speaker A: So this is somebody's working on basically. Yeah. Like all sorts of insurance and. Yeah. Inheritance problems and. Yeah. So people have started, like, as I said, we released the API for this.
00:28:16.654 - 00:28:43.802, Speaker A: People have started building it or building using this already. A few of the projects are here. There was like a document based proof of proof of personhood. There was end to end encrypted forms. So instead of using Google forms, you can use this now or there are others. Yeah, file services that are fully encrypted. There was like a privacy based AI chatbot running on ICP.
00:28:43.802 - 00:29:29.658, Speaker A: There is a nastr client running on ICP with privacy. There was medical prescription. So this is actually pretty serious real world use case that is actually being developed. I think it was in some country in South America, I can't remember where exactly, but they have prescriptions which they need to share across different entities in a particular government. And they don't want things just flowing around in the clear, but they also don't want to have to deal with the key management of, like, okay, the local doctor and the hospital and the pharmacy all need to have decryption keys. And like, okay, am I encrypting to the pharmacist or am I encrypting to the hospital, or am I encrypting to the doctor or whatever? It's like you can just encrypt to whoever and they can derive their decryption key. People don't have to.
00:29:29.658 - 00:30:09.604, Speaker A: It just kind of simplifies the use of privacy in not just blockchains. Capsule was a time capsule. So keeping information in an encrypted form for x amount of time. So it's quite fun to think about how you can actually use time in the blockchain sense. So like, okay, once we reach block number, this decrypt so you can give all sorts of capabilities to smart contracts to kind of decrypt on demand as you like. There were note sharing applications and role based context within gaming communities. So these were the kind of main things that were being built so far.
00:30:09.604 - 00:30:35.154, Speaker A: And yeah, I now kind of encourage you to have a look at the documentation if you're interested in privacy, to actually start thinking about or ask me or talk to anyone from Dfinity. There's a booth right by the coffee place, so grab a coffee and stop by and talk to us and yeah, happy to answer some questions as well at this time. Thanks. Thank you very much, Aisling. Everyone put your hands together.
