00:00:02.440 - 00:00:48.934, Speaker A: Maybe first. So I know a little bit how much into detail I should go who knows about the condab section? The ones that don't raise the hand weren't paying attention with Evo's talk. Who knows about safe? Roughly who uses safe here? Half cool. So I keep it very short on the introductions and then go more about the forward looking. What excites me about the counter section so quickly. Shortly what are smart accounts? Which is really what we should be talking about when we talk about account abstraction. As Eva also rightfully said, smart accounts have been around for a long time.
00:00:48.934 - 00:01:24.594, Speaker A: This ERC 457 is one critical component that will hopefully help with adoption. But it's something that's much bigger than this one standard. So yeah, we've got these two user accounts. One is eoas. It's like this private key, this seed phrase that you know from a metamask account, and the other one is a smart account. And the key difference there is that they're not, they don't have like this hard coded control that are being controlled by private key through easy to say signatures, but they are controlled through code. And that makes smart accounts powerful because that makes them programmable.
00:01:24.594 - 00:02:28.594, Speaker A: So you can program new features, new security implementations in there, and it just makes them more flexible to evolve as also the Ethereum and digital assets ecosystem are emerging. And yeah, that's the reason why you don't do PDF slides because there was like a fancy animation there with an Ethereum logo. But anyways, so yeah, like one of the things that is enabled for that is that you don't have this one key that controls your wallet, but you actually can have multiple keys as a multi signature wallet with smart account. And also these can be reprogrammed. So you might suspect that one of the keys might be compromised. And if that happens with a regular EOA wallet, you would have to migrate all your assets a new account because you would not know if that the key was compromised somewhere. But with smart account you could just rotate keys and make sure that the new key that you then set is properly generated.
00:02:28.594 - 00:03:43.436, Speaker A: And also something that actually Evo tweeted yesterday a little bit about this hype that was coming up last year around the counter abstraction with ERC 457, and it was maybe a little bit too much of a hype. To some extent it was important to get the ball rolling. We now got a bunch of projects working on account abstraction tooling. We've got entire conferences have entire tracks about the counter abstraction that's really important to get this forward, but there is going to be this phase now where we have to look back and see, ok, this maybe is going a bit slower than we expected. There's a lot more challenges on the way than we maybe originally expected. And all the fancy things we talked about from session keys and sponsored transactions and social recovery and all these things, they're definitely non trivial and they will take quite some work. This talk also should go a little bit into what actually makes me excited and what makes me confident that we will go through this valley of disillusionment and how we get to this plateau of productivity over time so quickly.
00:03:43.436 - 00:04:33.816, Speaker A: About safe this is some slide someone in the team put together. It's more like logo dropping, but it serves the purpose of showing that safe is quite flexibly used today. That ranges from Dao treasuries that run on safe like Avedao or venture capital funds like one cakes that use it to sort additional assets. But it's also individuals like Vitalik Buterin himself to usually high net worth individuals, people that use high security solutions that use safe today. But it's also used quite a lot as infrastructure for different tooling, different solutions such as Worldcoin. So the proof of personhood protocol actually use safe as a user account. And yeah, every voirl user is a safe user, although most of them probably don't know.
00:04:33.816 - 00:05:15.336, Speaker A: Similarly, notice pay and corporal are also built on safe as user accounts. And it's just a little bit the size of adoption. Like $124 billion in assets are currently secured through safe. That's bigger than Robinhood, bigger than all of DeFi. Obviously this is comparing Apple to oranges, but it still shows a bit the magnitude. But what is safe actually it's on the one hand the lowest level, it's a protocol. It's the safe smart account, which has been originally created five years ago and some iterations over time.
00:05:15.336 - 00:06:06.314, Speaker A: And this really brings the functionalities of smart accounts. But then to make this more accessible to users and developers, safe also is building some open source solutions on top of that. So on the one side, that's an API and SDKs that just allow developers to more easily use the safe smart account and also build on that as well. There's safe wallet, which is reference implementation, sort of like a showcase what the protocol can do, but for end users. So surfacing some of the functionality and hopefully also triggering imagination of developers what can be done with safe smart accounts. But what we're really after is creating an ecosystem. So not actually owning the end user relationship.
00:06:06.314 - 00:07:15.304, Speaker A: To some extent safe wallet serves their purpose, just to spark a little bit the creativity and showcase what different user groups can benefit from safe. But in the long run we really want to focus on supporting other builders that leverage a safe smart account and optimize for different use cases and user groups. As there will never be one wallet or one asset management solution that serves all the needs of every user group, but there needs to be specialized solutions out there as they emerge. Yeah, so the base functionality, which most people know about safe is the multi signature feature. That's like you can set multiple private keys and a threshold and say like two out of three of these private keys need to sign in order to trigger transactions. But very much safe is, or multisig is like the tip of that iceberg. It's really about enabling all the different functionalities that smart accounts can enable from new signature schemes, from implementing roles and hierarchies, transaction batching allowed in our lists, all that cool stuff.
00:07:15.304 - 00:07:57.414, Speaker A: And that's enabled through the modular architecture of safe. So safe is not a monolithic account, it's actually something that can be extended by developers for parties and implement new features over time. Just two key ones that safe enables is modules. Modules. So you might have your primary keys, the controller count modules bypass that key logic and can have additional ways how the count is being controlled. This can be automations, it can be different roles or permissions you give to another key, another person, but it could also enable things like recovery systems. And then we got guards.
00:07:57.414 - 00:09:22.890, Speaker A: Guards work a bit differently. They add additional validation logic on the transaction. So as you create a transaction, it needs to comply with the checks implemented by a safeguard. And these can be things like allow or deny list where you check on the transaction. Am I interacting with a certain protocol that they might not want to interact with? Actually cool things that people should be building is ways that as a user can say, I want to have all protocols I interact with being audited, and there's actually a standard out there that allows to bring audits on chain and then you could build something that actually would check on chain if a protocol was audited and if it was not, then reverted transaction, and if it was, then it goes through. Yeah, and then things that will be exciting and where we probably see more production ready solutions this year around onboarding. So I mean, one of the key challenges of crypto still today is that you might have applications people want to use, but then you need to tell them you need to download the wallet, and they download the wallet and then they're faced with the seed phrase and you need to explain them pretty much all the things about how to securely manage private keys.
00:09:22.890 - 00:10:39.394, Speaker A: And that's quite some rabbit hole so that people understand how to backup their seed phrase in a way that they can still access it in five years, but no one else in the meantime. And some things people have been experimenting around is social login. So actually using your Google account or your Apple cloud account to log in to decentralized applications and generate a private key that's based on that, usually through MPC technology. So it's not unique to smart accounts necessarily because you could do social login without smart accounts, but you would want to use smart accounts because it might be a feasible solution to onboard, but over time, as people store more assets, probably it's not the best thing to rely on these solutions. And then you need a viable migration path. And that cannot be that you just move everything to a new account, but actually that you somehow reconfigure your account. So the solution would be that you use a smart account that's controlled through an MPC signer that allows for social login, and as people may require more security, they can then add another signer as a multi signature scheme, or they do a quick key rotation and switch to a hardware wallet or something.
00:10:39.394 - 00:12:05.812, Speaker A: Yeah, it was interesting to see these solutions emerge, but I think what will really be properly achieving this onboarding challenge is passkeys, as this is literally everyone that has a smartphone will have the ability to generate passkeys and it's a standard to distribute private keys that's pushed by big players like Apple and Google and they want to get rid of passwords themselves. So they really want to have everyone use passkeys going forward and all the devices will support it. Maybe not the Apple tv, but at least all the phones and laptops out there. There's still some challenges around passkeys also when it comes to blind signing. As you we kind of told people over the years, you should relook what you sign with your wallets. And now we move to passkeys and delete, at least so far, don't really show what you sign, but it's from a pure key distribution perspective and a key generation perspective, I think, where onboarding for crypto is heading towards, and this really requires smart accounts because eoas don't support or like passkeys is a private key format that's not natively supported by at least Ethereum blockchain. And we need smart accounts to enable these signature schemes recovery.
00:12:05.812 - 00:13:08.374, Speaker A: It's a rabbit hole itself, because there's so many possible recovery schemes that could be implemented. A lot of people always say or associate smart accounts with social recovery. So you have an account, you might have some primary keys that you control, but then you want to have your friends and family have like a backup method to recover your, your account. You've seen this four years ago already with argent doing something similar, still hasn't properly picked up. Remains to be seen if it will be in the future. But I think what's going to be exciting also if we have more optionality for users to define how they want to recover their accounts, because it's important. Even though you might have solved the private key generation problem with, with passkeys and people can actually hold their private keys on their own devices, still there are circumstances where people want to recover their account, even worst case scenario in like an inheritance case, there needs to be solutions that also address this.
00:13:08.374 - 00:14:26.292, Speaker A: And yeah, what's going to be exciting, not sure if everyone will be wanting that, but at least in my view, a lot of people that will onboard to web3 will probably go for. One of those solutions is using institutional recovery, such as a trusted entity like a bank, or just the means that onboards them to crypto in the first place, a centralized exchange which already they trust, they already have some identification with, so they could use that as a recovery system. So actually signum licensed bank here in Switzerland has implemented interesting feature for smart accounts where you can bring your smart account. They do KYC. You activate them as a recoverer, and then when you lose your keys, you just go back and say, hey, signum, recover my account and you need to go through KYC again. And then they change your, reconfigure your account. What's cool here is that there are some protections against Signum just going rogue and running away with all your money, both in that they can only rotate certain keys on your account.
00:14:26.292 - 00:15:28.272, Speaker A: That's a protection that they cannot trigger just a transfer on the account. And the other one is a time delay, so you can set the time lock in which the recovery needs to be triggered, and afterwards it gets executed. And in that time lock you can always veto that from your primary keys. Something that maybe is a little bit less known, even within the account abstraction ecosystem so far is keystore rollup that can address things like if you're regular EOA. The cool thing is that you can derive multiple accounts from the same authentication method, so you have your private key and you can actually create more accounts on your metamask wallet. For example, and these are not linked in between them, but still you can all use them easily and just derive a bunch of more. And the other part is that you can actually have the same authentication mechanism used across different networks because it's very standardized.
00:15:28.272 - 00:16:33.530, Speaker A: You can just have the same account also on L2s that you have on Ethereum Mainnet. And that's a challenge with smart accounts because they are smart contracts. They deployed as individual accounts, smart contract accounts on a network. If you want to have multiple accounts on a network with the same scheme, you can do that, but it's still individual accounts. So, meaning that if you change something with one account, it doesn't automatically change the designer, the key, the other account, and especially when it then comes to cross chain. So you might have replicated your account from if you mainnet on optimism and you want to exchange your keys across these accounts, then you have also an additional oracle problem, because this information from what's the new key on Mainnet needs to somehow go to optimism and their keystore comes in into play that basically says let's do the authentication. Or the, it's like singling out a password manager from your accounts.
00:16:33.530 - 00:17:51.096, Speaker A: So you have your password manager which sourced authentication for the accounts in a separate contract. And then you have just the accounts derive this authentication from this keystore contract and they don't have the authentication in the account itself, but just always check with the keystore contract. What's the authentication exactly? And this addresses also the key exchange topic or the syncing topic. But especially when then it comes to cross chain, there can be elegant solutions where you say this Keystore contract is not a contract on layer one, but let's actually move it into a roll up. Not like a full EVM roll up, but something that has limited operations, that is very specialized on just securing or mapping accounts to keys in a way, and then it's much more gas efficient through that. And then you could actually use something like cross chain state proofs to go from a separate L2 and check with that keystore roll up, what's the current setup? And as it changes, it just derives the new setup from there. It's still quite challenging.
00:17:51.096 - 00:18:52.944, Speaker A: How do you actually achieve this cross chain stay proof? Because we need to propagate block headers across networks and it's non trivial and it's just a balance between cost efficiency and speed and decentralization. And there's not really a perfect solution. But that's probably where a lot of experimentation will be around this year. And I know that big players are like base or scroll are very much committed to finding solutions there this year. Then another more niche thing, but which I also find interesting how smart accounts can provide value this year is around trash file transition. So that's something that we've seen now in the last month is that or even in years, you can start with neo banks not supporting crypto and then you've got the users asking for crypto, which leads them to implement in custody trading. So all the crypto is actually on the balance sheet.
00:18:52.944 - 00:19:43.912, Speaker A: They usually support a few different coins that they feel confident with from a regulatory perspective. And yep, then it has nothing to do with custody or anything, but it at least gives people exposure to that. But then the next step is to actually open these wallets. Have designated user wallets, which then allows them to off ramp and on ramp crypto to their own wallet in there. Then next step is that they have users that are asking for some niche assets, some meme coins, and they don't want to have them somehow on their balance sheet. So they enable self custody wallets. So actually have to give a key to the users and say, if you want to trade these meme coins, do that on your self custody wallet there.
00:19:43.912 - 00:21:05.344, Speaker A: And then they usually realize that it's quite some shift from having people use a custodial solution to a complete self custody solution with a private key, which then makes them think around how can we leverage smart accounts where it kind of brings users a little bit more back into the control of the neo banks, be it as a recovery feature, for example, or just for having a bit more handholding involved. And then finally gnosis pay is going to be interesting. And I got a card here that's actually like a Visa card. This is built on safe, so it leverages the smart account there. And the cool thing here is, compared to other crypto cards, it's not something where off ramp my crypto and I top up some debit card, but it's actually a full self custodial card. So all my assets are on the safe, they're on chain, and only when I pay in the supermarket, actually off ramp is happening at, I think, one of the best off ramping fees in the industry. That's enabled by having smart accounts that allow the user to give like a certain daily limit to gnosis pay, which is then integrated into the Visa network and allows them to then avoid double spending where you pay in the supermarket and then don't repay them on chain.
00:21:05.344 - 00:22:07.150, Speaker A: But you actually have this three minute period where gnosis pay can withdraw from your account before you could send out from your safe. And this is just interesting solution to allow payment providers to add value to users without actually having custody over the assets. That's usually a problem with anyone that wants to provide financial services. Once you have custody over user assets, then it comes with all this long tail of regulation and compliance requirements that people usually don't want or just adds to the cost. Yeah. Some concluding thoughts. And it's, in a way, a theme that is across all these use cases that are shared, is that one of the things MIT accounts will be doing is fundamentally change how ownership works when it comes to crypto is so far we had this saying of not your keys, not your crypto.
00:22:07.150 - 00:23:18.624, Speaker A: So people would either go full self custody and they would manage their own keys and they had no third parties involved, or they would just rely on a third party. And sometimes they get dragged and sometimes they don't. But that was the current paradigm. And I think smart accounts will fundamentally break up this dichotomy where it will be much more, there will be much more solutions that are somewhere in between in a way that, like gnosis pay, where you have maybe a certain trust assumption up to a certain daily limit that goes to the network, something like a signal where you give certain functionality to third parties in a way that's more. That's still protected, or there's some veto rights involved and so on, or some aa based solutions that neo banks will be using to handhold their users into the web3 ecosystem. And yeah, with that, if you want to learn more about safe, go to safe global or onxafe. And I'm not sure, I think it took five minutes too long, so not sure if I can do questions.
00:23:18.624 - 00:23:20.004, Speaker A: Yes, thank you.
00:23:20.464 - 00:23:33.544, Speaker B: So thank you very much, Lucas, for such inspiring presentation. And unfortunately, we don't have time for questions right now, but we can also reach Lucas altogether of the room outside or through Lincoln. But we thank you.
