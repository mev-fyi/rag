00:00:00.280 - 00:00:28.914, Speaker A: I'm studying the mempool mainly for Ethereum and L1, because it's the most secure evm we have right now. Let's see what happens with the bitcoin l two s, who knows? Okay, excellent. So, hello, mempool. Push boundaries. In Bokro Lamate, we are going to explore the mempool territory. So, what is the mempool here? Someone knows what the mempool is. Can you put your hand ups? 123456.
00:00:28.914 - 00:00:59.524, Speaker A: Okay, it's a lot. Excellent. It's the first time there is more than the 50% knowing the mempool. But for the others that doesn't know is the ethereal space where the transactions are waiting to be executed into blocks. So, to interact in the Ethereum mainnet, what we do usually is to send the transactions to RPC. This is validated by the onnode that we are interacting to, is received by the queue of this node, and then is integrated into his own mempool. There is no one mempool.
00:00:59.524 - 00:01:33.754, Speaker A: The mempool is something that is shared between all the nodes. And sometimes one transaction never reach many, many, many nodes that are in other parts of the planet. So there is not one mempool. The content between all the mempools that exist is about 20%. At the higher rate is 80%, but there is always at less than 20%. That, as a standard rate, is unique for each node. So, what happens in the mempool? The user uses a wallet and then interacts with the mempool.
00:01:33.754 - 00:02:14.008, Speaker A: If we forget all these inner transactions. So each node will receive the transaction from the user into a local queue. This will be validated by the own node that says, okay, this user, this account has balance the non Csvalid, the signature is correct. I will include into my mempool and I will spread it broadcasting. So, for what is the mempool today, the mempool behaves like a waiting line, that the first ones are the ones that are paying more. Okay, so if you want to pay more, you get first in the blocks. Everybody knows more, less how this works.
00:02:14.008 - 00:03:07.486, Speaker A: But why this should be like that, I don't agree very much. I don't know if somebody from here went to Cuba. In Cuba, there is an ice cream store that is called Copelia, where in one line you pay cheap and in the other line you pay like ten times more. Of course, people, tourists go to the line that pays ten times more, that is cheap anyway, and you get your ice cream. But why, why this should be like that? Well, the same that is like strange for us because it's a clear example is happening right now on the mempool and ethereum. So let's have some fun. Have you ever thought about the hiding features of the mempool? I mean, the mempool is reliable, it's a source of truth, but not in blocks, because we say that the blocks is a unique source of truth of the blockchain.
00:03:07.486 - 00:03:39.564, Speaker A: But the main pool is still being a source of truth. It's broadcasted, it's cheap to don't say almost free is reasonable fast. 0.1 second to have a transaction that is looking very good within the 80% of the nodes. That is fast for the size of Ethereum. It's a clear path. Sender received no hijacking because all the protocols that we know until today that are easy to use are subject to being hijacked.
00:03:39.564 - 00:04:25.930, Speaker A: No spoofing at protocol level. So isn't this beautiful? So what we did, I myself and my company, we invented something that is called rolamate. We solved the expensive gas and slow speed problem on ethereum l one mainnet. So we took this feature that we are using the mempool for this to invent an eat payment metaprotocol for ETU mainnet to send crypto payments with at least 95% discounts on gas fees. And of course this also works for ERC 20s. Leveraging these two mempool features very low gas fees and reusing knowns. So at the end of the day, the user just connects with mainnet deposit, pays and withdraws, normally using any wallet.
00:04:25.930 - 00:04:56.804, Speaker A: So relying on the mempool capabilities, the relayers that are denotes capture. All these transactions are part of our metaprotocol as well because we put some code on them and we validate the transactions and we send them to a different chain. A side chain that now can be an avalanche chain, can be an orbit or any other chain that also could have no gas in a decentralized and permissionless way. I'm going to show how this works a little.
00:05:01.944 - 00:05:34.154, Speaker B: Welcome to the first demo video of Rolla Mathie. On the right side, we can find a brand new wallet of a store called Mathy store. As you can se, this wallet has zero f. On the left side we have a wallet that already has 0.0065 f that here is rounded up. But in metamask we can see the exact balance trough this demo, we will use the rolla make payment protocol to send ETH from the left wallet to the right wallet without paying gas for the ETH transfers. So the first thing to do is a deposit of ETH into the Rolla mathy metaprotocol.
00:05:34.154 - 00:06:17.102, Speaker B: This transaction should be included into blocks so we are going to pay the gas for it that luckily now is cheap at $0.26. We need to wait for this transaction to be confirmed so our deposited ETH will become available to use in the role of mathi payment protocol. Once this happen, we will be able to send payments using Ethereum mainet with at least a 95% savings on gas fees. But for this example, all the ETH transfers will be completely free since we will not be doing a high demand. Feel free to ask how this works in the comments. Now we are in the pay section so we will start to send ETH from the left wallet to the right wallet. This Dapp is just a transaction constructor that let the user configure an ETH amount in the destination wallet.
00:06:17.102 - 00:07:04.464, Speaker B: Then the transaction is constructed with low gas, just enough to be valid, then broadcasted tufthememenple and finally captured by our Rolla Mathie anonymous node that will process it without need of a confirmation. Let's repeat the process as many times as needed to transfer all the ETH from the left wallet to the right wallet. As you can see, the left wallet ETH balance in Ethereum mainet remains always the same and all the already processed transactions are in a pending state. This is because Rolla Mathy metaprotocol doesn't need the transactions to be confirmed, we need them just to be broadcasted. A broadcasted transaction information is as valid as the information of a confirmed one, but not permanently since is not included into any blocks yet. For the last ETH transfer of this demo, we are going to show you how to construct your own transaction manually. You will see how it will work as well.
00:07:04.464 - 00:07:49.304, Speaker B: This permissionless, trustless and decentralization level will help the developers to integrate Rolla Mathie very easily into their products. First we configure a transaction to the rolomathey smart contract for zero ETH value, but in the hex data which contains the ETH transfer information in the Rolla Mathi metaprotocol format we configured a 0.001 f transfer. Then we configure the gas price to be so low to not be processed, but valid enough to be accepted by the RPC and broadcasted. As you can see, the transaction goes through and is confirmed for both wallets. Now it's time for the withdrawal so the Mathie store starts it. As this transaction needs to be confirmed, it will pay a gas fee, which in this demo version we are handling for security reasons.
00:07:49.304 - 00:07:59.304, Speaker B: Finally, the mathy store receives the withdrawed balance and thanks to Rolla Mathi payment protocol, no one had to pay gas fees for any of the wallet to wallet ETH transfers.
00:08:01.844 - 00:08:37.564, Speaker A: Welcome to the well, this is a demo that that is working. This was made in October of past year. Right now we mounted a wall metaprotocol, a virtual EVM EvvM on a sidechain. So now we are going to use smart contracts, a contrast structure and many other use cases of EVM. And people can build their own metaprotocols on the same technology that we are using rollamate. And now I want to show another use case for the acid chain protocols.
00:08:37.644 - 00:09:01.786, Speaker C: Start deploying acid chains. Acid is pushing Ethereum's scalability to the maximum while providing faster transaction processing. Ideally infrared gaming, daos, token swaps, interoperability, defi data sharing and decentralized exchanges. So which is the problem that we are facing. Ethereum scalability should limit transaction speed and volume, leading to network operations.
00:09:01.810 - 00:09:14.434, Speaker A: So basically here we want to give more scalability to Ethereum without changing the infrastructure. So we think anyone can leverage their own also a virtual machines on the main pool of Ethereum.
00:09:14.474 - 00:09:17.414, Speaker C: One of changes and the creation.
00:09:17.834 - 00:10:06.954, Speaker A: Every protocol, every blockchain has to have their own memory. It's like making a highway or roads for your city every time you make one and don't use the main road that is there. So now what happens is we have slow speed, lot of congestion, hyperghast, and we have layer one, the users and the main mempool. What we propose here, and made a proof of concept was what happens if we have a layer 1.5 that is sharing the main mempool with Ethereum l one, just having different gas specifications. And the tradeoff will happen anyway. So what happens here is you have a standard node, they shared it mempool, a acid virtual machine.
00:10:06.954 - 00:10:26.140, Speaker A: That could be any you will have. In this case we use cartesian hard hat. We have the metatrans sections in the layer 1.5 and then you have checkpoints that is the same that the roll ups does. But this will happen organically. So what you will have the acid virtual machine, you can. Well, here is just a table of contents.
00:10:26.140 - 00:10:42.676, Speaker A: And then I want to show you the last example of what we just done. That is streaming video and radio using Ethereum l one node without paying gas. So we were literally welcome to patio.
00:10:42.780 - 00:11:32.976, Speaker D: Station, stream video on radio using Ethereum l one nodes as infrastructure without paying gas. How this works you can cast, you just need to connect your wallet using your private key input, audio or video. Then the transactions will start going out through the RPC node and then this goes to the main pool and be spread all across the blockchain infrastructure using the nodes. So to view is very easy. You just need to put the station address, tune in and then you start consuming it directly from the mempool API or the node. Enjoy and donate so how is the tech stack? We use incremental gas plus decremental transaction weight. This lets us do 1.2
00:11:32.976 - 00:12:02.728, Speaker D: megabytes per minute. This means high processing probability zone avoided and we are making big data weight transactions with low gas fees. And then we decrease the data weight and we increase the gas fees so we avoid this to happen. So congrats. We're in l one. No no no. We are delving into a real solution for a grow up problem, communication censorship by powerful groups in an out of band scenario.
00:12:02.728 - 00:12:50.194, Speaker D: This solution offers a clean and readily available method to warranty and secure authenticated communication. So let's go with the demo guys. Here is a demo where first a caster will put his private key here for the proof of concept and then he will be uploading his input file that will be a radio or audio and then he will be sarcastic. The transaction will go through the mempool and he can receive donations and then we can see a user that is consuming this information directly putting his address in the nav bar of patio radio. So enjoy it and thank you.
00:12:52.574 - 00:13:51.108, Speaker A: So well, I will change to the presentation. So the retribution compromise is we know that this feature was not designed as it is, so it should be considered as a fair use commitment, at least as intentions for any developer until this is incorporated. I'm talking with the Ethereum foundation about this. They are worried a little of course, because it can finalize in some spamming in some block out of the mempool of l one. So we need to find some way to retribute paying gas every entrance sections because with all these protocols I was showing you, you are not paying any gas on l one and you are consuming in high demand nodes if you want. So also don't use future nodes because there is a few vulnerabilities in Ethereum l one I shouldn't disclose, but I will. So it's like you can use any known.
00:13:51.108 - 00:14:39.174, Speaker A: In fact, you don't need to use consecutive nouns and there is some attacks that you can accumulate nonsense in the future. Then you just send one to reactivate all of them and maybe you can send 100 transactions just in the same block. I won't set balint transactions to transmit and well, this is a little more of information and well have a great metaprocal development. Shorteney, this is this QR. I don't remember where it takes you, but we'll be to some place that is good. Are you talking to me in Twitter? And well, we are developing metaprotocols on the l one mempool, on any mempool. So do you have any question, are there any questions in the audience? Oh, I think I saw two.
00:14:41.154 - 00:14:54.214, Speaker E: I just wanted to ask if that's also going to be applicable in some moment if L2s also get a little bit congested and a little more expensive. Would that be also applicable on L2s?
00:14:54.584 - 00:14:55.104, Speaker A: Sorry?
00:14:55.184 - 00:14:58.784, Speaker E: The last part, your protocol, would it be usable on L2 s?
00:14:58.944 - 00:15:42.560, Speaker A: Two s? Yes, of course you can use it on l two s. And in l two s is extremely more, let's say more free. You can say more free, even more free, because l two s usually has extremely high gases prices. I mean, the gas at the end of the day is low, but the gas price, the gas limit and the priority fee are extremely higher than on l one. I mean, in quantitative matters. So yes, you can use it and this will be even better for you. But we are doing all this on l one because we feel is the biggest, strongest and more prepared mempool, bitcoin also.
00:15:42.560 - 00:15:53.894, Speaker A: But we want to do all these things in, in ethereum. Now we have one more question.
00:15:54.234 - 00:16:19.184, Speaker F: Hi, I wanted to understand a bit more, like, if everyone starts doing this and sending a lot of transactions to Mempool, et cetera, that's going to lead to some sort of spam. But are the transactions going to go through or is it going to get congested as a normal transaction? If it's not just yourself but 10,000 more users doing all of this and broadcasting and streaming and doing all of this stuff.
00:16:19.264 - 00:16:49.756, Speaker A: Yes, well, that's the thing that is worrying. Ethereum at the moment is a fair question. Your transactions should pass after you reuse the nodes. I didn't specify that. That's why I asked if many people knows or not how the mapple works. But you can always reuse unknowns. So people use this function only to cancel transactions sometimes, and they pay a little more gas in gas price.
00:16:49.756 - 00:17:35.934, Speaker A: Sometimes it's less gas in the real price because there is a kind of feature which is a vulnerability. I don't know if I'm live on Internet, but. Well, it's a vulnerability that in the protocol they planned to tell you, okay, if you increase the gas price and the priority fee by 10%, you can replace your transaction. They found this, I don't know who they, I'm sure was someone in a chair that said, let's do this, that this happens with these kind of decisions to make. Okay, you will reuse these notes. You already consumed some data and processing from the nodes. So the trade off will be like, you pay 10% more and we hear it to you again.
00:17:35.934 - 00:18:21.330, Speaker A: But if you decrease the gas limit, your transaction will pay less. So will you start doing high demand transactions with a lot of data. Maybe 40 kb that you can send on a transaction is almost the limit. And then you send another one with 10% more gas price priority fee, but 10% less data. This will pass through and you start doing this. This until you have a transaction with gas limit in 21,000, that is the smallest, you will have about eight of gas price and two on priority fee. And this transaction is never going to be processed.
00:18:21.330 - 00:18:58.266, Speaker A: Because the gas prices are always like 1920 to 4100. But if these get processed someday, you will pay about $0.60. But then if you are doing this and this and this and this, you will have like 100 pending transactions. But the first one that is taken to calculate if the transaction could go or not is the first one. So the next ones are part of the first one. In the summary of how much money do you have in your account to take it off or not. But in the first one, you can replace it to a transfer.
00:18:58.266 - 00:19:18.734, Speaker A: So you get out all the funds that were collateralizing, all the 100 transactions. And this one go through. And the next one will be automatically dropped, cancelled. A transaction never dropped. Be careful. If you get money in your wallet again, all day will be realized, maybe and process it. So you have to be careful about this.
00:19:18.734 - 00:19:25.274, Speaker A: Thank you so much. German. Thank you. Thank you also to the audience.
