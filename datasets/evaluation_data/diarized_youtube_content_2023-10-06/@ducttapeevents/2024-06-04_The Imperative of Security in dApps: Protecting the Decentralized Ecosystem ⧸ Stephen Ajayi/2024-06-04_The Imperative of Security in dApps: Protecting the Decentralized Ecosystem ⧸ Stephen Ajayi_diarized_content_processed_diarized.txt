00:00:04.960 - 00:00:40.564, Speaker A: Hi everybody, thank you very much. My name is Stephen Ajayi. I'm the technical lead for the DIAP audit team attacking. I have about ten years of experience in offensive and defensive security with a more focus on the offensive side of security. In the past I've engaged governmental parastatas on forensic engagement and also writing engagements with the police force. In the spare time I write enjoying script to poke around the blockchain. I also write fictional content I share with my family and friends.
00:00:40.564 - 00:01:49.004, Speaker A: All right, so the primary objective of this talk is to remind us of the importance of adopting proactive security approaches in web3 security as we are building in the space. So before we dive in, I would like to tell you a little bit about our our company attacking. We're a global cyber security company dedicated to helping organization carry out security audits. So like the app audit, smart contract audit, layer one audit and so on, we pride ourselves as the security bodies to our client, making sure that your security auditing process is actually seamless by becoming part of your project and ensuring that there's no master key that can break your lock. So to keep our clients safe and sound, we offer a range of platforms like the Akin IO which is our main website where you can find the portfolio of all the services we render. Then the akin proof which is our bulk bounty platform, the CEO live, our security rating platform, extractor, our smart contract monitoring and incident response platform. Then the Akin AI which is our native token.
00:01:49.004 - 00:02:24.140, Speaker A: So let's dive in. So just like web two technologies, web3 is not a standalone component as we know it. It has different layers, each having their own advantages and disadvantages. But most time when we talk about web3 security we merely focus on the smart contract security which is actually part of the application layer. But there's also other layers like the data layer, application layer, network layer and so on. So no layer in the blockchain is actually immune to security issues. In other words, all layers can actually be hacked.
00:02:24.140 - 00:03:24.366, Speaker A: For example, the infrastructure layer is the home to virtual machines, services, messages and much more whether you're hosting it on premise or in the cloud. So this layer runs on operating system like Linux and Windows, which is prone to zero days vulnerability. Plus we also have to watch out for denial of service attack that can crash your system due to resource overload. There's also the application layer and this is where you interact with your smart contracts, your APIs, your wallet bridges and so on. This is actually the easiest and the most common target because it is directly accessible to users and attacker and issues range from smart contract vulnerability to phishing attack, to access control issue. So because web3 still relies heavily on web two, so it also inherits web two security issues like the Oauth top ten for mobile web application API and so on. So each of these layers have their own unique security challenges.
00:03:24.366 - 00:03:59.074, Speaker A: Even with the numerous security benefits the blockchain is bringing to us, because human are in charge of all these layers and humanity remain the greatest threat to security. So no matter how secure the ecosystem is, its security is still dependent on the mindset of the architect. So some people might have the idea that since blockchain is running, since your application is running on the blockchain, it's 100% safe. Right. But we need to debunk this myth. So. Okay, all right.
00:03:59.074 - 00:04:35.540, Speaker A: So it's actually a common belief that blockchain is impervious to attack by nature. Yes, blockchain does offer security features like the decentralization, but it is not immune to security vulnerabilities. In fact, the decentralized structure actually introduced new challenges. For example, let's say a majority of nodes in your ecosystem is being compromised. The entire system integrity can also be at risk. So there's also the concern about the flaws in the underlying code. That's a smart contract or the protocol which can be exploited by attackers.
00:04:35.540 - 00:05:18.922, Speaker A: So another core promise of the blockchain is that of its immutability, which means that once data is recorded, it cannot be altered. But this feature can also be a downside in security. I mean if there's a vulnerability in the smart contract, an attacker can devise exploits to exploit this vulnerability. They could cut away with millions of dollars and the damage cannot be undone. And this is why sorrow auditing and secure code practices is actually crucial before you deploy to the mainnet. Another contrary believe is that the blockchain is the Wild west where we can do any how we like. But the blockchain is not actually a lawless frontier.
00:05:18.922 - 00:06:16.862, Speaker A: In fact indefy and some lending protocol, they are robust regulatory compliance mechanism that is being built into the technology. Users are subjected to know your customer and anti money laundry protocol when you're registering from some of these applications. And this ensure that your transactions are transparent and auditable. And it's also providing like a comprehensive audit trail for the application. So now, blockchain, we already know that it holds immense potentials. It's also crucial for us to understand its limitation and also the vulnerability now the that we have debunked this myth, I think it is fair we look at the current strength landscape in the web3 ecosystem. So in the web3, the focal point for cybercrime right now and threat is magnified due to the inherent transparency and the interconnectedness of blockchain technologies.
00:06:16.862 - 00:07:14.264, Speaker A: Just like an attacker can look for security vulnerabilities in application and external network assets, in web3, defined flaws in smart contracts. And once a vulnerability is being identified in smart contracts, attacker can cart away with millions. Then there's also the issue of social engineering. Attack is actually a concern across all cyber domain. It's not just blockchain, but in web3, the taxes have actually evolved because of the financial incentive behind smart contract and blockchain as a whole. So attacker frequently use social media platform to manipulate the market sentiment or trick user into revealing their private keys, right? Then there's also the issue of insider threat in the decentralized environment. Just like decentralized environment, when the threat actor can be like a malicious insider feeding external threat actor information about your system, about your application.
00:07:14.264 - 00:08:27.936, Speaker A: In web3, internal threats can be from the project founder to the developers, even governance token holders that have influence over a project direction. So these insiders can actually exploit their assets for personal gain, affecting not only a single organization, but the entire ecosystem linked via smart contract and shared protocol. There's also the issue of denial of service attack, which is also relevant in web two, but also in web3, because denial of service attack can be directed to key infrastructure node that's running, for example, public blockchain access point or decentralized finance platform. And these attacks are aimed to disrupt services, manipulate market position or erode trust in the platform stability. Then the whole concept of blockchain has to do with interconnected protocol and the integration of multiple protocols increase systemic risk. So a vulnerability in one protocol can have like a knock on effect on another. So especially in DeFi space, whereby protocols are often considerably linked.
00:08:27.936 - 00:09:45.344, Speaker A: So there's also the human error. Echoing the broader cyber security trend, human C remain a significant risk factor in the web3 space, right? According to several reports, a substantial percentage of security breaches are due to user mistakes, such as mistakes in smart contracts, misconfiguration infrastructure, your wallet, or failure to securely manage your private keys, and so on, right? And this actually underscores the need for user education and the need for us, for builders in the web3 space to build foolproof system design in decentralized application. Now, if this gets you thinking, how secure am I? Then I think your head is in the right space. The strategic approach will be to start raising your current security level right on a scale of one to ten, where is my organization at? I tell you, knowing that it's the one is absolutely fine, but zero can be disastrous. So you want to start by assessing your current security practices and against the industry best practices, like maybe the CIS benchmark. And this is going to give you like visuals of the gap that is present in your estate. So with this knowledge at hand, you can then determine and plan actionable step to close them.
00:09:45.344 - 00:11:17.558, Speaker A: So one of the ways organizations do assess their security posture is by carrying out security audits. So, and that is actually the traditional approach, right? It involves conducting security audits like maybe diap audit, smart contract audit, and so on, which is going to actually look for potential security issues in your application. So this typically this strategy actually involves you either using your internal team or an external security company, like hacking. While the usage of internal team is actually, it can be effective sometimes, but is crucial to engage an external auditor who offers a fresh perspective similar to how an attacker is going to view your organization is going to view and test your application because I mean, attackers have all the time in the whole world and they have several tools they can use to test your application that you might not have internally, but external auditors also have. So utilizing both automated and manual approach to look for security is actually a way to go by conducting your security audit via external auditor. So while this approach is actually great, but given the complex of the evolving threat in the web3 space, it's actually essential for us to retain rethink our security approach, right, because there are new improvements in the space every day. And given the diverse, sophisticated threat and smart contract vulnerabilities, just in the early hour of today, Velcore custom product smart contract got hacked for, I think about $10 million.
00:11:17.558 - 00:11:45.976, Speaker A: So there's always rising several security issues. Like there's also the issue of social engineering. ATT and CK. And ATT and CK has come up with really great pretext to actually exploit users. So as organization developers and security teams, we need to adopt proactive approach to stay ahead of our security game. And to beat an attacker, you have to actually think like an attacker and you have to even think more than an attacker. So there's a need for innovative approach.
00:11:45.976 - 00:12:45.856, Speaker A: So to your amusement, one of the innovative approach we can actually adopt is the assume bridge approach, and it encourages organizations to actively simulate attack through red teaming exercise and purple teaming exercise to test not just your defenses, but the effectiveness of your incident response strategy. So this is similar to like carrying out a fire drill. It's not only about just testing your defenses, right? It's making sure that you're ready whenever a security breach actually occurs. So it's making sure that your organization response is very sweet, effective and well practiced. Then another thing is every organization actually require a log management system that is going to give you real time insight into your organization. It's going to give you a comprehensive view of your organization. The extractor is a hacking web3 scene that provides continuous smart contract monitoring correlated with user behavioral activities.
00:12:45.856 - 00:13:38.250, Speaker A: That is going to give your organization a view to dictate and respond, respond to anomalies before they evolve into full blown breaches. So in assuming this, in adopting this assume breach approach, you are not just cultivating the security centric culture, but you're shifting the organization mindset from when, from if a bridge is actually going to happen to when the bridge actually happens. So this is actually going to in turn foster continuous improvement in security practices and, and your approach. So yeah, another approach is actually the zero trust approach. This approach is actually initially developed by Forester and pivot on a single principle, never trust, always verify. Right. The concept behind this zero trust approach is that at every point you need multiple layers of security.
00:13:38.250 - 00:14:08.504, Speaker A: Serious authentication and also access control mechanism has to be implemented. But before you can secure your data, the first thing you need to do is you need to identify and classify your data, right. You need to know what your data is and where they are. Right. In web3, this might involve understanding what pieces of data are actually critical to your organization. Then you apply classification to them based on their importance and sensitivity. Then the next thing is to actually carry out data mapping.
00:14:08.504 - 00:15:06.176, Speaker A: This might involve various organizations like your network and engineers or your application developer, which can give you like a comprehensive view of how data flows in your network. This is going to help you identify those critical data points that can become vulnerable, and then you can apply stringent access control on them. Then up next, you need to design your network with strict policies, right? You can't be running a flat network. So in web3, this might means that you're setting up some private blockchain environment or specific nodes with enhanced security mechanism. Zero trust approach is all about multiple layers of security, stringent access control that should only be granted based on explicit needs. This means that you are setting up policies that is going to determine what can access what and under what condition. There's also the continuous monitoring.
00:15:06.176 - 00:15:51.328, Speaker A: Actually, I cannot overemphasize the importance of log management in web3 because you need something that is going to give you like real time surveillance to dictate and respond to anomalies as they occur in web3 space. There are a lot of strategies. Actually this is an open invitation. If you want to learn more about these strategies, there are more specific advanced strategies that can be tailored to your approach based on the kind of application you have internally and based on your environment, kind of environment you're running. So next thing I'm going to be talking about metamasknap. Just briefly. This is just like an add on presentation based on the security research we carried out on metamasknap.
00:15:51.328 - 00:16:42.520, Speaker A: So as the great philosopher in Spider Man, Uncle Ben, once said, with great power comes great responsibility. I say with new technology comes new risk. So metamask are extension that enhance metamask are extension that enhance the metamask functionality. So they allow you to carry out custom operation within the wallet through the isolated JavaScript environment. So they allow you enable interaction with different blockchain network, expanding the metamask RPC API and this is achieved using the secure ECMAScript, which is the isolated JavaScript environment in your browser. So the Snap has three layers of security. The first one is the isolated layer, which makes sure that your snap actually operates within a confined area within a virtual space.
00:16:42.520 - 00:17:44.180, Speaker A: And this prevents the snap from interfering with other snaps because you can have more than one snap connected to your metamax wallet. Then there's the lava mode, which is actually another security feature that is designed to protect against supply chain attack. For example, in an instance where malicious code is being inserted into trusted components, it controls what the code can actually do so that it won't be able to carry out unauthorized action to any network request or unauthorized action to your private keys. Then the last layer is the secure Ecmax script, which for the tightens the security of your metamask snap. Then it has three main features, the lockdown, which freezes JavaScript objects to prevent tampering. Then the compartment will make sure that your metamask is not functioning beyond its own virtual space. Then there's also the endowments that provide control resources that stellar to each snap's need.
00:17:44.180 - 00:18:39.500, Speaker A: So the security feature actually works hand in hand to provide a robust security framework for metamask Snap and make sure that the snap is actually reliable within your metamask wallet. So there are different types of metamask snap. There's the apilab snap, which is integrated with metamask to provide AI protection against crypto scam. It also does some sort of monitoring and alerting. Then there's also the multi x nap, which is an add on to metamask that help you import the multiverse x wallet into your metamask so that you can use it to carry out transactions. So even though the metamask has their own unique security layers, most times mistake happens in development and security audit is actually crucial. And for you to even be able to integrate your snap to metamask, you have to carry out a security audit.
00:18:39.500 - 00:19:19.454, Speaker A: So there's been a lot of security concern that has been reported by prominent audits, companies like hacking. And this is actually due to mistakes actually made by developer during development. So one of them is this checksum on the integrity on the mind. So this is the cryptography checksum is just like a digital fingerprint for your file. It helps make sure that the file has not been tampered with. So if an attacker changed this fingerprint without being noticed, they can add barcode into it, and you would not even know that the code has been added. So another issue is the snap execution timeout.
00:19:19.454 - 00:20:13.024, Speaker A: For example, if the snap takes too long to do their job, sometimes they can hog the computer network resources and may slow down your computer and might even cause little denial of service in the browser. Then there's the issue of flaw in sandbox security. Sandbox is the safe space where your metamask nav is actually functioning. So if there's a problem with this sandbox, bad actor can actually break out of it and access critical functions, which you definitely don't want to happen. Then there's the issue of inconsistent user verification process that has to do with authentication and authorization flaws. If these authentication and authorization processes are not done properly, attacker can actually use them to gain access to your private keys and maybe control other sensitive information. So a way to dictate this is just some of the issues.
00:20:13.024 - 00:21:19.444, Speaker A: There are lots more. And the way to detect them is actually by carrying out security audits before or by making sure that the snap you are integrating into your metamasknap is actually audited before you're using them. Then another important thing we need to know about metamasknap is everything about metamasknap is all about permission. So as a user, whenever you want to integrate any Snapchat into your metamask wallet, you need to make sure that you check the kind of permission that has been given to that metamask snap, right? There are some permission like Snap get VIP 44 entropy and snap get VIP 32 entropy, which can give, for example, if there's a malicious snap that's using this permission and you integrate them to your metamask wallet. They can give the metamask snap ability to retrieve your key pairs and your private keys. So definitely it's going to lead to loss of funds. Another permission you need to look at is the endowment transaction insight.
00:21:19.444 - 00:22:29.894, Speaker A: This is just giving. This is going to give a malicious snap insight into transaction before approval, and this is going to result in a front running attack. This permission should actually not be granted unless they are absolutely necessary for the snap to function properly. So to enhance security, as developers, you need to make sure that the permission you're giving to your snap via the Snap manifest JSON file is actually needed. And if they are not necessary, there's no point using it. And as users, you need to make sure that you check this snap's permission to make sure that they are absolutely required by the extension, or else you are going to be introducing security vulnerabilities into your metamask wallet. So for more information about Metamask Snap, there's a link on the slide which has to do with our hacking Snap security research, and also the link to metamask security guidelines and a blog I love so much about Metamask nap by Bruno and Kiwi.
00:22:29.894 - 00:23:29.866, Speaker A: All right, so no matter how minute or tiny the technology is, they come with their own security, unique vulnerabilities. And we need to remember that security is not a one time thing, and we need to adopt proactive approach towards security and continuously monitor our assets to stay ahead of the attacker. So having this in mind is going to increase our security appetite and force our continuous security within our organization. So we need to stay vigilant and stay ready. So, for comprehensive audits, if you're looking at introducing proactive approaches based on your organization or based on the assets you have online, you can reach out to us via our website and via our social. Thank you for your attention. All right, do we have any questions? Okay, yeah.
00:23:29.866 - 00:24:00.814, Speaker A: Thank you. I wonder if there is a tool for monitoring smart contracts. Can you suggest some? Yes, there's a tool, extractor. Extractor is a tool that gives you real time insight into your smart contracts, maybe the critical functions, and also respond to incident on the go. So, yeah, there are others like Forta and so on, but attackive, we have our own. So which is the extractor? All right, thank you very much.
