00:00:02.440 - 00:00:23.554, Speaker A: Hi, everyone. Okay, we're going to start this a few. This is fading in and out a little bit. This microphone. Okay, we'll see how we go. Maybe we have to drop to another one. Okay, so we start a little bit early because there's lots to cover.
00:00:23.554 - 00:00:52.104, Speaker A: So this is a talk about the future of apps. And we're going to talk about basically just working two minutes ago. 1 second. Let's try this again. Yeah. Okay, so what exactly are. Is there another microphone? Because I think it's.
00:00:52.104 - 00:01:09.168, Speaker A: Thank you. Thank you. Okay, this is a wired one. That's probably better. Okay, so what exactly are apps? So we all kind of know that apps are. Gosh, this is not working there. Yeah.
00:01:09.168 - 00:01:58.694, Speaker A: Programs in user space. Okay, so programs in user space kind of look like this. They are command lines, but they are also, over time, we've become to know that apps really kind of. Oh, my God. I know exactly why this is happening. Right, let's just do this. So, I think there's, like an IRQ conflict when you have the Thunderbolt in and also the clicker thing before.
00:01:58.694 - 00:02:20.784, Speaker A: I've had that before. So we'll try again. Okay, what exactly are apps? Okay, so apps are programs in user space. They look a bit like this. This is a command line app. But over time, we've become used to apps looking more like this. What these all have in common is that they all are squares and they all live on your phone or your desktop or something like this.
00:02:20.784 - 00:03:05.132, Speaker A: Apps are designed to fulfill a goal. So whether you're staying somewhere, traveling somewhere, or you just want to be entertained, you click an app to achieve that goal, and then you go into this immersive world, which is all about fulfilling that gold goal. So apps are also human interfaces into data. So this is binary code, and you can't read that because you're a human. So instead, someone has to come along and make a user interface, which translates the binary code into an emotional experience that you as a human can understand. Now, talking of emotional experiences, if you ask a backend designer to try and design you an emotional experience, a backend engineer, you get something like this. And that's because engineers always optimize for efficiency.
00:03:05.132 - 00:03:22.044, Speaker A: They like to cram as much data into the app as they possibly can. It's the way they think. If you ask a designer to do the same, you'll get something that's more like this. And that's because designers optimize for readability. Very different thing. So this is all about prioritizing what the user needs to know. First.
00:03:22.044 - 00:04:04.144, Speaker A: So absolutely, emotional experiences, there's no such thing as a non emotional experience when you're using an app. But the most emotional thing, of course, is when you're transferring large amounts of money. And how many times have we come across apps that make no distinction between transferring $10 and $10 billion? Because no one's ever thought that the emotional experience that you're going through is very different. And certainly the error messages if something goes wrong, need a lot more thought on larger amounts. The apps that we use today really got started in about 2008 when the App Store first came out. We started going through a lot of different generations of apps. But really, the App Store was the first and easy way to monetize apps.
00:04:04.144 - 00:04:43.334, Speaker A: People learned this obscure language called Objective C because there was a reason to do so, a reason to translate your ideas into code, put them on the App Store, and monetize your ideas. Interestingly, when ethereum first came out and people proposed solidity, nobody was that bothered about making solidity apps. But as soon as there was some economic incentive to do so, everybody rushed to learn how to do do it. Back in 2000, it eight. When the App Store first came out, everyone had ideas for apps. But these days, things are a little bit silent. And the reason for that is because the reality of creating apps is that making an app means making a business.
00:04:43.334 - 00:05:14.436, Speaker A: And few people have the idea or the desire to do that. Just teach yourself to code is a thing that we hear all the time. It's like, oh, if you want to make an app, you can either go to an agency or you can learn yourself. Right? Easy. But not everybody wants to learn how to code. And even if you do learn to code, you're sort of dealing with just one piece of the. You're dealing with a whole load of issues, basically, which me as a coder since I was 16, none of these things have got any better, really.
00:05:14.436 - 00:05:42.488, Speaker A: Like the way that we code really hasn't changed. And even if you can code, it's just one piece of the jigsaw puzzle. There's a whole host of other things that you need to think about if you're putting an app on the App Store. Things that involve making an app, which is basically making a business. So these days, it's impossible to make everything in house. So what do people do? They go to these SaaS providers. They have endless subscriptions with SaaS providers to do things like Vercel.
00:05:42.488 - 00:06:37.626, Speaker A: Or if you're doing NPM, something like a react native app, you go to expo and superbase for databases. But if you look beneath the veneer of these SaaS providers, they're all essentially hosted on the same three company servers, which is a bit of a problem. And let's say you're okay with all of this, you've got yourself a team, and now, of course, you need some money to pay them. So you go to a VC and you say, hey, VC, I would love some crumbs of your money because I want to make this app. And the VC will turn around and say, is your app a mass market app? Will it affect? Is it going to go absolutely crazy and become a big unicorn? Is it usable by everyone? And if the answer is yes, you may get some money. But if it's a niche app, something that only like 1000 people are ever going to use, good luck trying to get some money from the VC. So the sad truth is that today, millions of ideas never get made.
00:06:37.626 - 00:07:18.974, Speaker A: And yet the desire to create applications has not gone away. You know this because if you look on Twitter, you see that designers are spending a long time designing apps, as they should be on things like Figma. But because they don't have any coding skills, they can't connect everything together. So you end up with just an app, just a UI that basically does nothing. It's very annoying. But of course, as we know, everything is about to change. So GPT four has come along and is now starting to write code, like react code, as equally well as humans can, in some cases better.
00:07:18.974 - 00:08:15.464, Speaker A: This is just the start. It's not too impossible now to fast forward a few years and imagine whole apps being written this way by AI for the very first time. Non coders in the audience who've always felt a little bit like, excluded from this group are now starting to feel a new emotion, which is maybe there's hope for me. Maybe I can turn those ideas that I've had all these years and turn them into apps that can live on the iPhone. I predict that there's lots of companies in Silicon Valley that are currently getting funding for this exact thing. And the way that it will probably work is that you will have an app on your iPhone which you click, and inside will be an environment where you talk to your computer and you start making very, very basic apps, apps that have primitives such as chat and things like that. So I predict that we're only a few years away from everyone being able to make these basic apps with basic primitives.
00:08:15.464 - 00:09:08.190, Speaker A: And on top of those basic apps will be a new era of personalized uis, Uis that don't look the same. So at the moment, your Airbnb and my Airbnb app look identical, but they don't have to in the future. You could have a very different type of skin over your apps to me, who've got a different type of skin on mine, a whole new look and feel with different data. So this is a quick 20 minutes talk, but I go into this in much more depth in the bigger version of this talk that lasts an hour, which I did in March for the urbit people in El Salvador. And if you're interested in this sort of thing, I recommend watching the whole talk because we go in much more detail about how this will actually work. Okay, so back to the 20 minutes talk. The thing about apps is that every single platform in the world has this one square, one box idea.
00:09:08.190 - 00:09:41.772, Speaker A: One app is one square. You click on the square and you go into this immersive world, which is really, really good for focusing on a particular task, especially if you want to go full screen. However, the problem with these squares is that they're very shiny, they're very pretty, but essentially they're sucking up your data. And this data that they suck up can't get out of the square that's on your phone. It's just pulled in, and often there's no API. We know what's happening with Reddit at the moment, where Reddit is charging for API access. If you're super lucky, you come to a button that says this, export my data.
00:09:41.772 - 00:10:24.260, Speaker A: Google has one other platforms have this, so you can export your data, but what do you get? You get a file that looks like this, a load of JSON that is useless. And essentially what you realize is that data is useless without the code to interpret it and do something with it. So apps are just islands of data. They sit on your phone, they're things that you don't own and control. You don't own and control even the data, your data that you put inside them, they don't talk to each other. But that's not all, because unfortunately, with centralized App Stores, centralized App Stores act as gatekeepers, which means that they can deplatform your app if you say the wrong thing. They can.
00:10:24.260 - 00:11:13.808, Speaker A: Also, because an app is a business, it also means that some businesses go bust or they decide not to continue anymore, taking all your data with them, including this app, which I was promoting last year, a really good team, but they couldn't continue. So all that data goes with it. Luckily, this team are really good, and they've had a sort of export plan. But many of them, with many apps, you're not so lucky. App creators often do some crazy things. So startups will come along and they will say, hey, do you remember those terms and conditions that you didn't read? Well, they allowed us to basically take our little indie startup app and sell all of your data to some bigger company like Microsoft or Google, without your permission, without ever asking your permission or without even notification. Instead what you get is an email that looks like this.
00:11:13.808 - 00:11:51.252, Speaker A: Hey, we're so excited. We've just joined a big company and we've sold all of your data to them. And there's many, many examples of this. In fact, you can read them all here. But the main reason that this centralized App Store model really works, really sucks in the first place is because so many apps never make it onto the App Store in the first place. So things like this, for example, a Nostradamus, yes, you can see it now in some countries after a big fight, but not at all. So what about the web? It's the open web, right? It's open, we can do anything we want with it.
00:11:51.252 - 00:12:37.424, Speaker A: There's no centralized gatekeepers. Well, the problem with web is that I started actually programming when Netscape looked like this before the days of CSS. And today coming into this environment I would be utterly confused. Like what technologies do I actually use to get started with web programming? I don't know how anyone does it to be honest, because continually you're fighting this problem, which is that HTML was never designed for applications, it was always designed for documents. So frameworks like React are layered on top to try and make some sense of it for app developers. But you're always going to come up against two big problems. There's no local storage, which means for crypto apps there's no private keys, and yes there is local storage, but it doesn't work if you use private browsing mode which renders it completely useless.
00:12:37.424 - 00:13:21.430, Speaker A: And also all of this is hosted on something like AWS or Microsoft or Google. So if the future of apps is going to be AI generated, and I certainly think it will be very soon, we need to build some solid foundations for these apps to live on and we have to start thinking about fixing these problems. So this takes us to the promise of dapps. So what is the promise of dapps? Well, the number one, first one is open protocols. Open protocols are like IRC, SMTP, or just basic networking. We had them at the beginning of the Internet and we still have them now in some cases like email where you can use any email client with any email service. But these things are very rare.
00:13:21.430 - 00:14:09.814, Speaker A: In fact, the only other example I can find of this is Ethereum and bitcoin, which works on the same approach. Contrast that with the way that most apps work today, where it's just a basic app that you click on, and all that's doing is taking you to a proprietary backend. Things are changing. We're moving to open protocols like Nostra and lens. And indeed, once people start realizing the power of these open protocols and the composability it brings, this trend will continue. I think one day we'll have open protocols for things like food delivery, taxis, bike hire, all that sort of stuff. But this is all about a trend that's a bit deeper, because open protocols enables whole new businesses which simply weren't possible before.
00:14:09.814 - 00:14:46.574, Speaker A: So think about decentralized services, for example. Think about the way where every service you build on using open protocols is a business that makes money on top of your service. That was never possible before. So this is what I suggest. We start thinking about designing protocols that encourage others, others to make money off our own work. An example of that would be something like Airbnb, where we can have several different matching and discovering engines which can sort of bring you your ideal place to stay. But then when you come to the checkout, you can decide which of the insurance providers you want to take the risk.
00:14:46.574 - 00:15:20.054, Speaker A: So it gives people more choice. And all of these can be profit making businesses above the base protocol. A good essay that talks about some of this stuff is written by Jacob. It's called hyper structures, and it talks about the sort of desire and the need to build things that live on the blockchain that outlast us all. With eventually the fees of these big protocols trending to zero over time. It's a really, really good read. So open protocols give us a lot of the desirable functionalities that we want.
00:15:20.054 - 00:16:11.814, Speaker A: But there are also some serious challenges too. The biggest one, as someone who's about to build a DAP, is where to put the data. Of course, we know that layer ones are too expensive. So what's our alternatives? Well, we could do some sort of layer two bridgey thing, right? But layer two bridging is neither easy, cheap, nor fast, and that's not to mention any of the security issues that come with it. The real challenge, of course, as a coder, is that you want to be able to include code from one chain into another. That's currently impossible. Even if you do some fancy messaging like layer zero, you still cannot simply directly include one contract in your contract, which I think is a real shame, because all of this stuff, this composability, is what made Defi summer and all the 2017 ICO boom possible.
00:16:11.814 - 00:16:50.902, Speaker A: But the thing you could do then is you can say, okay, where am I going to build? Well, I could build where my friends are. The app that we're going to be building is going to be using an amazing protocol called talent layer. But where do we put it? Well, they're on polygon, right? Do we have to build on polygon? It feels kind of sad. If that's the case, maybe we should go to layer two B and check out some of these other layer two s. They're certainly not short of them. And what we'd do is we'd go down each one, we'd look into whether the sequencer could possibly stop running if it runs out of ETH. And we would make a very, very sort of reasoned, rational decision.
00:16:50.902 - 00:17:28.534, Speaker A: We would go in, we'd look at all the people who are building on them, the number of transactions, and in the end, we'd probably decide to do the only rational thing, which is to build on the chain that gives us the most money. Hardly. Hardly the answer. So I'm not the first to talk about this, but I have talked about this in November last year, ETH Bruno about all the other issues with layer two s, because this is just a scratch in the tip of the iceberg. But luckily, I'm no longer alone. This guy here, Justin Bonds, I saw him in Amsterdam, and he's giving lots and lots of talks about how layer twos are not the future of scaling. And I 100% support what he's saying here.
00:17:28.534 - 00:18:11.344, Speaker A: So why are we like this? Why have we got into the mess that we are? Well, it's because Ethereum is many things, and a lot of the smartest people in Ethereum are currently dealing with much bigger issues in their head, at least, than dapps. They're thinking about economic status, they're thinking about economic incentives, how to make sure that Ethereum can't be corrupted or taken over by any estate. So I understand why we are here, but unfortunately, right now, dapps are often an afterthought. It's something that's, oh, they'll figure it out. Being here since the beginning of Ethereum, I can always say that Ethereum always gets it right eventually, and we will get it right. But also, it's time to think critically about this layer two thing. All these logos here.
00:18:11.344 - 00:18:26.868, Speaker A: Like, which one would you pick? I don't know. All. There's so many layer two chains, and they're all kind of competing in the same space. So that's one problem with Dapps. The other one is the lack of privacy. If you think about Dapps at the moment. Sorry.
00:18:26.868 - 00:19:03.168, Speaker A: Think about decentralized apps. Well, yeah, so the thing about blockchains, right, is that everything is transparent. And I'm a big Dao skeptic. I don't think the way that we're doing daos works at the moment at all. But I think daos are great for one thing, which is the transparency that they offer. The fact that you can actually see where the money comes in and who it goes out to is priceless. In fact, it would be really nice if charities like this cancer research charity in the UK was adopting something like a Dao, the transparent Dao, because you would be able to see where the money is actually going and decide if you want to contribute anymore.
00:19:03.168 - 00:19:42.224, Speaker A: So I predict that one day all charities and public organizations will live on the blockchain. But this one day could be 2030 years away from where we are today. Talking a long time. But what about individuals? It's slightly different with individuals because I completely agree that individuals should have privacy and that my transactions are my business and nobody else. Well, the blockchain is not very good at this at the moment. As we know from the previous talk, a way that I think of this is that private individuals should have completely private transactions and public institutions should be completely transparent. And this is the world that I would like to see when we start thinking about the blockchain.
00:19:42.224 - 00:20:36.284, Speaker A: So the next question is, should the data live on the blockchain at all? Well, this comes up to some big problem that nobody wants to talk about, which is immutable data. Why is nobody talking about it? We'll get to that in a second. But right now, as somebody building an app, we've got a dilemma. We want our data to be freely available to everyone, so we want to build on a public blockchain. In fact, I think of blockchains as nuclear proof databases, because all sides could annihilate each other, and it only takes one surviving copy of the blockchain to propagate back to the rest of the planet. However, the world is not ready for immutable data just yet. If you took a photo of somebody and that person was drunk, and then you posted it on an immutable data source, and later they said, actually, I was drunk, please delete it, you would be like, can't do that.
00:20:36.284 - 00:21:34.204, Speaker A: Despite the fact that we know that the NSA has been collecting data for years and years and there's no such thing as delete. Most consumers don't know this and they still believe in this fantasy land where if you delete something, it is removed off all backup tapes and all agency computers immediately, which of course is not true. It's amazing how many people really honestly believe that works on Snapchat as well. So why is nobody talking about this? Well, that's because no web three company has ever gone mainstream. Have you noticed, like, we've been doing this nearly ten years now, and nobody outside of this venue is actually using any of the products we make inside. Soon that will change and one brave startup will come across the law which is going to hit them right on the face, which is this one, the EU right to be forgotten. And I've been digging around and looking into this and there's no easy solutions because governments don't really understand immutability, let alone have any solutions of how to handle it.
00:21:34.204 - 00:22:11.260, Speaker A: I do think sometimes our industry is a little bit out of touch because of the. I understand why. Because of the App Store rules. Dapps have to be web three apps, and we talked about web apps, but the lack of secure storage means that dapps today look like this, this monstrosity, which is you have to get a laptop, you have to get some sort of hardware wallet, and then you have to get this metamask thing or something similar. And then people wonder why web three isn't going mainstream. It's like. And of course, this is all running counter to the trend, which is that there are way more mobile phones in the world than actual laptops.
00:22:11.260 - 00:22:56.934, Speaker A: And indeed, most people, the ones that we want to reach the most, can't afford to buy both. So we need to start prioritizing mobile in a serious way right now. We do that through things like this initiative ethos, which is like an ethereum operating system that you can put onto like a virgin Android. Samsung have done a really good thing by putting a key store into their phones. So you've got a secure enclave to store the seed phrase and sign transactions from. But the person, the company that I think has done the most in this area is actually Solana, which have made a specific web three device with this key store in it, and a App Store which is crypto friendly, obviously only to Solana. Anyway, I like this a lot, so I bought one.
00:22:56.934 - 00:23:43.738, Speaker A: So if anyone wants to try and play with it, come up after this talk and I'll show it to you. Either way, we need to start getting these web apps and these dapps off AWS. And that's a big priority for us, okay? And that's why, because of the censorship we know about, this takes me nicely onto what the hell is urbit? So, okay, so urbit is not a blockchain. That's very, very important to know if you think about blockchains. So that global state, things that we all need to agree upon are stored on blockchains, data that would be nice to be accessible to all large images. Large files should be living on something like Arweave or filecoin. Well, urbit is for everything else.
00:23:43.738 - 00:24:32.394, Speaker A: Your local data that you don't need to share, you don't need to have global state about. You can think of it as your own personal server, a computer that's actually yours because you install apps onto your urbit ship. Where do you get them from? Other ships. There's no centralized App Store, so there's no gatekeeping. How do you find these apps? You can either get them recommended by a friend in one of the groups, or you can go to this app called Portal, which will recommend them to you, which is very cool, because all your data lives in one place. It's not scattered like the way that Web, two apps work at the moment, where you've got these islands of data that don't talk to each other. Indeed, because all the data lives in one place, it enables full app composability, something we've never had.
00:24:32.394 - 00:24:55.958, Speaker A: So, what can you do with Urbit today? Well, you can go on. The groups, they kind of function like IRC used to do in the nineties. I spent a lot of time on that, but they're way better because they're encrypted and they're stored. The message history is stored by the ship. That actually creates a group. So it's truly peer to peer. There's work going on, on an uncensored uniswap front end that will be complete soon.
00:24:55.958 - 00:25:24.162, Speaker A: So if you want to use Uniswap without the OFAC sanctions, bear in mind it's only censored in the front end, not the contract. You'll be able to actually run that in your urbit. But the other thing is that urbit is actually a vm. It's a very clever vm, built on a different language. And because of that, it enables other companies to come along and build whole experiences on top of this vm. The best example of this right now is this one by a company called Holium, called Realm, and the product's called Realm. This is in.
00:25:24.162 - 00:25:57.514, Speaker A: You can have access to this if you go down here and host your orbit ship with them already. But already on Holly and Realm, you've now got decentralized frontends for things like osmosis, with many more to follow. Very, very exciting. So the other big thing about urbit is you can make apps today without having to worry about hosting or deployment. This is actually massive. Imagine thinking about all the issues you have for scaling and deployment and then it gets crazy with kubernetes and all the rest of it. All of that goes away.
00:25:57.514 - 00:26:30.036, Speaker A: You can basically do this yourself. You can deploy it and then someone pulls it from you. And the App Store model of urbit, even though Urbit is still very young and still has a lot of issues, the App Store part of it works really well. So how do you get it today? Well, you can get it from all these hosted providers, not very great. Or you can buy your own little yellow box from native Planet and host your own ship directly on that. So now you're in control of your own data. Of course you can also install it on your own pc and run the pc in the basement.
00:26:30.036 - 00:26:53.618, Speaker A: The key is that that thing has to be up twenty four seven to receive messages. That's the way it works. But there's something new now, which is very exciting. Talon, the big company behind urbit in the early days, is now doing free hosting. And this is not going to last very long. So I recommend going to Talon IO. And every day they give out so many chances of having free hosting.
00:26:53.618 - 00:27:23.914, Speaker A: And if it all goes today, as it probably will, because everyone's now taking their phones. Just wait for a few days and you'll get chance to get free hosting in a few days time. I don't expect this to last very long. Again, there's way more about all of this in my big talk. Big talk. Okay, the future of apps, which is 1 hour and it goes into a lot more detail than I can possibly go into in this 20 minutes. So to wrap up, very soon everyone's going to be able to create apps using AI.
00:27:23.914 - 00:27:57.304, Speaker A: But all apps won't function or be the same. What goes under the hood is just as relevant as how the UI looks. Dapps give us composability and solid foundations to build upon. But there's some things that blockchains don't give us, and that's when we need to look for other solutions. Urbit being one of many. In general, the future of apps, I think, is AI created personalized interfaces over decentralized services, and all of that sits on composable data you own and control. This is the future that I would like to see.
00:27:57.304 - 00:28:18.724, Speaker A: And finally, after being kicking around the ethereum ecosystem for quite some time, I'm starting to build my own thing now, and I'm looking for really world class people. And these are the skills that we need first. But if anyone's interested, please come and talk to me after this talk. Thank you very much.
