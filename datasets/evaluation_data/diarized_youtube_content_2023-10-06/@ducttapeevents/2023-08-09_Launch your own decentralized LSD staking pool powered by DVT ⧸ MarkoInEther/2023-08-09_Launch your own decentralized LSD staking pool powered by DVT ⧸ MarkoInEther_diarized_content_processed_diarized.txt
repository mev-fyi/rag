00:00:00.400 - 00:01:21.824, Speaker A: Hey everyone, I'm Marko, I'm with SSvdao and today I'll be walking you through how to launch your own LSD. And hopefully, I just want to ask at the beginning, who has the pc, who wants to build their own lsd and launch their decentralized validators? Who is doing that? 2345 maybe? Okay, so I'll start with a short presentation on basically how we do this, how we make it possible for anyone not just to launch the smart contracts but actually run their validators using SSV network on the backend. And I'll talk about it right now, why it is a big problem and how do we solve it. So I'll do that first and then the ones of you who would like to build your own and launch it on girly. Yeah, we'll do that after. Perfect. Okay, so everything works.
00:01:21.824 - 00:02:28.304, Speaker A: So let's go through it. As I've said, this workshop, the ones that will be following along, I will show you a new run, basically an LSD pool on girly with a fully functioning distributed validator. And yes, this is what you will get out of it. I'll explain how the Ethereum staking works if it's not clear and how SSV goes into the picture. We'll deploy, staking will smart contracts, we'll deploy or we will run the backend and we'll show the whole process work from the person, just depositing some ease and showing how the validator gets created, how it gets deposited to SSV network. Basically we'll have fully functioning LSD pool, something like lido or pool you are familiar with. Okay, so with this workshop let's talk about incentives.
00:02:28.304 - 00:03:19.654, Speaker A: I'll provide you with some girly ETH. They are hard to come by these days. So yep, that's what we'll do. And yeah, I think talked about all of these points and I have a little bonus for you that I requested from the DAO. The people participating and actually finishing this will have a good chance to get a 25 SSV, which is around 500 USD right now. Nobody knows what it will be in the future to get a Prague or something. So yeah, that's something to get you started and give you some additional incentive here.
00:03:19.654 - 00:04:05.896, Speaker A: So who here does know how SSV works? Raise your hands. Perfect. Who here is running their own validator? Good. Who knows? Okay, who else doesn't run anything but knows how ethereum validation works? Okay, so almost everyone. Okay, good. So I'll not go into the details, but it's good before we start building to understand the big picture because there will be more parts as we go along. So basically the most basic things, what with LSD pool that we will be building is that the first step is user deposits.
00:04:05.896 - 00:04:51.240, Speaker A: And he's maintained some LSD. Right. And what happens in the backend, we see it here in the backend, the user deposits in the pool. But then the back end, the pool operator needs to actually take the ease in the pool and stick it somehow. So, and the hard problem we are solving with SSV and you'll be solving this workshop is how to ensure operator good behavior and run this ETH, run the staking in the safe manner. The current major solution is what Lido is doing. They're using small set of operators, but they have a good relationship and they trust them with the ETH.
00:04:51.240 - 00:05:35.364, Speaker A: They delegate them, rocket pool requests, collateral and the secret ls we are using is a DVT based network which uses trustless operator set. But basically every validator is run in a special cluster. So it's very hard for the participants to collude in any way. I will not go into, I have a special presentation for that, but I will not go into details of that. Right now. For the purposes of this workshop, we'll be basically using SSV for the backend. That's one thing to get just quick 101 about DBT tech.
00:05:35.364 - 00:06:23.922, Speaker A: Basically the ones of you who know how to run a validator but are not familiar with DVT. Basically what you are doing, you are taking one validator key and splitting it into several key shares. And that's relevant for this workshop because you will be picking basically four operators to which you will allocate these four key shares. So that's that. Okay, so the ones. So who is building, who has a pc? I see one, maybe two. Okay, yeah, I'm curious if there are builders for this.
00:06:23.922 - 00:07:07.868, Speaker A: Anyway, I'll run through it. For those of you who are building, you can go directly to the link and. Yeah, that's it. This is basically a short or not a short, but basically some kind of a schema how SSB works. It is not very relevant right now. I'll be starting with the. Basically I will be doing the deployment myself and you can follow with me.
00:07:07.868 - 00:08:29.736, Speaker A: So let's go. I'll give you a minute to set up your pc, everything. I'll have a coffee. Is there anything unclear? Any questions at the beginning? Let me put the link here while we are waiting. Okay. Maybe I'll give some people, I'll give you a motivation and show you how the final, I mean, it's not really final, but how something what your lounge look like. This is a staking pool that I launched with the repo yesterday.
00:08:29.736 - 00:09:05.828, Speaker A: And as you can see, you can launch the front end. Hopefully, hopefully I'll get the Internet working. The Internet here is not amazing. Where is my phone? I'll share. Yes, yes, I know the wifi password is. Let me write it. It's parallel napolis.
00:09:05.828 - 00:09:55.562, Speaker A: Let me write it into the presentation. I think that will be the easiest. So Wi Fi is parallel polis. I'm not sure if the spelling is correct and the password is like this. If someone has a problem, I don't have much data, but ideally if you have used data. If you don't have data and the Wi Fi doesn't work for you, I'll provide you with my hotspot. Okay.
00:09:55.562 - 00:10:24.734, Speaker A: Just jump at me. Call to me if you need a hotspot. If this one doesn't work for you because the Wi Fi doesn't work much for me. It's super slow. Okay, so do you guys have Internet running? So, so you need a. I'll give you need a hotspot. Yeah.
00:10:24.734 - 00:11:08.634, Speaker A: Let me actually. Let me change the password of my hotspot to this one to make it. Okay. So I'm sharing the hotspot right now. The password is the same. The name of the hotspot is M s 20. Let me know when it works for you.
00:11:08.634 - 00:12:16.024, Speaker A: Please don't stream much porn right now. I don't have much data here. Let's. So what we will get to do, I think it will take us around half an hour if there are no big hiccups, but it should work now basically we'll get to a staking pool which is fully working where you can stake, you can unstake, you see the. The pool amount, the pool under management and you will also be running a backend which will be checking if the pool has enough funds to deposit a validator. And then we'll basically deposit and run the validator. We'll also do verify all the contracts, launch them to Etherscan and.
00:12:16.024 - 00:13:11.398, Speaker A: Yeah, and basically this is a validator I've launched yesterday. We can check it. It should be live anyway. What you can start doing everyone open the initial setup will do this readme if you are a domain when you go to the main folder, this readme smart contracts and frontend MD open this one. It's quite straightforward and you can start right away. You don't have to wait for me. I'm just showing some preliminary stuff how it will look okay, so this is a validator that I launched yesterday with my pool.
00:13:11.398 - 00:13:51.294, Speaker A: There seemed to be some problem with it. It's not always perfect on girly, but you see like this valetry that I launched with the backend yesterday, it's live and I'm running it with SSV network. So this is an SSv network explorer and we'll basically, we should find it here. I'm not sure if I. Maybe I should not put all x. Okay, yeah, I see the validator here. Okay, so you see here the live validator that I launched yesterday.
00:13:51.294 - 00:14:38.704, Speaker A: This is something where we get to today. And for those who want to get a beer in Prague or something. As you see this is very bare bones. So you can play with the front end. There are various things that need to be done with the back end, et cetera, et cetera. So should I make it larger? Everybody has an Internet running, correct? Yes. What steps are we at? Okay, I'm going to do the launch.
00:14:38.704 - 00:14:53.824, Speaker A: Let's do it. Let's not wait any longer. Oh yeah. So yeah, please clone the repo. That's the first thing. Yeah, it's not here. Actually it is.
00:14:53.824 - 00:15:17.280, Speaker A: It says git clone here. Installation as you see. Okay, so let's do it like this. There are more parts to this. There is frontend, there is backend and there are smart contracts. So let's do frontend with smart contracts and then we'll do backend. So clone the repo.
00:15:17.280 - 00:15:56.992, Speaker A: Please follow the tutorial. So you will do CD, frontend, yarn install. Open it actually in this other here you can get. If you, if you are quick and do, do a quick photo, you can get some girly ETH from this private key that I'm showing here. But let me open the, this here. I think we can have it like this. Yes.
00:15:56.992 - 00:16:27.384, Speaker A: Okay. So I'll have it side by side. I'll open the console as well. Is there someone using windows? Windows? Windows are using WLSl. Okay, no problem. Are you using Ubuntu? Do you have Wsl like subsystem for Linux use that? Ideally for the frontend is not an issue. Some of the scripts you would have to do manually.
00:16:27.384 - 00:17:06.224, Speaker A: What is being done automatically. So I have obviously cloned the repo. Then do this, go to frontend. The frontend folder is where the frontend lives. It's a Monorepo and there is everything in one. So right now we'll go through the frontend folder. So I've already installed everything.
00:17:06.224 - 00:17:52.084, Speaker A: It's working, but it's like extremely slow so I'm using my one. It's like I couldn't load a website. Oh, actually I have a, okay, I'm gonna continue. A lot of you have this done. So for those of you, if you have the front and running on localhost, that's the first step, then you can, Huhleaf? Yes, it is. I want to make it work first with this. And we'll launch and deploy to girly when this works.
00:17:52.084 - 00:18:53.444, Speaker A: Basically, if it doesn't work on localhost anyway, so I'm running the frontend, I'm opening new terminal. You can edit the front end, but let's deploy the contracts first. Yes, the idea here is first we deploy it locally. If the local deployment is cool, send me, actually, are you in the telegram group? I created a telegram group. I'll share a link and send me your address there to give you some girl ETH. So you have ETH for girly deployment. At this step you can just follow the tutorial and deploy the contracts so you can do yarn fork.
00:18:53.444 - 00:19:49.844, Speaker A: I will do this in the second repo who is running on windows and needs some help perhaps ideally just follow the tutorial, the front end one, and tell me when you run into an issue. I think that's going to be easiest because everyone has a different issue once again. Yeah, just get one. You can register and you will get one for free. Do you need it to go into. Okay, okay, okay, sure. Perfect.
00:19:49.844 - 00:20:34.144, Speaker A: Yes, I'm going there. Yes. Basically this is the command it's calling. You can call it directly from the Hardhat packages folder, but show me. Oh, so running in, run this in a different terminal from where you're running front end in, not to interfere with it. Sure, perfect. Yeah.
00:20:34.144 - 00:21:12.874, Speaker A: So go for the front end. Yeah. And what happens if you were yarn for. Yes, gives me inventory count for girly network. Please go to, okay, yeah, I see, I see, I see. What's that? There is a problem in hardhead configuration. Go to the CD packages.
00:21:12.874 - 00:22:06.834, Speaker A: Packages. Hardhead, go, yeah, go there. Open it. There is a hard head config and there is a problem with not localhost, but go to girly. I think you need to add the girly deployer private key in your env file. It should be, yes. Either you directly paste it there or are you running the, you're not running the chain? Let me see what's the chain? Let me see what is the issue? No, no, no, that's not a, not an issue.
00:22:06.834 - 00:24:23.284, Speaker A: Just try to comment this out. The, yeah, let me try to, okay, so there is a problem with some configuration account zero for girly expected string received undefined. So if you are running a fork of this, if this will be a problem, we'll just do it directly on girly. But let me, let me, I think it will be easy to solve but let me check so networks. Okay, let me just comment this out and see if that solves the problem. Oh yeah, I think, let me see if this works. I commented out the girly network and just running the yard fork also, as you see here, this should be enough to just give it a fork URL.
00:24:23.284 - 00:25:10.182, Speaker A: And in this case you should not need to specify the network. Let's see if it works. Yes, it should get installed when you do. Yes, when you install frontend. Okay, so just comment out the girly network from the hard head json. It solves the problem. Okay, so for those running yarn fork, there is a problem with this accounts object either with this or with girly URL.
00:25:10.182 - 00:25:58.532, Speaker A: Yeah, you can, there are more things how you can solve it. You need to put the keys into your env file, girly infura key and deploy a private key. But right now, well you can just, to make it quick, you can just comment out the girly network completely. Do you have the right config? It's in packages. It's not this, it's packages hardhat. So the hard hat config where I'm at, you find in frontend slash packages hardhat. This is a quick fix.
00:25:58.532 - 00:27:01.860, Speaker A: I'll do like a proper fix as well. Yes. Ideally what you do, you will need it for the next step to go to your env file or create an env file in the, you have an example env in your hard hat folder. Okay, so you got it. Just comment it out for now. You need a deployer key. Just comment this out.
00:27:01.860 - 00:27:14.284, Speaker A: This one as well? Yeah, just this one. The girly network. The whole girly network. Just comment it out. Yeah. And just run yarn. Oh, you have it.
00:27:14.284 - 00:27:39.844, Speaker A: Oh perfect. So we made it work. This is a local network. It's running. You should see the keys printed out on the network. That means you have a fork of girly running document out the whole girly network. Yeah.
00:27:39.844 - 00:28:13.878, Speaker A: What you want to do, I also show you need to find and put your keys into the env file in the hardhat folder. So you are in the packages. Hardhat. The config j's the problem is it's looking for the deployer private key and inferior key. Okay. So you need to get these keys an easy way how to get a deployer key. What everybody, what you can do, like, it's a quick and dirty way.
00:28:13.878 - 00:28:50.782, Speaker A: There is a, there is also a function for that in the, like, you can create a contract in hardhat, whatever. But you need this private key also. You will need it also in Firefox. Firefox, what's the name in Metamask. So what you do here, if you need a new private key that you will use for the deployment, you will need this later on. So I can go to my metamask. Just do create account.
00:28:50.782 - 00:29:53.984, Speaker A: It will give me new account and I will expose and I will just copy and paste the private key account details. Here, export private key, typing password. Okay, so here you can get a private key that you will need later on and also a public key. Okay, so these are like two things you want to have for the girly deployment. You don't need it right now, but you will need it later on. So here we need girly deployer private key. This is what I just got.
00:29:53.984 - 00:30:56.444, Speaker A: And girly infura key. You can just go to the Fuhrer web if you don't have a key and get one key there. And here in the hardhat folder, you have example env, and just copy it and change it to env. What we need here, we need these two things for the girly deployment. Girly inferior private key, girl inferior key, and girly deployer private key. I've just got the deployer from my metamask, and I will fund you this metamask address later on. And infuriate, just go to the website of Infuria and get the key I have.
00:30:56.444 - 00:31:24.464, Speaker A: Infuria. Blah, blah, blah. This is my infuria key. So you need to have something like this in your own Env file for the hard hat. Okay, let's go to the next step. Who is running the chain locally with no problem. One, two, three.
00:31:24.464 - 00:32:05.114, Speaker A: Okay, perfect, perfect. Yeah, it was the complier, and I don't know why it does, but it wants to compile all the contracts for you. Launch the, yeah, yeah. Share your public key, not private key. If you are sharing something, this is not to share. Yes, yes. You, I want, you don't want to export private keys.
00:32:05.114 - 00:33:45.674, Speaker A: I mean, or like send, it doesn't matter. Yeah, yeah. Send me the public key in the group. Perfect. So the fork running, how is it file or in what, where I see the clone also. Okay, are you guys targeted? Let's move on once again. Yeah, okay.
00:33:45.674 - 00:34:08.734, Speaker A: Yeah. Doesn't matter. You can put whatever. Okay, yeah. And also this is the address, but only the last part. And be careful that lina doesn't matter. Like your key thing should be the same for all networks.
00:34:08.734 - 00:34:53.038, Speaker A: Okay, I'll go to the next step. Not right now. Right now it's unnecessary. Have you deployed the contracts? So for those who are following this, we have a front end running. We have local blockchain and we are deploying the contracts now. So go to front end again and do yarn deploy. Okay, who has deployed the contracts locally? Perfect.
00:34:53.038 - 00:35:39.412, Speaker A: So now let me show you some stuff about the front end. How you can edit the front end. Your. Where is my localhost? Okay, so here in the front end you are connected either or localhost. How to change this? You have the app jSX file. Just do like control P in your versus code and go to app jSX file. Yes, we are still in the frontend folder.
00:35:39.412 - 00:36:00.684, Speaker A: There is a different deployment. You can use using brownie as well. But not to overcomplicate things. We are doing it still from here. Here in this app jsx file. This is the main starting file for the frontend. And you need to have here on the line 56 networks localhost.
00:36:00.684 - 00:36:28.304, Speaker A: And you should see when you deploy it. You should see here your contracts that you have deployed. You should see them here and be able to interact with them. I have here girly, I'm not sure why. Let me save this and refresh. Maybe there's a. This should be localhost, maybe.
00:36:28.304 - 00:36:58.714, Speaker A: Let me see. Reusing, staking pool. Staking pool deployed at this address. Ox three a. Okay, here I see that the mine is not connecting to localhost, but it's trying to connect to girly, sometimes this happens for me. Okay, sorry. Actually I have two repos opened.
00:36:58.714 - 00:37:30.104, Speaker A: This is a different repo. This is the correct repo that I'm running front end in. I'm usually running frontend from a different repo than back end because I'm using windows. Okay, so once again, app JSX and you should be connected here to. You need this. You need to be networks at localhost. I'll save this.
00:37:30.104 - 00:38:06.970, Speaker A: The frontend should change automatically. Now you see it, right? You have a localhost and you should see your deployed contracts here. Okay, who is at this step? Everything deployed, everything working locally? Yeah, you can just like. Okay, we'll be going to running a backup. If you guys want go take a coffee. If you are at this step, also make sure your deployer address. Send it.
00:38:06.970 - 00:38:52.204, Speaker A: Send it to the telegram group. Is there something not in the telegram group for this. Okay, I'll share the. How to share this. I can put it on screen the telegram group or dear QR code. Yeah, yeah, I'll do that. Or you can go to my Twitter arcoinether and I share the telegram group there.
00:38:52.204 - 00:39:24.364, Speaker A: You probably it's SSV, not community meta, but LSD workshop. Let me. Let me share it. Okay. Anyone you can find it on my Twitter. That may be the easiest. If you just open.
00:39:24.364 - 00:39:56.864, Speaker A: I have a pinned post this Defi workshop and there is a link to the telegram group. Here is a link to the telegram group. But I can also. I can enlarge this. I can also share the QR code directly. Just go to my profile. That is easiest.
00:39:56.864 - 00:40:26.814, Speaker A: Go to my profile. Mark on ether, first post which is pinned and the link is there. The link is here. The link to the telegram group. And send me your public girly address there. Once you have that, let's have a. Actually, we don't have much time for a quick break, so let's finish it up and have like a girly deployment.
00:40:26.814 - 00:41:01.462, Speaker A: Yes, Marco with K in ether. I'm also putting it here and doing the QR code. I'm also doing the QR code for you. Now you see the post. Click on it. And in the reaction, I also have it here. Okay, so send me the addresses.
00:41:01.462 - 00:41:42.664, Speaker A: I'll send you. Send you girlies, the bn. But he needs help. Everybody is. Is running the. Has anyone sent the address? Just send me, send me. I'll be sending the ETH.
00:41:42.664 - 00:42:30.124, Speaker A: We can be also running the backend in the meanwhile. Backend is the magic part that will actually, like, deploy everything you did. Find it, Marco. With K in either. Yeah. Here. Okay, so let's do the.
00:42:30.124 - 00:42:59.604, Speaker A: Let's do the girly deployment. I need everyone's addresses. Is there someone who is still trying to send me the address so I can send out these. Click on the post. On the pinned post. Yes. Scroll down there.
00:42:59.604 - 00:43:52.204, Speaker A: Okay. Is everyone in the group and the link. Send me their public address. Okay, I have two addresses here. Okay. Three addresses. Is there someone else who wants to do the deployment? I have three addresses so far.
00:43:52.204 - 00:44:40.384, Speaker A: Who is still trying to. Okay, what are you trying to. I'm trying to copy. Who needs help? Why not? You don't have telegram on your pc? I don't know. I currently on mobile. Yeah, you can like. No, I don't want to.
00:44:40.384 - 00:45:40.364, Speaker A: Okay. Or send me it on Twitter. Send it to me on Twitter. Okay. Someone else also having troubles sending me the address. Perfect. Okay, so I'm sending out the ETH.
00:45:40.364 - 00:46:14.264, Speaker A: Let's wrap it up. Let's have some nice deployments. I have three addresses so far. Oh four. So here we go. No, you don't need to stop anything. No, it's alright.
00:46:14.264 - 00:47:29.324, Speaker A: No, no, like you can stop it, but nothing happens if you don't, you will just, I'll show you, you'll just point frontend to the girly deployment. Okay. So you get some, what you can do. Please fill in the env file. You need the etherscan API and private key you need to put in into the env file to do a deployment you need to do the step that I've done here. Here in the env file there needs to be your girly infuria key and girly deploy your private key. Yes, just send me the address.
00:47:29.324 - 00:48:27.884, Speaker A: That's the easiest thing. Yeah, I mean we can use the same account for deployment. Yes of course. There are also changes you need in your look into the readme and you need to whitelist your deployer so he'll be able to send out or to deploy validators. Go to your deployment script. In the hardhat scripts folder there is a deploy and you need to update the values for the ease of use. Use the private key or the public address of the private key.
00:48:27.884 - 00:49:56.894, Speaker A: So basically this public address that you are sending me here, I just said it might, which finance script you said, sorry, it's hardhat scripts and there should be deploy zero zero deploy and zero, zero one deploy. Yes. Let me show you here. Oh sorry, not in script. This is in deploy Hardhat deploy and what we want to, this is a whitelist address key generator and also withdrawal address. Change this into this public key you will be using as a deployer. This could be a different address.
00:49:56.894 - 00:50:41.886, Speaker A: Just to make everything super simple and easy, choose operators here. Basically, as I've said here you are choosing which operators will be running your, no no no, please just these ones are the ones you need to change these two key generator and withdraw. Actually even withdrawal could be different. If a withdrawal is a different address, it basically means if you withdraw the validator it will go to a different address. But for the backend just change these two addresses. Not to complicate things. Yes.
00:50:41.886 - 00:52:30.028, Speaker A: With the public key you are using as a deployer. Okay, so zero x two. Okay, I'm sending out, let me, you need to specify the network. You can do yarn deploy, but you need to let me finish this up. And for those who know how to deploy with hardhat you can deploy. I'll do a walkthrough you can change it to girly, but you need to edit the girly network and you need to let me finish this up. Okay, so everybody should have their girly e's on their deployer at the moment.
00:52:30.028 - 00:53:34.134, Speaker A: Now we are going to do the live deployment. So there are two things, two main things we want to do. So ok everybody, you need to first change this, the key generator and withdrawal. I hope everybody is done with that. So I'm deploying it from the frontend folder and I need to make sure that the hardhat config file which I have here has either a good URL. This URL you can get from your infuria, you can just hard code it here, or if you have and you need here the girly deployer private key. So there are two things here.
00:53:34.134 - 00:54:11.214, Speaker A: You can hard code it here, but you have this process env girly deployer private key. Basically what this does, it will take these values from your env file. So here you need to put your deployer private key and I think show me how your config file looks like. Okay perfect. So this should work once you put it there. I don't know, I've somehow edited. Okay, so there are two things.
00:54:11.214 - 00:54:48.802, Speaker A: The girly network in your hardhat config file needs to point to a correct girly address you got from infuria. This is basically what you get from infura. The end part is your key and the account is your private key. There. Once you have this you can just do yarn, deploy network girly. Let's do another deployment. Why not? Normally I have this hard coded here.
00:54:48.802 - 00:55:20.758, Speaker A: You don't need to have it hard coded. It's a better practice to have it in the env file. Zero xf two. Did you send me the address? Okay, how are you doing? Deploying? Okay, perfect. Too girly. And is it a local host or is it girly? Okay, perfect. You can close the local host.
00:55:20.758 - 00:56:14.874, Speaker A: So then you're sure it's which one is yours? Okay. Sorry, I had to miss you somehow. Okay, so you should see something like this. Staking pool deployed, ssveth address deployed. You see that? Yep. Perfect. Now what we want to do, we want to point our front end to the girly deployment.
00:56:14.874 - 00:57:06.994, Speaker A: So I go again to app jsX file and here in the line 56, I need to change this to point this to girly. Ok, it's app JSX, you just search for it. Ctrl P or command P and app Jsx and refresh this. And what you should see, when this is correct, you should see two things. You should see the contract addresses change. Where is it? Yeah, in the bottom half of the replication. Let me open the localhost.
00:57:06.994 - 00:58:02.840, Speaker A: So here in the up front, upper top, you should see this, girly. And here you should see the contract addresses that you just deployed to, girly, do you see that? Sometimes what happens, restart the front end. Just. I sometimes have a problem. We will actually launch the front end so it's not a problematic. But if there is some problem with the frontend viewing, just press control c. Finish this and do like yarn react app start again, yarn deploy network early.
00:58:02.840 - 00:58:16.754, Speaker A: Just like that. Yeah. Okay. Yeah, go for it. Yeah. No, no, no. Okay.
00:58:16.754 - 00:58:32.710, Speaker A: Oh yeah, maybe. Yeah, go there. Go, go, go. No, it's only if you want to do it manually. You should not, you should look at the front end. Look at your frontend. Okay.
00:58:32.710 - 00:58:47.734, Speaker A: And scroll down. Refresh it. Scroll down. And it's a localhost, right. So you need to. Yes, save it. But it should be.
00:58:47.734 - 00:59:27.314, Speaker A: No, not here, not here. Look at. Let me show you where. So this initial network networks, girly, this is what you want to change in app JSX file. It's on the screen. How is it going? Cannot read properties. These two.
00:59:27.314 - 00:59:54.000, Speaker A: Uh huh. Yeah, that's it. Yeah, that's it was zero. Where? Show me the config file for your hardhat. This is. No, you need to, you need to. Yeah, yeah.
00:59:54.000 - 01:00:09.564, Speaker A: This one must be because it doesn't have the account. Save it. Okay. You see the same contract. Perfect. Try to, try to interact with the, with the pool. Take something in the pool.
01:00:09.564 - 01:00:56.624, Speaker A: Ideally take 32 ETH so we can run back end. Let's test the pool. Now you can, yeah, you can stake, do whatever, you can stake less, doesn't matter. It's a liquid staking pool, you can stake whatever. But if you want to see backend, it works. You will see I already staked more than 32. And you would see here that I've already have a validator there, because these contracts are already deployed.
01:00:56.624 - 01:01:43.280, Speaker A: So try to do like 0.1 1st stake. It doesn't really matter where you stake it from. Okay, now has everyone staked successfully? Perfect. You should see it in the front end, you should get the. Ok, get the transaction. Yes, it's pending.
01:01:43.280 - 01:02:08.366, Speaker A: You should see sv total. So now we have this, I'll just show you how to. I'll not do that. I'll run the backend because we're running out of time. But you can launch this front end. So it's up and running nicely. You can just follow the tutorial here you can verify the contract.
01:02:08.366 - 01:02:53.026, Speaker A: Super easy. Just run yarn verify and with your contract address. I've already done this and do this show off to the world do yarn search and this will basically upload your frontend what you are currently running in localhost. You basically just choose an address search sh and you can just host it freely so you don't need to run it locally. And now I will run the backend which is the more fun part. No, not really. If it works, it's not complex.
01:02:53.026 - 01:03:55.664, Speaker A: I mean the magic is in the background. So you have open a new terminal but not in the front end but in the main SSV folder. Install the prerequisites like this setup sh if you need to make it executable, you need to make it executable at first, obviously. So to make it executable changemod x setup sh okay now is executable, now you just execute it. What is it doing? It's basically installing everything that needs to be installed. It also is handling if you are using Linux or megos with Windows. It doesn't work great.
01:03:55.664 - 01:05:04.614, Speaker A: That's why I've already installed it. So you see like this. So just install it and then we'll just run the script which I'll show you how and I'll show you how it should work. So then I will run the script and pass it a config file. My config Json let me go back a little. Do you have this, have you run the setup sh? Everybody needs to run the setup sh and then you need to edit the, you have their files, sample config files. So go to sample config folder and to stake configuration.
01:05:04.614 - 01:06:04.314, Speaker A: Okay so and here put in your infuria key here, here your infuria key, here your private key for the deployer and here the only thing you need to change is your stake pool. You need to add your staking pool address and that's it. And after that we'll just run the script and actually it's better even if you don't. It's better to run it without actually. So I'll do that. Now I'm just taking the Ssveth contract from here, the contract address, I will put it here also you don't have to wait for the install, you can have it be installing and just edit this screen. So I'm putting here the stake pool, just follow with me.
01:06:04.314 - 01:07:03.654, Speaker A: It's sample config, it's not in front end so main sample config and stake. Config. Yeah, there we go. Is everyone in the folder? Is everyone installing prerequisites? Something's wrong with my, something wrong with my python, I think. Okay, look at the script. It failed in the install requirements. But you have like the main part of the script.
01:07:03.654 - 01:07:44.846, Speaker A: Check the script, the setup sh. Script you're doing. Yeah, so, but you can deploy the console to girly? Yeah, sure. Yeah. This is where it fails. Try to run it again. But how are you doing here like stake or something? Yeah, you can, you can stake.
01:07:44.846 - 01:08:14.846, Speaker A: We can do it later, doesn't matter. But connected to girling, right, perfect. Yeah, just add the script, the backend script. You have that go to. Not front, go out of front end. Where is it? Sample config, state config. Okay.
01:08:14.846 - 01:08:53.014, Speaker A: And here this, your infuria key, here, your private key and the address of your staking pool. Just take it from the front end. How are you doing? I came late. Okay, Iris, tag it. Any step I can have you deployed to girly, show me the error. Yeah, yeah. Just edit the address in the deployment script.
01:08:53.014 - 01:09:29.949, Speaker A: Go to deploy. Yes. You already did that? Yeah, perfect. So just run yarn, deploy network early. Okay, perfect. Did it actually deploy to girly? Show me your config file, your hard configuration. Okay, perfect.
01:09:29.949 - 01:09:54.674, Speaker A: Okay, so it should, you should see it in your front end. Show me your front end. Perfect. Do you see the contracts there? Zero X, no, zero x five o. Is it the same? Zero X 50 six? Yeah, yeah, yeah it's perfect. Go to the next step. Just the setup.
01:09:54.674 - 01:10:13.254, Speaker A: Sh, not in the frontend but in the main. Perfect. Did it went well? Yeah, I did it a while ago. I think it went through. Okay, perfect. And just edit the file that you see there. Not the state config, but go to sample config.
01:10:13.254 - 01:11:02.026, Speaker A: State config and edit this. Basically put in your staking pool and your keys here, your private key and. Yeah, yeah, yeah, yeah. Just grab the address. All good. Yeah, apparently it has to do with the, yeah, it's maybe try to do like env, like run create an environment for. You know how to do that? No, like I'm not, I used to, there's a lot of times that I don't use.
01:11:02.026 - 01:11:16.974, Speaker A: Yeah, google it. I'm not sure, like python, create VNv, something like that. It will give you, it's like two commands. I don't remember exactly. Okay. But I'll show you the grand finale. Even if you.
01:11:16.974 - 01:11:57.108, Speaker A: I think, because I think I should be finishing soon. Yeah. Okay, perfect. Okay, so now I'll show you how it should work. Someone have problems with their python libraries or stuff like that? So basically what I have done, I have created my own config file. Not to mess up these ones, but you can see it's the same, it's the exact same structure I just put in my info here. I just need to make sure what changes if I do more deployments.
01:11:57.108 - 01:12:23.738, Speaker A: Obviously, the state pool address is different, but I use the same deployer, I use the same girly RPC, et cetera, et cetera. So just the staking pool. Okay, you have staking pool and you have ssve. Okay. You just need staking pool address. So. And private key, of course.
01:12:23.738 - 01:13:00.134, Speaker A: Yes. But you just put it there once. Right. Okay. And basically now what I do, I do python three descriptomain py stake c and pass it my config file there. So if you are using this state config directly, you would just copy relative path. And what you would be doing, the only change you would be doing is this would be different.
01:13:00.134 - 01:13:39.232, Speaker A: This would be sample config, state config. Otherwise, it's my stake config. Okay, so now I'm running it. Now what the backend does, I don't have much time to go into this, but this is the magic of the whole solution because it's easy to do this. You deploy some contracts and you deploy some front end. But what we are actually doing here, the backend is checking the staking pool if it has enough funds. Currently, the staking pool has 0.3
01:13:39.232 - 01:14:01.474, Speaker A: ETH. Okay, so I'm running the backend and I want to stake ETH. So it has ETH for the full validator. So I'll stake 32 ETH. Insufficient funds. I probably have a wrong address connected to this. No, there is some problem.
01:14:01.474 - 01:14:33.454, Speaker A: I just refreshed this. You get the same refresh the frontend or stop it and start it again. Sometimes it. Okay, so now I am, I'm running the backend, and I have just stoked. No, staked. I have just staked 32 e. And here the magic will take place.
01:14:33.454 - 01:15:05.506, Speaker A: So the transaction needs to go through. You see that the staking pool balance didn't refresh yet, but now I refresh and you see the staking pool balance is over 32. And let's look at the backend. Okay, I'm probably running the back end with a different pool address. Okay, when this happens, it's probably my stake. Pool dress is wrong because it doesn't see anything. So let me double check the stake pool because I have more stuff running here.
01:15:05.506 - 01:15:41.354, Speaker A: So this is my stake pool address. No, it's good. Let's see. Yes, I already staked 32 before, and now I stake it again. No, no, no. You just need to have more than 32 ETH in the pool. So I stake one entry.
01:15:41.354 - 01:16:08.058, Speaker A: Maybe you don't need to stake anything. If you have 32 ETH in the pool, you don't need to stake anything. I'm running into some kind of a. Oh yeah. So far that what I have done. I have more these config files, and I'm actually editing a wrong config file. So my stinking pool doesn't work just to walk you through it because you can run into similar error.
01:16:08.058 - 01:16:56.070, Speaker A: I'm passing through this config file, but I'm editing dash copy config file. So that's the thing here. So anyway, let me make sure I have edited the address. I'm running it again, and now it will see that the balance of staking pool is more than 32. It's creating the validator. I'll show it side by side and you'll see it here in the events. Once it deposits the validator, the staking pool balance, you still see your balance doesn't change.
01:16:56.070 - 01:17:14.124, Speaker A: Obviously you have still the tokens, but the 32 ETH has been sent and deployed as a new validator. Okay. And here you see a different validator. Yes. In case of the can. Okay. Share file.
01:17:14.124 - 01:17:35.984, Speaker A: Should I generate it some? No, no, no. Show me the. Show me. No, no. Show me the config file. Config file looks good. Probably your installation failed.
01:17:35.984 - 01:18:15.604, Speaker A: Oh, go down. I'm running the script now. Yes, there is a fallback. If something happens and your script crashes, fallback and delete this. If you run into some error and your script can't resolve, what is your problem? There is fallback JSon. It says keyshared JSon does not exist. Delete the JSON file.
01:18:15.604 - 01:18:39.524, Speaker A: Fallback JSon not deleted completely, but leave it empty and just put the curly brackets there. Yeah, perfect. Yeah. And run it. You are quite fast here. Yeah. We go to sample config, right? Yeah.
01:18:39.524 - 01:18:57.588, Speaker A: Stake config. Yeah. Here, your key. Your key. Your private key. Yes, the one, the private key which is corresponding to one and your stake pool address. You can take it from the front end.
01:18:57.588 - 01:19:09.028, Speaker A: Okay. Yeah, so perfect. Yeah. Now you can. You have deposited 32. Oh, perfect. So go there.
01:19:09.028 - 01:19:37.232, Speaker A: You see it? No. You deposit the validator. No, no. Write press. Yeah, but I don't have any more ethereum left, so no but I don't think you have a right. Oh sorry, one more thing. To run the validator and ssv you need some ssv on girly so it will fail if you don't have ssv at your deployer.
01:19:37.232 - 01:20:52.964, Speaker A: Okay, so this is the thing, the private key that you are using for your deployer. You need to go to facesv.net work and get some ssv and get it from the deployer address otherwise the depositing of shares will fail. Did you make it work? So I have the virtual m one but even that I'm not working either. There with the environment, same method you run the setup? Sh. Yes exactly like in the virtual environment but it's not working. Yeah, so in the virtual environment it happened the same error.
01:20:52.964 - 01:22:03.464, Speaker A: Okay, which is your address? I'll send you who needs ssv? Send me the address again and write ssv. Okay perfect. This is your, the private key that you put in your deployers. Perfect. You got some, oh your RPC is localhost so it doesn't just copy the same RPC. And make sure your stake pool is the, is the one you deployed. Okay you need SSV as well.
01:22:03.464 - 01:22:31.808, Speaker A: Which one is yours? Jitterez is yours. I'll send you some ssv. Just show me here. Perfect. So I'm sending you some ssv when you get that. Okay so I put here configuration all the config files and now I just run after. So I modified like this.
01:22:31.808 - 01:23:22.744, Speaker A: Yeah perfect. Stay config and then I just run. Oh but you need, you need ssv. Yeah. Okay so which address? This one? No, once again. Yeah, come here. You got ssv? You have ssv or should I send you something? Okay but I already sent you so we are waiting for the transaction.
01:23:22.744 - 01:23:59.240, Speaker A: Perfect, yeah you got it. Go into the manager folder and search it on beaconcha. You can view the validator now it's live on girling. Copy and go to Prater Beaconcha and also in SSV network. Do we need to change something in the front end so it will look on the new back end or your front end is already showing. If it's showing the contract is already showing the backend. Okay so now try to run it.
01:23:59.240 - 01:24:32.804, Speaker A: You have the SSV already? Yeah, yeah. So once I stake 32 es it will be my validator. But running on ssv network. No no I'm, I'll be showing you. I'm sending some links into the group so you can check your validator. This is one, this is another one. I'm sending the links there now.
01:24:32.804 - 01:25:18.934, Speaker A: Basically when you have I could locate the keystore file directory. I think I need to change something probably to configure. Yeah, it probably failed the first time because you didn't have ssv. Delete your fallback or empty fallback. Fullback folder. Did you do the setup? Did it ran all right. Line 14 just imports this one stakeholder.
01:25:18.934 - 01:26:04.404, Speaker A: So which line has it a problem with validator key? It has a problem with the validator key. Can you do the setup? Sh. Once again just to see if it doesn't throw any problems. Yeah, there it was. Yeah, you don't have Pip. There is some problem there. Line 28, pip command not found.
01:26:04.404 - 01:26:20.780, Speaker A: So the. I got this one. So should I stake 32? Yes, you can. Just keep it running, stake it and you will see how the validator will get deployed. What happens there. Perfect. So your validator is deposited now.
01:26:20.780 - 01:26:48.394, Speaker A: It's waiting in the deposit queue. And normally as a solo validator, basically anyone can deposit a validator. This is an easy step. If you are a solo validator, you will deposit the validator, but you need to run the machine and with SSV you don't need to run the machine, you will just run it with SSV. So also check it with SSV. Check the validator key. I'm sending the links there.
01:26:48.394 - 01:26:57.978, Speaker A: Sorry. Yeah, it's there. Okay. And this is my validator. So just put it like your. Okay, so it says creating validation. Perfect.
01:26:57.978 - 01:27:52.824, Speaker A: Yes, that's what it should be saying. How can I see my validator? Okay, perfect. We are running out of time here, so let me give you like a final more additional incentive or some. Basically I have asked for our DaO to do like a small incentivization to provide you guys with some SSV, like Mainnet SSV with real value. This is right now it's around 500 USD is nothing amazing. And this would be for. You already have the staking pool.
01:27:52.824 - 01:28:34.734, Speaker A: You can follow the tutorial and launch it. Launch the front end as well. And this will be for the great LSD experience, meaning you can edit, update the pool. It's a very basic pool. It doesn't have much of a functionality. You can play with the front end, play with the backend. I'll share more information on how to share this and you can work on it throughout this weekend until the end of, until the end of East Prague, until Sunday and ask me questions in the group, if anything, if something.
01:28:34.734 - 01:29:05.370, Speaker A: And here are possible things you can think about how to do right now. There are no oracles there implemented so it doesn't automatically update the prices as your validator rewards come in, it doesn't update it automatically. So this is something you could work on. You can obviously work on the front end. That's not amazing. There is a nice thing how you can do an NFT of the validator. That's a little bit of a different thing.
01:29:05.370 - 01:29:39.204, Speaker A: So these are a couple of things you can play with. And I will share more info how to share this via Twitter and get some ssv for the beer. Yeah. So any questions? Does backend need to keep running always or we can just run. I mean, you will share only frontend. Backend is running with you. But you can do some kind of a thing where you, you can run it on like free aws or something.
01:29:39.204 - 01:30:06.702, Speaker A: I mean, if you want to share it with your friends and let them, let them stake. If I do it just for myself, I mean, it's up to you. Okay. For validation purposes, I don't need backend. No, no, you need backend. You don't need for validation or anything. You need backend so that the pool deposits the 32 ETH, creates a validator and deposits it to ssV.
01:30:06.702 - 01:30:40.130, Speaker A: So basically even your backend needs to only check, like when the pool has 32 ethanol, but it's not running the validator. The validator is run automatically by SSV network. I see this on the SSV. It's probably not loaded yet or your link is different. Put it in search because sometimes you put the public key with zero x, sometimes without zero x. So try both with and without. Sometimes it takes time for the frontend to register it every 32 ETH.
01:30:40.130 - 01:31:01.058, Speaker A: It will create another validator, right? Yes. Yes it is. Okay, so it will be for every 32 ETH. Yes, exactly. Exactly, exactly. Okay. Yeah.
01:31:01.058 - 01:31:28.314, Speaker A: Important questions like where are the keys stored? You have two things, keys and key shares. And this is the last thing after this we finish. But it's a good question. Here you see two things. You see a folder. Let me close frontend. You see a validator keys.
01:31:28.314 - 01:31:48.318, Speaker A: These are basically your validators. These are the private keys of your evaluators. And this is the deposit data. The ones you have generated. I have generated more. So I have more of these here. And I was saying that we are doing key splitting because we are depositing key shares to the SSV network.
01:31:48.318 - 01:32:16.884, Speaker A: And the key shares are in the surprise, surprise key shares directory. So these are the key shares that have been deposited to the SSV network. Perfect. So, yeah, thanks everyone who attended. Hopefully some of you got it running. Thank you, Marco, for the great workshop next we have another workshop. Just time to set up the pc and I'll introduce your next speakers.
