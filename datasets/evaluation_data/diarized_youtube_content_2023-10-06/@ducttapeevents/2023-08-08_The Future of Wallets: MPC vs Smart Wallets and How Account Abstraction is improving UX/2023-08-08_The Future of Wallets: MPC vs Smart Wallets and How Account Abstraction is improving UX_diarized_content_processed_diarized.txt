00:00:00.400 - 00:00:50.874, Speaker A: I'm Ivo, and I'm going to tell you about the future of Ethereum wallets, and more specifically, two pieces of technology which are going to define the future of Ethereum wallets, namely smart contract wallets, otherwise known as account obstruction and multiparty computation wallets, or NPC wallets. So let's see. I think the clicker is not working. Oh, yeah. So the thing is, why do we need any change in the way that wallets are at the moment? Well, there is a myth here, and the myth is that people are not ready for self custody and people are not ready to take this responsibility, and that most people are just not suited for self custody. Right. But the reality maybe is the opposite.
00:00:50.874 - 00:01:17.632, Speaker A: In reality, perhaps. Perhaps wallets themselves are not suited for people. Wallets are not suited for normal humans. So perhaps we are the ones who are not ready. I mean, the builders are the ones who are not ready for self custody and not the users. So, not sure if this is working. Yeah, it's working.
00:01:17.632 - 00:01:52.570, Speaker A: So what are the issues with self custody at the moment? Well, the thing is, the first one is onboarding. And onboarding right now hinges around seed phrases. And seed phrases are a completely unintuitive concept for normal people. And what I mean by that is that it's really hard to explain to a normal person, or even, or even a technical person who is not into crypto. Right. It's really hard to explain that the seed phrase is not an authentication factor. It's not equivalent to a password.
00:01:52.570 - 00:02:32.470, Speaker A: But instead, the seed phrase is equal to your money. So it is literally your money. If you lose it, you lose everything. And equivalently, if someone takes a picture of it, or if someone gets any kind of hold of it, you, again, lose everything. And people are not used to thinking in that concept. They're used to a different concept, which is that there is an account and there is multiple authentication factors to that account and multiple recovery methods, like, for example, a password or a two factor authentication, or someone else like Google, who would be able to recover your account. Then the second issue is that wallets rely on private keys.
00:02:32.470 - 00:03:26.962, Speaker A: This is something that we cannot get away from, but we can mitigate, and I'm going to tell you how. But the issue with singular private keys behind accounts is that it's so easy to compromise this. Like, if you get any sort of malware onto the machine, which is dealing with the private key, like not even holding the private key, but dealing with the private key in any way, shape or form, then the wallet is completely wrecked. The final issue is social exploits. So like social engineering and the way that many NFT holders lost their nfts. So again, this is something that we can improve on. Anyway, so what's the solution to all of this? Let's see if I skip the slide I might have anyway.
00:03:26.962 - 00:04:49.518, Speaker A: So the solution to all of this is kind of rooted in multisig wallets. And the reason that multisigs are sort of a seal over bullet is first of all, because we can improve on onboarding, because rather than relying on a singular key, which the user has to backup, we can use multiple private keys. And in that way, if we make the logic of the multisig good enough, and if we build recovery logic into it, then we can not have this reliance on a single private key and instead have, for example, two private keys where one of the private keys would be on your mobile device, the other one would be on your laptop, or one of them would be a paper backup, or even in your password manager or whatever. And in that way, you won't need to learn this concept of safeguarding a single seed phrase. So yeah, there is an onboarding improvement then also we have an account recovery improvement because we can do any arbitrary logic in multisig where we can say, for example, only one of the keys, or if you have a total of three keys, we can say three of the keys can sign immediately, but two of the keys can sign behind the time lock. So those two keys can recover the account. So even if you lose one of your devices, you can still build account recovery thanks to multisigs.
00:04:49.518 - 00:05:34.238, Speaker A: Then the other reason that they are great is factor authentication. So like you can sign transactions on your laptop, but you can have a secondary signer on your mobile phone. And also you can build logic into the multisig, such as if the funds, if you're moving over a specific amount of funds, then you would need a secondary factor. And then also, of course, they're more resistant to compromises. And this is something that the safe team has been talking about a lot. Obviously, when you have not a single of private key securing the account, but multiple private keys, even if one of them gets compromised, you're much safer. So let's look at the two ways to build multisigs at the moment into wallets.
00:05:34.238 - 00:06:17.714, Speaker A: So one of them is account obstruction, also known as smart contract wallets, smart accounts, smart wallets, whatever you like to call it, there are multiple names for it. And then the other way is multi party computation wallets, or NPC wallets. And basically MPC is a way. It's become known as a way to do ECDSA signing over multiple devices. And you still have, overall, you still have one private key, but you managed to shard this private key into multiple, let's call them mini private keys. It's not exactly what they are, but let's call them that. And then using a specific algorithm, you can distribute the signing over multiple devices, two or more.
00:06:17.714 - 00:07:12.132, Speaker A: And then the other solution, account obstruction, is basically having a smart contract as your wallet, as your wallet account. So the account can actually contain executable logic. And this allows you to build any arbitrary logic, not only a multi wallet, not only account recovery, but also other cool things that we're going to get into. So there's a bunch of Fud that's circulating about smart contract wallets or about account obstruction that recently got quite well debunked. But I think initially coinbase was kind of spreading it because of their NPC wallet launch. And they've come around since then, obviously since the rise of account obstruction in ERC 4337. But some of those myths are, first of all, that smart contract wallets cannot sign messages.
00:07:12.132 - 00:07:48.944, Speaker A: So this is false. There is EAP 1271 and it allows smart contract wallets to sign messages just fine. The thing is that Dapps need to implement it and dapps need to be aware of this. This is by no means to say that most, most dapps do not support account obstruction. Most Dapps do support account abstraction. It's only the ones that heavily rely on verifying signed messages that have to do this extra step in order to support account abstraction. But the good news is that many Dapps have been improving in that regard, and even OpenSea, which was one of the notoriously big broken Dapps with account obstruction, fixed this.
00:07:48.944 - 00:08:43.352, Speaker A: So yeah, then the second thing is that smart contract wallets cannot have the same address over multiple chains, and that they require an extra deployment step. You've probably seen this in argent, like when you sign up, you need to deploy your wallet, which to a normal person doesn't mean anything, right? So you cannot explain to a normal person that they need to pay a gas, they need to pay a fee for something that isn't even like, doesn't have a direct benefit to them. So this is again something that could be avoided. You can do create to counterfactual deployment and you can have the same address on every EVM chain and you can skip the deploy step. So you're not exactly skipping it, but you're deferring it until your first transaction. So the first transaction is going to be a bit more expensive, but as a user, you're not going to feel this additional step of deploying the smart contract wallet. And then the final myth is related to gas overhead.
00:08:43.352 - 00:09:30.910, Speaker A: And fortunately, through some clever optimizations, we can get the gas overhead of account obstruction down to about 10,000 gas. This involves a delegate call and this involves easy recovery operation. But the cool thing is that thanks to yearc 4337, we can get rid of the 21k gas overhead of every single normal EOA transaction, because 4337 allows batching on a block level. And if you get batched together with someone else, you can get this gas overhead pretty much eliminated. And then we have 21,000 overhead for eoas and then 10,000 overhead for smart contract wallets. So you can kind of make smart contract wallets even cheaper. So there is much more to this.
00:09:30.910 - 00:10:27.402, Speaker A: And one of the things that's cool about account abstraction again, versus NPC wallets is that you can do much more than just multisigs. You can do time locks which enable very cool account recovery use cases like social recovery, and you can do spending limits. So like for example, you can have a wallet which is controlled by your mobile device where you can spend under a certain threshold of a stable coin each day. And if you go over this threshold, or if you like to go into adapt, then you must use, let's say, a hardware wallet to cosign the other cool thing. And that's really, I cannot stress how important this is, is that smart contract wallets are mutable. And what this means is that you can change the authentication rules of a smart contract wallet over time. Why is this important? For example, in Amp buyer, we have this really cool feature where you can make an account with an email and a password, and it's still self custodial.
00:10:27.402 - 00:11:06.196, Speaker A: I won't go into the details of how this is done. It involves a multisig under the hood and kind of a lot of magic. But the point is that it does involve a software key. The software key is part of a multisig, so it's more secure than a usual software ua, but still, it's a form of compromise. Right? So the cool thing with this is that you can start with email and password authentication, and then as you become more experienced, more seasoned, and as you get more funds in your wallet, you can switch authentication to a ledger or to a trezor. And you can do this without having to move funds, without having to migrate staking positions. And you're going to keep the same wallet address.
00:11:06.196 - 00:11:42.092, Speaker A: So that's absolutely unique. Eoas cannot do this in an EOA, the key is the key, and the key is always associated with this address. So you cannot like magically change it to a multi seq without having to, without having to move funds. Then the other cool thing is gas obstruction, which is basically paying for gas in stablecoins, or even prepaying for gas, which is again, pretty nice because it can also move the account obstruction overhead, lower, reduce the account obstruction overhead. And then the final thing is batching. Batching is also called multicols. You can do multiple calls in the same transaction.
00:11:42.092 - 00:12:11.104, Speaker A: And this is really amazing because it can hide away the ERC 20 approvals. And we've been talking a lot about this in the community about how ERC 20 is flowed. And approvals are not great ux. But the reality is that this is something that should be solved in the world and should be solved by batching. When you have batching, you can bash the approval together with the operation and the user wouldn't even know about the approval. So it's greatux. And it keeps the simplicity of ERC 20 without having to create a new token standard, especially for this.
00:12:11.104 - 00:12:56.754, Speaker A: So there's a few extra things that account abstraction can do that MPC wallets cannot do and EOS cannot do. One of them is automation. So having transactions be executed automatically based on specific rules, and having specific things done automatically based on specific rules. So like a very simple example of this. Simple but at the same time impressive would be you can set like a liquidation rule for your wallet. So like, if the crypto market dips, well, that's, that's an example for weak hands, right? But let's, let's use it. If the crypto market dips 20%, move everything, like sell all the tokens for a stable coin.
00:12:56.754 - 00:13:35.094, Speaker A: And you can do this completely, trustlessly without delegating control to anyone else, just by delegating control to a contract which enforces this rule. And also you have, you can do flash loans through smart contract wallets, which is pretty incredible. Photo combo is an example of this. And finally, you can do advanced cryptography. And what I mean by that is there is a new standard which is now live in browsers called web authentication or Webauthn. And this standard is basically like having a wallet built into the browser. And it's live right now, people can use it, and Apple has their own version called passkeys.
00:13:35.094 - 00:14:23.274, Speaker A: And the thing is that this is something supported by big companies, and it's by definition, somewhat more secure and easier to use. As I said, it's supported by big companies like Google, Apple. And by having this built into smart contract wallets, you can have account recovery through the key that is embedded in your browser, which is pretty cool. So something else worth noting is that with account obstruction, you can do schnorr signatures. And Schnorr signatures compare pretty interestingly to MPC and to MPC signatures. So first of all, Schnorr is way more established and has been around for a long time. The reason we are not using it is that it had a patent for a long time.
00:14:23.274 - 00:15:15.222, Speaker A: This patent has now since expired, and schnor signatures are incredibly simple, incredibly proven over time. And there are multiple schnorr schemes which you can use for threshold signatures, for multi signatures, and they're very cheap to verify. Vitalik came up with a very cool, easy recovery hack which allows you to verify multiple types of signatures, including schnorr signatures, for only 3000 gas. So this is pretty unheard of. Anyone who's ever done elliptic curve verification on solidity knows that the minimum for doing an elliptic curve signature verification operation is like 500 hundred thousand gas. With this hack, you can verify a completely different signature scheme for only 3000 using exploiting kiss recover, so to speak. And this is basically a way to do a multisig with account obstruction in fixed gas.
00:15:15.222 - 00:15:45.628, Speaker A: So you can have like tens of signers or even hundreds of signers and verify a single signature for only 3000 gas. And it has a huge privacy benefit because you do not know who the signers are. So you can have a multi sequence hidden signer keys. So drawbacks of smart contract wallets and adoption challenges. So I would say the biggest drawback for now is that Dapps do not support EAP 1271. This has been changing. As I said, OpenSea implemented it.
00:15:45.628 - 00:16:26.710, Speaker A: So that's pretty incredible. But also we have this problem of some DApPs and some NFT collections blocking smart contract wallets. Not on purpose, but they block smart contract calls altogether without realizing that accounts or wallets could be smart contracts. They don't even think about it. So we should definitely educate developers that contracts can be wallets as well. And so since this talk was meant to position like account obstruction versus MPC, let's look at some of the benefits of MPC. So first of all, something that Schnorr also has, and I think that this benefit is kind of negated by the existence of Schnorr signatures.
00:16:26.710 - 00:17:08.484, Speaker A: But one of the benefits is that it's very cheap to verify MPC signatures, and you can verify them with a simple EC recover, or you can even sign normal transactions on layer one using MPC. So that's fantastic. And the other thing is that you can do truly multichain wallets, so you don't need smart contract support to do MPC. So you can have an NPC wallet, which is for both bitcoin and Ethereum. So yeah, if you're doing account obstruction, then you're limited to EVM chains, or at least to chains that support during complete smart contracts. So yeah, and you don't need any changes in DAPPS signatures, just work. I mentioned that there is no gas overhead and you can do MPC pretty universally across all chains.
00:17:08.484 - 00:17:54.500, Speaker A: But you do have some problems with NPC wallets. And other than the lack of all the features that I mentioned that account abstraction has, that MPC doesn't have. One of the other problems is that all of the cryptographic libraries are kind of new and kind of diY. Of course everything in programming is diY, but obviously we would feel better if the cryptographic library is established and is audited multiple times rather than something that popped up a few years ago. Then the other thing is that you cannot change the authentication rules once you set up an NPC wallet. And by the way, a lot of them have trusted setup, but that's another topic. But once you set up an NPC wallet, the authentication rules are kind of set in stone.
00:17:54.500 - 00:18:49.720, Speaker A: So if you would like to change some of the signers, you either do a trusted, you either do another round of trusted setup to exchange the keys, or you set up a new NPC wallet with a new address and you have to move the funds over to it then. Also currently you cannot do multiparty computation with Ledger and Trezor. This requires changing the firmware of the hardware wallets themselves. And yeah, basically you cannot do MPC together with hardware wallets, which is something that account abstraction can do. You can have multiseqs and you can have hardware wallets be designers of those multi seqs. So in conclusion, I would say that account obstruction and smart contract wallets are definitely more future proof, more rich in features. And MPC can be a fantastic transitory tool for like cross chain wallets at the moment.
00:18:49.720 - 00:19:02.454, Speaker A: But I would definitely say that the future is account obstruction 100%. So yeah, I think that's everything and thank you. I would love to hear questions.
