00:00:09.240 - 00:01:00.464, Speaker A: We are living the best for last, right? Because that's how it works. So before I start, I wanted to say I feel very inspired by it. Prague and what's happening here, this is really an amazing event and as I am inspired, I would like to return the favor and inspire some of you. Maybe you'll see what I'm talking about later. And also I would like to give a big round of applause to the crew and organizers of East Prague, which is very good and they are doing hard work here. So Bravo for the organizers and the crew, the guys that have to stay all day and listen to all of the talks. Anyway, let's get back.
00:01:00.464 - 00:02:16.602, Speaker A: Oh, I really like this big screen. Anyway, let's get back to the presentation. So oracles, the question about oracles is will they be a problem for you or not? Will they be a reason for you to end up losing all of your funds or not? And what we first need to answer what are oracles? So oracles take all of the gossip in the world. So take data from the real world exchanges or any other data sources, and then they turn that gossip because it's not verified. So it is gossip, they turn that gossip into fact. So reliable information that is accessible, that is verified and that you can use to do something on chain. If it's an information about the weather, it really does not probably make sense to put it on chain because unless you're using that information to do something on chain, it's actually useless.
00:02:16.602 - 00:03:28.454, Speaker A: But of course, the best use case we have are oracles for prices, prices of assets or real world assets or digital assets, whatever you want. And the important thing when you are using an oracle and what is or so interesting, everyone is at some point using an oracle because the blockchain is blind. Blockchain doesn't see anything beyond itself. So we need some kind of way to put the data from the real physical world into the blockchain. And this is what oracles do. But you need to know your oracles or be wrecked. Like if you don't do your due diligence and you do not analyze how the oracles work, what are the trade offs that this kind of, this system, like this oracle provider is using, then you can be another story on rect and you will lose a lot of funds.
00:03:28.454 - 00:04:11.874, Speaker A: So I am Pavel, I am an engineer at Chronicle and also I co founded it Warsaw conference hackathon and we closely collaborate with East Prague. So that's why I know how hard it is to organize a conference. That's why I reapplaunt the organizers and the crew for doing this next or not. Green button. Yo, the presentation stuck. What is it? Need some help? Yo, excuse me, I need some help. The presentation is stuck.
00:04:11.874 - 00:04:55.428, Speaker A: Yeah. So since we have this crowd here, maybe I'll use this to support echo. Yeah, let's wait a moment. Better than tatse. Yeah, no, that's the last slide. Give me the first one. Nope, let's go back.
00:04:55.428 - 00:05:29.512, Speaker A: Oh jesus. Okay, I'll do it myself. No worries. This happens. I know, it's been a long day. So oracles bring external data, and this external data make it available to smart contracts during transaction execution. Why am I emphasizing during transaction and data available? Because to me an oracle is something that has the same guarantees as the blockchain that you are using.
00:05:29.512 - 00:06:43.064, Speaker A: So if you are on Ethereum, your oracle needs to also be on Ethereum because otherwise you are losing some of the guarantees, the security assumptions of this actual blockchain. Oracles, part of the oracle system, are the validators that collect the data, sign the data and persist the data on chain. Oracles have their properties, there are multiple of them. And actually when you are integrating an oracle, so when you are a protocol that uses an oracle like Makerdao is using the oracles that we are building and we have never had a problem. And this project actually spun out of maker. So if it's good for maker, it is really good for anyone else. But there are properties that anyone using those oracles needs to take into account and needs to verify if this oracle provider takes into account those properties.
00:06:43.064 - 00:08:12.134, Speaker A: So one of the properties for oracle is credibility. How was the data acquired? Where did the data come from? Is the source like exchanges, are those exchanges actually reliable? Do you know for a fact, not as gossip, that this exchange posts actual data? And also what is the volume of transactions on that exchange and what's the liquidity? Because if there is an exchange that has very low liquidity, that means it's really easy to manipulate this price. And also when we are talking about credibility, how do we preserve the integrity of the collected data? That's something you need to take into account. And of course in most cases oracles, the oracle systems take the data and they do a signature on them, so they sign the data and send it. But you need to also verify how this process works and most of it happens off chain. So when you are integrating a smart contract, which is an oracle, you also need to take a look at how the data is getting, is being prepared. So also another aspect of oracles is accuracy.
00:08:12.134 - 00:09:35.920, Speaker A: How many independent sources were queried because if you have an oracle price for something and there is only one data source for that, that this original data source, then it really is not a very reliable source because you can easily bribe, for example, this exchange or this data source to manipulate the price and you are wrecked. Another aspect, how was this data model? So did we take, or did the oracle system take the data and just give it to you, or did it do some calculations? Because sometimes a price for a very extraordinary asset may not be accessible on the exchange. Then you need to calculate it. You need to go from this, from asset a to asset b and then to asset c. It's easy to calculate. But then how do you, do you know the model? And even if you apply a model and even you have multiple sources, is the model created in a way that it is protected against a single, single data source being faulty? So all of this is very important. Availability.
00:09:35.920 - 00:10:59.196, Speaker A: Data availability is the data on the same chain. So that means actually, this question actually means, will the data be available to you in an emergency? Let's say there is a market crash and you have some position somewhere in a protocol when you want to exit, you always need an oracle to tell you what's the price, so the system knows how much to give you back. But if, for example, a system or a protocol is using pull oracles, this is a new fancy thing that happened. Pull oracles or like oracle streams or whatever, then this data is not in for pull oracles. The data is not on the same chain. That means that this third party that is providing you with the data can be gone. And usually everything's fine when everything is fine, but when there is an emergency, when there's a market crash or something, it is very likely that the third party will be gone or will be not responsive enough to get all of the users to the required information, the required data.
00:10:59.196 - 00:12:10.388, Speaker A: So pull oracles, in my opinion, are not nice. Let's be civil. And also this third party that gives you data for polar codes, what is it? Who is it? What's behind that? And then how is it integrated? How is the data integrated into the protocol? All of that, you need to check for yourself because no one will give you insurance protection for you integrating something that is fundamentally flawed in this area, cost. Also, I think I have a beef with poor oracles, because pull oracles are oracles where the data is not yet on chain. The user that wants to do a withdrawal or exchange, they take the data, the oracle message, and they are paying for putting it on chain. That means that pull oracles are taxing. I know that's a bad word in crypto.
00:12:10.388 - 00:13:16.748, Speaker A: Pull oracles are taxing users to pay for the transaction of updating an oracle. And whoever integrated a pull oracle in their system can say, oh, our oracles are very cheap to update. Yes, cheap for who the user pays for that. Another aspect for cost, how does it scale? So for example, we usually use, like all of the systems usually use some kind of multisig. So you have multiple prices signed by multiple validators, and then if you have a multisig of two out of five, that is not very secure because you can bribe two entities and then all of your money is gone. Like millions of dollars, dollars can be gone. But for an oracle update, when there are only two signatures required, the price is not that high.
00:13:16.748 - 00:14:10.284, Speaker A: But when you scale the security, you automatically scale the price. So if you have multiple, if you have like seven or eleven or 13 signatures required and 13 signatures needed to be verified during an oracle update, that makes the transaction super expensive. And it's also fine when the gas price is low, but when the gas price is getting higher, you are getting rugged even if you're not getting actually lagged. So about cost, there's also another thing you need to think about. When we say that an oracle system secures, that's called tvs. Total value secured. Oracle system secures billion dollars.
00:14:10.284 - 00:15:26.730, Speaker A: Okay, how much does it cost to scam the protocol out of this? Billion dollars. If for some reason it is cheaper to manipulate the oracle than the gain that you can have out of doing that, then it actually is just a cost of operation. And then if you have a billion dollars protected by a system that can be manipulated with hundred thousand dollars, then it actually is fine. Or even if it's 10 million, you spend $10 million to manipulate something that will give you a billion dollars, then actually it's still worth it. So you need to watch out for that as well. Everyone using oracles, they need to closely look at what's the proportion of manipulation to the value secured. And also the total value secured is something that also needs to be verified because what does it actually mean? What's behind the number that oracle providers give you when saying total value secured? All of that needs to be checked.
00:15:26.730 - 00:17:03.664, Speaker A: Without that you are just asking for trouble. So next thing, transparency, it's a parameter, it's a trade off. Maybe the trade off is that the system is not transparent but you have some other way to, to be sure that the system is fared through and working properly. But usually the biggest question is who are the validators, who are the data providers, who are the entities that collect the data, sign it and send it to the oracle. What is their reputation? Because usually when you have a transparent system and you know who the validators are, what they are staking those validators, they are staking the reputation. If you don't know who the projects or entities are, who are providing the data or they are just unknown Randall projects that just popped up, it doesn't really make sense to consider them reliable. And if they have zero reputation to stake, then how like does it really make sense to use that kind of oracle? But when you have projects, reputable projects, that support and operate within the system, and then you can know that if they do something wrong or something will, like a bug will break the oracle, then you know that those reputable projects will also lose some reputation.
00:17:03.664 - 00:17:50.182, Speaker A: So it is in their best interest to look at what they are actually running. Consensus. So how do we determine what is the truth? Usually for prices we are using, all of the systems are using a median. A median is the middle value in a set of values. And the good thing about this median is that we are not, none of the prices that is not chosen actually affects the price that is chosen in the middle. Because it's not an average that we combine all of them and divide by the number of them. No, it's a median.
00:17:50.182 - 00:18:46.502, Speaker A: So it's just a choice of the value that is in the middle. Then if there is one, two or three oracles that are lying like way outside of the spectrum, that is something acceptable, it's just going to be ignored. So you need to look at how the consensus is achieved and you also need to look about how many participants are required to achieve consensus. And of course usually the best way and the best practice is for now is just more participants than half. So 51% attack might be possible, but it's quite unlikely. Permissions, that's super important. When we have an oracle, that is a contract, it has parameters.
00:18:46.502 - 00:20:00.322, Speaker A: So it says those parameters say how many messages you need, how many signatures you need, and who can actually be the signer of a message to be able to update the oracle. So when you have those parameters, you need to look at who can change them because in a normal day you have 13 required signatures. But then someone does something or someone gets hacked or something and they change the parameter to one. So you just need one actor and the oracle is broken and there is a lot of money probably lost. Another aspect, the changing parameter is one thing. But updating the oracles, typically the best practice is to allow anyone that gets their hands on the required number of signatures to just permissionlessly update. Because we don't need to check who is making the transaction, we just need to make sure that the data is verifiable.
00:20:00.322 - 00:22:09.310, Speaker A: And when we have digital signatures, then we send the data to a smart contract and the data is still, the data integrity is protected, you have verified data, but anyone can do it. So if, for example, someone like the system that is responsible for updating the oracle is broken, as long as anyone else in the public space can have access to those messages, the update can be done and the system can still work and the funds can still be protected. What happens when there's a red alert? So when there's a problem, when there's a hack, we need to think about that before it actually happens. So one of the parameters or properties of an oracle that needs to be analyzed is what's the probability and what is the impact of a problem of a hack. Let's say you have a system, you design something and there's not really a backdoor, but if you find a design flaw in the whole idea of an oracle, that makes the probability, how likely is it to happen that, I don't know, 13 independent actors collaborate to steal all of the money. If you know that, and if you analyze that, you can create a parameter to know how good is this oracle? And then even if they collude, if someone, if this hack happens, we need to think about the impact. Is this impact isolated to only a single protocol or does it break the whole blockchain? All of that needs to be taken into account when thinking about oracle.
00:22:09.310 - 00:23:37.364, Speaker A: So if you want to use a system as a user, as a normal person, if you want to use a system that uses some kind of oracle, it is really best for you personally to try and check is the oracle good quality or not? If you are a project that requires some kind of information that gets and gets it from an oracle, you also even like, that's even more important for you to analyze. Take all of the oracle providers you see, analyze it according to some of those parameters, all of them, look at them and compare them. Without that you are just asking for trouble. So the main outtake all of this, do not trust. We are saying that crypto is a trustless system. Yeah, it's trustless that you don't need to trust a person, you just need to trust the cryptography, the technology, and I'm sure everyone can find someone that understands it enough to and you trust that person and then they can verify, if that's the system is actually done correctly. So it is a lie that the blockchains are trustless, but overstatement, let's say.
00:23:37.364 - 00:24:38.740, Speaker A: But you need to trust someone. You need to trust either this person that verifies, or you need to trust your knowledge, or you need to trust in cryptography. But that's as long as distrust is way, way, way taken away from the actual system, the further the better. So never trust what anyone says, verify for yourself or verify somehow in a way that you feel comfortable with. Oh yeah. So independent verification, verification metrics and tooling as a public good. I'm sure you have heard of l two bit, which is a project that is right now a public good.
00:24:38.740 - 00:25:41.770, Speaker A: It is being funded by grants and they are analyzing L2s. They are analyzing them and they created a verification framework to look at all of the l two s and mostly call them on their bullshit if they are saying that they are very decentralized, l two bit checks that. And we need something similar for oracles. We need an l two bit for oracles. And as you may see, it is not yet found. Because what's very important about this kind of system is it needs to be independent. It cannot be a website or a project or a company that takes paid advertising, that takes investor money, because then the incentive for this kind of project or company is to do what the money payers say.
00:25:41.770 - 00:26:23.274, Speaker A: One money givers say sugar, that is, or whatever. Sugar mommies. The important part of such an analyzing framework is that it needs to be totally independent. I would like to build something like that, but I cannot in good conscience do it because I am working and I'm building oracles, which in my opinion are the best, they actually follow all the best practices and they would look really, really good on a chart with all of those parameters that I was talking about. But I cannot do it because I want it to be independent. So I cannot do it. But you can do it.
00:26:23.274 - 00:27:27.930, Speaker A: I'm sure there are plenty of you that are totally capable of creating a framework of analyzing and verifying what the oracle providers say. Are they decentralized or is it only them that, or do they only say that they are decentralized? Is the data available when there's going to be a problem and all of, all of the parameters they need to, they need to actually come to you and talk to you and answer all your questions. But the main thing you need to do it. I'm talking to the community of builders and other people that want to be in crypto, that we need oracles that are independently verified and we need to do it. It needs to be a public good and we just need to do it. Yeah. So I'm talking from the position of Chronicle Labs.
00:27:27.930 - 00:28:00.718, Speaker A: This is our contact info, our Twitter account and website, and you can see more of what we are doing over there. And we will be very, very happy to help you build a framework. But we need to be. It needs to be independent. Also, I'd like to plug the it Warsaw event, which is happening in September. If you go to this website, you can see more info about that. But my main message is about chronicles, that we need someone.
00:28:00.718 - 00:28:25.794, Speaker A: I do hope that you get inspired. How did that get here? I guess you can see that I'm a fan of Star Trek, so I do hope you guys, or someone, some of you, got inspired into building an independent system, independent framework for verifying what Oracle providers say. Thank you.
00:28:29.894 - 00:28:43.024, Speaker B: Thank you, Pavel, very much. Do we have any questions from the field for Pavel? There is a question. Okay, we'll give you a microphone so, so even those watching from home can hear you. Please.
00:28:45.004 - 00:29:19.738, Speaker C: Thank you. This is not a question, but more like a comment. We had today, the first presentation of the day from your colleague from Philipp from the Redstone, and it was quite interesting to hear from his point of view that the pool method is more convenient. And my comment is that I would like to, you know, have a panel between both of you, just to have a space for both of you to discuss that.
00:29:19.826 - 00:30:07.514, Speaker A: I'm thinking this could be part of the framework of verification of oracles. We could discuss how convenience is worth the risk because pull oracles are convenient. Of course they are convenient. But the question is for whom are they convenient? They are convenient for the oracle providers who do not need to pay for the infrastructure and pay for the transactions to update the oracle. So I do understand the argument, I understand the whole idea. But I wholeheartedly think that pool oracles are just asking for trouble.
00:30:08.454 - 00:30:09.118, Speaker C: Thank you.
00:30:09.206 - 00:30:10.034, Speaker A: Thank you.
00:30:11.974 - 00:30:19.574, Speaker B: Thank you very much. I see there is probably no more questions. So thank you very much. From cornicolabs, Pavel Zaremba. Thank you.
00:30:19.614 - 00:30:19.894, Speaker A: Thank you.
