00:00:01.160 - 00:00:34.946, Speaker A: Let me begin. All right. Hello, everyone. How do you do today? Ahoy evshikni yaxidis maday. So today I'm going to give a talk improving interoperability through hybrid roll up. This is inspired actually by the city of Prague. So let's begin a little bit about me.
00:00:34.946 - 00:01:23.774, Speaker A: So my name is Guo Ming. So Ming is my first name, although in my own language it's the second name, although we don't call it like that. So I was born in northern China, but I spent my childhood in city called Chengdu. So the picture here is actually, I went back a couple years to visit my childhood place and this is a natural habitat for giant pandas. And there were actually a couple pandas there, but when I took a picture, they just hide. So I'm the chief scientist of Metis, a smart layer two solution provider. My twitter handle is Dac economy.
00:01:23.774 - 00:02:26.482, Speaker A: This is a construct that I promote for decentralized economy. DAQ stands for DAC decentralized autonomous community, and it is a construct for a sustainable, decentralized economy, which is something I care very much. And I think it's at the heart of blockchain, ethereum, crypto, everything. So that's something I'm very passionate about. All right, I'm here to talk about layer two technology. That is something I do, and it is the technology we also develop at the meetings. So rollups, there's just many roll up projects spring up every day.
00:02:26.482 - 00:03:38.154, Speaker A: So do we have too many of them? And the question is actually a different one for the sake of adoption, because this is a point of view of developers and the end users doesn't see it as we do, because ideally they don't see roll ups, they don't see layer two. And for that matter, they shouldn't even see Ethereum. It's like when you're using the Internet, right? The cell phone. How many times do you think of TCP Ip or CDMA? So it is time for us to think from a product view. I know that develop roll up builders, we're at the bottom. There are usually a couple layers between us and the end user. There are middleware developers and app developers and they're the ones who have to deal with all this chaos.
00:03:38.154 - 00:04:32.558, Speaker A: So to make things easier, we should think of the middleware developers and app developers. What do they see? What do they think when dealing with users? I think an inspiration that I, by visiting this great city is Singapore city, right? The city is a perfect unit between function and community. A city was built to merge different, sometimes competing communities right. For cities, there's never a problem of compatibility. That's something prevalent in software development. But cities think in a different way. Cities accommodate people.
00:04:32.558 - 00:05:55.734, Speaker A: People come together to a city to live in harmony, not to live in the environment where they have disagreement and conflict. Right? There are conflicts, but they resolve them by living together. So what can we learn from a city, from a software developer or like role of a developer's point of view? This is important especially for rollup, because we're a decentralized software ecosystem. It's different than traditional software development. The keyword here is interoperability, which means that different functions work together. You can switch out parts, you can shift them, and they just work like a city. A city has many parts, many districts, and people can just go to different parts of city, different shops, different places, and that's how a city thrives and how it functions.
00:05:55.734 - 00:07:06.104, Speaker A: So we can definitely take a page from how cities are planned in the first place. And city planning and software development have many similarities. For example, zoning, right? So software usually divided the function blocks and connecting them with circuits and city connect different zones, different districts with roads, waterways. So there's a similarity there and we can probably take a page and try to fit everything together in an interoperable way. So what are the problems facing roll up design and what we can learn from city planning? So let's see some of the criteria. I call them the matrix. So in a city space there's universal, these universal factors, cost, time and task.
00:07:06.104 - 00:07:46.792, Speaker A: And in roll up space, yeah, we're also being constrained by these factors. So for cost in the city, there's living. Right. Living cost is a major issue when people living in the city, you visit any big cities, you know. Right. Some parts are expensive, so some parts are cheaper, but you know, further away from where you work, also time for you to commute in a city, sometimes you live cheaper but in a further place. And also tasks.
00:07:46.792 - 00:08:43.990, Speaker A: Tasks are the life that you live for work, for leisure, those are important because you live in the city, not just to stand idle. You do things, complete tasks, and this is the same for roll up space as well. So the cost is of course mostly transaction fees, time. We have important ones, confirmation time, finality. Those outside of roll up space don't really understand what they are, but they're important for you to design the software and tasks. We have very distinct but important categories. For example, withdrawal, withdrawal, some funds, and also most of the tasks that are not these type deposits, but they're also important.
00:08:43.990 - 00:09:35.574, Speaker A: So I'll talk about it now. We come to what I'm here to talk about interoperability in action. This is what we call hybrid roll up. Hybrid roll up creates the best of all worlds. By worlds I mean optimistic rollup and Ziki Rollup, they have different characteristics which are important for software infrastructure developers, middleware developers and app developers. But what we should do is that we shield users from all this view. They shouldn't be able to tell what roll up they're using if they have to know that that's a failed design.
00:09:35.574 - 00:10:39.058, Speaker A: So hybrid rollup marries optimistic rollup and ZQ rollup through interoperability design. And hybrid rollup is a result of a careful product centric design, because otherwise we could just use two, right? If we feel like a hybrid roll up, we can use hybrid rollup. Otherwise, zkrollup. So hybrid roll up is a product centric view design, which is important as we have so many solutions out there. So hybrid roll up serves diverse users, bringing harmony like a city of conflicting user cases. Just like a functioning city, right? A booming, sometimes chaotic, but prosperous functioning city. So we continue doing the musing on what we can learn from city planning.
00:10:39.058 - 00:11:38.764, Speaker A: So the challenges in this space, the roll up space, I mean, what are the challenges? So optimistic roll up, have this seven day fraud proof window. This is enough for now. But consider right now we're probably in a very bearish, very down market. Consider in three or six months, right? We have the coming boom of layer two, right? Layer two, boom, roll up, boom. So maybe the TVL would triple, double, triple. And it will become so significant, it's worth a major attack on Ethereum. Sometime you think this is unthinkable, but when the stakes are high, anything is possible.
00:11:38.764 - 00:12:35.306, Speaker A: So in that situation, the seven day fraud proof window might not be enough. So certain users. So here is, this is why it's important we talk about planning. So for certain category of users, they actually don't care too much about the fraud proof seven day window, right? Because they are not the withdrawal kind of users. Those are the deposit type, probably two banks or two private businesses, right? They want to deposit a large sum of crypto and they think, oh, seven day, this amount of money will attract attackers, right? They want to steal outfund. So they want longer fraud proof window. They don't, because they're depositing.
00:12:35.306 - 00:13:24.490, Speaker A: They don't have an urgency just to use it so they can tolerate longer ones. They want security. So can you provide a 30 day, 14 or 30 day fraud proof window? I bet most of people think of optimistic. They usually ignore this small but significant use case, because those actually involve a large amount of funds. All right, so this is some use case challenge for optimistic roll up for ZQ rollup. So we have many ZQM solutions, and EVM is constantly evolving. So there's EVM stability problem, right.
00:13:24.490 - 00:14:25.154, Speaker A: The circuits you developed for one version of EVM might not be compatible with a version three days from today. So it's a bit exaggerated, but, you know. You know what I mean? So unlike other mature vm, for example, like the Java Evm, Evm changes are very frequent and that make zke evm very hard to maintain. So those are the challenges. So how can we learn from a city planning point of view to solve those problems? Right. So we have to adopt a mitigation strategy for optimistic roll up. We designed in our project what we call ZK mips, that enabled a hybrid roll up that we can provide a much longer window.
00:14:25.154 - 00:15:18.742, Speaker A: And this is not by glue SDK Rollup with Optimix roll up. It has to be designed carefully, like planning a city. Like when romans develop a city, right? Roman cities are usually developed from roman garrisons, so their functions are already pre designed and pre planned. And based on this initial setup and city was developed this way. So this is how all these big cities started. Okay, so for ZK rollup to solve the EVM stability problem, we adopted MIPS instruction set. So this is a very stable instruction set.
00:15:18.742 - 00:15:50.024, Speaker A: It's not like the EVM. Also, they set in different planes of software, hardware stack. All evms are vms. They're software stack. And mips actually are cpu instruction sets. So they're much lower, much stable. All right, so how does hyper roll up work in a city planning kind of way? Not just kind of roll them together in an arbitrary way.
00:15:50.024 - 00:16:28.884, Speaker A: So we basically embed a ZK solution, ZK mips, inside an optimistic roll up. So this is still starts. So when you use the hybrid roll up, it still start as a optimistic roll up. Right. So transactions according to the use case will go at first optimistic way. So there will be a roll up to layer one. Right, as was just a pure optimistic roll up.
00:16:28.884 - 00:17:18.876, Speaker A: But most of the use cases that fall in the middle, right, they want fast withdrawal and they don't want to pay much, a lot of gas fee. Those can probably be utilized, be solved by ZK solution. ZQ roll up solution in our case is ZK MIps. These users will want low, scarce fee and also a moderate, well, you know, moderate confirmation and finality time. Those are not those we say they're instant, but they're actually not instant, you know, sometimes takes an hour or half, depending on your hardware. Right. So this suits certain users.
00:17:18.876 - 00:18:02.986, Speaker A: And remember the deposit users that we mentioned, I mentioned earlier, those can actually be accommodated by the rest of the optimistic route. We can give them 1530 days of frog proof window. So this is the hybrid roll up that suits a lot of users. A broad spectrum of users. And from product point of view, most of the app developers, midware developers, don't need to think which roll up to pick to use. Right. They just pick hybrid roll up.
00:18:02.986 - 00:18:20.934, Speaker A: Because hybrid roll up, by careful planning and design, solve the problem that different spectrum user face. Okay, I guess that's my talk questions.
00:18:21.094 - 00:18:22.034, Speaker B: Thank you.
00:18:23.014 - 00:18:44.154, Speaker A: Okay. Thank you. Oh, it moves. Yeah. Well, this is, this is, this is a little bit about what I mentioned, ZK Mips. So ZK Mips is our ZK roll up solution is very unique that basically the devs. You don't need to know anything about ZK.
00:18:44.154 - 00:19:00.714, Speaker A: So, you know, that's, you know, you can't dodge bullets, but we do it for you. Right. I'm telling you, when we're ready, you won't have to. So stay tuned for ZQ Mips. See you guys in Paris.
00:19:07.374 - 00:19:14.454, Speaker B: Are there any questions? If no, then thank you again.
00:19:14.794 - 00:19:16.002, Speaker A: All right, thank you.
00:19:16.138 - 00:19:18.794, Speaker B: Enjoy the ceremony in studio one.
