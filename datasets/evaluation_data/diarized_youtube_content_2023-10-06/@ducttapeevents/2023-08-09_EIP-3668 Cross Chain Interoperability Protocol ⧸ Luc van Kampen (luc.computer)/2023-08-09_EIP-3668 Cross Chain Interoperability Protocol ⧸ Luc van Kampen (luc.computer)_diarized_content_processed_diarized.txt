00:00:00.200 - 00:00:08.518, Speaker A: All right. Am I. Whoa. There we go. Am I audible? Awesome. Okay, so gmeth Prague. It's been absolutely hectic.
00:00:08.518 - 00:00:30.644, Speaker A: That's my disclaimer for this talk. It was made over the last 24 hours, and I have completely revamped it because of some crazy events over the last couple days. Alongside that, we're here and we're doing a whole bunch of stuff and we've got a whole bunch of people here. So I'm Luke. Luke ETH. I'm part of the ENS team. I'm developer relations at ENS and I kind of do a little bit of everything at v three x labs.
00:00:30.644 - 00:01:04.620, Speaker A: We are an open group of people that like working on public goods and open source, and we do all sorts of cool stuff in the ecosystem. So before I get started, I have a ten minute speaking slot and then we have ten minutes for questions. But I'm going to really quickly plug this super cool card that we have. We have ens swag. If you have an Ens name and you don't have a card already, come to the paranoia polis, the second floor and then to the paper hub. First on your right, you'll find us steps to obtain one final depos. Second floor and then first to your right will be right there, and we'll be able to print you a cute little card that has a Nimi page and issues po apps.
00:01:04.620 - 00:02:02.728, Speaker A: So swag DNS domains as well. I am totally very prepared and 24 hours ago, Vitalik decided to kind of drop a bomb real quick and make a blog post about all sorts of cool stuff happening in the ethereum ecosystem and kind of where the future is heading. So this is Vitalik's blog, and this is specifically the blog post that I'm talking about, the three transitions for Ethereum. So obviously privacy, l two scaling and smart contracts wallets are very important topics that we can cover. But further down in this post, you'll find a whole bunch of stuff about Ens and about cross chain interoperability and literally him basically doing my talk for me, which is kind of wild as well, according to Vitalik. Fortunately, the ENS team has stepped up and ens on l two is actually happening. ERC 3668 what my talk is about, otherwise known as the CCIP standard, CCIP being for cross chain interoperability.
00:02:02.728 - 00:02:56.750, Speaker A: Now, together with ENSIP ten, this wildcard resolution, it provides a way for ENS subdomains on any l two and other systems to be automatically verifiable and supported. So Vitalik made a lovely little graphic that explains it, but I think I might be able to do it one better, so let's give it a shot. CCIP the cross chain interoperability ABI interoperability protocol, just as difficult to pronounce as easy it is to implement, is a lovely little way to work on cross chain interoperability, essentially. CCIP EIP 3668, as you've heard me say twelve times now, is simply a standard that works for everyone, not just for ENS. It might have been written by some of the greatest minds at the ENS team who have built all sorts of cool stuff together, but this is not an ENS specific standard. This is a standard for everyone. It's an open standard, and it is obviously super freaking cool.
00:02:56.750 - 00:03:28.208, Speaker A: As you can tell, these slides were very last minute. So this is my second favorite, or my most favorite ethereum improvement proposal other than the ones I have authored, and it essentially describes the entire EIP spec and all of the other fun stuff. But there's two ways we can go about this. One, you can go and read this yourself and spend a couple hours trying to figure it out. Two, you can give it to chat GPT and have it summarize it, or three, you can listen to me cover it really quickly. The entire spec basically summarizes this. Yeah, fall out.
00:03:28.208 - 00:04:13.644, Speaker A: The entire spec basically summarizes this, a custom error code with a couple parameters that your smart contract can throw. Just so I've prefixed this this error code is supported in almost every Ethereum library out there. So if you've already built a DAP, if you have a DAp that's out there that already works, or anything of the sorts, CCIP will work with zero extra added effort. Once your smart contract throws this off chain lookup error with the parameters I'm about to explain, it'll reach out to the other chain or to a gateway and do all sorts of fun logic. So the off chain lookup function it has for starters, a sender. The sender is a string, super simple. Basically the person who executed this, this could be a proxy from a contract, this could be a contract, this could be the user, an EOA wallet, any of the sorts.
00:04:13.644 - 00:05:03.316, Speaker A: Next, a list of URL's. These URL's go to gateways, essentially because we are unable to provide a layer of trust between reading from l one to l two, as Ens's source of truth is on l one at the moment we need gateways. So this is a many of one trust relationship. You can provide as many URL's as you want here. And the client library will hit each of these URL's until it finds a valid claim that it can then verify with this contract again. So you write a contract on Ethereum mainnet, it throws the off chain lookup error and it has a second function called verify, and it will verify the signature that the gateway returned. This way you'll be able to ensure that the gateway isn't lying to you or doing anything of the sorts and simply just forwarding the messages from your trusted contract on another chain so it will reach out.
00:05:03.316 - 00:05:48.498, Speaker A: The gateway will then reach out to the other chain, and the other chain will then return all of the information as well as a little signature for the payload and verification that the gateway can then forward. And then all of the information is great and good. Sweet. Next we have call data in case you want to pass any of these specific information over which specific callback function you'd like it to call. So this is the id of the function that the smart contract, or that the library in this case will call on the smart contract to re verify the information, as well as extra data in case you'd like to send something else. So Vitalik kind of put it this way again, the lovely little schematic. Basically, the user interacts with it, the contract, the contract returns the off chain data struct with call data URL's and the callback function.
00:05:48.498 - 00:06:38.674, Speaker A: The user's client library then reaches out to the gateway, does all the fun information that reaches out to the l two, gets all the stuff, comes back and does all sorts of cool things. So what this means in EnS context, for example, is that if you own Vitalik ETH, or in my case loop ETH, I could give control to a smart contract of my name. Smart contract. I've written the smart contract, upon resolution, will reach out, throw the off chain lookup error, reach out to the gateway, reaches out to an l two, and then on an l two, I can do all sorts of magic that I can do with smart contracts, already issue subdomains to people who have an NFT, sell them, do any kinds of other kinds of cool stuff, and then all the way it goes back and it does all the fun logic. Again, sweet. We love this. Don't worry, we're almost at the end of the talk.
00:06:38.674 - 00:06:59.014, Speaker A: You can ask questions. This is probably my time. So I'm Luke ETH. You can find me on Luke contact as well as through the ENS app. And apparently my Apple Watch wants to join in on swag Ens domains let's talk any and all questions you have. That was my ten minutes. It went really fast, but let's go.
00:07:03.824 - 00:07:07.480, Speaker B: Okay, thank you. Luke. We have time for one very fast question.
00:07:07.592 - 00:07:08.324, Speaker A: Okay.
00:07:13.104 - 00:07:22.724, Speaker C: So is this solution limited to subdomains or it's possible to resolve the first domain on l two layer.
00:07:23.024 - 00:08:21.194, Speaker A: So currently this is specifically for subdomains of a name. However, because this is an open standard and because it can be used for anything of the sorts and EnS supports not just the ETH TLD, but also any DNS enabled TLD. We're already seeing other TLD's such as for example, the official icannapprove art TLD who have actually reached out to us and said hey, we'd love to do some blockchain stuff. Can we deploy smart contracts and take control of our namespace? And we said of course you can. And among with a ton of other TLD's art specifically is for example, they have a contract on mainnet that conditionally throws the off chain lookup error and then loads information from their regular web two source where they source of truth where they store all of the domains and all the registration. So it's the second, the first layer of domain. So Luke art stored there as well as if it's an emoji name, it'll read it off of the chain directly.
00:08:22.184 - 00:08:23.344, Speaker B: Thank you so much, sweet.
