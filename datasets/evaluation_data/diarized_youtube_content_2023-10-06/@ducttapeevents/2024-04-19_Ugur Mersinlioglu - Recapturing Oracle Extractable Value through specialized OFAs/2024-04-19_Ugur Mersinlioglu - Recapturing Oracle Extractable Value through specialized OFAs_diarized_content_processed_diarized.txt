00:00:00.160 - 00:00:30.490, Speaker A: Okay, perfect. Hello, welcome. My name is Ugur, I work at API three and today I'm going to be talking about recapturing oracle extractable value through specialized order flow auctions. Sounds like a very complicated topic, but it truly isn't. I've tried to break it down into, let's say technically understandable parts as much as possible. So let me start off. First off, what is API three? So API three is an oracle project.
00:00:30.490 - 00:01:16.606, Speaker A: Most of you know oracles when it comes to price feeds, so you need the ETH USD price to build a lending protocol. For instance, what do we do different than comparatively to other oracles? Typically how other oracles work is they rely on somebody running an oracle. They get data from somewhere like Coingecko, and then you trust essentially a layer of middlemen transmitting data from places like, like coingecko exchanges directly and so on. And what we do differently is we go to the source directly. So when we operate or partner with people, Coingecko in our example runs an oracle directly and then you use multiple, what we call first party oracles and aggregate between them. And that creates transparency and verifiability of what you're actually consuming. The oracle landscape is very interesting.
00:01:16.606 - 00:01:53.736, Speaker A: I just put some of them up there. They typically stand for something, but at the end of the day all of them kind of give you the same thing. You need a price on chain. And there's various different ways of doing this. I could do a presentation just talking about the pros and cons of various approaches, how centralized and decentralized they are. But for the sake of this presentation, I'll just say everybody here kind of gives you a price and everybody kind of competes for a place on this list. This is the Defi Lama Tvs dashboard.
00:01:53.736 - 00:02:45.962, Speaker A: So how much value are these oracles securing? How many protocols are using them? And you see on there like various different numbers, like how many protocols are using, for instance, chainlink and how much value chainlink is securing. And one thing to note about this, why I call this meaningful numbers without meaning, is I'll take API three as an example. Six months ago when we launched our decentralized feeds, we were securing 10 million. Right now we are up to 400 and probably reaching billions very soon. What do you guys think our revenue made in the last six months from 10 million to now? 400. Any estimates you zero. Yeah, basically no oracle on this list.
00:02:45.962 - 00:03:25.434, Speaker A: They could all five x how much they're securing, they're making zero money. So what is the matter if you're providing prices but you make actually no, no money doing so. And the current Oracle matter is literally you climb up the corporate ladder, which is the defi llama tvs dashboard. A lot of times you often see projects, quite literally bribing people with tokens to achieve integrations. Then you heavily market how much you're securing. Look, so many people are using us, we're securing billions. The fact at this point that you bribed people to use you or that you're generating zero money actually does not matter at all.
00:03:25.434 - 00:03:52.974, Speaker A: And then step three is you sell your token. That is the game plan of every oracle. Which leads me to kind of a summary of the current oracle space. So nobody makes money, everybody dumps on you. From a Dapp perspective, especially during bull markets, they see no difference. I purposefully did not go into centralization or decentralization, because in bull markets people just want price. They care absolutely zero about security implications.
00:03:52.974 - 00:04:33.628, Speaker A: And because of that, a lot of oracles simply have no competitive edge. And business development is literally promising people tokens to integrate. Obviously this is a game that we don't want to play, we don't want to build our business on top of token dumps. So if everybody does prizes, what else can you do to essentially generate a competitive edge? And we spent the last year looking into oracle extractable value. Oracle extractable value is a subset of MEV. So similar how your transactions on chain can create MeV. For instance, you can get sandwiched on Uniswap protocols utilizing oracles.
00:04:33.628 - 00:05:02.108, Speaker A: Oracle transactions or if no oracle transactions happen, can generate MeV on a specific protocol. I'll give you a very simple example that is super easy to understand. GMX. I hope everyone knows GMX here. It's a derivatives platform, so you can go 50 x long. What makes GMX special is they don't have an order book like centralized exchanges. What they do is you take that trade on the basis of an oracle price.
00:05:02.108 - 00:05:38.810, Speaker A: So effectively, if ETH is 3000 now, you can go 50 x long with 500k directly. At that price there is no slippage, nothing. So what that creates is a very big problem, because when an oracle updates, the oracle determines when your position is in profit or not. Like let's say the price goes up to 3050. So roughly 1.66% and you're 50 x long, that's almost 80% profit. But the problem with it being reliant on oracles is you see the oracle transaction in the mempool.
00:05:38.810 - 00:06:21.182, Speaker A: So what you can very easily do, and what happened with GMX, as do you can see on the chainside tweet on the right side. You wait. You see the price update coming from 3000 to 3050. You go 50 x long before the Oracle update and close directly after, and you're always in profit. And there's nothing GMX can do to stop you from this because you just read, you place your first trade before the oracle, the second trade after the Oracle close. This has been going on for 40 days late 2020 on GMX, and bots were able to extract 10% of all GMX profits across those days, which amounted to like a quarter million. Obviously now you're saying a quarter million over 40 days.
00:06:21.182 - 00:07:05.982, Speaker A: That doesn't seem like quite a lot, but actually the industry is quite significant. If you look at protocols like Aave compound or Venus, over the last four years, each of them has lost over 100 million each to oev. And now the question would be how so? Lending protocols rely on oracles to determine essentially what collateral is worth. Let's say you want to you deposit some ETH and take a loan against that. At some point your collateral, because ETH is, is dropping, might not be worth sufficient. So your health factor drops below one. That is kind of the magic number or the definition in lending protocols.
00:07:05.982 - 00:08:06.844, Speaker A: And at that point your position becomes liquidable. In order to essentially make sure that these positions also get liquidated, these protocols typically give out a bonus of five to 10% of your collateral to anyone willing to liquidate you. And that is effectively these hundreds of millions that AAVE and others are losing. And we're saying losing because essentially users are being overcharged in order to incentivize timely liquidations, just to give you the proper flow of how a liquidation on a lending protocol would happen. So the first thing that happens is an oracle updates that determines if your health factor is above or below one, if it is below one. Now, a bunch of searchers essentially see, oh, there's a position that I can liquidate and make these five to 10% off. And if we're talking like a million dollar position, those five to 10% can be 50,000 to 100,000 of potential profit for you just for liquidating that position.
00:08:06.844 - 00:08:40.344, Speaker A: But because it is so easy, typically a lot of people are looking out for that. So there's competition on the block space level in order to be allowed to liquidate you. So people essentially bribe blockbuilders in order to be allowed to be the first to liquidate you. And what then happens is that one searcher wins, they get the profits of the liquidation and pay the validator the bribe. Any guesses here how much that bribe amounts to. Just raise your hands and say any number that you want. Let's say 10%.
00:08:40.344 - 00:09:13.468, Speaker A: 95%. Any other guesses? Okay, 95 was pretty close. Essentially, searchers liquidations are so competitive that searchers are giving up 99.9% of potential revenue just to walk away with something. And on the right side, you can see the biggest liquidation on AAve in January, it was for 4.2 million, roughly. At the revenue section, you see how much are offered for that liquidation as a bonus, basically.
00:09:13.468 - 00:09:52.496, Speaker A: So 141,477. At the cost section, you see how much the searcher bribed the blockbuilder in order to be allowed to execute this liquidation. So 441,416. And the searcher walked away with $60 in profit. So we've established even if AAVE is giving you 141,000, you end up giving away 99.9% of it, and all goes to the blockbuilder. And the hilarious thing why we're talking about this anyway is that all of this is only possible because the oracle ignores that this value is there.
00:09:52.496 - 00:10:46.982, Speaker A: Theoretically, the oracle could update and liquidate in the same transaction, and all of this on the right side will never happen, because the oracle has the primary right to liquidation, because the oracle determines when liquidation is even possible. So why don't oracles do this? It's because of centralization. You want to keep the liquidation market open and allow anyone to compete, because if there's an unfair player, like if you have superpowers, and if you can determine when a liquidation happens, all the others will stop playing. And if you then ever fail to liquidate, the protocol ends up with bad debt. So typically, oracles stay away from extracting or liquidating themselves. Okay, so the status quo of liquidations, what do we have? We established the fees are way too high. We established this by proving that liquidators give away over 99% of what they're being offered.
00:10:46.982 - 00:11:31.560, Speaker A: And we've also established that, theoretically, the oracle has all the power in the world to execute the liquidation themselves. They just don't do it because of centralization risks. How do we solve this? And as I've said, these searchers take part in block space auctions. They already compete with another on the block space level. So why don't we take these auctions that happen on the block space level and take them to the oracle level? So instead of competing to be the first in order to be allowed to liquidate, why don't you compete for the oracle update that allows you to liquidate? Because that comes before anything else. And that is in fact what we've been building. Our solution is called the oev network.
00:11:31.560 - 00:12:17.674, Speaker A: It's a market for Oracle transactions. So you in effect envision Oracle nodes at the bottom left. They maintain a price feed through chosen mantle network. It's a L2 here and the ETH USD price feed. The important thing here to note is that essentially this price feed updates every 1% change, but it's delayed by 15 seconds. These same oracle nodes use the oev network, which is our own L2 for auctions and push real time signed data there. Now searchers can compete on this L2 for Oracle updates and they effectively, when they win, have a 15 2nd advantage over anyone waiting for the regular update to happen on chain.
00:12:17.674 - 00:13:04.010, Speaker A: And when they win, essentially an update, they take the signatures from all the oracle nodes, they update and perform their action. So essentially they win the rights to update the Oracle. They have 15 seconds to execute that write and then can update and liquidate and get all of the profits that are available just to essentially show exactly what happens on this L2, like I said, auctions. So for each dapp and each feed that a dapp uses on each chain, we run a separate auction. So envision compound uses ETH USD on arbitrum, that's an auction. Venus uses BnB USD on BnB chain, that's an auction. And you can essentially bid to update price feeds for specific dapps.
00:13:04.010 - 00:13:43.514, Speaker A: And when you win the ride you get a meta transaction. This meta transaction includes how much did you bid and on which chain did you win and which tab did you win. And then all the oracle signatures that you need in order to update the on chain price. And now the important part why we're actually doing this is the auction proceeds. All of them go back to the dapp. So these 141,000 that are going to the blockbuilder, we essentially now created an auction that just funnels it back to the dapper. And this is in effect the competitive edge compared to the other oracles.
00:13:43.514 - 00:14:27.456, Speaker A: We created a mechanism that pays you for using an oracle. You could use these funds to build an insurance fund, you could put it into your treasury, you could distribute it to lenders, to stakers, you could create a buyback program for your token. And considering the amounts of money we're talking here, like I mentioned, the three big protocols that I've shown, each of them lost over 100 million in the last four years. So that's 25 million a year. Basically that could be returned. But my favorite solution, and this is a bit of bias is to actually return it to the user. Because if you're a lending market that doesn't charge a 10% penalty on liquidation, you're just going to out compete everyone else.
00:14:27.456 - 00:15:28.650, Speaker A: Like why would I use someone that penalizes me for 10% for getting already liquidated, if I can use a market that minimizes that essentially entirely? And this model is quite similar to this. Does anyone know this? You notice, perfect. It's essentially mev blocker. It's a solution where you change your RPC to their RPC and they promise not to extract MEV from your transactions, but they even go a bit further, they essentially extract all possible MEV that is there and return 90% of that to you and they take a 10% cut. And that is in effect what we also do with the OEV network. So we just created an oracle where an mvv solution is inbuilt and all you need to do is you just change your oracle, you change one contract and you just use that Oracle. And now effectively, whenever there's an opportunity and people compete for a $4.2
00:15:28.650 - 00:15:46.974, Speaker A: million liquidation, you get paid in the process. And that is, in effect, I think already it's effectively more than just price feeds, and we are making money by doing so. One of the few projects that do. And if you have questions, hit me.
00:15:49.614 - 00:16:01.502, Speaker B: Give a round of applause. Woo. I love that. Very well prepared slides. I just fell in love in the whole design. I'm a marketing person, so in case.
00:16:01.518 - 00:16:03.374, Speaker C: You have any questions, can I possibly ask a question?
00:16:03.454 - 00:16:05.566, Speaker B: Questions, please? Of course. We're waiting for.
00:16:05.710 - 00:16:38.112, Speaker C: So two bits. First is that you kind of describe something where you have an auction mechanism in a tree where you could, you don't need to be part of the root of the leaf of the tree to recognize what you need to, unless you have a signature requirement, that's number one. What I mean by that is when a liquidation happens, you could pretty much assume like you can build a graph, a probabilistic graph. The end of the leaf of that node is actually the committing step. So me as an observer, I could actually see that. And then my next step is going to the MEV pool and then front run.
00:16:38.168 - 00:17:13.408, Speaker A: That's probably, you can't, because the essentially what we give you is a right to. Each DAP reads its own proxy data feed contract, and what you win over a L2 is the right, like the right to update is also enshrined in the meta transaction. So your specific address won the right to update, and only your address can update so people can't frontrun you to update the oracle. What they can do is wait, hope that you miss the 15 2nd window and liquidate you after. Liquidate the position after.
00:17:13.456 - 00:17:18.288, Speaker C: Can I be most cynical? What's the assurance that you are the like?
00:17:18.376 - 00:17:18.616, Speaker A: It's.
00:17:18.640 - 00:17:30.456, Speaker C: If it's an open pool, you are just one of the players in the open pool. Yeah, right. What am I saying is I don't have to be in your pool to see the transaction and I could probably go in front of you. Can I or can I not?
00:17:30.640 - 00:17:54.868, Speaker A: Are you talking now about the auction specifically happening on the L2? Yeah, we have collateral. I specifically didn't go into it because it got too technical. But on the L2 there are, there are collateral requirements and basically searchers that don't execute get slashed. Basically you give up a collateral and once you update it, you can unlock the collateral again with the hash of proving you updated the data feed. Otherwise you just gave us a bunch of money.
00:17:54.916 - 00:17:56.668, Speaker C: Yeah, that's literally what I was about to ask.
00:17:56.716 - 00:17:57.904, Speaker A: Ok, thank you.
00:17:58.844 - 00:18:07.324, Speaker B: Wow. Thank you so much. More questions, please. We have some five minutes for the questions, otherwise I will ask a question. Perfect.
00:18:09.504 - 00:18:39.668, Speaker A: Thank you. How do you run auctions on the L2? Are they open bid auction or commit and reveal auctions? It's a sealed bid, essentially. Yeah. Participants don't see what other participants bid. So there are many research papers out there that essentially prove why this method is the best. So people essentially bid the maximum amount that they're willing to bid because they can't see what others bid. And that's how you get, like, it is not guaranteed that you get 99.9%
00:18:39.668 - 00:19:02.414, Speaker A: of the profits, but seeing how similar auctions occur on the block space level on Ethereum, it is almost guaranteed. So the only thing that you need to make sure happens on the L2 is you need enough participants. And if you have enough participants, it's going to strive towards the maximum value. And that is like one of our core challenges. Like, we're very confident that people are going to compete. We just need the people.
00:19:06.514 - 00:19:07.130, Speaker C: Yes.
00:19:07.242 - 00:19:09.854, Speaker B: One more question. We see it's coming.
00:19:11.674 - 00:19:12.026, Speaker A: Yeah.
00:19:12.050 - 00:19:17.194, Speaker C: How long is the delay in the bidding window? And if a black swan event happens.
00:19:17.274 - 00:19:49.718, Speaker A: Doesn'T the very good question delay make it worse? The situation? Yeah. So basically there are two methods of getting the data. So the L2 has real time data, so it is effectively a pull oracle, if you know what that is. And the base feed on the network already is delayed by 15 seconds. So when you get data from the network, there are essentially two conditions how you win. You can just in time bid where you realize the price is now there. I need to make a bid.
00:19:49.718 - 00:20:27.600, Speaker A: I have 15 seconds. Then it might take a couple of seconds. I think we tested this like three for the auction, like for the oracles to realize, hey, somebody just bid and just won. So you might lose 3 seconds, but you still have twelve to execute and front run the regular oracle update. Or you already have placed bids in advance, which you can do because you can simply calculate at which point is the position liquidable. So you just calculate, hey, if ETH drops to 2500, this position is liquidable. So I'm placing a bid at 2500, and if it hits that, it's immediate, basically because the condition is already on the chain.
00:20:27.600 - 00:21:09.180, Speaker A: Like the oracle nodes know already. If it's 2500, I'm going to post this data and this person has won. Does that make sense? It's not predicting you. Essentially how you partake in these auctions is you place bids on these L2 and if price under 2500, I'm bidding so much for that update. So you can pre calculate a lot of positions. Like if you take out the loan on AAvE, you have a liquidation point that is very easily calculatable. So searchers can already in advance place bids at your liquidation point.
00:21:09.180 - 00:21:53.718, Speaker A: They just need to, every time they recalculate, check if something has changed, like did this position, post more collateral, what is the new liquidation price? Then cancel their bid on the L2 and place a new bid. Because it's very obvious, like it's similar to how binance shows you what the liquidation point is. This is no different on chain. People know where you get liquidated and here they have the chance to make bids for those points instead of waiting on the oracle. They can essentially say, if 2500, give me the price and then they will take the price and liquidate you. But if there is no delay, is that compared to other bidders? There is. Once somebody has won, there is essentially a 15 2nd block on that auction.
00:21:53.718 - 00:22:11.724, Speaker A: So essentially you win, you have 15 seconds to update. And if you don't update in those 15 seconds, the auction essentially picks up the next one and awards them the bid. There is more than enough time to win. We checked this with searchers.
00:22:13.984 - 00:22:25.084, Speaker B: Nice. It's all about timing, execution users. Last question, how many users you would like to get within the next three, six months so you can say, wow, that's a success.
00:22:26.984 - 00:23:02.986, Speaker A: I think our goal is to reach, like, it sounds stupid because I kind of trashed this tvs dashboard of DeFi llama before, but we created an environment where that number actually matters. The more you secure, the more potential liquidations, the more potential money you return to the Dapp, the more potential money you make. Because essentially, for every dollar we make, we returned $9 to the DAP, essentially. So our goal is to have as many integrations as possible, which is kind of getting easier when you're offering people basically free money that others don't.
00:23:03.090 - 00:23:04.674, Speaker B: So 100,000, 1 million?
00:23:04.794 - 00:23:05.290, Speaker A: What?
00:23:05.402 - 00:23:07.290, Speaker B: How many users? 100,000, 1 million.
00:23:07.402 - 00:23:18.306, Speaker A: No, we're talking about specific protocols. So, like, it's going to probably be like 50 to 100. So we're talking about protocols, not specifically users. Yeah.
00:23:18.450 - 00:23:21.914, Speaker B: Cool. All right. Thank you. Thank you. Let's give a round of applause.
