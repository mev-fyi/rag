00:00:12.960 - 00:00:50.260, Speaker A: Good morning. It's great to be here at East Prague again. And today I want to talk about wallet to wallet messaging and how it needs to be decentralized, scalable and interoperable by design to really have an impact. The messaging ecosystem. About me so I'm Stefan cooks. I am the CEO of DM three protocol, which is a web3 based messaging protocol, fully open source as public goods published so that everyone can use it for free and contribute to the ecosystem. Yeah.
00:00:50.260 - 00:01:57.524, Speaker A: Today I want to talk a little bit about wallet to wallet over three messaging and discuss why interoperability, decentralization and scalability is really important to build such protocols. Then I will show you how we did this in DM three protocol and summarize what we have talked about. Yeah. What is wallet to wallet communication? So when in web3, we have keys, and when we use our keys to build our identity and then send messages to other wallets, to other applications, then we talk about wallet to wallet. Or we can also say web3 messaging. That means we use the technologies and all the good things we have in the web3 world and use this for web3 or four messaging solutions and overcome some obstacles from messaging solutions we have right now in our world. Before I go a little bit in detail, let's go a little bit back in history.
00:01:57.524 - 00:02:41.228, Speaker A: So when we talk about messaging, so we can say that the first real digital messaging solution was email. So it was in the early days of the Internet. So it started with more or less decentralized network. And it was, we can say, the first killer application of the Internet. So we could send messages from one to another. So what is with email? It's a kind of decentralized, we have these decentralized message servers, but it's almost every, almost every communication is unencrypted. It wasn't the beginning, and actually it's even now.
00:02:41.228 - 00:03:15.112, Speaker A: So most of the messages we have in the email world are not yet encrypted. Some years ago, now it comes. So the web3 messages came. So we have these big messages, which are now most common in our daily life. And in the beginning, they also did not use encryption. This changed. So at the moment, most of their well known messages at least proclaim that they are using end to end encryption.
00:03:15.112 - 00:04:05.488, Speaker A: So, but we have one big issue. So they are all siloed systems, all closed ecosystems. If you are using a messenger, you can only send messages to another one. In this ecosystem, if someone uses another messenger, you need more messengers on your phone. So when I look on my communication screen, on the smartphone, I have at least seven or eight communication tools, messengers, email clients and so on. So at the moment, there is no real solution. There is no interoperability possible from the privacy perspective, of course, the message, the content of the message is encrypted, but the metadata, as a whom I send in message true, is open for the operator because it's a centralized system.
00:04:05.488 - 00:05:13.134, Speaker A: So I cannot have real privacy in such a centralized system. So when we now talk about web3 messaging, then we want to establish self serving communication. That means the user, I should be responsible and in full control of my communications. And yeah, what is web3 messaging? So first we have our keys, we have our wallets, and these keys we have, we can use as identity. So when you look at email, so often when you receive spam emails, you get it from an identity which looks like a well known person or that they impersonate others, because it's easy to manipulate this protocol. So with web3 solutions, we can provide this because we can sign our messages with our keys and then we can exactly see who was sending the messages. Decentralization is also a very important topic.
00:05:13.134 - 00:05:54.604, Speaker A: So as I said, in a centralized system, you cannot have real privacy. So if you want, and we need privacy, then we need also a decentralized system. So yesterday there was a great presentation from Waku, and he said privacy is normal. So privacy should be the default, not privacy. So all the single point of failures are a problem in decentralized world. So even the big messengers, so I don't want to say the names, but in the last year in Germany, there are at least three times where these messaging servers were not available because some of the servers were down. So in a decentralized solution, this cannot happen.
00:05:54.604 - 00:06:26.614, Speaker A: We don't need to be to talk about encryption. This is state of the art. Of course, web3 messaging needs to be fully end to end encrypted, with no exceptions about privacy. I already talked. It's really essential that we provide solutions which can preserve the privacy of the users. And then one topic I think is very important to consider, this is diversity. So in the web two world, most of the messaging solutions are working in the web two ethers.
00:06:26.614 - 00:07:02.560, Speaker A: If I am the monopolist and I have old users, that's best. So we see, so these big mechanisms, they are growing. And if you come with a new solution, this can be as innovative as possible, but it's really hard to get into the market because they have these closed ecosystems. In the web3 world, we learned that diversity is a great thing. We see it in the clients. For instance, for blockchain Ethereum, they have multiple clients. If some client fails, the system is not destroyed by doing this.
00:07:02.560 - 00:07:31.262, Speaker A: And in the messaging world, I think it's really important also to have diversity. So every one of us uses office products and there are the big office products. And I don't know who uses all the functions in these products. I do not. And maybe you also not so. But to have everything in this tool makes these tools really complex. And a lot of people cannot use all the functions.
00:07:31.262 - 00:08:14.214, Speaker A: And when we compare this with messaging, of course we can build messaging solutions focused on special communities. Now, for instance, I can have a messenger which is focused on an NFT community. But if I'm not interested in nfts, this message would be overloaded for me. A lot of functions I cannot use. And with a decentralized and indoor operable ecosystem, we can build messaging solutions focused on special ecosystems, focused on special communities. And I think this is a very interesting thing. But what is needed for this? We need interoperability, otherwise it will not work.
00:08:14.214 - 00:08:56.012, Speaker A: Yeah, and the spam maybe is the last point on this slide I want to mention. So every one of us knows the problematic of spam in email. It's some studies say up to 90 and even more percent of the messages are spam. And the only way to do anything against it are blacklist. There are filters and if there are some criteria are met, this message is filtered and maybe the sender is blocked. We all know this is not really efficient. And in web3 it would not even work because it's really easy.
00:08:56.012 - 00:09:49.490, Speaker A: If I use an address as the sender identity, it's very easy to generate thousands and millions of new addresses. So that's why we need better methods. But with web3 methods, we really have nice things we can do that we can really solve the spam problem. Yeah, but what is really essential? When we talk about, I talked about a lot of different features, but what is really essential? And from DM three side, we discovered there are three points really essential. So first we need a central but decentralized registry for communication profiles. So everyone who used one's encryption in email, with PGP for instance, knows how complicated it is to establish this. So I used this for many years.
00:09:49.490 - 00:10:13.126, Speaker A: I always did send my public key around with my emails. And you can guess how many encrypted messages I received. You need no fingers for this. Nobody answered with an encrypted message. So what was the problem? Very easy. There was no standardized way how these encryption information can be shared. Now, everyone did it in a different way.
00:10:13.126 - 00:10:47.214, Speaker A: One publishes on a website, one on a service, one on the mail, no standardized way. So in web3, we have the nice tools. We can use a smart contract based application. We are using Ens for this, to have a central but decentralized and permissionless registry for this information. So the second thing is we need a decentralized network to distribute the messages. So there must be not a single server in between which is controlling their messages. We need a decentralized way.
00:10:47.214 - 00:11:27.526, Speaker A: So in web3, we have a lot of different approaches. There are some approaches using a broadcast network, that means you send a message in the network, it's distributed in the network, and on another node you can receive a message if you are able to encrypt it, to decrypt it. So there are also other solutions. So we are using a relay network. That means we have a decentralized network of nodes which can be used as message relays. So with this, we have a full self drain mechanism, so everyone can run his own service or can use any others. And with this have a decentralized way to distribute the messages.
00:11:27.526 - 00:12:28.064, Speaker A: And as I mentioned before, to enable web3 based messaging, we need interoperability. Even the biggest messenger in the web3 world is very, very small compared to the web two messaging solutions. And when we try to build a lot of very small solutions, it's very hard to get into the market. So we need interoperability to build this messaging system where everyone can select what messenger he or she wants to use. About these problems, I already talked that we have the problems in the web two world, starting from encryption over privacy, that it is controlled by companies. And in web3, we still are in this siloed world. Now we have a lot of interesting solutions, but they still are siloed services, and most of them are not yet scalable enough.
00:12:28.064 - 00:13:34.978, Speaker A: They are really good for a smaller community. But when we think about that, this could be a solution which goes to the mainstream and is connected to a lot of messaging solutions, then we also need scalability, and then we can establish interoperability. So why, why we need this interoperability, then the user should be able to decide what is the messenger I need for my work. So right now, as I said, I have on my phone, and I think it's similar on your phones, a lot of different messengers, because I'm communicating with a lot of different people. So I use in my work, Msnshall, with persons in the crypto community, another messenger. And yeah, it would be much better if I have one messenger which fits best to my needs and then I can communicate to other messengers as well. So also we have a lot of depths which need messaging included.
00:13:34.978 - 00:14:21.006, Speaker A: Not this could be a marketplace, it could be a wallet, it could be a game. So where we need embedded messaging. And a lot of these projects I talked to, they said, yes, we need it, and we also build something to include messaging. But this is not the main issue of these applications. That means in most times they build a simple messaging solution with a centralized instance, often not even encrypted, because this is a very side project. So, but when we build for instance and web3 application, then we also should be, or should include secure messaging. So I already talked about that.
00:14:21.006 - 00:15:11.164, Speaker A: It is right now all the communication is controlled by these big companies. We think this should be a history, this should be the past, the new messaging in the future should be not controlled only by these companies. About diversity. I already talked and now I come to the UX. And when we talk about UX in the web3 world, we see it's sometimes complicated. So we need to integrate very good methods that a user can have a nice UX and helping them to be connected with a lot of different solutions with a good UX can be a very strong way to establish these communications. And the last thing about indoor property is regulation.
00:15:11.164 - 00:16:41.104, Speaker A: So we know we live in a world where we have some regulations, and especially here in the EU, it's per default, the big messengers are enforced in the future to open their interfaces, so that interoperability might be possible. But when we think about this, we see that this regulation and what happens sometimes goes in a complete different way. Of course, some of the big ones now are opening their interfaces, but we need much better interoperability methods so that messengers can be connected, even if the big ones are not willing to contribute to this. So why do we need decentralization? Why is decentralization so important? So first I talked about already we have, we don't need a single point of failure. It's not good if we are dependent on one provider, and if this provider is able to shut down the service, or maybe has a problem in his ecosystem or infrastructure, then the service is out of, out of work. So also we have the possibility of censorship. Maybe we are living in countries where it might not be the biggest problem right now, but a lot of people are using messaging and they have the problem that they can be censored.
00:16:41.104 - 00:17:45.980, Speaker A: And it also can happen to us if our identity is managed by one of the big companies and there is something they decide, okay, this was against our, our conditions, then our identity could be closed down or blocked, and then we cannot even communicate. So there are also some examples in the past where people from the crypto community, they were banned from Twitter or X, so that they not even could react on what was happening there. So privacy is also a very important topic. So privacy must be the normal, must not be an exception. It's not a crime to look for privacy. Also, when we talk about privacy, there must be different levels of privacy. In a game, maybe I don't need that much privacy.
00:17:45.980 - 00:18:28.694, Speaker A: What I would need when I talk with my lawyer, or if I am a whistleblower and communicating with a journalist. So we need privacy, and this is nothing, which is only for a small community. Every one of us should be aware that privacy is a riot and we should have this. Yeah, and as I also said, to control my communication by myself, to be self in my communication, I need this decentralization. Now, if I am dependent of a provider, I cannot have this self. So of course not everyone wants to use it. There must be also services so that persons can decide.
00:18:28.694 - 00:19:05.766, Speaker A: But yeah, we should be able to manage everything self thoroughly. Yeah. And what needs to be decentralized? I already mentioned it. First, we need this registry where all the information, how to communicate with someone else. This must be decentralized, permissionless, trustless. There must not be one party which controls this registry, because then it doesn't matter if I have a decentralized network to distribute. If this information is controlled by one party, then we have this network.
00:19:05.766 - 00:19:53.804, Speaker A: We need a distribution network which is decentralized. And of course also the storage of my communications. This must be something I can decide where to store it. If this is controlled by a single party, I have the same problem, scalability. Why do we need scalability? When we look into web3 based messaging solutions, often these topics like decentralization, encryption, privacy are in the foreground, and these are the important topics we talk about. If you want to stay in a niche, this might be enough. If you say, okay, we build this only for some special use cases, this might be enough.
00:19:53.804 - 00:20:50.070, Speaker A: But my vision is that this decentralized communication becomes the normal. And if we want to become a standard, a new normal, we need scalability. So when we see the big messaging solutions we have right now, they have 6200 and even more billion messages per day. This is a huge amount of messages combined with attachments, multimeter and so on. It's a big data pool. So now this is controlled by single parties, they have big data centers to do this. So if we now come with an interoperability approach and are not able to handle a portion of this, we have a problem, because then if we are successful, we will die.
00:20:50.070 - 00:22:10.436, Speaker A: We must be or must look at the scalability from the very beginning. Otherwise it's not possible to build such an interoperability system. And that's why when we think about this, we need to select architectures which allow us to have the scalability. This doesn't mean that other protocols could be focused on other topics and could be not that scalable, but the interoperability layer must scale well. So what is the DM's three protocol? So first, it's very important to understand, so with DM three, we don't want to replace all the existing nice working solutions, not in the web two, and not in the web3, so, but we want to connect. So, and if we connect, then we need to consider that others are not having some problems by using this. So a lot of problems when we talk about indoor probability is that students say, okay, I have this special application for privacy, so if I now connect to another network, I lose a portion of this privacy, or I have a special encryption, so I cannot, because then I would need to change something.
00:22:10.436 - 00:23:07.712, Speaker A: So when we build such a solution, we need to build it without compromising privacy, security and ux of other solutions. With DM three protocol, we have this decentralized network of message relay nodes. So the protocol itself can be used as full features messaging layer. That means I can build my application on top of DM three protocol, finished. So then I'm compatible of course, to all other team three compatible apps. But what happens if I have another messaging solution which should be integrated in this network? And here we have these message relay nodes which also can act as gateway or as bridge to other systems. So with this we have this descentless network, people can use it, but also we can add other systems.
00:23:07.712 - 00:23:54.094, Speaker A: This could be decentralized networks, this could be centralized solutions. They can be added to this network using such a gateway. And with this they keep in their ecosystem all the features they have. Privacy and security are still valid, but they are connected so that they can send messages around over the boundaries of their network. And this is the bottom, we need this registry. If I want to send a message across different systems, I need a registry to find information, I need to connect to this partition events. I don't want to talk a lot about this architecture.
00:23:54.094 - 00:24:36.188, Speaker A: The DM three protocol is based on ensuring. So we are using Ens as our registry for the communication information. But you can say, okay, then it's only focused on Ethereum. It is not. So we are using mechanisms to connect any other data source to ens to have the registry distributed on all systems. For instance, you can store the data on a L2 and have a special reservoir to a subdomain of ENS so that you can use an ENS name for this. But the real data is somewhere in other network, even on a centralized server.
00:24:36.188 - 00:25:28.914, Speaker A: We also can attach these sources to ens. And this makes it very comfortable, because if you need such information, you have only to connect to ens. If it's directly available, you get it. If it's connected using CCIP, then the reservoir will give you the information where to retrieve the information and how to prove it. And then you get the information, go back to this contract and can verify that this information is valid information. Then we have this protocol layer, and in this protocol layer we have a lot of modules which can be used, and also in application layer you can have components you can integrate in your application as well. So that is very easy for you to build DM three based applications on top of this.
00:25:28.914 - 00:26:30.234, Speaker A: Okay, it jumped out my summary. So with DM three, we have a protocol which is intended to build a connected ecosystem. And with free messaging, now we have free messaging, we can solve a lot of the problems we have in the messaging world today. And our approach is let's work together. So as we do it normally in the web3 world, that we build a connected system, use all the interesting and good things, and then build together something which can change the messaging world which we have now, and bring it to a better state. If you want to contribute, everything is open source, you are invited also to participate in the process. Just use it, discuss it off, contribute everything is welcome.
00:26:30.234 - 00:26:35.754, Speaker A: Okay, thank you very much. Are there any questions?
00:26:40.934 - 00:26:58.074, Speaker B: I just have a question. If it's possible somehow for a state to block this architecture in the future, because as you know, for example, in case of telegram, some states block it because of different reasons. So I'm curious if it will be possible somehow to overcome the situation in web3.
00:26:58.814 - 00:27:00.950, Speaker A: You mean if it's possible to block.
00:27:01.062 - 00:27:17.454, Speaker B: I mean if it's possible to overcome the situation, then some state, let's say, say, I don't know, China or some other state will want to block the messaging solution. Let's say web3. If it's possible to somehow to overcome the situation by decentralization of some other.
00:27:18.034 - 00:27:53.414, Speaker A: Yes and no as a yes, of course in the same way how any web3 technology can be forbidden by government. And of course they can, but physically they cannot, because everyone can run such a node, it's not possible to stop the system. Now, if I have a centralized service, I can block this, but if everyone can run his own message relay node, you cannot stop it.
00:28:03.294 - 00:28:10.438, Speaker C: Okay, thanks. Hi, my name is Chandor. First question I would have, how large is the network? What state are you at?
00:28:10.526 - 00:28:39.124, Speaker A: Yeah, so we developed the core protocol in the past. This is ready. It's up and running. So we also have a reference implementation on our website. You can use it. And now we are in the face that we have all these connections to other ecosystems, that we build a lot of connectors to layer tools and so on, which is now also up and running. And now we are going in the next stage, that we connect other networks and other solutions into the dm three world.
00:28:39.704 - 00:28:48.404, Speaker C: Okay, another question. Is it possible to interconnect your network and decentralized storage solution?
00:28:48.924 - 00:29:15.684, Speaker A: Yes, of course. So the DM three core protocol is not about storage, because sending messages is our core protocol. And we say that the storage is a task of the client. And here we say it should be as decentralized as it is needed. It could be local, it could be in a decentralized storage, it could be also in a cloud service. It depends on the demands of the clients and the users.
