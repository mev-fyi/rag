00:00:01.160 - 00:00:42.524, Speaker A: Thanks. Thank you everyone. So yes, I'm Akron working at Ledger as a developer support engineer. So today I will show you. It will be a two part presentation, first one and quick overview of the different open source integrations we have at Ledger. And the second one, the second part, it will be a presentation workshop to show you quickly how to build a quick web app interacting with a ledger hardware device. So let's quickly dive into the different integrations pathways we have with Ledger.
00:00:42.524 - 00:01:33.604, Speaker A: Many people doesn't necessarily know, but most of the integrations at ledger or most of them open source, they are doable by us internally but also by external partners. We have many, let's say four layers of integrations. The first one is the embedded app integration. If you're familiar with Azure hardware device, the first step to use it is to have your embedded app regarding specific blockchain installed on it and before developed on it. So the embedded app are the first layer that are built on top of the basic firmware layer. This is the first step that will allow you to interact with the protocol. This is something we did.
00:01:33.604 - 00:02:26.286, Speaker A: It was done by us at the beginning a few years ago, but we tried to let it be done by external partners. Our repo is open so you can have a look at it, check how the embedded app are done, clone the repository if you want, and also you can do your own embedded app by yourself. You can do what we call a side loading on your hardware device. So it would be your risk to do it. But you can do your own custom app from a clone of a previous app and custom it and side load it on the device. So this is the first layer of integration. The second layer that comes right after the embedded app integration is the blockchain support or blockchain integration.
00:02:26.286 - 00:03:12.724, Speaker A: So you have this first layer that allows you to have your embedded app on your device. So this is the first step. The second step, if you're familiar with the leisure hardware device, we also have a kind of software wallet, our companion app. So to allow users to use your blockchain directly, for example on the software wallet you have to do this blockchain integration to allow them to manage, use their coin directly on the companion app. And same thing. It's open, it's open source. You can clone previous blockchain integration from the repo, custom it, do it yourself or with the team because it's lots of work, and then submit it if done.
00:03:12.724 - 00:03:57.314, Speaker A: So these are the first two big layers of integrations. There is another integration that comes, let's say on the side. It's the live app integration. So what is a live app? It's kind of application could be a DAP or a non Dap that you embed directly through the software wallet. It will allow users to be able to use directly your Dapp or on the companion app, but you will need something else on top of it. Type of plugin we call it, because we promote that ledger, what we call clear signing to know what you're signing directly on your device. Not to do by signing.
00:03:57.314 - 00:05:00.884, Speaker A: The plugin is kind of an embedded app also, but a little more custom and same thing. We have our repo which is open with the list of plugins and you can clone it, work on it, and also do your custom way. This is the third layer and the last one and the easiest one and the one that I will base my next part of the presentation, what we call the connect your app integration. This integration is the fastest one. It's just a bunch of library you have to import and to put it inside your dapp. To allow your dapp to be able to interact directly with the hardware device. To be able, depending on the connectivity you will choose, you will have different type of libraries and you will be able to allow your dapp to be able to talk, let's say like that with the ledger hardware device.
00:05:00.884 - 00:05:41.614, Speaker A: So this will be quick kind of presentation workshop. We won't have time to do it as a workshop, but I will give you all the links if you want to try it for the prerequisites we need. So as I said, this workshop is based on the connect your app integration, the easiest one. So for that you will need to ensure that you have the right package manager, your ledger hardware device if you have one. Hope so. With the Ethereum app installed, generate an ethereum address and use the right libraries. I will show you just after.
00:05:41.614 - 00:06:19.034, Speaker A: So to get started. So as I said, ensure that you have everything set with the Ethereum app, your device and everything installed. For this we will be using the EIP 191 on signing messages. This is the one that will be used to sign messages on this workshop. Let's call it that way. You have the link to the repo if you want to have a look at it. A ledger example ledger signed personal message if you want to take a picture or as you want.
00:06:19.034 - 00:06:54.918, Speaker A: And once you clone this repo, you just have to launch these two commands. NPm install and NPm run start and this is what you should have. So as I said, quick web app. We don't do too complicated. This is how the web app looks like. And you can see that you have a hash mymessage button that will be explained just after. So depending on what you want to do on the hardware device, you have first to think about the behavior.
00:06:54.918 - 00:08:20.190, Speaker A: So the behavior I choose for this, let's say workshop, is to open my, so my hardware device, open my Ethereum app, click on the hash my message on the web app, you will receive on your hardware device a message test to sign and you will be able also to sign it or cancel it on your hardware device. So after signing the message, the web app will display two things, the hash of your message and your Ethereum address displayed just below. And if you want to ensure that it's your Ethereum address that signed this message, you can go on Runkit.com. Enter these two lines, just replace the hash displayed comments by what you got on the web app and normally it should retrieve your Ethereum address. So how does it work? So as I said, it's the connect your app integration. So depending on what you want to use on the connectivity part of the device, you will choose the right transport library. So on my side, as I'm using the Ethereum app and there is the transport web hid library for the connectivity, I choose this one.
00:08:20.190 - 00:09:01.774, Speaker A: You also have the web usb, you also have the web Bluetooth. So depending on what you want to do, you will choose the right transport library. So ensure that you're using the right one. And on the repo you will find the kind of dock with a list of functions. And as I said, it depends on the behavior you want to get with your hardware device. So based on the behavior I wanted to get, these are the different functions I choose to interact with my device. The fourth line, I don't know why it's looking like that, but it's the function that allow you to hash the message.
00:09:01.774 - 00:09:43.364, Speaker A: So normally it's sign hash, something like that. I don't remember, but this is this one. And so, and as I said, depending also on the behavior you want to do, you will have different calls between the hardware device, your web app. You might encounter errors at every step. So depending on the error, you also have a list of errors that will be displayed and explained. And depending on that, you can manage to do your integration. That's it.
00:09:43.364 - 00:10:37.392, Speaker A: Quickly, before ending this, as I said, our repo is open, so we welcome everyone to contribute to it. We have a double challenge, the first one to enhance our open platform, but also to listen to external developers. So we have to find the right balance between these two, these two groups, let's say like that, but we prioritize customer satisfaction. So at the end we will have the final say on that. And if you want to become a partner, reach out to us, don't hesitate. And a few links to from what on what you can have a look. The first one, the developer portal, everything I said is written also on it, so you can have a look at it.
00:10:37.392 - 00:11:13.264, Speaker A: So it's at developers dot ledger.com. We also have a discord server where you can ask your questions. And if there is ledger developers free, he will answer your questions. We have a kind of goggles explaining different journeys. And the last one, our repository, the ledger Ashq repo, which is open. So you have all inside embedded apps, blockchain integrations, live apps, documentation, everything and that's it. Thank you very much.
00:11:20.164 - 00:11:26.774, Speaker B: There's time for questions. There any can you run over there? Thank you.
00:11:37.514 - 00:12:20.104, Speaker C: So when every chain, every coin can create their own app on ledger, doesn't it create some protocol or format compatibility issues, like do you have universal format? How different chain build transactions? And my next question also related is if these JavaScript libraries are also covering some apps written by external entities, like different protocols than what ledger maintains.
00:12:21.184 - 00:13:08.446, Speaker A: Okay, so for the first one, yes, we might encounter protocol compatibility issues sometimes. So we have a let's say strategy. We favoritize what we call EVM, like chains first. For the rest, when it's too complicated, it depends on the, let's say return on investment. If it's a chain, for example, on the top hundred or on the top 50, if it's complicated, but that we can figure out a solution, we can do it, but it's together. So it will be done externally. But we have kind of regular calls to explain how to do it and external partners follow the road, we explain to them.
00:13:08.446 - 00:13:22.274, Speaker A: So depending on the complexity, yes, we prioritize and then we see at the end for the, the more complex one at the end. And for your second question. Yeah, yeah, go ahead.
00:13:22.814 - 00:13:27.494, Speaker C: So there are this embedded apps, right? You call this embedded apps?
00:13:27.534 - 00:13:27.686, Speaker A: Yeah.
00:13:27.710 - 00:13:45.214, Speaker C: So if embedded apps are created by an external entity, then do you have like matching set of this JavaScript or typescript libraries actually, or ledger needs to build it, how does this work?
00:13:46.114 - 00:13:47.574, Speaker A: Could you repeat the question?
00:13:48.114 - 00:13:56.282, Speaker C: So there is embedded app and then you have this JavaScript or typescript code to interact with Ledger.
00:13:56.458 - 00:14:01.602, Speaker A: So these are two things. So the first one the embedded app, and then the JavaScript, they need to.
00:14:01.618 - 00:14:03.594, Speaker C: Be compatible with each other, right?
00:14:03.674 - 00:14:23.302, Speaker A: The JavaScript side is when you, for example, you have your dapper application that want to be able to directly interact with the device. And on the device it will depend, of course, of your chain. If your chain is on it's EVM compatible, for example, it will be easier. For example, it will be able to assume it's not. What?
00:14:23.438 - 00:14:24.558, Speaker C: Assume that it's not?
00:14:24.606 - 00:14:38.018, Speaker A: Yeah, assume that it's not. It will depend on if the embedded app is already integrated. So if not, there is a need to integrate the embedded app first and then do the rest. Okay.
00:14:38.066 - 00:14:40.570, Speaker C: And then both parts are maintained by.
00:14:40.602 - 00:14:56.974, Speaker A: The same entity, the embedded app, or maintained by the one who did it. So either it's the foundation, either it's external partners we have and the libraries. Yes, it's by us. Thank you. You're welcome.
00:14:59.674 - 00:15:43.512, Speaker D: Thank you. So, non technical question we looked into, like using ledger. I mean, the whole point of using a cold wallet, I suppose, is that you don't want it online, that you want to have that extra layer of security. At the same time, it's not as practical as being online and connected. So this connection layer that you explained there, to what extent does that open up risks and how could that be mitigated? Because you are connecting than online. And I mean, God knows where the connection potentially comes from if you're not a coder. So what's your recommendation for actually doing that connection but being on the definitely safe side of having the advantage? Why you chose ledger.
00:15:43.608 - 00:16:20.384, Speaker A: Okay, so even if you're exposed online, when using it, you have another layer of security. We have a kind of. So when you're using your device, you have inside it a secure element. So everything that is displayed on your screen is the truth. So if you want to be sure that you're not exposed, you have to verify what you have on your screen and also what you have on your device. So if what you have on your screen and what you have on your device are different, you potentially exposed to something. So that was the check you showed of the.
00:16:20.384 - 00:16:49.114, Speaker A: Yeah, for example. And you also have. Another thing is we promote clear signing. So many people, when they sign something on dapps or other application, they often sign type of hash. So it's a line of letters and numbers you don't understand. So they sign it because they know that they asked for it, but they don't understand what they said. So what we want to promote is clear signing.
00:16:49.114 - 00:17:11.374, Speaker A: It kind of translates this hash into understandable sentences that will be showed on your device. So then when you sign on your device, you're understanding that you're sending, for example, ease to this address and you know what you're doing. So these are two main elements to take into account when doing this to be sure that you're not exposed online.
00:17:13.614 - 00:17:17.594, Speaker C: How complex transactions can you display on the screen?
00:17:22.694 - 00:18:02.944, Speaker A: Yeah, send receive staking NFTs when you send an NFT or so. Yeah, it's pretty small, but we are launching, I have it on me so I can showcase it. We are launching a new device with a bigger screen we promoted a year and a half ago, but we are a little late. So you have a bigger screen with that and you will be able to display more characters, more information, and you will have a better user experience also for non crypto user, for example.
00:18:05.744 - 00:18:07.604, Speaker B: Amazing. Thank you so much, Akar.
00:18:08.344 - 00:18:08.824, Speaker A: Thank you everyone.
