00:00:11.880 - 00:00:24.430, Speaker A: Thank you so much. Let's see if this works. Awesome. Awesome. Yeah. Thank you so much all of you folks, for coming. I'm very excited to have you here because I will be talking about some things I consider rather important.
00:00:24.430 - 00:01:12.044, Speaker A: I'm going to talk about the next Ethereum upgrades, about its scalability and how cats fit into all of this. And yeah, maybe you heard about the summoning ceremony, maybe you heard about dank Sharding. And that's what we are going to dive into today, because the whispers from the shadows tell us, powerful spirit of dank Shard. So what is the dank Shard? And to understand that, we need to look at the Ethereum roadmap first. So you might be familiar with this picture. It's the updated roadmap from Vitalik from like maybe a year ago almost, or something like that, a few months back. And as you can see, we managed to do a big move here where we finished withdrawals this week in Chappella.
00:01:12.044 - 00:02:28.540, Speaker A: Of course, the biggest upgrade in Chappelle was push zero, but also withdrawals and stuff. I mean, huge, huge kudos to all devs, to finishing this, because we see there are multiple tracks, multiple these boxes of things that needs to be done on Ethereum that people are working on implementing and researching. And today I'm going to look deeper into one of these boxes, especially the surge. And as you can notice, the surge is talking about the scalability, about EIP 4844 having, what does it say, 100k transactions per second? Oh my God, roll ups. Yeah, I hated the estimations there, but yeah, let's work with this. So we will talk about scalability and what does it mean? Or what is the problem here? Why do we even need to talk about this is the trilemma or dilemma that we have in blockchains? Because the whole point of Ethereum, the whole point of bitcoin, the whole point of this ecosystem, is to be decentralized and secure in a way that each of the people sitting in this room, I would say, and many, many people in the world, are able to actually verify what is happening in Ethereum. That's what makes it trustless, that's what makes it centralized.
00:02:28.540 - 00:03:27.854, Speaker A: Right? All of you, I see some folks with the computers here, I believe all of the computers I see here are able to run the Ethereum client and verify everything which is happening in Ethereum. But to verify everything means that more things there is in the everything, the harder it gets, the more computation you need, the more storage you need, the bigger computer you need. And it gets incredibly more expensive. That means that just the richest from this room would be able to verify it and the decentralization would be sacrificed. So our goal is to actually scale Ethereum to enable to put more things in there while not increasing the demands, the requirement for verifying everything. And well, the reason for it, it's supposed to be a GIF, but it's in PDF, I'm sorry. But yeah.
00:03:27.854 - 00:04:16.484, Speaker A: So the reason for it, you might notice, especially in those days of DeFi summer that the gas are pretty high. And that's the thing, right? I mean we've been talking about having some world computer accessible to everyone, but if it's going to cost ten or right now it might be a few dollars or tens of dollars, sometimes maybe hundreds of dollars per transaction. That's not very inclusive. So we want to make Ethereum to be scalable, which means enable lower fees and at the same time stay decentralized as possible. So here comes the search. And the search is the search is all about the layer two scaling. You might heard about that and we'll get there.
00:04:16.484 - 00:05:47.374, Speaker A: But first you might notice the word in the beginning, the sharding, because it all starts with that. Like the sharding is this I was thinking in Ethereum community, which was discussed since like years and years ago, I don't know, seven years back, more 2023, like eight, nine years maybe. And the idea was the execution sharding in a way that. So in right now we have after the merge we have Ethereum. The Ethereum right now looks as the execution, the actual, the actual data, all the transactions, all the contracts which are driven by the beacon chain, by the coordination layer which is doing the consensus that decides what a validator consider valid or not. And the idea of sharding is that we use this beacon chain layer to actually coordinate not just the Ethereum execution as it is now, but many other layers or shards. And the sharding was something which seemed like far future few years back and it still might sound like where are these shards we are still hearing about? But today we have the layer twos, right? The ZK are optimistic layer twos and these are scaling Ethereum today and how rollups work.
00:05:47.374 - 00:06:48.014, Speaker A: Just to give a quick summary on that. Well they roll up the data and put them on Ethereum. The idea here is that in case of optimistic roll up or I mean in both, we have basically a separate chain, its own network execution layer and its own data. And we just either create a proof or just compressed version of this data. And we put that on Ethereum. So imagine that I can do many transactions on the layer two or on the roll up, and I pay for the gas fees on Ethereum itself just for a fraction of it, because I'm able to roll it up like this. And I have two ways of doing it, either using some fraud proof mechanism which can decide if there was something executed not correctly on the layer two, or using validity proof in ZK.
00:06:48.014 - 00:07:25.592, Speaker A: But no matter what, what it means is that I take this roll up data and I put it on Ethereum. So yeah, this is what I was explaining. This is how the Ethereum looks like right now. We have the consensus layer, the execution layer, all the transaction, the EVM, the Ethereum state is here, and rollups are putting more data into the state. They are using what we call call data to basically just store data, their transaction data, or the validity proofs in the Ethereum itself. So we have this bunch of these roll ups, they put the call data to Ethereum. So this is how it looks like today.
00:07:25.592 - 00:08:05.364, Speaker A: And if you try to use rollups, you might notice that it's still not as cheap as some people would like to. It's still few cents, maybe a dollar or even few dollars per transaction when the fees on the Ethereum goes high, because, well, the fee that you pay for the roll ups is mostly determined by the Ethereum mainnet gas fees. That's because we store all of this data on Ethereum. Arbitrum is missing here, which is like the biggest chunk. It would be like more than 10gb of data. So let's say we have like 20 something gigabytes of data stored in Ethereum. That's incredibly expensive.
00:08:05.364 - 00:09:01.956, Speaker A: And all of your computers, if you are running those nodes, are storing this data, which are kind of useless if you think about it, because we already use them. So we have, because in these two mechanisms, in optimistic roll up, in optimistic roll up, you can create a fraud proof only in some given period. So if after a week, nobody create a fraud proof, nobody create a proof that the execution on the layer two was incorrect based on the layer one data. If nobody does that, then we consider it, I don't want to say finalized, but unchangeable. Nobody can challenge it anymore. And after this week or a few weeks, let's say the data is still sitting in Ethereum, but it's completely useless because, well, it can't be used for the fraud proofs anymore. In case of ZK, it's similar.
00:09:01.956 - 00:09:35.950, Speaker A: We have the validity proof. And if it's verified and settled once, why should we keep it forever? There? Okay, so now enter the proto dunk sharding. I'm sorry, I have alarm because I used to wake up at this hour and it's another phone. I'm sorry. Yeah, okay, I think I just snoozed it. Let's see you in ten minutes. Anyway, we are putting the data on Ethereum itself, but with the proto dunk sharding.
00:09:35.950 - 00:10:09.080, Speaker A: So the proto dunk sharding is the EAP 3844, also called the blob carrying transactions. So we are introducing these blobs, basically a new kind of transactions. And this transaction is especially because it has a backpack. It has a backpack called blob. And in this blob we have arbitrary data. We don't care what data it is, it's just some chunk of data that a transaction takes and puts it actually on the beacon chain. It's puts it on the consensus layer in a way that sitting here, it will disappear in a few weeks.
00:10:09.080 - 00:11:13.916, Speaker A: We will store it only for a month, let's say. And while we are storing it there, what the hell, how can we reach it? What I'm doing right now is when you talk as a user, your wallet, or if you're a smart contract dev, you're talking to the execution layer, you're talking to the RPC of the node, right? And that's accessing all of these data in EVM. But the data is not there. Now we don't know anything about the data, but what we have is a commitment to this data commitment. It's sort of a proof that a data exists or existed at a time in this form. So as a layer two, I'm connecting here to the execution layer and I verify that the data, my roll up data is in the blob on the consensus layer based on this commitment, this KCG commitment. So yeah, that's basically what we are trying to achieve.
00:11:13.916 - 00:11:57.426, Speaker A: Why? Because now if I don't need to use the call data here, I don't need to execute anything in the EVM, I just create this KCG commitment from a precompile and it will be basically no computation. And the data storage is ephemeral. Right. The data, again, the blobs doesn't have to be there for more than a few weeks, because then it's useless for the fraud proofs. And the layer two needs to keep its history by itself anyway. So your node will just store this data for some bigger amount of data, just for a few weeks, then dumps it. So there is some upper limit that it reaches.
00:11:57.426 - 00:12:41.188, Speaker A: And this way we can save a lot of resources and still save a bunch of data, and therefore make it much, much more cheaper, like magnitude, amount, magnitude, level of cheaper. And yeah, there is this discussion that it's not really execution sharding, because we are working with the blob data. So the current meme is that we dunk scale the blob space. It's like the latest nomenclature noticed. The Denkun is the upcoming upgrade. Now, we had the chappella, and the next one will be Denkun. That's the current focus right now.
00:12:41.188 - 00:13:29.646, Speaker A: That's what is considered for the inclusion there. And the core dev community is now doing its best to finish the research, to finish the implementations on the 4844 or the dank scaling the blob space. So now back to the commitments, back to the idea. I don't want to dive, dig deep into into it, but the idea is that we have a polynomial. The KCG commitment is basically a polynomial commitment. What we are able to do here is represent the pieces of data that we have as a polynomial. And if you have a polynomial, you can prove that you know the data without the data itself, just by referencing some point on the polynomial.
00:13:29.646 - 00:14:23.868, Speaker A: Right. And the KCG is a bit more complicated, but it's one of the ways how to do it. And it was decided to be used because of its features. Here is a nice summary of various ways how it could be done, and you see why KZG, the first column here was chosen to do it. So we need this KZG cryptography to create commitment for the protodank sharding, and then for the dunk sharding itself. So the idea right now with the 4844 is to create, basically to take the current layer twos, and thanks to this cryptography, make it more scalable, but already forward compatible with the full dunk sharding. So the dunk sharding right now is idea is based on data availability sampling.
00:14:23.868 - 00:15:13.414, Speaker A: I don't have to go there, but the full dunk sharding will be based on reading pieces of data from the various shards. And thanks to the data available, sampling. Basically it ensures that the data is available again, thanks to polynomials, thanks to that. It's like the erasure coding, like in the DVD's, right? When you scratch part of your DVD, it still plays because it can calculate what is missing there. So this is like the full dunk sharding. And before we get there, we get this protodunk shard. Dunk sharding is named after Dankrat Feist who was researching it, and the proto dunk sharding by Protolomda, who took the idea of already using the KVG to create the blobs.
00:15:13.414 - 00:16:01.580, Speaker A: And as you can see here, the only problem with this KCG, or like the main problem first of all, is that we are using, we are using, we are using pairings. It's a bit more complicated cryptography, so there is some complexity to it. But the main problem that you can notice is that it requires the trusted setup. Now that's a scary thing. And many people were scared to hear that Ethereum should have some sort of trusted setup, because it's something which didn't gain a lot of trust in community over past few years, I think. Now what is the trusted setup? So, yeah, trusted setup is a way how we are going to invoke the spirit of Dankshart. This is the spirit of dunk Shard.
00:16:01.580 - 00:16:46.754, Speaker A: It's Dankrat as a spirit. So. Right, yeah, first of all. So the thing here is that for KCG, or maybe also like snarks, some ZK cryptography, you might know that we need what is called structured reference string, like some secret which is created for the cryptography setup. And it needs to stay secret because it's used to actually create those proofs. We use it as this reference point. And in case that somebody knows this number, the secret number, they can create false proofs, they could create commitment to data which doesn't exist, let's say.
00:16:46.754 - 00:17:31.284, Speaker A: And he would break the whole security setup of Ethereum. So we need to create, we need to craft this number in a way that nobody knows it and nobody can reveal it. That's not an easy task, but that's what a trusted setup is. And it works. We are going to do it with so called multiparty computation ceremony, which means that many people can connect to the ceremony using their computer. Add to this computation and we get output, which is set up, but not one person, but by many people. You might heard about many of these setups in history.
00:17:31.284 - 00:18:45.510, Speaker A: Basically any snark crypto like starts with Zcash, where they did it, like maybe ten people in a hotel. Then they destroyed their computers, so they don't store the data which created the setup. But there's been many other of these ceremonies for Toronto, cash, for example, for aztec, in Ethereum. And how does it work in these, generally in these ceremonies? What we are using here is called powers of tau. And you can imagine it as a relay race because it works in a way that we have some initial setupper, and now the first person adds his secret, adds his data, and does the computation, creates basically a public key, which is not revealing his secret, it's just the public part, passes it to the next person. Again, he adds his secret, does the computation, creates a new public key or the public data and moves it to the next person. And we create this chain of people with each person adding their secret to the system.
00:18:45.510 - 00:19:49.964, Speaker A: And the assumption here, the whole security assumption here, is that unless everybody gets together to redo the whole ceremony, everybody reveals their secrets, it's secure. Oh, here it is again. It's basically one honest party assumption. If there is at least one person who does not reveal the secret they put into the ceremony, the whole ceremony is secure because you would need each party to reveal the final secret. So this is a way how we can make it, how we can make it secure. And the ceremony has been going on for months, maybe you haven't noticed, but it's been, you see, it's been almost a year since the initiative started, because we need to create, we need to finish this, we need to make this multi party computation to create the secret. It needs to be ready before the actual dunk sharding, or proto dunk sharding gets implemented.
00:19:49.964 - 00:20:29.556, Speaker A: So it's been developed during the last year, and this year in January, it was open for contributions. So basically what it means that you could go, anybody could contribute, because the more people contribute, the smaller chances that somebody will reveal their secret. So the idea is that some, I don't know, some bitcoiner or somebody come to you like, oh, Ethereum uses trusted setup. It's trusted. Vitalik has the key or whatnot. Well, no, he does not. I have the key.
00:20:29.556 - 00:21:07.508, Speaker A: I set it up, I contributed to the ceremony, I secure Ethereum. You can say that if you contribute, and now this is the main interface for the contribution, and of course it needs to be more diverse, more recent. This is just one way how to contribute. There are multiple client implementations which connect to the ceremony. So in case there is a bug in one of these implementations, the others are still secure. The most popular one was front end website, which is easy to use. So you could just go through it, enter your entropy by moving your mouse, writing something there.
00:21:07.508 - 00:21:44.764, Speaker A: Also, your browser generates entropy. In this case, you need to log in, and then when the powers of Tau are passed to you, your computer does their computation and publishes it. So this is how you could secure Ethereum. However, this open contribution period for, for now is over. It finished around a month ago. It was open for, like, two months. And right now there are only special contributions allowed, which means you need to have good friends who are doing the ceremony, and they will get you.
00:21:44.764 - 00:22:24.044, Speaker A: There was actually grant mechanism for people who wanted to create some special contributions, to mention some of them. There were guys doing it from a satellite. They contributed to the ceremony from the space. There were folks in New York, Kelvin from optimism, who organized this Moloch party where they created an ephemeral album. It was like multiple groups of people creating their own music. Then they played it, used the recording, or used the music to generate the entropy, and then deleted everything. The album just was played once at a party in New York.
00:22:24.044 - 00:22:44.294, Speaker A: So there are multiple ways how we can contribute creatively to the ceremony. And. Yeah, just to. Just to reiterate, we need a lot of contributions. In the public ceremony, there was around 80,000 contributions. So we can assume that up to 80,000 people were contributing. It was less because there was some spam.
00:22:44.294 - 00:23:09.850, Speaker A: But we have tens of thousands of people contributing, and we hope that at least one of them didn't save. Didn't save the. The secret. We have the multiple kinds. The sequencer. You can see it in the slides, the sequencers online. We are connecting to basically this one central entity, which is just ordering the people who are contributing.
00:23:09.850 - 00:23:40.674, Speaker A: It doesn't have any other power than doing this. And we can trust it or we can verify it. We don't need to trust it, because you can just download. You can download a file, which is like 150 megabytes at the moment, and it's recording of all the contributions. And you can cryptographically verify that it's the chain which works together, so we know it's secure. Now, again, we need more and more contributions. And I would like to use today to do some of the contributions.
00:23:40.674 - 00:24:16.486, Speaker A: But before I get there, I would like to take a moment to think about how we actually do it, how we actually create these secrets. Because I'm talking about generating some secrets, some secret number. And if you think about it, this is how all the computers are secured, is how all the cryptography is secured. Right? Your Ethereum wallet, you can see the address and the private key, which is hidden somewhere in your hardware wallet or your computer or somewhere. The private key is just a huge random number, right? Like atoms in the universe. Big number. And it needs to be random enough so nobody can guess it.
00:24:16.486 - 00:24:39.166, Speaker A: But now the question is, where do I get the randomness? Like, what is the randomness? Because the randomness, the entropy, is something coming from the. From the nature from the space. Computers are calculators. They cannot think of a random number like you are a person. If I tell you the random number there is a high probability you tell me seven. But a part of that like there is, there is a. You're a pretty good random generator but computer is not.
00:24:39.166 - 00:25:29.922, Speaker A: Computer is like does equations. So your computer, your phones when they are generating descriptography keys or like all of the Internet, the HTTPS traffic everything is secured by some keys generated by the cpu from some noise from some electrical noise, temperature maybe, maybe your mouse movements if you are using Linux and you call the udev random it might even tell you that I'm still collecting randomness. Not a good entropy. You have to wait. So the idea here is that as we need a lot of contributions we need lot of people, a lot of nature creating this randomness. My idea was to use cats but not just a few cats but a lot of cats. And that's why I have you here because today you will become the cats.
00:25:29.922 - 00:26:08.940, Speaker A: There is this paper called proof of cat which explains how cryptography can be secured by cats because well cats are pretty random. They are their own beings. You cannot really predict their behavior. So what about using them as one of these inputs for our computers to generate randomness so we can find the details of proof of cat. And this paper proposes a device for generating, generating randomness using a cat toy with a microcontroller and it's called catropy. This is the device that I have right here in this little ball. So it's this fluffy ball.
00:26:08.940 - 00:26:31.620, Speaker A: It's handmade my friend in Slovakia with hackers in Prague we designed this board. It's called ketropi. It's open. You can also make it yourself or you can get one. This is a movement when you move with your hand like this with a gyro. So basically it has a gyroscope, accelerometer and. And it collects the movement data and the more you move it the more random it gets.
00:26:31.620 - 00:27:04.564, Speaker A: So you can give it to your kid to play with. And right now I would like to do the ceremony with you folks and I believe that before we start. So right now it's on and as it's blinking when it turns green it's collecting the data. So it collects the data in some random intervals. And actually before we start with the people do we have a cat here? I believe we have a cat. I would like to actually use a, use a, use a cat and come here, come here. I can promise that it will work.
00:27:04.564 - 00:27:21.760, Speaker A: It's too big for him. Oi, come on, come on. Give me, give me a pour. Come on, give me, give me the sniff. Give it a sniff. It's too big, too big. It moves, it moves.
00:27:21.760 - 00:27:50.734, Speaker A: Come on, come on. Okay, well, look, that's why we need so many cats, because not all of them are excited by the toy. Not all of them are. Not all of them are. We have a bunch of lazy kids in the world, but some of them are playful. And if I put it on the floor, it's a good idea. Joseph, can you get it? But I mean, we can, I mean, we had a kitty, you all saw it, it's cute and all, so let's maybe move to.
00:27:50.734 - 00:28:15.394, Speaker A: There we go. But he's not going to jump down there. Okay, so let's just. You get it. Thank you. But if you can pass it to the people, please, everybody, oh, please, please, like just move with it. Just play with it a little carefully because you know, there's the electric inside.
00:28:15.394 - 00:28:39.454, Speaker A: Like don't apply too much force, but please pass it to everyone. Everybody just play with it for a few seconds and your, oh, it was a like, please, like try to throw it closer because it was pretty far. I hope it survived it. If it's still blinking, it's alright. Is it blinking? Ah, cool, cool. Yeah, I mean, it's a lot of entropy. Thank you.
00:28:39.454 - 00:29:14.234, Speaker A: Okay, try to take shorter paths please. Anyway, so now the entropy framework movement is being collected by the toy. And after the. We have just few minutes, but after it I will take it to my laptop and submit it to the ceremony. So this way you can tell that you secured Ethereum on its and then that we have some. So like a part of this, this little boy, we have around 20 cats securing Ethereum thanks to this toy. And also like more than 100 cordets.
00:29:14.234 - 00:30:09.786, Speaker A: Also, what I would like to mention is that these toys, I made a bunch of them and I was giving them away based, I'm not selling them, but you can get them based on a donation to a cat shelter in Barcelona. There's a beautiful place in Barcelona called Carne del Gac is a garden of cats. It's a kitty land and it's a lovely, lovely place where they take care of stray cats. They have like 40 of them. And thanks to Catropi, thanks to this device and the donations from Ethereum community, I was able to donate like €500 already. And if you would like it for like $30 donation to Catropi eat and you can send an email and put an email there to me or meowroofof cat, you can reach out and you can get a toy as well. I can ship it to you.
00:30:09.786 - 00:31:01.294, Speaker A: I don't have more units right now, but if you would like to have it for your cat or just play with by yourself, you can get it by donating to kitties in Barcelona. Yeah, so that's it. If you want to learn more about the KDG ceremony, check out the KTHG ceremony repo, which is like the main coordination where there is all the information about the ceremony which is still going on. And if you want to learn more into technicalities of how it works, I would recommend the talk by Carl, who is actually one of the main brains behind the whole ceremony from Defcon. Explained really nicely. And yeah, also, this was nice about the implementation part of it. An interview with the talk by folks from the PSC team.
00:31:01.294 - 00:31:18.234, Speaker A: Again, like the public ceremony, the public contributions are over, and the special contributions are finishing tomorrow or on Monday. So this is like your last chance to help to secure Ethereum. And where is my ball? I don't see it. Oh, you get it. Oh, thank you. Whoa. Thanks.
00:31:18.234 - 00:31:31.704, Speaker A: Okay. Thank you all for your entropy here. I will keep it safe. And, yeah, I believe that's it. So thanks again for your attention and for your entropy. You got.
