00:00:00.800 - 00:00:28.864, Speaker A: Hello. Welcome, everyone. We've made it through three days. Everyone's doing well. Hope to see you at the after this for drinks, after party and everything. I'm here to talk about zero knowledge, proof of reserves, and just really quickly, about me. So I work at pseudo building privacy tools.
00:00:28.864 - 00:01:34.424, Speaker A: I coordinate projects, help projects I am on coming from the non technical side of things, so I'm not going to be going into how the proofs work, going into the math and all that, but more so giving a general overview and hopefully helping you understand more about the history of proof of reserves, kind of how we got here, what exactly it is, how it works, and then how the project that one of the projects that I'm working on, the project I'll be speaking about, Summa, is aiming to tackle a lot of these problems and what we've accomplished. Okay, so brief history. Some of us, most of us might have heard of Mount Gox. They filed for bankruptcy in 2014. They were the largest bitcoin or cryptocurrency exchange. I think it was just bitcoin at the time. They filed bankruptcy for 850,000 bitcoin, which was like maybe $4 million or something then.
00:01:34.424 - 00:02:12.136, Speaker A: And then after the bankruptcy proceedings, there were like 200,000 bitcoin that Mark Karpeles just happened to find on an old computer. Whoopsie. People were very upset. A lot of people lost a lot of money for trusting this exchange. FTX, we all know about FTX. They essentially pursued aggressive growth over actually doing things by any sort of book. They were using all sorts of accounting wizardry to kind of create value.
00:02:12.136 - 00:03:40.494, Speaker A: They were also taking funds off of their main exchange and moving them through backdoors to Alameda to kind of their sister corporation, and essentially misusing customer funds in order to appear solvent, when really they weren't. When FTX went under, it also brought down the entire cryptocurrency industry. The prices crashed. Celsius, Voyager, and Blockfi also filed for bankruptcy around this time. And it forced us as an industry to kind of look at ourselves and question these institutions that we are trusting. And in both of these cases, not only did customers not know what was happening with the funds on the exchange, but the exchange themselves did not even know what was happening with the funds that they were trusted with. So from that, this concept of proof of reserves has come about, which is essentially, can you prove that the assets you have are greater than the liabilities on your books? Liabilities being customer deposits? That's what proof of reserves means.
00:03:40.494 - 00:05:17.984, Speaker A: Also, proof of solvency is another term for it. But in a nutshell, do you have enough funds to cover all of the customer? Do you have the assets to cover all of the customer funds if all the customers wanted to withdraw at once? Essentially, funds are seifu, proof of reserves does not need to be applied solely to an exchange. You can also consider any custodian, we call them custodians. Any service that takes cryptocurrency takes funds and then holds them for customers is the proof of reserves can apply to. Okay, so there is no, there are no, anywhere in the world, there are no hard requirements for an exchange or for a custodian to offer these proof of reserves. What we are hoping is that, or kind of what we see is that from both the bottom, the user base, users demanding these things from exchanges, and then also kind of the top down approach of anticipating that regulators at some point will require exchanges to be doing these audits and proof of reserves. Okay, so how do proof of reserves work? So you have your assets, you have your liabilities.
00:05:17.984 - 00:06:25.894, Speaker A: It is imperative in order to have a proper proof of reserves that you reveal both your assets and the liabilities. So if you say that you have $1 billion in assets, but you also don't reveal your liabilities in any way, then maybe you have $3 billion in liabilities and you haven't really proven anything. Likewise, if you say you have a billion dollars in liabilities, if you have no assets to cover that, then it doesn't matter. So a proof of reserves audit is a, the way that they are typically run is that they are a snapshot of a point in time. It's not a kind of rolling amount, like a rolling balance. You kind of need to, and most exchanges will do these. Some of them will do them annually, some of them every six months.
00:06:25.894 - 00:07:11.124, Speaker A: I think an exchange does them every month. The longer time in between you have these audits, the more potential you can have. You can imagine like an exchange moves the fund somewhere and is doing something with them, and more of a likelihood that they're not going to come back in there for the next audit. We'll get into that frequency later on. Another component of proof of reserves, of how it works, they use merkle trees. So this is where the cryptography comes in. So every user is, every user with a balance is assigned a unique id, and then is put into, with their balance is put into a merkle tree.
00:07:11.124 - 00:08:40.834, Speaker A: So all the users are leaves. And then the root of that tree can be shared publicly without revealing how many users there are, what their amounts are this retains the privacy of the users, and it also allows the exchange to reveal this information as well, without revealing more than they might want to. Suma, as we'll get into a little later, is we're experimenting with some alternatives to merkle trees, which is kind of interesting, but most every solution right now just uses merkle trees. Okay, so current solutions also use auditors, third party auditors that essentially come in and look at the books and the Merkle tree, the proof that you use as a user in the Merkle tree is essentially verifying that the auditor has included your balance in that audit. So the systems that are being used now, it is still dependent on a third party auditor. You're still having to trust a third party auditor, that they are acting in the interest of you, that they're not corrupt. And most of the major auditing firms in the world don't touch crypto.
00:08:40.834 - 00:09:34.624, Speaker A: And then the several that have been working with crypto firms just recently, within the last year or so, have stopped working with them. So there are less and less options to actually even use a third party auditor. Okay, so this brings us to Vitalik releasing a post on his blog, as he often does, and kind of outlining everything that we had just talked about, using cryptography to allow exchanges to show that they have the funds. He talks about kind of a world in which we are more accountable. We're not just relying on these exchanges, but we should actually hold them accountable. And we can use cryptography, we can use these tools to be able to do that. From.
00:09:34.624 - 00:10:33.944, Speaker A: This paper specifically, is where summa came from. So the name summa comes from a 15th century paper that was published by a friar, and he and this paper, or this book essentially outlined accounting methods, double entry bookkeeping. It's in Latin. Summa means sum, or summary. So that's where the name summa comes from. So summa aims to cut out the need for third party auditors entirely from a proof of reserves, so that we no longer have to rely on these auditors and these trusted third parties, and we can just rely on the math to do it. Sum is also we're looking to optimize for the speed at which the proofs, the commitment proofs, and the inclusion proofs are generated.
00:10:33.944 - 00:11:28.434, Speaker A: And doing that in a more affordable way, you can imagine it takes a lot of compute resources in order to generate large sets of proofs in the order of millions, hundreds of millions of users if you're an exchange. Something else that Suma has done is to put the verifier for the proofs on chain. So this leads to an increased user experience. The user doesn't have to download any software and use that to validate their proof independently. And it can also be, we can be assured that everybody is using the same verifier. It's all coming from the same place. Okay, so I mentioned earlier that most solutions use merkle trees.
00:11:28.434 - 00:12:12.124, Speaker A: So Suma's. The first version that Suma released was a Merkle tree. And then in the interest of trying to optimize for the speed and the cost used for the second version, a univariate sum check protocol, which is kind of a novel use of this technology. It's typically just used within circuits to prove things. And in this case, we're kind of pulling it out of that and using it in a more applied way. And then the next version that we're working on now is moving from univariate to multivariate sumcheck protocol. And we are hoping, hoping that this also brings further optimization.
00:12:12.124 - 00:13:01.260, Speaker A: Okay, so how sumo works. First, the exchange for the custodian needs to prove their address ownership. Anybody can point to an account on a blockchain and say, those are my funds. But unless you move a certain amount or you produce a signature from that wallet that's verifiable, anybody can point to any funds on a blockchain and say that it's theirs. So, in order for the custodian, or in order for us to believe that the custodians funds are actually theirs, that they are in ownership of them, they need to produce a batch of signatures, and then that goes on chain into the contract from there. And that is done optimistically. Okay.
00:13:01.260 - 00:13:58.078, Speaker A: There's no. That those signatures aren't validated or verified by any of the cryptography. That's just for us, the users, and the public to look and see and be able to see how many funds the custodian has, so then a liabilities commitment is made. So this is essentially a commitment proof that says, these are the amount of funds that we have. And then from there, you create an inclusion proof. So there's the one commitment, and then inclusion proofs are created for every customer. So every leaf of that tree or everybody with a balance gets a proof and can then take that proof and go to the commitment and prove that their funds are in there.
00:13:58.078 - 00:15:05.954, Speaker A: In that way, the exchange is much less likely to cheat, um, by saying that they have more, um, uh, more liabilities than they actually have. Um, so, ideally, if every person goes and proves that goats goes to prove that they're in there, and then somebody raises their hand and says, my proof is not actually valid. My funds were not included in here. That might mean that there's something fishy going on with the exchange and the funds that they're using. So from there, users can verify again that they were included in the liabilities and accounted for in the liabilities, and the loop is closed. Okay, so some of the challenges that we face with this so far, the solutions that we've come up with are only nominally better than current solutions. However, there are improvements, like putting the validator on chain, the concept of removing a third party auditor completely being taken out.
00:15:05.954 - 00:15:56.412, Speaker A: And then again, we're hoping that with the next version that we're working on using the multivariate Sumtrack protocol, that we can get even better results. So the solution requires that custodians both publish the funds that they have on chain. So they say, these are our wallets, and sign a transaction with them, or not a transaction, but create a signature with those wallets. And that creates a lot of issues. If you're an exchange, you might not want to, you might not want people to know which wallets are yours. For security reasons, and also for security reasons, it might be difficult to sign wallets. So this is another, create signatures with wallets.
00:15:56.412 - 00:16:32.752, Speaker A: So this is another challenge that we run into. It also requires the custodians to implement it. Even if a custodian is completely honest and has nothing to hide, so to speak, it still takes a lot of work to implement these things. You have to dedicate resources to it. You have to push this as a part of your platform and market around it, let people know that it's there. And even then, a lot of exchanges have found that even when they do go through all of the trouble and the work to make this available, people don't always use it. Okay.
00:16:32.752 - 00:17:02.588, Speaker A: Not the exchange's fault. But if people aren't using the things, then an exchange is using the tools, then an exchange is less likely to make those tools available. Okay. Also, exchanges use a lot of complex accounting. There's margin loans. Right. Which creates more liabilities and can also create negative numbers.
00:17:02.588 - 00:17:54.552, Speaker A: Right. If somebody is liquidated. Right. And so the current version of Suma does not account for kind of these advanced accounts accounting practices either. And then the last one is that Suma only accounts for the on chain assets, not fiat, that an exchange might have as well. This is actually kind of an interesting problem to solve. There's some other projects at pseudo TL's, notary, ZK email that we're going to be experimenting with in this coming year to try to tackle this specifically to help basically come up with solutions to cryptographically verify not just on chain assets, but other assets as well.
00:17:54.552 - 00:18:39.396, Speaker A: It's very interesting. Ok, so in conclusion, we can use cryptography, we can use math, we can use zero knowledge proofs in order to hold exchanges accountable. These institutions that we rely on that are an integral part of the industry and of crypto in general, being off ramps and on ramps, we don't just need to trust that they're going to act in good faith. They've shown that they have not. We can use cryptography to ensure that they do. You can check out the GitHub join our telegram if you have questions. And then I'm Odalon on all of the stuff.
00:18:39.396 - 00:18:43.260, Speaker A: Thank you very much for coming. I appreciate it.
00:18:43.332 - 00:18:54.224, Speaker B: Thank you very much. We have a few minutes for questions just here.
00:18:56.184 - 00:19:10.004, Speaker C: Yeah. Thank you for the presentation. I just curious how many partnerships with exchanges you have and have you have any successful integrations of your protocol into exchange?
00:19:10.464 - 00:19:56.244, Speaker A: No. So the kind of the difficulties, the challenges that I was talking about doesn't make Suma as is kind of out of the box integratable into exchanges, but we have been talking to exchanges about, about different concepts that they can use using zero knowledge proofs and using the things that we're kind of exploring to help them develop that. So, Suma, to answer your question, Suma is not specifically integrated into any exchanges currently. And in fact, most exchanges either don't have them. There's very few exchanges that actually have a proof of reserves and a lot saying that they have some coming in their investigation. So kind of developing along with that.
00:19:58.904 - 00:20:00.724, Speaker B: All right, anyone else?
00:20:02.144 - 00:20:02.480, Speaker A: Hi.
00:20:02.512 - 00:20:58.314, Speaker D: Yeah, thanks. So as far as exchanges, it doesn't only like, I presume that it doesn't only solve, like, the solution. Your solution doesn't only solve the problem of, like, displaying that the assets exceed liabilities for the exchanges, but probably like down the road something more where like, like if an exchange resides in like some specific jurisdiction where the authorities demand something from it to report on something, and then instead of like, disclosing all the information and saying, okay, here are all the things, and, you know, KYC, about our customers and all the numbers, but instead wraps this claim into some claims and provides that to authorities saying that, okay, well, we're not going to disclose all the sensitive information, but we're going to prove that these customers are solvent, they have everything else and compliant with everything else that you need. Am I kind of reading it right.
00:20:58.854 - 00:21:33.194, Speaker A: Yeah. So those are some good examples of ways of using zero knowledge proofs to be able to comply with regulation and be able to do what zero knowledge proofs do, which is reveal things without giving away what they actually are out of. Like, the way Suma is designed right now doesn't allow for that specifically. But that would be, you know, kind of an addition or kind of. Yeah. A change that could be made to include those type of things as well. Yeah.
00:21:34.094 - 00:21:36.774, Speaker B: Thank you. We still have time for one more question.
