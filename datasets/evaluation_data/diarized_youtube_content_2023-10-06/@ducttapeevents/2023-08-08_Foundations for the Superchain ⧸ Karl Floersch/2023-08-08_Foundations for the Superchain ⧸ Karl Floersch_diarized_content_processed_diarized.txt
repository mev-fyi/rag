00:00:01.400 - 00:00:18.342, Speaker A: I'm live. Well, hello. Let me see. Guess I just. So my slides are visible, is that correct? All right, I'm going to assume they are. Well, welcome. Welcome, everyone.
00:00:18.342 - 00:01:03.114, Speaker A: I'm very excited to be talking to y'all about the super chain. And unfortunately, due to passport issues, I am not here in the flesh and instead transmitting my virtual essence to you. And additionally, just another caveat is due to cascading failures. This is also, I did not get a chance to create new slides for you, so we're going to be going over things that do exist somewhere on the Internet. However, because of non determinism in my presentations, I will be giving more new information and fun caveats. So without further ado, let's dive into the super chain context. Right.
00:01:03.114 - 00:01:31.304, Speaker A: Back in Devcon, we first started really talking about the super chain. We were saying how, of course, all of these different chains will use the same op stack standard, come together and form the super chain. Well, today we're going to get into the weeds. This is about fundamental concepts, the underpinnings of the super chain. And this is not going to be fun. You're not going to have a good time. It's gonna be hard, but let's do this.
00:01:31.304 - 00:01:52.336, Speaker A: No, I'm just kidding. It'll be a lot of fun. I love deep technical topics, as evidenced by my life for the past many, many years. Okay, so blockchain today is insufficient for the decentralized web. This is the context. This is the setting for the super chain. Why we are talking about it.
00:01:52.336 - 00:02:11.542, Speaker A: Of course, we're talking about layer two. Just for context, in case you don't know. We're talking about layer two. We're talking about optimism. We're talking about scaling ethereum and funding public goods. But why is it insufficient blockchain technology today? Well, meet congestion. We have a problem.
00:02:11.542 - 00:02:41.204, Speaker A: The reality is that the capacity of our networks are way insufficient. A small game would take up more data than exists on ethereum today. You've got a few. You got like 100 data per second on Ethereum today. And even in the future where, like, this is, this is. This is insane. If we're, if we're trying to put the Internet on chain, so.
00:02:41.204 - 00:03:02.784, Speaker A: And we are trying to put the Internet on chain so blockchains don't scale. Right. The reason why we have these huge gas fees is because everyone is competing for a very limited resource. And we can't be. If we're going to be posting our random games, comma, tweet, you're not going to pay $13 for that tweet. It just does not make sense. So this is not new information.
00:03:02.784 - 00:03:29.346, Speaker A: Even since the beginning bitcoin introduced after the bitcoin white paper, the first response, or second response was, we very, very much need a system. But the way I understand your proposal, it does not scale to the required size. So we need to scale this up. And that was 2008. It is now 2023, if I'm correct. No, just kidding. And we still have not gotten there.
00:03:29.346 - 00:03:58.922, Speaker A: The tech is not ready. This just demonstrates what a difficult computer science problem this is. So for a moment, imagine a future. Imagine a future where things were different, where you were not just, you know, blockchains were not just used for trading memes, and everyone could be happy using the system. Those people are very scary. But regardless, right, imagine the entire world was on chain. What would that look like? Well, look like a few.
00:03:58.922 - 00:04:31.025, Speaker A: A few different things. First off, we would be able to abstract away the entire back end software stack. Right now we have to worry about what software, who's running our software, who is hosting it. If we have decentralized protocols that goes away, they all become part of the same network. The EVM really is the ultimate serverless platform. And application composability, because we're using the EVM, can be supercharged. We can deploy an app here and then extend it.
00:04:31.025 - 00:04:58.858, Speaker A: We can say, okay, I'll deploy. This is the beauty of, for instance, Uniswap. All of these different protocols. After Uniswap was deployed, all of these different protocols built on top of it and used it. The whole defi Legos. It's not just DeFi Legos, it is literally just Internet Legos, period. And additionally, we can build out systems so that developers, we can decouple this idea that the developer must host their software instead.
00:04:58.858 - 00:05:56.160, Speaker A: When developers write protocols that allows them to instead just define the business logic of their software, and then other people can run that business logic. So this is really a powerful primitive for creating the conditions for a developer to just in their spare time over the weekend, deploy an application. And for that, to get mass adoption, we don't need to be limiting people to tightly coupling developers and hosting. So this can turn the Internet from a kind of barren wasteland into a vibrant ecosystem of tons of different applications and composability. And unfortunately, this picture can. The reality is that this is actually the root, this is actually what it used to be, and that's where it is. So let's solve global warming and down with some block.
00:05:56.160 - 00:06:42.064, Speaker A: Okay? Which is the sponsor of this video, just kidding. So we should be getting to the point, though, where we can support Twitter on the Internet, on the EVM. All right, the decentralized web can be realized. We have been working on it for an enormous amount of time. Started out in ETH two, then we formed Plasma group, which was this open source nonprofit dedicated to Scaling Ethereum. And then we formed optimism, which then took it to the next level by scaling Ethereum, but also funding public goods. So this is something that we have been working on as an industry, though, as an industry in Ethereum community, everyone has been working together to get the abstractions right so that we can solve this scaling problem.
00:06:42.064 - 00:07:16.380, Speaker A: And we're actually making massive progress. You know, from the roll up centric roadmap to various other community contributions, we have been able to figure out what the abstraction layers really should be. This is key. In other words, in order to wrangle the complexity of scaling blockchains, we need to find the right ways to encapsulate it. The right modules that can all come together to form a beautiful system. So what would this roll up centric future look like? Right, we have l two. We've got these amazing contributors.
00:07:16.380 - 00:07:29.972, Speaker A: Shout out Barry White. That, you know, we are starting to see the picture clearer. So congestion versus the super chain. Let's go. Okay, so what is the super chain? I've been talking about it for a long time. It's more than one chain. Supporting.
00:07:29.972 - 00:08:02.388, Speaker A: Scaling to the support the Internet requires a lot more than one chain. Why is that? Well, pretty simple. If you have a node and you try to increase the block size, eventually the node is going to explode and become a black hole if you make it big enough. So it's not. But the thing is, this is like, it's obviously more than one chain, but it's not a multi chain design. So each one of these chains, in traditional kind of multi chain designs, each chain is different. Each chain has its own validator set.
00:08:02.388 - 00:08:31.852, Speaker A: It adds its own security risk. But as and as you bridge across all of these chains, it compounds that risk. That means that bridging from chain a to chain b to chain c is non fungible with the bridging from chain a directly to chain c. So that's a real big problem. And then also just deploying and managing these chains are expensive. We need to get the cost down to basically nothing. Chains need to become fundamental developer primitives that people have access to as they are building out their applications.
00:08:31.852 - 00:09:03.989, Speaker A: And so we need a system where chains are truly commoditized. That's how we're going to scale, we're going to get to the point where we can write things like Kubernetes configs that orchestrate all of the different, you know, chains together where we don't want to have the to reason about an individual chain by chain system. Okay. But it's also not mono chain, to be very clear. Right. Because obviously it doesn't fit in one chain, but at the same time it's not multi chain. And so it's super chain classic.
00:09:03.989 - 00:09:30.008, Speaker A: All right, so we're going to breeze past those properties. But I will say that this is like at a high level, what it kind of looks like you have ethereum at the top layer and. Oh, I hear, okay, wait, ethereum at the top layer. Then you've got the optimism bridge. And then you've got all of the different op chains that are connected via a cross chain messaging protocol. So all of the op chains are standardized and dapps get superpowered. Right.
00:09:30.008 - 00:09:54.700, Speaker A: Deploy on the super chain. Okay, so it's, oh yeah, this is just me warning y'all, it is not here yet. Right. This is definitely a, this is a kind of vision. This is a design for how we are thinking about the future of these systems so that you can build it too. It's already been almost a decade and we're closer than ever. So please do join the cause, help contribute to the op stack.
00:09:54.700 - 00:10:24.024, Speaker A: Get started. Anyway, let's dive into some core concepts. Alrighty. So again, when there are things that are beautifully done, they're good abstraction layers. I'm going to talk to you today about those abstraction layers. Let's talk about super chain derivation. So, by the way, before I even dive into this topic, I just want to say that there are two resources that are worth discussing that we need to scale in order to solve the scalability problem for Ethereum.
00:10:24.024 - 00:10:57.466, Speaker A: And those resources are compute scale b, compute the gas per second that is available on the network. Additionally, we need to scale the data, the amount of transaction data per second on the network. So those are the two resources. If we had infinite data on both of those fronts, then we would have solved scalability. But because we don't, we're going to have to introduce a bunch of concepts and that is the context for this. So super chain derivation that is focused on scaling. Computer.
00:10:57.466 - 00:11:40.842, Speaker A: Let's dive in though. So what is block derivation? Block derivation is how you derive, how you compute the l two chain state. Now the reason why we call it derive is because you're starting, excuse me, you're starting from the, you're trying to determine the resulting l two chain state based on layer one. So really you're just kind of taking the layer one as input. You're running this pure function over it, and you're deriving the layer two. That's exactly what is described here, where you say, okay, here's the function, here's the l one chain, and let me get the l two chain out of it. All right, so what does that look like visually? Because I like visuals, as you know.
00:11:40.842 - 00:12:31.830, Speaker A: Okay, we've got a theorem, l one, right? Then you derive the layer two chain. You run that pure function over it. So, by the way, there is an important call out here that I will note is that ethereum, this derivation function is almost like an index. It's almost like the graph or any other indexer on top of Ethereum that is really fundamentally what these roll ups are. They're indexers over Ethereum that actually have state that you care about and you can transact with in a way that resembles the layer one state. So it's kind of a different view on the same blockchain. So anyway, let's keep going because I think you'll get more intuitions as we, as we, as we go through these pretty diagrams.
00:12:31.830 - 00:13:06.124, Speaker A: So Alice sends a transaction to Ethereum that gets included in the Ethereum chain. Then it is derived to be included in the optimism chain, the red chain. Now, we do this again, ethereum grows a bit and it is derived. Now, notably right there is an important property, and a really cool property about bedrock, which we, by the way, released as an upgrade just moments ago. But the bedrock release of the op stack, this includes this abstraction. So that you already know. Yeah, of course.
00:13:06.124 - 00:13:52.480, Speaker A: Oh, all right, well, we've got 1 minute to go, friends. I'll jump to the. I guess we only got through one. This is, unfortunately, I was planning for eight more minutes, but that's okay. We have the layer two chain where we are deriving, but we can actually derive multiple different chains. And if you want, this is how layer two scales. But now if we want to go to the super chain, we can define this function that allows you to take the l one chain, take a chain config, which is basically a chain id, and then derive any opconfig chain from that l one.
00:13:52.480 - 00:14:42.586, Speaker A: You can use this, look into the kaleidoscope and you can see all of the different chains that you can derive. There's basically an infinite number, I mean infinite, bounded by the number of configs that you can find. But regardless, this is how you end up with all of these different chains that you can define and that allows you to make use of these chains permissionlessly to transact on. Okay. Unfortunately we were not able to get to message passing, which is how chains communicate. We were also not able to get to what's it called? Sequencing, which is how chains actually synchronize with each other so you can do things like atomic cross chain arbs. And also we did not talk about the scaling, the other thing which is data availability.
00:14:42.586 - 00:15:04.774, Speaker A: However, because I've given this talk before, maybe you already know what are we going to do? Okay, I have to have to say because I've already given this talk before, maybe you already know some of these things and we also cover you some good ground. So in other words, please ask me questions because I assume we still have time for questions. Is that correct or are we totally out of time? It.
