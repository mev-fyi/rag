00:00:00.200 - 00:01:14.354, Speaker A: All right. Hello, I'm Zaki, co founder of Sommelier Finance. So if you saw my DeFi summit talk, similar content, but maybe a little bit of a different emphasis. For Defi Summit, I was mostly showing the strategies and the yields and the performance. This talk is more like showing the architecture, though we do motivate it a little bit by, like, when we started building this complicated piece of machinery that is sommelier, a lot of people asked the question, like, is all of this complexity necessary now that the system has been generating sort of superior returns for most of the year, has been through a bunch of stress tests and black swan events like the USDC deep? I think that the architecture has already validated what the complexity is for. And so this talk is mostly trying to explain why build things this way? And frankly, it's substantially easier to build a system like sommelier today than it was when we started two years ago. But, and, you know, a lot of our code is just, like, out there to be forked.
00:01:14.354 - 00:02:07.518, Speaker A: So, you know, encouraging people to experiment with this. So what is the problem? Sommelier solved. Similia is a crypto native decentralized asset manager, or it's like an infrastructure for doing that. It's basically, the observation was that the killer app of the last cycle was CDFI, but CDFI rugs you inevitably Celsius, Voyager, et cetera. And how do you build a system that has the core functionality of CDFI? That is, the ability to deposit your funds once, be confident that you're getting the best possible returns, but still have transparency, permissionless composability, all of the things that we love about DeFi. So, as I said, this talk is mostly showing the architecture. This is a diagram of the architecture.
00:02:07.518 - 00:03:01.694, Speaker A: We'll break it down later in the talk. But mental model of this is a novel system in which we have combined a cosmos blockchain, a bunch of smart contracts on ethereum and other evms bridges to achieve this. Digital asset manager. So where we sort of think of ourselves as urine and similar protocols are not market adaptive, they are thus missing many opportunities that exists for yield. And then we have sort of actively managed optimized vaults, but are run by multisigs. And that is just sort of a regulatory time bomb that is waiting to happen and requires sort of an excessive amount of trust. So, to solve this problem, we built sommelier.
00:03:01.694 - 00:04:17.904, Speaker A: Sommelier's adaptive structure allows for vaults that do, you know, predict, react, optimize and evolve, while retaining decentralization. So the general point of this is, by building this architecture, we've been able to produce vaults that outperform anything else on Ethereum, real yield ETH has been the highest source of ETH denominated yield since inception, you know, and it continues to be battle tested. Like, we just went through a bunch of liquid staking derivatives, small d pegs in the last two days. Because of the market movements, strategy continues to be doing just fine. This architecture has also been one of the top performing LP's on Uniswap, using one of the top performing LP's on Uniswap, even though it rebalances far less frequently than other Uniswap liquidity providers in a super competitive pool, the USDC USDT pool. So by doing things this way, there's a lot of options. And then we just launched this new set of yield opportunities for link Uni ens.
00:04:17.904 - 00:05:17.156, Speaker A: The link vault just hit 100k over the weekend. There are still very low gas prices to enter these vaults. Because of the market volatility, these vaults haven't yet deployed funds. So, yeah, the other point is, there are a lot of opportunities, especially as more sophisticated money has left the ecosystem. There are a lot of uncaptured arbitrage opportunities in Defi, but there isn't tooling to allow anyone to sort of participate in, like, a thesis driven bet. So the thesis is that there is this arbitrage opportunity between what it costs to borrow ETH in Defi and what you can earn in a protocol like really old ETH. We can take advantage of that arbitrage opportunity, and we can allow people to earn yield on link or.
00:05:17.156 - 00:05:49.722, Speaker A: Or uni that they can't earn today. So it's really, from my point of view, the point of sommelier is making, like, thesis driven, essentially hedge fund style bets, but available natively within Defi. Okay, so as I said, this talk was less about showing the yields. The yields are the motivation for, like, hey, like, building this incredibly complicated system was actually worth it. Yeah. So I think this is a laser pointer. Yeah.
00:05:49.722 - 00:06:33.370, Speaker A: Cool. All right, so let's kind of, like, you can kind of work two ways from Ethereum through the siachain to the strategist, and let's try that as, like, a way of thinking about this. So there are a bunch of defi protocols on Ethereum. They are, they settle the largest amount. They're, you know, the largest DeFi protocols by TBL. They represent the largest amount of real economic activity. There's spectacular opportunities to generate real yield, and Ethereum's transition to proof of stake has also opened up a huge amount of sort of stakefi opportunities that are existing sommelier spent.
00:06:33.370 - 00:07:16.684, Speaker A: You know, we have been through multiple versions of essentially a set of smart contracts. What are these smart contracts? So the smart contracts are ERC 4626 vaults and adapters that allow you to sort of take the strategist to take potentially any position in DeFi. We need an adapter smart contract and a way of pricing the Defi position. But we also are protecting users with these contracts. The whole point of, you know, of this architecture is, I didn't want to trust the validator set for everything this, like, oh, we're just going to have a proof of stake validator set. We're going to trust them. They're not going to run away with everyone's money.
00:07:16.684 - 00:08:16.594, Speaker A: We can do better than that. So the defenses that exist within the smart contract are like things like whether or not the strategist or the protocol can take fees, the amount of fees, what DeFi protocols, the strategy actually can interact with, whether or not health factors on leveraged positions are fall below their minimum. All of these things can be actually implemented as protections within the smart contract, therefore giving most of the benefits of a pure ETH secured system. And it basically means that, again, one of the most important principles was not bridging the tokens. It would be unnecessary to bridge the tokens, and therefore, you're not taking on any sort of custodial bridge risk. So, like, let's say the bridge gets hacked, let's say the validator set gets compromised. Let's say our strategists turn evil.
00:08:16.594 - 00:09:04.320, Speaker A: The smart contracts are still there protecting the user. Well, and, like, what the strategists, what the smart contracts can't do is they can't guarantee or protect your ability to generate returns, but they can guarantee your ability to withdraw funds. They can guarantee your ability, the transparency of, like, what is the strategy actually doing? And it can constrain. So, like, there's this constant tension in the architecture between how much flexibility we have in the smart contracts and how much trust we have in the other layers of the system. All right, so then we have an app chain. So app chain built with the Cosmos SDK. Been working on Cosmos for almost a decade.
00:09:04.320 - 00:09:47.202, Speaker A: What I would say is sommelier is very much a proof point for what I've said for a long time, which is that Cosmos is not an alternative to Ethereum. Cosmos is like an accelerator or the coprocessor meme. I think similiar was the first team to use that. But now you have Axiom and Herodotus and all using the coprocessor meme. A Cosmos chain is simply a way of coordinating between a set of validators. You can use it for implementing the kinds of logic that would be infeasible to implement on a pure ETH system. And again, this is sommelier's chain.
00:09:47.202 - 00:10:48.044, Speaker A: We're not like a competing general purpose l one. We are a true app chain for strategists. The other thing that is really great about using similia from our point of view is that if you're a user of a som chain, you don't need, like, if you're a user of a somilier strategy, you don't know that the cosmos chain even exists. You will enter a strategy via metamask. You will see all your positions on smart contracts. Your ERC 4626 tokens will be issued on the ethel one or on an alt evm that we run on. So the entire purpose and point of this system has been use the cosmos chain in that place where it makes the biggest difference, which is distributing fees to som stakers and strategists, selecting a validator set, coordinating that validator set, doing governance, but use Ethereum, where it is best, which is defi composability, access to a large amount of economic flows and a lot of counterparties.
00:10:48.044 - 00:11:23.944, Speaker A: So the next point of this whole system is, again, we'll just do this slide for a second. All right, so, on the like, again, whole vision of the system is build, build a system that cannot rug. So we have the. We don't bridge tokens. So, like, sommelier validator set gets compromised. It's not gonna run with economic attacks on the Somme validator set. Not gonna run away with everyone's money.
00:11:23.944 - 00:11:54.882, Speaker A: We have protections in the smart contracts themselves. So the strategist can't just wake up and ape into a Defi protocol that was launched yesterday or steal all the money themselves via a call. But we want more protection. The whole point of this thing is. So we built this application called steward. And steward is by far the most exciting security mechanism that exists within the similia stack. Steward is a process.
00:11:54.882 - 00:12:33.860, Speaker A: It runs on every validator. When a strategist wants to essentially make a trade rebalance, they are basically telling the validator, set the route, like the position that they want to change to. So let's say you have a bunch of uniswap lp positions and you want to change. You may need to swap tokens to take on inventory. To change what? Like the balance of tokens. All of that gets executed and constructed via steward. What we can do with steward is we can make potentially malicious things that the validator could do, or like, the strategist could do.
00:12:33.860 - 00:13:27.240, Speaker A: So if we just gave, like, the strategist the ability to submit arbitrary ABI calls, like arbitrary trading messages to, there's a lot of things that still would be bad. Like they could route all the liquidity through a low liquidity pool. They could do other things that could potentially harm users. We can prevent all of that through the steward reference implementation. Steward can do things like simulate the transaction against foundry or a commercial API, like tenderly. It can restrict the routes and the pools that a strategist is allowed to access for a given strategy. And basically, the interaction between steward and governance can also do things like, if a new DeFi protocol needs to be added, it has to go through a governance vote.
00:13:27.240 - 00:14:09.608, Speaker A: All of that is maintained through this off chain. Every validator must run steward architecture. Essentially, the point of the som token is to enable the credible decentralization of this system so that you aren't relying on a centralized counterparty to do this. So let's go back to the architecture. So smart contracts. Bridge, like the bridge is essentially the least interesting part of this system at this point. Like we, right now, we launched with our own implementation of Cosmos gravity bridge.
00:14:09.608 - 00:14:59.914, Speaker A: We're about to adopt Axor for a lot of Alt evms. There are a lot of bridging options to choose from that could potentially use, could be potentially used. If you were building a system like this, then you have the same blockchain and validator set which runs steward, and then you have the strategy providers. Strategy providers are off chain, non decentralized computation, single entities, or like daos of one kind or another. They are running invisible. Like, you don't know what their model is, why they're doing the trades that they're doing. Certainly, all the trading information is public, but you can watch the strategist alpha and model and thesis can be proprietary.
00:14:59.914 - 00:16:29.576, Speaker A: So this is like sort of a balance of concerns from a bunch of different ways. One is like, the argument is that like, a lot of traditional checks and balances that are in fund administration are sort of operating in the protocol itself. So the investor protection, the user protection against, you know, when do you take fees? How much do you, how much fees do you take? Are they calculated correctly pro rata? Like, are you using, are you potentially picking bad trading venues, et cetera? The architecture as a whole is able to mitigate most of that, most, if not all of that. And thus we are able to safely use these sort of dynamic off chain strategists who are able to come up with strategies and pursue opportunities that generate the sort of outsized deals and potentially and like, returns and could be used to build indexes or automation frameworks or any number of things using this common architecture. So just finally, did I kill it? Maybe. All right, so what does the som token do? Oh, thanks. Okay, what does the som token do? So it's cosmos taking token non inflationary, which is somewhat unique in the cosmos space.
00:16:29.576 - 00:17:20.054, Speaker A: We've had a lot of problems of late in the cosmos ecosystem with various terrible things that happened due to the various hyperinflationary, always conceived as a non inflationary token. Basically, there's this inherent sort of mechanism by which the Som Dao is sort of critical to the operating of this entire infrastructure. Um, you know, it's essential for the kinds of user protections that we talked about earlier. Um, and basically what happens is the goal of Som is to generate staking rewards, um, from the real users of the protocol and from the economic value that is produced, uh, essentially the profit of the strategies. Uh, we're not there yet. Um, we probably break even around 300 million TvL, we're at about 15 million right now. But we keep launching all of these new strategies.
00:17:20.054 - 00:17:37.854, Speaker A: We have a bitcoin yield strategy coming soon for WBTC, and there's a pretty reasonable way in which we sort of get to making this thing a truly economically sustainable system. So thank you very much. I think I have two minutes for questions.
00:17:46.454 - 00:17:54.554, Speaker B: Hi. It seems like you can do all this on the EVM chain. What's the purpose of plugging?
00:17:55.294 - 00:18:02.234, Speaker A: What is going to coordinate your validator set? Where is steward going to run on an EVM chain?
00:18:03.454 - 00:18:28.896, Speaker B: Look, from my understanding is that it seems like the, you just provide a instruction through the bridge into the vault about where the strategy is gonna go. I mean, yeah, like that part seems like the only reason through your diagram it's currently used can't just slide.
00:18:29.080 - 00:19:13.644, Speaker A: So I think you missed a key point. The key point is steward. The strategists never get to talk to the smart contracts directly. If the strategist could talk to the smart contracts directly, the strategist could generate trading instructions that would harm users, that would lose money, that could potentially harm users. Steward is the key piece of this whole architecture. Steward is the system by which validators run a system that checks proposed trades and automatically analyzes them and mitigates the possibility of a strategist generating a trade that would obviously harm users. By swapping through a super low liquidity uniswap pool.
00:19:13.644 - 00:19:36.704, Speaker A: That trust mechanism, that mitigation of trust between strategists is core to the safety properties of the system. And basically, I don't see a way of doing it with the Ethereum today. You could build a system like this on top of eigenware, but that's like, that is a system that is not launched yet anyways.
00:19:38.844 - 00:19:50.452, Speaker C: Is there a strategy selection beyond assuming people are rational and will deposit to winning vaults? Is there some kind of performance review that the down performs or something?
00:19:50.548 - 00:19:57.558, Speaker A: Yeah, we do that. There's a governance vote for every new strategy, and there's been a governance votes to deprecate strategies in the past that were underperforming.
00:19:57.636 - 00:20:03.258, Speaker C: Okay. And is there an intention to replace some or all of these with AI agents in the future, or.
00:20:03.346 - 00:20:04.434, Speaker A: Yeah, that would be really cool.
00:20:04.514 - 00:20:05.570, Speaker C: Okay, cool.
00:20:05.682 - 00:20:06.234, Speaker A: Thank you very much.
