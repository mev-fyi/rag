00:00:02.120 - 00:00:44.850, Speaker A: How is it going? It's been great, guys. I've been enjoying it a lot, a lot of technical talks and everything. So for me it's pretty cool. I like it. I'm a Devrel engineer at Aztec Labs. And today we're going to be talking a little bit about proving and about wallets and their relationship and why is it a thing with aztec? So a little bit on our agenda. So the first thing we're going to be talking is about wallets, just as I told you and signers and everything else that's going on about wallets.
00:00:44.850 - 00:01:35.172, Speaker A: Then we're going to be talking about naming. And actually this talk had a different naming, but yeah, it was a bit sensitive. No, I'm kidding. And then I'm going to be talking about proving and what does proving mean for rustic? And why is it such a big deal? So talking about wallets, first of all, if I see anyone else writing wallets, I'm going to ask them if they are considering client side execution. And this is, why is this important? And why do I talk so much about client side? Why client side? Why client side? Why? Proving why? Proving privacy. That's why this is important. Like privacy, right? Like we need to talk about this.
00:01:35.172 - 00:02:02.860, Speaker A: This is like, this is key for us. Like this is key for blockchain. And hopefully at the end of this talk I'm going to be convincing you why. So what's wrong with wallets anyway? Like why am I talking about wallets? Actually, they're fine, right? There's no problem with wallets. They're necessary. You need to store state, you need to sign over SCCP. Two hundred fifty six k one.
00:02:02.860 - 00:02:28.284, Speaker A: Somehow you need to listen to the network, you need to do something. But yeah, oh boy. They will change. They will change a lot in the next few months because wallets, as we know, they aren't fit for privacy. And let's talk about it finally. Let's talk about privacy. First of all, you have none.
00:02:28.284 - 00:02:48.678, Speaker A: You don't have privacy. Blockchain is amazing, but everything is public. You sign, you get transaction requests, you sign them broadcast and everyone can actually trace it back to you, which is amazing. But everything is public. So there was no privacy. That's the first 1 second one. That's not acceptable.
00:02:48.678 - 00:03:27.694, Speaker A: We think that how can we be happy when we're basically building some kind of weird orwellian surveillance state where you can see everyone else? That's not something that we believe. It's going to be the future of blockchain. So we are building this privacy focused l two. And everyone is talking about l two. So it's not such a big deal that it is an l two, but it's important that it's a privacy focus. So basically it allows you for programmable privacy. So you code the privacy you want.
00:03:27.694 - 00:03:54.590, Speaker A: And some of it can be public, some of it can be private, but it's totally up to the developer to decide. Actually, you can say even everything is public on ASIC. The protocol is fully transparent. It's just that some of that information is encrypted only to you and only you know. And so we use tech. We develop our own tech. We roll on our crypto.
00:03:54.590 - 00:04:29.892, Speaker A: We have our own, we have our own cryptography team. We have our own research team. And we actually have done this before. So we are a company with six years old. And so we have done ZK money, we have done aztec connect, and we know what we are doing. So maybe like programmable cryptography, it's not this kind of thing that will get you the hottest person in the room. Yeah, maybe ask the Kenr wheel, which is our, which is our smart contract framework.
00:04:29.892 - 00:04:55.034, Speaker A: You should try it one day. So, merkle trees. Merkle trees everywhere. We only talk about Merkle trees because if you can prove, like, ownership of something, you can prove something that can be. Can be recruited by you. You can prove signature verification and. Yeah, did that kind of mention private native account abstraction? That's amazing.
00:04:55.034 - 00:05:32.506, Speaker A: That's something that, again, a topic for another talk. You can do complex arithmetic. You can do message passing back to l one and back to l two and all kinds of other dark magic. Then, like, what's stopping you for committing to anything at all? Just putting on chain and just do it like that. Like just work with Utxos, like you've been doing with bitcoin and everything. So we call it the node and we will happily add it to one of our many merkle trees. So this is a trait, like, if you are used to rust, this is a trait that implements some kind of node.
00:05:32.506 - 00:06:03.574, Speaker A: It just gets, it has an amount, it has an owner. And basically you can prove it. It can decrypt it, you can read it, you can change it. So, like, in short, like, you can prove, you can read your notes, you can prove your role note is nullified in an index merkle tree. You can prove that the new note is added to the pendulum merkle tree. You can prove that the new state is changing the intended way. You can prove, you can prove, you can prove, you can prove many, many, many things.
00:06:03.574 - 00:06:55.976, Speaker A: But why is this such a big deal for wallets? Why? Why? I haven't yet touched why? And let's just give you an example of how things would be if your wallet didn't have a prover inside. So you visit a website, it may be a shady website, you don't know, right? Many legitimate websites are actually shady, right? So it gives you an aztec address for your private token transfer. You send the notes you want to nullify and the ones you created, then it tells you oh sure, let me just immediately steal your info. It doesn't work like that. It can't work like this. You just can't put your private inputs in whatever form on the web. The moment you write them, they can be just stolen by someone.
00:06:55.976 - 00:07:44.504, Speaker A: So it doesn't work like this. It just can't work like this. And if you want private execution, if you want your private inputs to be actually private, they need to happen client side. And what does this even mean? Well, it means that provers, people prove their own execution in their own machine. May it be their cell phone, it may be their laptop. Asset contracts are just why are zero knowledge circuits? And it means you need to bring your own proverbs. So you can prove stuff about your own information and you need to store your own information, you need to prove your own information, you need to serve your own information in your own wallet.
00:07:44.504 - 00:08:17.734, Speaker A: So as you can imagine, it's not that easy. Like the contract you are executing doesn't know which notes you want to nullify or want to use or want to create. It doesn't know your keeper, it doesn't know anything. Like does it sound like a wallet now? Like it looks like a wallet. Sounds like a wallet. Seems like a wallet, cracks like a wallet, but it's actually a private execution environment. So let's talk about this name, private execution environment.
00:08:17.734 - 00:09:30.894, Speaker A: Like what's in a name? We need something that is for privacy, we need something that is a wallet. It needs to sign transactions, it needs to sync with an azure, it broadcasts things, it listens, it does everything that the wallet does. You need a private oracle because again, if no one on the network knows what we're trying to change, people don't know what contract are you executing, people don't know what notes are you adding, it doesn't know anything about you. So you need to serve that information in your wallet and then it's a prover, because if only you know what you are executing, then obviously only you know its input. So only you can prove, and so you are going to have to run that in your phone, because that's where people use the Internet nowadays. And so you can, and you can trust a third party. Everything needs to run on your phone.
00:09:30.894 - 00:10:01.634, Speaker A: This is aztec. Something happened to some state in some contract. So you need to tell them what happened in what state, in what contract. Only you with your wallet can know this. So we had a bit of a discussion about naming. Like naming, right? Like what is it? Like, it's an RPC server, right? It runs on your machine, it acts as an oracle. It serves your private inputs.
00:10:01.634 - 00:10:19.514, Speaker A: You simulate, you prove your execution. It's an RST RPC server. Okay, not good. Let's try another one. It's a private execution environment. It's mostly a prover. It's a prover, so it stores your nodes.
00:10:19.514 - 00:10:41.858, Speaker A: It serves your nodes, it syncs with the network. It's an execution environment. It's a proverb. So now we have p instead of ours. We're getting there. So we just ran out of ideas, because actually the PXE is just more than this. It's a private execution environment.
00:10:41.858 - 00:11:29.074, Speaker A: Let's just take the E and place it with an X. Now you had to teach people how to say pixie, not to say pixie or say pixie or PXE, but we know it's not a wallet software. We know it's not something, it's not actually a wallet. It's something that allows you to build your own wallet. And this is why I'm here. I want you to build the wallet of the future that comes with a PXE, with this service that will allow you to execute your nodes, execute your contracts, provide your notes, provide your keys, and do that in a private manner. So that's why I'm here.
00:11:29.074 - 00:12:03.254, Speaker A: So I prove, and proving is peak self sovereignty. Proving is a cypherpunk stream. Your identity, your data, everything will be protected by strong cryptography. This is what they wanted, right? So web one was mostly about reading stuff. Web two is about reading and writing stuff. We are all here talking about web3, which is about owning stuff. And this is true.
00:12:03.254 - 00:12:33.544, Speaker A: You own stuff. And I like to say that web four is about proving. So not only you own stuff, but you also prove that you own stuff. So you don't need to tell everyone what you own. You just proved that you won when you need it. Actually, I don't even understand. How can you make a privacy protocol when you're just handing your private inputs to everyone? Honestly, I don't see.
00:12:33.544 - 00:13:05.604, Speaker A: I can see. So you need to do it yourself. So where do we go from here? Can we commit to some kind of timeline? We can't, okay. We don't know because we're breaking through unknowns and knowns. Everyone here is, but yeah, we're just some things we know that are possible, some things we don't even know. That's why we have a research team. And so it's difficult to commit some kind of timeline.
00:13:05.604 - 00:13:34.874, Speaker A: But you already have a developer's sandbox, which is a local development network. You can go try and try your own business logic. It doesn't prove a lot. It doesn't do much, actually. But this is where we are and you can try it. We are developing some kind of hardcore cryptography. I mean, if you're technical, you probably heard about proto Galaxy, goblin tongue, ultra honk, zero morph, all these primitives that we're building.
00:13:34.874 - 00:14:08.984, Speaker A: But basically what we need is big recursive proofs in less than 10 seconds. This is on your phone. This is our goal. This is what we want. Then we are iteratively building the other side of the aztec network. The roll up, the sequencer, the bridging, the prover network, all this parts that are needed. But the PXE, you can already try, but these components are still needed to be built.
00:14:08.984 - 00:14:32.738, Speaker A: And then finally we're going to be decentralized at Mainnet. So yeah, this will happen somewhere, I guess, next year. So if you heard local development network, this is something I need to tell you about. We call it the sandbox. And yes, you can try already. You can try your business logic. Everything is noir.
00:14:32.738 - 00:15:16.714, Speaker A: So if you've written any rust, you are perfectly capable of building with noir. I didn't know any rust before I tried noir and it was just fine. It's a nice language and yeah, you can basically get started with everything that is in there, but it doesn't run a proof yet. So if you want to get started, just follow this meme. That's basically the smallest instruction manual. But yeah, you should definitely check the docs and some links for you. This is the aztec discord, which is a very hidden link.
00:15:16.714 - 00:15:55.340, Speaker A: You can, you can maybe zoom in and join. It's a very technical discord. So if you go there on CGM, I'm going to ban you automatically. Then you have aztec docs. This is important if you're trying the aztec development network, but also if you want to know what is the lower level concepts, if you want to learn about index markup and everything, that's everything is in aztec docs. This is my ex or Twitter, formerly known as Twitter. And my telegram.
00:15:55.340 - 00:16:15.840, Speaker A: If you want to talk with me, feel free to just zoom in and scan these QR codes. And let's talk about your development of a wallet. An aztec wallet. Cool. I think we may have some questions. Maybe.
00:16:15.912 - 00:16:32.244, Speaker B: Yes. Zipedro, thank you very much for such an inspiring and nice presentation. We learned much from this, and now we have time for some questions. Does anyone have questions? We can. Thank you. The microphone. No questions.
00:16:34.184 - 00:16:34.664, Speaker A: Okay.
00:16:34.704 - 00:16:42.904, Speaker B: So if you don't have a question right now, you can also reach him through those links. And we are glad for your attention. Thank you. Thank you again. Zipedo.
