00:00:00.480 - 00:00:40.666, Speaker A: Hey everyone, a pleasure to be here. My name is Gauthier, I'm the founder of Xi Fi, and today I'm going to show you a bit what native account abstraction enables on zksync. Prior to building what we've built, I used to build a Defi super app, which aggregated and simplified defi in one unified app. We've onboarded 21,000 users. And throughout this journey we've understood the complexities of GaAs for, for new users and even existing users. And I think we've all been through this experience where you want to do something on chain and you don't have ETH in your wallets. And basically one way to solve this would be to have the smart wallets.
00:00:40.666 - 00:01:30.788, Speaker A: And before jumping in, I want to look a bit about the adoption rates of account abstraction since it came out. And as you can see, we're seeing an average of 500,000 monthly active accounts. And we can compare this to monthly active users on evlML two s. We're seeing around 10 million active users on L two s, 40 million on EVM L1 S, and this results a pretty low adoption of account abstraction, with only 1% of users actually leveraging AA. So this is due to certain drawbacks of smart wallets. The thing is that in order to deploy a smart wallet, you need gas. It's eventually, in some certain cases, can cost more in gas as well.
00:01:30.788 - 00:02:13.834, Speaker A: And users do not want to change wallets. Changing wallets like changing your home or changing a bank account, it's something that users still don't do. I think most of us here today still use an eoa, and we can see there's a lack of interoperability with different types of other Dapps. So this is translated through different flow for eoas and smart contracts account. We can eventually see that eoas cannot interact with a paymaster. And this is different on ZkSync, basically, on ZkSync there's one, it's not loading. There we go.
00:02:13.834 - 00:03:16.002, Speaker A: There's one unified flow, right? So eoas and smart contracts and count can interact with a unified mempool and then thus interact with the paymaster. So basically EOs in some ways are considered as smart wallets on Zksync. So this was nice when we discovered this because we saw a huge opportunity on the Zksync to create a gasless experience for the whole ecosystem. But we saw that a lot of projects did not implement their own paymaster because it was complex to create, because you have to customize it, you have to create your own business logic and sometimes you even have to audit your own paymaster. So this is where Xi Fi came up. And basically we're building a paymaster as a service which supports any custom off chain logic. And this enables us to enable users, EOA users, to pay gas with any token they hold in their wallets, enables us to create any type of sponsorship, different use cases.
00:03:16.002 - 00:04:13.338, Speaker A: For example, let's say a user is a loyal customer of our perpetex, while we can offer him a certain amount of free gasless transactions. And all this is integratable through a simple API call, some simple API calls, which is trustys, and I'm going to show you how. So let's say you're a gaslist user wanting to interact with Dex. What will happen is that the front end will ask a new quote for the Xi fi API. Basically it's going to build a new Paymaster transaction. So call data is not changed, but the API, for example, will fetch the token off chains of the user. Let's say user chooses to pay gas with USDC, we will fetch the price of that token off chain, and then we will calculate how much of that USDC we need to take from the end user in order for our paymaster to cover the gas cost of that transaction.
00:04:13.338 - 00:05:10.276, Speaker A: So basically we reconstruct the transaction data, adding paymaster parameters, including the fee token that we will need to take for our paymaster. So basically this transaction data is sent back to the front end user can then view this transaction new quotes and then he can sign. And when he's signing, he's actually as well approving the fee token that the paymaster can take to cover the gas. So this is done in one single transaction instead of two, for example. So then the Xi five paymaster pays for that transaction and then it also receives the fee for that specific transaction. So in this scenario, we're able to create a solution where eoas can pay gas with any token they hold in their wallets. So we've built an API, anyone can integrate this, whether you're app, you're an app, or you're a wallet provider.
00:05:10.276 - 00:05:59.404, Speaker A: And we also created a front end where you can try their products, meaning that you can do swaps and then you can pay your gas fees with any token. You can come and send tokens, paying your gas with whatever token you have in your wallets or even do custom transactions. So let's say you're on an NFT marketplace and you want to buy an NFT. You can just take that hex data, come to our front end and then sign that transaction and pay gas with any token you have to execute that transaction. So I'm going to show you some use cases from the ZK syncos system, some projects we've been working with. So basically projects have two options. They can enable users to pay gas with any token or they can sponsor fully or even like a certain percentage specific transactions.
00:05:59.404 - 00:06:29.348, Speaker A: We've processed around 150,000 transactions in the last two months. And so this is a small demo. This is how it works on our front end. Basically you're going to choose an input token and that input token is going to be selected by default as a gas token. So as you can see, my gas fee is calculated in the input token. And as you can see here, we're running a small campaign. So you were only paying two cent of that input token as gas.
00:06:29.348 - 00:07:06.630, Speaker A: And then basically all the user has to do is a simple signature. And as I mentioned before, the paymaster paymator's input is added into that transaction. So basically it's transformed into a paymaster transaction. So this is one way to do it. Been working with gravitas Zirland as well. So here you can for example on gravitas supply, borrow GRi for example. And then here the project itself decided to take his own token as a gas token and offering a discount on that gas through its own token.
00:07:06.630 - 00:07:53.328, Speaker A: It's also a way that projects can promote their own token as well, or use it for gas. This is zero land, basically you can supply and then you can choose a gas token as well. And here this is another use case where basically this is a project that came up to us and said look, if a certain user buys above $100 of my token, basically you can fully sponsor gas for that transaction. So in this case the gas is completely free for a user buying over $100 of this token. So this is different ways of how it's implemented in the UI here. This is a Dex called mutes. Basically, as you can see here, you can click on this button.
00:07:53.328 - 00:08:55.274, Speaker A: Normally it's ETH that is being used as gas, but you can also choose different assets and then all your transactions will be paid in those tokens that you have chosen. And yeah, this is also another use case. So let's say you're an NFT holder, you can get free gas on the different dapps that integrated Xi Fi. So yeah, this is a bit about how we are evolving in the zksync ecosystem and how basically we're enabling gas disk experiences for eoas. Eventually our RiP 7560 is being discussed at the Ethereum foundation and our goal is to go multi chain. I think Starknet already has native account abstraction as well, but eventually we see a future where gas is abstracted, especially for new users. Thank you and I hope you enjoyed it.
00:08:59.994 - 00:09:12.474, Speaker B: Thank you very much Gautier for your presentation. Does anyone have questions here? Now we have time, so no questions, thank you very much again, congratulations.
