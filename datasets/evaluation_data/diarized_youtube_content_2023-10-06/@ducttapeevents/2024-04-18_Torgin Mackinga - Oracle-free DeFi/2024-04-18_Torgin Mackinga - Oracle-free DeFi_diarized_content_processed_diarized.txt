00:00:02.720 - 00:00:34.764, Speaker A: Thank you very much. You guys can hear me? Yeah. So, hello, my name is Torgan. I work at chain security, where the clickers don't work. Do we have another interface? Oh, yeah. Now it works. Okay, so I work at chain security, where we work together with a bunch of defi protocols.
00:00:34.764 - 00:01:28.532, Speaker A: You might know some of them, but today I actually want to talk about one that you probably haven't heard of. So, I recently did an audit for a project called Frankencoin, and I found it super interesting, and it's a bit different from what you might know, so I thought I would make a presentation about it. So, the way we're going to do this is, first I'll give you a quick recap of how collateralized lending works, such as in Aave, for example, which you might be familiar with. Then in those solutions that kind of already are around. Usually we use oracles, and I'll discuss some of the problems that oracles bring and why we want to avoid them. And then I will talk about oracle free liquidations and how we can actually have a collateralized lending system without needing an oracle. And I will be using Frankencoin as an example.
00:01:28.532 - 00:01:54.720, Speaker A: There's a couple different ones out there, but this is the one that I know the best, so that's why we're going to use that one. Cool. So, first of all, collateralized lending, right, this is something that you might be familiar with. There's protocols, such as liquidy or Aave or maker. They all use very similar methods for lending. And usually the way it works is you put in some collateral. So here we have some ETH as collateral, and then you borrow a different token.
00:01:54.720 - 00:02:37.164, Speaker A: So, for example, Lusd. And the way this usually works is we have over collateralized loans, so the amount that we borrow always has to be less than the amount that we put in. And this is great, because this means that we don't have to have any trust in the borrower, right? Like, if you're a bank and you want to give someone alone, you need to do some due diligence and see if that person is trustworthy. But if the person just gives you more money than you give them, then it doesn't matter. This is kind of the nice thing, how we can have permissionless loans on the blockchain, because they're over collateralized. Now, these collaterals, they are usually very volatile. So we have ETH, and as we all know, the ETH price today is not the same as it will be tomorrow.
00:02:37.164 - 00:03:26.668, Speaker A: So if ETH goes down, then at some point, this position will no longer be over collateralized, and then we have a big problem. So to avoid that, we need to do liquidations. So if the price of the collateral falls enough, then we liquidate it, which means we sell the collateral and repay the loan for the person. And then the person just loses the collateral, but they keep the borrowed assets that they never paid back. But as long as this liquidation mechanism works, we actually don't have any problems if the person just puts in collateral, borrows, and then is never seen again. Now, the tricky part is we need to know when to liquidate these positions. And in general, smart contracts don't know the prices of things such as ETH, right? A smart contract cannot know the price of ETH.
00:03:26.668 - 00:04:22.652, Speaker A: So somehow we need to figure out when it's time to sell this. And usually we use a price oracle, which is basically a contract where people post some price to, and then your contract reads that contract, and that's the price. And the most popular one of these is Chainlink. So in Chainlink, a bunch of chainlink nodes go and try to figure out what the price of something is, and then they aggregate their answers, and they post it on chain. So here you have one problem, which is that you have points of trust, right? So first of all, you're trusting these nodes that the majority of those nodes are actually giving you the correct price, and otherwise you might get incorrect prices. And then also there is the contract upgradeability. These nodes, they post the price to a contract on chain, but that contract actually is upgradable.
00:04:22.652 - 00:04:51.090, Speaker A: So there's an owner multisig, controlled by ChainLink. And if enough of the signers, they are signed, they can upgrade this contract that the nodes post to to do anything that they want. So, for example, they could upgrade it so that all of the chain link nodes are ignored, and instead, it always returns a price of zero. Right. That's something that they could do. And so here we have another point of trust. And because we're in crypto, we're actually kind of trying to reduce the points of trust.
00:04:51.090 - 00:05:35.038, Speaker A: So if we could get rid of this, that would be amazing. The other one is that oracles actually have a fundamental limitation, which is your price. Oracle can only give you the price. It's kind of obvious, but what if the price is just manipulated? So here from 2021, we actually have an example where there was a token called Venus, which was trading on binance. It was a fairly liquid market, and it traded on binance. It's bigger than most tokens, actually. And here there was a buyer who just bought this token, and he increased the price to 50% higher than it was before, over a couple hours.
00:05:35.038 - 00:06:24.418, Speaker A: And this was the major market, the biggest one. And so the Oracles, they all reported this price, right? Which was correct, because this is the market price. But there weren't actually real buyers at that price, right? There was just this one guy who was pushing up the market, but you wouldn't be able to sell a large amount of tokens at that price. And this is kind of the limitation where your oracle, it tells you a price, but it doesn't tell you how much liquidity the market has to sell into. And so what happened here is that this guy then went and took a loan out with these Venus tokens as collateral, and he stole a bunch of money. And that's exactly what we're trying to avoid. So basically what Oracles can tell us is the price of some collateral token is currently x, but that's not what we care about.
00:06:24.418 - 00:07:12.354, Speaker A: What we actually care about with liquidations is, can I sell the collateral tokens that I need to sell for at least the amount of borrowed tokens that I need to close the loan? That's the question that we're actually asking. And this has to include the price impact, the price. Oracles just don't really give us enough information to answer that question. So now let's talk about this kind of new approach of if we don't want to use an oracle, how else could we solve this? So we have a couple things that we need. So first of all, we need to know when to start a liquidation. The second thing is we need to know what price to sell at. And the third one is we want to make sure that there's no incorrect liquidations, right? We don't want to liquidate someone who shouldn't be liquidated.
00:07:12.354 - 00:07:57.420, Speaker A: So usually we solve all of these things by just using an oracle and trusting it. But these two protocols I've listed here, Frankencoin and Azna, they have very similar ideas. And the way that it works there is we don't use an oracle, but instead we have some role that triggers a liquidation. So it says, now there should be a liquidation, then we use a dutch auction. So we hold an auction where we start with a high price, and then we reduce the price over time until somebody buys it. And that's how we find our price. And the third one is that if this price that we found is too high, kind of, then we can punish the person who said that the position should be liquidated.
00:07:57.420 - 00:08:33.764, Speaker A: Even though that was not true. Yeah. So let's take a look at how Frankencoin specifically implements this. So, Frankencoin is very similar to liquidy, what I showed before. You put in some collateral, and then you mint a stablecoin against that position, and it's over collateralized. And then the borrower sets a liquidation price for themselves that is defined in frankencoins. And so, for example, here, we could have a liquidation price of 1000 frankencoins per ETH, and if the price is lower than that, then you can get liquidated.
00:08:33.764 - 00:09:07.504, Speaker A: And so now what we have in Frankencoin is that anybody can come and challenge this position and say, this should be liquidated. And in order to do that, they have to put in some collateral as well. So here, if the collateral is ETH, then the challenger also has to put in ETH, and then we can take a look at what happens. So here in blue, I have the true price of whatever the collateral is that we're trying to liquidate. And this is, of course, unknown to the contract. Right. This is kind of what we're trying to figure out what the true price is, but we don't know it.
00:09:07.504 - 00:09:50.522, Speaker A: And so as soon as the true price goes under the liquidation price, somebody should come and start a challenge and say, hey, we need to sell this. And so what will happen then is there will be an auction that has two phases. In the first one, which I have in green here, is the. The price will just be constant at the liquidation price, and if somebody wants to buy the token at that price, then they can. Now, in this case, the liquidation price is above that market price, so nobody will do it. So then after some time, we will get to phase two, which is the dutch auction, where we start decreasing the price that we're willing to liquidate at over time. And, yeah, it just goes linearly from the liquidation price to zero eventually.
00:09:50.522 - 00:10:36.596, Speaker A: And so then at this point that I pointed out with the arrow here, that's when the true price of the asset goes lower than the dutch auction price. So at this point, it's profitable for somebody to buy this asset in the dutch auction because it's actually worth more than what we're selling it at. So there will be some small delta, but essentially, we will be selling at almost the market price, even though we didn't know it. We just know that it's the market price because someone's willing to pay that much. So this is kind of the first case where we have successful liquidation and we sell the collateral in this auction without using an oracle. Now, there's another case, which is if the true price falls and somebody starts an auction, but then the price goes up again. Right.
00:10:36.596 - 00:11:12.344, Speaker A: This auction takes some time, so the price might change. So, in this case, we will be selling in this first part, where the price is constantly, and we'll be selling at the liquidation price. So if we sold at the liquidation price, that means that the asset must be worth more than that. Otherwise nobody would buy it. Right? And so, in this case, we actually don't liquidate the position because the collateral is worth enough. And so, in this case, you remember I said the challenger, he also has to put in some ETH. So, here we would actually be selling the challengers, Ethan, instead of the positions ETH.
00:11:12.344 - 00:11:42.834, Speaker A: So the position is untouched. And the challenger would probably have a small loss in this case. But if there was a successful liquidation, then we would pay a fee to the challenger, where he would make money. So he sometimes makes money and sometimes loses money. Now, the big reason why we need this is the third case. So, this is the third case where the real price is actually higher than the liquidation price. But anybody can be a challenger, right? So anybody can just come and say, hey, we need to liquidate this position.
00:11:42.834 - 00:12:21.294, Speaker A: So what happens then is a challenge starts, and then again, we're in this green phase first, where we sell at the liquidation price, and the liquidation price is lower than the real market price. So somebody will instantly go buy this, right? Because this is very profitable. You're buying the asset at a discount. And so then we have a challenge that starts, and immediately the collateral gets sold, but at a lower price. And so, in this case, the challenger's collateral will be sold, right? Because we're still in the first phase. And so, now the challenger made a loss because he incorrectly said that a position should be liquidated, even though that was not the case. Cool.
00:12:21.294 - 00:12:56.054, Speaker A: So, let's recap. What we wanted was, we wanted to know when to start a liquidation, right? So, here we have a challenger who puts down some collateral and says, hey, I want we should liquidate this now. And if he's correct, then we pay him something for it. The second one is, we need to know what price to sell at. So, here we have our dutch auction that's split into two phases. First, we have this constant price, and then we have the declining price, and then the third one is how to avoid incorrect liquidations. And so here we do the thing where if it's sold in the first phase, we actually don't liquidate the position, but instead we liquidate the challenger's collateral.
00:12:56.054 - 00:13:20.406, Speaker A: And if it is sold in the second phase, then we know that we had to liquidate the position, and then we do that. Cool. So let's talk about some pros and cons of this design. So one pro, of course, is we have no external dependencies. We don't have an oracle or anything that could go down, for example, or could be malicious or whatever. We just have market forces. Now, of course, what that means is we need market participants.
00:13:20.406 - 00:14:16.914, Speaker A: We need people to be watching these auctions and bidding in them competitively. Otherwise it doesn't work. For example, if there's nobody that bids, then the price will just go down to zero, and that's bad. Now, one of the cons of having no external dependencies is actually we cannot have a hard peg to anything external. So the Frankencoin wants to be a swiss franc stablecoin, but this mechanism that I just explained doesn't explicitly peg it to the swiss franc because it can't know what the swiss franc price is, right? So what the mechanism ensures is that the Frankencoin is always over collateralized. But in theory, the price could be different from chf1. So, for example, if we have a liquidation price of 1000 Francoin, but one Franken coin is worth two francs, then the liquidation price will be 2000 francoins will be 2000 francs.
00:14:16.914 - 00:15:06.246, Speaker A: So because it's a self referential system, we cannot have a hard peg to something that's outside of the system. But we know that it's always over collateralized. So we kind of have a lower bound on how much this coin should be worth. Then the next cool thing is that here the price impact is taken into account in our liquidations. I said before that this is a limitation of oracles, is we don't know the liquidity of the market, we just know the current market price. But here we had some position, you can imagine this was a huge position, maybe, and we found the market price for it by doing an auction for that position. So we know that somebody was willing to buy that amount of tokens at that price because they just did, right? So we know for sure that this gets taken into account.
00:15:06.246 - 00:15:48.646, Speaker A: And so, for example, if there was a huge position, maybe somebody would even start a challenge before the kind of market price goes below the liquidation price, because they're predicting that you won't be able to sell this huge amount at the market price, you kind of have to predict the price impact of it. And then if it does clear below the liquidation price, then you will be rewarded for making this prediction correctly. Now, the downside is our liquidations take time. We have this first period where nothing happens. It's like a sanity check. And then we have our dutch auction, which also takes time. So during that time, of course, the collateral value can go down more.
00:15:48.646 - 00:16:27.544, Speaker A: So if the collateral value goes down by more than the over collateralization, then we have bad debt, just like in any other system. And because our system takes time, we kind of need to have bigger buffers if we have liquidations that take a long time than if they were very quick. The other thing that is really cool about this system is that all the roles are permissionless, right? So anybody can borrow these tokens, anybody can be a challenger. You don't need any permissions. Also, the contracts don't need any permissions. There's not like an admin or something that can decide what happens to the contract. It's not upgradable.
00:16:27.544 - 00:17:05.968, Speaker A: There is a governance system that's also very interesting, but kind of out of the scope of this talk. But in case you're interested in that kind of stuff, I recommend looking into it as well. Now, the downside of having these permissionless challenges is that we need a lot of collateral for the challenges. So if you're trying to liquidate a 100 ETH position, you need to put up 100 ETH as collateral to challenge it, or you can put up partial collateral, but then it will only be a partial liquidation. So you could, for example, put up ten ETH liquidate and then do it again. Right. But then you're multiplying the time again that it takes to liquidate this stuff.
00:17:05.968 - 00:17:27.904, Speaker A: Right. You would have to do ten liquidations in a row, and again in that time, maybe the collateral has gone down in value. So I think this is actually the biggest limitation of the system. Cool. So, in summary, first of all, oracles suck. This is kind of what I tried to illustrate in the first half. The second one is we can avoid oracles actually.
00:17:27.904 - 00:17:52.476, Speaker A: Right. This is actually not something that's necessarily intuitive, that we can even have a system like that without oracles at all. But it comes with trade offs, of course. So we just talked about the trade offs. I think the biggest one is really this, that it takes a long time to do this whole process, and you need a lot of collateral. Yeah. But all of this oracle free stuff, it's really new.
00:17:52.476 - 00:18:18.194, Speaker A: It's really interesting. So I've really only seen it over the last couple of months that a bunch of projects have started working on something like this. So I think the design space is still very big, and we might even be able to come up with solutions that are better than this, that have nicer trade offs than this one. Yeah. So I'm excited to see how this kind of evolves in the future. Cool.
00:18:24.794 - 00:18:30.574, Speaker B: I see that. We already have questions. If you just give me a second, my colleague will bring you a microphone.
00:18:42.634 - 00:19:06.722, Speaker C: So I think the design of this system is exactly idempotent to an options market. If I make a wrong challenge where the price of the. I'm speculating that the liquidation price will go lower, but when I make the challenge, it's higher than the liquidation price. I've essentially written a call option with the strike price at the liquidation price and the liquidation time with the time to expire.
00:19:06.778 - 00:19:16.780, Speaker A: Right, so you're saying that at the time you create the challenge, it's above the market? The market price is above the liquidation price.
00:19:16.852 - 00:19:40.216, Speaker C: Yeah, yeah. It's equivalent to me writing an option. So let's say I create a contract that wraps your contract. So when I create a challenge, I can sell my claim, my challenge claim to somebody else. That challenge would be priced exactly like an option, as if I'm writing an option with time to expiry, being time until zero there, and the liquidation price has the strike price.
00:19:40.380 - 00:19:57.096, Speaker A: So the problem is that your challenge will be immediately ended. So anybody can buy your collateral that you put into the challenge at this liquidation price, which is below the market price. Right. So.
00:19:57.120 - 00:20:02.664, Speaker C: I'm sorry. Sorry. I meant the other graph then. Yeah, the one where, like, here. So, yeah, it's basically an american option. Right?
00:20:02.824 - 00:20:09.148, Speaker A: Yeah. So here, I think that sounds just about right. Yeah, yeah, yeah.
00:20:09.156 - 00:20:23.980, Speaker C: It's an american option. Anytime that crosses, I can exercise the option and it will get exercised in a rational market, as long as it's lower, it's going to be priced exactly like an option with theta t and strike price. P one.
00:20:24.132 - 00:20:31.852, Speaker A: Yeah, I think that's correct. And that's also nice. Right. Because it actually means that opening these challenges is less risky because you can sell it in that way.
00:20:31.868 - 00:20:35.678, Speaker C: Yeah, it's very easy to calculate. There's already calculations.
00:20:35.806 - 00:20:36.358, Speaker A: Yeah, exactly.
00:20:36.406 - 00:20:37.190, Speaker C: It's standard options.
00:20:37.222 - 00:20:37.558, Speaker A: Right.
00:20:37.646 - 00:20:38.038, Speaker C: Cool.
00:20:38.126 - 00:20:38.598, Speaker A: It's cool.
00:20:38.646 - 00:20:44.446, Speaker C: I actually thought something similar to this, but I never got to the point that I matched it to an options market, so.
00:20:44.470 - 00:20:46.714, Speaker A: Cool. Cool.
00:20:47.814 - 00:20:49.874, Speaker B: We have another question over there.
00:20:58.254 - 00:21:16.164, Speaker A: By the way, if you guys want to learn more about this, we have the audit report on Chainsecurity.com, comma, where we have a really detailed explanation of how the whole system works. And also, of course, the issues that we found with it. So we found a couple of cool issues, actually. So if this kind of stuff interests you, I can definitely recommend checking out that audit report.
00:21:16.984 - 00:21:35.614, Speaker D: Hi Torgin, great talk. Do you think if it were possible to do sealed bid auctions efficiently on a blockchain, you could sort of optimize the capital efficiency of the system by doing the part two auction and the part one in a single sealed bid auction of some kind?
00:21:39.194 - 00:21:42.466, Speaker A: Can you repeat the question? Yes.
00:21:42.490 - 00:21:57.534, Speaker D: So I give you a magical contract that does sealed bid auctions. Can you do the collateral auction, both the part one and the part two, together in a more efficient manner?
00:22:01.384 - 00:22:13.064, Speaker A: Yeah, maybe more time efficient, if that's what you mean. I mean, I think the dutch auction should always find you the correct price, right? It just takes some time, is that what you're talking about?
00:22:13.184 - 00:22:20.004, Speaker D: Yes. So if everyone bids their price at the same time, then we also find the highest correct price.
00:22:20.384 - 00:22:26.664, Speaker A: Yes. I mean, that auction would also take some time, right? Everyone needs to have time to submit their bids. But yes, I think so.
00:22:29.284 - 00:22:30.144, Speaker B: I think.
00:22:44.164 - 00:22:53.262, Speaker E: Thanks for the presentation. Really interesting. I have one question to that slide. What happens? You said the dutch auction goes to zero.
00:22:53.388 - 00:22:53.746, Speaker A: Yes.
00:22:53.810 - 00:23:10.254, Speaker E: So what happens if the price falls and it never, like, it falls to zero? So what happens? Wouldn't you want to liquidate at the price of the, like sometime, like, because otherwise everyone loses?
00:23:10.594 - 00:23:15.962, Speaker A: No. Well, if the price of the asset is zero, you can't sell it for more than zero, right?
00:23:16.058 - 00:23:20.114, Speaker E: Yeah, but then maybe it would have been better to sell it before, no?
00:23:20.814 - 00:23:58.638, Speaker A: Yeah, so I mean, that's a problem. So if something is too volatile and goes down faster than the rate of the dutch auction, for example, then you will be selling it at zero, and then you just have bad debt in the system. But I mean, that's exactly the same in any other over collateralized system like this. Like in Aave, if one of the collateral tokens goes to zero, then it's also worthless. But then maybe the obvious auctions are a bit quicker. But generally if something goes to zero immediately, you can never solve that. It's just if.
00:23:58.766 - 00:23:59.214, Speaker E: Of course.
00:23:59.254 - 00:24:26.724, Speaker A: Yeah, yeah. So basically, you should not use tokens that can go to zero in a short time as collateral, right? And that's actually also something that in, in Frankencoin you can use any token as collateral in principle, but of course you should only allow those that are suitable as collateral and that you can sell into a liquid market and so on. And this is part of the governance system that I alluded to earlier.
00:24:27.584 - 00:24:28.964, Speaker E: Okay, thank you.
00:24:29.744 - 00:24:43.404, Speaker B: I'm afraid we don't have time for more questions, but I hope that Torgin will be around a little bit longer at the event so you'll have a chance to connect with him and ask your questions. And now let's just give him a round of applause for a fantastic presentation.
