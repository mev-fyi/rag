00:00:01.290 - 00:00:55.946, Speaker A: Hi, everybody. It's Pete McGuin from Zero mev here. I want to give you a very quick walkthrough, more of a run through, really, of the main features of the Zero Mev Ethereum front Running Explorer. You're going to see some nasty examples of front running and censorship in Ethereum and some colorful heat maps to balance things out a bit. So go to www.zeromev.org and you'll find something like this showing recent mev categorized by how harmful it is to users. So Zero Mev is unique in differentiating harmful or toxic mev involving front running and censorship from neutral and as yet unclassified mev.
00:00:55.946 - 00:01:37.798, Speaker A: And that's shown quite clearly. Here. You can see here we have toxic mev, and here we have Other. So you can scroll up and down here and see the last hour or so and just click on any block you like to drill down into it. You can also search by block number, transaction, hash or account, just as you would with any Blockchain Explorer. So for now, I'm going to enter 1495-9522 for this example, if you want to follow along. And bang.
00:01:37.798 - 00:02:39.162, Speaker A: So, straight away we can see two Sandwich attacks at the top of the block. So Sandwich is the victim transaction and front run and back run are the attacking transactions, which lost the user $13,000 in the first case. So what's going on here is that the front run pushes up the price so that the victim overpays and the back run allows the attacker to profit from doing this. So if we hover over Sandwich, the Sandwich badge, we can see the details of the swaps involved. So something to notice is that the user loss is higher than the attacker's profit. And this is quite typical. Now, at Zero Mev, we are interested in harm to users.
00:02:39.162 - 00:03:19.370, Speaker A: We're not interested in profits to miners. So that's what we focus on, user losses. The delay column shows that the victim had to wait 1 minute, 58 seconds to be included, only to be attacked when they were hover over it. And we can see the delay as measured by each Zero Mev node. You can say they're all pretty similar. And similarly, we can hover over the arrival time for any transaction. And we can see the first time that each Zero Mev node saw this transaction when it was pending.
00:03:19.370 - 00:03:36.450, Speaker A: So now let's take a look at the heat map. So the heat map is over here. This is the summary of it. And this is the same thing by transaction. Yeah, they're both the same. Yeah, that's the sort of detail, if you like. And this is the summary.
00:03:36.450 - 00:04:41.286, Speaker A: Now, the colors are all mixed up because the time order of transactions in the block is mixed up too. And this is bad news because toxic mev happens when miners order transactions by self interest and not by time. So click on Fair Order and we can see this. The heat map is now showing that the transactions have been sorted in time order. Yeah, we've got the oldest first in light yellow, and we've got the most recent last in dark black. So notice that the earliest transaction in the block is delayed by 17 minutes, 24 seconds before being included, and also that the sandwich attacks have disappeared. So what's happened to them? Click on Info and we get to see only the transactions of interest.
00:04:41.286 - 00:05:33.320, Speaker A: So transactions swaps and mev. And we can see then that the victim sandwich transactions are still near the top. Yeah, because they're kind of old transactions, they deserve to be early in the block. Scroll down and you'll see the attacking front run and back run transactions now out of harm's way at the bottom. Yeah, that's where they would be if they're ordered by time. So had the block been ordered by time, neither of these sandwich attacks would have been possible, and these two users would not have lost a combined 14,000, OD dollars. So how were these sandwich attacks performed with such precision? Yeah, we'd scroll up again, click on Block Order and then on all.
00:05:33.320 - 00:06:16.838, Speaker A: So Flashbots provide a service allowing people to bribe miners to include bundles of their own and other people's transactions in whatever order they choose. The column with the robot icon shows that the first sandwich attack was sent in Flashbots bundle two, so you can see 2.12.22 .3, and the second in bundle three. So that's 3.13.23 .3. And this service makes sandwich attacks trivial to perform and riskless for the attacker, because if they fail, it costs them nothing.
00:06:16.838 - 00:07:16.198, Speaker A: They don't have to pay anything. Perhaps unsurprisingly toxic mev increased as a ratio of all mev after Flashbots released this service. We can see then that time ordering solves the problem of toxic mev. But how accurately can we know time order in a distributed network like Ethereum? Well, we can get a bit of a window onto that as well. So see this delay box at the top of the page? It tells us that transactions were delayed by an average of 59 seconds in this block before being included. It also tells us that the oldest transaction in the block had to wait 17 minutes, 24 seconds before being included, which we already know. So if we hover over it, we get details, as we often do, and you can see individual block arrival times there.
00:07:16.198 - 00:08:01.240, Speaker A: Now, let's look at the network box. Right, this shows us the actual performance of the Ethereum P to P, peer to peer network, and that it had a delay of only 62 milliseconds at this time. So that is far, far, far less than our victim transactions were delayed by, which was around two minutes. So have a play around, have a click around. As a next step, you could try putting your wallet address into the search box at the top and seeing if you have been the victim of toxic mev. I do hope you haven't we've got a lot more coming on this topic? A lot of information. So please follow us on the links below.
00:08:01.240 - 00:08:04.850, Speaker A: I'll see you next time. Bye.
