00:00:00.840 - 00:00:17.590, Speaker A: Hello courthouse community and welcome to another competition kickoff. Biconomy competitive audit is live and you can compete to win up to $30,000 in prices. The biconomy team is here with us today to explain us how the code base works. So grab a cup of coffee and get ready because we are just getting started.
00:00:17.750 - 00:01:11.270, Speaker B: Hey guys. So this is the Nexus repo. You can go to the dev branch or just at the commit shared in order to set it up. You don't need to keep anything in the env files, just first to yarn and then if you are like running again later you can may want to like clean the artifacts yarn clean and this will build harder and foundry both artifacts. And it takes a while actually like quite longer time because of the solidity compiler version. So once this build is complete then you can do and run yarn test. Meanwhile I'll give you the overview of the code.
00:01:11.270 - 00:01:55.190, Speaker B: So most of the contracts like this is the main implementation contract for Nexus. And so it follows the proxy pattern rights. The factory contracts are in here. This is the main factory that's being used. But there are like bunch of factories which can be used like you know, as an alternate versions of factories that just like depends on like how many modules you want to install upon like deploying the account. And there's this metafactory which acts as a parent factory. So like if we may want to just take on the entry point just one factory, then we can use this one and then like pick up, you know, desired version of factory to deploy an account through it.
00:01:55.190 - 00:02:37.400, Speaker B: And the implementation contract has like certain amount of like base contracts and the interfaces you can find here. And Nexus account follows ERC 4337 and ERC 7579. So it inherits from like both of these interfaces. And all the modules have like specific interface which are defined here in terms of modules. We only have this current r1 module which is called k one validator. There are like different kinds of modules in 759 ecosystem and. But yeah, like modules is like, you know, like any account can, is compatible with like any 7579 modules being developed by the module developers community.
00:02:37.400 - 00:03:08.864, Speaker B: So we can just like, you know, plug them in later. And there are a bunch of test cases though with like the mock executor and mock hook. So you will find them in mocks, mockworks, obviously not in the scope of the audit. And in the base contracts. Yeah, in the base contracts there is a base account which is like ERC 4337 helper methods. Then there are like execution level helper methods and model manager contract is responsible for managing the module. This is on this the only contract which has like you know a real state.
00:03:08.864 - 00:04:14.038, Speaker B: Otherwise nexus account is like almost stateless. So it doesn't hold like owner's information and stuff. But the module manager will store the information of modules which are being installed in the account and those are saved in like this sentinel linked list pattern. You'll also find the storage layout, it follows CRC 7212, sorry 7201 and what else besides that? Yeah I've covered the modules and there are, yeah, in the libraries you will find like some libraries which have the helpers in order to like you know, how to decode a particular execution mode or how to encode that for you know, calling the execution methods during the execution state of like ERC 4237 transaction or user operation. And yeah this is pretty much it. And in terms of tests, the tests are here. Tests are written both in hard earth and foundry and has above 80% coverage for both.
00:04:14.038 - 00:05:33.780, Speaker B: And in foundry you will find this branch testing tree pattern right where, and most of the tests are like either in integration or like in unit and concrete where you will find tests for like you know, different levels of like you know, testing or like features basically. And yeah, hard. It also follows similar where you will find like some more tests in the hardware files and hang on, I need to wait for the. Okay, so now the build is complete and test you can just run yarn test or if you just want to run founded as then obviously just force tests or like an ex harder test for the harder test. And yeah this will run all the tests in the repo including the fuzz and invariants as well. So to take a minute. And yeah, besides this you can also check out this repo 7579 implementation which is a reference implementation as a reference for this account.
00:05:33.780 - 00:05:50.470, Speaker B: Also you can check the, you know, previously closed pull request for a discussion or an information about a specific feature or feel free to open any issues or just report as part of the contest. So yeah, that's all.
