00:00:11.000 - 00:01:07.292, Speaker A: Now, the reason I especially wanted to show you all of these debugging things right now is because we are about to move off of remix. Remix has been this phenomenal IDe or this phenomenal integrated development environment that allows us to quickly try things and quickly deploy things. But we're actually going to move off of remix to a more professional setup, and we're going to be using a modern set of tools that most of the rest of the development community also works with. And I'm going to tell you this right now. Often installing these new tools and often just getting your local development environment set up, not using remix or not using what's called a cloud iDe can often be the actually most difficult step in this whole process. So I want you to be absolutely vigilant in using all of the resources that I just showed you. Using the chat, using chat GBT, using piranha, using stack exchange eth, using web three education dev.
00:01:07.292 - 00:01:13.696, Speaker A: Once we get this up and live, be sure to use these tools. And don't let installing these slow you.
00:01:13.718 - 00:01:16.192, Speaker B: Down, because in my mind, installing these.
00:01:16.246 - 00:01:26.896, Speaker A: Can be the hardest part of this whole course. And it's okay. Things might not work the first time and that's okay. Just be sure to ask questions and be very specific with the errors that.
00:01:26.918 - 00:01:30.068, Speaker B: You'Re seeing and installing these things. That's what we're going to learn how.
00:01:30.074 - 00:01:33.156, Speaker A: To do right now. So remix is a phenomenal tool, but.
00:01:33.178 - 00:01:34.116, Speaker B: Now we're going to move over to.
00:01:34.138 - 00:02:10.236, Speaker A: This more professional setup called Foundry. Foundry is one of the most popular smart contract development frameworks, similar to hardhead or brownie, if you're familiar with those, and it's known specifically for its speed, foundry is easily the fastest to work with. Smart contract development framework one of the unique aspects about foundry is that whereas hard hat is JavaScript based, Brownie is Python based. Foundry is completely solidity based. So we don't have to learn any other programming languages other than solidity to work with foundry. And similar to everything that we've been doing so far, all of the code for all of our foundry products are going to be in the GitHub repo.
00:02:10.268 - 00:02:11.424, Speaker B: Associated with this course.
00:02:11.542 - 00:02:15.484, Speaker A: However, the documentation for foundry I think is also phenomenal.
00:02:15.532 - 00:02:17.316, Speaker B: So be sure to use this as.
00:02:17.338 - 00:02:56.336, Speaker A: You code along, and something very interesting that I really love to do. Most of these pages are pretty small, so even if your AI isn't trained off of foundry, which as a recording, it's not, what we can do is something called context injection when we have issues so we can copy the entire page of documentation we can say, I'd like to start, I'd like to install foundry. Here are the documentations for installation. How can I do it? Do the three backticks, paste the whole thing in there. And by giving our ais the documentation for working with foundry, it's actually going.
00:02:56.358 - 00:02:59.580, Speaker B: To give us outputs to install foundry.
00:02:59.660 - 00:03:10.496, Speaker A: So this is a methodology you'll see me use from time to time. This context injection, you can find more information in the GitHub repo once again associated with this course on installation and setup.
00:03:10.608 - 00:03:11.136, Speaker B: MacOS.
00:03:11.168 - 00:03:12.144, Speaker A: And this should be Linux.
00:03:12.192 - 00:03:15.049, Speaker B: And then we have some windows setup stuff down here and we're going to.
00:03:15.049 - 00:03:19.568, Speaker A: Go over how to set up all the important things for this course. So be sure to use this as a reference.
00:03:19.664 - 00:03:28.536, Speaker B: Now a great question you might be asking is, well, what's even the purpose of foundry? Why do we need to use this other tool? Remix is working great. Well, in remix you notice that we.
00:03:28.558 - 00:03:29.780, Speaker A: Did a lot of stuff manually.
00:03:29.860 - 00:03:39.928, Speaker B: Like I came in here, I had to go to compile. Maybe I wanted to test something out. I would go deploy it. I got to put a price feed in here, put a price feed in here, deploy.
00:03:40.104 - 00:03:40.492, Speaker A: Okay.
00:03:40.546 - 00:03:56.176, Speaker B: Does the get version work? Something's wrong with my get version. Okay. My iowner works okay. Minimum USD works. Oh crap. I got to go make some little change here. Maybe I want get version to actually return seven plus two or seven plus one.
00:03:56.176 - 00:04:37.596, Speaker B: Now I got to go delete this, I got to go redeploy, I got to go click this, I got to go down, I got to click ever. And then if I have 100 things that I change, testing all of this is going to take a really long time. And anytime you do something, anytime us as human beings changes our code in some way, there's a chance that we break something. And remember, these smart contracts are immutable. So if we break something, if we mess something up, that's really bad because that mess up will be permanent on the blockchain. So we want a framework that helps us deploy our smart contracts, test our smart contracts, and interact with them in a much more programmatic way, rather than we having to manually click around. Right? If I change ten functions and I wanted to test they all work, I would have to go click ten buttons.
00:04:37.628 - 00:04:38.524, Speaker A: That's ridiculous.
00:04:38.652 - 00:04:52.084, Speaker B: In foundry, we can do all of that in one command or one button. So that's why we're going to be using foundry here. And I'm so excited for you to be using this foundry tool because like I said, it's the fastest smart contract development framework out there right now, but.
00:04:52.122 - 00:04:55.520, Speaker A: Additionally it's also the framework of choice.
00:04:55.600 - 00:05:03.912, Speaker B: For smart contract security engineers and auditors. And I expect more and more projects in the future to be built in foundry. So incredibly excited for you here.
00:05:03.966 - 00:05:12.376, Speaker C: Now, for the rest of the course, I'm going to be using a code editor called Visual Studio Code. This is one of the most powerful code editors on the planet, and if.
00:05:12.398 - 00:05:13.724, Speaker A: You'Ve already got it set up, feel.
00:05:13.762 - 00:05:17.132, Speaker C: Free to go ahead and skip this part. You'll often hear people refer to this.
00:05:17.186 - 00:05:19.772, Speaker A: As VS code or visual studio code.
00:05:19.826 - 00:05:56.104, Speaker C: Or just visual studio. However, it's important to note that visual studio code, this is different than visual studio, which you might see look like this. So visual studio code is what you want, not visual studio. Visual studio is a different application. Make sure you're on visual studio code now if you choose so, and you're a total hardo, you can absolutely work just with your terminal or just with Powershell or just with whatever coding environment that you want, like atom or sublime. However, for us, we're going to be working with visual studio code and I'm going to be going through setting up.
00:05:56.142 - 00:05:59.032, Speaker A: Visual studio code the way that I like to set it up.
00:05:59.086 - 00:06:30.432, Speaker C: You can absolutely set it up whatever way that you feel comfortable. Now we're going to go through three different installation processes and pick the one that's most appropriate for you. The first one is going to be for Mac and Linux users. The second one is going to be for Windows users. And then our third one is going to be a last ditch effort. If for whatever reason you can't get Windows or Linux or the Mac instructions to work, we're going to use a Gitpod installation. Now I highly, highly recommend that you try to get everything working locally without using gitpod.
00:06:30.432 - 00:06:40.372, Speaker C: However, if for whatever reason you can't get those installation pieces to work, we will have gitpod instructions for all of the repos that we work with here.
00:06:40.426 - 00:06:41.956, Speaker A: But to get started, we'll start with.
00:06:41.978 - 00:06:44.320, Speaker C: The Mac and Linux installation instructions.
