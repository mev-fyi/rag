00:00:00.170 - 00:00:24.350, Speaker A: Alright, everyone, welcome back to another episode of Bell Curve. Before we jump in, quick disclaimer. The views expressed by my co host today are their personal views and they do not represent the views of any organization with which the co hosts are associated with. Nothing in the episode is construed or relied upon as financial, technical, tax, legal, or other advice. You know the deal. Now let's jump into the episode.
00:00:25.370 - 00:00:53.162, Speaker B: You. I actually don't think people are users of Ethereum. I think they're users of applications, but also, more importantly, they're users of MetaMask. I think the lock in isn't actually Ethereum. The lock in is MetaMask. And today, what makes an Ethereum L Two like Polygon easier to use than Cosmos like Osmosis is that you don't have to download a new wallet, right, because you already have MetaMask installed.
00:00:53.226 - 00:00:57.066, Speaker A: All right, buddy, episode one. Miles, excited to do this with you, Ben.
00:00:57.098 - 00:01:05.882, Speaker C: Yeah, me too. Bringing on Sonny and Dimitri, I think these are two of the leading thinkers of the space and just a great way to kick off the season.
00:01:05.946 - 00:01:20.002, Speaker A: So maybe why did know this is obviously intro to season one? We're going to be talking sort of big picture. Although honestly, the interview did get a little bit technical at points as well. That's part of the good thing about Dimitri and Sonny. But why do we pick these two to sort of kick off the season?
00:01:20.066 - 00:02:17.030, Speaker C: Yeah, I think with Sonny, he is know, the builder of the most mature application specific chain in the space right now in terms of Osmosis. And I think he's really been one of the leaders in trying to push this, I would say reorientation from thinking about decentralized applications, thinking about blockchains, really from an application first standpoint rather than a chain first standpoint. And I think we'll hear him really kind of dig into that over the course of the episode. And then on Dimitri's side, he's coming from it from the perspective of an investor and he's thinking about, okay, we do believe that applications are going to want their own block space. What is the spectrum of the different versions of this look like? What does the end state market structure look like? And I think he's done a great job exploring that in the past.
00:02:17.100 - 00:02:48.074, Speaker A: I totally it's actually always good to get sort of a builder and investor because they're both very smart, but they kind of come at it from different angles and I think when you get the two of them, you get some pretty special content. Well, this was a fun one. I think. Without any further ado, let's dive right in. Welcome to the first episode of season three of Bell Curve. Very excited to be joined by my new co host for the season, Miles O'Neill. And we've also got Sonny Agual of Osmosis and Dimitri Brenson of One KX to explore the app chain thesis.
00:02:48.074 - 00:02:49.762, Speaker A: So guys, welcome all to the show.
00:02:49.816 - 00:02:50.978, Speaker D: Thank you. Good to be here.
00:02:51.064 - 00:03:10.550, Speaker A: Maybe we could start from just since this is the first episode of the season, just sort of a 10,000 foot view. And Sonny, maybe I can pick on you a little bit here, but if we could even just start with something as basic as what are app chains? When we talk about app chains, and if you had to put the broad contours around kind of the app chain thesis, why do people sort of get excited about that term?
00:03:10.630 - 00:04:37.726, Speaker B: Yeah, sure. So app chain, it's short for an application specific blockchain. I think what we get maybe to talk about the app chain thesis before we even go into app chains, I think I have to make a pitch for why applications are valuable, and that then will later lead into why app chains, why applications are valuable. So in crypto, there seems to have been this prevailing thesis that has been around for the last about five years, ever since the infamous Union Square Ventures blog post about it called The Fat Protocol Thesis. And it's been around this idea that, hey, you can build this generalized L One and you just get other people to build stuff on top of it. But most of the value accrues to the L One token. And that's been sort of this primary thesis that's been driving this L One driven investment over the last especially over this last bull cycle, where most of the investment flowed into your avalanches and solanas and stuff, where it's like, oh, look at these generalized platforms.
00:04:37.726 - 00:05:24.638, Speaker B: A lot of builders on top of it. And this is sort of like a bet on infrastructure, right? It's like, okay, if you can build the rails that everything runs on, that's where the value accrues. And this bet has been made before in the where we're in Web three. Now. If you look at the original Web as the.com bubble was happening and the Internet was really heating up, people were like, oh, how do you bet on the Internet this growth of this new thing? And a lot of people were like, oh, well, you bet on the pipes, right? Like you bet on CompuServe and AOL. They're building the pipes that the Internet is running on, and as the Internet grows, that's where the value is going to accrue.
00:05:24.638 - 00:06:48.110, Speaker B: Now, if you look back in retrospect, we have 30 years of background looking back now, it's like, no, those actually weren't the right bets to make, right? Copy serve and AOL kind of like, died off effectively. Really, the two best bets you could have made in the 90s on the Web were Google and Amazon, and those two were applications, right? And the thing is, applications really, in my opinion, are where value accrues. And because of a number of reasons, they are much more stickier and they're not commoditizable. They have a direct relationship with users in a way that the pipes don't. And so today I actually would argue that people aren't necessarily ethereum users, they're uniswap users or they're ave users. And as these applications go multi chain or as I suspect will go know the user's relationship with the actual blockchains it's intermediated through the applications. And that's why the applications are really where this value accrues and how this now then relates to the whole app chain thesis which is know, look at today.
00:06:48.110 - 00:07:46.430, Speaker B: Now actually the two biggest internet services providers are actually Google and Amazon as like, you know, you have AWS and Google Cloud because it turns out the people who build the applications have the best knowledge of what's needed from the infrastructure to build the best applications and that actually enabled them to build the best infrastructure layers as well. And that's kind of almost a claim of app chains as well, that by like the app developers actually know better of how to build proper infrastructure than these pure infrared builders. And that's why these app chains are going to sort of win out and we can design the infrastructure for the needs of applications in a way that generalized blockchains can't. So I know I've talked for a little bit, I'll let maybe someone else jump in with some but that was a little bit of background on how I see value accrual in blockchains.
00:07:46.510 - 00:08:45.954, Speaker D: I have a different worldview of how to cut it. I mean, I agree with everything you said. I guess to answer the question, I define an app chain as a blockchain that dedicates its block space to a specific application, which is like a very simple way to describe it. And that definition also is quite broad in the sense that you could consider Bitcoin to be an app chain or you could consider Rweave to be an app chain as well. I think the concept itself is not particularly new in that it's been implemented in many ways. I think there have been projects like Cosmos Polkadot that have generalized that idea but it's actually been around for a while. I view it also as like a scalability thing and an evolution around realizing that there's a general with blockchains.
00:08:45.954 - 00:10:02.362, Speaker D: There is a product market fit for block space. I think of block space as effectively like a market for trust. And over the years we've seen more and more demand for these trust minimized markets in a way that no specific instance could scale. And so we've seen that around, I guess around like 2020 where you look at super high gas fees. A lot of this we've seen on polygon and that kind of prompted the development for other ways to scale. And a very basic idea was that hey, instead of stuffing everything inside of one state machine, what if we just have very specific little pockets where applications could do their own thing? And I think that's like an interesting paradigm. The last thing I'll mention is that I think we're talking about app chains in the context of a full stack solution.
00:10:02.362 - 00:10:52.954, Speaker D: So just like to frame it. I think a lot of people, when they think about app chains, they think about a Cosmos chain where it's from all the way down to the consensus level. I think that also exists along a spectrum. I actually consider application specific roll ups to be an app chain as well. I kind of look at a roll up as like a trust minimized blockchain with a two way trust minimized bridge. So there's other terms you could start to introduce, and I think we have already too many in crypto, but like a roll app or an app space concept. So I also want to talk about the notion of app chains with this idea in mind where I'm bucketing roll ups in that spectrum as well.
00:10:52.992 - 00:11:23.442, Speaker C: Yeah, and I think that spectrum is really something we want to dig into today and really for the rest of the season as well, I guess for simplicity, and I'll throw this to Sonny first. In the context of a full stack app chain, what would you say are the most compelling reasons to build an application as a full stack app chain? What are the things that you can do when you vertically integrate? And maybe some examples, whether it's Osmosis or other app chains that you've seen of some of these benefits in action.
00:11:23.506 - 00:12:16.274, Speaker B: Yeah, but I completely agree. Roll ups are just blockchains that use different security. How a security mechanism works is, I think, almost a side concern on whether something's an app chain or not. And I think the way security is going to look even on Cosmos is going to be very different than it does today. Right. As we move towards mesh security and validity proof based like IBC, all of this is going to look very different anyways. Why would someone choose to build an app chain in general? One of the biggest reasons okay, I think there's a different reason, right? One is you just want to have more ownership over your block space, right? And this is really valuable.
00:12:16.274 - 00:13:05.814, Speaker B: When you're running on a generalized blockchain, you are basically competing for that block space, and suddenly a really popular application could come up in which their users are less price sensitive towards gas and then drive up the price of your block space as well. And this just leads to a really bad UX. I remember the meme back in 2017 was like, how are we supposed to pay? You can't do your groceries with on ethereum because every time there's an ICO, there's going to be gas price. Doing a transaction cost $50. Back then it was ICOs. Maybe now it's like NFT drops. But there's always these one off events that cause random, unpredictable spikes in demand for block space.
00:13:05.814 - 00:14:30.190, Speaker B: When you have your own app chain where there's nothing else happening in that app chain, you don't have these unpredictable spikes that are out of your control of your application. And the other thing you can also do when it comes to block space gas kind of related things is do application related subsidies of computation, right? There are things that you might want to do in a blockchain, but because it's an application specific blockchain, there are public goods for that blockchain that are subsidized. So in example, this is what pre compiles in Ethereum effectively are. For example, doing a Shaw hash in Ethereum or verifying a signature in Ethereum that computation is actually subsidized relative to what it actually should be. But it's because it's like, okay, we need to provide this because it's necessary for most things to work on Ethereum as an app chain, you can make more pre compiles for different things. Let's say you are an AMM based blockchain, which Osmosis is, and it's like, oh, why don't we build a pre compiled we have to do this heavy AMM computation math to do stuff. Why are we not just subsidizing this? Because this is a core part of the protocol.
00:14:30.190 - 00:15:23.758, Speaker B: We can actually make it so we don't actually have to run this in a VM. We can run this as pre compiled code. There's all these sort of benefits you can do there that give you all these benefits on the block space level. So that's like the block space argument for app chains. There's also, in my opinion, just like the innovation side of app chains where when you're building an application on a generalized blockchain, you're often very constrained by the limitations of the platform that you're building on and you have very little ability to change them. Here's a new limitation of the EVM that I just encountered yesterday that frustrated me, which is, as an EOA account, I can't send ETH and WETH in the same transaction. These have to be two different transactions.
00:15:23.758 - 00:16:31.994, Speaker B: And that was like, this is mind boggling, right? And it's like, well, on an app chain, I can go change how my blockchain works to go allow myself. I want to be able to do that. I can go change the code to be able to do that. A place where being able to go change stuff at the protocol layer is very interesting, especially if you're doing new cryptography, right? I think it's interesting to note that not everyone, but almost every interesting project that's doing something interesting with privacy is building on Cosmos and building an app chain, right? Whether it's anoma Penumbra secret network, because you really do need this sort of low level control in order to really on the cryptography side of things to innovate. Just think about how many debates today our time is spent debating on which EIP is going to get implemented next in Ethereum. And it's like, okay, yeah, this one's going to be slated for two years from now. As an app chain, you don't have to participate in these debates because you can just be like, I'm going to go change my blockchain to do the things I need.
00:16:31.994 - 00:17:03.474, Speaker B: And that's sort of one of the big bets of Osmosis is your Uniswaps of the world are going to be constrained by the platforms they're built. On Osmosis, we don't control just the application. We control the application, we control the blockchain. And it just so happens that our team also builds the Kepler wallet, which is like the primary wallet for the Cosmos ecosystem. So we have this extremely full stack control that enables us to innovate. It's the apple thesis. Right.
00:17:03.474 - 00:17:22.470, Speaker B: Apple's whole take was like, okay, we're going to build the phones, we're going to build the software, the OS, we're going to build the most popular apps, and now they're even going to go build their own chip. Now they are building their own chips and hardware, but their bet is that they can build this highly vertically integrated stack that provides the best UX and performance to users.
00:17:22.550 - 00:17:51.538, Speaker C: I think that makes a lot of sense, and I think we can peel back whether this applies at the roll app layer or not. But what are some of the things you can have your validators actually do for you when you control the set? Which is kind of a lot is spoken about about the downsides of needing to bootstrap your own validator set. But I don't think a lot is really talked about in terms of what you can ask your validators to do if they are dedicated to just your application.
00:17:51.704 - 00:18:49.538, Speaker B: Yeah, so a cool thing that you can do is you have this set of nodes with stake behind them that are basically voting on every block. And this actually gives you an opportunity to ask them to add more data along with their votes. And so some of the things that we want to do is one of the things that we're really focused on is this thing called threshold decryption. It's an MEB resistance strategy, but part of what makes the threshold there have been proposals of like, oh, we can add threshold decryption using meta layers on top of ethereum. But the problem is you actually run into all these issues with how you deal with reorgs and stuff. You actually want your validator set of the consensus layer of your blockchain to also be your threshold decryption set. So that way, as blocks progress, decryptability of transactions is atomic.
00:18:49.538 - 00:20:03.758, Speaker B: With finality of blockchains, you can't decrypt a transaction unless it's finalized and added to the blockchain, and you can't finalize a block without having it be decryptable. And so having the same set be doing both of these things is really valuable. Another example of what you can ask them to do is almost every, not every single one, but I would say a vast majority of DeFi applications today do rely on some sort of oracle. And for so many of them, we've just come to rely on chainlink as our like, okay, this is our Oracle source. But really that's kind of actually pretty centralized. And more importantly, it's not atomic with block production, right? You have no guarantee that chainlink Oracle updates will actually enter the chain in a timely manner. Meanwhile, instead, if you had it so your Validators were the ones providing the Oracle updates, you actually have a strong guarantee now that Oracle updates are arriving in a timely order and you can depend on, you know, it's probably not the most popular topic, but this is actually something Terra did pretty well, right? During the entire crash process.
00:20:03.758 - 00:20:20.290, Speaker B: Their Oracle worked extremely well, almost too well. That was possible because of the fact that it was the Validators who were atomically providing the Oracle updates during the block production process.
00:20:20.440 - 00:21:00.494, Speaker C: Yeah, we don't like to talk about it too much anymore, but that really was kind of the first example of what we've seen there. I think dYdX and Say are another example where we'll see off chain order matching so you can run the order book actually on the Validators. And then I think we've also seen, especially with Osmosis, a lot of benefits to the UX between custom fee models, custom transaction ordering, that kind of also leaves to the value accrual side. So not just mev mitigation, but also potential value accrual. So I don't know if there's anything you want to add there.
00:21:00.612 - 00:21:32.502, Speaker B: Yeah, I can talk about those are good. Two points. Custom fees, I think that's a really important one. One of the biggest pain points I've always felt with almost every blockchain I've interacted with today is the way that it demands fees be paid in a specific token. I remember the first time I tried to show a friend how to use Ethereum many years ago. I made him open a wallet, I sent him some dai, and I'm like, cool, now try sending it back. And we realized, oh wait, he can't because he doesn't have any ETH.
00:21:32.502 - 00:22:18.358, Speaker B: This is fucking stupid. Frustrated with this. One thing that we were able to do in Osmosis is we're like, hey, we want people to be able to pay fees in any token they want. We have keywap prices from our decks because it's an app chain, so we can use those as a way of allowing people to pay fees in any token. And you can do other cool things with fees. You could be like, oh, imagine you have a specific NFT, you get some sort of fee discount, right? You can get really creative with the way that fees work in your blockchain. Or maybe you can be like, oh, if this is a trade transaction, we can allow the swap fee that someone is paying to also count towards how much their gas fees as well.
00:22:18.358 - 00:23:04.054, Speaker B: You can be very creative on this kind of stuff. The other thing is how transaction ordering works. So semi related to Oracle, maybe you want to be like, oh, I want all Oracle updates to go to the front of the block. Your execution layer doesn't have to follow the rules of what order transactions are included in a block, right? You can be smarter to actually scan through the transaction in the block, categorize them and be like, hey, I want to execute them in a different order. So as an example, as a Dex, right, we have liquidity ads, we have trades. We have people removing liquidity from the pool. Maybe what we want to do is say, hey, okay, first what we're going to do is look through all the transactional block, execute all the liquidity ads first.
00:23:04.054 - 00:23:49.106, Speaker B: Then we're going to go ahead and execute all the swaps. Maybe we batch them, and then we're going to execute all the removals of liquidity. This prevents anyone from doing rugging of liquidity from underneath a trade. It prevents a lot of the liquidity sandwiching that's happening because it's like, okay, all liquidity gets added at a fair time. You can actually allow your app layer to be smarter of. You don't have to just let the VM, the generalized blockchain choose the order of. I was at this retreat where we were talking about a bunch of mev stuff and what are mev mitigation strategies that uniswap could build based on ethereum.
00:23:49.106 - 00:23:58.120, Speaker B: And what we've realized after talking for hours was there's really not a lot they can do unless they have more control over the blockchain itself.
00:23:58.490 - 00:24:26.562, Speaker C: I think that makes a lot of sense. So, yeah, I think we've covered whether it's a couple of things. Under Scalability, we have increased better UX through things like custom fees and transaction reordering and really user protection and demetri. You also wrote about value accrual in a great piece on appchains a couple months ago. I'm not sure when it came out, but is there anything you want to speak to there on the value accrual side?
00:24:26.616 - 00:25:56.942, Speaker D: On that side, I think if you use the thought experiment of to say, we kind of see it with Osmo, I guess. But if there was a uni chain, do they need to turn on the fee switch? And I would argue maybe not if the transaction fees are paid in their native uni token, which also serves as a security model, because that's another implicit way to accrue value. It's not that you need an implicit fee switch. It's that the demand for the application in turn results in demand for the native token, because you need that to actually transact on that chain. So that's like a more crypto native business model. That a lot of depending on the developer, they need to think about another dynamic is that a app chain could effectively fork other protocols and monetize within their own ecosystem. I think we've seen some interesting analogies to kind of what Axie did with Ronan, where they have their own decks, they have their own marketplace, they're able to capture value from the usage of that.
00:25:56.942 - 00:27:01.090, Speaker D: And they have users because they provide an application with content that is able to amass a large user base of players. So a lot of these DeFi protocols is just code, right? Like you could take what you need, package that into a verticalized application, and as long as you're providing value to your end user, it's a way for you to keep that within your ecosystem. I think the last part we kind of alluded to med. I haven't spoken with the dYdX team. I don't know if they're doing this, but you could have. It's a round robin consensus. If you get every market maker to be a validator on the dYdX chain, that's their business model there too.
00:27:01.090 - 00:27:16.242, Speaker D: It's a round robin consensus for block inclusion. And so you have a way for market makers to pay for the cost that they have for validating the chain.
00:27:16.306 - 00:28:17.142, Speaker A: So just to kind of sum up where we are so far, because I want to get into eventually some of the arguments for why this might not make sense, right, or what are some of the detractions against sort of the outreach thesis. But Sonny, we kind of started with this high level observation that and this is a dynamic that exists in plenty of traditional markets outside of tech, value tends to accrue to the layer that's closest to the consumer, right. Whoever is closest to the consumer, be it an app in Web Two or like a financial advisor in finance or whatever it is, they tend to have a lot of leverage, right? And then they sort of exert that leverage down the chain. And that implicitly challenges some frameworks that I think a lot of people have in crypto, which again, kind of goes back to that Joel Mongro piece, fat protocols. So if you kind of start with that, then you talk about some of the dimitri, I thought you grouped these advantages into three really nice groups, which is sort of performance, which is this idea of app specific versus general block space, right? Like even like the other side landmint that shut down Ethereum, not in 2017, but last year. Right. So there are still huge challenges for performance in generalized blockchains.
00:28:17.142 - 00:28:38.702, Speaker A: There's also value capture, which Dimitri, you were just sort of talking to. Then there's customizability, which Sonny, you were getting into with basically the advantages of having validators that only are on your specific network. So these are all like huge benefits. Right, but walk me through what are some of the downsides necessarily of running an app specific blockchain as opposed to bootstrapping on Ethereum?
00:28:38.766 - 00:30:06.762, Speaker D: Yeah, I could talk to a couple. And the issues that are present today, I guess, just to preface, are not insurmountable. I think that there are ways to kind of go about solving some of these and it is also different within the ecosystems as well. I think the biggest one that comes to mind is, like, limited composability and making it more difficult to do atomicity across different chains, which is like, you want an all or nothing execution of a transaction. I think there are ways to get around that, but it does add some additional developer friction. There's also a UX friction if you require a user to bridge funds onto some other chain or some other roll up, I think that is something that we need to solve to make sure that it is as fluid as possible. And I think the Bridging experience today is not particularly accommodating to new users of chains.
00:30:06.762 - 00:31:08.420, Speaker D: It's a pretty scary thing for people to do. Another is the thought experiment. If every application today on Ethereum were to create their own app chain, and they said, you know what? I only want permissioned, write access. I want to control who gets to do stuff on my app chain. How is that different than the world where we came from, where it's permissioned now? And now we're just, like, recreating that set of permissioning for the goal of value capture and I guess scalability and all of that other good stuff. And that's like an ecosystem wide question. I don't quite know the answer to how you balance that.
00:31:08.420 - 00:32:32.846, Speaker D: Maybe there's a case that it might make sense for certain flavors of companies, maybe more like enterprise companies want their more strict permissions on write access. And maybe there's benefits to actually opening it up for other projects. So that's a couple I think, like, the liquidity fragmentation part is also an issue. If you have ten different AMMS on ten different Cosmos chains or Ethereum roll ups, how does that affect the, I guess, like, performance or capital efficiency of the system as a whole? And how do you solve for cross chain, cross roll up liquidity pools in a way where you're preserving that experience for end users? There's a bunch of things there. I guess I'll stop to see if Sunny has any other things to add.
00:32:32.948 - 00:33:24.800, Speaker B: Yeah, I think that was a really good rundown. I can talk about some of what I see as biggest current issues with app chains and then a little bit of what we are doing to help solve those issues. So one of the first obvious ones that I think we actually ran into was, for a long time, the Cosmos SDK was very almost anti VM, right? We were like, oh, everything will be done in the Cosmos SDK and native go code, and all your app logic is there. And then we realized that there's actually things that people do want to customize, right? Like, every time someone wants to create a new type of multi SIG or something like that. Right. There's an argument that app chains aren't extensible enough. Right.
00:33:24.800 - 00:33:45.794, Speaker B: Maybe other people want to build integrations into your application. Right. Osmosis is a Dex. People wanted to build extensions on top of the Dex. Right. People wanted to. Build a dollar cost averaging system or people wanted to build like a market making vault or something like that.
00:33:45.794 - 00:35:10.240, Speaker B: How do you let people build extensions onto your system? And the solution that we kind of came, well, first step one was like, okay, well, let's add a VM, right? So there's a VM called Cosmosm exists on the Oslosis chain, but it's like, okay, then did we just become a generalized smart contracting chain at that point? Right? So I think what the balance that we figured out was actually Osmosis does something a little bit unique in blockchains, where we have a smart contracting system, but the uploading of new contracts has to be permissioned by governance. So you have to make a governance proposal to add contracts. So it's like what this does is it kind of keeps it like an app chain where it's like, okay, we're only going to allow things that extend the functionality of our core feature set, which is the Dex. We're not going to approve a competing Dex to be deployed on the same blockchain, for sure, but someone wants to go deploy a game or something, it's like, Osmosis isn't the right place to do that. Go build another app chain for that or go deploy somewhere else, right. We want to focus our thing on keep our block space for the things that improve the Dex experience. So by having that sort of permission system that's like one way, we've sort of solved that extensibility sort of issue.
00:35:10.240 - 00:36:41.778, Speaker B: Another one is composability. So Ramitri mentioned, okay, this lack of atomic composability between things. And one thing I push back on is this notion that composability is means atomicity or synchronicity. Yeah, if you look at the web, the web is relatively pretty composable, right? Like, you can have APIs that talk to each other, but all of the web is built off of Asynchronous programming, right? The entire web is not running on a synchronous server, right? It's like the entire web is based off of people making Asynchronous calls into other services and having callbacks and stuff. And yes, it's more annoying, but it is what is necessary in order to build any sort of scalable system. And the composability thing isn't really, even, in my opinion, an argument, an app chain specific thing, right? Even if you had many roll ups or something that were generalized blockchain, you still need to deal with Asynchronous composability, right? If you have a contract on optimism that's trying to call a contract on Arbitrum, you still need to build in the same asynchronous composability, like building blocks. And so I would just say that I think the Cosmos ecosystem, the IBC stack, is probably the furthest along when it comes to building any of these asynchronous first building blocks.
00:36:41.778 - 00:37:17.542, Speaker B: So that's another one. Another big kind of issue that we run into is like standardization. It's almost ironic, know, like I said, our team actually builds one of the most popular wallets for the cosmos ecosystem. And sort of part of this whole pitch of app change is like, hey, you can come customize everything you want. You want to go change how your staking module works, go for it. If you want to go change how governance works on your chain, go for it. You want to change how transfers or cryptography works on your chain, go for it.
00:37:17.542 - 00:38:28.878, Speaker B: But then being the wallet developers, we're like, guys, please don't change too much because it sucks every time we need to go make a custom integration and like, oh, you change the cryptography, okay, we got to go build a custom integration for that. You change how the staking module works. Okay, well, our staking dashboard doesn't work for that anymore. This tooling based issue is actually sort of one of the biggest challenges that I'm not actually sure I have a great answer for today and is actually one of the biggest, almost not threats, but big open questions on how we deal with app chains going forward. Right? You don't want a world where every time someone builds a new app chain that is too different than everyone else, oh, does that mean they have to now go build their own wallet? Or does that mean that your favorite staking dashboard doesn't work with it or something like that? So how do you balance these things? I think that's a big thing that does sort of need to be figured out, I would say. Yeah, I think those are some of the big ones. I have a couple of others as well.
00:38:28.878 - 00:39:01.274, Speaker B: Security scope creep I think is a big issue as well. Even Osmosis, it started off as this dex, but now we have this lending protocol building on top of it. We also have a couple of other at what point do we actually start to overevolve and let scope creep turn us away from being an app chain at that point? What do we even mean by app chain when we have this sort of little ecosystem of other projects building on top? So I think that's another thing that.
00:39:01.392 - 00:39:57.142, Speaker D: Just to follow up on a couple of those points. Atomicity. Atomic composability. One area where it's probably particularly useful is in the DeFi sense around market efficiency, around flash loans. That's probably a special thing where it particularly benefits in the roll up space. I think you might be able to pull this off if you have a shared sequencer set across different roll ups. I haven't seen that done in practice, and we don't have an example of a decentralized sequencer yet, but I can imagine if there's a roll up that has an AMM and another roll up that has a money market and both are the same sequencers, then they might be able to actually do those transactions.
00:39:57.142 - 00:41:26.102, Speaker D: Atomically. I think the idea around tooling is super important because also for an app chain needs a couple of components that will let it function out of the box, which could include like a Block Explorer, an RPC provider, an indexer, an Oracle Tier Point, Sunny. You could internalize some of these things and bake it in if you have something that's as customizable as the Cosmos SDK. But if you were to maybe fork optimism and just launch a roll up, you probably need to find ways to add those additional components for your users and developers. So that's like an additional lift around overall developer lift that you need to think about. And I guess the final interesting observation is that with customizability it probably depends on the persona of the developer of how much customizability do they want or need. I kind of get this feeling that for many developers it could be overkill to customize everything.
00:41:26.102 - 00:41:59.310, Speaker D: Maybe it's just a game that wants their game as the native gas token. And they probably don't know about mev. They don't really care about transaction ordering. That's all they want to make number go up for them. Maybe they just want a simple out of the box solution. And I think that is probably a UX challenge that needs to be solved for this more mainstream developer.
00:41:59.470 - 00:42:53.134, Speaker C: I think that makes a lot of sense. We've heard about the bootstrapping costs. There was one thing I wanted to kind of double click in here, and that was on the permissioning side, because I think a lot of what we've talked about is when you don't have control over your block space, when you can't curate your block space and you become very successful and you attract a lot of users, you're going to have a lot of random stuff that just starts popping up on your chain. Right? Whether it's an NFT project on a would be DeFi app chain or a game on a DeFi app chain that takes up all the block know, this can kind of defeat the purpose in some ways of an app chain. And so do you think that permissioning, governance based permissioning is actually a prerequisite to call it an app chain under the definition of an app chain?
00:42:53.262 - 00:44:16.170, Speaker B: I think it's important to sort of protect the app chain is especially to protect the block space, especially the other things. Maybe it doesn't matter so much. It's almost like part of the other reason that the permissioning is important. Not only is it protect the block space, it's also it protects your innovation rate as well. Because in my opinion, I think part of the reason Ethereum development kind of goes so slow is it has to deal with the interests of the 10,000 applications built on top. We've had situations in the past where Ethereum has broken people's smart contracts, right? I remember back in one of the hard, like a bunch of the Aragon contracts broke because there was a change in how gas pricing worked. Vitaliki had a talk at Etc this year where he was almost you know, prepare to have things break for your developer, your contracts break, which is kind of weird because on one hand, we're pushing for Immutable contracts, but it's like, okay, on the other hand, we have to be prepared for these contracts to break, potentially.
00:44:16.170 - 00:44:38.638, Speaker B: And so with Osmosis, before we added Cosmosm, the only people we had to talk to, at least on a builder on the chain side, builders, is like, ourselves, right? It's like, okay, we have to go talk to some integrators.
00:44:38.654 - 00:44:39.506, Speaker A: We have to go talk to block.
00:44:39.538 - 00:45:32.946, Speaker B: Explorers and stuff like that. But on the actual chain development side, we only have to talk to ourselves today if we have to go change something in how something works on Osmosis, right? Let's say threshold decryption comes alive, but the way that people generate transactions has to change. Today. We only have to go talk to about 20, maybe maximum 20 projects, right? Because there's only 20 other builders building on top of the Osmosis chain. And that is a feasible thing for us to do, as opposed to Ethereum, where there's no way for them to they basically can't innovate because they can't break anyone built on top. And so I think that's one of the big benefits of the permissioning is that we protect our liabilities here to external developers.
00:45:33.058 - 00:46:49.886, Speaker D: That's interesting. I'm trying to find another argument here. I guess if you look at it from a free markets perspective, I wonder if you could bake in incentive mechanisms and actually the design of the app chain to just make it either more or less attractive for other contracts to deploy. If you have if you adjust the Opcodes to, like, if you change the pricing in the Opcodes to make it, like, very cheap to swap and, like, very expensive to do other things, then you've kind of set up your chain to be to work better with applications that have to do with that core mechanism. And then you could kind of say, okay, we're permissionless deploy if you want here, but it's going to be really bad for your users because it's going to cost a lot to do the thing that you want to do. So I wonder if you could get these benefits by baking your opinions into the actual design of the block space.
00:46:49.988 - 00:48:04.790, Speaker B: Yeah. So this, I imagine, will happen actually, eventually. What we want Osmosis to do is batch all trades, right? Like, all trades that happen in a block should be batched together and get equal pricing, which works easily in a world where all trades are executed by users, but in a world where some trades are executed by contracts, things actually get a little bit more complicated and messy, right? Because what happens when a trade so what we actually end up having to do is thinking about how do we architect a block is what we actually have to do is take every transaction that it's hit by a contract. We first run the contract. So one thing that's worth noting is the way Cosmosm is designed is it's actually designed to be asynchronous non atomic by default because it was really designed as a cross chain contracting system. So it's, you know, you want to be able to have one Cosmosm contract call a Cosmosm contract on a different chain almost as easily as it calls a contract on the same chain. But so what will happen when Osmosis implements the batching system is we actually run the first part of our contract.
00:48:04.790 - 00:48:49.238, Speaker B: If it executes a swap, we basically hold that swap run everyone else's contracts. Then we take all the dispatch swaps, execute them at the same time and then we go and run the completion of everyone else's transactions. This is such a different paradigm to normal smart contracting today where you expect your transaction to run beginning to end before going to the next person's transaction. But it's like, no, we're designing the way the block space works to be optimized for what the needs of the decks is. And it's the responsibility of the things built on top to sort of adapt to that.
00:48:49.324 - 00:49:52.982, Speaker A: I want to get a sense from the two of you again, almost like maybe zooming out and looking a little bit towards the future. One topic that we wanted to get your guys opinion on is this idea that with caveatting the understanding that there are other communities outside of Cosmos that are necessarily just pushing for app chains. Right, as an idea. But we're going to focus largely on Cosmos. And then there are other layer ones outside of Ethereum that are kind of providing like broad based security and data availability and all that kind of stuff. But just using those as the two sort of canonical starting points for a similar problem, which is how do we scale and get billions of people using applications and then have them secured and write the appropriate architecture underneath? How do you guys kind of see just to use these two ecosystems as an example, like Cosmos and Ethereum kind of coming together, right? There's a whole bunch of different spectrums of how this might play out. But how do you see these two communities sort of evolving and interacting with each other over the next sort of coming years?
00:49:53.116 - 00:50:58.830, Speaker D: I think from my perspective, it's like an order of operations. I think there's almost like a question that is based on the maturity of the app. I think an interesting observation that I've seen for DFI protocols and some others is that on Ethereum they are launching on L two S first. I think that's an interesting reverse of the operations because usually an application would launch on Ethel One first, super expensive, but maybe they need the security and that's where the users are. So they would launch their application there, gather some feedback and then say, hey, these fees are too high. Or we could do more things with their application. If gas fees are lower, maybe it's cheaper for the Oracle updates.
00:50:58.830 - 00:52:46.722, Speaker D: So then they move to a L Two, and then if they are successful, then they start to say, okay, we have more users, we need more scalability, maybe we need more customizability, then what do we do? And in my view, that's where the decision tends to be very relevant around the crossover, where they might say, hey, do I launch my own dedicated L Two? Do I just fork optimism? Do I launch assuming this is built out as a L Three on ZK, Sync or StarkNet, or is that not sufficient? And for a lot of the reasons that Sunny mentioned, do I need my own full stack Cosmos chain? And there are other options too, like do I launch my own avalanche subnet? Do I go on my own polkadot parachute? I think that decision for teams becomes more relevant the larger they get. And I think we've seen that with Axie, with Ronin and dYdX. I think as you get more scale, it's probably more controversial. But my view of chains for successful Cosmos app chains might be more mature, Ethereum based applications that need more customizability dedicated block space, things like that.
00:52:46.776 - 00:53:38.546, Speaker A: That's kind of an interesting framing because at the risk of being overly reductive, you could almost view Ethereum as like a launch pad for DApps. And then once you get a DAP with critical mass or whatever it is, and it decides, okay, we haven't really talked about this dynamic of Ethereum being distribution and where the users are as a reason for it being attractive. Right. But maybe DAPs kind of start there and then when they get to some point when either the pain of not being able to customize the way users interface with your app, or maybe you just want the economics and you want to vertically integrate, but whatever that sort of threshold is, you pass it. And the most successful in that paradigm, it sounds like some of the most successful DApps actually end up moving off Ethereum. That actually sounds a little bit it could be bearish, right? You don't hear people often say something like that, but I don't know if that was the right way to take how you just said that.
00:53:38.568 - 00:55:34.066, Speaker D: Dimitri yeah, I'm not sure if it's bearish in the sense that they will still have options on a lot of other factors. Like, for example, security. What are your security guarantees for your own settlement layer versus using Ethel One as a layer? That's a very important question for potentially like D Five protocols and how much are you willing to pay for that security? And even if you do subsidize that with token rewards, is that a sufficient security level that you're getting from Ethereum block space as being like a settlement layer? So I think it's still very application specific. It might be harder to make that case for a DeFi protocol that has billions in TVL maybe. But I think your point around distribution is an important one, because if you're going to a separate island, you want to make sure you're able to carry all these users, that you're providing a valuable enough thing for them to move, to buy that ticket to go to go on the island. I think that's why it's a harder case for a lot of applications, because in general, I don't think we have that much critical mass for a lot of users today that actually transact. We're probably in the hundreds of thousands, maybe for DeFi protocols, maybe more for play to earn games with a certain example of Axie.
00:55:34.066 - 00:56:11.918, Speaker D: But I think we have a long way to go for there to be enough users with any application for them to make the case that, hey, I want to move to my own dedicated app chain off of Ethereum. I think that it's going to be a more and more relevant question over time, but I don't think it's as clear cut as saying, oh, I'm big enough now. Time for me to pack my bags and go to a different ecosystem. There's a lot under the hood behind that decision.
00:56:12.014 - 00:57:07.734, Speaker B: To the original question of, I would say that the Ethereum ecosystem versus Cosmos ecosystem is almost like an independent thing of app chains versus generalized. I think it's almost actually like a quadrant, because within Cosmos, you have both app chains and you have generalized blockchains, right? You have app chains. You have Osmosis, you have Stargaze, you have Akash, you have all these app chains, but you also have generalized blockchains like Juno and Terra 2.0 and Archway and Evmos, right? Some of them are EVM based, or there's actually multiple EVM based ones right? There's Kava. There's Kanto. So we have this within the Cosmos ecosystem and then within the Ethereum ecosystem, you also have let's talk about roll ups, right? You have both generalized roll ups. You have optimism and arbitram and all this stuff.
00:57:07.734 - 00:57:42.960, Speaker B: Then you also have application specific roll ups. You have dYdX and you have loop ring and Ronin, I would consider application specific. Kind of a lot of Starquare stuff is really targeted at building very app chain focused roll up. So I think this is almost like a quadrant. So I think we've talked a lot about the app chain versus generalized stuff. So on the Ethereum versus Cosmos, if you have to put I think there's two sort of main differences here. I would say that we're kind of actually heading towards the same direction right now.
00:57:42.960 - 00:58:09.718, Speaker B: I think the Cosmos ecosystem had to pull Ethereum in the right direction a little bit. I think today you have to keep in mind today, oh, the world is multi chained. This seems so obvious. Five years ago when we started working on Cosmos, it wasn't this was like a radical thing and no one believed us. And now everyone's like, oh, yeah, you guys are right. And I think the same thing is going to happen with app change. People still believe in these.
00:58:09.718 - 00:58:48.200, Speaker B: Everyone's like, oh, generalized roll ups, multi chain. But it's like, no, okay, you guys are wrong about that. So I think they're going in the same direction. I think one of the big changes between the focus of Cosmos versus of Ethereum is Cosmos. We kind of took a lower emphasis on the security relationships between these chains and decided to focus our efforts on the application layer composability between these chains. We said that, you know what? We can bootstrap using sovereign security. Every chain can have its own validator set.
00:58:48.200 - 00:59:22.800, Speaker B: That problem does need to be solved at some point. How do we scale security? But we can solve that. We have time before we run into the bottlenecks there. Let's focus on how do we build really good cross chain composability. How do you have a contract on one chain? Call a contract on another chain. How do you have a Dex on one chain? Or how do you have a lending protocol on one chain? Do liquidations on a Dex on a different chain? Right. These are things that, in my opinion, the Ethereum Ecosystem just has not been thinking about at all.
00:59:22.800 - 01:00:07.658, Speaker B: Meanwhile, what the Ethereum Ecosystem has been thinking spending most of their mental energy on is on that security relationship side. Right. They're the farthest ahead on when it comes on developing validity proofs and fraud proofs and roll up architectures and stuff. And I think both sides are starting to work on each other's expertise point. I haven't seen too much of it yet, but I'm hoping people are starting to think a little bit more about composability on the Ethereum EVM to EVM world. I know in the Cosmos world, we're definitely starting to think about security. How do we scale security? Whether it's going through things like Celestia for data availability, shared security systems.
01:00:07.658 - 01:00:56.122, Speaker B: We propose this idea of mesh security. So I know in Cosmos we definitely are starting to think a lot more about it. And I guess the thing is, one of our exploration points is that unlike Ethereum, where there's like, one chain to rule them all, one token at the center of its security system, which is like ETH Cosmos, there's no one token at the center of it. Right. This whole mesh security paradigm is really focused around this idea of like, oh, we have all of these many Cosmos chains. How can they sort of pool their security together? I call it the Empire model versus the NATO model, right? An empire has a single military, and it provides security for all of its colonies. While in NATO, you have a bunch of sovereign countries.
01:00:56.122 - 01:01:28.694, Speaker B: They all have their own militaries, but they form alliances where they have pool their economic strength together to provide a larger security umbrella. So I think that's sort of like the main difference, I would say, between the Ethereum model of the world and how security works and how the Cosmos model of the world works. Yeah, I can also talk about the user onboarding stuff, but maybe you guys chat about that what I said first so far.
01:01:28.732 - 01:02:28.540, Speaker C: Yeah. No, I think that a big part of this thesis for this season is really that Cosmos and Ethereum are on somewhat of a collision course in that sense, but coming from very different starting points. Right. Cosmos really taking an interoperability at the application layer first approach. And we can start to see the power of things like interchange accounts that's more or less recreating the level of composability that you would see between apps built on the same chain. And then on the Cosmos side, we're also starting to see the introduction of things like mesh security and the consumer chains that are renting security from the Cosmos hub, I would say. Do you see for this future to play out on the Ethereum side, there need to be some equivalent of IBC? Or is it more going to be I think, Dimitri, you referenced shared sequencers between apps that commonly interact with each other.
01:02:28.540 - 01:02:58.434, Speaker C: Do you see know everybody sharing one standard like you do on the Cosmos side? Or do you think it's going to be more kind of bottoms up sector specific sequencer sets that help just particular types of apps interop? But perhaps a gaming roll app on Starkware would never be able to talk to this sort of DeFi sector of roll apps.
01:02:58.482 - 01:03:36.002, Speaker D: It's a good question. I think the pace of the Ethereum development makes me think it'll be more bottoms up solutions. I think there's ways you could get close with interop. I think the shared sequencer set is one way to do it. I think using L two S as a sediment layer for L three S are pretty interesting. With the use of recursive validity proofs. There's also ways you could but that.
01:03:36.056 - 01:03:41.170, Speaker B: Solves the security problem. That still doesn't saying that we can use L two S as a settlement layer.
01:03:42.870 - 01:04:43.266, Speaker D: So one way you could do that so if you have different L three S posted data that's needed for the proof onto shared DA layer, then you could have the L two use the data from that DA layer to effectively do the Bridging. So, like, one example is like how Slush? There's a project called Slush. They're trying to implement this on StarkNet. So you could effectively use a shared DA to do the Bridging across different L three S provided. Yeah, like you have the data, you could also post if it's like an optimistic roll up, you could post the actual data that's needed for a fraud proof onto shared DA. You could also do that with an L one. That's how implicitly Bridging is done between, say, two different ZK roll ups.
01:04:43.266 - 01:05:19.966, Speaker D: It's using the L one as that DA layer. I think we haven't really seen implementations of this, but I think that there are ways you could get to sufficiently strong levels of composability with the exception probably being for atomic composability. You might need that shared sequencer set or like some overlap potentially between if you have a decentralized sequencer set across different roles.
01:05:20.078 - 01:05:58.282, Speaker C: Do you see actual interoperability providers playing a role have maybe they all share a common standard, but I think Sonny might be familiar with Polymer who's trying to kind of introduce IBC to the EVM side. Do you think that reliance on a provider project like that is something that's scalable in the long term or is it mainly going to be based off of the security of the actual roll up itself? Kind of like IBC where you inherit the security of the chain really for the bridge?
01:05:58.346 - 01:07:40.762, Speaker D: Yeah, I think it might depend on if we're talking about intra or inter. And I think what we've seen recently with avalanche shipping their own messaging system, I think chains probably realize this is like a very risky thing and maybe it's better for users like Polkadot did this with, what was it called? Xcmp, like years ago. Maybe it's this realization like, hey, if we're within our universe, maybe we should do it ourselves. It doesn't solve the issue of cross domain. Once you're hopping between different ecosystems, I think that's probably where you'll still need some kind of third party. In the very happy case, you find a way to do scalable light client bridges where you're validating consensus on every chain that you're bridging to and from, but that's not very scalable and you have some ideas around snarking the consensus and validating a proof on the destination chain instead of the actual light client. The issue there is extensibility, like how fast can you build this for all the different permutations? So it's a really tough problem to solve, but I think there will still be a role, I think 100% for third party bridge providers as it relates to cross domain interop.
01:07:40.762 - 01:07:54.658, Speaker D: And then Jury is still out how individual ecosystems, which could include al two, like how ZK sync or how StarkNet wants to think about interop or how optimism bedrock is thinking about it.
01:07:54.744 - 01:08:33.022, Speaker A: So guys, you've both been super generous with your time here and I think as we start to wind down, we've covered a lot of ground I think kind of talking about this idea of like Fat or I know Sonny, you like to refer to them as tall apps specifically and where value might accrue. Talked about some of the pros and cons of app chains as opposed to other sorts of architectures and this sort of collision course idea between Ethereum and Cosmos. Just if either you guys have sort of ending thoughts or something that you want the audience to walk away with when it comes to app chains. Could be thoughts about where they're headed in the future or. Even next twelve months. Just anything that you want to sort of bookend the conversation with.
01:08:33.076 - 01:09:24.640, Speaker B: I just want to add one last point about the user thing that we were discussing a little bit ago as well about you deploy on Ethereum or on the Ethereum ecosystem, whether that's L Two s because that's where the users are. Like I said at the beginning, I actually don't think people are users of Ethereum. I think they're users of applications, but also, more importantly, they're users of MetaMask. I think the lock in isn't actually Ethereum. The lock in is MetaMask. And today what makes an Ethereum L Two like polygon easier to use than Cosmos, like Osmosis is that you don't have to download a new wallet, right? Because you already have MetaMask installed and the process of switching things on the wallet is actually becoming easier and easier. Right.
01:09:24.640 - 01:10:03.402, Speaker B: I think that this is something that we're starting to realize in Cosmos. We probably should build better integration support with existing Ethereum tooling that people are comfortable with if we want to make the switching costs lower. So, for example, with Osmosis we are like Injective does this. For example, injective is a Cosmos space Dex. They don't actually use Kepler as their primary wallet. They actually use MetaMask as their primary wallet. And same thing with know one thing we're working on Osmosis is making it so that you're bridging assets from Ethereum.
01:10:03.402 - 01:10:05.866, Speaker B: You can just start using it with your MetaMask.
01:10:05.898 - 01:10:06.286, Speaker D: Right.
01:10:06.388 - 01:10:43.290, Speaker B: It should feel like any other polygon or any other Ethereum EVM chain right. Even though it's not an EVM under the hood. So that's like one big thing that we're doing. But at the same time, we do need to balance this with there's a reason we build our own wallet called Kepler because we have views on how crypto custody is supposed to work and stuff. That the same reason that we have our app chain that we want to be able to innovate at the application layer, at the blockchain layer. We also have our own wallet because we want to be able to innovate at the wallet layer. So it's a little bit of both.
01:10:43.290 - 01:11:06.866, Speaker B: How do we get people to onboard with MetaMask and be like, okay, cool, now you're using Osmosis. By the way, if you want to use all the coolest features of Osmosis you should switch over to using this other wallet instead. But yeah, so I think that fixing that onboarding flow with the wallet will be a big part of bringing people from Ethereum into Cosmos and any app chain. Really.
01:11:06.968 - 01:12:13.606, Speaker D: Yeah. I think on my side, I don't think there's a right answer. I think we've been researching for that and I think the boring answer is like oh, there's no one right answer. It's not for every developer. And I think there's a lot of trade offs from a developer perspective that they need to think about around what's your security source how do you want to deal with permissioning? Do you need finality? What do you want to do with your gas token? How much composability do you need? Do you need EVM support? And I think these are all questions that different applications and different developers might answer in a different way. So I think this is all along a spectrum, and I think there's a multi year playout in the market structure that we're going to see. So I don't think we have the answers now.
01:12:13.606 - 01:13:06.050, Speaker D: I think there's interesting projects coming out that are providing SDKs for developers to launch their own app chains, which could be ZK Roll ups using Celestia as DA. Sovereign Roll ups, sovereign Optimistic Roll Ups that use Celestia as a DA, ethereum Roll Ups that use Eigen layer as a DA. So I think we're going to see a lot of these solutions come out, and I think we're going to start to get some of the answers just through observing what developers will do. So I think it'll be interesting to revisit this in, say, like twelve to 18 months and actually see what we got right or wrong about the market structure.
01:13:06.130 - 01:13:21.146, Speaker A: Guys, this has been fascinating. You've given us and our audience lot to think about. So thank you both for helping Miles and I kick off season one. And if folks want to find out more about you or follow the work that you're doing, or what's the best way to sort of get more information on the two of you?
01:13:21.168 - 01:13:24.670, Speaker D: D Barons on Twitter. D-B-E-R-E-N-Z-O-N.
01:13:24.740 - 01:13:32.138, Speaker B: Sunny. A 97 on Twitter. And you can follow Osmosis at osmosis zod.
01:13:32.234 - 01:13:44.962, Speaker A: Awesome, guys. All right, thanks so much. We'll have to check back in 18 months, see how much if we sounded smart or way overly optimistic, but I have feeling optimistic myself. All right, partner, episode one of the books. What do we think?
01:13:45.016 - 01:14:31.234, Speaker C: Thought that was great. I think Sonny did a great job in the beginning of just running through the most compelling reasons to build an application on an app chain or as an app chain. I think as we'll dig into later, we'll see how many of these benefits still apply when you start to make that tall app less tall. Maybe it's an app specific roll up and that only allows you to do 75, 90% of these things. Maybe it's less. I think that's still pretty unexplored and also depends a lot on developments to interoperability and basically the things that kind of mitigate the con side that Dimitri dug into and covered really well, I agree with.
01:14:31.432 - 01:15:31.038, Speaker A: Like I really liked his sort of know even before getting into what is an app chain? Having to make the case that applications matter, which is such a funny caveat to have to include. But I thought his observation was completely right that Joel Mongro wrote this post Fat Protocols, Fat Protocol thesis a long time ago at a time when crypto was way less developed than it is today. And I think a lot of the industry implicitly believes that basically, and that's why you have these large and really engaged communities around bitcoin and ethereum and some of the layer ones to the industry's credit as well. If you were, like, trying to analyze returns, the l ones have been by far the best performing asset class or sector within crypto. Even like on Ethereum, the apps denominated in ETH is like down only, right? They basically launch and then it's down.
01:15:31.224 - 01:16:22.262, Speaker C: Exactly. But yeah, framing it in terms of, okay, actually these aren't Ethereum users, these are uniswap users, these are OpenSea users, these are MetaMask users. Right. That's the value of Ethereum, right, is based off of the amount of activity and the applications on top really determine how much activity there will be. Right. And so as these apps get more users and more traction and more leverage, frankly, to take their users where they want to go because the apps are the stickiest layer, it will be very interesting to see how many migrate to Cosmos to get more of these benefits that Sunny is talking about versus how many of them migrate to their own app specific roll up. Or maybe sector specific roll up, but really reframing the conversation back to the applications and back to where the users are.
01:16:22.262 - 01:16:25.446, Speaker C: I think that's kind of the whole point of this season, right?
01:16:25.548 - 01:17:09.838, Speaker A: I would even call it like it's a reorientation in a lot of people's minds, right, which is like, maybe you were starting from this point that you didn't even realize which was, oh, these are the Rails and value is going to accrue here and then there'll be some interesting apps. So ultimately people use apps. And you're right. That phrase that Sonny used right at the end there, I love the way he framed that because it's actually how I felt as being a user in DeFi. And for those of you who are listening, miles has been in some ways my sort of guru shaman. Sherpa on my own on chain journey and you've helped me a lot. But I've had the feeling when I'm using these apps, this is not the end state here, right? Like me messing around on Ethereum main chain is not what we're building towards here.
01:17:09.838 - 01:17:26.026, Speaker A: I'm not the natural user of this. Right. So I totally agree. You want to use an application, be it a game or an NFT or something that doesn't even necessarily exist yet, but the way people operate and view themselves as an ETH user and you're doing all this stuff, that's not going to be the end.
01:17:26.128 - 01:18:20.490, Speaker C: Yeah. And I think today still there are far more users of centralized crypto services than there are of decentralized crypto services. And I think Osmosis's stated mission is to build the binance on chain, right? And in order to recreate that user experience, the know that is the reason why they're building as an app chain. They think that it is also user privacy, all these little things, right? And so I think that reorientation is really helpful in understanding why anybody is building as app chains when ostensibly they kind of live on an island and make people jump through a bunch of hoops at the moment just to onboard. But the best version of them probably is the closest thing we can get to these centralized products. But you don't have to deal with all the trust of centralized products.
01:18:20.560 - 01:18:51.910, Speaker A: And one word that we didn't really use during that interview, but you and I sort of use in a somewhat joking way, but it's kind of this idea of like product maximalism, right? There's been no shortage of maximalism in crypto, but usually that centers around like an l one ecosystem, like Bitcoin or ETH or something like that. Whereas this kind of and cosmos, I think, even though they don't really call it this, they sort of pioneered this idea, right, which is like a relentless focus on the product and the user experience. And I think that's going to be a theme that's going to run through hopefully all of these.
01:18:52.060 - 01:19:09.350, Speaker C: Yeah, exactly. I mean, that's where you and I are coming from. We don't have any ideological bias about which chain it should be built on. We frankly don't care. We just care that there are products that people actually want to use and that's what's going to drive the mass adoption of decentralized applications.
01:19:09.430 - 01:19:46.694, Speaker A: If you start from that high point of product maximalization, ultimately we want apps that hundreds of millions, eventually billions of people use. Then underneath that there's a whole bunch of things that need to happen. You could call it kind of the architecture of like an app chain underneath or you can call it the security model. But ultimately if an app is very focused on kind of the execution environment at the top, then there's like data availability, there's consensus, there's a whole bunch of stuff that needs to happen underneath. And that was sort of where we were getting into the ethereum approach or starting point versus the cosmos starting point 100%.
01:19:46.732 - 01:20:36.722, Speaker C: And that's really where the spectrum alto that Dimitri was talking about plays out, right, because at the end of the day, I do agree with this definition of an app chain is just an application that has dedicated block space and it can curate that block space and optimize it for its own application. And I think there's going to be a lot of different flavors of these app specific environments. And that's peeling back kind of the current trade offs to each specific flavor of it is something we can dig into this season and also thinking about, okay, in one or two years, based off of what's being developed to kind of mitigate some of the trade offs of that, what could this look like? Right? And so think I think we'll further explore that as we go on the season.
01:20:36.786 - 01:21:31.630, Speaker A: One thing that was sort of stuck out to me was this idea that capture happens not at the ethereum level, but at the MetaMask, at the wallet level. Jason's been really digging into this idea of like the wallet, the wallet wars. And actually it's funny because I can remember when I was first getting involved in crypto, it was the rollover of the 2017 bubble, so everything was going to be useless. But the two things that people were very bullish on was custody and wallets, which is kind of the same thing, right. But one of those ended up playing out big in BitCo and Anchorage and you sort of saw the rise of these institutional custodians, but the retail wallet never really took off, maybe because bear markets are not a period of time when a lot of new retail users sort of come in. But it always kind of amazed me that, yeah, the wallet level is so critically important and doesn't get a whole lot of airtime.
01:21:31.810 - 01:22:23.218, Speaker C: No. And something we haven't really talked about because we've been talking about vertical integration going down from the application level, but we'll see with Uniswap and to some extent with Osmosis already, applications that also want to own the wallet. And how does know, I guess, having a better ownership of the customer by owning the wallet and the touch points, how does that play out against the friction of making the user create a new wallet? You basically have to own those customers to begin with, right. Or else you're adding another layer of friction that just might be too much. And so we haven't really talked about vertical integration going upwards, but that's something to definitely explore as we chat about it with more folks on the season.
01:22:23.314 - 01:22:59.278, Speaker A: When it comes to vertical integration as well, there's like two sort of big benefits to keep in mind that we kind of like touched on both, but just highlight it for people who are listening. There's the economic reason why you'd want to vertically integrate. You want to be able to extract more fees, basically, from every layer in the stack. But then there's also and it seems like this is more important to Sunny, which is you want to be able to control every part of the user experience from the wallet to the exchange, et cetera. The downside of that, right, is that it's more surface area for governance. I know that you've made yeah, exactly.
01:22:59.464 - 01:23:47.622, Speaker C: We didn't really get into that as much today, but I think we did get into the permissioning side. Right, which is great because you can curate your own block space and it's still decentralized because it's through governance. But to Sonny's point, what happens when governance decides that they no longer just want to be an app chain anymore? Right. And you start to get into some challenges around scope creep. And I thought Dimitri brought up some really interesting examples of how you might be able to abstract that away from governance or ossify this sort of curation into the protocols dynamics by treating fees differently for different sort of chains. So I thought that was another very interesting piece because the scalability of governance is definitely a big question here.
01:23:47.676 - 01:24:33.730, Speaker A: Sonny at one point drew his quadrant, right? Like his quadrant example, which I think and know something is kind of clicking know, we recorded this, had a talk with Dimitri and he was describing how he thought it was inappropriate to basically call it app space. And I think a big away that I'm now kind of thinking about this is there's like generalized blockchain space and app specific space. And that's actually a more because there's so many words now, dude. There's like roll ups and roll ups and l two S and L three S. And honestly, maybe the most appropriate delineation is just like how far away you are from the settlement layer and then whether or not it's specific dedicated to one specific app type space or general sort of blockchain.
01:24:34.230 - 01:25:21.586, Speaker C: Exactly, exactly. Because you couldn't say, like, Cosmos is just app chains, right? Because to Sunny's point, all these things exist. And that lifecycle, I think, is where for every application is where this becomes very relevant. Right? So at what point are you in your own lifecycle? And where does it make sense as a starting point based off of that? Is it on a general purpose, l one, any sort of smart ondra platform general purpose, L one, L two? Right? And then as you grow, are you going across that spectrum and getting closer to having your own dedicated app space and maybe expand vertically even more with your own app chain? But yeah, I did like that spectrum, or I guess the cross here between general purpose and app specific.
01:25:21.688 - 01:25:51.470, Speaker A: You pulled out a super interesting point in that as well, which is the permissioning argument. That was when Dimitri kind of framed that as like, okay, so it's all very well and good to say this specific block space is for this app, but how do you actually enforce that? Right? Because you might as the creator of the block space, you'd be like, I want to only use for this specific thing, but in a lot of senses permissionless so people could just start using it for other things. And how do you enforce that exactly?
01:25:51.540 - 01:26:39.258, Speaker C: Interesting question. Kind of defeats the purpose. And I think just to touch on again, I see three general approaches here. There's the governance gating from that permissioning of contracts and permissioning for chain upgrades. Obviously, there's sort of implicit gating that we were talking about just now in terms of treating, maybe disincentivizing certain types of activity with higher fees. Then there's, of course, just non, I would say almost enterprise roll ups. We see this with so rare or some of the other StarkNet roll ups, that this is basically one company that's saying, okay, you're getting most of the benefits of security from Ethereum because it is a ZK roll up.
01:26:39.258 - 01:26:58.580, Speaker C: But at the end of the day, we're kind of in charge of this and you're coming here for a specific reason to trade NFTs or to trade on dYdX, but how important will it be for them to actually decentralize that sort of permissioning? And just how effective is it through governance versus other ways?
01:26:59.510 - 01:27:04.210, Speaker A: All interesting questions. Anything else that you found particularly interesting you want to highlight?
01:27:04.790 - 01:28:00.710, Speaker C: I think that mainly covers it. I think we're going to dig into the interoperability piece quite a bit more over the course of the season because I think it's mainly a question of, okay, if you see this is kind of the direction Ethereum is heading. What needs to be built in order to get there, what sort of standards need to be established to enable that? Same sort of async composability that you get with IBC on Cosmos? Is it going to be a top down approach where Ethereum says, okay, you're going to have this built in standard like we talked about, or is it going to be bottoms up? Where you have maybe applications that know they interact frequently with each other are going to kind of have the same sequencer set, right? So it's a little bit more frictionless, but very much so within just a little sector of apps and no one shared standard like you see on the Cosmos side.
01:28:00.780 - 01:28:54.806, Speaker A: And for folks we know this was like a slightly technical episode, but one way that helps my five year old brain understand standards, right, is there are all sorts of different cars out there, right? Like tens or however many different car brands are. You could go to any auto shop and they know how to change your tires because there's an agreed upon set of standards in the automotive industry that you don't vary by a couple of different sets of screws or it could be a couple different sizes, but ultimately that's what makes that work, right? So that basically unlocks auto repair shops and aftermarket businesses and all this kind of stuff. So that was what Sonny was talking a little bit about. It's like, hey, we haven't agreed on any sets of standards. So we as the developer of Kepler Wallet, everyone's trying a whole bunch of new innovative stuff. But it's like, guys, there needs to be guardrails around it essentially, right?
01:28:54.908 - 01:29:14.320, Speaker C: And that will need to be an application based push for Ethereum, right? Which it's not been kind of the typical course of development for Ethereum. They have not been building just to cater to a certain set of apps. But I think that we could see that change as the apps gain more leverage over, I guess, the chain itself, right.
01:29:15.170 - 01:29:49.490, Speaker A: Else is funny just in close. This is so much in crypto gets reduced to, like, a technical argument. But also a huge component of this is just different communities and their priorities and the culture that gets set. You know what I mean? Cosmos as a community just focuses on this, right. And the leaders who are in Cosmos actually, it's almost too bad we didn't get this. Sonny made this point after we left. But there's a big difference within the Cosmos community of the core devs also being application builders versus in Ethereum, the core devs are completely separate.
01:29:49.490 - 01:30:01.094, Speaker A: Right. So that is a cultural thing. Right. There's no technology that makes that the case, but that's a huge cultural difference in between. It's just funny to pick apart.
01:30:01.222 - 01:30:36.502, Speaker C: Yeah. Maybe just to give a sense of what he was talking about there, this would be the equivalent of if the next EIP for Ethereum, the next major Ethereum upgrade was really developed by, say, the uniswap developers, the ave developers, the MakerDAO developers. Right. Those application developers are the ones really dictating where the base layer goes and what standards they introduce. That's definitely not the case today. In fact, they really try to separate each other out. Not to give any application some sort of special privilege, but I think it's a big question to see if that will change over time.
01:30:36.556 - 01:31:01.980, Speaker A: All right, buddy, this has been a really fun one. Just to give you guys a sense of what we've got coming up in episode two, we're going to be talking with Sam Hart and Zachy Manion about we called it Fat apps. Maybe we should change it to Tallapps and Aggregation Theory, but get getting into even more detail about this idea. That value may accrue at the app layer as opposed to further down the infrastructure stack at the protocol layer. So this has been a fun one and yeah, budy, I'll see you. See you next week.
