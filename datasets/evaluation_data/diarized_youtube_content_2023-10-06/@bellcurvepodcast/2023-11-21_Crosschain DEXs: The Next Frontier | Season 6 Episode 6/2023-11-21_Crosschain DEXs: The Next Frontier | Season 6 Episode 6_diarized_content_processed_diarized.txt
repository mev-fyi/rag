00:00:00.250 - 00:00:21.022, Speaker A: Oh, my God. I agree. So strong, right? Like the Lock and Britman bridge is super. I think it's super dangerous. I'm not a fan and I don't like it. And I think that there is such risk of vendor lock in and centralization risks that are super scary and are the antithesis of like, what the systems we're trying to build are.
00:00:21.076 - 00:00:47.890, Speaker B: All right, everyone, we will be back to the program in just a moment. But before we do, I want to share something that Blockworks has been cooking up for these last couple of months. March of this coming year in London, blockworks is hosting Das London, the largest institutionally focused conference in all of Crypto. Goldman, JPMorgan, Zero, 72, all in one room. So you can know what the big money is doing. So click the link at the bottom of this episode. It'll take you right over to the homepage and use Bell 20 for 20% off and I will see you in sunny London town in March.
00:00:47.890 - 00:01:07.842, Speaker B: This episode is brought to you by Maverick Protocol All, a suite of liquidity tools built around an innovative AMM. Maverick helps token projects dow, Treasuries, LPs, or basically anyone in DeFi shape their liquidity with efficiency and flexibility. How, you might ask? Stick around and you're going to be hearing about them more later. Now on with the show. All right, everyone, welcome back to another.
00:01:07.896 - 00:01:09.086, Speaker A: Episode of Bell Curve.
00:01:09.118 - 00:01:12.494, Speaker C: Before we jump in, quick disclaimer. The views expressed by my co host.
00:01:12.542 - 00:01:16.834, Speaker B: Today are their personal views and they do not represent the views of any.
00:01:16.872 - 00:01:22.662, Speaker A: Organization with which the co hosts are associated with. Nothing in the episode is construed or.
00:01:22.716 - 00:01:27.794, Speaker C: Relied upon as financial, technical, tax, legal, or other advice.
00:01:27.842 - 00:01:30.650, Speaker A: You know the deal. Now let's jump into the episode.
00:01:32.430 - 00:01:39.962, Speaker C: Hey, everyone, welcome back to another episode of Bell Curve. Today, Dan and I interview Hart Lambert of uma and across. This was a really fun one.
00:01:40.016 - 00:01:42.566, Speaker B: We explicitly covered interoperability and the role.
00:01:42.598 - 00:01:59.326, Speaker C: That DEXs play there. So we talked about some of the different flavors of bridges that exist today, why some might be better than others, and how interoperability is all going to play out. But Hart is also just a very deep thinker about market structure and the future of crypto in this whole design space. So a lot of it we focused.
00:01:59.358 - 00:02:00.978, Speaker B: On the interoperability and deck side of.
00:02:00.984 - 00:02:14.680, Speaker C: Things, but we also went down some really fun rabbit holes as well. So without any further ado, let's go right to the program. All right, everyone, welcome back to another episode of Bell Curve today. I'm joined by my co host Dan Robinson, and we've got Hart Lambert on with us today. So Hart, welcome to the program.
00:02:15.130 - 00:02:16.966, Speaker A: Thanks, guys. Thanks for having me.
00:02:17.148 - 00:02:31.900, Speaker C: Thanks for coming. This is cool. We were just describing that Hart and Dan have never been on a podcast together. So technically this is not only a podcast episode, but this is a moment in podcasting history, so we'll all just try to soak in the moment and enjoy it together.
00:02:32.670 - 00:02:34.182, Speaker A: Our relationship deepens.
00:02:34.246 - 00:02:43.322, Speaker D: Dan, Hart and I have been friends in the industry for a long time and have had a lot of great conversations, but none of them recorded to date.
00:02:43.476 - 00:02:50.158, Speaker A: Dan has also never invested in anything I've built. So there's also that sore point, we've.
00:02:50.174 - 00:02:55.738, Speaker D: Never had to do that disclaimer before. Disclaimer disclaimer paradigm is not invested in hart.
00:02:55.774 - 00:02:59.586, Speaker A: I'm sorry, hart, you maybe borrowed ideas, but haven't invested?
00:02:59.618 - 00:03:01.080, Speaker D: Oh, yes, many times.
00:03:03.850 - 00:03:36.900, Speaker C: All right, guys, so why don't we just start I want to kind of broach this subject that Dan and I have covered sort of in a secondary capacity so far this season, but I want to directly address it with this episode, which is this idea of interoperability. And I want to spend a lot of time digging into the intersection between interop and DEXs and the role that DEXs play in interoperability. But before we even get into that specific intersection just at a high level, hart, can you kind of walk us through the current state of interoperability in crypto? Why? It's been such a thorny sort of issue that why haven't we figured this out by now?
00:03:37.750 - 00:04:22.430, Speaker A: Yeah, well, I definitely can't walk through the whole state of interop because this is like a weird, long, multipodcast thing to probably go through, and the semantics here make it all awkward. But what I would say is why this is a problem. As we know, achieving consensus isn't the easiest thing, right? We built blockchains and spent years doing it to figure this out. And interop is trying to achieve consensus on one chain about what happened on the other chain. That's not an easy thing to do. And I think a lot of the approaches, I think there's a lot of room in this design space for how we should go about doing it. Many different approaches, and people are still exploring all the trade offs.
00:04:22.430 - 00:04:29.506, Speaker A: I might keep that as, like, a really high level issue of why interop is hard. Curious if I don't know Dan has.
00:04:29.528 - 00:05:32.406, Speaker D: Anything to just to I think Hart will agree with this, but I do know one type of interoperability certainly involves that. But there are many ways to get what people would like to get out of interoperability without having to achieve consensus. And getting value from one chain to another doesn't necessarily have to involve any kind of, like, high stakes consensus on one chain about what happened on the other chain. It could be know. And this goes back to HTLCs and some of the original ways that people have thought about interoperability between blockchains, where the only parties that matter are actually like, the two parties that are doing the swap, and they just have to come up with a protocol for actually getting value across chains. So I do think if we broaden it a bit, there's a lot of interesting there's a huge interesting design space here around how minimal can we make the requirements for actually being able to get what users want out of interoperability, which is getting value from one chain to another. And my framing for interoperability I think would be and I think of a lot of things in Dex terms and of course, since this is a Dex season, I think we'll be covering some of the intersection here.
00:05:32.406 - 00:06:16.950, Speaker D: But I think of interoperability from a user perspective as very similar to what they want from a Dex where with a decentralized exchange, often what you want is you have one asset possibly on one chain and you want to get value in another asset on that same chain. And with interoperability, often you have one asset on a particular chain and what you want is some value on another chain, on some destination chain. And so you could think of that as a message being passed, which is often how people think about interoperability, but you could also think about it as a decentralized exchange transaction where I have something that I have and there's something that I want. And I think if you think about it in those ways, you can often think about find different solutions that maybe are less technically imposing.
00:06:17.770 - 00:07:12.470, Speaker A: Very much agree on that point. And I think actually that might be a good way of also focusing this conversation where I am much more interested in how you move value between blockchains, not how you move messages. And not to say that messaging is not important, it's got its use case, but like 90% of what people are doing on blockchains today is basically Dex transfers. And I think 90 plus percent of what people are going to want to be doing in terms of interop is moving value, it's moving tokens. And the messaging thing is I think if you focus on moving value, your design space is different and we can talk about some of the trade offs here and I think intense based architectures and kind of what we're doing. I think that there's much more clever solutions if you focus on that subset of interoperability.
00:07:12.970 - 00:07:47.780, Speaker C: So I tend to agree. Before we even get into some of the nuance there, could you guys just give for folks in the audience who might not be as deep as you guys are into the interop sort of conversation when people even talk about something like messages? Even for me, actually, I would love to just get a sense of what is a message within the context of how maybe like a layer zero or sort of general messaging protocol might talk about it. And then even within what is kind of the orthodoxy right now within sort of the Bridging or cross chain messaging, like what are people generally trying to optimize for? Just kind of catch us up on what people are talking about.
00:07:48.790 - 00:08:14.890, Speaker A: Yeah, I'll jump in and dan interrupt right. So a message is, I want to send some message. I want to send hello, world, from one chain to another. Got to figure out how to do that. Cool. I actually think the baser primitive here is one blockchain wants to read State from another blockchain. So you write hello, state on blockchain A and you want to wait for blockchain B to read Hello, World on blockchain A.
00:08:14.890 - 00:09:03.766, Speaker A: And so that read state is the basic primitive, and you want to figure out how to get that back and forth when it comes though to Bridging. Specifically, I'll give you kind of my framework for how I look about this, and then Dan can critique it and kind of add to it. But what Bridging is usually around Bridging assets, or let's focus it around Bridging assets. And in that context, the idea typically is I deposit asset on chain A and then typically some message happens that goes to chain B and I get asset on chain B. And I'm going to frame this general framework. The term I kind of want to start using is actually a TradFi term called delivery versus payment. Comes from trading bonds.
00:09:03.766 - 00:09:47.110, Speaker A: So I'm going to deliver payment and I'm going to make delivery of my cash and I'm going to receive my bonds and think it really is like an exchange term. So I'm going to make a delivery on chain A, receive payment on chain B. And again, the kind of standard way of thinking about this is that this deposit transaction happens and I send a message. This kind of messy middle thing. And there's definitely two flavors to this. One flavor is these like lock and mint bridges. So I lock asset in my deposit contract, send a message, and I mint like a wrapped or synthetic version of that token on the other chain.
00:09:47.110 - 00:10:33.960, Speaker A: That's one flavor that I quite dislike because of the security implications there of this big lockbox of assets on the origin chain. But you can do a flavor of this that's also like what's called a liquidity network, where I have pools of the native assets on both chains. I deposit in a pool on chain A, send message and release asset on chain B. And this delivery versus payments sort of structure is the way I describe basically every bridge out there except for across, does something differently, does something different with an intense architecture. Maybe I'll pause there. Dan, what do you think you agree with?
00:10:34.410 - 00:11:34.278, Speaker D: Think that's a good description. I think of this lock and mint structure, and I think it's a very important distinction between how bridges work and Hart. And know I'm preaching back to the choir here because I've learned a lot of how I think about this from Hart. But this way of Bridging assets, where you lock an asset on one chain and mint something on the other chain, I think of as it's like bridging via like a particle where you have some asset and now you've got a representation of that asset on the destination chain, you've moved the actual asset over. In some sense, this sort of like matter has been moved from one chain to another. But there's another type of interoperability when someone just wants to move value across chains, which I was alluding to before, which I think of more like a wave, like the wave particle duality in quantum physics. I think of this as moving value like a wave, where I'm doing a trade on one chain, and what matters is that I get some value, some particular asset that I want on the other chain.
00:11:34.278 - 00:12:39.930, Speaker D: But at no point am I locking up the value that I have on this chain and minting some representation of it on the other chain. I'm actually just swapping in some sense with someone and we have some mechanism in there to guarantee that there's atomicity here. So one thing to note about this wave method, the latter method here is that it doesn't actually require any message to be passed between chains. It doesn't require an oracle. And we know this because one of the first ways that's ever existed of having interoperability across blockchains HTLCs was invented in one form by Satoshi Nakamoto in a post like over ten years ago. And this is an idea where if I have a counterparty, I can just lock up value on one chain, he locks up value on the other chain. We do this two phase commit protocol, basically, where Alice locks on one chain, Bob locks on the other chain, and then Alice is able to unlock Bob's value on Bob's chain, and that gives Bob the information he needs to unlock Alice's value on the other chain.
00:12:39.930 - 00:13:38.238, Speaker D: And that's a way of actually doing a fair exchange across these chains without having any kind of message passed between those chains. And so I think the wave theory and again, I'm curious for Hart's take on where exactly across fits between in this duality here. But I think one interesting thing is this allows a lot of different kinds of interoperability that aren't possible, or it makes it a lot easier, for example, with the matter thing, the particle kind of interoperability, you need two way message passing between these two chains. You need some Oracle for the state of the source chain on either the origin chain on the destination chain. You need some Oracle for the state of the destination chain on the source chain in order to be able to bridge the asset back. And you need none of it technically for having the sort of like wave fair exchange using HLCs. But if you have one wave message passing, then there's a lot that you could do that also looks more like a wave.
00:13:38.238 - 00:13:50.760, Speaker D: And that's how uniswap X works, for example, which I can get into in a moment. But I'm curious at heart, does that duality make sense to you and how would you characterize across in that.
00:13:53.850 - 00:14:40.850, Speaker A: Deep? I'm not sure I love the duality analogy, but I do agree that there's two different ways of doing and like Mike, I don't know if you know, but Dan can teach a master class on HTLCs. You can Google all these old talks he gave from way back. And the HTLC thing, the downside to this, right, is just the user had to do a bunch of actions. You have to go back and forth. It's this two phase commit and it kind of has this user experience that never really worked. I do think across is closer to this, but the trick which Uniswapx also uses is that we introduce a third party here. So unlike all these delivery versus payment bridge designs, we introduce a third party that Uniswapx calls a filler.
00:14:40.850 - 00:15:58.186, Speaker A: Across calls a relayer, cowswap calls a solver. This third party, though, they have this unique property where they're actually willing to lend assets on the destination chain on the user's behalf. And what happens here is we've completely kind of broken the way the particle bridge works, where the user's deposit it's not released to the relayer until we verify the relayer goes and basically fills the user with their own capital, with their own money on the destination chain. And the user assets on the origin chain are not released until we verify that the relayer actually did what they said they were going to do. And it's this really interesting trade off where by introducing this third party actor that's willing to function in this sort of market maker role, by extending capital, we're able to break a lot of the usability issues that Hdlcs had and actually offer, I think, a strictly better user experience in the design. And we can get way deep into why that is and how that works. What do you think, Dan?
00:15:58.298 - 00:16:55.554, Speaker D: Yeah, so, absolutely, I agree. And I had a talk on Hdlcs a few years ago that if people are curious about Hdlcs would encourage you to check out, called HDLC is considered harmful and it's very anti HDLC as a general method for doing cross chain swaps. But in that talk, I actually do propose another way of doing cross chain swaps that doesn't and off chain payment networks that doesn't involve any Oracles between chains. That's this packetized payment approach that we don't have to get into necessarily. But it's another protocol that allows you to trade value from one chain to another without necessarily having to do have an Oracle between them. But yeah. So I think what's hard is pointing out here is that both across and uniswap x, which are two methods of doing this kind of value exchange across chains, both of them take advantage of the fact that you may have an oracle trusted by at least the two parties that are doing this.
00:16:55.554 - 00:17:59.586, Speaker D: Swap an oracle for whether settlement has happened on the destination chain. An Oracle that is readable by the origin chain. And so if you have a one way message passing bridge will suffice for this. If the origin chain is able to the chain where the swapper has their asset and wants to move somewhere else if that chain is able to read state from the destination chain in one way or another in a way that is satisfactory to at least to the participants in this transaction, then it's possible for the swapper to have a much more efficient method than an HCLC, which requires much more interaction between these parties. And yeah, here you can have sort of a minimal interaction in order to transfer value. I do want to mention, since I think neither of us would naturally be in favor of the or be shouting to the rooftops the benefits of the sort of two way lock and mint style bridge. One advantage that the lock and mint style bridge does have is the ability to end up with a representation of the assets from the origin chain on the destination chain.
00:17:59.586 - 00:19:02.826, Speaker D: So if you want to, for example, be trading ETH on Solana, you need something like this. Or you could have a synthetic, but you have capital efficiency downsides there. But if you want to just have a capital efficient synthetic bitcoin on Ethereum, for example, it helps to be able to have this two way message passing bridge and be able to lock a lot of bitcoin on one chain and mint it on the other. So you can go trade with that asset and do various things with the asset on the destination chain. So that is a benefit that you don't get with these one way bridges. So note that basically if we think about this in terms of what are the requirements on the platforms, if you have no Oracles at all, you can do an HDLC, you can do this kind of complicated two phase commit procedure between these two traders in order to transfer value from one chain to another. But it's kind of inefficient, it has these downsides, it takes multiple steps and if one party aborts in the middle of it can be just a disaster for the other party, locks up their capital for a while.
00:19:02.826 - 00:19:27.522, Speaker D: If you have a one way message passing bridge, then you can do these protocols like uniswap X and a cross. And if you have a two way message passing bridge, then you can do these lock and mint protocols. But yeah, actually Hard I think helped radicalize me against the two way message passing bridges. Do you want to talk a little bit before we get into the details of the one way of things like across do you want to talk about the lock and mint protocols a bit for a second?
00:19:27.576 - 00:19:52.374, Speaker A: Yeah, sure. I think one thing that would be clarifying though, for the audience and all this is when you're using the word Oracle here, you're using it. Basically any message that's passed between chains is an oracle. And I don't think that's actually the way everybody thinks about it in the space. Although I agree with this. Every message sent between chains is an oracle. You're reading from another chain.
00:19:52.374 - 00:20:42.262, Speaker A: It's information that's not native to that blockchain. One nuance I'll throw in here is that most L2s and many blockchains do have, like, a canonical oracle, which a canonical message passing bridge that is designed to have no or minimal additional trust assumptions over the chain itself. And so one of the things like where a cross tries to go is we basically only make use of this isn't entirely true, but we're trying to go back into how we only use canonical bridge oracles or the canonical message layer. We're trying to use the most secure message layer at all times, even if it's expensive or slow. We can talk about that more too. So, yeah, Dan, what do you want to talk about in terms of lock and mint?
00:20:42.326 - 00:21:34.490, Speaker D: Well, yeah, actually, that's a good one. So thinking about bridge passing, how do we get bridges? So I think there are a few ways and sort of building up it's interesting there are some oracles that have the same security requirements as the origin chain of the message, and there's some that have the same security requirements as the destination chain of the messages. And either those sometimes are called canonical bridges. So we take something like IBC, the inner blockchain communication protocol that the Cosmos ecosystem uses. That's one where the bridge is canonical because it's as secure as the origin chain of the message. So if you want to send a message from one Cosmos chain to another, the consensus protocol for the origin chain, for the chain that's sending the message, basically is signing that message. And that's how IBC works is that it's as secure as just the core proof of stake consensus protocol for that chain.
00:21:34.490 - 00:22:28.582, Speaker D: And then if you think about something like a roll up, any L two essentially on ethereum, there's a complicated fault proof or validity proof based bridge to get from the roll up to the L1 to get from the L2 to the L1. And that's what's enforced by all the security there. But I think a really underrated, interesting bridge with L two S is the L1 to L two bridge. What is that bridge? How does it work? Every one of them has a built in bridge for it. But how is it secure? Why is it secure? And I think ultimately and this gets into some of the philosophical debates about what a roll up is, but I think ultimately it's secure because the consensus, the protocol that determines what's on the L two. Everybody who's validating the L2 just has to validate the L1. And if the l one were to roll back, then the l Two state just would roll back canonically.
00:22:28.582 - 00:23:28.858, Speaker D: And I think ultimately in some sense it's ultimately all enforced in some ways by the bridge back. Like the bridge back depends on the bridge there having validated all the messages. That's part of the validity for that bridge. But ultimately what it really means is just the L2 is built so that it is always reading what the L1 state is. And so that's a case where the canonical it's canonical because it is actually just built into whatever's running the L2 is that it has to respect the l one state and messages from the L One. I think those are some kinds of canonical bridges there and then I think there's a lot of non canonical bridges which are you could think of usually there's some kind oh, I'm sorry, one more type is if you can prove the consensus mechanism of the L One of one chain on another chain. And so I think one great example of those is a bridge from Bitcoin to any other chain and you can build a bridge from Bitcoin to any smart contract chain by validating the proof of work that was done on the bitcoin chain.
00:23:28.858 - 00:23:42.660, Speaker D: You actually just validate the block headers. And so BTC, relay one of the first bitcoin to Ethereum bridges was done this way. It validates actually the block headers to make sure that there's been a lot of proof of work done on the.
00:23:43.910 - 00:23:49.720, Speaker A: So Mike, I think we should pull ourselves out. As you see, we started this with what is interop. Right?
00:23:50.810 - 00:24:32.318, Speaker C: I was going to wait for you to respond there. Yeah, here's the way that I would sum the situation up so far. Right. So we can divide our bridges into two separate categories here. Maybe type one and type two bridges that each have its set of sort of pros and cons, let's broadly call type one sort of the lock and mint model. And the disadvantage of this and that's basically mechanically what's going on under the hood. I want to draw, actually a through line here back to an episode that we did last season on Liquid Staking with Sam Kazamian, who drew this comparison in between stablecoins Liquid staking protocols and bridges, actually, where you have one side on sort of the demand side of those protocols, people that deposit assets.
00:24:32.318 - 00:25:36.614, Speaker C: And what these protocols sort of spit out is a claimable liability and you're sort of managing assets and liability similarly to like a bank or a money market fund or something like that. And that's what stablecoin issuers do, that's what liquid staking protocols do and that's what these sort of lock and Mint bridges do. And the disadvantage of that obviously, is the vast majority of hacks whenever you hear about these billions of dollars are getting lost in DeFi. These mostly come from these lock and mint bridge hacks because there's this honeypot of locked tokens on this one blockchain. The advantage of that though, is that if you don't want to just exchange value in between ethereum and Solana sort of trust zones, but you actually want to go into the Solana ecosystem and use your ethereum, then this is kind of the way that you have to do it, right? So those are kind of like pros and cons of that approach. And Dan was just getting into some of the different flavors of what even those constructions could look like. But then there's this other, maybe we call it like the particle type bridges, where actually we say, you know what, instead of trying to it's not that important.
00:25:36.614 - 00:26:08.798, Speaker C: Most users don't actually want to take their ethereum and move it into Solana land. They just want to be able to swap between native Ethereum and native Solana. And for those sorts of instances, we can use a completely different sort of minimized construction where even like the metrics for a bridge like that are totally different, right? We're not trying to optimize for through the lens of someone like a nomad or I don't want to pick on anyone specific bridge, but the idea would be like, I want more assets to manage here, so I want more messages being passed from one chain to the other. But that's not the case for this new style of bridges.
00:26:08.894 - 00:26:56.366, Speaker B: Hey, everyone wanted to take a quick second to shout out this season's partner Maverick Protocol. Now, many of you probably know Maverick as an innovative AMM, which they are, but in reality they're a lot more than that as well. Maverick is a suite of tools for DFI users and builders that allows them to put liquidity where it will get the most work done. Since Maverick launched in March, they have been gobbling up market share. And at the time of this recording, which is the end of September, on a trailing seven day volume basis, maverick is now a top three decks by volume, and they support over 50% of the volume on the L two ZK sync era chain. Maverick enables LPs and token pairs to process higher volume with limited TVL, which allows them to support some of the highest levels of capital efficiency for LSTs like wrap steep. Another very cool feature is something called Maverick Boosted Positions.
00:26:56.366 - 00:27:22.906, Speaker B: So that allows protocols looking to bootstrap their token liquidity to target the shape of liquidity of any token pair with surgical precision. Maverick is backed by some of the leading institutions in crypto founders, Fund, Pantera, Coinbase Ventures, Binance Labs. They are all backing Maverick in their vision to revolutionize the next generation of DeFi DApps and helping them build their liquidity in all market conditions. Click the link at the bottom of this episode. Let them know that I sent you.
00:27:22.928 - 00:27:23.498, Speaker D: Thanks guys.
00:27:23.584 - 00:27:31.174, Speaker C: Maybe we can get into and that would be like kind of uniswap X. And then there are elements it seems like across is almost like a little bit of a daywalker.
00:27:31.222 - 00:27:31.338, Speaker A: There.
00:27:31.344 - 00:27:53.070, Speaker C: Are elements of both from what it sounds like. So maybe dan, can I pick on you? Actually, I think we've done a couple episodes and I've never actually asked you to give me a formal definition of Uniswap X. But if you kind of walk us through the formal definition of Uniswap X, how it fits in the second camp and then we can maybe segue into more intense based models and where that all fits into this whole equation.
00:27:53.150 - 00:28:01.926, Speaker A: Dan, I'll just add you should be clear that this is like the cross chain Uniswap X because single chain Uniswap X is good color but different, right?
00:28:02.028 - 00:28:58.770, Speaker D: Yeah. So we've talked a little about how single chain Uniswap X works. And it's an off chain protocol where one with a swapper who wants to swap into another asset, they sign a limit order or an intent. They sign something that allows any filler to actually fill their trade and deliver them some assets in exchange for the assets that they were offering. So that's how it works on one chain, on MultiChain uniswapex which is described in the white paper but hasn't been implemented yet, or it's not live crosschain unisox work similarly except when the order is filled, it has to be delivered on another chain. So someone signs an offer, a filler can claim that order and they have to claim it on the origin chain. The chain where the swapper wants to basically send their value from where the swapper already has assets.
00:28:58.770 - 00:30:07.102, Speaker D: But then when they delivered on that order, they have to deliver it on some other chain. And the general idea is they deliver it on some other chain and then they are able to claim on the origin chain based on some kind of proof that they've made delivery. And in I think the most powerful and useful form of Uniswap X that's an optimistic proof, is that after a little time they can just claim on the origin chain because nobody has challenged that they've made that delivery. But the general idea here, it requires a one way message passing bridge or Oracle for the destination chain, the chain where the swapper wants to have assets. It requires an Oracle for that on the source chain, on the origin chain that is readable by the origin chain where the user already has assets. And so that's a general outline of Unisobx and Unisobx is agnostic to what that Oracle is or how it works. It could be a canonical bridge between an L1 and an L two or an L two and an L1.
00:30:07.102 - 00:30:19.922, Speaker D: It could be some chain of canonical bridges between chains or it could be some other kind of bridge, some kind of multi SIG bridge or something. All that matters is that the filler and the swapper are willing to agree on it.
00:30:20.056 - 00:31:14.286, Speaker A: And I like this design because as the Uniswap X white paper references, it's inspired by across. Certainly having thought about this a lot. I think the overall goal here is actually to minimize the number of messages we're sending across these bridges and the way uniswap X and across work is really quite different. And the way I like to think about it is layers of this sort of intent based bridge settlement system which is quite different from this delivery versus payment architecture. And I look at it as like these three layers of the stack. We start with the order generation where the user creates their limit order or their intent, if we want to use the buzzy word. Then there is this network of fillers, relayers or solvers, whatever you want to call them, that are actually the ones that front capital to fill the user intent.
00:31:14.286 - 00:31:55.490, Speaker A: And the bottom layer is this settlement layer where the user assets are escrowed until we verify that the order has been filled. And what's interesting about this structure here that's completely different from these delivery versus payment type networks is we can actually do much of this without very much messaging, almost minimal messaging. And when we do do messaging, we have the option of only using Canonical Oracles or Canonical Messages messaging layers, which I think offers a lot of security advantages while still maintaining the speed and usability that users are demanding. And so maybe we can go a bit deeper into that.
00:31:55.640 - 00:32:36.006, Speaker D: Yeah, I want to dig in on that because you've talked before about wanting to minimize the number of messages. But I might think of it a little differently, which is, if you have any bridge, right. You suppose you have a canonical bridge, but it's slow, possibly because, say, it's a bridge over from an L two to an L1. That requires, like, a one week fault proof challenge window or something. Or it's really expensive because it requires consultation of multisig or something like that. It requires a lot of on chain transactions to do. You can basically always bootstrap this into a reasonably fast and very cheap bridge by just making it optimistic.
00:32:36.006 - 00:32:58.050, Speaker D: And this is another idea that I think that Hart has been pushing for a long time and has deeply sunk into me, is that you can make a lot of things that are very slow or expensive, fastish and cheap by making them optimistic and only having someone challenge them. So is this just saying, oh yeah, we don't have to send messages on the bridge because in the happy case, we just won't use it and we'll only use it when challenged.
00:32:58.210 - 00:34:03.098, Speaker A: There's actually two optimizations here that fit with each other and Dan, I've pilled you hard on the optimization sorry, the optimistic approach, which is what I've done with, uma, protocol stuff for a long time. I've begun to pill you on this batched transaction approach to why we batch things and I actually think the two of them fit together very elegantly and quite nicely. So it's worth getting kind of technical here for a split second and it's actually worth going in some math here too. So first off, what's the cost of in this design? We have this trade off, so we're going to do this intent based Bridging design. But the trade off here is we have this relayer that's going to front money. And so there's a loan, a cost component here of fronting money. But to give you guys some numbers, the cost of lending money at a 10% rate for 1 hour is a 10th of a basis point.
00:34:03.098 - 00:35:08.142, Speaker A: So that means it costs like one 100th of a penny to lend $1,000 for an hour. It's like a de minimis cost. And I don't think people quite realize this and why this is so powerful. So to the optimistic point, to Dan's point, saying if we had a bridge that took an hour but was really secure, and we'll go into cost savings in a second, if we had a bridge that took an hour but is really secure, I could fix that by building this intent based framework where I have a third party lend money. Almost instantly it comes across as almost atomic for a 10th of a basis point. And then they collect their 10% yield and we use the slow bridge to slowly verify things and we retain all the security advantages of this very slow bridge, but give the user a fast experience for a very small amount of money. So first of all, Dan, we'll go into the optimistic stuff in a second, but agree, kind of makes sense.
00:35:08.196 - 00:35:23.330, Speaker C: Yeah, I have a question about this. I've actually had this question about all of these sort of like pre confirmation type things. What happens if there's ever a dispute there right in between the sort of fast confirmation that you'd get from sort of a market making type entity and the confirmation process of the settlement layer.
00:35:24.310 - 00:36:03.860, Speaker A: Okay, very simply, right, if the filler didn't send the user their funds, they get their funds back after an hour. The slow bridge says, okay, they didn't get their money back. And there's different ways of kind of parameterizing this or constructing this. And maybe you want to make it a little bit painful for a filler to not fill the user. So maybe the filler actually has a bond so the user gets back like a 10% bonus or something like that. If they don't fill the user. And uniswap X actually calls this the filler bond and they've kind of have a design for how this might work, but you do something like that, so it's painful for the filler to not do what they said they were going to do.
00:36:03.860 - 00:36:29.400, Speaker A: Got it. And conversely, also if the filler just fills the wrong person or something like that, the filler just doesn't get paid back. So if the filler goes and they send the money to the wrong address, for example, then the filler loses their funds and the user will get reimbursed with this 10% bonus. So you can design pretty robust incentives to keep people honest here.
00:36:30.830 - 00:36:31.338, Speaker C: Cool.
00:36:31.424 - 00:37:15.734, Speaker A: Okay, so there's that. So that's like a very cool shortcut. How we've now taken a slow bridge and we've made it fast for what is like a very small amount of money on the optimistic approach. What Dan is saying here is like well, and what uma, protocol has done for a long time is well, okay, let's say that we don't even send a message. We just have a challenge period where we don't send a message between two chains. We just say, hey, if the message didn't show up, there's a challenge period. And if somebody says I didn't get my funds and maybe anybody could say this depending on your design, then and only then do we send a message proving whether funds were or were not sent.
00:37:15.734 - 00:38:03.126, Speaker A: And so if you design this correctly, maybe everybody does what in the happy path. Everybody does what they said. You never even send a message, which is pretty cool. But then there's another aspect to this that is sort of this optimization across has fallen into that I didn't really appreciate when we were building this, but it's actually turned out to be really valuable and this just goes into like gas cost optimizations. So right now in this design, we have user funds are escrowed on the origin chain. Filler fills the user quickly, they're happy, but then the user has to come back and ask for their funds out of this escrow account and there's like an on chain transaction associated with that. Costs some money to do that.
00:38:03.126 - 00:39:00.434, Speaker A: And actually on Ethereum main net, it costs like a nontrivial amount of money just to get your funds back out, which increased user costs. So the observation here, though, is like, well, if I've already waited an hour if the relayer has already waited an hour to get their fill and it's cost them a 10th of a basis point, what if they were to wait another hour, but then batch together all of their repayments. And instead of paying the gas costs, say they did 1000 of these transactions. Instead of paying 1000 gas costs to reclaim their funds on the origin chain, they do one, and they get all their funds back in one optimization. That seems pretty cool. And those gas costs are like non trivial, they really add up and it's part of the reason why across is so fast and cheap. And then across goes one step further where actually we aggregate, we batch together the repayment instructions across all the chains.
00:39:00.434 - 00:39:34.738, Speaker A: So relayers that fill these users, they get to batch the repayments on Ethereum and Arbitrum and optimism and polygon on all these chains and they can get repaid in one step which has really substantial gas savings of how we do this whole thing. And so basically we've taken this intent based model where users are fronting money. And then the relayers are saving on all their gas costs by getting paid back in one lump sum transaction, which just amortizes all these costs over many, many fills. Kind of ranted there. But does that make sense to you?
00:39:34.824 - 00:40:27.726, Speaker D: Yeah. So to sum it up, yeah, that's a good point. So if you have a cross chain bridge that is slow and expensive, you can make it somewhat faster and a lot cheaper by making it both optimistic. So you only actually have to go to the bridge if something goes wrong, and by batching, by having a lot of messages sent in one message if needed. I think that makes sense. Hard and I can get into some quibbles on, I think, some of the microstructure of how these things work. But ultimately, I do think all bridges are going to end up and all these protocols are going to end up moving toward whatever the most efficient, minimally trusted architecture is, just because I think the competition on cross chain bridges and costs will end up being like it is with DEXes.
00:40:27.726 - 00:40:34.760, Speaker D: So maybe we should Simon, to sort of take a step back and talk about some of that, I think, and how we see the landscape playing out.
00:40:35.130 - 00:41:26.246, Speaker A: Yeah, and I guess on that, I don't even know if we call this a bridge anymore. That's my kind of point here. What is this architecture? I go back to my three points. It's like user limit order, cross chain limit order or intent, then super competitive network of fillers that we want to have solve this. And then this other layer, that is your settlement layer. And I think where Dan and I very much agree is if we want best execution for the user, which is what we want, we want to have the most efficient RFQ or order flow auction system that gets the user the best price for what they want to do. We want a hyper competitive solver market, relayer filler market that's going to be really competitive at filling that user and filling them quickly.
00:41:26.246 - 00:42:09.090, Speaker A: And by the way, Dan, we should talk about speed. It's the other thing we should do here, too, in a second. So most efficient order flow auction, most efficient network of fillers or solvers that fill them, that should be permissionless. 14 year old kid in their basement should be able to be one of these guys, as should Jane Street. Like, really interesting market here. And then the settlement layer at the bottom should be the least expensive but trusted settlement layer. So whoever can do the escrow and settlement stuff, do optimizing gas costs, do whatever they do at that layer, that should be the settlement layer that's used in this system to just give the user the best execution.
00:42:09.090 - 00:42:15.794, Speaker A: And to me, that's like where Interop should go. And that has a lot of really cool implications.
00:42:15.922 - 00:42:45.822, Speaker B: All right, everyone, we will be back to the program in just a moment. But before we do, I want to share something that Blockworks has been cooking up for these last couple of months. March of this coming year in London, blockworks is hosting Das London, the largest institutionally focused conference in all of Crypto. We are gathering 1200 of the world's largest asset managers. So think TradFi, macro funds, crypto, native funds, big allocators and financial institutions. So banks, payment processors, et cetera, all in one spot. It's very rare to get the likes of Goldman, JPMorgan Zero, 72, whatever, all in one room.
00:42:45.822 - 00:43:05.714, Speaker B: So you can know what the big money is doing. We're diving into the themes that they care about. So we're talking about the intersection of Macro and crypto where we are in the cycle, real world assets. So everything from stablecoins to onchain treasuries to tokenized assets, it's going to be a blast. But the other reason you really want to go is London baby, center of the world. At one point you got pub culture, you got fish and chips, great beer.
00:43:05.762 - 00:43:06.642, Speaker D: It'S going to be a blast.
00:43:06.706 - 00:43:25.338, Speaker B: So because you're such great listeners to Bell Curve, there's a code, Bell 20, that's going to get you 20% off. So click the link at the bottom of this episode, it'll take you right over to the homepage, you'll see all of our speakers and use Bell 20 for 20% off. Ticket prices are going up soon. Make sure you go use that code. I will see you in sunny London town in March.
00:43:25.434 - 00:44:22.910, Speaker C: Let me ask you a question about that middle layer, which would be this really competitive market for sort of we call them searcher builders, let's call it kind of hedge funds, but it could be a Jane Street sort of hedge fund and then it could be some like 14 year old kid in whatever country. One of the things though, that sort of strikes me that the searchers or these fillers or solvers or whatever are going to have to do, they're going to need inventory to basically create those loans or sort of warehouse that risk. And I guess, Mike, how do you generally feel about I feel like if you make that their role, the extension of essentially credit and that looks like a very market makery type role of warehousing and managing risk, how could you as a 14 year old with no inventory, compete on something like that? Especially in sort of an off chain way where you might not have access to flash loans or something like that. That was sort of a Democratizing influence for mev back in the early days of searching.
00:44:24.290 - 00:45:13.562, Speaker A: I mean, I care a lot about that point, Mike, and to be clear, you can't do this without like the reason why this structure works is that I'm just going to use the word filler. We'll use Dan's term uniswap x. We'll call it filler because the filler here needs to have some money to front with their own capital. And unless somebody's willing to trust them with unsecured credit, it's got to be their own money. That said, what we've seen with across is super interesting. And across has a feature here that is different from the uniswap X design, where fillers, when they do fill a user, they can get repaid on the same chain where they filled the user. They don't have to just get repaid on the origin chain.
00:45:13.562 - 00:46:03.742, Speaker A: They can actually get repaid anywhere in the network, which helps them with inventory management. So it's like if I can't do that, I need to have funds on every chain I'm trying to provide liquidity for and I might end up then having funds in the wrong chain and I got to move them around and there's like a cost to that. But across, by letting fillers get repaid on the chain, they just sent funds. We help, we don't solve it, but we mitigate it. And we really do have at the small fill size, so like smaller orders, it's hyper competitive, like hilariously competitive. And it is really, truly like some of these smaller guys are filling a lot of those small orders by doing really sophisticated things that we didn't even think of. So it's not like a perfect answer.
00:46:03.742 - 00:46:24.726, Speaker A: But given that many of the trades that are going to happen here are $500, $1,000, $50, when we start doing L two to L two stuff, I actually am not sure it's as big of a problem as you may think. I think it's possible that for relatively small amounts of capital or inventory, you might be able to do significant market share.
00:46:24.828 - 00:47:33.338, Speaker D: Yeah, it's not a very satisfying answer, but I do think at least in the short run, in the cross chain environment, I think a lot of traditional market makers are very wary about holding funds on a lot of different chains. And so I think fillers might probably, I imagine why you're seeing some of this on a cross fillers might be more risk. You may have these more risk loving, sort of independent fillers being more willing to go to different chains in order to and you have to hold some inventory on other chains in order to do these bridges and people may just be more willing to do that in the long run. Once these things ultimately, hopefully, we're trying to make it not incredibly risky to be holding assets on these chains. So that risk may not actually last that long. But then I think we fall back to what I've been saying all season, which is ultimately, if the game is sufficiently competitive and you don't have high barriers to entry, I think it might actually be the case that sometimes more competitive parties just end up winning. And that might be okay as long as, again, they can't actually extract that much value from that because it's a hyper competitive game and they can't sort of charge too much for users because then someone else will come in and out compete them.
00:47:33.338 - 00:47:54.660, Speaker D: I think ultimately, as long as again, this is low barriers to entry, that might still be an okay situation. And here I think with cross chain liquidity provision, it's like maybe less danger to say, the core consensus protocol of a particular chain, for example, to have this be something that's largely provided by professionalized actors. Although I don't know, maybe there's some downstream effects of it.
00:47:55.270 - 00:48:23.120, Speaker A: Yeah. And I think that's where Dan and I agree. And there will be people on crypto, Twitter that disagree with this, and I think rightfully so, but having no barriers to entry and perfect competition, if that's where you've got you're going to get great execution and great fills and nobody's going to be able to extract excess rent. And maybe at some point, the 14 year old kid in the basement just doesn't have the resources to do that. But that might be okay. That might be an okay trade off.
00:48:24.690 - 00:49:17.790, Speaker C: I think at some point these two different conversations got intertwined and I'm not actually sure they deserve to be intertwined. So on the one hand there's like, how competitive do we want this process to be? Like, are retail swappers getting their best execution that kind of got intertwined with this conversation and this idea that I think uniswap, especially V One and V Two lit under everyone's ass. Like, hey, a retail person can be a market maker. And honestly, I feel like now one of the things that you and I are starting to ask Dan this season is like there's probably going to be a base of retail LPs hopefully, or like sort of passive more retail LPs for a while. But I don't know, I feel like at some point everyone in crypto loves this idea of democratizing open permissionless access. But I do think it's probably a right and good question to ask. Like, should just an average person be a market maker? I think market making is really hard.
00:49:17.790 - 00:49:46.774, Speaker C: Like if we want this system to scale and be really large, I'm not really sure that makes a whole lot of sense actually, from just a first principles sort of thought. So that's kind of where I always end up shaking out on this. I understand that people don't like this idea of kind of moving more things off chain, but I sort of push back against the idea that retail people should somehow we should be designing systems so that retail people can be market makers. I don't think that makes a lot of sense if you sat down and thought about it.
00:49:46.812 - 00:51:11.182, Speaker D: I also think, especially in this context of cross chain bridging, I think the centralization risks of these sort of more off chain protocols pale in comparison to the potential centralization risks of the sort of like on chain lock and mint style protocols where you have, say, one canonical version of a bridged asset from one chain that's being sent to another. I think if you have these on chain bridges, those have much more significant lock in effects. They have much more significant entry barriers to entry, and they potentially have much greater risks if they're compromised. So think about with these off chain protocols, if one party happens to right now be providing the most if there's a truly actually competitive system for providing cross chain bridging, where whatever filler is providing the best price always ends up getting the fill, if that party disappears, someone else maybe can come in to take their place. If there's still a competitive market for it. If you instead have everybody uses one cross chain message passing based bridge where all their ETH is represented as some locked wrapped ETH on the other chain. If that party starts to charge a higher fee for bridging, or if they become malicious, or if they start imposing particular centralization constraints on who's allowed to bridge or what you're allowed to do with the bridged asset.
00:51:11.182 - 00:51:45.918, Speaker D: It's a lot harder for everybody to switch off of that than one where you have this competitive system, where not only is it competitive, but everyone could be using a different one. Or people may not even notice when this fella actually disappears and people can start using a different one because your relationship with the feller only lasts over 1 hour. It's the duration of the transaction at most. And so I think these kind of subtle centralization risks are important and worth noting. But I think, again, we should also look at the very real centralization risks of these kind of on chain lock and mint style bridges. I'm sure. I think heart, I'm preaching to the choir, certainly here with heart.
00:51:46.004 - 00:52:21.240, Speaker A: Oh, my God, I agree. So strong, right? Like the lock and mint bridge is super. I think it's super dangerous. I'm not a fan and I don't like it. And I think that there is such risk of vendor lock in and centralization risks that are super scary and are the antithesis of what the systems we're trying to build are. We have shifted the conversation from your original question again, Mike. So it's like lock and mint bridges are dangerous and have centralization risks in terms of the 14 year old kid in the basement being able to provide market making services.
00:52:21.240 - 00:52:37.200, Speaker A: Look, if they can compete with Jane Street and Win, and honestly, one of them might be able to, I don't know, go for it. All I care about is perfect competition and no vendor lock in. And we want systems that have perfect competition and no vendor lock in.
00:52:38.050 - 00:53:42.466, Speaker C: Yeah, well, I've got a question for you guys, and I'm sort of thinking through this live, which is always dangerous to do on a podcast, but I sort of wonder what that ultimately I heard Preston Evans of Sovereign Labs describe this sort of framework for what he calls trust zones. His perspective was that, look, we're never going to fully solve the Bridging interrupt problem in between these different l one ecosystems. And instead we're going to have these kind of trust zones where the sort of roll up ethereum main chain sort of ecosystem for something like ETH and Salana will have its own one as well. And on the one hand, I think I'm sort of torn in between this vision know, at the end of the know, sometime soon in the future, apps are just going to we're going to abstract away all this stuff underneath, and you're not even going to notice any of this stuff. But I guess my question to you is what is the time frame that you see that happening on? Because my user experience as someone who does stuff on chain, you do it by ecosystem. You start with like, okay, I've got some ethereum and I'm going to go play around. What can I do? Oh, I can go to a roll up and I can trade some stuff.
00:53:42.466 - 00:54:28.580, Speaker C: You know what I mean? And what I'm hearing from you is that there's a fundamental problem with lock and mint, right? And what that restricts you on is you can't as a user of Ethereum, I can't take my Ethereum and go use all the Solana cool stuff or all the cool stuff on Cosmos. So it does if we just accept that principle that lock and Mint bridges and is not a really good way to solve interoperability, then at least for the time being, I kind of do see these at least from a user perspective, right? Like, I still do see my worlds as being segmented across these different ecosystems. And I'm curious if you guys agree with that or push back on me. And if so, when do we get to this vision that we've all been talking about about you just sign into a Dex and you can trade across whatever or do whatever you want?
00:54:29.910 - 00:54:51.578, Speaker A: Well, you can trade across them, but I don't get why I want my ETH on Salana. I don't get that. That doesn't really make sense to me. What I do get, but this is a different thing I do get that I might have like, ten grand of ETH and I want a loan on Salana. Fine, okay. That could be useful. I do get that.
00:54:51.578 - 00:55:05.740, Speaker A: But I don't get the other version of it. Like trading ETH, trying to do like an ETH uni trade, like uni token trade on Solana doesn't really make sense to me. I don't know, Dan, what do you.
00:55:06.130 - 00:55:45.206, Speaker D: I mean, I think bridges are sort of the least of the constraints, right know, right now you have to switch wallets. You have to switch a lot of things to switch between between in the cosmos world or Solana world or ethereum world. So I think those are a lot of the constraints right now. Ultimately, I think you can go a long way. With just sort of like getting paid in Seoul or something, being able to swap your ETH for Seoul. And I think we will unlock quite a lot once you're able to very easily move value from one chain to another. And, like often, yeah, when you actually want to be doing stuff on Solana and one of these other ecosystems, you probably don't actually want to be doing it with ETH.
00:55:45.206 - 00:56:16.420, Speaker D: Most likely, you want to be doing it with Sol or maybe with USDC or another thing. And we should maybe talk also about the elephant in the room here, which I think the USDC bridging, which is a very powerful thing, but potentially kind of contributes to some of the network effects that stablecoin issuers have. But ultimately, right now, the idea that we want to actually be trading bridged assets on these other chains rather than going into native or going into other assets there, I think is I sort of want to interiorate that a bit.
00:56:19.530 - 00:57:03.682, Speaker A: One thing I would want to do that I think is quite doable under this framework we're talking about is I sign an order on Ethereum that says I want to go and do this action on the solana blockchain that requires me to pay in. Like let's just say it's like the action is I wanted to go play blackjack on this application on solana blockchain. I have to pay in Seoul, but I sign this intent on Ethereum, and it just gets handled for like, that makes sense to me. And that's exactly what this framework we're talking about enables, because you have the filler, just go and do the thing on the soul chain for you without you leaving your native wallet. And if you extend this forward, this goes yeah, sorry.
00:57:03.736 - 00:57:11.320, Speaker D: Go on, go on. That's interesting. So every transaction like, I could just do a lot of transactions on Ethereum every time, just basically paying out of my.
00:57:13.690 - 00:57:48.254, Speaker A: If you and I've I don't know if you and I have talked about this, but something that I think is like when you take the intense stuff to its logical conclusion. I just am signing messages that let's just say I have a piggy bank. Like, I have a Venmo account on a chain. And I've actually thought about, like, you have Venmo chain. You have an account on Venmo chain that has some funds in it, and I just sign messages that say, I want to spend out of my Venmo chain to do this action on optimism, on casino chain, on Solana, whatever. Right. And you have the network of solvers or fillers that are perfectly competitive.
00:57:48.254 - 00:58:15.370, Speaker A: They just go and do the thing for you, and they get paid back out of your Venmo chain after a delay. Right. Sorry. They get paid back after the delay. Your action happens almost instantaneously. And if you think about that, this is what I think is like a cool version for Interop, where I'm in one wallet, signing one set of things, and the solver network is the one that's just executing for me. And then I think you're into a cool world of chain abstraction.
00:58:16.030 - 00:58:27.920, Speaker D: That is fascinating. I'm not sure I believe that full extended version will be sufficiently efficient. You still have to do some transaction on the source chain, I would think, every time. Although I guess you could have a payment channel. Anyway, this is interesting.
00:58:28.290 - 00:58:29.040, Speaker A: Why?
00:58:29.490 - 00:58:44.820, Speaker D: Well, in order to prevent me from double spending on the origin chain, I'm going to have to do something that's going to prevent me from spending on multiple things. You're going to have to somehow lock my eiffel on that chain. But it could be sorry.
00:58:46.950 - 00:58:51.278, Speaker A: Your Venmo chain would have to be like, time locked, where I take all my money.
00:58:51.384 - 00:59:02.858, Speaker D: If I could open a payment channel with someone who's doing that on the other chain. So maybe that's very interesting. Ultimately. Look at this. Yeah. Which would be very cool. And I think this is true about the generalized intense thing.
00:59:02.858 - 00:59:58.762, Speaker D: This would all be very cool, but right now, it's kind of scandalous that I can't even make a payment to someone on another chain right now. There's no easy way for me to pay someone sol on a chain. And in fact, the example that's really getting me agitated right now is USDT on Tron, of all things, is that apparently a lot of places in the world you can pay someone in crypto. You can pay someone in USDT on Tron at, like, a convenience store, which is sort of wild that you can do this, but I don't want to hold USDT on Tron personally, but maybe I would want to pay someone who wants to receive it. And so if I want to make payments, if I have my ethereum wallet, why can't I actually just scan one of those links and make a payment to them? And so that's a very clear intent of just like, I want to actually deliver money to somebody on this chain that I would never want to touch with a ten foot pole. I don't want to have a Tron wallet even, let's say. But I do actually want to make a payment to someone who does.
00:59:58.762 - 01:00:02.750, Speaker D: That should be completely abstract for me. I should just be able to pay anyone on any chain.
01:00:03.410 - 01:00:29.618, Speaker A: So, Dan, this example you bring up is hilarious because I am here in Istanbul, and USDT on Tron is like, everywhere. You can pay for it everywhere. And you can go to the Grand Bazaar. That's nuts, Mike. Like, there's a whole other podcast. Like, I went to the Grand Bazaar and got a tour of these money businesses. You can exchange $10 million of cash money, like USD cash for Tron.
01:00:29.618 - 01:00:42.342, Speaker A: USD on tron in the Grand Bazaar in Istanbul. They have money carts, they roll. It's absolutely wild. There's a whole other world there that's a different podcast but my point is it's a major podcast.
01:00:42.406 - 01:00:44.380, Speaker C: That's a nuts. That's crazy.
01:00:45.790 - 01:00:48.540, Speaker D: Next season next season should be.
01:00:51.310 - 01:01:31.100, Speaker A: Completely wild. And Dan Tarun went and he actually did, we should ask him about this. He did buy something, he bought a beer or something with USDT on Tron and I don't have a Tron wallet, I couldn't do this. And they like it here a lot. But you're right, we need a cross protocol to support Tron, which is weird and they have to think about so that you could have a relayer fill your beer purchase on the Tron blockchain near instantaneously and okay, that'll go on our product roadmap but we should be able to do that.
01:01:32.670 - 01:02:28.490, Speaker C: All right, that's a whole other camp. But I want to ask you Hart, because maybe just in closing here, I would love to get a sense I always love talking to operators and kind of the metrics and what you pay a lot of attention to. So we've sort of talked about this idea of reducing the amount of messages that get sent which kind of goes against the orthodoxy of more traditional sort of lock and mint bridge designs. You are really big on this idea of capital efficiency. So I would love to get a sense from you about what do your customers find that are super important? I would guess just the cost of Bridging, maybe time. I know you tend to focus a lot on capital efficiency and then if we could just get into a little bit of the strategy of what it is to run one of these bridges and how do you compete and whether or not you see big power laws across these different types of bridges as well. Maybe we can just talk about that in closing.
01:02:29.390 - 01:03:38.686, Speaker A: Yeah, well, okay, what does the user care about? They want to bridge assets, canonical assets. They want to bridge them as quickly as possible and as cheap as possible. And those are the things I think this space needs to care about a lot more than anything else. And capital efficiency here really matters, but it ultimately matters into what are your costs here versus speed and all that. So in my example, that an hour loan at a 10% rate costs a 10th of a basis point in price terms means that okay if you can use a loan to offer a user a faster experience and actually save money because your gas fees are cheaper, when you're using this intense based bridge design, that's like a good trade off. So our entire time in designing our protocol is how do we make the right trade off here to give the user the long run, sustainable, cheapest bridge design and small shill. But Mike across Bridging on across is cheaper than the canonical bridge on optimism or Arbitrum or Polygon.
01:03:38.686 - 01:04:42.760, Speaker A: The Bridging costs are cheaper than the native canonical bridge because of all of these gas efficiencies and it's way, way faster too. So my metric is just like, how do we make this thing cheap and how do we do smart things with money? How do we actually use these loans effectively to give a great bridge experience? What I don't think is useful is looking at the metric of number of bridge transactions or number of messages passed. Number of messages passed. Like every message you pass is expensive and or costly or like it's the wrong thing you want to do. You want to stop sending messages because as Dan and I just walked through, you can do a really elegant, cheaper, faster bridge design without sending any messages at kind of I kind of laugh a little bit like when Brian from layer zero posts on Twitter, the number of layer zero messages are up into the right. I'm thinking you're just wasting gas and or doing inefficient things and that's not the right thing to focus on. So that's my take.
01:04:43.690 - 01:05:41.290, Speaker C: All right, last two questions for you. One. I cheated a little bit and asked you before the podcast here but my mental model again for bridges the traditional lock and mint bridge the strategy very similar to like a liquid staking token provider where there's very large power laws and you're trying to compete on brand and liquidity something like a lido, and you want to be the canonical representation of staked ETH. Something like that. I would guess that's what you want to do for lock and mint bridges as well, right? If you're going to have Ethereum represented on Solana, even if we think that doesn't necessarily make sense, you want to be the canonical version of that, right? So would assume sort of insane power laws and you also kind of want to have a relationship with the consumer, I guess, in these other alternative bridge designs that we're talking about, hart, who ultimately has the relationship with the consumer. And then in terms of bridges, do you see the same kind of power laws that we might see in something like Stablecoins or LSTs or does it end up being a little bit more fragmented or a different market structure?
01:05:42.670 - 01:05:47.578, Speaker A: Okay, trying to do this quickly, right? I think the majority saved like the.
01:05:47.584 - 01:05:50.060, Speaker C: Biggest question for the last 5 minutes there.
01:05:51.230 - 01:06:28.780, Speaker A: I think the majority of value that's going to be moved between chains is major assets going to be USDC, USDT and ETH. And we still maybe need to talk about the Circle Bridge problem in a second, but we'll come back to that. I think major assets are going to be the major thing you're moving between chains. I think you see that in Dex volumes today, like 60% to 80% of Dex volumes is trading between major assets. So those assets are not going to ever be in. They don't want to be controlled by some other Bridging infrastructure. That's like scary for them.
01:06:28.780 - 01:07:39.246, Speaker A: And I don't think Ethereum is never going to be really cool and really on board with some other protocol controlling a huge amount of ethereum supply in a lock and mint design on another chain, that's just going to be really scary and I don't think that's what you're going to want. Okay, so I think that the lock and mint bridges maybe make sense for longer tail assets that have this idea of them wanting to move between chains. I'm still not convinced that that's like a huge opportunity, but I could see some developers thinking that's interesting. So that's where maybe they're okay with a vendor lock in concept and using something like layer zero's oft standard, even though I think there's some risks around vendor lock in there. Leaving that aside, your other question is who owns the relationship with the user here? And I go back to the relationship with the user is owned by whomever is generating the user intent or the limit order. So if Uniswap X is the source where users are trying to bridge between chains, they own the relationship with the user. If it's a bridge aggregator like Socket or Lefi, they own the relationship.
01:07:39.246 - 01:08:03.960, Speaker A: If in my example there's some of my Venmo chain lets you do something on Tron, they're owning the relationship with the user. And where I think across fits in is where this settlement layer that's behind the scenes, that's deep in the stack, but is providing this escrow and settlement services for this intent based bridge design. So that's me speed running the question.
01:08:05.450 - 01:08:21.680, Speaker C: Awesome. That was really helpful. Hart, this has been awesome, my man. Really glad that we could make history here with you and Dan on one podcast. This is great. If folks want to find out more about you or follow the work that you're doing at across, what's the best way to do it?
01:08:22.130 - 01:08:31.680, Speaker A: I'm on Twitter at Hal 2001. Hal 2001 and across protocol on Twitter too. Yeah. And thanks for having me.
01:08:32.050 - 01:08:42.370, Speaker C: Awesome. Thanks, guys. This was a fun one. All right, well, Dan, that was a ton of fun with Heart. That was just a lot of energy on that episode. Very great.
01:08:42.520 - 01:08:45.634, Speaker D: Yeah, no, I love chatting with Guess.
01:08:45.752 - 01:08:52.200, Speaker C: You know, the first question that feels appropriate to ask now that Hart is in here is, aren't you invested in his startups, man? Come on.
01:08:52.970 - 01:09:11.630, Speaker D: You guys are always a smart guy, right? The timing's never been right for various reasons, sadly. But I love Hard and have a lot of respect for him. He and I have talked about a lot of ideas and a lot of stuff, including stuff like the yield protocol, which paper I worked on a few years ago, was very inspired by conversations with him.
01:09:11.780 - 01:09:40.982, Speaker C: Yeah, well, it came across to this conversation and I guess first takeaway kind of rip mitten lock chains. I think both you and Hart not big supporters of that design. I guess it felt a little almost not one sided. And if that's just not a great architecture. It's not a great architecture, but if we had to steel man the other side of it, is there any additional nuance that we might have missed or an additional point for why that design might actually make sense?
01:09:41.036 - 01:10:35.462, Speaker D: Yeah, I think there's one really clear one, which is it is often very useful to have a representation of a foreign asset on a chain. And I think one example is bitcoin on Ethereum, right? It's very useful to have some representation of bitcoin on Ethereum and inherently there's sort of two ways to do that. One of them is with a synthetic that is backed by collateral on Ethereum and the other is to have some kind of lock and mint bridge where you can lock up bitcoin on bitcoin and it's back in one to one. Some token on ethereum. And the latter kind is how centralized or somewhat centralized systems like WBDC work. It's also how more decentralized ones like TBDC work. But ultimately you still have this lock and mint pattern and it sort of is the only way to do that capital visually the alternative where you have collateral and it's sort of a synthetic works.
01:10:35.462 - 01:10:55.950, Speaker D: But again, that requires potentially a lot of capital and someone to provide a lot of collateral on that chain. So if you want that model, and I think there are cases where you want it, it could be very powerful. But when someone just wants like a user just wants to actually move from one chain to another, I think it's usually, I would say, probably not the most efficient.
01:10:56.450 - 01:11:16.740, Speaker C: Yeah, yeah, I tend to agree with you. So one thing that we didn't really get to talk about during the episode, but I actually want to ask you about two sort of cross chain interop solutions that have popped up and are gaining a little bit of steam. So we started to talk about the USDC centric solution. So it's CCTP, a Circle cross chain transfer protocol, something like that. And then also chainlink has a.
01:11:18.710 - 01:11:19.026, Speaker D: Know.
01:11:19.048 - 01:11:49.150, Speaker C: I guess my question to you is we didn't really talk that much about Circle solution. Hart mentioned just at the end of that interview that he thinks there's basically going to be power law of assets if most people don't really care about Bridging, the long tail. And most of the volume that people are going to want to transfer or swap into and out of are USDC ETH kind of the big ones. Then when you talk about Circle having their own native Bridging sort of solution, it's like, well, they get a good bit of the volume just there. So what do you think about Circle Ccdb?
01:11:49.650 - 01:12:46.994, Speaker D: Yeah. CTB it's based on a very powerful realization, which is if you have a custodial asset that's being issued by some party on one chain, the best way to bridge that asset generally is to do it in a way that's native to the asset and just has exactly the same trust requirements as the asset itself. Or arguably, that's the best way. And so you might as well just have burn your USDC on one chain, go give it, have Circle effectively act as a bridge for you so that you can burn it on one chain and mint it on another chain. And then once you have that, it's very powerful because you could imagine even if the asset you want to bridge isn't Circle, you might be able to trade isn't USDC, you might be able to trade your asset for USDC on that chain and then trade it somewhere else. Or even if the asset, you actually don't want to trade it for USDC. Funny enough, if you are just willing to trust Circle, they're kind of operating a bridge right now.
01:12:46.994 - 01:13:46.290, Speaker D: So one funny hack I've seen used to suggest it as a way to take advantage of this bridge is just to you could imagine sending a message I'm sorry? Sending a message between chains by just sending USDC to one way of USDC to a particular address and having that address actually be the hash of the message that you want to send. And so just sort of hacking Circle to use them as a bridge. But because if they're already running this really high stakes bridge there, maybe you might as well use that. So it's a very powerful idea. I do think it poses some risks for the same reason that having a dominant stablecoin on any chain poses risks for the centralization of that chain, which is ultimately putting a lot of power in one party's hands functionally or on one particular bridge. And so I think it's a risk to have that. But that said, we already have that risk on any one chain with USDC, right? If someone were to compromise the USDC minting keys, then the consequences on Ethereum at least would be very severe.
01:13:46.290 - 01:14:01.718, Speaker D: And so to some extent you already are trusting that to a great degree, which doesn't give me a warm fuzzy feeling inside, but does make me think, okay, maybe you might as well just do it for a cross chain bridge.
01:14:01.894 - 01:14:38.030, Speaker C: Do you think that ultimately, isn't this eventually something that we're going to have to come to and face? Because isn't the whole point of these smart contracting platforms to develop apps that have product market fit? What is Circle if not an app that has product market fit? And then eventually, hopefully this doesn't end up happening. But it's kind of a feature of blockchain, right, is that you have these sort of hard forks and eventually then it seems like the circles of the world or the Coinbases of the world or the tethers of the world, right, are going to have an enormous amount of say in terms of what is the canonical chain. Do you subscribe to that idea that sort of inevitably these apps are going to have a lot of power in that regard.
01:14:38.200 - 01:15:38.454, Speaker D: Yeah, well, I think for custodial apps, it is a big concern. For an app that isn't custodial, then I think it might be sort of a different situation. I think it asks maybe an even bigger question, which is, if we start trusting essentially USDC to run a bridge between these chains, right? Then why aren't we actually just having USDC run a ledger? Why aren't we just using like, why can't we just transact natively in USDC on their ledger and have them keep track of everybody's balances and sort of functionally just have them run their own chain like a one of one chain? And it's maybe an important question. I think the value of USDC especially is when you start using it with other things. And so to some extent, what actually gives it its value is you're going to be using it, trading it for Ethan on some other chain. Right. And that's something that you wouldn't want to trust Circle entirely on, is to run the ledger that has all the other assets on it.
01:15:38.454 - 01:16:01.310, Speaker D: So I think in some sense, having this interoperability zone where USDC is responsible for USDC transfers across chains and you could maybe imagine a world where they were able to just operate USDC payments between people might be fine. If again, the point is then is interoperability between this ledger that Circle effectively is running with other ledgers that are running different or more decentralized applications?
01:16:01.970 - 01:16:06.318, Speaker C: Man, that's a good question. I hadn't really taken it to that extreme. But yeah, that's probably when we get.
01:16:06.324 - 01:16:28.562, Speaker D: To USDT on Tron. I mean, if that's how everyone's transferring USDT and it's because it's so cheap, I don't know why isn't Tether just running a ledger? Right? And I think there may actually be regulatory reasons why why there's a difference. But yeah, it sort of does make you wonder. It's like, all right, actually, why don't they just keep a database? I don't know if mostly what's being done is just simple payments.
01:16:28.706 - 01:17:01.982, Speaker C: Yeah, Tether is that one's an enigma for me. That was really interesting antidote that we got from Hart. Yeah, that one maybe will remain a mystery for a little while longer. But what do you think about CCIP, which is sort of the I mean, it was interesting, by the way, I'm glad Hart sort know, clarified. I was a little bit confused with how you guys were referring to Oracles. But chainlink has its own sort know, cross chain interoperability sort of solution, which is what they're dubbing CCIP. I don't know if you poked around at that at all or have any thoughts.
01:17:02.126 - 01:17:27.846, Speaker D: I've only looked a little at it, so I can't talk about the details. But it makes a lot of sense to me logically, because I think of from a technical perspective, a one way message passing bridge is just an oracle. It's just an oracle on one chain for the state of another chain. A two way message passing bridge, which is all you need to create. Like you have to wrap tokens in your lock and mint pattern across these chains. It's just two one way Oracles between these particular chains.
01:17:27.878 - 01:17:28.122, Speaker A: Right?
01:17:28.176 - 01:18:31.966, Speaker D: And so if you have an Oracle protocol, then it makes a lot of sense to use it as a bridge and then to natively build that in. I'm not familiar with the details of how all the rest of CCIP is built around that, but it just makes sense to me that if you have an Oracle, you might as well use it as a bridge or that that would be a compelling possible use case for it. But I would flip it around and say just like actually when we talk about bridges, often what we are talking about is Oracle is that they're all actually competing in this Oracle sphere. One thing I'll say though is with bridges you actually have a lot more power than you do with. If you have an Oracle for something that's a completely off chain fact, then you sort of are going to need some kind of trust assumption or some multi party something or other for it, some subjectivity ultimately there. I do think if you've got a message going across blockchains, blockchains are to some extent legible things in theory. At least one blockchain maybe should be able to, for example, parse another or interpret a zero knowledge proof about the state of another.
01:18:31.966 - 01:19:06.682, Speaker D: And if you have a cross chain messaging system that doesn't make use of any of that or at least of all of it as much as you can, that seems unfortunate in the long run. It seems to me like ultimately the ground truth ideally of cross blockchain communication should involve for example, the consensus protocols of those chains or the validation rules of those chains. And I don't know if that's I'm not sure whether maybe in the long wind chain link does do that, but I think just treating it as the same kind of problem as being learning about who won a football game or something, I think it's reducing it to maybe a harder problem. Yeah.
01:19:06.816 - 01:19:43.334, Speaker C: Let me ask you, one of the things that people have been talking about in crypto for as long as at least I've been in the space has been sort of this idealized state where you and I ideally don't talk about any of this. We're not on a podcast talking about interoperability because it just works and no one even understands that it's a problem. And you just interface with your app and then it does all the stuff that you want it to do. How far do you think we are out from that standpoint? Just because I even remember being in 2018 time frame where people thought that this was not going to be a problem within like a year or two or something like that. And here we still are in there.
01:19:43.452 - 01:19:44.278, Speaker D: That what was not going to be.
01:19:44.284 - 01:20:10.670, Speaker C: A problem, that interoperable like that bridges were going to come and it was going to solve some of the breakdowns in between these different blockchains and the future was going to be MultiChain. But that was okay because there were bridges. And here we still are all these hacks, and we're still debating about different families of bridges and what the sort of trade offs are. So I guess if you had to put a time frame on really solving 80% of these problems I mean how far away are we still?
01:20:10.740 - 01:21:27.710, Speaker D: Yeah, I think there's sort of two problems. One is from a user experience perspective, can we actually have the experience of a user switching between chains being a lot better? I think some of that comes from tech like uniswap X or I think across just sort of abstracting away a lot of the root complexity for a user and making it easier. Some of it's going to depend on wallets and just other parts of user experience from switching chains that I think are really challenging. But I think all that we sort of have a line on the other part of it is at the base level what are all these protocols sort of built on top of? And I do worry that we'll end up with a lot built on kind of more rickety foundations than we would have thought we would have. I think even when you look at l two bridges or cross l two bridges you see a lot of kind of bridges that don't ultimately resolve down to the canonical bridges, which seems like a shame. And for various reasons of efficiency or convenience, I think often people or protocols end up using different kind of trust assumptions for that. I think in the long run I would assume that everything ends up using the canonical bridge as a source of truth.
01:21:27.710 - 01:22:07.826, Speaker D: I'm not so sure because ultimately actually a canonical bridge even is still potentially a big honey pot, right? And so actually maybe having multiple sources of truth and multiple bridges is actually not as bad. So I'm not so sure. Ultimately I don't think we're going to have one big solution for that second problem of the ground truth. I think it's going to be a lot of hacks built on top of hacks and just things that kind of barely hold together for the user experience. I have more confidence that if all this stuff is working it's because we've really abstracted this away for users and it's actually pretty simple to move money from one chain to another.
01:22:08.008 - 01:22:34.880, Speaker C: Yeah, I would agree with that. I think it's very confusing from the perspective of a user because a just imagine you don't know these words like optimism or Arbitrum or ethereum or whatever and you get your first mobile wallet and it's like I have these options to be on which chain you're like? Well I don't know. What this means. I mean, is one of these chains better than the other chains? Like, what am I deciding between here? If you really take yourself out of it for a second, it's wildly confusing to users at your first experience.
01:22:35.250 - 01:23:09.400, Speaker D: Yeah. And I have this strong opinion now that I think especially something like payments, which we talked about a bit on the podcast, something about Payments, I think just should be I should be able to pay someone no matter what chain they're on from my chain without having to go bridge over to their chain and then make a payment to them or have assets on that chain. And that's something. And then I think we get into I think Hart had an even crazier idea for this was cool talking about cross chain intents, but I think that's sort of a start where it just shouldn't actually be part of the user experience to have to bridge between chains in order to use an application or certainly make a payment to someone who's on the other.
01:23:11.290 - 01:23:14.006, Speaker C: His and what he? I think he sort of called it Venmo chain.
01:23:14.038 - 01:23:14.234, Speaker A: Right.
01:23:14.272 - 01:24:11.950, Speaker C: Where if you take intents to their logical conclusion, you can just sit and have your balance of, let's say, ethereum. And whenever I want to make a payment, you kind of submit it to this hive of searcher, filler, solver, whatever word you want to describe, and they go off and kind of do that for you in a really optimized way, and your balance just gets debited or whatever. So that kind of does seem like the ultimate future. And I actually think there was a podcast where you were describing, even from the perspective of a mechanism designer, when you kind of designed these solutions that required kind of left some money on the ground for people to pick it up. There was a time in crypto's recent history where people wouldn't come and pick some of that money up, but now that's a little bit different, and people will generally come pick up money if you leave it around. And maybe that's the same analogy for these sort of searchers and these third party networks of people that will go and do this stuff, execute payments or transactions on users behalf. We just got to wait a little for it to be a thing.
01:24:12.100 - 01:25:02.300, Speaker D: Yeah, I think it's going to start with the very basic stuff. If I have an asset on this chain and want an asset on this chain, or I want to have an asset on this chain, and I want someone to pay someone else who's on this other chain, I think people might be getting ahead of themselves with the other stuff. But yeah, I think in the long run, maybe it's entirely abstract and I can use an asset from any chain. I think there are some challenges to that. And so one of them I was talking about on the podcast was just if I have to do a transaction on both chains in order to interact with an application, and I want to do a lot of interactions with that application that seems very inefficient. And if I have to make a trade of one asset for another every time I think I'm going to pay more ultimately in spreads, if I'm trading USDC for ETH or something, every time I do a transaction, I'm going to end up paying more than if I did one big transaction. I would expect.
01:25:02.300 - 01:25:25.460, Speaker D: That's not necessarily always true from it from an exchange structure point of view. So maybe not. But you'd think there'd be a lot of overhead in a lot of these and there's reasons. Oh, yes. And if I want to do something atomically right. It just helps to be colocated basically on the same chain in the same execution environment as something. It is interesting to think about.
01:25:25.460 - 01:25:40.840, Speaker D: Why do I need all that? I don't know. I just hadn't really thought about about it this that much until I was thinking about it live today. And I was is this is actually kind of interesting. So I want to follow up with heart a bit about that. Yeah, I think that'd be a good idea.
01:25:41.610 - 01:25:46.966, Speaker C: All right, Dan, this was a really fun episode and I will see you next week.
01:25:47.148 - 01:25:47.780, Speaker D: See you next week.
