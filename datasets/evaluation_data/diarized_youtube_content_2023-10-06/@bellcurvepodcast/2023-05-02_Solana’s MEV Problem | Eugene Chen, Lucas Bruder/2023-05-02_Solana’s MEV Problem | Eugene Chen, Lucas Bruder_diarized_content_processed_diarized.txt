00:00:00.090 - 00:00:22.318, Speaker A: Alright everyone, welcome back to another episode of Bell Curve. Before we jump in, quick disclaimer. The views expressed by my co host today are their personal views and they do not represent the views of any organization with which the co hosts are associated with. Nothing in the episode is construed or relied upon as financial, technical, tax, legal, or other advice. You know the deal.
00:00:22.404 - 00:00:24.270, Speaker B: Now let's jump into the episode.
00:00:26.650 - 00:00:54.574, Speaker A: Hey everyone. Before we get into it today, just want to give a quick shout out to this season sponsor, Rook. Close to a billion dollars worth of Mev has been taken out of users'pockets and that's just on Ethereum, and that number is only getting larger. Unfortunately, Rook thinks that it's time for a change and they've built a solution which is going to automatically redirect that mev back to where it belongs into the user's pocket. So you're going to be hearing all about them later in the show. I'm a huge fan of this team and what they're building, so stay tuned to find out more.
00:00:54.612 - 00:01:13.774, Speaker C: Right now, Mev is costing these AMM liquidity providers hundreds of millions of dollars per year. Regular traders are paying tens of millions of dollars per year. And this is just like so fundamentally unsustainable. It just cannot be the backbone of the future of finance. But no one wants to talk about it because the profits are all redistributed to Epholder.
00:01:13.822 - 00:01:14.354, Speaker B: Welcome back.
00:01:14.392 - 00:01:23.942, Speaker A: Another fun episode here. We're going to be talking about Mev on Solana. You want to give a quick intro for who we've got on here and why we've invited them?
00:01:23.996 - 00:02:06.610, Speaker D: Yeah. So we have two outstanding guests. I've been looking forward to this episode on Solana because Mev on Solana works quite different from Mev on Ethereum, at least today, and I think we'll tease out why that is, but also how it's going to develop and whether the two are actually going to converge. I think another big topic definitely is going to be the role of latency. So Solana is a chain that puts low latency everywhere. Having a low latency chain, that is the thing, the reason why Solana was created. And I think that's why we get into some of the nitty gritty and also some of the ideological debate about how low latency does your chain need to be in order to be useful.
00:02:06.610 - 00:02:54.190, Speaker D: But also, what might some of the effects be on the chain. And so we brought on Eugene Chen. So he's a zero X shit trader on Twitter and he's like a longtime contributor and lurker in the flashboards Mev forums and on all topics mev, he's building a central limit order book exchange on Solana, so he knows exactly the experience of what that's like. And then we'd have Lucas Bruder and he is, I think, the founder of the they are trying to build the quote unquote flashbots of Solana in the sense that they want to basically do an Mev auction in Solana. And I think in diving deeper into this episode, we'll see exactly what the challenges are with that and how that differs from Flashbots on Ethereum.
00:02:54.270 - 00:03:07.206, Speaker A: Yeah. All right, let's get right into it. All right, everyone, welcome back to another episode of Bell Curve. Today, hasu and I are joined by Eugene Chen of Ellipsis Labs and Lucas Bruder of guys, welcome.
00:03:07.308 - 00:03:09.074, Speaker B: Hey, thanks for having me.
00:03:09.212 - 00:03:10.218, Speaker D: Come to the show, guys.
00:03:10.304 - 00:03:47.746, Speaker A: Yeah, absolutely. All right, so we're super excited here because has and I have spent most of this season focused on mev from the perspective of Ethereum and some of the activity there. Obviously, you two are very focused on the Solana ecosystem. So very excited to pick your brain about some of the differences about how mev works on Solana. So maybe using that as a jumping off point, either Lucas or Eugene, whoever wants to take this first, what are, at a high level, some of the big differences between how mev works on Solana versus if you were an expert on mev and Ethereum, what are the most important differences to know?
00:03:47.768 - 00:04:33.794, Speaker B: Hasu has this famous slide of the transaction supply chain. I think it's kind of worth diving into that on Solana because I think it kind of gives you a good high level understanding of how a transaction flows through the system and why things are the way they are. So if you look at Ethereum to start out with, the user signs a transaction in their wallet, wallet, sends it to the mempool. You have validators and searchers looking to capture mev. Maybe there's mev, maybe there isn't. You have a lot of builders that are kind of suggesting these blocks to build and proposer. Just takes the highest one, basically and confirms it.
00:04:33.794 - 00:05:13.866, Speaker B: So on Solana, it's very similar for the first half. So you go to like, Jupiter aggregator or some other application on Solana. Say you want to buy some Solana token, you sign in your wallet, the wallet will send the transaction to the current and next few block producers. So I think there's a big difference here compared to Ethereum, where Ethereum has a mempool salona doesn't have a mem pool. So essentially what's going on is leaders changing every 1.6 seconds. They have four consecutive slots in a row.
00:05:13.866 - 00:06:13.998, Speaker B: And so when you send the transaction to the RPC server, it's figuring out, looking at the current slot time, figuring out who the current leader is, and then the next few leaders, and it will send the transaction to each one of those leaders. And then it goes into this kind of black box that executes the transaction, and the transaction will basically execute it as fast as possible and streamed out as fast as possible as well. So that's kind of another major difference compared to Ethereum. Ethereum has, like, discrete time windows where the state will change. And I think that's every like eleven or 12 seconds on Salana, the state is constantly changing. So the Salana is constantly executing. It'll receive the transactions and start to execute them as soon as possible and it will basically send out those they're called Shreds.
00:06:13.998 - 00:07:11.702, Speaker B: They're essentially mini blocks and all the other RPC servers are replaying those Shreds. You know, after that it will get definitely I guess that's a good high level of Solana to Ethereum. What ends up happening on Solana is know there are people that because the state's always changing, you're trying to ingest that state as fast as possible. So what ends up happening is that people will try to get in kind of like high staked regions like Amsterdam, Frankfurt, Tokyo. There's a few others. People run like modified RPC algorithms to replay things faster and you just see a lot of spam as well where people are kind of like reacting to what's happening because there's no mempool. You can't really atomically bundle things so they're kind of reacting as fast as possible.
00:07:11.836 - 00:07:19.898, Speaker A: Yeah. Lucas, thank you. That was a really helpful overview. I don't know, Eugene, if you have anything to add before we move forward here.
00:07:19.984 - 00:08:27.774, Speaker C: Yeah, I think those are the main structural differences between Solana and Ethereum as far as things that might affect the mev supply chain. I think the competitive landscape is also quite interesting to look at, where mev searching on Ethereum appears to be very, very competitive, relatively efficient, which is quite different from Solana, where today it's still quite primitive. I think there's a couple aspects here. One is that validators are mostly benevolent in practice, which is kind of a luxury, but not something that we can depend on forever. And searching is also quite uncompetitive, although, as Lucas mentioned, it does impose negative externalities on the chain like filling block space with failed transactions. I think in many ways mev on Solana today is quite similar to what it looked like on Ethereum in 2019 or early 2020 pre flashbots when mev was just starting to become a problem. But on the infrastructure and research side, I think we have a huge advantage because Ethereum has already gone through this.
00:08:27.774 - 00:08:37.810, Speaker C: So there's a ton of fundamental mev research that's already been done and we have a much better sense of the problem space than Ethereum did in 2019.
00:08:39.910 - 00:09:15.546, Speaker D: So I would like to dig into something that you said, Lucas. So you said that Salana doesn't have a mempool, which is something I didn't know and I find quite interesting. So I want to explore a little bit more what it means in practice. So in Ethereum we have this problem where transactions, they leak, quote, unquote to the public. Mempool and searchers can pick them up and they can front run them, right. They can submit them as bundles to block builders. So it kind of sounds like that's currently not a thing in Solana.
00:09:15.546 - 00:09:46.246, Speaker D: Correct me if I'm wrong, but at the same time there are a bunch of parties even though it's not publicly gossiped who can presumably see the transaction, which may include the application, the wallet, the RPC, the current Validator, and all of the future Validators who it gets also gossip to. Right. Is that also what you meant, Eugene, when you said that Validators are today mostly benevolent in the sense that even though they could front run transactions, they do not?
00:09:46.428 - 00:10:23.886, Speaker C: To answer that specific question, I believe that to be the case. At least I haven't seen any evidence of it, although Lucas has probably looked into the data a little bit more. I think front running is also just less of an issue on Solana than Ethereum, almost fundamentally because the DeFi protocol design looks a little bit different. So we see much less of things like placing an order on an AMM with 95% slippage tolerance that exposes you to sandwiching and front running. I think in practice, just the back running is going to be much more profitable and it's also less toxic to the user.
00:10:23.998 - 00:11:11.410, Speaker B: Yeah, I elaborate on that. We haven't seen any issues or any front running pop up yet, but is something that we are looking into, I think as there's more DeFi happening on Solana and you just have more composability and it becomes more attractive and profitable to do these things, I think it is probably going to happen. I think there's a good chance it would have happened sooner if the Validator was a little simpler. I think the engineering curve for modifying the Validator to do these things is very complex. So if the system was simpler, we might have seen it sooner.
00:11:12.310 - 00:11:33.290, Speaker D: So if I'm a searcher today, let's ignore the notion that front running is maybe not as attractive due to the application layer design. But if I wanted to front run users as a searcher, then what would be the best way to do it? Would it be to run a lot of Validators or to partner with a bunch of Validators so they can gossip me the transactions?
00:11:35.390 - 00:12:00.530, Speaker B: So the best way today would be to run a Validator yourself and there's not really any gossiping between Validators with this pseudo mem pool that Solana has. So basically when you are a Validator, you have kind of exclusive access to those transactions.
00:12:01.510 - 00:12:08.386, Speaker D: Yeah, I meant in the sense that I send it to my searcher basically. So not gossip publicly.
00:12:08.578 - 00:12:09.320, Speaker B: Yeah.
00:12:09.930 - 00:12:24.970, Speaker D: Interesting. Okay, but then shouldn't I, since you said before that the transaction is only sent to, let's say, the N next Validators. So I would have to run a lot of Validators basically in order to get a high coverage of the transactions that go through the network.
00:12:26.750 - 00:12:46.206, Speaker B: Yeah, I guess you could potentially see them if you are the next Validator and potentially respond fast enough to make it back to the current leader. But I think it would be more than running a lot of Validators. It would be having a lot of stake weight because individuals determined by stake.
00:12:46.238 - 00:12:54.660, Speaker C: Weight and you will still need to collude with the current leader because just because you see the pending transaction doesn't mean you can land in front of them.
00:12:56.090 - 00:13:07.160, Speaker D: Right. Unless they have something like Jito. Right. Which I assume we will get into. So right now that doesn't basically exist a channel for a front running market.
00:13:07.930 - 00:13:29.322, Speaker B: Yeah, there is some mechanism for priority fees for ordering, but it's not perfect. It's a decent heuristic right now, but that's kind of a whole nother can of worms that we can get into later on why that's not perfect because it's pretty in the weeds.
00:13:29.386 - 00:14:33.090, Speaker A: Maybe we could I would love to know. Maybe Lucas is a starting point. We could kind of tee this up for you. But Jito is one of the few projects on Solana, at least that I'm aware of, that's dedicated to solving the problem of the I think it might be nice to sort of level set with listeners on just the sort of market size for mev on Solanda today versus ethereum, and also the sort of relative adoption of Jito versus something like mev boost on you know, I think when we were talking before this episode, you shared some statistics with me about sort of the relative size of mev that gets extracted on Solana versus ethereum. Maybe there were some I know Gitos put together some statistics on the amount of sort of spam Arbitrage transactions that happen on Solana that don't end up being canceled. And then I would love for you to talk just a little bit about what Jito does and how it's been kind of getting adopted by some of the validators in Salana.
00:14:33.590 - 00:16:04.258, Speaker B: Yeah, starting towards the beginning, I kind of fell in love with Salana, like mid 2021 did like the hackathon and before that was working on like a mev bot on Ethereum. So just kind of fell down this rabbit hole after reading the Dark Forest article by Dan Robinson and just thought it was like the most interesting thing. But skipping ahead to after the Solana hackathon kind of had this theory about Solana that we saw Polygon and BSc having these huge spam issues and then Ethereum definitely had an issue itself and with just like priority gas auctions and people canceling and making the gas super high for people and normal users. Kind of had a theory that that would happen to Solana. So started jeto. Basically we're trying to minimize the spam and return value to users on yeah, I guess the current state of mev on Solana. We ran an algorithm to detect Arbitrages and compute the compute units which are similar to gas on Ethereum and found that 60% of all compute was spent on Arbitrages and there is a 98% failure rate.
00:16:04.258 - 00:17:10.258, Speaker B: So 98% of Arbitrage transactions are failing on Salana and because it's so cheap, they're not really bailing out early like they would on Ethereum. They're just kind of like letting it run to the end and have your balance check and it reverts and you're just spending a lot of CPU and compute units on that. Like 58% of all compute on Salana is just spent failed executing failed transactions. So we're basically trying to help solve that. I think the main issue is that talked a little bit about this earlier, but there's no discrete time window in Solana where the state is not changing. It's like a continuous time spectrum for landing transactions and there's not really a good transaction ordering primitive. We kind of talked about this a little bit earlier, but the priority fees aren't a perfect mechanism for ordering transactions.
00:17:10.258 - 00:18:12.010, Speaker B: So essentially what we're trying to do is minimize spam. We have a bundle primitive very similar to the flashbots bundle that lets searchers define these ordering of transactions that they want to execute. And then there's this pseudo short lived mem pool. Basically the transactions sit in the mem pool for roughly 200 milliseconds today and that's how long searchers have to kind of bid on these opportunities. So essentially running like a 200 millisecond auction in the block engine block engine is like simulating all these bundles, figuring out who's paying the most and the bundles that pay the most will get forwarded to the validator. So we're pretty optimistic that that will address a lot of the issues. Because right now the best way to land a transaction is spamming transaction with bundles you have very high reliability ordering on how the bundle executes in the validator.
00:18:13.470 - 00:18:16.780, Speaker D: This is so fascinating. I have a bunch of follow up questions.
00:18:17.470 - 00:18:18.362, Speaker B: Let's go.
00:18:18.496 - 00:19:21.470, Speaker D: In one of the previous episodes, we talked with Robert Miller and John Chabano. We talked about mev in the modular stack and we discussed different approaches to sequencing and mev supply chain design. And the guys, they basically hypothesized that different ordering mechanisms predictably lead to predictable results. And so they said when you have a chain that doesn't have an Mev auction that kind of is low latency and it has high fees, then it leads to a latency auction basically similar to TradFi, HFT, colocation games, microwave tower networks and so on. And if you have the same but with low fees, then it leads to spam and it leads to on chain searching and leads to a lot of failed transactions. So correct me if I'm wrong, it sounds like you can exactly confirm that hypothesis, at least from the perspective of Solana.
00:19:22.210 - 00:19:39.206, Speaker B: Yeah, definitely. There's a lot of failed transactions and spam on Solana. It's like a hundredth of a penny to send a trade, not including priority fees if you attach those. So it's super cheap to do it. Yeah.
00:19:39.228 - 00:20:39.270, Speaker D: So it's really interesting then kind of to dive into how you are approaching the problem of designing an Mev auction with Jito. Because one of the major innovations in Ethereum was the idea of the bundle, right? Where it's kind of an array of transactions that have to be included in the exact same order that they are submitted. But it seems like that's actually a relatively minor part of what you do at GTO because if you only introduce bundles, it would actually change nothing about the failed transactions because the dominant strategy would still be spam. And so what you're doing, it sounds like to me what you're doing instead is you're actually slowing down time. You're turning it from continuous time into discrete time. So there's actually now a waiting period for transactions to accumulate and then you run a simulation and you filter out the one best transaction and you discard all of the rest. So would you say that is actually like your main approach to mev and Salana?
00:20:40.270 - 00:21:32.970, Speaker B: Pretty close. I think the delay that's running is kind of like a rolling 200 millisecond delay and we kind of discreteize that to like a 200 millisecond window and it's censorship resistant because of the way that we designed it. Packets essentially flow through a relayer that any validator can run. And that relayer is kind of the custody or whatever you want to call it for that transaction. So the block engine can actually, we call it block engine essentially submits a lot of bundles to validators. It can actually censor anything. And so we're not actually dropping transactions at the relayer or the block engine level, we're really only dropping the bundles that searchers are submitting.
00:21:32.970 - 00:21:43.470, Speaker B: So I think that's kind of an important thing to note is that we're not just dropping everything randomly that's failing, it's more of just what the searchers are sending.
00:21:44.690 - 00:21:55.940, Speaker D: So there are now basically two channels to send transactions. There's like the main channel where you do not drop any failed transactions and there's the searcher channel where you do drop them.
00:21:56.310 - 00:21:57.154, Speaker B: Yeah.
00:21:57.352 - 00:22:03.570, Speaker D: You think it's preferable for searchers to send through the searcher channel because they don't want to pay for failed execution?
00:22:04.470 - 00:22:39.840, Speaker B: I don't think it's necessarily about the failed execution. I think it's just the guarantee and ordering. So the bundle offers basically it's like an all or nothing commit sequence similar to Flashbots. So we modified the validator so that it knows how to process a bundle in this multithreaded context and it will execute it atomically, which is a very strong selling point for searchers that are kind of just spamming and crossing their fingers that will land.
00:22:40.770 - 00:23:15.670, Speaker D: But I thought you said earlier that this kind of atomicity feature, you mainly need it for front running or for back running when you actually have the transaction hash. But it sounds like you do not really have either of those two. And so you're basically back running a lot and you're kind of doing it because you saw that the state updated on some order book exchange, right? So I'm still struggling to understand why exactly the feature of the bundle is useful. Is it because the bundle is kind of prioritized over other transactions, this discrete time window.
00:23:15.830 - 00:23:39.620, Speaker B: Yes. The bundle is prioritized. It has a special transaction like pipeline that it goes through that's much less congested than the normal pipeline. So you get the stronger ordering guarantees, and then you also kind of get to skip the buffer so that it basically executes as fast as possible after the auction is over.
00:23:41.190 - 00:23:54.520, Speaker D: Okay. So I think that makes a lot of sense to me that basically the bundle skips the queue. So there's no concept of a block. Right. Would you say you almost create the concept of, like, a pseudo block here by slowing down time?
00:23:56.090 - 00:24:06.540, Speaker B: Kind of, yeah, I guess you could somewhat put it like that, depending on where you're going with it.
00:24:07.070 - 00:24:35.730, Speaker D: Yeah. So because I'm approaching it from the perspective of, if I'm a search hour, can I break this mechanism? Right. Is it actually optimal to use the Jito auction, or are there conditions where I may still want to go through the public mempool and still want to spam? Because this is very cheap for me. Right. And if I'm good at it, then I might prefer this. So how do you ensure that basically, even if there's someone who's really good at spamming, that's still better for them to go through the auction?
00:24:36.070 - 00:25:03.870, Speaker B: Yeah, I mean, I think the main thing is that you offer the better ordering guarantee and the chance to skip the pipeline. I think we'll probably see something similar to Flashbots, where if someone has alpha, they'll probably just go through the normal channel until it gets kind of, like, contested and starts to turn into this fee war, and then people start to extract things more efficiently using bundles.
00:25:05.970 - 00:25:55.574, Speaker A: Yeah, I have a question about that. Lucas, can you walk us through what it's been like on a BD perspective of getting adoption of Jito? And maybe if I could pull you in hasu a little bit as well to just talk about, because there is a stark contrast, I think, in between what Flashbots has been able to do on Ethereum versus Jito on Solana. And I do wonder a little bit if that know if one of the big starting differences there is that ethereum used to be proof of work at some point, whereas Solana never was. And some of the BD work in the beginning for Flashbots, flashbots was kind of getting its start when there were these dominant mining pool operators and there were really only five or six entities that you needed to get widespread adoption of mev geth or mev boost, I guess mev.
00:25:55.622 - 00:25:55.990, Speaker B: Yeah.
00:25:56.080 - 00:26:02.270, Speaker A: But Lucas, talk a little bit about what that's been like on Solana. Maybe you could compare contrast.
00:26:03.830 - 00:26:50.730, Speaker B: Yeah, it's been pretty challenging from, like, a chicken and egg standpoint. So, you know, it's like searchers, I guess, validators. Like, want to run the software. The main pitch is, like, this is healthier for the network. More efficient mev markets will lead to more liquidity which leads to more usage, and we want to see the network healthier and have less negative impact on users. But at the end of the day, a validator is in the business of making money. So it's kind of like, how much money will I make? Well, it's pretty small right now because we have searchers that are waiting for more stake to run the client.
00:26:50.730 - 00:27:11.202, Speaker B: So it's kind of this like, go to searchers, say, hey, we have bundles. Here's how you use them. And they're like, okay, we need more stake. Go to the validators. They're like, oh, we need more money. So it's been pretty hard to kind of get out of that chicken and egg. I think people talk about doing things that don't scale in the beginning.
00:27:11.202 - 00:28:08.342, Speaker B: We've definitely been doing a lot of that, like, a lot of handholding Validators and spending a lot of time talking to them, making sure they understand what we're building and that we understand kind of what they want. And I feel like, knock on wood, we're starting to get out of that. So we're seeing a lot of bundles landing today, a lot of tips. The tips are still pretty low, but we're seeing a lot of bundles land. And we're currently at like 24% of Salana stake running the client. And there's 115 Validators running the client that's anyone from super small Validators to P to P or Staking facilities. So definitely a wide range as far as the differences between Flashbots at the beginning.
00:28:08.342 - 00:29:19.470, Speaker B: Definitely curious to hear what Hasu says. I think my current take on it is that when proof of work was out, there's just a lot of concentration in mining pools. So you could go to a mining pool and get anywhere from like five to 40% of hash power. Obviously there's a lot of BD in handholding and things there, but once that 40% flips on, that's like, huge. I also think that the mev was probably a little more developed on Ethereum than it was on Salana at the time. And then I think as we saw the transition from proof of work to proof of stake, I think the Flashbots like block building model was somewhat derisked and people saw the money that they could make by running the software and then also the improvements that they brought to Ethereum as far as less wasted block space. So I think it was somewhat derisked from that standpoint.
00:29:19.470 - 00:29:45.478, Speaker B: I think another hard thing that's on Solana is know there's been a lot of reliability issues on Solana. The network going down. So it's like we have this client that we've modified, and there are certainly people that are maybe skeptical to run that because it's a hard client to work on and a hard kind of network to work on.
00:29:45.644 - 00:30:34.200, Speaker D: Yeah. When you said that you have 24% of stake adopted, I thought you would say more like 2%, because you previously said it's been very hard, but I mean, 24% is really impressive, right? Because the first 20% is super hard, and then the next 80% are probably going to be very easy for you guys. I don't know that you need any tips anymore, but I can still go into it a little bit. So I think you're totally right. The mev landscape on Ethereum was already quite more developed when we started. There was very rampant, much more rampant kind of mev extraction already happening in the public mempool for two years, basically.
00:30:36.330 - 00:30:38.154, Speaker B: So, like, private deals and things going.
00:30:38.192 - 00:32:02.530, Speaker D: On, too, not so much. So I think Flashbards, the company, was started, or was started as kind of a collective in response to kind of vertical integration. It was like just starting out to happen. So with that came the realization we need a public auction platform that anybody can use, and that's actually the most optimal to use because that leads to the best market structure for Ethereum. No, it was more so happening through priority gas auctions, so you could point to Phil Dean's paper. flashboards also started, very importantly with this kind of data product that just illuminated how much mev there actually was and in a sense, almost advertised the idea of mev extraction to searchers as well as mining pools at the same time, because you could actually point to these numbers and say, guys, this is like, how much money is extracted right now? This could be your money, right? And so I think that data was a very important part of the adoption strategy. I think Flashpoint, sorry, wasn't around at the time, but I think the adoption strategy was very smart in terms of the order with which kind of the mining like, we approached the different mining pools because it's like dominoes falling one after another.
00:32:02.530 - 00:32:38.622, Speaker D: That's like, how I like to think about it. And so the order in which you start has a big impact on how fast you can get them to fall. And what also resonated with me was when you said you find it very hard to get search adoption when there's not a lot of stake. So I think one important idea is definitely dog fooding the product. And so you need some way to bootstrap either side of the market in any kind of two sided marketplace. And since it's very hard to bootstrap the velda side of the market, I think you need to bootstrap somehow the searcher side of the market. You need to make it very easy for people to enter this.
00:32:38.622 - 00:33:27.630, Speaker D: And so what Flashbots did was it wrote a lot of open like searcher bots, very, very crude, simple bots that had no chance at all in the public mempool. But because the auction format was so derisked from the searcher perspective and so easy to use, and if you paid more, you always got priority then, even for some time, the most crude searcher bots had a chance to compete. And so. They just open sourced them and basically gave them to people for free to use and run. And so that way they kind of basically got the initial traction in the auction. And so, yeah, it feels to me like all of these strategies would also work, most likely in solana. So assuming there's stuff like flash loans and so on, but there should be, right? Yeah.
00:33:27.630 - 00:33:32.894, Speaker D: Okay. And you have the bundle, so you have the atomicity guarantee. So really using the auction is risk free.
00:33:32.932 - 00:33:33.086, Speaker B: Right?
00:33:33.108 - 00:33:40.018, Speaker D: So as long as you provide kind of mock searcher bots, then I think it should find a lot of interest.
00:33:40.104 - 00:34:06.454, Speaker A: Hey, guys, quick break from the show here. I want you to imagine something for me. Imagine swapping two stablecoins on Chain, paying $0 in gas and instead getting a rebate of $2,000. This is something that's actually happened on chain. To understand how, I want to introduce and thank this season's sponsor, Rook. Zooming out for a second. The current state of affairs at Mev is billions of dollars so far have been extracted from users'pockets using Mev.
00:34:06.454 - 00:34:38.174, Speaker A: Rook is coming in and saying enough is enough. Blockchain should drive value to their users and the applications they use. It is time to leave the hobbyist era behind us if we want to move forward and we want to get this right. That's why Rook has built a custom blockchain settlement network, and it's one that gives you full control over the entire transaction lifecycle. Today, you can connect to an open source Rook node. The Rook protocol will automatically match, bundle, and auction your orders and transactions in seconds with zero gas overhead. Also, any Mev that's discoverable along the way will be returned to you, the user.
00:34:38.174 - 00:35:13.914, Speaker A: Created as a collaboration between the industry's top mechanism designers and Mev engineers, rook was built from the ground up to be scalable, safe, and programmable. You can get your own Mempool, choose Searchers and builders, and link your Mempool with others to discover even more Mev. You can define how the Mev is shared and delivered as well, and what can basically process anything from transactions to metatransactions and more. This is the way that Blockchains basically should have been from day one. So if you're a user listening to this, here's what I want you to do. I want you to go to your wallets, go to your favorite app, your node provider, and say, hey, I want you to be working with these guys. Rook.
00:35:13.914 - 00:35:32.440, Speaker A: I want the Mev that I create to be redistributed back to Me. If you're a developer and you want to stay ahead of the game, the best way to do that is to follow them on Twitter. They are at Rook. Or even better yet, slide into their DMs. They are lightning responsive. They'll get you set up today. And if you do slide into those DMs, as always, please tell them that I sent you.
00:35:32.440 - 00:36:20.386, Speaker A: Is one other something else that sort of actually entered my you made me remember, Hasu, when you were just talking there is initially in the last season of Bell Curve, we had Xavier from chorus one. Actually, he observed something that I thought was pretty interesting, which was he said, the dynamic of who extracts value in the Mev supply chain is flipped from ethereum to salana. Whereas in Ethereum you have an auction mechanism where the vast majority of mev ends up going to the validator because you can bid up an arbitrage opportunity. So theoretically, if there's a dollar of arbitrage, a searcher might bid up to $0.99. Right. And so the vast majority goes to the validator. What he mentioned is that it's actually flipped in Salana because there's no auction mechanism.
00:36:20.386 - 00:36:44.640, Speaker A: The searcher, even though the overall market size for searching is much smaller, the majority of the value goes to searchers instead of the validators. So I'm wondering a is that dynamic correct? And then B is that part of the reason why it's a little bit tougher to get some of these validators to sign on? Because in Ethereum there's a clear profit incentive, whereas in Solana, from the validator perspective, maybe a little bit less.
00:36:46.130 - 00:37:26.220, Speaker B: Yeah, I imagine that Flashbots had the same issue ethereum had the same issue pre Flashbots, where people were researchers were capturing most of the value. And as more people compete in the auction, it kind of flips it. Yeah, I mean, we're seeing roughly anywhere from four thousand dollars to thirty thousand dollars of arbitrage every day. And the jeta MEP system is not making anywhere close to that right now. So I think it's still kind of in its infancy as far as searching goes.
00:37:28.030 - 00:37:35.514, Speaker C: As that develops, though, you should expect to see more of the value go to the validator as the auction becomes more efficient.
00:37:35.642 - 00:37:36.142, Speaker A: Got it.
00:37:36.196 - 00:38:05.960, Speaker B: Yeah, definitely the systems that we built will basically have the built in mechanism to distribute the mev to stakers as well. Just because the staking is a little different than Ethereum, where people can a validator may have like 100 or 1000 stakers on it. There's also the mechanism to distribute mev to the stakers in a transparent way.
00:38:07.290 - 00:38:07.798, Speaker A: Interesting.
00:38:07.884 - 00:38:22.122, Speaker B: I think most of it, or a good chunk of it, will go to validators and their stakers and we're seeing anywhere from like a 5% fee to 100% fee on the validator side. So some validators want to share more and some don't want to share at all.
00:38:22.176 - 00:38:47.002, Speaker D: What would you say are kind of the problems with the mev design in Solana today? And how is that connected to the spam but also maybe some of the outages because we haven't touched on that yet. So Solana notably had a bunch of outages last year. Were any of those connected to mev in any way? And yeah, what do you see as kind of the big problems in kind of the chain design as it relates to mev?
00:38:47.086 - 00:39:23.374, Speaker B: Yeah, I think some of the very early outages, like maybe like mid to end of 2021, were related to mev. So there was one where I talked about this earlier, but when the RPC sends a transaction, it'll send it to the current leader and then the next few leaders and then it's also supposed to forward. If the validator doesn't execute, it should forward it one hop and then drop it. Well, there's a forwarder bug where it just kept forwarding, forwarding, forwarding. And there's, like, an ido. So you have all these bots that are trying to get into this Ido early. They were spamming it.
00:39:23.374 - 00:40:15.314, Speaker B: There's this forward issue and maybe not. I would say it's related. That was related to mev just because people were trying to get into the Ido as fast as possible. I think that the outages, I think are a lot of the outages are related to kind of just pushing software to its limits. I was actually talking to someone about this last night, but I think kind of an interesting comparison, but ethereum. I could see it's kind of like maybe like a Honda Civic or like a Toyota where the person that's driving that isn't really going to be pushing it to the limits. They're not going to be like revving the engine a lot and going like 200 miles an hour.
00:40:15.314 - 00:40:58.558, Speaker B: I think Salana is kind of like a dragster where everything needs to be working in perfect unison and the pistons and the cylinders and the drivetrain are being pushed to the limits very frequently and so that if there's any problems in any piece of it, then the whole thing kind of just explodes. Salon is obviously a high performance chain and it's being pushed to the limits a lot. And I think that a lot of the bugs are just like finding where those cracks are and the drivetrain and things like that and fixing it. I'm sure Eugene has a lot of thoughts around this too.
00:40:58.644 - 00:41:58.178, Speaker C: Yeah, I think just the complexity, like the literal code complexity in the native Solana client just creates a much larger surface area for these types of bugs to exist. And then I think there is much more of an engineering mindset coming from Solana developers as opposed to a more research first principle of guaranteed safety that we see more of from the Ethereum side. So I don't think it's too surprising that you see more outages on Solana. I think the common theme though, between all these outages, I think there's been like five or six which over the last couple of years, which is obviously too many. It doesn't seem like there's some core issue with the way consensus is done. A lot of them really do seem like an implementation detail here or there. And that definitely points to potential issues with the development process, but not necessarily to the core mechanism itself.
00:41:58.264 - 00:42:52.222, Speaker A: I'd be curious. A lot of the difference for the way that mev works in Solana versus Ethereum stems from, I guess, the way that fees are handled in Ethereum versus Solana. So I really do love and you know, with hindsight, the way that fees work and the fee market that Ethereum has created is pretty elegant. And not to say that Solana's isn't, but definitely having a fixed fee. And I know that things are changing a little bit with the introduction of the priority fee has created for certainly some negative externalities in Solana. I'd be very curious from the two of you and Eugene, we were just talking about this, so maybe I'll turn it over to you first here. Do you see the way that fees work on Solana changing or evolving over time? Do you think it ends up being more like Ethereum with the creation of fee markets?
00:42:52.286 - 00:43:34.334, Speaker C: Yeah, I think it kind of has to move in that direction. The fundamental reason you need fees, besides the network capturing a little bit more of the value it creates, is you need to price these limited resources appropriately. That's just the most economically efficient way to allocate the block space. And so originally with Salana, there was just this base fee which essentially is paid per transaction. There's some nuance there, but it's not too important. And that's on the order of one 100th of a penny per transaction. And this is basically zero and it's basically fine when blocks are not getting filled up.
00:43:34.334 - 00:44:29.854, Speaker C: Once blocks starting getting filled up, you need to and a lot of that is these failed arbitrage and failed liquidations that Lucas has pointed out. Then you need to have some sort of mechanism for pricing the block space. So there's currently this implementation of a priority fee. So every transaction is still going to pay the base fee and then now you can pay some priority fee chosen by the user on top of that. And because block production is continuous, this doesn't guarantee anything about ordering, it doesn't guarantee anything about your likelihood of getting included, but it sort of moved things in the right direction. There's a lot of nuance in the way the Solana client orders transactions. It's sort of this multi threaded transaction scheduler that's trying to execute transactions.
00:44:29.854 - 00:45:45.130, Speaker C: And if you submit something with a higher priority fee, you're more likely to sort of jump to the top of the queue in terms of execution and therefore placement in the block. It's still relatively crude, I think. One really nice thing about Solana's programming model where state has to be specified upfront. So if I'm making a Dex trade, part of my transaction actually includes, hey, I want to change for this transaction, I need to touch Lucas's token account, I need to touch the Phoenix Sol USDC account, and by account basically mean a discrete piece of state. So you can actually create state based fee markets in the same way that there's like a multidimensional EIP 1559 proposal from vitalik where basically you have a few different types of resources and you want to price each of them with sort of like a 1559 like mechanism. Well, there's limited amount of block space for touching the Phoenix Sole USDC market in a given block. There's obviously this global limit as well and the resources you need are specified up front.
00:45:45.130 - 00:46:11.570, Speaker C: So I think it's pretty natural to have a very similar multidimensional EIP 1559 mechanism to more appropriately price different pieces of state. Because in most blocks you'll have some state that's really, really hot, like a Dex market that people are trying to ARB and that should be a lot more expensive to touch than some other random piece of state that only one person cares about in this block.
00:46:12.390 - 00:46:25.990, Speaker D: So when you say, okay, the idea, I think of a state based fee market is very interesting, but you basically still need the ability to slow down time, right, in order for transactions to accumulate.
00:46:26.410 - 00:46:51.710, Speaker C: I don't think this is necessarily the case. I think that's true if you want to very accurately price the state for the current block. But if you make some assumptions about the shape of demand for a block space, you can do something pretty crude where the base fee for a particular piece of state for this current block is based on how utilized it was in previous blocks.
00:46:52.130 - 00:47:18.360, Speaker D: Yeah, that's very fair. Yeah, I forgot about that. So this is less precise, but I think definitely demand for blocks based demand for mev transactions tends to be correlated because it happens in periods of high volatility predominantly, right. And so, yeah, you can definitely design a base fee based on historical demand for a particular state.
00:47:18.730 - 00:47:38.160, Speaker C: Yeah, it's an imperfect mechanism for sure, but I don't think we can let perfect be the enemy of good. And in this case, in particular, when it's something in protocol, like an in protocol fee, almost by definition, you can't have a market for that that also lives in protocol. So if you're going to have the market for that, you have to have that off chain and there's a lot of trade offs that come with that as well.
00:47:38.610 - 00:48:35.710, Speaker A: Just to make sure that I'm understanding this right. I mean, this is very interesting to me because it sort of harkens back to you hear this a lot from the Cosmos part of the world and their focus on app specific block space, which is the problem with generalized block space, is that sometimes you have competing demands from one sector versus another that impede the performance of a particular application. So, for instance, what you wouldn't want is a Dex going down because NFT mints are exploding or something like that. That just feels unfair from the perspective of a Dex operator. So these sort of multidimensional or parallel fee markets would theoretically solve some of that, where you could have a very high base fee. For instance, if DeFi is really heating up, right, as compared to maybe NFTs being slower and that would sort of separate the congestion between those applications. Am I understanding that correctly?
00:48:35.790 - 00:49:24.690, Speaker C: Yeah, I think that's fair. Again, this mechanism is imperfect because it relies on past demand as an estimate for current demand. So if an NFT Mint opens up on exactly block number 1 million, probably the base fee is going to be way too low for that block. That might just be an issue with the NFT Mint mechanism where whoever is issuing the NFT probably had an opportunity to capture a lot more value. But I think the main point makes a lot of sense where by appropriately pricing different pieces of state, you are able to modulate demand with a fair bit of precision.
00:49:27.110 - 00:50:15.274, Speaker D: I think it probably has some other downsides too. Right? So I was asking myself, well, let's say it's like a very congested time, let's say there's a period of high volatility. Can you really design a mechanism that constrains the usage of the chain to be no more than like 25% on Openc or 25% on unitsop or whatever? And yeah, you probably could, but I wonder if that's good, right, if that's kind of good for the users of that chain as well. So I think it's kind of a double edged sword. Now that we know a little bit more about the architecture of Solana and where kind of the current problems are now, I'm really interested to hear what's the Mev Roadmap looking like for Solana. So Mike mentioned maybe some version of PBS that might be on the horizon.
00:50:15.402 - 00:51:10.450, Speaker B: Yeah, I think that I need to go back and read that. I think it was just kind of like a proposal. So I think there's a lot of hand waving in the explicit details. I think that it's definitely the right direction to go in. I think that the thing that's going to be difficult is can you introduce PBS without slowing down the block times, massively and massively reducing the throughput of Salana? So I think Salana is a very fast moving chain. I think that there should probably be like a tiny bit of compromise to look at PBS. But if it changes things from ten K TPS to one K TPS, that's just going to be like a non starter because it kind of just ruins the pitch for Salana.
00:51:10.450 - 00:52:11.494, Speaker B: But I think that there's some interesting things. So Jito is like the only, I guess you could call it like a block builder. We're not building full blocks, but we're basically submitting sets of bundles to get executed. And I think that we're definitely learning a lot and want to kind of incorporate the lessons that we've learned into what this looks like on Solana in the future. One thing that's really hard right now is that talked about the slot, but the state on Salon is always changing within a slot and so what ends up happening is if someone sent us a bundle for slot 100 and we forward that 200 milliseconds later, there's a high likelihood that the state changed. And that makes it really hard. We need to be the closer to validators that Jeta's block engine is, the better.
00:52:11.494 - 00:52:42.030, Speaker B: And there's a lot of crazy stuff that we have to do from an engineering angle to simulate stuff accurately. And I think something, I guess whenever there's PBS, we need to look at that part of the stack and see if there's a way to do it to support multiple builders that can simulate things accurately without slowing down. Solana.
00:52:43.970 - 00:52:58.770, Speaker D: It might be a little early to ask this question, but have you thought much about kind of the incentives for colocation between G two and different validators and maybe different searchers? Given that kind of the latency of the chain is so low, how do you think this is going to evolve?
00:52:59.190 - 00:54:01.314, Speaker B: Yeah, I mean, there's definitely incentive there. I think the approach that we're taking right now is try to set up as many regions as possible so that it's not just Frankfurt, because it's not like a force of gravity right now, but I think in the future it could the as a block builder on Solana, we don't want that to happen. We think that the geographic decentralization is important and we're kind of like doing the best we can to support that by having we currently have four locations across four different countries and we'll continue to set up more. But I think that is obviously pretty expensive and something that we want to change. I think we just don't want to compromise on the speed of Solana to get there.
00:54:01.372 - 00:54:15.966, Speaker C: I think geographic centralization is also very path dependent. So if you start with a very decentralized set and then you slap a system like this on top of it, I think you're going to have a lot less gravity towards, say, like, everything moving to sit next to maybe a.
00:54:16.068 - 00:54:40.200, Speaker A: Slight pushback on that. Eugene with that, you know, one thing that has and I've talked about a lot this season is one of the big factors in terms of sexidex arbitrage is where price discovery happens. So if price discovery is happening on finance, I feel like that's the more important sort of factor, I guess, than anything else. I don't know what you have to say about that.
00:54:40.650 - 00:55:21.250, Speaker C: Well, I think it's just really complicated. Like, if I'm a searcher and I'm doing the sex attacks arbitrage on Solana, let's say the validator is in Frankfurt. I think price discovery happens on Binance, which I believe is in AWS, Tokyo. There's just like so many there's so many pieces that have to go right here. So I need to get the price from AWS, Tokyo into my searcher box, which is presumably running in Frankfurt. I need to do whatever simulations I need to do to compute the transaction. I want to send I need to send that bundle over to GTO which in this case is probably also located in Frankfurt.
00:55:21.250 - 00:56:09.300, Speaker C: It's not obvious that the Validator wants to move to Tokyo as well, right? Because every searcher is going to be in Frankfurt colo with this Validator or in Tokyo colo with the Exchange. But the speed bump there is going to be the same or very similar for all the different participants. So I think perhaps at the margin, by having higher latency between the Exchange and the Validator you might have a little bit more uncertainty and therefore ever so slightly smaller bids. But I think this is just totally dominated by the size of the opportunity.
00:56:13.190 - 00:56:48.160, Speaker D: So maybe a last question on kind of Solana base layer infrastructure before we move on to DeFi because I think we're very interested in hearing also the perspective of what it means to build on a chain like Solana. What's like the pros and cons and the experience. But I want to hear kind of what do you think is kind of the role of Jump Crypto in the Solana ecosystem? How do they think about the chain? Why are they so interested in it? And also what is their Project Fire then so that they've been working on for some time now?
00:56:50.850 - 00:57:44.130, Speaker B: Yeah, I think Jump is obviously, like, a pretty big supporter of solana between pithnet, which is actually kind of like a I don't even know if this is the right way to say it, but it's kind of like a side chain running the same solana validator client, just with kind of higher requirements and their role of building fire. Dancer. I think they're some of the most talented engineers in the space. The stuff that they have been able to demo and the stuff that they will pull off will just be insane. And I think that a few years from now I think it will be a reference for other chains on how to build high performance systems. Like chain XYZ is hitting this bottleneck. Let's look at Fire Dancer and see what they did to make this run faster.
00:57:44.130 - 00:58:15.820, Speaker B: I guess to play devil's advocate, they will understand the Validator pretty well so there's a potential for them to understand what's going on inside it better than anyone else and extract mev. But I think that it's open source, anyone can read it and it's not necessarily like a blocker for anyone else to get an even playing field.
00:58:19.950 - 00:59:18.560, Speaker A: Guys, I'd love to start talking about DeFi on Solana and maybe starting from a high know I feel like DeFi on Solana was, if you rewind the clock back a couple of years, sort of the main selling point for the chain and people were extremely excited about it. I definitely remember when Serum launched, how excited people were about the possibility of a central limit order book that was on chain. And since then, I think to be completely fair, solana has suffered a pretty major setback in terms of its DeFi with sort of green shoots, right with like Eugene and what you're doing in Ellipsis. So I'd be curious to just get a sense of what is Solana or DeFi and Solana kind of look like today from just kind of a landscape and ecosystem. And then if you could maybe dive into some of the points that kind of hasu side of the argument, which is like, what is it like to build on a chain like Solana in terms of pros and cons?
00:59:19.890 - 00:59:20.640, Speaker B: Sure.
00:59:21.010 - 01:00:24.558, Speaker C: So I can talk about the protocol design space a little bit. I think across all of DeFi, basically over the last five years, we've seen very, very little innovation on the protocol design side. Basically we had uniswap compound and MakerDAO as these pioneers who really showed the world that decentralized finance is possible. But these protocols were built under very heavy constraints of a ten TPS chain. And pretty much everything we've seen in DFI since then has been anchored on these very old V One protocol designs and maybe with some Ponzi nomics thrown on top. So the thing that really excites us about Solana is that its high performance decentralized infrastructure is available today. And so we can really explore the protocol design space for these financial primitives from first principles and some of the key differences in the performance of Salana versus Ethereum, you have these 400 millisecond block times, so that really reduces the mev surface.
01:00:24.558 - 01:01:16.750, Speaker C: You have thousands of transactions per second, which allows for actual markets. You have an Oracle update every block. So for protocols that depend on Oracle, you might have much more resilient Oracle pricing, much smaller error bars on the prices there. And so to be a little bit more concrete, I can give a few examples. Trading mike, you mentioned that you can build a limit order book on Solana, and I think this is probably the one main innovation in DeFi we've seen on Solana over the last three years since Solana's been live. I think passive liquidity models like AMMS are much better than nothing and they work really well for these long tail tokens. But you really need to have active liquidity for deep sustainable liquidity.
01:01:16.750 - 01:02:21.050, Speaker C: And another thing with the AMM model where you have this two sided liquidity is it actually makes front running possible, or front running is just not really that profitable on a limited order book. Certainly like a sandwich attack won't exist. And with limit order books, we can also leverage all the work that's been done in electronic market making for the last few decades, where you have all of these high frequency trading firms that have invested tens of billions of dollars into R D and their entire goal is to provide the most competitive prices to traders. And so now with limited order books on Solana, we can enable them to provide liquidity the way they want to provide it. In decentralized finance. So DeFi traders also get the best prices possible, I think with borrowing and like frankly all across DeFi today, it's basically stuck in the Stone Age where every design is still basically a copy of the original compound design. I think there's some pretty clear room for step function improvements once you relax the infrastructure constraints.
01:02:21.050 - 01:03:19.878, Speaker C: The most clear example here is you can just have a market mechanism to determine the rates rather than approximating a market with this piecewise linear interest rate curve. So I think basically the protocol design space is much larger on Solana, which gives us a lot of room to explore. And there are plenty of teams today that are exploring this design space. I think we're going to see some more products go live really soon. I think like Mango Markets is a great example where they have an order book based decentralized perpetuals exchange and there's a few other teams working on similar things. There's teams working on different borrow lend implementations that are not just clones of compound and Aave. On the NFT side, the use cases have also really just opened up where compressed NFTs are just shipped.
01:03:19.878 - 01:03:48.610, Speaker C: And basically what this means is you can have collections with millions of NFTs or billions of NFTs at pretty reasonable cost. And so a lot of the original NFT vision of digital items that don't necessarily need to be 10,000 PFP collections that are selling for thousands of dollars, you can actually have some of these more practical use cases like ticketing or items in gaming. These actually are more realistic now too.
01:03:48.680 - 01:04:37.878, Speaker A: I've got a couple more specific questions for you just on sort of central limit order book design versus AMM. And this was a debate that this has been a long standing kind of debate in crypto and certainly a couple of years ago you heard a lot more sort of fierce debate about these two different structures. But maybe since this is an Mev podcast, I would love to know. I think this idea of active versus passive liquidity is definitely an important one. So could you describe just why for the passive liquidity construction of an AMM, especially kind of the concentrated liquidity provision in something like uniswap V three just throws off the enormous amount of mev that it does. And then I do want you to double click into you mentioned that in an order book design you won't have things like sandwiching. Can you just describe exactly why that is? Because I didn't really follow you there.
01:04:37.964 - 01:05:37.080, Speaker C: Yeah, so let's start with the sandwiching example. The reason sandwiching is a thing on AMMS is because of the two sided liquidity. So if I provide liquidity within a range and the price crosses me in one direction, now I'm automatically providing on the other side. And so what this means is if someone places an order with very high slippage, what I'm going to do as a sandwicher is I'm. Going to run up the price so that the trader or victim gets their execution at the very worst price specified. And then I'm going to exit the trade by going back through the book the other way. And so in practice, what this means is first I make a very unprofitable trade where I push the market really far, and then the sandwich victim pushes it a little bit further and then I close out the trade with this very profitable back run.
01:05:37.080 - 01:05:54.734, Speaker C: On an order book, you have all these limit orders, but they're one sided. So if you push the price very heavily one way, you don't have this very profitable exit on the other side. With regards to AMMS versus limit order.
01:05:54.772 - 01:06:19.720, Speaker D: Books in general, let me ask before you move on to that, let me ask you why. So from that explanation, I didn't yet understand why sandwiching wouldn't be possible in a limit order book. Because most traders don't use limit orders, right? They use market orders. And isn't that kind of similar to how an AMM would work? Like, couldn't you front run a market order in essential limit order book?
01:06:20.730 - 01:06:44.542, Speaker C: Yeah, but your front run is extremely unprofitable, right? Because you're going to have to take out all these other orders because the limit order book sole is going to match the market order against the best price. So yes, one thing you could do is clear all the liquidity from the book. And then if there is this naive market order, you can have them fill at the worst possible price. But your front running trade was really unprofitable because you had to clear this book.
01:06:44.676 - 01:06:55.246, Speaker D: Isn't that the exact same thing in AMMS? Like an AMM is also just like a limit order book, except the orders are symmetrical. And so you also have to clear out the book before you can you.
01:06:55.268 - 01:07:06.366, Speaker C: Do have to clear out the book, which is very unprofitable, but then you have this very profitable backrun which is fixing the price after you made this trade. So it's like a pretty fundamental difference here with the two sides.
01:07:06.398 - 01:07:27.706, Speaker D: I see. So basically in AMM, it's almost like the order book replenishes basically after you made your unprofitable background. And so they are basically exposing you also very profitable trades on the way back that make up for it. Exactly. In essential order book, that is not going to happen probably because nobody is going to put any orders after you clear out the book.
01:07:27.808 - 01:07:29.762, Speaker C: And it certainly can't happen atomically.
01:07:29.926 - 01:07:32.702, Speaker D: Yes. Okay, now I got it. Okay, thank you.
01:07:32.756 - 01:07:37.920, Speaker C: So going back to the AMMS versus limit order books in general.
01:07:39.890 - 01:07:40.458, Speaker B: So there's.
01:07:40.474 - 01:08:58.426, Speaker C: This really important distinction between active liquidity and passive liquidity. Like we were talking about earlier with electronic market making firms, these guys are like real professionals and their job is to provide the most competitive liquidity possible. Because with not providing competitive liquidity, they don't get any fills in a limit order book model where if you're not providing the best price, you're not getting any of the volume. So there is this incentive to provide better prices to the extent that you can AMMS. And there's been a lot of iterations on AMMS, of course, but essentially they rely on these liquidity curves which roughly are trying to approximate what a sophisticated market maker will do while having basically none of the information whatsoever. So, like, if you have an Xyk model, for example, yeah, you have a little bit more of the liquidity near the top of the book and you fade towards the you lower your size towards the back of the book. And, yeah, the shape is roughly correct, but you don't have nearly the precision that a professional market maker will have.
01:08:58.426 - 01:09:57.370, Speaker C: And then the really big piece as it relates to mev is with this deck sex arbitrage that's exposed by these AMMS, where the AMMS actually completely depend on arbitrage to fix the price, to set the price to the correct market price. And so what this means is if some pair is trading on an AMM and the price on the AMM is 100, the price on finance moves to 105, the AMM can't automatically move its price to 105. It relies on these traders to push the price from 100 to 105. And that is really expensive for the LPs. They're systematically overpaying for the service of getting their prices fixed. And if you have active liquidity then the market maker is just simply going to move their quotes. Maybe they'll get into a race with takers who are going to try to pick off their quotes before the market maker can move them.
01:09:57.370 - 01:10:05.194, Speaker C: But I think the MEB surface that's exposed is clearly a lot smaller, which means that the protocol itself is also going to be more sustainable.
01:10:05.322 - 01:10:28.600, Speaker D: Zooming in into that kind of race that exists. Why is it guaranteed or to what degree is it guaranteed that the maker is kind of favorite in removing their bits in any way over the taker? Why does that expose that much less arbitrage opportunity?
01:10:29.050 - 01:10:49.466, Speaker C: So there's no guarantee whatsoever, but you can also move your quotes just before it becomes profitable for the taker to cross. This is pretty similar in TradFi HFT where, yeah, sometimes there's takers in the market that you know are just faster than you. And so what you do is you give yourself a little bit of a buffer room.
01:10:49.568 - 01:11:20.406, Speaker D: Yeah, so you basically increase the spread in order to make it less likely that you will ever be. So what you can't make up in speed, you basically make up in spread. And that's why we see bigger spreads in ethereum because the time difference is basically relatively big. And so the arbitrage opportunity that you potentially expose is really big. And so there's not that much liquidity around the PEC, typically not the PEC, but kind of the current market price.
01:11:20.588 - 01:11:23.720, Speaker C: Sorry, are you talking about on AMMS on Ethereum right now?
01:11:24.250 - 01:11:29.702, Speaker D: Yeah. Basically why it's not profitable to quote a lot of liquidity around the current market price on Ethereum.
01:11:29.766 - 01:11:31.002, Speaker A: Yeah, that's right.
01:11:31.056 - 01:11:34.300, Speaker C: Because you're going to get picked off a lot.
01:11:35.230 - 01:12:15.942, Speaker D: That makes sense. So I wonder, have you looked much into kind of mev capturing AMM? So I've seen a couple of designs there that are kind of picking up in popularity, picking up in steam. I think we'll see something like that launch this year and probably be quite big. And these would be kind of AMMS that basically return the mev loss to Arbitrage back to the IPS, thereby making it much more profitable to kind of use these automated strategies. So I wonder how you think about that and whether that changes the balance in favor of AMMS maybe a little bit.
01:12:15.996 - 01:12:35.418, Speaker C: So I think this idea makes sense. Obviously, you could have something similar for a limit order book as well. So the main problem here is I believe, correct me if I'm wrong, that to have this sort of mev redistribution mechanism you basically need to have your own app chain where you control the mev.
01:12:35.514 - 01:12:41.262, Speaker D: No, I think you can build it into the smart contract on Ethereum layer one as well.
01:12:41.396 - 01:12:49.166, Speaker C: Can you have this efficient capture and redistribution? Because I thought the fundamental thing that's happening here is the value is leaked to the network layer.
01:12:49.198 - 01:12:49.538, Speaker B: Right?
01:12:49.624 - 01:13:30.720, Speaker D: No, I haven't seen any concrete designs. But I think the way they would work is you basically auction off the right to execute the first trade in a particular pool in a particular block. And so there are some problems here with unlocking the block. So maybe it helps if you also control the ordering of the block so you can ensure that if somebody doesn't take the opportunity within the first ten slots of the block, then that the rest, the other like 90% can still trade and so nobody needs to, quote, unquote, unlock the pool. Yeah, but I think there might be some ways around that.
01:13:32.290 - 01:13:48.674, Speaker C: Yeah, I think this works to some degree. Obviously, the mechanism is pretty crude right. Specifically because you don't control the L one. I don't know to what extent you're actually going to be able to recapture the mev, but kind of the situation with AMMS on Ethereum right now is just so bad that pretty much anything is going to be an improvement.
01:13:48.722 - 01:13:48.934, Speaker B: Right.
01:13:48.972 - 01:14:01.020, Speaker C: Like we see AMM liquidity providers losing hundreds of millions of dollars per year because they're getting picked off and it's all going to the underlying L one.
01:14:03.150 - 01:15:16.690, Speaker D: I would have kind of a final arc here in terms of questioning, unless you have anything specifically about DFI Mike that you want to bring in. Okay, so I think so far one big theme of this podcast season has been on kind of the role of latency. Do you want higher latency? Do you want low latency? What are the tradeoffs and what might be kind of the frontier in terms of efficiency. I'd be really interested to hearing from both of you and I know Eugene, you've thought a lot about this actually. So what do you think is kind of the optimal point where the latency of a chain is low enough so that it can provide a good design space for application developers and the ability to manufacture liquidity at a cheap price, but where also the latency is not so low that it causes this intense geographical centralization pressure on the network. What's kind of the highest that we can go and what's the lowest that we need to go in order to make kind of the winning recipe, I think for DeFi?
01:15:18.230 - 01:16:39.894, Speaker C: My best guess right now, and I'm not super confident on this, is that faster is just better where you can be just more competitive with TradFi. I totally agree that latency driven centralization is a threat to decentralized systems, but it's not clear that having lower block times means the incentive for latency driven centralization is higher. I think Zero X 94305 on Twitter has been discussing this for a little bit where you sort of look at the MEB that's exposed if you have twelve second block times versus if you have shorter block times and who is more likely to win those sorts of races, how centralizing it is. It for validators and for searchers, and I think it's just really not that clear. And then from a more practical perspective, I think you just can't pause time for 12 seconds and expect the rest of the world to go along with it. In the case of DFI, basically what that means is today price discovery happens on centralized exchanges and participants in DeFi have this really poor UX and they get wrecked by mev. I think the goal really has to be to create centralized systems that can be useful today rather than systems that are only useful in the case of some collapse of the global financial system.
01:16:39.894 - 01:17:41.742, Speaker C: And so that really means building a decentralized financial system that is competitive with centralized finance. I think it's very popular these days to paint HFT as a villain, low latency traders as bad or parasitic. But DeFi on ethereum today suffers from all the worst aspects of HFT like front running, and it offers none of the benefits like price discovery and efficient liquidity. And then obviously the protocol design space is just so heavily limited on the L one today and even to some extent the L two S. And I think low latency systems or low latency blockchain reduces the total amount of MEB. And right now we see a lot of the MEB discourse focused on redistribution rather than reduction like we discussed before. Right now mev is costing these AMM liquidity providers hundreds of millions of dollars per year.
01:17:41.742 - 01:17:56.658, Speaker C: Regular traders are paying tens of millions of dollars per year. And this is just so fundamentally unsustainable, just like, cannot be the backbone of the future of finance, but no one wants to talk about it because the profits are all redistributed to ETH holders.
01:17:56.754 - 01:18:46.862, Speaker A: There are definitely parts that resonated with me there. Eugene. One fun part of hosting this podcast is kind of jumping in between different ecosystems and taking the perspective of each different ecosystem. And definitely a big change for me in exploring mev on Ethereum is that the user does not often take first place in terms of decisions that are being made. Although I do wonder in the long term, I think Ethereum might be a designer of Ethereum might be thinking like that, but sort of with the idea that you have to make short term compromises on UX to build distributed sort of network or a neutral sort of network. Lucas, I know we've got to wind down here in a couple minutes, but Lucas, I want to give you a chance to sort of bookend the conversation.
01:18:46.926 - 01:19:31.986, Speaker B: As think every I don't think I could have said it better than Eugene did. I think that Low latency can certainly drive geographic centralization, but I think that there's our 400 millisecond block times on Salana or the way that Salana is built right now. Does that drive more centralization? Not super clear to me yet, but I think it's definitely something worth keeping an eye on and hopefully validators and stakers can participate in preventing that from happening.
01:19:32.168 - 01:19:45.094, Speaker A: Guys, you've been super generous with your time and definitely given Halsey and I a lot to digest. If folks want to find out more about the work that you're doing or follow you or your projects, what's the best way for people to find out more information?
01:19:45.292 - 01:19:51.562, Speaker B: Yeah, my Twitter is Buffalo. You can go to Jeto WTF to learn more about what Jito Labs is building.
01:19:51.696 - 01:19:56.170, Speaker C: Yep. And you can find me at Zero X shit trader on Twitter.
01:19:57.150 - 01:19:57.802, Speaker D: Amazing.
01:19:57.936 - 01:20:09.902, Speaker A: Don't get better names than in the crypto space. So guys, thank you so much. It's been a real treat of a conversation. Appreciate your time. All right, partner. That was a great episode. What'd you think?
01:20:09.956 - 01:20:33.606, Speaker D: I thought it was amazing. That was maybe the most fun that we had so far. I learned so much. I think this is like, a big reason why I wanted to do the season on Mev because I thought there's a lot that I can still learn. And I think Eugene and Lucas really kind of showed us the way know.
01:20:33.628 - 01:21:16.946, Speaker A: In doing my sort of research for this season and this episode. The way that consensus works on Solana, if you're familiar with how it works on Ethereum, it's really very different in Solana. And I think one of the challenges of this season, or it's interesting, but a challenge is to sort of separate the Mev conversation from straight up just protocol design and consensus design because they're so intertwined, I think. So I really enjoyed the know where we discussed just how Solana works because at least for me, the way that it works on Solana is a little bit more challenging to totally grasp. And I really enjoyed the discussion about sort of fee markets as well and kind of contrasting how it works on Ethereum versus Solana.
01:21:17.138 - 01:22:12.482, Speaker D: Yeah, I completely agree. I think in the first half of the conversation when we discussed how Solana works different from Ethereum and what kind of mev market structure results from that, I thought it was so fun, for one, because it kind of validated a lot of the things that we had theorized about in previous episodes. Right. For example, this idea that if you have a low latency chain and if you don't have a fee market and if you have cheap fees, then it kind of devolves into the spam war. And Solana is such a great example for yeah, I think also Jito is taking a lot of the right steps in order to mitigate this problem. That's kind of the quote unquote flashbots on Solana. And I thought it was very interesting when we unpacked how exactly they approach kind of solving this spam problem, this MEB problem on Solana.
01:22:12.482 - 01:22:50.690, Speaker D: And it was interesting for me to see how it's not really about the bundle and kind of the atomicity guarantee that it provides. It's really about the ordering guarantee, right? It's about slowing down time and kind of tiebreaking between letting transactions accumulate and then tiebreaking between the transactions, deciding which one comes first and having kind of this auction between them that moving the auction to an auction on price and who can tip the validator the most instead of just an auction on who's the fastest or who can spam the chain the most. I thought that was the most interesting in the initial half of the conversation for me.
01:22:50.760 - 01:23:18.934, Speaker A: I also do think there are probably some fundamental limitations with the difference of salon obviously being their focus on low latency, which has a lot of benefits, but there are downsides and risks to that as well. One of my takeaways from this conversation is that you couldn't ever probably have PBS in the way that is being engineered on Ethereum on Solana because the hit to latency would simply be too great. So I thought that was a big takeaway for me from the conversation.
01:23:19.062 - 01:24:04.822, Speaker D: Yeah, yeah. But it was interesting that I think the mev ecosystem on Solana and even the base layer design in some ways as it relates to fees, it's kind of converging on what Ethereum is already doing. Right. And I think it kind of shows that if you want to be really unique, you want to be really creative. I think a lot of the time there comes mev with the sledgehammer, right? And it just destroys your plans and you have to go back to some design that's already like that kind of factors in MEB and it's more proven to work. I think Avalanche is another chain. We will not talk about Avalanche in this season, but I think it's another great example for a chain that tried something really unique with their consent, like Snowman consensus leaderless protocol.
01:24:04.822 - 01:24:55.290, Speaker D: And then it got completely smacked in the face once there was any DeFi activity on there because searchers started basically manipulating the consensus and basically slowing down the block time to the point where the network would just stall out and not finalize for like 1020 30 seconds at a time. And so they had to change away from it. And so it's interesting that we're seeing the same things on Salana. And, yeah, I think kind of their variant of PBS, it might look a little bit different. I think, if I had to guess, it will move a little bit more in protocol than we see in Ethereum, just because if you have something that's out of protocol, then it just takes more latency. Basically everything takes longer. There's more parties involved, there's more communication steps, and Solana really wants to get their latency down.
01:24:55.290 - 01:25:47.174, Speaker D: And so if I had to guess, then whatever they end up with, I think there would be more components of it inside the protocol than outside. And I think actually, I think Lucas made this great point, or it might have been Eugene. One of them said that it's like when you want to do things like precise and efficient, you do them outside the protocol, but you can also do them inside the protocol. You sacrifice some efficiency. For example, if you use some form of base fee on a particular part of the state, right? And then it just approximates kind of what the recent demand for that piece of state was. And it really acts like an off chain mev auction, in a sense. It's just like, way more clunky, way less precise, and generates less revenue, but it works somewhat, right? And so this is a way that you can do something that we know to do really well outside the protocol.
01:25:47.174 - 01:25:53.470, Speaker D: You can pull it into the protocol and you sacrifice some efficiency, but at least it's like, way faster.
01:25:55.890 - 01:26:43.786, Speaker A: A couple of notes on all of that, which is totally noted about in protocol versus out protocol, and we've talked about this a little bit within the context of Ethereum, about what makes sense to get enshrined versus what are we okay doing off chain, et cetera. I also do want to just give a big plus one, too. It's very interesting to sort of note that designs are converging across different ecosystems. Last season, we talked a lot about how certainly there's a convergence in architecture between Cosmos and Ethereum. And Ethereum has kind of adopted, I think, an idea that sort of began actually with lazy ledger in 2019, which was sort of a Cosmos type project. And it's interesting to see the same thing happening a little bit between Salana and ethereum as well. I had a question for you.
01:26:43.786 - 01:27:08.674, Speaker A: I wanted to dive deeper in the episodes, but I didn't want to distract us too much. The question of when we were talking about multi dimensional or sort of parallel fee markets and the idea that you could, let's say on Ethereum if you wanted to broadly categorize it as DeFi fee market and an NFT fee market and you asked the question is that a good thing or not? It kind of seemed like you had actually given a decent amount of thought to that. And I sort of thought I started.
01:27:08.712 - 01:27:09.654, Speaker B: To see where you were going.
01:27:09.692 - 01:27:11.510, Speaker A: But could you dig into that a little bit more?
01:27:11.580 - 01:28:31.626, Speaker D: Yeah, no, I actually haven't thought about it much, but it was not clear to me that a chain shouldn't kind of have a lot of slack and buffer for specific applications to take over the chain basically when demand is really high. And I understand that this crowds out a lot of other application usage, but it's basically you also create this disincentive. You kind of arbitrarily throttle kind of the supply of the chain for a particular type of application and you create a disincentive for apps that might be really popular to build on your chain. And so I think with resource pricing, this is one of the most underexplored, underutilized, most interesting kind of topics in blockchain design because how you price the resources affects so many things. It's like you're playing God or you're playing like the government in a sense and you're trying to try to incentivize particular forms of economic activity. Right? That's why, for example, we have these pre compiles in Ethereum or Opcodes. It's another term for them, right? And it's basically subsidized usage of Ethereum because we say, oh, these operations are very useful for Ethereum like for users and so we want to subsidize them and other things might be discouraged.
01:28:31.626 - 01:29:09.530, Speaker D: Right? And so it's about encouraging certain behavior as well as discouraging others that might cause negative externalities. And so, yeah, I think it's both a science and an art in kind of designing these resource pricing mechanisms here. And Ethereum is making new grounds with, I think, multidimensional EIP 1559 and I think Salana is equally breaking new grounds here with the idea of kind of the state based base. So I think this will be also really interesting to see kind of how it develops.
01:29:10.030 - 01:30:10.570, Speaker A: The reason why I think it's relevant to Solana is I guess I want to think about it a little bit more before coming to a conclusion. But it's definitely a problem of generalized block space where you can have one application interfere with the performance of another. And I do hear, you know, would we have uniswap or only there are very few app success stories in Ethereum so far. The vast majority of them are on Ethereum. And I do wonder to your point whether or not they would be success stories if Ethereum decided to throttle, for instance, opensea's usage of block space. On the other hand, I think long term, in a monolithic design where there aren't explicit plans for app specific block space or L two S or whatever, I think you have to solve that problem eventually. Because even just imagine in a DFI sense, if you had critical financial infrastructure, you would not want it disrupted by some NFT.
01:30:10.650 - 01:31:21.334, Speaker D: Mint or something that would just imagine how much politics that will introduce. On top of that like something that aspires to be a base layer, right, as kind of different applications try to lobby for their usage of the chain to be expanded, for them to be allocated more capacity for their usage to be subsidized. I think this is going to be really hard for a chain that aspires to be credibly neutral aspires to be kind of an unpolitical base layer. I think we will see something like that maybe on some of the higher level domains. But the thing is the same thing that makes kind of this very opinionated resource pricing very difficult which is credible neutrality is the same thing that makes it very attractive for applications to build on your chain, compose with other chains and settle down there because it's basically that like platform risk, right? Credibility neutrality minimizes platform risk but it also minimizes your ability to kind of be opinionated about resource pricing. And so yeah, I feel like it's a stalemate there.
01:31:21.532 - 01:32:16.114, Speaker A: It's tough, it's very difficult. And I'd be curious maybe this is a good segue know, our discussion of DeFi and AMMS versus central limit order book constructions and the pros and cons there. But I found myself thinking the same thing when Eugene was describing the amount of money essentially that LP sort of passive LP stakers on Uniswap are doing at some point. I do feel like politics is inevitable and even here's an example of how this is happening on Ethereum like Blobs kind of data blobs for cheaper execution on layer twos. That's a very popular decision, right? And that's directly to support the roadmap of Ethereum. But it is already a political decision I think. And I do wonder if I was uniswap as a single entity.
01:32:16.114 - 01:32:53.138, Speaker A: I obviously know that it's not. But if I was uniswap and I was like hey, I'm responsible, my application is responsible for an enormous amount of activity on Ethereum. I'm essentially subsidizing an enormous portion of Ethereum vis a vis my LPs that are providing you know, right now we're in the pie is growing and we want to make the vision work but eventually that's not going to be sustainable. And I would have to imagine uniswap has an enormous amount of lobbying power in Ethereum. So maybe if you could kind of respond to that and how long you think that equilibrium is going to be stable for and then we could get into the AMM versus central I mean.
01:32:53.144 - 01:33:49.826, Speaker D: It'S not just that. I think Uniswap has lobbying power, which may be true. I don't think they're particularly close to core development even though they are initially funded by grant from the Ethereum Foundation. I think it's more so that they have kind of bargaining power in the sense that certain decisions might not even without kind of any explicit form of collusion, that there might be certain forms of decision that are very hard to make because then applications like Uniswap would leave the chain. And I think we will see that happen at some point anyway. I think the more kind of business people there are in crypto working on these applications, they will look at the entire value chain of that application and they will think, oh yeah, this is like the amount that we pay for security. This is the amount we pay for settlement, this is the amount we pay for our back end or indexing, whatever.
01:33:49.826 - 01:34:46.626, Speaker D: Our front end, all of these things. And they will think, oh, how can we make more money? But also how can we spend less money? And they will think, well, maybe if we are spending a ton of money on data availability on Ethereum, whatever, right? Then let's also explore some other options. And I think there will be competition. And I think for what it's worth, like the Ethereum core developers and the Ethereum Foundation is also very aware of that. Right. I think they understand that other applications and users are their customers and their users and we are all like a community, but we're also all competing with each other, right? And if Ethereum isn't kind of the best, most cost efficient option for someone, then that someone is going to leave Ethereum. And so I think this is part of what motivates this whole shift to Ethereum becoming kind of the best settlement layer, the best data availability layer.
01:34:46.626 - 01:35:03.520, Speaker D: And I think we'd see a lot more changes that kind of optimize for the needs of applications. But I think it would be more like in the sense that optimizing for archetypes of applications and less so for any kind of individual ones.
01:35:04.210 - 01:35:05.440, Speaker A: That makes sense.
01:35:06.290 - 01:35:06.654, Speaker C: Yeah.
01:35:06.692 - 01:35:22.626, Speaker A: Talk to me about what your thoughts were. I really loved just listening to you and Eugene go back and forth on AMM versus Central Limited. It kind of reignited this memory of mine that this was sort of a raging debate a couple of years ago. People love to talk about this. So yeah, give me your what did you think?
01:35:22.728 - 01:35:47.382, Speaker D: Yeah, I love Eugene. I think he's such a great guy. And yeah, that was a really fun debate. I thought it was great to hear his perspective of someone building an application on Solana and so he's someone who was more closely aligned with Ethereum, I would say. So I think that's how we met initially. And so it's kind of great to see some bridges being built to that. Ecosystem.
01:35:47.382 - 01:36:47.358, Speaker D: And I thought he made a lot of interesting points just about how there can be instances where faster bug time exposes less mev like prices update faster when you have an easier time manufacturing liquidity. It kind of plucks more nicely into whatever mental and technical APIs existing TradFi market makers already have. And so it basically lowers kind of the entry barriers that they have into crypto. And I think these were all super valid arguments and it kind of hints at this general idea that it's not just about building decentralized systems, it's also about building systems that can compete with whatever is already out there in the real world. And yeah, I thought that his argument really resonated with me. And yeah, I think that kind of like this geeking out about AMMS versus central order books. I think that was really just the cherry on top.
01:36:47.358 - 01:37:15.830, Speaker D: I think the last word hasn't been spoken about central order books versus AMMs. I think AMMS have some tricks up their sleeves. I think central order books are relatively figured out. I think there's not much innovation to expect here. I think it's more about bringing kind of existing standards on chain versus in AMMs. I think there's still a lot that's going to happen, a lot that's going to develop and I think this year we'll see some very interesting things with mev capturing AMMS.
01:37:17.050 - 01:37:54.930, Speaker A: Yeah, I tend to agree with all of that to be honest. Trying to think I think that was basically it. There's definitely a lot to think about and I think I just always love hearing from the solana side of things. I think it's kind of one of the communities that has definitely taken. The one other point, actually, that I wanted to get your thoughts on is his point we talked about this a little bit in even more greater detail, kind of off air. But his point that look, in general, HFTs. Are sort of villainized and they're not a very sympathetic group of people because they just, frankly, make so much money and they're very opaque.
01:37:54.930 - 01:38:22.410, Speaker A: And his sort of perspective was actually providing liquidity is a good right. So really you've been leading the charge on warning about some of know what we don't want to do is just recreate the TradFi model here. But I think Eugene injected a little bit of nuance that look what HFTs do in terms of providing liquidity and assisting in price discovery, that's actually not a net bad. So I'd just be curious to get your thoughts on that point.
01:38:22.480 - 01:38:55.174, Speaker D: No, I mean I would agree with him. I think my view on this is also nuanced in the sense that I can really appreciate the innovations behind kind of electronic markets. I'm not even a big hater of payment for order flow or anything. I think it has improved a lot of the liquidity kind of the execution that you can get as a user. I think it's more so about what it kind of does to market structure long term and the question whether there's a better model here.
01:38:55.212 - 01:38:55.800, Speaker C: Because.
01:38:57.770 - 01:39:33.426, Speaker D: Crypto and DeFi is different from TradFi in the sense that if someone is really good at market making on chain, then by definition, almost. That means they will be good at block building and it means they will have good amount of power over the chain. And so an outcome about a market structure outcome that would be acceptable in like entirely acceptable to me, I wouldn't even change the market structure in TradFi, but I can say the same. Market structure is not desirable for DeFi just because it has more implications on base layer decentralization. And so I think that's generally where.
01:39:33.448 - 01:40:09.402, Speaker A: I'm coming you because I've actually questioned this a lot myself. Could you respond to the last point that Eugene made just about maybe Ethereum? His broad point I'm sort of paraphrasing here was ethereum is building for a situation either explicitly or implicitly where there's some kind of government crackdown or the government tries to ban it. So the design is such that even in our discussion about latency, latency would be okay if we weren't concerned that a government might come in and shut down. That's why we're very concerned.
01:40:09.546 - 01:40:51.978, Speaker D: I didn't really agree at all with that. I didn't really agree at all with that. I think that even at like a twelve second or five second block time, I think there's plenty of things that you can build on Ethereum that's better than existing systems. And I don't think that Ethereum needs to be better at everything than kind of existing systems. I think it needs to be better at some specific things. And I think those specific things is kind of verifiable computation and kind of making credible commitments towards one another. And I think that what this does is basically removes the need for trust in kind of commerce in collaboration and it just unlocks a lot of human collaboration anywhere in the world.
01:40:51.978 - 01:41:28.150, Speaker D: And I think that what makes it powerful. And I don't think that latency is really like a huge factor in that. And yeah, I think the next few years will kind of show what you can do also in kind of higher latency chains. I think mev capturing AMMS are one thing to look out for but also batched auctions. Right? So I think these are generally things that you can do in order to have also very good price discovery with maybe like a little bit higher kind of latency.
01:41:28.570 - 01:41:42.670, Speaker A: Yeah, well said. All right, partner. Well, this has been a fun one. Next week we're going to be talking with some of the folks over at Cosmos actually in another fun sort of partridge from Ethereum. But that should be a good one too.
01:41:42.740 - 01:41:43.920, Speaker D: That should be good.
01:41:44.690 - 01:41:45.530, Speaker A: All right. Hasu.
