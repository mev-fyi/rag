00:00:00.170 - 00:00:35.538, Speaker A: Crypto will be successful if we can provide an alternative infrastructure that doesn't require communities to choose between autonomy and interoperability. So at the moment, you really have this dichotomy where communities, even ones that want to be, you know, more economically selfsufficient, must choose, if they want interoperability to use, like, global fiat currencies. They must choose to use the dollar or the euro or the yen, you know, one of these large currencies to cooperate economically with the rest of the world. And using those currencies makes them really dependent and subject to censorship or sanctions or just manipulation.
00:00:35.634 - 00:00:58.266, Speaker B: What's up, everyone? We are now almost one month out from Das London, the largest institutional conference in all of crypto. That's happening March 18 through the 20th, obviously, in London. This one's going to be a blast. We are almost ten times oversubscribed for tickets, which is pretty nuts. So again, we've had to lower the discount to bell ten. And better yet, make sure you bring your friends. We sell a four pack of tickets.
00:00:58.266 - 00:01:12.814, Speaker B: Find people in your company, bring your boss, bring your family, bring your girlfriend or boyfriend, whatever it is, just go. You're going to get a discount if you use that team pack. Run, don't walk. Make sure you go. Give those tickets today and cheers, and see you in sunny London town.
00:01:12.862 - 00:01:17.346, Speaker A: All right, everyone, welcome back to another episode of Bell Curve. Before we jump in, quick disclaimer, the.
00:01:17.368 - 00:01:24.002, Speaker B: Views expressed by my co host today are their personal views, and they do not represent the views of any organization.
00:01:24.146 - 00:01:29.082, Speaker A: With which the co hosts are associated with. Nothing in the episode is construed or.
00:01:29.136 - 00:01:34.262, Speaker B: Relied upon as financial, technical, tax, legal, or other advice.
00:01:34.326 - 00:01:35.146, Speaker C: You know the deal.
00:01:35.248 - 00:01:37.130, Speaker A: Now let's jump into the episode.
00:01:39.230 - 00:02:36.778, Speaker B: Hey, everyone. Welcome to the first interview episode of the multi chain Endgame season. Today, Hart and I are going to be speaking with Chris goes, one of the co founders over at Anoma. Now, the reason why we wanted to start this season off with Chris is because he is a superpower where he can talk about concepts, was at very high level, philosophical, 10,000 foot vantage point kind of view, but he can also get really in the weeds and the nitty gritty details, and that comes from his background as a protocol designer at Tendermint, where he worked on IBC, and currently what he's doing at Anoma. So we got Chris's thoughts on everything from the current issues with blockchains as they exist today, to where he sees this industry going in the future. Some of the design decisions around anoma this is where we got really into the weeds on intense and interoperability in between different blockchain trust zones. We talked about protocols starting to basically unbundle and competing on the basis of what the protocol actually does versus the currencies that they export.
00:02:36.778 - 00:03:00.920, Speaker B: Finally, we ended this episode by asking Chris what he would see as a satisfying endgame for crypto, and he gave one of the best answers to this I have ever heard. So really hope you enjoyed this interview with Chris. We'll get right into it. Yeah, enjoy, guys. All right, everyone, welcome back to another episode of Bell Curve. Today I'm joined by my co host for this season, Hart Lambert, and we are going to be talking to Chris Gos, the founder of Inoma. Chris, welcome to the program.
00:03:01.850 - 00:03:03.320, Speaker A: Thank you for having me.
00:03:03.690 - 00:04:20.800, Speaker B: Yeah, we've been really looking forward to this conversation and want to use this as an opportunity to unpack some of the big themes of this season. And for listeners who haven't heard Chris before, I think, Chris, you're very good at kind of speaking at all levels of the stack. So high level philosophy, but also being able to go down into very, very technical, you know, not to put you on the spot, but I think we want to make full use of your range today and kind of get your thoughts on some of the high level architecture and almost philosophy of where we're going in crypto, but also ask you some very specific technical questions. And for listeners who are trying to get a chart of the agenda for today's talk, we're almost going to do a technical sandwich. We're going to start with some of the higher level stuff, get into the meat of the technicals, and then end with some of the broader implications. But, Chris, I thought just as a jumping off point, you have mentioned a talk given by Moxie Marlinspike, the founder of Signal, before, as kind of this very influential discussion about, and something that you took away for a lot of stuff about blockchain architecture. So you give us an overview of what this talk was and how it influenced or helped you understand some of the stuff that's broken with how we think about blockchains today.
00:04:22.610 - 00:04:47.302, Speaker A: Well, I'm very happy to plug this talk again. More people need to watch it because it will save you years of your life, at least if you're working on blockchains. So the talk is a talk by Moxie Marlin Spike, the founder of Signal, although he no longer works there. And it was a talk given at 36 c three, I guess, the 36th chaos computer Congress in Germany. The talk is called the ecosystem is moving. You can find it online. It's about 30, 35 minutes.
00:04:47.302 - 00:05:40.786, Speaker A: It's definitely worth watching. And I don't know all of the context, but I think this talk was given by moxie, basically in response to a bunch of people complaining that signal wasn't federated. So early on in the lifecycle of signal, the protocol and the application, really before it was like anywhere near as popular as it currently is, that emerged from a kind of hacker cryptography community. And a lot of them were into building federated chat protocols, as in protocols like matrix, where there are a bunch of different servers operated by different people, and there's a common protocol that connects all of them. So it's like pretty decentralized. Different people can use different server providers, and they can still talk to each other using the same protocol. And signal early on, experimented with various approaches to this, but decided not to be decentralized, decided to operate a centralized server, still build, of course, all the encryption so that the server can't read your messages.
00:05:40.786 - 00:07:18.700, Speaker A: The server has very few permissions, but they decided to operate it in a centralized fashion. And this talk was basically a talk by Moxie explaining why he made that decision. And what he explains in the talk is that he understands signals, competitors as basically centralized chat services like WhatsApp and Facebook messenger, stuff like this. And all of those services are controlled by companies. And one big advantage of centralized control, in fact, maybe the primary advantage, is that it allows you to change the protocol quickly, because Facebook is a company, because WhatsApp, separate back then was a company, because Google is a company, they can upgrade the protocol and they can upgrade the protocol in particular to give users more features like emoji reactions and images, and faster know all the stuff that people want, right? And the critical disadvantage of decentralization in this sense, the reason moxie decided not to federate signal, according to this talk, is that it would make it basically impossible for them to keep up with that speed of change in just what users want and what users expect out of a chat protocol. And if Signal wasn't able to keep up with the centralized services, then everyone would just know WhatsApp, because WhatsApp would have emoji reactions and images and automatic memes and all of this stuff that people find fun and engaging in chat protocols. And signal wouldn't, because signal would be deployed on like 150 independent servers, and those 150 independent servers would never agree with each other on a protocol upgrade any more frequently than like once every few years.
00:07:18.700 - 00:08:00.582, Speaker A: So the relevance of this talk, to blockchains I think blockchains have a very similar characteristic as the thing which basically moxie was trying to avoid. They're distributed systems, and once you deploy them in practice, they are trying to be decentralized. Right. It's very, very difficult to change them. This is perhaps doubly true in the case of blockchains with tokens, where crypto economics is involved due to a selection effect. So once you launch something like Ethereum or bitcoin, cosmos hub or Solana, these different chains, that chain starts out with an initial sort of crypto economic model, and people basically join the community in part because they agree with the model. Right.
00:08:00.582 - 00:08:49.078, Speaker A: It's very transparent how, at least for the most part, not always to whom, but typically how much of the asset there is, how it's being issued, what the rules around gas and fees and redistribution are. Stuff like this is quite transparent. So people join the community in part on the basis of those expectations. And this makes it very, very difficult to change both the kind of actual computer protocols, just because you need to get so many people to coordinate, and the economic distribution functions of these systems. That means that if you make a mistake or if something you design is not exactly what your users end up wanting, it's very difficult to change it. Often what happens is the users just shift to a new and different system which can make choices which are better for them. Does that make sense? It's kind of a summary of the talk, yeah.
00:08:49.164 - 00:08:54.102, Speaker C: So you have the bitcoin core dev problem. Nothing changes, right?
00:08:54.156 - 00:09:18.110, Speaker A: I mean, this can be a feature or a bug, depending on how you look at it. I'm not necessarily saying that it's bad, but that it is something that's helpful to be conscious of, because I think some people have this idea that they'll deploy blockchains like a sort of iterative MVP process that, say, a Silicon Valley startup might use. And that works really well for Silicon Valley startups because they can pivot in like a board meeting on a Friday evening and blockchains can't.
00:09:19.090 - 00:09:38.680, Speaker C: No, it makes perfect sense, and I totally get it. There are pros to it. If you want to have digital gold that's super stable and doesn't change, but if you're trying to invent the future, kind of hard. So how did this lead to anoma? I kind of see where you're going here, but how'd you go from there to what you're doing now?
00:09:40.170 - 00:10:23.140, Speaker A: Well, yeah, the path is definitely not linear, but tracing back all the causality is a herculean effort. But this talk was definitely a big inspiration. I think, in part, it made me very cautious. Like, I really didn't want to make the wrong decision and deploy a system that know. For example, I had the experience of working on IBC, right, the interoperability protocol used by the cosmos ecosystem and starting to expand to Ethereum rollups recently. And IBC makes a lot of decisions, and some of them, I think now, with the benefit of hindsight, were wrong in terms of how it considers concurrent state machines and just how the protocol is architected. And I think it's basically impossible to change this.
00:10:23.140 - 00:11:03.902, Speaker A: So that's a bit unfortunate. I spent a lot of time working on that, and I would rather work on things that will be around for a long time. So one lesson that anoma takes away from this, at least, is that we actually try to make as few decisions as possible in the architecture of the protocol. In particular, we try to not make decisions on very specific primitives that are probably going to change in the future. A good example of this is something like a zero knowledge proof system. So zero knowledge proof systems keep getting better, which is fantastic, except that it means that if you standardize one, it's going to be out of date in two years. Definitely there's going to be a faster one.
00:11:03.902 - 00:11:29.850, Speaker A: So when we think about a noma, of course, the actual instance will run with a specific zero knowledge proof system at a specific time. But we try to incorporate that heterogeneity of components into our design. So we expect that different people will be using enoma with different proof systems, and the proof systems will change over time. And we don't tie any of our architectural decisions or design decisions to a specific choice there. I think that's our main takeaway.
00:11:31.230 - 00:12:00.180, Speaker B: Yeah. And that's where I think we start to get into this idea of intents as well. Chris. And this is where maybe it would make sense to. Why don't we try to compare and contrast, I think, with. So we've sort of outlined one of the core problem statements, and this has been a problem statement going all the way back to the days of bitcoin, where there's something that's a feature and a bug at the same time, depending on how you look at it, which is this immutability. This idea of immutability, once you build it, it can't change.
00:12:00.180 - 00:13:06.440, Speaker B: You have to couple that with the idea that these are essentially, and this is a metaphor that an analogy that I've heard you use quite often is we're building operating system. There's a technical component. We're trying to onboard users, and obviously we need to iterate, make decisions and make changes there. So I think one of that, we're at this sort of interesting point in crypto where there's a little bit of a fish who doesn't know they're in water type thing. Like old fish goes up to young fish and says, how's the water today? And the young fish says, what's water? And so I would love to understand from your perspective, because I think whenever you get into something like intense people like, well, why couldn't I just do this on Ethereum or Solana, can you, before we unpack some of the specific design principles of a noma and what that actually is, can you help us understand what are some of the things that might be invisible today that you see as a massive problem or major design decisions that we might have made that are incorrect? Can you point some of those out? Because I think it'll help contrast when we sort of unpack your vision of the future.
00:13:08.590 - 00:13:58.470, Speaker A: So at a very high level, I think a lot of the progress in blockchain design has come from a sort of unbundling of components, originally with bitcoin. Bitcoin started with everything integrated. There was literally one piece of software written by, we think, one guy or girl or small coordinated group. And that piece of software did everything. It had an asset, it did ordering, it did storage, it did execution, it did verification all in one sort of glob without clear boundaries between any of these things. Now, over time, we've seen those aspects start to become unbundled, certainly with kind of the roll up centric direction of ethereum, with different aspects of modular design. But I still think there are some assumptions baked in that may not be suitable for the design context.
00:13:58.470 - 00:14:25.186, Speaker A: One of those relates to the design of virtual machines. So most virtual machines in blockchains, at least that I know of, are built on something called the von Neumann architecture. This is true of the Ethereum virtual machine. It's true of the Solana virtual machine. It's true of the message passing system chain cosmos modules, which is a little bit like a virtual machine. Van Neumann architectures are pretty old. They date from the.
00:14:25.186 - 00:15:00.890, Speaker A: They were designed, I think, primarily for mainframe computers, and they were designed for people to execute programs, do computations using computers. So they already had some aspects which are relevant to blockchains. They had maybe multiple parties using the computer, but they did not necessarily have. What they did not have was distribution. In particular, they had one unique clock and one of the things, one of the assumptions baked into this architecture is the idea that there's like a single place where ordering happens. And this is not true in the blockchain context. There are a lot of places where ordering happens.
00:15:00.890 - 00:15:45.526, Speaker A: This is, in fact, where MeV comes from, is that there's not just a single place where ordering happens. And this kind of, for example, in some of our work with inoma, we are working on what we call a resource machine, which is kind of like a virtual machine. That doesn't make this assumption. It assumes that there can be multiple stages of ordering, where each stage of ordering is kind of like the partial application of a state transition. And at the end, you better get one that's fully applied. So one, I guess maybe blind spot that I would see is just this virtual machine design that's based on a kind of logically centralized execution context of a mainframe computer. And blockchains don't have that, another concept.
00:15:45.526 - 00:16:17.480, Speaker A: Certainly the concept of privacy has become pretty salient in recent years. Personally, I think the word privacy is kind of misleading as it pertains to blockchain systems for two reasons. One, privacy is not a system property. It's a property of a specific interaction. So if we think of a transaction, I might make my transaction public to you, Hart, but not to you, Mike. So is that transaction private? Well, it's both private and not private, right. It's like private to one person, public to the other person.
00:16:17.480 - 00:16:25.206, Speaker A: So it's not really a property. It's a property of a specific piece of data with respect to a specific observer, not of like a system.
00:16:25.308 - 00:16:25.960, Speaker B: Right.
00:16:27.290 - 00:16:58.850, Speaker A: Also, I think privacy has this connotation of hiding. It comes from this world where light is bouncing around everywhere. And if you don't want light to bounce on your thing, if you don't want your neighbors to see what you're doing, you have to pull down the window blinds. So there's this implication of an act of hiding. And this is not how digital systems work, at least not how these kinds of distributed systems work. By default, your data lives on your computer, and the only way it goes somewhere else is if you send it somewhere else. So the thing that we're really trying to program is disclosure, not privacy.
00:16:58.850 - 00:17:45.742, Speaker A: Now, a limitation of some existing systems is that they couple these decisions. So if you use a fully transparent chain, like the Ethereum main chain at the moment, solana main chain at the moment, you can only choose to disclose your transaction to everybody or nobody, right. If you don't send it to the blockchain, it's private, but it's also not very useful. And if you send it to the blockchain, all of the data is visible to everybody. So that is a kind of programmable disclosure. It's just a very limited kind. And what we're trying to work on at enoma with the resource machine is to allow for much more fine grained distinctions using, among other things, zero knowledge proofs, where users can select specific parties, who they want to see specific parts of their transaction data, which is how most people are used to interacting in the real world anyway.
00:17:45.742 - 00:18:00.390, Speaker A: Right. You have like a lot of chat groups, and they have different partially overlapping intersections of people and different purposes, and you share different information in them depending on contexts. And I think that's also the direction we might expect blockchain systems to evolve.
00:18:01.130 - 00:18:42.738, Speaker B: Yeah, Chris, there's so much to unpack. So one concept that I might point listeners to as well is this idea of SKU morphism, which might be relevant here. Chris Dixon has talked about this at length, but maybe one difference for know, when we've talked about building operating systems in the past, it's kind of like here's this software, you log onto your computer and then it's just there. Whereas what we're talking about here, I think, is building a distributed operating system here. So there are some principles that apply and some that don't necessarily. But where I really want to dig in is this concept of unbundling, which is frankly a core theme of this season. And I think people are only starting to understand.
00:18:42.738 - 00:19:33.566, Speaker B: And where I want to maybe end up in this discussion is especially most people who are listening will be familiar with this idea of modularity as unbundling, settlement from DA, from consensus and execution. I think people are pretty familiar with that as a mental model. But I think the thing that folks are only starting to grapple with is unbundling a protocol from its asset, from its security model. And you have talked about competition from the standpoint of a protocol competing with an asset. And I would love to kind of unpack the vectors of competition there. But even before we get there, you have this really great analogy of us malappropriating ideas and business models from Silicon Valley. And you kind of talked about us maybe having this mental model of platforms as the primary vehicle for value capture.
00:19:33.566 - 00:19:51.530, Speaker B: And can you, even before we get into that unpacking, can you talk to us a little bit about some of the preconceptions that we might have for how value is extracted on the Internet and that are kind of taken for granted in Silicon Valley and how we have misappropriated that within a blockchain context.
00:19:53.790 - 00:21:11.150, Speaker A: So I think a pretty common model of how value is accrued in silicon, sort of in web two companies mostly, is this concept of a platform and a platform seeking and deriving value from usage and fees that are associated with usage. So a few canonical examples of this are something like Uber, something like the App Store, something like Facebook marketplace, stuff like this. In all of these cases, there's a basic theory of proportionality in play, the theory that the value of the platform is proportional to the amount of usage. And that's usually directly true in these cases, because all of the usage pays like fees to the platform. Right? And often this model, it seems to me in the discourse, is applied to blockchains and their assets, as in, there's like a theory that the value of an asset is proportional to the value of usage fees paid on the platform, and in particular the value of applications directly running on, or perhaps even deriving security from that platform. But there are a few critical differences between what happens in web two and what's happening on blockchains. One of them is that there's a distinct asset.
00:21:11.150 - 00:21:59.060, Speaker A: So the Facebook App Store or Google, Microsoft, sorry, Google and Apple's stores on their respective platforms, they don't have their own currency. Now, they might want to issue a currency. Facebook did try to do this, but they're too big and they're too antitrusted to manage that, and perhaps too badly coordinated internally, whatever, I don't know. But they're using a different currency. So I think the platform like thesis of value for web two companies is pretty much correct. Whether or not it's good for society, it's like correct for analyzing what's going on and that set of value flows. But bitcoin and Ethereum and cosmos, Salana, these ecosystems have native assets, and those assets can be used.
00:21:59.060 - 00:23:01.030, Speaker A: Basically, the value of an asset is not determined by anything other than who chooses to buy and use that asset. I don't think you can reduce it to some physical law or some usage of a platform or something like this. Assets can live in many different places. And at least I would say to me, the primary value of these assets, let's say, for example, Ethereum, really comes from the community and people wanting to be part of the community, people finding the services provided by that community valuable, people choosing to invest in the asset, to accept the asset, really to kind of demonstrate and increase their alignment with the community. So I think this model is kind of if maybe just accept that as a hypothesis, then this platform value capture model is not particularly synergistic. If the actual value capture mechanism is the community, because the platform value capture model tends to lead to this kind of attempt to create usage. Right.
00:23:01.030 - 00:23:45.522, Speaker A: You see this more in new ecosystems than directly in Ethereum, although you saw it more on Ethereum initially, where a bunch of the issuance of the asset is used to kind of encourage applications to just use the platform, and in order to qualify for that issue, and the applications have to, I don't know, pay fees to the platform or inherit security from the platform or something like this. And I'm not sure that I think that's maybe not the most efficient use of capital. If the primary value of the asset is derived from the community, not the platform. If the primary value of the asset is derived from the community, then you want to make the community better. Make it a community that provides more value, provides more education, make it a community that more people want to join and invest into the future of stuff like this.
00:23:45.656 - 00:24:08.614, Speaker B: What's up, everyone? We are now almost one month out from Das London, the largest institutional conference in all of crypto. That's happening March 18 through the 20th, obviously, in London. This one's going to be a blast. We are almost ten times oversubscribed for tickets, which is pretty nuts. So again, we've had to lower the discount to bell ten. Still hooking you guys up, getting you a 10% discount on bell ten. And we've onboarded a whole bunch of new speakers.
00:24:08.614 - 00:24:23.466, Speaker B: So that's Dan Tapiero of one Rt. Pascal Gothier of Ledger. Anthony Scaramucci the mooch himself. Michael Sonninshein of Grayscale. Brad Garlinghouse of Ripple. Sergey Nazrov of Chainlink. Matt McDermott of Goldman Sachs, the global head of digital assets.
00:24:23.466 - 00:24:33.662, Speaker B: Stani Kulachov. Danny Masters. The list goes on. This one is going to be an absolute blast. Make sure you don't miss it. And better yet, make sure you bring your friends. We sell a four pack of tickets.
00:24:33.662 - 00:24:50.562, Speaker B: You are going to get a discount on that. So find people in your company. Bring your boss, bring your family, bring your girlfriend or boyfriend, whatever it is, just go. You're going to get a discount if you use that team pack. Run, don't walk. Make sure you go get those tickets today and cheers, and see you in sunny London town.
00:24:50.626 - 00:25:26.942, Speaker C: So, Chris, like, okay, I want to push on this and I want to draw it back a little bit to intense. And how intense enables or improves interop here too. But to regurgitate a little bit of what you're saying here, let's just to make two examples. We have, like the Ethereum platform and the Salana platform, right? And I'm going to frame them as web two businesses, which they're not. But just bear with me for a second. So we have Ethereum platform and Solana platform, and this kind of platform value capture model. We're saying, hey, users, go use the Ethereum platform, do things exactly this way.
00:25:26.942 - 00:25:54.250, Speaker C: Here's how Ethereum execution works. Here's what an Ethereum transaction looks like. You use Ethereum to pay for it. And at the end of the day, in this particular framing, we're going to say, this looks like a web two value capture business. We want more usage of our platform. It's good for the asset, right? And on Salana, you have the same thing. It's just different infrastructure, it's different opcodes, different execution environment.
00:25:54.250 - 00:26:26.838, Speaker C: Here's your Solana transaction. Here's how it works. Go. Let's use Solana cap for value that way. And as I've been reading and even prepping for this with you, we're like, okay, these two things make sense, but you're making a couple interesting points here. One point is the actual user, and I'm going to use the word user and make it more singular. You're kind of talking about communities which are maybe more pluralistic, but the user, from their perspective, they don't really care if they're using the Ethereum platform or the Solana platform.
00:26:26.838 - 00:26:44.910, Speaker C: They just care if they can do the thing they want to do, like, whatever the action is they want to do. And maybe I'll pause here and let you kind of go into intents and how you see intents as a method to unify these different platforms.
00:26:47.170 - 00:27:32.860, Speaker A: Right? I mean, to your point, I think as protocol architects or as a protocol architect, my job is to be humble and accept that users want things, and I have no influence over it. And users don't want to use a particular, I don't know, blockchain. It's like, think about computers. Do you want to use the Intel I seven processor because you have a specific affinity to that particular processor? Maybe if you were like, the designer of that processor, or you're like the dad of the person who designed the processor, maybe it has a special significance in your life. But for most people, they want to use the processor because it's, like, faster or because it has more cache lines. They don't care about the specific thing. They care about what it provides to them.
00:27:32.860 - 00:27:44.930, Speaker A: And intents, in our conception are a way for users to describe what they want the blockchains to provide to them. And what they want the other users to provide to them. In the course of a multiparty interaction.
00:27:49.350 - 00:28:16.422, Speaker C: Let'S lead our audience into a more technical understanding of why that's true. Right. So let's keep going with this. And we talked about this on Monday a little bit in the preview or the prep for this. But let's go with the computer processor analogy because I think it's quite useful. And we're going to say the ethereum is a computer processor. And maybe some listeners will know the difference between RISC and CISC architectures.
00:28:16.422 - 00:28:39.918, Speaker C: These are like different opcodes for how computer processors work. And let's just say Ethereum is like one set of. It's like the risk computer processor. Here are the opcodes, here's how this processor works. And Solana is the CISC processor. Here are the opcodes, here's how this processor works. And in order to do a computation, you can do computations on both systems.
00:28:39.918 - 00:29:23.550, Speaker C: They absolutely work. But literally the opcodes you're using to do the computation are different. And at the end you can run your computation and get your output at the end. And my mental model for what you're doing with intents here is you're saying, I don't care how the computation works, I care about the output, I care about the thing at the end. And so I can define a constraint, an instruction set. I can mathematically define the state transition that I want to have happen as an intent with an output. And then I can run and verify that that intent was fulfilled on any execution set on any processor.
00:29:23.550 - 00:29:32.100, Speaker C: And I don't care how that happens. First of all, do you agree with that, technically? What's wrong with that? Does that make sense?
00:29:33.510 - 00:30:14.266, Speaker A: Yeah, that makes sense. I mean, the user, in writing an intent, at least in the way we define it, defines basically what properties they want the computation to have. So those could be a specific output, those could be a relation between input and output. The user is purposefully less specific. So with a transaction, you say, I want the CPU to execute instruction ten, then instruction twelve, then instruction 34, then instruction 40, and then it's done. And with an intent you say, I want the relationship between the input and the output of the transaction to be that my balance increases by at least six. Right, and you don't care whether that happens with instructions.
00:30:14.266 - 00:30:28.710, Speaker A: I forgot now which ones I said, but 1020, 34 and 40, or like 52 and 65, as long as the resulting state, basically, which the only thing you could verify anyways, satisfies the properties that you described in your intent.
00:30:29.530 - 00:31:25.750, Speaker C: So, just to underscore that point, for me, this makes this intent architecture or this model a no brainer for a lot of interoperability. Because if I want to run on different processors, if I want to run on different types of execution environments, I don't want to have to define different instruction sets. Like you just said. I don't want it to be like instruction 434 40 on one system and 24, and just completely different on this other system. I just want to define what I'm trying to do, and then it can go and get executed wherever. And so I do think when I've been reading or listening to your stuff, there is this obviousness to me that this less prescriptive way of what I'm trying, of defining what I'm trying to do, enables this modular multichain world, because I can define one thing that can get executed anywhere. Agreed?
00:31:27.930 - 00:32:20.450, Speaker A: Yeah, I think so. I mean, there are still differences, to take the analogy of cpus, which I think is pretty good, there are still differences in cpus. Like if over time cpu architectures change, and for specific programs, different cpus might be more or less efficient. There is a relationship there, you can't completely abstract it. But still, I think that in the context of intense and kind of intense flowing around all of these different modularized, abstracted blockchains, users are going to be delegating or kind of expressing most of what they want, most of their preferences for a selection of particular cpus, in the intents, just as properties. So in my intent, I might say that I want best price execution defined in such and such a way, or fairness defined in such and such a way. And I want these assets.
00:32:20.450 - 00:32:39.694, Speaker A: I'd better name the exact assets I want. But maybe I'm fine with Solana, or Ethereum, or cosmos. Those all have enough security for me. And maybe I don't even care. I don't care where the assets were initially. I just care that they get to the place I want them by the time my intent is settled. So there will be some market in some sense.
00:32:39.694 - 00:33:08.040, Speaker A: It's like if you had an operating system on your computer, where your computer had a bunch of cpus that were competing with each other to run your computations, and you, as the person writing the program, said, okay, I will give my computation to the cpu, which satisfies my properties and uses the least energy, or something like this. And your computer doesn't do that because it doesn't have an internal economic system, at least not yet. But blockchains do, so they can.
00:33:08.490 - 00:33:33.234, Speaker C: Yeah, I guess to be really concrete. Right, you are right. You're adding in the processor analogy breaks down because there aren't really trust assumptions on your different processors. They work. Right. Whereas you're saying with a blockchain system there are trust assumptions. And so I could define my intent, but I can also be granular and specific about which processors, aka trust assumptions, I'm okay with.
00:33:33.234 - 00:33:40.420, Speaker C: And to pick on Tron, I can say, hey, I'm okay executing this everywhere, but Tron, I just don't like it for whatever reason.
00:33:41.350 - 00:33:43.140, Speaker A: Yeah, that's right.
00:33:44.310 - 00:34:34.420, Speaker C: Okay, so that, to me, yeah, that's super cool. And we now have this. Maybe for a second we can talk about how this sort of solver network concept. So once we have intents and we're saying users can specify the thing they want to do without specifying the processor, aka blockchain system that it's going to be done on, although they have granular preferences to pick which ones they like, then the idea here is you have a network of permissionless, decentralized actors that you call solvers that effectively compete to execute or fulfill their intent. Expand on that for a second.
00:34:36.730 - 00:35:15.054, Speaker A: Yeah, that's the idea. So the way anoma segments the world of applications, we think that mostly users are using applications in the distributed systems blockchain context because they want to coordinate with other users. And coordination with other users almost always has two phases, which we call counterparty discovery and settlement. And counterparty discovery is the process of figuring out who is a suitable counterparty, given what I want to do with my intent. So if I want to trade ETH for USDC, I'm looking for a counterparty who wants to trade USDC for ETH. Very simple. The second phase is settlement.
00:35:15.054 - 00:36:05.118, Speaker A: Settlement is posting that transaction once we've agreed on it. Once I've found a counterparty and someone has, perhaps me or a solver has made the transaction, a settlement is posting that transaction somewhere where it can be ordered, at least with respect to relevant state, so that everyone can verify that that transaction and not some other transaction actually happened. And in our world, solvers facilitate counterparty discovery, so you don't need always solvers, you could just do counterparty discovery by sending each other messages on signal or Twitter or something. We've seen a little bit of this in the wild. In particular with NFT trading, there was some counterparty discovery happening on signal on Twitter and some telegram groups, I saw some of that. But for the most part, users would like counterparty. Discovery is a lot of computational work.
00:36:05.118 - 00:36:40.830, Speaker A: You have to message all of these people on Twitter and see if they want to buy your NFT or not. And it would be great if someone could kind of do that computational work for you and keep track of a whole bunch of intents and figure out when some of them could be matched to figure out what the available liquidity is. And in our conception, this role is called a solver. So solvers are both. They're handling a lot of intents. Many intents will never become transactions because there is no suitable counterparty. But solvers are handling a lot of intents, figuring out when intents can be matched, crafting transactions to do that, and sending those transactions to chains or consensus providers for settlement.
00:36:42.770 - 00:37:21.290, Speaker B: Chris, I've got a question for, you know, something that I've heard you discuss quite a bit, which is this idea of flow control or standards. And I want to start to lead this into how is this better from intents as they're instantiated today in, for instance, something like Uniswap X or cowswap? And I think the answer to that kind of lies in this idea of standards and the amount that a user can kind of granularly dictate preferences across this network of searchers. So can you say a little bit about the idea of standards within this world that you're describing?
00:37:22.670 - 00:38:27.946, Speaker A: Right. Intents are, in many ways, maybe just a word that has become more popular rather than something new that has come into existence. Maybe word and concept, but they're around, as you mentioned already, they've been around for a long time, all the way, I would say all the way back to, like, what was it? Ether delta was one of the original Ethereum dexes that used something which looked a little bit, like, intense, of course, a very specific kind. And now you have a lot of what I would call sort of distinct. Sometimes they're called off chain or kind of separate, intense systems, application specific intent systems for Uniswap X, for cowswap, for OpenSeA, I would describe as this kind of thing, different NFT trading protocols, different sort of order book based fungible asset exchange protocols, and those are fine. And it's clear that users want intents. But one disadvantage of having many different protocols is that they're not very interoperable, and users typically have to pick one when they're doing some kind of application interaction.
00:38:27.946 - 00:39:09.946, Speaker A: So a user has to choose to send their order to uniswap x, or choose to send their order to cowswap, or choose to send their order to opensea or whatever. And typically that means that the users will get a worse price just because less liquidity is immediately available. Now, to some extent, solvers which understand multiple protocols can maybe bridge things, but it also depends on how the intent system is built. Some of them may not allow settlement with other things included in the transaction atomically or something like this. So there's a lot of friction that I think is unnecessary. If you have intent level composability, then users can just send like, it's like there's one giant pool of intents. Sort of.
00:39:09.946 - 00:39:35.650, Speaker A: Conceptually, the pool doesn't exist all in one central location. It's split up across solvers, across this network. But you can reroute intents over time to put the intents which are most likely to related, to be related to the other intents in similar places. So you could do this kind of locality optimization and do that on the basis of what state intents actually want to touch. Right. And that should, in the end, lead to better prices for users.
00:39:36.150 - 00:40:20.546, Speaker C: So specifically, just to make this super concrete, right, I have my swap from X to Y, from USDC to eTh. I could send that intent to Uniswap X, or to cowswap, or to one inch fusion. I'll just use really concrete examples, but I'm basically constraining the space. And who can fill that intent to a specific application, even though they're all doing conceptually the same thing? And what would be really nice would be, and that's worse for me. I get worse price execution because there's less competition to fill my order from this solver network. So what I want is a standard where I define it, once I define my intent of what I want to do, and anyone that can, any application that can fulfill that intent can go.
00:40:20.568 - 00:40:53.034, Speaker A: Ahead and fill it. Yeah, that's right. I also think this is maybe a sort of more marginal difference, but it takes a lot of work to build an intense system like Uniswapx, Cowswap, Opensea. These are big, well funded teams. Most independent Dap hackathon developers cannot build and run like an intense system. And I think that just limits the supply of applications. And standardizing more of the protocols means that you don't have to write all of this off chain, sort of application specific solver infrastructure anymore.
00:40:53.034 - 00:41:00.080, Speaker A: You don't have to convince all of these market makers to use your bespoke protocol if you're using a standard.
00:41:00.610 - 00:41:44.154, Speaker C: So I agree with that. Know, I don't know how much we talked about this, but I have this intent based cross chain bridge. So I'm like very Chris. I don't even know, I'm like an intense maximalist. So this is all kind of fun for me. But the thing that I think is worth pushing you on is why intents, the examples we just had are all single chain, mostly single chain examples where I'm like doing a swap on in our cowswap one inch uniswap x. It's on Ethereum, but I think you have a lot of views on why intents help interop or moving between chains or bridging the gaps between chains.
00:41:44.154 - 00:41:56.930, Speaker C: And I think it'd be really useful to get your perspective and your insights as to why intents work better or maybe even are required in some of these multichain environments.
00:41:59.110 - 00:42:26.714, Speaker A: Yeah. So I think it's helpful to frame what is going on if you consider the whole ecosystem as one network. So if you consider the whole ecosystem to be one network, users are submitting intents all of the time. They're already doing this. Transactions are intense. They're just like more specifically limited because you force the execution path to be instruction ten, then 40, then 32. So users are already submitting intents all of the time.
00:42:26.714 - 00:43:26.266, Speaker A: Then these intents are getting kind of sorted and routed around and matched and settled somewhere. And to me, this is really a scheduling problem, as in if users, now, if users have specific trust, affinity, if there's like one class of users who only wants to use Ethereum and a completely disjoint class of users who only wants to use cosmos and they never want to interact with each other, then you don't need a cross chain intense system. But that is not the world we observe. We observe a world where people want to interact with each other and they want to move assets around and they want to coordinate with all of these other ecosystems, and I think that's great, but it means that when we look at, like, let's imagine so that we're at time step one in the giant intents network, and we have a whole bunch of intents, and those intents have different preferences as to where they can be settled and what they're looking for. So one intent might know cosmos or Ethereum or Solana. Another intent might know, must be Ethereum. Another intent might say Solana or cosmos, right? And they are looking for different assets.
00:43:26.266 - 00:44:12.698, Speaker A: And so just to maximize throughput, we want to kind of schedule these intents on different solvers and different execution backends so that we get everyone the assets they want. And it's like a parallel scheduling problem. Like you don't want to send all of your transactions to a one core database if they don't need to touch the same state. So to us, maybe this is in some way you could understand. This is like a different view on scaling than sort of modular or monolithic. Modular and monolithic are both focused on scaling like one logical domain in some sense, maybe a security domain. Certainly in the case of a monolithic system, it's like an everything domain.
00:44:12.698 - 00:44:34.994, Speaker A: In the case of a modular system, it's at least one logical security domain. And I think both of those approaches are valuable, but we need something else. And to me that is like a scaling system that considers the scheduling problem of figuring out which intents need to be routed to which domains dynamically all of the time based on what users preferences actually are.
00:44:35.112 - 00:45:18.910, Speaker B: One thing as well, Krista, I think is worth pointing out for the listener, if we can maybe even just telescope out for a second here and try to summarize what we're discussing. What we're discussing is, again, if you had this viewpoint, know, I live my life on ethereum versus Solana versus cosmos. What we're talking about is a future where you could consider those trust zones or different networks of compute or whatever it is. And if you have to imagine, if you're a five year old like me, and you need to imagine things actually in space, consider them like these little concentric circles, right? And they're all like kind of bumping up. And maybe there's like a bigger ven diagram over some circles. Some circles are completely separate, right? And that's like what we've. So we've got all these circles that are kind of touching.
00:45:18.910 - 00:46:08.866, Speaker B: And what we're talking about is moving up. We're abstracting a layer to this intense sort of layer where there's counterparty discovery and there's a set of shared standards that all of these different programs sort of plug into. And users can dictate their preferences to this network of little hornets or worker bees or whatever, that take these desires off to different networks and then they kind of get routed and executed. And I think that's what you're talking about with the scheduler problem. What you're describing is a system which is very accommodative of heterogeneity. We are assuming that there are going to be multiple different sets of logic, security models, different types of assets, different user preferences, all that stuff. And I'm wondering how much of what we're describing here is a technical problem versus a social problem.
00:46:08.866 - 00:47:16.360, Speaker B: And what I mean by that is like, if you again now telescope back in as to where this is broken today, it's probably on Ethereum roll up land where we've fragmented liquidity and users across different chains that don't interoperate with one another. And it's my strong suspicion that that's not a technical problem, that that's a social problem. And each one of these platforms don't have a strong incentive to actually build something like IBC in between, because again, they wouldn't say this, but it is my strong suspicion they're like, well, we could accommodate for heterogeneity, right? We could be like, yeah, there's going to be arbitrum and optimism, et cetera. But I bet what each of these things are thinking is I'm just going to scale so large that it's just going to be one homogeneous block space, and then it's going to work really well within my ecosystem. And so my question to you is, do you agree with that broad characterization of heterogeneous versus homogeneous, and how tactically do we get these applications to agree to this shared set of standards? Because that seems to be the big challenge from where I sit.
00:47:17.850 - 00:47:58.274, Speaker A: Right. Yeah, that makes a lot of sense to me. I mean, I think I would also tie this to the platform value capture thesis. I think people think that there's not a lot of value in building interoperability protocols, protocols which allow other people to use different assets and different systems and different domains, because it's like, it's not their platform. And they think that they'll accrue more value by just getting more people to use specifically their platform, where their platform is understood as like their roll up their l one chain, like a specific trust domain. Right. There is a great, I forget who said it, maybe someone could find this in the comments.
00:47:58.274 - 00:48:34.720, Speaker A: But there's a great law of software architecture and organizational design that the architecture of your software will always mirror the architecture of your organizations. And the Ethereum roll up land is full of, I think, largely well meaning but definitely fragmented organizations. And the Ethereum roll up protocols are perhaps largely well meaning but definitely fragmented. So I think it's difficult to, as you put, no one at least feels like they have an individual incentive to do it, and the organizations are fragmented. So the protocols will mirror that.
00:48:35.650 - 00:49:41.880, Speaker B: Yeah. So one more concept that I want to make sure that we cover, because I do want to unpack I think this will be a concept that many listeners haven't explicitly thought about, which is, again, this is kind of one of those assumptions that you didn't even realize that you were making, that of course the value of eth, the asset, is going to be dependent on the functionality and utility of Ethereum, the network. And I actually still have some questions, even hearing you describe separating these two as distinct concepts and different arenas for competition, even in this routing example, I still feel like Ethereum has successfully gated its trust zone with Ether, the asset, right? To gain access to the security set or whatever of Ethereum, I feel like you still need to use Eth, the token. So I still have some questions for you on that. But before we get there, I do want to cover the last bit of architecture here, which feels important, which is the existence of zero knowledge proofs, and how that has eliminated a massive technical barrier for getting these very different systems to speak to one another. So can you talk a little bit about that?
00:49:43.210 - 00:50:18.926, Speaker A: Right, so just talking here about kind of protocols like the EVM, SVM, even the bitcoin. Bitcoin does have a virtual machine. It doesn't get enough credit, limited, but you can do a lot of scripting. It's having a comeback. It's having a comeback, is it? Okay, great. I'm not, maybe not tuned in, but these protocols are basically defined by their verification functions, because this is what you need to know in order to verify the history of a blockchain, in order to run a node, in order to operate in this distributed context. And those verification functions, just to run computationally, are very expensive.
00:50:18.926 - 00:51:12.900, Speaker A: If you want to verify the history of bitcoin, you have to replay all bitcoin transactions from Genesis, same for ethereum. And that cost can limit interoperability between different protocols, because different protocols, if you're running your transaction on the bitcoin chain, that chain, because the validators who are running it have already done those computations, that chain already knows, like the current bitcoin state, it's already implicitly verified that history. Same for Ethereum. But if you want to, say, use the Ethereum state on mean, you could just try and convince all the bitcoin full nodes to also run Ethereum. That would work if you could do it, but it's difficult because running Ethereum is expensive. So all those nodes now have to replay all the Ethereum transactions and verify them as they continue coming along. So in some sense, your verification cost is the same cost as it was to run the transactions in the first place.
00:51:12.900 - 00:52:01.394, Speaker A: With zero knowledge proofs. And here it's really not the zero knowledge part that's doing the work, but rather the succinct part. Once you do a computation, someone can create a proof, which is like a few orders of magnitude overhead still, but it's getting lower. I think it's like ten to the third at the moment. And then anyone can verify that computation in constant cost o of one, even for a very long, eventually for a very long history, like the history of Ethereum or bitcoin. And this, I think, really changes the calculus of protocol, competition and interoperability, because before these kinds of succinct proofs, if you wanted to run a transaction, you really have to choose either the bitcoin history to run it on top of, or the Ethereum history. You can't do both.
00:52:01.394 - 00:52:50.930, Speaker A: The cost is too high. But with zero knowledge proofs, as soon as any changes are made on any one of these systems, a proof can be sent anywhere, right? So think of like a zero knowledge roll up, which is using also the succinct part, not the zero knowledge part. Typically, these zero knowledge roll ups, sometimes we think of them as being related to a particular chain, like, we might think of them as being l two s of ethereum or l two s of salana, something like this. But really intrinsically they aren't. Once you do the computations and produce a proof, that proof can be verified anywhere, and the ability to create these kinds of proofs which can be verified so cheaply, I think, just makes it much cheaper for different protocols to interoperate with each other. Right, as long as you have to pay some computational overhead cost to create the proofs. But once you have them, you can verify them anywhere else with a few elliptic curve multiplications or some hash functions.
00:52:50.930 - 00:52:54.766, Speaker A: So I think that will have some interesting implications.
00:52:54.958 - 00:54:03.606, Speaker C: Yeah, Chris, I want to hammer in and underscore a lot of this, because it was a big conceptual unlock for me, and I think this is really freaking cool. So I'm going to relate back to, just to help all the audience understand. Like, we go back to our processor analogy. So you have the Ethereum processor and the Salana processor, and you can kind of think back about some of us maybe a little bit older, like emulated old computer games on processors. It was possible to construct the Nintendo architecture on your x 86 machine, and you could emulate it, but everybody knew it was kind of expensive, right? Because you're sort of doing this, like, a lot of extra work to do this emulation thing. And I think the analogy here, if I'm understanding you correctly, is like the Solana processor could completely, trustlessly emulate Ethereum if it replayed the entire Ethereum blockchain history all the way up to the tip of the chain, you could do that. And Solana is a powerful machine.
00:54:03.606 - 00:55:12.974, Speaker C: It could probably do that, but it would take up a lot of resources, and it's obviously a lot of work to do that. And what you're seeing here is, yeah, these protocols can theoretically emulate each other or verify each other, but the succinct property of zero knowledge proofs lets them do this much more efficiently. And then maybe it's worth underscoring what this succinct property of zero knowledge proofs really means here. What it means is that we're not talking about privacy at all. What we're talking about is compressing a whole bunch of computation into something that is easy to prove. So I could generate a zero knowledge proof for the current state of the Ethereum blockchain, and it would be like o of n, like one computation or linear time computation, not even linear time, one computation to verify this compared to actually replaying all of the Ethereum history. And so, yeah, for me, I kind of jump up and down at this idea.
00:55:12.974 - 00:55:34.760, Speaker C: I think it's just super cool that the succinct property of zero knowledge proofs allows us to communicate between complicated protocols in o of one complexity time very efficiently, and that is conceptually a very cool way to think about interoperability. First of all, did I get that right, correct me where I'm technically wrong or anything?
00:55:35.130 - 00:56:12.226, Speaker A: Yeah, that's right. I mean, I think maybe there are, like, two distinctions from the case of emulation. So I used to have a. Oh, my God, it's like a Windows mobile 2002 Pocket PC. And I managed to run a Game Boy color emulator because I got it for free, because I was, like, ten at Dirtport, and I managed to run a Game Boy color emulator and played Pokemon crystal on the emulator at about 15 frames per second. Now, there are two differences between that situation and what's going on here. One is that in that emulation, I actually wanted to do the computation like I needed to compute what the result of the Pokemon battle was.
00:56:12.226 - 00:56:42.918, Speaker A: And in the case of blockchains, we're not trying to do the Ethereum computations on Solana or do the Solana computations on Ethereum. We're only trying to verify the computations that have already happened. So the thing that we're emulating is the verification, right? Not the original computation. And then the second difference is that these succinct proofs allow us to do that verification in o of one instead of o of n. Whereas previously before succinct proofs, verification was like the same thing as computation. In order to verify, you had to redo the computation. Now you don't.
00:56:42.918 - 00:56:48.766, Speaker A: And that's an order of, just like an order of, I don't know, order of infinity level difference.
00:56:48.948 - 00:57:02.350, Speaker C: It's a many order of magnitude improvement for how these otherwise complex protocols can talk to each other. And that seems really cool, period.
00:57:02.430 - 00:57:52.082, Speaker B: Yeah. And for those who are slightly less technical minded, can you just give an overview, Chris, as well, of why? Generally, from what I know about these sorts of proofs, they just represent such a massive improvement to how interop might work today. What is the reason these things haven't been fully implemented yet, and what are kind of some of the major issues? I guess I'm even just wondering, in sort of a cross chain transaction, like how quickly does the proof need to get generated in order to do something that looks like atomic composability across multiple chains would be like immediately where my mind goes. But walk me through what some of the initial holdups are, and then we can kind of end on this idea of the asset first protocol we've been talking about, right?
00:57:52.136 - 00:58:34.240, Speaker A: That's a good question. I agree that proof generation latency matters a lot for interoperability, but proof generation latency corresponds to the cost of compute, and the built in latency bottleneck in blockchain systems corresponds to the speed of light, and one of those numbers goes down over time and the other doesn't. So I think we'll probably be okay, at least given enough time. Why has it taken so long to deploy these systems? I think it's actually going pretty quickly. Like blockchains are distributed systems, they're hard to change. Plus maybe one reason it's slow is that there tends to be a lot of, at least nominally us dollar value flowing around in these systems. So people are hesitant to deploy untested cryptography as they should be.
00:58:34.240 - 00:59:01.980, Speaker A: Also, there's a lot of the zero knowledge field was really pulled, especially by zcash, from theory into practice in a very short time, and there's still a lot of innovation going on, and we aren't trying to standardize a single zero knowledge proof system, right, because there's still so much innovation happening. We're trying to standardize things in anoma at a higher compiler level. So I think a lot of the stuff will get deployed over time. It just takes time.
00:59:02.910 - 00:59:43.430, Speaker C: Mike, can I get one more technical question in here before we go into the protocol asset stuff? And, Chris, keep this short, I think. But I am still curious how inoma enables cross chain settlement. How does that conceptually work? And just give you an example, my intent here is sell asset on chain a, make it ethereum, or I want to bridge asset from ethereum to Solana. Like, let's just say, how do the solvers. Solvers will compete to do that. But how does enoma enable this cross chain settlement?
00:59:44.490 - 01:00:07.354, Speaker A: Right. So to be clear, there's sort of no magic bullets. And in a consensus system, you still have to run transaction. Any piece of state has to be owned by a specific consensus quorum. So we can't magically do atomic settlement across completely different chains. But enoma can do a few things that should make users'lives easier. One is just the more declarative nature.
01:00:07.354 - 01:00:38.246, Speaker A: So users can specify what they want in their intent, what asset they want on which chain, and sometimes there may be multiple steps involved in actually getting the asset there, but the user specifies what they're willing to give, and some solver can do the steps beforehand as soon as they see the intent. Right. Just based on that declaration of, like, if you get this asset to this chain, I will give you this other asset, and the solver confront the capital there and move the asset. So this is similar, for example, to, I think, the Uniswap V four optimistic bridging design, something like that?
01:00:38.268 - 01:01:10.962, Speaker C: No, this is very similar to my day job, which is Uniswap. And Uniswap X's cross chain design is similar to this, too. So you have this third party front money in a cross. It's the relay or the front money, and then you verify. So they make a loan, and then you verify. This is how you emulate composability, and then you verify that that loan was filled. This is frankly why I'm asking the question, because I'm like, did you figure out something that I didn't know about? Or some magic bullet here? Right.
01:01:10.962 - 01:01:14.114, Speaker C: But, yeah, keep going. Sorry.
01:01:14.312 - 01:01:36.250, Speaker A: Yeah. Sorry for getting the protocols wrong. That's one thing that can happen. I suspect it's not competitive with what you're working on. It doesn't specify a particular way of making these loans or whatever, but just by the way intents are written, solvers can kind of already do that. Right? They don't need, like, extra. They don't need an extra protocol.
01:01:36.250 - 01:02:25.686, Speaker A: The other main difference is just that the scheduling is happening. So users in their intents, instead of saying users can say that they're fine with having an asset on Ethereum or Solana or Cosmos. A strong example of when you would probably do this is with something like like what matters for redemption of USDC is what circle considers to be reality. It's not Ethereum or Solana or cosmos or blockchains. It's like circle. So for the most part, most users, I think, should be fine with receiving circle on any of the chains. And if you have a bunch of intents with basically less specific constraints in the intent pool, then solvers can figure out which batches of those intents actually need to be executed atomically and send those to the right chains.
01:02:25.686 - 01:02:40.160, Speaker A: So that is kind of like figuring it's not solving cross chain bridging by bridging between existing chains, it's actually figuring out what the chains are dynamically and then making less bridging necessary, if that makes sense.
01:02:40.610 - 01:02:49.540, Speaker C: Yep, I do love it. And yeah, I got a whole bunch more to talk to you about on that, but it's very cool and I remain an intense maximalist. So let's go.
01:02:50.630 - 01:03:47.320, Speaker B: Let's go, baby. All right, Chris, I want to end on this idea of separating out competition vectors for protocols versus assets. So I first just want to understand how an intent centric view of the world, or an intent centric topology, to use your phrasing, unbundles these concepts. Because even when I think about Ethereum, the Ethereum trust zone, within the context of the system that we've outlined here, my mental model for it is a searcher. If the intent is hey, I want to deposit ETH in Aave, which is smart contract on Ethereum. My mental model is still like a searcher will then go essentially route and do that on your behalf, but you are still like the searcher is still subject to the gating of ETH the asset, to access those trust assumptions and probably ave the app itself. So can you just mechanically explain again for listeners how these things are getting unbundled and how this might work differently in the future?
01:03:49.530 - 01:04:35.250, Speaker A: Right, so to be clear, I agree that at the moment, if you want to post a transaction to the Ethereum main blockchain, you have to pay ether per gas. That's just how the Ethereum protocol works. Now, it could work differently. It could say, know, you could pay a different asset that's not ether, but somehow it goes to ether holders. Ethereum doesn't do that, but other chains like Cosmos do, Cosmos hub. But in a world where many users are not necessarily sending their transactions to Ethereum. They might want Ethereum security eventually, but the ordering and the kind of application level counterparty discovery matching is probably not happening on the Ethereum main chain because it's very expensive to do counterparty discovery with ETH gas prices.
01:04:35.250 - 01:05:15.306, Speaker A: Then these users are, they're probably paying like some other asset, or they're paying implicitly with slippage or something like this. And if they want Ethereum security, someone is paying, you know, for an Ethereum transaction eventually. Now this, this already kind of implicitly happens with sending transactions to roll ups and stuff like this. And the sense in which an intent centric topology unbundles it is that it allows the users to make their preferences and what security they want to pay for explicit. And it kind of inverts the supply demand. So at the moment, there's a fixed, specific supply of security options. There are rollups, which have different security models.
01:05:15.306 - 01:05:45.162, Speaker A: There's the Ethereum main chain, which has its security model. There are other chains, Solana Cosmos app, which have their security models. And users can pick between those security models by sending their transaction to different places, or by, as you said, by sending something to a solver that says, I want ETH to be deposited on Aave on the Ethereum main chain. But with sort of more general, intense language, users can describe security models that don't actually exist yet. Like that. No one has produced a block for. Right.
01:05:45.162 - 01:06:23.718, Speaker A: Users could say, a signature by these validators is sufficient for my interaction because I'm trading like $50 and I don't need to pay for Ethereum main chain security. Another user who is buying a small country could say, I want security of. You laugh. But once the prince of Liechtenstein tried to sell this country to Bill Gates or something like that. Anyway, that prince of Liechtenstein. Liechtenstein could say that he wants Ethereum and Cosmos and Solana security for this transaction and he's willing to pay a lot. Right.
01:06:23.718 - 01:06:54.100, Speaker A: And then that would provide basically a market signal to the validators of these systems that if they sign a block, which includes this transaction, like, they'll get paid. Right. You can understand an Ethereum transaction as it exists today, as an intent on the peer to peer network that just has this commitment that if you, the Ethereum validators, include this transaction by the protocol rules, Ethereum, you will get some ether. So that is already a signal. It's just like a very limited one. In a more general language, allows for users to express precisely what they want.
01:06:55.830 - 01:07:34.510, Speaker B: Okay, Chris, help me understand one mini question for you on how do you think about restaking or shared security? Actually, now there's sort of a more explicit attempt, whether that's mesh security over in Cosmos land or interchange security. And now Ethereum restaking even Babylon. And mean, how should we understand? Is that almost like a protocol? Is that renting out the ability to access its security model, whether it be gasper in the case of Ethereum, how do you kind of think about this idea of shared security within your sort of model and where that belongs in this kind of multi chain future that we're discussing?
01:07:36.290 - 01:08:45.598, Speaker A: Yeah, I mean, I think there is a wide variety, for example, of restaking systems, and they have pretty different guarantees. So I think it might be helpful to pin down a little bit, at least in this context, how I would understand security, and I would understand security as basically how difficult it is to revert a particular history. So when users pay for Ethereum security, they're basically paying the Ethereum validator set to agree that if the Ethereum validator set refuses to consider this transaction in its history, in the future, the Ethereum validator set will lose some amount of money or some amount of ether in this case. And different restaking protocols have different, like, they have different bonding systems and different stake amounts, and so they're providing very different levels of guarantee. Right. And I would say that the guarantee actually has less to do with the asset and more to do with the specifics of what is locked and what the slashing conditions are, for example, and whether there are other locks also made on the same capital. One worry I have about the way restaking is happening in practice is that it's kind of fractional reserve.
01:08:45.598 - 01:09:08.774, Speaker A: Like if you stake the same capital many different times for many different possible things, you could lose it for you don't get additive security. Right? Like if several of these things happen at once, they don't have any more security than just the assets that you actually put up at stake. So it's difficult even to reason about this independent of what is the application uses.
01:09:08.822 - 01:09:12.366, Speaker C: Yeah, the seven sigma event becomes a real risk now, right?
01:09:12.548 - 01:09:34.766, Speaker A: Yeah, well, especially because it's transparently exploitable by mev bots. Instead of this being some financial markets typically sort of try to regulate these things out of existence and they fail anyways. But they maintain the illusion for a few decades, at least, they often do. And I don't think we will have that luxury, which is probably good in the long run, but maybe chaotic.
01:09:34.958 - 01:10:04.890, Speaker C: This is an aside, but that is an interesting point, where in traditional financial markets, your seven sigma event which happened way more often than segments of five orders of magnitude, more often than seven sigmas was supposed to imply. You couldn't model it because you didn't know the state of the world like it wasn't on a verifiable blockchain. But you're quite right that if you can see the state of the world and verify it all, maybe you could actually exploit or engineer a seven sigma event, which seems a little scary.
01:10:05.890 - 01:10:53.020, Speaker A: Yeah, I mean, the good thing is that at least these commitments, in order to work, typically have to be quite public. Like, if you were going to use a system, you want to know what the validators have bonded, what they have committed to. When you use, for example, ethereum, implicitly, at least you know this. And that, I think, would allow for some more, especially if the protocols for these kinds of commitments can be standardized, some more measurement of how much edge risk there is in the system. And even, for example, with intents, you could say something where the validator set that you want your intent to be settled on isn't specifically identified. It's actually identified by what they have staked. So you could say, I want four validators with a combined stake of 100 ETH to sign this transaction, something like this.
01:10:53.020 - 01:11:02.320, Speaker A: And you could say that the combined stake of 100 ETH and, like, no commitments that conflict with blah, blah, blah, you could get more complex to try and avoid some of these problems.
01:11:03.030 - 01:11:04.100, Speaker C: That's pretty cool.
01:11:05.830 - 01:11:44.654, Speaker B: All right, I've got two closing questions for you here, Chris, which is one, I want to get your thoughts quickly on the asset. Know what's made this more interesting for me recently is I feel like bitcoin has always been explicitly. It's kind of like a money app chain, right? Their export is bitcoin, the token. And that's explicitly been the goal from day one. But it feels like a bunch of other l ones recently are starting to compete on that same basis. So whether or not it's the ETH is ultrasound, money meme, and then they've got modular money in the form of tIa. And I would just be very curious, I think the mental model for a lot of listeners, maybe this is the way that they'll frame it.
01:11:44.654 - 01:12:40.830, Speaker B: They talk about something like block space profitability, and they're talking about very different things. And if you're in the Ethereum camp, you'll say, look at the fees, look at the fees that we generate, and look at the block space profitability. That should translate into more adoption of ethy asset. If you're on Solana, you say, hey, those fees make it unusable. And actually you can do so much stuff over here on our protocol, therefore Solana should go up. They don't say that, but that's the implication, obviously, right? And what I'm hearing from you is that actually what these protocols do themselves is much less relevant for the assets and their adoption. So can you talk a little bit about how would you view this idea? This is a long standing debate internally for blockworks about how the PNL sort of versions of these L ones, and then how are assets going to compete with one another as a currency or money like asset as they're increasingly divorced from the protocol.
01:12:42.290 - 01:14:13.514, Speaker A: Yeah. So first, I think just to illustrate the decoupling of assets and protocols, a simple example will suffice. Imagine that there are a lot of people who want to use eth the asset, but on Solana, as in they want to buy Ethereum, they want to trade with Ethereum, they want to generate a whole bunch of demand for Ethereum ether asset, but they want to do that on Solana because, I don't know, they like the Berkeley packet filter vm. If this doesn't benefit Ethereum, it doesn't generate more transaction fees on the Ethereum main chain, it doesn't generate more usage of the Ethereum protocol, it doesn't generate more solidity contracts or whatever, but it clearly does generate a lot of demand for ether the asset. So I think that example is like enough to demonstrate this tension, right? If what you want is for ether the asset to be valuable, then you should support uses of Ether the asset and demand for ether of the asset that is not dependent on Ethereum the blockchain, because it helps you. And if you want to support ethereum the blockchain, then these applications on Ethereum might pay gas fees, but they're not necessarily like you might be missing out on a whole bunch of other things that could generate demand for the asset. So to talk specifically about assets in competition at least, my expectation is that eventually these protocols, as sort of infrastructure as rails will be quite standardized and there will be many assets which users can choose from.
01:14:13.514 - 01:14:59.734, Speaker A: So in other words, users will be able to choose assets and protocols independently. Like you could use ether the asset, but you could use it with anoma, or you could use ether the asset with Solana. And I don't necessarily, this may or may not be tied to the security domains, but users will be able to make those choices pretty independently. And then I think the kind of differentiators of assets are really just the distribution function like how the asset is issued, to whom it is distributed, and the community. Like who holds the asset. Users, ultimately, someone can give you a dollar, they can give you an ether, but you choose whether you do something, you choose whether you give them a sandwich, you choose whether you write them a report, you choose whether you help them out. So you're the one making the choice.
01:14:59.734 - 01:15:19.090, Speaker A: And in making the choice, you can choose which assets to accept. And at least personally, I want to accept assets that are kind of like compatible with my values and things which I want to, you know, by accepting ether or by buying ether, I'm supporting the Ethereum community, and I might want to do that. So I think that the kind of distribution and community will be the primary asset. Differentiators.
01:15:19.830 - 01:16:01.710, Speaker B: Nice. Chris, final question for you to round down here. This is something that Hart and I have been wondering, because I think if you almost look chronologically, if you start with bitcoin, bitcoin is probably the most principled crypto community. They have some very strong principles. They didn't compromise with a lot of their design, but some of the stuff that we're discussing, and this comes up around intents, there are a lot of off chain kind of market makers that are fulfilling these intents. And as soon as there's this tendency in crypto, I feel like as soon as you start to make something that feels like a compromise, and one just throws their hands up and says like, well, we might as well be. And I think one of the things that we're trying to highlight is there's plenty of gray room, there's plenty of tons of room for incremental improvement from what exists today.
01:16:01.710 - 01:16:21.000, Speaker B: But maybe just in closing, Chris, how would you zooming out into this future end state of crypto, assuming that we've made some amount of compromises, what would have made the crypto experiment successful for, like, what does success look like at the end of the adoption of crypto writ large?
01:16:23.850 - 01:17:29.770, Speaker A: That's a good question. I think to me the answer would be something like, crypto will be successful if we can provide an alternative infrastructure that doesn't require communities to choose between autonomy and interoperability, an alternative financial infrastructure or coordination infrastructure that doesn't require communities to choose between autonomy and interoperability. So at the moment, you really have this dichotomy where communities, even ones that want to be more economically self sufficient, must choose, if they want interoperability to use, like, global fiat currencies. They must choose to use the dollar or the euro or the yen. One of these large currencies to interoperate economically with the rest of the world. And using those currencies makes them really dependent and subject to censorship or sanctions or just manipulation by the very small number of centers of power that are issuing them. And of course, they can choose not to use those currencies, but then they compromise interoperability, so they can retain autonomy, not use any of these currencies, and sacrifice interoperability, or they can retain interoperability but sacrifice their autonomy.
01:17:29.770 - 01:17:46.770, Speaker A: And to me, the kind of promise not yet realized but still possible promise of crypto is to provide just a set of protocols that a community can run and communities can compose on each other and run with other communities that allow them to preserve both of these values, autonomy and interoperability.
01:17:48.550 - 01:17:50.500, Speaker B: Man, that was a great answer.
01:17:50.950 - 01:17:54.980, Speaker C: Yeah, that was a real cool answer. Could talk about that for a while.
01:17:55.590 - 01:18:15.820, Speaker B: Yeah. I actually get the feeling, Chris, we could have gone for another hour and a half here, but I want to be respectful of your time. This was super valuable. I think I speak for heart here from both of our perspectives. If folks want to find out more about you or the work that you're doing at Anoma or Namata as well, what's the best way for folks to give more information?
01:18:17.550 - 01:18:45.682, Speaker A: You can find out more about anoma at Anoma Neta. Net. You can find me on Twitter sometimes at cwgos. I also want to plug. We just recently released in public this internal peer review system we've been working on called anoma research Topics, which you can find at Artart anoma. Net. And we're trying to create kind of also a peer review system that works for the needs of blockchain protocol.
01:18:45.682 - 01:18:49.240, Speaker A: Designers would welcome contributions and participation there.
01:18:50.490 - 01:18:51.238, Speaker C: Awesome.
01:18:51.404 - 01:18:56.920, Speaker B: Chris, this has been super valuable. Thank you so much for coming on. About to do it again soon.
01:18:57.370 - 01:19:00.518, Speaker A: Thank you. Cheers, guys.
01:19:00.684 - 01:19:01.414, Speaker C: All right.
01:19:01.532 - 01:19:14.190, Speaker B: Heart, man. That was a great interview. Kind of had high hopes, honestly. That's why we put Chris as the kickoff of the season. But I think he even exceeded my expectations or hopes for going into that. What do you think?
01:19:14.340 - 01:19:55.530, Speaker C: Yeah, I mean, I'll be honest, I was, like, a little bit nervous because it's like a big brain. Like a really big brain and a big brain in multiple dimensions, right? There's all this kind of, like, economics and philosophy, like you said at the beginning, there's, like, the economics and the philosophy, and there's the technical aspects and deep on kind of the history of computer architectures. So there's a lot there. And, yeah, I think he's also a very articulate guy. And I legitimately both in prepping for this and then going deeper with Chris, I really have some real insights that hopefully we can talk about now that I think do impact my view of the multi chain endgame.
01:19:56.350 - 01:20:04.560, Speaker B: I agree. Let's. Let's just lead right off with that. Like you said, you had two or know before we hopped on here. So what? Know, kind of take it.
01:20:05.250 - 01:21:01.550, Speaker C: So, okay, let's talk intense. Like, we kind of labeled Chris as the intense guy. And I on the show also know I'm an intense maximalist, which I am. But it's interesting to think about and have an architecture for why this intense concept works. So, you know, maybe what we can do in this kind of summary bit is we didn't talk about the alternative to intents. And what we got into in the episode was this idea of like, okay, you have Ethereum and Solana, and think of them as different processors that work in different ways. And one way you could communicate between the two would be write at a program specific to Ethereum that specifically sends messages over a different protocol to Solana, and then write a program in Solana that can receive those messages and send them back to Ethereum.
01:21:01.550 - 01:21:46.030, Speaker C: And this fits within the kind of like, transaction like mindset. So now if I want to communicate between these two protocols, I'm going to execute a transaction on Ethereum. It's going to get to my interop program, and it's going to send a message over another protocol to Solana. My Solana program is going to receive that message, execute it, send something back. And to me, I think that this is kind of the first way people were thinking about interoperability. Like, this is how we're going to connect these ecosystems. We're going to write programs native to each of their architectures and introduce another protocol that communicates between those programs that are native to those architectures.
01:21:46.030 - 01:22:51.490, Speaker C: And I think what Chris is saying with intents is he's basically no, wrong, wrong way, guys. Instead, let's define the protocol at the level above the abstraction layer, above, which is the intent. What does the user want to actually do here? And that intent is going to specify constraints and a state transition and all that. And then I don't actually care execute how Ethereum executes it or how Solana executes it. I care about where I get to at the end. And to me, that seems like such a powerful way of architecting or designing the system where now if I have a third blockchain or processor, I want to slot in, like cosmos or I want to slot in Aptos or Tron or whatever else. They all work on top of my intent layer, whereas in the previous version, I'm talking about, I'd have to build new connections between them and update my protocol to send messages to them and all this other kind of stuff.
01:22:51.490 - 01:23:04.630, Speaker C: So I think it's just a really powerful mental model for how to abstract interoperability and abstract away the chains that users are touching.
01:23:07.930 - 01:23:50.310, Speaker B: I would completely agree with you on that. And it feels like, first of all, it makes for a much better, more unified user experience. But also my philosophy on crypto for a long time has been run. Every experiment, just try everything. And I think this allows, within that context of flexibility, it allows different protocols to express opinions, different design decisions, and sort of compete it out. And ultimately, that's where a searcher will route something, if that protocol ends up producing something that's super valuable. So I completely agree with you on, I just think it's a super powerful framework, and I think Chris articulated it well in the episode.
01:23:51.050 - 01:24:37.150, Speaker C: Yeah. And I guess my other insight, I'll go on the more philosophical bent, and then the last one is more on the technical side. The economics of this get really interesting, too. And this goes into Chris's bit about the platform economics. So this is maybe less about Interop, but maybe more about our multi chain endgame and where value ends up accruing. Yeah, Chris was really articulate with saying, hey, the Ethereum platform, if you think of it like a web two business, okay, we're going to use the Ethereum platform, write transactions that Ethereum executes, build applications on Ethereum. It uses the Ethereum asset like Eth.
01:24:37.150 - 01:25:23.454, Speaker C: Go, go. And by the way, I don't actually think Ethereum's ethos is this way. I'm just plainting this as, like, the mental model. If you're trying to frame Ethereum as a web two business, and the idea of this being platform economics, where all the incentives are aligned to drive the user to ETH and use EtH, and then it makes sense that you can kind of have an extractive, like, you can charge rent to use that system. And when Chris starts talking about some of this intense stuff, where I see it going is he's saying, hey, actually, let's define what the user wants to do at the level above, and then you effectively can have all of these platforms compete to fill you. So Ethereum is going to compete to do the thing you want to do. Solana is going to compete.
01:25:23.454 - 01:25:49.754, Speaker C: Cosmos is going to compete, whatever else. And in a sense, you're disintermediating the power of these platforms. And I'm not sure I buy this or believe this yet. This is like a new thought for me. But if you play it out to its logical extension, he's saying, okay, users are now in control. Blockspace is competing to fill them. Hey, blockspace compete to fill me best.
01:25:49.754 - 01:26:01.760, Speaker C: And you kind of remove a lot of the power that the platforms have and put it back to the user who's actually creating the intent. And that's, again, a pretty wild thought for me.
01:26:02.530 - 01:27:01.230, Speaker B: Yeah, I have so much to say on this because I've thought about it quite a bit, and I had this unlock a little while ago when you just talked, it was during the Cosmo season of this show when there was a perfect 180 degree reorientation of my worldview. Because when you hear this is kind of like this was articulated in the fat protocol thesis, which is extremely popular at one point in time. But even just the user experience that you have as a crypto person, you're like, okay, this is the flow as I see it, probably the canonical flow. How most people get onboarded. I buy eth or bitcoin, let's say etH, because there's stuff to do eth on Coinbase. I then probably want to buy a token on uniswap. So what I do is I take this ETH and then I put it in my metamask wallet, and then I have to go to this app and intuitively feels like I am in this platform and I am in this ecosystem.
01:27:01.230 - 01:27:53.234, Speaker B: And most of the arguments that you hear about how value accrues in crypto is directly descended from bitcoin. Right. It's like 21 million hard cap, very supply based arguments. And the reorientation that I had was eventually there are going to be apps that have proximity to the user, and you could actually think about all of the control and leverage coming from there, whereas there are these kind of multiple different sets of things at the bottom of the stack which users might have a preference for or might not, and they're almost interchangeable with one another. And I think that's why there's so much emphasis on this idea of moneyness from all of these different communities. And there was an idea. One thing that I'd love to get your take on is this idea of economic abstraction has been around for a long time.
01:27:53.234 - 01:28:28.922, Speaker B: And I actually remember it coming up within the discussion of EIP 1559. People were really concerned about the idea of economic abstraction. And what I mean by that is, there was an understanding that in order to use the Ethereum ecosystem, you had to pay validators in ETH. And part of the reason that the burn was implemented was to get around off chain payments. And part of that was to make it incentive compatible. Right? You didn't want different miners at the time colluding. But another concern was that people could make off chain payments in something other than ETH.
01:28:28.922 - 01:29:24.666, Speaker B: And so if you are making off chain payments in something other than ETH, you have de facto removed the restrict, like the gating mechanism for ETH. And what I would point out in service of Chris's idea of these things already becoming more separate, this economic abstraction is happening. It's just happening at the level of layer twos right now. So like a layer two, like ZK sync, that has embraced economic account abstraction, you can pay gas in whatever you want. And so I think there actually is an understanding in these different blockchains that what my protocol does, I'm losing my lock in, I'm losing the ability to gate my service with my token in one way, shape or form or the other. And therefore my business model is to export this. Just, I'm so interested in that as an idea.
01:29:24.666 - 01:29:25.970, Speaker B: I find it fascinating.
01:29:26.390 - 01:29:30.820, Speaker C: Mike, you were saying some sacrilege things like, these are taboo topics, man.
01:29:31.430 - 01:29:43.190, Speaker B: I know. I feel like these are going to get labeled as unaligned, but I personally am a believer in just describe the system and then root for the best result.
01:29:43.260 - 01:29:43.494, Speaker C: Right.
01:29:43.532 - 01:29:45.846, Speaker B: Because that probably is what everyone's trying.
01:29:45.868 - 01:30:04.570, Speaker C: To do, I think. No, I agree. And like the Ethereum community, they are intellectually honest. So I do think that's 100% true. But I think that this is, again, super fascinating. And this is not what I thought when you told me we're going to do a season on the multi chain endgame. I didn't think we were going to get into ETh economics.
01:30:04.570 - 01:30:51.180, Speaker C: Exactly. But I do agree with you that in this multi chain world, and if you really zoom out and think about it, you're saying, hey, multiple chains work seamlessly and they work for the benefit of the user, not, say, for the benefit of Ethereum, right? And if chains are working for the benefit of the user and not for the benefit of Ethereum, Ethereum in a sense is losing its lock in and it becomes more commoditized, in a sense. Now, readers listening to this, or listeners, please realize I'm a huge ETh bag holder and I like Ethereum, all that. Go ahead.
01:30:51.550 - 01:31:20.022, Speaker B: Actually, I think there's a really bullish argument for Ethereum here. And I still don't know where I fall on this, but I think there are two groups of people that are sort of talking past one another. There is the protocol, competition people, which is largely the Solana camp. Hey, it's really cheap to execute transactions here. And by the way, problems with Solana, like Jupiter launched today, bunch of failed, like, there's still a ton of work to be done in all of these ecosystems. So all of this is intended as know, constructive criticism. I'm rooting for everyone.
01:31:20.022 - 01:31:59.698, Speaker B: But I will say, I think the ETH people for a long time have been very concerned with the vectors of competition for ETH, the asset. And I think they're further along in this realization than the Solana camp, where they're just like, look, I'm going to do all this great stuff for the protocol, and value will accrue to the token. And I think the fair pushback from the Ethereum camp has always been, I don't think those things are as correlated as you might think they are. And what I heard from Chris is that that's exactly right. And I don't know. So I feel like if that becomes the business model of all l ones, is to export the token, then probably mean, I just think Ethereum is in the best position for this.
01:31:59.784 - 01:33:11.160, Speaker C: Personally, I agree with that. And it's important to say the scary part out loud, right? What if blockchains are more commodities than we think they are? Right? Fine. We're still here to build cool shit end of the day, right? And if blockchains should be in service of what users want to do, their coordination mechanisms, and I do think that's like what Ethereum is really good at, where they're intellectually honest and we want to build the most useful, smart contract platform out there. And then this multi chain thesis, multi chain endgame is like, there is going to be competition between blockchains, and that's healthy and good and everybody, you have to be pretty intellectually dishonest to dislike that there will be competition between blockchains to run applications on behalf of users. That's good. And the multichain world is going to make it easier for those chains to compete in a way that, like you said, really kind of a new thought. It's reducing the vendor lock in that one ecosystem has.
01:33:11.690 - 01:33:14.394, Speaker B: Yeah, all right. Oh, yeah, sorry, go.
01:33:14.432 - 01:33:16.646, Speaker C: Well, I was just going to say I got one more insight, but Mike.
01:33:16.678 - 01:33:24.294, Speaker B: Where were you going to go to? I wanted to go to zero knowledge. The proofs, as a way of unifying interrupt.
01:33:24.422 - 01:33:27.840, Speaker C: That's where my mind was going. That was where my mind was going.
01:33:28.210 - 01:33:45.742, Speaker B: Say more about that, because I feel like this is a blind spot for me, zero knowledge and proofs in general, and I'm slowly learning that I need to really up my understanding of this. And I'm almost wondering, it's worth dedicating an entire episode to because it feels like a very interesting area. But what were some of your takeaways from that part of the discussion?
01:33:45.886 - 01:34:28.754, Speaker C: So the zero knowledge stuff is always worth dedicating time to, but, man, it makes your head hurt, right? Some of these concepts are just hard. It's hard to wrap your head around. And I'm like, it's true moon math. But even. Not even understanding the math, just even some of the concepts are like, wait, how is that possible? There's like this fun, interactive zero knowledge proof with hats, like black hats and red hats that we can maybe have somebody talk us through. I think it was the Algorand founder that actually came up with this proof. But anyways, there's a really brilliant shit out there, and I'm probably going to say some stuff that's wrong.
01:34:28.754 - 01:35:10.640, Speaker C: And if I am wrong, people on Twitter should correct me. But my unlock, from what Chris said, and this, I think, is pretty cool, let's go back to defining a protocol. A protocol is just a set of rules for how you do things. That's like, one definition for it. Here's my set of rules for how I do things. There are real world protocols, which are, like, loosely defined, like the protocol for how you order dinner, right? And then blockchain systems and computer systems in general define protocols with deterministic rule sets. Cool.
01:35:10.640 - 01:35:58.366, Speaker C: You can imagine that if your protocol is a Turing complete computation environment, theoretically, you can run a computer program on your protocol to interpret some other protocol. That is possible, but it might be a lot, a lot, a lot of work, right? So specifically, I could run a protocol to verify the state of Ethereum by understanding the Ethereum execution environment, its fork choice rule, and then running through the entire history of Ethereum from Genesis to today, be like, here you go. Right? And the thing for, I think the listeners to kind of grok is like, yeah, you can do that. And that is so much work. That is just a ton of computation and ton of work to do.
01:35:58.388 - 01:35:58.960, Speaker B: Right?
01:36:00.130 - 01:36:37.046, Speaker C: And then the unlock is zero knowledge proofs have two properties. They have the zero knowledge property. Ignore that. They have this succinct property, which is the cool part here. So I was saying what I can also do is run a zero knowledge proof proving the current state of Ethereum. So I generate this proof, and today it's still pretty complicated to generate this proof, but I can generate this proof, and it compresses, I think of the succinct property as a compression property. It compresses all that work of running through the rules of Ethereum, through all of its history, to understand the current state of Ethereum.
01:36:37.046 - 01:37:24.378, Speaker C: It compresses that into this one proof. And then I can go and verify the proof. I can look at the proof and be like, through moon math, it proves all of this work through this kind of like crazy compression concept. And so the unlock I had with Chris was like, holy shit. If you can do these zero knowledge proofs that compress all the work required to verify the state of another blockchain, you can have protocols that would otherwise be really hard to plug in together. You can kind of glue them together with the succinct property of zero knowledge proofs. And that was like a conceptual unlock for me where I'm like, wow.
01:37:24.378 - 01:37:25.660, Speaker C: Yeah. That makes.
01:37:30.670 - 01:38:17.066, Speaker B: I understand that at a high level. And I actually saw, I feel like I'm starting to see. I know that zero knowledge accounts in Celestia is a massive part of their roadmap. I saw Polygon recently introduced this thing called the AG layer, which relies on ZK proofs, which is, I'm assuming that multiple different camps are starting to align on this idea. How specific, when you say you're compressing, it's a compression technology and you're getting a view of the state, how specific is that? Could you look at this one proof and somehow understand something as granular as how much eth I have in my wallet on Ethereum? How much information is expressed in that line of code?
01:38:17.248 - 01:38:52.850, Speaker C: I mean, a lot, right? So let's go into. Axiom is like, they coined the term ZK coprocessor, right? So it's specific to your want, Mike, you give me your ens address, like Mike Eth ens or whatever, and you want to say, hey, prove to me how much eth I have at this block height from a week ago in the Ethereum state machine, right? And axiom has a ZK circuit that can generate a proof that shows exactly. That is nuts.
01:38:52.930 - 01:38:56.760, Speaker B: That is crazy to me. That's possible. That is so cool.
01:38:58.010 - 01:39:37.270, Speaker C: Yeah. And again, I do think, and I really hope I'm not saying some of the ZK stuff horribly wrong, but I do think we need like a ZK person to get us, even if we do this outside of the season, just to up our own knowledge here. Right. But do think of it like compression. So, I mean, in my example of the axiom proof, the way you could do that without the ZK proof is I just recreate. I go from Genesis block, and I know the fork choice rule, and I go up to the current state of Ethereum, to that block height, and I look at your account balance, right? You get how that's possible. And so for me, the mental unlock is, well, compress that.
01:39:37.270 - 01:40:03.338, Speaker C: Compress that with math. And this math, it's statistical in nature. It's kind of like a hash function, right? But it's so statistically accurate, you can take it as true. And I can prove that. Yeah. When you start thinking about another protocol. Succinct.
01:40:03.338 - 01:40:52.810, Speaker C: Succinct is a company that uses the succinct property of ZK proof to communicate the current state of Ethereum to other evm chains. And they do that in a way that is totally trustless. Once the proof is generated, anybody can verify the proof and be like, this is true or not. So anyways, we're not going too down on ZK stuff. There's like lots of other content there. But ZK in the context of interop, and specifically this idea of protocols that could be very incompatible in how they operate, like they have going back to the processor example, they just have different opcodes, like the way you program on them is just say, very different. You can glue them together efficiently with ZK proofs.
01:40:52.810 - 01:40:55.870, Speaker C: And that, I thought, was a cool concept.
01:40:56.290 - 01:41:48.960, Speaker B: I thought it was cool, too. I think you're going to hear more about this as well. I know Vitalik loves this idea of a bulletin board for Ethereum, and he's obviously super excited about proofs in general. Proof aggregation. I heard him talk at eTHCC this past July about exactly this, and I feel like that analogy of the bulletin board, where there's an enormous amount of work that gets done in these more computationally accommodative environments, but then get sort of posted to this chain and I don't know, I had this, I guess, one open question that I have, and maybe we can end on that idea that Chris gave us about what a successful, you know, you're going to get. I didn't know where Chris was going to go when it's like, what is a successful outcome? And he just had this super interesting idea of essentially removing monopolies around money and sort of control. What a great way of expressing that.
01:41:48.960 - 01:43:00.326, Speaker B: It's been sort of a question for me in general, as if you have this mental model of the world where there will be these zones, call it Solana like zones, maybe, where there's a lot of some either off chain or in environments where there's on chain computation, but like higher hardware requirements for computers being done, but then kind of rolling down to this extremely secure. It's kind of like security and interoperability are the two, those are the two important things from the perspective of base layer protocols. And I think you're starting to see that design in Ethereum. You're starting to see that design in Celestia. Celestia is even less performant than something like even it's lazy ledger, right? You can't even do smart contracts on the base layer of Celestia. And so I think that this idea of leveraging ZK proofs and having the base layer be this very unappinionated, very non performant kind of bulletin board aggregator is probably, it seems like that's the way that design is being, that the design is going for major chains. But what did you think about that idea of it's actually going to lead perfectly into our next episode as well.
01:43:00.326 - 01:43:14.010, Speaker B: So I love that he ended with that. But what did you think about that idea of basically making it so easy so everyone can express their currency preferences and we don't have to make this trade off in between interop and autonomy?
01:43:14.990 - 01:43:59.514, Speaker C: I love it. I think it's a wild idea and kind of like a big idea too. So if I'm going to regurgitate it and think about it differently, it's like Chris's. The world Chris wants is a world where communities or groups of people have complete autonomy over how they choose to transact, how they choose to coordinate financially. And you can think about that in different vectors. You can think about what currencies they choose, but it can even be broader than that, what financial products and systems and services they offer, like just how they organize their financial ecosystem. And so you give everybody autonomy, fine, every group of people can do what they want.
01:43:59.514 - 01:45:08.720, Speaker C: That part seems easy, but then the hard part is like then you connect them all, so they're actually interoperable. And what that means is that the user has complete choice and complete freedom over how they want their financial. I mean, it's double freedom, I'd say. You have freedom to pick your community and how you want to interact financially, but you have freedom to not constrain you, to only use that. You have interoperability with other financial stacks here. And that is like a cool concept, and I do see how it directly applies to his intent like framework here, too, where you're giving each crypto community, each ecosystem, complete autonomy over how they design their stack, how their blockchain works, what their design choices are, and you are defining at the later above method to interop through this intent layer. So I just thought it was a super cool answer.
01:45:09.410 - 01:45:53.342, Speaker B: Super cool answer. And it's going to lead perfectly into this next episode that we're doing. And the title of this next episode, it's all about chain abstraction. And a lot of what we discussed today would be under the umbrella of chain abstraction with Ilya Polishkin of Nier and Sam Hart of Skip protocol. And actually, to give you maybe an analogy, I think Sam and Chris think about the world very similarly. He gave me this example, and I'm sure we'll probably discuss it on the episode, but imagine in a future you're buying an orange, and the orange is quoted in dollars, but you have bitcoin and I have euros, and we can transact with one another. I only ever see the bitcoin kind of quoted price.
01:45:53.342 - 01:46:18.550, Speaker B: You see the euro quoted price, and the vendor thinks about the world in dollars. And the way that I would describe that, actually, Sam would describe that as localizing the store of value, unit of account. Like the localizing the unit of account, basically. So instead of a global accepted yardstick, everyone has their own yardstick. So maybe that's a good place to end it. Big concept. And yeah, next episode is going to be great.
01:46:18.550 - 01:46:21.622, Speaker B: This was a really fun one. Heart and. Yeah, can't wait for next week.
01:46:21.756 - 01:46:23.090, Speaker C: Yeah, thanks, Mike. It was a blast.
