00:00:00.170 - 00:00:37.650, Speaker A: When you interact with a dollar in the US, it's not technically, that is a debt obligation of specific banks like Morgan or Bank of America. But you don't see, you know, JPM dollar, JPMD or boad, right? Or a dollar doesn't feel different when you're in Europe versus the United States, even though technically it is and has different trust assumptions and security properties that support that dollar. All of that has been abstracted away from you. And that's basically what we're talking about doing here. What's up, everyone? We are now almost one month out from Das London, the largest institutional conference in all of crypto. That's happening March 18 through the 20th, obviously, in London. This one's going to be a blast.
00:00:37.650 - 00:00:59.886, Speaker A: We are almost ten times oversubscribed for tickets, which is pretty nuts. So again, we've had to lower the discount to bell ten. And better yet, make sure you bring your friends. We sell a four pack of tickets, find people in your company, bring your boss, bring your family, bring your girlfriend or boyfriend, whatever it is, just go. You're going to get a discount if you use that team pack. Run, don't walk. Make sure you go.
00:00:59.886 - 00:01:24.994, Speaker A: Give those tickets today and cheers, and see you in sunny London town. All right, everyone, welcome back to another episode of Bell Curve. Before we jump in, quick disclaimer, the views expressed by my co host today are their personal views, and they do not represent the views of any organization with which the co hosts are associated with. Nothing in the episode is construed or relied upon as financial, technical, tax, legal, or other advice.
00:01:25.042 - 00:01:27.910, Speaker B: You know the deal. Now let's jump into the episode.
00:01:30.010 - 00:01:41.580, Speaker A: All right, everyone, welcome back to another episode of Bell Curve. Today I'm joined by my trusty co host, Hart Lambert. And today we've brought on Sam Hart of Skip and Ilya of Nier to talk about chain abstraction. Everyone, welcome.
00:01:42.190 - 00:01:43.660, Speaker C: Thank you for having us.
00:01:44.030 - 00:01:45.338, Speaker D: Great to be here.
00:01:45.504 - 00:02:32.794, Speaker A: Yeah, this is going to be a really fun one, guys, and to give the audience a little bit of an agenda here and some of the topics that we're going to cover, we're going to start with a pretty quick definition of just what chain abstraction is. I think a lot of folks listening to this podcast will be familiar at a high level, but where we're going to go is we're going to start to unpack. It's really great to have both Sam and Ilya because both the cosmos and near ecosystems have tackled chain abstraction. And there's a lot of similarities in their approaches, but some very interesting differences in their approaches as well that have implications for how this kind of multi chain endgame is going to ultimately end up playing out. So I'm going to ask the two of them to kind of define how the stack sort of works within their own ecosystems. That's going to lead us to bridging. There's a very interesting bridging, different philosophical difference, I think, in between our two guests today.
00:02:32.794 - 00:02:48.770, Speaker A: And then we're going to end with maybe the counterpoint to all of this chain abstraction stuff, which is, should we just be putting this all on one layer? But to start, ily or Sam, whoever's feeling bravest, can you just give us sort of a quick definition of what is chain abstraction?
00:02:49.590 - 00:03:28.974, Speaker C: I mean, I can start. For me, chain abstraction is same as you as a user, don't think about which data center the website runs. You should not think about which chain and what kind of infrastructure stack is behind the scenes when you're running web3 apps. And so the example I like to use is you go to Netflix, and the current web3 version of Netflix would have been like, select which data center to go to. And then it says, like, oh, in this data center, there's too many people, so you need to pay higher fee if you want to watch this movie. And then you go to another data center. Some movies are not available there.
00:03:28.974 - 00:03:56.150, Speaker C: And so that's the experience we're kind of currently at. It's even worse. Right? You kind of need to go to different streaming services, install different things, fund them, versus what we common as Netflix. Right. You go, you watch the movie, you enjoy, you browse, you don't really care which data centers they served from. You don't need to figure out which provider you need to pay for on the other side. All of that is taken care of.
00:03:56.150 - 00:04:07.980, Speaker C: And so now, as you mentioned, there's like a whole stack of tools behind to power this and enable this that only now come into fruition. But I think that's experience we're all aiming for.
00:04:08.990 - 00:04:47.302, Speaker A: Yeah, that's just a super helpful overview and definition. And maybe to give the audience even one other analogy. I think the Netflix data center analogy is really good if you also want to take one from the world of finance. When you interact with a dollar in the US, it's not technically, that is a debt obligation of specific banks like Morgan or Bank of America. But you don't know JPM dollar, JPMD or boad. Right? Or a dollar doesn't feel different when you're in Europe versus the United States, even though technically, it is and has different trust assumptions and security properties that support that dollar. All of that has been abstracted away from you, and that's basically what we're talking about doing here.
00:04:47.302 - 00:05:15.010, Speaker A: And, Sam, maybe I could turn it over to you. Can you kind of walk us through? I think Cosmos has know they've kind of had this idea that this is where we're going since day one and are very far forward in actually building out the kind of common elements to that stack. So can you just give us an understanding, Sam, of how this works in the cosmos today? And for folks who aren't maybe as familiar with the underlying mechanics of it, what are some of the sort of common core components of the stack that supports this abstracted chain vision?
00:05:15.990 - 00:06:08.414, Speaker D: Yeah, absolutely. And the term is interesting because on the face of it's kind of the counterpoint to an app chain. If you have app chains that are specialized and you kind of imagine them kind of calling out to one another for specific functionality, you kind of arrive at this need for chain abstraction. Similarly, if you're a user and you want to move assets or call them from one place or another, you kind of end up needing this. But the term, I think, is actually helpful because it centers the user or centers the core operation that you're trying to achieve in cosmos. So we've been thinking about this for a long time. I would still say it's a work in progress.
00:06:08.414 - 00:06:30.010, Speaker D: Like, this stuff is very complicated, but we have been grappling with it for several years now. So just to remind everybody, Cosmos kind of is this design pattern that has three components. Effectively, there's a consensus engine, comet.
00:06:31.950 - 00:06:32.314, Speaker C: An.
00:06:32.352 - 00:07:31.902, Speaker D: Application framework, which is typically the Cosmos SDK, and then a networking protocol, authenticated message passing system, IBC. And there are point to point connections between different chains. So there's no central route of trust. It's just chains kind of interacting directly with one. And if you're going to talk about chain abstraction in Cosmos, you kind of have to treat it at two different layers. So there is the kind of infrastructure, or like the chain layer. So if you want an application on one chain to call out to another chain and bring resources back or authenticate something and get a token back, you will be using purely on chain mechanisms to do so.
00:07:31.902 - 00:08:41.534, Speaker D: So you'll probably use kind of a combination of the IBC protocol and one or more of the application standards there. So either the token standard, the ICS 20, or the interchange accounts standard near has a similar kind of interchange accounts type system as well. And then on the other side, you have the kind of user layer and the message construction layer. So the user has an intent of some kind. They want to use an application. That application may live in a single chain or multiple chains, and you need to construct the message correctly so that when it arrives at the application at a single chain, it will kind of execute across those different environments correctly. So, yeah, there's some infrastructure at the kind of signing level and message construction level that are important for at the beginning of the lifecycle of the transaction.
00:08:41.534 - 00:08:57.480, Speaker D: And then you hit the chain, there's something that happens. Maybe it executes something remotely brings it back, and then you get a result and it comes back to the user. I'll pause there because I think we're going to get into each of these components more deeply, but that's kind of the idea.
00:09:00.270 - 00:09:55.706, Speaker A: Yeah, I think maybe to sort of summarize. Sam and then we can start to dive a little bit deeper is, I think, one for probably the most common framework that folks will have here is sort of the cosmos way of how things work. And I think one of the common components there is, there's like an origination sort of point, and then there is this concept of interchange accounts, which allows you to have kind of a puppet chain, so to speak. Right, is the terminology. But there's a host in a controller chain, and you're passing a message or sometimes value from chain a to chain b. And what that implies is the existence of a trusted or a very robust, credible sort of bridge in between those things. And I think, Sam, one of the other important points that we're going to start driving at and where we start to tease out the difference in bridging in between the cosmos point of view versus maybe the near point of view, which.
00:09:55.706 - 00:10:31.766, Speaker A: Ily. I know, I want to get you to talk about unbridging in a second is there's many different routes that you could often take in this multi chain world, and a huge part of chain abstraction is actually running, I believe. Sam. Right. Like kind of an off chain optimization to kind of find the best route depending on what the user's parameters and needs ultimately are. And I think an interesting but really critical nuance there is that you can have, depending on the route that you take, there can be a cost and maybe timing difference, but also the security properties of the asset on the side, on the other side can be extremely different. Can you say more about that?
00:10:31.948 - 00:11:11.460, Speaker D: 100%. I would also add that the chain state is kind of moving. So you need to understand the price of this asset is x and I have this capability y. And with those combined, I can perform this action. So that's kind of part of what the off chain component does as well, or off chain system. Yeah. So because you're executing across different environments, you want to have some intelligence about this state.
00:11:11.460 - 00:12:13.382, Speaker D: And maybe just to back up a second, one of the ways that I kind of explain this interchange accounts concept is it's very similar to Ssh. You kind of create a remote account and then you can execute operations as that remote account. So it has this built in authentication system, so you can establish these between a kind of controller environment and then use that to call a resource or execute a function remotely. Right. So how we kind of imagine it right now is this is something that skip does, is we kind of like do a bunch of the simulation. We kind of figure out what is liquidity in different places, what are the kind of capabilities that you have. And then when a user asks to do something, we try to figure out how to do that.
00:12:13.382 - 00:13:08.642, Speaker D: So it looks very much like building in the kind of mev sense. And then we will kind of provide a candidate transaction for the user to sign, which will then go to the first chain. So maybe it's osmosis or neutron or something like that. And it could be that the transaction stops there. They just execute on that chain, they get the result and they're happy. But oftentimes, because we have kind of these app chains, you don't have all the functionality that you need on one chain, so you end up having to kind of create an execution trace that moves across another chain. So you may swap on osmosis and then move your token to stargaze, which is an NFT chain, and purchase an NFT.
00:13:08.642 - 00:13:10.686, Speaker D: A bad kid on stargaze, for instance.
00:13:10.738 - 00:13:14.074, Speaker A: Safe to assume it's a bad think. Yeah.
00:13:14.112 - 00:13:29.550, Speaker D: So, I mean, you can only purchase bad kids in stars, but maybe people don't know what stars are. So you can use your osmo or eth to do the swap, make the transfer, and then make the purchase kind of all in one atomic flow.
00:13:31.570 - 00:13:32.378, Speaker A: Awesome.
00:13:32.564 - 00:13:55.030, Speaker B: All right, I think that's one just nuanced, dumb question. And maybe some of the listeners are cosmos newbies. How do you pay for all this? The SSH analogy is helpful. So home chain, ssh in, and then maybe Ssh into another chain. But I have transaction costs along the way. How do I pay for that? In the native currency?
00:13:55.450 - 00:15:05.550, Speaker D: Yes. So right now there's a third party called a relayer, IBC relayer, which typically picks up the transactions after the initial user transaction is landed. So, using that analogy again, let's say I have Adam, and I want to buy the bad kid. So I will actually go through osmosis, make the swap into stars, and a relayer will pick up the transaction and move it to Stargaze, and the relayer will pay the stars fee on Stargaze and then deliver the message, which has like, an authenticated payload that can then make the purchase. And there are a variety of ways that relayers are paid. And one of the things that we're working on right now is, well, one of the main ways that they're paid is just by the chains right now. Because Stargaze kind of has an intrinsic desire to make sure that people can interact with their chain, that bridging just works.
00:15:05.550 - 00:15:53.520, Speaker D: And the fees are not expensive. Right now, Stargaze make their fees on the purchases, not the inclusion. So they just kind of want that to be handled. That could change in the future. It will change in the future, but, yeah, right now, a lot of it's subsidized. There are several ways that relayers can be paid, and eventually you could imagine that users are paying for forwarded transactions that have kind of directly simulated, like, this is what the fee is for the entire chain right now. It's kind of overkill to do that, but that's something that we're working on.
00:15:53.520 - 00:16:16.290, Speaker D: We also kind of imagine, just side note, that there could be other models, like subscription fees, like across multiple chains or something like that, that there's kind of different ways that you could imagine users might want to pay or chains might want to pay that don't look like individual fee payment for inclusion.
00:16:17.350 - 00:17:20.578, Speaker A: All right, so to sum up here, and this is when I want to turn it over to Ilya, but I just want to underline, I think, a very critical thing. So that just hits home with the audience. Sam and your, you know, some of the common components, this chain abstraction stack from the cosmos point of view, is the existence of interchain accounts. This IBC sort of bridge, which connects all of these different chains and a network of relayers, which sort of funnels general message passing and value in between these different chains and the existence of a builder like entity in the form of skip, which simulates the best sort of path for these valued messages to move. And I want to bring us back to one point that we've made on a previous podcast. This is going to tee you up very nicely, Ilya, which is that bridging is kind of a myth in that the assets never actually leave the chain. So you could imagine if you're trying to route a transaction from, I don't know, from somewhere like stride, right, ultimately into osmosis via.
00:17:20.578 - 00:17:54.194, Speaker A: You're basically the stride token doesn't leave stride, but you're minting a different obligation. And then once you move from chain to chain, you're minting an obligation of the obligation, and it gets very complicated. Hence very different security properties can exist at the end state. And I think, Sam, the idea is that in cosmos, there really is no idea of canonical assets, right. It's just accepted that mostly what we're going to be trafficking is bridged versions of these assets. And so we've just kind of accepted that almost at a societal level for cosmos. But Ilya, I know you have a very different idea about how bridging should work.
00:17:54.194 - 00:18:08.326, Speaker A: So can you maybe describe the chain abstraction, or I know you call it the account aggregation stack as it exists in near, maybe highlight some of the differences in between cosmos and then if you could start to unpack your concept of unbridging, for sure.
00:18:08.348 - 00:19:00.618, Speaker C: Yeah. So, I mean, taking also a step back from the start of near, we wanted to make something that will be simple for people to use and build on. And so the concept of chain abstraction was always like in near's design, it just was mostly applied to Nier. And so Nier network itself is actually a collection of chains where every single account or contract on near is logically a separate chain. And we just kind of abstract all that complexity, cross chain communication account bottles, and make it look like it's a single blockchain. And so that's kind of how we can actually scale the near network itself. And so actually every single token standard, DaX, are actually a multi chain design.
00:19:00.618 - 00:20:32.920, Speaker C: So, for example, our tokens don't have approved transfer from. It's actually always transfer and call with the callbacks because you actually don't have that design pattern that Ethereum has, which solves security issues and also allows to have this multi chain experience where you actually can deposit other chain tokens on a near smart contract. And it doesn't actually make any difference for near smart contracts where it came from, just like through the design of the system. Now, what happened kind of throughout, I would say 22 and 23 is maybe. Yeah, so, like with Cosmos, obviously, we've been talking with Zaki on podcasts and kind of offline, and we always argued that my argument for Cosmos was that it's really hard to bootstrap security for a new chain, and it's very complicated. And so why would you do that if you can just launch on something that's like scales and gives you underlying somewhat similar properties, maybe with more limited kind of characteristics around self sovereignty and configuration? And what happened is the ZK stack became way more mature. And for me that's probably the biggest change that happened, is that where before you needed to spin up hundreds of nodes have presumably some amount of hundreds of millions of dollars of security, economic security.
00:20:32.920 - 00:21:18.438, Speaker C: Now you can actually have just single server running transactions and proving it and post that proof, and now you cannot roll back that, right. And that is as secure as 100 billion dollar of economic security network. That's a pretty fundamental change. And so kind of, I call that like in this chain abstraction world, that's probably one of the fundamental security aggregation pieces that's happening. And there's like few different parties, polygon obviously, kind of rolling out the aggregation layer. That kind of is, I think, one of the foundational blocks of this multichain chain abstraction. Now, the other part is indeed like, okay, well, let's say we have aggregated security.
00:21:18.438 - 00:22:00.718, Speaker C: Now all the chains have same security. It's super easy to launch new chain we have near Da, for example, makes it 80,000 times cheaper to run roll up. Cool. But using all that, now your metamask has gazillion chains you need to bridge. Do you need to remember where you have gas? It's super complicated. And as you mentioned, bridging is complicated. Obviously we can make UI simpler, there's ways to kind of simplify things, but it's still like every bridge opens up kind of an escape hatch for that chain.
00:22:00.718 - 00:23:13.174, Speaker C: And most of the hacks of recent times have been on bridges, right? Because that's kind of the only thing that's really easy to break into. And you can escape with money right away, right? Even if you break consensus of the blockchain, everybody else will validate that it's incorrect and stop, right? That's the worst case. What happens with bridge? The worst case or the money? Again, the approach we are suggesting is the reverse of this. Instead of trying to bridge assets to somewhere, why would we not bring the user everywhere, but in such a way that they don't need to think about it? And so kind of similarly to what Sam described, right, as if you sshed everywhere, you had an account on all other chains, remote account on all other chains, but it's now controlled by your one specific account, one specific wallet or specific app. And now instead of you specifying the path, right, like as you mentioned, okay, well, I have Adam, I need to bridge it to osmosis, swap it, bridge it to star by NFT. You can just specify the intent. I want to buy an NFT.
00:23:13.174 - 00:23:37.618, Speaker C: Here's some. For example, in our case, near enough to cover it. Somebody should figure out how to do it for me. Right. So you have an intent that you specify on one chain with your one account, and then somebody can, on your behalf, pretty much say, hey, I'll do it, I'll take your near, and I'll pay on that chain on your behalf under your account to buy that NFT. Right. And so that's kind of the stack we're building.
00:23:37.618 - 00:24:53.526, Speaker C: So there is kind of underlying security aggregation that's happening through ZK aggregated layers and other pieces, da, et cetera. We have account aggregation that facilitates this single account connected to all other chains kind of remote accounts. Those remote accounts do not have a kind of explicit private key. That private key is actually maintained by the validators of the near network kind of in multiparty computation way. We're using the new cryptography, where multiparty computation, like even as the members change the public keys that they can sign for doesn't. There's kind of a new threshold cryptography that exists now and then on top of it, you have a data layer that aggregates now all of the data from all your remote accounts to show you portfolio across all chains. And then you have this intent layer where you specify the intent, and then somebody, as a relayer as well, picks up that intent, executes it on behalf of your account, signing transaction kind of through those NPC relayers and executing there, and pays for transaction fees on that chain.
00:24:53.526 - 00:25:27.750, Speaker C: And then you have decentralized front ends that actually package all of this up such that it's not complicated and kind of transaction formation, everything happens on that layer. So that's kind of the stack we're building. And each of those pieces kind of play a crucial role to make this experience really smooth from a user they don't need to think about, did I breach something? You pay as if it was like a local execution, but somebody else will execute on your behalf, but it will be still in your custody as the outcome.
00:25:28.810 - 00:26:18.440, Speaker B: So, Ilya, I kind of like this canonical asset maximalism view. Like, I'm sort of biased that way myself, but I do think it kind of falls apart when you start thinking about some of these roll ups, or falls apart, it gets nuanced, I should say, where, if I'm going to have my optimism arbitrage, let's just take those two. They don't have their own native asset as their native gas token. They're using Ethereum. Right? And so we've bridged Ethereum from EtH mainnet to those chains. And so I am kind of curious your views here on how this fits, because if you take your argument to the logical extreme, it should be like optimism doesn't have Ethereum, it just has its own native asset that's native to that chain. And optimism, same thing.
00:26:18.440 - 00:26:32.550, Speaker B: But I don't think that seems to be the design paradigm we're going through. So it seems like it's a little bit messy. Like, we still may have bridged or canonically bridged assets to many of these chains or roll ups.
00:26:32.710 - 00:26:33.034, Speaker A: Yeah.
00:26:33.072 - 00:27:10.914, Speaker C: So maybe just to kind of bigger picture, right? This model works with not just near ecosystem or EVN ecosystem, it works with all ecosystems. It works with bitcoin. You can have a bitcoin address where you can deposit your ordinals, your bitcoins, whatever new crazy stuff that's going to come up. It works with cosmos, it curses Solana, and it works with all the evms. Now, indeed, there is some assets that are, as you said, canonically bridged, kind of under some subset of security assumption. One of the assets, actually a simpler one, is USDC. There's USDC minted by USDC central kind of party on bunch of chains.
00:27:10.914 - 00:27:51.826, Speaker C: And it's the same USDC from kind of security parameters of that circle is guarding it. And so you can kind of transparently exchange them and maintain them on multiple chains. And so Ethereum with roll ups probably can be considered that. And so it's more of a question now for the user and for probably market to decide which ones they want to hold and use. But the gas fees part is abstracted. That's just relayers. They'll have some Ethereum or whatever the token is on the other side, bitcoin, Sol, Adam or Osmo for the related chain, and they'll pay it.
00:27:51.826 - 00:29:09.260, Speaker C: The question is more when you're building a decentralized multi chain exchange now, and the benefit is near now going to be the place to build them because you'll be able to have addresses on all chains and be able to execute transactions as a smart contract on those chains without any bridges. And so when people depositing Ethereum on optimism in Arbitrum, how you want to account for that, right? So this will be a decision for a developer who's building such an exchange to now decide how they want to resolve it. And again, this will also probably go toward how market makers and relayers will actually deal with those things. So I would say like market will kind of decide maybe arbitrum or whatever will be the canonical kind of cheap ethereum. There will be expensive Ethereum on Ethereum, like expensive to move and settle, and then everything else will be just swapped under the hood into those. But yeah, I would say I would not want to prescribe that for sure and let the market decide. It's more that this model allows to have this automatic settlement by the intent relayers based on what the asset people actually either want or don't even need to think about what's in the middle.
00:29:11.410 - 00:29:24.030, Speaker D: I have a quick question for you, Ilya. Do you imagine the exchange living on, near or living on the remote blockchain where you're buying the NFT?
00:29:27.090 - 00:31:20.946, Speaker C: Okay, well it depends what exchange, right? If we're talking about an exchange smart contract that pretty much like imagine thorchain right now, Thorchain is an exchange chain that has addresses on all other chains. So you can implement third chain on near as a smart contract pretty much on Testnet right now, and have all of these addresses without writing extra nodes, without having any extra kind of additional infrastructure or anything. And you can launch that and create the best multi chain exchange that supports bitcoin, Cosmos, Solana and EVMs and any other chain, XRP, whatever, right? All of that is kind of possible. Now, if you're talking about a user wanting to buy, let's say bad kid, the idea of kind of how it works is that you specify in the intent, right? And then in case of solver, in this case, but we call them intent relayer, they probably just going to go directly to the star chain and just buy the NFT. They'll fund the user's remote account with the amount, not just for the fee, but also for buying NFT and buy it there. And so the idea here is really that probably this intended relayers will just have gas everywhere, enough to cover gas, and they'll rebalance every day or every few days to do that instead of trying to solve the past, which is like those are really hard problem of where all the failure cases of something didn't work and you need to roll back in this multi chain kind of asynchronous and under different security block time, et cetera. So going directly and paying there and then taking near and then they know even on centralized exchanges potentially is way easier.
00:31:21.058 - 00:31:46.170, Speaker A: What's up everyone? We are now almost one month out from Das London, the largest institutional conference in all of crypto that's happening March 18 through the 20th, obviously, in London. This one's going to be a blast. We are almost ten times oversubscribed for tickets, which is pretty nuts. So again, we've had to lower the discount to bell ten. Still hooking you guys up, getting you a 10% discount on bell ten. And we've onboarded a whole bunch of new speakers. So that's Dan Tapiero of one Rt.
00:31:46.170 - 00:31:58.846, Speaker A: Pascal gothier of ledger. Anthony Scaramucci, the mooch himself. Michael Sonnenshine of grayscale. Brad Garlinghouse of Ripple. Sergey Nazrov of Chainlink. Matt McDermott of Goldman Sachs. The global head of digital assets.
00:31:58.846 - 00:32:09.022, Speaker A: Stani Kulichov. Danny Masters. The list goes on. This one is going to be an absolute blast. Make sure you don't miss it. And better yet, make sure you bring your friends. We sell a four pack of tickets.
00:32:09.022 - 00:32:25.814, Speaker A: You are going to get a discount on that. So find people in your company. Bring your boss, bring your family, bring your girlfriend or boyfriend, whatever it is, just go. You're going to get a discount if you use that team pack. Run, don't walk. Make sure you go get those tickets today. And cheers, and see you in sunny London town.
00:32:25.814 - 00:33:41.086, Speaker A: I've got a question for everyone on this call, and, Ilya, maybe I could poke at you a little bit about something, but I want to crowdsource everyone's opinions on this. So I think the really attractive thing that you're laying out in this worldview of yours, of unbridging, is, I think, basically everyone in this space, if there's one thing we underestimated, the complexity of it was bridging. When I was getting into crypto five or six years ago, it was like, yeah, this is going to be solved pretty soon, and it has not been solved, and it's actually an extremely thorny problem. And there's a certain amount of. I mean, there's an enormous amount that makes sense about wanting to keep assets in the place where they're issued, which is what we keep referring to as being canonical versions of that asset. But it does have a pretty big drawback in the sense that we're coming fresh off this conversation with Chris goes, where he's talking about the unbundling of protocols from their assets, and the disadvantage of this particular world if it were to play out like this, is there's probably a pretty big discrepancy of people that want to hold and use Ethereum versus people that want to be subject to the constraints of Ethereum, the protocol, right. There's probably a large number of people that want to hold Ethereum and use it as a money and buy nfts with it and trade with it and do whatever they want, but they do not want to pay high gas fees.
00:33:41.086 - 00:34:07.450, Speaker A: And so one of the disadvantages that you're sort of recoupling the constraints of the underlying protocol with the asset, and maybe a great example of this is bitcoin itself, which has basically been unusable from the perspective of apps and block space. And now I know we've got ZK roll ups on bitcoin and bitvm and drive chains and all that stuff, and maybe that's changing, but TBD. So what do you think about this idea of that constraint?
00:34:08.430 - 00:35:35.762, Speaker C: Yeah, so I think there's two parts of this. One is if you ask anyone who holds bitcoin, the comparison between wrap bitcoin and bitcoin is pretty dramatic, right? The amount of people who are actually willing to wrap bitcoin. And so I think generally we have a pretty uneven, I would say, consideration when we are talking about bridges and wrapping visa centralized or decentralized. Now, it's true that if you want to have already this assets, you want to trade them faster, right? And that's why centralized exchanges being the most successful, probably applications in web3 so far, is because they actually offering, like, you bring all your assets to one place and then you trade here, and you don't even think about the constraints of the networks issued on. And so the benefit of what we offering is very much the same, except you can now build decentralized exchange like this. You can bring all your assets to remote accounts, and now you can trade on near pretty much the ious of that assets without pretty much needing to settle all the time back to those chains. In a way that's kind of form of bridging, but it's not done in the same kind of structure that we expect, where bridge holds everybody's assets.
00:35:35.762 - 00:37:03.540, Speaker C: Now it's an application like a specific exchange, hold the assets of users who wanted to deposit. If you don't like it, get out, right? So it kind of isolates the hotspots and then gives you the ability to build a value add services. So you can have everything. And so the cool examples with what you can do with Nier is, for example, you can have an account on near that has remote accounts on, you know, Solana, you havekid, you have Madlad, you have milady, you have ordinal, and then you can just sell your near account on near, you can turn it into NFT and sell it with all of the sassets attached to it to somebody else at fraction of a cent cost at 1 second block time, two second finality. So you can actually trade the whole kind of space of assets on near at high speed and very low friction and low fees. But it's kind of isolated to a specific trade or specific exchange you doing, versus you have this massive bridge that bringing all these assets and holding them. And so that's kind of the transition, right? It's like user now in a way, in control of the, like, oh, I want to work with this exchange, and so I'm depositing here, or I want to hold my asset or whatever the other options there are.
00:37:04.870 - 00:37:40.346, Speaker B: So, Ilya, maybe as the guy that runs the bridging protocol via, can map out maybe a vision for you guys and let you guys poke at it a little bit here, too. So, first of all, I think bridging is becoming a misnomer where all you guys, and Mike, it's interesting, all the kind of the smartest people we have on this podcast seem to think that this intent based vision is the way interop is going here, too. And bridging now maybe isn't really bridging so much as figuring out how to fulfill or settle these intents.
00:37:40.458 - 00:37:56.470, Speaker C: In a sense, you still need some message passing. I wouldn't say all bridging goes away. You need message passing that's not going. You need some way of reading state from another chain. Again, the data layer needs remote state. Yeah. So all of that is there.
00:37:56.470 - 00:38:11.330, Speaker C: It's just like the moving value between chains is the most expensive, complicated, insecure, and sometimes impossible way to do it.
00:38:11.340 - 00:38:11.514, Speaker B: Right?
00:38:11.552 - 00:38:34.370, Speaker C: Because if you try to move an NFT, for example, you can't, because all of the smart contract logic that lives on that chain, or is the chain, in case of bad kids, you cannot move that to another chain. So you need to keep the asset there. With tokens, it's easier. But even then, you remember rebasable tokens, right? You move them via bridge, you're screwed.
00:38:35.270 - 00:39:02.138, Speaker B: Yeah, but I think modern bridging, the way it's going, isn't actually moving value. It's having this intent fulfiller goes and executes the action on the remote chain, and they pay for it, and then they get paid back somewhere else. So value is moved by this third party relayer, in a sense, but it's not like I've sent value through a bridge protocol to make that happen.
00:39:02.224 - 00:39:54.566, Speaker D: Yeah, I'm slightly less convinced that the interchange account model is like that, much more secure. I mean, basically, if you imagine a generic authenticated message passing system, which all of these are built on both token transfers and interchange accounts, a token transfer is basically, it is a right to redeem a locked token. So it's like that is the right that you're transferring over the chain. And an interchange account is the right to do literally anything which includes token transfers. It's really just a matter of whether you're financializing the object on the other side. Do you want to turn it into a token? That specific right to transfer. That said, I do really appreciate the near architecture.
00:39:54.566 - 00:40:08.446, Speaker D: It's very elegant and it's very cool that you can do the NFT swaps on near. But yeah, the security argument I'm a little bit less on board with.
00:40:08.548 - 00:41:23.890, Speaker C: Well, I would say I'm talking about practical security because obviously a light client bridge, for example, from a security perspective, is outside of full ZK client is the reasonable security. The problem is, messing up in the implementation of a bridge is pretty much what everybody has done so far, right? They forgot to check on the things they forgot when you issue in a transaction on the other side, what's originator is there's so much complexity in practical implementation of this bridging. And I totally agree. We've been building Rainbow bridge on near. We started building it in 2019 because we do think this is extremely important technology, but making it secure and maintaining that, and it's like a 75 item list on upgrades and stuff. And then upgrades themselves require because chains change, right? Ethereum forked and added proof of stake, and so now it's like, okay, well, we need to upgrade all of the stack in the bridge to maintain like client verification. So the practicality of that is way too complicated.
00:41:23.890 - 00:41:47.760, Speaker C: And that's kind of what I'm arguing here is more about practicality and moving out. Similarly, how you guys implemented kind of the multichain searchers, et cetera, moving that out of the underlying bridging and communication flow and letting that be done by somebody kind of off chain simplifies a lot of things.
00:41:48.610 - 00:42:31.610, Speaker A: I've got a question here, which is, let's bring this back to Ethereum for a second. One driving force here is what users ultimately end up wanting, which is probably this intense based framework. But Ethereum itself is a protocol, and many of these l ones have a business model, as it were, as well. And the business model of Ethereum, from the way that I understand it, is to grow the adoption of ETH as a form of money. And it feels like the way that they have to do that is to export the ETH. Because obviously, if we want ETH to actually be a money in the real sense of being a money, we need much, much more adoption than we currently have today. And the Ethereum network as it's currently set up is just not.
00:42:31.610 - 00:43:36.050, Speaker A: I mean, this is an explicit admission, right, by the roll up centric roadmap, that the Ethereum main chain is going to evolve to be this sort of bulletin board for posting ZK proofs, probably at the end state. But ultimately a lot of the commerce, as it were, is going to happen on these roll ups. And so if you just think about that, I feel like Ethereum itself has already baked into its own roadmap the idea that most people are going to be interacting with a bridged or wrapped version of ETH. And Ilya, I feel like it's actually really interesting that you brought up the example of bitcoin and wrapped bitcoin, because you're right, wrapped bitcoin sucks. So maybe from the perspective of these protocols, what they should be doing, their strategic imperative is to make the wrapped version of their token as usable and as secure and safe as it possibly could be. And maybe that's what they should do. And it's almost a form of, you could think about this as a form of regulation from the standpoint of the protocol, where they give certain security assurances through the sort of canonical bridge, like an op or arbitrum roll up type bridge, as opposed to kind of a third party bridge.
00:43:36.050 - 00:43:48.678, Speaker A: What would you say to that? Sort of? Because that's another factor here, is these protocols have business models, and there are network effects that happen at the asset layer that might impact the ultimate market structure here.
00:43:48.844 - 00:44:49.100, Speaker C: Yeah, well, it's obviously hard to predict this, right? The Ethereum business model is as big of a meme as everything else in this space, because we've been in this space for what, five, six, seven years, right? The business model of Ethereum changed already at least three times. So at least on my time, I'm sure that for folks, core Ethereum folks, it's been even more so. I would say trying to predict how that will evolve is hard. I think the important parts to understand is like, yes, I mean, roll ups obviously have a very different security model than regular litecline bridge. And this is because of this important part, which is they fork with Ethereum, right? So if Ethereum forks, roll ups actually fork as well. There is actually two different roll ups exist at the same time on two different forks, and then whatever one resolves becomes canonical. Is that what roll ups needs to follow now?
00:44:50.510 - 00:44:54.410, Speaker D: Sorry, an enshrined roll up just to.
00:44:54.560 - 00:45:15.646, Speaker C: No, I mean, any roll up follows the fork. But what's broken still is that upgradability. Right. And this is why I need to enshrine roll ups if you don't want to also have a multi sig on top of it. So, point is, practically speaking, there's a lot of practical things under the hood.
00:45:15.678 - 00:45:16.260, Speaker A: Which.
00:45:19.110 - 00:46:27.822, Speaker C: Kind of prevent this to be a nice picture of. Yes, roll ups inherit full security, and it's all easy and done. Again, from my perspective, for example, for east, specifically east as an asset, right? And this is obviously a big asset, but I would still expect you can have the, again, this example of a decentralized exchange, right? Even think of it from a Thor chain perspective, as a Thor chain, you want to offer trading with ETh, but you don't want to settle on Ethereum because it's too expensive, right? So you will pick one of the other roll ups, the one that you probably believe is most secure. And if users agree with that, then they want to withdraw there instead of withdrawing Ethereum. That's going to be kind of second most canonical, and it's indeed wrapped. But again, market decides here, not a specific security parameters that we can define.
00:46:27.986 - 00:47:45.410, Speaker D: I typically think about these things kind of from the other direction. Like roll ups. Chains are institutions and institutions that have a customer base, and they have a multitude of ways to provide the security assurances that give their customers peace of mind, that could be enshrining parts of the protocol, that could be providing proofs, that could be decentralizing aspects of their validator set, or providing third party verification. There's a whole array of different technologies and techniques to give that additional trust assurance. And you should use kind of what makes the most sense for your users and for your product. So I'm kind of like very happy with a multitude of different techniques there being employed for different use cases.
00:47:46.470 - 00:48:25.514, Speaker B: Sam, playing off that, this idea of roll ups as institutions, and you go back to Mike's point earlier, kind of like us dollars. Well, so what's Ethereum's business model? They want to be the reserve currency of crypto, something like that, let's say. And we go back to Mike's analogy early on, like USD. So the Federal Reserve issues USD. No one banks with the Federal Reserve except for banks, right? Those would be like your institutions, your roll ups. Then you have banks that bank with the Federal Reserve that have, they don't have exactly USD. They have an entry on the Fed's balance sheet that says they have some USD.
00:48:25.514 - 00:49:15.950, Speaker B: So you have Morgan and Wells Fargo and whomever else, and then you also have like Silicon Valley bank and Signature bank too, right? And they're supposed to have exactly. What's the point, right? They're institutions that failed. So their USD, what, they had ceased to be considered canonical USD anymore. And I think it's kind of an interesting example to map out this, to sort of roll up version of the landscape where transacting on Ethereum, we all kind of think it's going to become more and more expensive if Ethereum works. It's transacting with the Fed very difficult to do. Very few people do it. So most users will want to use their Ethereum on a different institution, to use your word, Sam.
00:49:15.950 - 00:49:36.818, Speaker B: And they'll pick an institution that should have lower fees but other guarantees for them. And that seems all well and good to me. That actually seems like a pretty compelling landscape. And then, Ilya, to kind of loop this back to your point, I don't think this is incompatible with elements of your unbridging thesis here too.
00:49:36.904 - 00:49:54.934, Speaker C: Yeah, no, it totally works. That's what I'm saying. It's going to be market deciding which one of this roll ups is then preferred for people to store their value. Right? In a way, in this analogy, there's actually no good american neo bank, but revolut and mercury.
00:49:54.982 - 00:50:11.194, Speaker B: Venmo. Think of Venmo. Think of Venmo. In America, Venmo is not a bank, but it holds USD in a form of USD that you can use to very cheaply and easily transact with really shitty security guarantees. I don't know what the security guarantees of Venmo are. Go ahead, Mike.
00:50:11.242 - 00:50:11.550, Speaker A: Sorry.
00:50:11.620 - 00:50:11.854, Speaker B: Yeah.
00:50:11.892 - 00:50:54.506, Speaker A: And could I poke at that? Because I actually feel like this is one of the most critical things that you want to get right. And you hear this, there's a very common argument that the money and liquidity is going to reside where it's safest. But I think I would give you two really strong data points that that's not actually how it works in practice. And the first data point I would give you is most of the volumes and sort of transaction settlement that happens in crypto today is USDT on Tron. So that's data point number one. And I'll give you this other example of the euro dollar market versus the canonical dollar market. And it might surprise people hate it when I bring up this macro shit on this podcast, but I'm going to bring it up anyway because it's relevant.
00:50:54.506 - 00:51:32.600, Speaker A: So there is a market for canonical USD. Even if you accept that JPMD is the same as boad, there is a much larger, like a full order of magnitude larger market. You can essentially consider it a secondary market for dollars called the euro dollar market, which is USD, which is dominated by large international offshore money centers. And it's bigger. It's bigger than the market for actual USD dollars in the United States. Opaque, unregulated. And actually there are lots of smart people out there that can trace big kind of macro movements to this.
00:51:32.600 - 00:51:46.014, Speaker A: Know, I only bring this up to say I'm not sure that it'll play out this way, but I think if you've been in this camp of the settlement, assurances are the only thing that matters. You should probably look at these two.
00:51:46.052 - 00:52:34.320, Speaker D: Data points, because totally, I think if you're on board with the idea that we need to export more ethereum, you really should not let the perfect be the enemy be good. How do we provide stronger assurances for TroN? How do we actually build up security provisions and kind of draw projects in and then slowly upgrade them? I think that's going to be as important as building the perfect enshrined ZK bridge with three different independently built clients or whatever.
00:52:34.850 - 00:53:30.990, Speaker C: I think maybe to bring all of this back to the chain abstraction, because there is a podcast somewhere there about the expert of tokens across chains. But I think the point bringing back as a user, you don't need to think about any of that. Like most of the time you don't think about this. Same as you don't think about what's happened when you pick with your credit card, US credit card in Europe, right? You don't think about the whole flow of money exchanges and how there is a settlement on euro to USD market somewhere, because people actually getting paid in euro, you're just paying with your card in the shop and getting your stuff. And so that's really what we're going after. There will be some things to figure out on the specific settlement routes that are most liquid and the most effective. Because at the end it's also will be the question which is the liquid market, which is the most effective market.
00:53:30.990 - 00:54:05.594, Speaker C: Because somewhere there the intended layers will need to resettle all of this and make sure they have enough assets. Which is the reason why, for example, Tron is used for USDT is because there was a ton of it minted there. And so it's the most liquid like all the exchanges have a lot of it, and so if you want to move between them, it's really easy. So at the end, a lot of that will be decided also by those. But as a user, that's not any of your concern. Pretty much, that's kind of where we trying to get to same.
00:54:05.632 - 00:54:26.978, Speaker B: So I was just going to say, going back to, I do agree, and I think we have some agreement that, okay, user who wants to buy a bad kid wants to buy it on the star network. That makes sense. It's like native assets should be there. Then we have this, like the roll ups on their ethereum. Maybe they want to spend their ethereum on arbitram or optimism. All good. All well and good.
00:54:26.978 - 00:55:14.720, Speaker B: Your thesis, which like fully agree with, is that of course, the user doesn't want to care what chain they're transacting on. And so the near thesis is that you kind of have like one home account, your near wallet. It has signing keys for all these networks. We're using intents to fulfill user intents on all these networks, including on cosmos. And there's like a really lovely home that you use to transact across this crypto ecosystem. Just to push on that, though, don't you also think metamask, there's other people that want to have this position, too, and I think this is where a war will play out, right, of who's going to be the user screen, who owns the.
00:55:16.950 - 00:55:17.362, Speaker C: To.
00:55:17.416 - 00:55:19.940, Speaker B: Maybe we get Sam's view on that too, right?
00:55:20.390 - 00:56:30.954, Speaker D: Well, I think it's good that you brought up this distinction, because this does actually draw a line between kind of what Ilya is doing and what skip is doing right now. I think that there could be hybrid between these things, but basically a wallet is doing a lot of the abstraction in our model where they are signing across different networks and they kind of have the key material and some degree of intelligence within the wallet to know what to do. And then near is trying to put more of that intelligence into the near chain. And I think there's benefits to both. The one benefit that I see in the near model is you get to do a lot of kind of composable automation in the near chain. When you bring things into the wallet, you can potentially move faster. So one of the things that we've experienced is just like every single chain is moving all the time.
00:56:30.954 - 00:57:13.046, Speaker D: There's upgrades, there's various state changes, and writing smart contract adapters for all of these things, and trying to create workflows where you're able to query remote state and then understand that state and then execute on it on this kind of intermediate domain gets very complicated. So being able to just update a client and say, okay, well, we're going to tweak the transaction to work this way. Now that allows you to move a lot faster. That's kind of how one of the main distinctions I would draw between the.
00:57:13.068 - 00:58:25.386, Speaker C: Two models, I mean, I think maybe as a little bit contra argument, the things we're doing is a protocol. And so metamask is very much welcome to use this protocol to power for their users this experience. And actually it will work as soon as launch because we have snaps and we actually are having metamask support rolled out as well, like full metamask, just as a separate chain rollout as well. The benefit here is we also moved a lot of the logic into the kind of client front end part. And so because we have this decentralized front ends as a kind of framework, this allows to have a lot of that logic there, living there. And then any wallet can either just use it because it's isolated and kind of insecure container, or it can be an app that uses a wallet, or you can embed wallet into your app. And what we see on Nier is that most of the massive user base apps all embed wallets into them, right? So near has three to four most used apps in web3 with millions of users.
00:58:25.386 - 00:59:09.750, Speaker C: We just actually had hot in last ten days. In ten days, hit a million users from launch, which is probably the fastest growing app in web3. And so they're a wallet inside telegram, but that you can just click on a bot and you have a wallet inside telegram with your Telegram ID. But you can also have all of this chain abstraction, all of the decentralized front ends rendered there as well. So you have this kind of protocol that can be embedded into any wallet, any app, and pretty much turn it into a super app or super wallet from the get go. And you don't need those developers to maintain toner complexity on their side. They're just using this as a protocol.
00:59:09.750 - 00:59:40.040, Speaker C: And then for users importantly, sorry, you can switch between all of them. And it works because the state is not controlled by wallet, right? It's owned by your account, by your private keys. And I think that's at least like, as a user and a proponent of self sovereignty, that's what I want. I don't want be binded to a specific provider of wallet software. I don't want to be bind to any specific app. I want to be moving freely with my state with all of my accounts kind of across web3.
00:59:43.610 - 01:00:39.734, Speaker A: Ultimately, the question that we're getting at here is, I think, one of the most important and unanswered questions in the space, which is who ultimately has the user, where. Where does the user lock in ultimately end up residing? Because I think we'd all probably assume that there's going to be an enormous amount of leverage for whoever attains that position. And I think you guys are doing a great job of describing two of the camps, which is the sort of wallet camp and the protocol, the sort of general protocol camp. There is another camp, which maybe to just editorialize and interject my own opinion, which would be a runaway application, ultimately ends up winning that. And I think I fall into that camp because there's a great podcast. A while ago, Fred Wilson of USV, and he was describing that. He at one point theorized Google Maps or Apple Maps as being this place where you log in, where you log in, and then you would deploy Uber from there instead of from the app itself.
01:00:39.734 - 01:01:07.362, Speaker A: And he was like, I don't really know why that didn't happen. And from my perspective, why it didn't happen is because it's just an extra step, right? You already have everything on your phone. You go to the app that you want. Otherwise you'd have to go to an app and then do a thing, as opposed to just going directly to the app. And I do think there's an opportunity for, frankly, like Telegram. How have they not integrated? They've got all these unibot, like all these bots launching. Like, why don't you just launch your own decks? Clearly there's product market fit for you guys right there.
01:01:07.362 - 01:01:43.438, Speaker A: And so I do feel like there's a roadmap for an app, be it a centralized exchange like Coinbase. You already start to see them doing this a little bit, a messaging application like telegram or something like that, to just decide to do a wallet as a service like integration. Because the wallet thing is, people have been theorizing about this for so long, these wallets are going to be super important then they never really are. Obviously, Metamask is very important and they do have a lot of users. But yeah, I sort of probably sit on the. It's going to be a killer application that ultimately ends up winning this and then sort of vertically integrating in a bunch of the stuff that we're talking about.
01:01:43.524 - 01:01:44.878, Speaker B: How would you guys respond to that?
01:01:44.964 - 01:01:52.240, Speaker D: I've thought a lot about this. One of my conclusions is that we're actually just in the early innings here.
01:01:52.710 - 01:01:53.810, Speaker B: Yeah, I agree.
01:01:53.960 - 01:02:32.780, Speaker D: Recently, we're kind of seeing an unbundling and rebundling of the wallet itself. So there's like third party MPC signing services that plug into different wallets. So that's kind of like, okay, we're going to strip out just the authenticated signing architecture and then the wallet is a little bit more of a user experience layer. Eventually, if you kind of take this to its natural. Apple or Google with their hardware device should have a lot of control. If they get into the market.
01:02:34.850 - 01:02:35.166, Speaker B: They.
01:02:35.188 - 01:03:27.886, Speaker D: Have hsms and they can tie it into Apple ids and all this stuff. So I don't really know how that's going to play out, to be honest. The other thing that seems like a big question mark is where privacy lives in this stack. So you kind of have to bring more of the data and state closer to the user, like local to the user, in order for a user to have privacy. That is how a user achieves privacy. So that could change the market structure pretty significantly if there's demand for privacy. To be honest, I spend most of my time just like trying to make shit work, like, because it doesn't work right.
01:03:27.886 - 01:03:33.954, Speaker D: Like, like who owns the user is almost like a luxury. Just make it work first.
01:03:34.152 - 01:04:07.654, Speaker C: Well, maybe just to contrast it. So near has number one app in web3, which is cosmos, and it has over a million .2 daily active users. They are fully chain abstracted. They don't know for the most part they're using blockchain, they're getting their loyalty points. They're paying for ecommerce, it's directly on their phone, on their log screen, and it's pretty much embedded into the operating system with near account. So this is already happening and it's like fully chain abstracted.
01:04:07.654 - 01:04:37.570, Speaker C: And they'll be able to use web3 apps across all chains. When we have account aggregation. Launched sweatcoin, same thing. 150,000,000 installs over, I think, 20 million users who have sweat about 1.5, I think million monthly actives. Again, this is an app that became a wallet, that has wallet functionality, that offers exchanges. They just launched liquid staking.
01:04:37.570 - 01:05:02.042, Speaker C: All of this is happening now and on near. This has already happened because we have chain abstraction stack, not multi chain yet, but like for near, and it's powering this apps right now. So same with hut, it's in telegram embedded wallet. They're going to be launching swaps and everything as well. On top of it, again, you don't pay transaction fees. It's all abstracted out. It's have massive growth.
01:05:02.042 - 01:05:13.680, Speaker C: So I would say this is happening and apps are popping up and it's either like app into wallet or wallet into app. Wallet into super app on the other side.
01:05:14.210 - 01:05:26.430, Speaker B: So I got a couple of points here, guys. And then Mike, I think we got to wrap it up too. Right? But first of you should Telegram does have a built in wallet. You're just geoblocked in the US. I should show you this stuff too.
01:05:26.600 - 01:05:27.270, Speaker A: Really?
01:05:27.420 - 01:05:27.986, Speaker B: That's wild.
01:05:28.018 - 01:05:29.238, Speaker A: I didn't even know that.
01:05:29.404 - 01:06:05.360, Speaker B: Yeah, and it has real usage. I don't know the stats, but they're not insignificant. Sam, Solana phone. This is another play. You do see plays trying to own the user from the kind of wallet level and like the Solana phone thing, break the App Store, but also have an embedded wallet here too. I really don't know a lot about the Solana phone, but it's like part of the strategy. And like Ilya, what you're talking about here is you're literally utilizing near as infrastructure for applications to have a wallet built.
01:06:05.360 - 01:06:18.174, Speaker B: Exactly. It is near wallet, obviously, but user doesn't know that. They just think they've got some infrastructure here, which seems pretty interesting.
01:06:18.312 - 01:06:35.046, Speaker C: Well, that was my point. That's what chain abstraction is. Chain abstraction is users don't know, they just use it. And they will be using Ethereum apps or costs. Like they'll buy bad kids, they will transact on Solana and they will not even know. They'll just use cosmos or use sweatcoins.
01:06:35.238 - 01:06:39.306, Speaker B: But there is a question of entry point here that I think is relevant. Yeah.
01:06:39.328 - 01:06:58.754, Speaker C: So, yes, I mean, we're providing protocols for coordinating that. Right. And abstracting. And that's why it's not just near as a blockchain, it's a whole layer of decentralized front ends, a data aggregation layer. All of those pieces need to work together to then plug in into those applications on the top.
01:06:58.952 - 01:07:24.102, Speaker B: Sure. But the applications that users are using, again, if they don't know they're using near, they don't even know their entry point to go and use. It's like the application owns the user. Near doesn't necessarily. Right. And I just don't know how that's going to evolve because a user is not going to want to have 50 different near wallets on all the different applications and not even know it. That would be kind of unfortunate.
01:07:24.102 - 01:07:53.860, Speaker B: I think it would be better to have it in one place. So it'd be a great problem for you guys to have where you actually do have users that have 50 different near wallets in all these places. But then you're going to want to figure out the point of aggregation. And then maybe, Mike, one of the questions we wanted to ask Sam and Elia was like the counterpoint of like, well, what if you just go monolithic, like Salana. Salana phone is trying to say, hey, we're just going to have a super fast, high performance blockchain. And that's your entry point here too.
01:07:54.470 - 01:08:39.378, Speaker D: I do have some intuition that there kind of has to be common signing infrastructure in the end game. Somehow you're going to have something that looks a little bit like Oauth or whatever, and maybe part of your credential is held on your phone, part of it's held on a backup device, or your mom has a backup. And that should work across all your apps. How we get there, the technology exists. It's more of like a failure of imagination than anything else.
01:08:39.544 - 01:08:45.910, Speaker C: Well, it's a coordination, right? Everybody wants their own thing. 25th protocol.
01:08:48.650 - 01:09:21.294, Speaker A: I'm sure that I'm wrong about this, but talk me down from this sort of standpoint in that it feels like where we're sort of moving potentially is like walled gardens is a really negative sort of connotation of this, but it's kind of like, what is the difference really in between being like, hey, adopt my, like, move everything onto one layer on Solana versus adopt my set of standards in cosmos with my many different chains versus my kind of decentralized front end on near with all these different common signing things at the end of the.
01:09:21.492 - 01:09:21.962, Speaker B: We're.
01:09:22.026 - 01:09:59.338, Speaker A: What we're sort of talking about here is I go back to. I actually heard this term first from Preston Evans. It's just trust zones, right? Where there are these different zones of trust and there's a certain amount of heterogeneity within these zones. And everything's probably just going to work better. If you're interzoned, commerce is going to work better. And then ultimately there's going to be a distinction or extra layer of friction moving from near to Ethereum or cosmos to Solana or whatever. Is that ultimately the world that we're moving towards here? Or what's the steel man against what I just outlined there?
01:09:59.424 - 01:11:27.400, Speaker C: Well, I think the biggest kind of different, again, I mentioned in the beginning, I think the biggest change that happened is ZK is like we're kind of equalizing the security across the board. And two, three years ago, I would be the first one to say like, hey, you need one chain and it's near. But the reality is there is reasons to launch specifically customized app chain for specific use case and potentially remove gas and do rate limiting in completely different way. There's a reason to launch like a private chain that still follows the rules and you have ZK proof, but you don't reveal the actual transaction data. So there's reasons to have some heterogeneity, even if you have, let's say the most scalable chain right near. But the question of if you can unify security, if you can say actually there is no difference in trust assumptions between this, you can then make things kind of more straightforward for the users to interact with it. Now there will be some latency, like just sending stuff between, but again, so near is designed that way.
01:11:27.400 - 01:12:14.520, Speaker C: Every single account is a separate chain internally. That's why cross kind of contract calls are cross chain messages, which is like optimize latency such that users don't really have that and delivery and everything. And so I think it's all possible to package it up in such a way that users can interact with all of this without really dealing with it. If we draw from web two, web two works asynchronously. It's all separate service data centers, API services, et cetera. And it all packaged up into Facebook's and whatever team yards, right? This probably uses like five different API services underneath. And so as a user, don't need to think about it.
01:12:14.520 - 01:12:21.178, Speaker C: Have you paid for your, whatever, video streaming and sound streaming, which is two separate services.
01:12:21.264 - 01:12:21.466, Speaker A: Right.
01:12:21.488 - 01:12:55.410, Speaker C: You just use it. So I think that's kind of the goal is if we assume unified security, that removes a lot of this original kind of. Okay, this is different trust zones, and you want to keep things as separate as possible. And at the same time, if you kind of create enough aggregation and abstraction on top, you can actually have an experience that is not as, like, I would say, cumbersome as right now, and potentially more straightforward than using that chain directly.
01:12:58.730 - 01:13:25.600, Speaker A: Yeah, well, guys, this was a really phenomenal podcast, and it's the mark of a good conversation when we actually had a whole page of notes and topics that we didn't ultimately end up getting to. But I think we got to cut it off here. But this was a ton of fun. Heart, I hope it's okay if I speak for you here, for both heart and myself. So, Sam or Ilya, if folks want to find out more about you guys, either follow you or the projects that you're working on. What's the best way to do that?
01:13:27.970 - 01:13:54.760, Speaker D: Yeah, I'm at hxrts on Twitter and I work for two projects, skip, which does a lot of this cross chain kind of building for wallets. And then I have a project called Timewave that does actually much more near fully automated transaction building and cross chain flows. So going to be talking more about that relatively soon.
01:13:56.010 - 01:13:57.174, Speaker B: Awesome. Yeah.
01:13:57.212 - 01:14:05.930, Speaker C: For me, it's Il Black Dragon or ad near protocol for the kind of overall news and updates.
01:14:06.270 - 01:14:14.160, Speaker B: And I got follow up conversations for both you guys because we do have pages of notes to go deeper. You. Thank you, guys.
01:14:14.690 - 01:14:16.350, Speaker C: Bring your gear to Denver.
01:14:17.090 - 01:14:17.454, Speaker B: Yeah.
01:14:17.492 - 01:14:18.446, Speaker D: Looking forward.
01:14:18.628 - 01:14:23.726, Speaker A: Yeah, me too. Yeah, we can do a follow up, guys. This was a ton of fun. Thank you so much again.
01:14:23.828 - 01:14:24.206, Speaker D: All right.
01:14:24.228 - 01:14:24.958, Speaker C: Thank you.
01:14:25.124 - 01:14:25.934, Speaker D: Thank you.
01:14:26.052 - 01:14:26.586, Speaker B: Bye.
01:14:26.698 - 01:14:44.390, Speaker A: All right, man. Episode two in the books, and I thought this one was a blast. I feel like maybe with Chris, we got to cover some of the higher level stuff, but we really felt like we dove one level deeper here and got into the nitty gritty, which there's no one better to do that with than Sam and Ilya. So this felt like a fun episode.
01:14:44.810 - 01:15:52.000, Speaker B: Yeah, well, obviously fun. I mean, the downside is that we have like 3 hours more content, at least to go through. But the one takeaway here that does strike me is how last episode, I think I declared I was an intense maximalist, and Chris goes, obviously is too. These guys are as the. It seems that there's sort of a form of consensus that in chain abstraction or in this world where we have all these blockchains, you can't be declarative about exactly how you get from one chain to another. You have to do this intent like thing. And in any system, like where that intent originates, who controls the user or the system for creating that intent? Lots of open questions there, but I am struck by the fact that Ilya's built into his architecture is this idea that an intent gets relayed, so you go get your asset on its native chain in a quote unquote unbridged way.
01:15:52.000 - 01:15:58.442, Speaker B: And Sam, I think so, too. So I thought that was a kind of interesting point of agreement.
01:15:58.506 - 01:17:01.982, Speaker A: Yeah, I did as well. I think you asked this question, posed this question in our very first kickoff, which is, are we going to have these sort of fast intent, almost like fast bridge, intent based infrastructures which are supported by solvers? Or is it going to be like the pipes? Do we want to make the pipes themselves faster and less trusted or more trusted? And I don't know, you have much more sophisticated thoughts on this than me, but I think there's going to be probably similar to the across design, almost imagine like a very fast. It's going to feel to the user very fast, right. You can just submit your transaction. This network of solvers is going to end up relaying that transaction. But then there might be like a slow path in the background where the assets move across the sort of canonical, most trusted bridges. And you and I, I think we didn't necessarily set out to have an episode based primarily on bridging and canonical versus bridged representations of assets.
01:17:01.982 - 01:17:36.554, Speaker A: But to me, that was the most interesting maybe difference in between Ilya's and Sam's point of view. The Ilya unbridging version of the world, where every asset is canonical versus Sam's. Maybe the cosmos perspective, which is bridging, is inevitable, and we should figure out what the best route is, what the best security properties and assurances are. But there really is no such thing as a canonical. The assumption is everything's going to be a bridged version of an asset. That, to me, was the most interesting point of not contention, but like, very different worldviews in this conversation.
01:17:36.602 - 01:18:25.658, Speaker B: Yeah, well, I mean, I think Sam would agree once you start, I think Sam's view would change, and we didn't have time to get into this. Right. But his view would change when you move outside of the cosmos ecosystem. So within cosmos, you have this wonderful homogeneity around IBC, there is just a pipe between every cosmos chain that works. And so then once you're in that ecosystem, your intent is kind of figuring out the right path between all these pipes, and you're using solvers to figure that out. But you have the pipes by default, and they're pretty fast, quite fast, and they're pretty secure, although nuance around that. But you have these pipes that you can use to get between chains.
01:18:25.658 - 01:19:47.958, Speaker B: And then in the cosmos world and Sam's world, it's like, how do I do that the best way? But then Ilya is looking at it from like, okay, wait, I want to talk across all these different ecosystems, and I don't have a fast pipe, so I got to do something else here. And this is more like our worldview at a cross, right, where you're going to have the intent fulfilled, and then there is a pipe somewhere that does something. And actually, Mike, that's the one thing that I really wanted to ask Ilya and didn't get into. It's kind of like where user funds are escrowed in a system and how you verify the intent was fulfilled. We sort of glossed over this, where you have this near chain, your home chain or home controller that can sign transactions anywhere, and then you have intent relayers that are going to go and fulfill them. But seemingly there are user assets on one chain that are going to be spent on another chain. And because you aren't messaging directly, you need to escrow those user assets on their origin chain, have the intent fulfiller, the solver, fill them with their own money on the destination chain, and then verify how to release the assets back to the solver at some point later on.
01:19:47.958 - 01:20:00.860, Speaker B: And we didn't get into how that works, but seemingly there is still a use of types like you still got to somehow verify that intent at some level. I do agree with what you're pushing on, though.
01:20:01.810 - 01:20:43.058, Speaker A: I think there was a whole episode that we could have done on blockchain operating system from near. And my understanding of it is that the escrow essentially happens at the near level, their account level. So near accounts you can actually trade, like nfts. And the way that I would think about it is, frankly, Ilya gave this exact analogy on the podcast. But in the same way that an exchange can be a bridge of sorts in between two different. In some way, the centralized exchange product market fit is that you can actually trade canonical assets one with the other. And I think that's the idea with near as well, except your custody on near.
01:20:43.058 - 01:21:02.078, Speaker A: It looks more crypto native. Right? It's on chain, but you have kind of this MPC signer system with near validators that ultimately can sign on your behalf. And they have a very neat way that they do this with threshold encryption, but it was kind of beyond the scope of the show, or we just frankly just didn't get into it.
01:21:02.244 - 01:21:40.074, Speaker B: Yeah, exactly. But there's still this question of, like, if I have bitcoin. And the cool thing about this near multi chain account is, like, I could have a near wallet that has a bitcoin key inside of it. And so I could have bitcoin that I own and can spend out of that account. But if I wanted to go and buy, like a bad kid on Cosmos, and I wanted to buy it with my bitcoin. Right, okay, cool. I could have solvers compete to do that, but near can't escrow my bitcoin, or I don't exactly know how they would do that.
01:21:40.074 - 01:22:34.880, Speaker B: There is still a need to have that bitcoin escrowed with a very different kind of finality guarantee there before I could go and buy my bad kid. And so that's something I want to push on. And frankly, I think Nier is going to be announcing more things at Denver too, and we are as well. But on the across side, we're trying to position across more as like a settlement layer for cross chain intents. And I think that this is almost like a necessary, sort of underlooked, necessary bit of infrastructure around how do you escrow these funds and then release them? But again, this is all going down that path. This all goes into the core idea here is a user just wants to do things right. They just want to do things and get things done with assets, wherever they may be, and they don't want to think about what chain they're on.
01:22:34.880 - 01:22:45.300, Speaker B: And again, that core end goal, everyone seems to really agree with that, but it ain't easy how we get there.
01:22:45.830 - 01:23:31.214, Speaker A: Yeah. All right, so I completely agree with that. And I think now, Hart, that we need to do an episode on ZK proofs because frankly, that's already come up quite a bit in the first two discussions. And ultimately the thing that's really difficult, I think everyone agrees on ZK proofs as kind of this end state technology, I think, where we need to have conversations with folks about different variations that exist and what the actual latency and cost of producing these ZK proofs are, because ZK, it's an extremely new moon math technology, but it has been around for a little while. We haven't seen these proofs. Obviously, things are moving much slower than we sort of thought optimistically. And so it'd be great to talk to on the ground experts about what that is.
01:23:31.214 - 01:23:33.700, Speaker A: But I had a question.
01:23:35.750 - 01:24:03.340, Speaker B: Just on that for 2 seconds because it does seem like where my mind's going. And I agreed with you. I had the same thought during the episode. ZK is like the ultimate pipe between all these systems. Like I could just prove something happened, right. But where I think, again, going back into the latency and cost around the ZK stuff and also speed, these ZK proofs are not going to be 200 millisecond proofs. It's just not really possible.
01:24:03.340 - 01:24:48.230, Speaker B: And so if we want an outcome where user actions are happening in 200 milliseconds, which is kind of like my goal, you're going to need a third party to go and do the thing, and then user funds get escrowed, and then the ZK proof can be the way that you release the user funds. So again, I'm super interested in this idea of ZK storage proofs, or ZK proofs in general, being like your ultimate pipe to connect these blockchains, but with a cost and latency. That still implies you have a solver network doing something ahead of it. Right. But anyways, that's why we got to do another episode.
01:24:48.730 - 01:25:49.910, Speaker A: Why don't I just say something that's a little bit controversial and you can sort of push back on me and talk me from this perspective? This was my last question at the end of the podcast. But I feel like every ecosystem is basically on the path to solving or has solved interop within their ecosystem, right? So this would be atomically at the level of main chain eth or Solana. This would be within one roll up stack. So very good interop in between different chains on optimism, for example. But there's just not an enormous push. It doesn't feel like incentives exist actually to get great interop or very fast, something that would look like. I'm just wondering, how big is the market for essentially interop in between apps that exist on Solana versus Ethereum? And there might just be a fundamental lack of incentives to actually fully pair those two ecosystems.
01:25:49.910 - 01:26:33.606, Speaker A: And my mental model, which is, I can't decide if this even matters or not, but it is kind of like a couple big trust zones where everything just works much better within these zones. And if you want to go from Ethereum to Solana, there's a Dex that stands in between those. But it's not like we have to do this crazy arbitrage that's going to require ZK proofs with extremely low latency in between those things. Like most of the arbitrage will just be intra trust zone, if that makes sense. And I do think that has big implications for the architecture of all of these different systems. But that's the way I see it. Just to put a bow on this point, you mentioned something really interesting about Cosmos, which is that they have these pipes.
01:26:33.606 - 01:27:09.970, Speaker A: The best thing that Cosmos did was build IBC, which is essentially this public good piping system interop tool that all these different chains have access to. And they started from day one with the understanding that we needed to be interoperable with these other chains. Whereas I think what you're seeing in Ethereum is that there is no incentive for roll ups to be interoperable with one another. Actually, there's a disincentive. They're probably trying to keep user funds within on their zone instead of on the other zone.
01:27:10.470 - 01:27:32.880, Speaker B: Yeah, well, the trust zone thing is a useful analogy. Right. But it does break down a little bit in the crypto context, I think so. Okay, we have AWS and we have Google Cloud, and within AWS and Google Cloud. Great. Each of them are their own trust zones. They can communicate really quickly within them.
01:27:32.880 - 01:28:01.494, Speaker B: If I want to send a message between AWS and Google cloud, I send a message using TCP IP. Great. Makes sense. But what is the message I'm sending? It's just some arbitrary data that an application interprets. It's not money, right? Like, I'm not sending money between them. And when I want to send money between things, I need a different trust system. It's literally what blockchains were built to do.
01:28:01.494 - 01:28:39.666, Speaker B: But a blockchain is a complicated consensus machine to allow you to move money within the blockchain. And so this idea of trying to connect these different trust zones, it's not easy. It's not just like, send a message, right? Because you might want to send $100 million, and there's lots of people out there that are trying to steal your $100 million. Like, not simple. So IBC has allowed cosmos to have a trust zone that has pipes between it that work and work really well. Salana. Okay, you don't have pipes because it's just one blockchain that works great.
01:28:39.666 - 01:29:25.598, Speaker B: Ethereum, arguably, to your point. It's like ethereum you want to think of as one trust zone. But these roll up ecosystems are kind of building their own trust zones with their interop between them, and then kind of competing and having relatively shitty interop between the different roll up ecosystems. So the optimism superchain, clearly, they're going to want to make it easy to move funds and value and messages between optimism and base. That makes total sense. And like, orbit chains, too, all that. But like you said, they perversely almost have an incentive to make it hard to move off of a super chain to an orbit chain, or vice versa.
01:29:25.598 - 01:29:41.782, Speaker B: Like business incentives mean you want that value locked in your ecosystem, in your trust zone. And so then that's where there's an opportunity for other interop solutions to go on top. What do you got here? What we got?
01:29:41.836 - 01:30:30.802, Speaker A: All right, I'm showing this. This is cnode on Twitter, but he's sharing this screen grab from. This is Vitalik's endgame. And what he's describing is these three paths towards the same destination, which is where blockchains are heading, is centralized block production, decentralized validation, and strong anti censorship protection. So again, I don't want to belabor this point and sort of confuse people, but these distinct systems that look very different today are all kind of heading towards this. And he kind of lays out these three paths, which is traditional big blockchains. And that would be like the Solana approach, where validators get larger, both in terms of hardware requirements and bandwidth costs.
01:30:30.802 - 01:31:22.086, Speaker A: But ultimately you can build these sorts of light client, sort of anti fraud, anti censorship things in there to make sure that users of the chain, if they're not actually participating in consensus or validating blocks, they can at least make sure that everyone is behaving by the rules, right, which is a pretty good end state. And then on the Ethereum roll ups, there's like two different paths that he lays out that roll ups can go, which is one. One roll up scales and dominates, in which case you also get centralized block production but decentralized validation. Or you get many roll ups, but then cross domain mev sort of also centralizes block production because you have a large builder that's standing in the middle there. And I just want to go ahead. These predictions will probably be wrong. No one should take me too seriously in this.
01:31:22.086 - 01:32:26.140, Speaker A: I'm thinking through this all the time, but I feel like we're heading towards a world of maybe like a roll up oligopoly, where you kind of have two different types of roll ups, and it looks like it's just going to be optimism and arbitrum that sort of run away. So maybe it's not one roll up, but it's two big roll ups that eventually the brands of optimism and arbitrum are almost synonymous with the level of trust that you would come to expect from Ethereum. And so that obviates the need to even say op eth or arb eth. It's just ETH and it's on ETH, and everyone just associates the level of trust that you get on optimism and arbitrum is the same as you get on Ethereum. And then maybe there are these other sorts of roll ups that do something that's very differentiated. But it feels to me like we're on the brink of a hollowing out of this messy middle of roll ups, which all launch but don't really have a purpose for existing. And one of the things I found myself thinking during this episode was I sort of feel like everyone has slept on what blast did.
01:32:26.140 - 01:32:48.850, Speaker A: Okay, I get that it's popular hate on that particular construction. It's a multi sig. No one likes the safety or security properties of that chain, but they did offer yield, and this is not my observation. I got to give credit where it's due. It's just John Charbono's. And we talked about it on the episode with modular money with what Aiden is doing with STT. But here's like a pretty logical series of events that you could follow.
01:32:48.850 - 01:34:00.390, Speaker A: So if we are accepting the idea that most people are going to have non canonical ETH bridged ETH right up into roll ups, where you actually do things with that ETH, then if we're bridging it anyway, you might as well take the wrapped version of it that produces some amount of yield, instead of a wrapped version which doesn't produce yield. And everyone kind of understands that there are these security trade offs. So anyway, to try to make some falsifiable, here's where my mind wound up after this discussion is that Ethereum should and is probably going to get much more opinionated about the bridges or like versions of itself that it exports. And it probably should try to find out a good way to keep some of the logic, like the business logic or properties of the ETH that it's exporting, it should optimize that for yield, and it's probably going to be many fewer roll ups than we ultimately thought. And the way that this gets solved, everything that we're discussing is just like not some gigabrain moon math optimization routing shit. It's just going to be within two sort of trust zones. Like the optimism arbitrarium trust zone.
01:34:01.310 - 01:34:52.490, Speaker B: Maybe it's like two roll up ecosystems, or three roll up ecosystems. I do think there's an ability for there to be like, many roll ups within those ecosystems for just like your diagram. It's almost like I want to label that as like, Solana is the bottom one for the people listening without video, right? So like, Solana is your monolithic blockchain that ends up in the same place. The many roll ups with cross chain mev is actually cosmos. That's like what's happening today. And then the kind of like one roll up dominates. The correction here is like one roll up, or a handful of roll up ecosystems dominate, and then you've got arbitram, orbit, optimism, super chain, maybe polygon, SDK.
01:34:52.490 - 01:36:12.386, Speaker B: That makes sense. And then, yeah, Mike, I do think that ethereum in the end state needs to be relatively opinionated about how ETH is exported from the Ethereum mainnet chain, because otherwise you have potentially shitty user experiences. It reminds me a little bit, going back to your USD analogy, where if ETH is the Federal Reserve, you want to have Morgan, which could be like the optimism super chain, and you want to have bank of America, which is the arbitrary orbit super chain, but you don't want Silicon Valley bank as one of the places where you're exporting eat, that doesn't really do anyone any good. And the thought I had also on the podcast was like, the advantage that the US dollar system has is they do have regulators and rulemakers that can kind of set standards for what it means to be a bank and to use USD, whereas Ethereum doesn't really have that. Someone can come along and come out with a new way of exporting ETH off of Ethereum mainnet. And that's kind of cool, permissionless innovation. That's great.
01:36:12.386 - 01:36:21.560, Speaker B: But it's also kind of scary because ETH could get exported in ways that are damaging or scary too. Yeah.
01:36:23.690 - 01:37:17.746, Speaker A: Another analogy that we could use here is almost like luxury brands that maybe use other channels to sell, but they would have very specific examples of like, you can't discount this much, right? Or when you display it in your store, you have to display it in this particular way. It's because they might not have direct access because they're using a different sales or distribution channel, but they ultimately want control over the product and the relationship with the end user. Because if you could buy Rolexes and gas stations at 80% off, you're ruining the value of the brand. Right. That's what Rolex has built up, is trust and premium brand. And so, yeah, I really view it like that, I think. And look, let me just also caveat here, because there are a lot of people, this is an orthogonal view to how many people think about it in ETH.
01:37:17.746 - 01:37:47.620, Speaker A: But I do feel like there is a push pull in between some people wanting people to hold ETH the asset, whereas I would sort of be in the camp that that battle is already lost as soon as we adopted the roll up centric roadmap. And really what we should be doing is making the wrap version as good and as solid as the underlying. I feel like that's the strategy. Yeah, I don't know if that makes sense. And I realize that's not a similar view to what a lot of other people have. So I could be wrong on this. So, big caveat there.
01:37:49.030 - 01:38:39.262, Speaker B: I like it. But I guess let's go back to chain abstraction here too, because going back to the episode, the other thing that I think is just really was mind expanding for me is thinking about really who ends up owning the user here too. Yeah. And so you mapped out, right, kind of three versions, or at least what I kind of heard was there's three versions of this. There's like, you have a home chain, a protocol that ends up being the home chain. That is where users go to, to then interact with crypto generally. And in a sense, Elia is trying to position near as that where your near wallet can have keys to all the other chains.
01:38:39.262 - 01:40:06.446, Speaker B: And so it can be your home that you utilize to do everything you want to be. And then there's this other version of it being actually driven by the wallet, which Sam was sort of saying fits a little bit closer to what they're doing at skip and IBC, where the wallet is an off chain, out of protocol abstraction layer that controls, gives a view into all the users assets everywhere, and is maybe the source of intents. And then you brought up the third idea where a runaway application that just onboards users like wildfire, ends up being the thing that actually becomes the default home for how users interact. And we're really talking about this in the scale of like, there's a billion people onboarded into crypto. What's their actual entry point here? And this I find very fascinating. And I think you mapped out your bias is more like the runaway application is where this happens. And I kind of think I agree intuitively, there's going to be some runaway application with some use case we haven't yet imagined, that is onboarding hundreds of millions of users, and it becomes the default entry point, almost like a WeChat like, super app type thing.
01:40:06.446 - 01:40:10.110, Speaker B: It becomes the default entry point for how people touch crypto.
01:40:10.850 - 01:40:52.750, Speaker A: Hart, let me ask you a hypothetical question, a little thought experiment for you, all right? Farcaster, right, demonstrates this new model about how web3 social can look. And ultimately, we should have these social platforms that are built on top of blockchains. Twitter. Elon Musk, because he's the main character at this point, says, you know what, I hear you. And I'm on board with this vision. And Twitter is moving to, we're going to eventually integrate a public blockchain here. Who is more important, Solana, ethereum or Twitter in that relationship? Who ultimately has the leverage?
01:40:53.330 - 01:40:54.798, Speaker B: I mean, Twitter does.
01:40:54.964 - 01:41:38.700, Speaker A: Twitter. Sam said this, it's like, we're so early, I would be in the camp that the wallet, we've had so long for wallets that to play out with wallets. And I just don't think it's going to be the case. I think it's an aberration of the fact that we have basically no apps with product market fit yet. But I think as soon as we get one or two apps with real product market fit, then it's going to be obvious that they have the leverage and they're going to basically try to build in these. Yeah, they're going to try to be the home base for Arp three. But I do think there's a case that the l ones are never fully abstracted away.
01:41:38.700 - 01:42:05.154, Speaker A: And the reason why I say that is because there's a community aspect to this. There's a community aspect to this. That's like, that is a thing in web3, which is like, it is only getting stronger. Actually, it's not getting weaker. It corresponds to these macro trends of millennials feeling lonely, like wanting Internet online communities. Come on, how many people do you and I know that's like I'm an Ethereum or a bitcoin or a salon in. Right.
01:42:05.154 - 01:42:50.942, Speaker A: You want that? That's actually a feature, not a bug. And I only see it getting stronger, not weaker. And if it were me, if I was unilaterally in control of an l one, which is impossible, obviously, but the playbook that I would be running is what I described to you in terms of exporting my currency, I would do that. But then I would try to keep a community and set of values and touch points with my users. And I would do that through basically, like, events and media stuff. Like. Like, I would do these know, eth global type events, and I would keep people feeling like there's an Ethereum community or Solana community or Cosmos community, because I think it's actually pretty powerful.
01:42:50.942 - 01:43:04.280, Speaker A: And so anyway, there's my end rant. I will just come out and say, I've got an opinion, and say, I think apps are going to run away with it, but I don't think it'll ever be like, I don't know anything about Ethereum. I just don't think that ever fully gets abstracted away.
01:43:04.810 - 01:43:52.150, Speaker B: You can do both. And it's probably a good, like, in the same way we talked about it in our kickoff episode, I'm really thankful that we have Cosmos and Ethereum and Solana, and they're all learning from each other. Right? So let's add a fourth player. Let's call, like, if Elon's listening, everybody said this, and he absolutely should build blockchain into Twitter, right? But if Twitter became the fourth ecosystem that onboarded 200 million people into crypto overnight and gave them wallet and gave them things to interact with, and then became a platform to do all this other crypto like stuff, well, that doesn't kill the other ecosystems. They still work. It's not like you can only have one entry point into crypto. You could have two or three or four.
01:43:52.150 - 01:44:41.334, Speaker B: And I don't think it's crazy to think that many users would have. Many, many people would have at least two entry points into this crypto ecosystem. And then the advantage here is if you did have an app, like a runaway app, and by the way, it doesn't have to be Twitter, it could be something totally new. It could be like the next TikTok that comes on the scene, that people hasn't been created yet. But if you did have that runaway app, I think it would actually teach the other ecosystems where value lies in crypto. Like, what are the things they should be doing to get 200 million users or whatever? And you could probably have a very different flavor for it, too. I kind of just get the sense that that's how you get a billion people into web3.
01:44:41.334 - 01:44:59.450, Speaker B: You have somebody do something in a specific context, but it's specific. And then we have these other l ones. They don't go away. They maybe become more og, they become more of a community. They have a different flavor, but they actually learn from the runaway app about what they should be doing to attract tons of users.
01:44:59.790 - 01:45:33.110, Speaker A: Yeah. I also think, in general, I feel like people almost, like, weirdly aren't bullish enough on crypto, because it's like, oh, it's all going to be on this one thing. If we're really bullish on adoption here, the assumption should be, this is going to be wildly. There's going to be tons of different ecosystems and communities and all of that. That's always been sort of my assumption from the beginning. It's just like, what would it look like if a billion people came onto this ecosystem? It would look really different than it does today. And I think there will be totally different.
01:45:33.110 - 01:46:01.982, Speaker A: I don't even know. Maybe there'll be kind of apps and then ecosystems that sort of roughly have their own camps of apps. I have no idea. It's an interesting thing to think about, and I do think also to maybe point something out, because people have always been like, why do people like, Sam said this really interesting thing. He's like, look, it's almost a luxury to even speculate about this because I just want all this shit to work. It hasn't even worked yet. So I think that's also why sometimes people are like, why are all these talks so technical? The builders are still focused on trying to make it work.
01:46:01.982 - 01:46:10.130, Speaker A: They're not, like, wondering where the value is going to be extracted yet. Right? We're in like, hey, let's just make sure this thing ships. But. Sorry, you're going to say no.
01:46:10.200 - 01:46:48.826, Speaker B: I mean, first of all, it's funny Sam saying that because I think, again, you go to Cosmos, and the UX issues in Cosmos were so unbelievably bad. The skip team, I was actually at this off site with them, and they did this exercise with a bunch of crypto builders and they sent us each. They sent teams of four crypto founders. They're like five teams of four crypto founders that they sent 100 USD to. And they're like, okay, you team, you go try to buy an NFT on stars and you go try to stake on stride or whatever. And literally, we couldn't figure out how to do it. It was so bad, right? And this is what Skip is trying to solve.
01:46:49.018 - 01:46:59.346, Speaker A: So glad you had this experience. I had to phone a friend to buy my bad kid. I couldn't figure out how to do it. I was like, I know. And they're doing God's work. Skip is doing God's work.
01:46:59.448 - 01:47:40.960, Speaker B: They're doing God's work. Right? So to Sam, to his credit, hopefully, Sam is going to listen to this and be like, yeah, I feel seen, right? But to his credit, it's like figuring out how to have all these app roll ups talk to each other is really hard. But I guess the point I'm going to make is, since the episode was on chain abstraction, and we keep thinking about abstracting all chains away from the user, maybe we're actually jumping ahead a step. Maybe it's actually supposed to be chain abstraction within each of these ecosystems, within each of these trust zones. So, like, within ethereum, things just work. I can spend my eth however I want and it all makes sense. Within cosmos, it just works.
01:47:40.960 - 01:48:27.280, Speaker B: Solana, you got yourself already figured out. The monolithic thing works so great, right? And maybe we shouldn't be worried too much about connecting these ecosystems super seamlessly. Yet, and again, to draw the analogy back to finance, it's like, okay, Us dollar systems are connected, euro systems are connected. But if you want to move between USD and euro, from a normal user perspective, it's a total pain in the ass. It's like, not an easy thing to do. And maybe that's kind of what we should be thinking about for now, is abstracting away within these specific trust zones and not connecting them all from day.
01:48:27.890 - 01:48:45.202, Speaker A: Yeah, Hart, I really like that. Yeah. I think we should even dive further into that this season. I think that's a really good way of thinking about it because I would actually say it looks like it works for Solana now, but they've got a lot of work to do on their fee. Market is totally broken. They've got to upgrade their schedule. There's work.
01:48:45.202 - 01:49:05.594, Speaker A: Every single one of these ecosystems needs a little bit of work. And one thing that I would just. I know we've already gone on for a little while here, but the last thing that we didn't really get to. Let me read this. Ilya sent this over for us to read before this episode. He talks about. We'll link it in the show notes why chain abstraction is the next frontier for web3.
01:49:05.594 - 01:49:51.558, Speaker A: He talks a little bit more in depth about the parts of the stack that maybe we didn't get to cover during this episode. But what he describes is this idea of ZK proofs. Instead of having to trust this network of validators, you can literally have one server do this very complicated thing that requires a lot of compute, generate a proof, and then submit it to this chain. And he said, zk proofs. In the near ecosystem, they allow for a cross chain settlement within Nier. And there's this line that sort of stood out to me, which is the new paradigm introduces the idea of cross settlement as more chains become fully ZK provable. If some proof is published on other chains, there's no way to revert this chain without also needing to revert other chains.
01:49:51.558 - 01:50:37.910, Speaker A: Transactions from one chain can also settle on multiple others via ZK proofs. This provides mesh security as all proofs continuously get aggregated, allowing the safe movement of assets between such chains. Now that sounds nice, right? But again, this is where shared security comes into the mix. The downside of that is each of those chains are now sacrificing a critical part of their sovereignty, which is kind of their fork choice rule. So the more integrated you become with another system, the less in control you are of your own destiny, so to speak. And that's why I was kind of asking this question about what really is. At one point in my crypto journey, I had a very clear definition of, like, this is an app chain.
01:50:37.910 - 01:51:12.660, Speaker A: These are the pros and cons. But now it's like, well, app chains need shared security. And then once shared security, or like, some sort of mesh comes into the mix, you can't really just fork whenever you want. And actually you have to coordinate your updates with all these other groups of chains. And then I kind of just get to like, well, then, does this really need to be its own chain, or can it just be a bunch of smart contracts on the same layer? And I think that's why I keep saying this thing like, what really is the difference in between these things? Because the more I play this out, the less I see that. Do you see what I'm saying?
01:51:13.030 - 01:51:35.210, Speaker B: Yeah, I do. But I think there's nuance here too. The ZK proof or whatever. Just as an example, if I have one chain and I get a ZK proof from another chain, just saying, here's the state of this other chain. My existing chain is still sovereign. Cool, great. I got a proof that this is true, but that's useful.
01:51:35.210 - 01:52:00.718, Speaker B: Where I think it gets complicated is if I had conditional logic. So if I had something on my chain that said, okay, here's the state, and I'm telling you it's dependent on the state of this other chain. And then later on, I get the CK proof of the state of the other chain. It actually says something different, and then I have to roll back my chain. Well, now I'm locked. Now I'm connected. But this is where it's nuanced.
01:52:00.718 - 01:52:41.982, Speaker B: Being able to prove the state of the other chain on your chain, that's great. That doesn't hurt me. I just get, like, this is just truth, right? But if my chain is dependent on that truth, and if I said something in the past, I was wrong, and now I have to redo my own state. Roll it back. Now that's a mess. Right? But I think, again, this is where I'm focused on this settlement of cross chain intent type stuff. If you kind of abstract that part away where chains might be like, they're escrowing funds, I'll just keep it simple.
01:52:41.982 - 01:52:52.180, Speaker B: You escrow funds, and they don't get released until you get the proof. Well, now, you do have your independence of your chain, but you're connecting them in a secure way.
01:52:52.950 - 01:52:53.746, Speaker A: Yeah.
01:52:53.928 - 01:53:35.570, Speaker B: So the architecture and the design stuff here really does matter. And I do think the ZK tool is like a superpower to let you know the state of other chains in a provable way, in a way that doesn't require a lot of work. This was like the Chris goes episode, too. That was also like a light bulb moment for me, where I'm like, okay, wait. My virtual machine can now know some really complicated consensus mechanism over there, but it takes me, like, linear time proof because of this ZK proof to prove it. And so shit just gets. It is a superpower.
01:53:35.570 - 01:53:51.862, Speaker B: But yeah, man, I think the nuances of this, of how chains have their own sovereignty and yet can know the state of other chains to do useful things, that's exactly what we're trying to figure out.
01:53:51.996 - 01:54:06.966, Speaker A: I agree. I think all roads heart are leading towards ZK proof. So we're going to have to come up with a specific episode for you all here. So thanks for listening. This was a long one. I know guys. So if you made it to the end, we appreciate you and we'll see you same time next week.
01:54:07.148 - 01:54:08.100, Speaker B: Yeah. Thanks everyone.
