00:00:00.400 - 00:00:57.944, Speaker A: Like any other programming language, Rust has its share of criticism. People say that the learning curve is too big, that the write time speed is too slow, that the compile times are too slow, the ecosystem is immature, and there arent jobs available. With these criticisms in mind, one asks the question, is Rust on the decline? Is Rust always going to be a small niche language, or is it destined for something bigger? To answer that question, we're going to look at a few different factors. Starting off with developer experience. Looking at the Stack overflow 2021 developer survey for the 6th year in a row, Rust comes in at number one for the most loved programming language. This means that despite the large learning curve, the slow compile times, and the slow write time speed, developers who use Rust want to keep using Rust. And that's because the trade off is worth it.
00:00:57.944 - 00:01:51.106, Speaker A: I already mentioned some downsides, but the upsides you get with Rust is a language that's performant and correct at compile time, a language that has nice functional features, and a language that has a great package manager built in. The Rust team is also working on addressing some pain points, such as compile times. Looking at this chart, you can see that since version 128.0, compile times have been cut in half. Next, I'd like to talk about popularity. Looking at this Google Trends chart, you can see that over the past five years in the United States, interest for the rust programming language has been steadily increasing, with a sharp increase in 2021. Looking at the Rust subreddit, you can also see that it's sitting at 160,000 members, which is just 4000 members behind the go subreddit, and I predict that it will overtake the go subreddit in the coming months.
00:01:51.106 - 00:02:31.000, Speaker A: Besides these metrics, I can't go a day on hacker news without seeing an article about Rust. All this to say that the popularity of rust is steadily increasing. Next, I'd like to talk about adoption. Rust has seen adoption in several areas, the first of which being systems programming. Microsoft, for example, has begun rewriting some of their c and C components in Rust, and Rust is well on its way to becoming the second supported language for the Linux kernel, which is pretty mind blowing. Rust has also seen adoption in the cloud, with AWS building critical cloud infrastructure in Rust. Lastly, Rust has seen adoption in the crypto space.
00:02:31.000 - 00:03:07.614, Speaker A: Blockchain frameworks like substrate have been built with Rust. Blockchains like Solana allow you to write smart contracts in Rust, and new projects like the Lightning development kit are using Rust. The last thing I want to talk about is available Rust jobs. This chart on StackTrends shows the number of Rust job listings over time. If we look at the latest data point from April 2021, we can see 637 listings. If we go back just one year, we can see 213 listings. So even though the number of listings is small, we can see a 300% increase in demand from last year.
00:03:07.614 - 00:03:41.620, Speaker A: If this momentum continues, we'll see a lot more Rust jobs in the next coming years. So is Rust declining? No, quite the opposite. Rust is growing in popularity, growing in adoption, growing in job opportunities, and developers love using Rust. All this to say, Rust has a very bright future, and if you're interested in learning rust, well, then you've come to the right channel. If you enjoyed this video, tap that like button for me. And if you want to see weekly rust content, then subscribe to the channel. Finally, get your free rust cheat sheet by heading over to let's get rusty.com
00:03:41.620 - 00:03:46.480, Speaker A: cheatsheet. And with that, I'll see you in the next one.
