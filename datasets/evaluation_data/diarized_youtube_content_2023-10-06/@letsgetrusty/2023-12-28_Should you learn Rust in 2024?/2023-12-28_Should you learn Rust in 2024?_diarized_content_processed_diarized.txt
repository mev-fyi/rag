00:00:00.720 - 00:00:54.928, Speaker A: Should you learn Rust in 2024? I'm going to give you my completely unbiased answer, but first we need to understand the current state of Rust and what the near term future looks like for Rust developers. Starting off with the language and ecosystem. In 2023, multiple features were introduced to tackle one of Rust's biggest problems, long compile times, including an experimental parallel execution feature that's been shown to reduce the compilation times of popular Rust crates by an average of 30%. But the most exciting and most impactful feature was released at the end of the year in Rust version 1.75.0. That's right, I'm talking about async functions in traits. This means your traits can now have async functions defined inside of them without using a third party crate. Additionally, functions and traits now support the impul trait syntax for return values, allowing you to return some type that implements a specific trait.
00:00:54.928 - 00:01:24.564, Speaker A: But I'm even more excited about the features coming in 2024. Every three years, Rust releases a new addition, which includes major braking changes in a backwards compatible way. In 2024, we're getting a new rust edition, which means major updates. One change I'm extremely excited about is Polonius. Polonius is the codename for the next generation of rust, borrow checker. A borrow checker that's smarter, more capable, and more intuitive. This means you can spend more time writing rust code and less time fighting the borrow checker.
00:01:24.564 - 00:01:30.212, Speaker A: And it's especially great for newcomers who won't have to experience as much pain learning rust as we did.
00:01:30.316 - 00:01:41.440, Speaker B: Get out of my kitchen, mate. Get the out, you little. You. You don't know what I've been through, Zach. You don't know me. Get out of my kitchen.
00:01:41.780 - 00:02:16.896, Speaker A: The rust ecosystem has also seen exciting updates. AWS announced that their Rust SDK is ready for production use, which means we should see more rust usage in cloud applications. Jetbrains launched a new IDE specifically designed for Rust, so you don't have to worry about being made fun of for using versus code or forgetting how to exit. Vim. And axiom, Rust's hottest web framework, got a major release this year, which included API improvements and most notably, an update to the underlying HTTP library hyper. Axiom now supports Hyper 1.0, which means greater stability guarantees.
00:02:16.896 - 00:03:14.148, Speaker A: This makes me very optimistic about the future of axiom and makes me more confident in using axiom for my own personal projects. Now let's talk about community growth and industry adoption. In 2023, the Rust community gained almost a million new Rust developers, according to slash data, and they expect this significant growth rate to continue given the wide range of companies using Rust for its performance and safety guarantees. And of course, for the 8th consecutive year in a row, Rust was voted the most loved most admired language by the Stack overflow developer survey. Large tech companies like Microsoft are continuing to invest in Rust. In fact, in 2023, Rust made it into the Windows eleven kernel, which means Rust code will soon be shipping to over a billion PCs worldwide. Mark Rosanovich, the CTO of Azure, also confirmed that Rust is being used for new projects at Azure, which require a non garbage collected language, and they're looking at converting existing c projects to Rust.
00:03:14.148 - 00:03:52.724, Speaker A: And lastly, Microsoft has committed to making Rust a first class language for its developers. Rust is also being used in innovative new industries like AI, crypto, and Fintech. Grok is a new AI chatbot created by Xai to compete with Google and OpenAI. The team behind Grok used Rust to build the infrastructure to train the underlying model. Rust is also used for various components at hugging face, a collaboration platform for AI. Rust is also growing in the open source space. Chromium, an open source project which serves as the foundation for major web browsers like Chrome, has enabled third party libraries written in Rust.
00:03:52.724 - 00:04:44.900, Speaker A: Originally, they considered adding Rust to the core codebase, but decided to hold off for now. Android is continuing to adopt Rust, recommending that Rust be used anywhere C or c is considered, and Rust is continuing to mature and gain support within the Linux kernel. The usage of Rust within the Linux kernel is very promising, and I'm very optimistic about its future. In fact, here's a picture of Mark Rosonovich, the CTO of Azure with Linus Torvalds. So, given this community growth, industry adoption and use in open source software, what can we expect in 2024? Well, I think it's very likely that Rust continues to grow and gain market share in the systems programming space, especially for safety critical systems. I think Rust is also going to play a bigger and bigger role in new, innovative technologies like AI and web3. All in all, it's an extremely exciting time to get into Rust.
00:04:44.900 - 00:05:30.466, Speaker A: Now, before we talk about job opportunities, let's quickly cover language alternatives to Rust. You know, like C or C Zig or yes, even go. Rust is a systems programming language that's safe and performant. C and C are performant, but they are not safe. I mean, sure, you can say that, you know, C has some safe patterns and you can always use static analysis, but these best practices or tools have been proven not to work in practice. So that's con number one c and C are not safe. Now, of course, a lot of software has already been built in C and C, so you might need knowledge of those languages to work with certain technologies or because your workplace requires it.
00:05:30.466 - 00:06:06.006, Speaker A: But if your goal is to learn the language of the future, I would highly recommend Rust. Learning C and C in 2024 is like picking a gas powered car over an electric vehicle. Sure, it may make sense for now, but it will slowly get phased out by the superior technology. Lastly, Rust can interop with C and C, so even if you have an existing C or C codebase, you can build new components in rust. Next, let's talk about Zig. With C and C as established languages and rust as a new language that's memory safe. I don't really see a compelling use case for Zig, but if you have one, leave a comment down below.
00:06:06.006 - 00:06:30.498, Speaker A: Lastly, let's talk about Go. Compared to Rust, Go is a lot easier to learn and use. It's a lot simpler and has a great developer experience around concurrency. The downside is it's not as performant or not as safe as rust. If you want to build your backend or back end services in Go, go ahead. For quickly spinning up back end services, go is a great choice. But if you need performance and safety, then I would go with Rust.
00:06:30.498 - 00:07:16.636, Speaker A: Next, let's talk about job opportunities. First, let's talk about the negatives. First, we have to consider the macro job market for developers, which has not been great in 2023 with tech companies freezing hiring and conducting layoffs. So in general, jobs are harder to come by. And when we look at Rust specifically, a lot of companies that are hiring rust developers are looking for experienced developers, five to ten years of professional development experience and experience developing rust applications, whether it's at work or side projects. The good news is, as major tech companies continue to adopt Rust, more and more job positions will become available. Rust is also making its way into new industries like electric cars and other safety critical software, so we can expect job opportunities to open up in those areas.
00:07:16.636 - 00:08:20.022, Speaker A: In fact, I've talked to a few tech recruiters who say car companies are hiring rust developers. Rust is also heavily used in the crypto and web3 space, so if we see a crypto bull run in 2024, you can expect a lot more rust positions in the web3 crypto space. With all that said, let's answer the question, should you learn Rust in 2024? If you're working on web, desktop, or mobile applications that are not performance or safety critical, then I think you can hold off on learning Rust. However, if you're interested in building back end services that are performant, or you want to do low level programming, or you work with c or c, or you want to build CLI apps, or you want to build embedded software or software that is safety critical, or you're in the blockchain, crypto and web3 space, then I think learning rust in 2024 is a great decision. Lastly, if you simply want to become a better developer or try something new, then I think you should give rust a shot. Before you go, make sure to get your free rust cheat sheet at let's get rusty.com cheatsheet.
00:08:20.022 - 00:08:22.550, Speaker A: Hope you've enjoyed the video and remember to stay rusty.
