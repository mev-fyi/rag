00:00:00.520 - 00:00:41.622, Speaker A: What's up rustations? In today's video we're continuing our series on idiomatic rust by talking about iterating over the option type. But before we get to the video, if you haven't already, make sure to get your free rust cheat sheet by heading over to let's get rusty.com forward slash cheatsheet. With that said, let's get rusty. In this example, we have two variables. Grade, which is an optional containing a string, specifically the sum variant containing a letter grade, and then grades, which is a vector of letter grades. Let's say we wanted to append grade to the grades.
00:00:41.622 - 00:01:18.498, Speaker A: Vector grade is an optional, so first we have to make sure that it's the sum variant. We could do that with an if let statement. Here we're checking if grade is the sum variant and if so pushing it onto the grades vector. There is however, a simpler way to do this. We can accomplish the same thing with one line of code. Extend is a method that extends a collection with the contents of an iterator. The reason why passing in an optional works here is because the option type implements into iterator.
00:01:18.498 - 00:01:56.080, Speaker A: You can think about an option as an iterator containing either zero or one element. In this case, if grade is the none variant, nothing happens. However, if grade is the sum variant, then the things stored inside sum will be appended to the vector. Lets print out grades to check if we get the correct values. As expected, a was appended to the vector. Because the option enum implements into iterator, it can be used where an iterator is expected. Let's take a look at a few examples.
00:01:56.080 - 00:02:41.160, Speaker A: We just learned how to extend a collection. Next, let's take a look at how to extend an iterator. In this example we're calling grades iter which will create an iterator over the grades vector, and then chain, which is a method that will chain two iterators together. We pass in grade iter which will turn our optional into an iterator. Lets run our program again, but first we need to reset grades. As expected, all the letter grades were printed out, including a. Lets look at two more examples.
00:02:41.160 - 00:03:31.140, Speaker A: First we have a vector of optionals containing either the sum variant with a letter grade or the none variant. Our goal is to create a vector with the letter grades filtering out all the nonvariants. We could do this using iterators. First we call into iter which will give us an iterator, and then flatten which will create a new iterator that flattens nested structure. In this case flatten will extract out the items stored inside the sum variant and throw away the nonvariance. Finally, we call collect to transform the iterator back into a collection, in this case a vector of string slices. Lets run our program.
00:03:31.140 - 00:04:51.550, Speaker A: As expected, the result is a vector with two strings, a plus and b. In this example we have an array of grades, either numerical grades or letter grades. Our goal is to parse these strings into a vector of floating point numbers, filtering out all the letter grades again, we could accomplish this using iterators. First we call iter to get an iterator and then filter map which will create an iterator that both filters and maps. Filter map accepts a closure where each argument is an item in the iteration first we call parse on each string slice to parse it into a floating point number. Parse returns a result type so we call the ok method to turn the result type into an optional filter map will automatically unwrap the sum variants and filter out the none variance. After that we simply call collect to transform our iterator back into a collection, in this case a vector of floating point numbers.
00:04:51.550 - 00:05:16.610, Speaker A: Lets run our program as expected, we get a vector containing only the numerical grades. Thats it for this video. Let me know if you enjoyed it by leaving a comment and hitting the like button. Lastly, and most importantly, get your free rust cheat sheet by heading over to letsgetrusty.com cheatsheet. With that said, I'll see you in the next one.
