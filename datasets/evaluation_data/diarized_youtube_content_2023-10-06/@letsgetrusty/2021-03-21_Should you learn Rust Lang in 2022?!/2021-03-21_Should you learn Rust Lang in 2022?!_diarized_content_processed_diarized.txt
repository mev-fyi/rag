00:00:00.360 - 00:00:41.695, Speaker A: Welcome back to let's Get Rusty. My name is bogdan and this YouTube channel is all about the Rust programming language. If that sounds interesting to you, make sure to click that subscribe button for Weekly Rust Videos. Now there are a few questions one must ask themselves in life. What is my calling in life? Is the person that I'm dating the right marriage partner for me? And most importantly, should I learn Rust? In this video, I'm going to give you my completely unbiased opinion on why you should in fact, learn Rust. Now, of course, I don't know your personal situation, so I'll share the three reasons why I decided to learn Rust. Reason number one is job opportunities.
00:00:41.695 - 00:01:25.643, Speaker A: Okay, maybe there aren't a ton of job opportunities right now, but I'm confident that there will be in the near future. And that's because there's a lot of momentum around Rust. Rust has been voted the most loved programming language by the Stack Overflow Developer Survey for five years in a row. Now, this is a little misleading because only 5% of developers who took that survey actually use Rust. But out of those developers, the vast majority want to keep continuing to program in Rust. Rust also has a thriving community. As of this video, There are almost 60,000 software projects hosted on Crates IO, which is Rust's public package registry.
00:01:25.643 - 00:02:15.241, Speaker A: There are over 130,000 members in the rustling subreddit, and Rust has a very active Discord server. Most importantly, the members in these communities are friendly, knowledgeable and helpful, especially to beginners. Speaking of Discord, Rust has been gaining industry adoption as well. Discord specifically has been a big proponent of Rust, using it across their front end and backend code bases. In fact, Discord recently wrote a blog post saying that they're switching from using Go to Rust. One of the main reasons for this is because they experience performance issues caused by the Go garbage collector. Switching to Rust allowed them to have full control over their memory, which greatly improved performance.
00:02:15.241 - 00:03:15.325, Speaker A: Many other big tech companies are adopting Rust as well. Facebook, aws, Google, and Microsoft, to name a few. Microsoft specifically found that over the past 12 years, 70% of their vulnerabilities were related to memory safety issues. Using Rust would have greatly decreased these vulnerabilities because Rust has memory safety guarantees at compile time. Rust started as a small project at Mozilla, but because of its growth, the language is now stewarded by an independent nonprofit organization called the Rust Foundation. The Rust foundation is sponsored by big companies such as Google, AWS and Microsoft, which should give you confidence that the language is here to Stay the second reason for learning Rust is that Rust is a systems programming language with modern conveniences. Rust allows you to write low level code that's as fast as C and C is memory safe at compile time, and Rust provides tools that increase developer productivity.
00:03:15.325 - 00:04:05.059, Speaker A: Nice. Memory safety at compile time is important. Imagine spending hours and hours writing some C code, deploying it on a Friday, only to get a call at 2am on a Saturday because your code has a memory leak which is causing issues in production. Speaking of frustrating runtime issues, another one that comes to mind is the infamous null pointer exception, sometimes referred to as the billion dollar mistake. Null references have historically been a source of bugs, and if you've been programming for any length of time, you know exactly what I mean. Fortunately, in Rust you cannot have a null reference. Instead, Rust has optional values that force the developer to handle the case when there is no value.
00:04:05.059 - 00:04:53.867, Speaker A: Rust also has some neat functional features such as powerful enums, iterators and closures. Lastly, besides the language itself, Rust makes it very easy to share code because it comes with a build tool and package manager called cargo. Packages called Crates and Rust could be uploaded to Crates IO, making sharing code and consuming code easy. The third and final reason to learn Rust is intellectual curiosity. Being a software developer, continuous learning is something that comes with the job. Personally, I first learned about Rust because I was interested in webassembly and Rust has first class support for webassembly. Coming from a web development background, Rust has taught me a lot about lower level programming, things like memory management on the stack and the heap and just how complicated strings actually are.
00:04:53.867 - 00:05:26.305, Speaker A: Now of course there are these low level concepts that a lot of programming languages have, but Rust adds onto it with the way it manages memory using a borrow checker. Luckily, I found that the Rust documentation is very, very good, especially the Rustling book. And there are other resources like this YouTube channel that can help you in your journey learning Rust. That's it for this video. If you liked it, make sure to smash that like button. And if you want to see weekly educational Rust videos, sometimes with some sarcasm and memes, make sure to subscribe. And with that, I'll see you in the next one.
