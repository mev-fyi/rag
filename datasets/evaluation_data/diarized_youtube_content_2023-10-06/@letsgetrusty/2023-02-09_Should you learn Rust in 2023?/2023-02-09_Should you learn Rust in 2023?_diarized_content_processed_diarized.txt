00:00:00.840 - 00:00:37.023, Speaker A: Should you Learn Rust in 2023? We'll get to my completely unbiased answer by the end of this video, but first we must understand the current state of Rust. Specifically, we need to cover a few areas the language and ecosystem, community growth, industry adoption, and job growth. Each of these topics is important, so make sure to stick around till the end of the video. Lastly, before we get started, if you haven't already, make sure to get your free Rust cheat sheet by heading over to LetsGetRusty.com Cheat Sheet. With that, let's jump into the video. First, let's talk about the language and ecosystem.
00:00:37.023 - 00:01:07.603, Speaker A: In 2022, we saw a lot of great features get added to the language. For example, in version 1.59.0 we got a new macro that allows us to write inline assembly when we need that extra level of control. In version 1.64.0, the into future trait was stabilized, which can make your async APIs a lot more user friendly. Because now, instead of awaiting futures, we can also await anything that could be turned into a future. And in version 1.65.0
00:01:07.603 - 00:01:55.789, Speaker A: we got generic associated types which enable a number of new patterns. Rust has a six week release cycle, which means every six weeks a new version of Rust comes out which incrementally improves the language. And despite all the great improvements we've gotten so far, there's still a lot of work to do. Personally, there are a few features I'm excited about coming in the near future, namely async functions in traits and the new declarative macro system. The Rust ecosystem is constantly growing and improving as well. Crates IO, which is Rust's public package registry, has recently surpassed 100,000 crates and 26 billion downloads. As you can see, there's a lot of developer activity and we have the Rust foundation, which is a nonprofit whose goal is to nurture the Rust ecosystem.
00:01:55.789 - 00:02:36.669, Speaker A: All of this is great news for the future of Rust. The one downside is that relative to other popular languages, third party Rust libraries are not as mature at the moment. For example, I'm personally interested in backend development with Rust. However, the battle for a dominant server framework is still ongoing and the AWS Rust SDK is still in Developer Preview. So overall, given the current progress, this is great news for people looking to get into Rust. Next, let's talk about community growth. If we look at this line chart of total subscribers to the Rust subreddit, we can see that around 2019 momentum picks up and the trend continues till the present day.
00:02:36.669 - 00:03:26.965, Speaker A: In fact, the Rust subreddit currently has 20,000 more subscribers than the Go subreddit and the Rust community. Discord Server is currently sitting at over 50,000 users. Last but not least, Rust has been voted the most loved programming language by the Stack Overflow developer survey for seven years in a row. And in 2022 it was also voted the most wanted programming language. Now all of this sounds great, but what do these numbers actually mean? In 2022, an analyst firm called Slash Data published a report called the State of the Developer Nation. This report highlighted that Rust is the fastest growing language community, increasing from 600,000 developers in Q1 of 2020 to 2.2 million developers in Q1 of 2022.
00:03:26.965 - 00:04:15.207, Speaker A: As you can see, the Rust community is growing at a rapid pace and I don't see a slowing down anytime soon. This is great news for new Rustations, especially because as a side effect of the community growing, learning resources are becoming a lot more abundant and higher quality. Next, let's talk about industry adoption. Rust is being adopted by companies big and small. If we look at the members of the Rust foundation, we can see big companies like aws, Google Meta and Microsoft, as well as smaller to medium sized companies like Password1, Sentry and Tab9. If you're curious, there's also a GitHub repository called Rust Companies which gives you a list of companies using Rust in production. Rust is being adopted by open source technologies as well.
00:04:15.207 - 00:05:15.481, Speaker A: Examples include Surreal db, which is a next generation serverless database written in Rust Deno, which is a JavaScript server side runtime and the successor to Node JS. And last but certainly not least, let's not forget that Rust was introduced as an experimental language for the Linux kernel. Rust has also made waves in the Web3 space with popular blockchains such as Solana near and Ethereum. So we talked about the private companies and open source technologies adopting Rust, but I'd like to also mention some endorsements from industry leaders. Ryan Dahl, the creator of Node JS and its successor Deno, which is written in Rust, said in an interview, I will never start another C project. Rust really solves the C problem. The CEO of Azure, Mark Russunovich, tweeted out, speaking of languages, it's time to hold starting new projects in C or C and use Rust for those scenarios where a non garbage collected language is required.
00:05:15.481 - 00:06:05.455, Speaker A: With all that, I think it's safe to say that Rust adoption will continue and Rust will become more and more common. This is great news because as more code gets written in Rust, the demand for Rust developers will increase Next, let's talk about job growth. Looking at stack trends, we can see a steady increase in rust jobs from 2020 to 2021. Unfortunately, this is the only data available. However, looking at various Rust job boards, I personally don't see a big increase of jobs from 2021 to 2022. So even though the Rust community is growing extremely quickly and we're seeing adoption in the private sector as well as open source technology, the job growth has been pretty slow. This is by far the weakest area for Rust, but we should see improvement in the near future as more and more code gets written in Rust.
00:06:05.455 - 00:07:05.381, Speaker A: So considering the language and ecosystem, community growth, industry adoption and job growth, let's get back to our original question. Should you Learn Rust in 2023? If you want to use Rust for side projects, introduce Rust at your current job skill up in a new language to be a more attractive candidate when searching for a job, go into a new industry like Web3 or get a deeper understanding of low level programming, then the answer is yes. However, if you don't have any prior programming experience or your main goal is to get a job as soon as possible, then in my opinion, the answer is no. Either way, Rust is here to stay for a long time. It's a language built for the next 40 years and has a bright future ahead. So if you're looking for high quality Rust content, make sure to subscribe to the channel. And last but not least, if you haven't already, make sure to get your free Rust cheat sheet at let's getrusty.
00:07:05.381 - 00:07:11.045, Speaker A: Com cheatsheet. With that said, I'll see you all in the next one.
