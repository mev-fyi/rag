00:00:00.240 - 00:01:05.778, Speaker A: There are plenty of things in life that are hard, running a marathon, starting a business, looking at go code without violently cringing, and Rust is no exception. But here's the real question. Is Rust too hard to learn? Well, in this video, I'm going to be answering that question, so make sure to stick around till the end. First, let's take a look at what makes Rust a hard programming language to learn. Rust is, of course, known for its novel way of managing memory, using a system of ownership and borrowing, which is checked at compile time. Rust also has an explicit module system, which is different from other languages, where the module system is mapped to the file system, and Rust uses the concept of traits instead of classes that inherit from each other, like in traditional object oriented programming. Besides these novel concepts, Rust also exposes you to low level complexities, things like pointers, manual memory management, and low level representations of strings.
00:01:05.778 - 00:02:08.230, Speaker A: Lastly, Rust has a minimal standard library which does not include things you might expect, like UTF, eight string parsing logic, and an HTTP implementation. All of this contributes to the ramp up time when learning Rust as compared to higher level programming languages such as Java or C sharp. But the question is, what is the alternative? What are we comparing Rust to? Comparing rust to a higher level programming language doesn't make sense. Rust is a systems programming language, so we should be comparing it to other systems programming languages, such as C. So how hard is it to learn a language like C in comparison to Rust? I actually use C in college for my class projects, and immediately afterwards I decided to become a web developer. After years of web development, I came across Rust, which has the goal of being a systems programming language that's accessible to everyone. So I decided to give systems programming another try, and so far, the experience has been positive.
00:02:08.230 - 00:02:47.360, Speaker A: With C, it's easy to get up and running quickly, whereas with Rust, if you want to write any non trivial program, you'll likely run into the borrow checker. Now, dealing with these compile time errors can be frustrating and slow you down. However, there are benefits. Having a strict compiler will slow you down initially. However, it will save you time debugging your code at runtime later on. Also, in my opinion, Rust explicit module system is easier to understand as compared to C's module system. And lastly, unlike circumental, Rust has a great package manager and build tool that comes with the language.
00:02:47.360 - 00:03:28.234, Speaker A: This makes integrating dependencies into your project a whole lot easier. Don't get me wrong, Rust still has a big learning curve, but there are things that make the learning curve easier. Rust has great documentation. A testament to this is the rustling book, which I've personally found very helpful. Rust also has a great community of developers you can interact with by going to the Rust subreddit or discord server. And lastly, there are more and more rust learning resources popping up each and every day. As an example, this YouTube channel so is rust harder to learn than higher level programming languages? Yes, but we shouldn't be comparing rust to higher level programming languages.
00:03:28.234 - 00:04:10.140, Speaker A: So is rust harder to learn than other systems programming languages such as C? A lot of C developers will say yes, in my opinion. I don't think it's harder to learn, you just pay a greater cost upfront versus paying that cost later down the line. And finally, is Rust too hard to learn for what it's trying to accomplish, which is being a systems programming language? My answer is no. Let me know in the comment section down below what your thoughts are on Rust's learning curve. If you enjoy this video, make sure to give it a like. And if you want to see weekly rust content, make sure to subscribe. Lastly, and most importantly, get your free rust cheat sheet by heading over to let's get rusty.com
00:04:10.140 - 00:04:15.440, Speaker A: cheatsheet. And with that said, I'll see you in the next one.
