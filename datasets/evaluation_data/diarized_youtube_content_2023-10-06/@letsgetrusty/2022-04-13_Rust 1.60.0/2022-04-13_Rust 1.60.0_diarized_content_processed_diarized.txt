00:00:00.280 - 00:00:50.655, Speaker A: What's up, Rustations? Welcome back to let's Get Rusty. It's been six weeks and another version of Rust has been released, version 1.60.0. But before we talk about what's included in this new release, if you haven't already, make sure to get your free Rust cheat sheet by heading over to LetsGetRusty.com cheatsheet with that said, let's get Rusty the first feature in this release is support for LLVM based coverage instrumentation. Using the Instrumentation coverage flag, you can now build binaries that include instrumentation code. This is basically code that increments various counters anytime a function or a region of code is called. You can then use tools like LLVM Cove to generate reports.
00:00:50.655 - 00:01:32.807, Speaker A: One popular use case for this information is to feed it to tools that measure code coverage. For example, in this release, the Cargo timings flag has also been stabilized. The timings flag generates a report that could be useful for improving build performance. Here's a sample report for the release build of Cargo. It includes basic information like the total build time, as well as an interactive chart which lets you see how long dependencies took to build. All right, now let's talk about my favorite part of this release. New syntax for cargo features which allows for namespace dependencies and weak dependency features.
00:01:32.807 - 00:02:11.301, Speaker A: To understand how these work, let's open up a cargo TOML file. Let's imagine we have the following cargo package with two optional dependencies. Cargo will implicitly create two features with the same name as the optional dependencies. Let's say we don't like this default behavior. We'd like to rename these features to something more descriptive. Well, in this release you can using the following syntax. Here we're defining two features AVIF encoding, which enables the RAVIF dependency, and RGB encoding, which enables the RGB dependency.
00:02:11.301 - 00:03:01.111, Speaker A: The new syntax is this dep prefix with which allows us to refer to optional features. If Cargo sees that these dependencies are used in the features table, it will not implicitly create a feature with the same name as the dependency. This allows us to have control over the naming of features, and it also allows us to group optional dependencies into one feature. In this example, we now have one feature which enables two optional dependencies. And again, Cargo sees that these optional dependencies are already in the features table, so it won't create implicit features with the same name as the dependencies. Let's take a look at another example that shows off weak dependency features. In this example we have two optional dependencies, SERDE and rgb.
00:03:01.111 - 00:03:52.001, Speaker A: We also have a feature called Serde which enables the SERDE dependency and the SERDE feature in the RGB dependency. When the SERDE feature is set to true, the SERDE dependency is enabled, the SERDE feature inside the RGB dependency is enabled, and the RGB dependency itself is enabled. Let's say this is not what we want. Instead, we only want to enable the SERDE feature inside RGB if RGB is already enabled by something else. For example, let's introduce a new feature called rgb. The RGB feature will enable the RGB dependency. So if the SERDE feature is set to true, we only want to set SERDE inside the RGB dependency to true if the RGB feature is already enabled.
00:03:52.001 - 00:04:31.967, Speaker A: We can do this by simply adding a question mark after rgb. In general, this is the syntax specifying a question mark after the name of an optional dependency will enable the feature only if the optional dependency is itself enabled. One last thing to note about this release is that incremental compilation has been turned on by default again. That's it for this video. Let me know down in the comment section below what your favorite feature in this release was. Also, make sure to get your free Rust cheat sheet by heading over to LetsGetRusty.com cheat sheet.
00:04:31.967 - 00:04:34.755, Speaker A: With that said, I'll see you in the next one.
