00:00:00.440 - 00:00:43.651, Speaker A: What's up Rustations? In today's video, we're continuing our series on idiomatic rust by going over how to avoid allocations using the take function. But before we get to that, if you haven't already, make sure to get your free rust cheat sheet by heading over to LetsGetRusty.com CheatSheet. With that said, let's get rusty. In this example we have a user enum with three variants, reader, writer, and admin. Each variant contains a name field with the type string. Our goal is to implement the function promote, which takes a mutable reference to user and then promotes that user.
00:00:43.651 - 00:01:25.933, Speaker A: For example, a reader should be promoted to a writer, a writer to an admin, and if an admin is passed in, nothing should be done. Let's go ahead and implement promote. First we bring all the user variants into scope and then we match against user. If the passed in user is a reader, we return a writer. If it's a writer, we return an admin, and if it's an admin, we return early from this function altogether. The returned variant from this match expression will replace the passed in user. One thing you may notice is that we're cloning name.
00:01:25.933 - 00:02:02.705, Speaker A: That's because we get immutable reference to user, so we can't take ownership of name. This results in a new heap allocation. We could, however, avoid this heap allocation by using the take function. First let's import the mem module. Then instead of cloning name, we can call the take function and and pass a name. Take will swap out name for a default value and return the original value. The default value for the string type is an empty string which does not require an allocation.
00:02:02.705 - 00:02:46.211, Speaker A: Also, take returns an own type, in this case an own string, which is why we can send name to the return value. The promote function is now complete and we avoided an extra allocation. Let's use this function in main. First we'll create a new reader and then we'll call promote twice. Let's run our program. As we can see, our function is working. Reader was promoted to writer, and writer to admin.
00:02:46.211 - 00:03:02.635, Speaker A: Alright, that's it for this video. If you enjoyed it, make sure to let me know by leaving a comment and hitting the like button. Lastly, and most importantly, get your free rust cheat sheet by heading over to LetsGetRusty.com CheatSheet with that said, I'll see you in the next one.
