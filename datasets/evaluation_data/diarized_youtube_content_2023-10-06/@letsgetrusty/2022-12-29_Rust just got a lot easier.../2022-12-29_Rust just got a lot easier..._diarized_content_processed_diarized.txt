00:00:00.400 - 00:00:51.944, Speaker A: Whats up Rust stations? It seems like every single youtuber has created a chat GT video by now, so id figured id join the party. But seriously, Chad GPT is a game changer for rust programmers looking to boost their productivity and efficiency. You may have seen other youtubers explain that Chad GPT is a tool for programmers rather than a replacement. As someone who has used Chad GPT myself, I can confirm that its an amazing tool for streamlining your workflow and solving problems more efficiently. In this video, I'll be focusing on the practical application of chat GPT for rust programmers and how it can benefit you in your work. So sit back, grab your favorite beverage and join me as we explore the world of chat GPT and how it can help rust programmers take their skills to the next level. As a side note, Chad GPT can help with a lot more than programming.
00:00:51.944 - 00:01:32.646, Speaker A: In fact, that entire video intro was written by chadgpt. Speaking of things that could help you if you haven't already, make sure to get your free rust cheat sheet by heading over to letsgetrusty.com cheatsheet. With that said, lets jump into the video. The first way Chad GPT can help you as a rust developer is by explaining difficult to understand concepts. For example, I can ask ChadGpt to explain lifetimes in rust. As you can see, not only do we get an explanation, but we also get code snippets which we can copy and play around with.
00:01:32.646 - 00:02:17.354, Speaker A: We can also ask follow up questions. For example, why are generic lifetime annotations necessary? Lastly, Chadgpt can refine its answers. For example, lets say we read through this answer and are still confused. We can simply type Im still confused. Chad GPT will then refine its answer to make it easier for you to understand. Note that in my experience, the explanations chad GPT gives are okay, but they arent great. For example, when asking about complicated and nuanced topics like futures and rust, you wont get a thorough answer.
00:02:17.354 - 00:03:02.600, Speaker A: Having said that, this is still a good way to get an overview of a technical topic. Let's talk about another area where chat GPT is actually a really big help, and that's with helping to figure out how to do simple but easy to forget things in rust. For example, let's say you forgot how to turn an option type into a result type. You can simply type in in rust. How do I turn an option type into a result type? Chat GPT is telling us to use the map or else method which maps an option type into a result type. By mapping the some variant to the ok variant and the nonvariant to the error variant. It even gives us a simple code example.
00:03:02.600 - 00:03:36.828, Speaker A: Now that was a pretty simple and generic question. However, we can get a lot more specific. Let's say we're working on this program. In main, we call getip address and then print out the results. Inside the getip address function, we use the request library to make an HTTP request that should return our IP address in JSON format, and then we transform that JSON into a hashmap of strings. Then we get the IP address by calling the get method on our hashmap with the key origin. This returns an optional that stores a reference to a string type.
00:03:36.828 - 00:04:15.450, Speaker A: To complete this function, we need to take this optional type and transform it into a result type. The problem is, in the error case we have to return a trait object that implements the error trait. Lets ask chad GPT how to do this in a simple way without implementing custom error types. Going back to chad GPT ill type in the following help me finish this function. I need to transform the option type into a result type. I also need to return something that implements the error trait. In the error case, I want to construct an error type with an error message without creating a custom error type, and then I simply paste in the function.
00:04:15.450 - 00:05:03.924, Speaker A: As you can see, chatgpt completed the function for us using the ioerror type and providing an appropriate error message. Let's copy this code and see if it compiles. We'll replace our original function with the one chad GPT generated. Then we can run our program and as we can see, it compiles. Chat GPT can help us implement code, but it could also help us with compile time errors. To see that, let's change the implementation of get IP address. In this implementation, we're using the okor method to transform our option type into a result type.
00:05:03.924 - 00:05:25.986, Speaker A: If IP is the none variant, then we're going to return this error. Unfortunately, our code does not compile. If we look at the error, it's a mismatch types error. In the error case, we're expected to return a box tray object. However, we are returning a boxed concrete error type. In this case. The error message does not give us a hint about how to fix this error.
00:05:25.986 - 00:06:15.878, Speaker A: So let's plug it into chat GPT and see if it can fix it here. I've asked chadgpt how do I fix this broken code and pasted in the broken function. At first it said there doesn't appear to be anything obviously wrong with the code you provided I then said, the compiler is giving me an error, and Chadgpt replied with without knowing the specifics of the error message, it it's difficult to give you guidance. So then I gave chad GPT the exact error. I simply said, this is the compiler error I'm seeing, and pasted in the compiler error from my terminal. With this information, Chad GPT was able to recognize what the error was and gave us a solution, in this case by casting our concrete type to a tray object. If we go back to our broken code and add the cast, you can see that the program now compiles.
00:06:15.878 - 00:06:49.426, Speaker A: Now this is great, but as a caveat, in my experience, chat GPT is able to solve simple compile time errors. However, it cannot solve more complex compile time errors. For example, it's not able to solve complicated lifetime issues. All right, so far we've seen that chad GPT can be a very powerful tool for you as a rust developer. Let's go through a few more things chad GPT can help you with. In this example, I have a user struct, which contains two fields, a username and a user type. The user type could be reader, writer, or admin.
00:06:49.426 - 00:07:31.846, Speaker A: I also created a function called canpublisharticle, which takes a user and based on the user's type, returns true or false. Now, when writing code, we should also be writing tests to make sure our code is verbose. However, writing tests could be tedious and monotonous. Wouldn't it be great if an AI can generate tests for us? Let's give it a try. I'll simply ask chad GPT to write tests for the following function and paste in the code we were just looking at. As we can see, chad GPT was able to generate the appropriate test cases for us. If the user is a reader, the function should return false.
00:07:31.846 - 00:08:21.488, Speaker A: Otherwise, if the user is a writer or admin, it should return true. This is great, but the caveat here is that it works for simple code, but breaks down if you introduce more complicated code. So far, we've seen how chad GPT can help you with technical problems, but it could also help you with creative problems. One issue beginning rust stations have is brainstorming which projects they should work on. Chad GPT can help you with this. Simply type in what are some beginner friendly rust project ideas? Here we can see a list of ideas, a command line to do list manager, a simple game, a program to calculate prime numbers, a command line dictionary, and a web scraper. You can follow up by asking for more ideas or ideas in a specific niche, for example, webassembly.
00:08:21.488 - 00:08:59.456, Speaker A: If you already have an idea, you can ask chat GBT for a high level overview of how to implement it. For example, I'll ask how to create a crud API in rust for blog posts using the rocket framework. As you can see, chad GPT generated step by step instructions for building this project and even included code snippets. Now, it's not perfect. As you can see, these steps are not numbered, all of them are the number one, and maybe some of these code snippets are going to contain errors. However, overall, this is a great start. Alright, that's it for this video on Chad GPT.
00:08:59.456 - 00:09:22.370, Speaker A: Let me know what you think in the comment section below, and also let me know what you plan to use Chad GPT for. If you enjoy this video, make sure to like it and subscribe to the channel for weekly rust content. And before you go, make sure to get your free rust cheat sheet if you haven't already, by heading over to let'sgetrusty dot cheatsheet. With that said, I'll see you in the next one.
