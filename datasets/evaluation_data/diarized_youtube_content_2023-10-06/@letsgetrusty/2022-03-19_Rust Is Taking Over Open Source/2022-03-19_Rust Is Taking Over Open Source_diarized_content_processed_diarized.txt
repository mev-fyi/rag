00:00:00.560 - 00:00:42.844, Speaker A: What's up, rust stations? Welcome back to let's get Rusty. In today's video, we're going to talk about how Rust is used in open source software. Specifically, we'll go over a few popular and impactful open source projects written in Rust. With that said, let's get Rusty the first project I'd like to talk about is called Denoise. Deno is a modern runtime for JavaScript and typescript using the VA engine. But wait, don't we already have one of those? The answer is yes, and it's called Node JS. In fact, the creator of Node Js, Ryan Dahl, is actually the creator of Deno.
00:00:42.844 - 00:01:25.688, Speaker A: When Node JS was created in 2009, it took the Internet by storm. The same developers who were importing 65 libraries and a full front end framework to animate a loading spinner on a webpage were now writing web servers deployed to production. Ryan Dahl forever changed the Internet. However, only nine years later, he gave a talk at JSconf EU titled ten things I regret about Node Js. Some of his regrets were the way the module system was set up, the lack of security, and the decision to remove promises. At the end of the talk, he announced that he was working on a new project, which incorporated the lessons he learned from building node js. That project was named Deno.
00:01:25.688 - 00:02:01.172, Speaker A: Some of the benefits of Deno are that it's secure by default, it supports typescript out of the box, and it ships only a single executable file. But there's another really important distinction between Node JS and Deno. While the core of Node JS was written in c, Deno is written in rust. Looking at the data, 63% of the codebase is written in rust, while the rest is written in JavaScript and typescript. Ryan is such a fan of rust that in one interview he said that he would never start another C project again.
00:02:01.356 - 00:02:11.080, Speaker B: Not sure how you guys feel about this, but I'm very convinced that I will never start another C project. Rust really solves the C problem, as it were.
00:02:11.540 - 00:02:43.990, Speaker A: Deno is becoming ever more popular with 80,000 stars. On GitHub, it's almost as popular as Node JS, which has 86,000 stars. The next open source project I want to talk about is called Taure. Tauri allows you to build cross platform desktop applications using a web front end. Talry is an alternative to frameworks like Electron. Electron is extremely popular. It's been used to build apps such as versus code, Twitch, Slacken, and Discord.
00:02:43.990 - 00:03:23.698, Speaker A: Electron allows you to build desktop applications using JavaScript, HTML and CSS. To do this, Electron uses node JS and Chromium. Electron makes building desktop applications easier and more accessible to web developers. However, the criticism is that it's bloated, slow and insecure. A lot of this has to do with the fact that it's bundled with the Chromium web browser. Tau readdresses these issues by using the native systems webview instead of taking a dependency on an entire browser. As a result, Tauri can produce tiny, blazingly fast binaries for all major desktop platforms.
00:03:23.698 - 00:04:11.424, Speaker A: If we look at the benchmarks page on the Tauri website, we can see that a hello world app in Tauri has an execution time about twice as fast as a hello world app. In electronization, Tauri apps also have a binary size that's over 40 times smaller than electron apps. Besides these performance characteristics, Taure also focuses on security. Tauri allows you to develop the front end of your desktop application in HTML, CSS, and Vanilla JavaScript, or any framework that compiles to Vanilla JavaScript. The back end of your desktop app is written in rust and the backend can communicate with the front end through an API. Also, support for more backend languages are planned for the future. Note that towery is in beta stage.
00:04:11.424 - 00:04:44.430, Speaker A: However, a release candidate for version 1.0 is already being tested and is planned to be released soon. Another exciting open source project written in Rust is mealisearch, which I hope I'm pronouncing correctly. Melee Search is a lightning fast, ultra relevant, typo tolerant search engine. Mealisearch boasts answers to queries in under 50 milliseconds, which enables an instant search experience. You can also set up mealisearch with zero configurations. However, customization is available.
00:04:44.430 - 00:05:28.904, Speaker A: Mealisearch aims at a great user experience, both for end users and for developers. The tradeoff is it's not able to handle massive amounts of large text files or do complex queries like elasticsearch for example. However, if you want a great search experience for your end users that's easy to set up, consider mealy search. The last open source rust framework I want to talk about in this video is Yu U is a rust framework which allows you to create multi threaded web applications using Webassembly. You uses a component framework much like react. If you'd like to learn more about this framework, I recently made a video implementing a simple app in. You do know, however, that you has not reached version 1.0
00:05:28.904 - 00:05:54.220, Speaker A: yet, so the API is subject to change. Those are all the projects I'm going to mention, but I know there are many open source rust projects, so if I left out your favorite, go ahead and mention it in the comment section below. If you enjoyed this video, make sure to give it a like. And make sure to get your free rust cheat sheet by heading over to let's get rusty.com cheatsheet. And with that said, I'll see you in the next one.
