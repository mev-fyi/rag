00:00:00.360 - 00:00:30.856, Speaker A: Welcome back to another episode of Rust News. Recently, a new version of Rust was released, version 159.0. Let's take a look at the features included in this release. If you've ever thought writing rust code was a little bit too high level, I got some good news for you. In this release, you can now write inline assembly. In this example, a mutable variable called x is created and initialized to four. Then with the assembly macro, shift and add instructions are used to multiply x by six.
00:00:30.856 - 00:01:16.240, Speaker A: Note that assembly instructions must be written inside an unsafe block. The next feature in this release is destructuring assignments. This means that tuple, slice, and struct patterns can be used as the left hand side of an assignment. In the example provided, variables a through e are declared, then a and b are initialized to one and two, c and d are initialized to one and four, respectively, and e is initialized to five. Up next we have default values for const generics. In this example, a struct called array storage is created with one field containing an array holding a generic type of a generic length. The length is a const generic that defaults to two.
00:01:16.240 - 00:02:03.310, Speaker A: This means that you can create a new instance of array storage holding two elements without specifying the length. Const parameters can now also be interleaved with type parameters. In this example, we define a type parameter, then a const parameter, then another type parameter, another const parameter, and finally two more type parameters. Next up we have future incompatibility warnings. When running cargo build or cargo check, you will now get a warning if one of your dependencies will be rejected by a future version of rust. You can also add the future incompatibility report flag or run cargo report. Future incompatibilities to get more details, the last feature included in this release is the ability to create strip binaries.
00:02:03.310 - 00:02:52.998, Speaker A: For example, in cargo Toml, underneath the profile release section, you can add a strip field and set it equal to debug information, which will strip all the debug information from release binaries. You can also set strip to symbols or true to strip all symbol information from your binaries. Stripping symbols should have a significant impact on the size of the resulting binaries. One thing to note in this release is that incremental compilation has been turned off by default due to a bug. A fix for that bug has already landed, so if no other problems arise, you can expect that in the next release of Rust, incremental compilation will be turned on by default again. Until then, you can use an environmental variable to enable incremental compilation manually. That's it for this video.
00:02:52.998 - 00:03:11.230, Speaker A: If you enjoyed it, make sure to leave a like and let me know what your favorite feature in this release was in the comment section down below. Lastly, get your free rust cheat sheet by heading over to letsgetrusty.com cheatsheet. And with that said, I'll see you in the next one.
