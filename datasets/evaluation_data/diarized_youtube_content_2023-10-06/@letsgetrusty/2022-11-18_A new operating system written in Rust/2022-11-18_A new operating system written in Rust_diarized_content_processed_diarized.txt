00:00:00.520 - 00:00:30.686, Speaker A: Rust has had a busy time taking over operating systems. Last year was Android, this year the Linux kernel. Now Google is working on a new operating system focused on embedded systems written in rust. Kataos. So what is kataos, and can it be your next desktop os? Probably not. The main focus of kata OS will be embedded systems, especially those that make use of machine learning applications. Think of that smart speaker at home you use to turn on the lights or control the air conditioning.
00:00:30.686 - 00:01:12.902, Speaker A: These speakers process voice commands in the form of raw audio data, use pattern recognition to determine what words are spoken, and activate smart home devices based on that input. Or think of a self driving car, which records its surroundings, uses pattern recognition to make out obstacles and road markings, and steers itself accordingly. More and more devices are being powered by embedded machine learning, also known as tinymla. From smart homes to self driving cars. With all the sensitive data these devices collect and process, it's important for them to be secure from attack. The last thing you want is your malware infected smart fridge, spying on your unhealthy eating habits and relaying that data to a malicious actor. This is becoming a common occurrence.
00:01:12.902 - 00:02:00.234, Speaker A: There were 1.5 billion attacks on smart home devices in the first half of 2021 alone. Even a smart lightbulb can become a vulnerable endpoint, allowing attackers to hack into a home network and steal sensitive data. Internet connected devices are also vulnerable to malware that enables them to be remotely controlled and used to create trouble. In 2016, attackers used malware to control an estimated 100,000 Internet connected devices and launched a DDoS attack against a large DNS provider, taking down major websites in the US and Europe for hours. It's not hard to imagine how self driving cars can be similarly commandeered to cause significant disruption or even loss of life. The idea behind Kata OS is that these critical systems need to be secure from ATT and CK beyond doubt.
00:02:00.234 - 00:03:02.542, Speaker A: The team at Google research thinks that security for embedded devices is an afterthought today, and wants these devices to run an operating system that is completely secure from malicious software. Katos is special because you can prove mathematically that it is logically impossible for applications to breach the OS security safeguards. How is this possible? Kata OS is built on top of SCL four, a general purpose microkernel that is mathematically proven to be secure without compromising on performance. This is achieved by providing isolation between applications running on the machine, so that a breach in one part of the system won't affect more critical parts of the system. A project sponsored by the US Department of Defense has actually used SCL four to protect an autonomous helicopter from cyber attacks. Another way Kataos achieves a high level of security by being written in rust. Operating systems used to be written exclusively in low level languages like c and c, which provide developer control over memory allocation.
00:03:02.542 - 00:03:57.892, Speaker A: While this is necessary for developers working with something like an OS, it enables them to shoot themselves and many, many users in the foot. Rust is a systems language, but with high level features that eliminate an entire class of memory bugs that have been blamed for 70% of all security bugs at Microsoft. If you need to write software that is both performant and secure, as Katos aims to be, you would write it in Rust. Note that the team behind Katos has open sourced a Rust SCL four framework, so if you fancy building your own super secure operating system, you can give it a go. Of course, security requires an approach that spans the whole system, not just the OS. A secure hardware platform matters too, as well as the humans using the system. That said, Internet connected devices are often produced quickly without much regard for security, and these devices are used even by the least technical people.
00:03:57.892 - 00:04:26.088, Speaker A: Katos is designed to be secure under reasonable use, even by users that are not technically proficient. It's a big step forward for security. Cotos is also an interesting use case for rust. Rust is uniquely positioned for Cota OS security requirements. This is a powerful testament to rusts potential as a safe systems language and to its exciting future. That's it for this video. If you enjoyed it, make sure to hit the like button and subscribe to the channel for weekly rust content.
00:04:26.088 - 00:04:37.040, Speaker A: Also, before you go, if you haven't already, make sure to get your free rust cheat sheet by heading over to let'sgetrusty dot cheatsheet. With that said, I'll see you in the next one.
