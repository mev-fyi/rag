00:00:00.360 - 00:00:37.256, Speaker A: A new version of Rust has been released with three important changes that you need to be aware of. But before we get to that, if you haven't already, make sure to pause this video and get your free rust cheat sheet by heading over to lets get rusty.com cheatsheet. With that said, lets jump into the release notes the first change in the 161.0 release is the ability to return custom exit codes. As of this release, the exit code struct and the termination trait are now stable. Exit code is a type representing the status code the current process can return there are two basic implementations of exit success and failure.
00:00:37.256 - 00:01:15.860, Speaker A: Success returns the canonical exit code for a successful termination on a given platform, and failure returns the canonical exit code for an unsuccessful termination on a given platform. Besides these two implementations, you could also return your own custom exit codes. In this example, main returns an exit code inside the main function. If this check passes, then the successful exit code is returned. Otherwise, an exit code of 42 is returned. However, instead of using an integer, we could also return a type that can turn into an exit code and that's where the termination trait comes into play. The termination trait allows you to return arbitrary types from the main function.
00:01:15.860 - 00:01:58.864, Speaker A: This function requires that you implement one function called report, which takes ownership of self and returns an exit code. One benefit of this is you can do some custom reporting before returning an exit code. Let's take a look at one example of returning custom exit codes in the release notes. This example is implementing the git bisect command. Git bisect allows you to do a binary search through your commit history to find the commit that introduced a bug. Here we see a get bisect result enum, which is represented as an unsigned eight bit integer and it has four variants. Good, which is mapped to zero bad, which is mapped to one skip, which is mapped to 125 and abort, which is mapped to 255.
00:01:58.864 - 00:02:33.440, Speaker A: The termination trait is implemented for get bisect result. Because get bisectresult is an enum represented as an integer. We can simply take self, cast it to an unsigned eight bit integer, and then turn that into an exit code. And before returning the exit code we can optionally do some custom reporting. Now that termination is implemented for get bisect result, we can return it from main. This example omits the implementation of get bisect, but you can imagine testing the current commit in this block of code and then returning the appropriate get bisect result. Otherwise, if anything panicked, we would return abort.
00:02:33.440 - 00:03:25.636, Speaker A: In this release, some more capabilities were added to constant functions. You are now allowed to create pass and cast function pointers inside of const functions. This could be useful for things like building a compile time function table however, the caveat here is that at this moment, you're still not allowed to call function pointers from within const functions. If a const function has generic parameters, you are now allowed to add trait bounds to those generics. Const functions can now also handle trait objects and impul trait types. The one note here is that those trait features do not support calling methods on the traits in const functions as of this moment, and the last notable change in this release is the lock method on STD. In Stdout and STd error returns lock guards that have a static lifetime previously, the log guards had a lifetime borrowed from Selph, which was an unnecessary limitation.
00:03:25.636 - 00:03:54.730, Speaker A: This would previously cause errors, for example, attempting to get a handle to standard out and locking it in the same statement in this release. This line of code works without errors. That's it for this video. But before you go, make sure to get your free rust cheat sheet by heading over to letsgetrusty.com cheat sheet. Also, in the comment section below, let me know if you liked any changes in this release. And if you like this video and want to see more rust content, make sure to subscribe to the channel.
00:03:54.730 - 00:03:57.410, Speaker A: With that said, I'll see you in the next one.
