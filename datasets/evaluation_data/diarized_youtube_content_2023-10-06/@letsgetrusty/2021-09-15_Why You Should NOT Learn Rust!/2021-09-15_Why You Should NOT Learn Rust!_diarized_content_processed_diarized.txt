00:00:00.440 - 00:00:32.189, Speaker A: Welcome back, Rust Gang. If you're new here, my name is Bogdan and this channel is all about the Rust programming language. Now, as much as I love Rust, there are some good reasons not to learn the language. So in this video, I'm going to go over five reasons why you should not learn the rustling. Reason number one, you should not learn rustling. If you think you're going to get a job programming all day in Rust. Don't get me wrong, there are Rust jobs out there, but the demand is not really high.
00:00:32.189 - 00:01:16.489, Speaker A: And the jobs that do exist usually require a high level of expertise. So if your main goal is to find a job and you want to increase the probability of finding a job as much as possible, then I would pick a language that is more in demand, such as C, C or Java. Now here are a few caveats. Rust is a new programming language. So even though right now there aren't many Rust specific jobs, in the future, as the language grows in popularity, more and more jobs will become available. So if you want to get ahead of the curve by learning this new technology now through tutorials or side projects, then go right ahead. The other route you can take is instead of searching for a Rust programming job, use Rust in your current workplace.
00:01:16.489 - 00:01:59.137, Speaker A: If you come across a technical challenge that requires a programming language that's correct and efficient, then you can make a case for using Rust. You can also pitch the idea of using Rust to build internal tools such as CLI apps. Reason number two, do not learn Rust if it's not the right tool for the job. Rust allows you to build software that's extremely efficient and correct. If these two properties aren't crucial to your application, then consider using something else. Now you might say, shouldn't all software be efficient and correct? And to that I say, that's a fair point. But there's a different efficiency and correctness bar when you're making embedded medical devices, for example, versus when you're making a social media app.
00:01:59.137 - 00:02:49.977, Speaker A: When you're building a social media app, it's fair to trade efficiency and correctness for write time speed. With embedded medical devices, we want to make the opposite trade off. It might take longer to build the software, but that's okay because we value correctness and efficiency more than write timespeed. So if you're thinking about rebuilding your entire web app in Rust and webassembly, then consider the trade offs. The only caveat I would give is that if you're using Rust for learning purposes, then go ahead and use Rust regardless of if it makes sense from a business standpoint. Reason number three do not learn Rust as the first programming language in your software development career I get this question from time to time in the comment section. Should I learn Rust as my first programming language? I mean, unless you're a masochist, I wouldn't recommend learning Rust as your very first programming language.
00:02:49.977 - 00:03:41.217, Speaker A: Personally, I would learn a language that may be less efficient, less powerful, and generally inferior, but easier to learn, such as JavaScript or Go. The caveat I would give here is that if you're learning programming specifically because you want to do systems programming, low level programming, then you can pick up Rust as your first programming language. I think that's totally fine. Reason number four do not learn Rust if you have Shiny Object Syndrome. If you're somebody that dabbles with new technologies and think that you can just pick up Rust, learn it quickly and move on, then Rust might not be for you. Rust is a powerful programming language, but it does have a bit of a learning curve, so it requires some dedication to become proficient. Granted, there are some great resources online making learning Rust easier, such as the Rustling book or this YouTube channel.
00:03:41.217 - 00:04:20.659, Speaker A: And finally, reason number five do not learn the Rust programming language if you currently program in Go. We don't allow GO developers into the Rust gang. In all seriousness, I don't really have a fifth reason not to learn Rust. In fact, I had trouble coming up with four legitimate reasons not to learn Rust. If you made it to the end of the video and I didn't scare you off and you're excited about learning the amazing programming language that Rust is, well, then you found the right channel. I release new Rust videos every week, so if you want to see more Rust content on a weekly basis, then hit the subscribe button, hit the notification bell, and join the Rust gang. Lastly, I'm going to be releasing a Rust cheat sheet, which you don't want to miss out on.
00:04:20.659 - 00:04:26.315, Speaker A: So click the link in the description to get access and with that, I'll see you in the next one.
