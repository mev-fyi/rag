00:00:00.320 - 00:00:53.992, Speaker A: What's up, rustations? Welcome back to let's get Rusty, your number one resource for all things Rust. A new version of Rust was recently released, so I wanted to make a quick video going over the blog post for the release. All right, here's the blog post for the 158.0 release, and if we scroll down just a little bit, you can see that the first edition is captured identifiers in format strings previously, we were able to format strings by having curly braces inside the string and then supplying an argument specifying what we want the curly braces to be replaced with. We were also able to use an explicit index or a named argument, like so. But now in this new release, named arguments are able to be captured from the surrounding scope. So instead of supplying an additional argument, we can simply write person here, which will map to this person variable inside the same scope.
00:00:53.992 - 00:01:33.678, Speaker A: This could also be used with formatting parameters. I haven't used formatting parameters myself, but they give you an example here. And lastly, there's an edge case with the panic macro in the 2015 and 2018 editions. But as long as you're on the 2021 edition, which is the latest edition, then everything works as expected. All right, the next change in this release is that the Windows command struct has a reduced search path. Now, I haven't personally used this struct, but according to the documentation, this struct provides fine grained control over how a new process should be spawned. Prior to this release, this struct would search the current working directory for executables, but that proved to be problematic.
00:01:33.678 - 00:02:03.992, Speaker A: Here. It states that searching the current directory led to surprising results or even malicious behavior when dealing with untrusted directories. In fact, the Ripgrep crate had a cve due to this. So in this release, rust now performs its own search without the current directory. And here's the new search order. The next change is that the must use attribute was applied to more types and functions in this release. The must use attribute is applied to types or functions when failing to consider them, or their output is almost certainly a bug.
00:02:03.992 - 00:02:37.636, Speaker A: The example they give here is the result type. If a function returns the result type and you fail to consider the error case, then it's almost certainly a bug. So in this release, an audit was done, and the must use attribute was added to more functions within the standard library. Besides those changes, we have a few methods and trait implementations that were stabilized, and some functions that are now const. That's it for this video. If you enjoyed it, make sure to give it a like and subscribe for weekly rust content. Also, let me know down in the comments if you are enjoying these types of videos where I review rust releases.
00:02:37.636 - 00:02:48.910, Speaker A: Lastly, and most importantly, get your free rust cheat sheet by heading over to let's get rusty.com chi sheet. And with all that said, I'll see you in the next one.
