00:00:00.440 - 00:00:40.160, Speaker A: What's up rustations? Welcome back to let's get Rusty. In today's video we're going to be talking about how to set up continuous integration for your rust project. But before we get started, if you haven't already, make sure to get your free rust cheat sheet by heading over to let's get rusty.com forward slash cheatsheet. With that said, let's get rusty here. Ive created a simple rust project called examplelib and uploaded it to GitHub. Examplelib has a library create with an add function and two tests to add continuous integration to this project.
00:00:40.160 - 00:01:20.916, Speaker A: The first thing we need to do is scroll up and click on the actions tab. GitHub will automatically suggest a starter template for rust. Lets click configure. This will automatically create a YAML file for you called Rust YAML inside the GitHub workflows directory. This YAML file represents the configuration for your CI workflow. Here we can see that this workflow is scheduled to run anytime we push to the master branch or create a pull request on the master branch. This workflow has one job called Build, which will run on the latest Ubuntu release and execute these steps.
00:01:20.916 - 00:02:00.090, Speaker A: The first step will build our project and the second step will test our project. Let's improve this configuration slightly by adding a build matrix. Here we've defined a matrix called toolchain with three values, stable, beta and nightly. We'll also add a step that makes use of these values. This step is going to update and set the rust toolchain to either stable, beta or nightly. With this setup, our code is going to be built and tested with these three rust toolchains. Our CI configuration is now complete so we can commit the file.
00:02:00.090 - 00:03:12.732, Speaker A: We can see that our job is running by this orange circle. Our CI job is now complete and it's passing for all three toolchains. Let's see what happens if we commit some code which introduces a bug. Here I've changed the add function to subtract instead of add. This time our jobs failed and if we scroll down we can see that it's because our tests failed. As we can see, having tests and continuous integration that runs those tests helps us prevent bugs from being introduced. That's it for this video.
00:03:12.732 - 00:03:27.380, Speaker A: If you enjoyed it, make sure to give it a like and leave a comment down below. Lastly, and most importantly, get your free rust cheat sheet by heading over to letsgetrusty.com cheatsheet and with that said, I'll see you in the next one.
