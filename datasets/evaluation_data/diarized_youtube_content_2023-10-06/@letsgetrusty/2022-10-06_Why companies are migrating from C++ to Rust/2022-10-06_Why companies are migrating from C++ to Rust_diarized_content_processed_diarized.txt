00:00:00.440 - 00:01:00.035, Speaker A: The days of building system software in C is coming to an end and a new language is taking its place. That language, of course, is Rust. This is evidenced by major tech companies choosing to migrate from C to Rust. In fact, the CEO of Azure recently tweeted it's time to halt starting any new projects in C or C and use Rust for those scenarios where non garbage collected languages are required. For for the sake of security and reliability, the industry should declare those languages as deprecated. Now the question becomes why? Why are companies migrating from C to Rust? In this video I'll give you four reasons why companies are migrating from C to Rust and at the end I'll give you a fifth reason that will almost certainly surprise you. So make sure to stick around till the end of the video before we start with reason number one, if you haven't already, make sure to get your free Rust cheat sheet by heading over to LetsGetRusty.com
00:01:00.035 - 00:01:52.981, Speaker A: cheat sheet the first reason companies are migrating from C to Rust is because Rust offers performance with memory safety. C is great because it allows you to organize code in an object oriented way while still giving you the performance characteristics of C. The problem is C is inherently unsafe, which means it's very easy to create memory related bugs. This is not only bad because your software won't function properly, but but it's even worse because memory bugs can lead to security vulnerabilities. And by can I mean they definitely do. Microsoft reported that 70% of their security vulnerabilities are caused by memory safety issues. When you're building critical software like operating systems, you definitely want your users to trust the software, which means you cannot afford security vulnerabilities.
00:01:52.981 - 00:02:41.787, Speaker A: Besides the trust aspect, there's also the financial aspect. According to an article by the NewStack, Ryan Levick, a developer advocate for Microsoft, said that back in 2004 each memory related error cost industry about $250,000. He also said that estimate is probably on the low end. So as we can see, it's in a company's best interest to avoid memory safety bugs. Now you might be thinking you can write safe code in C, you just have to train developers on how to write proper code. While Microsoft has invested heavily into developer training, but unfortunately that did not result in any significant difference in memory safety bugs. Another solution is to add tooling, specifically static analysis, on top of C code bases.
00:02:41.787 - 00:03:36.479, Speaker A: The problem is static analysis results in too much overhead and it's very easy for teams to opt out of using it. And so the only practical solution is to use a language that is memory safe by default, which Rust is This is why we're seeing companies like Microsoft migrate away from C to Rust. The second reason companies are migrating away from C to Rust is because of the tooling. C does not have a single standard compiler or a single standard package manager. This makes dependency management frustrating, time consuming and difficult overall. On the other hand, Rust has one standard compiler called Rust. C Rust also comes with a tool called Cargo, which is a build tool, package manager, test runner and document generator all wrapped in one.
00:03:36.479 - 00:04:22.103, Speaker A: On top of that, Rust has Crates IO, which is a public package registry where you can share and download third party dependencies similar to npm for JavaScript. This makes dependency management very easy and leads to a great developer experience for companies. This means developers can focus on building valuable software instead of working around the language. The third reason companies are migrating away from C to Rust is because of the community. The Rust team did a great job fostering a thriving Rust community filled with friendly, helpful and passionate engineers. And this community is expanding fast. In fact, according to Slash Data, Rust is the fastest growing language community.
00:04:22.103 - 00:05:16.351, Speaker A: This creates a positive feedback loop. The more Rust developers there are, the more learning resources will be available, the more mature the ecosystem will become and more software will get built in Rust. This will in turn cause more developers to learn Rust. And you better believe that big tech companies are paying attention, because as the pool of Rust developer talent increases and the ecosystem matures, Rust becomes more and more attractive to companies. The fourth reason companies are migrating away from C to Rust is because Rust is able to interoperate with C. The Rust ecosystem has a variety of tools to accomplish this, including Bindgen, CXX, AutoCixx, and the CPP macro. This means companies can introduce Rust incrementally while still taking advantage of their existing C code bases.
00:05:16.351 - 00:06:01.739, Speaker A: Now before we get to the fifth reason why companies are migrating to Rust, which will probably shock you. Take a moment and like this video for the YouTube algorithm and subscribe to the channel for weekly Rust videos. Now. The fifth reason why companies are migrating from C to Rust is the learning curve. Now you might be saying, isn't Rust known to have a steep learning curve? And yes, it is, especially if you're coming from languages like JavaScript or Python. However, the learning curve is a lot easier if you're a C developer. In an article by the Microsoft Security Response Center, a developer stated, thanks to a plethora of online documentation and very helpful compiler error messages, Rust has a pretty easy learning curve.
00:06:01.739 - 00:06:42.345, Speaker A: For someone like me who has used C for the majority of my career. This makes sense as C developers are used to low level memory management and some important concepts in C directly carry over to Rust. In fact, the ownership memory model in Rust is based on the resource acquisition is initialization pattern in C. This means companies can smoothly onboard their C developers to Rust. That's it for this video. But before you go, if you haven't already, make sure to get your free Rust cheat sheet by heading over to LetsGetRusty.com Qishi with that said, I'll see you in the next one.
