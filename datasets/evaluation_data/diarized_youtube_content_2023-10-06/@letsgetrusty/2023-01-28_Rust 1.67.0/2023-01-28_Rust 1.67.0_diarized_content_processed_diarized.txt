00:00:00.520 - 00:00:51.001, Speaker A: What's up Rust Stations My name is Bogdan and today we're talking about a new version of Rust which was recently released version 1.67.0. To update to this new version, simply run Rust up Update Stable. In this video, I'll go over all the new updates you need to know about. Speaking of things you should know about, if you haven't already, make sure to get your free Rust cheat sheet by heading over to LetsGetRusty.com cheat sheet the first update has to do with the must use attribute and async functions. In this example we have an async function called getint and another async function called print int which calls get int but does nothing with the output. As of this release, you can add the must use attribute to async functions which will cause a warning if the output of the return future is not used.
00:00:51.001 - 00:01:43.785, Speaker A: For example, if we add the must use attribute to get int, a warning will appear on line 12 because we are not using using the output of Getint to fix this warning, we can store the output in a variable and then print it out. The second update in this release is an update to the multi producer single consumer channel implementation. In Asynchronous programming, channels are used as a way for threads to communicate by sending messages. The Multi producer single consumer model allows multiple producer threads to create messages and a single consumer thread to listen and react to messages. The Rust standard library has a multiproducer single consumer implementation. However, if you've done async programming in Rust, you may have opted to use a third party library instead. For example Crossbeam channel, which provides multi producer multi consumer channels.
00:01:43.785 - 00:02:29.771, Speaker A: In general, Crossbeam is more feature rich and has better performance, which is why in this release the multiproducer single consumer channel implementation in the Rust standard library has been updated to use Crossbeam channel. Internally, there is no user facing API changes. However, the new implementation has fixed a number of bugs and improved performance and maintainability. Hopefully this change will lead to new features in the future as well. Lastly, here's a list of APIs that have been stabilized in this release, as well as APIs that have been stabilized in const contexts. Let me know what you think about this release in the comments section below. And before you go, if you haven't already, make sure to get your your free Rust cheat sheet by heading over to letsgetrusty.
00:02:29.771 - 00:02:35.035, Speaker A: Com cheat sheet. With that said, I'll see you in the next one.
