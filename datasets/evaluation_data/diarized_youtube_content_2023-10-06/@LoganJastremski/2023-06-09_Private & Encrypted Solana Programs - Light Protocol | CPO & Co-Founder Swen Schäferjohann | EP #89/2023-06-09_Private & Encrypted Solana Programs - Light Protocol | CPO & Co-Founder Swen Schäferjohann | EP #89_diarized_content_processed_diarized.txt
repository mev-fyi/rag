00:00:00.200 - 00:00:43.786, Speaker A: You know, 2021. I tried running Solana test validator locally, just using the CLI, and it took 2 seconds and the whole thing was confirmed. And I was like, wow, that's the future right there. Payments on chain are probably worse than, you know, payments on the Internet before there was SSL. Right? Right now, if I send you money, if I send you some USDC, you basically have access to my whole on chain financial history. And so that's, that's, that's just fundamentally super important that you need to have some privacy if you want to, like, serve these use cases. And our goal, you know, was really to just create a proof of concept that it was possible to verify.
00:00:43.786 - 00:00:45.270, Speaker A: ZK snacks on Solana.
00:00:46.410 - 00:01:01.472, Speaker B: Thank you for joining me, Swin. I really appreciate you coming on the podcast. I think you're building something super cool with the light protocol. So excited to jump into what you're building and kind of the entire vision that you and your co founder have set out to build.
00:01:01.576 - 00:01:03.824, Speaker A: Yeah, thanks for having me. Nice to be here.
00:01:03.952 - 00:01:55.862, Speaker B: Wonderful. I think the world as kind of shaping up in the blockchain landscape is two opposite ends of the spectrum. We have the monolithic chain kind of scales, and one opinion and the other world opinion is modular, is the way forward. And modularity has some benefits, I think, particularly around the aspect of privacy and being able to incorporate some of those privacy features into a L2 or layer three. But I think what you're building is kind of a little bit not opposite of that, but kind of breaks that narrative and allowing you to build privacy into the layer one itself, specifically Solana, which is extremely cool. So definitely want to get into all the technical aspects, just kind of framing the conversation a little bit. But would love to get a quick intro about yourself.
00:01:55.862 - 00:01:58.822, Speaker B: How did you start working on late protocol?
00:01:58.926 - 00:02:23.690, Speaker A: For sure. Yeah, so the long story is really, my co founder and I, my co founder is named Joe. We are childhood friends, so, like, we've known each other since forever. Since we can sort of count. Right, like when the last bull run, before this bull run. So, like 2017. I don't know if you remember vividly, but I do.
00:02:24.350 - 00:02:30.746, Speaker B: I do as well. It was super exciting and 2018 sucked, so I remember it very vividly.
00:02:30.898 - 00:03:34.500, Speaker A: Yeah, exactly. I had exactly the same experience, sort of 2017. I was still in school dabbling and investing, and Joe, my co founder, introduced me to this whole space in 2018 with the bear market, I got super frustrated and disillusioned. I was like, why do we need a blockchain anyway? What is it good for? And to my regret, I started doing web stuff, and I'm saying regret, but I was fortunate enough to have sort of collect a lot of experiences there, basically building SaaS for small and medium sized german businesses. Worked on different projects and with different startups there for the last couple of years until 2021, when Jorrit. So Joe and I sort of met again in Berlin. So we originally, we lived in Berlin in Germany at that time, and we were catching up on stuff.
00:03:34.500 - 00:04:28.892, Speaker A: And he's actually been working since 2018, just interested in the crypto space. So he's been doing his master's thesis on private voting. And what he did was his idea was to basically just fork Tornado, which is this privacy protocol in Eve, and make it run on Solana, because, like, he's, you know, early 2021. Solana was like this very interesting, challenging project, and it was still not consensus, like, before the whole, you know, it was before the whole sort of crazy pump in Seoul. And that was really interesting. And he was like, hey, do you want to help me build this thing as a hobby project after I'm done writing the thesis around it? At that time, I didn't have any rust knowledge, but I was like, that sounds interesting. We just picked it up from there.
00:04:28.892 - 00:05:21.798, Speaker A: I helped him a little bit. We got a grant from american investors that was essentially this moment where it grew from just a hobby project to actually something that could be an actual business or could be an actual protocol and sustainable. And so we were very fortunate to get this grant, get this sort of validation from investors early on. Obviously, great timing with the 2021 bull market, where everybody was crazy about Solana and we worked on this thing full time. I don't know if you recall, but there was this ignition hackathon in fall 2021, and our goal was really to just create a proof of concept that it was possible to verify. ZK snarks on Solana. Zkai snarks.
00:05:21.798 - 00:06:18.826, Speaker A: Is this quite proven? Relatively speaking, zero knowledge tech, where you can basically prove to someone else that your statement, whatever the statement is, is legit without revealing any information beyond that statement itself. You can picture there's a lot of different use cases you can use this for, not just token transfers, which was what it was used for before that. The proof of concept was really, ok, make it run on the constraint. Solana Runtime. We did that and then took off from there in a way, where we open sourced this whole thing in January 2022 and then raised the seed round. A great timing as well. Very fortunate to get awesome investors on board just at the time where everything collapsed.
00:06:18.826 - 00:06:31.966, Speaker A: Right. And the next bear market was knocking on a door. And that was a crazy ride last year. But, yeah, that's where things really got started, and that's how I got into it.
00:06:32.058 - 00:07:00.082, Speaker B: Amazing. Amazing backstory, I think. Yeah, it was definitely, I would argue even today, Solana is still a non consensus bet outside of, like, the core Solanas community. To us, it all kind of seems very obvious that this is what's going to bring forward mainstream adoption. But, yeah, even in 2020, what, I guess, what got you excited about the Solana ecosystem at that point in time?
00:07:00.206 - 00:07:55.662, Speaker A: Yeah, so great question. I mean, it was really that on Ethereum, if you try to build anything but just normal token transfers, like if you wanted to build, for instance, private governance or private voting with CK, it's just so expensive and so slow. So you're really limited on the range of use cases you can build with CK, by definition, just because you inherit the fee structure and the speed of the layer one that you're building on. And Solana was like this light at the end of the tunnel, and it was amazing. I remember, and comparing that to 2017, when I did my first eth on chain transaction, 2017, and it took 16 minutes, and I had to figure out how to pay what gas fees to pay. And I went to this separate site, and it was this super complicated experience. And then I tried 2021.
00:07:55.662 - 00:08:32.280, Speaker A: I tried running Solana test validator locally, just using the CLI, and it took 2 seconds, and the whole thing was confirmed. And I was like, wow, that's the future right there. And I think we obviously also were super pumped by. I mean, it's interesting because what you're saying with Solana is a non consensus bet, and I very much agree. But you remember that moment in time in 2021, where everybody was fomoing about Solana. Like, if you were telling investors, for instance, about, like, oh, we're building this on Solana. It's like, okay, take my money.
00:08:32.280 - 00:08:42.364, Speaker A: So it's like there was like, this brief moment in time where Solana was extremely. This, like, FOMo coin up until 2022, obviously.
00:08:42.492 - 00:09:35.674, Speaker B: Yeah, definitely. No, it's, once you use ethereum and then having used Solana, the differences are night and day. And I think definitely when you look at it from a product perspective, I said this on a podcast a couple days ago that I think people now, especially in how amazing web two has gotten, it's fast, you don't pay for things, but the latency is super low. If the website takes longer than a second to load, normally, you bounce. And I think in crypto, we've kind of just become accustomed to these very long block times, to very long confirmations. But 99.99% of the world has yet to be onboarded into crypto and they expect these type of experiences.
00:09:35.674 - 00:09:38.882, Speaker B: And so amazing that you recognize that as well.
00:09:38.986 - 00:09:54.824, Speaker A: Yeah, for sure. I think we're super early in terms of just blockchain tech. I'm pretty young. I wasn't necessarily around in the nineties and the early two thousands, but that's what I imagine in terms of probably the same pattern in terms of where.
00:09:54.872 - 00:10:41.712, Speaker B: Tech was at that time, 100%. I use the analogy from dial up to broadband to fiber optics. I think blockchains are going through a very similar path, but maybe transitioning a little bit. The light protocol ultimately is allowing engineers, programmers to make private program execution. And you said that was really highlighted by the zero knowledge tech. Can you explain that or go into a little bit deeper on how that is possible? Because again, in kind of like the framing of the conversation, a lot of crypto, Twitter or even the community thinks it's impossible to do on the layer one. It has to be done on a L2 or a layer three for sure.
00:10:41.816 - 00:11:14.618, Speaker A: And there's some interesting nuances as well, where there are similarities to what people call l two s. And there's some differences. And I'm happy to get into these. So I'll start with, try to keep it brief, but some high level overview of how is it even possible to have privacy on chain, and maybe it makes even sense to first of all, get into. Why is that even a problem?
00:11:14.794 - 00:11:17.450, Speaker B: Yeah, take it and start it wherever you need.
00:11:17.570 - 00:12:32.636, Speaker A: Yeah, for sure. So basically, if you have use cases like gaming, I'm super excited about the gaming use case, but if you have use cases like gaming, if you want to build a multiplayer game like say coupe or magic or poker or any sort of round based trading card game on chain, you cannot do that on any public lego one, you can't do that on east, you can't do that on Solana because players need to be able to commit to a hand without the other person being able to see their hand on chain. Otherwise you'd always have cheaters in game because they just look it up on chain. And so that's where privacy is really, really important. And there's a bunch of other use cases like treasury management for companies payments, right? Like you mentioned broadband as well, around the same time. Like payments on chain are probably worse than payments on the Internet before there was SSL, right? Now, if I send you money, if I send you some USDC, you basically have access to my whole on chain financial history. And so that's just fundamentally super important that you need to have some privacy if you want to serve these use cases.
00:12:32.636 - 00:13:43.334, Speaker A: And then there are others like governance, private voting, dog pool trading, these sort of things. So, yes, starting from this premise that, okay, we want to have all these nice mainstream use cases on Solana, and Solana cannot serve them because you need these user data protection. And so if you look at, like, how, you know, why does Solana not work? Is how does, why does Solana support privacy natively? Is that, first of all, state on Solana is unencrypted, right? So programs define their program logic on chain and transaction update that state transparently. Right? That makes sense because that's also how, with Solana, consensus works. Like with any public blockchain, that's how validators get consensus, because they can observe a given transaction and they can check, oh, that transactions, all right, the account balances, they change correctly. The other thing that's problematic with regards to privacy on chain is that Solana, like Ethereum as well, has an account model for its state. So everything is an account on Solana.
00:13:43.334 - 00:14:20.610, Speaker A: So, for example, if I send you one USDC, Solana goes and finds our token accounts and updates the token account balances in place. So there's like this slot based updating of state, which fundamentally leaks information about whose state is changing with any given transaction. So we have these two fundamental issues with regards to privacy on Solana. We have unencrypted state and we have this account model that leaks information. So naturally, then you go and it's like, how do we solve these things?
00:14:21.310 - 00:14:54.626, Speaker B: And, yeah, are these more, I mean, Solana definitely has this problem. Ethereum is similar state of affairs. Is this more just kind of a layer one problem across the blockchain industry? Because I think, and we'll probably get into this later in the podcast, I think from a regulatory standpoint, these layer ones have to be open, at least from a base layer standpoint. And then you can add privacy on top of that. Is that your point of view as well?
00:14:54.778 - 00:15:49.580, Speaker A: That's an interesting angle with regards to regulatory. In the end, it definitely helps layer one blockchains right now that everything's transparent in terms of if there's law enforcement trying to trace a transaction or whatever, this is. I think a whole separate discussion about the nonsense there. You could have this counterargument that in the European Union, for instance, you have GDPR which is every user should be in control of the data and applications should be able to need to ask for it for the consent of the user before they collect the data, which is like layout one. Blockchains by default are like the nightmare for GDPR. It's like all your data is collected and you have no say in it and no one can delete it either. There's all that discussion around this regulatory wise.
00:15:49.580 - 00:17:00.502, Speaker A: In terms of your first question with regards to is that openness problem for all blockchains? There's a couple of nuances there. If you look at Solana and Ethereum, for instance, all have this account model where you have account balances that update. If you look at other blockchains, like bitcoin for instance, and some of the derivatives that derive from bitcoin, it's actually not an account model, but a Utxo model, which, fun fact, and we'll get into this is also what we utilize, but it's a little bit more privacy preserving because essentially you have this append only chain of state updates with bitcoin. It's pretty simple because the state that's updating is just account balances like you know, natively at least. You cannot build dapps on it, but in essence you have this chain of things. You don't have these state updates in specific slots anymore, so you have a little bit more privacy. And bitcoin clients also, you can have different settings for how private you want to have it.
00:17:00.502 - 00:17:23.144, Speaker A: But then again, it's not ZK privacy, so it's not the whole thing. So there's a couple of nuances there. In essence, usually consensus is based around the idea of like everybody's able to verify transparent state, but it's not necessarily tied to layer ones. There are other layer ones like I don't know if you've heard of secret network.
00:17:23.262 - 00:17:23.812, Speaker B: Yep.
00:17:23.916 - 00:17:46.108, Speaker A: Yeah. It's essentially a layer one that's utilizes like validators. Basically have this like trusted element in their hardware where that's where they decrypt transaction state and are able to actually see what's going on. And the outside actually it's all encrypted state, so it's like it's not necessarily tied to l one.
00:17:46.284 - 00:18:11.672, Speaker B: Interesting. Well, and I kind of cut you off, so maybe getting back on track. So you kind of outlined these two specific problems in the account based world where these blockchains on the layer one have these issues which ultimately can prevent or make it more difficult from the privacy aspect, but light protocol ultimately, and the team that you've created has found a solution for this.
00:18:11.776 - 00:19:00.180, Speaker A: Yeah. And I mean, it's actually pretty straightforward, right? Like if you, and you know, I can't even reference all the other smart minds who've sort of figured this out on a research and theoretical level and implemented this on the, on ETH, for instance. But yeah, as you said, two fundamental questions. First of all, how do we update private state on shame without revealing clues about which state was updated by whom? And then second, how do validators actually validate state transitions in a manner that lets them agree that the state transition was legit, even if it's encrypted? The first question is really, let's find a different model. Let's not stick to the account model. Let's find the UtxO model. I'll explain it briefly.
00:19:00.180 - 00:19:48.556, Speaker A: It's basically that, and I mentioned it just before as well. Instead of mutating account variables, for instance, an account balance, but this could be anything. Instead of mutating that in place, we just encrypt state in the client and send it on chain and append it to this state list of, you know, it was a linearly growing list append only of new encrypted state. So, you know, we're simply adding to the whole state. Concealing which pass state was amended, was basically updated with a new transaction. Right? So you know, this, this approach, as I said, right, resembles a little bit how bitcoin does it, but with the nuance that the state that we're updating is encrypted. Um, so, yeah, so the, is it.
00:19:48.588 - 00:19:51.460, Speaker B: Expensive to do the encryption on chain?
00:19:51.620 - 00:20:35.480, Speaker A: The encryption, no, it's actually, there's no difference in terms of the encryption happens off chain. So basically how that works is that users each have a decryption key, right? If you have a light protocol account which derives from your wallet, for instance, you have a decryption key. So now each of the state that you have, for instance, your private balance, you decrypt that in the client, you create the state transition. And we'll get into how that works in a little bit. But you encrypt the state transition, you generate a proof. And this ZK proof, that's what you send on chain. The state is sent on chain in an encrypted way.
00:20:35.480 - 00:20:44.520, Speaker A: The blockchain doesn't care. That's just bytes instead of transparent. They're encrypted, so there's no extra cost there.
00:20:44.900 - 00:20:56.240, Speaker B: Interesting, very interesting. And so in the encryption process, you encrypt it off chain. The light protocol wallet allows you to decrypt that.
00:20:56.540 - 00:20:59.060, Speaker A: Oh, by the way, I think I don't hear you anymore.
00:20:59.140 - 00:21:03.140, Speaker B: Hello? Am I still, am I frozen? Can you hear me now?
00:21:03.260 - 00:21:04.398, Speaker A: Now it works again.
00:21:04.524 - 00:21:06.470, Speaker B: Interesting. Okay, sorry about that.
00:21:06.930 - 00:21:07.722, Speaker A: No worries.
00:21:07.866 - 00:21:27.922, Speaker B: So the encryption happens off chain. You're then adding it to the protocol. The protocol is kind of agnostic to the data that it's sending across the network. So it's fairly easy to send the encrypted data. It's an append only. So you're making sure that you're encrypting new data on top of the old data.
00:21:28.026 - 00:22:05.626, Speaker A: Yeah, exactly. So you're just appending to that list. And so when you are, for instance, deleting a variable, you're not actually updating or overwriting the old state, you're just appending new state. And it's encrypted, so no one knows what other old state that new state is overriding. That's the essence of it. You have new questions like, first of all, how do I handle these state updates on the client? And then second of all, if it's all encrypted, how do we then verify it on chain that we still have the same security properties that Solana hash?
00:22:05.758 - 00:22:10.594, Speaker B: I mean, we love to dive deeper into both of those, for sure.
00:22:10.642 - 00:22:30.670, Speaker A: Yeah. So basically, for context, every lite transaction emits new utxos. Utxos being that's short for unspent transaction output. And you might know it from something like bitcoin. That's how they assemble. For instance, bitcoin balances. It's just a collection of different Utxos that you own as the user.
00:22:30.670 - 00:23:17.090, Speaker A: So, yeah, each of chunks of this new encrypted state is what we call a Utxo. And each Utxo, again, for instance, could be one soul that could be represented as state. Each of these Utxo has a nullifier and a commitment, and a nullifier is basically representing that. It's the Utix o spent. So the nullifier is inserted on chain. We know this Utxo was spent, and the commitment of the Utxo just validates the Utxo. So when we create this Utxo as an output of a transaction and send it encrypted on chain, we're actually also inserting a commitment of that Utxo into a global, large global merkle tree on chain.
00:23:17.090 - 00:24:36.168, Speaker A: And just important to note that the nullify and the commitment, they are derived from the Utxo in a way that when you look at it on chain, you cannot tell which Utxo that was on chain they belong to, unless you own the actual Utxo, because then you can obviously derive the whole Utxo, including the nullifiers and the commitment. So for example, say you want to send one USDC through Lite protocol. What you're actually doing is you're invalidating your preceding Utxo in the client, which confirms your ownership of one UCC, and you emit a new Utxo output Utixo, which is then encrypted to the recipient's public key, like in this case, lite account. And then this new encrypted Utxos. Utxo is dependent on chain, right? So like now if you are the recipient, Logan, you can then go and scan the chain and see. Now you have this Utxo, which basically means that now this one UCC has shifted hands from me to you without any on chain token movement. All that's visible on chain is that there's a new addition of a few encrypted bytes to a growing list of encrypted Utxo's.
00:24:36.168 - 00:24:56.520, Speaker A: And in doing so, lite procal essentially extends this Utxo model that we know from bitcoin to solana. And so basically that's how all the details of on chain operations remain private, because state is encrypted and the state updates don't happen in place anymore.
00:24:56.860 - 00:25:05.108, Speaker B: Interesting. And then the verification process on chain, at what point does that take? Process?
00:25:05.284 - 00:25:32.090, Speaker A: Yeah, for sure. Yeah, exactly. That's the natural next question. Right? You compute your state off chain in the client, you generate a proof. Because basically what happens is, and the difference there to conventional Solana programs is that. And I'll pedal back a little bit. So if you have a Solana program, it's almost always just an escrow over tokens with some unique constraints.
00:25:32.090 - 00:26:14.288, Speaker A: If you abstract Solana programs or any smart contract down enough, that's essentially what it is. Now the trick is that you can take this logic and move it from the Solana program to the client. And you do that by using so called ZK circuits. A ZK circuit is just the set of rules of circuit for when you create, when the client creates a zero knowledge proof. Now this proof encodes this program logic that you moved off chain. So we create this proof and we sent that on chain and we do that. That's basically, we create the proof with the Utxos that we have at hand.
00:26:14.288 - 00:26:44.930, Speaker A: Obviously before that, we need to decrypt them. So there's a lot you can do in terms of performance. There a lot of optimization, but you create the proof. The proof generation, let's say if you have a normal token transfer proof generation takes 0.5 to 2 seconds on your device, depending on your device. And then you send a transaction on chain with version three of protocol, which is what we launched on Testnet I think two weeks ago. Sorry.
00:26:44.930 - 00:26:56.590, Speaker A: You can basically verify that in one transaction. So it's like one transaction, you generate a proof, you send it on chain, it's verified, and everything happens there.
00:26:56.710 - 00:27:20.190, Speaker B: So when the proof is created, client side. So on your personal computer, you create that proof and then you send it to the network. Does the power of one's personal computer ultimately affect how long it will take to generate the proofs? Or are these proofs relatively simplistic enough that pretty much anybody's hardware can run these?
00:27:21.050 - 00:27:51.822, Speaker A: So when I. Great question, and it depends on the power of your device, if I say 0.5 to 2 seconds, that's using just conventional hardware. I'm using a Mac for instance, so that's a little bit faster. So I'm at 0.60.8 in a browser, and then if I'm in a node environment, that's even faster. I think what we benchmarked just using some library that I found on chain, that was a c prover.
00:27:51.822 - 00:28:56.382, Speaker A: So actually quite fast, it was like between 103 hundred milliseconds on my computer. So there's a lot of research and development that goes into that field, and it's obviously a very important field. Once we solve all the other performance issues with free, it was mostly a focus on let's get this into one transaction on chain, the whole verification part, which is also computationally heavy, and happy to dive into that and how we make that possible. But yeah, proof generation is definitely an exciting field for optimization as well. Yeah, sorry. And then depending on the complexity of your program logic, that also makes doesn't have an impact. If you have normal token transfer, it's quite quick, quite snappy, but if you want to, for instance, build a private NFT trading platform, it's a little bit more expensive computationally, so it takes a little bit longer.
00:28:56.486 - 00:29:18.730, Speaker B: Very interesting. Yeah, the zero knowledge field is one of definitely a hot topic in the blockchain world, and I'm sure the advancements that are being made there will only continue to accelerate. Do you feel like in your personal opinion, more client side operations will start to happen in the blockchain world?
00:29:19.480 - 00:30:14.440, Speaker A: Yeah, that's a cool question. There are people who argue that everything will be client side, and I think that I mean, obviously there's an interesting angle to this where you don't necessarily need to compute everything on the client proof wise. If you build something with ZK, and then if you look at ZK VMS or ZK solutions on Ethereum that also need to solve scalability, they have usually, especially zkbms, they have huge proofs. There's a lot of computation that's going on there. So they're working with recursion and these sort of things, and sequencers, which are basically just web servers to handle all these things. So there's a lot of. There's probably an infinite amount of complexity that you can unfold there.
00:30:14.440 - 00:31:09.634, Speaker A: I think for something like Solana and light protocol, obviously, I'm a little bit biased. Two things obviously. One, I think that Solana is going to be one, if not the major blockchain in the next couple of years, just for mainstream applications to build on. Second of all, I think that lite protocol will be quite successful in how it facilitates the whole privacy parts of it. I don't think that everything, 100% of traffic will be private. I don't think that's needed, because there are use cases where transparency and public state make a lot of sense. Even if you look at these private applications, where I'm personally really excited about on chain games or let's say NFT trading, you still want to have some public state in combination with private state, just because you need to have shared state.
00:31:09.634 - 00:31:27.690, Speaker A: So for an NFT trading, that would be, for instance and listing of an NFT, you want everybody to see that there's a listing. You just don't want everybody to see that the trade was executed or at what price it was sold and who was involved. So it's going to be that hybrid model.
00:31:27.810 - 00:32:00.322, Speaker B: Yeah, I do agree as well. I think that hybrid model is the path forward, especially if you can do it on the layer one. I think that makes it very unique in the sense that you're not fragmenting liquidity. You don't have to understand which kind of l two or world you're in. You don't have to worry about shared sequencers. All the benefits that we kind of love of a single shard, high throughput blockchain we get. Plus the privacy aspect that light protocol is creating.
00:32:00.426 - 00:32:38.736, Speaker A: Yeah, for sure. And there's some interesting things you said with regards to liquidity, and that's where maybe it makes sense to look a little bit at sort of similarities to if you build a ZKVM or L2 is like one of the fundamental properties is that you have a new liquidity silo that you spin up, and you have a bridge to that layer too. While we're on Solana itself, meaning that we don't batch and we don't roll up. So it's just like that. Instant settlement. Technically, you still, and that's obviously one of these trade offs. You still have a liquidity silo, and I'll tell you where.
00:32:38.736 - 00:33:33.750, Speaker A: It's basically, once you move your funds, let's say you have a public Solana address or token balance. You need to somehow inform protocol that you want to have this as a private balance. So what happens is you are basically shielding, that's what we call it, shielding your tokens from this public address into your private balance. What happens under the hood is that you put it in an escrow. There's this global liquidity pool that we call light liquidity pool. If you zoom out enough, it might look like with another layer one or L2, that's where the liquidity lies. And then we put that abstract, that Utxo abstraction on top, where then you don't have any token movements anymore, and you just exchange ownership over these utxos.
00:33:33.750 - 00:33:54.440, Speaker A: There's still this tricky question of liquidity fragmentation, if you will. It's just that with lite protocol, it's probably the closest it can be to a layer one itself. And it's like this real time thing, you can switch between the two states within one transaction.
00:33:55.140 - 00:34:03.420, Speaker B: Is that separate pool of liquidity ultimately needed because you have to enable the Utxos?
00:34:03.580 - 00:34:46.721, Speaker A: Yeah, exactly. That's exactly it. The protocol needs to know what is representing PCUt exos, and in the end it's linked to some tokenization. Unless, and this is also an interesting field, but obviously just part of lite protocol is you could not with the current version. But that's one feature that might be interesting to build into it is minting private tokens. You just mint these Utxos. Obviously it needs to be very well thought out in terms of you should not be able to burn these Utxos than to mint real Solana tokens or something like that.
00:34:46.721 - 00:35:00.265, Speaker A: So this is a more complicated feature, technically, but definitely possible. And then you don't have that bridge, but you still have that native light protocol, liquidity, if you will.
00:35:00.377 - 00:36:04.730, Speaker B: Interesting. So maybe if I could just re articulate most of the path, and if I'm wrong, please correct me. So if I want to kind of do a private transaction on light protocol, I send, say, for example, one USDC to light protocol. That is, it starts in a public address that then gets moved, moved to a private address or shielded address and that is now in a escrowed. And the light protocol software where you can then utilize Utxos from there if I want to. While it's in Utxo, it gets encrypted, you can then send these transactions or these, the encryption happens on the client side. So on your personal computer you can then send, that gets sent to another person that's still encrypted, but you submit the proof back down to the layer one.
00:36:04.730 - 00:36:24.518, Speaker B: So Solana and that entire transaction sequence from end to end is private. And then you submit the proof on the layer one. And that layer one is showing the encrypted proof saying that the transfer happened so you could go through the entire consensus. Is that correct?
00:36:24.574 - 00:36:37.020, Speaker A: Yeah, yeah, exactly. Well put. And yeah, I think there's nothing to add really. Obviously we could endlessly dive into specifics and details, but yeah, that's over you.
00:36:39.320 - 00:37:02.120, Speaker B: So with the escrow, if I send the one USDC to light protocol, the way that you're tracking that balance because all the funds are kind of in this new silo is kind of just through the, I'd say, smart contract saying that I have moved my money from my account to this new account.
00:37:02.500 - 00:37:05.372, Speaker A: Yeah. So you mean if you shield it.
00:37:05.476 - 00:37:26.140, Speaker B: Initially or so ultimately, I guess my high level question is once I move my money into a shielded account on Lite protocol, and those technically assets are with other assets, how are you doing, or lite protocol doing the tracking of those assets in that new pool?
00:37:26.260 - 00:38:45.970, Speaker A: Right? Yeah. So light protocol itself, just like anyone else except the user that owns the Utxos, doesn't know which part of this global liquidity pool, which is essentially just a token account, right, belongs to whom? It doesn't know the specifics. What happens is that once you shield initially, you transfer it from your public Solana balance to this token PDA on chain, and in exchange you get this ownership node, like a Utxo that says so and so owns the person that is able to decrypt this Utxo locally, owns one USDC for instance. Then basically when you exchange tokens, then, or you have an NFT that you shielded, and so you want to move it into NFT trading or whatever, you're basically just working with these utxos, not with the actual token anymore. And then if you eventually want to unshield, so you want to move your tokens out of light protocol into regular Solana addresses, then it's just a reverse process. The UTxO gets spent and in exchange the tokens get withdrawn from this PDA.
00:38:46.090 - 00:39:06.100, Speaker B: Interesting. Now it makes sense, I guess, in this scenario, do you see maybe even on Ethereum or just the L2 landscape in general, do you see Utxos becoming a more dominant account model than just purely accounts?
00:39:06.210 - 00:39:54.736, Speaker A: Great question. So I just recently saw that there's always new projects popping up that want to introduce privacy, and there's some really exciting ones. I think that if projects like, for instance, aztec network, aztec network is basically building a, they don't call it ZKVM, but it's a scaling solution that also has built in privacy L2, Ethereum, and they're utilizing their tech, is extremely similar to what we're building. Just that with the difference that with Solana, we inherit the scalability and speed of Solana. So we're very lucky. We don't need to build the whole scaling, which is extremely hard. Obviously, we don't need to build that.
00:39:54.736 - 00:40:45.706, Speaker A: We can just focus on privacy. But if solutions like astec, you know, eventually launch, and in fact, first iterations, they've already launched, one or two years ago, I think was their first iteration that's already utilizing this Utxo model. So I think just like with Solana, there's definitely that space for utxos. Just because utxos have these nice privacy preserving properties, there's definitely that space. A whole different question then is, okay, will Ethereum serve a significant amount of mainstream applications where users actually care about privacy? I think that's a different question. And my personal biased answer is that that will not necessarily be the case. But yeah, that's a separate one.
00:40:45.818 - 00:41:00.308, Speaker B: Yeah. In your point of view, I would say just being more close to the zero knowledge side of the world how these proofs get created. What is your thoughts on the technology being used for scaling, specifically?
00:41:00.444 - 00:42:00.960, Speaker A: Yeah, I mean, I think it's super exciting, obviously. I mean, unfortunately, I don't spend too much time on going deep into the specifics just because what we're doing is already so all encompassing in terms of focus. But there's some really interesting tech that can also then potentially be applied to, to just for privacy on Solana, or if it ever happens, technically, layout twos are, you can build a L2 on Solana as well. It's just right now there's definitely no need for it at all, because Solana has a lot of block space and it scales with hardware. So if there's ever more demand than block space, I think when I asked Anathaly that question, his answer was just two words, or essentially just like, yeah, more block space. They'll just increase the hardware requirements for validators. So I don't think L2 scaling is that interesting for Solana yet.
00:42:00.960 - 00:43:04.522, Speaker A: I think there are some people building something in that realm on Solana, or at least trying to bring Solana scalability to cosmos with ZK. So that's interesting. But yeah, there's some really interesting elements of that on Eth, right, where there's not only snarks. The cool thing about CK snarks is, and I won't go too much into the details there, but the cool thing about snarks is, and ultimately why we chose it as well for lite protocol and Solana, is that they're extremely small proofs. So they fit into, they're less, I think they're like 800 bytes or even less for these proofs. And they're succinct, which means that the proof size doesn't actually grow with ongoing complexity. So what that means is we can actually stuff these bytes into a single Solana transaction, which Solana transaction has slightly more than 1 limit right now, just in terms of size.
00:43:04.522 - 00:43:44.734, Speaker A: And there are other proofs though, that have other cool properties, like faster verification time or just other cool things. There's starks, which obviously built by Starknet and Starkware. I think you even talked with their team on your podcast as well before, extremely smart engineers and researchers. And the thing about why we can't use stocks is they have cool properties, but the one drawback is their proof size is in the kilobytes, so they have huge proofs. And so not feasible for Solana, but definitely feasible for stocknet or other layer ones.
00:43:44.822 - 00:44:05.336, Speaker B: Very interesting. Maybe shifting a little bit back to light protocol. What are some of the things that you envision engineers on Solana using it for? I think the term you guys are kind of corning is the private Solana programs. Can you talk a little bit about that as well?
00:44:05.408 - 00:45:06.052, Speaker A: Yeah, for sure. That's what I'm really excited about, actually, is like we've built this primitive that allows you to build privacy program logic that is private, and state transition that is private. And yes, we coined it private Solana programs because I think it's quite catchy and it sort of shows a little what's possible. I think I highlighted it a little bit in the beginning, but personally, I'm super excited about gaming. Just in terms of that, in combination with mobile gaming, is this design space where you can really, it's not hard to imagine mainstream adoption with some on chain game, especially because with mobile gaming, there's just this huge distribution. If we ever figure out how to. If Solana apps ever figure out how to reliably get on the Apple App Store, that might be one of the distribution challenges there, but super exciting.
00:45:06.052 - 00:45:40.360, Speaker A: And then on chain games, if you put them wholly on chain, you need privacy, you need CK. We've been talking to a couple of individual developers already with regards to gaming, and they're super excited about building trading card games on chain. So I think that's what I'm really looking forward to. And then there's. And maybe that's a little bit of a hot take. But one thing that to me makes a shit ton of sense is payments, right? That's what bitcoin was built for. In the beginning, it was like payments, like super lame use case.
00:45:40.360 - 00:45:54.700, Speaker A: But I think that while at least on Solana, this market is basically non existent right now, I think that is one of the biggest, highest potential markets to emerge in the next. Hopefully coming.
00:45:55.000 - 00:46:42.158, Speaker B: Just looking across all blockchains, I think arguably the most clear use case is payments. It's funny, just after all this time, payments and simple transfers of USDC across the world is probably the best thing that we've come up with. But especially on high throughput blockchains like Solana, the fees to send it are fractions of a penny. And obviously it makes sense if you could encrypt that in some form or fashion, I'm sure most people would opt into it. As you said, even with treasury management salaries, there's a lot of use cases that make sense to have that privacy preserving aspect included. And I can definitely envision a lot of people leaning into what you're building.
00:46:42.284 - 00:47:16.748, Speaker A: Yeah, for sure. So yeah, there's these two themes, right? There is what is happening with web two right now, for instance, payments that we can translate really well with blockchain and into blockchain. And that's where I'm like, okay, payments is really like. That's an actual need for people. That's an actual use case. Like merchants save so much money if they use Solana. I think there's a couple iteration steps on how do you get people onboarded to wallets and then obviously regulatory questions that sort of just stand in a way.
00:47:16.748 - 00:48:05.610, Speaker A: And I am super, super certain, very convinced that in the next couple of years that will go away. And then you have blockchains like Solana, where they really shine, as you said, super cheap, super fast. That's what you need. I think it's harder to imagine bitcoin or if layer one to be used as the payment pipes and rails of the next visas and mastercards. So that's one thing. And then with regards to new use cases that are enabled by blockchain that we can't even, that don't exist in web two, that's where I think by definition it's really hard to imagine these use cases a priori. Right? It's extremely hard.
00:48:05.610 - 00:48:30.184, Speaker A: But I can imagine that with games, obviously there are games and there will always be games, but maybe there's some new, especially tokenization and how do you organize groups and daos and these sort of things? I think that in gaming there's this whole new canvas of things that the new generation of developers can dream up. And yeah, that's really what excites me there.
00:48:30.302 - 00:49:21.942, Speaker B: It's remarkable that one hit game on blockchains today would ultimately surpass all kind of active addresses ever in crypto. And I think that only highlights how early we truly are. But I definitely echo all your statements. I think what you're building is really going to push the space forward in thinking about privacy a little bit more. But also again, as we were talking about on the high throughput chains that are very cheap, that are easy to use, it just makes that entire experience just a little bit more seamless. So kudos to you for picking a high throughput chain. I think that's going to be more and more kind of a non negotiation for engineers.
00:49:21.942 - 00:49:39.050, Speaker B: I think that's going to be the de facto going forward. I think it'll just take a little bit time. But in terms of like where you are at adoption, I think you said you're at v three or ultimately going to be close to v three. Where's the product stand today? Can people use it? And if so, how so?
00:49:39.170 - 00:50:24.330, Speaker A: Yeah, great question. So we three is this whole thing around private Solana programs, right? Like basically taking the idea of what we have online. So what's online on Mainnet right now and has been for over a year is what we call v one. So we sort of like skipped b two just because. So v one is just like Zcash on Solana is like token transfers and you can go in and out and you can transfer privately. And so that's on Mainnet and people are using it. I mean it's this quite niche market of people using it to fund their burner wallets privately to then go and do Jupyter swaps or buy nfts privately.
00:50:24.330 - 00:51:11.260, Speaker A: So that's the users that we have right now. And then with the three that's on Testnet right now. So we've spun up our own testnet, which runs on Kubernetes, is basically a Solana test validator running on Kubernetes. We spun up the Testnet and people can build with it. We have a CLI and SDK, and people can go check out the docs. There's one or two guides they can start dabbling with building a private Solana program. That's where a lot of our engineering effort right now is also going into listening to some of the user feedback and working with some of our partners to bring some of these integrations and apps to life.
00:51:11.260 - 00:52:00.356, Speaker A: Yeah, I hope. I mean, the actual delaunch on Mainnet is limited by one thing mostly, which is that the Solana runtime needs to still activate a feature that we've built end of last year, which is a precompile for the ZK snug verification on chain. And that's how this heavy computation is essentially packed into one single instruction. I think roughly 200,000 compute units and a single transaction can have a million or a million .4 compute units. We've built this precompile, it's merged, and it's in that list of feature activations for Mainnet and public Devnet. I hope.
00:52:00.356 - 00:52:13.130, Speaker A: Personally, we're obviously lobbying for getting that activated ASAP. But, yeah, I hope that by the end of the summer it's live. And then hopefully we'll have a bunch of integrations already at the start.
00:52:13.250 - 00:52:24.762, Speaker B: So the proposal is already approved, it's just waiting to get integrated into Mainnet or it's up for approval, still needs to get approved and then merged into Mainnet.
00:52:24.866 - 00:53:01.998, Speaker A: Yeah. So the process is that you have these prs that you can make because thankfully Solana is open source and it's been reviewed, it's been merged into the master branch, and it's already cut for the release 116, which is currently. I think they're just starting to put it on Testnet now. It's part of the code base, and then it's really just activating the feature. But it's this process. Given the recent Solana outage, things have been slower than anticipated. Yeah, sometime, hopefully by the end of.
00:53:02.014 - 00:53:10.230, Speaker B: Summer, we'll have it perfect. Well, I'm glad that it's merged and going into testnet. Good things to come then, shortly.
00:53:10.350 - 00:53:11.710, Speaker A: Cool. Yeah, for sure.
00:53:11.830 - 00:54:09.274, Speaker B: Awesome. Well, definitely appreciate you walking us through all this, when I appreciate the technical nuance, but ultimately, what it will enable for people that are using Solana. Having private transactions, I think, is something that we've been accustomed to in the web two world, but with open permissionless ledgers, everyone needing to verify the state of the chain and how things work. We've kind of started back at square one and we're leaning towards people like you and your co founder and the Lite protocol to rebuild some of these primitives we've been accustomed to. And it's taken a little bit of time, but extremely excited for what you're building and how you're pushing the space forward. I'm sure a lot of people will ultimately adopt this technology.
00:54:09.442 - 00:54:37.116, Speaker A: Awesome. Yeah, for sure. Well put. And I mean, you know, there's this whole new angle of like, okay, then how? Well, that's the technological side that we've many discussed. Then how do you think about go to market and actually getting people onboarded to protocol or any of those decay layers? Eventually, that's a whole different topic to discuss. But yeah, great talk.
00:54:37.148 - 00:54:44.040, Speaker B: Can you maybe a quick one or two minute spiel on how you are thinking about the go to market?
00:54:44.950 - 00:55:46.120, Speaker A: Sure. Yeah. I mean, we thought about this a lot because by definition, the goal eventually is you want to be embedded into the ecosystem. You want to make sure that all wallets, all block explorers support your infrastructure. And that goes for many. Not only light protocol goes for many infrastructure providers and protocols, but with lite protocol, obviously that's very important because privacy is, there's this, I've written this blog post over a year ago about UX and privacy, and as you can see in web, two people really, really happily say, well, Google collects more data about me than Duckduckgo, for instance, but it's much more convenient to use it, better results and so on and so forth. Now, arguably with OpenAI and chat GPT, you could say that chat GPT is even more convenient.
00:55:46.120 - 00:56:40.020, Speaker A: But the essence is the same. It's like you need great ux for things like privacy to be adopted. And so there is, and then you have this sort of spectrum as well between, you have use cases where people will go through some pain to achieve privacy. If you have an NFT whale and they want to sell or buy a huge portion of NFTs without disrupting the market, now they need an option to do that privately. So they have this very specific use case and they will pay for it and they will go through one or two steps and then you have on the other end you have this, I don't know, regular payments, you don't even want to, just want to go to your wallet. You want to click send. And if it's private with SSL encryption nowadays, that's cool, but I don't know if you remember browsers.
00:56:40.020 - 00:57:21.202, Speaker A: Ten years ago, SSL was not the default and so you had to install manual stuff and SSL was slow as hell. It was actually more convenient to not use SSL. So you need to reach that threshold with privacy in terms of just technological, but then also accessibility. Now, I think with v three, we've basically reached a technological threshold of like now is extremely fast, extremely cheap, just as cheap as a regular Solana transaction because we're using compressed accounts. That's. There's a whole new thing of where there was a lot of buzz recently. So we've reached that technological angle.
00:57:21.202 - 00:57:38.472, Speaker A: Now it's about accessibility. Right? Like, you need to work with the wallets to basically integrate privacy at the very, very base level of like, key management even. That's what I'm excited about as we roll this out, is working with some of these providers.
00:57:38.576 - 00:58:20.962, Speaker B: Yeah. Again, I think ultimately this highlights the single shard thesis, being able to be integrated into all the block explorers on a single shard, being a unified standard instead of having hundreds or millions of different roll ups with their own different standards, their different set of Ui, their different block explorers. So, again, no, it's very interesting. I think you picked a beautiful place to build, and I'm very excited for people to adopt what you have built as well. So again, thank you so much for coming on the podcast. When I wish you and the light protocol team all the best, I know you guys are going to kill it, so thank you.
00:58:21.066 - 00:58:22.690, Speaker A: Thanks, Logan. It was great to talk.
