00:00:03.120 - 00:00:11.382, Speaker A: Can you speak to end user kind of verification and why that is such an important aspect of blockchains.
00:00:11.486 - 00:00:26.330, Speaker B: If we lose end user verifiability, we're basically letting a few node runners, 100 or like 500 people that have access very heavy compute that is able to run a full node for the network. We're basically trusting them.
00:00:28.400 - 00:00:43.624, Speaker A: Well, today I'm super excited to be joined by Jim, the founder and CEO of Sovereign. We initially met in New York and kind of nerded out about different scaling solutions and how blockchains work. So I think it's going to be an amazing conversation. Thanks for joining me.
00:00:43.752 - 00:00:46.820, Speaker B: Hey Logan, thank you for having me. Quite excited.
00:00:47.240 - 00:01:14.238, Speaker A: Likewise, likewise. I always appreciate fellow people that can nerd out on the different technology solutions and I. You've obviously spent a great amount of time in this world and I think even in the past at the Ethereum foundation or working on ethereum clients, maybe like prior to just jumping into sovereign and what you're building there, can you touch just slightly on your background and how you kind of like got into this whole crazy blockchain world?
00:01:14.414 - 00:01:25.848, Speaker B: Totally. And to correct, I actually did not work on the Ethereum Foundation. I worked on the Teco team, which was one of the teams developing the consensus clients for the.
00:01:25.944 - 00:01:27.720, Speaker A: Perfect. Awesome.
00:01:27.880 - 00:02:19.990, Speaker B: Yeah, so my background is I'm from Istanbul, Turkey, and I think that gives me kind of a unique perspective on how impactful blockchains can be. That's like my, like my background in Turkey I think has like always galvanized me to work towards like blockchains and better coordination tools for humanity. To be fair, I'm very much interested in the infrastructure side and there are a lot of very impactful people building the applications themselves, like Kevin Owake of Gitcoin and many people building on the application side of these actual coordination tools, but the infrastructure side of things, making the scale, building very high scale blockchain system so that we can at some point, in some way coordinate better with other humans. That's very exciting for me.
00:02:20.450 - 00:02:21.390, Speaker A: Totally agree.
00:02:23.010 - 00:03:44.380, Speaker B: I think solid institutions that don't decay as you live in a country and personal liberties, these type of stuff are taken very much for granted in the west because institutions are solid and they're working so well that nobody are questioning them, I guess, too hard. What I mean by that is the use case of blockchains kind of gets mocked a lot by the general public in the west because people can't see the immediate use cases. And that's quite reasonable for most people because they're living under very strong institutions. Whereas outside of the west and most of the world, the human run institutions decay all the time and lead to corrupt governments and people's personal liberties getting taken away. People's lifestyles, different lifestyles being forced on different people. So a new coordination tool such as blockchains has always been extremely, extremely interesting for me to work on.
00:03:44.840 - 00:04:48.928, Speaker A: I fully agree. I mean, and for that exact reason as well, I think brought me into the industry, just the possibility of self sovereignty to everybody in the world. I was like, this is the technology that I want to work in for the next decade. Plus that ability to kind of control your own money, to either control your own data from like monopolies that exists in the US, building kind of social applications, or being able to hold your own money, I think is a very exciting world. And I think originally what got me so interested into ethereum and the entire ecosystem, it is a fascinating thing. I think what you're building at sovereign is kind of a key component to bringing this to the masses. And so very fascinating kind of background and definitely kind of gives clarity to some of your thoughts or why you're so passionate about the industry.
00:04:48.928 - 00:05:01.800, Speaker A: Could you talk about kind of on a high level, what problems do you think still exist in the space today? And what are the biggest challenges that need to be addressed so that we can continue to kind of scale the industry as a whole?
00:05:02.220 - 00:05:58.506, Speaker B: Yeah, totally. So I think since the time that I joined industry, I joined industry around 2017, and proof of stake and scaling conversations were at full speed. I think scaling conversations have been going since bitcoin in like 2013. And people that were like hyped up, there were even like L2 solutions back then. And I think since 2017, we just developed a mental model on how we can scale these blockchains without like losing end user verifiability. I don't think we have seen many real life applications or like big leading projects adopting these solutions yet, although many teams are working very heavily towards them. For example, a few mental models are just roll ups.
00:05:58.506 - 00:06:07.030, Speaker B: Everybody now really understands that if you combine data ability with rollups, you can achieve scale in a way that you don't lose end user verifiability.
00:06:07.930 - 00:06:16.870, Speaker A: And can you speak to end user verification and why that is such an important aspect of blockchains?
00:06:17.730 - 00:07:31.270, Speaker B: Yes, totally. So if we lose end user verifiability, we're basically letting a few node runners, 100 or like 500, like, people that have access to very heavy compute that is able to run a full node for the network. We're basically trusting them and if they do decide to censor a subset of people, or if they do decide to still the steal the money of a government identified terrorist organization, there's literally nothing we can do. And since the compute happens at, like, if you don't have any user verifiability, since like, the computer happens at like 100, like, or 200, like, known big data centers, it's easy for local governments to send subpoenas, send their like, own, like, police to make sure that these networks run and obey the rules of the local governments and not the actual rules of the network itself.
00:07:32.650 - 00:08:17.448, Speaker A: So on a high level, maybe to just re articulate, ultimately the ability for users to verify the computation or integrity of the network remains true and that they individually can verify themselves. And that's kind of one aspect. The other aspect would be just the network decentralization itself and having kind of sufficiently disperse and high node count such that no specific entity or country could kind of like subpoena all the nodes and have effectively control of the network. Correct?
00:08:17.624 - 00:09:04.500, Speaker B: Yeah, yeah. So if most users have end user verifiability, when this, like, random government tries to enforce the stealing of the funds from like an entity that they deem as a terrorist organization, then users just can see that there is one invalid transaction trying to steal money from people, and people will just like reject that update. Whereas if you don't have end user verification, then people won't be able to do that. People will just keep following whatever the big nodes, like the full nodes in this network are running. And so it is critical for the value add that I am believing in blockchains for the blockchains to have end user verification.
00:09:05.200 - 00:09:49.590, Speaker A: Fully agree. I think this is a super important topic. And I think one aspect of this has really been light clients. And I applaud the celestia team for pushing the space forward and kind of what they've done with light clients being able to add trust minimization if larger nodes ultimately do happen. And so I think that is very one interesting aspect outside of end user verification, I mean, are there any other large problems that kind of got you thinking about that needed to be addressed and ultimately kind of birthed sovereign and what you started to build there?
00:09:49.930 - 00:10:45.226, Speaker B: Yeah. So the main problem that started sovereign from both Preston and Isaac point of view was just how we can scale this end user verifiable censorship resistance system to the masses. And along the same time, we were both reading the Celestia like lazy ledger whitepaper at the time. And being an ETH two core developer, I had always been seeing conversations and problems around data ability. Dankra had some data ability scheme for ETH two at the time, but I wasn't too sure what it meant. And I was just an implementer in my mind, and I was just coding away, looking at the specs, and I didn't look too much in depth. But when I had the time, when I stopped being e two dev and when I was reading the leisure paper, databuilding in my mind clicked techniques like database sampling and data availability custody.
00:10:45.226 - 00:10:59.710, Speaker B: They really do let us scale data in a way that we can't scale compute or just general, like blockchain execution. So that's when I was like, oh shit, like things are going to move fast in the next few years.
00:11:00.450 - 00:11:10.910, Speaker A: Could you talk specifically to that realization or what made it click for you and maybe even share some of the technical aspects that you're excited about as well?
00:11:11.290 - 00:12:07.878, Speaker B: Yeah, so like the, the, like the, for me, what made me, what made it click is that you add more light nodes. Like you had more light clients. And the more, like light clients that are to sample, like the full nodes, more you can increase the capacity that you can pass through full nodes. So that was like, in my mind, wow. Like the more we add like these, like end user verifying nodes, more we can scale the blockchain, at least one part of blockchain. And so once we scale one part of blockchain, that gave me a lot of optimism that we can scale the other parts, that we're just like missing a few pieces, but we're slowly, like getting there. When I was referring to mental model in the past, around like 2017 or so, one of the best mental models we had for scaling blockchains was like shuffling around validators, like making the committees of the same validator state, doing different computation work and then merging them.
00:12:07.878 - 00:13:16.460, Speaker B: And it was like, as you can now in retrospect, see, those were like very simple ideas. But now seeing that there's a special technique to scale one layer, I was like, if that's the case, then we can probably have other techniques on the higher layers to finally achieve a truly scalable blockchain for the masses. I read that, I got super hype. I started thinking about how we can build roll ups on top of pure da layers, because pure Da layers don't have the problem of trying to, trying to scale this l one smart contract or the l one execution layer. And it's hard to build a protocol. And although my dream has always been to build a globally innovating tech company, and this was a major problem, major problem space that I'm now seeing some initial traction on the data side and now execution side needs to happen. I was super excited but really didn't know what to do next.
00:13:17.600 - 00:14:15.700, Speaker A: Amazing. Yeah, it took me a while to kind of understand the data availability problem as well. In speaking to a lot of smart people and kind of just reading a lot of white papers. It is an interesting problem and I definitely applaud Celestia and their approach. I think it's super novel and they truly have pushed the space forward in the light client sense maybe speaking specifically to sovereign and your thought process there, ultimately building out sovereign while allowing users that end verification piece while having the ability to post these proofs on very fast data availability layers that ultimately allow for high scale and I high user transactions and engineers to build like more interesting applications.
00:14:17.000 - 00:15:33.976, Speaker B: So yeah, yeah, so the sovereign came about after thinking like seeing that this now like we need to scale the execution layer. Preston and I were thinking how you can have, how you can have as many different execution layers talking to each other in an almost composable way that smart contracts talk to each other today and as a result really utilize all the bandwidth that DA can provide. Because DA can provide almost infinite bandwidth. Given that you really believe in data ability, sampling or custody type techniques, the scaling on the side is going to be there. Now we need to somehow build almost composably growing set of execution layers side by side. And that's the gist of sovereign, the basic idea of sovereign, we define it as the Internet of roll ups. We think to utilize the whole Da bandwidth that's going to come online in the next few years, we need to have execution environments.
00:15:33.976 - 00:15:49.120, Speaker B: And that in our, my view is going to be ZK roll ups that almost compose with each other, send messages back and forth, and all are connected very deeply with each other that you can do with ZK rollups.
00:15:49.580 - 00:16:26.338, Speaker A: Can you speak to the aspect of composability and why you want to preserve this? Because I think Ethereum originally in the community was extremely excited about composability. And then ultimately it kind of got, I would say, a little bit frowned upon just because with some of the kind of design choices that Ethereum ultimately decided to do with like L2 can break some of that composability. But can you speak to what you're doing specifically with sovereign and like how you're ultimately engineering it such that composability still remains intact?
00:16:26.494 - 00:16:36.498, Speaker B: Yeah, so there are a lot of different types of composability and the word composability gets thrown around a lot in a way that it confused a lot of people. That is synchronous.
00:16:36.554 - 00:16:44.738, Speaker A: That's the entire space. It's a lot of words that often get used interchangeably, that don't make sense totally.
00:16:44.834 - 00:17:38.634, Speaker B: There is, first of all, synchronous composability, which is probably the creme de la creme of composability. It's the most basic way to define is the hotel and train problem starting. Like, if you're. You want to be able to craft a transaction that says if you purchase the hotel ticket, then if you are like you, you're trying to buy a hotel and train ticket. And if you're unable to purchase the hotel ticket, you also shouldn't purchase the train ticket. So if you have like both hotel and train, like, purchasing applications on the same state, this is super easy to do, and it's doable in Ethereum and like, applications. But if you have them living in different shards or different roll ups or different app chains, this is quite hard.
00:17:38.634 - 00:18:38.980, Speaker B: This is impossible. As far as we know today, atomic composability is really nice. And for some defi apps, it's necessary. And we think that's why even in a world, a lot of app chains, the synchronous composable tool of its place. And there will be a few general purpose hubs that provide sync, that have a similar model to EVM today, and how it provides synchronous composability for the apps that live on top. But then there's composability of basically roll ups. And what that means is that between regular app chains that have different consensus sets, you can see reorgs and you can see like weak link in the chain of like in the, in like the set of chains that you're sending messages in between that go down and you like run into security issues.
00:18:38.980 - 00:19:42.564, Speaker B: Whereas like, when you're sending messages across rollups, since they are part of the same global clock, you can send like secure messages. And if something happens to the base layer that they work on, they all reorg together, or they don't reorg at all. So, sending messages back and forth between rollups makes them almost composable. You can send a message and know that next time the message, you can send the message to other roll up, and then know that that will be securely processed on the other roll up in the next block, or like whenever you're able to finalize the existing roll up that you're sending the message from. So currently, this is super hard with roll ups on Ethereum due to two reasons. One, optimistic roll ups have really long finality times like seven days. And so when you're sending that like outwards like message, it literally takes seven days for the action, minimum seven days for the action to be complete on the other roll up.
00:19:42.564 - 00:20:27.852, Speaker B: So you can't really like mental model wise as an application developer, think of composing different apps and making them work together. In ZK rollups. This is supposed to work really well because you post a ZK proof, bam, you're able to verify the correct state. On the other side, you should be able to send a message. However, verifying ZK proofs, although a very low effort thing to do for a regular phone or your computer, for Ethereum, it's quite expensive. Almost all ZK roll ups today wait for a long time before they post their proofs. So they batch a bunch of like block proofs and they post them all together at the same time so that they like save on verification costs.
00:20:27.852 - 00:21:19.180, Speaker B: Like Starkware I think like costs around every 12 hours or so. So now, like you don't have seven days delay, but you have a 12 hours delay due to the very high verification costs on the Ethereum model one. So even now, when you're trying to compose roll ups on like compose ZK roll ups, like you're composing them at like every 12 hours, like sending messages every 12 hours, that really doesn't work well. What we want is you want to be able to really aggregate all the proofs from all the ZK roll ups so that verification is done once for all the ZK roll ups. And it's quite cheap as a result. It's just like part of a natural part of like the, like the state transition of the roll up. And so you can get, you can receive messages from all the other ZK roll ups with just a single or two block latency.
00:21:19.180 - 00:21:30.860, Speaker B: So you can build applications that depend on each other across different roll ups, because that's how we achieve scale. When these different state machines talk to each other seamlessly.
00:21:34.160 - 00:22:39.040, Speaker A: That makes sense and definitely appreciate the in depth explanation, maybe just to rehash it for some of those that are not as technical with optimistic roll ups, because you have the fraud proof, there's that seven day challenge window. And that makes it very hard to do interesting things with rollups today on the composability side, validity proofs or zero knowledge proofs ultimately will kind of make this much better. But today, because ethereum doesn't have that much block space and compute is relatively expensive, it's expensive to post these proofs on chain. And so the aggregators of these validity zero knowledge proofs are waiting twelve plus hours. And that just makes it much more challenging. And so what sovereign is trying to do is aggregate these different proofs or zero knowledge rollups across these chains and kind of batch them into one, allowing you to have much faster kind of finality time across these individual roll ups.
00:22:40.010 - 00:23:33.590, Speaker B: Yes. So that is one part of our vision. First of all, we want to make launching a ZK roll up as easy and or even easier than it is to launch a blockchain with Cosmos decay today. So Cosmos today allows you to launch your business logic as a standalone blockchain very easily. We want to achieve that with ZK rollups and even easier. And also since launching a ZK roll up, like we handle basically the cryptography and the proof system for the user, we want to, like, we're integrating the proof aggregation system inside this roll up generation so that all of the proofs of all, like any different roll up that's generated with sovereign SDK, can be aggregated and verified very easily.
00:23:35.040 - 00:24:07.350, Speaker A: So maybe provide, or if you could give a couple of examples of how you think this would work out initially, maybe there's a dozen kind of roll ups today. Some of them are optimistic flavors, some of them are zero knowledge. Could you provide an example? Or maybe not even the ones that exist today, but in the first iteration of sovereignty, who do you believe are going to be using the system to aggregate these proofs to ultimately batch them to ethereum?
00:24:07.730 - 00:24:43.342, Speaker B: Yeah. So we generally don't take a stance on the customer target who might want to use sovereign. We think almost all blockchain applications today will benefit a lot from the scale and speed that the sovereign SDK will provide. But to give an example, right now there are a bunch of ZK roll up teams that are coming online like ZK sync, like Polygon. ZKVM came out. Starkware is, I think, in production. And so these teams don't actually share like the proof verification costs.
00:24:43.342 - 00:25:31.120, Speaker B: And I had friends in the industry trying to like coordinate these teams that come together and like create like a verifier for all the different proof systems, all for all these teams, so that the proofs can be aggregated and the costs can be shared. I this is basically a political problem and it's really hard to do. But the teams that will be building on us are not people that are trying to build their own proof systems. They're not trying to own the stack vertically. They're just application devs that want to connect with other applications as easily and seamlessly as possible. We're talking with Defi teams that we're talking with people that are also starting new types of protocols. They just want launches EK roll up.
00:25:31.120 - 00:26:47.340, Speaker B: And they also want to be connected. So they really like don't have much opinion other than they want to use a platform that provides them seamless connectivity. And so what will happen once they start building and launching SQL apps with sovereign SDK is that after every block of these applications, these ZK app chains, ZK app roll ups, their provers, which are incentivized internally, will generate the proofs for each individual roll up. And somebody else, like some other party who doesn't need to be trusted, who's just incentivizing the system, will come in and as a cheap operation will aggregate all those proofs and submit it to each roll up as part of a special transaction. And so these will just be incentivized parties that are part of just incentivized parties, like validators that are incentivized today. As a result, we think connectivity will be quite seamless in sovereignty.
00:26:47.680 - 00:27:40.970, Speaker A: One of the things that has become a large topic in the industry now that Ethereum is moving towards these L2s, has been the topic of single centralized sequencers. But ultimately the conversation is then kind of moving towards Ri. These sequencers are centralized today normally, typically one entity. How do we decentralize these over time? And now there's a couple solutions ultimately popping up to help teams. Decentralized sequencers, how would you say, particularly with sovereign, how would you either compare and contrast sovereign to kind of decentralized sequencers? And what are the main kind of technical differences on a large, kind of larger scale?
00:27:43.190 - 00:29:04.750, Speaker B: Yeah. So to start like centralized sequencers, even with force inclusion on the base layer, is really not a model that we like. And the reason is most of the censorship that's like most of the censorship that you, that is quite problematic for a user is the one that matters to do in a matter of like 5 seconds, but not like five minutes. Because if you're trying to like get out like a, you're trying to get out of a like leverage like position on some amm, it really matters that like your print transaction gets processed in the next like block or the next few blocks rather than in the next 60 minutes. So we definitely think like real time censorship resistance is the actual factor that needs to be talked about more when talking about roll up censorship resistance. And the current schemes out there really aren't getting great solutions for that. One of the things that we're excited about this is still a very uncharted territory and there are a lot of teams trying to invade in this area and we don't really hold too strong of an opinion.
00:29:04.750 - 00:30:11.918, Speaker B: And the sovereign SDK is built in such a way that through our module system we can integrate different sequencer solutions. And to start we are providing a centralized sequencer purely for testing that's complete and will be out this week. And the next decentralized and secure option that we're going to provide is going to be base sequencing. Base sequencing was an idea that we've been thinking about for a long time. Justin Drake made it quite popular recently and we think there are some like, we think there are some nice schemes to be built incorporating base sequencing and potentially centralized sequencing too. And we're exploring potentially providing almost web two type soft confirmations alongside of like a sensory persistence base layer. If this centralized sequencer is trying to censor you.
00:30:12.054 - 00:30:16.902, Speaker A: And for those that don't know, can you share more about what base sequencing is?
00:30:17.086 - 00:30:33.820, Speaker B: Yeah, base sequencing is just that, whatever like the base layer, like the DA layer validator wants to include in the blockchain becomes like part of like the canonical roll up chain.
00:30:34.640 - 00:30:40.380, Speaker A: So at the point that the transaction or the proof is included into the base layer one.
00:30:41.320 - 00:31:01.976, Speaker B: Yeah, so like let's say like there's like there are people like ten people who send transactions. The base layer like block leader picks seven of those and puts that into its own like daylayer block. All those seven transactions are now part of the canonical roll up chain. That's basically it.
00:31:02.128 - 00:31:30.020, Speaker A: Gotcha. Gotcha. And maybe to wrap it back to sovereign. Ultimately what you and the team here have created is the ability to generate a zero knowledge proof of these aggregates, proofs across blockchains, kind of a recursive proof if you will, that will submit down to the base layer. Is it specifically ethereum or are you kind of base layer agnostic?
00:31:30.420 - 00:32:05.330, Speaker B: We're completely base layer agnostic. We started trying to build roll ups in purely sovereign ways so that we can, the user has the option to port their roll ups on whichever da layer they want. We're currently supporting Celestia. We have our Celestia adapter where the Polygon avail team is working on. Avail team is working on an adapter so that the users can deploy on their roll ups on their DA layer as well. And over time we want to support almost all the DA layers out there.
00:32:06.070 - 00:32:40.570, Speaker A: Makes a lot of sense. I like the approach and so ultimately we'll just by creating the proofs, as you mentioned, that was initially kind of expensive, especially on Ethereum, because it's cost quite a bit with block space and amount of compute that Ethereum has available today, will sovereign be similar in the sense that initially it will be slightly more expensive or similar costs, but as you scale and as you get more roll ups utilizing sovereign, that cost is shared and then ultimately decrease for every individual participant.
00:32:41.030 - 00:33:16.030, Speaker B: Yeah. So in Ethereum there is one single execution layer that has to process all these fraud proofs, all these validity proofs. Whereas in ours we don't go through a bottleneckable like layer one. All the proofs are aggregated and they're submit to individual roll ups as single transactions. So every individual roll up will process that one transaction. But after that we are not going to pay extra for this, for using this one enshrined layer.
00:33:17.660 - 00:33:48.290, Speaker A: Amazing. Maybe speaking a little bit to some of the more like technical aspects that you built in with or that you have built at sovereign is kind of zero knowledge or roll ups and ability to kind of do the proof generation in parallel. Could you speak to that? I'm kind of, I love parallelism. The ability to do anything in parallel I think is great. So if you could speak more to that. I think it's an interesting point that you've built into sovereign.
00:33:48.630 - 00:34:58.646, Speaker B: Yeah. Over the summer, my co founder Preston worked with residual team to come up with a scheme to like that basically allows you to throw almost infinite GPU's and gain infinite parallelism for proving ZK rops. One of the most bottlenecked parts when it comes to ZK proofs is, especially for starks, is the fast Fourier transform. And because it takes n log n time. And what we came up with over the summer is a way to take an execution trace and split into like so many, like almost infinite type, infinite number of pieces so that you can like now compute the like FfT not over the whole execution trace, but on like small execution traces and you can tie them back together recursively. As a result, you don't eat the cost of the n log n for the whole execution trace. And the more GPU's you throw.
00:34:58.646 - 00:35:10.690, Speaker B: Like, there is some constant overhead, of course, but the more GPU's throw, you're able to get like slowly lower and lower latency, given that your recursion time is quite low.
00:35:12.220 - 00:35:23.012, Speaker A: Interesting. And so are you effectively just able to paralyze this better because you're reducing that n log n?
00:35:23.196 - 00:35:36.420, Speaker B: Yeah, you're basically reducing that n log n to n. And as a result you're able to throw a lot of GPU's at like you're able to throw a lot of compute to prove.
00:35:36.460 - 00:35:37.250, Speaker A: I love to hear it.
00:35:37.340 - 00:35:37.782, Speaker B: That's fascinating.
00:35:37.806 - 00:35:46.486, Speaker A: I love to hear it. I like adding more compute. Things go faster. It makes things relatively simple.
00:35:46.598 - 00:35:51.170, Speaker B: One press, I open up a spreadsheet and I'm like, let's push this model.
00:35:54.030 - 00:36:12.780, Speaker A: In terms. One of the other big things that you mentioned was ultimately the soft confirmations and getting that to web two numbers while having end user verification. Could you speak to that as well? I think this is another big key unlock that kind of sovereign is working towards.
00:36:13.720 - 00:36:52.172, Speaker B: Yeah, the thoughts we have on the sequencing side is definitely at the research stage. It's nothing that we work on implementation wise. We're just thinking and exploring the area. But a lot of people that utilize roll ups today are very used to the idea of soft conformations like our Bitterman optimization optimism, both offer them. So people are getting used to it. So that got us thinking. If there's so much demand for like soft confirmations, is there any way we can keep those and still keep sensory resistance? And we think there are some ways to achieve that as long as you have like base roll ups.
00:36:52.172 - 00:38:00.430, Speaker B: And at the end there's a way to bypass the centralized sequencer and go directly to the, go directly to the base layer. And for that to be able to do that, we're working around with mechanisms that give preferential treatment to the centralized sequencer. For example, you post the transactions to the day layer and whichever the order of the transactions, whatever the transactions are ordered in, the centralized sequencers address, virtually gets ordered the first. As a result, decentralized sequencer is able to provide software confirmations as it does. But then if you're not including centralized sequencers like batch, you can like bypass it and still like add the transaction like directly send it to the base layer. So we're working on such designs. There are like issues, but they're definitely better than like the existing centralized sequencer designs where centralized sequencers have almost complete authority over users.
00:38:00.900 - 00:38:14.724, Speaker A: And again, maybe I miss it. What was the mechanism that you're specifically building that allows you to bypass or add additional censorship resistance in these more centralized sequencers that exist today?
00:38:14.852 - 00:38:47.550, Speaker B: Yeah, and I don't want to like, I want to clarify that we're not building today and like we see like issues. So we're just exploring. But one of the mechanisms is just reordering, like prioritizing the transactions from the centralized sequencer, we're basically model with whichever like at whichever order the centralized sequence or address arrives that a base layer from rollup virtually processes it as it was the first transaction. So that's one that would play around.
00:38:47.590 - 00:39:16.580, Speaker A: With in terms of kind of where you see the world going now in the blockchain landscape, I guess in your end state of the world, how do either these ecosystems look? Is it multi chain? Do you have a thousand roll ups? Do you have one roll up? Where is kind of your end state for things to get to global scale? I think that we all want to achieve, yeah.
00:39:17.280 - 00:40:24.438, Speaker B: So I guess thanks to working on sovereign I've been able to get into a lot of deep conversations with leading researchers in DA space and the things that are coming are honestly extremely exciting. I think the DA scaling will really surprise everyone in the next few years and we'll have actually abundant data capacity on the basis. And I do think there's going to be like a few very technically adept teams that are able to achieve that. So I don't expect like more than like three, four base layers and that become like the go to go to use like, like base layers. But on top of them I expect anywhere from 10,000 to like hundreds of thousand roll ups. This will just, I think in my opinion this is just a matter of time. I think most applications will go for app specific chains and if you want anything that should be verifiable and censorship resistance.
00:40:24.438 - 00:40:59.270, Speaker B: SDK costs go down as da costs go down. And there is almost a ten to one or maybe like 15 to one difference compared to regular compute. We're going to see a lot of the applications we have today and many more that we can think of use rollups as their backends. Sovereign SDK will likely be node js or something like that in the future. I think it's going to become very close to a regular developers toolkit.
00:40:59.850 - 00:41:26.400, Speaker A: Amazing. In terms of hundreds of thousands of rollups plus and applications having their own either app chain or rollup. What do you think the main benefit benefit to kind of the developers in that like user are? Is it specifically kind of like fee isolation or just being able to like customize the stack? I'm super interested to see how all this plays out.
00:41:26.560 - 00:41:38.756, Speaker B: I mean customizing the stack is like very interesting. Owning your own gas token, being able to run things at the start of the block, the end of the block.
00:41:38.888 - 00:41:42.960, Speaker A: Like batch like or like in terms of meV.
00:41:44.180 - 00:42:26.850, Speaker B: In terms of meV. But for like other like use cases too. Like there's like applications, like in like AMM designs or like, basically, like, customizability is something that is very valuable for most application developers. And that's why, like, people have been quite hyped up about Cosmos and substrate. But the thing is, if you really need to, like, but if you really need to adopt a validator set, like, you're not just an application developer at that point. You're basically a full fledged brokerage trying to get people to put a lot of funds. You're dealing with a lot of parties.
00:42:26.850 - 00:42:32.126, Speaker B: The barriers to entry to deploy an app chain is extremely high.
00:42:32.158 - 00:42:55.342, Speaker A: Now, I've always said that application engineers should not have to be worried about infrastructure. They should specifically just be focused on their apps and creating a great product. And I think that's one of the biggest thing that frustrates me with crypto today, is exactly what you mentioned. Application engineers need to be infrastructure engineers. And that just makes a whole host of problems.
00:42:55.486 - 00:43:28.880, Speaker B: Yeah, 100%. Even the word, even the user word app chain in the cosmos world kind of annoys me. I'm like, you should not think that the fact that you should really not need to deal with the fact that these things are chains beneath you. These are just like applications with a really high level of customizability, which is what you want and which is what you should be caring about. What we're really doing with rollups is just lowering the barrier to entry when it comes to building these highly customizable applications. Blockchain. Highly customizable and highly scalable blockchain applications.
00:43:28.880 - 00:43:46.820, Speaker B: I think it's very easy for me to see that once the barriers are actually low and the costs, thanks to the improvements in ZK and da go down, that there's going to be an exodus to building your applications as rollups.
00:43:47.880 - 00:43:56.300, Speaker A: The customization for engineers is the key factor. That is the driving belief that we'll have hundreds of thousands of rollups.
00:43:57.370 - 00:44:10.106, Speaker B: It will just provide better user, the engineers will, as a result, be able to build better products and provide better user experience. And better user, user experience will lead to more and more people adopting these, in my opinion.
00:44:10.298 - 00:44:38.490, Speaker A: And I guess one additional benefit of having so many different roll ups is the ability to play around with virtual machines. You and I talked about this quite a bit, I think, when we had lunch in New York. But where is your vision for the virtual machine world? Do you think there's going to be a couple or again, hundreds of thousands different virtual machines tailoring to the developers needs of their specific application?
00:44:38.830 - 00:45:22.290, Speaker B: Yeah, I think sovereign SDK really lowers the barrier to entry, to build a virtual machine. Now, if you're building a really cool virtual machine like move, you don't need to build the validator set around, or you don't need to build the networking and like the database systems around it. So now you can just focus on building the VM. So that makes me think that there will be a lot more experimentation on the VM side. I still see like, but vms do add a level of overhead in computation and like cost and ZK. So I still do see that like, there will not be that many winning vms in the end.
00:45:24.110 - 00:46:05.100, Speaker A: Makes sense now. Again, I love that the entire design space is being explored, many different kind of solutions. And I think ultimately we're all trying to achieve the same thing, blockchains at scale with end user verification. That ultimately allows us the self sovereignty properties that we kind of love and follow. Kind of what got us all excited about blockchains in the first place. To that point, maybe. Could you speak to just some of the cool findings that you've read recently with light clients and how that's shaped your view on the blockchain landscape as well?
00:46:12.000 - 00:47:34.258, Speaker B: I can't point out to an article that shaped my thinking, but what I can say is that finally we're coming towards an era that lite clients are not just lite clients. Low resource clients are basically fully verifying clients thanks to ZK proofs. And we're initially starting with the execution layer and now with sovereign with the fork choice of the roll ups. But over time I think we're going to see fully verifying clients of the consensus of the base DA layers. And so over time we see like what we call super light clients coming online, where with just a single proof from your RPC provider, like inferior or alchemy, you will have complete confidence that your transaction was processed correctly. Your state was like the state of like, the application was given to you correctly. So thanks to ZK and like, the innovations done on rollups and now like applying the innovations and ZK proving to the consensus clients, I think we're just a few years shy away from fully verifying the whole new modular blockchain stack in ZK and giving users completely trustless access.
00:47:34.258 - 00:47:43.630, Speaker B: This was one of the biggest criticisms of crypto in the last few years. Oh, you still trust infra and alchemy? We're actually quite soon. We really won't need to.
00:47:44.380 - 00:48:29.660, Speaker A: Yeah, the whole design space is that zero knowledge has ultimately opened up to blockchains and what they will be able to enable in the future is definitely very exciting. Maybe just wrapping up the podcast, you have some great blog posts. I definitely invite all the listeners to check them out at sovereign one of those kind of spicy assertions. Actually there are two, but I think we talked to the first one, optimistic roll ups, break composability. And I think primarily that's because of the fraud proof challenge period of like seven plus days. But the second one is monolithic l one's don't scale. And I would love to hear you kind of just expand a little bit more on this topic.
00:48:29.660 - 00:48:35.318, Speaker A: It's kind of spicy, but I would say also not spicy, but would just love to hear your thoughts.
00:48:35.504 - 00:49:45.440, Speaker B: I think at this point that's really not spicy. But I say that in a way that I think Solana or some other communities kind of confuses the way with which ethereum and bitcoin community uses scale. Bitcoin and Ethereum community uses scale strictly, while also trying to keep end user verifiability. And from Solana's perspective, you really just want extremely low level, like I say, low latency global computation, and you really don't care about end user verifiability. And so, like both, like in, from Solana's perspective, monothe l ones do scale. But if you are really trying to like keep that end user verification, make sure like that I can run the node, or I can get very, I can get verification that the nodes were run correctly and still increase the number of like transactions that the net work is doing, then yes, monolithic l ones, they have lots of optimizations, but at the end of the day, they depend on increasing the hardware requirements, so they don't scale. That's basically just a bit.
00:49:46.100 - 00:50:29.660, Speaker A: It is interesting. I mean, I kind of went down this rabbit hole, but then I found Vitalik's posts about kind of the end game, and kind of at the end of the day, his kind of thought process was that if you're a block builder, you have to increase hardware costs. There's kind of no way around it. But then you have light clients to do, like trust minimization, and then so you can still do the verification. And I think it's definitely come around to me that like clients are extremely important, and I think it has on the Solana community as well. And I know even Swe is going to do some type of version of this. They call it a sparse note where you can track individual assets.
00:50:29.660 - 00:51:49.720, Speaker A: And so again, I think the whole industry is kind of learning about what's useful. And I think everybody would definitely agree that end user verification is extremely useful and should be prioritized. And so what Celestia invented and kind of the invention of like clients, what they're doing with data availability sampling, I think is going to ultimately be used across the entire industry and I applaud them for pushing the space forward. But no, it's been a super interesting conversation. I'm excited for what you're building at sovereign, truly and definitely appreciate all these kind of nuanced debates. These are my kind of like favorite to learn about and just talk with smart people that are building the space because I think ultimately these are the important conversations that are going to push the industry forward. But they're very hard to happen and to speak on on Twitter, which is where most of us, I would say, spend quite a bit of time, but truly appreciate you coming on the podcast and kind of sharing what you're building at sovereign, increasing finality with zero knowledge proofs, being able to aggregate that and even at the end having kind of web two soft confirmation scale with end user verification.
00:51:51.480 - 00:51:57.944, Speaker B: Thank you Logan. It was a lot. It was a fun conversation. Thank you for having me.
00:51:58.112 - 00:52:02.384, Speaker A: Where can people check you out on social media? Read your blog posts, find more about.
00:52:02.432 - 00:52:26.590, Speaker B: Sovereign yeah, I would highly recommend following us on Twitter. Joining us on discord if you have questions. We love answering questions on discord. And yeah, we also have a blog on Mirror Mirror xyz, solvelabs east. We put a lot of effort into our blog post and I recommend everybody to read them.
00:52:27.010 - 00:52:32.950, Speaker A: Amazing. Perfect. We'll definitely go check those out. And thank you again for coming on the podcast. It was a lot of fun.
00:52:33.250 - 00:52:33.950, Speaker B: Thank you. Loganous.
