00:00:03.960 - 00:00:25.532, Speaker A: Super excited to have you here, Rex. Really looking forward to this podcast. I've done a couple podcasts with TIFF and also Jack. So big fans of what you and the Magic Eden team have ultimately created. But I think at the end of the day, I love talking with technical people. So really excited to deep dive the technical components of magic Eden.
00:00:25.686 - 00:00:44.624, Speaker B: Yeah. Thank you so much, Logan. Yeah, I'm super, super pumped to chatting with you. Great opportunity also to. I know a lot of engineers from Magiten also wanted to hear a lot of stories of how we build and how we scale. So happy to be here. Yeah, thanks for having me.
00:00:44.752 - 00:01:03.200, Speaker A: Yeah, thank you. Excited to chat as well. So maybe I love to start the podcast a little bit with everybody's journey. I think everybody kind of approaches the blockchain industry from a different point of view. So I would love to just start with how you got involved into crypto.
00:01:04.340 - 00:01:35.778, Speaker B: Yeah, so actually I would say it's gpu. So graphic cards. You know, I actually. I'm deep in AI for my last job, have Facebook AI. But previously I was like, back to 2014 ish. I was kind of managed some pools or GPU combining pools so you can cut some fees off the pools. And I was managing those pools to find.
00:01:35.778 - 00:02:06.730, Speaker B: Mining some altcoins. That was funny. Days like you can actually mine, I don't know, millions of dogecoins a day. It's kind of crazy days, but, yeah, that's how I got to learn. Okay. There's something going on there that's the computer science community is moving towards this kind of like, proof of work, proof of stake, and it's really kind of like advancing the cryptography. And a lot of things are kind of coming and cross rolled together.
00:02:09.550 - 00:02:17.070, Speaker A: Yeah, it is a fascinating rabbit hole. Did you hold on to some of those dogecoins that you were mining?
00:02:17.230 - 00:02:25.250, Speaker B: No, I'm kind of really paper hand and just so, so after mining it and.
00:02:26.910 - 00:02:30.450, Speaker A: Yeah, you go ahead.
00:02:31.270 - 00:03:13.028, Speaker B: Yeah, I was just saying. Yeah, so, like, my career is basically in software engineer kind of like roles, of course. Imagine when I started, I. I kind of have to learn a lot of basic crypto developer things because previously I was just a crypto user, and as a crypto developer, it's dramatically different. So a lot of things can kind of start from scratch. But actually, it's just the more I learn about crypto, it's just like programming. A lot of things still applies, especially the years of experience, training.
00:03:13.028 - 00:04:08.860, Speaker B: You understand, hey, you got to follow something. The standards of coding, how you structure your code, especially when you write smart contracts. A lot of security mindset also comes into play because you have to. I mean, one thing I learned from kind of, like, writing and smart contract is, like, you got to be super clear that every single input, you just don't need you. You have to don't trust any user input. It's the rule of thumb of writing that. But actually, this principle have been staying for so long, decades of Internet apps just tells you, hey, that's the best practice.
00:04:08.860 - 00:04:19.750, Speaker B: I think a lot of things just come together, and I think it's also great opportunities for a lot of software engineers looking into learning crypto and jumping to this space.
00:04:20.130 - 00:04:52.690, Speaker A: Definitely. I definitely want to deep dive the different architectures and how you guys built such a big business, and we're able to scale that. I would love to finish your intro in crypto. You said you were ultimately at Facebook, maybe could you, like, briefly, like, tell, like, the founding story I know is you and three other founders ultimately building magic Eden. Could you talk a little bit about, like, how that came to be and, like, how the initial kind of, like, couple months were.
00:04:53.110 - 00:05:45.520, Speaker B: So I was, this is kind of going through my resume, but I started my software engineer career at Uber. I met Senate there. So I was kind of the founding edge of Uber's experimentation platform. So it's kind of really kind of, like, interesting topic I can dive into a little bit. It's kind of running a b test doing feature flags. And actually, it's a great kind of, like, engineering culture that if you want to ship something, trying to run some feature flag in your production and also run some a b test. So, you know, like, this feature actually works or not.
00:05:45.520 - 00:06:01.544, Speaker B: And then. And then you can quickly pivot on that, right. You can even have, like, a lot of, like, parameters that you can. You can try. So cine was also kind of really early at Uber Eats. He runs the. A lot of experiments.
00:06:01.544 - 00:06:48.140, Speaker B: I think that's why I'm basically his customer support. He would literally just ping me every day, just, like, why this experiment doesn't work. So got to learn him from that era. And then I joined a startup called Checker. So Checker is running machine learning sort of platform for background checks, and it dramatically increased the velocity of background checks in this business. It's kind of really, kind of really disruptor. And they serve the big customers like Lyft, Uber, Doordash, and it dramatically reduced the background track, eta time, and turnaround time.
00:06:48.140 - 00:07:28.050, Speaker B: So I was there building the platform. A lot of, like, machine learning techniques. I learned. And then later on I joined Facebook AI, kind of continue this journey of Pytorch. I was the Pytorch DaF infra and I also really big fan of open source. So at checker, I open sourced something like Flagger, open mock and joined an API gateway community called Kong. And at Facebook, of course, the Pytorch is the flagship of open source of Facebook.
00:07:28.050 - 00:08:20.700, Speaker B: So a lot of like this kind of like things combined together. And then at some point Sid, when he was in his like parental leave, he sort of, I don't know, he got bored or something. And then he asked me, hey, you wanted to start something in crypto. I was like, okay, yeah, I've been a long term crypto user. I wanted to learn more about this space. And then Jack is really also deep in this space as well. And later on, Jack knows Joseon from Joseon, is like second employee from DyDx and also PM at Coinbase.
00:08:20.700 - 00:08:50.381, Speaker B: So I think that's kind of a really good team. Like four of us, we have two technical co founders, two really business oriented deep into crypto. And then we started and we never pivot. So we think, okay, which chain we want to go to Solana, which product we want to build NFT marketplace. And then we never pivot. And that's how we got started.
00:08:50.485 - 00:09:21.350, Speaker A: Yeah, yeah, that's fascinating. I mean, you guys built an extremely strong team from the get go. And I mean, we're able to iterate extremely fast. Could you talk about like the first couple months of just building magic Eden? Like what that looked from like the product point of view, but also like the technical side, like any issues that you guys rose or came to as like you started scaling some of that infrastructure.
00:09:21.850 - 00:10:13.670, Speaker B: Oh, man, so many issues. Yeah, I wanted to actually maybe use this example to, if any of the podcast listeners maybe use this as example. If you really want to start NFT marketplace now, what kind of things that you need to learn and need to build from scratch? I'm not encouraging you to do that because it's really red ocean. But I think it's great from an engineer perspective, what kind of things you need to take care of. So first, there are three things I want to talk about. One is probably, is understand the NFT ecosystem. It's huge.
00:10:13.670 - 00:10:58.526, Speaker B: Like, it covers a lot of things. Right? Second, I want to talk about how would you architect, how would you architect your back end, your front end and to support the NFT use cases. And third, I think I want to talk about scale. You will be really lucky to get to that stage. But when we actually have mass audience coming into your website, scalability is probably the thing you need to take great care of, but you don't want to do some premature optimization up front. So let's dive into it. So understand the space is kind of the first thing we did.
00:10:58.526 - 00:12:25.400, Speaker B: So we are super, super lucky to, not only the four of us understand a little bit about the crypto space, but also we have super early employees like charfu monkey. So like Igor, he's really deep into the discord kind of like maze, and he can navigate us through all those crypto projects. And it's just like NFT, the djing culture and a lot of user trying to ap in something you need to understand that's kind of really different from traditional web two, sort of like consumer product. The users are really, actually, really advanced in using the technologies like they can. If there's something that requires you to use command line tools to get some alpha, to get some edge, they will literally learn that in minutes, in seconds. And those users are really, I really admire their kind of like driven and motivation to advance the space forward. Like, for example, during the early days of Solana, there's no, there's no NFT standard.
00:12:25.400 - 00:12:59.080, Speaker B: There's no metadata defined. And actually, a lot of NFTs that mint before Metaplex has the metadata standard, it actually creates this kind of cultural movement to generate something that people want to consolidate. And that's why I think Jordan and Bartridge, they created this metaplex metadata standard.
00:12:59.980 - 00:13:07.240, Speaker A: You guys were so early that, I mean, you really had to kind of define a lot of these things that people take for granted now today.
00:13:07.700 - 00:13:57.802, Speaker B: Yeah, yeah. It's fascinating to see how quickly people come together. And I think it's kind of like community consensus driven. And I think that's also why Metaplex can have such great, a lot of support from community. They're open source and also got the Solana foundation support. So once you understand, okay, so this is the group of people of audience. This is the users you want to serve and support, then your product needs to be great, you need to fast, your UI needs to be really easy to use, and you understand the friction of change.
00:13:57.802 - 00:15:06.382, Speaker B: Marketplaces are actually pretty low, right? You literally just need a single click connect button, connect your wallet, and then you can change. You can go hop to another marketplace and trade there. So at the beginning, so if you really want to build an empty marketplace, you need to deeply understand what's your value prop and how can you differentiate yourself with other marketplace. So I think Madriden was lucky because when we started, the space is actually pretty chaotic, I would say. There's no, for example, there's no definition of collection of nfts. There's no provenance or how do you know that NFT belongs to what collection? How do you know NFT is actually legit? It's not like a copy. So we quickly kind of like identified this issue and fortunately candy machine v one came out of during that time.
00:15:06.382 - 00:16:20.118, Speaker B: And there is a one little kind of convention that candidmachine follow is the first verified creator address. So we learned that we understand, okay, this might be a shortcut to define a collection, but of course we put a lot of operation and security gatekeeping around the definition of collection because that's actually really, really important to nfts. So we use a technique like combining the definition of first verified created address and then a list of, we call it hash list or minlist. So it kind of like, and then combine those two. It has a sort of like working definition of collections. Of course, later on Metaplex, like six months later ish, they create this certified collection that would be great for creators to continue to find it. But you have to understand a lot of this kind of deep knowledge about nfts.
00:16:20.118 - 00:16:52.510, Speaker B: I think that's actually helps our business grow because we have the most collections defined at the time compared to other marketplaces. And people just felt like, hey, we list NFT fast. But actually in reality is we have a clear definition of collections faster than other marketplaces, which means we can safely kind of list the collection and enable trading for.
00:16:53.050 - 00:17:13.234, Speaker A: Do you think initially it was kind of your fast iteration, shipping products that kind of set you apart? Because magic Eden was far from, I think, the first 1st marketplace for NFTs on Solana. What do you think really separated you from the rest and the ecosystem?
00:17:13.362 - 00:18:06.912, Speaker B: Mm hmm. I would say. I would say we really kind of like have a strong team at the beginning and we're really strong in engineering and also really strong in business. So it's kind of rare combination of startups. So engineering like velocity and in general, like we iterate fast so that we can, as I mentioned, just like we get to learn how to define a collection that gets us a little bit edge on enable safe and faster listings of a collection on the platform. Right. And then we have a really strong bd team and marketing team so we can go in and actually talk to the creators, talk to a lot of project founders.
00:18:06.912 - 00:18:44.970, Speaker B: Hey, this is Magic Eden. You don't need to wait for, I think the biggest marketplace at the time. You don't need to wait for them to approve your listings. You can come to Magic Eden and we enable and empower you to enable trading. And it kind of quickly filled the void of, there's a time period that if the collections and traders are eager to trade right after the mint, this comes back to understand your audience. The dJNs really love. There's a golden time window for trading.
00:18:44.970 - 00:19:09.600, Speaker B: It's basically right after the mint. You have this strong motivation to opening up the secondary trading. I think that would kind of qualify why we figure out this kind of like nice time window and then it's very fast on that to gain a little bit market share from the marketplaces.
00:19:10.020 - 00:19:37.180, Speaker A: You guys really, I mean, the team really took off from the get go. I mean, by having kind of these fast iterations, being able to ship quickly, being able to list things quickly, the team really kind of, as soon as you guys launch, were able to capture a majority of market share. How was that experience? How was like the scaling process and how was it kind of internally going through all this chaos?
00:19:37.680 - 00:19:49.784, Speaker B: Yeah, probably right before scaling, I would talk about, for example, how would you build a foundation to prepare for the future?
00:19:49.832 - 00:19:50.384, Speaker A: Go for it.
00:19:50.472 - 00:20:22.428, Speaker B: Right. So it's, you actually need, if you think about NFT marketplace, it's actually way more than just showing the NFTs and buying it. And if you do a product teardown, right. So actually we have this great culture of product teardown. We would tear down our own products. We also tear down like competitors product just go through. Yeah.
00:20:22.428 - 00:21:00.940, Speaker B: What is the user flow? For example, if we go to other market basis, what's the buying flow? What's the selling flow was the flow of sweeping. What's the flow of cancel listings? We have this breakdown and then we have some user research from the discord and our alpha users. This foundation has to be like really solid. The product quality has to be there. Right. You cannot make mistakes because people care about like this is basic financial business. You don't want to mess up like user fund.
00:21:00.940 - 00:21:44.160, Speaker B: So I think the foundation is, once you have the user flow and user journey, the foundation will be okay. At the lowest layer, you don't want to be hacked. Right? You don't want to be hacked. The security layer has to be there. The smart contract, your backend to generate and generate those instructions for transaction to sign has to be secure. And you probably need to lay down some of DevOps and infrastructure team to actually look into the security, of course, protocol engine as well. If you want to build a marketplace smart contract.
00:21:44.160 - 00:22:32.108, Speaker B: There are a lot of things to think about. But of course later on, Metaplex has this auction house which is also really good for if you want to use that as an open source start point. So don't get hacked and then don't go down. Your website should not go down. If you go down, then there's like people cannot trade, people cannot list, people cannot do this. Which means when you design your backend systems, when you design your front end systems, when you define your CI CD processes, you really wanted to navigate through. This is pretty web two standard best practices.
00:22:32.108 - 00:22:49.170, Speaker B: You have a website, you understand the traffic pattern, you understand the query pattern to your databases, and you probably need to really think about, hey, this is your website should not go down, right?
00:22:51.710 - 00:23:10.160, Speaker A: Do you feel like a lot of, just like that basic web two best practices is missing in web3? Or people just kind of new to engineering that have entered the space and it's just because it's such an green field per se.
00:23:10.980 - 00:23:51.484, Speaker B: I think actually that's a great question. So at the beginning I was also thinking, hey, you only need to connect wallet and then you connect your RPC server and you don't even need a database, you don't need a backend. You just talk to the RPC servers and you suddenly have a decentralized app. But in reality, of course, a lot of toy purgers of web3 can work that way. But when you actually need to provide the user experience that you want to have. For example, on Solana, if you wanted to just rely on rpcs, your website going to really slow. I will tell you why.
00:23:51.484 - 00:24:44.084, Speaker B: So the early days when we started measure Eden, there is a. I think it's, sorry, I don't want to bash Holoplex, but at the really beginning, I think what they designed their website is when you connect wallet, you talk to RPC servers and then you return back all the nfts that the wallet has and then slowly rendering that. It's really kind of slow because there's no index. And then you need to issue get program accounts to go through all the accounts that you have from Solana RPCs. I think later on they did a great indexing. They dramatically speed up the process. But you can think about that if you want to have a nice experience.
00:24:44.084 - 00:25:26.640, Speaker B: You need to have web two databases to build an index so that it's instant rendering the nfts. You have the nfts in their collection. The price is there, which collection that NFT belongs to. So there has sort of like a little bit flavor of web two here to just increase the experience. But the transaction, the consensus layer, the source of truth, those things live fully on chain. I think that's the beauty and also the challenges for people who wants to build a NFT marketplace.
00:25:27.980 - 00:25:47.808, Speaker A: Making sure your front end is extremely robust, especially once you start getting traffic, and then making sure that at least on the backend, that's where all the magic happens of blockchains on like storing data, doing all the compute on the blockchain side. And the consensus there.
00:25:47.824 - 00:27:18.836, Speaker B: Yeah. There's also one thing I kind of like learned through this journey is, as I mentioned, so indexing is probably the most important thing that you can start if you want to build a NFT marketplace, because indexing literally means that you take the on chain data and then pipe into your off chain database, and then you use your database to serve the traffic of your front end and combine to backend. The indexing piece is really kind of like important because if you want the speed, if you want the speed of data accuracy, for example, if your item got bought, how fast that you can move the item off your collection page, it really matters. Otherwise it will have stale listings. Then the second buyer, the third buyer, we're trying to snipe that item, but it will see some, a lot of errors and which is really not a good user experience for users. So the indexing is really kind of like the central piece of the architecture you wanted to take care of. It should be really accurate.
00:27:18.836 - 00:27:39.480, Speaker B: It should be, or in a sense like fault tolerant. If there is some arrow happening, you should define in a way that's self healing and then it should be really fast, like if something happened on chain, you should be reflect those changes to your database as fast as possible.
00:27:40.940 - 00:27:52.680, Speaker A: On the indexing side, again, I think you guys were in the team were so early that how did you approach the indexing to make it as amazing that it is today?
00:27:53.380 - 00:28:42.780, Speaker B: Yeah, I know right now there are a few vendors that you can use, but when we started, it's a westboard of just nothing. It's the only thing you can use, RPC. So we actually have two versions of indexing. So the first version of indexing we built on top of the websocket that connects to RPC. So we listen, literally listen to all the account changes. We are the websocket from RPC servers, and we quickly figure out that websocket was not stable or not reliable, because for whatever reasons, we actually measure a lot. We have the monitoring and dashboard setup we understand.
00:28:42.780 - 00:29:10.240, Speaker B: Okay. There's something is missing there. That connection at that time. I think the, the loose delivery rate is about 5%. It's actually pretty high. So what we did later is we introducing the self healing process. And the self healing process is built on top car cues, actually, we have deep thinking about this.
00:29:10.240 - 00:30:05.450, Speaker B: When you listen to some changes, the changes might not be there. And then we check the slot of, of Solana, kind of like every single transaction would end up into a slot. And if that slot is missing, then we actually go to fetch that slot and then reprocess all the transaction in that slot. And this is how we recompensate the data accuracy. But as you can see, there's some delay, right? There's some latency there that especially if you combine with on Solana, there's a commitment levels. Like sometimes you need to process confirmed. And actually, if you really need the highest finality of the transactions, you need to probably wait like 20 ish seconds.
00:30:05.450 - 00:31:24.338, Speaker B: And that's how we build the indexing rewind system, is listen to the webhooks. And then we have a self healing Kafka queuing system to constantly trying to fill the holes that the websocket didn't have. The second version of indexing, we figure out, okay, this is not good enough. Like our degen users, they are eager for, for the speed of trading, they have to, for example, if something got bought or if something listed, I want to see that change happen within seconds, ideally within 1 second. Can we do that? And I think this is where we actually feel the pressure from our competitors. Corocate did a really, really good job on indexing at the time. I think it's like last year, mid March, April ish, they did a kind of really nice, kind of like tweet showcase, demonstrating that, hey, if you list something, it shows much quicker or much faster or earlier than magic Eden.
00:31:24.338 - 00:32:07.788, Speaker B: So we just, okay, this is our indexing. V one has some issues, right? So indexing, we too the version two. So we have a strong engineer, Alex Dimili. He did a great job in kind of architecture. The whole thing is instead of listening to websockets, we listen to the geyser plugin. The geyser plugin just plugging directly into a node, a validator node that we self hosted. And the moment that we see the broadcasted transactions, we take that transaction information.
00:32:07.788 - 00:33:06.086, Speaker B: I mean, this geisel is open source tools. Feel free to use that and it publish to Kafka Q directly. And Kafka is really robust and reliable and they have retry mechanisms. Building this dramatically increased the level of reliability for indexing and we managed to, I think just like at least ten times more reliable than indexing v one. And then we saw way less issues and then later on it's actually, the speed of listings is actually faster than corkube. So magic ether is basically. Yeah, it turns out that, yeah, if our DJ users care about that and we should literally just re architecture the whole thing just to have a pretty competitive product that people can use.
00:33:06.278 - 00:33:32.130, Speaker A: Yeah, all this kind of goes back to really just setting the foundations to building an amazing product. And as you were talking about before, understanding what needs to get built and who are you building for maybe like shifting a little bit. Could you talk about like how the process was to scaling like the infrastructure, scaling the team, scaling the company as you guys continue to have more success?
00:33:32.830 - 00:34:28.965, Speaker B: Yeah, talking about scaling, I think scaling, it's a really big topic. So I want to break down into for example, scaling the traffic and then later on scaling the team to support what we're going to serve. So scaling the traffic, there's no silver bullet. Especially we have Launchpad business. So for example, Launchpad, it's actually a black hole of the resource we need to put in a. At the surface you might think it's just a main button, right? You click a button, you get your nfts. But under the hood there's a huge kind of like a lot of operations, a lot of business, a lot of partnerships.
00:34:28.965 - 00:35:20.780, Speaker B: You need to build an all of a relationship with partners. But what's most challenging for Ang is that you will have a lot of users trying to click that button at the same time. And this is probably the most famous like challenges for web two companies as a world. But for imagine Eden, I would say, okay, we have an example. Our record I think I remember was there was like 1 billion requests in five minutes, within five minutes. So that translates to 3 million qps hitting our website. It's not necessarily bots, it's kind of the.
00:35:20.780 - 00:35:48.000, Speaker B: Okay. On the history of Internet, the biggest ddos was 17 million. Biggest ddos was 5 million. We are 3 million serve. I mean, it's really short time period. The other DDoS was like hours long, but it's only like a few minutes. But you can see, I don't know, it's an attack or something.
00:35:48.000 - 00:36:55.610, Speaker B: Not only crash trying to crash our website, it also brings Solana network down, literally. So I think it's a combination of a few things that we did to mitigate that. So first we, so after kind of those instances, we have to be really prepared for this. We did chaos engineering and load testing just to make sure that, okay, now we need to think really careful about that, right. So thankfully we have load sharding for pages or per endpoints and we prepare for turn off the non core business so that the core business can survive. The core trading can survive because when immediately after you launch or mint button, people will jump to the secondary to trade, it's almost the same wave that will hit the core trading as well. Third is we build layers of cashes.
00:36:55.610 - 00:37:44.730, Speaker B: Cash will be, you need to think about, okay, at the first layer, that's probably your CDN vendors. I'm happy to share that. We use Cloudflare, which is a great CDN kind of like vendor, and it has a great ddos protection. And we also use cloudflare workers. So it dramatically increased the throughput for launch purposes. Like the moment you click the buttons, cloud curve kind of help us to be the first layer of defense. And then the second layer of defense is we have a huge cluster of kubernetes and we kind of over provisioning our servers a lot just to prepare those hot mints.
00:37:44.730 - 00:39:01.582, Speaker B: And then the third layer is we have a really well designed redis cache. They have many kind of like read and write replicas so that we shard the space that we need to write into. So just multiple layers of caches can really help you for the defense of this type of, like, I wouldn't call it ATT and CK. It's also kind of like really, it's a business that people love, right? It has value for DJNs to make something that's really hot because if you can ming something that can like two X, three X, I mean, in the bull markets, you can two X, three X easily immediately after you Ming. Then there is a value that you can extract if you can actually have a great successful min. So then the second layer is once we can handle this, this traffic, then the next layer is kind of like bot prevention. I know there's a lot of sentiment on Twitter that says like, we didn't handle bots that well.
00:39:01.582 - 00:39:45.230, Speaker B: It's actually bot business is also huge in deep and bot and Antibod. They're kind of like cat and mouse games. We actually did. You don't want to know how advanced that we are in antibodies. But at the same time, the bottom business is also really complex and they also events as well. So that's why we in the, it's kind of like, we did a lot of things, we can dive into that topic as well. But going back to the topic of scaling, scaling the traffic is that I think it's not that different from kind of traditional web.
00:39:45.230 - 00:40:30.294, Speaker B: If you want to build a social network, if you want to. I mean, Twitter also suffered a lot from debugging issues. It's really kind of similar, but in a sense that it's in web3. It's even more challenging is that you have this constant meeting events, constant minting events that people trying to mint at the same time. And it's kind of like really, really hard to architect and really hard to defense. But I think we managed that well recently. I mean, we had a lot of outages, but ultimately we went through all the challenges.
00:40:30.294 - 00:40:35.262, Speaker B: And thanks for kudos to the Eng team. They did a lot of thinking through this.
00:40:35.446 - 00:41:07.530, Speaker A: Yeah, I mean, you guys really ran through the gauntlet per se, which is how quickly you guys grew. Being so early to the space, really having to build everything from the ground up initially and then scaling to millions of users, definitely not an easy feat. Maybe now that you're multi chain, how do you view building on different blockchains and the different architectures? What have you found there?
00:41:07.690 - 00:41:58.952, Speaker B: Yeah, I think we have the right team and the right people to go through multi chain. So crosstrend was actually, the multichain is actually in our original pitch deck. We say, okay, of course, Solana is our home base. We need to serve the Solana users really, really well. We need to have the best product in Solana. But at the same time, I don't think NFT and I also kind of view this chain as countries, right? If you build an awesome product, you probably want to do like globalization or globalize your product. You want it to have more kind of users to use your product.
00:41:58.952 - 00:42:37.300, Speaker B: So it's very natural for magic Eden to extend to multiple chains. And the first thing we do is we scaled up people. We scaled up people to support our multi chain. So we have native, for example, if we go to east, we have native East BD business people that understand the system. That's why we built an aggregator on east in the first place. And also Polygon. We recently expanded to Polygon and we hired Chris, a chief gaming officer.
00:42:37.300 - 00:43:39.086, Speaker B: So he's really strategic and understand the game business really, really well. And it's kind of well known that games are pretty popular on Polygon chain. And that's how we are kind of preparing for that kind of expansion. So we have the team scaling up the team and also, like when I was thinking kind of scaling the team, especially last year before the crypto winter, is that we have this really great work trial hiring process. It's actually pretty, I would say it's pretty effective. Like, we actually get people to write right before you join magic. Then you get to actually experience what's the workplace, what does workplace look like and how to interact with other engine or other PM's product or cross functional in Madrid.
00:43:39.086 - 00:44:23.406, Speaker B: And right before you make a decision to join. And we also got to learn your work style, what's your how, what's your throughput, how quickly you can learn a lot of new topics. So that works pretty well for us. We get to scale from, actually, I was pretty shockingly like, we scaled up to 120 ish people quickly last year, so. And with the people we have then, very naturally, to support multichain expansion, to support expansion to gaming, we just need to leverage people's passion about their expertise.
00:44:23.598 - 00:44:41.930, Speaker A: Definitely from building. I think definitely the chains have different ecosystems, different kind of personalities per se. But from the technical standpoint, were there any big things that surprise you once you guys decide to build multi chain?
00:44:46.350 - 00:45:39.870, Speaker B: I think the technical localization also is really important. As I mentioned, it definitely looks like countries, they speak different language, they have different communities, and fundamentally, they have dramatically different, different audience as well. Like maybe on east, the Djen have different flavors than the DJNs on Solana. And from a technical perspective, I think solidity, the EVM language, actually pretty simple. It democratized smart contract development. I think it's a great language and super easy to learn. And a lot of people can just pick up that in a few days, and it's really.
00:45:39.870 - 00:46:21.276, Speaker B: And you got to. And also, I like the kind of open source culture of EVM. You go to EZR scan, and a lot of smart contracts are already open source. You get to learn what others are doing for their smart contract. If you have a mint ERC 721, and there's ERC 721 and then ERC 1115, five those kind of like smart contracts, you can learn that quickly, I think. I think, like EVM is there for five, six years. It's actually foster a great community.
00:46:21.276 - 00:47:02.460, Speaker B: A lot of people love that. But at the same time, solidity is so easy to make mistakes. I just wanted to point out that there are a lot of foregos in solidity development. So I spend a lot of time just going through all the security vulnerabilities because I'm really security kind of driven. I really want to ask if we are going to launch a launchpad on ease. We actually launched so many east launchpads already. I want to know what's the history of all the vulnerabilities that can happen to minting contracts.
00:47:02.460 - 00:47:39.590, Speaker B: Re entrancy guard. You also want a lot like this. If you call another smart contract, the delegate course, these type of really details, I think it's kind of like you need to, if you want to build a cross chain business. You really wanted to understand that really, really well, this is something that you cannot outsource. I mean, you can hire, it becomes yourself, but you cannot outsource. And you have to grow the mindset kind of like security focus. Like the base layer is don't get hacked.
00:47:39.590 - 00:48:31.252, Speaker B: If you get hacked, you have existential risk. So that's the first thing. And compared to Solana. Solana Smart contract written in rust and then popular written in anchor that Amani built is really great kind of framework. It's so, it's kind of like primitive, but at the same time that you get to pull in all the rust crates, rust packages that's already there. And it's really expressive that you got to define a lot of complex logic. So for example, for us, we built our smart contract on something called M two.
00:48:31.252 - 00:49:13.086, Speaker B: And then later on we extend to build english auctions. We have, we also have a prototype for dodge options. We have a smart contract that built from coral queue called mmm smart contract. And then later on we also open source mmm and also OCP for greater kind of royalty control. But all this is really kind of like expressive language that you can define to literally whatever you want. It's, it's literally a like smart contract becomes really like writing a function. You have input, you have output, you need to mutate some state.
00:49:13.086 - 00:49:56.682, Speaker B: That's, that's literally, literally, really. There's no, I think there's no, there's some restrictions, but the restrictions is really minimal, um, in a sense. And then also Solana, I don't, I don't know, it's a feature or bug. Solana doesn't support interfaces for calling. I mean, so far right now, I mean, there's a proposal for supporting interfaces, but now there's no support for cross program invocation for another program. And since you don't have interfaces, you kind of are really restricted of what the other programs you want to call. Right.
00:49:56.682 - 00:50:25.098, Speaker B: And from a security perspective, it's amazing. It's perfect. You know exactly what the downstream programs that you're going to call. You have no worry that people can change that and introduce some security hosts. I think it's fundamentally different from the EVM system. It's really open. You can literally call whatever smart contracts your parameters because it's interfaces driven.
00:50:25.098 - 00:50:39.826, Speaker B: Right on Solana. It's way different. Everything is concrete and everything is just like, yeah, you get to talk to and just stop. So many tricky bugs that solidity introduced.
00:50:40.018 - 00:50:40.790, Speaker A: Yeah.
00:50:41.250 - 00:50:49.550, Speaker B: So I think that's kind of the learnings I had in the past when I was kind of expanding the mindshare.
00:50:50.530 - 00:51:34.370, Speaker A: I'm fascinated by the different ecosystems. I mean, a lot of them have different programming languages, you're saying different kind of functionalities along with the different communities. So there is definitely a lot to navigate, maybe switching a little bit. What would your advice be to other founders and builders in the space? I mean, you guys have gone through immense growth, becoming a billion dollar company, ultimately scaling, scaling a team, scaling the product. What would your advice be to other founders and builders in the space trying to replicate or build an amazing protocol to serve users in web3?
00:51:37.350 - 00:52:39.388, Speaker B: I probably have two ideas I want to share to kind of like opportunities for product for podcast listeners. First is I think there's a huge opportunity for kind of like native indexing databases, support for l one chains. So I know right now instead of like a lot of vendors are opening up their RPC APIs so that people can use. But I think if you can build a solid read replica of indexing databases and then just opening up the access to the databases as a service, I think this is a great business. If people want to explore, that would be great. A lot of decentralized apps can build on top of this database. If you want to build an API, it's really hard to figure out what's the potential user experience.
00:52:39.388 - 00:53:35.648, Speaker B: You don't know the query pattern beforehand, you don't know a lot of indexing requirements, you don't know how people are going to use it. If you're just opening up the API, it's pretty restricted, I would say. But if you open up a replica of database, you can also do ETL. And so that it's a data warehouse and that database contains all the decoded parsed data from the l one chains, I think that would be great. It's literally like if you can build a real time snowflake business for l one chains, I think that would be amazing. So that will kind of like dramatically reduce the complexity of building an application, let's say NFT marketplace or NFT loans or NFT staking platforms. It has a lot of potential.
00:53:35.648 - 00:54:46.056, Speaker B: There also like this could be a business or it could be l one chains, any l one chains maybe can have like a native support, official support for an indexing database. Because if your l one chains have a structural definition of the account schemas, I mean, right now on Solana, accounts are basically serialized into some bytes, and you actually have different ways of serializing the bytes. And so that comes into, you need to understand the IDL interface definition language, you need to understand how to deserialize and serialize data into bytes. It's kind of pretty complex. So if l one chain can native has support indexing database, it will open up a huge kind of window for decentralized apps to build on top of it. And that you also like, that's the part I think it's missing is from jumping from web two to web3 is I have to actually build this infrastructure and it actually takes a lot of time and effort. That's the first thing.
00:54:46.056 - 00:55:26.230, Speaker B: The second thing I was thinking is anything that has the network effect, magic Eden builds the network effect based on liquidity. Like we like supply growth, drive demand growth, demand growth drives supply growth. And the flywheel of longtrap, primary and secondary, has really good synergy. Right. I think in the future it's basically the market. It's actually, I would call it three sided. There's a craters, there's seller, buyer, so it's three sided.
00:55:26.230 - 00:56:04.930, Speaker B: And creators has great influence to the traders. So traders is divided into seller and buyer. And if you can build some network effects to basically a strong connection between creators and traders, then that would be awesome. Even this network effect can go beyond and above liquidity. That would be awesome. For example, some social layer, some messaging layer, some protocols related to kind of bring people together, a closer connection of people.
00:56:06.030 - 00:56:35.320, Speaker A: Interesting, very interesting. Sound advice. So I guess maybe to wrap up the podcast and how you and the team are thinking about things. I mean, obviously 2021 was a historic time. Crazy. Lots of excitement. 2022 and crypto took a little bit of a downturn, but I would say the on chain activity was definitely still growing in 2023.
00:56:35.320 - 00:56:44.980, Speaker A: What are you looking forward to on terms of just user adoption, in terms of magic Eden? Things that you're personally excited about?
00:56:46.220 - 00:58:02.422, Speaker B: I'm personally really excited about two things. So first is really double down on the creator economy and serve creators really, really well because they are kind of bringing the ideas, bringing the innovations, bring the art, bring the community, and bring the massive adoption of users into the space. I think they deserve the highlight. They we are going to double down on kind of building creator products really, really well so that creators like can have a really like great distribution channel to reach more users. At the same time, we will help creators to bring more users into NFT space because we need to grow this pie together. And still right now, I think the mass majority of the crypto users like, okay, crypto is sort of like, I mean it's not a lot of people are in crypto and NFT is also the cutting edge of crypto, right. It's even smaller, like chunk.
00:58:02.422 - 00:59:29.878, Speaker B: If you take the whole demographic population, NFT users are relatively smart. We wanted to have just bring more creators to this space so that more users will see the top notch creators, that they bring ideas and inventions to this space. So have served creators so that we can serve the norm users really well and then we can grow. Like our goal is basically in a few years we should serve like 1 billion of NFT users. And NFT has a great, people spend a lot of time on Internet already and NFT is a great kind of like entry point for also people to spend a little bit more time on thinking about our community. Right. The second thing this year I'm really excited is gaming because it's just simply because it's really natural, kind of like evolution from NFT right now is primary on pfps and really kind of like really natural evolution into gaming because in game items, a lot of like game studios really can build on top of like NFT technologies because the, the web3 games right now is still really real early.
00:59:29.878 - 00:59:45.330, Speaker B: We see more and more quality games coming into the place and Magic Eden will be the Discovery Channel for a lot of web3 games. So this year I think I'm really kind of super excited about these two things.
00:59:46.110 - 01:00:42.316, Speaker A: Awesome. I would echo those sentiments as well. The creator side is definitely going to continue to proliferate, grow and I'm excited for more people to actually build like sustainable careers on chain and definitely on the gaming side too, I think that's so early and, but it's starting to gain some pudding and so the traction will be fascinating to watch in 23. But definitely appreciate you coming on the podcast, Rex, appreciate you kind of sharing your background, your story, how magic Eden really started, how going into a deep technical, deep dive on like building the foundation of the product, being able to iterate, quickly scaling teams, the challenges of the different tech stacks. It's been a fascinating talk and so I really appreciate your time and thank you for all that you've done and all that. You and the magic Eden team have built.
01:00:42.468 - 01:00:45.652, Speaker B: Yeah. Thank you so much, Logan. Yeah, this is great. Great talk.
01:00:45.796 - 01:00:46.620, Speaker A: Appreciate it. Thanks.
