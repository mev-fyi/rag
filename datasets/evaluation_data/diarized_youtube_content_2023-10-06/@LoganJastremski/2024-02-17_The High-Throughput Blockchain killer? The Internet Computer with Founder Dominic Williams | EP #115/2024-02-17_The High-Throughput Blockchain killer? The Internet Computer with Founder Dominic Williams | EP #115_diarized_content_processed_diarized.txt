00:00:00.200 - 00:00:36.698, Speaker A: I became involved with the early Ethereum community and there was this phrase world computer. And this really set me onto a different path. So this comes back to this whole thing of a blockchain computer. We see blockchains as being kind of like operating systems that run on multiple machines rather than single machines. Our calculation is the Internet computer is adding developers for one 200th the cost of an ecosystem like Solana. You know, avalanche, it's got games on avalanche. They've got a website dedicated to it.
00:00:36.698 - 00:01:11.424, Speaker A: What was behind that? These guys made hundreds of millions, if not billions, by selling their tokens in the bull run. Right? And that's why an avalanche is, for example, sponsoring the Amgretti Formula E team. Like the number one formula E team. I don't know how much that cost, but it's head spinning about. It's not as simple as that. If you look at Polygon, they announced this huge deal like Starbucks has selected Polygon to host its loyalty NFT. And then it turns out that they paid Starbucks $20 million in order to do this deal.
00:01:11.424 - 00:01:44.890, Speaker A: And in fact, I've heard the real number is more like 50 million. What we do is a massive undertaking, but it works. And the stats and the performance figures tell the story. It's currently doing 230,000 ETH equivalent transactions a second on average. But that's a tiny fraction of what we want it to be doing. We want to see it doing billions of ETH equivalent transactions a second. And actually that's really, you know, the network that you see today is capable of doing that.
00:01:44.890 - 00:01:49.970, Speaker A: It's just, it'll grow as more and more people build on the Internet computer.
00:01:53.570 - 00:02:29.090, Speaker B: Well, Dom, thank you so much for joining me today. I have been a longtime admirer of what the Internet computer has really been doing and kind of looking onto the ecosystem from afar. And I've had really been blessed to have the opportunity to speak with a lot of different strong engineering teams within the web3 space. But I have not been able to fully get my head around what the Internet computer is doing. And so really excited to speak with the man himself to learn directly from you, ultimately the vision of Internet computer.
00:02:29.950 - 00:02:31.850, Speaker A: Well, thanks for having me, Logan.
00:02:32.390 - 00:03:02.370, Speaker B: Amazing. Well, maybe if we could just start off the podcast like high level vision of what Internet computer is, because we were chatting a little bit before and I think your end state of blockchain architectures is much different than the rest of the entire crypto community. So we'd love to just have you paint a very broad, high level point of view where you ultimately see the finalization of this architecture and how blockchain ecosystems will kind of converge on that.
00:03:03.470 - 00:03:49.410, Speaker A: Sure. So, like many people, I was drawn into the crypto industry by bitcoin. I'm a pretty technical person, strong background in computer science. I built many things over my career as a sort of engineering entrepreneur. Always been fascinated by cryptography and distributed computing too. And by the end of 2013, I was looking for ways to speed up blockchains, and that continued through 2014. I was the first person in the space really trying to repurpose classical byzantine fault tolerant consensus for the blockchain setting, and working with ways to make blockchain scale with sharding techniques and things like that.
00:03:49.410 - 00:04:39.140, Speaker A: But I became involved with the early Ethereum community, and there was this phrase, world computer. And this really set me onto a different path. End of 2014, I was looking at launching a horizontally scalable cryptocurrency called pebble. And when I heard the world word world computer, that just struck me as the future. Initially, I was researching ways to make ethereum scale better and things like that. Started using the word dfinity for my work, May 2015, something like that. Dfinity's portmanteau of decentralized infinity.
00:04:39.140 - 00:05:28.670, Speaker A: Because my personal interpretation of world computer is that blockchain would reinvent back end compute and everything would eventually be built fully on chain. That means that we'd have things like social networks running from blockchain, not from cloud, not just hosting tokens and little bits of Defi logic and nfts and things like that, but all of the data, content and compute of services like social networks and social media, and also ultimately enterprise services too. So that's a pretty tall order.
00:05:29.170 - 00:05:57.620, Speaker B: The world computer vision that Ethereum originally painted was really the thing that got me excited and really the vision around banking, the unbanked. But once Defi summer came around in 2020, and gas prices spiked from, I mean, even at that time, they weren't exactly cheap, but they spiked to, say dollar 50 and several hundred dollars. It was really sad to me just how far we kind of fell from that original vision of the world computer.
00:05:58.320 - 00:06:58.690, Speaker A: Yeah, I mean, back in 2014, 2015, people like me thought world computer meant that a blockchain would host all the world's business logic. And I think Ethereum was absolutely seminal invention. And look, we went from blockchain, hosting a ledger, a blockchain, to get technical, is what I define as a stateful, decentralized network. What that means is that the network hosts a state, and everybody who participates in that network will eventually see the same consistent state, and if they watch the state, they'll see it progress through the same series of steps. So bitcoin, of course, was the first blockchain and host this ledger of effectively digital gold tokens. And that ledger lives within the bitcoin protocol. It's a stateful, decentralized network.
00:06:58.690 - 00:08:11.700, Speaker A: And that means that if I make a bitcoin transaction, you will also see the same bitcoin transaction, and you'll see that bitcoin transaction taking place in the same overall position in the overall sequence of bitcoin transactions. And bitcoin does allow for some scripting, so you can configure access control scripts on utxos, little batches of bitcoin. The thing is that when you send bitcoin, that little access control script disappears. What Ethereum did, it was inspired by things like Counterparty and Mastercoin, which later became omnilure, which were trying to add additional functionality to bitcoin so you could create new altcoins easily. And it made this jump where I said, okay, now the scripts are going to live at their own permanent addresses, and coins are going to move between them. And these scripts are also going to be made more powerful. So they're turing complete, so you can really use them to create pretty sophisticated systems.
00:08:11.700 - 00:08:46.976, Speaker A: And I think looking at the, the sort of evolution of bitcoin, first we got blockchain hosting, decentralized ledger, digital gold. Then we got a smart contract platform. We got a blockchain that hosted during complete code. And that was an enormous advance. But we didn't get a world computer. Ethereum is not a world computer, and that's why people don't use the phrase that much anymore. For me, having been in tech for a long time, built a lot of things.
00:08:46.976 - 00:09:32.242, Speaker A: I first started really creating complex distributed systems, sort of like 1996 97. I was using cryptography to create my own certificate schemes, that kind of thing. Actually using this crypto library created by a guy called Wei Dai, who actually had a paper called be money that can be seen as an antecedent of bitcoin. And it also created. The last thing I did for crypto is create an MMO game for kids that grew to about 3 million users. And I spent a lot of time devising systems that allowed it to scale. I wanted blockchain to be a real world computer.
00:09:32.242 - 00:10:11.678, Speaker A: And my view was that smart contracts are a new kind of software, and they have amazingly powerful properties. For example, a smart contract is tamper proof. It's guaranteed that it will run the written logic against the data on the chain. You don't need to protect it with a firewall. It can't be infected with malware or encrypted by ransomware or something like that. So actually, cybersecurity is an increasingly pressing issue. I think it's an issue as big as war and climate change.
00:10:11.678 - 00:10:59.912, Speaker A: By the end of this year, Cybercrime will cost the world more than $10 trillion annually, and that's projected to keep on rising, and AI is going to make it much worse. So having a new form of software that doesn't even need cyber security, you couldn't even put a firewall around Ethereum if you wanted to. Having this new kind of code that is tamper proof, I saw, would be incredibly valuable. Secondly, of course, it's unstoppable. It's not like a program that can experience regular memory access and core dump or something. A smart contract is always there. It'll always run, and the chain guarantees that the law is run.
00:10:59.912 - 00:11:36.882, Speaker A: So it's unstoppable. Again, an incredible property. And of course, smart contract code can be made autonomous, which means that it can exist and run without a human owner. So you can create smart contract code that nobody can change, that can play the role of some kind of international financial rails, for example. And we see that with Uniswap, Uniswap one, two, three, and so on. Or it can be put under the control of a DAO, a decentralized, autonomous organization, such that a community effectively can update it. And it's autonomous in the sense that it's controlled, again, by code.
00:11:36.882 - 00:12:23.704, Speaker A: And the control of the DAO should be sufficiently distributed amongst thousands of people. So it's a very different kind of setup than some code being controlled by one developer or small team of individuals. You put these things together, smart contract code is tamper proof. Smart contract code is unstoppable. Smart contract code can be made autonomous, which has all these different applications. And I'm like, okay, very clearly, this is the software the world needs to build everything. Like, wouldn't it be great if all Internet services were tamper proof and unstoppable and ran under the control of community daos so that communities kind of owned and controlled the services they used? Yes, this is the future for me.
00:12:23.704 - 00:13:15.980, Speaker A: And wouldn't it be great if enterprises could build systems that couldn't be hacked? So I looked at it like that in a very fundamental way. I said, look, this is a new kind of software. It's clearly a very superior kind of backend software. The only challenge is that it's not efficient and doesn't scale and can't process HTTP to create interactive user experiences. And people have to interact with it with using a wallet like metamask and things like that. But if you stand back and take a distance view, it's very clear that this new form of software has attributes that will cause it to be the default software once those problems are removed. And that means that eventually we'll see a kind of blockchain singularity, where blockchain becomes the default backend compute platform.
00:13:15.980 - 00:14:09.910, Speaker A: And so I wanted to create a real world computer that would run efficiently, would scale as needed, which would host more contracts with the kind of features necessary to enable it to directly serve interactive user experiences and for users to interact with them without involving a wallet. And I took the point of view that this is a very solvable technical problem. It just requires a lot of work. So probably, I probably underestimated the work, but, you know, got going on this. And so, you know, I see this kind of like third phase of blockchain, which is world computer blockchain. So, you know, we had like cryptocurrency digital goal, smart contract platform, and we're trying to deliver world computer.
00:14:11.250 - 00:15:01.940, Speaker B: Amazing kind of walkthrough of your journey. I really appreciate that. And I would definitely echo the sentiments that, I mean, obviously bitcoin was the inception of the industry. Ethereum definitely expanded upon that with smart contracts and cool shout out to colored coins. I mean, only the ogs really know about colored coins and really the evolution that spurred with Ethereum. But I think today at least, ICP in my mind, really runs under the radar. The conversation, at least today in kind of x or twitter, is predominantly still centered around, I would say, kind of ethereum versus what I now kind of classify as like the high throughput blockchains, the Solanas, the swE's, the Aptos monad, say.
00:15:01.940 - 00:15:21.470, Speaker B: And I am very curious to hear your opinion on why these chains may not be optimizing for, say, the incorrect thing or what uniquely differentiates the Internet computers vision from these other blockchain platforms.
00:15:23.330 - 00:16:26.540, Speaker A: Well, the blockchain industry is tough people to understand from the outside. And look, I did a search for ICP on Coindesk the other day, and the last article was from 2021, talking about the price crash we had at launch and so on. I don't want to go too much into it, but especially in the past, I think it's weakening now. Crypto titans created a kind of matrix for participants in the crypto industry. Which was designed to direct people's attention to blockchains they had stakes in. And I think the opinion generally was, oh, God, what's this Internet computer thing? This is potentially very disruptive to our investments and to the narratives that we're using to sell these chains. And one thing and another, the forces that be made sure that people were sort of misdirected.
00:16:26.540 - 00:17:43.494, Speaker A: What's kind of frustrating about that situation is, I mean, Internet computer is a product of all crypto. It goes right back and it's an absolutely hyper focused operation that really is trying to realize a lot of things that started with Satoshi about removing intermediaries and so on. And the science is unparalleled parallel. This incredibly powerful crypto and Dfinity has run the largest R and D operation in crypto since late 2018, at least. And what you see in the Internet computer is the product of 1000 plus person years of work. And so if we get back to narratives and look, I mean, it's difficult to separate narratives from blockchain. Back in the day, Bitcoin began to be successful and people began to take fork its code, make a small change to the mining algorithm or something like that, or the block time, and use it to create a new cryptocurrency.
00:17:43.494 - 00:18:47.306, Speaker A: And there was always a narrative involved with that. Litecoin was silver to bitcoin's golden. Feathercoin was featherlite transactions. Most of those had disappeared. Then Ethereum came about and we saw the advent of smart contract platforms and people began to create even broader narratives, I think partly because smart contracts demonstrated that blockchains were more general things, right? So now all of a sudden, you had the blockchain for Internet of things, the blockchain for Wi Fi routers, the blockchain for nfts, the blockchain. I mean, there are probably a hundred different narratives out there. And people began to say, look, to investors, hey, we're going to take this blockchain and specialize it for a specific purpose, and it's going to do that purpose better, and therefore it's going to have value because it has a chance of dominating its niche.
00:18:47.306 - 00:19:34.736, Speaker A: I don't really think it works that way. Software is a general purpose thing, and we're really beginning to talk about blockchain computers. That was what began with Ethereum, and computers can be used to build anything. What really matters is what's the security, of course, and stability, but also the capacity through efficiency and things like that. So that's what weird affinity focus on. How can you make a blockchain that reinvents compute. And that narrative to some extent rubs up against other narratives.
00:19:34.736 - 00:20:18.226, Speaker A: And by way of example, the Internet computer is currently processing 230,000 plus Ethereum equivalent transactions a second. It's by far the highest throughput blockchain. I mean, Solana is not even in the same ballpark. So you can see why there were some issues when we launched and the Matrix didn't want people to find out about the Internet computer. And then you have things like, people try and find reasons why, well, the Internet computers so fast and scalable, there must be something wrong with it. And then they'll try and say it's not decentralized. But that's actually not true.
00:20:18.226 - 00:21:08.268, Speaker A: It uses a more sophisticated form of centralization called deterministic decentralization. And it also runs on sovereign hardware, just like bitcoin does, right? So bitcoin is created by this network of sovereign hardware that does hashing. That's what forms the chain. And that was always one of its great strengths. Whereas modern proof of state blockchains run on big tech's cloud, the blockchain maximalist perspective that we have thinks that's misguided. And we think that the blockchains of the future should really run on sovereign hardware like the Internet computer. So that also, of course, allows the network to combine specialized hardware that's designed for purpose.
00:21:08.268 - 00:21:53.400, Speaker A: A bit like bitcoin combined specialized hardware specialized for purpose. And that's one of the other ways that performance has increased. But you can imagine if you get hundreds of PhDs, cryptography professors and things like that, and have them working for years and produce a blockchain with 1000 plus years of R and D effort, naturally it's going to be a pretty sophisticated, complicated thing, and naturally you're going to get some pretty impressive performance and other properties coming out of the work. And that's probably the easiest way of explaining why the Internet computer can do the magic that it does.
00:21:54.020 - 00:23:29.220, Speaker B: I think I fully agree with your point on narratives are largely just that, narratives. And I think for me, the saddest part of the industry thus far is that we haven't really hit meaningfully adoption, whether on theorem or really any chain. I think to your point, a lot of that truly has been limited by the overall scalability, because these earlier networks, particularly within the EVM ecosystem, suffer from these anti network effects. As the network continues to grow, you get congestion, you get these global fee spikes, you're pushing things to L2s and you're fragmenting those with kind of liquidity. Engineers have to know what shard they're on, whether they're optimism shard or zk shard. I'm curious, though, from my conversations kind of with different technical communities in the space, they've really been able to go deep in kind of articulating those core bottlenecks, at least how they see them, and I at least their roadmap to addressing them. And from my understanding, those largely center around throughput, essentially being how much data can you propagate through the system? Because transactions are bytes and you're propagating those bytes, how you're doing consensus, how you're doing the virtual machine design, and then ultimately how you store that data.
00:23:29.220 - 00:23:46.740, Speaker B: Would you kind of agree with that broad articularization of bottlenecks within the current ecosystems and say the Internet computer will ultimately share those? Or would you reframe kind of those bottlenecks entirely?
00:23:47.520 - 00:24:48.160, Speaker A: I would reframe them entirely. Look, I've been involved with the space for a very long time. The challenge is that, you know, if you look something like Ethereum, it started off as a proof of work network with a very simple virtual machine, the Ethereum virtual machine, and it just didn't have any elements of the architecture that you require to build something that's high throughput and efficient and things like that. And it also, you know, didn't support things like reverse gas and other things. You need to enable smart contracts to process HTTP. And so Ethereum sort of gave up on its scaling efforts at some point and just said, look, it's going to work through L2 s I think that's okay. Look, I think the way to look at Ethereum is smart contracts platform specialized for DeFi, and it can do that fairly well, albeit it still needs to be made way more efficient.
00:24:48.160 - 00:25:55.970, Speaker A: And that is going to involve scaling to get the cost of something like a uniswap transaction down. But I think it's impossible to start with a traditional blockchain architecture and just tweak that and get a world computer blockchain. You have to start really at a very fundamental level and build the entire thing around the requirement that the blockchain has to be able to process unlimited limited amounts of data inexpensively and scale as needed, and process HTTP and things like that. And all of your design decisions from the beginning need to be based around the requirement that you're building a world computer. I mean, imagine building, if you set out to build a biplane and you do it, there's no way that you can say right now we need to fly to the moon and this needs to become an Apollo rocket. It's just not going to work. You have to start out at the beginning and say, I'm going to build an Apollo rocket.
00:25:57.110 - 00:26:28.310, Speaker B: I do agree with those analogies, but I think coming from Tesla and spending a good amount of time there, Elon was like, you always have system limitations. You should think about pushing the system limitations to essentially 100%. And what are the, those bottlenecks? So I think every engineering system has some degree, some bottlenecks. Do you like, how would you articulate those Today in ICP, or what have been like, the challenges to scaling?
00:26:28.690 - 00:27:25.900, Speaker A: I mean, ICP gets more efficient all the time. I'll give you an example. The finalization rate on the internal subnets that make up the overall network jumped 25% recently because the, you know, the P two p layer that links the nodes together was upgraded. But you know, what you don't see is, you know, several years were spent upgrading the p to peeler, and, you know, there's a bunch of PhDs working on it, and, you know, incorporating probably the Google quit protocol and a whole bunch of other things related to topology and so on, and applying a whole lot of science that's been developed, you can read about in computer science papers and things like that. It's a non trivial. Just to get that extra 25% is a non trivial undertaking. If you want to talk about virtual machines.
00:27:25.900 - 00:28:40.074, Speaker A: Yeah, EVM is really primitive. It's not suitable for building a world computer. If you want to build a world computer, you need to use the virtual machine of the Internet, which is webassembly. And the person who designed webassembly actually was an early dfinity, and that helped us not only use webassembly, but push things into the standard and so on that were useful for the Internet computer. But while we've got a bunch of people, execution, environment specialists and so on here, we also benefit from the fact that there are hundreds and hundreds of people working on web assembly and optimizing and improving it, and creating compilers that will translate software code into Webassembly, bytecode and so on. So that's like, that's an example of a difference where you get an order of magnitude improvement and efficiency and power. Nobody really should be building a, a blockchain that uses a custom virtual machine, let alone the EVM.
00:28:40.074 - 00:30:09.074, Speaker A: They should be going straight to Webassembly, not just because it's already vastly more sophisticated and powerful and efficient, but also because it benefits from this just colossal worldwide development effort that's ongoing but if you really want to create a blockchain that scales, the first thing you need to think about is how you're going to create subnet blockchains that can be combined into a single blockchain. So let you know, you can add capacity for hosting smart contracts by adding these new subnets. But let's say you're a smart contract on Subnet A and I'm a smart contract on Subnet B. The subnets should be transparent to us, not like these standalone blockchains called subnets on Avalanche. They should be like the Internet, right? I mean, right now, you and I, I'm in Switzerland, you're in the States somewhere, I guess, and we've got this video connection between us and these video bytes are being streamed across the Internet. But the software we're running doesn't need to know anything about all these different subnets that that data is going to pass over. My software sees your IP address and your software sees my IP address and we're directly interacting.
00:30:09.074 - 00:31:11.878, Speaker A: Right. And that should also be the case for smart contracts, right? If you're a smart contract on Subnet A and I'm a smart contract on Subnet B, we should be able to directly interact. I should be able to call your functions, you should be able to call my functions and the subnets involved should be completely invisible. So the Internet computer obviously does that. That's not an easy thing to do because imagine as you know, the Internet's computer scales out and you can potentially have millions of subnets and there's no way these subnets can all see each other's blocks, right? That's just impossible. So how on earth are they going to trust each other? And to make that possible, obviously you need to start thinking about cryptography. And we have this thing called chain key, which allows subnets to have their own public keys and they can sign messages which are probably messages which contain function calls and function call results that are being passed to other subnets.
00:31:11.878 - 00:32:00.452, Speaker A: And the way the system is designed is, you know, if these signatures, chain key signatures on the messages check out, not only can the other subnets see that the message hasn't been tampered with, but also that the other subnet is running correctly. And then, you know, there's a special subnet on the Internet computer which runs something called the network nervous system, which is a DAO. It's actually the biggest DAO in the world. It's got more than $3 billion worth of ICP staked inside and has participation in the hundreds of thousands and but this is a DaO. Not only is it the world's biggest DAO, it's also a DaO like unlike any other. People propose changes and configurations to the network, to this network nervous system. And if it adopts them, they're executed completely, automatically.
00:32:00.452 - 00:32:46.398, Speaker A: So the entire network's autonomous and, you know, it runs by people submitting proposals that are adopted or rejected to the network nervous system as permissionless. Anyone can submit these proposals, but it works well enough that any of the sensible proposals get adopted. But this thing, this network nervous system anyway, is not only it's creating subnets to scale the network as needed and maintaining a directory of subnets. And when it creates a new subnet, it signs the public key of the subnet. And that's how you know that you're interacting with the Internet computer as a user, not you, but the software you're using to interact with a smart contract.
00:32:46.574 - 00:32:56.930, Speaker B: So maybe just to re articulate and correct me if I'm wrong, do you envision a world where every application similar to the Internet has its own subnet?
00:32:59.070 - 00:33:38.940, Speaker A: I mean, for most people? So currently if you upload a smart contract to the Internet computer, it decides where your smart contract is going to run. And most subnets actually contain a very large number of smart contracts. They're called canister smart contracts because they're a bundle of webassembly, bytecode and persistent memory pages. And without getting too technical, they run in parallel using the actor software model. And the messages they pass are just function calls and function call results. But you upload a smart contract and by default the Internet computer puts it on a subnet somewhere. And the Internet computer can do some very clever things.
00:33:38.940 - 00:34:28.270, Speaker A: So if a subnet becomes overloaded, say, because the smart contracts become very busy and they weren't originally, for example, it can actually split the subnet in two. So say you've got a subnet which contains a whole bunch of crypto. So it's a 50 x subnet, right? Let's just say. And it's got 50 nodes from independent node providers installed in different data centers, in different geographies, in different jurisdictions, right? Just deterministic decentralization. And now this subnet is overloaded. So what it would do is it would like double the number of nodes to 100. They'd have all of those nodes would have a complete copy of the data at that point, and then it would split the subnet in two.
00:34:28.270 - 00:35:30.994, Speaker A: The subnet would split into two, and now the first subnet would have the first half of the smart contracts and the second subnet would have the second half of the smart contracts and let's say average utilization on their subnet was like 80%, on the original subnet was 80% sometimes spiking up into the nineties. So it's kind of getting overloaded. Um, now you've got two subnets with average utilizations of 40%, sometimes spiking up into say, or something like that. Um, so uh, you know, the network nervous system can create new subnets to create more capacity for completely new subcontracts, smart contracts that are being uploaded. But it can also split um, existing subnets that are becoming overloaded because the smart contracts there hosting it becoming too busy. And in that way it can kind of seamlessly scale out its capacity as needed. And the smart contracts running on these subnets don't see the subnets.
00:35:30.994 - 00:35:42.760, Speaker A: It's a single seamless universe for smart contracts, canister smart contracts, which by the way is a kind of serverless cryptocloud that actually holds data.
00:35:42.930 - 00:36:30.424, Speaker B: Yeah. So on a high level, I mean the Internet computer is handling all these subnet architectures on the backend. It can dynamically kind of adjust these larger, if you need more scale, create more subnets for increased scalability. One thing that sharding potentially introduces is, as you mentioned, the different security assumptions within like each subnet. How does Internet protocol view the world of decentralization within these subnet categories? Because the sharding can have different security assumptions across different subnets and security is.
00:36:30.432 - 00:36:47.830, Speaker A: On a cost curve. In principle you can have a subnet with 1000 dedicated node machines. Each of these node machines costs about $20,000 to build or buy to the current spec the network's using.
00:36:48.970 - 00:36:54.910, Speaker B: And is that like cpu or ram? I'm curious just to break down the hardware components there.
00:36:55.290 - 00:38:05.720, Speaker A: So the gen two Internet computer nodespack has three kinds of storage or memory. It has SSD's, it has non volatile ram and it has main memory. And of course these become increasingly quick. So main memory is the fastest, non volatile ram is the second fastest, SSD's are the third fastest. It has multicore processors. Currently it's using an AMD architecture and the processes have to support something called SCV SNP secure encrypted virtualization which isn't turned on currently. But when it is switched on it'll mean that even if you're a node provider and you're running these nodes and you can obviously go into the data center, open the rack and get onto the machine, all you'll see if you open the machine up are encrypted bytes.
00:38:05.720 - 00:38:58.690, Speaker A: It's not insurmountable. I mean, hardware is not like traditional software cryptography that should be unbreakable. Hardware protections aren't infallible, but for the majority of people they're unbreakable. So the Internet computer works differently to traditional blockchain in the sense that it's the network nervous system that decides on which nodes a smart contract state computation is replicated, which subnet smart contracts assigned to. And that subnet, of course, is a dynamic thing. Nodes can be added and removed at any time. So where a smart contract's state and computation is being replicated is determined by the network nervous system.
00:38:58.690 - 00:40:00.556, Speaker A: And these subnets, they don't maintain their blocks forever because it's not necessary, and there'll be too many blocks, like they're processing a block a second or something. They only maintain the blocks long enough that they can as necessary for the actual security of the protocol that's designed. There are these things like called catch up packages, for example, checkpoints which allow nodes, new nodes to join and so on. So it's not the case like that you as a user can connect to one of these subnets and say, give me all the blocks. And it's not necessary for security either because of the way the cryptography and the math is designed. And so that already gives you a certain amount of privacy, like your smart contract and it past transactions, well, its past transactions aren't being recorded forever anyways because it wouldn't be practical. And it's, you know, you can't just go and get it.
00:40:00.556 - 00:40:41.750, Speaker A: Stay now. Yeah, I think there are 120 companies currently, plus worldwide, that are running these node machines all over the world. But you could in principle go to one of these companies and bribe them and say, look, I want to get onto this node machine, I want you to copy it state onto this SSD drive. I'm going to give you, and if you do that, I'm going to give you a million dollars kind of thing. That is possible. But once SUV SMP switched on, that node provider would find that very difficult to do because if they opened up the machine, all they'd find are encrypted bytes. So yeah, there's this dimension of it.
00:40:43.390 - 00:40:58.450, Speaker B: Generally each subnet are those you used example 50. Are there like 50 nodes generally operating that 101,000, I guess. Where would you ultimately like to see that kind of in the end state?
00:40:58.790 - 00:42:11.590, Speaker A: Well, so remember, our object is kind of to build a world computer that reinvents back end compute so it's very important for us that computation isn't too expensive. So we want to get the security properties required of a subnet with the minimum level of expense. Now, some subnets, what we call fiduciary subnets, and they're specialized, for example, for holding chinky bitcoin and chain key and things like that. So their replication factor tends to be a lot larger. But then you'll have what we call system subnets that would host canisters on something like open chat chat histories, essentially. And the replication factor, there can be 13, for example, that means there are 13, the subnets comprised from 13 node machines run by independent companies from different data centers, where those data centers are in different geographies and different jurisdictions. And that's called deterministic decentralization.
00:42:11.590 - 00:43:12.622, Speaker A: The reason for that is, look, obviously if you had 13 nodes, but they were all from the same node provider, well, you wouldn't get the security properties that you want because the node provider could meddle with the state and the computation and nobody could tell the math wouldn't work. So you need the nodes to be from independent node providers. Secondly, if all the nodes are in the same data center, well, that wouldn't work either because in principle the data center could. Well, if the data center went bankrupt and just went offline, that subnet would go offline too. And blockchains are meant to be tamper proof and unstoppable. So the nodes need to be from different node providers and their nodes need to be running in different data centers. Okay, so what about if we've got, you know, different node providers, different data centers, but the data centers are all around Amsterdam and now there's a nuclear war and Russia puts a nuclear bomb on Amsterdam.
00:43:12.622 - 00:43:38.326, Speaker A: Well, same thing. The subnets going to go offline and it needs to be unstoppable. So you geographically, you know, you want to choose data centers that geographically dispersed. What about if all those data centers are in the eude? They're geographically dispersed, but they're in the EU? Well, that doesn't really work either because imagine if the EU banned blockchain overnight. Hopefully not. This is very unlikely. But just say and sent out its agents in the middle of the night.
00:43:38.326 - 00:44:45.222, Speaker A: Well, again, the subnet would stop running. So you don't just want geographical dispersal, but you want these nodes running in different jurisdictions, right? And so, you know, you have this hierarchy of node provider, data center, data center, geography data center, jurisdiction. Deterministic decentralization takes all of these things into account in order to provide sufficient security properties for the subnets function, while absolutely minimizing cost. And it might seem like 13 x replication is expensive, but it's not actually as much as you think, because if you look at traditional tech, actually it has a huge amount of replication built in. If you look at a database, you're not just going to want run one database server, you're going to run something like MySQL and a master slave configuration. So you've got a master node and three slaves which can, if the master fails, it can fail over to that's four x replication. Then you've got the event log and things like that.
00:44:45.222 - 00:45:09.650, Speaker A: The database has been tame. That's more replication. Backup snapshots and things like that. That's more replication. Then typically you'll have a whole bunch of web servers, load balance web servers, which you're controlling with Kubernetes or something. And actually in order to increase performance, they'll use something like a memcached server to cache data that's in the database. That's more replication.
00:45:09.650 - 00:46:11.982, Speaker A: And then your web pages will be distributed in cache all over the Internet by content distribution network. That's more replication. So traditional tech actually involves an absolutely gargantuan amount of replication. The difference is that blockchain is a native edge architecture in a way, where you've got copies of the data that you can actually dynamically query all over the world, and where that replication is actually being applied in an intelligent way to create a platform that's tamper proof and unstoppable. And software that's running on it is also tamper proof and unstoppable, where the platform can support software that's autonomous. So that's why we think blockchain is the world's future compute platform. In the end, we think blockchain will prove to be more efficient in many, many ways than traditional it, while giving these incredibly valuable additional properties.
00:46:11.982 - 00:46:51.860, Speaker A: Like where software doesn't need to run with the protection of a firewall, right? Doesn't need to run with the protection of anti malware to stop it getting affected with ransomware is always available and software can be autonomous where that's useful. And it just, it's basically like a sort of serverless crypto cloud which holds data where your R and D costs are way, way lower. And that's a different way of thinking about blockchain. And that's what we're trying to, you know, that's the paradigm of the Internet computer. We're trying to reinvent computer self.
00:46:52.520 - 00:47:24.010, Speaker B: So just to re articulate the kind of central nervous system or dynamic decentralization, I'm sorry, the network nervous system. The network nervous system ultimately determines kind of how large these subnet clusters, nodes are going to be and can really dynamically adjust those over time. And those parameters, I'm assuming, can be tuned for either more replication or less, depending on kind of what the community wants.
00:47:24.310 - 00:48:37.790, Speaker A: Yeah. So the network nervous system can add and remove nodes from these subnets dynamically without interrupting them. So for example, over time, the network nervous system will, for example, tune the decentralization of these subnets by maybe mixing in nodes from new locations around the world and things like that, or remove nodes that aren't functioning correctly. So Internet computer is really proof of useful work. So all of these node machines are built to the same standard spec, and there are different generations of the spec, and a subnet will only combine nodes of the same generation. And the reason for that is when a subnets under load, they're running protocol called threshold relay, which is like a random beacon. And it's like, hey, you node produce the next block, you node produce the next block, you node produce the next block, right? And if you're not able to keep up, if a node isn't able to keep up, it won't be able to produce the block when it's asked to sufficiently quickly, and the predicate will fail over to another node.
00:48:37.790 - 00:49:09.040, Speaker A: So your requirement is not to produce more blocks in a competition, but actually to produce the same number of blocks as everyone else. And if a node isn't producing the same number of blocks over time, who knows why that is? Maybe the node machine isn't built to the right spec, maybe they haven't given enough bandwidth. It doesn't really matter, but the network will see it as faulty, and faulty nodes get removed. So obviously if a node gets removed, then it has to be replaced by a new node to maintain the decentralization.
00:49:09.500 - 00:50:01.140, Speaker B: That makes sense. Ultimately the nervous system is kind of dynamically adding and removing the nodes if necessary. I've always said whether any of these blockchain ecosystems can't really overcome physics, and I've personally been much more of a proponent of leaning into much beefier hardware, whether that be multicore machines, whether that be faster hard drives, more bandwidth. When you're in these systems, it sounds like the Internet computer has pretty sufficient amount of compute. Obviously we're going through the storage specs. How is the throughput of the network to communicate up and down between these different nodes?
00:50:04.600 - 00:50:51.620, Speaker A: Well, that's obviously something that's very highly optimized. And I mentioned recently we got like a 25% jump in the finalization rate of subnets through an upgrade to the p two p layer. So actually the software that these nodes are running, which of course really the implementation of the protocol itself, is also configured by the network nervous system. So dfinity works very hard to propose improvements to the protocol, to the neural nervous system. And then these get blessed. People in the community can see the GitHub commits and everything else. And if those improvements get blessed, then other proposals go in that actually roll those protocol upgrades onto subnets.
00:50:51.620 - 00:52:01.370, Speaker A: It's difficult. People always want simple explanations. Internet computer to some extent defies that, because there's so much work in engineering and science that goes into every little kind of feature, and you often have to get into the details, spend a lot of time understanding. One of the most important parts of the Internet computer is this chain key system. When the Internet computer's network nervous system spins up a new subnet, those nodes run something called a non interactive DKG, which enables them, through a fully decentralized protocol to each create a bit of random key material that isn't shared with the others. And through that key material they're able to generate a random numbers in a sort of unpredictable, unmanipulable, unstoppable way. They're able to create signatures on messages.
00:52:01.370 - 00:53:03.012, Speaker A: The subnet just has this public key, which itself is signed by the network nervous system's public key. That's an incredibly beautiful but complex piece of cryptography. The non interactive DKG itself was designed by a guy called Jens Groth, who's one of the godfathers of zero knowledge proofs. But if you go, it's like on our website somewhere, and you go to the non interactive DKG paper, it's like 70, 80 pages of math formulas. And that's how it works. Now for me as chief scientists, I work with cryptographic building blocks and we employ a lot of professional mathematicians and cryptographers. And they look at that and they tell me, yeah, like this non interactive DKG does what you want and you can trust it, but to actually go into that, it's pretty tough for a normal person.
00:53:03.012 - 00:53:03.604, Speaker A: You really need to.
00:53:03.612 - 00:53:18.106, Speaker B: No worries, we don't have to go into the exact technical details. I'm just curious, like in the ballpark, are these kind of machines pushing 100 megabytes, one gigabytes, 100gb of any numbers?
00:53:18.298 - 00:53:32.802, Speaker A: Oh, in terms of the bandwidth between them, correct. I think it's, it's on the website somewhere. I think they need to have like each node machine needs to have like a ten gigabits of bandwidth available to it.
00:53:32.946 - 00:53:52.572, Speaker B: And does that ultimately allow you to have much larger blocks that allow the kind of each of the individual subnets to communicate quite a large amount of information that is then handed off to the compute that has larger beefier core machines that can do all this parallel?
00:53:52.756 - 00:55:27.794, Speaker A: No, look, all of the compute is performed by smart contracts because it's only smart contract code that can give you all these magical properties like being tamper proof and unstoppable autonomy and so on. So each subnet uses the same, you know, protocol stack, and it starts off with something called threshold relay, which basically is a, you know, once they've run the non interactive TKG, they've all got this like private key share, this, you know, private key material that enables them to create signatures, BLS threshold signatures. And the very beautiful thing with Blstresh signatures is that they're unique and deterministic. So whatever subset sign a message, whatever subset of the nodes sign a message, the signature is always exactly the same bytes. So threshold relay generates this random beacon just by starting off signing something and producing a new BLS threshold signature. And then on the next round they just sign the same BLS threshold signature that gives you a fault tolerant sequence of random numbers that's unmanipulable, verifiable and so on, without running a consensus protocol. So that's very important for the next layer called probabilistic slot consensus, which is really inspired by traditional proof of work, but replacing proofs of work by the random beacon, random numbers from the random beacon.
00:55:27.794 - 00:56:10.700, Speaker A: And you know, obviously it benefits from, you know, years of additional research. And so it's very highly what we call very highly consistent. And then you get another layer on top of that called the optimistic synchronous finalizer. And that thing, you know, the probabilistic slot consensus creates a very consistent chain of, right, and but you know, chains are eventually consistent, right. You only know that something's final with a high probability. The Internet computer wants deterministic finality. So this optimistic synchronous finalizer, you know, allows the nodes to finalize different branches of that chain very efficiently.
00:56:10.700 - 00:57:25.858, Speaker A: Okay, so first of all, that kind of stack is used to sequence transactions. So currently, now transactions are described as really function calls, transactions, just a call to a smart contract and with the exception of large binary arrays, because somebody might be uploading an image to, I always use Openchat as an example, but Openchat is a fully on chain social network messaging platform. You and I could be chatting on Openchat and I could send you a message that's a transaction. I could send you a photo as a message that's a transaction and it's being stored in your smart contract that's storing your chat history. So in order, the transactions are these function calls, but normally the parameters are in there. But if the parameter is large byte array, like an image or something like that, you just get the hash of the image and it's distributed and said directly on the network. So basically, first of all, the blocks themselves are just blocks of transactions.
00:57:25.858 - 00:58:09.510, Speaker A: And only when a block is finalized, deterministically finalized, will the nodes actually begin processing those transactions. So it's like two layers, like with traditional blockchain, like Ethereum for example, the node that publishes a block has also processed those transactions and the block contains a hash of the updated state. That's not how the Internet computer works. The Internet computer first sequences transactions as efficiently as possible and only when the sequence has been finalized the transactions actually.
00:58:09.810 - 00:58:15.490, Speaker B: So it does the ordering and then kind of asynchronous, asynchronous execution for the finalization.
00:58:15.650 - 00:59:01.120, Speaker A: And it's easy to see why. Right. Can you imagine with, you know, this amount of computation at state going on, and if the nodes are like, you know, doing the computation and, you know, you create one branch, right, and I create another branch, mine wins. Like you've somehow got to reverse all those changes to the state and now start reapplying the blocks to get onto my branch. And that's obviously, to be honest, it's not a very good way of doing things. And that's why really, if you want to create a high throughput blockchain, you have to have a two level architecture where first of all you sequence new transactions and then when they're finalized, you process them on the next level so you never have to do state rewinds.
00:59:02.020 - 00:59:18.892, Speaker B: That makes sense to me. So like within these different subnets, you said there's no consensus. You're kind of created some with PSL signatures are kind of able to skip that.
00:59:19.036 - 00:59:41.070, Speaker A: Well, there is consensus. I mean, there's a very advanced consensus stack running. So the consensus stack is threshold relay, probabilistic slot consensus. And then, you know, but probabilistic slot consensus creates a chain, you know, which can have branches and stuff like that. And the finalizer will finalize a specific branch. Right.
00:59:41.650 - 00:59:52.586, Speaker B: And how often does that finalization happen? Like you guys kind of like checkpoint data or like, is there a Internet computer, a conception of a block time.
00:59:52.658 - 01:00:25.540, Speaker A: I can just see it. Oh, there is. So block time is normally like a second and then finalization is normally on average like I think like one and a half seconds, something like that. It's on the dashboard, you can find it in there. Look for finalization rate. But yeah, typically a subnet's adding a block a second and finalizing every, and finalizing a branch every one and a half seconds. So finalization is pretty effective.
01:00:25.540 - 01:00:34.352, Speaker A: Sometimes you've got a couple of blocks before finalization happens, something like that. But I mean, obviously an extremist, sometimes it gets a bit longer. But generally speaking, right, yeah.
01:00:34.536 - 01:00:53.940, Speaker B: In terms of like the upstream and downstream with the bandwidth connections, ten gigabit is quite a good amount of data. Is that generally processing just that local subnet or is that also to be able to communicate with all subnets kind of across the Internet computer?
01:00:55.200 - 01:01:51.390, Speaker A: Yeah. So remember on the Internet computer, subnets are invisible to smart contracts. So while it's true that the latency, that smart contract communication has less latency if they're all on the same subnet, smart contracts can communicate with any other smart contracts. Subnets are in invisible. So if you were, you know, let's say there are ways of clustering smart contracts together. So they're kind of like forced to be on the same subnet right, behind the scenes and for certain kinds of systems. Let's say you were creating some kind of Internet service and, you know, it was going to be comprised of like, you know, ten large smart contracts, right? And a canister smart contract can have up to 400gb of persistent memory pages inside.
01:01:51.390 - 01:02:22.250, Speaker A: So smart contract bytecode, like the webassembly bytecode inside a canister smart contract runs within its own persistent memory pages and if you like, only it can access them. But these smart contracts can run in parallel and they, when you're writing a smart contract and you call into another smart contract, it looks synchronous. I'm a smart contract. I've got some code and I call one of your functions, it looks synchronous, but actually it's asynchronous. All the stuff's happening in parallel.
01:02:24.110 - 01:02:28.490, Speaker B: Is that because of the sharding or is that because of the virtual machine?
01:02:28.790 - 01:02:34.890, Speaker A: Well, even within a single subnet, smart contracts are running in parallel.
01:02:36.150 - 01:02:45.756, Speaker B: I'm trying. Is that because they are running or they're doing the ordering and then the finalization is, well, so again, I suppose.
01:02:45.828 - 01:03:26.042, Speaker A: When I said it's a two level thing, it's actually a multilevel. So first of all, the subnet reaches agreement, final agreement, deterministically final agreement on the ordering of new transactions that are being appended to the chain. Then all the nodes start processing them. And it does that in, like, batches, right? Like a block's worth of gases processed, not gases called cycles. But again, it's not like a normal blockchain. A normal blockchain, like just, you know, will run, you know, let's say the sequence of transactions, 1234, it'll run one. When one's finished.
01:03:26.042 - 01:04:14.656, Speaker A: It'll run two when two's finished, it'll run three. The Internet computer will kind of like subnets, will schedule, send these transactions as messages to these different smart contracts and then run these smart contracts in parallel. And it uses something called deterministic time slicing. This comes back to this whole thing of a blockchain computer. We see blockchains as being operating systems that run on multiple machines rather than single machines. So I don't know if I'm using a MacBook here for this podcast. And it's running OSX, but OSX runs on a single m one chip, whatever.
01:04:14.656 - 01:05:03.734, Speaker A: It can have multiple m one chips, but it's running on a single computer. A subnet ICP is really, you know, it's like an operating system, a distributed operating system that runs on multiple computers. Okay, so now let's talk about what happens inside a traditional computer like this MacBook. You know, there are actually lots and lots of different processes running on this MacBook, some of which you're aware of, some of which you aren't aware of. Right? Like there's, you know, probably some worker processes behind the scenes that are processing our video feeds and things like that. That in fact, there are probably hundreds of processes running on our MacBooks, albeit a lot of them are hidden. So the m one chip has protected mode instructions.
01:05:03.734 - 01:05:46.808, Speaker A: The operating system runs within this root mode, if you like. And what it does is it loads processes, runs them using these protected mode instructions in a way that gives them their own virtual address space which they can't reach outside of. It allows them to run on the process for a little while. And then it needs to give another process a go of the processor. So it time slices. And so it takes the first process off the processor and gets the next one and puts it onto the processor and lets it run for a while. This happens so quickly that we get the impression that all of these different processes are running in parallel.
01:05:46.808 - 01:06:12.658, Speaker A: They're not actually. They might be. I suppose you've got multiple calls, but in essence it's time slicing. The operating system is giving each of these processes a little go of the processor. So Internet computer blockchain runs the same way on a subnet which is hosting a whole bunch of smart contracts. It uses deterministic time slicing. You know, all smart contracts involve gas.
01:06:12.658 - 01:07:07.330, Speaker A: On the Internet computer is called cycles. Internet computer smart contracts pay for their own computation in a reverse gas model, but nonetheless it's metered computation. Right? So the ICP protocol will take a smart contract, put it on one of the processor calls. Actually, currently they're only using four processor calls, so that's like, and so there's like it'll have like you, smart contract go on to processor core, one year onto two, you on three, you on four, and then it's watching how many cycles these smart contracts consume, right? And you've had enough of a go on the core, so I'm taking you off and I'm putting another one on. Or maybe you finished your computation even before I needed to stop you, so I'm going to take you off and put another one on, right? It's working the same way. It's called deterministic time slicing.
01:07:07.830 - 01:07:46.912, Speaker B: The time sleeping has been something that I've been really interested in as well. Just even with trying to use channels, the bandwidth channels more efficiently as we eventually push up against some of those limits, like a ten gigabit channel, saturating that channel and trying to use 100% of the resources, even similar to cpu's with multiple threads and multiple cores. So is ICP, I think, as you mentioned, able to take advantage of, for example, the m one, having multiple cores, using all those cores for those resources?
01:07:47.096 - 01:08:39.578, Speaker A: Of course. Now look, I think the gen two spec has like 32 cores, right? And currently, you know, it's only running like four canister smart contracts at a time, right? So it's only making use of four of those cores, albeit of course the node machine is doing all kinds of stuff and those other cores are being utilized. But that gives you an example of like the kind of relentless work that goes on behind the scenes. The reason we're only using four cores is currently that's the most efficient configuration we'd love to get to eight cores, right? 16 cores, 32 cores. And it's not just process utilization like these smart contracts running in parallel. We're doing deterministic time slicing. And by the way, this is so far in advance of traditional blockchain science.
01:08:39.578 - 01:09:04.340, Speaker A: As you can probably tell, it's not an easy thing to do. But we're also doing that at the p two p list. I mentioned that recently there was an upgrade to the p two P protocol, and we've got, like, a 25% improvement in the finalization rate. I think that upgrade involved a protocol called Google Quic. So that is a bit like a sort of reliable udp. I don't know if that makes sense.
01:09:04.380 - 01:09:08.920, Speaker B: Yeah, Solana recently had to adopt something or quic as well, because there.
01:09:10.180 - 01:09:57.637, Speaker A: So you're basically sending, you know, a fair degree of parallelism in the connections between nodes as well, and then the protocol further optimizes the order in which things are sent. So, like the PDP layer in the Internet computer, say, for example, you and I are nodes in a subnet. If I've got a big artifact, like a block, I will advertise it to you. I won't send it to you. I'll just send you the hash and say, I've got this. And if you haven't already received the block from another node, you'll ask me for the block. But if I have a very small artifact, like a signature share involved in the chain key or something like that, it's only a few bytes.
01:09:57.637 - 01:10:44.022, Speaker A: I won't send you an advert, I'll just send you the artifact, and probably you'll receive it multiple times from multiple nodes. But optimizing all of this is complicated, and it's a full time job, and we have a team of. I forget how big the p two p team is, but you're talking about a whole bunch of PhDs who do nothing except work on optimizing the p two p protocol. So, I mean, you know, just the team that we've got, you know, we've got more PhDs working on just the p two p protocol that most blockchains have working on. You know, the core, core, core protocol that they use. It's like a massive. You know, what we do is like a massive undertaking, but it works.
01:10:44.022 - 01:11:11.790, Speaker A: And the stats and the performance figures tell the story. It's currently doing 230,000 ETH equivalent transactions a second, on average. But that's a tiny fraction of what we want it to be doing. We want to see it doing billions of ETH equivalent transactions a second. And actually, that's really the network that you see today is capable of doing that. It's just, it'll grow as more and more people build on the Internet computer.
01:11:12.450 - 01:12:12.370, Speaker B: And do you think, when I think of kind of these early systems like Ethereum, to me, ultimately what they've really optimized for is low hardware requirements in terms of low bandwidth, low core count, just low resource requirements, which I think ultimately. Now, it's interesting to me because some of these newer projects are really trying to overcome some of those limitations with increasing the throughput, either pushing computation to a L2. If you were. I know it's difficult to summarize, but do you think the Internet computer is more just leaning into these higher hardware requirements, allowing you to have higher decentralization with the kind of dynamically adjusting subnets, but also increasing scale because you are leaning into these higher hardware requirements?
01:12:15.150 - 01:13:13.146, Speaker A: I mean, so when those gen one, gen two, no machine specs were devised, I think they came around as the result of. Or the gen two spec came around as the result of people experimenting with different hardware configurations and trying to get the maximum amount of computational capacity per dollar invested. And then someone proposed it to the network nervous system as a kind of motion, and it became a standard. But the scalability of the Internet computer and its performance and efficiency comes about through a thousand things. It's a shared nothing blockchain network. There's not a single piece of the Internet computer that you will find in any other blockchain. And everything was built from the beginning to produce a world computer.
01:13:13.146 - 01:13:47.530, Speaker A: It wasn't like, there's just no way you can take something like Solana and give it the performance properties of the Internet computer. There's just no way. You have to really start with a blank sheet of paper. You need to have a team of hundreds of people, right? Hundreds of people. And, you know, those people need to be kind of PhD level for a very large part. In addition to that, you're going to need like, you know, not just professor level people, because, I mean, this is the thing. It's like, you know, professor, you know, Emmy good zero is an associate professor of computer science.
01:13:47.530 - 01:14:33.026, Speaker A: It's not that. That's not what I'm talking about. I'm talking about like, you know, gods of computer science. Like, you know, Victor shoup did a lot of work optimizing some chain keys so that we, you know, the Internet computer's got multi, multi chain capabilities and can create transactions. I can sign, you know, subnets, can sign transactions that run on other blockchains, right? Like bitcoin or ethereum. You know, he's a God of computer science. Like, you know, when I started really researching classical presenting fault tolerance and trying to fault tolerant consensus and trying to repurpose it for blockchain, I was greatly inspired by this paper that he wrote in 2000 called Random Oracles in Constantinople, and they're like, seminal piece of work.
01:14:33.026 - 01:15:15.810, Speaker A: Our CTO is a guy called Jan Kamonich, one of the most cited cryptographers in the world and very famous for the work he's done. And he was originally leading crypto research at IBM. And when he came across in 2018, he really brought a lot of IBM's top cryptographers with him to dfinity. Going back earlier, we started off, we had Timo Hanke, who from the bitcoin legend who created ASIC Boost. I think he was the first employee. That was followed by Ben Lin, who's the elf from BLS cryptography, Andreas Rosberg, who's the co creator of Webassembly and leads that space. I mean, these are the kind of people you need.
01:15:15.810 - 01:16:33.798, Speaker A: Plus just Armiz are very, very talented PhDs who are able to sort of straddle research and engineering. Because in order to create something like the Internet computer, you're not going to be able just to take, go to the toolbox of existing blockchain code and just tweak it with a new consensus algorithm or something like that. The whole thing has to be built for purpose, and it takes years and years, and you need like a very broad skill set to be able to maintain within the organization, to be able to maintain that kind of code base. So, I mean, what is certainly, I think a fair criticism of the Internet computer is that it's difficult to understand and it's difficult for amateur hackers to contribute some parts of the software because it's so complicated. But we always had a very singular mission, which is reinvent blockchain as a real world computer that reinvents compute and can drive this blockchain. Singularity, we believe, on where all systems and services, everything from a social network through an order book exchange to an enterprise system, can run on the chain. That's what we're seeing happen with open chat.
01:16:33.798 - 01:17:07.190, Speaker A: If listeners want to see a social network, which is highly interactive, go look at Openchat, it's OC app. It's crazy. There's public groups on that thing with 40,000 people, it fucking works. And it's running 100% from blockchain. When you connect to it, authenticating using Internet identity, you're speaking directly to a smart contract. A smart contract's serving you that interactive user experience using prefinalized transactions for the HTML and JavaScript and so on. Go to icdex.
01:17:07.190 - 01:18:03.980, Speaker A: IO, I think is, which is a full order book exchange that has chain key capabilities, the multi chain chain key capabilities and progress this year will probably host every single ERC 20 token, as well as bitcoin and ether and stuff like that, and potentially tokens. On Solana, you check out VRC. That's an early enterprise thing, the voluntary recycling credits exchange. All of this stuff runs 100% on chain. Very, very different to what you see in traditional blockchain ecosystems, where the blockchain really is just hosting tokens, bits of defi logic nfts, not the content. On nfts, the content is always somewhere else. Typically on Amazon, actually, oftentimes behind ipfs pinned to Amazon, but on Amazon nonetheless.
01:18:03.980 - 01:18:40.930, Speaker A: Say for example, you're playing a game on Avalanche. The game isn't really on Avalanche. It's a game that's running on Amazon Web Services or Google Cloud or something like that. And then at key points in the game, you'll be sort of bumped out to perform an NFT transaction with your metamask like wallet. But the only thing that's on the blockchain really is the tokens, the NFT and not the NFT content. One of the ways I try and explain this back in the day, the NFT 21 is, look, the Internet computer is the only blockchain where you can even store a phone photo. A phone photo is about 3.3
01:18:40.930 - 01:18:55.546, Speaker A: meg. It's not technically feasible on Ethereum, it's not technically feasible on Avalanche. It's not technically feasible on Solana. None of these guys can store a phone photo like that. Goes somewhere else and they link to it. Internet computer, I think it cost about 0.6% or six cents.
01:18:55.546 - 01:19:34.700, Speaker A: I can't remember to store a photo a year. I think at the time it cost with the gas fees, like $110,000 in theory on Ethereum, actually technically impractical. But if you were just to write it in lots of little bits, right, it would cost you $110,000. I think it was like $420,000 on Solana, but again, technically impractical because I think each account can only store 64 kb or something like that. So these are not web. Three blockchains in the same mode as the Internet computer where you've got. They're storing like tokens, bits of Defi logic nfts which are just linking to content off chain.
01:19:34.700 - 01:20:19.380, Speaker A: Internet computer is hosting social networks and their user experience, all their data, all their computation. And those social networks are running. Oftentimes there's a whole load of them running under the direct control of community daos. There's no backdoor, right? There's no Amazon Web services account that the developer has a username and password for. There's no smart contract that they have an admin key for and these daos controlling them. It's full automation, full autonomy. The developers involved in Openchat propose software updates to the open chat DaO, called a service nervous system, and there'll be links to the commits on GitHub and things like that.
01:20:19.380 - 01:21:14.216, Speaker A: And if the community, which is in the tens of thousands once the update, the proposals are adopted and the DAO pushes the code to the open chat smart contracts and the service is adaptive and evolves just like the Internet computer itself. It's full end to end decentralization, like full stack decentralization on a world computer. And there's nothing remotely similar to get that you can't take Ethereum and credit and Samsung's zero knowledge proofs on there too. It just doesn't even begin remotely. To take it in the direction of world computer, you can maybe speed up transactions. There are data availability and other issues, but yeah, it can give you better throughput for DeFi, but it doesn't create a world computer. World Computer is the third big blockchain paradigm.
01:21:14.216 - 01:21:26.230, Speaker A: We had cryptocurrency, digital gold, bitcoin, we had smart contract platform with Ethereum. The third paradigm is world computer and reinventing compute using blockchain as the backend platform.
01:21:26.970 - 01:22:26.380, Speaker B: Yeah, if I were to try to summarize, I would really articulate the different visions as the current high throughput blockchains really as an asset ledger that just can know kind of who controls what coins. To your point, sometimes they point to AWS. But really the difference between these asset ledgers, even though they may be high throughput, is the difference with Internet computer is really having that entire stack where you can store larger amounts of data, where you have these high throughput chains, subnets that can scale communicate to each other. And really as the network continues to grow, kind of continue to dynamically allocate more resources to the network, dynamically adjust different subnets and continue to scale further and further.
01:22:26.760 - 01:23:30.926, Speaker A: Yeah, like infinite scaling, right? I mean, hence decentralized infinity. A world computer, you know, has to be able to host and process unimaginable amounts of data and computation and that's what the Internet computer is intended to do. And I don't know how many, what the size of all the active smart contracts on Ethereum are, but I bet you could fit them into the memory of a single Internet computer smart contract which can hold up to 400gb of system memory pages. It's just a different kind of thing. And what's really cool with the multi chain chain key? Multi chain, which allows Internet computer smart contracts to create signed transactions that run on other chains. And it's called chain key, of course, because instead of having a private key, you have the chain itself acting as the private key people. For example, the thing called ozy, ozzy.com
01:23:30.926 - 01:24:51.330, Speaker A: comma, it's like a, an Ethereum wallet in the browser that can also work, that works is fully interoperable with, for example, Uniswap can have a, and one engine. But essentially what you're doing is you're authenticating to a smart contract using Internet identity, and then you're instructing the smart contract to create transactions that run on Ethereum, right? And then when the smart contract wants to, because its logic tells it that it needs to sign a transaction that you've ordered it to create on Ethereum, it just says to the chain, hey, can you sign this? And then the chain creates the signature. So there's no private key. The chain is the private key. And then the blockchain will actually itself forward that transaction to Ethereum. Or if it's bitcoin, Internet computer nodes talk to bitcoin nodes and they talk to Ethereum nodes currently. So with that technology, you can do something like just as simple as build the user experience for something like Uniswap on the Internet computer and have that controlled by a dao so that you've got end to end decentralization and you avoid those kind of regulatory risks where a regulator comes along and says, hey, you say this is decentralized, and I can see some kind of dao, like mints, these new versions of uniswap.
01:24:51.330 - 01:25:20.912, Speaker A: But you, the developers are running the front end, right? And you guys are deciding like what tokens are available to trade. Decentralize it, just fully decentralize it. Put it on the Internet computer, put it under the control of a DAO. These daos as well, that are used on the Internet computer are incredibly sophisticated. You probably get a hint of it from the reason they're called nervous systems. People state governance tokens to create voting neurons. And these voting neurons can vote automatically by following other voting neurons and all kinds of interesting stuff.
01:25:20.912 - 01:25:58.270, Speaker A: It's like sort of algorithmic liquid democracies, which have become very sophisticated. You will be able to use these specialized daos on the Internet computer to control smart contracts installed on Solana, Ethereum and so on. So you can actually add decentralization to DeFi and web3 projects that are leveraging Ethereum and Solana and so on, using the Internet computer through this multi chain chain key technology, which is trustless math. There's no bridge or anything like that involved.
01:25:59.770 - 01:26:40.780, Speaker B: I think you paint a very beautiful picture. But I think today, as we discussed initially, there is some disconnect from their traditional either narrative or even engineering cohort. Currently, what do you think is the biggest misunderstanding about ICP that has been a limiter of either getting new developers into the ecosystem or attracting more venture capitalists into the ecosystem to fund this project? Because it seems like a disconnect from the vision that you're painting to current reality.
01:26:41.400 - 01:27:36.102, Speaker A: So, look, I'm going to have to answer this question in multiple ways, right? Because there are multiple factors. First of all is to understand, it's important to say, like the Internet computer's got a very thriving ecosystem. There are hundreds of services now running on the Internet computer. And if you look at the number of developers building on the Internet computer, it's like 40 50% of Solana. Now, something else that's important to understand with blockchain maximalists, we want an organic ecosystem, like through 21, really the model for blockchain changed and it became a flywheel model. And the model was that big money came in, typically led by Sam Bankman, fried and others behind the scenes like Barry Silver and so on. They directed vast amounts of capital into favored blockchains and then the VC's.
01:27:36.102 - 01:28:39.660, Speaker A: They loved this idea that you could invest a huge amount of money into an ecosystem and create, for example, like Solana and create a new Ethereum. They liked investing alongside Sam Bankman Fried, who they literally in Silicon Valley thought was a kind of messiah because pattern matching. His parents are Stanford law professors and he's magicing these billions of dollars from thin air. Like, he must be a genius, right? So, you know, like, you look at the Internet computer ecosystem, like 40, 50% size of Solana ecosystem in terms of number of developers, what money has been injected to create that ecosystem? I think we worked out Dfinity foundation in the last three years, has given out $17.4 million in grants to developers. You got a few angels and so on that have put a few million dollars here and there into projects. And, and then there's this decentralized fundraising thing that's alive and well still on the Internet computer.
01:28:39.660 - 01:29:29.550, Speaker A: When people decentralized things like Openchat using a service nervous system DaO, it does a decentralization sale, raises money into the DAO that's under the control then of the community. So that's raised more money, but it's not much money. You look at ecosystem like Solana, billions of dollars have flowed into that. And so we've been like, the metric that we're really keen on is CPA cost per acquisition for the ecosystem. The last thing I did before crypto is a game. This is a key metric. How much does it cost for a game to acquire a player? How much does it cost for an ecosystem to acquire a developer, say? And our calculation is the Internet computer is adding developers for one 200th the cost of an ecosystem like Solana.
01:29:29.550 - 01:30:17.528, Speaker A: And anyone can verify this, just like look at the investments of FGX Ventures and Alameda and the investments that the big vc's followed on with like Andreessen, Polychain, Paradigm, Union Square Ventures, like these guys, Sequoia, these guys loved Sam and they wanted to co invest and they believe in. And Solana, by the way, just say I love Solana too. I think it's got an incredible community. I wish it the best and I hope that developers start using Internet computer and Solana because they're very powerful together. But it's also true to say, and it's fair to say, people keep saying, well, look, I love Solana. It's got the world's biggest developer ecosystem or something like that. It's like, well, do you know how much money was spent to get those developers? It's like 200 times more than what's been spent on the Internet computer.
01:30:17.528 - 01:30:34.026, Speaker A: But it's only like twice the number of developers. Sorry, 400 times more. And it's twice number whatever. It's like our calculation is this, the CPA is 200 times lower. So that for us is very, very important. It's like an organic, it's an organic ecosystem. It's not a paid ecosystem, it's not a flywheel.
01:30:34.026 - 01:31:14.168, Speaker A: And we think that a lot of these flywheel ecosystems are going to have problems, right? So there's, you know, avalanche, it's got like games on avalanche. They got a website dedicated to it. What was behind that? These guys made hundreds of millions, if not billions, by selling their tokens in the bull run. That's why avalanche is, for example, sponsoring the Andretti formula E team, the number one formula E team. I don't know how much that costs, but it's head spinning amount. So what happens is, and this is not just, I don't want to pin this on avalanche, it's true across the board. It'd be like, okay, you've got three guys or a bunch of guys from some traditional games company.
01:31:14.168 - 01:31:43.122, Speaker A: They want to create a game and they want money to do it. Okay, we'll fund you. Here's like $10 million, $20 million, $30 million. And this game is going to be successful because it has an NFT involved, right? Look, I thought I was going to create a successful game. Six months and it was like three years of work and I got 3 million users. It was very, very difficult. And I've seen so many game, brilliant, brilliant games being created by brilliant teams, and most of them fail, right? The odds aren't good.
01:31:43.122 - 01:32:21.044, Speaker A: It's extremely competitive. I don't believe that games are just going to succeed because they've got an NFT. So these ecosystems are spending hundreds of millions of dollars, pouring hundreds of millions on these projects because they think they're going to succeed because they have an NFT or something. And it looks rosy for now, but the likelihood is these teams are going to come back and a year or something and say, look, we need more money. Right? That's the nature of a flywheel. So I think it's important people looking at this, you know, looking at blockchain to understand this. Like, it's not as simple as that.
01:32:21.044 - 01:33:04.790, Speaker A: If you look at Polygon, like, they announced this huge deal, like, Starbucks has selected Polygon to host its loyalty. NFT. And then it turns out that, you know, they paid Starbucks $20 million in order to do this deal. And in fact, I've heard the real number is more like 50 million if you pay Starbucks 50 million so that they use your blockchain to build a loyalty. NFT. Did Starbucks actually select you? And I think that's the matrix blockchain. The Titans behind the titans, crypto Titans, evolved, built this kind of matrix.
01:33:04.790 - 01:33:59.310, Speaker A: And so going back to the other thing, like, we launched, and I think it's this thing called crypto leaks. This is fairly well established now that things happen. At launch, there was a sort of a manipulation of the ICP token price to make a crash, which was designed to make everyone turn everyone away from the Internet computer. And at the same time, you had this bizarre thing where the crypto press, which is of course owned by these titans or directly paid by them, we all know the story of the block and the tens of millions that Sam funneled to them. And even things like even bonafide, like traditional media, was receiving huge amounts of money from them. And they published this junk basically for Sam, as far as we can see in the New York Times, which came from archive intelligence. And then we got knocked out of the crypto press.
01:33:59.310 - 01:34:53.556, Speaker A: And if you go to like, you know, Coindesk and search for ICP, you'll see, you know, go to coindesk, search for ICP, you'll see there's not a single article since, I think it was like June 21 or something like that, which has a picture of me as a clown, right? And then reporting on all these kind of weird, like things like ICP reboot and stuff that were just scams. And then you type in polygon or Matic or type in Polygon and you'll see in the last few months, 1020 articles. And that reflects, I'm afraid, the financial interests of the owners of crypto media. It's frustrating for us. We're blockchain maximalists. We've been running the biggest R and D operation in crypto. We're absolutely obsessed with making this industry successful, succeed through the power of game changing crypto technology.
01:34:53.556 - 01:35:32.360, Speaker A: And yet somehow the people that really wanted just to sell tokens to retail investors in these flywheel models ganged up and tried to shift everyone's attention away from the Internet computer. But that whole matrix, if you like, is weakening, and we all know why it's weakening. The people involved have had serious problems and you're now seeing Internet computer coming back more and more people looking at it. And that, in our view, is a very good thing.
01:35:33.180 - 01:36:15.360, Speaker B: So one of the biggest things that I truly think blockchains compete on is for developers. And how would you ultimately pitch to the developer community that is listening to this podcast on why they should explore the Internet computer versus the hundreds of different l two s or a slana sui of the world and look at the Internet computer with kind of a fresh pair of eyes, even though that it hasn't been looked favorably on in the past, given variety of circumstances?
01:36:16.420 - 01:37:26.948, Speaker A: Well, look, first of all, wouldn't you like to build on a network that incorporates more than 1000 years of crypto R and D? There's nothing else like that in the industry today. So all developers care about the platform they're building on. And it's true that if you build in the Internet computer ecosystem, you won't have people showering you with money and paying you to build there, but you will be building on the most sophisticated technology, crypto technology, in existence today. Secondly, if you believe in decentralization, that has no limits. If you want to build a web3 service, why choose to build it on Amazon Web Services and just keep an NFT on the blockchain? Why not choose to build that web3 service fully on the blockchain. So it's benefiting from full stack decentralization. Put it under the control of a service nervous system DAO so that its community has full control.
01:37:26.948 - 01:38:18.760, Speaker A: There are no backdoors, and you're also protected from, you know, gain some level of protection from regulators because you're not a controller. And why not? Rather than going to the company that's controlling some of these flywheel blockchains and asking for money, why not credit prototype, decentralize it with a service nervous system DAO through a decentralization sale process that brings funds into that dao where they live under the control of the community. But, you know, that allows you to apply for developer grants as well as provides you with a share of, like, you know, founder share of these governance tokens. Like, why not, why not go fully decentralized and, you know, go for the whole web3 vision, the whole thing.
01:38:20.140 - 01:38:58.010, Speaker B: Full send, the full web3 vision. I love it. Yeah, we've covered a lot, and I know we're extremely over time in terms of the podcast generally goes, but I love just hearing you speak and kind of going into the depths that you did. Is there any kind of, as we're departing, any final things that you would love to touch upon that we didn't cover? I know it was more technically focused than probably most podcasts, but any parting thoughts that the community or investors engineer should know about the Internet computer that we did not cover?
01:38:58.710 - 01:40:10.832, Speaker A: Yeah, so cool. Maybe just, you know, cool things that are coming on the Internet computer. Number one, people are already running large language models or smart contracts, but we've got new tech coming that will enable people to run large language models or any kind of AI models on the Internet computer in far more performant ways. So we've got transforms that you can apply to AI models that essentially make them work with integer arithmetic behind the scenes rather than floating point, which means we can apply hardware optimization while keeping them deterministic so they can be run in optimized form of smart contracts. We think running AI smart contracts is going to be incredibly important because people are going to start caring. If I've submitted a prompt to an AI model, how can I be guaranteed that that prompt was actually run by the model? And the inference produced this response? That's only possible if you run an AI model as a smart contract. So that's something that's coming and is going to be incredibly important.
01:40:10.832 - 01:41:35.990, Speaker A: Another one is these multi chain capabilities just get more and more powerful all the time. There's already this trustless bitcoin twin called Chinky bitcoin, which you can sell for hundredths of a cent with 1 second finality. There's extensions to chinky coming soon that will allow you to do bitcoin inscriptions and ordinals through chain key. Also more work with the Ethereum network integration so that not only will you be able to have, will you have chain key eth, but also chanky versions of all the RC 20 tokens. Your Internet computer smart contracts will be able to call directly into Ethereum smart contracts, and vice versa. Which of course means that Ethereum smart contracts will be able to natively and trustlessly interact with AI is running a smart contract on the Internet computer, and you'll also be able to interact with other blockchains too. And that in just the simplest case will enable people building on traditional blockchains to, for example, move the interactive user experience and any kind of heavy duty processing of data onto the Internet computer and put under the control of a DAO to fully decentralize what they're doing.
01:41:35.990 - 01:42:30.088, Speaker A: And the other one is, here's a wild prediction. So there's this thing called oise.com and it's an Ethereum wallet in a browser. It's just a, you know, at the moment like a prototype, but I mean, I've got a whole bunch of ERC 20 and Ethernet, so it works. And you should check out the experience that offers and then consider that you can also open that in an incognito window and essentially that gives you a brain wallet. So this is really important for the developing world, right? Imagine what's going to happen in places, some parts of Africa, as crypto takes off. They're not developed economies, crypto on their phones.
01:42:30.088 - 01:42:56.622, Speaker A: You're going to have a traffic stop and they're going to say, hey, let me see your phone. If they see metamask, they're going to steal all your crypto. With the Internet computer, you can basically open an incognito window, go to aussie.com or whatever the future brain wallet system is. Web wallet. What do you want to call it? Click authenticate. It'll do it with Internet identity, which will probably involve this TPM chip on your phone.
01:42:56.622 - 01:43:38.270, Speaker A: But there's a private key inside that thing, but it's undetectable. You just put in your phone number, your Internet identity, which is like a phone number. Authenticate with a fingerprint using that chip on your phone, and you're into your wallet. But once you close and you can then send, receive, interact with defi services like Uniswap. But when you close that incognito tab, there's absolutely no trace of crypto on your phone. There is actually a private key inside the TPM device on your phone, but there's no way to open that chip and see that it's there. So effectively now you can maintain crypto just using this kind of phone number.
01:43:38.270 - 01:44:05.516, Speaker A: You can attach lots of devices to that and so on. So I think that kind of thing is going to be very, very important in the developing world. It's going to give people the ability to store crypto in their head, essentially. And these are the kinds of things that are possible on the Internet. Also, check out things like hot or not. They've renamed it, they've got some new thing coming, video streaming, that kind of thing. Although I think for a bit at the moment.
01:44:05.516 - 01:44:14.000, Speaker A: But that's also going to be very important. Someone should create a decentralized Spotify on the Internet computer, that kind of thing. Yeah.
01:44:14.620 - 01:45:28.820, Speaker B: Awesome. Well, Dom, this was maybe one of my longest podcasts ever. I know I didn't do much talking, but I enjoyed you just listening, kind of going into depth on articulating some of the nuances of the inner technical workings and ultimately painting that different future than most are imagining today. And I'm very curious to see where the world shakes up, because up until this point, it is still extremely small community that we're really in, and we really do need to explore all the different trade offs to get us to scale, because I truly believe this technology, going back to the beginning of this conversation, was the vision of the world computer that Ethereum really outlined. And I think it was that vision that made everybody excited about this technology. I think we've gotten a little bit lost in some different aspects, as you mentioned, with tokens. But I would love to see the industry scale, and I'm excited to see where Internet computer ultimately takes us.
01:45:28.820 - 01:45:42.380, Speaker B: So thank you really so much for coming on the podcast and sharing all your spicy takes, all the different nuances on the technology architecture. And I really wish you and the community all the best.
01:45:42.680 - 01:45:44.368, Speaker A: Thank you. Much appreciated.
01:45:44.544 - 01:45:44.960, Speaker B: Thank you.
