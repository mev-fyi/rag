00:00:00.160 - 00:00:30.458, Speaker A: I think my unique insight actually came about a year ago when I was at Aave, where it was kind of pre a lot of this roll up as a service work, or pre a lot of this modular blockchain kind of conversation. And it was just around a very simple problem statement, how are we actually scaling a lot of these things? It was a very kind of naive question that led me down a lot of different paths. The looming problem is that, you know, entering an inflection point in the space in which we're going to start seeing just an absolute proliferation of chainst.
00:00:30.504 - 00:00:59.310, Speaker B: Appreciate you joining me, Jim. Part two, my wifi cut out the first time, so apologies, but really looking forward to this podcast. I think you have a very unique point of view on the space. You've been involved for a long time, you've been involved in some pretty prolific projects. So maybe to kick it off, just a quick background on how you got into crypto, I believe you were at Aave before your time at Aave and how that kind of informed your view on the space.
00:00:59.470 - 00:01:48.210, Speaker A: Yeah, definitely. And thanks for having me on. Definitely excited to talk more about what we're building at Catalyst and just about the space broadly. But yeah, my background quickly, I've been in crypto for about six years now, full time. So I started off actually as a crypto researcher and consultant, kind of advising enterprises like Fortune 500, hundred companies and financial institutions on kind of what blockchain was and crypto was, and this is back in 2017, where things like distributed ledger technologies and enterprise blockchains were kind of all the rage. And so that was kind of my focus at a consulting firm out in San Francisco. And then I very quickly realized that I wanted to actually build things.
00:01:48.210 - 00:02:35.774, Speaker A: And so I left. I moved across the street to join Ripple. I was actually there for two years as a product manager doing their core blockchain development and infrastructure work, which it was really cool to get a line insight into. What does it mean to build an l one? What does it mean to build a monolithic blockchain using today's terms? That was pretty elucidating. After DeFi summer, I said, no, ethereum is the place to be. I had a short stint at an NFT company where I was a pm there, and then kind of went back to my roots of finance and kind of the problem statement there. So I joined AavE in summer of 2021, and then my formal title there was, I was head of experiments, which is kind of sounds fun.
00:02:35.774 - 00:03:39.950, Speaker A: Yeah, it was definitely a really cool role as a kind of a hybrid between, like, research and new products. And so I did a lot of work on infrastructure. Honestly, that's kind of where my natural interests were kind of landing on. And so things around ZK snarks not so much for scaling, but more for privacy preserving deposits, identity primitives, for under collateralized lending. And then ultimately, I also was exploring interoperability. How do we connect all these disparate, all the deployments together? Or even at the time I was at lens or working with the lens protocol and thinking about how do we scale lens, how do we use things like data availability layers? How do we build a domain specific or application specific environment in order to optimize for certain things. That's what let me down the rabbit hole of app specific roll ups, modular blockchain thesis, and of course, interoperability kind of implications of it.
00:03:39.950 - 00:03:47.734, Speaker A: And I left AAve after a year and a half, so sometime last year and started catalysts, essentially.
00:03:47.862 - 00:04:27.530, Speaker B: Yeah. It's amazing background and appreciate walking us through it. It's always, I would say, hard to make the jump into crypto. I think by being able to do some of those advisories, maybe you got a little bit more of a sneak peek without having to jump in full time. But then getting to join AAvE is no small feat. And head of special projects and even ripple, just understanding the inner workings of what crypto looks like, it's very impressive. I think with even spending time at Aave, you kind of got a unique lens on the research side, on the special projects.
00:04:27.530 - 00:05:00.634, Speaker B: You ultimately got to deep dive the modular thesis. And I would say today crypto, in my point of view, is maybe fractured. Maybe I'm in a little bit of the minority at camp of kind of monolithic chains, but I would love to have you explain a little bit of what you ultimately may be backing up. You wrote a great article about. It's called the looming problem. Can you kind of describe what you saw during your research that kind of made you want to start catalyst?
00:05:00.762 - 00:05:46.170, Speaker A: Yeah. So the looming problem, I guess, answer first is that I think we're entering an inflection point in the space in which we're going to start seeing just an absolute proliferation of chains. Right. They're not real chains in the sense that they're not monolithic, but roll ups or other kind of monikers for modular chains like roll apps or. Or what have you, I think we're going to start seeing just an absolute explosion of them. And I think for folks that pay attention to this space, they've been seeing a lot of emergence of projects called rollups as a service. And so making it just easier and easier to create a blockchain.
00:05:46.170 - 00:06:53.380, Speaker A: Whether you're a developer and using some SDK toolkit, or even if you're just an everyday user and you're clicking a button, you know, you have this GUI that allows you to change different parameters. And so that's kind of like the macro headwind that I'm seeing. Just like paying attention to Twitter and seeing what all the buzz is around in terms of projects and what builders are kind of focusing on. I think my unique insight actually came about a year ago when I was at Aave, where it was kind of pre a lot of this roll up as a service work, or pre a lot of this modular blockchain kind of conversation. And it was just around a very simple problem statement for my team at Aave. And that was, how are we actually scaling a lot of these things? Right? And so it was a very kind of naive question that led me down a lot of different paths. And so one path was just, okay, let's just go to another chain.
00:06:53.380 - 00:08:15.814, Speaker A: And that was kind of like a vendor assessment framework in which I was speaking to teams at Solana, the teams at Avalanche, such and so forth, kind of exploring kind of what it means to build in those environments. And then the second path was kind of around roll ups, right? Just like talking to l two s on ethereum and even, you know, even app chains or even on Cosmos, or roll ups on top of cosmos as well. Kind of so many permutations of projects that you can talk to. And that kind of led me to see that there was a lot of benefits to actually creating an application specific environment that was tailor made for the specific things that we wanted, right. Whether it be having kind of optimized gas prices for certain opcodes that we use more than others, having a different gas token, having Mev capture, having kind of enforcements in consensus that allow us to not have sandwiching or not have any sort of extractive behavior or prioritize certain things over others, and also not have to compete with other applications in that kind of gas market. Or that block space market, rather, was really kind of important to us. But a lot of it was like super nascent, right? Like, these were just like ideas, more or less, but that was kind of like the initial hook.
00:08:15.814 - 00:08:27.478, Speaker A: I had this high level goal. It was like, we need the scale, we have more demand than we have supply, and then kind of like going down that rabbit hole of just like, okay, what are all the options in front of us?
00:08:27.654 - 00:09:15.796, Speaker B: Yeah, yeah. I mean, even today, I still think the market is a little bit fractured in their viewpoints on the. How the industry is going to scale. And what I really appreciate about the industry is that were definitely exploring all the nooks and crannies of these different avenues when you kind of went down some of the topics and exploring these different ecosystems outside of Ethereum. And l two, specifically with, say, a Solana type architecture or even the avalanche type architecture, what things there did you find that ultimately did not suit your needs that you decided, hey, this l two world is really what I want to focus on. Was it specifically kind of the customization that you mentioned?
00:09:15.908 - 00:09:54.058, Speaker A: Yeah, I think it was kind of like a trade off, so to speak, where. Well, I wouldn't even say our exploration was kind of bisected from like, oh, this is a monolithic chain, and this is a nothing like a. Like a modular chain. It was more split down a line of, okay, like, we can customize certain things with this execution environment, and we can't customize it, right. And so on, kind of that ladder bucket. I would even say, you know, when we were having conversations with some of these general purpose roll ups, the value proposition was not as strong as a monolithic chain.
00:09:54.114 - 00:09:54.282, Speaker B: Right.
00:09:54.306 - 00:10:34.096, Speaker A: So I'll even concede to that. Right. Where, like, okay, if you're general purpose, you know, you can kind of do anything in whatever kind of state machine that you choose. Many of them choose EVM. It's not that different from a user experience from a monolithic chain, except, you know, of course, you get some sort of security guarantees from whatever settlement layer that they're kind of having finality from. But that was kind of like, I think from a builder perspective or like a day to day value proposition perspective, kind of fluffy. And so having these conversations with monolithic chains, I was like, oh, like, this is arguably better, especially if we're kind of solving for.
00:10:34.096 - 00:11:18.812, Speaker A: If we're solving for just throughput and transaction costs and everything. But then it became more interesting once we had this conversation around, okay, what does it mean to stand up our own environment? And I think the benefit of having a modular chain over a monolithic chain in that regard, it's like a roll up instead of, like, maybe an app chain was kind of all the headaches of standing up your own validator set and running your own consensus mechanism and having your own kind of chain level governance, or so to speak. So I think that was kind of like where we kind of fell down the lines, and ultimately, we're more interested in the app specific route. But also, I would say what held us back was just the pure nascency of that idea.
00:11:18.876 - 00:11:19.076, Speaker B: Right.
00:11:19.108 - 00:11:26.314, Speaker A: Like, a lot of that, a lot of those ideas were purely ideas at the time, and only now are coming to fruition in some sort of product.
00:11:26.442 - 00:12:21.738, Speaker B: Yeah, it is interesting. I think there's a lot of small nuances with these different architectures. Like you mentioned, just even between an l two and an app chain, by running an app chain, you need to spin up your own validators. How do you kind of establish some floor of security? The L2s? Do you have one sequencer? Do you have many sequencers? Do you have composability with other chains? And I'm sure other l two s, the cost of transactions, the different virtual machines, there's a lot of different choices. Even today, it's not, I would say, evident to builders today, which is a clear winner, because I don't think there is a clear winner. I definitely feel like everybody's still on the starting line, uh, just being how early it is in the ecosystem. So again, I really do appreciate that these different nuances are being explored.
00:12:21.874 - 00:12:45.970, Speaker A: Yeah, definitely. I think that's the benefit of having, um, you know, uh, a landscape of an experimentation where people can kind of just like, turn stones and see kind of what works. And, uh, I like, I like that point that you mentioned. Like, I think everyone's still at the starting line. Like, irrespective of, like, some folks building for longer. Like, all these ideas are still trying to be improved out in the market.
00:12:46.130 - 00:13:48.772, Speaker B: Yeah, I mean, I think the biggest thing, one of the big reasons why I really got into this space was to have people use blockchains. And I think even as you probably found in your research as well, there's not actually a lot of addresses interacting with dapps on chain. I think DeFi was a great example of what you could do on chain once you had composability. Defi summer was an amazing time. Pretty radical spur of innovation that spurred a lot of different unique use cases, a lot of interesting food tokens, but the peeling back, I would say the curtains, there's just few people actually using them. And so I came to personally became a little bit disheartened with how, how much it costs to really interact with, like, ethereum at the base chain, especially once Defi summer started picking up. And then really once 2021 started, it was expensive to interact with ETH on the main chain.
00:13:48.876 - 00:14:48.910, Speaker A: Yeah, definitely. I mean, like, it's kind of a weird dichotomy. Where, like, if you want to be a really good, like, if you're trying to be like, a user driven product organization and you're building a product, the business cases, especially if you're on Ethereum, it's like, go after rich people, right? Like, you're building for, like, people that, that have a lot of capital at their exposure and they have different user behaviors. Right? So it's like, blur is a great example. It was like, hey, we're taking this idea of like, this cute, you know, art marketplace, and we're like, no, people are trading these things. They're sweeping the floor. They want analytics, right? And that's a huge contrast with, I think, what a lot of people want crypto to be, which is no, this public good that is breaking down the barriers of transacting financial value and also having self sovereign data ownership around the world.
00:14:48.910 - 00:15:04.472, Speaker A: And you're like, well, you can't really do that when the gas prices are so high. And as a product, I can't prioritize those people because they're not real necessarily. So definitely a healthy tension. I think as a builder in the space, 100%.
00:15:04.576 - 00:15:30.134, Speaker B: Well, maybe. I think that's a good introduction into what you're building. At catalysts, you see the future being modular, many L2s, how maybe just describing catalysts, what you have built, and the vision that you kind of see one for the modular design space and how you're kind of unifying that as well.
00:15:30.262 - 00:16:22.620, Speaker A: Yeah. So I'll start with kind of the high level vision and then can talk a little bit more about what we're building on a day to day basis. So the high level vision is like we talked about. There's this looming problem, right? There is infrastructure, and there's interest in having just a proliferation of chainst. And so once you have more and more chains, that looks like a very different world than the world that we're operating in now. Right? And I'd say to level set with folks, I think the current state right now is, let's say, like ten domains that people are interested in interacting with, right? Some monolithic, some of them are roll ups. And from a DAP builder perspective or from a DApp protocol builder perspective, you can kind of get away with just copying pasting.
00:16:22.620 - 00:17:42.590, Speaker A: You're like, okay, I'm just going to redeploy different places, and I'm going to have some general sense of a governance structure in order to connect them all together, whether it be manual or whether it be, whether it be some light messaging overlay on top of it to pass governance payloads. That's okay. Again, that's totally fine in the context of ten chains, but what happens in the context of 50 chains, 100 chains, 10,000 chains, a million chains? You're not going to have a team of 50 people that are constantly deploying in different places and coordinating with folks. That's just on the smart contract perspective. I think if you zoom out, we can see that a lot of things break. We could see that RPCs probably break, block explorers probably break, wallets are definitely going to break. I think it behooves the entire industry to think about this looming problem and essentially say, how do I take what I've built, or how do I take the primitives that have been built and reconstruct them in a scalable way that allows for the easy kind of integration of all these new chains are going to be coming in the future.
00:17:42.590 - 00:18:03.430, Speaker A: I think there's a new wave of builders that are precisely thinking about that, whether it be new projects or whether it be builders within existing organizations are really pounding the drum on, hey, we're going to get disrupted if we're not doing this. So sorry, that was a bit of a long winded kind of view into the problem that we're trying to solve for.
00:18:03.810 - 00:18:42.240, Speaker B: No, I do think it's great because I don't think enough people are ultimately thinking about what you just articulated. When you have multiple different L2s, you have to really kind of rebuild a lot of the infrastructure. As you mentioned, RPCs, you have to do. Wallets have to be able to know where to point. You have to, as you said, the block explorers. All those pieces, I think, work today because everything's kind of logically centralized on Ethereum and even in these monolithic chains. But when you start to modularize it, it does introduce some different problems.
00:18:42.360 - 00:19:19.760, Speaker A: Yeah, absolutely. And I think because a lot of this stuff is still kind of being researched and kind of discussed in theory, no one has really kind of seen a clear need in order to do so. But I think that time is coming sooner than people realize, and I think why that's pertinent for us. And catalyst is essentially. I saw this looming problem. My co founder saw this as well, and we decided to start from the base foundations of how we actually overcome this. Catalyst is essentially liquidity.
00:19:19.760 - 00:20:00.860, Speaker A: It's one of the most base primitives that we need in crypto, and it's liquidity built for millions of chains. There's three principles that we've been actioning on in order to allow catalysts to be anywhere and to build for a future of that scale. And so essentially, it's automatic from the sense that as their new chains are being kind of brought up online and deployed, catalysts can automatically be there and automatically connect that chain to every other chain that catalyst is on. It's permissionless. And so anyone can interact with any chain. There's no kind of gatekeeping in that regard. And the last piece is extensible.
00:20:00.860 - 00:20:32.162, Speaker A: We believe in a world of, it's like a heterogeneous world, and so of, like, different consensus mechanisms and state machines and what have you. And so we built catalysts in a way that essentially says we can be in all those places and we can have some sort of unifying standard. That's not a great word, but we have some way of compatibility with all those kind of disparate frameworks so that they can all talk to each other and move value with one another. Those are the three principles of what catalyst is as a liquidity layer.
00:20:32.306 - 00:20:48.066, Speaker B: Amazing. I think that's a great setup. We'll get into the technical stack a little bit later. Super excited to learn about that. But those three core principles, could you maybe just dive a little bit deeper into each and why those are the core focus?
00:20:48.218 - 00:21:36.848, Speaker A: Yeah, definitely. So I think with a lot of problems that I kind of look at, like, I'm thinking about what is the most important, or, like, what is, like, the top level question that needs to be solved. And so, you know, when, when Alexander and I. Alexander is my co founder, we're thinking about catalysts. We were, we're kind of thinking about what is the top level question that needs to be solved? And it's essentially like, how do we maintain this kind of connective, composable experience within defi, um, you know, in a world of kind of, you know, multi domains and also a proliferation of chains. Right? And so we kind of were thinking about what all those pieces are. And I think one of them is, is being open, or I think we said it differently, is permissionless.
00:21:36.848 - 00:22:18.090, Speaker A: Another one is that they're composable in the sense that, like, you can kind of connect them all together very automatically. Right. And then the last piece was more around, like, more of a, more of a, like a theory of the world of, like, okay, like, no one's going to submit to a universe universal standard. And so we need to build in a way in which we can be very extensible for a world of, you know, like, heterogeneous kind of blockchains or execution environments. And so that was kind of like our through line, essentially, but it didn't come easy. It came through a lot of brainstorming sessions, I would say.
00:22:18.210 - 00:22:45.510, Speaker B: I'm sure. I'm sure. And the technical stack, I'm sure, is just as interesting. I think being able to mash together different virtual machines and different consensus algorithms is no small feat. Across different chains, you have different block types, you have different ways of how they communicate. Maybe, if we want to, can just kind of jump into what is the secret sauce that makes catalysts work on the backend.
00:22:45.630 - 00:23:48.530, Speaker A: Yeah, definitely. And so I want to preface that catalyst is a multi kind of version journey, right? And so, kind of what we're bringing to market this year is kind of a step in that journey, essentially. And so, going to share with you kind of how catalyst works, it's kind of solving for, I would say, 60% of this end state that I have. But then subsequent versions will kind of allow for the satisfaction of the remaining 40, essentially. But catalysts, the secret sauce behind it is essentially a concept that we call the unit of liquidity. And so the unit of liquidity, said really simply, is a baseline calculation of the liquidity on each catalyst deployment. It spans assets, it spans asset representations, as defined by certain state machines.
00:23:48.530 - 00:24:25.068, Speaker A: It spans amounts, it spans anything that you can think of. That is the core innovation. Essentially, we leverage the unit of liquidity as this kind of. I say the word universal a lot, but it's like universal receipts that every catalyst deployment is able to communicate value between each other. And so how catalyst works underneath the hood is essentially, we have smart contracts that are deployed on each chain. These smart contracts hold assets, right? So they're pools. And I.
00:24:25.068 - 00:25:14.692, Speaker A: What catalyst is able to do is they essentially can calculate within each specific pool, by each specific asset, how many units of liquidity there are. When folks want to swap, let's say, eth on ethereum, and they want to acquire matic on polygon, that would essentially be communicated through the catalyst protocol using the units of liquidity. It's like you deposit one, Ethan, that might be three units of liquidity that gets transmitted across chain, and then when it's received by the destination side, they then convert that unit of liquidity into how much matic needs to be withdrawn from the pool. And so if you abstract that from a user's perspective, they just sold one ETH and they just received 1600 matic or whatever the market rate is.
00:25:14.796 - 00:25:44.532, Speaker B: From a. Maybe for the non technical audience that is listening, it seems like there's quite a few, I would say bridging solutions that are now kind of arising. Axelar layer zero, etcetera. Would you describe yourself as a bridge? If so, why? If not, why? And how would you kind of compare and contrast what kind of the unit of liquidity is to just a traditional bridging solution?
00:25:44.686 - 00:26:36.622, Speaker A: Yeah, so I would call the liquidity layer, but I think if we can be intellectually honest, it is doing the job of a bridge in the sense that value is being moved from one domain to another domain. And so I think the difference between what we're doing, and there's a number of ways to slice it, I think. But the biggest difference is we're built for this looming problem that we've been discussing. Right. And so I think existing bridges are very much of the camp of let's deploy into different chains, let's have governance processes, et cetera. Catalyst is built in a way in which as more chains come online, catalysts will automatically be there and connect to any other chain. Right.
00:26:36.622 - 00:27:22.230, Speaker A: And we're able to do that because, again, because of the unit liquidity. It's like if you're trying to move units of liquidity from a brand new chain to Ethereum, for example, that can happen trivially right out of the box, whereas that's not necessarily the case for other bridges. And so I think that's the biggest differentiator. But maybe a second sub point that I'll add is that the way that catalyst works is we're not actually using a token in order to facilitate these transfers. The unit of liquidity is not a token, it's just a value. It's a value that we use that's ephemeral. That basically is a unit of account for the whole system.
00:27:22.230 - 00:28:11.286, Speaker A: I think a lot of other bridging solutions try to do that, but they use a token for it because that's the only mechanism that they know how. Okay, you lock etH, and then you get some sort of minted wrapped representation of ETH on the destination chain, and you kind of use it in that regard. That is fine. But I think you run into a number of issues. One is that you kind of hope, right? And the keyword is hope that the wrap asset is backed one to one with the locked native asset, which we've seen in the past has not been the case for several instances, unfortunately. The second piece is now you need liquidity for this wrapped asset. That's very capitally inefficient.
00:28:11.286 - 00:28:19.926, Speaker A: When you look at catalysts, we use native assets. We don't need the liquidity for a wrapped asset, and we don't have those security vulnerabilities in that regard.
00:28:20.038 - 00:29:14.460, Speaker B: Gotcha. Very interesting. Yeah, the ramp assets have been very troublesome for the industry, and I think there's definitely a bifurcation of wrapped assets versus just being able to transfer tokens natively onto those individual chains. And I believe that will be the dominant solution going forward, just to prevent some of the issues that we've seen with wrapped assets. But I think one thing that you mentioned, catalysts will be able to integrate with any chain and any different virtual machine and consensys. How are you able to do that from a technical standpoint? Are you deploying new instances of the catalyst code base on each of these machines, or each of these new layer ones? Or are you again, just built abstracted outside of those different ones and plugging into each of them?
00:29:14.580 - 00:30:36.400, Speaker A: Yeah, that's a really good question. The reason why catalyst is able to be so extensible for all these different virtual machines is that in the essence of what catalyst is, it's a math library. We're trying to take certain assets and the values, or not even the values, but certain assets and the quantity of assets are deposited into a pool, and we're trying to convert that into some sort of mathematical value. That is literally what catalyst is. And it's the usage of that value, again, the unit of liquidity and the ability to synchronize, so to speak, all the different pools and all different assets and within those pools and different chains against this one mathematical value is what allows catalysts to be so powerful. With that said, because catalyst is a math library, you can essentially represent that math library in any Turing complete machine. It's trivial for us to move from EVM? Well, it's trivial for us to create an implementation for EVM and then create an implementation for WASM, and then create an implementation for move, because the foundation is just math, essentially.
00:30:36.400 - 00:30:57.280, Speaker A: So it's basically just an approximation theory against the specific requirements of these state machines. That's basically how we're able to be extensible. Because if I got a call and someone said, some of my team called me and said, we need the fuel VM, I would feel comfortable knowing that we could do that trivially.
00:30:58.540 - 00:31:18.226, Speaker B: And correct me if I'm wrong, or maybe reframing it as a question, you will have to write the specific instances. But because the underlying primitive is relatively simplistic in the math format, you don't think it will be kind of a large problem to deploy on these different virtual machines?
00:31:18.338 - 00:31:26.914, Speaker A: Yeah, I think that's the right way to frame it. It's like the foundation is set such that these writing specific implementations becomes quite trivial.
00:31:27.042 - 00:31:53.098, Speaker B: Interesting, very interesting. Now, the virtual machine space is one that I really enjoy. I think right now there's two different bifurcations with single threaded and then parallelization, and then how you do parallelization, and then you can kind of get into the consensus rabbit hole. But there's a lot of different unique flavors that people are kind of exploring, going back to, again, just the industry, I think, being early and trying different things.
00:31:53.234 - 00:32:34.498, Speaker A: Yeah, definitely. And honestly, that's a really good point that you're flagging. Right. Like, I do think that there are certain virtual machines that unlock certain capabilities of catalysts that may not be possible within the EVM. And so you said parallelization is kind of a really good piece. I also think some concept of a predicate system or some sort of conditional intent based expression also allows for a lot of power within catalyst to be said. We're pretty heads down with this specific version, but we imagine the innovation happening in the virtual machine will only augment the capabilities of catalysts in the future.
00:32:34.614 - 00:33:12.038, Speaker B: Yeah, yeah, no, it is, it's fascinating design space and what you're building. Maybe just jumping in slightly, a little bit more technical. I think on the website, it mentions that catalyst is one of only works with the most secure and most trust minimized interoperability protocols. I think I've seen trust minimize thrown around on the timeline, on Twitter, in many places, more now so than I have ever seen in the past. Can you explain what trust minimization is and kind of why that is important?
00:33:12.174 - 00:34:19.236, Speaker A: Yeah, definitely. Trust minimization, I think definitionally, in the context of interoperability means that no additional trust assumptions are inherited when you are using that interoperability solution in the context of, let's say you're moving value from, or not even value, but you're passing a message, whether it be reading state or some sort of write state transition function from ethereum to polygon. A trust minimize setup is essentially saying, I'm trusting the validators on Ethereum and I'm trusting the validators on polygon. Right. And as a counterexample, that is typically, actually not the case. And so usually what happens is there's a third party that is kind of facilitating the transactions between the two or the messages between the two domains, and you're actually inheriting kind of the weakest link of those three. Right.
00:34:19.236 - 00:35:00.918, Speaker A: So whether it be some sort of stake system for this, basically a third blockchain, or whether it be some sort of honest minority assumption. If it's like an optimistic relayer, that's kind of what it means to not be trust minimized. And so that's kind of like the abstract definition, but how that actually plays out in reality, just using like late person terms, is that there's something called native verification, where these two blockchains are essentially part of the consensus of each other. And so they're running some sort of like client of one another that's typically represented as a smart contract and then verified on chain.
00:35:01.014 - 00:35:16.798, Speaker B: Yeah, I appreciate that overview. Again, I've been seeing that topic and those words pop up more on the timeline more recently than ever. So I appreciate the clarification for the people that are watching and listening in.
00:35:16.814 - 00:35:32.850, Speaker A: Terms of, oh, sorry, like there's a whole rabbit hole we can go down if we want to talk about that, because I do think trust minimization is, it's a very lofty goal to aspire towards, but I think in reality you're always going to be introducing something.
00:35:32.930 - 00:35:58.140, Speaker B: Unfortunately, I definitely think the industry is moving in general towards more trust minimized aspects, specifically with like clients on layer ones, even on like data availability layers on high throughput chains that have larger beefier nodes. It seems like it's going to be standard in the future, at least in my opinion.
00:35:58.260 - 00:36:19.740, Speaker A: Yeah, definitely. I think it's something that needs to happen, honestly, or else. Yeah, again, we run into that weakest link issue and maybe as a side point, I think that's where a restaking collective like Eigen layer can help kind of mitigate some of that a lot. So even if we're not trust minimized, we can have some sort of restaking as additional security.
00:36:20.360 - 00:36:25.512, Speaker B: Eigen layer is fascinating, but a different podcast in all of itself.
00:36:25.656 - 00:36:26.824, Speaker A: Totally. Yeah.
00:36:26.952 - 00:36:51.858, Speaker B: In terms of kind of catalyst specifically. I mean, not necessarily comparing it to other bridging solutions, but they also run or liquidity layers have kind of their node or infrastructure that they run to secure, going from chain to chain. Are you guys running your own node infrastructure? If so, how many nodes, etcetera, could.
00:36:51.874 - 00:36:57.070, Speaker A: You maybe elaborate on what you mean by other solutions running their own nodes?
00:36:57.850 - 00:37:29.244, Speaker B: XLR has a number of independent nodes running software to validate the cross chain transfers. I think layer zero, ultimately it allows you to specificate the amount of money that you want kind of moving across these bridges. Is there any type of capability that helps facilitate these transfers or provide the unit of liquidity that catalyst is building?
00:37:29.372 - 00:37:57.216, Speaker A: Yeah, sorry, we're going to go on a bit of a detour in order for me to give you a sufficient answer. Um, hope that's okay. Um, so, catalyst is, uh, effectively two pieces. So the first piece is the smart contract logic, which, again, is basically just a representation of a math library. Right? And so that's where pools are, or, sorry, that's where assets are deposited into pools. And. And this uniliquidity value is calculated.
00:37:57.216 - 00:38:29.484, Speaker A: Um, the second piece is what we call our messaging interface. Uh, and that's essentially, it has one simple job. It's the pass the unit of liquidity from a origin domain to a destination domain. We actually outsource that capability. We are a liquidity layer. We are a DAP, a protocol that lives on execution layer. We're not in the game of running infrastructure and nodes, so to speak.
00:38:29.484 - 00:39:15.446, Speaker A: What we're essentially doing is we're aggregating a lot of these arbitrary messaging protocols, and basically having a mechanism in which we find the right routes in order to pass that message. We're using IBC to start, but over time, we might aggregate other arbitrary messaging protocols in order to facilitate the passing of that message. Again, once you pass unit liquidity, it's a very simple 64 byte array. It gets received on destination contract, and then all the good stuff happens that we talked about a little bit earlier. Again, we're not running our own node infrastructure because we're essentially outsourcing that to our organization.
00:39:15.598 - 00:39:30.192, Speaker B: It makes a lot of sense. It reduces the burden and headache on your team. I think even going back to kind of app chains versus l two s, running your own infrastructure is hard. It's not necessarily easy.
00:39:30.336 - 00:40:21.004, Speaker A: Yeah, yeah, definitely. Not to overuse the word modular, but I think when you look at a lot of bridging solutions, they tend to be quite monolithic, honestly, in their approach, where they're like, we're coupling the transfer of value with the messaging verification. It's like, oh, if you want to move money from two different chains, you have to use our infrastructure, our full nodes. Like Axlr's case, you mentioned Axelar, in order to validate that message, we feel more empowered to say that we're good at one thing, we're good at math and smart contracts. We're not good at relaying data packets and running nodes. And so we're just going to partner with other organizations to do that.
00:40:21.132 - 00:40:57.230, Speaker B: Yeah, makes a lot of sense. I think one thing that you've also studied fairly deeply and have probably a unique opinion on is just composability, kind of liquidity in itself, kind of across these different L2s or different blockchain ecosystems. And then I would say, finally, the latency that can ultimately be introduced by doing some of this message passing. Can you expand on one or kind of all three of those? Just how you kind of think about either latency, composability and obviously your bread and butter with liquidity.
00:40:57.350 - 00:41:36.430, Speaker A: Yeah, definitely. I'm thinking about where the best place to start is. Maybe I'll start with a preface and say that this is something that we're thinking about a lot. This is something that we think about not even in our own island. We talk with the broader crypto community because a lot of people are thinking about the same thing. I think no one's really thinking about what the world looks like in a world millions of chains, but a lot of people are thinking about what the world looks like with 20 chains. And quite frankly, even in that narrowed scope, things are still very, very complicated.
00:41:36.430 - 00:42:50.820, Speaker A: Kind of what you were implying earlier with your question. And so I think where everyone. So what happens in kind of a multi chain world? What happens when you try to move value? It's like you said, there's latency in terms of having different block times and just in terms of having different entities build and propose and validate blocks. There is lack of composability because of that, and there is liquidity fragmentation because of that as well, amongst a slew of other kind of ramifications. I think how catalyst thinks about it is essentially there needs to be infrastructure that's set in place that allows for the reduction in. In latency and also the ability to have some composability or atomicity that essentially abstracts away that latency. It's like underneath you have the chains, and I mean, side points are like things like shared sequencers, but we're going to table that for another time.
00:42:51.400 - 00:42:54.060, Speaker B: Yeah, there's endless rabbit holes to go down.
00:42:54.440 - 00:43:32.760, Speaker A: Yeah, that's why I'm struggling to give you a cogent answer here. But I think the base is the blockchains and their own kind of heartbeat, so to speak, of blocks. We're also going to table da layers like celestia. Let's just talk about monolithic blockchains. I think the layer over that is essentially, I think last time we talked, I didn't give it a name, but now I'm going to call it the solver network. So it's basically sophisticated entities that are able to essentially abstract away the latency of those different block times and of those different kind of validator sets.
00:43:32.920 - 00:43:38.248, Speaker B: Would you describe that as soft finality, or how would you describe it?
00:43:38.344 - 00:45:08.036, Speaker A: Yeah, I think the term floating around is either soft finality or soft confirmations. And then things like sequence, shared sequencers and DA layers assist with that as well. But, yeah, so it's sophisticated actors that have capital on different blockchains or have run infrastructure in the background and they're providing a service, essentially, then what sits on top of that is essentially user actions or application interactions, things like swapping and having very quick latency with that, but having to pay for that latency, because what's happening underneath the hood is basically a very complicated liquidity matching from these solvers. And also, I think, where catalyst plays in this top layer, it's playing in a number of layers, but where it's playing in the top layers, essentially we allow for the access of liquidity from users and also from solvers, and also we allow for some abstracted sense of atomicity. With Catalyst, what becomes really interesting is you can actually have multi leg transactions that, you know, like an atomic transaction or atomic bundle, actually revert to the original transaction if all else fails. And so if you don't actually want money on a destination chain, if you want to buy an NFT, or if you want to vote on a governance proposal or what have you, and for some reason that doesn't work, your whole leg reverts into the origin domain. And so that's kind of like how I.
00:45:08.036 - 00:45:13.086, Speaker A: This is not a very structured answer, but hopefully somewhat of a structured answer in how I'm seeing the space evolve.
00:45:13.228 - 00:46:11.998, Speaker B: Yeah, no, I think it's again like there's so many small nuances in blockchains, and as you said, there's many other different avenues that we could even go down to kind of talk about how we see the space evolving with shared sequencers, with different data availability layers, even talking about different virtual machines. And I think the hard part, I guess, where I try to really take it back to Isdev, I think it's difficult for, say, the person that has been involved in this space so long to kind of understand and communicate some of these nuances. Do you ultimately feel like engineers will just kind of abstract some of these things? They really won't know which l one, l two, they're on. They're kind of just using the application. Maybe they're paying slightly more for the lower latency. How do you see the end user ultimately either understanding, not understanding, or actually interacting with these things?
00:46:12.134 - 00:47:08.462, Speaker A: Yeah, that's a good question. I think a really consensus take is that the end user shouldn't know that they're interacting with blockchains or in the sense of they shouldn't know what blockchain they're interacting with because there's some sort of abstraction, right, an overlay network that routes them to certain, essentially that grants them access to certain block space that's tailor made for their specific use case. It's like, okay, NFT mint chain is different from NFT swap chain is different from game chain, but it's all one interface, I believe that. I would say. I think at a high level, I am a bit. And I think the right analogy is like, you know, when I'm watching something on YouTube, I actually don't know, like, what content delivery network it's coming from. Or like, when I, like, I think people get mad.
00:47:08.462 - 00:47:50.444, Speaker A: They're like, oh, like, why is my ad loading and my YouTube video isn't? Well, it's like, oh, well, your ads actually stored locally or closer to you. So I believe that. I think the road to get there, we'll have many kind of click stops that start to abstract certain things. But I think I'm still of the camp of, like, crypto wants to be seen, which was a great article that foundation posted, I think when they launched v two, and they're like, yeah, like, v one, we tried to tell people, like, we didn't tell people what gas prices were or what block times were or what finality was, and people just got confused. And then v two, we did. And people are like, oh, okay. Those are new concepts.
00:47:50.444 - 00:48:15.896, Speaker A: Like, I kind of grok it. So I do believe that people don't need to know certain things. But I do think with any new technology, there's just new terminology that you need to know. Right? Like, you know, people, when they were, you know, like, calling each other on landlines, they didn't know, like what? Like, download speed for your Wi Fi is right. And now we do know. And I think there's going to be a healthy kind of analogy for crypto.
00:48:16.088 - 00:48:43.732, Speaker B: Maybe a spicy question, but do I think there is kind of two camps today, one of them kind of being the modular world, kind of stitching these all together and then the monolithic world. Do you see a case that the monolithic world ultimately is able to kind of gain some market share just because of its simplicity? Or do you think that monolithic in your point of view is just going to be ruled out and ultimately kind of convert similar to a modular stack?
00:48:43.836 - 00:49:15.098, Speaker A: Yeah, that's a good question. Um, I will say at this point in time, I will concede that there are definitely a lot of benefits to having a monolithic stack. I think. I think the rallying cry, honestly, for, for the Solana team in, like, late 2020 was, was single shard, right? They were like, okay, we're against Eth two. We don't believe in sharded state. We believe in composability in this one singleton machine. Um, and, uh, I still think that that holds true.
00:49:15.098 - 00:49:57.142, Speaker A: Right. Like, I think a lot of people are kind of banging their heads against the wall thinking about, okay, like, how do we overcome fraud proof windows? And, uh, the asynchrony that occurs when different, there's different block times, and they're trying to create different mechanisms in order to kind of overcome that. And with, you have a mind, it's kind of like a joke. It's like, kind of like a meme where it's like there's like the virgin that's like, thinking about on these different things, and the Chad monolithic guy is just like, it just works because it's just one. It's just one state. But so I will concede that, or I will concede being a modular maxi. I will concede that.
00:49:57.142 - 00:50:29.070, Speaker A: I'm being intellectually honest. I'm a pragmatist. I think we're entering a world in which everyone wants to be building modular. And so the reality is that you have to stitch everything together. Like, you know, Genie is kind of out of the bottle in that regard. Maybe they all kind of dissipate or there's some consolidation. But do you think Genie's out of the bottle? Especially when you come to kind of the problem that I was facing at Aave, where, you know, configuring something for your own domain is actually quite helpful.
00:50:29.070 - 00:51:28.572, Speaker A: And I think since then, I've met so many builders that believe the same way and feel empowered to build their own application specific environment. But I'm a pragmatist in the sense that I think there's a world in which you can share homes, something that I think Solana, or it's not Solana, but just monolithic chains in general, are really good at, is that streamlined user experience. And if you have parallelization, I think that solves it as well. And so it would be really good for honestly gaming. I think, actually, Scott Cenardo gave a really good talk in New York two weeks ago about how shards are actually good for games. It's like, when you look at Defi, you're like, oh, we don't want sharded state, but games is actually okay because you can have different servers for different games or other ways of sharding. And so you might not even need that in a monolithic chain, right.
00:51:28.572 - 00:51:56.196, Speaker A: You can just have one state of a game, especially with single player, and having people kind of interact in that regard. So I will concede that I think there will be some benefits to having a monolithic chain for certain things. But I do think, just to recap, Genie's out of the bottle, people want app specific environments. And so I don't think there's a world in which monolithic usurps modular, but I don't think the inverse is necessarily true either.
00:51:56.348 - 00:52:41.350, Speaker B: Yeah, no, it's. It's a interesting question. I personally believe all the architectures will look the same in the end. I do think the asterisk with that is the customization piece. If you want to truly customize, as you said, the opcodes, or even having your own gas tokens, there's just some of those things that you cannot do on a more monolithic chain. But that being said, whether it's a modular chain, in my opinion, or monolithic chains, I think just from all my research and how you scale blockchains, they're going to look very similar with, like, high data availability at the base layer. Whether that's coupled with the execution environment or not, you still need more compute.
00:52:41.350 - 00:53:30.600, Speaker B: You can either do it like single threaded virtual machines, or you can do a parallel paralyze. So I am fascinated just to see where the space ends up. And I think, as I said initially, I really do appreciate that we are early and everybody's trying different ways to scale and different abilities, like your team with catalysts providing solutions to builders of the monolithic point of view, to kind of streamline those and pull it all together. It's not easy to kind of have a point of view on the space more holistically. And so I appreciate the people that have a more pragmatic point of view see the world in a particular light and try to fix that problem. It's definitely a challenge.
00:53:30.760 - 00:54:21.856, Speaker A: Yeah, yeah. And I applaud the people in kind of in the other forefronts kind of thinking about that. And one thing that I will kind of add on to my previous statement is that I think, like, the good thing about monolithic, I think general purpose monolithic is probably not going to pan out. I think people, you know, like, you know, it's like when you get too many kind of different people in one town, they're like, I don't want to pay for this person's activities or something. Maybe not the right analogy, but I do think, like, tailor made monolithic works, because the benefit of monolithic is just sovereignty, right. That's always been kind of like the cosmos ethos. And so when you look at something like, say, it's like, okay, like, we have like, 200 millisecond block times, right? And like, if they were built, if even they're built as a sovereign roll up, and they use Celestia, while Celestia has two second block times, right.
00:54:21.856 - 00:54:32.840, Speaker A: So it's like you're always beholden to Celestia's data availability, whereas if you're fully sovereign, you can have that 200 millisecond if you so choose. And so I understand the need for that.
00:54:32.960 - 00:54:54.050, Speaker B: I think their block time finality is 600 seconds. I don't know if they've gotten it down to 200. That would be super impressive. I know Solana is aiming ultimately for 200 milliseconds as well. It gets a little bit harder once you get under 200. I think the circumference of the earth is 133 milliseconds. So I think we're starting pushing physics there.
00:54:54.090 - 00:54:59.986, Speaker A: But, yeah, it's a geographically bounded availability or something, no?
00:55:00.018 - 00:55:26.006, Speaker B: Yeah, it would be interesting. I mean, Solana is ultimately trying to do multiple liters, so you can kind of cut that down into, say, 133 divided by two. So worst case, like, you're somewhere in between those. No, it is fascinating. I think it's. I mean, as we said, the design space is unique. I think every blockchain today in terms of users is undoubtedly still on the same starting line.
00:55:26.006 - 00:56:24.972, Speaker B: Ethereum has, like, a slight advantage, definitely with TVL, a lot more liquidity there. But in terms of user adoption, I think it's kind of one blockchain game, one killer app could really turn the tables in terms of user adoption. And so I appreciate that you and the catalyst team are focusing on scale and trying to stitch the modular world together, maybe shifting slightly just as we're wrapping up the podcast. What has been, like your kind of biggest takeaways from just being involved in the industry, being at Aave, being at Ripple, to now starting your own company, are there anything that has really stood out from the past couple of years that you've been in the industry, whether it's the ups and downs, avoiding the FTX's of the worlds, the Lunas, any wisdom that you can share either on the company building or just kind of staying alive in this crazy market that we're all involved in?
00:56:25.076 - 00:57:37.636, Speaker A: Yeah, that's a good question. I don't know, if this is off the top of my head, I'm just going to give you an answer. Probably nothing, you know, the best answer to your question, but I definitely don't want to give you a platitude, you know, like follow the users or do your research or what have you. I think when I look at the through line of my career in crypto, it's always been like deeper into the rabbit hole, right? So it's like, you know, distributed ledger technology research, you know, ripple nfts in Aave, but in more kind of a research infra lens and now catalysts, it's just gone kind of deeper and deeper and more and more kind of in tune to the kind of forefront of crypto and kind of the core infrastructure and the core guts of crypto and my time in the space. And my time in the space. I've seen a lot of people come and they tried to, how do I say this? Like, they tried to apply their existing kind of mental models outside of crypto to crypto. And for the most part, I welcome that.
00:57:37.636 - 00:58:26.962, Speaker A: Right. I think that's where innovation comes is net new perspectives. But I think there's a little bit of hubris that comes when people come in, right? They're like, I've worked in Faang, I know how to build consumer apps, right? Like, you just slap crypto on it, it's good to go. Or it's like, I come from building distributed systems. I know exactly how to build the next l one, right? Like, let's do this. And I, time and time again, I've seen people, including myself, including myself, be super humbled, super humbled by that, right? And so this is a space that requires a lot of mental kind of thoughtfulness, openness and curiosity to kind of leverage the learnings that you've had or people have had in your previous experiences. But don't blindly follow those because this is a very different domain space.
00:58:26.962 - 00:58:31.546, Speaker A: And so that's kind of like been my biggest takeaway for my career.
00:58:31.738 - 00:59:09.728, Speaker B: I think that's beautiful. As you said, there's many people in the whole web two world that will kind of come in and say, I know x, y and z, you're all dumb. Listen to me. And I've interviewed a lot of people on the podcast, and I think I, the biggest thing that I have learned, as you said, is really to try to be as humble as possible. Listen to all the nuances that people communicate. And really, as you said, come with it with an open mind. And I think just being on the starting line, also being open to different points of view.
00:59:09.728 - 00:59:26.520, Speaker B: At the end of the day, what we really need is more engineers and we more need more users to push the space forward. And I think staying humble, staying open minded, I think the Andreessen saying is strong, opinions weakly held. It will take you very far in the space.
00:59:26.640 - 00:59:31.056, Speaker A: Yeah. Yeah. I couldn't agree more. I think that will serve people incredibly well in the space.
00:59:31.168 - 00:59:46.822, Speaker B: 100% well. Really appreciate you coming on, Jim, thank you so much for sharing your vision of the modular future, what you're building at catalysts and catalabs. I wish you and the team the most success, and thank you again for coming on.
00:59:46.926 - 00:59:49.078, Speaker A: Yeah, thanks for having me again. I appreciate the good convo.
00:59:49.174 - 00:59:49.510, Speaker B: Thank you.
