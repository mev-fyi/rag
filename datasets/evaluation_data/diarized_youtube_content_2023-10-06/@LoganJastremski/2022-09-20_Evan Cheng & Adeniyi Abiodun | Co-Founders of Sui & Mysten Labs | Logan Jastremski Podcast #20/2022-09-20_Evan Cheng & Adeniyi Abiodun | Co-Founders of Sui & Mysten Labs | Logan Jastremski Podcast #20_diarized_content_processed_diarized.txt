00:00:00.240 - 00:00:16.062, Speaker A: Thank you so much, gentlemen. I've been extremely excited about this podcast, and I think the world's very excited to learn more about Misin and Sui and what you guys are building here. So I really appreciate your time and the opportunity to chat.
00:00:16.246 - 00:00:16.886, Speaker B: Thank you.
00:00:16.958 - 00:00:18.166, Speaker C: Yeah, thanks for having us.
00:00:18.238 - 00:00:19.530, Speaker B: Yeah, look forward to it.
00:00:19.910 - 00:00:48.218, Speaker A: Awesome. I think maybe I was kind of doing a little deep dive on each of your backgrounds and wanted to start maybe just from how you got red pilled in the crypto world. I think everybody's background is a little bit unique. I know that you were passive vmware, and then also at Libra and Meta, you were the director of programming languages, is that correct?
00:00:48.394 - 00:01:00.550, Speaker C: No. So at Meta, start out as director of programming language and runtime, Novi was responsible for both the developer platform as well as research.
00:01:01.110 - 00:01:11.614, Speaker A: Perfect. Well, maybe just starting off from that, like just a little bit about each of yourselves and then we can go more into depth on Swe and like what you're building here at Misin.
00:01:11.742 - 00:01:12.414, Speaker B: Sure.
00:01:12.582 - 00:01:59.742, Speaker C: Yeah, I've been in tech for now 26 years. Was started out as software engineer. You know, just, it's hard to think as recent as ten years ago, I won the ACM software system award. That's the very, very prestigious award for like only the pioneers in the industry. Malcolm Jason was a winner for a prior year. So my thing when I was at Apple and later on Facebook has always been the one that pushed on the boundary of technology, if you ask wrong, really, really hard stuff. You know, on the software side, on the system side, often people come to me, you know, my team, to build this kind of thing.
00:01:59.742 - 00:03:04.590, Speaker C: So to me, getting red peeled into crypto is sort of like, you know, kind of destined. Yeah. You know, it is the combination of a lot of different technical areas that I have interest in. It's really fascinating to add to distributed system cryptography, program language and kind of adding a little bit economics on top of it. So I was really, really fascinated by it. Once I got sort of had a chance to dig into it, start working a little bit with a few different projects in crypto, right around 1718 kind of timeframe, got really excited, but also recognized there's a massive potential in terms kind of addressing the gap between where the vision, where are we going to go with this and the reality of the technology. It was extremely primitive back then, so I thought about, hey, maybe I should do something there as sort of like privacy in my head, like I want to do something in this space.
00:03:04.590 - 00:03:49.180, Speaker C: So when the Libra project, you know, kind of stopped, you know, people stopped whispering about it inside Facebook. It was obvious for me to join that because I knew given how early the industry is, this is probably my best bet to be able to build that kind of all star teams, to bring all these experts together. And that's sort of prepared me down this journey. Building our team, building all this technology, kind of learn a few things, thinking a lot hard, pretty hard about, hey, what would it take for this to become mainstream? Was on the problem we're going to solve. Met great people along the way, and that is sort of leading us to misstep.
00:03:49.260 - 00:04:29.300, Speaker A: Wonderful. I think I very much kind of appreciate the work that you're doing at Libra. And at the time, I think everybody in the crypto industry was very worried, not worried, but scared that Libra was going to launch and just take over the entire industry. And so I think there's, I mean, tremendous learnings from that standpoint. But I'm very much of a fan of any blockchain or ecosystem that is trying to bring on more users. I would argue it's still very rudimentary phases today. So I'm excited for what you guys were building and then on your side.
00:04:29.460 - 00:04:44.968, Speaker B: So I started off as a software engineer as well. I did not win an ACM award, but I started building risk management and trading systems for hedge funds and investment banks. In 2011, I found out about bitcoin. I got instant red pill. After looking at the code. I thought it was amazing.
00:04:45.024 - 00:04:46.032, Speaker A: Did you buy any?
00:04:46.216 - 00:05:18.490, Speaker B: I started mining bitcoin. Actually, I was buying bitcoin around like $25, I believe, or even less. I wish I kept them all, but I started mining bitcoin. Personally, I realized most people didn't know how to do it. So I built a bitcoin mining company very, very quickly. Launched in 2012, and after I was done with that, I went on to launch enterprise blockchain for Oracle and VMware. I thought the next element of technology is taking it to companies, but realizing that actually companies create even more problems once you start to centralize these systems.
00:05:18.490 - 00:05:44.784, Speaker B: I was looking for an opportunity to do something at a large scale, because I believe that technology fundamentally belonged to the people and to do it at scale, infrastructure was where the problems were at. Hearing about the problems Libra was aiming to solve, I got really, really interested. I joined the Facebook team. I led a lot of the work within the R and D team. I worked with Evan. I was instantly interested in all the hard problems on infrastructure. I was not interested in wallets and things like that.
00:05:44.784 - 00:05:56.176, Speaker B: I wanted to deal with a more complex side of crypto. Met really great friends who are now co founders along with me in Mistyn, and we have a blast building really intelligent system.
00:05:56.288 - 00:06:22.846, Speaker A: That's awesome. Amazing. I think they're wonderful backgrounds and I'm very excited for what you guys are building. So maybe to jump off, how was kind of the transition from Libra into what you are now building with Swe and at Mistyn Labs and what would you kind of say? Yeah, maybe just start from there and then we can start to parse the part from there.
00:06:22.918 - 00:07:12.340, Speaker C: Yeah, I mean, the reason why I was very excited about the Libra mission, just kind of going back a little bit. Right. Everybody recognizes opportunity here. If you think purely even from the infrastructure side, what was Libra trying to solve? We recognize Internet is already sufficiently powerful for moving data. Every actions on the Internet is seamless. Posting a message, sending, watching a TikTok video, YouTube video, you name it, streaming videos, streaming games, except when you are transferring or doing with anything that has value. So asset transfer is nothing like data transfer, put it that way.
00:07:12.340 - 00:08:31.574, Speaker C: So the Libra vision was filling that gap for money, payments. They want to make payments as seamless for everyone in the world. And that is a great, great vision. We just admiss and want to generalize it. We view here's an opportunity to completely address the gap, the Internet infrastructure gap, to make it possible to add this layer for any developer, anyone, to be able to create a digital version of an asset, that asset could have a backing of a real world asset, could be a native digital asset. Once you have an asset living on this sort of, you know, kind of one way, you're looking at this open, shared, authenticated database for the world, right? Once you have that, then you imagine the possibility of kind of blurring the boundary between different products, right? All these asset can be composed when there's asset, people are going to utilize them, they're going to trade them, they're going to swap them, they're going to create synthetic version, then they're going to do all the amazing things, right? You add a programmability, right. You get smart contract.
00:08:31.574 - 00:09:27.206, Speaker C: Now you start thinking about how this impact products in a very, very fundamental way where you can now eliminate a lot of the inefficiencies, right? All the sort of a lot of middlemen that provide trust, right? Custody of assets, you can eliminate them, replace them with programs. So that's where we came from, right? That's the mindset going from Libra to what mistem want to do. So in a lot of way, it's kind of a continuation of what we were trying to do, but we are making even more generalized bigger. We're thinking bigger. So for us, right, it's that excites us, right? That mission excites us, and we feel like we got a few things figured out. So I'll say it definitely took us a while to really, really figure out exactly what we're going to build. But the vision has always been there.
00:09:27.206 - 00:09:55.410, Speaker C: So I wouldn't say it's completely a seamless transition from being part of a ginormous company to doing our own startup, but just feel like we never lost a step. As soon as we came out, we know exactly what we're going after. Took us a while to figure out what we're going to build and how we build it. Building on the team and everything else is just kind of. It's been a pretty exciting few months.
00:09:55.490 - 00:09:56.410, Speaker A: Yeah, that's amazing.
00:09:56.530 - 00:10:42.704, Speaker B: I think the interesting about that problem and that vision is for that to really work, it needs to be able to handle the world's needs globally. Like imagine a Facebook. You're really used to building systems that cater for billions of people. And our view is most all infrastructure that exists in web3 today, all layer ones or L2s, can barely even handle thousands of users concurrently. So if you want to bring it to the mass market, you imagine people doing digital commerce online, people doing payments online, with people doing anything related to any kind of finance or even any type of gaming. You're talking about billions of people doing interactions on a regular basis. And I think the principle around solving the infrastructure problem at the core, enabling experiences for gaming to be augmented by ownership, diesel commerce to be done in a way without trusted central counterparties.
00:10:42.704 - 00:10:58.832, Speaker B: We think that needed a new, fresh kind of approach to solving the infrastructure problem, which is what really got us excited. And as Evan mentioned, it took us a while to figure out how that could work, but it really took us going back to first principles to sort it, rather than thinking about what's already been done and solving exactly the same way.
00:10:58.856 - 00:11:22.000, Speaker C: What else is. I think the first step was to understand what are the requirements, the criteria, from the product point of view. So I feel like a lot of, you know, the last few years, what we're seeing a lot is solving technical problems, but not, perhaps not as much of trying to sort of bridge the gap between the real world product needs.
00:11:22.120 - 00:11:22.780, Speaker B: Correct.
00:11:23.160 - 00:11:24.296, Speaker C: And the infrastructure.
00:11:24.368 - 00:11:31.600, Speaker A: Yeah, a lot of these blockchains, in my opinion, are trying to fight physics. There's like, what are you talking about.
00:11:31.640 - 00:11:39.570, Speaker C: A lot of them claim to have a sub second finality, they have also physics via mine problem.
00:11:41.550 - 00:12:27.352, Speaker A: I mean, I don't know just how you're going to have like 100 million users on Raspberry PIs or a commercial laptop. All that compute or data propagation storage, it has to happen somewhere. So I appreciate now that more people are coming into the space and trying to solve this, um, at something that like, has like a very realistic shot of actually, uh, onboarding hundreds of millions of users, because if it kind of stays niche, I think it's interesting, but we just, I don't know, it's not that cool if only a couple hundred thousand people are actually interacting with these things. If we can get hundreds of millions or billions of people using it, that's where it becomes.
00:12:27.416 - 00:12:27.568, Speaker C: Yeah.
00:12:27.584 - 00:12:56.918, Speaker B: I mean, fundamentally, if you have a platform that focused on, you want to have assets that everybody can have access to, but then if the bandwidth of that network has some theoretical limit, then really it becomes a fee market for only the highest paying apps, which is what we get in Defi. Defi can power most blockchains because it's the gamblers are going to essentially be trading on it. So no one cares about $60 fees. You're going to make a couple of $1,000, but for an NFT that costs $2, it's not going to happen.
00:12:57.024 - 00:13:19.190, Speaker A: Exactly. Yeah. It's kind of been fascinating to watch the transition of like, of how blockchains are going. I think kind of, I was talking with Anatoly this morning, but I was saying we kind of need a new name for like, monolithic architecture, because I think the word is kind of frowned upon in the industry.
00:13:20.130 - 00:14:02.922, Speaker C: I think people are misusing the word architecture here. Right? So if you think about it, if you're building a product, a blockchain, a developer platform, that is one product, you can see that as monolithic. But if the architecture is, if the chain is designed correctly, the architecture could allow you to swap out components. You can say it's a monolithic chain, but it doesn't equate to monolithic architecture. And that is the principle we design three upon. Right. A lot of these things we talk about are core building blocks that can be used by other blockchain, or they can be swapped out, replaced with something better.
00:14:03.066 - 00:14:33.302, Speaker A: I think that's a perfect jumping off point, maybe to, on a very high level, talk about the key innovations that have enabled SWE and mist and labs to ultimately begin to onboard these hundred million of users and how that differs. Maybe I think a lot of people are still kind of not stuck, but have the point of view that Ethereum will continue to be the dominant blockchain and just maybe how that compares to some of these chains that have come before it.
00:14:33.486 - 00:15:03.676, Speaker C: Let me start, Gregory, let me start on this. Taking a step back, just continuing the conversation we had earlier was on the requirements. I'm not going to go into all the, just going to point out too, one thing we've already touched upon. What are the things the product builder needs? Right. They have two. If they are selecting an infrastructure provider for their products, they want to know ahead of time. They don't want to have predictability of the cost, same as any cloud service provider.
00:15:03.676 - 00:15:37.216, Speaker C: I want to know how much would pay. And one, two is, well, what if my application, my product is getting bigger, keep on growing? Can you keep up with me? Because the last thing they want is like, okay, this is working well, and I hit a wall because the infrastructure is limited. Yeah, to me. Right. So let's look at what that means. Right? So that means predictability. Whenever you have a blockchain with a fixed capacity and you have this fee basically is driven up by demand, you have this problem, you have no control of the cost, right.
00:15:37.216 - 00:16:23.300, Speaker C: Because something else can be happening on chain, all of a sudden your fee goes through the roof. That is a non starter. The other problem will be the other approach will be keeping the fee artificially low. But guess what, you're just gonna be the perfect candidate to be attacked by bots and whatnot, right? And just keep on flooding it because there's no penalty to flooding the network. So neither approach really work. Right. But how do, if you take a, take a step back, how does the rest of the world, the existing large scale application, deal with this, right? The Facebook, the Instagram, the TikToks, the Snapchat, everything in the world, how do they do? Well, they have a way to meet the demand, the spikiness demand on the floor.
00:16:23.300 - 00:16:57.866, Speaker C: It's literally as simple as that. Well, our data center is going to be ready to make available more resource, more supply to meet demand. So you need to have that level of flexibility to be able to handle the immediate kind of demand increase. Not like we have the roadmap to increase capacity down the road. That doesn't really address the needs. Right. Because if you look at history, like, what you want to do is you want to make infrastructure to be as limited as possible.
00:16:57.866 - 00:17:44.678, Speaker C: And because product is going to eat it up, right? Whatever you have is going to be eat it up. Right? You want to think it's about commodity and you want to pump out as much commodity you can. So we thought about this. We designed architecture, allow horizontal scaling. So why is horizontal scaling important? Well, this is what we do is what we call intra validators sharding. Essentially you can just add additional resource at each validator level that meet the demand on the fly. So that is what we believe one of the biggest, most important criteria to meet demand is spiky, right? It's not about meeting the average, it's about meeting that spiky demand.
00:17:44.678 - 00:18:26.678, Speaker C: And for the system to continue to work the same way for the fee, not to be disturbed by that, but to allow for horizontal scaling. This typical blockchain architecture, what we call front line blocking architecture, would not work. So let me describe this, right. If you think about the stage of most of the blockchains, how they process transaction is consensus, right? Total ordering all the transactions in a block even though most of them have nothing to do with each other. And you wait for everything to be done to move on. The next stage execution, you get wait for all the execution, all the instruction to be executed. First you collect all the effects of the, of the instruction execution.
00:18:26.678 - 00:18:39.572, Speaker C: And then you update your marker tree, create a block, right again, stop. Wait for everything to be done, move on. Wait for everything to be on, move on, right. If you ask a lot of distributed system experts, they were just like, look at this, this doesn't feel quite right.
00:18:39.676 - 00:18:41.132, Speaker B: Something is a bad database.
00:18:41.236 - 00:18:45.764, Speaker C: It's not a way to efficiently use a resource and not the way ideally.
00:18:45.812 - 00:18:47.040, Speaker A: You want no stoppage.
00:18:47.340 - 00:19:17.110, Speaker C: Yeah. You want to be continuous, right? So the analogy here is like a train, except at the stop, nobody get off, right? The train wait for everybody to get on, move on, next step. Move on, next step, right. Cause everybody's going to the same destination. All your transaction going to the same destination. Because all the effects of are being captured in one ginormous data structure, the Merkle tree. So that means you are keeping everything processing Google transaction time.
00:19:17.110 - 00:19:40.606, Speaker C: That really limits your scalability. Our approach is because we are data model. This is one thing nobody's really have figured out. The magic of SuI is not one thing. It's not just because we have a better consensus algorithm. It's not. We're doing something interesting in terms of snapshotting.
00:19:40.606 - 00:20:22.450, Speaker C: It's a data model. While we're transitioning into a data object store model. Every asset is an object then, because now you know the transaction are targeting specific object. If you're an NFT, you send a transaction to modify it. You have some kind of current coin that has a balance. You send in transaction to update them, or you have a smart contract, multiple accounts, consent transaction, targeting the same smart contract for minting FT for auctions, whatever. So you have transactions naturally grouped based on the object they're targeting.
00:20:22.450 - 00:20:39.648, Speaker C: So you can imagine sort of this sort of almost like analogies here, rather than having one train taking everybody to the same place. Yeah. As many groups you have of transaction, they're just pull up cards. As many cards you need, just take them to where they need to go.
00:20:39.744 - 00:20:41.832, Speaker A: And is that the parallel processing execution?
00:20:41.856 - 00:21:03.156, Speaker C: This is parallel. There is parallel everything, the entire pipeline. Right. So even if you think about this way, right, let's say you have multiple groups of transaction. Each of them can be processed independently, parallel. So each of the validators, if you increase resources or increase workers, they can independently process the groups of transactions.
00:21:03.268 - 00:21:06.636, Speaker A: Gotcha. And is the increased workers multiple cores?
00:21:06.828 - 00:21:25.312, Speaker C: Yeah, it can be multiple cores. Can be multiple machines. We will roll this out where you're gonna see, perhaps some of the machines will be specialized. Right. They handle signature aggregation, but then you're gonna have generic workers that just kind of give you the bandwidth. Could you process more things at the same time? Right. You know, we'll roll this out over time.
00:21:25.312 - 00:21:33.784, Speaker C: But the architecture is what's important here because this model allows to scale horizontally. Right. Because now you can provision for any kind of spikes.
00:21:33.832 - 00:22:04.956, Speaker A: And I'm super excited to get more into. I'm going to ask Sam a bunch of questions, but I'm super excited because I think today the more traditional approach has been like sharding or subnets or cosmos zones. So I appreciate the fact that Swe is doing it all in kind of a single state machine. I think that unlock is really the key driver that we're seeing how difficult.
00:22:04.988 - 00:22:19.880, Speaker C: It is for developer to get a smart contract. Right. If you're adding complexity now, they have to think about different shards. Yeah. Most people can even write any kind of concurrent programs correctly. Let's just be honest with that. This is going to be making.
00:22:19.880 - 00:22:38.304, Speaker C: This is a choice we took. This is the design, because we want for the developer not to worry about this. From their point of view, this is a network that have unlimited capacity. If you increase the capacity, I mean, increase the demand, the capacity increase with.
00:22:38.392 - 00:23:22.040, Speaker B: I think one thing to say is now you've built a blockchain that on typical blockchains, the block space is like a finite resource. It's like a rare commodity that everyone's bidding for. In Swe, it's an infinite commodity, like anyone can use it and you can buy it for cheap. That needs to be pegged with a really good to economics design or an economic model. Our economics model is designed with the infrastructure from day one to incentivize validators, to increase the capacity of network, and also to penalize validators that overcharge on fees. So your encouragers, validators, charge closer to your costs as much as possible to earn the right form of rewards. And as you add more capacity to the network, you can process more transactions, increasing your profit.
00:23:22.040 - 00:23:34.668, Speaker B: Those two things have to be tied together. One, you've got a world where you can add more resources infinitely as long as demand is there. But also you can't hold the networks at ransom by just simply keeping a single machine when the network maybe needs three, right?
00:23:34.764 - 00:24:04.612, Speaker C: So yeah, it's a healthy kind of a sort of drive towards the long. It's healthy because the validator will make more money as the cost goes down, demand increases until we reach some kind of equilibrium. It's also healthy for the builder side because they don't need to worry about, oh my God, I'm working with something that's limited. We believe by making some, the infrastructure boundless, it's going to unlock creativity 100%.
00:24:04.676 - 00:24:47.970, Speaker A: And I think to me the saddest state of the market today is the fact that if you were an engineer and you're excited about this, but you build on the wrong chain, that does not have the possibility of scaling, or the scaling is very limited. You're dead on the water from even if you build the most interesting application that does not have the possibility to scale, you're just very limited. I appreciate the fact that the protocols that are actually abstracting the complexions and taking that in house so the application engineers don't have to focus on that and can only focus on building scalable applications that have good design, good user experience, and things that people actually want to use. I think that is the correct way to do it.
00:24:48.550 - 00:25:01.614, Speaker B: Yeah. If you think about Lambdas on Amazon or Microsoft is on Google today, I can write one. I throw it on Google. Amazon and AWS takes care of the scalability for me. I don't have to worry about that. Throwing machines more capacity and it just works. And there's a fee.
00:25:01.614 - 00:25:17.444, Speaker B: And a fee doesn't go up ten x because someone else just runs a bot that this noisy neighbor problem, oh, sorry, your fees go up 100 x because someone else has run an app, has taken all our capacity. That sense of freedom that developers have to play is what we want to afford people with suite.
00:25:17.532 - 00:25:42.634, Speaker C: Yeah. And this object centric model has other benefits, right? Just talking about fee for a second. If you have a smart contract that's getting, that's super popular, it's hot. Everybody want to be an NFT or whatever. Okay. You can increase the price, but it's going to be localized, right? It's basically all the transaction targeting that object. It's very, very easy to have a localized fee market without disturbing the rest, the global market.
00:25:42.762 - 00:25:53.338, Speaker A: So the vast majority of transactions will most likely be paralyzed. But if there's a single contract that does get potted or just has increased traffic that is isolated to the specific state.
00:25:53.434 - 00:25:54.258, Speaker C: Yeah, exactly.
00:25:54.354 - 00:25:54.990, Speaker B: Yes.
00:25:55.330 - 00:25:58.546, Speaker A: I think that should be a requirement for all blockchains.
00:25:58.618 - 00:26:00.510, Speaker B: Yes, we think so too.
00:26:03.250 - 00:26:14.122, Speaker A: I know Solana is moving that way as well. I really wish other blockchains would do this. I think you have to have the parallel processing to be able to isolate those. Yeah.
00:26:14.146 - 00:26:49.040, Speaker C: The object model is what made this really, really easy to do versus other blockchains. Because otherwise, how do you work this out? How does it work if everybody, everything goes to consensus mixed with transaction, targeting this asset? Transaction target this asset. The decision by the validators become different because this is a hard thing. Therefore the fee should be increased. But this is not. How do we pick region ones to include in the right. It gets complicated as opposed if you're doing a consensus on group of transactions, they are all targeting the same objects.
00:26:49.040 - 00:26:58.332, Speaker C: So you know exactly what's coming up, why the fees increase the smart contracts.
00:26:58.476 - 00:27:19.772, Speaker A: Yeah, that totally makes sense. And I really want everybody to move away from the global fee markets. There is no reason that an NFT mint or whatever you're doing should drive fees up for the entire chain. So that's amazing that you guys are doing the isolated hotspots in bitcoin.
00:27:19.796 - 00:27:20.960, Speaker B: It makes sense, right?
00:27:23.540 - 00:27:44.300, Speaker A: One effort, it's not doing too much. It just has to exist. They're just transferring it from one person to another, I guess. But yeah. Awesome. So beginning like starting off on kind of bootstrapping the system, are the nodes going to be relatively small or are they going to be like more beefier nodes?
00:27:45.080 - 00:28:19.548, Speaker B: I think we've released what the node specifications will be. The goal is that when you start with a network, it can process some amount of transactions that we'll set as a bar for the network. And then as network needs more, as a throughput demanding increases, validators can just add more. Right? So unlike other networks where all you do is you beef up the cpu and you can't go wider, you can only go up, you can only do vertical scaling, that only gets you so far, whereas with swe you can do both vertical and horizontal scaling, so you can have really fast cpu's. But then more importantly, as you add more, you really increase the capacity of the network.
00:28:19.644 - 00:28:42.630, Speaker C: TLDR is a system designed to. It's more efficient to have several of the, probably not the most beefy machines. Yes, horizontal scaling is much more efficient than trying to get the fastest possible machine. Although the competitive nature of the market will sit right, some people will probably want to set up a node that just responds faster.
00:28:44.570 - 00:29:01.658, Speaker B: But ultimately, the more transactions you can process and the more you can meet with demand, the more fees you earn as a validator. So it creates a real healthy ecosystem where validators are encouraged to earn more and rewarded accordingly for processing faster processing, more. Transactional network.
00:29:01.754 - 00:29:13.850, Speaker A: Yeah, that totally makes sense. Are each node is going to have high throughput requirements. From bandwidth standpoint, it's a decentralized network.
00:29:13.890 - 00:29:31.012, Speaker B: So people will provide a guidance on what we think the specification should be. But once the network is live, people can do whatever they want. But ultimately the economics of the network is designed in such a way where you penalize if you fall behind, so there's no people just stop staking with you if you're a poor validator. That's just reality of it.
00:29:31.076 - 00:29:51.262, Speaker A: Yes, very cool. I'm super excited. I think this is the direction the space needs to move. And it's kind of sad in me that it's taken this long to ultimately move this direction. But I'm extremely excited you guys are building this. And I'm very excited that for the possibility of hundreds of millions, billions of.
00:29:51.286 - 00:30:16.880, Speaker B: Users, we almost didn't get there. Right? Like when we left Facebook, one of the things was continue with the Libra project and maybe perhaps launch with that. But I think we knew what Libra was designed for, ultimately what the restrictions and limitations were. And I think that having that knowledge allowed us to take a different step back and really have a different approach to how you build a chain. That's why we do the hard work.
00:30:17.000 - 00:30:27.820, Speaker A: Yeah, amazing. And I think I saw on one of the previous podcasts that you did, I think Dimmy was, correct me if I'm wrong, was doing like 500 tps or about.
00:30:28.160 - 00:31:04.728, Speaker C: Yeah, I mean, I think diem can be more than that, right. But ultimately we'll see where the limit is, right? This, you know, again, this is the general architecture, right? A frontline blocking. We think there's going to hit a limit at some point in time. It's not like if you have a faster consensus, it's going to be sufficient or faster execution. It's all just the entire system working together. I see some of the blockchains are starting to try to pipeline a few stages. So in going the right direction, we just decide we want to build in that possibility of scaling at a much, much different, much more fundamentally different way.
00:31:04.864 - 00:31:33.018, Speaker A: Than all the other gotcha. And the main thing from the time at Facebook and Libra and Demay was moving from that type of current architecture that was ultimately open source to the object oriented. And that's kind of been the key innovation at SWE and miss and labs that unlock the parallelization and also the horizontal scaling for billions of years.
00:31:33.034 - 00:32:21.868, Speaker C: Yeah, there's other benefits here. For one, the state capturing objects, right? So there's two benefits here, right? One is we, you know, we can treat the, the mercury tree update the block as, you know, sort of necessary data structure that's the result of snapshot, you know, every few minutes or some periodically do snapshot creative blocks while in the processing. You don't need to, right. Because the object themselves are stable. You can capture the state changes in objects right away. This is also powerful fun and readdevelop perspective right now to extract any kind of information on the blockchain is pretty painful. You kind of have to find the block, you know, you have to go through the history, you find the exact, you know, you have to traverse the tree or have some indexing to give you the information here.
00:32:21.868 - 00:32:47.690, Speaker C: If you are building a large scale application, you see with this assets object, what we do is something called sparse replay user. Literally just follow the revision of those objects, how they transition. Right. So these are the like, think about it from a product point of view. These are the assets I care about. I can just follow their history rather than worry about the entire chain. Right.
00:32:47.690 - 00:32:58.962, Speaker C: So you still have the blockchain, right. All the information there for auditability for the history. That's really, really important property. But for a lot of applications you don't need to do that.
00:32:59.066 - 00:33:17.644, Speaker B: And I think also we probably miss the fact that you actually have a lot more available storage. So it's not only scalable from a throughput perspective, you also have horizontal scalable storage. You can add more storage as you add more nodes to the network and that storage is actually usable for storing data. It's not going to be just storing Merkel dags that are.
00:33:17.732 - 00:33:44.466, Speaker C: Yeah, that's the thing. Right. We're not mercalizing all the data you store unchecked because they're inside the objects. Right? So an object can be anything you define to be. So the storage is part of. You're still paying for replication because this is our blockchain after all. A lot of different nodes have to store the data are still on chain, but now it's scalable versus if you merkelize all the data, it's extremely expensive.
00:33:44.466 - 00:33:46.310, Speaker C: It overheads way too much.
00:33:48.170 - 00:34:06.480, Speaker A: I'm extremely excited for you guys to ultimately go live and to see all the different applications that builders ultimately build now that you've kind of continued to build out the prototypes. Is the Tesla live?
00:34:06.860 - 00:34:08.668, Speaker B: Tesla is going to go live this September.
00:34:08.764 - 00:34:24.969, Speaker A: Okay, excellent. And what are your kind of, I mean, just because of the object model of the blockchain, do you think it will be very good for all type of applications or are you trying to target specific applications?
00:34:25.309 - 00:35:05.481, Speaker C: So think about. So, because object oriented nature of the data model, this also impact our programming model as well. So other blockchains are like this, right? So EVM chain. So basically the smart contract staple, you have basically record keeping inside the smart contract. There's no, while everybody talk about composability, this is actually really hard to compose across different protocols, right? Because your data is trapped inside the smart contract and each of them has to reinterpret the data. Basically, you don't even have a share type. So move changed that to having a shared type understood by a lot of different smart contract.
00:35:05.481 - 00:35:43.192, Speaker C: Potentially we take a step even further, because now everything is an object. So the smart contract model, rather than loading data from address, doing processing computation on them, and writing it back, we're just saying you will have assets as inputs into a smart contract. You have object as output as, right. You can change them much easily. And the other thing is, on the asset level, you're not able to compose objects of different types in gaming. Think about rpg game. You have a hero.
00:35:43.192 - 00:36:13.760, Speaker C: Define the type, right? Name, race, you know, experience and level and all that good stuff. Another object can be just a magic soul, completely different, you know, types. They can be composed together into one object. So this is, we believe this opens up all kinds of possibility. Definitely in gaming, right. We're seeing some real, real exciting things happening in the gaming side. But this opens up a lot of other things.
00:36:13.760 - 00:36:19.068, Speaker C: Everything in commerce and in some finance usage cases as well.
00:36:19.124 - 00:36:37.776, Speaker A: I'm a major fan of composability. I feel like we haven't really even scratched the surface on what composability ultimately unlocks. And anything in my point of view, that allows applications or objects to compose easier is extremely beneficial.
00:36:37.848 - 00:36:45.016, Speaker B: And in reality, right. Anyone coming from a traditional programming language understands all concepts we feel can really pick up sweet relatively quickly.
00:36:45.088 - 00:36:45.320, Speaker C: Right.
00:36:45.360 - 00:37:06.690, Speaker B: Like the ability you can throw an object as an argument within a smart contract and have that, the safety of that object guaranteed by the runtime. This is stuff that you'd expect to be able to do in another language. I think that's the power that we're bringing. Yeah. It also makes easy to build marketplaces and things like that. Right. You don't have to set these random standards to get people to understand what's actually happening.
00:37:06.690 - 00:37:10.550, Speaker B: The type system, strongly typed system, actually helps a lot.
00:37:11.170 - 00:37:27.230, Speaker A: And is that a specific kind of SwE specific technology or was that also with the move programming?
00:37:27.690 - 00:37:53.130, Speaker C: Yeah, I think a lot of this is specific to Swe. We actually, Sam wrote a blog post about why we created different variants move for this reason, to take advantage of the object oriented architecture. Right. For example, the thing we talk about composing objects of different types together, it's not possible, which is traditional move or any other blockchains today. Awesome.
00:37:54.390 - 00:38:43.860, Speaker A: I think it's super interesting. And then, so I just kind of want to re articulate kind of the main highlights for everybody to understand because I think everybody's very much in line with ETH and like the EVM and L2 s. And I think this just kind of completely breaks down a lot of those assumptions. Being able to go to the objects oriented, not having block space be finite, kind of being able to scale indefinitely with additional hardware vertically and horizontally by the workers, and then being able to compose, and then not having to worry about the protocol itself and just being able to focus on applications.
00:38:44.920 - 00:38:46.152, Speaker B: That's good summary.
00:38:46.336 - 00:39:30.198, Speaker A: Yeah, so I think, I mean, yeah, going to get into a lot more of the technical stuffs with Sam later on, but yeah, I'm curious more just, I mean, it's a general purpose blockchain, um, and ultimately mention games, but are there anything others like, uh, applications that you're excited about or like engineers maybe like stepping back? Um, one of the hard parts about starting a new blockchain is kind of like that engineering onboarding. Um, what is kind of like the go to market or enticing, um, or words of wisdoms that you would say to engineers that are looking or interested to build on suite.
00:39:30.384 - 00:39:58.076, Speaker B: Yeah, I could touch on a lot. Right. I think the first ones on GTM, I think in terms of our interest, sui is not just for gaming, it's a general purpose blockchain. We're gonna have games being built on Swe. We're gonna have DeFi protocols being built on SWE, including central limit order book a club, as it's called. We're also gonna have applications from the digital commerce space as well. So commerce, gaming, and finance, those are the three areas that are main pillars were focused on indexing on.
00:39:58.076 - 00:40:55.468, Speaker B: So people building DeFi protocols already, it's already happening. I think at Mainnet we'll have, of course, stablecoins, defi protocols, games, commerce, all those applications. What we're really excited about is how those three worlds work together, how we start to have them all fill in a loop of experiences they just might not do elsewhere because the composability affords you. I think Sam will be a good person to even talk about the developer onboarding because he has a lot of great ideas there. But we feel that the amount of content we've been pushing out to make it easy for developers to understand suite move and to get up and running with examples and even our tutorials is a great way to do that. We've seen a lot of interest of people who are looking at traditional move, but once they've realized about suite move and they see how much easier it is and the concept of much easier to understand, they really get hooked very quickly as well. So I think apart from the traditional apps people are building, we think there'll be new experiences that will be augmented by sweat that we don't even know of yet that really excite us.
00:40:55.468 - 00:40:59.972, Speaker B: But I think it's the imagination of those three worlds together that's going to be super exciting.
00:41:00.116 - 00:42:00.450, Speaker C: I mean, ultimately what we care about, I mean, we believe we've been through a few kind of crypto cycles, and I think, at least I believe this cycle, we want to see some real consumer adoption, real mainstream adoption, that forces, we think about a lot of the product level problems. So ultimately the technology serve products and products serve consumers. That's what we're focusing a lot of energies on. So we're working with a lot of the crypto native developers because they are the one that created the brilliant, interesting new protocols and new building block that can be incorporated into products. But at the same time, we want to bring on real kind of big product builders. They're being on the outside looking in and say, hey, how can we adopt? This is cool. New technology in our job as a platform is to bring the two worlds together in a lot of ways and strike away a lot of complexity because there's a lot of hesitation on both sides.
00:42:00.450 - 00:42:49.672, Speaker C: And I think one of the challenge for the builders, as you say, what's the recommendation, what's the wisdom for developer, especially for people who are thinking about starting on the space? Think about your audience. Are, are you building for just a few thousands or tens of thousand dj's? Are you building for the mass market? Yeah. Right. And because those are completely different audience. And if you're building for the mass market, does it make sense for you to focus a lot of your energy on, you know, sort of like, you know, a lot of the play around the tokenomics, the growth, which are probably not actually setting your protocol up well for adoption. Right. So these things kind of come to conflict.
00:42:49.672 - 00:43:03.536, Speaker C: Right. So that's very important question for every builder. We love to work with them, right. You know, we're working with a lot of very ambitious builders. People want to have a real impact. Right. We love to work with them.
00:43:03.536 - 00:43:06.864, Speaker C: You know, these other things, we're here to help them.
00:43:07.032 - 00:43:53.796, Speaker B: I think even with the builders we've been talking to, it's always the question of what problems are you trying to solve? And then start working back from there. Because especially if they're trying to port an app from solidity or port an app from even the Solana space, it's really going to rethink. Look, you can go and build something that can impact millions of users. If you imagine most of them have built apps with a lot of restrictions that don't allow them to target mass market, they're not creative or smart enough to figure that out. But there's really a limit on price cost, like everything else that forces them to maybe go down a particular application domain. Whereas with Swe, we want them to think in terms of boundless, we want them to think from a boundless perspective and re engineer from what problem do I solve and how do I address a bigger market? And those are the people working.
00:43:53.908 - 00:44:51.530, Speaker A: That's awesome. It's much needed. I've talked with a lot of people and I'd say at least common thought when I speak with them is that the EVM has dominant network effect. But when I look at Google or Facebook or meta, ultimately the amount of engineers they have and the amount of people that are developing on solidity, the EDM is very tiny. I think it's an awesome approach to at least give out a lending hand to these people that are already building in these ecosystems and already familiar, but with the point of view that they can build applications that can actually scale to hundreds of millions or millions of people and then ultimately continuing to entice those that haven't left the traditional Silicon Valley jobs and come join the dark side.
00:44:52.310 - 00:45:01.156, Speaker B: Yeah, we're hoping the next wave of the bull cycle will have new types of applications actually grow significantly. The people in the crypto space, hopefully.
00:45:01.188 - 00:45:22.636, Speaker C: There will be, will be no cycle. This is just another fabric of the Internet, right. This is the Internet infrastructure. You just use it when you sit fit. So that's ultimately when the industry is successful. That's how they think about it. People shouldn't be building just because it's in your bull market.
00:45:22.748 - 00:45:38.890, Speaker A: I fully agree. Yeah. I hope we get to the point ultimately where we don't have to talk about specific l one s per se or l two s are just blockchains and it's kind of similar to tcp ip. And people just use it and they.
00:45:38.930 - 00:45:43.866, Speaker B: No, I totally agree. Totally agree. Like you don't say I can't play your game because it's not native us.
00:45:43.978 - 00:46:20.560, Speaker C: Yeah, exactly. Right. So that means, you know, if you think about the product you're building, like how do you provide that kind of seamless experience? Right. Today if I wanted to play a web3 game, I need to have a wallet, I need to have some tokens to pay for gas. I probably have to get on discord to watch out for the AmT drop and whitelisting everything. I think that's interesting experiment. I think that having the ownership augment in game is powerful but also create a lot of friction in terms of onboarding control.
00:46:20.560 - 00:46:46.946, Speaker C: Right. It's probably not exactly the right way to do it. That's what we think about a lot about working with our partners. Like, hey, how does it free to play games translate to this model? Right. When's the right time to sort of introduce these concepts? Right. How do you have the product pay the gas, the cost for the user to get them onboarded first? Right. So these are the things that's required to get us to the next iteration.
00:46:47.058 - 00:47:29.690, Speaker A: Yeah, I totally agree. Looking forward to that day, ultimately. Cool. I think we've kind of touched upon a lot of the high level topics and encapsulation, high level tech. I'm generally very excited for what you guys are building. I think it is definitely the direction that we need to head to onboard all these users. Do you feel like there is any remaining of bottlenecks either from the technology side or just like user adoption or developer adoption, that you'll have to overcome in the coming months?
00:47:30.310 - 00:47:54.210, Speaker C: I mean, I think the technology is always going to be improving. We're setting up architecture of the blockchain to enable all this. We have a lot of work ahead of us to get there. Working really hard. The team is working really hard towards it. It's less of a concern, just something we need to get done in terms of adoption. I think just part of it is on us to be able to educate better.
00:47:54.210 - 00:48:24.664, Speaker C: I think most of the people who are not aware of suite don't really understand the distinction, doesn't really understand the big picture. The magic sauce is about the data model and everything evolves around that. We need to do a better job educating people. But ultimately, I think the only way a platform can be established is to have something that attracts users. Correct. And then we want to tell our stories to our partners. So we're working with a lot of partners.
00:48:24.664 - 00:49:14.322, Speaker C: They have something really exciting to bring on board that will be the best storyteller for us that will sort of get this going. The exciting things about Webstery is everything is open source, which means while the initial getting things established can be a little bit slow because people are wrapping their heads around a new architecture, new kind of technology, they're going to be on boarded trying new things. But the next wave, people are just going to say, this is being done, this is successful. I'm just going to go use it. You're going to see the flywheel, which is going to spin faster and faster. Want to get there, right? Right. We are literally in the process, like getting the cranking, getting the flywheel going now, but once it's going, you go really fast.
00:49:14.466 - 00:49:44.440, Speaker B: That's why I think also from September onwards, we're going to start releasing a lot more progress with our partners, progress with investors, progress on things that can be done on Swe, that can be exemplified, that something can be done anywhere else. It's going to be a new kind of, we think, kind of renaissance. Some thought on how people think of what could be built without the previous instructions. And I think the onus is on us, is to educate the market as to what those are and what those could look like, either through our partners or through examples. And sometimes we built ourselves. So that's what we have cut out for us.
00:49:45.100 - 00:50:39.360, Speaker A: I totally agree. I think education is definitely can be a challenge, but I think you guys are definitely on the right path technology wise. And I really appreciate you doing the podcast and kind of doing some of these long form, because I think a lot of us, it's so early now that a lot of the communication or kind of word spreads from Twitter and so I don't think Twitter is always in their 280 character limit or whatever it is. 240. The best way to disseminate information. Sometimes memes work pretty well, but up for memes. But yeah, no, I really do appreciate it and I think it's super helpful ultimately maybe to kind of wrap it up a little bit.
00:50:39.360 - 00:51:13.234, Speaker A: I think it's a little bit easier for maybe some of the guests or listeners to follow along. Is like comparing and contrasting Sui to other blockchains that maybe they're more familiar with. Why did you not take the sharding approach or L2 approach or the application specific approach? Why do this single architecture or monolithic?
00:51:13.362 - 00:51:40.754, Speaker C: Well, for one, I think we're solving not just one problem. I think there's, in our opinion, there's too much focus on just solving one problem at a time and somehow have all these different solutions that come together. Right. That's what you're seeing today with ro speed, availability. We want the holistic experience just to be better. Right. The things we talk about, yes, we're solving the scalability problem.
00:51:40.754 - 00:52:07.260, Speaker C: We're also solving some of the sort of storage problem. That's something that's very limiting. For example, AMT today is not really that useful because you can't really put anything on chain. They're static. Storage is a big part of concern because of high cost. That's very limited. We're fixing a lot of the developer experience.
00:52:07.260 - 00:53:01.794, Speaker C: We want this model where you can take your web two product schema and translate the rep to our blockchain. This is the type, this is how we represent an asset. Why couldn't we do the same thing on a blockchain? So it's not solving one thing, it's solving everything. If you are building components separately, it's hard to design a system that leverage on, like I say, we are building suite architecture, allow us to in the future swap out components. If we make an improvement to consensus, we can swap it up. Can potentially have different execution layers, can have different even, you know, program layers, source level programming that target and move IR. There's a lot of things we can do.
00:53:01.794 - 00:53:19.954, Speaker C: They are, you know, they're components, they can be replaced. But we believe in presenting the best possible product for developers. Right. This is the infrastructure for developers. They are our primary customer. We want them to have all the tools they have, you know, the best of the best. Right.
00:53:19.954 - 00:53:36.130, Speaker C: This is, this is why we take the approach rather than addressing one problem at a time. Obviously we'll be watching to learn from other right. People come up with great ideas. You know, we'll think about them, whether they can be adapted to improve on product.
00:53:36.990 - 00:54:08.620, Speaker B: Yeah. I mean, if I had to summarize, Roy Evans said, look, we really took a product driven approach to building this from scratch. We assessed the market, we assessed what we've even done with Libra and figured out like, okay, well, I have to address 2 billion, 3 billion people. We need to take a different approach to that. And that's what coming in with a set of fresh eyes and having executed in the space previously was what was really refreshing and helpful. That's not to say other teams haven't taken product driven approaches, but we failed to see any kind of improvement over the last eight years of what people have been building. It's all really like a derivative of what's been done before.
00:54:10.760 - 00:54:48.690, Speaker A: I fully agree. Yeah. I think it's kind of hodgepodging a lot of things together to try to scale. But there's a lot of drawbacks in the other blockchains, architectures and their approach. And definitely from the product standpoint, if you're trying to bridge from an l one or l two to an l two to an l two, it should get complicated. And then the l three and the l four. Yeah, I appreciate, I mean, a lot, there's a lot of complexity behind the scenes in the software, but I appreciate as simple as possible from the user experience and very much appreciate that product driven mindset.
00:54:48.690 - 00:54:56.830, Speaker A: It definitely has to be kind of the web two like experience that the vast majority of billions of people are used to.
00:54:58.040 - 00:55:25.416, Speaker C: I mean, that's why software uses layers. The layers should be sort of hiding a lot of complexity. So that's the approach we're taking. We're hiding a lot of complexity from developers so they don't have to worry about sharding. For example, if you go sharding, they have to either assist and somehow figure out some magic, automatically pull the data together onto one shard for them, or they have to program for, which is I would not trust mostly developer want to deal with that.
00:55:25.528 - 00:55:29.050, Speaker B: People struggle with basic atomic swaps. I don't know how they're going to now deal before something.
00:55:29.090 - 00:55:36.150, Speaker C: I'll deal with sharding and all these other content. Right. So we'll move sharding to the, to the implementation details.
00:55:36.850 - 00:56:19.310, Speaker A: Yeah, that totally makes sense. Awesome. Well, thank you again, gentlemen. I maybe one last thing. I think one of the critiques of like Solana, and I'm curious, you guys may experience this as well. If you actually increase the hardware how do, in your opinion, does that affect decentralization for the network overall? Again, I think there's no way around personally actually increasing hardware because you can't fight the physics. But I think that is still a contrarian point of view at this point in time in the market.
00:56:19.310 - 00:56:26.796, Speaker A: What is your thoughts on decentralization and kind of more holistically increasing hard work?
00:56:26.868 - 00:57:05.896, Speaker C: Yeah, I mean, if you think about it, right? What is decentralization? Right? So it's almost like a society, right? A lot of people want to make sure a lot of people, including normal people, have stakes in the network, ownership in the network. They sort of boast to their representative. Right? If you think about the validator, their representative. So if you increase the number of validators, you will pay a cost somewhere in terms of performance, you know, latency in some way even for any chance out there. So it's all about balance, right? It's not, we're not maximalist. We're not saying, you know, we want to have maximum number of all datas, whatnot. Everyone will run small machines.
00:57:05.896 - 00:57:37.080, Speaker C: Guess what? Your system is simply not going to scale. Right. So I think the key here is to have a healthy market dynamics to make sure the validators can compete fairly. They offer better services they can or better yields. You can attract people staking their tokens. And for it to not be locking, that's very important. If they can vote with their feet, just like a democracy, they can move to whatever that represent their view.
00:57:37.080 - 00:57:57.320, Speaker C: So that's the key thing here. I think all these networks, pos, the whole Internet industry is going to have to learn about this and figure out what the right kind of incentive models and governance model is going to work out to over time. You want to make sure you don't have sort of like over concentration on power.
00:57:58.660 - 00:58:29.014, Speaker B: Yeah, I mean, to add to that. Right. Look, ultimately, the dream that a guy in his bedroom is going to run nodes used to be the thing for Ethereum back in the days, and that's quickly changed. I think the same thing for web3 as a whole. Like, I just think the idea that every individual can run a note about their network is not really like you're going to be dishonest if you paint that picture. I mean, it would be great utopian world if that were possible. But what you can do is ensure you have infrastructure that can scale, to have as many representatives as possible.
00:58:29.102 - 00:58:45.420, Speaker C: And the other thing is there will be other actors in the ecosystem that play a role. Correct. Right. That's why everybody's looking at like clients. Right. In the old days, you have different clients of clients that provide some kind of a, you know, sort of like ensuring bad actors. Right.
00:58:45.420 - 00:59:02.336, Speaker C: You know, like everybody's behaving well, right. So there's gonna be other, other players in the ecosystem. That's something we will kind of also figure out over time. Right. Just in terms of number validators. That's too often it's a number being played around. Right.
00:59:02.336 - 00:59:17.244, Speaker C: People really should think about what is trade off. The community would decide what is the right set of trade off in terms of degree of decentralization and what does a decentralization means versus the performance of what they want to see.
00:59:17.412 - 00:59:55.940, Speaker B: One thing to throw in as a bit of a side comment is with SWE, because you have validators that can add more resources. There's in a world where validators might decide to perhaps shard that to other participants themselves, but that's something we've touched on internally. Me as a validator, maybe I have a core or maybe five other people on cores on my behalf, and you can have your own incentive model that's completely separate from a network. So that intravalidity sharding element can give you a different type of design. They traditionally just don't have a lot of other chains, but again, you start to become slower than everyone else. All of that is faster than you are. There's an element of economics that needs to really work as part of the whole process.
00:59:57.320 - 01:00:07.840, Speaker A: I think it's funny, if you look behind the numbers on Ethereum, I believe it's over 70% of the nodes are run on some type of hosted service. Yeah.
01:00:10.580 - 01:00:33.360, Speaker C: I mean, I think Ethereum generally does this fairly well. I think better than bitcoin. Bitcoin doesn't have like a few minor. That's like, basically, you know, like almost the pool. Yeah, most of the has power, but even though you have to look at, you know, where are the two third majority come from? Who have the two third staking, you know, voting power, essentially. Right. Those are the most important.
01:00:33.360 - 01:00:37.700, Speaker C: So I think this is far from solved.
01:00:39.000 - 01:00:52.060, Speaker A: Yeah. Awesome. Well, thank you again. It's been wonderful. I've thoroughly enjoyed the conversation. I'm sure everybody else will. Any parting or closing thoughts? Anything that we didn't touch upon that you want to touch upon?
01:00:54.240 - 01:01:26.884, Speaker C: I mean, I think this is just a general comment. Right. I think everybody should think about how technology evolve over our lives. There's too often in this space, the people just assume what currently is there is going to be how things evolve over time. Technology always, always leaps. When there's a significant change, that usually kind of means something. You're going to see different kind of experience, consumer experience that come out of it.
01:01:26.884 - 01:01:45.264, Speaker C: Right. That's what we want to bring on. You know, just, just want to make sure, encourage everyone to sort of like, be open minded about a different paradigm, different concept. Right. It's definitely going to look very, very different 510 years from now. Right. If we are successful, it's good for the entire industry.
01:01:45.432 - 01:01:46.264, Speaker B: Right. Definitely.
01:01:46.312 - 01:02:04.116, Speaker C: We challenge the current assumptions. You know, we like to see everybody, I don't see the entire pie expense. Right. We're not in the business of swinging like, we want to capture all the smaller, the existing PI and capture most of it. What we want is expanding the PI.
01:02:04.228 - 01:02:28.604, Speaker B: The PI today is relatively small. Right. Yeah. So you can't go into business trying to build on that premise alone, which is why I hope the next set of applications bring in more users into the space. But I think look, drawing the parallels with broadband and dial up, I think the dial up world is what we have today, and our goal is to bring broadband to, not to say we're the only people that do it, but, like, we want to make a big balance.
01:02:28.732 - 01:02:42.476, Speaker C: Yeah. We totally expect there will be new competitors that emerges. They'll keep us honest. We want to be challenged. You know, first we have to prove ourselves. Right. And then we love to have competition that spur us forward.
01:02:42.628 - 01:03:10.056, Speaker A: Awesome. Now, I love that analogy. And also the kind of number of iterations, it's normally you have to go through the series of iterations and completely new architectures, kind of learning from the past, but the series of iterations is ultimately kind of what gets you to that final product and then another way that I've been describing blockchains and kind of the transitions. Exactly. The dial up to broadband to, like, fiber optics. Correct. And so it's funny that you mentioned that, but awesome.
01:03:10.056 - 01:03:18.576, Speaker A: Thank you again, gentlemen. It was an absolute pleasure. I really do appreciate your time and hope everybody enjoys the conversation as much as I did. Thank you.
01:03:18.608 - 01:03:19.584, Speaker B: Thank you very much. Thank you.
01:03:19.672 - 01:03:20.048, Speaker A: Awesome.
01:03:20.104 - 01:03:20.680, Speaker C: Thank you for your time.
