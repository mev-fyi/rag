00:00:00.440 - 00:01:03.834, Speaker A: This is a podcast with Doctor Imin Gun Sur, the founder of Avalanche Protocol. I've spoken with many of Emin's colleagues at the Avalanche Foundation. A lot of those were his former PhD students or even students at Cornell University where he taught. Emin believes in a future where there are millions of blockchains or millions of subnets, and he has specifically designed the Avalanche consensus protocol around that flexibility and to be able to scale and support millions of nodes in that process. We touched upon our recent trips to Asia, where we compare and contrast the us markets versus Asia markets, the inner technical workings of the avalanche protocol, and those differences between other popular blockchains coming about. I was out of the typical podcast studio for this episode, so my Internet was a little bit worse than I was expecting, which caused some slight audio and video issues. I hope you can understand and I hope you enjoy the episode.
00:01:03.834 - 00:01:23.950, Speaker A: Thank you so much. Eman, thank you so much for coming on the podcast. Really looking forward to it. I feel like I've interviewed pretty much all of your colleagues now, except for you, so really looking forward to making this happen, and I think it's going to be a really excellent chat.
00:01:24.970 - 00:01:33.866, Speaker B: I hope so too. Super delighted to be here, Logan. Very much looking forward to going in depth to wherever the discussion might take us.
00:01:33.978 - 00:02:06.610, Speaker A: Perfect. Well, maybe. I think you and I both just got back from a little bit of a world tour, specifically in Asia with token 2049. And I was just watching a chat that you did on different blockchain architectures with SWe near Aptos. But maybe before getting into the core technical architecture, can you share just some of your big takeaways that you had in Singapore and maybe compare and contrast that from the us market?
00:02:07.150 - 00:02:27.854, Speaker B: Sure. So I was just recently in Singapore and Hong Kong as part of Token 2049, as you mentioned. And my biggest takeaway, there may be two takeaways. There's always three. A couple of takeaways. Number one, Asia is strong. Asia is in a different regulatory regime, and the people there are in a different mode.
00:02:27.854 - 00:03:10.224, Speaker B: They have a different outlook, and it's the diametrical opposite of what we're dealing with in the United States. There is clarity, there is certainty, and there is a lot of demand from the big conglomerates, the big companies, for tokenization. And we were at the forefront of this effort. We had the SK Planet partnership in Korea. That was maybe six or so months ago where we partnered with one of the biggest, largest companies in Korea to put loyalty points on the blockchain and to bring along about 35 million Koreans it's a country of 80 million people. This is amazing to me that they have a stranglehold on about 35 million users. And they're all going to be using.
00:03:10.224 - 00:03:42.640, Speaker B: They're already started doing so and I don't actually know the numbers of people, but they're all Ky seat users already on avalanche. So this kind of movement is everywhere in Asia. People want to use blockchains. They are coming onto these platforms and they're looking for platforms that work. That's number one. There are still regulatory issues, even in Asia, but they're so far ahead of us that the things we take as problems today are not a problem there. And so they are maybe three or four steps ahead of us.
00:03:42.640 - 00:04:16.488, Speaker B: Let's see another takeaway. I think there used to be a time when blockchains were a game for the tech savvy young kids. There was a lot of technobabble, there was a lot of promises of things to come. I call these Godot technologies. You wait for Godot and the entire value proposition of Godot is that he never arrives. There's always some technology that will come and allow Ethereum to scale. It's not there yet, but someday it will be there.
00:04:16.488 - 00:04:43.360, Speaker B: It wasn't there yet, but accumulators were going to fix it. The verifiable random functions were going to fix it. Verifiable delay functions were going to fix it. The Ethereum foundation was going to have a bake off and a competition. So l two s are going to fix it, somebody else will fix it, etcetera, etcetera. It's essential that the delivery never happens. It's absolutely essential that that final thing is not delivered, that it's always switched for something or another.
00:04:43.360 - 00:05:19.580, Speaker B: So that there's always a carrot, there's always a reason to hold. Hold on to what you've got. And everybody knows that that thing isn't exactly what you wanted in the first place. So I think that narrative is coming to an end. The days of asinine sort of technology holdouts where people are always holding the stick, this carrot and stick in front of us are coming to an end. Asinine new chains are coming to an end. So those chains that people don't understand why they exist, what the value proposition is, except they're just another fork, they're just a copy of something else that's coming to an end.
00:05:19.580 - 00:05:46.038, Speaker B: I think we maybe have another year of that play, but I don't think we have another two years of that play. So let's mark my words, if I'm wrong. I'm wrong. We'll see how it goes. So the markets have a mind of their own. But I suspect that this game of always holding out the technology, always delivering to the masses some gobletigook are going to come to an end. When I actually said this on stage, I got a standing ovation and it was really surprising to me.
00:05:46.038 - 00:05:59.410, Speaker B: I didn't think I'm usually ahead of the times. I didn't think people were with me on this one, but they are now. I think they're sick and tired of always being promised things that don't work. So that's sort of my takeaway from that whole Singapore Hong Kong trip.
00:05:59.950 - 00:06:40.834, Speaker A: Perfect. And I always appreciate kind of the bold takes. And I truly respect people that ultimately say like the quiet part out loud. I think it's not necessarily easy to do so and respect for saying what you ultimately think. I think to your point, I unfortunately couldn't make it to Singapore. But in South Korea they really focus on applications and specifically games and driving user activity on chain. And I think the US has been a little bit bogged down by the regulatory uncertainty.
00:06:40.834 - 00:07:32.970, Speaker A: And so it's kind of refreshing to be in another part of the world that is viewing this technology in a different lens. I think regardless of the technology architecture, what we're really all trying to push for is people to use blockchain technology. And really what got us excited, whether that was bitcoin or ethereum, ultimately starting that with smart contracts, it was definitely refreshing. And to your point, maybe we can just dive into some of the stuff on the technical side, because that's my bread and butter. What do you feel like is from these other ecosystems, or ethereum specifically, do you feel like they're just shipping too slow? Or what are some of the problems that you're seeing? To your point, the technical gobbler goosh that people keep promising but never deliver.
00:07:33.830 - 00:08:28.136, Speaker B: That's an interesting question. And it requires a social analysis of why is it that certain communities are able to deliver like avalanche has been and others just don't. And so I think the biggest decision point is are these communities wanting to deliver but are unable, or is it part of the value proposition that they don't deliver? So that's, I think the first thing, I'm not really sure exactly where I lie on this. Within any community, there are people who are striving to deliver things, of course, but aren't very fast about it. There aren't enough of them or they don't have the insights that are necessary. And of course, there's another issue here, but we first have to decide on that one. Right? So are they trying and not being able to deliver? Are they not even trying at all? And there are chains out there that just aren't trying at all.
00:08:28.136 - 00:09:21.156, Speaker B: It's just they've got some asinine value proposition and there's always something in the future and it's maybe in peer review or whatnot, but it's never being delivered. And so the, that's just part of what they do, that's part of their culture. But then the next, next thing is suppose there are enough people, and suppose there are sufficiently many people who want to deliver things, why do they not? What is it that keeps people well, what does it take to innovate? That's another question that people ask quite often in tech circles. Why are some countries so innovative and some countries are just not. They're always playing catch up. And I think the answer there has to do a lot with values and metrics that people target. If you target the wrong metrics, you will guaranteed end up in the wrong spot.
00:09:21.156 - 00:09:56.902, Speaker B: If you start out with some kind of a muddled narrative, if you're thinking about these issues is not clear enough, you can't separate the separable issues. If you think that you must throw everything into the kitchen sink and clean it up all at the same time, you're not going to be able to, you need to be able to say, look, this is the section of the puzzle I'm going to solve now. And then I'm going to move on to the next thing. This is precisely what we did with avalanche. We started out with the hardest problem, the consensus protocol. We made it genuinely different from everybody else's. Not just in words, not just in.
00:09:56.902 - 00:10:38.742, Speaker B: You know, there are a lot of things that are just EOS copies. So in fact, just about everybody other than avalanche is a copy of EOS with a couple of little complications, a little bit more verbiage, etcetera. But that's all they're doing, is they're doing all to all communication and they're doing signature accrual. So we broke that with Avalanche and we had an entirely new insight of the kind that isn't seen in the space of distributed systems all that often. In fact, it's the third biggest breakthrough in distributed systems is the avalanche consensus protocol. And then next up, we have these other aspects of the puzzle to address. We have state load to address, we have the database to address, the database speed, we have latency to address.
00:10:38.742 - 00:11:30.274, Speaker B: And I can go on and on and on, but we know how to think about these in a piecemeal fashion and a separable fashion. And I think we have the right frameworks for approaching this. And when we were doing this, we got a lot of pushback, a lot of pushback, especially from the most visible people, and some of them are people that I considered close friends and allies, but they just were thinking about this wrong. So they kept telling us, you can't end up affecting any kind of a speed improvement on Ethereum. They just said, you cannot do this, that it's, it doesn't make sense to focus on the consensus protocol and so on and so on. Or in fact, one of the main things they said was, they're targeting TPS. Well, I know how to target TPS, and that's, you know, if you're targeting TPS, you end up going down the path that is very different transactions per second.
00:11:30.274 - 00:12:13.380, Speaker B: That is, that's very different from the path that we went down on. We went down and we targeted latency. And that's one of the main things that gave us this appreciable edge for the user experience. Use avalanche you will notice that it's entirely different from anything else you've used because it's so lightning fast. So that's sort of my feelings at the highest level. Usually it's one of a chain that doesn't really know how to innovate or doesn't want to innovate, doesn't have enough people who can innovate, or if they are trying to innovate, they're going down the wrong path, because there's a lot of model thinking around. And I spent a fair bit of my career trying to clarify that model thinking I did.
00:12:13.380 - 00:12:27.600, Speaker B: You know, as some of you might know, I wrote blog posts for many, many years trying to direct people in the right direction. And at some point I gave up on that and decided to start my company and my own chain just to show the world how this ought to be done.
00:12:28.140 - 00:13:19.050, Speaker A: Yeah. And to that point, I think there has been many different variations of blockchain architectures. Different consensus algorithms, different virtual machines, different designs. Whether you do sharding, whether it's integrated chains, whether you're doing kind of either the subnet architecture, they're all very interesting designs, but what do you think they're all trying to achieve? I think ultimately, people are still experimenting with the blockchain architectures, and I think there's obviously something to be desired if people are still experimenting. What do you feel like is lacking, that people are like, oh, I need a different L2, or I need a new layer one that is not currently available or people are just missing.
00:13:19.470 - 00:14:02.274, Speaker B: So let's see. So where are people going wrong? What is it that they're doing wrong? Is maybe the question here. And here's my take on this. So, first of all, I see that people go into L2 based solutions the moment that they have run out of ideas. And I'll say this again, L2s are a stopgap measure when you cannot solve your problems in your own chain. So let's say you and I are using some chain x. And when X is when we don't know how to make x any better, then we spike the ball up into the air and we say, look, L2, somebody please come in and hit the ball down, because we don't know how to handle it from here.
00:14:02.274 - 00:14:27.280, Speaker B: So that's the l two approach. In general, whatever problems we have on X, we will have in any other layer, too. Whatever chain comes after us, whatever it is that's supposed to fix our problems, that we don't know how to fix, we'll face the exact same problems there is that. That's an important issue. I think that's where a lot of people go astray.
00:14:28.620 - 00:14:58.740, Speaker A: Why do you feel like most people have not, I think, learned that yet? Because we have started to see a lot of the same issues arise, whether that's on arbitrum or optimism. We have seen fee spikes on each of those. Once you start to see state contention or more activity, do you think it's just going to take some time for the engineers to realize we're just moving the problems around instead of actually solving them?
00:14:59.640 - 00:15:27.858, Speaker B: Yeah, I think it's just the market is all knowing. I trust it. It's amazing. It knows things that many of us don't know how to articulate, but it's not the fastest, so it usually takes a while for it to discover what becomes apparent to engineers. And if you talk to the engineers, they will tell you which coins are complete b's. There are coins out there. There are chains out there that go backwards every day.
00:15:27.858 - 00:15:48.240, Speaker B: I'm not going to name names. Screw it, I'll name names. Polygon does this every day. Polygon is a chain that cannot go just forwards. It keeps taking steps back every day. If you try to use such a chain, it's incredibly difficult. The entire value proposition of a blockchain is that you have some sort of.
00:15:48.240 - 00:16:23.290, Speaker B: Some notion of finality that you can count on things having been done and things having become incontrovertible if for various random reasons, mostly having to do with tech debt and an inability to write decent code that has finality. If your chain is going to go backwards, you're not going to be able to use it. There are many other chains out there with similar problems baked into them, and I know which ones they are. I named one of them. But there are many others. And the people out there who are trying to get work done, they know which ones they are. But it hasn't percolated into the trading community yet.
00:16:23.290 - 00:17:03.400, Speaker B: And the trader community is affected very much by the opinion makers, the blog posts and so on, and doesn't necessarily have its feet on the ground. So I think that's going to be one of the things that it's just information takes time to percolate out to the masses, and the people who want to get work done, they know, but that information isn't available to everybody else. So there are lots and lots of things that we were led to believe that did not pan out. And people who tried to get work done with those things, they knew where they went astray and they know what never to trust again. And they look for chains that actually consistently deliver working technology.
00:17:04.140 - 00:17:45.890, Speaker A: Yeah, it is fascinating. I've always kind of been a little confused by how long it takes for that information to really get to a wider audience. You'd think it would be much quicker. And as a engineer, these ideas seem rather obvious to the engineering mind, but for the rest of the community, it takes much longer for them to digest. But I think maybe to double click briefly on kind of avalanche consensus algorithm. It was really the bread and butter for avalanche. Being able to do probabilistic finality, very low latency, um, kind of remove the all to all kind of communication overhead.
00:17:45.890 - 00:18:26.978, Speaker A: That is rather brutal on consensys. Can we touch upon that briefly? Um, and maybe in your words, share a little bit more about that? Um, and also happy to kind of talk a little bit to my recent podcast with Anatoly. He said that all to all, all to all consensus was really a feature and not a bug, even though that the consensus overhead was rather hard. So I'd love to like either first double click on avalanche consensus algorithm and maybe share your point of view on why all to all is not the thing that you should optimize for because of the consensus.
00:18:27.154 - 00:18:59.314, Speaker B: Sure. So look, my field of distributed systems, the area that I'm an expert in, the area where I taught at Cornell for multiple decades, is not a field with thousands and thousands of years of background. It's only a 60 year old field. In those 60 years, there were only three approaches to consensus. Okay, so back in the sixties, people realized consensus is a big issue. We need to make sure that a group of computers act in unison. They have to agree on proposals.
00:18:59.314 - 00:19:20.290, Speaker B: They have to agree on what they saw, even though some of them might be misbehaving. That's the consensus problem. And so they identified this. And in the intervening 50 or so years, there have been only three approaches to consensus. One of them is proof of work. Absolutely brilliant idea. Absolutely fantastic idea.
00:19:20.290 - 00:20:11.602, Speaker B: And I'm not going to go into details, but proof of work has got its drawbacks. It's expensive for security because it has to burn energy. It is, it is slow because, as you can see from bitcoin's finality, that it takes about an hour. And it is generally not going to yield the most environmentally friendly solutions, nor is it going to yield the highest, the fastest, or the highest throughput solutions. So then what else is there? Well, the second approach to consensus is what we call classical consensus protocols, or classical byzantine fault tolerance protocols. Now, these protocols typically work the way, you know, I think the best example here would be passing a bill in a senate. Okay? You have about 100 senators.
00:20:11.602 - 00:20:58.406, Speaker B: They are signing a bill, and a bill will go into effect when a certain threshold of senators have signed that particular bill. Now, that approach is one of signature collection, signature accrual. So for me, as a senator, to respect a bill, I will like to see a threshold of signatures on it. So there will be a whole bunch of signatures floating around. And every senator, because they can't trust anyone else, every senator will have to independently verify the signatures from all the other senators. Now, this approach is inherently n squared. So 100 people will have to collect signatures from, you know, on the order of 100 other people and make sure that close to everybody's signatures on it.
00:20:58.406 - 00:21:38.178, Speaker B: Some people might be sick that day. So you can't really insist on 100 signatures. So you have to make sure that you have to be able to tolerate some amount of missing senators. You have to be able to tolerate some amount of infiltrated and compromised senators. So it turns out that the threshold, the appropriate threshold is 67 signatures for a senate of 100. But still 100 people collecting 67 signatures, that's 67, 100 messages floating around in the network. If you had instead of 100 senators, if you had a million participants, now a million people would have to do all to all communication with another million people.
00:21:38.178 - 00:21:59.290, Speaker B: And that's the problem with all of these approaches, Solana is a beautifully engineered system. It's engineered incredibly well, but at the bottom of it all lies this all to all communication. And that's why it can never, ever handle millions of participating validators, because it is based on the core of all to all communication.
00:21:59.950 - 00:22:29.510, Speaker A: Yeah, to that point, I guess. Where do you feel like a lot of these chains, say, either bitcoin, ethereum. Bitcoin hovers around 11,000 full nodes, or 12,000 ethereums around 6000. Do you think these chains will ultimately get to the millions or tens of thousands? Where do you feel like that is going to net out? Because right now most of the chains only have a couple thousand nodes at most.
00:22:31.210 - 00:23:13.172, Speaker B: Yeah, I think the goal for all of us should be that everybody participates in our chain. So I want to see every single person who's capable of running a node participate in avalanche. This is, these systems are strong to the extent that they're fully decentralized. They're strong to the extent that they have representatives from lots and lots of legal jurisdictions, every place on earth, all around the globe, participating in their consensus protocols. Otherwise, they are open to all kinds of attacks and all kinds of failures. So we need consensus protocols that can accommodate huge numbers of participants. And other than avalanche, nothing comes close.
00:23:13.172 - 00:23:52.074, Speaker B: So this all to all communication. It just means that n squared numbers grow very, very fast, and it means that in general, you will not be able to accommodate more than a few hundred users. So in fact, these new systems as well, like Libra and the descendant systems coming down from Libra, they also were using an all to all communication mechanism. The best classical consensus protocol is not ethereum. It's not any of the other things that were recently put on online. It's the system behind Libra. It was designed by my student as a summer project when I sent them over to the west coast.
00:23:52.074 - 00:24:24.370, Speaker B: And even then, Libra was designed for about 100 of Mark Zuckerberg's best friends. So I don't want to be part of a future like that. I want to be part of a decentralized future. I got into crypto because I believe in systems without gatekeepers. Got into crypto because I believe in open systems where anyone can participate. I don't want the system where the slots are filled by JPM and Goldman Sachs and so on. I don't want a system where the slots are filled by other people and I need to seek permission.
00:24:24.370 - 00:24:44.850, Speaker B: So I think that's one of the key differentiating factors between us. And we built our protocol from the ground up. And if you want, I can talk to you about how it works. We built our protocol from the ground up to facilitate millions of participants in every decision. Shall I go into it a little bit?
00:24:44.890 - 00:24:46.914, Speaker A: Sure. Happy to dive into it.
00:24:47.042 - 00:25:22.726, Speaker B: Okay. Well, very quickly, avalanche consensus works differently from other protocols. The other protocols try to have, essentially, they're all based on all to all communication. As I mentioned, every participant sends a message out to all the other participants and tries to collect signatures to see if there is enough support for a particular bill's passage. In avalanche, we don't do that. We do a slightly different protocol where we repeat the same process in multiple rounds. And that process is one of signature, is one of polling.
00:25:22.726 - 00:26:08.092, Speaker B: Repeated subsampled polling, not signature accrual. It's one of repeated subsampled polling. So what, in effect, you do is imagine that you're in a ginormous stadium full of people, and you pick five people from the audience, randomly scattered across the audience, the stadium, and you say, hey, you know, I don't want to ask everybody. I'm going to ask the five of you. Do you think there is enough support for the passage of this bill? And those people, in turn ask five other people who ask five other people. And by doing so, you end up getting coverage across the entire stadium. Even though you yourself did not collect data individually, and even though some participants might be byzantine, they might be trying to mess with you, they might be trying to lead you astray.
00:26:08.092 - 00:26:51.830, Speaker B: So this is a very different approach to consensus, and yet it shows, the math shows that this is far faster, far, far faster, and far more scalable than anything else. And the reason for that is easy to see. It's because the nodes, a given node is talking to a small number of other nodes, is sending a small number of messages. And that's why avalanche is able to, to facilitate transactions in as little time as it does. I think it takes on the order of about 700 milliseconds for a transaction to be finalized on avalanche, and it takes far longer than that for any other system. And just for reference, ethereum takes about two and a half minutes or so.
00:26:52.250 - 00:27:35.010, Speaker A: And I think the ethereum is on the conservative side even now. I've heard like ten to twelve minutes for some of the finality numbers, but I fully agree. I think avalanche has really done some remarkable things around consensys that allows the scalability of the full nodes, and it's a perfect design for subnets. If we're in a world that has hundreds or thousands or millions of individual subnets that consensus algorithm is not necessary, but it's going to be required because of how many nodes are going to be in that system. It is very unique from all the other designs out there.
00:27:36.350 - 00:28:19.970, Speaker B: It really is. It really is. And as I said, it not only is it fast, but it also can accommodate huge numbers of participants. So I can have millions and millions of nodes, and it doesn't bother me at all, because I'm not going to be sending messages to each and every one of them for every decision. I'm going to be instead doing this repeated subsampled polling idea that allows me to have coverage without me having to talk to everybody. So we broke the fundamental stranglehold on consensus protocols. When the Solana folks are telling you that, hey, this is, you know, we have the fastest alto communication mechanism, you know, they might, because they've done a whole lot of crazy things to try to make the best case go fast for themselves at the expense of the worst case.
00:28:19.970 - 00:28:42.900, Speaker B: You know, there's a reason why Solana sputters every now and then under load. But I. But they might have that, but that won't work because, you know, that won't work at scale, because all to all communication is inherently limited. And that's the one thing that avalanche completely gets out of having to be bound by.
00:28:44.400 - 00:29:59.790, Speaker A: And I think maybe to touch upon that point, I mean, with Solana specifically, again, just kind of referring back to that podcast that I did with anatoly recently, the all to all kind of communication overhead, even though it is brutal, it is less efficient. And Atoli's point was that it is really kind of optimizing around kind of having, ensuring all parties within the quorum receive information, theoretically, almost in real time, there's going to be, like some 1015 milliseconds latency, but trying to really ensure that no one single party gets the data before everybody else. And by kind of having that real time information propagated to all parties, even though the consensus algorithm is less efficient. I think in the new fire dancer client implementation, I think 900,000, approximately, or 750,000 of a million transactions would be going towards votes, and then you would have like, 100,000 or 250,000 towards usable transactions for the network, for their engineers.
00:30:00.210 - 00:30:47.564, Speaker B: So let me get to the heart of why this is entirely wrong, and it's very important. And I've heard Solana folks get confused about this. And let's take a two second break to educate them about two different things. There is consensus, which is the act of agreeing that this block is a good block that finalizing on that block. Then there is information dissemination, which is seeing the contents of the block without necessarily agreeing that it is the block that we're going to be choosing. These two aspects of the protocol, of any protocol, are different. The second one that I mentioned, the information dissemination, that is a separable process.
00:30:47.564 - 00:31:23.344, Speaker B: And it's in fact a separate process. The transactions are being submitted into your network. They typically are gossiped around inside your validators. The blocks are being proposed, and the proposed blocks are again gossiped inside the network before the consensus protocol can begin. And then there is the consensus protocol itself. So what you really need to do is indeed, you have to make sure that all of the proposals are in front of people at about the same time as fast as possible without any discrepancies. So the avalanche gossip protocol does that.
00:31:23.344 - 00:31:57.400, Speaker B: You don't need consensus for this. All you need is the gossip aspect. And the gossip protocol built into the avalanche is the world's fastest. And it's, you know, I'm sure the, the, you know, the, there are others that are just as, that are, that are similarly fast. The ethereum one might also be good actually, in that front, but it's the act of bringing the proposals in front of other people that is, that is very important. And that's the part where you want to make sure that everybody is on an equal footing. And then there is the act of finalizing.
00:31:57.400 - 00:32:36.754, Speaker B: There is the act of deciding, this is the block I'm choosing, and that's the consensus protocol. It can happen in tandem with your gossip. That's what avalanche does. And that's one of the reasons why we're fast. And you want that process to finish, to finalize as quickly as possible. So these two things are different. The fairness concerns that anatoly might have with his protocol are fine to have, but the fairness concerns apply essentially to the information dissemination aspect of block production, not to the finalization aspect, not as much to the finalization aspect.
00:32:36.754 - 00:32:44.310, Speaker B: The thing that you want out of the finalization process, out of the consensus process is for it to finish as quickly as possible.
00:32:45.130 - 00:33:24.274, Speaker A: Yeah. And fully aligned kind of, on making sure transactions finalize as quickly as possible. And I think, as you mentioned, that data dissemination is much different than just coming to consensus and agreeing and finalizing transactions and moving forward. Is there any avalanche? Obviously put a lot of engineering resources and the core kind of innovation in my mind was that consensus breakthrough. Was there anything done on the peer to peer layer or the gossip layer to disseminate information faster? Or is it kind of already fast enough in your mind and no, like, big changes need to be made there.
00:33:24.442 - 00:34:03.160, Speaker B: No, we've, I think, engineered. So look, the gossip protocols were invented by cornelians, and Cornell is known to be the world world capital for gossip protocols. We built the best of the push pull gossip into, into avalanche. So, you know, is it possible to tweak it as network conditions change, as machines get faster? That's possible. Is it possible to change some of the packet sizes and so forth to make it go faster? That might be possible over time. We might need to make changes over time, but the core mechanism is the fastest node.
00:34:03.710 - 00:34:56.069, Speaker A: Interesting, very interesting. And maybe last question on the consensus design. And then I would love to move forward to really exploring the different virtual machines that are expanding into avalanche. But on the last question for consensus, one question again, or feedback that I've heard is once you move to this leader list design, for example, you have 1gb channel capacity. If two leaders are simultaneously communicating one gigabit worth of bandwidth, is there any channel interference? Does anything happen at scale when these systems have multiple leaders that are trying to communicate lots of data to the network at the same time? And that ultimately creates channel saturation?
00:34:57.210 - 00:35:27.158, Speaker B: So, yeah, that's a good question. And I think you're, I don't know if you have AEE background, like an electrical engineering background, but those are all valid concerns. And these are concerns that you see in wireless protocols, for example, that you can reach all kinds of interference when you have multiple leaders trying to do things simultaneously. So, short answer. I don't know what the short answer is. There's only a long answer to we.
00:35:27.174 - 00:35:47.170, Speaker A: Can dive deeper into it if we want to stick on this topic. But I think what I've been truly fascinated by is just exploring these different architecture designs, seeing what trade offs they ultimately make from a technical standpoint. But then ultimately, how does that really affect the end user and the end engineer trying to build in these ecosystems?
00:35:47.790 - 00:36:34.998, Speaker B: That's a great question. So I think just to wrap up my thoughts on the previous question, though, yes, obviously interference is an incredibly important concern. There is one thing that we do, which is to try to create constructive interference in avalanche. And let me tell you what that is, because there aren't that many other chains that try to do something similar. So when you are trying to achieve consensus on a number of items, what a lot of people do is they treat the. Yeah, they treat each block as a separate entity and they try to achieve consensus on each block. So block at height h is different from the block at, you know, say at height 100 is different from the block at 101, different from 102, and so on.
00:36:34.998 - 00:37:22.040, Speaker B: And the natural thing for most engineers is to say, okay, well, then I have. Let me build my consensus protocol. Let me apply it to height 100, let me apply it separately to height 101, and apply it separately to 102 and so on. In avalanche, what we do is we notice that 102 has a hash of 101 and 100 in it. And by achieving consensus on 102 or by voting on 102, you are implicitly voting on everything that preceded you. And that's definitely one of the tricks that we use to amortize the cost of a decision across multiple blocks. So if I can agree on block, say, 2000, I will have implicitly agreed on every block coming up to that height.
00:37:22.040 - 00:37:45.984, Speaker B: So that's a trick that we use, and that's one of the ways in which we try to reduce that interference that you mentioned. So if you are working on 100, I'm working on 101. We are really working in tandem if those two blocks are dependent on each other. And your work on 101 benefits me for block 100. So what was the next question that you asked after this?
00:37:46.072 - 00:38:49.830, Speaker A: It was also, I guess it was something that I've kind of been exploring recently, kind of in the leader list design. And I think to your earlier point, there are just lots of different design choices in these blockchains. And I think it's just interesting to put all that information out there. Whether it's talking about the different consensus designs, talking about leaderless, the less efficient all to all communication, or the vastly more efficient avalanche consensus to others. It is remarkable how many tweaks you can make in that stack. But one thing that I have really appreciated about the avalanche ecosystem is the fact that you really are trying to create one of the most flexible ecosystems possible, especially on the virtual machine design. To that, it's been very cool to me to see some of these parallel processing virtual machines ultimately come into the avalanche ecosystem, particularly with move.
00:38:49.830 - 00:39:02.454, Speaker A: Can you talk a little bit, too to the flexibility of avalanche, the design architecture that you guys really allowed engineers to play with, and some of these new virtual machines that are coming into the ecosystem?
00:39:02.582 - 00:39:26.782, Speaker B: Sure, sure. Thank you for asking this, because I was hoping to get to this aspect of Avalanche's innovation, and I didn't get to yet. We talked only about the consensus protocol, which makes the single chain go fast. But avalanche, unlike many other chains, is not a singular chain. Solana is a single chain. Ethereum is a single chain. So Ethereum and Solana are multi assets.
00:39:26.782 - 00:39:59.074, Speaker B: Multi asset single chain systems. Every activity, all activity, shares the same chain. And if there is one person who's going wild and hogging the chain, then everybody else has to take a backseat, or everybody else will have to pay higher fees, or everybody else will deal with degraded performance because there's somebody who's placing a load on a shared resource. Avalanche is different. Avalanche is a multi chain system with multiple assets. So it's multi asset, multi chain. And we're similar in this sense.
00:39:59.074 - 00:40:32.010, Speaker B: There are only just a couple of other competitors in the space cosmos. And Polkadot are similar to us, but everybody else is essentially a single chain. So in a multi chain world, you have a fantastic opportunity. Each and every one of those chains can have its own rules. Each and every one of those chains operates independently. A load spike in one of those chains does not affect the others. So, for example, if there's a game out there that wants to shield itself from what's happening on our sea chain, it can create its own blockchain.
00:40:32.010 - 00:41:09.270, Speaker B: And on that blockchain, it can do whatever it takes to make the game work. And that game is isolated from the activities and the load on the rest of the system. If there are institutions, as there are here in Manhattan, who want to tokenize their. Their assets, they can create their own chain. There are large institutions that we're working with that want to create a defi, sort of defi like chain, but for KYC seed, american customers, and they have regulatory concerns. So they want to create their own regulated chain. Well, they can do that without affecting the rest of the system.
00:41:09.270 - 00:41:51.356, Speaker B: So that's a key differentiating point for avalanche. And on each of these chains, the users can bring in their own virtual machines. We have something called HypersDK, and Hyper SDK allows you to build your own vm. One of the things that we built is HyperVM ourselves, which is one of the fastest virtual machines. But there are many others possible. Anybody can come up with their own virtual machine. And we provide you all of the infrastructure to launch and to build and launch your own chain according to your rules, your regulatory requirements, your performance demands, and whatever else you might want to have as a performance goal or as a functional goal.
00:41:51.356 - 00:42:17.160, Speaker B: So that makes avalanche very different from everybody else. And I'm thrilled to see the activity. There are hundreds of sub, what we call subnets on avalanche. Each and every subnet is a separate blockchain with potentially its own Vm. Some of these subnets use the Ethereum virtual machine because it's familiar to many devs. But there are many others who are building their own. And there are games coming online that are using their own.
00:42:17.160 - 00:42:50.370, Speaker B: And there are many other applications coming online with specific virtual machines for their own use. And you alluded to one of them that's going to be coming online very soon, which is the move virtual machine on avalanche. So that brings the benefits of the move virtual machine to the avalanche ecosystem. If you like move, but you want a fast system, you want a system that's interoperable. You want a system that will allow you to tap into rich Defi as opposed to starting from scratch. Then you can actually build on our move virtual machine on our move blockchain.
00:42:51.350 - 00:43:17.800, Speaker A: Yeah, it is fascinating, I guess in terms of the end state in where you see things. Do you envision a world and the avalanche ecosystem with hundreds or thousands of different virtual machines? Do you think it's going to be five? Are there going to be millions of subnets? Is it going to be 125 activity coalesces on a couple popular subnets. I'm curious to get your thoughts there.
00:43:17.990 - 00:43:56.914, Speaker B: Oh, so that's, that's an easy call. I think there's going to be millions of subnets because it's high time to hold service providers to some kind of accountability. That's how I see blockchains really helping the world. I don't want to go to some, some regular jackasses server and get, you know, get him to steal my data, collect a dossier on me, sell it to people, etcetera, and maybe provide a, you know, all sorts of funky service to me with people jumping in ahead of me, et cetera, et cetera. I don't want them selling my order flow or request flow to other people either. I want to hold them to accountability. I want to know what he's going to do.
00:43:56.914 - 00:44:35.970, Speaker B: And that's where blockchains help. Every single service we interact with ought to be a blockchain service. Every single one of those will need to have, typically will need to be on some blockchain and most likely its own blockchain. And avalanche is one of the only systems, one of the very few systems that has an architecture that can accommodate such a universe. Now, in this universe with millions of millions of chains, I suspect some virtual machines will stand above others. So at the moment, the ethereum virtual machine seems to have a lot of traction. I think it's okay in the sense that a lot of people are familiar with its quirks by now.
00:44:35.970 - 00:45:01.174, Speaker B: And there's a lot of literature out there for learning how it works. So that's why people use it. I think that's going to be a dominant player for some time to come, but there will be others. I think move is a fine virtual machine. If I were designing it from scratch, I would not make the errors that the EVM made. And I would maybe, perhaps look into move. Wasm virtual machines might actually be tracked, might see some traction as well.
00:45:01.174 - 00:45:40.790, Speaker B: Who knows? We're agnostic, we support all of these. And the right design is one where the system architects do not force something on you. If you like, if you want to invent your own, you can. And so what do I see in the end state? I think we're going to see a handful of very dominant virtual machines. I suspect for execution the EVM is fine. I don't think the improvements on the EVM are really earth shatteringly important, at least the ones that I have seen so far. There are other vms to come that might change this, but small tweaks are probably not enough to overcome the ease of acceptance of the EVM.
00:45:40.790 - 00:46:20.812, Speaker B: But then we might have all sorts of other vms for storage, for example, for all sorts of other things that one might want to do. You might have specific vms for bespoke purposes, IoT vms, for example, will end up having different cryptography in them, lighter weight cryptography and so on and so forth. For every use case there will be a specific vm potentially, and we'll see hundreds of virtual machines, millions of blockchains. And among those hundreds of virtual machines, popularity will typically be zip, where one of them will be very, very common, the next one far less and the next one far less than that.
00:46:20.836 - 00:46:45.490, Speaker A: And so as kind of closing up the podcast, I to ask you particularly what you think is the most misunderstood about our avalanche avalanche ecosystem that you wish people could understand better, either on a technology point of view or non technical point of view, that just need to be heard to larger community.
00:46:46.070 - 00:47:30.864, Speaker B: So I think the most misunderstood aspect of avalanche is that it is a competitor to some other chain. It's not our number one. Competition is Wall street has always been our main goal has always been tokenization of real world assets and to provide the architecture that allows large asset holders to be able to safely, securely and legally digitize their asset holdings. And there is another misconception out there that we're competing with Ethereum or we're competing with this, that and the other. We're not. We have the kind of architecture that can subsume these other systems that is greater than them. Because we are a multi chain system.
00:47:30.864 - 00:48:09.478, Speaker B: Our sea chain is kind of like ethereum, but I can easily have a move chain as well. We can easily have, which we are about to launch with move, not we, but the avalanche community is about to launch with movement. And I, and there are many others that are coming online. There are many other blockchain, hundreds of blockchains in existence on top of avalanche that are doing all sorts of disparate things, all sorts of separable things and different things from each other. So we have an architecture that's greater and grander than other chains out there. At the end of the day, people love to look at Coinmarketcap. They love to look at the tokens and so on.
00:48:09.478 - 00:48:46.314, Speaker B: And that's their main metric for sort of deciding what's going on with the chain. And that's sad to see. It's really, really sad to see. We are here to build and we're here to give builders the most flexible, the fastest platform to build on. And there is none other besides us that I can point to and say, you can take your regulatory requirements, map them onto what they have. You can go and do whatever you like unhampered by somebody else's need to extract value from your users. So we have a very different architecture as a result.
00:48:46.314 - 00:49:13.812, Speaker B: And we have a very different vision as a result. You will see us getting into discussions with people at all sorts of junctions in the road. You'll see me discuss l two versus l one. You'll see me discuss what it takes to build a good wallet, etcetera. And there's going to be all sorts of discussions but we're not in opposition to. So we have our own take on how to do these things. But we are not direct competitors to any of these chains.
00:49:13.812 - 00:49:51.418, Speaker B: In fact, I mentioned this earlier, but I see many layer ones, some ranked far above us, turning into avalanche subnets. In the future. They will want to decentralize if they are genuine about what they want to build and when they want to decentralize. There's only one consensus protocol that can absorb their growth. There's only one architecture that has enough the freedom for them to take whatever they have and move it on to a better platform. So that's the big, big difference. I think in many ways avalanche is a grander vision than most people give it credit for.
00:49:51.418 - 00:50:23.680, Speaker B: People think that we did arise at the time we launched, at the time when Ethereum was hampered by high fees and people saw us as an alternative to Ethereum and as a L2 to Ethereum. That's all true in many ways. We're a L2 of a certain kind, but at the same time we have a purpose and an architecture and technical background that is entirely different from everybody else. And we're doing something grander than the sum total of what other people are doing.
00:50:26.580 - 00:51:03.812, Speaker A: I think it's well put, is really in a league of zone in terms of consensus and able to run hundreds of thousands or millions of notes the subnet or cho desires. And I think your point in the world, millions of change have to have that consistency to make it happen. So very exciting to see. And the final question, you been live or avalanche? Has been live for quite some time. What has been either the biggest lessons or surprises that you've seen since in.
00:51:03.836 - 00:51:29.132, Speaker B: That surprises in the last three years? Quite a few. Quite a few. So let's see, as a system architect or as a user of blockchains, what do we want to, I mean, we lived through the FTX saga as well. We lived, and we lived through a lot of failures of the system as well. Pleasant surprises. I think I mentioned one of them. Let's rattle off some of them.
00:51:29.132 - 00:52:04.906, Speaker B: There are so many of these. I learned so much through that process. One of the most pleasant surprises was how resilient blockchains are. I mentioned this before, it's worth repeating. Everything that Wall street has, everything that the traditional system is trying to do, is better done on a blockchain, for example. Regulators are having a very tough time for doing safety tests. So what happens if this institution fails? How does it affect this other institution, etcetera? Well, those tests are so easy to do on a blockchain, and traders do this on a daily basis.
00:52:04.906 - 00:52:44.358, Speaker B: They examine other people's positions. They look at when liquidations are going to take place in Defi and so on. And the failures that we saw, the cascade failures of lending, etcetera, they all happened behind closed doors. They happened in crypto, because crypto is innovating, but they happened when crypto was using traditional services. So that's one huge surprise to me, that we could take all of Wall street, move it to blockchains, and the world would be net better in every way imaginable. So this fact hasn't sunken in. Okay, if I go down to DC, people don't think this way yet, but they will.
00:52:44.358 - 00:53:23.438, Speaker B: Those people are about three years behind, perennially three years behind. And in about two years or so, they'll catch on that it was all traditional systems that failed, that DeFi offers something better for consumers. Everybody will come around. So that's one big surprise. The ability of the market to correct itself has been a pleasant surprise as well, coupled with maybe the less pleasant surprise. There are things that everybody knows that are somehow not known by the market. So at the height of the bull market, there were chains coming online.
00:53:23.438 - 00:53:49.738, Speaker B: There were tokens being created by a small number of individuals. And you knew that when the time, you know, times got rough, those individuals would disappear, those tokens would disappear. There was nothing of lasting value being created by those people. I knew this. All my friends knew this, but the market did not. The market ended up doing plays, I would call these asinine token plays over. Over systems that weren't going anywhere.
00:53:49.738 - 00:54:23.746, Speaker B: So again, I'm not going to name names, but we all know the systems that were one time billed as competitors to avalanche or whatnot, they're nowhere to be found today. So that was an interesting surprise to me. I was just kind of sitting there along with a bunch of techie friends, and they were screaming, you know, this is kind of crazy, isn't it? And you go, yeah, it is. The market will correct itself. In the long term, it's incredibly intelligent, but in the short term, it can, it can be a little obstinate and it can do these things. So that was an interesting surprise as well. We're going to see that play out.
00:54:23.746 - 00:55:06.690, Speaker B: I think there's another year or so before the market really realizes that certain technical narratives have failed. So the l two game, it's been two years. There isn't a single trustworthy l two. Where are these things? Why are they not coming online? At some point, the market will catch on, just like it did with these asinine token plays that failed, that had no lasting value. So I think that was three different insights, perhaps, and maybe I'll stop there, but there were so many other surprises along the way. But once again, I want to leave on the positive note that in the long term, this technology is here to stay. I'm here to stay.
00:55:06.690 - 00:55:43.650, Speaker B: Avalanche is here to stay. And this tech is most definitely here to stay. And it's going to replace everything that we do to the extent that it has the right architecture and the right technology to absorb the growth and to respond to the regulatory and performance demands of the systems that you're placing. So as we speed things up, as we build larger, bigger systems, we're going to use our Wall street, we're going to use our tech, we're going to usurp everything else that comes online, because people will demand that accountability, that transparency, that openness from the systems that they use. And I'm really excited to be part of that future.
00:55:44.970 - 00:56:21.670, Speaker A: Full agree there. I very much look forward to that future as well. So Eman, thank you for coming on the podcast, sharing more in depth about really what truly separates avalanche from the rest of the ecosystem and version of the future and how we get there. I am always fascinated by now doing more hundred of these technical dives on everybody's point of the world, and I always learn a lot. So really appreciate your time coming podcast and I really look forward to seeing the reaction there's for this. I think they'll really enjoy it.
00:56:21.710 - 00:56:23.190, Speaker B: Great. Thank you so much for having me. Logan.
