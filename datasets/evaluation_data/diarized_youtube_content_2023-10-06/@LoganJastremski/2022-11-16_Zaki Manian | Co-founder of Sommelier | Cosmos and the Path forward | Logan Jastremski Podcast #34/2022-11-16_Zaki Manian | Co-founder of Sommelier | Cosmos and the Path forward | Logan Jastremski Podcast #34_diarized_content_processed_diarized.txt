00:00:01.080 - 00:00:39.846, Speaker A: Well, super excited to have you here. Zaki, thank you so much for coming on the podcast. It's been a very requested, ultimately, for more guests to learn about the cosmos ecosystem and what you're personally building as well. And so I ultimately kind of wanted to or recently have done a podcast with an Antonio from DyDX, and ultimately his kind of move to the cosmos ecosystem. But I would love to just kind of start with the origin stories of Cosmos and start from the beginning, and then we can kind of break down some of the technical aspects as well.
00:00:40.038 - 00:01:33.928, Speaker B: Yeah, absolutely. Okay, so the origin of Cosmos starts out in 2014 with JQuan inventing tendermint. And so, like, what is tendermint? So back in the old days of 2013, 2014 blockchains were really different. If you want, like, you definitely had a bunch of people launching bitcoin forks, and some of the bitcoin forks had applications like Namecoin. Most of the bitcoin forks were just driven by the economics of. Well, people really liked mining cryptocurrencies at home. And in 2013, mining industrialized to the point where no one could mine bitcoin at home anymore.
00:01:33.928 - 00:02:13.748, Speaker B: And then people still wanted to mine stuff at home. And so new coins basically came into existence so you could mine them at home, but. And so, like, you started to see this, like, multi chain world a little bit coming into existence. But, like, ultimately, it didn't really make a whole heck of a lot of sense. You know, these things were, these chains were not very secure, were not very interesting. And then Ethereum, so roughly around the same time was, like, the conceptualized, like, concept, the cosmos ecosystem. Like, the Cosmos architecture and the Ethereum architecture were conceptualized almost in parallel.
00:02:13.748 - 00:02:51.350, Speaker B: At the same time, Ethereum was like, we're going to build this big, basically, database in the sky that anyone could write to. And Cosmos was like, well, we have this. So Jay came up with this idea for tendermint, which was a consensus algorithm that was trying to merge the sort of ideas that had been around in academia, around build distributed consensus systems with blockchains. And honestly, it's like it was the, like, at the time, it was basically the most elegant thing I'd ever seen.
00:02:51.650 - 00:02:52.330, Speaker A: Yeah.
00:02:52.450 - 00:03:38.756, Speaker B: And so I really. I was like, I just, you know, Jay and I had met each other around the same time, and it was just like, it just. It seemed like it got so many pieces right, but it was clearly very early, and it was also going to be really. And so I started contributing in an open source front way, hanging out in the Tenderman slack, working on stuff, thinking about how this project could evolve in 2015. So there used to be this mailing list called the Crypto Economic Research Forum. It was very og like. Now we have telegram groups and Twitter and crypto Twitter.
00:03:38.756 - 00:04:21.890, Speaker B: None of these things existed back then. So there was this Google group. And so we decided I had a startup company called Skew chain that I co founded then that was doing enterprise trade finance on blockchains. Early enterprise, blockchain startup still around. We had, we went out and we pulled in, we went out and we pulled in the, we sort of decided to host a conference for that mailing list. And so people came from all over the world. Vitalik came, Vlad came, a lot of the early ethereum contributors.
00:04:21.890 - 00:05:20.166, Speaker B: And so this big group of people came, and Ethan was friends with Vlad and had been working on sort of a enterprise oriented fork of Ethereum called Eris at the time. And so Jay presented tendermint and you could see like Vitalik, you could see the wheels start turning. He was like, oh, this is really interesting, because it was like, okay, Vitalik has had the slasher idea of having adding slashing on top of proof of stake protocols, but they were all not, there were a lot of problems with those slashing things. And Jay had really kind of taken classical BFT consensus, accountability slashing, merged it all into one idea and was like, this is it. And you basically look at it now. Every proof of stake algorithm almost pretty much uses some variant of these ideas. Ethan got really excited about all of this stuff and actually started working with Jay.
00:05:20.166 - 00:06:17.650, Speaker B: He was initially, they were trying to, they were integrating tendermint into Aris for a while and that went on for a while, but then eventually Ethan left Aris and co founded all in bits, the tendermint company with Jay. So like 20 1526. So then they like 2015, they like, try and find like, customers who want to use tendermint and nothing really pans out. They find some users, but it was nothing very exciting or valuable. But they were like, but Ethereum started to take off and they were like, okay, why don't we move in the direction of building a public chain? But we didn't want to build, like, the Ethereum architecture didn't make sense. Just like running Ethereum on top of, of tendermint or building a proof of stake. Ethereum just didn't seem very exciting or visionary or useful, honestly.
00:06:17.650 - 00:07:28.440, Speaker B: So Jay had always had this idea from a long time of having on chain like clients, but not really a clear idea of how the whole network would fit together. I had been thinking for a long time about, because I used to help a lot of different teams, Tezos, dfinity, Ethereum, all of these things on all of their different scaling and architecture stuff. I had this idea of, okay, well, I knew about these ideas from the agoric guys about how you could have mutually distrusting, communicating smart contract systems. I was like, what if we just run that on top of ten? And so that was like, why? How we got to the IBC idea. And so 2016 raised money from VC's for this idea. There was just like a very small universe of crypto VC's, but, you know, was able to get funding moving. 2017 public fundraiser raised, you know, $16 million.
00:07:28.440 - 00:08:15.080, Speaker B: But when ETH was like $40, so it went up a lot. So then became like the foundation became set up the ICF, the foundation became well capitalized, started to scale the organization brought in a lot of talent. We really were able to attract a lot of very talented people. Jack Samplin, Chris goes, sunny during this. Adrian, all of these people like the faces that you now associate with Cosmos. Most of them came into the organization in 2017 and 2018. 2018 was like the year of this very punishing process of building the validator community and running public test nets culminated with this thing called Game of stakes, which was the first incentivized testnet.
00:08:15.080 - 00:08:49.690, Speaker B: Now, people are very familiar. Every blockchain doesn't incentivize testnet. We were first, and the success of Game of stakes really inspired all of those. Then 2019, we launched the first proof of stake Cosmos network, and we saw some really interesting early adoption, like Binance decided to use the Cosmos SDK for the Binance smart for the BNB chain. They built the DEx, the Thor chain. People were building on top of cosmos by then. So we just saw, like, a lot of interesting projects getting built.
00:08:49.690 - 00:08:54.762, Speaker B: 2019, Terra also adopted Cosmos SDK.
00:08:54.786 - 00:09:01.230, Speaker A: You had a lot of teams ultimately use the BFT or with Tendermint and SDK.
00:09:02.250 - 00:09:22.840, Speaker B: So then 2019, we tried to scale all in bits quite a bit, but Jay became increasingly unstable and difficult to work with. By the time we got to 2020, the entire engineering team left. But we basically were like, we're going to ship IBC somehow.
00:09:23.260 - 00:09:24.044, Speaker A: Yeah.
00:09:24.212 - 00:10:17.388, Speaker B: So we did this thing called Stargate, which was a very complex upgrade and change of large parts of the tendermint stack. And the Cosmos stack culminated with the launch of IBC. Launched IBC in March of 2021, but nothing happened and no one was using it. And then in June, osmosis launches. And when Osmosis launches Osmosis launched. It set off this crazy osmosis farming boom because osmosis made, basically gave you massive token rewards for using IBC, that is, for bringing your tokens onto the Dex. It was needed energize the ecosystem and that energy then probably 2021.
00:10:17.388 - 00:11:16.830, Speaker B: The dominant thing that was going on is the anchor carry trade of people being able to buy atoms from places where you couldn't get USD, swap it on as bonuses for UST. But that drove billions of dollars of value transfer over IBC and helped mature the IBC ecosystem. We've seen a lot of new chains, launches, lots of new change. Launchers were well over 50 blockchains in the IBC network and things like Axel are launched and ended up connecting now the IBC network to the rest of the blockchain ecosystem, allowing cosmos chains to tap into liquidity and assets anywhere. Now, what I would say the central questions of the cosmos ecosystem. Then terror exploded. Massive economic devastation across the ecosystem because again, a lot of the anchor carry trade was really core to the ecosystem.
00:11:16.830 - 00:12:35.150, Speaker B: But we've been able to recover largely as an ecosystem. I think what remains now as open questions in the ecosystem are, you know, one is we have like these, we have like Cosmos as an ecosystem is thriving, cosmos as an ecosystem is attracting more and more capital. I think cosmos as an ecosystem can continue, will continue to attract capital. Even in this crypto winter that we are experiencing that seems to be just getting started. We seem to be like ecosystem that is well poised to actually thrive in, under these conditions because we have not historically been as like reliant on sort of hype or like an external entity, like pumping our token. Never actually been able to build those relationships. But there really are open questions about Cosmos, which is basically where is value going to accrue in the system? Is value going to accrue to atom? Is value going to accrue to all the applications? How do you invest? How do you participate? These are all, frankly, open questions.
00:12:35.150 - 00:12:55.040, Speaker B: No one knows the answer. But it continues to be, frankly, a place where you can build apps and applications out of blockchains that have properties that just don't exist among any other ecosystem that continues to attract builders, I think.
00:12:55.820 - 00:13:24.380, Speaker A: Beautiful summary from the beginning. Definitely appreciate all the context and history. I'd love to break down ultimately just kind of the key components of cosmos and then maybe go into some of the more application specific stuff. Can you talk about ultimately kind of first shipping tendermint and then ultimately afterwards kind of building the SDK and start right there?
00:13:24.420 - 00:14:24.570, Speaker B: So tendermint so one of the most unique things about tendermint was that. So Jay actually got into an intellectual property dispute with Preston Byrne. So, Preston, you may know from crypto Twitter, he's probably not as famous as he used to be, but was a prolific member of crypto Twitter, still relatively well known. He's a lawyer, but back in the day, he was the CEO of Aris for a while. So Aris was paying Ethan to work on Tendermint, and Jay was working on tendermint on his own behalf. They hadn't worked out, like how the code would be licensed, and Jay really wanted Apache two licensed code. I think he doesn't necessarily agree with that decision anymore.
00:14:24.570 - 00:14:55.570, Speaker B: But in the time he was like, no. For tendermint to realize its value, it needs to be as usable by as many different organizations proprietary. The whole point is to take this work and have it be ubiquitous. And Apache two is the best license for that. It's the best license for enterprise adoption. It's like, it's how you get something like binance to adopt or all these exchanges. And Preston really wanted it to be GPL because they wanted to do some.
00:14:55.570 - 00:15:46.252, Speaker B: They wanted that flexibility of business model for Aris. And so Jay came up with the idea of separating Ethan's work, which was mostly at the application layer at the time, from his work, which was all the core consensus code. This thing got called ABCI application blockchain interface. ABCI ended up being a huge boost for adoption initially because you could connect to ABCI over from any programming language. You could connect to it from JavaScript, Ruby, go, whatever. Now, primarily people connect to ABCI in go and rust. Like, those are pretty much the only things that people did.
00:15:46.252 - 00:16:26.452, Speaker B: But back in the day, it gave people a lot of experimentation. So we had this system, but we realized that. And it was slower to build this way, right? It was slower to build tendermint as its own standalone thing, then the Cosmos SDK, and then the cosmos hub as its own standalone thing. But we decided to do these things because there was a real gap in frameworks for building blockchains. Most people, the way they built blockchains was they would fork bitcoin or they would fork Ethereum. And none of these things were designed to be forked and changed and modified. They just don't have the right software abstractions.
00:16:26.452 - 00:17:06.420, Speaker B: So we really put a lot of energy into in 20 17, 20, 18, 20, 19, like building these pieces. So we had to like build a full framework. And then we built the cosmos hub as an early application of that yep. But, you know, and, like, we were always, like, used as a feedback cycle. Does anyone actually want to use this? Right. And we would use things like adoption of tendermint, adoption by different builders, adoption of Cosmos SDK by teams like finance as signal to help us figure out where we're going and what to do.
00:17:08.000 - 00:18:03.640, Speaker A: Beautiful. No, it's a fascinating story, and I think many blockchains today do not have as rich of a history as cosmos does, just kind of being there from the beginning. And so it's definitely, it's awesome to kind of hear all this background context from the technology point of view. Many teams, as you have said, have adopted the technology that you have used. If you were to kind of pinpoint why this is and say, like, compare it to even some of, like, different consensus algorithms out there with, say, avalanche, snowball, or even swe, and they're doing a fast path, how would you compare and contrast and entice developers to continue to build on this versus, say, other blockchains?
00:18:04.260 - 00:18:21.738, Speaker B: At the time, tendermint was a first of its kind system. It was the first production BFT consensus system in the world that anyone could really use. But one of the real focuses of tendermint was making it understandable to users. Right?
00:18:21.794 - 00:18:22.430, Speaker A: Yeah.
00:18:24.370 - 00:19:23.660, Speaker B: We have these RPC ports where you can just see what's going on when the blockchain halts, the amount of user education. And then we did a lot of that user education during the 2018 testnet cycle. So we disseminated this knowledge. And Tendermint is, we would like, I mean, there's a renewed effort inside of the team to bring tendermint now towards being more of a state of the art system. But why teams continue to adopt it is I don't think that you can debug avalanche, like, an avalanche network without help from the core team. I don't think, like, I don't. No one else has built a system as stable, robust, and, like, easy to understand and debug as tendermint for doing distributed consensus.
00:19:23.660 - 00:19:57.250, Speaker B: Is it the most validated, you know, the most. Does it support the most public, you know, potential validators or public keys? Avalanche eth two. Or, like, the ETH beacon chain, consensus, like, vastly exceeds that. Does it, you know, so, and it, like, it's. You can run tendermint networks anywhere from, like, about half a second per block. But, like, could we go faster? Absolutely. Do we have the most advanced networking stack? No, like, Solana has, like, a much more advanced networking stack.
00:19:57.250 - 00:20:56.660, Speaker B: We have a lot of catching up to do. There's a lot that can be approved, but it is striking to me, and I keep looking at other consensus, other implementations because I don't feel like I'm a captive to tendermint. I would build on anything if it was better. But I just go back to this fundamental question of the desirable properties that you can have, which is single slot finality, instant single block finality, which is very important for interoperability. The most annoying thing about now that ethereum is proof of stake, you get actual finality, which is lovely. It's really annoying that it takes 20 minutes, especially when you're used to cosmos, and you're like, yeah, I sent a transaction. Probably by the time I pulled my finger off the button of, like, sending the transaction, it's finalized.
00:20:56.660 - 00:21:52.904, Speaker B: Yeah, you get really used to that. And so, and like, you know, it's like, like, yeah, I just like, don't think that there's really, like, fully debugged, fully understood, formally verified, well understood consensus. There's just, like, no one else who's made that product yet. I think the Mistin team honestly has ambitions of going there. So I think it will be cool if they can really turn swe and narwhal or like, narwhal bull shark. Like, a lot of people on the Tenderman team are very intrigued by these things. Like, they're very interesting to us in a way that, like, eth two consensus was never really interesting to us, or like, Solana's consensus was never really interesting to us.
00:21:52.904 - 00:22:38.110, Speaker B: And Avalanche just seems to make, like, Avalanche's spot in the tradeoff space. The downside of avalanche is basically that you don't have proofs of consensus. So you can't use the consensus algorithm for interop, for, like, non inter, for IBC type things. They need to layer on another consensus algorithm on top of which they're working on right now, which is cool, but it's like, that's so all the things that we want. But Narwhal Bullshark are intriguing to us, without a doubt. But I think for anyone to build a consensus layer, that is, this is what people complain. It's like substrate exists and substrate is a credible competitor to the cosmos.
00:22:38.110 - 00:23:08.110, Speaker B: SDK. But the only consensus algorithm that's mature on top of substrate is the Polkadot consensus algorithm, which is insanely complicated. And people are like, yeah, that's, maybe it's great for the, I mean, it's great for Kusama and Polkadot, and you have a core team that is experts in that consensus who are dealing with problems as they come up. But if you just want to use a toolkit, you want to have something that's simple and easy to understand. And this is why, by tendermint spot.
00:23:09.010 - 00:23:54.640, Speaker A: That makes a lot of sense. No, it's super interesting. How would you personally compare and contrast, say, these network changes or consensus changes to an individual app chain or maybe even more broadly to the cosmos ecosystem, versus saying, like, a more monolithic stack like Solana or SWE, just kind of being able to push that upgrade to the entire network versus how the cosmos chain is kind of pushing it to the individual app chains, and then ultimately, it can, over time, potentially adopt some of those upgrades as well.
00:23:54.980 - 00:24:11.106, Speaker B: Yeah, I think one thing that's really cool about, and you're starting to see this more now, so in theory. So, again, there's nothing about the Cosmos network that ties it to even a particular version of tendermint or anything like that.
00:24:11.298 - 00:24:12.750, Speaker A: It can be upgraded?
00:24:13.290 - 00:25:07.528, Speaker B: Well, it's not even just that. It's like, so there's one component, which is the on chain like client. And so on one hand, there's, like, vast change things that you can, a lot of things you can change about tendermint without breaking the lite client. And so you're starting to see some of the networks, like, say, and like other Cosmos app chains, actually start experimenting with significant changes to tendermint that don't break the lite client. Now, if you wanted to support, go from supporting a couple hundred validators to a couple thousand validators to, like, there are other things. There are definitely a category of improvements attenument, that break the white client that people will, I'm sure, eventually want to do. But IBC supports multiple lite clients.
00:25:07.528 - 00:25:54.322, Speaker B: But there is this network effect propagation that you have to deal with, which is like, okay, you need to have your counterparty chains all support your new lite client, but there's enormous improvements. And so I think you're going to see a lot of R and D that now doesn't land on the cosmos hub, but lands on other chains first. And then we're like, oh, okay. We have a better way of propagating transactions. We have different ways of designing the mempool. And all of this stuff allows for this horizontal application specific, I guess one thing we haven't covered, though, is why does anyone want an app chain, which I think is a good. Is a good thing.
00:25:54.322 - 00:27:05.630, Speaker B: Why do you not want to monolithic? Or what is the monolithic versus app chain thesis differential? The best argument for monolithic blockchains is that there are these infrastructural network effects that accrue. You get a debugger, like tenderly, which is amazing, where you can plug any transaction on any EVM blockchain into tenderly and get a lot of data that they're indexing. You have Etherscan, you have block explorers, you have wallets, you have all of these things that are all tightly integrated together. The downside of it is you don't get any opportunity to do full stack integration. So you're like, okay, there's one way of doing mempools, there's one way of writing smart contracts, there's one way of doing gas economics, and you can't optimize across the full stack. And DyDX is this great example of why optimizing across the full stack really matters.
00:27:07.650 - 00:27:26.150, Speaker A: Yeah, the DyDX use case is super interesting. I'm very interested in what they have done because it is unique with storing the transactions at RAM and including, say, I've been fascinated by those two projects in the cosmos ecosystem.
00:27:29.170 - 00:27:56.690, Speaker B: Yeah, I think one of the other things that is just notable is the big differentiator cosmos ecosystem. We have some interesting NFT stuff, we have some interesting game stuff, but right now, but without a doubt, we are basically the best place to build defi in the blockchain ecosystem. The best, most scalable place to build defi. And I don't think anyone else is coming close.
00:27:57.190 - 00:28:01.050, Speaker A: And is that because of the full stack customization?
00:28:01.430 - 00:28:39.870, Speaker B: Well, it's because of two things. One is because bridging is really important and everyone else has, like, everyone else's bridges are like, are either like one offs that are really good. Like, the near Rainbow Bridge is fucking amazing. But, you know, it's just a one off bridge from ethereum to near. It doesn't really solve any other problems. Or you have. Or bridges are like duct tape and bale wire, right? Like the Polygon bridge, five of eight signers, it's a mess.
00:28:39.870 - 00:29:29.870, Speaker B: Even all the roll up bridges are still pretty, are not very robust things. Like, you have all these problems. So bridging is really important. Full stack customization is really important. Those are the two things that end up really appealing. And then you can build everything from like DyDX, which is like an in memory order book where the essentially the order, like you have, it's very similar to the way a centralized exchange works, except the order book moves across the world every couple of seconds, which is just really cool. That's pretty wild or something like, say, which is like an on chain order book injectives, say have, like, on chain order books.
00:29:29.870 - 00:29:49.882, Speaker B: You have ranged liquidity. You know, you have, like, all these you can do. You can do. You can have mev mitigations of all kinds. Like, there's all kinds of stuff to build. And so that's really a core component of the whole system. That's a core reason to build.
00:29:49.882 - 00:30:07.170, Speaker B: Having really good bridges matters. Those are the two things that are, like, sort of the reason why defi gets built on cosmos. Because if, like, you're building gaming, you're building nfts. Arguably this stuff matters less. But if you're building money, moving systems, this stuff matters more.
00:30:07.330 - 00:30:13.590, Speaker A: Would kind of the counterpoint to the bridging argument also be like monolithic designs?
00:30:14.890 - 00:30:27.920, Speaker B: Yeah, that is the counterpoint. It's like if you have a monolithic blockchain, hypothetically, you can originate all value within the system. You don't have any bridges. Like, the whole system can be thought of as a uniform security boundary.
00:30:28.420 - 00:31:13.238, Speaker A: And personally, it's been interesting because I've talked with Sam and Mistin, team Avery from Aptos, and also talked with Anatoly, and it was interesting. Each of them kind of reiterate that their point of view is that it's possible to kind of build kind of a highly scalable monolithic blockchain where you don't have to bridge. And ultimately you can keep kind of that composability and your kind of point of view. With cosmos and the ecosystem, is it, again, just that entire flexibility of being able to control the whole stack? And that's kind of the main driving force going forward.
00:31:13.294 - 00:31:25.288, Speaker B: For the question is, like, the question is, are two. The questions are a couple of fundamental questions that, honestly, we like are still sufficiently early that no one knows the.
00:31:25.304 - 00:31:26.540, Speaker A: Answer to these questions.
00:31:27.720 - 00:32:19.160, Speaker B: Which is, the first question is, okay, so the advantage of composability on a monolithic blockchain are there because all of the programs are there. Their source code is on the chain. You know that when you went to. When you call another system, it's there, right. Cosmos has made an enormous amount of progress in making it so blockchains can understand each other, so that there is composability. We have things called interchange accounts and interchange queries. We have not so far, I would say, actually.
00:32:19.160 - 00:33:07.908, Speaker B: And when you use Kepler and you use the ecosystem, it feels very composable. And so it's been a little bit unclear exactly what tangibly you've given up so far. But from a pure architectural point of view, like, there are real differences between being composed within the same state machine and being composability between state machines. And if. And we do not build cosmos the way we built it, because we think it's the only way to scale. Like, we do think that there are horizontal scaling solutions that are the scaling solutions that Solana. And we're not simply saying, oh, okay, it's not decentralized and therefore verboten.
00:33:07.908 - 00:34:28.229, Speaker B: I mean, it's like we don't actually know where on the decentralization, not even decentralization, but where on the axes of verifiability, local access to state auditability, all of these different properties that blockchains have, what are the optimal trade off places? I don't think anyone knows the answers to these. I do like the cosmos trade offs a little bit better than the Solana trade offs. But the. So what I would say is, though, is when you kind of, like, dig into the architecture of these systems, the real problem is this, like, sort of uniform composability or, like, this, like, full stack optimization thing versus uniform composability. And we suspect, and we believe that the most compelling blockchain applications will need this full stack optimization thing more than they need ubiquitous composite. You give up a small enough amount on the composability side in this app chain architecture and that the benefits of full stack composability massively outweigh the costs of where you lose composability.
00:34:29.089 - 00:34:49.763, Speaker A: That makes sense. And what are maybe keeping on the Duidx and, say, blockchain examples. What have you found that these builders are customizing that require the full stack optimizations that cosmos allows them to change?
00:34:49.921 - 00:35:50.552, Speaker B: I mean, we see everything from encrypted mempools, different block propagation systems, like, different ways a mempool can even be conceptualized. Different transaction formats, different signing algorithms, different forms of cryptography for privacy. These are all the things that it's just really hard to build on top of these monolithic blockchains? Well, like, I want these cryptographic. You know, it's always been like, you know, trying to innovate cryptographically on top of Ethereum or Solana has always been sticking a round peg into a square hole. Right. It's always been. It's always been painful and, like, whereas in cosmos, you're seeing just, like, enormous progress on that, you know, in innovation there from teams like anoma and penumbra, parallel transaction execution, every one of these things can be experimented on.
00:35:50.552 - 00:36:04.900, Speaker B: And one thing that's happening right now with just this renewed interest in the cosmos ecosystem is we're seeing a lot more parallel experiments that are coming out of different teams.
00:36:06.240 - 00:36:29.416, Speaker A: It's super interesting. I love that. Ultimately, you can customize the virtual machines, you can customize the networking, you can change the consensus algorithm. It does give you a lot of flexibility that ultimately is not granted in these other ecosystems that are very expressive and kind of their point of view. But no, it's super interesting. No, I'm excited. Yeah.
00:36:29.416 - 00:36:52.706, Speaker A: I've always been. I thought personally with the app chains, it would kind of go towards ecosystems a little bit just to keep some of that composability, but also still have that flexibility. And so it's been super interesting to me to watch, like, to say ecosystems start to emerge with the focus on Defi and the fast finality.
00:36:52.858 - 00:37:24.170, Speaker B: Yep. Yeah. And so, you know, and like, other forms of composability are really valuable. Right. Like interchange security is composing is using composability to get shared security out of IBC, which is a protocol that works without shared security. Babylon chain is composing IBC security with bitcoin security. On one hand, there does seem to be this.
00:37:24.170 - 00:37:33.920, Speaker B: What kinds of composability actually matter? I don't know, but there's a composability that is achievable inside of cosmos that you can't achieve on other networks.
00:37:34.300 - 00:37:50.204, Speaker A: Definitely. And on the topic of Babylon, I've been also fascinated by the ability for them to essentially bootstrap the security of the network. Could you also just go a little bit more in depth into what David and the team are doing there?
00:37:50.292 - 00:38:25.530, Speaker B: Yeah. Advisor, investor in Babylon chain. Babylon chain is a very. It's sort of a. So like, if you go back to Satoshi's original white paper, bitcoin is a distributed timestamping service. And I hadn't really been thinking about this, but like, IBC, it turns out, like, David, like, sees this more clearly than I did. Especially like David and Henry from Penumbra both see this very clearly, that IBC is a distributed timestamping service as well.
00:38:25.530 - 00:38:45.130, Speaker B: But we have these, we have some interesting properties about IBC that are so the way the network is configured right now, I think it works really well at like 50 blockchains. I think it'll work fine at 500 blockchains. But if we get to 5000 blockchains, I have concerns.
00:38:46.990 - 00:38:50.334, Speaker A: About, mostly because the late clients and consensus.
00:38:50.422 - 00:40:03.476, Speaker B: Well, I have concerns about all of the potentials for rogue validator sets. I have concerns about the ability to detect attacks on the network and surface them. And so what Babylon chain is really trying to do is actually solve one of these security scaling bottlenecks of the IBC network using bitcoin's security. Because it's basically the idea that every network can timestamp their canonical chain, like the canonical version of the blockchain up into Babylon, and then Babylon can timestamp that into bitcoin. And now anyone who is looking at the network can get a canonical snapshot of the cosmos entire IBC network that is connected up by a Babylon chain from bitcoin and trace it all down. And so one of the big effects of this is that it will allow you to reduce the stake unbonding time across the entire IBC network to like hours to like maybe 6 hours or one day from like. Typically it's 21 days.
00:40:03.476 - 00:40:36.440, Speaker B: The reason why we have these very long unbounding times in cosmos is because of the need for IBC security and the fact that, like at large scale, it is hard to detect attacks. Do we need 21 days at 50 networks? Probably not. Will we need 21 days at 5000 network? 100% yes. But if you had Babel on chain, now you have this very concrete security argument that actually would allow most of the network to go down to a relatively short unbonding period.
00:40:37.350 - 00:40:46.730, Speaker A: And most of the chains are with all light, clients have to kind of adopt that new kind of timestamping.
00:40:47.630 - 00:41:11.770, Speaker B: The question is really like how? Like, what in what is the best way to make the IBC clients babble on chain aware? Which is a thing that we are, which is like, I have a PDF document about. I need to like read and provide feedback on about how we're going to go about this.
00:41:14.190 - 00:41:31.226, Speaker A: No, it's. Yeah. I'm also super excited for what David's building in Babylon. I think by being able to kind of bootstrap using some of bitcoin security and ultimately reducing the staking time, it does help.
00:41:31.398 - 00:41:34.950, Speaker B: That's like an example of like, application blockchain composability.
00:41:35.530 - 00:41:36.242, Speaker A: Yeah.
00:41:36.386 - 00:41:43.082, Speaker B: Also like briefly talk about sommelier, which is, I think another great composability example, which is exactly.
00:41:43.106 - 00:41:44.510, Speaker A: I wanted to get there as well.
00:41:46.130 - 00:43:00.462, Speaker B: Sommelier is a blockchain, an application specific blockchain where the, essentially the governance and incentive layers live on a Cosmos chain, but the application layers live on, which is, I think again, a cool thing where like. So what happens is that Similia is designed to support tens, hundreds, thousands of actively managed defi strategies, which are expressed as ERC 4626 tokens that then compose with the rest of the Ethereum defi ecosystem. And so I think what we're doing is we're really accelerating the composability of Ethereum defi because we're introducing actively managed positions that can be represented as a token. So you can collateralize a debt position against an actively managed position, and the actively managed position can be, for instance, de risking in volatility. But the liquidation system can be constantly monitored, can look through the token and what are the underlying assets and manage your debt position. I don't know. I think this stuff is really cool.
00:43:00.462 - 00:44:06.160, Speaker B: I think it's a really great demonstration of you can achieve. We don't have all of the pieces for doing this level of composability in the cosmos ecosystem yet, but we also don't have all of the pieces on the Ethereum side to do. For instance, to have the validator sets, to have the incentive alignment where the staking and governance token only accrues value only generates value if the strategies are actually making profits, which is really cool. So there's no inflationary staking rewards on Sahm doing all of that accounting, doing all that stuff, having the vote, like the decision making process about whether or not to rebalance, having the checks and balances that are achievable through sommelier, where we don't just have everything in the smart contract. There's also software called that every validator runs that can analyze the situation. All of these pieces are really unique and different, and only achievable by combining the Cosmo stack and the Ethereum stack.
00:44:08.100 - 00:44:16.328, Speaker A: That is fascinating. Ultimately. Is it the IBC lite clients that is enabling all that end to end?
00:44:16.404 - 00:45:00.430, Speaker B: Because Ethereum doesn't speak IBC and none of the bridges yet fully composed with IBC in the generic message passing form, we had to write our own bridge and we. So we use it. Or like there's a bridge in Cosmos called the gravity bridge that a number of different teams are using, and we use it for this right now. In the future, I would vastly prefer being able to use other bridges, but it is where it is right now. Two years ago, when we started, I was like, probably by the time all of this stuff is ready, we'll be able to use some other bridge. We're two years in and it's on people's roadmaps to give us a bridge that we would need, but it's not there.
00:45:01.090 - 00:45:45.496, Speaker A: Yeah, it's fascinating. Ultimately, being able to interlink these different blockchains and do asynchronous composability, I think is something that's really been unexplored, but will be fascinating to continue to watch, just jumping back a little bit, touching on like more. So rejecting the fact protocol thesis and really kind of empowering individual applications. Could you dive a little bit deeper into kind of that ethos and why the cosmos ecosystem is kind of point of view is so strongly on the application layer?
00:45:45.688 - 00:46:46.232, Speaker B: Well, I think the logical world is one in which most value accrues at the application layer. Ultimately, what consumers relationship with web3 is going to be is they're going to have relationships with apps. They're going to be like, this is an app. It does a thing that I find useful. It helps, you know, like it provides me, you know, it allows me to like earn money, trade, you know, do social stuff, whatever, you know, by play, you know, like interact with like video games and content providers and creators, all of these things that are really important and key pieces of the economy. All of that is going to happen at the application layer. And then you may have daos and stuff like that.
00:46:46.232 - 00:48:34.828, Speaker B: You may have distributed governance tokens and staking tokens and all this stuff that provide key services like the som token does in similiar or Dydx does now. And so it's never been clear in a world where the Ethereum l two ecosystem suddenly spawns mass market multimillion user applications. Why does this accrue value to Eth EIP 1559? A little bit of an answer, but as data availability become anyways, these couplings are weak. Why does, if a huge aaa video game is on Solana, why does that accrue value to solar? We have just been far more explicit about this question about, hey, we think that you gotta move beyond this meme era of that, oh, that Solana is just a meme because you hear lots of devs talking about Solana and therefore solo accrued value. We want to move beyond this meme eradic. And we think that, like, the flat protocol thesis is less true and it is mostly a result of this, like, meme era. I mean, as a practical matter, we're just like more open about the fact that, you know, we still haven't figured out why Adam would accrue any value in the success of the Cosmos network.
00:48:34.828 - 00:49:02.090, Speaker B: And it certainly, but we're just like also that it doesn't have to, like, Cosmos can succeed as an ecosystem, as an idea, as enormous value creation, as a network, and Adam just is like a meme coin that tails off into history as narratives change. Prop Avd two was like an attempt to address this, but we don't have enough consensus in the cosmos ecosystem apparently about moving beyond it, but we'll figure it out.
00:49:04.150 - 00:50:00.330, Speaker A: Yeah, no, it's a. I find it fascinating. Ultimately, everybody pursuing these different paths and ultimately cosmos going the more open source route and then just allowing people to build on it, and then these other ecosystems kind of taking more not pinpointed view, but directed point of view and kind of which way they see the ecosystem developing is fascinating, touching just upon kind of the light clients. Again, ultimately, one critique that I've heard more broadly on, like, the cosmos ecosystem is the inability to scale past, like, a couple hundred validators for an individual cosmos zone. Is that primarily due to the late clients and ultimately trying to keep the interoperability in between the different.
00:50:01.370 - 00:50:53.500, Speaker B: What no one has invented yet is a consensus algorithm that gives you good interoperability and lots of validator scalability. That is, that you can do like, clients efficiently with. Can we? But I also generally think that no one has figured out an economic solution like a set of economic incentives that actually create and gives a reason for more than a couple of hundred validators to exist. Both avalanche and the Ethereum beacon chain scale to hundreds of thousands, millions of validators, plausibly. But they're all. Most blocks are produced by a couple of hundred.
00:50:54.200 - 00:50:54.980, Speaker A: Yeah.
00:50:55.800 - 00:51:31.678, Speaker B: And, like, in the Solana ecosystem, again, like, they've made a lot of trade offs that we think are suboptimal about to get to this thousands of validator world. But also that's, like, mostly driven just by, like, the foundation's stake allocation decisions and not like, or anything like, sort of natural or organic. And I. So this is my point of view. I mean, I think there's definitely suboptimal things. I definitely think there's a lot of work to be done. I think there's, we should improve this over time.
00:51:31.678 - 00:51:36.930, Speaker B: But I do think that getting interoper right was the most important thing.
00:51:37.630 - 00:52:09.400, Speaker A: Yeah, I mean, it's definitely. Cosmos is in the lead by far, I would say, and just being able to seamlessly move assets kind of in between the different zones. If you could wave a magic wand, what are things that you would kind of approve upon both in the cosmos ecosystem, but then what are outside of just the message passaging with the light clients? What other things would you say cosmos ecosystem does uniquely? Well.
00:52:15.990 - 00:53:18.910, Speaker B: Other things that are interesting is, like, we do have this, like, you know, on chain voting, validator governance kind of structure that is getting a lot more use these days and is becoming a lot more interesting across many of the changes, especially, you know, Cosmos hub itself. You know, governance has been very anemic and on chain and, you know, prop 82, at least, kind of maybe a rebirth of Cosmos governance. The. So that piece is another thing that is interesting about cosmos. Our community is super open and engaged. It's all over Twitter. I think we are, frankly, really good at having founders who are good at clock farming.
00:53:18.910 - 00:54:09.460, Speaker B: And I think this is a good thing about the cosmos ecosystem. Again, it feels very decentralized because, like, you know, there isn't this hierarchy where, like, I or Jay or Ethan are really on the top of the cosmos ecosystem. There is more a tendency of everyone to kind of, for, like, most people who are involved in cosmos, start divining their own territory and their own sovereign social areas, too. I think that's, like, one of the things that is really cool about cosmos. I think it just like, it honestly makes the ecosystem feel more vibrant. I do feel like there's. I do worry a lot about the extent to which cosmos is a little bit of a boys club and a boys club of, like, big egos battling it out.
00:54:09.460 - 00:54:50.762, Speaker B: It does feel like there's just like, this continuous, you know, there's the, like, giant Zucky ego and the giant and the giant J ego and the giant sunny ego and the giant, you know, and all these other, like, large personalities and large egos. I worry a little bit about this. I think it's, like, both. One is good from a decentralization point of view because, you know, it's not like we have, like, one figure in the same way that Toli is, like, sort of the face of Solana and Vitalik is the face of Ethereum. We don't really have anything like that, which I think is really good. I just view. But, like, I think I.
00:54:50.762 - 00:56:08.020, Speaker B: So I talk with my business partner and co conspirator, Christy, a lot about this, about how we evolve cosmos into the next stage, kind of beyond this. I also think that, like, so, like, I'm very excited about, like, one of the sort of interesting things about where cosmos is going as we kind of wind down is, is that we do see the roll up ecosystem and the cosmos ecosystem becoming more intertwined with each other through technologies like Celestia, through just the fact that the roll up teams are all building, essentially, toolkits for building blockchains. Now, whether it's. They're all kind of going down the Cosmos SDK Cosmos architecture route in many ways. And I think this is going to be, like, a key piece. I think also the social dynamics of when Celestia is alive and interoperates well with the rest of the cosmos ecosystem will also change because you're not going to need these personalities to pull in validators. There's going to be different growth paths, and it may make this ecosystem a lot friendlier.
00:56:08.770 - 00:56:22.194, Speaker A: That makes sense. How are the Celestia team and Cosmos team ultimately planning to work together? Is it using that data availability layer that Celestia is building?
00:56:22.362 - 00:56:30.510, Speaker B: There is no grand plan. There is just like, we work together every day. It evolves.
00:56:31.010 - 00:56:31.790, Speaker A: Nice.
00:56:32.730 - 00:57:43.970, Speaker B: I don't think when we started, when I started working with Celestia, when it was called lazy Ledger, Celestia reminds me a lot of actually an early design for blockchain that Jay and Ethan came up with called supertanker. That was like I explained, you didn't have a solution to the data availability problem and suggested IBC architecture instead. So I think back then, when we started, we were expecting the roll up ecosystem to be a lot more mature on Ethereum by the time Celestia was ready to launch. And it's been a little bit surprising that roll mint and the Cosmos SDK have become so popular among the celestial builder ecosystem. And you've had multiple teams using various pieces of the Cosmos stack, building on top of Celestia get funding right now. It's honestly, that's a surprise because the Cosmos SDK was not built with all this stuff in mind, but teams of Celestia are building fraud proofs for the Cosmos SDK. Cool.
00:57:43.970 - 00:58:16.650, Speaker B: I mean, like. And I do think that you're going to end up with less of. I think we're. We are definitely seem to be headed, especially with the crypto winter, towards a world of less, like one roll up ecosystem and more like the Celestia roll up ecosystem. The Ethereum roll up ecosystem, teams like Tezos also building their own roll up ecosystems. And so how all of that. So you end up with a bunch of things that are like the Cosmos architecture.
00:58:16.650 - 00:58:44.364, Speaker B: So like Cosmos as an idea. So I gave a bunch of application specific roll ups on top of the Ethereum system. You have application specific Tezos roll ups. You have application specific celestial roll ups. They all look a lot like Cosmos. You also have avalanche subnets, assuming, as they get their bridging stories sorted out, like, all of these things all exist, they all look like Cosmos. But, you know, and so, like, where we are, where we fit into that world is.
00:58:44.364 - 00:58:51.120, Speaker B: I think there are, like, a lot of questions because Cosmos is both an idea and a set of specific technologies.
00:58:52.460 - 00:59:06.292, Speaker A: Definitely makes sense. Are there any applications that you're looking forward to being built on? The Cosmos blockchain that you would like to see to help push the ecosystem forward?
00:59:06.436 - 00:59:41.646, Speaker B: I would like to see more. On one hand, I like building defi stuff. Sennelier is defi osmosis, all these things. Most of what I spend my time thinking about and working on is defi stuff, but I am bullish on non defi stuff. Coming to Cosmos, I would like to see Stargaze take off more. I would like to see. I'm excited about the progress saga is making in terms of bringing gaming.
00:59:41.646 - 00:59:52.470, Speaker B: I am excited about what Scott is building with Scott. Sonaro is building in terms of a game engine on top of cosmos. All of those things are very exciting.
00:59:55.490 - 01:00:33.880, Speaker A: I'm definitely excited to watch the continued progression and excited for many builders to continue to experiment with the entire stack. I typically end the podcast with spicy questions and my go to. I don't know if they're too spicy. I kind of let the guests be as spicy as they want. But outside of the cosmos ecosystem, is there a blockchain that you think is doing things uniquely well and then vice versa? What ecosystem do you think is just kind of heading in the wrong direction?
01:00:36.820 - 01:01:36.592, Speaker B: Is there a blockchain? I think doing things uniquely well. I mean, we've covered a lot of different blockchains and ecosystems and whatnot. I'll shout out as I think fuel continues to be a very intriguing ecosystem to me and like, and I am broadly very excited about more of the ZK stuff becoming available. I think I'm broadly excited about integrating ZK stuff more into the cosmos ecosystem. Slush recently open sourced their tendermint fork, which is a chiro verifiable version to integrate into the starkware ecosystem. Seems really intriguing. So, yeah, I'm like, generally that those.
01:01:36.592 - 01:01:49.272, Speaker B: Those are kind of like, like there is there, like, I'm excited about everything that's like Cosmos but not cosmos. Like Cosmos, but not like the cosmos. SDK in tendermint tends to be like, a very exciting thing.
01:01:49.296 - 01:02:06.470, Speaker A: So, like, etherealization and ZK. Yeah, makes sense. Is there any things that, or I guess even outside of ecosystems say, like, features of blockchains that you just think ultimately are going down the wrong path?
01:02:08.010 - 01:02:45.330, Speaker B: Features of blockchains that I think are going down the wrong path? I think I continue to be. I don't know. I have trouble figuring out whether or not ZKevM matters. It would probably be like, if you think about, like, a lot of capital that is like, so, like, ZKe EVM is a category. Like, but like, is it a category or is it just a subset of, like, all versions of all evms, which can exist in many ways?
01:02:45.630 - 01:02:46.406, Speaker A: I agree.
01:02:46.558 - 01:03:27.720, Speaker B: This is a thing that I can't. I keep trying to figure out. It's like, I know, I strongly believe zero knowledge, verifiable state machines, like the verifiable state machine, zero knowledge, privacy. These are categories. I can't figure out if Zkevm is a category, and that continues to be. But like, I, you know, and I think the answer might be Zkevm is not a category, but polygon is fundamentally a category. And there their move from using cosmos tech to Zk tech for their environment is.
01:03:27.720 - 01:03:34.000, Speaker B: That's important and meaningful. But I don't know that that implies that Zkevm is actually a cat.
01:03:34.460 - 01:03:40.400, Speaker A: Yeah, I agree. Do you think l two s are parasitic or ultimately complementary?
01:03:49.910 - 01:04:34.040, Speaker B: I think it also. I think it's the same question of whether or not sovereign cosmos chains are parasitic or complementary. And I think the answer is, to a certain extent, both true. And I don't think that there's anything but using a blockchain as your data availability and settlement layers, which is like the l two thesis, or just as a data availability layer that inherently aligns incentives such that there's a tremendous value flow from, tremendous amount of value flow from the application layer into the data availability and settlement layer.
01:04:37.260 - 01:04:40.958, Speaker A: That makes sense. Awesome. Well, thank you again, Zachi.
01:04:41.094 - 01:04:48.370, Speaker B: Also, that's another thing I'm very skeptical of is, like, whether or not settlement will actually be, like, the settlement layer will actually be a blockchain.
01:04:48.990 - 01:04:49.534, Speaker A: Yeah.
01:04:49.622 - 01:04:53.690, Speaker B: Instead of, like, the settlement layer needs to be a blockchain.
01:04:54.990 - 01:04:56.926, Speaker A: Yeah, I'd agree.
01:04:56.958 - 01:05:07.540, Speaker B: Like, it could be a bridge system. It could be. It could be centralized exchanges. It could just be like, USDC becomes like the de facto settlement layer of the, of the multi chain world.
01:05:08.000 - 01:05:27.700, Speaker A: Yeah, that would definitely be interesting. Awesome. Well, thank you again, Zaki. I really appreciate your time and kind of updates on what you're personally building on the defi side, and then ultimately more broadly, the cosmos ecosystem. Any kind of departing words or final thoughts or things that we didn't touch?
01:05:28.120 - 01:05:28.860, Speaker B: No.
01:05:29.400 - 01:05:29.736, Speaker A: Cool.
01:05:29.768 - 01:05:31.340, Speaker B: Thank you for the flexibility on time.
01:05:32.120 - 01:05:43.976, Speaker A: Yeah, no, thank you and definitely appreciate you coming on the show. I know outside of this podcast, the world is kind of burning down in some sense, and so it's a good distraction and hopefully continue.
01:05:44.048 - 01:05:48.500, Speaker B: Sep. Yeah, things are real bad.
01:05:49.000 - 01:05:52.360, Speaker A: Yeah. So the only way, I guess, is.
01:05:52.400 - 01:05:54.420, Speaker B: Forward, the only way out is to build.
01:05:55.080 - 01:06:06.620, Speaker A: Yep. I totally agree. So thank you for helping educate people, inspiring people to continue the building process and excited to move forward past all this craziness.
01:06:07.240 - 01:06:08.020, Speaker B: Yes.
01:06:08.480 - 01:06:11.344, Speaker A: Awesome. Well, thank you again. Cool.
01:06:11.432 - 01:06:11.760, Speaker B: Thanks, guys.
