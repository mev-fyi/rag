00:00:07.800 - 00:01:02.404, Speaker A: Welcome to the DPin podcast. I'm Tom Trowbridge, your host, talking about everything DPin related, talking to founders, talking to everybody in the sector to get a full perspective on what this exciting sector has in store for us and kind of how it's all built up. And I'm super excited to have today to have a good friend of mine, Vuk, who has been in the sector for a long time and is fulfilling a critical piece. And I think when we think about Deepen, we think about a lot of the use cases, but those use cases don't work without something that VUC is building. And so VOOC is kind of sort of building core infrastructure that will help facilitate and enable the entire deep end sector. And so I kind of want to dig into it right away. So, Vooq, first define, I ask everyone, define what your mind, what Deepin is, and then we'll go from there into actually what you're building.
00:01:02.864 - 00:01:41.864, Speaker B: Yeah, deep in more broadly, is allowing people to contribute pieces of the infrastructure for particular use cases. This is not contained in the virtual assets, so it could also be like physical assets, like 3d printers and so on. We are specifically focused on like the virtual part, basically thinking about compute workloads, storage workloads, and that can be processed on a machine. Usually those are servers, computers and so on. But yeah, deep in general is like more broadly, allowing people to contribute pieces of the infrastructure, which could be anything at some point or whatever. But right now we are super focused on the virtual part.
00:01:42.244 - 00:02:02.026, Speaker A: Yeah, exactly. I mean, the way I think about it is crowdsourced infrastructure that's bound to be gathering a common network by a software layer that has some sort of economics, whether it's crypto economics, most commonly, that helps provide trust and incentives and tell us about what web3 mind is doing in the space.
00:02:02.210 - 00:02:49.864, Speaker B: Yeah. So if you think about that infrastructure, usually you're providing infrastructure. Being part of our economy, and being part of this economy has many implications. So if you want to provide, for example, a computer that would allow decentralized storage on filecoin, you would need to have a bunch of hard drives, but you would also need liquidity, which you need to use in order to participate in these economies. Usually when you have hardware, you don't have the liquidity. So matching these two resources is super important. And the way we do that is through liquid staking, where on one side we allow folks that have only the liquidity to stake into our protocol, and on the other side, we distribute this liquidity to hardware providers that are just focused on providing the resource on which this compute workload or search workload can be executed on.
00:02:50.404 - 00:03:22.866, Speaker A: And so to get a little more precise for people to make it more tangible. When Vooc says liquidity, he basically means tokens. He means coins. If you're doing, whether it's fluence or you're doing filecoin, which I guess obviously where you started to be a filecoin miner, which means to provide storage on the Filecoin network, you need to lock a certain amount of fill of filecoin tokens. That's when you say liquidity. Help us understand the scale of that, the economics related to that as a miner.
00:03:23.010 - 00:04:00.712, Speaker B: Yes, we were fortunate to basically start from the falcon ecosystem, where this is extremely like, the difference is extremely big in the sense that you could imagine a rack full of drives. A rack full of drives maybe allows you to contain ten petabytes. Ten petabytes. It's a lot, but it's not extreme quantities that you can't even imagine. You can probably buy those drives. An average Joe could have a rack full of drives and figure out how to enable that. But average Joe would not be able to get $10 million in liquidity just to enable that one rack.
00:04:00.888 - 00:04:05.616, Speaker A: But back up, that's what's required. You need for ten racks, you need 10 million worth of fill.
00:04:05.760 - 00:04:48.868, Speaker B: One rack, you would need the 10 million worth of fill. And of course, this is changing as the economy evolves. So at some point, it was even more like you had falcon being at 200 and the collateral being maybe a zero, and that was ten x, like. So you basically need $200 for 32gb of storage that you provided at some point, which is extreme. And for us, it was easy to reason about this problem as just not being feasible. So, like, you as a provider would never get enough liquidity just by providing the resource. Instead, you would need to opt into like different liquidity pools that would allow you to grow your business.
00:04:48.868 - 00:05:36.804, Speaker B: Because if you think about providers, especially in the context of storage or compute, those are going to be data centers that have a lot of resources, and they want to focus on the resource. So imagine a full room of hard drives, a full room of GPU's, full room of a bunch of servers. All of that would require millions or hundreds of millions of tokens. And that's just not their business. Their business is to keep improving the hardware incrementally and just try to optimize the utilization of this hardware. Rather than being money managers, they are just by nature not money managers. They are just frugal real estate businesses, they're just trying to optimize their cost in terms of hardware and how fast they can actually amortize that hardware.
00:05:37.584 - 00:06:21.840, Speaker A: If you think about that phrasing that slightly differently, you spend x dollars buying hardware. That is the capital costs. Some of that could even be borrowed potentially. But to buy the coins required to make that operational on just let's stick with a filecoin ecosystem for now, would require multiples of the value you spent on the hardware. And by the way, we got to go into why that's important. It's that way because that staking proves that once you have it staked, it makes it very expensive for you to leave the network. That stake is there, it serves a valid economic purpose, which leads to trust in the network.
00:06:21.840 - 00:06:28.124, Speaker A: Do you want to talk about why the stake is required? And then we talked about the scale, and then we'll get into how you kind of solve that problem.
00:06:28.424 - 00:07:10.330, Speaker B: Yeah, absolutely. So the stake is required because of a few reasons. Most importantly, because the economy needs to be sustainable. So like, in order for the economy to be sustainable, on one side, you need to create demand for the token, while you're also emitting some tokens every day. But that demand is super critical so that the economy is sustainable long term. So if you just keep printing money and there is no demand for that money, of course the money is not going to be worth anything at some point in the history of that market. But if you keep also increasing the demand and you figure out how to calibrate the demand with the supply, then you have a sustainable economy.
00:07:10.330 - 00:08:14.464, Speaker B: So that's one point. The second one is how do you know who should get the liquidity? Because if everyone wants to provide just resources, there are some better hardware providers, there are some worse hardware providers, and you want to manage the trust through that liquidity. So someone who is giving that liquidity to you as a hardware provider is for some reason trusting you that you are a good hardware provider and that you will do a good job. So that's the second piece, which is basically how do we select who will be part of this network. And usually we will select that by either efficiency so you're able to have a better cost, and because of that you're providing more rewards back to the lenders, or because you're better and you have multiple revenue streams that you can use on top of that error. So for example, in Filecoin you can provide storage, and that storage gives you some reward from the main network. But maybe you sell that storage on a fiat basis for a particular use case.
00:08:14.464 - 00:08:41.094, Speaker B: Maybe you do archival. So you charge your user $2 a month just to store 1. That's additional to the Falcon rewards that you are making. So because of that, you can pay more in interest rate for getting the falcon. And the more falcon you get, the more unfair advantage you have over the other providers. And with that you can grow to a larger degree. So, yeah, those are kind of the ones.
00:08:41.514 - 00:09:22.098, Speaker A: And just to back up one point, I guess, on the stake, because you mentioned one reason for the stake, but I think the core reason is that if you didn't have stake, any provider could contribute assets to the network and then turn them off at any point with no adverse consequences. And so if that happened, that then wouldn't inspire people to use the network. Right. So the stake actually is critical in order to have users trust the network. The benefit of stake also is that it's a demand for the token, obviously. Right. But I just want to get into the key piece of that.
00:09:22.098 - 00:09:40.050, Speaker A: That value locked is what allows customers to trust to put their data on Filecoin, because they know if that provider turns off that storage, that stake is slashed and goes away and is value destructive to them and to whoever staked. Right?
00:09:40.162 - 00:09:42.586, Speaker B: Yeah, yeah, absolutely. I've been in the space.
00:09:42.650 - 00:09:46.594, Speaker A: You take that for granted. But I just want to make sure that we've. Let's set the basis here, you know?
00:09:46.714 - 00:10:14.328, Speaker B: Yeah, absolutely. And the same is for compute, right. If you want to execute a compute workload, what you would do is you would commit that you're going to execute that workload. And that commitment needs to be monitoring, because if there is no penalty, then there is really no commitment at any point in time. So if you're not losing value because you do not do something, then the commitment is just not real. So that's the only way for you to actually do it.
00:10:14.456 - 00:10:45.222, Speaker A: And the reason why this all exists, to back up for a second, is that if you have Amazon, everyone trusts Amazon. That's a brand, it's a company. You can sue them, whatever. But in a decentralized network, you've got a whole bunch of individuals, whole bunch of companies contributing. You may not even know who they are. Right? So you need a way to get trust because you don't know XYZ provider where they are. So instead it's an economic way, which is what staking provides, is that economic incentive that everyone is aligned on and provides that stake and that trust.
00:10:45.222 - 00:11:05.866, Speaker A: But the expensive part. But it's also expensive, and that's where VUc comes in, in terms of helping providers amass that stake so they can be trusted. So can you talk now more about staking? What's the difference between staking and liquid staking? Just to be kind of set some basic ground definitions here.
00:11:06.010 - 00:11:41.726, Speaker B: So staking would basically mean you just lock the liquidity inside the protocol. Usually these protocols have some timeline on which you can unstake. So those are not like liquid positions because you just staked for a particular amount of time and you can unstick maybe in two years, three years, I think as the default on file coins around like one year to two years. So two years, you can't touch your token. They are locked inside the protocol. Well, what liquid staking is, it allows you to stick and unstake all the time. Basically, your position becomes liquid, and this is why it's called liquid staking.
00:11:41.726 - 00:12:29.234, Speaker B: So you're staking, but you also have the option of exit, exiting the liquidity at any point in time from the network. Then there is a third category right now, which is kind of lending, which I would really say that it's different from staking because lending is basically not really taking and locking the liquidity inside the protocol, but it's rather delegating the option to stake to someone else. So you're lending. The model here is an interest rate based model. So basically there is a price for the liquidity that you're paying, and then you have the option of taking that liquidity and locking that inside the protocol. That's sticking, taking liquidity, and locking that in the native protocol. So in the context of Falcon, for example, if you have 100 drives, each of them is 20 terabytes.
00:12:29.234 - 00:13:08.618, Speaker B: You can commit a particular amount of storage. Then you would borrow that from a lending protocol, and you would then ask the providers, take that inside the protocol. So you as a provider are staking. So for us, it was very important that we do staking and not lending because we wanted to manage the risk. So what we do is we take that liquidity from the token holders and we directly stake that inside the protocol. The way we do it is by just abstracting away the storage and compute workloads needed for locking liquidity. In our protocol, for example, in the context of filecoin, you have the onboarding, which is also called ceiling, and then you have the storage.
00:13:08.618 - 00:14:02.872, Speaker B: We had to decouple those, build a bunch of primitives that basically allow us to coordinate, compute and storage jobs interdependently. And then we log that liquidity by allowing providers to just do the storage. So for us was really important to get to the bottom of the stack, which is basically locking the liquidity inside the protocol. Now, because we are doing that, it's much easier for us to make it liquid staking, because now since we control the liquidity inside the native protocol, we are also able to control how we unlock or log that liquidity. So for example, we could commit for storage deals that are only six months or twelve months or 24 months. So we are able to actually have guarantees that we will definitely be able to exit that position, which is not the case with the lending protocols. Because what lending protocols do is they allow you to borrow money for a particular term.
00:14:02.872 - 00:14:55.006, Speaker B: So for example, two years, three years, or indefinitely. And as long as you paying the interest rate, there is no unlock. You as a borrower just borrowed that based on some terms. And usually there is no commitment in terms of timeline you just borrowed. So if someone wants to unstake their position, then you have a problem here because everyone is paying their interest rate, but someone wants to unstake from that pool, which is where the initial liquidity came from. And now you can't actually pay back your lenders because no one is defaulting on their loans, the loans are being paid. So the only way for you to actually get out of that position is by either increasing the interest rate and kind of making higher pressure on the providers that have borrowed the liquidity, or is just by waiting or hoping that someone else is going to stake in that particular moment.
00:14:55.006 - 00:15:16.856, Speaker B: And then you are going to be able to swap the position of the lender that wants to exit the position with a new lender that wants to. Yeah, just give fresh liquidity to the board. But yeah, ultimately lending is one thing, you're delegating the option to stake inside the native protocol, and staking is really locking the liquidity inside the native protocol.
00:15:16.960 - 00:15:44.580, Speaker A: So listen, it's totally. I get the staking, I think is the simplest way to understand that either I am a provider, I buy coins, I stake them that they're locked up for a year, two years, whatever they are. The next is, if I want to, is for someone else to basically say, okay, I will stake you to do the. Do the storage for me and I'll send, I'll lock the coins in your contract. Right. So they're locked for you. I will some.
00:15:44.580 - 00:16:14.476, Speaker A: Exactly. And then I guess the thing I didn't really, I think it needs a little bit more detail on is the liquid staking because the stake is still locked. But is that liquidity managed by you because of the amount of stake you have locked. So you're managing different people's liquidity. So you're sort of taking the liquidity lock kind of risk, if you will. You're aggregating both sides of that. So some is coming unlocked, and that's liquid for anybody that wants it.
00:16:14.476 - 00:16:17.604, Speaker A: It sort of pools on both sides, more or less. Right?
00:16:17.724 - 00:16:44.696, Speaker B: Yeah. So there are like multiple buffers. The first buffer is by creating a market that has enough volume so that you are able to basically swap the positions, which is basically, if I want to unstake someone else wants to stake at the same time. And that depends on the volume that you have. That's the first buffer. Then you have some buffer inside the pool. So you have capital inefficiency, which is basically just keeping liquidity there in the case of someone wanting to exit.
00:16:44.696 - 00:17:33.448, Speaker B: And usually what folks do is they provide like 10% off that liquidity as a buffer. And then the third one is unlocking that liquidity from the protocol. And only if you are a staking protocol, not the lending protocol, you can do that because if you are a staking protocol, you are on that layer that logs the liquidity inside of the native protocol. If you are a lending protocol, you are delegating that option to someone else to stake that into native protocol. The only issue you have with that particular borrower is through the interest rate and the position that they have as a loan from you as a lending pool. So in that case, it's a bit harder for these protocols to actually unstake tokens because they can't. What they can do is create some pressure by increasing the interest rates.
00:17:33.448 - 00:17:44.928, Speaker B: But that's also not instantaneous. Right. So if I hike the interest rates to 30%, like, it's going to take some time before folks actually on stake. Yeah, it's a bit.
00:17:44.976 - 00:18:09.030, Speaker A: And I grasp that. Help me understand, for a liquid staking product is that say, just make the math easy. If Filecoin lockup is two years, do you say you could have liquid stake with web3 mine, and you could get half your capital back in 30 days or 60 days. It like some tiered or is it completely liquid, or are there different products? Based on the amount of rate you give, how do you tier that out?
00:18:09.142 - 00:18:54.564, Speaker B: It's completely liquid in our context, of course, if you want to take, like, usually we don't have big positions where. Big positions in the sense that we don't have a whale that has 50% of the total liquidity in our pool. So for us, events where someone would take almost everything that you have committed in capacity is very low. But even if we had such events, since we are controlling how the liquidity gets locked in the native protocol, we would be able to terminate storage, terminate deals inside the Falcon protocol, and just pay back whoever has staked, which is not huge.
00:18:56.384 - 00:19:28.154, Speaker A: If I just look at this as a naive, as just a third party, whether I'm an individual or a manager who happens to own filecoin, whatever other protocols you will do this for, that is a massive value to me. To be able to stake, earn a yield, but not be locked up for two years, that is hugely valuable. And so then you obviously then your protocol would take some fee as a result of that. Right? So how would that. That's a valuable service. How do you think about charging for that service?
00:19:28.854 - 00:19:46.734, Speaker B: Yeah, so what we do is we are basically following the good practices from the term ecosystem where like we are doing staking like lido, just capturing a percentage of the total rewards that get emitted to our providers. So that's 10% similar to how Lido does it.
00:19:46.854 - 00:20:31.276, Speaker A: Yes. So the way to think about that is if you can either lock up for two years or you pay 10% and have liquidity on a daily basis. And that seems like a pretty fair trade to me. And I see the complexity in the real value because not everyone can do. You're doing something that no one can do unless they have the volume you have. And the more users you have, the more volume you have, the more confidence you have to deliver that liquidity, which means the harder it is for someone else to compete to do it. So this seems like it's one of those network effect kind of concepts where once you get to a certain scale, you're the default option for this because it's also the safest.
00:20:31.276 - 00:20:34.628, Speaker A: Right. Because you also have the most capital, the most liquidity locked.
00:20:34.796 - 00:21:53.448, Speaker B: Yeah, and it's not just about the liquidity, it's also on how this liquidity gets deployed inside the native protocols. So if you think about what problem are we really solving more on a physical level, we are thinking about all the compute jobs and storage jobs that exist on the planet and we are thinking about how to deploy them in servers that can be seen anywhere on the planet. Thinking about this problem of the provisioning of these jobs on physical machines is basically just creating a big coordination machine that aggregates every job that is running on the centralized compute networks on the planet and is allowing these providers to just efficiently execute them. And these providers would commit to execute these jobs every time that they want to execute a job, and with that they would also participate in our economy. Now this is super important, because since we are the ones helping providers to participate in the network, we are also building a bunch of tooling that these providers can use for free. So if you were doing provisioning of storage on file coin, you'd probably use 70% more resources than what you would do with our tech. And all of these savings are passed back to the stakers.
00:21:53.448 - 00:22:55.704, Speaker B: So by building tech, we are able to increase the yield of our protocol on the economical layer, just by allowing them to be smarter on how they execute the jobs, and being smarter on how they execute a job is a big deal. So if you're doing compute and storage, you have many inefficiencies just by moving data around and just by trying to coordinate that locally on your data center. Well, if you only do storage, you have economies of scale. You just do storage and you focus on storage. The math is clear for storage, and that's the only thing you do. You don't think about GPU's, you don't think about special cpu's that are able to do like XYZ, you don't think about ND mes, you don't think about networking, you don't think about a bunch of things that providers, for example, in the Falcon ecosystem, have to think every day. And every variable that the provider thinks about is inefficiency on the protocol, which ends up being inefficiency that needs to be captured by someone, and that someone usually is the staker.
00:22:55.704 - 00:23:05.464, Speaker B: What we try to do is just build a bunch of tech that makes it super simple for the providers to be participating in these networks and just focus on pure unit economic cost.
00:23:05.964 - 00:23:53.230, Speaker A: And that's how it yields it sounds compelling. The downside, I guess, is to the extent you are successful, you could become a point of centralization in the deep end network. If the general default is gee, I'm happy to pay 10% to not be locked up for two years, which is not a crazy scenario. Web three mind could become the dominant staking mechanism and dominant staker right across whatever projects you're doing. And now all of a sudden, that is a big concentration point, right?
00:23:53.422 - 00:24:55.496, Speaker B: Yeah, that's a fair point, but it's not the same as Ethereum in the context of deep in, because in Ethereum, locking 1 billion of liquidity is not hard. You open up a bunch of vms and it could basically be one company doing that. It could be like Coinbase doing that. In fact, Coinbase is doing that for a lot of liquidity on Ethereum, but in the context of deep in, you are not the one using that liquidity and deploying that inside the protocols, because the sheer amount of hardware needed to do that is not enough for any single company. And then you would need to have many providers very different than the open network on how these providers actually participate in, rather than have just one big data center locking the liquidity. So if you want to lock all these liquidities, you would need to have hundreds of data centers participating together in these networks. And as long as the protocols are open, as long as everyone can participate openly, you're not centralizing the thing.
00:24:55.640 - 00:25:30.318, Speaker A: And the infrastructure is still decentralized, but the stake could be centralized. That's my point. It makes the deep end network, it's still decentralized, no doubt, but the economic piece of it could still, anyway, it could be centralized. But listen, as far as you're concerned, that's a good problem to have at some point where we got a ways to go before that's the case. Help us understand scale. Like where are you guys, what protocols are you working with? What's on the roadmap? What scale do you see both in the near term and where do you think things go in the long term?
00:25:30.486 - 00:25:46.674, Speaker B: Yeah, so we have, of course, like one of the main networks is Falcon. I'm not sure where we can share it publicly, but there is another network that a guy called Tom Crawbridge is running.
00:25:46.794 - 00:25:53.882, Speaker A: Yes. Fluence labs coming up, staking, you heard it here first or third, but yes, exactly. Excellent.
00:25:54.058 - 00:26:39.714, Speaker B: And then we have the render network coming, we have the library network coming and a few others. But ultimately for us it's always thinking about how are these networks able to communicate between each other? And is there more value in having something like fluence interconnect with Filecoin or some other network? And we are thinking always about how do we get to the point where we create really this decentralized compute platform where you have multiple networks being able to communicate between each other, and we are trying to be that glue by actually coordinating these jobs to happen on the same local network and allowing them to pass data around and in that way expand like all the possibilities that are able with decentralized control.
00:26:40.494 - 00:26:57.472, Speaker A: Well, in terms of scale, how do you think about scale? Obviously, one is number of networks that you are enabled on. The other is value of collateral locked. What are some metrics that you think about with regard to the ladder?
00:26:57.638 - 00:27:19.412, Speaker B: Yeah. So we have thousands of providers right now, like we are looking at tens of thousands soon. And on average, when we onboard the provider, like usually we see the scale around ten petabytes and higher. So like those are kind of the numbers that we're talking about.
00:27:19.588 - 00:27:48.984, Speaker A: But in terms of help, help the audience who's not as familiar with filecoin and storage in terms of dollar value of lock, because I think that's really what you're the metric that's kind of common that you can't, you know, you got petabytes of storage there, you've got GPU's with live peers, CPU's with fluent. Right. The common across all those is dollar of tokens locked to facilitate that. So how do you think about that as a value to go? Just to put numbers in people's heads here?
00:27:49.744 - 00:28:16.604, Speaker B: If you think about the liquidity required to onboard 100 petabytes of storage, that's around four to 5 million. Falcon. Falcon is around $10 now. So like we are talking about 50 million Tvl just for 100 petabyte. Infrastructure for fluent. It's too early to say, like the economy is new for the other networks. It's less aggressive than Falcon.
00:28:16.604 - 00:28:24.744, Speaker B: So like the liquidity is not as high, but yeah, like we are talking about like millions of dollars of TVL.
00:28:25.164 - 00:28:31.100, Speaker A: And you can see this easily going to tens of millions of TVL and hundreds of millions as these networks scale.
00:28:31.252 - 00:28:31.988, Speaker B: Yeah, yeah.
00:28:32.076 - 00:28:33.468, Speaker A: Ultimately exciting.
00:28:33.596 - 00:29:28.384, Speaker B: The liquidity is going to be the thing that allows you to participate in these economies. So if you don't have the liquidity, you can be part of alcohol, you can't be part of Jansync, you can be part of fluence. You need that liquidity in order to be able to participate in these economies. Which basically goes to say, if you want to be part of the infrastructure of these open networks, you need to have abilities of locking the liquidity. And what we actually try to do on a very fundamental level is to allow any provider to participate in these networks as long as they can be efficient. Being efficient is very important for the entire sector because all the inefficiencies that providers have in web3 at the end of the day are going to be absorbed by the stakers. And our objective is to keep everyone on the cutting edge of what's possible in terms of hardware and providing the resources so that the yield can be the highest possible.
00:29:29.364 - 00:29:37.092, Speaker A: And what type of yields do you think people are either getting now or do you think are sort of sustainable in these infrastructures?
00:29:37.268 - 00:30:09.114, Speaker B: Yeah. So the yield always depends on the mission of the tokens in these economies. So, for example, so the falcon yield for us is around 20%, but inflation on falcon. 20%, yeah, Falcon on Falcon. But inflation is around 25%. So, like, we're basically passing, like, almost everything back to the stickers because our providers are so lean and so efficient, because they just do storage. And the same way it's going to be for the other networks, it really depends on how much inflation there is.
00:30:09.114 - 00:30:41.794, Speaker B: And some networks require less inflation, some networks require more inflation. And that's also something that we are thinking more about in terms of how do we create something that allows new networks to know what kind of inflation they need to have in order to be participating on these providers? So not only supporting the networks that are out there, but also helping new teams that have never built a network before to bootstrap a sub network on top of the infrastructure that we have built.
00:30:42.254 - 00:30:56.634, Speaker A: Super interesting web3 mine. Is it traditional business? Is it have a token coming or token model at some point? How do you think about your model in regards to everything, all the networks that you support?
00:30:56.934 - 00:31:38.284, Speaker B: Yeah, of course. We are an economy. Fundamentally, we think economies are a much better way of coordinating capital. The way that our token works is that since we are capturing 10% of the rewards on all of these networks, our token is acting as an index token of the decentralized deep end networks. Basically, if you are not sure what kind of network is going to be the hottest, you would just buy our token instead of trying to figure out each of these networks and what is the best network to have. On the other hand, we commit to never dump the tokens that are locked in our treasury. So we would not be managing the treasury.
00:31:38.284 - 00:32:11.304, Speaker B: So this would basically be the perfect index token that exists because we would be just capturing the reward from each of these networks. These teams would not have any sell pressure because this liquidity gets locked inside of our index token. And the only thing we care is just generating more of these tokens, because we just want to increase the position that we have in these economies and we just keep growing that. And the way we grow that is by optimizing how these jobs are executed on the hardware layer and just being more efficient and more meticulous on the tech side.
00:32:11.844 - 00:32:49.684, Speaker A: Super interesting. So, yeah, it becomes an index of this weighted index of the projects that deepen projects that you're integrated with, times the scale of each of those projects. So it's almost like a market cap weighted effectively of the deep in networks that you're involved with, which is super interesting. Well, let's back up I'd like to do these things in reverse and get really deep really fast and then back up and actually get into the person. So can you give a little bit of your background and how you got involved and your journey to this entrepreneurial endeavor?
00:32:49.844 - 00:33:11.834, Speaker B: So I've been doing a bunch of mining back in 2012 13. I was doing litecoin back in the days. Like I was buying a bunch of GPU's and coordinating them. Then I got back into web two. I did two serves in web two and then got back in web3 in 2017. I started tenderly. Some people that develop smart contracts probably know about it.
00:33:11.834 - 00:33:45.762, Speaker B: Been doing that for two years. Then I joined Cardano. I led smart contracts for a year. Then I joined pro collabs, where I did a bunch of stuff around decentralized computing and thinking about validators like the economies associated with it, a bunch of defi integrations with the Ethereum side. And then we spinned out from Google Labs. We were one of the first big spin outs. And since then we were basically building a compute layer that aggregates a bunch of compute jobs from multiple networks and builds liquid staking on top.
00:33:45.938 - 00:34:06.930, Speaker A: So, I mean, the way I think of your background as web3 native out of the gates, right? You're like, pretty much from the beginning you were involved in the blockchain, crypto, web3 ecosystem, right? Pretty much out of the gate?
00:34:07.082 - 00:34:37.268, Speaker B: Yeah, yeah, kind of from 2013. It was super early back then. Like, the only sarp that actually got out from that period was coinmarketcap. Very few people remember it, but like, it was basically the website, the only website that was kind of useful back then. You had like mining pools and stuff like that. And then when I did web tool, I actually did something that is more web free, but was kind of called web tool, which is offline social networks based on Bluetooth. So we would basically just beacon around like low energy Bluetooth and we would figure out who is around you in a decentralized way.
00:34:37.268 - 00:35:18.862, Speaker B: So, like, you would not be online. Like, you would be just checking whether the Mac address of the Bluetooth device was actually there. The reason why we had to stop it is because Apple changed the way that they would broadcast Bluetooth because people started spying on each other. So you would have malls actually spying on people just to understand who actually got in the mall. So the Mac address was not static anymore, but dynamic. And I was kind of always trying to make web3 work even before web3 was a term. I think Webtree as a term got for back during 20, 1516 times when the web3 foundation, led by parity was a thing and then we started working on the standards.
00:35:18.862 - 00:35:26.806, Speaker B: I think labs also contributed a bit back in those days, but. Yeah, well listen, you were web3.
00:35:26.830 - 00:36:00.304, Speaker A: Before is web3, but that's only. You were also deep in before. It was deep in because you were Pl before deepen existed as a name. Right. And file, pl is the company behind Filecoin, obviously, and that is the, you know, the, the found one, I guess the foundational project in this space in terms of timing and scale. Any experiences in you can draw on from your past that makes it that you're particularly relevant to your job now. Anything you find yourself using a lot or not using.
00:36:00.464 - 00:36:43.934, Speaker B: Yeah, I think just being super like pragmatic, not getting like hyped too much. Like ultimately everything that is suspicious, it probably has a reason. Like just focus on fundamentals, focus on economies, focus on things that make sense long term and then play the game. Like you really need to understand, like how you're making decisions. Don't get super hyped on the market because of course the markets are super aggressive, but if something is hot, it's probably too late. Just focus on the next thing. Probably even now there is the next thing that is coming, but everyone is focused on the most loud thing out there.
00:36:43.934 - 00:37:18.152, Speaker B: And because of that noise, it's really hard to focus on these new things that are coming along. And ultimately the difference is going to be made by the teams that have focused on dipping or like anything else. Two years ago, one year ago, but not now. Now it's too late. There is too much noise and you need to fight to assemble a team in a very noisy environment that doesn't go well. And usually whoever you get hard is there because of the hype. So as soon as the hype is over, the team is kind of broken and then you'll not really do much.
00:37:18.152 - 00:37:40.702, Speaker B: So just think about what's the next thing based on your understanding of the world and some fundamentals that you can really perceive yourself and then just double down on that. But the fundamentals need to be right and you, and it's hard to make decisions in a particular moment that are just not backed by like everyone else.
00:37:40.878 - 00:38:04.240, Speaker A: Right. Listen, I mean, that, the way I think about that is you sort of find something you believe in and you have conviction in and you stick with it. And the market, you have to have faith that the market will come to you. And that's what's happened with fluence, obviously. At least, you know, we think so because we were in it before Deepin was a thing, right? Deepin didn't exist. I talked to Doug from Livepeer. They've been building that for seven years.
00:38:04.240 - 00:38:48.010, Speaker A: And now with the GPU boom and video rendering skyrocketing, they think they're poised for something interesting, really interesting, and I hope they are, but they've stuck with this through a long, long period. So you obviously done the same thing being with PL and then starting this before even deepens started any, any. And I guess you sort of hit that a little bit. But anything that, you know, hasn't gone as expected with regard to, you know, web3, mine or anything else, I would think mistakes are. Mistakes are. Everyone likes to talk about stuff that's gone right. Obviously, that's the easy and fun thing, but we always learn from the hard stuff and things we.
00:38:48.010 - 00:38:51.796, Speaker A: Mistakes you made, any mistakes you can think of or things you got wrong?
00:38:51.940 - 00:40:01.892, Speaker B: Yeah, I mean, mainly, like, whenever we made mistakes is when we kind of spread ourselves too much on things that are not, like, super critical. So I would advise everyone to just focus on really understanding what the core value that you as a team is providing and just prioritize based on that and just forget everything else. Like, saying no is super important, especially in a market like crypto or deep in that is growing super fast and the noise is super high. So you would be distracted all the time. If you are thinking about the new hot thing, just focus on fundamentals, focus on the core value that you can bring, and ultimately think about the space as a very collaborative space. So if you can enable someone else to do something instead of you doing that, something that's much higher value and much better incentives for everyone, and that would probably help you long term. But focus on the core value as a team and really define, like, what the lines are on what you want to do or what you would rather have someone else do, and then create the incentives accordingly and, like, enable other teams to do it.
00:40:01.892 - 00:40:52.476, Speaker B: There are, like, many smart people on this planet, and usually they don't have a good enough of understanding as you can have if you were, like, long enough in the space. So just enabling them is super powerful. Something that we did really well in the beginning is we did not want to hire people from crypto, but rather we hired really good engineers that had a good understanding of distributed systems, and we gave them the problem. So we got a very fresh approach. So, like, all the engineering, like, math that you'll see in the ethereum space, none of that is relevant for someone to actually build. If they are trying to build something new, but rather you just want to focus on distributed systems and really building good tech. And I think that was one of the best decisions that we made.
00:40:52.476 - 00:41:26.474, Speaker B: Just get fresh minds that are really good and that want to build something new. And that also helps you align people on the value. So it's not all, we are building this new thing, which is super hot. No, we are solving this problem because these guys that came from counter ecosystems don't even know it's hot. They just want to solve. And if you don't understand the problem, it's going to be super hard for people to be motivated intrinsically and it's also going to be super hard to keep the team around for the long term.
00:41:27.294 - 00:41:48.524, Speaker A: Listen, I agree with that fully, which is figure the problem and then the solution to it. The technology is a tool and a lot of people in this blockchain space start with the technology and then figure out how to deploy and implement that technology in somewhere as opposed to starting with a particular problem. So I grasp, I see that over and over again, as I'm sure you do.
00:41:48.684 - 00:42:10.854, Speaker B: Yeah, absolutely. And ultimately it ends up, I mean, ultimately the most important thing is thinking about technology as basically solving a problem. But the technology could be anything, so anything can be built. So if you talk to good engineers, they will always tell you anything can be built. Just give me the problem. Really. Reasoning from that perspective is essential.
00:42:10.854 - 00:42:30.594, Speaker B: It's not, oh, I want to build something in this ecosystem or this other, and then I have constraints. No, you can build anything. Let's solve the problem first. Then you can decide which part of the ecosystems you want to be part of based on some other criteria. But focusing on the problem and solving that problem with the right tools is the most important one.
00:42:31.254 - 00:42:44.406, Speaker A: Great. Tell me, in terms of solving problems, then, what other projects protocols, what else out there in deep end do you find? Are you interested in what projects do you find interesting? What problems are getting solved?
00:42:44.550 - 00:43:51.714, Speaker B: Yeah, we are super excited about the work that Jensen is doing. We spoke with the team a few times and they're very fundamental, value based. So it's like they would really think about the entire stack of the problem and really think about all the pieces and how to tackle them. So we are super long on whatever they are doing. And I would say all the teams that are just focused on the formal primitives, how do we have machine learning workloads that can be deterministic? Because of course you have a bunch of optimizations that happen on the GPU side. So it's hard to make training that is deterministic. And how do we think about spreading the data around a network and allowing a much bigger network of computer providers to be training network rather than, oh, how do we just pass like the training of one small network to one provider? Let's think about these networks as big networks of resources and then think about how to spread across all the different jobs that need to be executed.
00:43:51.714 - 00:44:05.774, Speaker B: And other than that, I think there is a bunch of stuff happening on optimization of the jobs that you want to execute on the provider. That is going to be super important.
00:44:07.234 - 00:44:36.820, Speaker A: Just to back up for people. Jensen is a protocol for aggregating GPU's to train AI models. Vuk was talking about the aggregation of those jobs to solve and to be employed on single model training. Right? Yeah, terrific. You know, love, love that team also. Great. Well, you know another, you can't, can't get out of a conversation on crypto without a prediction.
00:44:36.820 - 00:44:46.052, Speaker A: So, you know, December 31 of 2024, where do you, where do you see? Let's pick bitcoin. Where do you see bitcoin end of.
00:44:46.068 - 00:44:49.624, Speaker B: This year in terms of price or.
00:44:50.924 - 00:44:54.700, Speaker A: Yeah, I mean, we got, we got to throw in. We got it. We got to put a stake down somewhere.
00:44:54.812 - 00:44:57.588, Speaker B: Yeah, I think it's too high. Like even this.
00:44:57.636 - 00:44:58.236, Speaker A: Too high?
00:44:58.340 - 00:45:37.628, Speaker B: Yeah, too high. Because what happens with these cycles is that a lot of noise get generated. Like, I see it kind of like every bull market is kind of cabal and like you just speed up everything and then like, you let things happen. Like the deployment of capital happens and everything disappears and you actually let teams build stuff. I really enjoy more, like the very slow times where I can actually build stuff. Then like this excitement that kind of gets everyone super fast and very think about the values of things.
00:45:37.796 - 00:45:52.624, Speaker A: This is coming from a guy who clearly doesn't have problem raising capital because that is not the average response. I'll tell you. I don't think we've even begun the bull run. I think we're going to 200k in bitcoin by the end of the year. So that's my. I'll put it out there. We'll see.
00:45:53.734 - 00:46:00.874, Speaker B: I also think we are along those lines even higher and that's just too high. That speeds up my life by 20 x.
00:46:02.734 - 00:46:29.186, Speaker A: You want a quiet bear market? Get me back to the quiet bear, please. Yeah, fair enough. Well, listen, thanks so much for joining Vuc and, you know, it's great to see you and we'll be in touch. You only got one question wrong, which was the projects you're most excited about. The right answer there is fluence. So we'll give you another chance in a couple of weeks to readdress that one, all right? Yeah, sure. Awesome.
00:46:29.186 - 00:46:30.754, Speaker A: Thanks, fuk. I'll talk to you. Bye.
