00:00:00.240 - 00:00:57.148, Speaker A: Foreign My name is Vadim, I'm one of the core developers of Robonomics Network project and today's topic is Vertical Solutions and Robo Dynamics. I will split my talk into three sections. First we will speak about theoretical stuff about what Robonomics is, what functions it has, how we can utilize it. Then I will show you a few of the hardware that we design and produce by our team. And then I will speak a bit about the real ongoing use case that we implement on Cyprus and our plans in the future. So let's get started. First, what the Robonomics The Robonomics is a decentralized platform to manage your IoT devices and robots.
00:00:57.148 - 00:01:42.364, Speaker A: We started to work on Ethereum network back to 2017. Then after seeing or facing a few limitations of Ethereum Network, we came up to the conclusion that we need to look at the other options at the other ecosystems and that in 2020 we released our say a polkadot version of Robonomics. So now we have two versions of RoboNomics. Most of the talk will be dedicated to the polkadot version that comes with IoT services and stuff. We are fully open source project. As you can see, there are many contributors. The repositories are quite active.
00:01:42.364 - 00:02:34.436, Speaker A: The first two repositories, RoboNomics itself and Robonomics app, is Robonomics core functionality. It's a collateral, it's a node that runs the Robonomics. The second one is dipp. It's an application to interact with Robonomics functions. The rest of the links are dedicated to the most mature project built on top of Robonomics. But before we go to the projects and the use cases, I would like to answer one question. Why the hell do we need to control IoT and robots in a blockchain in a web3 way? I'm pretty sure everybody is aware that there is a high demand of connecting all of the smart devices, all of the IoT devices to the Internet to send data, to send command backs, to get the analytics, et cetera.
00:02:34.436 - 00:03:20.250, Speaker A: And there are great corporate like AWS previously mentioned or Azure from Microsoft. They already provide you functions to connect all the devices, to send telemetry, to see all the measurements and to see what type of commands we can send back. Obviously there are some concerns about using this corporate solutions. One of them is you're really tied up to using the service. If they decide to change the policy, you need to obey. If they decide to change anything, you just obey. It's really easy to start implementing such solutions on top of those cloud providers.
00:03:20.250 - 00:04:23.390, Speaker A: But then after a while you would like to grow more, you need to pay more. So using Web3 technologies at least, at the very least is much, much cheaper than using those cloud providers. The other reason that should be the first one is the privacy, the security. And when you deal with AWS or any other cloud providers, they create a key for you, not you create a key for yourself. And for me personally, it's always fun to connect such things and play around with the web3 and stuff. So in Robonomics we came up with the approach of using blockchain almost in the same way as you would use the cloud providers. We have a subscription based model in terms of technical, it's like you purchase a token, you activate it and you have some amount of, let's say GAS or computational power for a month and you can utilize Robonomics function without even paying a single fee.
00:04:23.390 - 00:05:01.408, Speaker A: What functions? One of them is obviously to send data to the blockchain. If you need to send a lot of data to the blockchain, please use IPFS and just store the IPFS hash in the blockchain. But anyway, there are like 500 bytes you can store as the raw data in the robonomics. Then we have a launch command. Launch is dedicated to create a special event in the blockchain. And when the device is connected, connected to the blockchain and listens to the events, it will see the event, it will see the parameters, it will see the command and we'll try to execute it. At least we have a special model for creating the digital twin, a digital shadow.
00:05:01.408 - 00:05:42.300, Speaker A: You can replicate your system in the digital way. Now, since we're in a depin day, I would like to briefly discuss the most straightforward and the most obvious way of building DPIN project. But still, there are some notes I would like to discuss. First layer of this DPIN PI is a physical part. It's just a regular device. And on this layer we just think of what actual functions it would provide, what it will do. And here we will think of just okay, it will connect over WI FI or over DB or any other physical protocol that we can think of.
00:05:42.300 - 00:06:18.780, Speaker A: Then there should be a connectivity layer. This level must consist of a few nodes at least. It's not meant to be just one single server that collects all the data from any device and sends it to the blockchain. There is no reason to have a blockchain after a single server because you have a bottleneck. It's not a deep in project, it's just a project. Just forget about Blockchain and use the project itself. In the Deepin project it should be a few nodes that not necessarily speak to each other, but at least they need to provide this kind of decentralization.
00:06:18.780 - 00:07:01.404, Speaker A: The Last layer is Web3 Cloud. It's just a regular decentralized network as the Robonomics is. So now let's have a look at the real use cases and one of them is it actually shows the potential of the pin. We call it Altruist. It's an air quality control sensor which measures a few parameters like the amount of particles in the air, the temperature, the humidity. But the most interesting part is this sensor connects to one of the connectivity servers. Not just one server, but one of them.
00:07:01.404 - 00:08:11.446, Speaker A: And sometimes from time to time, like every hour, every two hours, the servers, they just close the connections with all of the sensors and those sensors need to find a way to connect to its server again. It's needed to like reorganize sensors from time to time. Obviously after connectivity server, all the data goes to the blockchain and goes in the peer peer way to be display it on your map or in your application. The second device that we design and produce we started to investigate with the RISC V that is pretty simple. Since all of the stack is open source, then why don't we use ARM based CPUs or intel based CPUs. RISC V is an open source architecture of CPU. So we decided that next year we will create a home server that will be fully open source from the bottom, from the hardware part up until the network itself and the Hikikomo area.
00:08:11.446 - 00:08:53.436, Speaker A: It's a new project, it's basically Tamagotchi. But instead of interacting with the Tamagotchi itself, you connect it to to the smart home system of yours. And you interact with your smart home system. You push buttons, you call automations or scripts. And this Tamagotchi gets hyper when it sees such interactions in the smart home. So the general idea of those devices is we all love to use smart devices. But every single time you purchase a device it asks you to install a specific application and to connect it to your wi fi to provide you email address.
00:08:53.436 - 00:09:40.484, Speaker A: And these devices, they send immediately all of the data somewhere. We don't like it, we like using Smart Hoover, we like using a smart air refresher or whatever, or a camera. But we don't like that our data is streams away without our knowledge. So for the next year our team has decided that we will produce a few devices for the end users that will be cloudless. They will not be connected to any central server until you wish to. And to conclude my presentation, I would like to speak a few words about a real use case that is happening right now on Cypress. And let me introduce myself again.
00:09:40.484 - 00:10:26.440, Speaker A: I'm Vadim and I'm co founder of Pinout limited company which is based on Cypress and it provides a smart home solutions without any cloud providers. So basically what we do, we use wireless devices, we use a home server which is basically a Raspberry PI or a computer that you have. We install Home Assistant. It's a great open source application. It's great open source software that allows you to interact and manage all of your smart devices. Whether they connect it over WI Fi or Zigbee or whatever protocol you use. You can create automations, you can create schedules and you can operate with all of the devices with this home assistant help.
00:10:26.440 - 00:11:08.458, Speaker A: And all the data stays in your apartment, in your house. What we did is we created Robonomics integration that allows you to interact with your smart home in a web3 way. You can open a dashboard at the app of the smart home solution and interact with your smart home solution Smart home via sending peer to peer messages or like creating a list of users that have an access to your home. I think I was kind of fast. So that's basically it. I have. I have time for a few questions.
00:11:08.458 - 00:11:09.430, Speaker A: Thank you.
00:11:13.090 - 00:11:25.590, Speaker B: Great, thank you. Questions for Vadim. Any questions? All right, that means everyone understands it completely is up. We got a question. Go.
00:11:28.540 - 00:11:39.080, Speaker C: Great presentation. So for like I want to know about your RISC architecture a little bit more deeply.
00:11:39.660 - 00:12:25.380, Speaker A: All right. So we started to investigate on RISC V this year and what we did, we purchased one of the most popular single board computer on RISC V and we installed all the necessary software from Operating System then Home Assistant Robonomics integration on it. And it was quite challenging to be honest. So RISC V is not fully supported yet by a lot of software. So we had to compile a bunch of stuff ourselves on the board. Basically our plan is to create a computer, basically a server this small one with the pre image of every software you would need so you would not suffer during the installation process.
00:12:26.230 - 00:12:37.690, Speaker C: That's great. So like you showed your GitHub profile. So on that I'd want to know like for. Okay, I'll ask you more about that later.
00:12:37.990 - 00:12:38.510, Speaker A: No problem.
00:12:38.550 - 00:12:46.410, Speaker B: Okay, thank you. Do we have any other questions? Oh yes, another one.
00:12:50.470 - 00:12:57.660, Speaker C: Hi, can you do video distribution from the home in a kind of peer to peer fashion?
00:12:58.400 - 00:13:18.376, Speaker A: Not in a live streaming way but we can open a channel so you can get access directly to your camera from your home server, for example. Or we have a special dedicated service that can track movements. For example, it takes like a 10 second video and store it in a blockchain so you can retrieve it later at your convenience.
00:13:18.568 - 00:13:21.860, Speaker B: I think that is it will listen. Round of applause. Thank you very much.
