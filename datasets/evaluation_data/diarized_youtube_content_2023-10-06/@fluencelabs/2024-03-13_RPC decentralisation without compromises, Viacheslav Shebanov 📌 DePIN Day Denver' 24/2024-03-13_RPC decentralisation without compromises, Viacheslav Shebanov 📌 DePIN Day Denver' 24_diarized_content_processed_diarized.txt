00:00:09.080 - 00:00:41.368, Speaker A: My name is slava. I'm cdo@drpc.org. And I'll talk a little bit about like RPC decentralization without compromises. And probably this talk like the topic is a little bit misleading on purpose. So yeah, as I said, I'm CTO at DrPC and we're building universal access to collaborative network of data providers. Doesn't really matter what that means right now because my topic is about RPC decentralization in a whole. So we're quite, you know, in crypto, we like decentralized stuff.
00:00:41.368 - 00:01:34.514, Speaker A: Like we're trying to build everything decentralized. And when we're facing a choice to build something decentralized or centralized, probably we build this. We will prefer decentralized because like it's part of our ethos. However, because of that, a lot of the time decentralization became an excuse basically for bad ux, bad DX, weird interface, bad performance and all the stuff. So we like, it's not because we're bad, because early there was a lot of developers and tech savvy people who were in crypto and they kind of work okay with that because we were pushing, and we're still pushing the bleeding edge of technology. However, a lot of clients don't want to hear about that, and a lot of users don't want to hear about that right now. They actually don't want it to be decentralized.
00:01:34.514 - 00:02:28.744, Speaker A: They want to have a good quality. And when we're talking about RPC, RPC the market, when basically it's b, two b, you have a business that pays you for providing data on chain for RPC and they are quite, you know, don't want to hear about your fancy decentralization stuff. They want it to work. So what really they want, they want three things. They want high speed, high resilience, and they want low cost. And they will, you know, if you're, if you're a thing that you decentralized, and then they will talk about, we'll talk with centralized provider who offers them better latency or lower cost, they will probably go with it. So let's start a little bit with what is every RPC architecture.
00:02:28.744 - 00:03:30.614, Speaker A: For those who don't know, RPC is basically the protocol that allows us to get some data from the blockchain and every RPC provider that decentralized or centralized, no matter, will have something like that. So basically there are three components of that. It's so basically blockchain infrastructure, so nodes and also load balancer. Because even if you're a centralized provider and you're running your own nodes, you need some kind of load distribution. So you will have load balancer maybe like it will be very simple, but still. And web UI were basically the place where developers will come to copy paste the RPC endpoint link. So if we're talking about centralized rpcs, well it looks kind of like that everything is controlled environment and our industry is on this centralized RPC needle for a good reason, because as I said previously, clients don't care about technology.
00:03:30.614 - 00:04:09.562, Speaker A: They pay you money for quality, they pay you money for resilience. And yeah, they don't want to pay a lot of money. So centralized RPC providers is the easiest way to reach that, fulfill this promise. Everything is controlled, you can set up your own nodes like how you want, you can set up settings, everything. It's just easier. And when you compete with those centralized providers, you can say, you know, yeah, I'm down 30% of the time, but I'm decentralized. Well we talk, when we're talking about decentralized rpcs, probably we'll look at something like that.
00:04:09.562 - 00:04:58.560, Speaker A: So there's still those components, there's, well the difference is that if we're talking about infrastructure, it's probably decentralized and permissionless, meaning that it's like some independent actors and anyone can join. But also there are some load balancers and web UI. And I will talk a little bit about it later because decentralized gateway is actually very hard, a very hard stuff. And yeah, we need to talk about it in detail. So when we zoom in this decentralized infrastructure, we will very, very soon. We understand that it's a very complicated task. If we're talking about popular decentralized providers like Pocket network, for example, they were mentioned a number of times already.
00:04:58.560 - 00:05:53.224, Speaker A: So they run their own blockchain, which is, it's hard in itself, but if you're running decentralized infrastructure, you probably don't have, you don't only need blockchain, you also need staking, because if anyone can join, they can be malicious, they can do weird stuff and you need a way to punish for them. You know, every provider should stake something, but, and if you have staking, you probably need a token, you know, because like what they will, what will they stake? And token is itself a problem. Tokenomics is quite hard. It's really not an easy task to get it right and moreover, proof of work done. You know, when you're, when you're decentralized, you have decentralized infrastructure. The provider should have some kind of mathematical meta to prove that they serve the requests. And it's also not a solved problem for now.
00:05:53.224 - 00:06:30.028, Speaker A: And the last one is quality checks, because if you don't have automatic or semi automatic quality checks and you have decentralized infrastructure, probably you will not punish anyone. And you're also running on trust. So this is hard. Yeah, and that's it, just the first part. What about gateways? Yeah, gateways is even harder. And actually there is now project that I know of in RPC, decentralized providers who have decentralized gateways or sufficiently decentralized, I don't know. So there is a solution to that.
00:06:30.028 - 00:07:02.136, Speaker A: Most of the projects take, it's like they use client libraries as gateways. Basically it's a very neat and elegant idea. Convert any of your client to a gateway, which is cool, you can't get more decentralized than that. However, there's problems to that. So first is maintenance costs. So clients don't want to integrate your client library, and even if they do, there's maintenance costs on their site. But also you need to, as a developer you must maintain library in rust, library in Python, library in JavaScript.
00:07:02.136 - 00:07:51.194, Speaker A: It's hard. It's also inefficient because good gateway or load balancer, it does a lot of stuff in the background. You can't just throw requests at providers, it will work bad, you will get a lot of errors and you will get poor latency. So you have to track some state of those providers, and if you do that on every client, it increases the load on the providers and on the client side. And most important thing is nobody wants it. Basically if you're talking to the client and say, so you need to install this library and you need to integrate into your code. And then they talk to centralized provider who says okay, you need to copy paste that link and insert it in your configuration, you know what client will choose? Not decentralization.
00:07:51.194 - 00:08:59.494, Speaker A: So yeah, sometimes it's just even impossible, because a lot of your clients, RPC clients, they are just running some software like they participate in some protocol and they can't. This protocol does not support your client as a game. So eventually you understand that centralized gateways are necessary for 99% of the clients. And it's not ideologically pure, it's not what you promised to build, but you submit to it because otherwise you don't have any clients and you're compromising on the centralization all the time. And eventually you have like this, the picture which basically looks like that, and it's most of the decentralized protocols out there. Well, however, yeah, now you're running centralized gateways in decentralized RPC node provider, which is kind of weird. But you know, you understand one more thing, decentralized gateways and decentralized infrastructure actually hard.
00:08:59.494 - 00:09:51.836, Speaker A: It's not the same like inferior or alchemy. They don't have to have this level of sophistication in gateways because everything is controlled environment. But data providers for this decentralized infrastructure, they build different, you know, they have different locations, they have different support, different blockchain, they have run in different blockchain clients and they also have different hardware and everything. All of that affects their latency, the requests they can or cannot perform. And moreover there is, for each blockchain client, there's a lot of settings, and the settings also affect this, like the gas cap, I don't know, like some return data limit. And if you're just, you know, as I said, throwing requests to, throwing the quest to them, it will, it will work pretty poorly. So this is hard.
00:09:51.836 - 00:10:39.914, Speaker A: Yeah, and this is hard. And this can be built as an afterthought. But remember, if you're building decentralized RPC provider, you already invested in all of this infrastructure and you have dedicated a lot of resources to building blockchains, staking and all that stuff. And you probably don't have time and resources to build this level of sophistication, load balancer. So you basically, yes, you're compromising on quality now. You're not only compromised on decentralization, you're compromised on quality. Okay, so is there a fix to that? Well, maybe not, but let's imagine we are building decentralized RPC provider from scratch right now.
00:10:39.914 - 00:11:29.534, Speaker A: We acknowledge a few things. First is, yeah, we have to have centralized gateway at least at the beginning, otherwise we just don't want how to do that anyway. Yeah, and we also understand that this piece of software in the right circle should dedicate a lot of resources to that. Otherwise you will not be able to compete with centralized RPC providers. So what you could do, you could throw away all these blockchains and staking and other stuff, and you can go with a permissioned product provider dataset. Basically it will be the same, but permissioned. So you still have decentralized infrastructure, but it's permissioned and you're free to invest more resources in this gateway.
00:11:29.534 - 00:12:11.694, Speaker A: So that's basically what DRPC did and keeps doing. We're trying to figure out how to compose quality and decentralization. So what could be design goals for the system like that. First, we should be on par with centralized providers. Otherwise the future of RPC decentralization looks quite bleak. The second important point is we should be able to connect anything, really anything, without really affecting consumers. So you may have providers that runs on, I don't know, raspberry PI or providers that run their own data centers.
00:12:11.694 - 00:13:18.434, Speaker A: You should be able to incorporate them into your network and the client consumers should not see the degradation. Of course you have to build something that doesn't have any problems with when individual providers goes down, everything is continue working. And one more important and not really obvious thing is that you have to build something that allows like temporary problems for each provider. You shouldn't punish them in long term if you, for example, if they have some small outage, because otherwise you will end up with very few providers that can maintain this level of quality and basically there will be no decentralization. Basically you will be running a network of ten providers. So we spent a lot of time building this DRPC load balancing system. I won't get into detail because it's a lot of time and I don't have this, but saying a few things.
00:13:18.434 - 00:14:01.054, Speaker A: This is a diagram for that. We're running two tier system, basically one of the load balancers set up on the provider side. It's open source, it's called dShackle, you can use it. We fork it from Emerald pay and we maintain it right now it supports like 56 blockchains or something. You can use it if you want, for your own purposes. And we have our proprietary system that is currently not open source, but it will be, I'm sure one day, which is basically so for dShackle, each provider connect their own nodes to it and it simplifies the communication between our gateway and the provider. Basically everything goes through this dshackle.
00:14:01.054 - 00:14:23.754, Speaker A: And the network structure is quite simpler. Right now the purpose of D Shackle is to select the specific node that will perform the request. The purpose of the centralized gateway is to select the provider that will do that. To simplify the algorithm. I'm on the booth so you can come and ask any questions in details. I will happily answer them. So basically we're now doing something like that.
00:14:23.754 - 00:15:22.674, Speaker A: Collect the real time statistic for each provider for many different dimensions. The statistic depends on the network methods and all this stuff. And we use our own built machine learning model that tries to predict the performance of each provider in each of these dimensions in the next few seconds. And based on this information we build a rating and we allocate requests based on that rating. So it allows us to build, like to basically distribute requests depending on your historical performance, also because of the dShackle. Dshackle gathers a lot of information of provider, like what kind of clients you're running, what settings do they have, what blockchain hate you're currently running, and send the information to our gateway. And it allows us to, 99% of the time, select the provider that will be able to perform the request.
00:15:22.674 - 00:16:08.124, Speaker A: So one year later, we have right now a working product. We onboarded a lot of top tier web three applications like Sushiswap curve, and they are with us not because we're decentralized, but because we have better on par quality with alchemy inferior and other providers. And yeah, I hope that we'll continue what we could do next. We don't think in terms like we should decentralize, by all means. Yeah. Remember, we have this thing that we need to be on par with centralized providers. So we need to first explore the things that we can do better than them in our setup.
00:16:08.124 - 00:16:50.264, Speaker A: One of them, of course, is open price market. So basically we can now every request costs fixed price. We can remove this and allow providers to set up their own price and have more efficient price discovery so they can compete not only on latency, for example, and errors, but also on price. And this is the thing, this is the thing that centralized RPC providers don't have. They can't do that. So we should exploit it. Well, in the end, I want to say that in future, we want future without compromises.
00:16:50.264 - 00:17:30.604, Speaker A: We won't be decentralized without compromises, and we have plans for that. However, I think it's relevant not for perceived, but for the whole crypto community. We can't sacrifice on quality anymore because otherwise the future is very centralized. Consumers won't care about your technology. They will care about this characteristic that I mentioned. And we need to figure out how we can build a future where it's fully decentralized, fully permissionless, with quality, better than RPC, with centralized solutions. So I invite you to do that and to think more about that.
00:17:30.604 - 00:17:39.144, Speaker A: If you want to check it out, go to drpc.org and that's it. Great. Listen, thanks very much. Let's have a round of applause for Slava, please.
