00:00:10.000 - 00:01:03.740, Speaker A: I think Avill is a specialized DA solution, but that is what we are, we are focusing on right now. There is so much more that we are building internally and we will, you know, largely talk about them in the coming months. But we wanted to create a foundational DLA around which we can create all these pieces. So that helps us with this, with creating a very good, unified experience for the users around it. Because as you were mentioning, like for example, there's a lot of problems with the current way, how things are progressing. For example, you were saying that there will be hundreds and thousands of millions of roll ups in that world. What does the user experience look like? So those are some of the crucial things where we want to improve.
00:01:03.740 - 00:01:38.294, Speaker A: And that's why we are working hard to not only make sure that there is a layer where data availability gets captured, but also how about how roll ups talk to each other? How does a user experience look like? What does it mean to do things like asynchronous message passing between rollups and how we can think of mostly things, intercommunication between roll ups as API calls and such. So those are the kind of things where we want to proceed.
00:01:38.382 - 00:02:07.068, Speaker B: Got it. When I look at DA, right, there are three big players that come to my mind. Awail, Celestia and Eigenveil. Celestia. Obviously, when the token launched, it stirred up a lot more conversations about Da. People started looking into it from a deeper perspective. What is the difference between Celestia, Eigen layer and avail? And as co founder of Avail, what would your message to builders be? Why should they choose avail over the others?
00:02:07.244 - 00:02:59.706, Speaker A: Yeah, I think the code details are different. So that's what. Of course there are other things, what people might talk about, but I like to focus on the core technical offering that we have. I think in Celestia it's about trade offs, right? So you take one trade off and you take another and you get another hit, right? So in Celestia they use a hash based scheme. What has been schemes do is that they are efficient and they are easy to implement. We take a more validity proof driven approach with KZG commitments and erasure coding within that. And what that means is if we don't have to rely on fraud proofs on the base layer, whereas for data availability on Celestia, you need to rely on fraud proofs on the base layer to secure DA.
00:02:59.706 - 00:03:57.096, Speaker A: Okay, now what does that mean to a developer? It probably means nothing. Why should they care about this? The answer is that if you have, if you are running a roll up and you have an execution proof, you wouldn't want to wait because you haven't got the DA fraud proof, or you are still waiting for the DA fraud proof. And that's why we need to think about the experience that the roll ups can offer to the users in this kind of world. And that's where they should choose something like avail if they want immediate DA guarantees rather than having to wait for a fraud proof. Okay, in terms of eigen layer, I think again there are still details to be flexed out and I have to see how exactly they run and the performance benchmarks and such. But roughly speaking, they are a data everyday committee. And as I mentioned, there are two sets of solutions that you can have.
00:03:57.096 - 00:04:38.120, Speaker A: You can either have a data everyday committee or you can have a full l one which specializes in DA. They offer a more data ready committee. And in that it has to be seen how many people are there in the committee, because just having crypto economic guarantees are good. But something like data availability is non attributable, which means that there is no attributable fault. Like there is no fault that you can verifiably attribute to people that they have done something wrong. Which means that crypto economic guarantees only go so far. And that's why having a dedicated dlair is of much greater importance.
