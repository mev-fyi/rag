00:00:00.160 - 00:00:13.010, Speaker A: The roll up ecosystem. There are a lot of players as you mentioned, right? Polygren zksync arbitrum op what are your thoughts about the roll up ecosystem? Who are you most bullish on? What are some things that need work?
00:00:22.310 - 00:01:53.948, Speaker B: Let me try to say the honest answer which I give to which I give regularly to devs who come to me and ask like which stack should I build on? My answer to them is forget about all the jargons, all the business aspect. Think of what is the tech that you need and the timelines that you need. If you need EVM roll up today, I think only like Arbitrum and Polygon CDK are the feature complete ones with fraud proofs or ZK proofs and a build and such. Arbitrum might be the only one which has been battle tested at scale because CDK has architectural changes over this polygon zkvM, but these are the two solid ones. In terms of Op stack, if you want to check out how easy it is to run a roll up stack, op stack might be the easiest because you do not need gigabytes of ram like you would have needed for any ZK protocol. In terms of Zksync, they are optimizing fully on costs and such. Of course their hyper chains is yet to be fully production ready and such, but I am very much bullish to see how they frame up because they use state deltas, they don't use the transactional data, and they have specific nuances which come up with that.
00:01:53.948 - 00:02:54.670, Speaker B: And I'm very eager to see how those things shape up in terms of if you are talking about an app chain, then right now the best that you have is starkware. Because starkware with this Cairo which has been already battle tested, many many devs have been using it. They have a very niche ecosystem that is running there. So if you want to use something like Cairo, it's a no brainer. If you are not stuck to the EVM, it's a no brainer. And then there are other stuff like for example, if you just want a ZK VM and you want a custom logic to be running on it, try out RiSc zero or the ZK wasms of the world, like fluent, like delphinus labs and so on and so forth, what they are doing in terms of taking any arbitrary program and turning it into a ZK verifiable code and how that can help you in terms of creating a very novel roll up construction. So depending on what exactly your need is, you need to choose your stack and not the other way around.
00:02:54.670 - 00:02:59.558, Speaker B: Right? Your roll up stack cannot dictate your user base or your use cases.
00:02:59.654 - 00:03:00.110, Speaker A: Very well, sir.
