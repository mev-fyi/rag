00:00:03.050 - 00:00:25.634, Speaker A: Hey, guys. People upstairs, please come down now. Okay? Otherwise you regret it, I'm sure. All right, so thanks so much, ATN, for inviting us here. So Babylon is a project I co founded with Fischer. Fischer is here on the front row, and we've been working for this project since last year. We just came up with a new protocol called Bitcoin Stake King.
00:00:25.634 - 00:00:38.120, Speaker A: Since this is an entire day on staking, so this is a perfect place to talk about it. In fact, this is the first time I talk about this in public. We just released a light paper last Friday. Okay.
00:00:39.610 - 00:00:40.066, Speaker B: All right.
00:00:40.108 - 00:01:10.526, Speaker A: So what are we trying to solve here? The problem, as we all know, is PoS is based on stake. So pos security is capital intensive. Proof of work is work intensive. Proof of stake is capital intensive. So if all these chains, they all require capital, and as we know, especially smaller chains, they have to inflate the coin hugely to pay for this reward for the staking. And that is detrimental effect on a lot of these chains. And so that's the problem we're trying to solve.
00:01:10.526 - 00:01:38.346, Speaker A: But the observation is that if you look at all the proof of stake chains combined, the market cap combined, it is actually less than half the total crypto market cap. Hey, guys, where is the other half? Where's the other half? Bitcoin. It's bitcoin. Okay, so bitcoin is an asset. It's half. More than half of the crypto market. 600 million, give or take a few million.
00:01:38.346 - 00:01:57.614, Speaker A: 600 billion. Sorry? 600 billion, not million. I hope not. Did I say something wrong? That's not what I meant by saying that. This talk is very important for the next few years. Okay, that's not what I meant. So you may say, hey, so what does bitcoin do with these proof of stake chain? Because as we all know, bitcoin is a proof of work chain.
00:01:57.614 - 00:02:31.002, Speaker A: So it seems like apples and orange. Actually, it is a proof of work chain, but it's also an asset. It's also an asset. So if it's an asset, we should understand, hey, what is the characteristic of this asset and how does it compare to proof of stake chains? Asset number one, very interestingly, most of bitcoins are actually idle. Actually idle. For example, less than 1% of bitcoin is in wrap BTC, which is the biggest wrap BTC. But only 4.7
00:02:31.002 - 00:03:14.406, Speaker A: billion of that will go to other chains to do d five. Most of the rest is just sitting there idle. Not only that, it's not even idle in terms of not earning d five yield, but it's also not earning any sticking yield because why? Because bitcoin is proof of work. So bitcoin is actually not securing the bitcoin chain. So just sitting there, no use. Second is probably the most decentralized chain bitcoin. So number three is compared, okay? Less is a relative term, of course, in crypto, less is relative, but it's still much less volatile than many other coins, especially smaller ones with smaller caps.
00:03:14.406 - 00:04:01.030, Speaker A: So if you look at these three characteristics, then if you combine them, then you can ask the question, hey, this is actually an excellent stake in asset. It's stable, decentralized, and it's not earning much due at this moment. So here's the observation. Why don't we use it to secure other proof of, to secure proof of stake chains? So 50% of the crypto market on the left hand side and 50% on the right hand side. Let's connect them by having the left hand side provide security to the right hand side and the right hand side providing some yield to this idle capital. That's the idea. Okay, so we call this concept bitcoin staking.
00:04:01.530 - 00:04:02.150, Speaker B: All right?
00:04:02.220 - 00:04:30.274, Speaker A: So when we came with this concept of bitcoin staking, I said, is this new? Hey, guys, what do you do when you try to ask the question whether something is new? What do you do? You go to Chat GPT, of course. Okay, so you go to Chat GPT and say, bitcoin sticking. And then bitcoin sticking gives me paragraphs upon paragraphs about bitcoin staking. Chat GBT turns to be all force. As far as we know, no such concept has been around.
00:04:30.472 - 00:04:31.218, Speaker C: Okay?
00:04:31.384 - 00:05:01.526, Speaker A: So on hindsight, it seems like pretty natural concept. So why is there no such concept around? So we have to understand the difficulty of this problem. Okay, so first observation is that bitcoin staking is basically a two sided market. On the left hand side are the bitcoin holders. Bitcoin holders. And the bitcoin holders have one very interesting characteristic. They're extremely conservative because their coins, their bitcoin is like gold.
00:05:01.526 - 00:05:03.214, Speaker A: They don't want to take any risk on it.
00:05:03.252 - 00:05:03.742, Speaker C: Okay?
00:05:03.876 - 00:05:18.958, Speaker A: So therefore, any protocol you come up with to allow bitcoin staking has to be super secure for the bitcoin stakers, okay? Number one, and number two is that we have to provide security to the proof of stake chain.
00:05:19.134 - 00:05:19.666, Speaker C: Okay?
00:05:19.768 - 00:05:26.370, Speaker A: So therefore, two sided market, we have to provide security to both sides in some sense. So that's why the problem is rather challenging.
00:05:26.870 - 00:05:27.294, Speaker C: Okay?
00:05:27.352 - 00:05:36.214, Speaker A: So after many months of research effort, we finally came up with a solution. And that's what we wrote about in the light paper. Okay, good.
00:05:36.412 - 00:05:36.774, Speaker C: Okay.
00:05:36.812 - 00:05:47.130, Speaker A: At this point, take a little bit, break. Any question about what we're trying to solve and whether or not it's worthwhile solving. I think it's quite worthwhile solving.
00:05:47.550 - 00:05:48.250, Speaker C: Okay.
00:05:48.400 - 00:05:49.340, Speaker B: All right.
00:05:51.950 - 00:05:56.094, Speaker A: So now I have to go into a little bit more technical detail.
00:05:56.292 - 00:05:56.942, Speaker C: Okay.
00:05:57.076 - 00:06:29.430, Speaker A: Why? Because this is actually quite a hard problem. I need to first explain to you why is it hard? And two, give you some idea of how we solve it. Okay, so why is it hard? Number one is that bitcoin has no smart contract. Our last session, our last panel was about what smart contract and staking. Okay, so most smart staking contracts, all of them, as I know, are written in smart contract of some sort, but there is no smart contract on bitcoin.
00:06:29.850 - 00:06:30.598, Speaker C: Okay.
00:06:30.764 - 00:07:03.326, Speaker A: And number two is, hey, why don't we try to fork bitcoin to add some smart contract capability? Forget it. Do not try to fork bitcoin. You spend your whole lifetime doing that without success. So our constraint is, do not change bitcoin and forget about smart contract. So we basically want to solve the two sided market problems. So on the one side, we want to achieve full security for proof of stake chains. We want bitcoin stake to be first class level security provider.
00:07:03.326 - 00:07:20.682, Speaker A: Okay, so what does that mean from the security point of view? As we all know, the most important security measure we can provide to prove a stick chain is the ability to slash asset. We need to be able to slash assets. So slashing is what full security means.
00:07:20.736 - 00:07:21.002, Speaker C: Okay.
00:07:21.056 - 00:08:06.850, Speaker A: Number one, on the other hand, we want to provide excellent security for the staker, the bitcoin holder. And so we want to achieve trustless staking, which means that you cannot bridge the bitcoin to the proof of stake chain and then stick it there, because that is actually a possible solution. And it's a relatively easy solution because the proof of stake chain would have a smart contract. But to do that, you have to mint a wrap asset like wrap BTC or the proof of stake chain. And now you're undergoing bridging risk. And once you have bridging risk, then most BTC holders will say, forget it. This is the 99% of the people who are not buying wrap BTC.
00:08:07.010 - 00:08:07.718, Speaker C: Okay.
00:08:07.884 - 00:08:08.854, Speaker B: All right.
00:08:09.052 - 00:08:16.890, Speaker A: So we will lose 99% of the market already. All right, so those are the two properties that we actually are able to achieve.
00:08:17.630 - 00:08:18.282, Speaker C: Okay?
00:08:18.416 - 00:08:28.266, Speaker A: So full slashing for the proof of stake chain, but trustless staking, that means no bridging, no custodial. In other words, self custodial.
00:08:28.378 - 00:08:29.038, Speaker C: Okay.
00:08:29.204 - 00:08:34.820, Speaker A: So this is a bit like magic. So let me go into a little bit more detail about how we achieve this.
00:08:35.270 - 00:08:35.922, Speaker C: Okay?
00:08:36.056 - 00:08:36.900, Speaker B: All right.
00:08:37.350 - 00:08:51.330, Speaker A: So to explain this, I'll step it through from the point of view of a BTC sticker. So as any cryptography 101 course will start with, it would be. The first person would be Alice.
00:08:51.490 - 00:08:52.198, Speaker C: Okay?
00:08:52.364 - 00:09:02.438, Speaker A: So Alice has one bitcoin in her wallet, okay? And she wants to stick one bitcoin on a favorite pos chain that she likes.
00:09:02.534 - 00:09:03.082, Speaker C: Okay?
00:09:03.216 - 00:09:46.150, Speaker A: So what we should do is she would send a transaction into the bitcoin chain to initiate a staking contract. Now, there's a contract on the bitcoin chain, but not a smart contract because bitcoin has a scripting language which allows you to write some simple contract. Okay? In this simple contract, which we can write, Alice can do two things. Can do two things. One is that Alice is allowed to send a withdrawal request at some time that she wants and withdraw the money, the fund. And the one bitcoin will be returned to her wallet after three days.
00:09:46.220 - 00:09:46.790, Speaker C: Okay?
00:09:46.940 - 00:09:51.446, Speaker A: Three days. So three days is the so called unbonding time of this protocol.
00:09:51.638 - 00:09:52.380, Speaker C: Okay?
00:09:52.830 - 00:10:05.834, Speaker A: The second thing, which is all, is that Alice will burn her own BTC. Just crazy. Who's going to burn her own BTC? Nobody will do that. Stay tuned.
00:10:05.882 - 00:10:06.480, Speaker C: Okay.
00:10:07.330 - 00:10:24.846, Speaker A: All right, so you look at this contract. It's completely self custodial. Only Alice can spend that one bitcoin in two ways. One of two ways. But both ways is Alice spending no third party. Very important. It's a self custodial contract.
00:10:24.846 - 00:10:43.114, Speaker A: So this is trustless staking. You don't have to trust any third party. You're not sending some money to know. I should not mention any names, but some centralized custodian. I don't want to mention any names because I don't know who is here. I don't want to get in trouble here, even for companies that don't exist right now, who knows, the people may still be here.
00:10:43.232 - 00:10:44.154, Speaker B: All right?
00:10:44.352 - 00:10:45.100, Speaker C: Okay.
00:10:46.270 - 00:10:46.714, Speaker B: All right.
00:10:46.752 - 00:11:04.778, Speaker A: So now at this point, Alice can start validating for the proof of stake chain. So this is a simplified example. So Alice is self validating. Okay. A more complicated example would involve delegation. But for our purposes, we can understand it through self delegation. So Alice is going to run the own validator, okay.
00:11:04.778 - 00:11:33.638, Speaker A: It will validate the favorite proof of stake chain. Now, there are two possibilities. Now, one is that Alice is behaving well, running this chain happy path. The chain continues going and the stake is locked up until Alice requests for a withdrawal and bonding. And then bonding will happen. Alice will climb back the stake and then will get some reward. Okay? In the native token of the proof of stake chain, typically.
00:11:33.638 - 00:11:36.662, Speaker A: All right, this is a happy path.
00:11:36.806 - 00:11:37.546, Speaker C: Okay?
00:11:37.728 - 00:12:01.342, Speaker A: Now, unfortunately, Alice could be a bad person. In fact, we try to prevent Alice to be a bad person. But to prevent that, we have to allow for the possibility that she can become a bad person. And when she becomes a bad person, she may, for example, try to fork the chain. Try to fork the chain, right. To gain some double, spend some huge mev extraction.
00:12:01.406 - 00:12:02.018, Speaker C: Okay.
00:12:02.184 - 00:12:02.962, Speaker B: All right.
00:12:03.096 - 00:12:48.482, Speaker A: Now what happens at this point? I should be able to slash Alice, right? I should be able to slash Alice. But how can it be Alice? Money is on the bitcoin chain. Alice is doing bathing on proof of stake chain. So how do I do the slashing? Turns out this is the key here is that there's no smart contract on bitcoin to process whatever message I send it. However, there is one particular message that I could send that the bitcoin chain can actually use to slash the money. What is that? Well, that is, I can use cryptography to force the release of Alice private key. Okay, so this is using cryptography to force release a private key.
00:12:48.482 - 00:13:29.406, Speaker A: Once this happens, then anybody can become Alice because it has Alice private key, and it will activate the second path, which is to burn the BTC. That's how slashing happens. Okay, so slashing is happening because I can activate and force the release of Alice private key, which leads to a spending event, which is the only event you can describe on the BTC scripting language. So this is how a slashing or a staking contract can be written in the BTC script language. You have to combine it with cryptography to enable that without a smart contract. Okay, good. So that's it.
00:13:29.406 - 00:13:56.550, Speaker A: That's the main point. So I satisfied two things. We also satisfied some additional very good things, which is, for example, BTC holders are not used to staking, so they're not used to losing liquidity. So we want to make sure that the unbonding time is as fast as possible. And we have built previous protocols which can achieve this task of fast unbonding by synchronizing, basically between the bitcoin chain and the proof of stake chain.
00:13:56.890 - 00:13:57.698, Speaker C: Okay?
00:13:57.884 - 00:14:28.706, Speaker A: Moreover, our solution is modular. So therefore, our solution can actually be applied to a wide range of proof of stake chain, not only one particular one. Our solution is kind of a modular solution. In technical jargon, it is called a fnati gadget. So actually, ethereum uses fnati gadget. We use a fnatic gadget as well, but it's a different type of fanatic gadget, but it's a plug in architecture on top of an existing proof of stake protocol. So it's a very, quite powerful idea.
00:14:28.706 - 00:15:10.800, Speaker A: And finally, since Eigen layer talked in the first session, and I'm talking to the last session, so I should do a regonda, which is that, on top of this staking. So our contribution here is on the primitive of BTC staking. Okay, so BTC staking itself is not resticking, because BTC is a fresh asset. However, on top of BTC staking, you could build a restaking protocol on top of that. So that is possible. And now, if you want to, a single staker can stick one bitcoin to multiple chains, being well aware of the additional leverage risk involved. Okay.
00:15:11.250 - 00:15:12.062, Speaker B: All right.
00:15:12.196 - 00:15:48.406, Speaker A: So we have already made a good progress towards building this protocol. Our testnet right now is to do timestamping, which is the first primitive needed to do BTC sticking. We already have 31 cosmos SDK app chains sitting on our testnet right now. And these are all potential proof of stake customers who will use the BTC sticking solution. All right, so our final vision to end this talk is the following. 50% of the current economy, crypto economy, is bitcoin. 50% is proof of stake.
00:15:48.406 - 00:16:21.030, Speaker A: It's too isolated economy. Imagine it's like United States and China, completely disjoint. That would be a very weird world. Very weird world. Hopefully, it will not go to that world, but currently, it's definitely not that world. And what we're trying to do right now using this sticking protocol is to say, know, the difficulty of unifying these two worlds is because it's very hard to build secure bridges between these two worlds. Bridges between bitcoin and the rest of the world is well known to be insecure, either insecure or very low capacity.
00:16:21.030 - 00:17:17.400, Speaker A: What we're seeing is that for one particular use case, but very important use case, which is staking, we can build such a protocol and therefore, with a hope of unifying the two economies together through this very important use case of staking. Okay, so I would like to thank my collaborators, the Babylon team, as well as other experts. So this project involves multiple experts from multiple different areas. So, for example, we have Robin, who is the founder of Zerosync, which is a protocol, a ZK protocol on bitcoin, expert on the bitcoin scripting language. We have Opheus from Common prefix, who is an expert. So we're combining a lot of expertise together with our own expertise on consensus protocol to build this. If you're interested, here's the BDC sticking light paper which we released last week.
00:17:17.400 - 00:17:21.220, Speaker A: And follow us on Babylon if you want more updates. Thank you.
