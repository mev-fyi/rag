00:00:07.400 - 00:00:23.994, Speaker A: Fantastic, Sriram. We're thrilled. I'm thrilled to have you today. Before I kind of like introduce what is the podcast about? Can you maybe please introduce yourself briefly?
00:00:24.614 - 00:00:57.824, Speaker B: Hi everybody, I'm Sriram. Thank you so much, Laszlo, for all making this happen. I am Sriram. I founded a project called Eigen Layer. Eigen Layer is the mechanism for allowing Ethereum stakers to participate in validating other protocols. Before that, I was associate professor at the University of Washington, Seattle, where I am the University of Washington Blockchain Research Lab. So we have been working on consensus protocols, scaling all these kind of like fundamental infra problems in crypto for many years.
00:00:57.824 - 00:01:18.704, Speaker B: And one of the bottlenecks we found was, if you have a new idea on what to do with the new consensus protocol, there's very little basis for you to experiment and try it out as opposed to go build your own new layer on. So that's really what Eigen Layer was designed to solve. We're really excited to do this podcast with you, Laflo.
00:01:19.484 - 00:01:55.880, Speaker A: Fantastic. Yeah. And we'll definitely come back to what Eigen layer is about. And also, how did you come up with this idea in the first place? Just a quick introduction on Kiln and myself. Kiln is the leading staking platform and our mission is to democratize value creation on blockchain, which means offering our clients, the users the most sane rewards. Definitely. That's why we here to talk about this fantastic new opportunity and new jungle that is opening through Eigen layer.
00:01:55.880 - 00:02:30.318, Speaker A: Just quick introduction. It's the integral episode of our video series focused on aviaces. And we're thrilled to welcome you, Sriram, as the master of restaking himself as a first guest. First of all, thank you so much for joining. And I would like also to encourage our viewers to stay tuned for the next episode featuring Ted Knox, senior researcher, engineer at Agenda. And all of our new episodes will be released every Tuesday at 05:00 p.m. cET.
00:02:30.318 - 00:02:58.754, Speaker A: So without further ado, Srima, my first question was, I was watching one of the interviews and you mentioned Yuval Noah, expressing that the ability for humankind to thrive as a species was to collaborate flexibly in large numbers. Collaborate flexibly, enlarged numbers. Was that one of the reasons you came into crypto? And are there any other reasons?
00:02:59.534 - 00:03:55.644, Speaker B: Yeah, I know that's such an advocated thing for me, because even before I got into crypto, it was something that changed. A very fundamental thing that I used to think, which is, if you think about as an academic, I was involved in innovation. Innovation is inventing new things. And I used to take pride in it. And also that basically as a community of innovators, the academics and generally scientists have done a lot. But this thing, when I first read, when it said humans are special not because they are intelligent, but because we cooperate flexibly in large numbers, kind of stacked me as, what is this other thing? I thought humans are special because we are intelligent and in an innovator or inventor or whatever, discover new knowledge. And I think it took me some time to actually understand that.
00:03:55.644 - 00:04:46.860, Speaker B: And then you all's logic is that, hey, you take one person away and you take one gorilla and one person and then let them fight. It doesn't matter which person you take, you know, who's winning that game. But if you took like 500 people and put them in a, in an island with 500 guerrillas, then like, you know, humans start to get this like emergent dynamic, which is that they collaborate and they figure out, you do this thing, I do that thing, you take care of this specialize, coordinate, leading to very powerful results. And so that slipped a big thing in my mind that actually it's not innovation that is driving forward society. The kind of biggest jumps actually happen when you do better coordination. Like think of a constitutional democracy, think of like a free market. These are coordinations.
00:04:46.860 - 00:05:11.704, Speaker B: Think of property rights, IP rights. These are coordination technologies that just like gave a massive boost to everything else that's happening in society. And the way I think initially when I came across blockchains, I thought, okay, some speculative technology that I'm not interested in. And also I had some PTSD from working on peer to peer systems 15 years back that went nowhere.
00:05:14.224 - 00:05:20.592, Speaker A: I mean, it actually didn't let nowhere, right? Like my soldiers read nowhere.
00:05:20.648 - 00:06:00.744, Speaker B: But, you know, of course, generally peer to peer went somewhere. But that was, we were building peer to peer wireless. I don't think it's a thing anywhere even now. So that, that basically brought, but once this click that if, you know, if our ability is to coordinate, then systems that create more rigid ways to coordinate. Right. When I'm working with you, I know what I'm getting, what the contract is, how the rewards are going to be redistributed, all of these things. That just makes it so much more easy for any two parties, any millions of parties or billions of people to come together and coordinate.
00:06:00.744 - 00:06:34.018, Speaker B: So just like the Internet is our information super highway cryptos or coordination super highway. This is the kind of fundamental thesis that Eigen layer is building towards from the outside. People think Eigenveil is like the public branding is also that it's the breez taking collective. But fundamentally in our company, our vision statement is to be the coordination engine for open innovation. That's what we care about. We want open innovation. Innovation and coordination are the only two things that are non zero sum games, win win games.
00:06:34.018 - 00:06:52.134, Speaker B: Innovation, you create something out of nothing. Coordination. People come together and do something to enable other people to innovate. So that just, I think fits what you all thesis is. And it's just slowly discovered and unraveled that in our journey.
00:06:54.034 - 00:07:16.574, Speaker A: Yes, it's really fantastic. Now, you mentioned it, seeing it as a marketplace of innovation that puts people that collaborate easier to thrive, innovation even faster, because that's how innovation happens. That's actually fascinating.
00:07:17.394 - 00:08:17.790, Speaker B: Yeah. In fact, one of our original model for eigenveir was, oh, it's a marketplace where stakers, operators are selling something to USS. And then later actually we came up with the model that actually it's not a marketplace, because in a marketplace, if these three parties do the trade, then the trade is complete. But actually it is the stakers, operators and AV's creators collaborating, coordinating to offer a service to AV's consumers that it's a coordination engine for open innovation. Because now, as a creator, I don't need to do all these other things, I just need to be innovative, to be inventive and come up with new and crazy things to do. Then these other parties are already here, the stakers bringing capital, the validators bringing computational resources, as well as maybe the other side of the AV's consumers is I'm already a consumer of a bunch of eigenveil services. It's much easier to consume one more service.
00:08:17.790 - 00:08:24.070, Speaker B: So this is the coordination engine for more innovation. So that's how we think about it.
00:08:24.222 - 00:08:46.534, Speaker A: Not a marketplace, but a collaboration system for stakers, aviass and AG layer to bring better services to aviat users. We've mentioned the word aviators two or three times since the beginning of this conversation. So what is an Av's? What's your definition of it?
00:08:47.154 - 00:09:36.208, Speaker B: Av's is the lead validated service. And what is an actively validated service? This goes back to what I was talking about earlier, why we came up with Eigen layer. Eigen layer is whenever you want to start a decentralized service, any kind of decentralized protocol, you may be wanting to build a bridge, you may be wanting to build an oracle, you want to build an identity service, you want to build a location service. I want to figure out where the nodes are for accessing something you want to build an AI service, think of any service that you want to build. If you, the line between building it in the crypto worlds and building it in, you know, in a cloud universe is decentralized trust. If you have decentralized trust, then you're in crypto land. If you don't have decentralized trust, you are in Cloudland.
00:09:36.208 - 00:10:24.554, Speaker B: No problem with being in Cloudland. But that's the difference then. If that's the difference, then how do we make sure that every new protocol has access to decentralized trust? And what was happening was every new protocol had to create its own decentralized trust community, and that's an insurmountable barrier. Whereas if you had a smart contract on Ethereum, you could just consume decentralized trust. But if you've built it, your full, you know, protocol, which actually requires you to retune how the nodes do various things, what the consensus is how the nodes access Internet or other blockchains or whatever other complex things. You could not just like, consume decentralized trust. You have to actually create it for your own purpose.
00:10:24.554 - 00:10:54.916, Speaker B: And that is such a high barrier. And if you look at the cloud, the cloud actually also went through the same thing, like the way you would build a web application back in 1995, right? You have to build your own server, you have to build your own payments, you have to build your own identity, you have to build your own database, and then you have to kind of sell books, right? This is what Amazon was doing. They just want to sell books. They build a server there to build an entity. They've been a login. They wind up all the stuff. And in 2024, that's absolutely not how you do it.
00:10:54.916 - 00:11:33.416, Speaker B: It go to AWS, you'll get like stripe for payments, you'll get oauth for like identity, you'd get MongoDb for a database. Just build the new thing that you're building, which is, hey, I want to send something to somebody, just use this db, use that login, use this thing and then put it together. So rate of innovation, that's why web exploded so fast. But that's missing in blockchain today. In blockchains, you have to go produce decentralized trust. So our vision was if you're at a common pool of decentralized trust now, people can build these services in cloud. This was called SaaS software.
00:11:33.416 - 00:12:32.046, Speaker B: As a service. You write your software, you throw it on AWS, and then every time people are using it, you just have an economic model which it's earning fee it is very similar to what an avSs, it's an actively validated service. You think of it as like a decentralized software, as a service, you come up with a protocol or a decentralized service, you write the code, send it to Eigen layer, Eigen layer as stakers, people who stake deep, ethereum is the root of all our actions, because people are deep, the stakers are there, the node operators are there, they're bringing a lot of computational resources. The stakers can delegate to one of the existing node operators, or they can delegate to themselves. Want to be an operator? Totally open. Then once the market is formed, they can now serve like any queries that you want to get to. The oracle or the data system or identity system now goes through these nodes.
00:12:32.046 - 00:13:13.798, Speaker B: So creating a shared validator set, a shared economic trust. And what that means is now, if you have many, many services that are building on top of it, these are called avss, we're calling it actively validated services, because a lot of people use the word staking, like, you know, in a DeFi protocol, you say like lock up your token for some other token or some other thing, right? But here we have a very specific thing. It's validation. Like Eigen layer is a universal validation engine. We don't want to do like all kind of other stuff and be non focused. So it's a place to do validation. You want to do download and run software and make sure that the output of the software has an integrity associated with it.
00:13:13.798 - 00:13:54.872, Speaker B: How do you get integrity? You get integrity because you put a bunch of economic value behind it. And if you do, if you are malicious and say something wrong, you may lose your deposit. So that's the system of integrity. That's what an evs is. Now, anybody who has an idea for how to build, let's say, a new filecoin, if you go back into history, Ficoin was actually announced in, I think, one of the first ethereum conferences that, hey, we can build this decentralized storage system, but Ethereum is not programmable enough to go build a decentralized storage system on top. You could only build smart contracts, but somebody has to actually do the storage and all this stuff. And that's what eigenmail is bringing today.
00:13:54.872 - 00:14:24.242, Speaker B: If you wanted to build filecoin today, you could just build it on eigenve. If you want to build a data availability system, we are building one. You want to build an ordering system, like a roll up wants to have a sequence all of these kinds of services, instead of thinking, I think that's another thing that we are working very actively to correct. People think of all these things as chains. I think these are not chains. Chain is just one type of a bundled set of services as a chain.
00:14:24.418 - 00:15:07.334, Speaker A: But you can have specific services, specific application that still need decentralization because we are in the crypto world and we keep these services as true as the crypto value. But that have to be chance. That's your point. And that's very interesting. So I see the advantage of not having to run your own chains, asking 60 to 100 to 200 validators to validate your blockchain, and then you still have to find product market fit on your service for your clients. These are two very different things. I love the cloud analogy of before you had to run your own servers, but then you could opt into AWS.
00:15:07.334 - 00:15:39.604, Speaker A: And we have to replicate that in the decentralized world. I love it. Does two questions emerge. First of all, does it have to be linked to Ethereum shared security? Meaning like why, for example, you need state ETH and not simple eth, right. To share the security with other services and still have slashing rules to this ETH being staked to secure other services versus stake. Does it has to be like this?
00:15:40.944 - 00:16:23.146, Speaker B: No. Great question. So if you look around, there are many different architectures for Stan security. That is, you know, Cosmos had interchange security, now called replicated security. They have mesh security, FMLN has subnets, Polkadot has parachains, Ethereum has roll ups. Just a lot going on here. But let me explain why before we go into particular architectures for should we allow stake deed, should we allow other things go around? Like what is the set of like, objectives that we're trying to satisfy here? So the first one is there is a strength in sharing security.
00:16:23.146 - 00:16:59.954, Speaker B: What is this? Imagine there are thousand protocols. Each of them have enough fee to have $1 million state, okay, but you know, because if you have some want to have some stake, you need to have some fee. So let's say you have, you know, each protocol has enough fees to have $1 million stake. They could go around and do that, which is kind of what happens today. Each of each, each service has its own stake. And you have like many pools of these stakes. And instead you imagine you take all the pools together, like all the $1 million thousand pools, and then create a work.
00:16:59.954 - 00:17:45.064, Speaker B: Now this $1 billion pool, all the stakers validate all the thousand applications, thousand protocols, now the same fees. So the two systems that we talked about have the total fee for any service is the same. Because, let's see, the shared security has more utility or value or purpose. And the answer is yes. Why? Because to attack any one service, I need $1 billion of capital. If I do attack it, I'm going to get slashed for half of 1 billion or whatever. That's just a much higher rigidity that I can get by aggregating all of the services into one common pool as opposed to fragmenting it.
00:17:45.064 - 00:18:14.824, Speaker B: Each one has its own little bit of security. That's the kind of big picture of why shared security is powerful, is because when you share security, you are getting the effect that to attack anyone, you have to attack the whole. That's number one. But there is something you're losing in shared security. What are you losing in shared security is imagine one of these thousand services is Coinbase. Coinbase like, hey, I can have 100 million staked. I'd not have 1 million.
00:18:14.824 - 00:19:13.702, Speaker B: But if I go into the common pool, I cannot get the same thing as the other guy who could have only 1 million staked. So there is no specific, oh, I should get more security, but there's no way to get more, just all a common pool. The way we solve it is by creating what we call another dimension of security called attributable security, in addition to shared security. The idea is when you have these thousand services and like 1 billion restaked, what could happen is one service, many services may trigger slashing simultaneously. So then you have a conflict of, if you burn the ETH, then you're burning the ETH. And there is no specific attribution. But if you're redistributing it, then there is an attribution, like, how much should you give to this one? How much should you give to that one? The way we solve it is we let them bid on how much of attribution they want.
00:19:13.702 - 00:19:59.442, Speaker B: So if a serving wants more attribution, then let's say Coinbase gets like 100 million attribution. What it means is it doesn't matter how many other AVSS triggers slashing simultaneously, we will be able to redistribute that 100 million to Coinbase. This is completely low leverage over collateralized security. That's what Eigen layer is. Eigen layer is. It's a very interesting mathematical problem to solve, because the protocol has to make sure that how many our services trigger slashing simultaneously, how many hours takers colluded in whatever combination to get slashed in all of these things, the protocol has to ensure that it honors the attribution correctly. It's a very interesting kind of problem.
00:19:59.442 - 00:20:40.594, Speaker B: And that one of the core technologies of eigenvalue is actually giving you certificates of attribution, so you get the benefit. So with attribution, what happens is I have my, if coinbase service goes wrong, they get the 100 million and they can redistribute to their customers. But if these other services go wrong, they get only 1 million. But to attack any one service, you still need the 1 billion. So there is pooled security and attributable security simultaneously. And so suddenly you have a market which is uniformly better than the previous market of this aggregated segregated security. So that's the core tenet technology of Eigen layer.
00:20:43.054 - 00:21:06.394, Speaker A: And just to pose on this, that's one of the way he answered to the question. But I definitely see the value of shared security. But there is systemic risk that wouldn't exist if these services would be completely divided, whereas they are, you mentioned, there's attribute security that solves part of the problem.
00:21:06.814 - 00:22:03.174, Speaker B: That's absolutely correct, because you know, when securities. So the problem with, if you don't have attributable security is everybody thinks they have 1 billion security, but there is no clear accounting that, hey, I only have a portion of this attribution and you don't know what is happening. You just like a mingle instead by specifically like declaring your preference and bidding on, I need this much attribution and this much pooling, then you have a very precise articulation of what you're getting uniquely. And the other is like best effort in the sense that, yes, you know, if you get. So the attribution is unconditional on other AVss, like whatever happens, right. That is the really, you know, it provides a buffering for your av's against all the other AVss. And as far as you are a staker, the systemic risk is when you're staking into a service and if you don't perform anything malicious, you won't get slashed.
00:22:03.174 - 00:22:42.334, Speaker B: That's the staker side. So staker is actually, it's a very different kind of risk. Somebody came up with this example on Twitter. They said it's kind of like you go to a mall, right? You go to mall and then you have to pay $100 at a store and you promise that you won't steal at the store, and that's staking. And then you could say, instead of paying $100 at the store, you pay $100 at the entrance of the mall and say that I promise I won't steal in any of the 5000 stores here. But still in your control not to steal. Like, you can just choose not to steal, and you have your money when you get up.
00:22:42.334 - 00:23:04.418, Speaker B: So it's endogenous risk. You control the risk. If you're a validator, if you want to stick with, you control the risk, you're not like. Whereas if you basically take a margin lending, or like a leverage position by 100 x, if the market price of the asset moves by 1%, you will get liquidated. You don't control the market price of the asset. It is something out there. Exogenous.
00:23:04.418 - 00:23:44.136, Speaker B: The price risk validation is this really amazing and unique thing which is premised on an information asymmetry. The validator knows that they are honest, and therefore they are willing to put their money where their mouth is. But the other guy doesn't know who the heck this is, and they're saying, I don't know you. Oh, but you have this much money. So I know that if you do something wrong, I can take this money from you. So this is what was basically like solving the trust problem by bringing different people with different information asymmetries together. And so that's why I restricts its scope to be the universal validation system, rather than to be a universal defi, and we don't.
00:23:44.136 - 00:23:57.744, Speaker B: You could easily say, like, it's, we have money in the world. We could easily say that you can lend against this. And the slashing condition is your price went down. This spoils the fundamental structure of eigenvalue, which is purely endogenous.
00:23:59.044 - 00:24:36.944, Speaker A: Right. And focusing on the validation engine of attributed security, as you mentioned. So just want to come back on all these aviators started with AGN DA. First of all, can you explain what is AGn Da, why it's important, and why are you launching your own AV's? And I guess a related question is, I'm seeing a lot of Ava says out there, what kind of aviators are you excited about? Is there, you know, is there anyone in specific? Because we're going to talk to a lot of them in the coming weeks.
00:24:37.404 - 00:25:32.040, Speaker B: Yeah, no, really excited that you're doing the AV's edition here. And it'd be great to get the audience understand all these different cool technologies that people are building. Starting from the question of, first, why we built eigenvalue, and then I'll say, what is eigenvalue? Why we built Eigen Da? I think there are several reasons we built Eigenvalue. The first one is Eigenlayer is such a complex, multi sided marketplace. Takers, your operators, you have avss, and to have somebody to have an AV's commit to building on Eigenneth is a really, really tall order. We, we cross that TASM somehow. But it's not a trivial, you can't assume that, hey, I just create a contract, people are going to put in money and like operators are going to come in, and therefore you now predicate your entire life and protocol on this wall that somebody creates.
00:25:32.040 - 00:26:11.334, Speaker B: You know, it's a, it's not easy to do that. So what we did is to bootstrap this system, we need to showcase the first powerful AV's that can be built on Eigenveil. So, because, you know, if you think about like Amazon, right, Amazon became Amazon books, for example, became, anybody can come and sell books now, but originally only Amazon was selling books. So you have a complex multi sided platform. You become one side of the platform and then you can get the platform started, and then now other players can also come and participate. So that's the same kind of a thinking. So it's a complex multi sided thing.
00:26:11.334 - 00:26:49.074, Speaker B: How are you going to get all the sides come together? So build one side yourself. So you know that the stakers and operators are coming because they have at least one service that they can kind of believe in, outside, in the air. And then you can ask, okay, you know, yeah, I understand you want to build one service. Why is that service DA as opposed to all the other services? I think there are two kind of main answers. One is, I've done a lot of research on DA. Like, you know, that's part of the academic work. You know, many breakthroughs and data availability came out of our group.
00:26:49.074 - 00:27:46.366, Speaker B: So that's one, just like, we know this better than most people care about. He said the second one is. The second one is, if you look at the roll up centric roadmap of Ethereum, this is just the biggest bottleneck that we perceive is data availability. Because the total bandwidth of Ethereum, if you just write data to Ethereum, is only 80 kb/second you know, now people are talking about this number. I had never heard of this till one and a half years back when the first time I just did a very simple calculation, saw 80, couldn't believe it. Like, what is this? It couldn't be just 80 kilo for the world computer to build all these NaN tools and everything. And it's true Anil the, so that, that's one reason that we want to actually scale this to much, much higher.
00:27:46.366 - 00:28:30.794, Speaker B: And actually the academic and theoretical analysis suggests that you should be able to go to like gigabytes per second over. Like, if you just optimize engineering architectures. So we just decided that we should start building like a high performance data availability system and showcase that. Hey, you know, if you have an Ethereum, roll ups are branded on Ethereum security. So the closer to Ethereum that you can get and the security and offer it to a data availability system that is actually really, really powerful. That's the second reason. There is a third reason, which is then I mentioned earlier that we want to have thousands of services building on either layer.
00:28:30.794 - 00:29:10.918, Speaker B: One of the things that this thing does is every validator has now to download and run thousands of, like, these chains. That's a kind of a crazy job. One of the ways we, we solve it using Eigen Da is, you know, for each of those services, if you have to write a data, you can just write the data into Eigen da. And Eigenda itself is a sharded system where no, no downloads all the data. Every node downloads a little bit, and but together they all download everything. And so that's how we are able to get to ten megabytes per second. And we have a roadmap to scale it over like the next three years to gigabytes per second.
00:29:10.918 - 00:30:03.604, Speaker B: So that, I think creates this, the framework for both bootstrapping Eigenveil, but also offering a core ecosystem service for other AVss. Another example I'll give you is like when AWS started the Amazon Web Services, the first thing they built was a blob store. I can just write a blob and retrieve it. And it's because it's the most basic function of a cloud is you write something and then you read it. That's the most low level native ta is basically just that with decentralized trust. So the decentralized blobstore write it, retrieve it. Now all the other AVss can utilize the service as well as other like, roll ups exists that can utilize the service.
00:30:03.604 - 00:30:37.466, Speaker B: So that's why we built identity. Inda has not only this throughput and security alignment with Ethereum, but also has a bunch of new economics, which are pretty unique and comes from a first principles understanding of what's going on in blockchains. The first one is reserved bandwidth. The idea of reserved bandwidth is one of the things we were seeing a lot. And I saw the cryptocurrency craze back in 2017. Cryptokitties comes, drowns the Ethereum network. Like everybody's trying to download it and.
00:30:37.490 - 00:31:00.054, Speaker A: The whole number very well. 2017 is like, you know, who are these little kitties that are actually breaking down the network? It was kind of running joke, but it actually definitely happened, and for good reason, I think, you know, back, if you look back. But yes, of course, that's a very good example.
00:31:00.424 - 00:31:27.156, Speaker B: Yeah. And so the thing is, cryptokitty is now affected maker and uniswap and compound and all these other guys. Right. And there's no isolation. Right? There is no isolation in the sense that, yeah, a lot of cryptokitties traffic affects the cryptokitties app, but not the other apps. There's no isolation. There's just leakage and negative network effects.
00:31:27.156 - 00:32:11.994, Speaker B: Negative network effect is when, like, the other thing becomes big. Now you don't have enough space, your gas price goes up, and none of your users won't touch your thing. So capacity limitation creates this kind of, like, negative network effect or bounded network effect. So you can't go beyond a certain size, because when you try to go beyond that, each, each app is more negative to the other apps. Normally, each app is more better for the other apps because you can interoperate, you have liquidity, all of these things. But this is the limitation of capacity now that if you can stretch the capacity, one of the things you want is containerization, which is, I can give you a reservation. Like, you know, you go to Amazon, you buy your own instance, you reserve your own instance, you have it for the entire year.
00:32:11.994 - 00:32:19.162, Speaker B: It doesn't matter. Anybody else does anything. Netflix traffic goes crazy. That instance is just for you. That's dynamic.
00:32:19.298 - 00:32:27.112, Speaker A: And you don't have this monolithic architecture, but you scale by containers or clusters, make sense.
00:32:27.248 - 00:32:49.336, Speaker B: Scale by clusters is just like seeing that, hey, there is this. So much bandwidth. And at every moment, this much amount of bandwidth has been reserved just for you. We have ten megabytes per second. So every one of hundred seconds we have 1gb. And all of this 1gb, you have like 1 mb. So, like, nobody else can write that 1 mb other than you.
00:32:49.336 - 00:33:30.420, Speaker B: So essentially, you have no contention access to that particular portion of data. And what that means is now you can actually reserve your data. You know your price. You have no contention, you have no variability, because the price variability is a big mess to building a business. Imagine you're building like an airline, and you don't know how much jet fuel is going to cost in like two weeks. How do you sell a ticket three months in advance? You just like taking a guess, right? So airlines usually have contract deals. You know, the biggest airlines will richly have contract deals with the big oil suppliers.
00:33:30.420 - 00:33:57.156, Speaker B: Say, that I need this many barrels of oil. And that's how you solve it. You just have reservation contracts which give you reservation. And that's exactly what we do to give you reserved bandwidth at a constant rate, constant price. And so you don't have to worry about price fluctuation, nothing. That's number one. The second one that we did is that now that you have reserved bandwidth, maybe you don't even have to pay in heat.
00:33:57.156 - 00:34:16.724, Speaker B: That would be the nominal way, permissionless way to use it. But you could come and say, I want to pay in my own token. That's what an l one does, right? An l one says I have like an inflation of 5%. That's going to. My validators could say that's what's going to the Da guy, the Eigen da. That's number two. Paying your own.
00:34:16.884 - 00:34:28.020, Speaker A: And on this specific point, would you favor any type of economics? Paying in ethereum or in the native token of the service?
00:34:28.172 - 00:34:55.564, Speaker B: Do you have a preference there? Paying it is permissionless. Paying your own token for eigenvalue needs to be whitelisted by the DAO. Because you know they are reserving a certain amount of bandwidth. They need to pay something valuable. So there is some negotiation, but because it's a reservation, it's for a year, you just do it once and that's every year you have to renew it. But something like that. So as far as Eigen layer, this is all for eigenva.
00:34:55.564 - 00:35:28.734, Speaker B: As far as Eigen layer is much more permissionless. People can come up with all kinds of crazy things of what to do. But Eigenva is like an AV's, so it has its own preference, but it already kind of like absorbs the Eigen layer thinking into its thing. That's why paying your own token is a part of it. The third one, which is even more like taking the Eigen layer approach to eigenvalue, is dual staking. So you have a roll up. A roll up has their own token, okay? Now, many of the roll up tokens don't have any practical utility.
00:35:28.734 - 00:36:22.964, Speaker B: What Eigenva does is let you have those staking one quorum, which is the standard Eigen layer configuration, eth staking, or whatever. The other quorum is your own token. And whenever a data is dispersed to your system, both the ETH quorum has to sign off on it and your own token quorum has to sign off. So that basically means now you have, you are getting additional security from your own like validator community. And maybe many of, many of the people who stake your token, we delegate to the same operators that are anyway running eigenvalue, or they may find their own like, or they may have their own basement operations. You totally open to all of it. But it's a very simple way for a roll up to add a real genuine net positive utility for the end token.
00:36:22.964 - 00:36:48.784, Speaker B: So dual staking is a native feature of Eigenvalue. That's a very insider compatible thing for rollups to come in and say I get my own bandwidth, I paint my own token, have my own token for staking. It looks like an l one, looks like an e one, but absorbs the shared security of Ethereum, write data to Ethereum, all of this. So that's really what the economic structure of Eganda is.
00:36:49.774 - 00:37:17.894, Speaker A: And before I guess we go, I had very ecosystem long term questions. Do you see maybe one or two aviators? Maybe there's more that you're really excited about. You're like wow, the ecosystem needs that. And if it's too complicated to choose one or two kids out of like 15 or 16, maybe thousands tomorrow, it's fine, you can skip this question.
00:37:17.974 - 00:37:43.302, Speaker B: Specify the categories or meta categories or verticals that we are seeing. I think that's much more interesting. So one vertical is roll up services, which is, you know, I want to build a Di or build a sequencing, I want to build a bridge, I want to build a watchtower for rollups, all of these. I want to build a finality layer. I want to build an Mev service for rollups. So yeah, roll up. I want to build some services for rollups.
00:37:43.302 - 00:38:15.164, Speaker B: So that's one kind of big key category. And this category is the most proximate, most close, because rollups are already a thing and they need some of these services to actually solve some of the problems. Finality time is large in Ethereum. Bandwidth is low in Ethereum. Interoperability is expensive and all of that. So you can actually solve all of these things using roll up services. The next category if you go out of roll up services is core processors, coprocessor is.
00:38:15.164 - 00:38:49.806, Speaker B: I'm sitting on Ethereum and I want to make a call and buy one like some crazy amount of compute. I want to run an AI, I want to run like some complicated ZK, I want to run a Linux machine and get the output. I want to run a sequel server and then bring a guaranteed output, all of these kinds of things. But I'm sitting on Ethereum. I'm not, it's not a roll up. Like roll up has its own state and its own chain and so on. I just want to make a call and get an answer right back on Ethereum when I get an answer.
00:38:49.806 - 00:39:31.774, Speaker B: If this answer comes with some amount of economic integrity, oh, this answer is right, or you can slash and redistribute $10,000, or this answer is right, or you can slash and distribute hundred dollars. Now, each answer is endowed with a certain, like, economic security with it. And, you know, each application can decide whether that's good enough or not. But that's a really interesting new category we're seeing is coprocessors. Another category is like complex cryptography, like secure multiparty computation. I want to split my data into many things so no one node has access to my secret. I want to do a complex computation on top of these secrets.
00:39:31.774 - 00:40:01.494, Speaker B: You can do that. You can do homomorphic encryption, which is you can directly do computations on encrypted data. You can do trusted execution environments. You can take the Intel SGX, which is a hardware which promises that this particular code ran on this input, and then promise the output using hardware security measures. You can run a network of that. So we have projects doing that. This is another, like, meta category is cryptography.
00:40:01.494 - 00:40:38.614, Speaker B: Another meta category you're seeing is proving certain things. I want to prove that I have a certain identity. I want to prove that I bought, let's say, you know, $1,000 worth of goods from Amazon last month by logging into my Amazon thing. But I want to prove it to a decentralized network. I want to prove that I'm logging into the service from South America, not from North America. Let's say you want to prove these kinds of things to a decentralized network. How do you do this? So new people building all kinds of crazy things there, and then finally.
00:40:38.614 - 00:41:29.034, Speaker B: So all of these categories I talked about are auxiliary to Ethereum. They're not touching Ethereum main chain in any kind of fundamental way. But because stakers are restate, they are like Ethereum stakers. You can specifically try to bring new things to TML1 natively. Like for example, Justin Drake from Ethereum foundation came up with this idea of pre confirmation, which is if your state on Ethereum and on Eigen layer, you could issue a thing to a third party, saying that when my block proposal comes, I am going to include your transaction. If I don't include that transaction, then I can get slashed. This is a pre conformation I can give to a L2 or like some other application that, yes, my transaction is not yet gotten into.
00:41:29.034 - 00:41:59.054, Speaker B: L1 but when this guy's proposal slot comes, maybe it's the next block, maybe it's in two block. When this guy's proposal block comes, he will include it, because if it doesn't include it, he's going to get slashed. So these are the kinds of things that we are seeing. I started this thing with coordination engine for open innovation. We just like totally overwhelmed by the community coming up with all this. These are not our ideas. Like, none of these other than Da, which we are building.
00:41:59.054 - 00:42:06.354, Speaker B: This is just the community's creativity that actually is showing up, which I'm really thankful for.
00:42:07.214 - 00:42:35.452, Speaker A: Yes. Yeah. Coming back on collaboration and making innovation thrive and I guess, like, monitoring these ideas where you wouldn't be even yourself able to think about them, definitely. You kind of executing the primary vision of innovation through shirt and massive collaboration through Eigen layer. That's very exciting.
00:42:35.548 - 00:43:02.704, Speaker B: Totally. We are very thankful for the community and want to engage people looking at this podcast to come up with even more cool and nice ideas. You know, one of the things, you know, we were brainstorming inside our, like, strategy group, what is like Eigen layer stand for? You know, what are you inventing? Like, that's what we fear we want to stand for. Like, you're inventing something new. You want to be here on Eigen layer with the other inventors who are inventing cool and crazy things.
00:43:04.004 - 00:43:17.474, Speaker A: So if you have a crystal ball and you see the agile ecosystem and Aguilera inventors in 510, 15 years, what would you imagine? What would you visualize?
00:43:21.414 - 00:44:11.322, Speaker B: Yeah, I mean, a great thing would be that ethereum becomes the center of coordination. And when we say coordination engine for open innovation, I'm not only really thinking about these kinds of decentralized services, thinking about all kinds of other things that could be built downstream of it. Right? Think of, how do you know long range incentive problems in society. So, just dialing back a bit, you think about society way back in the tribal times. One of the really powerful things that used to happen is you have one is to untrustworthy. I know my farmer, I know my teacher, I know my friend, and we help each other. And if you try to deviate, you'll be like, societal consequences will come back on you.
00:44:11.322 - 00:44:59.694, Speaker B: So that's the structure. And what we did is move from that to a very wide supply chain world where like, I had hundreds of teachers, I had, like, you know, tens of doctors in my lifetime. I had, you know, I learn and interact with all these people through the core mechanism of economic price, right? So money basically helps me like price out each transaction and just deal with each of them kind of transactionally. I go to the doctor, I pay $1,000 and done with it and move on. Right. But what this breaks is this long term alignment. Right? Imagine you or your doctor, or in your wage, and if the doctor is not in your best interest and they're going to thrive in that village, the doctor is not going to thrive in that village.
00:44:59.694 - 00:45:41.042, Speaker B: And so there is this very tight long term alignment in old school systems that we've lost in this complex supply chains. And the way we could restore it is by using crypto as our coordination layer. And for example, when, you know, when you go to learn, you have, you know, education, you can give a portion of your future income to actually fund your education. And this will be really, really interesting. It would open up various things. So that's the scale of coordination for innovation that we're envisioning in like a 20 year period. It's just dialing back to what can be built today, and that's what we're focusing on today.
00:45:41.042 - 00:46:15.680, Speaker B: But there are all these complex societal problems which are at its heart incentive and coordination problems. And to the extent that we can solve it. Another example would be, for example, in AI, there's this big question about how do you incentivize open source AI? That's a big problem, because otherwise closed source AI could win. And if you think of it, what is it really? What you're trying to solve is fundamentally there is a coordination problem, which is I create something, I put it, if I just put it in open source, I don't really get anything from it, but other people can build new things on top of it.
00:46:15.872 - 00:46:35.324, Speaker A: It comes back to how do you incentivize open source as a whole before open source, before crypto, and the incentives for the world to build these common goods. It was hard to fund them in many ways. But can crypto solves that for AI and future innovation?
00:46:35.704 - 00:47:37.068, Speaker B: That's something that I'm super, super interested in. What kinds of new models do we need to actually ensure that there are two values here? One is the innovator needs value accrual, because the problem with pure public goods and pure open source is usually open source tilts the thing in favor of the people who already have distribution, if I have already the most distribution. That's why Amazon loves open source, because they can just put it, they just offer it as a native service on Amazon. And you wrote your DB and you just wrote and the open source stills it in favor of people who already have distribution. But the problem with closed source is of course that nobody else can permissionlessly improve your thing. And society improves when there is permissionless innovation. Can we break this trade off between permissionless innovation and value approval to innovators? And we already see crypto have like some, some way to solve it.
00:47:37.068 - 00:48:07.224, Speaker B: But I think we want to dive deep into this and we've coming up with new kinds of licensing models and all kinds of things where people can permissionlessly build on top of each other. But if you're building on top of somebody, you have to attribute and give value back a portion of your feedback to the source. So we call this kind of a licensing, permissionless derivatives license. We're working on all these cool things, but fundamentally going back to the core problem, how do you build the coordination engine for open innovation? That's what we're all about.
00:48:08.124 - 00:49:16.934, Speaker A: I love it. If you let me to ask you a last question, very last one, I'm sure you're going to love this one, because it seems that one of the primary approach of what became then Eigen layer was, okay, maybe how can we use like bitcoin as the most at the time the largest security pool in blockchains and reused the security to share it to other services. And last summer in Paris, by the way, you very invited. Next time there's a conference in Paris. We've seen this project and this guy, fantastic founder David Tse and this concept of bitcoin staking. And I was like listening to some of your interviews, I was like, oh, but this is very similar to maybe what Schiemann had in mind in the very beginning. So what do you think of bitcoin staking or Babylon in that case, or any other projects?
00:49:17.274 - 00:49:49.134, Speaker B: Yeah. David Shea is my long term friend and collaborator. He was also my advisor at Stanford and Berkeley. Long pad back and we got into crypto on the same day. I remember taking a walk with him in San Francisco and plotting out what the big problems we need to solve over the next few years are. So really glad that David's doing this. The first academic paper on Babylon I co authored with David Shea.
00:49:49.134 - 00:50:41.572, Speaker B: How do we think about the difference between bitcoin staking and eat staking? Number one, bitcoin is of course a much more bigger market cap asset. That's good. It's even more lengthy than Ethereum. That's awesome. But there are problems with bitcoin. The problem is the bitcoin blockchain is very, very limited programmability. And what David has done is figured out how to impose one important slashing condition in bitcoin, which is if you sign a block and sign an alternative block, if you have two headers with the same block number but different block hash or whatever on your servers, then he uses this complex cryptography called one time signature to basically make sure that you can get slashed.
00:50:41.572 - 00:51:10.682, Speaker B: It's a new invention to do that slashing condition. Amazing. You know, you know, you need a David share to do that. But the thing is, Ethereum is fully programmable, so I don't need to, the people don't need to invent new cryptography to invent new slashing conditions. I want to slash you for running an AI program wrongly. I can write a slashing condition on Ethereum. I want to slash you for doing arbitrary things.
00:51:10.682 - 00:51:34.478, Speaker B: Again, because Ethereum is choosing complete and bitcoin is not. So that's one difference. The scope of flexibility and programmability on Ethereum is just orders of magnitude of. But on the other side, what works for something like Babylon is bitcoin has very little opportunity cost. You can't do anything with BTC. What are you going to do? You can't stake it. You can't do anything else with it.
00:51:34.478 - 00:51:59.424, Speaker B: So that works very much in favor of Babylon, which is that I can actually stake BTC and get something where I got nothing in a trustless manner before. And then finally, Bitcoin is a little bit of a hard community to navigate. They're not pro open innovation or anything. They see an NFT and they think somebody is vampire attacking.
00:52:00.604 - 00:52:16.196, Speaker A: And I guess that's one of the main reason you didn't escape bitcoin, because of the hardness of the problem. You expect bitcoin because of the community at first, right? Because they were less in kind to innovation for sure.
00:52:16.260 - 00:53:01.780, Speaker B: That's definitely one important dimension for us because, you know, just going back, dialing back the story here a bit. Vitalik wanted to build Ethereum on bitcoin, and bitcoin guys hated it. And so Vitalik was forced to build Ethereum blockchains. And when we wanted to build again, not only Ethereum didn't feed it Ethereum's first general purpose and programmable that you can actually do it. Ethereum's own roadmap is full of permissionless innovation. Like first allowing anybody to build a smart contract application, then allowing anybody to build a L2 like this is just a natural extension of the Ethereum ethos. So there's those two things.
00:53:01.780 - 00:53:30.444, Speaker B: But another thing that works in Babylon's favor is there are not many layer tools. So Babylon could be the like bitcoin kind of L2 tech ecosystem, which is really amazing. So these are different ecosystems, different projects, different markets. But, you know, we are like, people ask me whether I'm a maxi or what, and my answer is I'm an open innovation maxi. So happy that doing that. We go.
00:53:33.984 - 00:54:05.212, Speaker A: Simone, thank you so much for your time for the discussion. I really loved it. It was the first episode of our Aviators series that will open the coming weeks and I was so excited to have you as the first guest. And thank you again for this fantastic project that you offering to the world eigenlayer to thrive, collaborative innovation. Thank you, man.
00:54:05.268 - 00:54:29.734, Speaker B: Thank you so much. Really appreciate it. I'm the fate of the project and people think I'm doing a lot, but really we have an amazing team, Tina Rash, this thing today, and we have really, really amazing team just doing all this stuff. But even more broadly, we have an amazing community of EBS builders. And to the podcast listeners, please do dive into the later episodes and listen to some of the cool new things people are inventing.
00:54:30.834 - 00:54:41.606, Speaker A: Fantastic. And I hope to see you in Paris or other places in the world, but you'd definitely be invited in Paris anytime. Thanks.
00:54:41.670 - 00:54:47.214, Speaker B: Really appreciate it. Les Low, thank you so much. Take care, bye.
