00:00:04.480 - 00:00:23.566, Speaker A: Thank you to the kiln team for having us again. This is always a great event that you guys put together. So super excited to chat with you guys today about where Eigen Lair is at. I'm going to go partially on the slides and then partially just talk. So we're going to do a little bit of both today. I'm Vyas, by the way. I'm one of the founding team members at Eigen.
00:00:23.566 - 00:01:16.750, Speaker A: Been with the team since day one, so about three years now. And yeah, this talk today is going to be mainly around the intersubjective token, but also what we see is the purpose of that and kind of the big picture goals of what we're trying to do at Eigenlayer. And where does Eigen layer fit into the broader ecosystem as well. So I'm going to kickstart with kind of looking at blockchains today. Overall, one of the main things that we see is blockchains are really effective digital coordination systems. And if we want to go truly big picture, we look at the rate of innovation of any society is directly correlated to its ability to coordinate effectively. Let's just go through history real quick.
00:01:16.750 - 00:02:28.050, Speaker A: We can see examples where in the Roman Empire we had aqueducts and road networks that dramatically improved trade, right? We saw in the greek empire that we saw the first attempts at democracy, which weren't representative. So yeah, sure, it added a lot of bloat to people's lives, but we saw a dramatic improvement in the arts, in civic culture, in involvement, right? And eventually, like, we got all the way down. And you can see throughout moments in history, whether it's the railroads being built in America for goods and resources, or why cities in Europe are built around rivers, these aspects of our ability to coordinate as a society, that improved our ability to innovate. And we then moved to the information coordination era, which you can say, even started with something like, well, you could technically say it started with the invention of writing and text through hieroglyphics and things like that. Eventually we had the telegraphs, radio communication, film, et cetera. And now we've moved to a completely different digital communication coordination world. And yet somehow some of the primitives have not changed.
00:02:28.050 - 00:03:21.608, Speaker A: We haven't necessarily built these new systems to be able to handle the scale and the impact of coordination. So coordination today, there's a lot of great things that we're doing. We have open source, which I think is a great example of how coordination has dramatically improved innovation. Linux started off as just a collection of a set of libraries, and over time, expanded and evolved into a certain set of pre specified libraries. And then people started building their own forks. People started, you have all the distributions, et cetera, or GitHub, where people can just go and contribute to open source code bases like push whatever we're trying to build as computer scientists or as a society forward. You have crowdsourcing platforms like Kickstarter, where people can go and encourage the community to coordinate and literally fund innovation.
00:03:21.608 - 00:04:10.610, Speaker A: Right? Scientific research networks, these are all examples, but there are some things that are broken. What's broken is we can see examples of misinformation. We can see examples of highly rent seeking behaviors from some of these existing digital communication protocols, examples of which you can see in X or Facebook, or some of these censorship driven arguments that you see why social blockchains matter. The other problem is also fragmentation. We have multiple different communities. We're not able to coordinate effectively enough. There's a lot of dimensions of coordination digitally that I think, we think at Eigen layer, that blockchains can be incredibly useful for.
00:04:10.610 - 00:04:52.010, Speaker A: So let's go into a few of those dimensions, right? You have financial coordination, which is what blockchains start off as primitive systems that are trying to focus on and outside of the l two ecosystem. I look at that mostly as something like ethereum, ethereum, bitcoin. Bitcoin pioneered decentralized trust. Then Ethereum came along, had a Turing complete virtual machine. Now you pioneer modular, decentralized trust, where people can actually start building on top of this financial primitive. And now that's financial coordination that we're still actively working on as a community. But there's still plenty of other coordination problems.
00:04:52.010 - 00:05:52.080, Speaker A: We have social coordination, which is the purpose of social fi. We have physical coordination, like DPIn, physical infrastructure networks. So there's still a lot of dimensions left to be explored. But the reality is, if we can find ways to coordinate more effectively digitally, then we can start improving the rate of innovation much faster. And that's Eigen layer's big picture focus, is how do we increase the rate of innovation on Ethereum, we started off with this project because we saw two main things happen. One, in the last cycle, we saw plenty of debt spirals, where projects had their entire security determined in their own token, and those tokens would fail them for security when they needed them the most. Because if your token is in your market cap and the price of your token is falling as your market cap is dumping, let's say your bridge gets hacked, or there's an exploit, or somebody pushes the wrong code and all of a sudden you have this cascading spiral effect, which is extremely unhealthy.
00:05:52.080 - 00:06:43.320, Speaker A: The other problem was by launching that token, by creating this own market cap for security. Let's say I wanted to experiment on just the consensus layer of blockchain. So in the modular architecture, you have multiple different modules, consensus execution, settlement, data availability. In order to experiment on one of these dimensions, you would need to go and launch and bootstrap your whole trust network. So in addition to what your focus might have been, which is, hey, I'm really good at consensus protocols, and I want to innovate in that dimension, I also need to worry about all these other things that are actually, like, divergent from my focus. So the most important attribute of that is the innovation. And the value was leaving the Ethereum ecosystem to these alternate systems.
00:06:43.320 - 00:07:28.494, Speaker A: And Eigen layer is a mechanism by which we wanted to bring all of that back in, because we want the ethereum ecosystem to grow. And currently we see this play out much later, where l two s are designed to offload computation and scale Ethereum. But today, l two s compete for the same set of resources, for the same devs, for the same users. And we're not thinking about the delta that it's having on Ethereum anymore. We're thinking about the delta that it has on an l two specifically. Whereas, you know, I think Henri from Starkware yesterday said something beautiful on a panel. There's an adage which is like, you know, my brother's before my cousins, my cousins before my neighbors, my neighbors before my countrymen, and so on and so forth.
00:07:28.494 - 00:08:36.122, Speaker A: So, yeah, sure, we see these l two s being somewhat competitive, but we're all in the ethereum ecosystem, right? We see the ethereum ecosystem and we say, oh, ethereum is competitive with Solana, modular versus monolithic. But let's just say there was regulatory pressure tomorrow against Solana. We would all unite, because at the end of the day, we're part of the crypto blockchain ecosystem. So we need to start thinking about what is the delta that we make for the larger ecosystems at play and not necessarily competing on individual games, right? We want to be competing on this, like, much larger, much more like what we call infinite sum games, because every single player has access to expand the entire pool. So let's bring as much of that value, as much of that innovation back to the ethereum ecosystem as possible and coordinate much more effectively. We can start innovating faster, start making a dent on actual users. So I think that's, like, the most important part of where coordination is you have applications today which most of us still interact with web two applications, like pretty much our entire lives.
00:08:36.122 - 00:09:16.196, Speaker A: And these web two applications are comprised of these SaaS services, right? You use Oauth for your sign in. You use to be called Braintree, what is it now? Stripe for payments and things like that. So you probably have some sort of ML backend module that you pay for as well. And the reality is, we talk about modular versus monolithic. But modularity was just the narrative. We moved into the service based architecture of Web three, which was a primitive that existed in web two for years. And people have been doing already where, hey, if you're a builder, don't build everything completely redundant.
00:09:16.196 - 00:10:12.532, Speaker A: Identify who's building the set of services that you need, pay for those services, and identify your value proposition and go get those users. So the real focus is we want builders to experiment and we want Ethereum native development and Ethereum native value distribution. So, you know, and this is where I'm going to hold off on the slides for a second, because before I go into how we want to expand the application purpose, let's talk about, you know, what sort of coordination problems that we're actually tackling with these applications, right? Today we talked about financial coordination, and that's a dominant factor. But there's also social coordination. And social coordination on Ethereum can be quite risky, right? We have this idea of, let's not overload ethereum consensus. And the idea of consensus is built around the risk of slashing. You can potentially lose your funds if you misbehave.
00:10:12.532 - 00:10:46.140, Speaker A: But how do you know who actually misbehaved? Sometimes that causes a fork, a social fork. So there's really different types of faults that we look at in terms of slashable faults. There's objectively attributable faults. You can, you know, objectively verify that somebody didn't do something correctly. You were supposed to get a computation. Let's say the result of that computation was supposed to be, you know, x and you got x squared, right? So we can, like, clearly identify that you were incorrect. Cool.
00:10:46.140 - 00:11:49.154, Speaker A: Then there's subjective faults, which are, quite frankly the most difficult to tackle, right? Something like, what's the best restaurant in Brussels? Highly subjective, right. Everyone in this room will have a slightly different opinion based on your own preferences. There's no real way for us to identify social consensus on that because the reality is we might have subgroups that have social consensus. We might have a few people who say one thing, a few people who say another thing, but who's objectively correct is not even worth trying to discover to some extent, right? And then in blockchains, you have this thing of this idea of, like, intersubjectivity, meaning how do you convert something that is, you know, subjective into objectively attributable? And I actually like to look at Galileo's heliocentric model to geocentric model of the world, right? We used to think that the earth, you know, all the planets and the sun revolved around the earth. And Galileo came out and said, no, this is completely broken.
00:11:49.282 - 00:11:49.762, Speaker B: Right?
00:11:49.866 - 00:12:21.120, Speaker A: We need to move to a heliocentric model rather than a geocentric model. And he was quite literally slashed for his thoughts, right? Thrown in jail, killed, highly, heavily persecuted. And it took social consensus and a moment of intersubjectivity for society to recognize, hey, here's this, like, subjective truth that a few people are saying is one opinion, and here's the objective truth that we all hold to be true. And how does this migrate from this state to this state?
00:12:21.420 - 00:12:22.160, Speaker C: Right?
00:12:23.780 - 00:13:59.596, Speaker A: Another funny example I like to look at is like, rap beefs, if, I don't know if who followed the Kendrick Lamar versus Drake beef, but like, who won that beef, right? Highly subjective, somewhat can achieve an objective result based on the discography that each artist puts out. And we're in the moment of inter subjective truths because of both parties coming out with information and going against each other. We can look at, does that problem matter for blockchains? Probably not. But does it matter for these artists? Does it matter for the community? Does it matter for the social coordination of music? Maybe. Right? So we have to start looking at some of these problems in blockchains, which are far more intersubjective. And so in order to prevent these applications that are borrowing security from Eigen layer, who have Ethereum restaked onto their service, their AV's actively validated services, who have these moments of intersubjectivity, we don't want to cause a massive social forking events on Ethereum native, because we don't want to be slashing, you know, native, Ethereum eth, every time that. Let's just take the data withholding problem, for example, in data availability, where somebody says they'd served the no, the node served the recipient with data, someone else says, hey, I wasn't served the data, who's objectively correct, right? And sampling is one methodology by which you can achieve some of that guarantee, but sampling is a probabilistic guarantee.
00:13:59.596 - 00:15:19.682, Speaker A: What you're saying effectively is like, hey, we have enough people that achieved a statistical observation that the data was made available, and we sample enough that we're willing to take that trust assumption. And that's one way of approaching it. Truly sampling would be a greater approach if you did randomized sampling, meaning you constantly scrambled your IP address, so there was no way for the node to know that it was me that was requesting or it was you that was requesting. And so, like, you can't have the node doing any form of censorship. But again, are you comfortable with the probabilistic trust assumption, or would you rather have an economic penalty that can be tied to this behavior? And so that's where the intersubjective eigen token comes in and can be used for resolving these without putting a burden on the Ethereum native protocol, because we don't want to be doing that every time we run into an event like this. So that's kind of the big picture of where the Eigen intersubjective token will fit into like our larger scheme of what we want to build, because it is a way to resolve some of these faults and make things that are subjective into objectively attributable. But it's still part of our greater vision in terms of how do we start thinking about converting cloud to crypto.
00:15:19.682 - 00:16:34.526, Speaker A: I brought up digital coordination. And why does digital coordination even matter? Is we saw that these existing solutions can engage in very rent seeking behaviors, or can engage in misinformation. Okay, how do we create economic penalties? How do we create, you know, fully self governed systems, aka like fully decentralized systems, where the parties of the community govern themselves? And how do we bring all of that value into the ethereum ecosystem? So those are kind of the main key attributes of why it matters at all, to digital coordination. And then the next step is how do we convert the existing community of builders and users, which mostly still live on web two, into our ecosystem? And this is why I brought up these l two s are very competitive, but we need to start thinking about the delta of blockchains. What is the delta year over, year of user adoption, user experience improvements. You know, there's a beautiful eip coming that is looking at elliptic curve pairings for Face ID. And so we can stop signing 32 fields on our ledgers every time we need to make a transaction.
00:16:34.526 - 00:17:30.910, Speaker A: And I'm clicking there and like it, time's up, right? Nobody's ever going to actually start using this if that's the user experience that we're delivering. But if we start pushing to some primitives that people already know, well, then you can argue that face ID has too many false positives, and you run into a security concern there. And yes, there is definitely a security concern. But again, this is where we see things as they don't necessarily have to only be cryptographic. You can combine a hybrid model of cryptographic security and crypto economic security by creating a cost of misbehavior and slashing conditions. So you can end up with, like, more robustness in the security model, even if you know you're losing some, some of that pure cryptographic security. You can supplement that with crypto economic security and create a high cost of corruption or a high cost of misbehavior.
00:17:30.910 - 00:17:56.214, Speaker A: And as long as the cost of corruption outweighs the intended profit from the corruption, you have a self functioning positive system, which is kind of the big picture thesis for Eigen. So we want builders to experiment. We want Ethereum native development. And we have a far more separated perspective when it comes to where applications are at today.
00:17:56.382 - 00:17:56.734, Speaker C: Right?
00:17:56.782 - 00:18:38.854, Speaker A: Crypto apps today are predominantly defi, are predominantly part of that financial coordination dimension I mentioned earlier. But there's also social coordination. There's also physical infrastructure coordination. There's a lot of dimensions that are left. And the reality is you have the amount of value that's embedded in these transactions where the demand for security is much higher. And in gamefi or social fi wherever, let's say Edgar and I are playing chess, and we decide that we want to play this chess game on chain. Well, does everyone care about every single state update to know what moves we made? Maybe, maybe not.
00:18:38.854 - 00:19:37.610, Speaker A: Is it worth putting on the Ethereum L1? Definitely not. That's too expensive. But do people want to know what the final result was? Most likely, because maybe there's a secondary betting market that said that took a position on Edgar winning, and they need the result of the state in order to complete that bet. So now you have demand for security, which is different from the demand for throughput, because in order for us to be able to play that game, we need a very high throughput system to be able to settle that real time. But the demand for security in every single state update between me and Edgar is negligible because it really doesn't matter. And so we have to start looking at it as the value per bit, meaning how much value is embedded in each bit of call data for a transaction or a bulk of transactions that determines what the security dynamics need to be. So there's some values through what crypto does today, which is on chain native incentives.
00:19:37.610 - 00:19:55.204, Speaker A: Our thesis for Gamefi is off chain gameplay on chain incentives. Let's not change the user experience and gaming experience and only build on chain games because nobody likes playing them. Everybody likes playing off chain games because the user experience is just way better.
00:19:55.332 - 00:19:55.956, Speaker B: Right?
00:19:56.108 - 00:20:36.740, Speaker A: But we can create native on chain incentives that can allow for user governance or allow for permissionless innovation and things like that. But the thing is, cloud apps today need high throughput, right? Crypto devs are limited, sometimes by block space, and we've had multiple cycles now where they've been so limited by block space that we've created the cyclical feedback loop of limited creativity. If every time I tell you that you can only draw within the lines, at some point I can take the lines away and you'll still only draw within the lines. So we need to like reinvigorate people to start thinking about what would you build if block space was no longer a constraint?
00:20:36.920 - 00:20:37.572, Speaker B: Right.
00:20:37.716 - 00:21:46.560, Speaker A: We need to start building quickbooks on chain. Right? That was one interesting response that I got where, hey, let's completely start doing far more high throughput, high bandwidth, but still highly financially driven, high value per bit transactions that can happen on chain if we do have high throughput. So yeah, I'm just going to click through this real quick. Eigen layer has this value prop of let's build in Ethereum native protocols. Let's share security because it's very unclear, as I mentioned, how much security a project needs. The value per bit helps us determine that metric, because again, if it's Gamefi compared to DeFi, well, the security concerns are completely different. A bridge is likely going to need way more security than a gaming roll up because the bridge is far more susceptible to attacks and far more susceptible to just misbehavior, whereas the gaming roll up doesn't necessarily have a lot of embedded value in each transaction.
00:21:46.560 - 00:22:33.034, Speaker A: So maybe their security concerns are different. But the interesting part is these applications, sharing security helps reduce the overall cost for everyone in the system. So now shared security becomes like a cost efficiency dimension as well. So you end up with like far more, far more intricate ways for us to be able to tackle this. And, you know, this slide talks about insurance, and this is something that we're still working on at Eigen. The best exam, the best explainer for this would be Shreya Ram's talk at Stanford blockchain conference last year, where he goes into stake sure, which is our Ethereum native insurance protocol that we want to deploy. And we're currently in design and specing it out.
00:22:33.034 - 00:22:47.394, Speaker A: But the idea is at some point we'll be able to offer bridges insurance to be able to cover assets in transit, similar to the way when you ship a package on DHL, they ask you, hey, what's the value of the package? And would you like to insure it up until a certain amount?
00:22:47.522 - 00:22:47.834, Speaker C: Right.
00:22:47.882 - 00:23:36.950, Speaker A: That's a very similar mental model that we want to approach with wherever bridges can then buy that security and protect assets in transit. Similarly, that can be applied to other use cases. So we have this category of ABS's and we have plenty of different applications that are being built right now. So I'm not going to go into every single one. But you have roll up services, which are value add modules or services that can be integrated for roll ups to expand functionality and use cases. You have coprocessors that are bringing more interesting experimentation in the VM space. Cryptography with trusted execution environments, fully homomorphic encryption, account abstraction, which will help us solve the UX problem in blockchains.
00:23:36.950 - 00:24:26.682, Speaker A: And of course, proofs. At the end of the day, cryptographic proofs are still going to be needed, proof of machine hood, proof of identity, which, you know, projects like Worldcoin are tackling or modular social identities. Like, I think there's one called camp network, I think Spruce ID is another one. Right? You have projects in the space that are actively working on solving these different problems. But going back to my earlier point, which is, hey, if we wanted everyone to experiment as fast as possible, we need to coordinate more effectively to drive the innovation. Because if everybody was trying to bootstrap their own trust network and launch their own token and build their own set of operators and constantly just build this like redundant bloat, then our coordination dramatically suffers and our innovation dramatically suffers.
00:24:26.826 - 00:24:27.510, Speaker C: Right?
00:24:30.250 - 00:25:36.318, Speaker A: So again, you have eat staking and you have custom staking. Custom staking would involve the intersubjective Eigen token, where we're not putting pressure on native Ethereum eth to be slashed every time that there's a minor slashing event. And so we need to find balance there is the real point. The mainnet has launched. We have hit some of our targets. I think we're at about $17 billion USD, about 5 million ETH in TBL at the moment. And we have multiple avss live, whether it's, you know, internally built, like Eigen Daevdev, or externally built by a bunch of amazing teams that are all venture backed and have their own bootstrapping and are fully functioning businesses at this point, along with an incredible set of operators like kiln like figments, the luganodes of the world who are all just helping serve these services that actually need validation and being written to the l one ever so frequently because they have interactions with native Ethereum.
00:25:36.318 - 00:26:17.144, Speaker A: So there's very interesting integrations happening with Lagrange who is doing an integration with base in order for their approver network. Or you have witness chain, which is a watchtower network and a deep in coordination layer. I think they're the second or third largest AV's on Eigen at the moment and they're focused on deep in coordination. They want to build the ecosystem and the standardized platform for all deep ins to be able to deploy. Which today most deep ins deploy on Solana. And Solana has a high initial bootstrapping. But we haven't necessarily seen any long tail projects.
00:26:17.144 - 00:27:00.168, Speaker A: I've been kind of roasting the l two community for the last few minutes, but I'm going to give them some credit here. They are the perfect fit for consumer apps. App specific roll ups do make sense, but again, let's not think about how do we just grow the l two s. But how do we make a dent in bringing users in? So l two s have a lot of interesting value props. Because the sequencer can give instant confirmation we can eventually move into like a completely account abstracted, gasless transactions. We need a lot of experimentation in the VM space. We have projects like Movevm, like Facebook who are active, like movement Labs who's bringing what FacebookVM was to blockchains.
00:27:00.168 - 00:27:28.786, Speaker A: We have Cartesi who's deploying Linux on Ethereum. We can ask why does that matter? But the reality is there's way more Linux applications than there are solidity based applications. So why aren't we thinking about rapid deployment, rapid innovation, bringing those users in rather than thinking about building something that's from the ground up having users come and meet us where we're at rather than meeting the users where they're at.
00:27:28.898 - 00:27:29.242, Speaker C: Right?
00:27:29.306 - 00:28:29.646, Speaker A: Users today already exist on these existing systems and yet we are trying to bring them to our primitives. We need to be focused on meeting them where they're at, identifying what they need. And the reality is, to me it doesn't matter if they experience a crypto native user experience that does not matter to me because the reality is the underlying infrastructure could be utilized without them ever having to touch a crypto native user experience. And to be frank, that would be ideal. Abstract away as much of it as you can and let them actually interact with our systems where it matters and not put any additional burden on their experience. That's the real goal. But why do all this? On Ethereum, we have the best builders, we have the best community, we have the best existing composable infrastructure, but we're not coordinating enough.
00:28:29.646 - 00:29:23.440, Speaker A: The Ethereum community does not coordinate at the same pace or at the same ability as the Solana community. Today we had something as simple as the blinks announcement, just like a week or two ago, and you saw the entire Solana community converge together in order to push this one thing forward. When was the last time we saw an example of multiple l two s all congregating in order to push an initiative for the Ethereum protocol forward? It's been quite a while, and the reality is a lot of these things happen because of incentive alignment, not necessarily innovation alignment. And those are two different dimensions. Nice to meet you, too. Again, roll ups have certain problems today, and we can solve them. This is all going into, like, some of the specifics, but the reality is, like, cost needs to be phased out for these builders.
00:29:23.440 - 00:30:00.904, Speaker A: Developers don't want to have tinkering costs. You need to make tinkering innovation cost zero, and you need to maximize their ability to go to market. And then they can create, distribute, and then as a result of creating and distributing value, they can eventually capture value for their protocol. And that is the sequence that we need. It's not create, capture, and then distribute, but rather create, distribute, then capture. Because would you rather have a small piece of a really big pie or a big piece of a really tiny pie?
00:30:01.032 - 00:30:01.512, Speaker B: Right.
00:30:01.616 - 00:30:46.294, Speaker A: That's the question that we have to ask. And if we just continue to, like, focus on individualism, then the collective will suffer and the coordination will suffer. And as a result, innovation, user adoption, all these attributes will be slower. This is specific to eigenda, and eigenda is now on Mainnet. I'm actually just going to go into this real quick. I'm not sure how we're doing on time, so I'm going to kind of speed up the pace a little bit here. But, you know, the reality is, like, roll ups and l two s are struggling with the problem today, where they have to compete with l one s for mind share, they have to compete with l one s for tokenomics, et cetera.
00:30:46.294 - 00:30:56.716, Speaker A: And it's because costs are high. Sometimes their tokens don't have utility. You know, they're offloading computation, but they're not offloading data.
00:30:56.878 - 00:30:57.296, Speaker B: Right.
00:30:57.368 - 00:31:42.126, Speaker A: The cost of writing to l one is extremely expensive. So we want to create some mechanisms by which rollups can use their native token for effective value. Propositions, we want to create proper incentive alignment for them to pay to the Ethereum community. So whether it's borrowing security through Eigen layer or paying for DA fees to Ethereum stakers and operators, again, there's plenty of DA solutions out there. So why Eigen da? Because it's Ethereum stakers and Ethereum operators that are holding your data and have the crypto economic guarantee of serving your data. If you want to write to other DA solutions. And for the record, these are all out of protocol DA.
00:31:42.126 - 00:32:49.604, Speaker A: The only in protocol DA is writing to Ethereum l one and going back to that value per bit versus throughput conversation. If you're a dex or, you know, you're an order book, and you're dealing with like a high, high value in the hundreds of millions of dollars, maybe eat the cost of writing to l one and write in protocol because the value is so high. However, if you're an l, you know, if you don't necessarily have that high value per bit, then why are you incurring these costs constantly? Especially if like we want to focus on consumer applications, which we made the position that they might not have as much value per bit. So we need to create mechanisms by which these roll ups can then become competitive and outrun l one s. Otherwise we're going to run into the same redundant infrastructure problem. So we have Eigen DA, which brings ethereum centric security, it brings all these services to eigenda rollups. Eigenva rollups can then be these app specific rollups that have very specific use cases, can actually make a dent in onboarding these users.
00:32:49.604 - 00:33:26.312, Speaker A: And then you have this set of ABS's actively validated services that can come in and provide all these auxiliary services. We have two FA authentication, we have Oracles, we have keepers. We have all these different proof mechanisms. That big chart of all the ABS categories that I showed you, which are just a subset of everything that's being built today. We have the entrant of crypto AI, which I think is one of the most interesting convergence points right now. Sentient just announced their fundraise, which I think everyone saw. We have ritual, which is a pretty big partner of ours and has been in the space for a little bit.
00:33:26.312 - 00:34:16.930, Speaker A: We have projects like Bagel network, which are doing AI matching. Essentially they're a matching engine for AI services. So we need to start thinking about how do I these app specific roll ups, similar to the web, two service based architecture, can identify which services they need and integrate them. And we're moving to bringing as much of these use cases back into our ecosystem. So that's all we have for you today. And we have a lot of upcoming excitement, exciting internal projects. External ABS's a massively rapidly growing ecosystem, and really the focus is how do we go and make a dent on industry wide consumer adoption? Thank you so much.
00:34:22.270 - 00:34:42.080, Speaker C: Thanks, Maya. That was a really great talk. The concept of the intersubjective fault in the token is pretty abstract. Is there like a canonical example that you've actually seen in practice with the current Avss they're running where it's like, well, we had this inner subjective vault. This is what caused it. This is how the inner subjective token can actually help to rectify the fault.
00:34:42.200 - 00:35:25.106, Speaker A: Yeah, definitely. Great question. And I would say the data withholding problem that I went to is probably the, you know, the obvious use case today, which there are other solutions for. Right. Celestial uses, data availability sampling, which I mentioned is probabilistic, but we're trying to come up with a crypto economic solution for that. They actually also have a crypto economic solution for it. But the reality is it goes back to how do we do something that doesn't overload ethereum consensus? Because again, these are all Ethereum stakers and operators that are supporting these services, not your own new native token for your own blockchain, and so on your own blockchain you can do whatever you want and you still don't impact Ethereum.
00:35:25.106 - 00:36:00.310, Speaker A: But in our situation, we can't necessarily do that. And like, but yeah, the data withholding problem where someone says they serve the data but they didn't actually serve it, or someone, you know, it could be any of the parties that are misbehaving. That's probably the most obvious, straightforward implementation that we will have of the inter subjective token. But as we expand the ABS ecosystem, we're, we're about to put out some explainers on what are some of the faults and what are some of the like, faults across the AV's categories. Yeah. Thank you.
00:36:04.130 - 00:36:20.790, Speaker B: Thank you for your presentation. Do you think that there is any. How do you explain why, like, there was no, like, big project in the history of crypto that has ever launched an intersubjective fault token like Eigen for their own protocol.
00:36:21.890 - 00:37:14.652, Speaker A: So that's a great question. I think it's tough to say exactly why no one did it, but I would go more so in terms of timeline and history, you have proof of stake networks which are, in the large scheme of things, relatively new. We moved from proof of work to ethereum proof of stake. Just a few years ago, proof of stake brought with it slashing, and slashing brought with it a lot of risk. And this is also why Eigen layer slashing isn't live yet, because there is a lot of risk and there is a lot of very careful considerations that need to be taken into place. Best way to start is with highly objectively attributable slashing, which has already happened. Right.
00:37:14.652 - 00:37:45.838, Speaker A: We haven't really had massive slashing events on Ethereum, thankfully. Let's also knock on some wood. Right. But you know, there's objectively attributable slashing, and then this recognition of, okay, there's this next set of faults that do existential. So I just think it's a timing thing, to be honest. Like, we're still very early in the development of these systems and it's a maturity problem. Yeah, thank you.
00:37:45.838 - 00:37:46.690, Speaker A: Of course.
00:37:51.910 - 00:38:08.670, Speaker B: About your code base, I wanted to know if your code is open source, is open to contributions, and if it's open, how would you qualify or describe the current community of open source contributors?
00:38:09.010 - 00:38:46.310, Speaker A: Yeah, great question. We are on a BSL license, so we will be open sourcing everything. Parts of our code base are already open and people can contribute. We've had plenty of great community members come in and offer suggestions to our code base. We highly recommend everyone to go check out our repos. If you're a strong developer and you want to contribute to our ecosystem, whether it's in an AV's or whether it's on the Eigen layer protocol itself, we're more than open to that. And more often than not, if you end up contributing highly valuable things, there's a high possibility that we would want to hire you.
00:38:46.310 - 00:39:33.138, Speaker A: Why not bring someone that talented in house, if possible? Definitely. Why BSL? Because we still need to make sure that these systems are robust before we fully open source them. I think there's like, when you're dealing with people's money, and when you're dealing with slashing conditions, you don't want people tinkering immediately. You want a robust system with a flywheel that can self sustain, and then you can allow for experimentation. If you allow for experimentation. Without that robustness, you can really lead to, like, calamitous slashing events that is inherently not good for the ecosystem. So that's kind of why there's like a stagger effect on fully open sourcing versus, you know, building things for resiliency.
00:39:33.138 - 00:39:38.070, Speaker A: Right. And I think at the end of the day, it's about agility versus stability.
00:39:38.410 - 00:39:38.842, Speaker C: Right.
00:39:38.906 - 00:39:50.050, Speaker A: And stability is required to kickstart the flywheel and agility is required to continue the flywheel, and so we're actively balancing that trade off.
