00:00:07.760 - 00:00:20.006, Speaker A: Hello, everyone, and welcome to a new episode of the keen risk taking rendezvous. Today we have Ellie, systems engineer at Espresso, and I'm joined by Ben Rodriguez, my counterpart at convince. Guys, how are you doing today?
00:00:20.070 - 00:00:21.954, Speaker B: I'm doing great. Yeah. How are you?
00:00:23.534 - 00:00:29.174, Speaker C: I'm doing awesome. Yeah, let's. Thank you for having me back. It's going to be a very fun conversation.
00:00:29.714 - 00:00:40.534, Speaker A: Yeah, I'm excited for this one. So, Ellie, could you start off by introducing yourself? How did you end up working in blockchain in general and then espresso?
00:00:41.274 - 00:01:10.954, Speaker B: Yeah, so I found out about blockchain while I was in college. I ended up taking an intro to blockchain class, just kind of on a whim, and I ended up really, really enjoying it. So from then on, I knew I wanted to work in blockchain. And then how I ended up at Espresso was a while ago, Espresso was actually making a slightly different product called configurable asset privacy. And I saw this and I thought it was a really neat product. So I reached out and wanted to work with them and, yeah, had the rest of history.
00:01:12.374 - 00:01:32.374, Speaker A: Great. Perfect. So today we're going to be talking about what is sequencing in the context of pull ups. Eddie, could you share with us what's the current state of roll up sequencing? What does it look like right now, and why is it a problem, and why is espresso trying to solve this problem?
00:01:33.074 - 00:02:08.932, Speaker B: Yeah, so there's two main issues with sequencing today. So right now, roll ups used centralized sequencers, and this means that it's one party who does all of the sequencing. And by sequencing, I mean it's the party that decides the order of transactions within a roll up block. So right now that's only one party. It's centralized, and this leaves that party open to potentially censoring transactions. Maybe charging really high fees for transactions are also just going down and having liveness issues. So that's one aspect.
00:02:08.932 - 00:02:43.994, Speaker B: The other issue is that these sequencers are for only one roll up at a time. So it's very difficult to do transactions across rollups and to get like an atomic transaction across rollups where you're guaranteed that both sides of the transaction will execute. That's very difficult to do today. And often what happens is that you have to wait a long time for these transactions and they may fail. And it's a pretty poor user experience. So that's the state of sequencing today. So what espresso is doing is we are building a marketplace for shared sequencing, which I can explain more and then also a finality gadget.
00:02:43.994 - 00:03:19.384, Speaker B: So these two aspects of our product, basically they solve these issues, right? So they allow shared sequencing among multiple roll ups at the same time, which gives really good user experience. They also allow decentralized sequencing so you don't have a single party doing all of the sequencing. And then finally they allow fast finality so you can get these really good pre confirmations that your transaction is included without having to wait all the way until it settles to Ethereum. So that's kind of a good summary of the state of sequencing today and what espresso is trying to do.
00:03:20.364 - 00:03:30.384, Speaker A: Great. And you mentioned that Espresso was focused on another problem before. Could you share a bit with us, like when you guys decided to pivot your strategy?
00:03:31.644 - 00:04:22.134, Speaker B: Yeah, so this was before my time joining Espresso. Yeah, a little while ago, Espresso was working on something called configurable asset privacy, which was a way to have privacy, but still allow maybe certain people to have certain viewing rights into an asset. And then from there, though, the question inevitably arose, well, how are these assets going to be fungible with other assets like regula EtH or USDC? Then this led espresso to the shared sequencing problem, which is, well, if you want to have these assets be fungible and you want to be able to move these assets around in like a useful way, you need to have some sort of a shared sequencer. So then from that, espresso kind of pivoted to becoming this marketplace for shared sequencing and solving and solving this new problem.
00:04:24.194 - 00:04:59.904, Speaker C: Sweet. It's very interesting. And maybe go a little bit, if you can go a little bit deeper into this sequencing marketplace, because one of the things that like, you know, that we see a little bit is that maybe like, you know, be like larger roll ups, you know, not naming any names, may want to like, you know, manage like the sequencer, like decentralized sequencing themselves. Right? So like, you know, what exactly is like this, like shared this sequencing marketplace? And then like, you know, what does espresso do differently and how does it incentivize, you know, potentially, like, folks to actually opt into this marketplace?
00:05:00.604 - 00:05:39.374, Speaker B: Yeah, that's a really, really, really great question. So I'll begin by explaining what the marketplace is. So the marketplace is an auction, essentially. And basically each roll up can decide to auction off their sequencing rights on a per slot basis. So a slot is just like some set of time. So, and in this auction, um, you know, people can bid and they, the highest winner will be the one who earns the sequencing rights and so what's neat about this marketplace and Espresso's design is a couple of things. So one, the revenue from this auction is actually returned to roll ups.
00:05:39.374 - 00:06:30.134, Speaker B: Um, and so this is one of the really important things that, you know, say a roll up, it's like for example, it's very good for a user to have this, you know, shared sequencing mechanism. And this is great, but why would a roll up want to join some sort of a shared sequencer? Because a lot of revenue can come from the sequencing layer. But in the marketplace, roll ups actually they get their revenue back from the auction. So they're essentially, if a roll up opts to use the espresso marketplace, they're always going to be better off or just as good off as if they did just sequencing by themselves. So that's a really strong guarantee that we can give. The second thing that a marketplace like espresso can offer is that you can, like I said, you can opt in on a per slot basis. So this means that you can do a couple of interesting economic things.
00:06:30.134 - 00:07:22.014, Speaker B: So a shared sequencer is really great at allowing atomic interoperability, but maybe a roll up says like, hey, I actually don't need that, every single slot. So you can opt in to have like a shared sequencer for only some of your slots because that's maybe what the economics incentivize. Like you don't need, need it for every single slot. I'd say also thirdly, a really important thing that Espresso's marketplace can provide is like credible neutrality. So this is something that if a large roll up, or really any roll up wanted to create their own sort of sequencing marketplace or set or shared sequencer, it's very difficult to have credible neutrality. So the classic example is like if you take op and arbitrums to very large rollups, if one of them made a shared sequencer, the other one really isn't going to want to participate in that. So something like Espresso offers credible neutrality, which is very important.
00:07:22.014 - 00:08:11.926, Speaker B: So yeah, I'd say that's maybe a good summary of the marketplace in general. And then a couple of other caveats about the marketplace is that we, so I guess to explain a little bit more about how the marketplace works. So rollups auction off their slots on a per slot basis, and the people who bid on the slots are actually bidding on some sort of a combination of all of the roll ups. So this is where it gets a little more complex. But you don't necessarily just have one party sequencing for all of the roll ups all at once. You let the market decide. So, for example, there might be a couple of rollups that are very valuable to be sequenced together very often, and the market will say, hey, people in the market will bid for that, and those roll ups will get sequenced together incredibly often.
00:08:11.926 - 00:08:48.953, Speaker B: You may have other roll ups that, like I alluded to earlier, that don't need to be sequenced with other roll ups quite as often, and maybe it's not as valuable to do so. And so this auction mechanism kind of takes care of allocating the sequencing rights to those who value them the most, including those who value the shared sequencing rights the most. And so essentially what it boils down to is that this auction mechanism in the marketplace that Espresso has is all about giving the sequencing rights to those that value them the most, and then returning the revenue from those sequencing rights back to the roll up themselves.
00:08:51.413 - 00:09:15.992, Speaker A: Super interesting. And in all of that context, one question arises that when you decided to build this Sharpie sequencing service, basically, did you always have the plan to be an AV's and Eigen layer? How did you learn about this risk taking primitive, and when did you decided to integrate with it?
00:09:16.168 - 00:09:43.698, Speaker B: Yeah, that's a great question. So, espresso, we certainly decided to do this marketplace for shared sequencing before Eigen learning. I mean, I think we were aware of Eigen layer, but, you know, we had decided to do it kind of separately. But then Eigen layer came up and it seemed like a really, really good fit. So Espresso has two parts. It has the marketplace and the finality gadget. The Eigen layer is really important, especially for our finality gadget.
00:09:43.698 - 00:10:43.304, Speaker B: It plays a role in the marketplace aspect as well. But a big goal of our finality gadget is that eventually it can reach the economic security and it can scale to the size of the Ethereum network. Essentially what we would like in the future is that a pre conformation from the hotshot finality gadget, which is what we call our espresso finality gadget, is basically as good as a finality guarantee from Ethereum. That's where Eigen layer seems to fit in really, really nicely, because Eigen layer is all about reusing Ethereum's economic security, and our goal is to scale to Ethereum's economic security. And in fact, we actually do want the same people who run Ethereum nodes to run espresso nodes. There's a lot of benefits to that, which I can go deeper into. I'd love to go deeper into that, but yeah, in summary, Espresso, we want to be able to scale to Ethereum's level of security and their level of nodes and Eigen layer is a really great way to do that.
00:10:43.304 - 00:10:51.184, Speaker B: Espresso initially didn't start off with planning on integrating with Eigen Layer, but it was just a very natural partnership.
00:10:52.184 - 00:11:05.324, Speaker A: Great. So you talked a bit about what Eigen Layer's role is going to play in the hotshot finality service. You said it will still play a role in the sequencing marketplace.
00:11:06.264 - 00:12:16.244, Speaker B: Yeah, it can. So this is where the sequencing marketplace can enable what's called based sequencing, which is where you allow Ethereum proposers to actually sequence for a roll up. There's some other maybe nuances to base sequencing, but that's essentially the definition is like an Ethereum proposer gets a sequence for a roll up. So what our marketplace and Eigen layer can enable is that someone who's restaked on Eigen layer can be restaked in Espresso's marketplace, and they can also be a proposer in Ethereum. And what you can do is you can actually sequence transactions for the next Ethereum block and the next roll up block at the exact same time, and you can offer atomic execution guarantees between Ethereum and rollups, which is like very difficult to do today. So this is like a really, really wonderful feature and. Yeah, so this is how someone who's restaking an Eigen layer could get even additional benefit and kind of get the benefits of base sequencing, as well as the benefits of just the regular marketplace and the regular shared sequencer.
00:12:18.364 - 00:12:41.064, Speaker C: Sweet. Let's go a little bit deeper into the economic security aspect of things, which is the big thing with Eigen layer. What are your requirements? Well, espresso's requirements in terms of economic security, and maybe even a follow up question to that on your views on shared security versus attributed security.
00:12:41.824 - 00:13:38.528, Speaker B: Yeah, so, yeah, like I said, our goal is eventually we would reach something very close to economic security of ethereum itself. Obviously, that's not where we're going to start out, but starting out, we would like to have, and we do plan to have quite a bit of economic security, because that's a finality gadget is only as strong as the economic security behind it. And so we want our finality gadget to be rather strong. So we don't have any, I would say, specific, like numbers, I can say for the economic security we're aiming for quite yet, although I'm sure we'll be releasing information about that very soon. But I can comment on the shared security versus attributable security. Obviously, I think everything can change. And some of this is just my own personal opinion, but I think that we will very likely launch with just attributable security due to the, just the nature that economic security is very, very important to our protocol.
00:13:38.528 - 00:14:27.324, Speaker B: And we need to be very sure that, you know, I guess I could give an example. If you have shared security and maybe something goes wrong, you have some sort of slashing condition, et cetera, you can have a temporary time in the market where maybe your perceived economic security is not the same as your actual economic security. So to start off with, I think Espresso would choose the attributable economic security so we can be sure that the stake is securing our system always matches the perceived stake, always matches the actual stake securing the system. Again, maybe this changes in the future as abs become more mature and we kind of see how the market plays out. But in my personal opinion, we'll start probably with attributable security.
00:14:28.474 - 00:14:58.484, Speaker C: Sweet. Yeah. And like kind of a follow up on that because it's kind of like all kind of ties together in terms of security. Right. You know, you talked about your hotshot finality gadget, right? This is, you know, Eigen layer, like introduced dual quorum as part of protocol. Right. So is this going to be a version of a dual quorum being implemented via espresso with like, you know, you have the ETH restaking plus also some kind of quorum for, for espresso?
00:14:59.384 - 00:15:13.524, Speaker B: Yes. So as of now, no, we're not planning on doing the dual quorum. We are planning on just doing ETH restaking. So just restake eth, you know? Yeah, that's the plan for now.
00:15:17.144 - 00:15:18.444, Speaker C: Sweet. Thanks so much.
00:15:18.904 - 00:15:39.844, Speaker A: Great. And so could you just taking a step back, could you give us a bit of a timeline? Could you share a bit your roadmap on when you're planning to launch these services? You mentioned the hardshot finality gadget as an AV's and also the espresso sequencing marketplace.
00:15:40.584 - 00:16:03.678, Speaker B: Yeah. Right. Now, by the time that this comes out, we will have launched our latest testnet called Cappuccino. This is a. We're getting very close to a real, real launch. We're hoping for sometime this summer we will have a version launch that is real and live is no longer a testnet. It will not be integrated yet with Eigen layer.
00:16:03.678 - 00:16:36.682, Speaker B: That will come very soon after. But yeah. So sometime this summer we'll have a real version of espresso without Eigen layer. That's live that people can use for both a simple marketplace and then also for the finality gadget part. And then after that will come Eigen layer integration, and then after that we'll become, you know, we're just expanding the features at the marketplace, expanding the features of the finality gadget, etcetera. So. But summary is this summer nice?
00:16:36.818 - 00:16:52.844, Speaker A: And do you have any roll ups that are waiting for you guys to launch to use your service? You have a roadmap of roll up integrations that you're planning to have them support both of your services?
00:16:53.624 - 00:17:17.474, Speaker B: Yes. So we do have definitely have some lined up. We haven't publicly announced them yet, but we will very soon. So you can keep an eye on our twitter and on our website for that. But we're very focused mostly on the arbitrum ecosystem. We have a really good relationship with off chain labs, and we've done a lot of work on the Arbitrum nitro stack to make that productionalized within our system. So that's our main focus.
00:17:17.474 - 00:17:48.704, Speaker B: But we also have done work with the op stack and the polygon stack as well. On some of our previous testnets, we've had those roll ups using those deployed. A key part is that espresso is very flexible. You can use any type of roll up with it. But I'd say for our roadmap right now we're focusing on Arbitrum, but arbitrum stacks, but we're certainly not limited to that. And if, you know, if there's any project out there that wants to work with us, we're more than happy regardless of the stack that you're using.
00:17:50.124 - 00:18:12.316, Speaker C: Sweet. Awesome. I'm excited to see what's coming up. Coming. So let's go into the fun stuff for some people and not so fun stuff for some people. Other people, it's about incentives because the whole thing about Eigen layer, and it's a marketplace for shared security, all that fun stuff, and then you're marketplace yourself an espresso. Right.
00:18:12.316 - 00:18:36.324, Speaker C: But like, the thing is, right. Can we discuss a little bit on what the incentives for operators and restakers to provide, like the economic security that you might be looking for as well as like, you know, kind of like, you know, what, like the expected, like, you know, reward structure might look like, obviously keeping in mind the fact that, like, you know, payments are not live on Eigen layer just yet.
00:18:37.464 - 00:19:26.014, Speaker B: Yeah. So I can talk about it at a high level. So the structure or the incentives to participate in the espresso ecosystem as like an AV's operator or node operator are very similar maybe to the incentives to participate in the Ethereum ecosystem. So presumably through the espresso finality gadget, there would be some sort of sequencing fees that would get paid. Node operators would receive some sort of compensation for the service of sequencing all of these transactions. I'll also note that Espresso also provides a data availability service as well as with its sequencer, so nodes. So AV's operators would also be compensated for providing this data availability somehow.
00:19:26.014 - 00:20:12.034, Speaker B: We haven't released really the details on that yet, although we will soon. But yeah, I would say the structure is similar to that of Ethereum. And then when it comes to being like for example, participating in the marketplace itself, why would someone want to bid in the marketplace to sequence for roll ups? This is similar to why someone might want to become a builder in the Ethereum ecosystem, or why someone might value being a proposer in the Ethereum ecosystem. For example, if people are familiar with the execution tickets design for Ethereum, this marketplace is quite similar to that. There's a couple of key differences, but it's similar. And so the incentives are very similar to why someone might participate, buy an execution ticket in Ethereum. It's kind of why they would want to participate in the espresso marketplace.
00:20:12.034 - 00:20:20.494, Speaker B: So yeah, I would say overall, in summary, the incentives are just kind of, they're similar to the incentives that someone would have, like participating in Ethereum itself.
00:20:22.754 - 00:20:51.404, Speaker A: Great, super interesting. And do you, do you have basically like could you share maybe like the amount that, the amount, but the size basically of the roll ups that the espresso sequencer could potentially host? Like could we see, could we see a future where basically like there are a thousand roll ups that are using the espresso sequencer?
00:20:52.504 - 00:21:23.354, Speaker B: Yeah, I think that we could. So a lot of our design is really focused on scaling. So from the design perspective, there really isn't any reason that we couldn't scale. So we really focused on getting very good throughput, getting very good latency, etcetera. So yes, I think that, I think that you could, I think the only, it's just whether or not the market values that or not. But espresso is a protocol like the marketplace in both the finality gadget can certainly support, you know, many, many, many roll ups.
00:21:24.734 - 00:21:43.874, Speaker A: Interesting, and maybe a bit of a random question, but with regards to the scaling of a decentralized sequence, or like yours sequence of marketplace, I should say, do you feel like you could see network effects?
00:21:45.174 - 00:21:45.954, Speaker B: Yeah.
00:21:47.894 - 00:21:59.454, Speaker A: What do you think, for example, then the bigger espresso gets, the market might also value some alternatives or competitors.
00:21:59.834 - 00:22:54.016, Speaker B: I see. Yes, I do think that there's very good network effects, because I think that whenever you want to get these great atomic transactions, you need the same party to sequence espresso helps coordinate that the same party sequences. And I think in the future it might be very useful to have many, many roll ups be sequenced together. You might not need to do that all the time, but you could imagine cases where you have a lot of big roll ups and you have a long tail of very small roll ups. And these small roll ups, it's very valuable for them to be sequenced with these large roll ups because that provides really good user experience. Because these small roll ups that maybe don't have very good liquidity or maybe, you know, et cetera, can now borrow the liquidity of these larger roll ups. So to answer your question, yes, I think that there could be like large network effects.
00:22:54.016 - 00:23:20.564, Speaker B: And I actually think that the more roll ups that want to use a marketplace such as espresso, you know, like the better it actually gets for everybody because you can get interoperability between all of those roll ups very quickly. And you can also, because espresso supports base sequencing as well, you can also get interoperability between all of these roll ups and the l one. I think it becomes more powerful the more people that join.
00:23:22.104 - 00:24:01.844, Speaker C: Awesome. Super interesting. Thanks so much for explaining. Another thing to talk about specifically is on the operator side of things, operator. So is Coinbase. And the thing is, there could be a material cost, cost to potentially running the espresso AV's. So I think the question here is how heavy will it be in terms of be able to run it? And then also as espresso gets larger, for example, how does the integration look like, the continuous integration look like in the beginning, let's say you have four roll ups and whatnot.
00:24:01.844 - 00:24:08.384, Speaker C: How happy would not look eventually if there's 1000 roll ups on Nespresso? How does that work?
00:24:08.684 - 00:25:00.590, Speaker B: Yeah, that's a good question. I really like the first question because this is something that I've been working on. On the engineering side, it's actually running on nodes and things like that. I would say that there are two classes of nodes within espresso similar to execution tickets in Ethereum. You're going to have your proposing nodes, those that participate in the marketplace and bid, and then you're going to have your validating nodes. So the proposing nodes might need to be a little bit beefier because they will need to do, they might for example, they'll probably need to do some sort of building like a builder does in Ethereum, and they also may need to do a little bit of expensive, well, I don't want to say expensive, but slightly expensive cryptography computation for our DA protocol. However, the validators, just that, you know, that are not proposing, however, can be run on very, very minimal hardware.
00:25:00.590 - 00:25:28.504, Speaker B: They absolutely can be run on raspberry PI. So we have absolutely done that. They can probably be run, I mean, sometimes when you run our internal testnets, we run them on like one fourth of a cpu and they're fine. So the validators themselves can be very, very lightweight, which I think is really great. And it also matches ethos of Ethereum, of like home stakers and things like that. So yeah, so to say, in summary, there's two classes of nodes. The validators are very, very lightweight.
00:25:28.504 - 00:26:06.916, Speaker B: The proposers themselves might need to be a little bit beefier, but I think that that makes sense. And it's kind of in line with the same idea as execution ticket than Ethereum. And then your second question, what is the integration and what does this look like? So I'd say there's two fronts. So right now espresso is doing some integration work on our side to make sure that some major stacks like arbitrum, nitro stack works really well with our system. That work definitely doesn't have to be done by espresso. So technically anybody could deploy on top of espresso. And we've actually seen a couple of projects do that, that they just like went on their own and they deployed a roll up on our testnet without any help from us.
00:26:06.916 - 00:26:37.074, Speaker B: So it's totally possible. And so if you actually don't need to do, espresso itself does not need to know about which it doesn't need to know whatsoever about what the roll up is on it. So any roll up can integrate what it looks like when you have four roll ups versus 1000 roll ups. From the perspective of espresso, it's actually quite, it's very similar, really. What espresso sees is just blobs of data. They just see blobs of data that they sequence in some way, shape or form. It doesn't really care about how it interprets that data.
00:26:37.074 - 00:27:10.280, Speaker B: And so that data is not interpreted until after it's finalized on our finality gadget. Then the data goes through what we call this derivation pipeline. The derivation pipeline is something that each roll up would run itself. And it's basically what takes the output of Espresso's finality gadget and interprets it and executes it and then proves it if needed and puts it on the l one. Back to your question. I don't think it really looks much different if you have four roll ups or 1000 roll ups. Espresso actually really doesn't know the difference between that.
00:27:10.280 - 00:27:23.664, Speaker B: It just knows that there's data on the network and anybody can permissionlessly deploy on Espresso. Obviously we're doing our best to help people deploy with major stacks, but it's certainly not necessary.
00:27:26.204 - 00:27:47.644, Speaker A: Amazing. Talking a bit more about the operator landscape, will you guys have, what will your active set requirements look like? And do you plan on being completely permissionless on the future or do you want to stay lean, especially like the first few years?
00:27:48.944 - 00:28:32.286, Speaker B: Yeah, so we are probably, I mean we're not going to be able to start with like all of the ethereum operators to start off with. We will probably start with a smaller but still sizable set. This will be announced sometime soon, once we finalize it. Um, you know, we will probably make it more permissionless over time, although we do have, definitely have a goal to make it permissionless like within a reasonable time frame. It's hard because I don't want to commit us to anything because I'm doing the engineering work and then I don't want to, I don't want to say oh yeah, we're going to have this feature by then. And then, you know, on the engineering side it doesn't happen. But so I would say yeah, to this.
00:28:32.310 - 00:28:34.114, Speaker C: It's soon TM. Come on now.
00:28:36.894 - 00:28:59.194, Speaker B: TM barring, barring engineering work, but we'll probably launched with a more permissioned set. Maybe not 100% permission, but something that's maybe a little bit more lean but still sizable. Probably something that you'd have seen other, other projects launch with. And then we'll make it more permissionless as time goes on because the goal is we definitely want it to be permissionless, just like Ethereum.
00:29:00.304 - 00:29:26.684, Speaker C: Sweet. Let's round some things up with just talking about the eigen layer ecosystem in general. What is the long term vision that you see in terms of the agglayer ecosystem, in terms of what's being built? And what do you expect Abs's to be built in the future, but also knowing the fact that there are competitors starting to peep out right now to eigen layer.
00:29:26.724 - 00:29:26.924, Speaker A: Right.
00:29:26.964 - 00:29:29.884, Speaker C: So would like to get your, just like, you know your thoughts on that.
00:29:30.044 - 00:30:11.344, Speaker B: Yeah, um, yeah, I'll just caveat that these are my personal thoughts, not espresso's. Thought. Uh, but so to the, to the first question, I think that, I think that we'll see a lot of really great things with Eigen Lair. I've already seen, you know, a lot of cool things. Personally, I think the idea of like, Watchtower applications are kind of really neat. From like, the sequencing standpoint, though, I think, uh, pre conformations are really, really important. So I don't know how if you guys have been following the whole pre conformation, it's kind of related to base sequencing, but essentially, espresso natively offers what we call a tester pre conformations, which means that it's a pre conformation, but it's backed by like a lot of nodes and a lot of economic security.
00:30:11.344 - 00:30:46.664, Speaker B: So you can, you're, you can very likely treat it as final, and then you have something called proposer preconfirmations, which is just backed by like a single Ethereum proposer or a single espresso proposer. But Eigenlayer can, you don't have to have Eigen layer to implement this, but eigenlayer certainly helps. And I think that these pre conformations are going to be, offer really good improvements to user experiences. So I think that that's a really neat thing from the sequencing standpoint. And then as far as. Remind me the second part of your question.
00:30:47.904 - 00:31:02.844, Speaker C: Yeah, I was just talking about like, you know, now that, you know, there might be some competitors now that are popping dragon lair, what do you think in terms of that? Like, is there going to be a, like, you know, multiple, like, is this like a winner most or winner take all? What's your thoughts on that?
00:31:03.184 - 00:31:33.070, Speaker B: Yeah, that's okay. Yeah, that's a really, really great question. I think that, generally speaking, competition is really good, and so I think that having some sort of competitor is good. Will it be a winner take thought? I'm not really sure. I don't think it. I think as long as protocols can be very aware of where their stake is restaked and if it's restaked on multiple restaking protocols or not, and they can account for that risk, I think that it's fine. I think that that's like a problem we'll have to solve.
00:31:33.070 - 00:32:11.434, Speaker B: If you have Eigen layer and an Eigen layer competitor and someone is restaked on both, are they allowed to be restaked on both? If they're restaked on both and one of them slashes, how do you make sure that that slashing is reflected on the other one? So I think that that's a difficult problem. But I think if you solve that problem and you can be very aware of the risk that you're. And what your stake is being is collateral, I think then I think it's not too bad to have competitors. And I think in general, competition is good. And I don't know, I think that it could play out. We could either see one win or maybe we could see a couple of like large restaking platforms. To be honest, I'm really not sure.
00:32:13.314 - 00:32:22.174, Speaker A: Perfect. That's great. I think we still have a couple more minutes. Any last messages you want to share with our audience?
00:32:23.234 - 00:32:58.128, Speaker B: Yeah, I would love to. Absolutely. So I guess our message is that we'd love to work with any sort of project, whether you're a roll up or you're building an application on top of a roll up, even if it's not on one of the major stacks, we would still really love to work with you. You can feel free to reach out to myself or our espresso Twitter account. You can dm them, or you can also reach out to Verity Coltman, who's our ecosystem lead. And we'd be more than happy to talk to you. And then finally we're building this marketplace for shared sequencing.
00:32:58.128 - 00:33:30.752, Speaker B: And the key point is that rollups are allowed to opt into it at their will and roll ups get revenue back from the auction. So it's a really great place for. It allows decentralized sequencing, shared sequencing. It can help with a lot of issues that we see today with centralized sequencers. And so it's a really cool idea. And we think it's kind of the future of how roll ups interoperate with not only each other, but also with Ethereum itself. But yeah, we would love anybody's feedback and comments and anything at all.
00:33:30.752 - 00:33:32.884, Speaker B: We'd be more than happy to talk to anybody.
00:33:33.264 - 00:33:59.362, Speaker A: Super cool. Bern, I don't know about you, but I'm really, really excited to see how all of this play out. I think that pull up sequencing, decentralized sequencing, is something that's super, super important if you want to see a bright module of future. Ellie, thank you so much for being with us today to the audience. We'll see you on the next one. But yeah, thank you so much guys, for participating.
00:33:59.538 - 00:34:02.094, Speaker B: Yeah, thank you for having me. This was wonderful.
00:34:02.544 - 00:34:03.984, Speaker A: Great. Bye everyone.
