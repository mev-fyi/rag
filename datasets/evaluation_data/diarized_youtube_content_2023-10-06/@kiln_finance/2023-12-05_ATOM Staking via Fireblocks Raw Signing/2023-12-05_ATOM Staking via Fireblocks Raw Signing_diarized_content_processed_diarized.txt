00:00:07.210 - 00:00:55.550, Speaker A: I'm going to go through how to stake several assets with fireblocks resigning API directly into kit dashboard with the example of Atom. This is also the case for Ada and Osmo. Here we're using fireblocks, which is the most popular solution for text custody. Using row signing API overcomes the challenge of the asset not being supported by fireblocks within the Walland Connect integration let's go into it. In the stake page I'm going to select the assets I want to stake. So Atom here in the staking module I'm going to select the account I want to stake toward testing account. I'm going to connect my fireblocks.
00:00:55.550 - 00:01:46.522, Speaker A: In this page you have to input your API key, your secret key, and your fireblocks vault account id. For me it's number seven. I then connect to interface with fireblocks. Now I need to select the amount. I'm going to put 0.1. Then I click stake. You can see here that the transaction is serialized by our API.
00:01:46.522 - 00:02:56.040, Speaker A: If you want to see what is being sent to fireblocks for signing, we have build based decoder which is open source here the transaction is decoded within multiple parameters so you can check the amount, the gas fees, et cetera. I'm going back to my kin dashboard page and I have approved the transaction within my fireblocks and now you can see that the stake went through. I hit congrats. You have successfully staked 0.1 atom on Atom validator. I can see my transaction within the block explorer. Then if I go back on the kin dashboard, I'm going to overview account, then the testing account, Atom and I will see my stake popping up here with the validator wallet id.
00:02:56.040 - 00:02:59.170, Speaker A: That's it for now. Thanks for listening.
