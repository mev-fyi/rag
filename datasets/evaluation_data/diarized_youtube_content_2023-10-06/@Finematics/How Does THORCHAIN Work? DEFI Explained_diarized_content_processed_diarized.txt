00:00:00.170 - 00:00:59.210, Speaker A: So what is THORChain all about? How does it work? And how does it make it possible to swap between native assets across different blockchains? You'll find answers to these questions in this video. Before we begin, if you want to learn more about decentralized finance and the technology behind it, make sure you subscribe to my channel, hit the Bell icon, and enable all notifications. You can also consider supporting us on Patreon and joining a DFI community on discord. With billions of dollars in trading volume, decentralized exchanges have been gaining more and more traction. It's not uncommon to see over $1 billion in daily trading volume on Uniswap alone. Although protocols like Uniswap, SushiSwap, or Curve are great when it comes to exchanging assets within the Ethereum ecosystem, they don't support swaps between different blockchains. To accommodate this problem, a common approach is to represent external assets in the form of wrapped or synthetic tokens on Ethereum.
00:00:59.210 - 00:02:00.990, Speaker A: The most popular asset on other blockchains outside of Ethereum is, of course, Bitcoin. There are multiple ways of representing bitcoin on Ethereum that allows it to be traded on decentralized exchanges wrapped, Bitcoin, renBTC, SBTC, to name a few. Even though most of these approaches work fine, they usually make certain trade offs when it comes to either the custody or the security of the assets. If you want to learn more about it, check out this video here. What if there was a way of swapping native assets instead? For example, making a trade between bitcoin on the bitcoin blockchain and ether on the Ethereum blockchain? And this is exactly where THORChain comes into play. THORChain is a decentralized liquidity protocol that allows for swapping native assets between different blockchains, such as Bitcoin, Ethereum, or Binance Smart chain. When it comes to managing liquidity, THORChain uses a liquidity pool model known from protocols like Uniswap or Banker.
00:02:00.990 - 00:02:46.446, Speaker A: In this model, liquidity providers lock two assets in a liquidity pool. This, in turn provides liquidity for traders who want to swap between these two assets and pay a small fee that goes back to the liquidity providers. If you want to better understand how liquidity pools work, you can check out this video here. THORChain is often explained as a cross chain uniswap. This is usually a good simplification for understanding the general idea behind THORChain, although there are some big differences between these two protocols that we're going to explain later. Before we dive deeper into the mechanics of THORChain, let's have a quick look at how the project came into existence. THORChain started as a small project at the Binance hackathon in 2018.
00:02:46.446 - 00:03:53.960, Speaker A: The team behind THORChain continued the research after the hackathon ended, but decided to put some of their effort on pause later that year as they were waiting for a few missing pieces of technology needed for creating a fully functioning cross chain decentralized exchange. These were mainly Tendermint and Cosmos SDK and a working implementation of TSS Threshold signature scheme. Seeing the viability of the product, the team decided to raise a small seed round and worked on a proof of concept of a decentralized exchange built on top of that THORChain protocol called Instaswap, which was later demonstrated during the Cosmos hackathon in Berlin. After that, they announced their first gotomarket product, BEPSwap, in July 2019. The main goal of BEPSwap was to enable BEP two asset swaps and was limited to Binance chain. Also, in July 2019, the team decided to raise more funds through the initial Dex offering on binance dex, the Ido resulted in $1.5 million raised that was sufficient to enable further development of the project.
00:03:53.960 - 00:04:49.522, Speaker A: The team continued to work on the protocol, which resulted in the limited Mainet release called MultiChain Chaos Network, or MCCN, in April 2021. Interestingly, the THORChain team decided to remain mostly anonymous even to this day. Now let's see how THORChain works under the hood. At the core of THORChain protocol is a network of nodes built with Tendermint and Cosmos SDK. This approach allowed THORChain to create a separate blockchain with its own consensus and network layer without having to build all of its element from scratch. THORChain leverages Tendermint BFT model that allows the network to reach consensus even if up to one third of all the nodes start failing. The consensus mechanism is important, as THORChain nodes have to work together, for example, in order to record transactions coming from other blockchains.
00:04:49.522 - 00:05:41.062, Speaker A: To see how it works in practice. Let's go through a quick example. Let's say a user wants to swap their Bitcoin on the bitcoin network to Ether. On the Ethereum network, the user sends a standard Bitcoin transaction to the bitcoin vault, a bitcoin address controlled by the THORChain network. THORChain nodes keep monitoring vault addresses in order to acknowledge new transactions. To achieve this, each THORChain node, aka thor node, consists of a few major components, the most important ones being the service running the THORChain blockchain itself, a full node for each of the connected blockchains, for example, a Bitcoin or an Ethereum node, and the Bifrost. The Bifrost protocol acts as a connective layer between the THORChain network and other networks, such as bitcoin or Ethereum.
00:05:41.062 - 00:06:47.950, Speaker A: One of its main responsibilities is to watch the vault addresses in order to find inbound transactions that are later converted into THORChain witness transactions. The witness transactions are initially recorded as pending, which is one of the states in the THORChain state machine. After the majority of nodes agree on the state of the inbound transaction, the transaction is moved to the finalized state. At this point, the user's bitcoin deposit is recorded on the THORChain blockchain time for the other part of the swap, sending Ether back to the user. Once a new inbound transaction is finalized, the THORChain protocol initiates a swap. The swap transaction is recorded on the THORChain blockchain, and the Bifrost protocol is used again, this time to initiate a withdrawal of ETH from the Ether outbound vault. This outbound transaction is translated from THORChain's internal representation into a valid transaction for the destination chain using the respective chain client in our case the Ethereum client, and broadcast to the respective network.
00:06:47.950 - 00:07:38.234, Speaker A: At this point, the swap is completed and the user ends up with Ether in their Ethereum wallet. Although this sounds quite simple, there is quite a lot of detail to make it all possible. In order to sign transactions, the network has to be able to control vault addresses on each of the integrated blockchains. Of course, storing private keys on each of the nodes would be a huge security risk, and this is also why THORChain uses the previously mentioned threshold signature scheme, or TSS. TSS is a cryptographic primitive for distributed key generation and signing. You can think about it as a better version of multisig. Both of them focus on achieving the same goal allowing multiple parties to come together and sign a transaction on when a certain previously set threshold is reached.
00:07:38.234 - 00:08:33.862, Speaker A: The main difference is that multisig is usually implemented on the application layer of the blockchain, for example, as a smart contract on Ethereum, whereas TSS support is always possible regardless of the blockchain, as it relies on basic cryptographic elements. This allows for making the whole process of signing transactions cheaper and more secure. Although TSS has a lot of benefits, it hasn't yet been as battle tested as other popular cryptographic elements, such as ECDSA or certain hash functions. Another interesting detail of Thorschin architecture is the way vaults operate. There are two types of vaults inbound and outbound. Inbound vaults store most of the funds in the system. They are slower but more secure, as they require two thirds of all TSS signers to sign a transaction, which can take even up to 20 seconds.
00:08:33.862 - 00:09:28.222, Speaker A: This would be quite limiting for the whole system, so THORChain introduced smaller, less secure outbound vaults that are run by each of the Thor nodes. These vaults are faster, as they require only a single signature from the nodes they run on. The funds in these vaults are limited to 25% of the value of its bond in assets. More on the bonding process a bit later in the video, but this basically creates incentives that prevent the node operator from stealing funds from the outbound vaults. These vaults are also being constantly topped up by the system as the funds are being used for their outbound transactions. As mentioned earlier, THORChain uses tendermint and cosmos. SDK in this model, the THORChain network operates as a proof of stake system, where the nodes that want to be able to sign and verify transactions have to stake a certain amount of the rune tokens.
00:09:28.222 - 00:10:25.182, Speaker A: In the THORChain ecosystem, this process of staking rune tokens is also called bonding. At the moment of creating this video, 1 million rune tokens worth around $18 million are required to run a fully functioning THORChain node. In contrast to most variations of POS systems, the delegation of tokens is not allowed. This helps with making sure all nodes in the network are treated equally, and there are no node operators that capture the majority of tokens for a long period of time. In fact, all nodes on the THORChain network are anonymous and only identifiable by their IP address and public key. There is no branding or marketing of nodes, like in other systems that allow delegation in order to avoid the same nodes. With the highest amount of rune tokens always signing transactions, THORChain introduces the concept of Churning.
00:10:25.182 - 00:11:35.046, Speaker A: The network maintains one set of nodes that are active and able to sign transactions, and another set of nodes that are on standby every 5000 blocks, which is around every three days. The churning process kicks in, and the oldest and the most unreliable nodes from the active set are replaced by the nodes from the standby set. Churning makes sure that new nodes that meet the staking criteria can eventually have their turn at signing transactions. Also, each time the set of validators change, the THORChain network moves funds to new vaults, ensuring that active nodes can still access funds. At the moment, there are 28 active nodes and 45 nodes in standby mode on the single chain chaos network that supports BEPSwap, and eleven active nodes and nine nodes in standby mode on the recently released MultiChain chaos network. Currently, the MultiChain chaos network is in expansion mode, which means that for every node that is churned out from the network, two nodes are churned in. The MultiChain network can grow to 99 nodes before hitting the tendermint and TSS limits.
00:11:35.046 - 00:12:25.238, Speaker A: Even when the network grows to 99 active nodes, it can still expand further by having the capability of sharded vaults. It's also important to note that even though a high amount of rune is required to run a fully functioning node, people can still run nodes without bonding rune. These nodes are able to validate transactions without the ability to sign transactions. This brings us to the last key element in the THORChain architecture the rune token. But before we discuss that, if you made it this far and you enjoyed the video, hit the like button so this kind of content can reach a wider audience. Rune powers the THORChain ecosystem and provides the economic incentives required to secure the network. All liquidity pools in the system consist of a native token and rune.
00:12:25.238 - 00:13:07.094, Speaker A: For example, to swap from bitcoin to ether, the trade has to go through the BTC rune and ethere pools. In this model, each asset has to be paired with rune. This usually results in a fewer number of pools than in a system that can create a pool out of any two assets, like in case of uniswap. Besides this fortune, nodes have to meet the staking criteria by bonding a particular amount of rune. This bond is then used to secure the system by underwriting the assets in the pools. If the node attempts to steal funds from the protocol. The bond is deducted by the amount of the assets they stall times one five and the pools are made whole.
00:13:07.094 - 00:14:03.740, Speaker A: Also, if the node doesn't offer reliable service, they put themselves at risk of their bond being slashed. The Thorchin protocol also encourages the node operators to always bond the optimal amount of rune. This is achieved by a mechanism called the incentive pendulum. The incentive pendulum aims at keeping the system in the most optimal state. This is when 67% of all the rune in the system are bonded and 33% is pulled in pools in the optimal state. For every $1 million worth of assets in debt pools there would be $2 million worth of rune bonded by the nodes. On top of this rune is used to pay transaction fees on the network subsidized gas needed for sending outbound transactions to different networks and participate in the THORChain governance where users can signal which chains and assets the network should add next.
00:14:03.740 - 00:14:42.674, Speaker A: As I mentioned earlier, there are some big differences between THORChain and Uniswap or in fact any other decentralized exchange on Ethereum. Let's have a look at some of them. First of all, Uniswap allows for swapping ERC 20 tokens only. So if we want to trade assets from other blockchains they have to be represented in the form of wrapped or synthetic tokens. THORChain allows for swapping native assets without wrapping them. Swaps on THORChain are charged both a fixed network fee as well as a dynamic slip based fee. This means that swaps incurring more slippage are charged more in trading fees.
00:14:42.674 - 00:15:46.326, Speaker A: This makes it harder for bots to extract value from swaps, like in the case of a sandwich attack, a popular way of affecting the price in the liquidity pool that results in users getting worse prices on their trades. When it comes to speed of swaps, assets on Ethereum can be swapped in one Ethereum block, which happens every 13 seconds on average. On THORChain this is a bit more complicated. The swap time depends on which networks we are swapping between. In case of a bitcoin to Ether swap it would take at least one block on the bitcoin network ten minutes on average, plus the internal time for executing a swap on the THORChain blockchain plus the outbound Ethereum transaction around 13 seconds. Interestingly, a swap from Ether to bitcoin would be way faster as the THORChain network would only have to wait for the Ethereum transaction before sending an outbound bitcoin transaction. That would result in the receiving wallet having the bitcoin UTXO spendable and available straight after the transaction is broadcast.
00:15:46.326 - 00:16:43.600, Speaker A: Also, THORChain as a separate blockchain loses some of the benefits of decentralized applications on Ethereum. One of them is composability. For example, a uniswap swap can be incorporated into more complicated contracts as a part of one transaction. This is not possible with THORChain swaps. THORChain network is also of course not even remotely as decentralized as the bitcoin or the ethereum networks, and the system instead relies on strong economic incentives. This is not necessarily that bad, considering that THORChain has a completely different use case than the Bitcoin network that secures an asset worth over $1 trillion, or the Ethereum network that secures billions of dollars locked in smart contracts for its main use case. Swapping assets between different blockchains Where most users won't store their assets on the THORChain blockchain for a very long period of time, it looks like it could be decentralized enough.
00:16:43.600 - 00:17:44.298, Speaker A: After the long awaited multi chain chaos network release, the THORChain team is focusing on growing the THORChain ecosystem while making sure the system works as expected. Users have multiple choices when it comes to interacting with the THORChain protocol. They can use one of the decentralized exchanges like Thorswap or Asgardex or Wallets integrated with THORChain like shapeshift. We should see more applications and Wallets integrating with THORChain in the future. On top of this, it looks like we should see more chains and assets being onboarded, more THORChain nodes joining the network, and hopefully seeing more and more trading volume and total value locked in the liquidity pools. Eventually, the extra protective measures will be removed and the chaos net will become the main net. THORChain clearly looks like an interesting protocol and a missing piece in the DeFi ecosystem that would allow people to swap between native assets without using centralized exchanges.
00:17:44.298 - 00:17:57.940, Speaker A: So what do you think about THORChain? How big can it grow in the future? Comment down below. And as always, if you enjoyed this video, smash the like button, subscribe to my channel and check out Cinematics on Patreon. Thanks for watching.
