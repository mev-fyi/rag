00:00:00.330 - 00:01:04.738, Speaker A: So what is the Graph protocol all about? Why do some people call it the Google of blockchains? And what is the use case for the GRT token? You'll find answers to these questions in this video. Before we begin, if you want to learn more about decentralized finance and the technology behind it, make sure you subscribe to my channel, hit the Bell icon and enable all notifications. You can also consider supporting us on Patreon and joining our community of DeFi enthusiasts. Let's start with what the Graph actually is. The Graph is an indexing protocol for querying blockchain data that enables the creation of fully decentralized applications. The project was started in late 2017 by a trio of software engineers who were frustrated by the lack of tooling in the Ethereum ecosystem, which make building decentralized applications hard. After a few years of work and a lot of iterations, the Graph went live in December 2020.
00:01:04.738 - 00:02:05.562, Speaker A: The Graph, as one of the infrastructure protocols, can be quite tricky to grasp. So before we jump into the details, let's try to understand what indexing the main concept behind the Graph actually is. Indexing, in essence, allows for reducing the time required to find a particular piece of information. A real life example is an index in a book. Instead of going through the whole book page by page to find a concept we are looking for, we can find it much quicker in the index, which is sorted alphabetically, and it contains a reference to the actual page in a book. Similarly, in computer science, database indexes are used to achieve the same goal cutting the search time instead of scanning the whole database table multiple times to provide data to an SQL query. Indexes can dramatically speed up queries by providing quick access to relevant rows in a table.
00:02:05.562 - 00:02:52.574, Speaker A: When it comes to blockchains such as Ethereum, indexing is super important. To understand why this is the case, let's see how a typical blockchain is built. A typical blockchain consists of blocks that contain transactions. Blocks are connected to their adjacent blocks and provide a linear immutable history of what happened on the blockchain to date. Because of this design, a naive approach for searching for a particular piece of data, such as a transaction, would be to start with block one and search for a transaction across all transactions in that block. If the data is not found, we move to block two and continue our search. As you can imagine, this process would be highly inefficient.
00:02:52.574 - 00:03:50.950, Speaker A: This is also why every popular blockchain explorer such as Etherscan builds their own service for reading all the data on the blockchain and storing it in a database in a way that allows for quick retrieval of data. These kind of services are very often called ingestion services, as they basically consume all the data and transform it into a queryable format. Although this approach usually works fine, it requires trusting the company that provides the data. This is not ideal for building fully decentralized and permissionless applications. On top of that, all private crypto companies that don't want to trust other APIs have to build their own ingestion service, which creates a lot of redundant work. This is also why a decentralized query protocol for blockchains was needed. And this is where the graph comes into play.
00:03:50.950 - 00:05:04.442, Speaker A: The graph aims at becoming one of the main core infrastructure projects necessary for building fully decentralized applications. It focuses on decentralizing the query and API layer of decentralized web by removing a trade off that DApps developers have to make today whether to build an app that is performant or truly decentralized. The protocol allows for querying different networks, such as Ethereum or IPFS, by using a query language GraphQL GraphQL allows for specifying which fields we are interested in and what search criteria we would like to apply. Queryable data is organized in the form of subgraphs. One decentralized application can make use of one or multiple subgraphs. One subgraph can also consist of other subgraphs and provide a consolidated view of data that the application may be interested in. The graph provides an explorer that makes it easy to find subgraphs of the most popular protocols, such as uniswap compound balancer or ENS.
00:05:04.442 - 00:05:41.574, Speaker A: Uniswap subgraph provides access to a lot of useful data. For example, the total volume across all trading pairs since the protocol was launched, volume data per trading pair, and data about particular tokens or transactions. Now let's jump into the architecture of the Graph protocol. The easiest way to explain this is to focus on different network participants. First, let's start with indexers. Indexers are the node operators of the graph. They can join the network by staking the GRT tokens and running a graph node.
00:05:41.574 - 00:06:22.866, Speaker A: Their main function is to index relevant subgraphs. Indexers earn rewards by indexing subgraphs and fees for serving queries on those subgraphs. They can also set prices for their services to keep prices in check. Each indexer competes with other indexers on top of ensuring the highest quality of their data. This basically creates a marketplace for the services provided by indexers. Consumers query indexers and pay them for providing data from different subgraphs. Consumers can be either end users, other web services, or middleware.
00:06:22.866 - 00:07:09.154, Speaker A: Curators are other important network participants. They use their GRT tokens to signal what subgraphs are worth. Indexing curators can be either developers that want to make sure their subgraph is indexed by indexers, or end users that find a particular subgraph valuable and worth. Indexing curators are financially incentivized as they receive rewards that are proportional to how popular a particular subgraph becomes. Delegators are yet another network participant. They stake their GRT on behalf of indexers in order to earn a portion of indexers rewards and fees. Delegators don't have to run a graph node.
00:07:09.154 - 00:08:08.278, Speaker A: Last but not least are fishermen and arbitrators. They become useful in case of a dispute. That can happen, for example, when an indexer provides incorrect data to the consumer. Now let's see how the network participants cooperate in order to create a trustless and decentralized system. Let's say a new decentralized exchange has launched, and the team behind the project wants to allow other applications for easy access to the Exchange's historical volume and other data points to encourage indexers to index the new subgraph, a curator has to step in and signal that the new subgraph is worth indexing. Here we have two options. If the new Exchange was a highly anticipated project with a lot of potential, an already existing curator would most likely step in and use their GRT tokens to signal the usefulness of the new subgraph.
00:08:08.278 - 00:09:00.922, Speaker A: If the subgraph becomes popular, the curator would financially benefit from their signaling. In the case that the new Exchange is not highly anticipated, the developers behind the project can become curators themselves and use their GRT to encourage indexers. Once this happens, the indexers can step in and start indexing the subgraph. This process can take a few hours or even a few days, depending on how much data has to be indexed. Once indexing is completed, the consumers can start querying the subgraph. Each query issued by the consumers requires payment in GRT that is handled by the query engine. The query engine also acts as a trading engine, making decisions such as which indexers to do business with.
00:09:00.922 - 00:09:43.942, Speaker A: To make this process smoother, the graph uses payment channels between the consumer and the indexer. If the indexer provides incorrect results, a dispute process can be initiated. If you'd like to dive deeper into the architecture behind the Graph protocol, I'll put a few useful links in the description box below. Now time to discuss the GRT token. GRT is a utility token that plays an important role in the graph network design. As we mentioned earlier, GRT is used by curators to signal subgraphs that are worth indexing. On top of this, it's staked by indexers to keep their incentives in check.
00:09:43.942 - 00:11:08.910, Speaker A: Besides that, people who own GRT tokens but don't want to be indexers and run the GRT node can become delegators and earn a portion of indexers reward and also consumers pay for the queries. In GRT, the Graph had an initial supply of 10 billion GRT tokens and new token issuance at 3% annually that is used for paying the indexing rewards. There is also a token burning mechanism that is expected to start at around 1% of total protocol query fees. The Graph Protocol had a huge interest from venture capital with plenty of big names, including Coinbase Venture, participating in their initial offering. The Graph core team aims at decentralizing the protocol further by launching on chain governance the Graph Council in the future. The protocol that is currently deployed to the ethereum mainnet only supports indexing ethereum, but multi blockchain support is one of the areas for further research. The Graph is already used by other popular projects such as uniswap synthetix, decentraland and aragon, it looks like the graph could be one of the missing puzzles in the effort of increasing the decentralization of DApps.
00:11:08.910 - 00:11:52.300, Speaker A: Some people went as far as calling the graph the Google of blockchains, pointing out similarities between indexing websites by Google and indexing blockchains and decentralized applications by the graph. If this analogy is correct and the graph indeed becomes a Goto protocol for indexing web three, it has a lot of potential to grow. So what do you think about the graph? Will it become a core piece of infrastructure in the decentralized world? Comment down below. And as always, if you enjoyed this video, smash the like button, subscribe to my channel and check out Phinematics on Patreon to join our DeFi community. Thanks for watching.
