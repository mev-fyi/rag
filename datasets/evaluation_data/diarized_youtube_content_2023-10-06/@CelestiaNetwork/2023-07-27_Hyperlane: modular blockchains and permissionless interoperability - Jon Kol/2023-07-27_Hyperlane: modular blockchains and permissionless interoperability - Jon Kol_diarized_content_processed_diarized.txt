00:00:01.770 - 00:00:34.610, Speaker A: Need to do something to get the slides. Oh, there we go. I had a lot of slideskifting. All right, let's get to it. So today we're going to talk about modular interoperability, or, sorry, modular blockchains and interoperability, specifically permissionless interoperability. So if you think about why you guys are all here today, we are here at the modular summit because for whatever reason, we'll get into that very specific reason. We think that the modular construction is an ideal solution to a lot of the issues that we face with blockchains.
00:00:34.610 - 00:01:21.910, Speaker A: So over the next 20 minutes or so, we're going to get into that. We're going to cover the different moving parts, what needs to happen, what is feasible and what is not. And so at Hyperlane, we like to talk about this concept of the interchange highway. What's that? It's kind of like a big word. It's something that we like to think of as a safe, somewhat fast path to connect between the ever increasing and ever expanding universe of chains. And the modular universe is one where we're going to have an increasing number of smaller chains, smaller than the monoliths that we've become accustomed to over the last few years. Specifically, we're going to talk about how permissionless interoperability and modular security help us create this concept of the interchange highway.
00:01:21.910 - 00:02:04.658, Speaker A: So with blockchains, we have these really cool Internet computers. They let us do all sorts of things, from starting with bitcoin, that gave us sovereign and permissionless money. Moving on to ethereum, that gave us permissionless access to computation. Right. I think it's one of the coolest things in the world that pretty much anyone here can access this permissionless substrate and run any computations they want on it, there's some magic in that. But with these Internet computers, the way that they do this magic, it's primarily by introducing the concept of scarcity into the digital domain. We've never really had scarcity in the digital domain before blockchains became as common as they have.
00:02:04.658 - 00:02:36.366, Speaker A: And this visualization here we have on the screen is something I really like. It treats each block as a bus. And I think this is a really effective visualization, because if you think of a block, well, there's almost so much space in it. And if a bus has a certain amount of seats, so does a block has its size. Well, so every little person here trying to get on the bus, it's an incoming transaction and they take up a seat. But unlike a bus that has a fixed number of seats and once it's full. It's full.
00:02:36.366 - 00:03:21.854, Speaker A: Our buses introduce a mechanism of surge pricing. And so what does it mean for the bus to get filled up? It means that the thing that by and large, all of us are here to bring about, right, like to increase the amount of demand for these Internet computers. Well, if we end up looking like the bus on the right side, right. We got a lot of passengers to get on. We're going to introduce the surge pricing. And so this is when that magical scarcity introduces a big, big problem. And all of us probably sometime in the last years, have felt the anguish that comes from the surge pricing, right? When you're trying to do a transaction and suddenly you're met with like a $70 fee on ethereum just to do that.
00:03:21.854 - 00:04:28.100, Speaker A: 21,000 gas of a basic transfer on eth, right. The gas just gets too damn high. And modular blockchains seem like an ideal solution for this. Again, if we're here, it's probably because we think there is some efficacy in this premise of we need more buses, we need more seats, and instead of just creating one massive bus that would be some magic monolithic chain, we're going to have a whole slew of smaller buses and smaller bus lines. Think of each one of these as being a new roll up, a new chain. And that's where something like hyperlane comes in, right? So here at the modular summit, we're talking about all the different ways that it's becoming easier and easier and easier to launch your own chain, to launch your own roll up. In fact, with some of the participants who are here today, folks like Caldera and conduit and eclipse and Altlayer, they're making it as easy to create your own chain such that you could really get something going within 1015 minutes.
00:04:28.100 - 00:05:29.022, Speaker A: But if you've done that in 1015 minutes, how do you connect to everybody else? You need something that you can support yourself. And this, again, is where hyperlane come in. I like to think of hyperlane as something that, through its introduction of permissionless interoperability, acts as the final layer, the layer that completes the modular blockchain stack. If we broke up execution, settlement, consensus, and data availability, for us to actually have practical benefits from that, our modular chains need to be able to talk to each other. If to enable that talking to each other, you need to go and convince someone on a permissioned interoperability team to add your chain, right? So you spun up your new chain in 10 minutes, but now you need to spend the next ten weeks convincing someone to add you that doesn't really cut it. And that's to the extent that folks have been playing around in the cosmos ecosystem. The magic of IBC is its permissionless nature.
00:05:29.022 - 00:06:06.850, Speaker A: It's the fact that you can spin up a tenderman chain. You can spin up a chain in the cosmos ecosystem, and through IBC, you don't have to ask anybody for permission, but it's become harder and harder. You can't really do that outside of the confines of IBC. And so we need to find a way to extend those confines. And there's a number of people working on this problem. So what is this problem, really, when it comes to modular blockchains? It's this problem of permissioned interoperability. It's the fact that you need an interoperability provider to add you, to add your chain so that your chain can communicate with other chains on their network.
00:06:06.850 - 00:06:35.606, Speaker A: I think, and certainly other people might disagree, but the reason for this is that, by and large, most interoperability protocols, they have coupled the product that they're providing, right. The ability to communicate between chains or the messaging interface. They've tightly coupled it with the security model. They've made those two effectively into just one thing. But it doesn't have to be that way. Right. It could certainly be decoupled.
00:06:35.606 - 00:07:10.680, Speaker A: You can have that product, the way to communicate between chains, that interface on one hand, and you can have security be provisioned on the other hand. And that's what we do with hyperlane. We really believe that modular chains need modular security. So we're going to get more into the specifics of that, but at a high level. Imagine most of you have had this experience of going to your bank. When you try to get a nominal sum, say a few hundred dollars out, the ATM will let you do that with just your PIN number. Don't really ask any questions beyond that.
00:07:10.680 - 00:08:03.400, Speaker A: Try to do something a little bit more intense. Try to withdraw $40,000, $50,000, try to make a large wire, or if you dare, try and close your account at the bank and get all the money out of it in that same day, they're going to run you through a much more serious line of interrogation. They're going to want to see your id. They're going to want to know who else is on the account with you. They're going to ask you, do you recognize the last ten transactions? See your Social Security number? And if you're in the US. So what is the bank really doing? The bank is looking at the context of what you're trying to do, and they're running you through a different security protocol, and that seems to make sense. Most people don't really object too heavily when the bank is trying to run them through a much more stringent process, when their action is going to have a much more significant impact on the account.
00:08:03.400 - 00:08:36.020, Speaker A: We don't really do that in crypto. Crypto you try to move $100 or you try to move $100 million, we run you through the same exact system. Might want to think about why that is. It's something that often doesn't really get questioned. For us, we didn't think that necessarily needs to be that way. And so the introduction of modular security really, really lets us do that. And so we could talk briefly about different forms of interoperability to understand this concept a little bit better.
00:08:36.020 - 00:09:19.470, Speaker A: The best way to verify state, if you can, is to leverage what some people call native verification. In this case, you're just leveraging the existing consensus between the connected chains. I'd say IBC is probably the gold standard in interoperability until today. And IBC gives you native verification. When you connect two chains through IBC, you're really just trusting the two chains that are being connected, which generally is a fine assumption, right? Like if you're connecting between, say, ethereum in arbitrum, let's say, or ethereum in avalanche. If you're using both of those chains, you're probably comfortable with the security models on both. So the fact that you don't need to introduce anything else is terrific.
00:09:19.470 - 00:10:29.560, Speaker A: But the issue with native verification is that it's a very costly method because you're basically replicating the consensus of one chain on another and doing it in a place that was not constructed for that, as is the case in the EVM world, is incredibly costly. The other mode is external verification, not too complex, right? So we're still trusting our a and our b, our ethereum and our avalanche, but now we need to introduce someone in the middle, and hence the name external verification. So this kind of looks and feels like an oracle. If you're familiar with the oracle problem, I imagine most of the people here are, and that's because external verification for interoperability, really, it's just a narrow scope of the oracle problem. Instead of oracleizing any type of information in the world, you're just oracleizing state from another chain. That makes it a slightly easier problem to solve, but it still, at the end of the day, it introduces a third element of trust. And this is where a lot of things can certainly go wrong.
00:10:29.560 - 00:11:00.970, Speaker A: So now let's move on to modular blockchains. Right again. We're here at the modular summit because we believe in this concept. And I personally believe that with modular blockchains, we're not going to have a singular hub. We're going to have a number of hubs from which we see an increasing number of smaller blockchains, smaller computers. Again, think of these as smaller buses, smaller bus lines. And so Ethereum becomes a hub.
00:11:00.970 - 00:11:25.990, Speaker A: Celestia becomes a data availability hub. Cosmos is already a hub. Think of these little guys here in optimism and base and arbitram. They can become little hubs too. We're going to have these hubs everywhere and more and more chains that come out of them. There we go. They need a way to connect with each other.
00:11:25.990 - 00:12:27.690, Speaker A: And every time you create another new little computer, another little bus, how does it communicate with everything else? So you do need permissionless interoperability. You need a way that this increasing universe of chains can connect to each other and can do that without having to ask anyone for permission, without having to ask anyone for help. We're in this space because we value our sovereignty, we value our freedoms and we want to be able to act without being gatekeeped. And so a world of permissioned interoperability where we're just waiting for people to add our chains to get this support, doesn't do much for us, doesn't do much for anybody. And this is what we built hyperlane for. So how does it work? This little schema here shows you the lifecycle of a hyperlane message as it goes from a chain a to a chain b. Let's say again, ethan, avalanche, ETH and pick your poison.
00:12:27.690 - 00:13:02.518, Speaker A: There are three critical parts to hyperlane. There's our mailbox. Simple contract that just sends and receives information, transfers bytes, encodes them, helps verify them. Then we have our security modules. Think of it as like some logic to run a test on to basically say, how do I get comfortable with what's been relayed to me? From a different place to that, we could use system of validators. We could use an optimistic system with some type of watchtower. Could use ZK magic when it becomes available.
00:13:02.518 - 00:13:24.620, Speaker A: Because who doesn't love ZK magic? It's the best. I'm a big fan. Or we could even use some type of committee based approach. And lastly, we have a relayer. Relayer's open role. You just heard Jim talk about all the difficulties in relayer systems. There's a reason why they are working on it, because it's a hard problem.
00:13:24.620 - 00:13:51.842, Speaker A: And the relayer in hyperlane is no different. Right. A lot of those open questions are things that every system with relayers needs to think about. So how does it really work? You have a contract or a user starting on the source chain. They send the message to the mailbox. They tell it they have the message body, the bytes that they're trying to transfer around. In those bytes, you could reason about, oh, I want to move this asset.
00:13:51.842 - 00:14:27.058, Speaker A: I want to deposit this thing in that liquidity pool. I want to borrow from this lending pool. The mailbox takes in the information about what needs to happen, where does it need to go, and then come in one of our security settings. So, in hyperlin, we talked earlier about this concept of modular security. So instead of being forced to use a specific option, you're always able to choose from a set of security modules. Don't like them, could build your own. Not everyone wants to do this.
00:14:27.058 - 00:15:12.766, Speaker A: It's not an easy or fun thing to do, but it does open the door to a security marketplace. In fact, where we are today is that external teams, teams outside of the hyperlane core team, are building different security modules. Talked a little bit about ZK magic. In fact, there's one team already leveraging their ZK proof mechanism to create a hyperlane security module. And so once your message is ready to get to the destination, the relayer comes in, and the relayer always observes the mailbox. Relayer is a fairly simplistic operation. Think of it like just a basic bot that looks at the mailbox and sees what you're trying to do.
00:15:12.766 - 00:16:13.970, Speaker A: It sees that the message is there and it's waiting to be processed. It sees that maybe you're kind and you want to pay them for this service, so you've included a little tip in there for them. Maybe you didn't, and maybe then the only reason that they would relay your messages, because, as Jim talked about earlier, is you might have some MEv opportunities for them to take advantage of as they take your message to the mailbox on the destination chain, they ready it for processing, and during the processing is when the logic is tested against the interchange security module. So there you can do some really fun stuff. We talked about the bank example where the bank treats me different. Whether I try to withdraw $100 or if I'm trying to wire out 50 grand, you could configure your app in such a way that when a message is received, you reason about the message a little bit, oh, what's this user doing? Well, they're just trying to send say $100 in a small swap. Great.
00:16:13.970 - 00:16:56.366, Speaker A: Send it through the fastest, run it through the fastest module that we have no need to have maximum security because it's $100. What's the worst that could happen? $100 could be lost. Someone's now trying to move $100 million. Let me ask you, anyone ever see a nine figure transaction that wasn't actually an exploit? Rarely happens. It's always an exploit. So a transaction of that size, we can now run it through a very slow path, a very secure path, maybe the optimistic path, which doesn't allow for the message to be processed for a very long period of time, set by you as de integrating app. And during that time, anyone can observe the transaction.
00:16:56.366 - 00:17:35.162, Speaker A: And if it doesn't look kosher, shoot it down. You don't have to take it. And once it's passed through the ism, the interchange security module, it's ready to go. Arrives at a destination. And so what did we just see? We just saw how we use hyperlain to communicate between chains. In the interest of time, I won't spend too much time on this slide here, but the key concept is that with hyperlink, you can choose how you want to secure your messages. Because there is no enshrined security module, you're able to leverage economic security in the form of staking.
00:17:35.162 - 00:18:10.722, Speaker A: You're able to leverage that optimistic security that we just talked about. And when you're just getting started, when the stakes are low, you could just have a multisig committee, and you can imagine that multisig option. It might actually be beneficial. Even when the stakes are high. Maybe there are certain actions that you want specific set of people to have to approve. Maybe it's your team, your company, maybe it's the key portion of your community. The folks who are emerged as the most influential players think of this as something that can be used, like the emergency switch in Makerdown.
00:18:10.722 - 00:19:09.158, Speaker A: Right? Hopefully, we all know that there's an option in maker to shut the system down. Never been used, but it's there. You might need to hit that switch one day. And so how does hyperlain compare to kind of regular bridging? Generally speaking, most bridging today is done through this form of, like, an omnibus bridge. You have one contract, and it takes all the assets from all the people, and they all sit in this thing, and it kind of looks like a nice honeypot. And this is how we end up with more than $2 billion in different bridge exploits, because the more people use it, the more appealing it becomes, because they're all there in the same place. But if we're talking about modular chains, like, why do we need to have this honeypot shared between everybody? So why not use this concept of modular bridging? Why not leverage what in hyperlane we call the warprout concept that lets you to have individualized path for each asset.
00:19:09.158 - 00:20:07.866, Speaker A: And each path can have distinct security settings. So you might want to have different settings coming into your chain, whether it's USDC or maybe when you're bridging your own native asset, you want to treat it slightly differently. And that's something that you can do once you leverage modular bridging. So what can you do with something like hyperlain? So these are some of the obvious fun things that you can do. You can have interchange swapping, right? So why do we do bridging? For the most part, because we want to have the asset go from one place to another and we want to do something with it at the edge. But if the thing that we want to do is swapping, we might not need to move it. After all, if the thing already exists on both sides, why not just transfer the logic of that action and say, hey, John is on Ethereum and Dave is on Avalanche, and Dave's got 500 USD USDC and he's willing to use it to buy some of John's Ethereum.
00:20:07.866 - 00:20:36.018, Speaker A: Well, great. So John, you get rid of your Ethereum, Dave, you get rid of your USDC, and we send that logic through something like hyperlain. There's also the concept of interchain accounts, which will be familiar for anyone who comes from the cosmos world. Hyperlane recreates that in a broader context. Some key differences there that we could get into. If you want to talk later, you could also bring interchange oracles. So we just released this just the other day with Hyperlain.
00:20:36.018 - 00:21:05.034, Speaker A: Now you can bring Chainlink feeds to your chain permissionlessly. So this is a problem that a lot of modular chains, a lot of roll ups face because they need access to chainlink data or other trusted oracles. And so you can do that. Another use case I like talking about, but I'm running out of time, so I'll be kind is interchange margin. Now, what does the end game look for? Something like Hyperlane. We could think about inner roll up networking where we have created all these roll ups. Well, they need to talk to each other more easily.
00:21:05.034 - 00:21:33.540, Speaker A: And like what network effects can you create from that then relaying services, that security module marketplace that I mentioned and ultimately this concept of interchange, this, but that was all the time we had so if you want to learn more, you can go on the docs. Docs. Hyperlane XYz can join our discord at just Hyperlane. Follow us on Twitter. Or you can just find me here. Reach out on, you know, generally pretty friendly. So thank you all for having me.
