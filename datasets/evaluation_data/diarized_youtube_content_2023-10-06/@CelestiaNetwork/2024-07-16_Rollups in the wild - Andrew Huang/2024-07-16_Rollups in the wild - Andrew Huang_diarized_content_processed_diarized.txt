00:00:01.840 - 00:00:26.050, Speaker A: Hello folks. Today I'm going to be talking about why launching your own rollup can save your startup and might let you build into product market fit. A little bit of background on myself. I'm the founder of Conduit. We're a rollup native cloud platform. We make it really easy for anybody to spin up their own rollup. We operate it, maintain it, upgrade it, and basically give people their own block space.
00:00:26.050 - 00:01:11.204, Speaker A: Today we do over 50% of the gas a second across Ethereum. We secure over 1.2 billion in TvL, over 30 mainnets deployed, and over 20% of the transactions sequenced on Ethereum are actually going through conduit sequencers. And you can see some of the great teams that we work at the bottom here. So before diving deeper, just establishing the background, what is a rollup? I'm not going to get into semantic debate today. I think rollups are really just off chain compute that settles securely on chain. And there's kind of a gradient of security models here depending on the stack that you choose and what da you might choose.
00:01:11.204 - 00:01:57.678, Speaker A: But generally what we're interested in here is the ability to verify some compute off chain kind of on chain. And rollups enable you to customize this compute to your application. There are kind of various configurations and customizations you can do. You can do things like use a custom gas token, you can use modular DA for cheap variable costs. And generally we're seeing this form factor kind of take over as it's kind of very similar to AWS, right? You can spin up your own EC two server, you can increase the memory, you can increase the cpu's, and we're starting to see that for rollups and crypto based compute. So before rollups it was pretty hard to build on chain. So you had a couple of options here you could deploy on a shared layer.
00:01:57.678 - 00:02:51.852, Speaker A: So like Ethereum kind of in the early days, cryptokitties was kind of an application that kind of took off. But when defi kind of made it to ethereum, cryptokitties got priced out, right? So no one was going to pay a couple of dollars to play cryptokitties game. And so they either had to migrate to a L2 for cheaper fees, or they may have even needed explorer creating their own Alt L1. And so that's kind of the evolutionary path that we see for applications is they first deploy on a shared layer. If they kind of take off, they'd run into vertical scaling limits. So a very common one is they're limited by the amount of gas that they can do on chain, and they're limited by kind of how expensive those fees can be. And since blockchains are so limited generally on shared layers, and compute today, you kind of design your application around that.
00:02:51.852 - 00:04:03.766, Speaker A: And I think that's kind of what we've seen in today's market, where many of the applications are DeFi based, where users are willing to pay very high transaction fees. And I think if we're going to see crypto succeed, we're going to need to see in abundance of on chain compute, where on chain compute is very cheap, and you can start to think about building more expressive and interesting applications on chain. I think the fact any of these options, you either kind of run into scalability limits, or you kind of frankly just run into upfront costs and delays in getting your application to market after rollups. I think prior to something like conduit, even running your own roll up was difficult. It was primarily the framework teams that, for example, an optimism and arbitrum that were running these rollups, taking millions of dollars of research and investment, a big team to operate and maintain them. I think what we do is we take that best in class technology and make it launch compatible for anyone to use. And because of that, I think it's a really great form factor for getting your own dedicated block space.
00:04:03.766 - 00:04:53.818, Speaker A: And so instead of launching your own later one, which might require a token to bootstrap validators, you can just launch a roll up. Instead of paying rent and fees, you can actually internalize this fee revenue. So a really good example are, for example, games, you might subsidize user transactions. So instead of taking fees, you kind of turn those transaction fees into cloud costs, which ends up being a lot more scalable for these games. Modular da makes this incredibly cheap, right? So instead of posting data to call data on ethereum, which has traditionally been very expensive, we now have things like any trust, celestia, of course, Eigenva and 4844. So blobs and so very, very cheap data has meant that transactions on chain can be incredibly cheap. And the next scalability limit is really compute.
00:04:53.818 - 00:05:40.412, Speaker A: And one of the major challenges, we're actually kind of tackling a conduit that I'll get into. And so really what traditionally took tens of engineers millions of dollars is now a three k a month conduit bill. And I think that compression of cost and that accessibility, we're starting to see a huge wave of companies and apps really take advantage of that. And so I've been talking a lot about the advantages, and I think it's important to dive into, like, a real world case of this playing out. And I think the kind of the one I'd like to highlight today is proof of play. And so maybe you guys have heard of Pirate Nation. It's kind of a very popular kind of crypto game, the coin.
00:05:40.412 - 00:06:14.210, Speaker A: Not financial advice, but the coin. Pirate is one of the only coins to be up in kind of the current market. Some stats on the game, they have over 100K Daus, five k concurrent players, 3 million transactions a day. And the total settlement cost for that as a roll up have been 1.2 eth. So that's an incredible kind of cost compression there. And I think it's really enabled their business in a unique way, and I'll kind of dive into some of the decisions that they made and kind of the technical pieces of how that's actually possible today.
00:06:14.210 - 00:06:50.278, Speaker A: So, proof of play. The founder was originally the founder of Farmville. So this is like a Facebook app game. They had 300 million users, earned a billion in revenue, and it's kind of running a similar playbook for on chain games, as many games did back in the day. They started out on Polygon Pos for cheap fees. I think very quickly ran into congestion issues, where obviously with EIP 1559, as you fill up the block space, fees get more expensive. There are also stability issues where you have reorgs.
00:06:50.278 - 00:07:28.656, Speaker A: And I think that makes building an application challenging. Because of that, they migrated to arbitrum Nova. So arbitrum nova is a L2 that is run by arbitrum. It uses any trust, which is a cheaper form of dA, to make fees cheap. And that actually enabled them to continue to scale, scale up their concurrence by ten to 20 x. I think the tragic thing about this migration was that they were really bottlenecked. They became almost 40% of the transaction volume on Arbitrum Nova, and they're paying anywhere from one to day on gas fees for their users.
00:07:28.656 - 00:08:08.456, Speaker A: And so that actually required them to limit the number of users playing the game, to limit concurrence, and in order to scale this game to hundreds of millions of users, this clearly wasn't going to let them do that. And so it was at that point, they started exploring their own roll up, and they came to conduit. They were exploring, what tech stack do I use? Where do I settle? How do I internalize these fees so that I'm not paying twenty k a day? And we helped them navigate that. They eventually ended up deciding to be in arbitrum orbit. L three. So that's an l three. That's settling to arbitram.
00:08:08.456 - 00:08:34.340, Speaker A: One couple of reasons for that. One, I think it makes settling very, very cheap. So instead of settling to Ethereum mainnet, you get to pay l two costs for that. Two. The arbitrum orbit stack is really great for games. So they have very fast block times 250 millisecond versus say, you know, 12 seconds on Ethereum mainnet. And that's important for things like ux, where you need a fast confirmation time.
00:08:34.340 - 00:09:33.270, Speaker A: And then finally, the key point here is really internalizing the fees, and the orbit stack makes it easy to recycle that. And so proof of play ends up powering a lot of the in game actions. And so when you're playing the game, and let's say you get like a loot box, all that is on chain kind of powered by their relayers. It was important for them that they were able to essentially recycle the sequencer revenue back to their game relayers in order to keep the game kind of powered. And so we built this kind of performance based dashboard for rollups called Rollup WTF? We're big fans of l two beat, which kind of show the security trade offs, but we didn't find anything that was really showing kind of real time performance metrics. You can go to this site today and it'll show you kind of what these chains are doing. Proof of play is consistently at the top in terms of gas per second, and so they're hitting 40 million gas a second.
00:09:33.270 - 00:10:21.692, Speaker A: That's roughly 20 times what Ethereum does and five times what base does. So it's a pretty significant kind of jump in the amount of compute that's happening over 35 DP's. And it's really starting to push the limits of on chain. And right now they have 5000 concurrents. There's actually a one to two hour queue time to get into the game because pushing the gas higher today increases latency. And so in order to kind of push things further, they want to go multi chain. And so what does it look like to have a game where you can actually shard the users across many different instances of that? And what are the problems that come up around multi chain kind of interactions? And so that's something that we're currently exploring with them, and we're kind of excited to kind of showcase down the line.
00:10:21.692 - 00:11:09.296, Speaker A: But I think it's a really interesting application of rollups where on any shared layer this would have broken the bank. And I think on their own chain they've kind of converted what would be very expensive on chain costs into cloud cost on conduit. And I think that is really like an underappreciated paradigm shift in what launching your own compute and launching your own rollup really enables you to do. And so just to quickly review and kind of recap kind of what happened prior to launching their own rollup, there's really limited throughput and high expenses on shared layers. By launching their own chain they were able to 100 x concurrent users. And importantly, and I think this is the stat of the day, is that they're able to pay 300 x less in on chain fees. So settlement costs were 1.2
00:11:09.296 - 00:11:57.820, Speaker A: ETH versus a few ETH a day before making that transition. They have a straightforward way to scale up from here by launching more chains. And I think it's a really interesting case study of rollup is the new server or database. And I think it's almost like a metagame shift of if I have all of this gas a second, if I have this entire thing to myself, what does that enable me to build that I wouldn't have been able to on a shared layer? I'm excited for what this technology is going to enable and importantly what builders are going to use it for. And I think proof of play is a great example and hope to see more follow that path and that's it. So you can find us at Conduit XYZ, our socials are up there as well. We have over 30 main at deployed and we're excited for this paradigm shift.
