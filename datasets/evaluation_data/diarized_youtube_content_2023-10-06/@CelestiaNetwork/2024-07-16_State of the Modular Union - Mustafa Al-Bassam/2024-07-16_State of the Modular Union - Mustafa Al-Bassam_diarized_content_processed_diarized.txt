00:00:01.840 - 00:00:53.394, Speaker A: Okay, so this is a photo of a electronics marketplace in Shenzhen, China. And this is the way that I think about the modular ecosystem. So a lot of your hardware, including things like phones and laptops, are made in this place, in this city in China, Shenzhen. And it's kind of like a hub where all of these different hardware manufacturers can all kind of work together. And in Shenzhen, you can prototype a new phone in one day or two days, whereas anywhere in the world, it would take you months or years. And you kind of have all of these different components of a hardware stack and all these different manufacturers all kind of trading with each other and providing different pieces of the stack. Like your iPhone, for example.
00:00:53.394 - 00:01:46.648, Speaker A: Most of the components in there are not made by Apple. It's made by all of these different manufacturers, whether it's like your camera, your touchpad, your screen, so on and so forth. And so you can kind of think of the modular kind of like ecosystem in that way. You have all of these different layers, like execution, settlement, consensus, data availability, bridging block explorers, role service providers. And all of these projects are all kind of like collaborating with each other, interoperability, each other, connecting with each other. But what if we took some gasoline and lit this modular marketplace on fire because it sucks? And what if we try to imagine what the ideal future would look like, what the ideal synthesis of this modular marketplace could look like? Because there's obviously still a lot of work to do. So, first of all, let's start with thesis.
00:01:46.648 - 00:02:43.190, Speaker A: Why are we even here in the first place? I think a big part of why we're here in the first place is because since bitcoin was created in 2008, we've been kind of stuck in this loop of new layer ones. Every cycle, there's these new layer ones that have incremental improvements over the previous layer ones. If you first had bitcoin and ethereum, and then you have cardano, tron, those kind of projects, then last cycle we had solana and avalanche. This cycle you have aptos and sui. Where does it end? Right. It's like every cycle there's new layer ones that have incremental improvements over the previous layer ones. And all these layer ones try to create a whole new ecosystem that replicates the ecosystem of Ethereum by having some Dex somewhere, some NFT apps, some namespace name service, and so on and so forth.
00:02:43.190 - 00:03:41.610, Speaker A: And I think if you want crypto to mature, then we have to kind of, like, break out of this loop that we've been stuck in by having a positive sum ecosystem, not a tribal ecosystem where it's like just a bunch of layer ones in tribes trying to create parallel infrastitions, reinventing the wheel, and so on and so forth. But with a modular ecosystem, you don't have to reinvent the wheel. If you want to make a better version of the EVM, you don't have to create a whole new layer one just to do that. You can just do that in a minute by going to a roll up as a service provider, create a fork of your evm, add a new opcode, whatever you want to do, and in 1 minute you can spin up your own roll up that inherits the security of Ethereum or Sylvester or any other delayer. And the first modular summit. Modular summit 1.03 years ago, I think, was very much about the theory of things like rollups and the modular stack.
00:03:41.610 - 00:04:22.490, Speaker A: Like a lot of it hadn't been implemented. Like there wasn't even, I think, any general purpose roll up frameworks. Like this was before you had op stack, this was just one, like Op was op mainnet, this was before arbitrary nitro. People were expected just to use specific roll up networks, roll up main nets, but you couldn't really build your own application specific roll up. Then last module summit last year, we had the practice, right? We had these things actually being implemented. We had roll up frameworks, we had bridges, we had all of this infrastructure. We had the first inklings of new roll up as a service providers.
00:04:22.490 - 00:05:11.310, Speaker A: But the big difference between last year and this year is that last year there was zero, zero blockchains live that supported data availability. Blobs like EIP 4844 wasn't live, Celestia wasn't live, nothing was live, right? You had very limited data availability through port. Now we have three, we have Celestia, we have IP 44 and Eigen Da. And I think that's significantly changed game, because now we're seeing an explosion of roll ups. And that's why the theme of this summit is modular expansion. So this was, if you look at the modular ecosystem in 2022, you know, it's pretty early 2023. Last year we had the explosion of kind of like these infrastructure projects, bridges, sequencers, frameworks, routers of service.
00:05:11.310 - 00:05:49.350, Speaker A: This year there's a little bit more infrastructure projects, right, but not as big as a jump from 2022 to 2023. There's some new execution environments, there's some new bridging providers and so on and so forth. But where we see the biggest difference is in the actual number of developers with the actual number of roll ups. Right. And I think this is largely thanks to the emergence of rollup as a service provider. So this was the roll ups that were deployed in 2023. And I kind of, like, sourced this data from l two beats wayback machine.
00:05:49.350 - 00:06:05.748, Speaker A: These were the. These were the roll ups, right? You had a bunch of general purpose roll ups. These what I call universal roll ups. And these were like, you know, just general purpose EVM chains. You know, nothing differentiated. And then you had application specific roll ups. You had a few of them.
00:06:05.748 - 00:07:17.432, Speaker A: Now, this year we have a huge explosion of new application specific roll ups and general purpose roll ups. And as I said, this is like, largely thanks to the emergence of new roll up as a service providers. Because what we're seeing is that developers are choosing to actually deploy new applications not using smart contracts, but by deploying new roll ups. Because what we're seeing as part of the fat application thesis is that application developers want to own as much of the infrastructure as possible, because then they can actually, for example, generate, either have more flexibility in making new use cases possible that weren't possible before or capture more revenue that makes developing these kind of applications more sustainable. So who knows what we'll see next year at next year's modular summit, 2025, I think 1000 roll ups. I mean, maybe that's ambitious, but I think we'll definitely see a lot more application specific roll ups for sure. But why does modularity actually suck? What is the antithesis of modularity? So I'll read out this tweet to you, right? We fucking lost it.
00:07:17.432 - 00:07:52.998, Speaker A: Nobody in their right mind wants over 550 roll ups and endless layers that take days to bridge back. What the world wants is one goddamn chain that just works, and that should be ethereum. No one with a shred of sanity wants to switch networks in metamask. No one wants the headache of adding a token manually on another chain because the contract address isn't the same. Bridging is a pain in the ass. What people want is to transact the value simply and directly, without all of this convoluted bullshit. And that's like, there's a lot of truth to that, right? It's like, it is kind of like bridging does kind of suck, you know, like metamask.
00:07:52.998 - 00:08:38.356, Speaker A: This is what metamask would look like if you use all these l two s. You know, who would understand this? Like, you know, doesn't make sense. You know, the other problem is, you know, there's this dream of sampling light nodes. So we do have sampling light nodes, you know, we have these beams of sampling light nodes, you know, post bigger and then it's pretty cool, right? But so far it's just a meme, right? Like, you know, it's just people running light nodes on the laptop in cool places. And that's kind of cool. But that's not the point of light nodes. The point of light node is not just to run them for fun, it's to actually embed them into wallets so that people don't have to trust centralized RPC providers like infuria and alchemy.
00:08:38.356 - 00:09:27.134, Speaker A: That should be the point of it, but we're not there yet. Finally, we're still deploying a lot of duplicate general purpose EVM chains. So what is the point of modularity? Are we actually taking advantage of modularity or are we just copying and pasting a bunch of chains with the same applications? Right? So what is the synthesis and like what is the destination? And where are we actually going? Because I do think there are, I do think there is progress on all these problems and I do think these are solvable problems and we have to solve them because we do need to break out of this monolithic layer one loop. We can't just have endless layer ones. So it's really important to solve this problem in terms of the bridging. These are solvable problems. Like there are good bridging experiences, you know, chain abstraction, you know, that's become, that's become hyped.
00:09:27.134 - 00:10:18.222, Speaker A: But there is some merit to chain abstraction and things like cross chain contract calls and intents, right? Those things do actually work. And there are good user experiences. Like SCip API is a pretty good user experience. For example, if you want to minter NFT on stargaze from the cosmos hub, you can do that in one transaction without even realizing you're interacting with a different chain. So you can try out products like the SCip API, for example, and hyperlink and see what a good bridging experience is like. Ideally, we live in a world where just like if you use a web browser, you access lots of different websites, but you don't care what infrastructure they use, you don't care if they're AWS or digital version. So it is possible we know how to build it.
00:10:18.222 - 00:10:55.856, Speaker A: We just need to build a world where you don't have to. If you're using a chain and you're bridging between two different chains or multiple chains, you shouldn't even have to realize that they're different chains. It should feel all like one seamless experience, like you're using one single chain. And that is possible. We've seen demos and actual live bridges that do that with things like crosstrain contract calls. Now we just need everyone to work together to actually make this possible, to make this widespread. So it's like if you're building a new roll up, then how you think about interoperability should be the first thing you think about.
00:10:55.856 - 00:11:32.810, Speaker A: And then we need everyone to work together, including block explorers and wallets. People need to build wallets that support things like chain abstraction or cross contract calls, and things like chain specific addresses. If we had the address format that was actually specified, the chain that addresses on that, simple things like that would make the user experience way better. Finally, light nodes. As I mentioned, the whole point of light nodes is that you should be running them. We should be running them in wallets, not just as a meme. So video.
00:11:32.810 - 00:12:30.380, Speaker A: This is a demo. It's actually live. You can go on this right now. Luminad rs this is the first step of making this a reality. You can now run a celestial data availability sampling light node on your computer, on your laptop, on the browser, in the browser or on your phone. So you can go on this website right now on your phone, and your phone will immediately start sampling from the browser. And this is a very important first step to actually making light nodes useful because now that we have a in browser implementation of a celestial data availability sampling Linode, what that means is that now it's way easier to embed it, to embed that into wallets, right? So now, because this is a webassembly implementation, so now we can embed that into wallets like Kepler or metamask way more easily because they're just browser extensions, right? And this is just a code that runs in the browser.
00:12:30.380 - 00:13:05.820, Speaker A: So this QR codes all around the venue. You can actually, I think if you scan one of the secure codes, you can actually mint an NFT for running one of these on your phone or on your desktop. So check it out. It's pretty cool. Finally, we are seeing an emergence of non EVM roll ups that aren't just duplicates of each other. I think the bottleneck has been a lot, has been a big bottleneck around that has been proving. A lot of the proving infrastructure right now exists for EVM.
00:13:05.820 - 00:13:49.124, Speaker A: You have stuff like arbitrary stylus, for example, which is an important direction. But we also have provable, there's been a huge amount of advancements in provable zkvms like SP one and rich zero. Now it's possible to actually prove any arbitrary code using a ZKVM without having to write whole new circuits. And I think that will open kind of like a whole new era of alternative execution environments that you can actually ZK proof using roll ups. And then, yeah, we do have some early alternative VM roll up frameworks coming live. You have Rolekit, which supports Cosmos SDK, you have move. Eclipse is building SVM roll ups.
00:13:49.124 - 00:14:11.040, Speaker A: Cartesi is pretty cool. You can basically Linux roll ups. And now we're seeing Solana L two s. I mean, there's dull discussion about Solana L two s. Is ZK compression a roll up? That's a debate for another day. But we do see now even Solana, which was always thought to be the end game of Solana, is one big monolithic chain. Now there's a demand for l two s there and roll ups.
00:14:11.040 - 00:15:28.080, Speaker A: So, yeah, I mean, I think it's really important that we do make progress on these problems and because, as I said, we need to, like, the crypto will always suck, and crypto will never actually mature into use, into a useful space. If we're going to be permanently stuck in this loop of just people building new day ones to basically have incremental improvements, but are basically tribes in a negative sum ecosystem where people are competing with each other, it's important that we have a positive sum ecosystem where modularism thrives over maximalism, and all of these components can actually harmoniously work together, and that it's not a pain in the ass for users. And bridging is seamless, and it all feels like one l one or one chain that everyone's using, otherwise we're going to be stuck in this loop of infrastructure. So that's why the theme of this year's summit is modular expansion. And so these are the things that I think we need to do to actually expand, to make roll ups expand and actually useful for people. And I'm looking forward to more interesting conversations with you all at the summit. Thank you.
