00:00:00.200 - 00:00:47.988, Speaker A: And, like, the rollout plan for them. Um, will, uh, you know, some folks will also share maybe some, um, notes about, like, you know, what the plan is currently so far and timelines and like, how do we, um. How did you know the team at celestial app, the core and app team and celestinode anticipate the rollout. Before that, we can start with like a roll call. On the consensus side, I believe we have representative from corn app dema celestial labs. Yep, I'm here, and I see victual and I think column as well. Welcome.
00:00:47.988 - 00:01:06.404, Speaker A: Anyone from Strangelove? Nope. IBC team. I don't see anyone. Binary builders. I don't see Marco informal. And I don't see Ethan from the Da side. Celestia node.
00:01:08.384 - 00:01:12.320, Speaker B: Ramen's hair. I think I flip his heads here. Yep.
00:01:12.352 - 00:01:36.104, Speaker A: Welcome, welcome. And. And from iger, I believe. Yeah, I'm here. Welcome, welcome. Okay, so I think the first topic we've got to talk about is the lemongrass update. So currently, if we go to CIP number 17, the specification for lemongrass hard work is final.
00:01:36.104 - 00:02:06.274, Speaker A: And all these cipher considered final. Everything went through rough consensus. And currently the engineering team is working on the rollout and stuff, including the audits and stuff. Ratul, I wonder if this would be a good time to go over everything that you kind of wrote down and stuff. I have it open, but if you want to share your screen instead, and if you want to talk about it, it's up to you.
00:02:07.454 - 00:02:11.134, Speaker C: Sure, I can share my screen. I feel like, um.
00:02:12.954 - 00:02:13.934, Speaker A: Go for. It.
00:02:16.394 - 00:02:24.054, Speaker C: Says disabled screen sharing, but I can roughly talk about the. The three dates that we kind of, like, are having.
00:02:24.914 - 00:02:30.094, Speaker A: Oh, can you try again? We made you co host, so you should be able to share screens.
00:02:30.434 - 00:02:32.226, Speaker C: Cool. Can you see this perhaps?
00:02:32.330 - 00:02:33.658, Speaker A: Yep, yep.
00:02:33.706 - 00:03:07.930, Speaker C: Okay, so right now we're kind of in this phase where we're getting a release candidate of Celestiapp. Maybe I can pull this up as well. A release candidate of Celestiapp 2.0 audited by informal systems. And we expect that to finish in about two or so weeks. And then we're going to address findings up until the end of June. Then the next step is honestly deploying to Rabbika and pending that success, mocha.
00:03:07.930 - 00:03:39.334, Speaker C: So we have some, like, rough dates here. These are all, you know, maybe moved if we uncover issues, and then after we deploy to Arabica, you know, simulate the hard fork, do the same on Mocha, then eventually we'll get to Mainnet. So optimistically, this is looking in like August 1 ish. Timeline. That's really all I had. Dates wise. Audit's still going well so far and yeah, that's about it.
00:03:40.834 - 00:04:51.688, Speaker A: Sounds good. I'll also go over the rollout plan from our side in terms of coordination. That kind of goes in line with the core def's timeline for software releases. Okay, so we created this doc to try to cover everyone that is a stakeholder in Celestia so far, when it comes to hardworks. So far we can cover custodian exchanges, validators, roll up grass, partner node operator, block stream and settlement layers. Core developers Edward tool showed with like the roll out plan, security and DevOps stream as it relates to testing anything and orchestrating a heart perk on a private testnet prior to us as a whole community coordinating an upgrade on Arabica, which is already, I believe it already being done in parallel, but we potentially want to add a few more kind of tests to it. The software client will be Celestia core and app, celestia node and Blob stream relayer.
00:04:51.688 - 00:05:00.654, Speaker A: I'm not sure if we should include IBC relayers. Like do these need to be upgraded? I departed a kurtos on this.
00:05:05.514 - 00:05:21.094, Speaker C: That's a good question. The IVC relayers are like separate binaries, so my immediate reaction is that their versioning is totally unrelated. So yeah, people shouldn't need to update their IBC layers.
00:05:22.684 - 00:05:27.700, Speaker A: So the IDC relayer would work whether we have like pre and post hard fork.
00:05:27.732 - 00:05:36.184, Speaker C: Right, right. Like the latest Hermes relayer or go relayer should work pre and post. Obviously we should test that on testnets before mainnet.
00:05:37.084 - 00:05:56.894, Speaker A: Okay, that sounds good. I'm just going to add it for the sake of testing. Even if like we don't think it's needed. At least it's better to cover all your vectors. I think the odyssey already covered. You have more context than us. And about the software client for testing, and I believe.
00:05:56.894 - 00:06:42.464, Speaker A: I'm not sure if I saw. Yeah, I saw via here and I'd love to pick your brain on this. So currently the core dev, the testnet called robusta. I mean some of us are aware here from the celestial lab scene, but like for anyone who's not aware, they're robusta, which is like an internal kind of testing environment. Prior to it, anything hitting a. I kind of scoped out four different roll up parameters that we potentially want to deploy on robusta. I don't know if Roku is needed because I don't believe there's a version yet that's been released for Mainnet, or rather the way to think about it is there's no Roku roll up currently deployed on Mainnet.
00:06:42.464 - 00:07:37.524, Speaker A: So not sure if this is needed for deployment, uh, for testing. But like we definitely have an asteroid roll up, which is formal. There's, um, optimism roll up and arbitrarium roll up. Um, already I believe the majority optimism roll up. But then, you know, with arbitram roll up, I believe there is some team that might be want to deploy soon, um, prior to the hard fork activating. So I deem arbitrarium work testing. Now my question is, um, given the relationship with Ras partners, if we just deploy robusta with like all the changes, would a RAs partner be able to deploy like an op stack roll up or an arbitram roll up and connect it to robusta for testing? Like maybe convoy or caldera? Yeah, go ahead.
00:07:38.904 - 00:07:57.348, Speaker D: Hey everyone, you can hear me? So we definitely miss here two partners to add, or I would say, yeah, two partners. First one is dimension. As they have role apps on tested and production, we need to add them. I totally forgot about that. When we're talking internally and the second.
00:07:57.396 - 00:07:59.316, Speaker A: Team call out, yeah, yeah.
00:07:59.340 - 00:08:15.544, Speaker D: And the second team, last but not least, is initia with their initiatives. They're also on Testnet, and some of them will go to mainnet eventually. So we need to take care of that too, which in general, you know, creates pretty much.
00:08:17.044 - 00:08:25.864, Speaker A: I have a question for initial. What kind of roll up framework do they use? Good, if we can abstract it, I think that might be easy, but I'm curious.
00:08:26.564 - 00:08:38.982, Speaker D: So they're using this interwoven roll up design with malicious, this minivms, mini lub vms and mini bottles. And we just need to contact them because they are using it.
00:08:38.998 - 00:09:09.164, Speaker A: Okay, that's a good call out. That's good to know. And do you think like maybe congregate or caldera or maybe gelato? If we give them robust like RPC endpoints and stuff, they would be able to deploy like let's say an arbitram roll up that uses, let's say, Seboyan for the smart contract deployment. But it connects to Robusta, da layer, testnet, whatever.
00:09:10.104 - 00:09:20.764, Speaker D: I think we need to ask each last team specifically if they're committed to that. If, let's say we have at least the majority of aspects, then we should. Otherwise, I don't know.
00:09:22.824 - 00:09:50.024, Speaker A: I mean, is it more to minimize any kind of DevOps related work that we're doing? Um, because, you know, we're focused on, we'll be focusing on robusta prior to eradica. So what I'm curious about is just to minimize, like, the celestial acting, having to deploy different types of roll up framework for the sake of testing if a RAS partner would be able to help and stuff, which that, like, the reason for that question.
00:09:50.484 - 00:09:54.384, Speaker D: Yeah, we just need to ask around. Yes, right now we have no soft commitments whatsoever.
00:09:55.374 - 00:10:01.794, Speaker A: Okay, maybe we can start with conduit, given conduit, has the majority of rollups deployed.
00:10:03.214 - 00:10:19.754, Speaker E: I just have a question here. Is Robusta going to be semi public? Then? Like, are we going to work with people and give them sort of, like, the necessary, like, tokens and support they need to actually test their roll up framework to make sure it's still compatible with robusta?
00:10:21.794 - 00:11:05.494, Speaker A: Yeah, I wouldn't call it, like, public, like, maybe just like public just for the RAS partner. If one raspberry wants to deploy, like, an arbitrarium and optimism type roll ups, and then we can orchestrate a hard work on robusta, like, relatively quickly and just see what happens with the roll up. You're like, you know, to confirm that there's no issues there. It kind of saved us a lot of time just for these kind of parameters. But I don't think the plan would be to make it public or anything like that. It would just be for, like, let's say Conway will just. Celestial app can share the RPC endpoint with conduit directly if they're willing to deploy roll ups.
00:11:05.874 - 00:11:13.134, Speaker E: I guess I'm just wondering whether, like, the solicitia lab engineers are going to be deploying these roll ups or just the folks we're working with.
00:11:14.124 - 00:11:22.144, Speaker A: Yeah, the ask is for conduit to deploy the roll up, not the Celestial M engine. So that can save everyone a lot of time.
00:11:22.444 - 00:11:39.684, Speaker E: I see. Because I assumed a replica would have the same thing, which is public, and we're going to perform an upgrade, and then if you're interested in making sure that your roll up framework is still compatible, then you can follow along.
00:11:40.504 - 00:12:07.164, Speaker A: Exactly. The only problem is, with Arabica, once you upgrade it, you upgrade it. Right. So if anything goes wrong and you have to fix something, it's, you know, you would have to do another hard work on Arabica after. Whereas if you just quickly test it with robusta, you can iron out a lot of bugs before you do something that's publicly used by developers and other folks, because you get that one shot.
00:12:07.674 - 00:12:11.214, Speaker E: So this is like a semi public, ephemeral upgrade, like network.
00:12:12.074 - 00:12:41.798, Speaker A: Yeah, that would be the robust scope. Other things are. I'm not sure. I think that might be a good question for Rashid. Or maybe John, which is aside from the blobstream relayers, if they need to be upgraded. I don't know if there's any impact on the blockstream smart contracts per se that are already deployed. Like do they have to be modified or anything? I don't think so.
00:12:41.798 - 00:13:33.904, Speaker A: But like I not the best person to answer that question. I don't think any changes are needed. Okay, sounds good. Then after that like there's also like the brick node and stuff like with or without Schwap we can cover swap in a bit. And yeah, like the idea to trigger hard fork activation after a few blobs, do a few measurements. Like our blobs continue to be submitted by all different four or whatever amount of roll up from the RAS partner and you know, are we still continuing to produce blocks then Arabica, mocha, Mainnet, rutul already covered. What I'm going to cover is more like the stakeholder coordination rather than like the timeline or rolling out the software.
00:13:33.904 - 00:14:18.688, Speaker A: Um, the CIP stuff is kind of covered already because uh, the specification had went to final. Um, so in terms of like I think when you look at different kind of partners, um, like exchanges, you got to assume it. You just look at it from the point of view of like who's running a node, right. Um, and you try to like tackle as many as you possible from like at least you try to hit 80% of exchanges by volume. Just because um, users get impacted if you don't really coordinate with exchanger. This is normally how hard works are done or at least would know exchangers. Some exchange might surprise you and say that they're not running a full node and that's a whole other topic.
00:14:18.688 - 00:14:59.892, Speaker A: But um, yeah, with validator try to capture many validators but what I'm interested in is trying to hit 80% of the stake and what are their, what is the set of validator? They get you 80% of the stake in terms of like who needs to upgrade. So these are just like coordinate coordinating with them to upgrade for Mainnet. We'll do the same for mocha. But you know, mocha can be relatively easy. There's also custodians roll ups on main net. These sort of 15 roll ups we have on main net. And if they're upgraded, the good thing is, the good news is most of them are using a RASP partner.
00:14:59.892 - 00:15:53.444, Speaker A: So if the Rasp partner update the assumption like these roll ups already in a good shape. And then finally node operators like anchor quick node, Alchemy, P two P Numia, Kepler Leapwallet, Cosmos Station and selenium coordinating with all of them. I did add blobstream mainnet, which are like the relayers and stuff, and the contract, but it sounds like the contract don't need to be upgraded. And then IBC relayers who are running a relayer, we actually have a role for that and discord for Celestia for different types of relayer. So actually, there were some few questions that I think will be good for the group is for like the core dev, is it a rolling hard fork, like during the block space race program, or is it like a tendermint one where you kind of swap things? Where. Oh, I'm just saying. Viet raised his hand.
00:15:53.444 - 00:15:55.784, Speaker A: Hey, Viet. Sorry. Start out now.
00:16:00.284 - 00:16:02.308, Speaker D: Sorry, it's a little.
00:16:02.396 - 00:16:03.584, Speaker A: I didn't raise my hand.
00:16:06.044 - 00:16:37.914, Speaker C: I can answer. I could try to answer this question. So the hard fork is going to be, we're going to cut an official release of Celestia 20 and ask all consensus node operators to upgrade. When they start up their node, they're going to provide a upgrade flag. So the Cli flag is literally v two upgrade height. And for each network, that's going to be different. For Mocha, it might be a million, for Arabica, it might be 2 million.
00:16:37.914 - 00:17:06.304, Speaker C: But the idea is all consensus nodes can operate and run the v two binary ahead of time, ahead of that upgrade height. So they don't actually need to be online, like, when that upgrade height takes place. But then at the upgrade height, that's when the hard fork kind of happens and we lose. We, we add some new features for VQ and we drop some things that we wanted to delete. Yeah. Does that kind of answer the question?
00:17:07.044 - 00:17:30.929, Speaker A: Yeah. And the mechanism there is, by specifying the block height, the assumption is the features already made in that release and the block hype is just to activate the features rather than to, like, I heard, like, you know, I've seen some stuff around Cosmo tendermint based hand where they do like, like with Cosmo visors swapping binary. But I don't believe that's the case here.
00:17:31.001 - 00:17:33.453, Speaker C: Right, right. That's not the case for us.
00:17:34.113 - 00:18:29.886, Speaker A: That's good. I appreciate that. Okay, that answered the question. Um, I think now, is there any other comments on Lemongrass before we talk about Schwab, given that glib is here as well? Okay, I think next up is we want to talk about. Wait, before we talk about Schwab ritual. If I believe, if I remember correctly, based on your timeline, I think roughly by June 30, end of this month, like potentially addressing audit finding and maybe cutting a release around them. Right now, going back here, we can talk about Schwab and glib.
00:18:29.886 - 00:18:40.944, Speaker A: If you want to talk about timeline and stuff and what kind of discussion we had at celestial lab, feel free to do that. Or I can summarize it, but I think you have the best context.
00:18:43.124 - 00:18:47.464, Speaker B: I can give overview on that. Can you hear me, by the way?
00:18:48.004 - 00:18:48.784, Speaker A: Yeah.
00:18:50.764 - 00:20:19.784, Speaker B: So yeah, the swap is not a consensus breaking update, but it will be a bit complicated to coordinate because it will break the applications, it will be API breaking, and it will be, all the nodes will have to resync as well. And there's multiple problems we have to solve there. So in order to solve them, we will phase, we will phase out swap and phases like there will be in total, like four phases where first one is where we start with an announcement, and it's unclear where exactly the first phase will start. Currently we mark the date as July 1, but depending on the lemongrass, we may move it and push it back a little bit so that we don't have too big updates happening at the same time. That may cause coordination issues and stack bugs on each other that will be complicated to resolve. And then we will start deploying after the announcement. In a few weeks, we will step by step deploy the Schwab on each test network we have, which includes replica, which includes MoCA, and eventually mainnet.
00:20:19.784 - 00:21:19.054, Speaker B: And we will give the node operators and application runners a time buffer to upgrade, and we will support two basic computer networks at the same time. Once the new phase starts, the new network gets upgraded and the previous one drops any support for networks compatibility. So once the phase ends, application developers expected to update their software. Otherwise they will lose the access to the network. But we give the good enough buffer for test has like two weeks and a main at like a month for application devs to update. And what's, yes, what's the, again, the lemongrass target date.
00:21:20.794 - 00:21:45.854, Speaker A: I think based on Rutul note, it was, they're hoping to make a release. We're not talking about Mainnet here for at least for Rabbika, the main, the Ravika release, they're hoping to target June 30. So end of this month, depending on the audit findings and them fixing the audit finding, by the time they can make a release by end of June.
00:21:48.294 - 00:21:57.354, Speaker B: And is it going to be like also gradual, like they start with Arabica and then a mocha and mainnet, right?
00:21:58.414 - 00:22:03.034, Speaker A: Yeah, it will be Arabica, mocha, Mainnet.
00:22:03.494 - 00:22:10.794, Speaker B: And do we know the time spaces between, in between the tusks.
00:22:13.274 - 00:22:16.570, Speaker A: Viet had thoughts about it. Yeah, go ahead. Ritual.
00:22:16.642 - 00:22:38.354, Speaker C: Yeah, I counted for, like, two weeks on each testnet. So that way we have, like, a week of the binary running before the upgrade height, and then a week after. And then. So, for example, two weeks on Arabica, two weeks on mocha. That was my guess. But we can expand that if. If we uncover issues.
00:22:40.174 - 00:22:42.074, Speaker A: I think two weeks are good.
00:22:43.454 - 00:23:13.984, Speaker B: Yeah, go ahead. I also think two weeks ago, that's something that we will do with schwab. Like, right now, there's still a bit of question. How do we make roll it out together? The simplest thing to do would be just, okay. Once lemongrass is a mainnet, we can start doing all the schwab stuff. That will be the simplest thing, but it will delay Schwab significantly. And I ideally would avoid that.
00:23:13.984 - 00:23:43.344, Speaker B: Maybe we can do it, like, okay, lemongrass has finished testing on Arabica. Then, like, a few days after we start to swap on Arabica. And the same poll goes for every test. So they, like mocha and Mainnet. So they, like, overlap a little bit, but still the chestnut is not overlapping. And what do you think of that? Would it be too much?
00:23:44.204 - 00:24:34.344, Speaker A: No, I think this is more reasonable because. Yeah, I would kind of think about that the same because, like, let's say when lemongrass orchestrate the hard work on Arabica, it's running, you know, the core divers satisfied, like, okay, now let's move on to mocha by then. Like, we can coordinate schwab on Arabica while we wait, you know, so that at least you can get some testing done before that. And, you know, like, it's just like, given that, it's like, these are two major changes, one on the consensus side and da side. Like, yeah, the idea is just to try to make sure not to do them both at the same time, at the same network, just because it's not really tested. Like, I was talking to ritual. At least on the robust side for tornado app, they're not testing it would swap, which is fine because they're focused on lemongrass specifically.
00:24:34.344 - 00:24:48.704, Speaker A: But I think this works good for, like, once we finish a test net and, you know, lemongrass coordination, move to the next test nets or main net. You can start with, like, coordinating on swap and stuff.
00:24:49.604 - 00:25:25.170, Speaker B: That's good. Thank you. And I also have another question. Like, we can say that this. This part is confirmed, and the next question is, it comes back to the point on backwards compatibility. So by default, the swap is, again, breaking and very breaking, but we still want to support backwards compatibility and we saw that by infrastructure rather than software. So there will be a point where we will be running both versions at the same time.
00:25:25.170 - 00:26:05.274, Speaker B: So like our infrastructure will be running old software and new software, so that both worlds, the history, historical protocol and the new protocol, can live together. And so we give time for application developers to update. And the question is, can we ask the community, and particularly those who are in the delegation program to run bridge notes for some short period of time for both versions, like the old version and the new version?
00:26:06.454 - 00:26:27.234, Speaker A: Yeah, I think we can specify that. If we can just maybe async, if you provide what the version numbers and stuff, we can coordinate with the valid under the delegation, under the delegation program and what is exactly required of them given a preferred period of time. I think it's more than. Okay, cool.
00:26:29.774 - 00:26:40.234, Speaker B: I have no more questions. Like the plan seems to be pretty clear. Anyone has questions, I can also clarify that or we can move on.
00:26:41.094 - 00:27:33.512, Speaker A: Yeah, anyone has question to glib about Schwab? Nope. You guys can expect the whole community to inspect more like blog posts and information about both upgrades, like in a digestible manner for the public as we get closer to the end of June. I know that now. I'm not sure if there's any CIP currently being proposed. I'm not sure what's happening with the CK working group or the canonical API CIP or others. If we book, if we have a call for next week, I guess the only update we got to talk about would be any findings from the informal audits. Right? Ritual.
00:27:33.512 - 00:27:38.484, Speaker A: I'm not sure about any other CIP being proposed at the moment that we can cover in this call.
00:27:39.744 - 00:28:00.022, Speaker C: Yeah, I feel like Callum briefly talked about the author blops one in the previous call, so. And also I don't see them anymore, so we don't need to talk about it now. I will say for the informal audit findings, we might need to wait two weeks for them to like give us back stuff to review here. So maybe in the.
00:28:00.198 - 00:29:10.784, Speaker A: Yeah, anyway, so do you guys want to push the CIP call, given that the. There are no CIP? I mean, yeah, column has one, but given that we just focused on the audits right now, unless there's some new cipher, just propose we push back the call one month. Given there's not a lot of things to cover while we're waiting for audits and there's no new CIP topics to cover for the time being. I'm not sure I'd rather get feedback from everyone about this. What do you guys think? Or, I mean, like, if you guys want to talk every two weeks, just fine with me as well. I'm just kind of concerned if there's no topic for them in two weeks time and we're just waiting on audits and there's no cips, there might not be much to cover. Take silence to mean yes.
00:29:10.784 - 00:29:37.384, Speaker A: Unless it means no. We want to stick to two weeks time. Okay, cool. Modular carer. I think for the next call, CIP 13, let's push it back to one month from now, like four weeks from now. Okay, perfect. All right, y'all, thank you so much.
00:29:37.384 - 00:30:01.404, Speaker A: If, you know, you have more question about the CIP, go to the forum post. But the one right now for, like, lemongrass, CIP is already final. And Schwab, if you guys want to talk about existing UCIP, go to the forum and we can continue discussion. With that said, thank you so much. Looking forward to the hard work and to the informal audits. And take care.
00:30:02.954 - 00:30:03.734, Speaker C: Thanks.
00:30:04.914 - 00:30:08.226, Speaker A: Bye bye. Thank you. Bye.
