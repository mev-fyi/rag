00:00:01.800 - 00:00:32.960, Speaker A: Hello everyone. Nick messaged me a few weeks ago. He told me we need something spicy. Can you come up with something spicy? And I think I haven't pissed off enough people this week, so I decided to come up with something spicy. So my name is Togrul. I don't know, I do something at scroll, complain about things on Twitter. I guess my talk today is shared security is a psyop or the roast of restaking protocols.
00:00:32.960 - 00:01:12.682, Speaker A: I'll just give you a secret. I'm moderating a panel on restaking later on, so it's going to be spicy as well. So let's start with the basics. Security is not a binary construct, so also it's not a one dimensional construct, it's a spectrum. And security in the context of distributed systems can be broken down into three types. I'm struggling here. Okay, economic security, which basically means it introduces an economic cost to certain types of attacks.
00:01:12.682 - 00:01:57.220, Speaker A: So think of proof, of stake, of proof of work. They introduce a certain cost. Then there's protocol security, which means that basically the protocol enforces certain rules on the level of full nodes. So think of, let's say if an Ethereum validator, proposer for a slot proposes an invalid block, the full nodes will just reject it. So an attack is possible even if you control like 67% plus of the total stake in Ethereum, but all the honest full nodes will just reject that block. So the protocol still enforces the rule, even if you, even if you manage to overcome the economic security. And then the big boss of everything is Social Security.
00:01:57.220 - 00:02:40.562, Speaker A: So basically we introduce social coordination cost of the attack. So even if like you manage to break both the economic security and protocol security, somehow the social consensus can just agree to ignore it. So for example, you can slash socially slash someone or just roll back the chain, etcetera. Think of the DaO hack, for example. So these guarantees are typically layered in a typical l one. So for example, if the economic security fails, you fall back to the protocol security, and if the protocol security fails, you fall back to the Social Security. So shared security has been a buzzword for quite a while.
00:02:40.562 - 00:03:51.026, Speaker A: That is commonly used to describe various constructions, and it is a valid term, but it's been basically co opted by everyone who wants to use it for anything, anywhere, and it became quite a buzzword. So what is shared security? Or precisely, can protocol share security through economic security? The answer is no, I'll front run it. So imagine a scenario. So a malicious entity attacks protocol B that is economically secured by protocol a possible, I don't know, let's say there's a chain that is secured by an AV's and Eigen layer. So to successfully perform the attack, and let's say all the staked ETH are staked into that AV's. So to successfully attack, you need to control 67% of the economic security of protocol a. And let's say it's objectively slashable.
00:03:51.026 - 00:04:35.096, Speaker A: So, for example, I don't know, it's a double spend. And basically, when you double spend or do something, protocol a just slashes your stake. So if the profit of the attack is higher than the cost of the attack, then the attack was successful. And basically protocol a remains unaffected. It is somewhat affected by the fact that a lot of Eth gets slashed on the base layer, but it's unaffected in the sense that basically the protocol continues functioning and it doesn't fail, it just loses a certain percentage of its security. So do protocols a and B share security? No. Again, no.
00:04:35.096 - 00:05:11.400, Speaker A: No. The answer is no. And so the correct way to say it is that protocol a and protocol B share economic security. So then what the hell is shared security? So shared security is when protocol a and protocol B share protocol security. So what that means is, if protocol b fails, so should protocol a every time. So basically, every time there's an attack on protocol b, protocol a fails as well. Like, there should be no exceptions.
00:05:11.400 - 00:05:35.238, Speaker A: And so, if restaking only enables economic security, why does restaking require stake tokens? Well, they do not. It's a lie. That's where the PSYOP comes in. We've been lied to. The restaking actually needs stake tokens. It does not. It is literally a Psyop.
00:05:35.238 - 00:06:26.512, Speaker A: You can literally stake any tokens, any token, and get comparable security guarantees. Obviously, you can argue that tokens that are too volatile or have, like, if you launch a meme coin that has a value FTV of like $20 billion but gets rugged in a day, obviously that's not an option. But for any token that has a stable and illiquid market, it is a valid approach. So you can literally stake any other token and get the same security guarantees. So I went through the website of the major restaking providers, and I think it's time to correct their messaging a bit. So, Eigen layer shared security to hyperscale Ethereum. Restake now partially shared economic security to hyperscale Ethereum.
00:06:26.512 - 00:07:00.734, Speaker A: That's the correct way of saying it. It's symbiotic, permissionless restaking. Symbiotic is a generalized shared security system enabling decentralized network, blah, blah, blah blah blah blah, whatever, it doesn't matter. Symbiotic is a generalized, partially shared economic security system. Doesn't have the same ring, but it's truthful. Surprisingly enough, Croc is actually quite honest. Croc is the universal restaking layer, powered by the entire crypto economy across every asset and every chain.
00:07:00.734 - 00:07:18.848, Speaker A: Somewhat true, but embellishing it, but whatever, I'll give them a pass. Babylon. Bitcoin security. BTC security. It's not bitcoin security. Come on, guys, you should know better. Solaire, the shiny new boy on the scene.
00:07:18.848 - 00:08:10.552, Speaker A: Solaire shared security secure Solana's native security aristic verification rollbacks, utilizing Solana's l one. Validators genuinely no fucking clue what they're saying there. Genuinely, like I what is that? Whatever, it's fine. Let's pretend that it's partially secured, economically secured, whatever, it's fine. Now you might rightfully ask, what about rollups? Because a lot of people keep chilling. Oh yeah, rollups share security with the underlying base layer, blah, blah blah, super secure ethereum secured whatever is shared. Is security inherited by rollups I up as well? Well, it's a bit of a yes and no.
00:08:10.552 - 00:08:45.590, Speaker A: It depends on how you phrase it. So rollup inherited certain security guarantees from the base layer. So for example, they inherit, oh, sorry. So they inherit ordering guarantees, the a guarantees, et cetera. But they don't inherit full security. And again, when the roll up fails, there are certain scenarios when the underlying base layer doesn't fail. So that's why rollups share partial security, a protocol security with Ethereum, because they inherit certain guarantees, as I mentioned before, like ordering the a, et cetera.
00:08:45.590 - 00:09:19.880, Speaker A: And so in certain scenarios, a roll up can fail without affecting the underlying layer. So, for example, let's assume a roll up that has fraud proofs, because fraud proofs are more likely to fail fails. Because of the fraud proofs, the l one still continues functioning as normal, but the roll up has failed. So that's why I would argue that rollups don't have full security, but inherit a lot of security from the base layer. So yes, shared security is a psyop, thank you very much. And if you have any questions, feel free to ask.
