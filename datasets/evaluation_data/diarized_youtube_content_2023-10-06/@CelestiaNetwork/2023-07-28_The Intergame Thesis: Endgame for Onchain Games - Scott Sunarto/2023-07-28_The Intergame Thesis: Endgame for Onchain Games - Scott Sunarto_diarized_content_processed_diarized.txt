00:00:01.690 - 00:00:48.822, Speaker A: Cool. Hello everyone. So today I want to talk about a little bit that I have been very passionate about, and it is about thinking about the practical thesis for Onchain games. For a long time we've talked about onchain games from perspective of really kind of hobbyists, right? Thinking about like what could the future be where the world is on chain? However, we haven't really thought about how could businesses succeed in an environment of fully on chain games? And this is what the intergame thesis is going to be. Oops. To just quickly introduce myself, my name is Scott. I'm the founder of Argus.
00:00:48.822 - 00:02:08.040, Speaker A: Previously I was co creator of Dark Force, the first fully on chain mmrts game built using ZK snarks. Before we kind of get on to what the intergame thesis actually is, I think it's useful for us to have a quick of background of how onchain games have evolved in the past few years since the phase Zero, which is around 2020, when we started thinking of publishing Dark Forest and creating the first fully on chain games. So Dark Forest, as some of you might have already known, is like a fully on chain space exploration MMRTS game on Ethereum, powered by Cksnarks back then, not a lot of games really exist, not even the current thing that people think about as crypto games. And Darkforce became this beacon of hope for a consumer application. On Ethereum, we used the blockchain not only as a way to host nfts or host in game assets, but to also as a way to have user generated content that directly interoperates with a game state that again is fully on chain. As a result, we had thousands of players who are playing the game within the first few weeks of launch. And Flea flooded a blockchain which back then was called Xdai, now known as gnosis chain, with tens of thousands of transactions burning trillions of units of gas for executing the game move.
00:02:08.040 - 00:03:17.740, Speaker A: So this became the big Bang for fully on chain games. We created a realization that building an interoperable open and droppable system is powerful even outside of decentralized finance. Consumer applications benefit from these open and trappable system by creating an open and user generated content layer on top of their game by default. With Dark Forest, people are able to build their own clients, and players can also build platforms on top of the game, expanding the design space for things like guild systems, mercenary systems, and so on and so forth. For example, in Dark Forest, people created a bounty marketplace where you can basically pay people to kill another player in the game and they will get rewarded if that player is killed automatically on chain without the need of an off chain platform. Smart contract are basically able to read directly from the game state to Firefly whether or not a certain player or certain planet have been killed. And this became a really powerful realization for a lot of game developers in terms of designing their game with that open and composability in mind.
00:03:17.740 - 00:04:21.130, Speaker A: And the next phase became the autonomous world that right now we are living in, like after the Dark Forest had its success in 2020. A lot of people continues to be perplexed by fully on chain games. And this leads to the birth of the concept of autonomous world with companies like Lattice who have been pushing autonomous world libraries like mud and so on and so forth, to make it easier for people to build their fully on chain games content. Companies like Primordium is also building a fully on chain game that uses this autonomous world concepts to create constraints of physics for digital worlds. And again, there's also increasing number of people building libraries and frameworks for people that are interested in building fully on chain game autonomous world, like things like mud, Dojo and some others built by companies like Curio and so on and so forth. So the key unlock with this phase of on chain games is digital physics. It's the realization that open doesn't necessarily mean it's lawless.
00:04:21.130 - 00:05:24.546, Speaker A: It answers the question of how do we handle open interoperability and composability with a game when there is some constraint that is imposed on them. To give you an example here, is that you have to contrast an autonomous world, or kind of like digital physics with client side modding, right? If you play, let's say, I don't know, GTA five, with a mod, you can make anyone look however you want. You can add cheat code that makes you have unlimited amount of money. And this is the key thing that we need to kind of understand when we're building fully on chain games, is that just because you have an open system and you have an untrupable system that people can contribute to, it doesn't mean that the player can do whatever it wants. The creator, kind of the architect of the worlds, are able to set constraints and create some level of digital physics that define what a player can and cannot do when they are kind of building on top of these games. And this is like how it manifests itself, like true things like an op craft and mud, where player agree upon a shared digital physical constraint. And again, open doesn't mean that users can do whatever.
00:05:24.546 - 00:06:12.194, Speaker A: For example, in Opcraft, you can't just spawn a block from thin air. You got to get the block first. You need to go to that location to place the block and so on and so forth doesn't mean that just because a smart contract or other players can contraperate with the game or build a client that interoperates with the game, that they can do whatever they want. So that's digital physics. The next phase is the intergame, which us at Argus are personally excited about. So the intergame is basically just a short for the intro of games so far. When we are thinking about interoperability and composability in fully on chain games, we're talking about it within context of one game, talking with, let's say a smart contract, that is talking directly with a smart contract of the game.
00:06:12.194 - 00:07:10.918, Speaker A: These are kind of the most rudimentary forms of interoperability and composability that we saw exist in onchain games. However, an open system in games doesn't always need to center around the games itself. As you can see right now, the game industry, surprisingly, is actually much more siloed than our financial system. For example, if you are using, again, banks, you can still use things like plaid to integrate your banking data with, let's say, a fintech platform. So right now, banks are more open in terms of API and interop than how a game would. For example, if you're playing a game using Steam, you can't even use your epic account to play the game. You can't transfer your item out outside of the game.
00:07:10.918 - 00:08:00.374, Speaker A: If a game that you deploy, a multi game that you deploy on Steam, wants to migrate off to a different platform, you can't carry over those data. You would have to just basically create a new slate of game items. And this creates a lot of problem when you want to kind of basically build like a large scale, fully on chain games with kind of more complicated stakeholders. In reality, the game industry is not built only by this independent studios. There are kind of other people like indie game publishers. There's also distribution platforms, there's marketplaces, there's like first party marketplaces, there's third party marketplaces, there are console companies. And so this leads to the question of how these different layers of the gaming stakeholders are able to support and communicate with each other.
00:08:00.374 - 00:08:51.810, Speaker A: And again, we have to understand that even though we want this intraopen and travelable system, that doesn't mean that we want to allow everyone to be able to do whatever in the same way. Let's say with one game, you can't just want to allow another game to spawn millions and hundreds of dollars in your other game, another person's game. So the concept of physics and digital physics goes beyond than just a single game. It is a constraint that needs to be imposed on this different interoperability layer within the game, the game publisher and game publisher to, let's say, another game publisher, and so on and so forth. And so this is what the Internet of game is. It's a realization that improbably can go way beyond games than just between games, between user generated content, beyond just working with smart contracts, with another smart contracts. And last but not least, of course, the communication of games between games.
00:08:51.810 - 00:10:07.818, Speaker A: There's a lot of nuances when people want to build this. Since the dawn of NFTs in 2018, when cryptokitties have first came out, people have always asked the question, right? Like, what does it look like when a game have interroppable game assets across different games? A lot of people in the NFD crowd would have come up with this idea that, hey, you can bring your sword from World of Warcraft to Counterstrike, which, if you think about it, doesn't really make sense. There needs to be some level of constraints, and how do you coordinate these transferable assets, or even transferable data, or transferable state, or transferable identity? And this is where a protocol is needed to kind of resolve that. There needs to be some level of coordination, and there needs to be some level of physics constraints across these different games for these kind of cross stakeholder interoperability and composability to work. And this is like what the world engine is. The world engine is basically a shared substrate, a shared agreement between different publishers, between different games, between different smart contracts, to basically have a seamless interoperability across them. It's the same way to interpret identity, the same way for us to understand assets, the same way for us to add limitations over what kind of interoperability is allowed across these different systems.
00:10:07.818 - 00:10:49.770, Speaker A: And again, at the end of the day, we want to allow each developers, each game publishers, and each game studios to have full power over their own game. We want to allow them to be able to set these physics constraints the same way that they are able to deal with autonomous worlds. And at the end of the day, the endgame for the world engine is to basically be the TCP IP for games. I know that's a term that is abused a lot in blockchain. Everyone wants to be the TCP IP of everything, but that's basically kind of like how I would describe it. So now again, the world engine is, what we're trying to do with it is to become a Trojan horse for the interim game era. We want to make it as easy as possible for people to build games that are default open.
00:10:49.770 - 00:11:35.930, Speaker A: Right now, if you want to build like an open game, or you want to build an autonomous world, you have to chew wallets. It's very hard to coordinate it. You have to figure out how to deploy your own roll ups, how to configure your roll ups, to be able to bridge out to other roll ups and communicate with other games. And the world engine is designed to really abstract away all those problems from the lowest level, which is like, how do you do shared sequencing to the highest level, such as building your own game engine runtime and so on and so forth. The role engine is designed to be contributor friendly. So we are very open with kind of the idea of people building their own game engine runtimes, for example, and it's again maximally extensible so that you can fit it to however you want to fit your game. And it's also open source right now at arguslops.
00:11:35.930 - 00:12:01.180, Speaker A: So this is a star game template. If you guys are interested in building a game chart, which is like our kind of game runtime that is designed to be open by default, you can use this. And by launching a game shard on top of the world engine sequencer, you're allowing other game shards to be able to communicate with you through the shared sequencer system. And yeah, that's all for my talk. Thank you for.
