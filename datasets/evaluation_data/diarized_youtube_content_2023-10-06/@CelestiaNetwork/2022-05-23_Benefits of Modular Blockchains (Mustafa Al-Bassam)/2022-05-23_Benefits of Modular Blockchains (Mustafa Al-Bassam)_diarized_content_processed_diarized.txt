00:00:00.970 - 00:00:48.358, Speaker A: So first of all, obviously the big one, scalability. So like intuitively, modular blockchain stacks are more scalable because there's a separation of resources. And that means each node in each area of the stack can be more specialized to a specific function. So for example, on data availability layer, the nodes don't do any computation, they just do data availability. And that means they can optimize their resources to having high bandwidth resources rather than computation. And they can be specialized just on that one task. And the main benefit of this kind of comes from the resource pricing.
00:00:48.358 - 00:02:15.186, Speaker A: You're separating the resource pricing for different resources on the network, like you have different resource pricing for data than computation. And finally, in a modular blockchain stack, it's quite common to use technologies like data availability, sampling and fraud proofs or ZK proofs. And this is very important for scalability, because in order to scale blockchains, you can't just increase throughput. You also have to increase throughput while enabling users to still gain assurances about the correctness and validity of the underlying chain. And in traditional blockchains, the only way you can do that is if the users actually reexecute every single transaction, which most users cannot do. But with technologies like data availability sampling and fraud proofs and validity proofs, it allows ordinary users to effectively be first class citizens of the network and have almost the same level of security as a full node that is actually downloading all the transactions without having to have the same resource requirements as a full node. Secondly, flexibility is a major advantage of modular blockchains.
00:02:15.186 - 00:03:24.170, Speaker A: We can see there's a cambrian explosion of different execution layers that are innovating in different ways in the ethereum roll up space, for example. And these different execution layers have different advantages. For example, fuel's execution layer is paralyzable, for example. And this is very important because if you think about the history of the web, before the cloud or virtual machines were popular, people used to just use shared web hosting providers like Dreamhost or geocities, and that really limited innovation of the web because you were limited to whatever execution environment or programming languages that that host provider had on their server. But nowadays, no one uses that. Nowadays, people just deploy virtual machines on Amazon EC two, and they effectively have their own operating system and they can install whatever they like on it and experiment with all kinds of different like programming languages and technologies.
