00:00:01.050 - 00:00:13.694, Speaker A: All right. Yes, indeed. This talk isn't about anoma if you wanted to find out what Anoma is, you should have listened to Chris's talk yesterday. Anonoma loves Celestia. If you haven't seen it, watch the recording. It was a great talk.
00:00:13.892 - 00:00:14.686, Speaker B: Cool.
00:00:14.868 - 00:00:22.640, Speaker A: I will very briefly today, could I get a timer up? Well, we'll see how long it takes.
00:00:23.410 - 00:00:23.870, Speaker B: Cool.
00:00:23.940 - 00:01:17.350, Speaker A: Yes, I will talk about chilled data availability on Celestia today. Or the ability of how we can retrofit privacy guarantees and also forward fit privacy guarantees into existing protocols without needing to make changes to those protocols, which, as you'll see in a little bit, is going to be quite important, especially when you start thinking on how do you want to build privacy preserving roll ups on a lot of these systems. So before I start, let me give you very quick TLDR on what Namata is, how it works, and sort of why we need unified privacy sets. So Namata, in a nutshell, it's asset agnostic, multi chain privacy. Until really, Namata, at least on the interchange, we didn't have the ability to have asset agnostic privacy. Privacy was always tied to specific assets, right? Like, when you think of what Monero or Zcash do, they provide very good privacy guarantees. Let me scratch this.
00:01:17.350 - 00:02:22.934, Speaker A: Zcash provides very good privacy guarantees, and Monero provides you should do your own research privacy guarantees. But they provide them for specific asset types. As in the case of Zcash, they have Zack, and in the case of Monero, they have XMR. And so users are now forced into this model where for some reason, they have to hold or pay for their milk in a store using ZEC, even though I think most people would much rather use USDT. And so what Namada brings, it effectively adds an extra type or an extra field to the notes in a Zcash like system to provide a unified, shielded set where all assets, no matter where they were created or how they were created, can live in a unified, shielded set. This has the tremendous property that you get low volume but high value assets that inherit the privacy guarantees of the low value but high volume transfers. So, for example, a very trivial example here is all the USDT private transfers in Amada provide privacy guarantees to $100,000 NFT.
00:02:22.934 - 00:03:09.058, Speaker A: And this is really the only way to get privacy guarantees for long tail assets which don't have a lot of inherent volume. But due to this, you can inherit the privacy guarantees of sort of the entire shield set. And the other big thing is it means we don't have to keep forcing users into accepting specific assets in order to be private. Users can bring user generated assets. I would assume in most cases, it's going to be something like USDT, USDC. But if people sort of in two years from now want to create a new fancy stablecoin, that fancy stablecoin can inherit the last three years sort of shielded set activity, and as a result, has a much stronger privacy set at launch. The way this works with Amada is that Armada is a base layer chain.
00:03:09.058 - 00:03:48.360, Speaker A: It's a sovereign L, one that connects to other systems via IBC site, not on IBC. If you are thinking about building a bridge, don't read how IBC works. This mostly solves all your problems. Custom bridges are terrifying, and they're very prone to errors. So with Amata, you get permissionless connections to other chains for IBC. So, in the future, if other chains pop up or assets on other chains pop up, those assets can also freely flow into Nomada. And maybe one of the coolest things is we have shielded set rewards in Nomada, which means that the Nomada governance unit can effectively incentivize rewards to be paid for holding assets in the shield set.
00:03:48.360 - 00:04:38.360, Speaker A: And this is actually very important because most people at the moment treat their sort of privacy as in, I want to have privacy right now for my asset. But this is actually really problematic because that means you sort of go from a transparent system into a shielded system and then back out. Now, you have a lot of statistical attacks that you can possibly pull off against this. So the much better idea is that you mostly want to hold all your assets in a shielded set all the time. And when you want to use them somewhere else that doesn't work with the shielded set, then you want to make them transparent. And the cool thing with Namata is you get shielded set rewards within the shielded set. So, as in, if you hold some ease in the shield set, there may be incentives there that get paid out in the shield set in the native asset of Namata just by holding assets in the shield set.
00:04:38.360 - 00:05:10.240, Speaker A: Also, if anyone here is thinking of building private lending platforms, you need the convert circuit that enables shielded set rewards because it's roughly the same idea. You have a transparent list of sort of conversion rates for specific asset types, and you can then upgrade specific assets in the shield set. For example, you can go from, like, Osmo at epoch one to Osmo at epoch five. And at the same time, when you do this upgrade, you claim the rewards for it. Yes, this convert circuit, it's fully documented. If you like cryptography, you should check it out.
00:05:10.930 - 00:05:11.534, Speaker B: Cool.
00:05:11.652 - 00:05:27.314, Speaker A: Now, coming to shielded actions, once you have assets in the shield set, you want to ideally have the ability to interact with the rest of the ecosystem, whether this is on the interchain or sort of within other specific L ones from within the shielded set.
00:05:27.352 - 00:05:27.554, Speaker B: Right.
00:05:27.592 - 00:06:05.730, Speaker A: You don't want to have to take out your money from the shield set all the time in order to use, let's say, a Osmosis pool. So, shielded actions is really the generalized case of how you interact from within the shield set. With application logic somewhere else. And really this can mean with specific DApps, for example, on Ethereum, but this can also mean with specific app chains like Celestia or like Osmosis. And let me quickly walk you through an example here for Osmosis, because this is sort of very instructive. I think you hold some assets in the shield set. You want to make the choice that I don't like the atoms anymore, I want to now hold some Osmo.
00:06:05.730 - 00:06:51.594, Speaker A: Traditionally, what people would do is they would personally take the money out of the shield set, transfer it over IBC to Osmosis, swap it on Osmosis, swap it back, right? And this is sort of normally they would go to their standard Osmosis address and then sort of do the swap there. With Amara, you can instruct the Validator Set to do actions on your behalf. This is really the right way to think of this. You can instruct the Validator Set to take some action elsewhere while staying within the shield set. So you can construct effectively a zero knowledge proof. In Amada it says, I would like to swap X or Y. Then the Validator Set will take the assets via an IBC method, bring it to Osmosis on Osmosis, use the IBC memo to execute the swap.
00:06:51.594 - 00:07:37.866, Speaker A: The counterparty or the person that executed that swap is the Nomada Validator Set. It is not some specific person, it is the entire chain sort of wanted to do a specific swap on Osmosis. That swap gets executed, the assets get returned from Osmosis via IBC again, and they enter the shielded set again, at which point the user has full control over those assets again. And there are some downsides here which is specifically due to latency. If you start thinking on what does this actually mean under the hood, this means at least one IBC message means at least like one or two blocks confirmation on the origin chain, as well as one or two blocks confirmation on the receiving chain. So you're talking on like maybe 30 seconds latency here. This is not instant.
00:07:37.866 - 00:08:31.194, Speaker A: If you're on a system that has sort of like 1 second block times, it's going to be hard to get the same kind of latency guarantees as soon as you want to hop between multiple chains. But the really cool feature now is that you have shielded swaps and none of the core systems needed to actually change what they did. Osmosis provided swaps and Namada provided privacy. But we can start integrating these systems using IBC in order to actually have very complex user flows, where we can start in a really modular way, combining all these different systems in order to get something that is like, from a user perspective, much more useful than individual components. Let me quickly also walk through the architecture how this actually works. This is sort of the heart of Nomada is the multi asset shield pool. If you're familiar with the Sapling circuit on Zcash.
00:08:31.194 - 00:09:19.418, Speaker A: This will look very familiar to you. You can really, at a high level, think, we've added an extra identify an extra field to the node types in the Sapling circuits in order to have an asset Identifier so that all assets can share a unified shield set. What happens in Sapling actually is that you can instantiate Sapling for other assets other than ZEC, but I can identify as an external observer which sort of shield set you interact with. Whereas in Amada, an external observer can only see that someone was interacting with a shield set, but they don't know what actions were taken. This could mean that I transferred this to an address that I control myself. This could mean that I transferred this to an address that someone else owns. This could mean I wanted to execute some shielded swap somewhere else, or I wanted to submit some data to Celestia in a shielded manner.
00:09:19.418 - 00:09:24.750, Speaker A: So this is really powerful, actually, as an abstraction because it can work with arbitrary assets.
00:09:25.490 - 00:09:25.854, Speaker B: Yes.
00:09:25.892 - 00:09:40.520, Speaker A: And so the basic idea is that you can sort of go into Namata transparently, then go into the shield set, do whatever you want to do in the shield set, go back out if you want to, take your assets back out, and then go wherever you want to go via IBC again.
00:09:41.370 - 00:09:42.120, Speaker B: Yes.
00:09:44.170 - 00:10:26.050, Speaker A: So this is sort of the entire architecture, and I won't go through the entire sort of slide. But just to highlight a couple of things here, namata comes with cubic slashing, which actually means that if you should be really careful which validators, you select the high percentage of a Validator that commits an infraction, the higher the slashing rate rises exponentially. So if you ever been slashed on Cosmos, for example, slashes are constant. If 30% on Amada commits a fault, slashes are going to be tremendously high. So there's really now an incentive to actually start splitting your delegation across many different Validators that run in different security models.
00:10:26.630 - 00:10:27.042, Speaker B: Yes.
00:10:27.096 - 00:10:40.470, Speaker A: No matter on the hood, just use common BFT so you get fast finality BFT, you get all the IBC integration. The state machine isn't using a custom SDK. It's written by hand and rust to implement a bunch of the Scriptography.
00:10:40.970 - 00:10:41.382, Speaker B: Yes.
00:10:41.436 - 00:11:17.010, Speaker A: And sort of we also have a custom Ethereum bridge, mostly because we don't have IBC adapters to Ethereum yet. If anyone in the audience wants to do cool work, please work on integrating IBC into Ethereum. It's not that difficult, but it just requires engineering effort in order to get it done. And this is also true, really. Like the way the interchange ecosystem or the multi chain ecosystem is going to work is we should be building IBC adapters for other systems. For example, there's no reason why something like near or polkadot or any Fastband LTV model on BFT wouldn't be able to speak IBC.
00:11:18.230 - 00:11:18.642, Speaker B: Yes.
00:11:18.696 - 00:11:52.570, Speaker A: Now, coming to shielded data availability. How does shieldeda actually work? And why is it useful? Again, the model is roughly the same thing, which is a user is in the Shield set. They want to interact with Celestia. They want to be able to post some data to Celestia. The user has to generate a zero knowledge proof, ideally on an edge device within Namata. This instructs the Namada validator set to effectively submit data to Celestia on behalf of that user. And again, the interaction that the world observes is that the Nomada validator set submitted data on Celestia.
00:11:52.570 - 00:12:59.570, Speaker A: This could mean that there's an individual person. This could mean there's sort of a hundred people behind it, but the world doesn't know. And when you start thinking on what kind of roll ups you want to be building, this is actually becoming incredibly important, especially for privacy preserving roll ups. If you have privacy preserving roll ups where individual users want to be part of this roll up and have to submit data to Celestia, it means that in the current model, without Shield data availability, they would need to figure out how to safely submit those individual transactions to Celestia without revealing who they are. So in the current model, even if you had a privacy preserving roll up on Celestia, users would need to be incredibly, incredibly careful. And this is almost impossible to achieve that they can sort of privately pay transparent fees on Celestia with no matter, Celestia doesn't have to worry about this problem anymore and how you get private fee payments working. Rather, we can say, well, we have these two systems that each do their unique thing, but by combining them, you can start submitting using the feature sets of both effectively.
00:12:59.570 - 00:14:27.438, Speaker A: So whatever feature set Celestia may even offer in the future using Shield DA, you can always submit that data privately on Celestia. I think there's also an interesting other aspect to this where privacy has a lot of benefits, but it also has sort of its complexity on an end user, because all of a sudden data moves from the center of the network, right? Like when you think of something like Ethereum data, all lives in this globally distributed, globally readable database. In a privacy preserving world, this data starts moving to the edge devices where individual phones need to hold this data. So one big question is, are users going to store all this data themselves, or are there going to be services where users can, for example, offload encrypted nodes too? And this is, I think, sort of a future direction that I'm not exploring too much in this talk. But that is really interesting to think about for future research on how can we leverage data availability solutions to provide guarantees to users that they can get back their data, for example, their encrypted notes, which they will need in order to access their funds? An interesting other research area here is oblivious message passing. Or how can you query a data source like Celestia in a privacy preserving manner. Because one of the, in my opinion, the most valuable data set most likely in this space is actually Infuria, because everyone has access to all the rights to the chain, right? Like, if you scan Ethereum, you'll see all historic rights.
00:14:27.438 - 00:15:02.320, Speaker A: But Infuria is like one of the only companies in the world that has access to 99% of all the reads, which is the much more difficult to obtain data set in the world of blockchains. And so with oblivious message passing, we can actually start thinking on how do we have reads against full nodes that do not reveal exactly what kind of key in a merkel tree I'm looking for. As in, like right now, I go to a full node and go, I would like the value of this key. With oblivious message passing, you can live in a world where you query a range of keys and it's not clear to the full node exactly which key I wanted to ask for.
00:15:04.610 - 00:15:05.022, Speaker B: Yes.
00:15:05.076 - 00:16:10.340, Speaker A: This sort of leads into the modular thesis a little bit on, we should be splitting concerns. Not every chain needs to do everything. There's a clear benefit to standardization and specialization if and only if we have decent interoperability protocols that can actually make this specialization still composable. So I think we're clearly going to head into those direction and sort of outside of execution, settlement and consensus and data availability, I think we're also going to see more specialized chains around privacy guarantees, around sort of transferability tradability. I think we're clearly heading in this direction. But this becomes much easier to build for effectively as an engineer, because instead of writing everything, like if I think about this in terms of software, instead of writing everything as one large monolithic, mono repo, we start writing individual libraries that individual other systems can start consuming. Yes, and this is sort of, I think, one of the last slides, privacy as a service.
00:16:10.340 - 00:17:04.426, Speaker A: Namada is going to start providing this where you can use Namada to drive actions on systems that you actually want to use for other reasons, but you want to retrofit as a personal choice privacy into those systems. For example, maybe some people want to trade a lot, maybe other people want to use Celestia a lot. Namada actually doesn't care. Namata just wants to provide really good privacy guarantees for whatever users want to do on other systems. And I think we're going to see this more and more because there are lots of interesting ideas being built and very few people have or very few teams have the amount of cryptography engineering required to make these systems private. As in making every system inherently private is a very difficult task because all of a sudden you need to start thinking like, how do I build proof of stake fully, privately? That gets very, very complicated. It's very interesting, but it gets very complicated.
00:17:04.426 - 00:17:15.910, Speaker A: And so with privacy as a service we can rather say. We can build individual applications and individual DApps, and we can retrofit privacy into them in a very transparent way for users.
00:17:16.970 - 00:17:17.382, Speaker B: Yes.
00:17:17.436 - 00:17:22.306, Speaker A: If you'd like, there are more resources here. Discord twitter the nomada testnet.
00:17:22.498 - 00:17:22.950, Speaker B: Yeah.
00:17:23.020 - 00:17:23.620, Speaker A: Thank you very much.
