00:00:00.730 - 00:00:24.526, Speaker A: Cool. Awesome. Happy to be here with everyone and with a few Cosmos ogs today. I kind of want to talk about the Internet of modular blockchains, setting the stage in the past and talking about a little bit of history of cosmos, which I'm sure Ethan will be happy to do because he loves history only.
00:00:24.548 - 00:00:25.906, Speaker B: From this th century.
00:00:26.018 - 00:01:33.180, Speaker A: That's right. So fast forwarding from the 16th century, a little bit. Cosmos came about somewhere in 2017 and set this vision for an Internet of blockchains, a future that would encompass thousands, hundreds of thousands, millions of blockchains. And to accomplish that, they came up with the first modular framework for blockchains, which is a composable suite of software primitives in the cosmos. SDK, what's now Comet, BFT and IBC, so that we can live in a world of millions of interoperable blockchains. So what I'd like to do today is talk about the future of those three different components and how different new primitives like data availability and what's going on at Celestia. Separating consensus and execution fit into what was the original Cosmos vision of kind of a modular future.
00:01:33.180 - 00:01:45.054, Speaker A: Maybe, Zucky, if you don't mind talking about for a few moments, the state of tendermint and where we see that fitting into this future.
00:01:45.172 - 00:01:45.770, Speaker C: Comet.
00:01:45.850 - 00:01:46.682, Speaker D: Comet.
00:01:46.826 - 00:01:51.226, Speaker A: Comet. Comet. BFT, everyone. Comet.
00:01:51.338 - 00:02:37.342, Speaker D: Yay. Yeah. Absolutely. All right. My main thought process is, in a lot of ways, this whole software stack was designed in an integrated way with interoperability as the end goal. So we picked a consensus algorithm that had an efficient, light client that didn't need new advanced cryptography techniques or new advanced, like, zero knowledge proofs or new cryptographic primitives like BLS signatures, all of which were not very mature at the time, but would still give you high performance light clients and bridges. But we're also starting to see sort of the.
00:02:37.342 - 00:03:33.520, Speaker D: And so we built the system. I think I'm talking a little bit about a lunch about how the system was built with bitcoin as, like, its only real reference point. So, like, how do you build a next generation system from bitcoin now? We've gone a lot with bitcoin, was very much the inspiration. We are now sort of way past that in so many ways and really seeing the limitations of that system. It's been a big breakthrough, getting AbCI plus plus out the door, which was the first big change to the consensus API and is a system that no one else is offering. So it is interesting that we still are able to push the limits of the possible on top of this stack, but there's a lot of work to be done and where this stack and what Ismail was talking about. Right.
00:03:33.520 - 00:03:57.750, Speaker D: The p to P layer was not expressive enough to build Celestia, so you had to build a frankenstein of two p to P layers to build Celestia. And so as we kind of advance towards the future, I think we're all going to have to figure out sort of where this software goes from here and how it sort of more or natively encompasses these different use cases.
00:03:58.250 - 00:04:12.890, Speaker A: Thank you. So, continuing to consider these pieces individually for the Cosmos SDK, do we need to consider alternative hosts for the SDK? And how do we 100 x Cosmos with those primitives?
00:04:13.230 - 00:04:49.850, Speaker C: Yeah. Want to call out Marco and his team, who are doing great work on helping to expand the Cosmos SDK to help support more underlying data availability and other consensus algorithms. That works extremely important. And then on top of that, also more vms. And when we talk about modular, this is what it means. You want to be able to pull the pieces out, plug new ones in and easily swap out those components. And I think that the sort of innovation of Celestia was making consensus, breaking that down into different parts and allowing those components to be swapped in and out.
00:04:49.850 - 00:05:07.870, Speaker C: And that does require large changes to some of the software because I think when you're building something, it's really easy to make assumptions and just bake things in, and it takes a little while to unwind that. But a lot of that work has been done by the SDK team. Right now.
00:05:07.940 - 00:05:28.440, Speaker D: I think it's going to be a really interesting question to see if the most value, the most number in the Cosmos SDK is coming from comet BFT as a host or Zrollkin as a host in like a year, five years from big. I think that's sort of like one of the existential questions.
00:05:29.130 - 00:05:46.514, Speaker A: Yep. So, going back to kind of base later and security, Ethan, maybe you can touch on kind of the merits of mesh security with all cosmos blockchains that are IBC connected versus kind of data availability and consensus with celestia and how those two interlink.
00:05:46.642 - 00:05:47.206, Speaker D: Sure. Yeah.
00:05:47.228 - 00:06:39.626, Speaker B: I mean, I think what's happening here is, look, we had to first create the interchange, right? So we had to stand up a bunch of. I mean, once upon a time, the multichain was a sort of blasphemous idea. We had to convince people proof of stake was going to work, there could be many chains, that sovereignty mattered and so on, and that what we needed to do was sort of go bottom up, build a general purpose interoperability protocol for these individual chains to start to connect to each other. And now that we sort of have that, we can start to explore the different ways to actually share security over that interchange that now exists. And so all of these sort of different solutions using a common data availability layer, using things like mesh security or interchain security or so on, they're all sort of different ways to explore different areas in the trade off space for sharing security over the interchange. Right. And I think the reality is we don't really know yet how it's all going to shape out.
00:06:39.626 - 00:07:40.270, Speaker B: There's going to be some kind of complex arrangement of all of these different solutions. And ideally, chains will be able to sort of choose for themselves which ones they want to experiment with and if they're even able to experiment with multiple of them at the same time. Right. So mesh security certainly holds forward a promise of allowing sort of tighter economic integration between different chains and allowing them to sort of strengthen each other's economic security by sharing stake. Data availability offers a sort of different way to offload or outsource a certain element of security that's less about sort of sharing between many different chains and more like, okay, let's use the security of one big chain for a particular function, outsource to that, and then focus on what we're doing. But I can even imagine that there might be some way that sovereign roll ups or something using celestia as a da layer might still find ways to sort of anchor other definitions of security to each other and share. Frankly, I think we still have very poor definitions of security.
00:07:40.270 - 00:08:02.294, Speaker B: We use that word as if we know what it means, but it means so many different things and there's many different elements to it. And so I think a big part of what we need to do in this sort of new phase now that the interchange here is to actually get clearer definitions of what we're talking about and the kinds of security, what that means, what kinds of guarantees are really being offered and how people can actually reason about them.
00:08:02.492 - 00:08:21.354, Speaker A: Yep. Thank you. Ishmael. I think your views would be really interesting here, given know you were one of the original Cosmos members and now you're internally at Celestia and how your views on the interchange vision have evolved being inside of celestia now and how you see that going forward.
00:08:21.552 - 00:09:04.070, Speaker E: So how I see it is that actually celestia is like the continuation of what we built before. Right. The first component of the interchange was the cosmos hub, so to say. And basically what we're building is what the cosmos hub could have been. Right. It's a version of the hub that has actually a purpose in the interchange or in this vision of application specific chains. It actually serves a concrete purpose, which is offering like the service offering of celestia is essentially just ordering your transactions and data availability.
00:09:04.070 - 00:09:56.970, Speaker E: Right. So, yeah, I think it's very logical continuation, essentially. And I think I agree with Bucky that there will be a lot of experimentation happening. Right. And Celestia will be. Well, I'm sure Celestia will play a crucial role in there and it will enable a lot more experimentation, particularly because you offload the execution to these applications or the app layer. You enable much more experimentation with zero knowledge stuff and different vms, essentially, which I think will be way easier compared to having to stand up your own Cosmo zone, essentially.
00:09:56.970 - 00:10:00.602, Speaker E: Yeah, I think that basically covers it.
00:10:00.736 - 00:10:27.806, Speaker A: Yeah. Thank you. I think that the continuation of the experimentation is really something I'd like to press harder on, which is more, is more for developers experiences to be able to customize as granularly as possible to build the best application experiences. And I think part of that is roll kit. I'm wondering if you could talk a little bit about rollkit that coming out of celestia and what that means for kind of the Internet of blockchains.
00:10:27.918 - 00:11:11.582, Speaker E: Sure. So rollkit is basically a drop in replacement for comet. So it's like it takes the same abstractions as comet, BFT, or previously tenement, which is like the main abstraction here is ABCI, which is like application blockchain interface. It is an interface between the consensus layer and the application. Right. So we took that abstraction such that Cosmos SDK developers can continue using the Cosmos SDK as they're used to, or like people who want to use ABCI and build applications on other languages. There were teams building in Haskell, in rust and other languages.
00:11:11.582 - 00:11:48.206, Speaker E: Pinumbra is building in rust, for instance, and anoma. All these builders that are used and familiarized themselves already with the stack, with the Cosmos SDK. They can continue doing that while are not being forced to spin up their own Cosmos zone. Right. Like they don't have to spin up like a proof of stake chain. They can use rollkit as like a sequencer software that posts data to bitcoin, as we've seen before in the panel or celestia or polygon of whale. Right.
00:11:48.206 - 00:11:59.890, Speaker E: It's a general, more general piece of infrastructure that we build such that the ecosystem can flourish and experiment with different data availability layers.
00:12:00.310 - 00:12:30.038, Speaker A: Yeah. Awesome. So 100 Xing Cosmos is something that I think we're all interested in doing. Part of doing that is connecting non native IBC chains. Jack, maybe you can talk about some of the work that you and the strange love team are doing extending IBC outside of tendermint, and maybe we can take that a step further and talk about new clients for IBC and how we get to that future.
00:12:30.224 - 00:13:23.310, Speaker C: Yeah, sure. I think also there is this strong place for comet or other classically BFT consensuses within this world. We're starting to talk a lot more about shared sequencers and some of these other pieces. And I think one of the beauties of the way we've built this stack is these modular pieces. These primitives can be sort of like mixed and matched in all kinds of different ways. And the experimentation that's happening now is helping us optimize that developer experience, make it as easy as possible for developers to spin up their own systems and then go sell services into this interchange economy. Celestia is kind of bringing new primitives to the table, but also a novel combination of existing primitives, and they're selling that as a service to chains over some of these basic interfaces.
00:13:23.310 - 00:14:38.742, Speaker C: I've got some more talk this afternoon about modular IBC patterns. I'm going to dig a lot deeper into some of these topics. But in IBC there's this concept of a client, and the client does all the authentication. Hey, do I know which chain I'm talking to? Did users send these packets over on these other chains? And that abstraction is really general enough to put all kinds of cryptography and whatever the trust assumptions of your system are, you can encode them into that client. So with the roll up world coming, there's all these new trust assumptions, there's all these new models for how to verify the state from these roll ups. And the work that we need to do with IBC to ensure that this Internet of blockchains continues to be connected is to build out all of these different trust assumptions into these clients so that it enables IBC everywhere. I think that with optimistic roll ups, we're likely to see a lot of the IBC traffic go through shared sequencers or other committee based solutions, compiling the fraud proofs and all those things.
00:14:38.742 - 00:15:25.810, Speaker C: A little bit too heavyweight right now, computationally, because you need to run the full state machine over on your counterparty, and it's a lot easier to go through a tendermint committee that's a shared sequencer. But once the ZK roll up technology matures a little bit more, I think we're going to see that become the dominant method in a lot of ways. And that model fits much more nicely in IBC because all you got is this little ZK proof. You shove it into the client and you're good to go. You couple that with this Celestia data availability sampling like client as well, and then you can fully prove the state of that know. Bubbling it up a little bit. Where we are right now is like all of these primitives work, they're just entering production.
00:15:25.810 - 00:15:57.280, Speaker C: But I think, David, to your particular question about bringing that mass adoption that we really need to see and really enabling developers the work over the next year is to sand the rough edges off of the developer experience and allow developers to launch one of these roll ups in five minutes in any one of a number of languages. And all of the pieces that everyone on this panel here builds are a huge part of that system and it's really cool to see it coming together.
00:15:58.210 - 00:16:30.970, Speaker A: Yeah. Thank you. So right now we're at a point in crypto where there's a lot of infrastructure, a lot of new infrastructure being built. And all of this is in service of building killer apps. And whether that killer app is money, as Ethan suggests, or it's something more web two oriented, social or not, we need maybe a little bit more infrastructure to make these experiences better. So maybe we can go down the line and I'll ask you what's missing.
00:16:38.350 - 00:17:32.190, Speaker C: I'm going to take a contrarian piece here and say I think a lot of the infrastructure that we need is here today. And I think especially with breaking consensus into different pieces, a lot of people have talked about celestial and data availability as the end game of blockchains. I do truly believe that that is the case. So I think really what's missing is compelling developer experiences and ease of use for all of these products. Because at the end of the day, infrastructure is a product and products need users. And if it's really hard to explain how all these things work, then we can't bring in the users. What a product does is take a really complex idea like money and Cofi or data availability, and puts it into a very simple developer experience where the developer with a few lines of code can express this very complex idea in an instantiation in the real world.
00:17:32.190 - 00:17:45.060, Speaker C: And I think that that's really what's missing right now. We've built out the infrastructure. We don't need five more consensus protocols. Let's use what we have because it's plenty fast enough.
00:17:45.990 - 00:18:14.220, Speaker A: Great. I would agree, Zucky, since you have such a great taxonomy of the now hundreds of, well, close to 100 blockchains that use tendermint, maybe 65 or so connected IBC chains. Application specific or not, what applications are missing for IBC chains that would bring in those new users that would then create the flywheel for more developers to come in?
00:18:15.790 - 00:18:51.570, Speaker D: I think there's an interesting thing that's happening right now, which is like there has been, I think there was like, as a practical matter, a real lack of applications in the Internet of blockchain. So we built out this interchange vision. We had staking IBC transfers. It was all, okay, great. You saw all of these new chains spin up. We basically had one popular application, which was osmosis. And then there were a lot of applications also in the terra ecosystem and a lot of the interchain application development was happening over in the terra ecosystem.
00:18:51.570 - 00:19:38.674, Speaker D: So terra ecosystem explodes last year, takes out a lot of the application ecosystem in the interchange, and then you end up in this sort of like, we've spent this year where there's kind of like nothing to do but stake now. I think in the last few weeks we've seen just enormous number of new applications. Some of them come from that terra world and are launching on top of osmosis. Now you have teams that are funded by various accelerators and daos, all launching. So there's actually now quite a lot to do with your assets. There's seems to be like a renewed enthusiasm for nfts on stargaze. And all of these things are maturing rapidly.
00:19:38.674 - 00:20:25.150, Speaker D: Like the user experiences are almost acceptable. They're about to become actually acceptable with sort of the APIs that skip has built. So on the whole, I think we're kind of at an interesting threshold point where one of the biggest challenges that cosmos needs to overcome is sort of reactivating our user base. We have a user base that has kind of built a relationship with the software that's basically like, oh, okay, I should stake and occasionally sell my staking rewards or whatever. Now there's all this new exciting stuff to do about with the stealth, with your staking rewards, et cetera. Now is the time to actually get them to go out and experiment again. This is the time to go out adventuring in the interchange.
00:20:25.150 - 00:20:45.450, Speaker D: And I think that's one of the biggest challenges. Another big challenge though is all of the growth tooling. To do that, like as a product builder, you actually have to go out and reach users and communicate with them, understand their needs, get them to engage, build growth funnels. That infrastructure is also being built on Cosmos yep.
00:20:47.070 - 00:20:56.430, Speaker A: Ethan, what's your biggest hot take in the cosmos ecosystem? Whether that's technically, architecturally, or from a user perspective.
00:21:00.940 - 00:21:57.336, Speaker B: Putting me on the spot that a lot of it, I mean, it's not surprising, but I still think a lot of it is really vapid. It's so much just like, assets, assets, assets. What are we doing with our assets? And we might as well be bankers. That's what bankers care about. And we're supposed to all be here to change the financial system, but we're just kind of rebuilding it. Yeah, it's transparent, and it's more decentralized and open, and that's really important. But what's even more important is the underlying structure of debt, really, that we're replicating, I think until we really break through the number, go up and have real applications that aren't just about that, we're not going to make it.
00:21:57.336 - 00:22:46.616, Speaker B: So maybe you all think I'm not going to make it because I'm the guy pushing back against speculation. I mean, obviously, I understand speculations is important for bringing in users and excitement and hype and narrative and memes, and that's the stuff that sort of makes the world go round. But I'm still looking for applications that sort of move beyond that, that aren't just about finance. And I think there's an opportunity now with the sort of impending collapse, maybe, of the social media empires, there seems like an opportunity to get in there. Of course, it's also fragmenting, which is sort of interesting, but I think that's an opportunity that this community needs to figure out how to address. Now, arguably, we need more scalable infrastructure to do that. And so what's the thing that's missing infrastructure wise? I was going to answer for Ishmael and say, celestial launch, but he can answer for me, too.
00:22:46.616 - 00:22:57.710, Speaker B: But otherwise, I would tend to largely agree with Jack that there is a ton of infrastructure here. It's just about making it more usable and accessible for use cases that aren't just about speculation. Right.
00:22:58.720 - 00:22:59.968, Speaker D: Some people, I was just talking to.
00:22:59.974 - 00:23:22.710, Speaker B: Someone yesterday at Osmocon who was telling me how they're kind of embarrassed to tell their friends that they're in crypto, right. And this is like a serious developer in crypto building infrastructure and real stuff, but it's, like, embarrassing. And I still hear this from people sometimes we try to hire people from web two, and they're like, oh, crypto, that's just a bunch of scammers. And so there's still that.
00:23:25.800 - 00:23:26.228, Speaker D: Some of.
00:23:26.234 - 00:23:48.050, Speaker B: Us are proud of it we all like dgens, whatever. We'll show you. So I think there's a real image problem. I think that image problem comes from the lack of sort of more real applications, and that's on us to find those applications. And it's hard. I mean, the early applications are going to be speculative, and that's okay. But sort of moving beyond that, I think is the next big challenge for all of us to make this work.
00:23:50.340 - 00:25:11.224, Speaker D: I do think that's actually one of the benefits of moving to this data, to modularity that is sort of underappreciated, which is one thing that I don't think we fully grasped until we saw it live, was that the incentive structure of building Cosmos SDK chains meant that you had to build liquidity and narrative around a token long before you had a product that was useful to anyone at scale. And so I think one of the most exciting things to me about sort of these modular architectures is you've seen this in the ethereum world, where people are able to launch apps, build an application, build an environment, build a community, build a lot of excitement, typically a lot of excitement about the coming future. Airdrop. But nevertheless, that's a different sort of expenditure of energy than having to sort of build liquidity around a token right from the get go, the modular infrastructure and the way in which you sort of pay as you go for using that modular infrastructure rather than having to build this huge upfront cost. I think a lot of it was always described as like, oh, it's really hard to get validators. I think most of us have experienced that getting validators is not that hard. There's like hundreds of them.
00:25:11.224 - 00:25:36.000, Speaker D: They're all looking for some new thing to speculate on, which is your token, and that's the structure of their business. But having to devote time, attention, energy to liquidity of an asset and narrative around an asset before you have a product is just a huge disservice to everyone and feeds into only building speculative applications.
00:25:37.700 - 00:26:10.940, Speaker A: Yeah, I would agree. Ishmael, maybe you can talk a little bit about, as we're seeing basically every ecosystem or l two converge on these modular frameworks, cosmos having started from a different perspective, which was interoperability first. Ethereum having started at shared security first, how you would position Celestia against other DA solutions building on Ethereum versus building on Celestia and other cosmos related blockchain primitives.
00:26:11.520 - 00:27:14.076, Speaker E: Yeah, I think Celestia is the least opinionated. Right. It tries to be as neutral as possible by enshrining a settlement layer for instance, for other pure data availability layers, the main differentiator, I guess, is that we are probably the first that would go to market and the first that has certain features like data availability, sampling life and running on a testnet. So I can't predict the future on how these ecosystems will play out. But I'm a bit biased. But I'm obviously convinced that the feature set, the team being early Mustafa came up with the paper in 2019. The groundwork was done in 2018.
00:27:14.076 - 00:27:28.356, Speaker E: We've been talking about modularity long before it was like a buzword or conferences being made. Right. I think that is the main differentiator is like the tech and the cloud that we have.
00:27:28.538 - 00:27:55.512, Speaker C: Yeah, just to tag on to that. If you think back to the 90s, we had, Microsoft was the dominant operating system and that was like just one ball of closed source software that nobody really knew how it worked. And it was incredibly tightly coupled. And they built this whole ecosystem around that. Linux came around. That was a set of composable modules that allowed you to plug in any hardware and easily integrate that. And Linux grew a lot slower.
00:27:55.512 - 00:28:29.940, Speaker C: But it's ended up taking over the market for operating sources and computing. And I think that this is very similar in cosmos. We've come at this from modularity first, and Celestial has kind of taken that to the next level. But in Ethereum they started with this idea and it still is the fundamental idea in Ethereum. And you see this with the l one, l two dichotomy, l three s. Even people are talking about now that's being pushed. The centrality of Ethereum within that vision has always stayed eth the asset and eth the chain.
00:28:29.940 - 00:29:07.590, Speaker C: Both of those instantiations are what everything else in the Ethereum ecosystem sort of aspires to filter down to. And when you build those assumptions deeply into your software, it makes building actual modularity much, much harder. And I think that that's the advantage we have, is we've built from that place from day one. We've learned all the hard lessons on how coupling makes expansion difficult, and we've had to push through a lot of those software barriers and help make better. Yeah. Anyway, it's a slightly unformed thought, but yeah.
00:29:10.600 - 00:29:34.124, Speaker A: Zucky, what's the future? For general purpose l two s on Ethereum, say we're all in cosmos because we think that roll ups or blockchains themselves will be application specific. So what's the relationship between Ethereum base layer l two s, l three s, and why developers would need a gen.
00:29:34.162 - 00:30:49.380, Speaker D: Per l two I think my general view of general purpose l two s is they are meeting a need for rapid prototyping. Ethereum itself, as Ethereum has gotten more expensive and has developed a lot of, and has frankly developed, become a playing ground for large dollar value real use. Right. So large counterparties do use Ethereum to move large amounts of money and use a set of defi building blocks to do so. The rapid prototyping sort of environment of experimenting with new applications, I think one of the biggest challenges we've had for Cosmos is it's probably not the first thing that a new team should be building is an app chain. Like a general purpose environment is actually probably a better place because you have to sort of don't have to invent the world, and you can figure out your product market fit, you can figure out who your user base is, you can build your community. And so I think the model of Dydx is really like the model for the app chain world, where the app chain is Dydx V four.
00:30:49.380 - 00:31:58.440, Speaker D: And there was v one and there was v two and there was v three and v one and v two were a general purpose product built on the Ethereum blockchain, using it as a general purpose ledger. V two is an application specific l two or v three was at application specific l two and v three is an app chain. Right. And they learned along the way what had product market fit, what were the key features, what did you actually have to target and build, and that then making that one year investment where they eventually stopped improving the existing legacy product and built the app chain version of it could make sense because they had all of this knowledge and all of this experience built in. And we're all going to see how that turns out. But that's a more plausible way of getting there. And so I think now you have a bunch of general purpose cosmos chains where you have functionally, where you have neutron and archway and osmosis, and all of these new general purpose chains where people are rapid prototyping new applications.
00:31:58.440 - 00:32:19.200, Speaker D: And some of those new applications may eventually pave the way to be independent app chains. But that's sort of how I see the relationship. And most of the modular teams seem to have bought into it, across it, where they are launching general purpose chains now and toolkits for building your future application specific chains.
00:32:19.540 - 00:32:31.012, Speaker B: Zachy, do you see a path for going from a web two app first to then an app chain, like, instead of starting from the EVM kind of environment or something like that?
00:32:31.066 - 00:33:23.476, Speaker D: Yeah, I mean, I think the real challenges is in all ways, building decentralized software is just a lot more difficult. A lot more. But the biggest challenge is self custodial monetary systems are such an important value, and that's really what you have, whether it's the app chain world or the smart contract world is like, can you plausibly build in the. But also most of us are. Americans are exposed to sort of the western system, which takes where you have a lot of financial regulation the minute you have custody. And that's also a big sort of barrier to building. So I don't know, you'll probably see more.
00:33:23.476 - 00:33:46.350, Speaker D: I've been watching what's happening with this unibot thing. I don't know if anyone. I think more of the djens in the audience probably are following it, but it's literally like, it started out as an application where you're basically just like, where you're just like giving your private keys to a telegram bot, right. And moving money through that. But it does seem to be like developing into a real thing.
00:33:48.000 - 00:34:31.820, Speaker E: To come back to Bucky's point earlier, I think it would be nice if developing starting on web3 would be as easy as on web two. As Zucky said, it's much more difficult currently. But as Jack also mentioned before, I think the infrastructure that's missing is to make that easier. So I believe that will be the case. There might be trade offs, right? Like, there will be trade offs 100%, but just from the usability point of view, I think it will be possible to have something like AWS kind of style where you code your thing, you click a button and your chain is running. Right. That is not too far fetched at all.
00:34:31.820 - 00:34:42.370, Speaker E: There are people, there are teams working on that right now. So I think that will be possible. And then there's no reason to start at web two if you plan to be like a decentralized app afterwards. Right.
00:34:42.740 - 00:35:33.090, Speaker C: I think just to like, there's a couple of orders of magnitude more developers outside of crypto than there are inside of crypto. I think a big part of that is the developer experience that's been most pushed in crypto is this EVM developer experience. As somebody who's worked in Web two, it's not a great programming language to work in. And I think another advantage we have as an ecosystem is we've got this proliferation of other vms and programming languages that you can write in JavaScript, with the Goric, go with the Cosmos, SDK Rust, with Wasm, and many, many others. And that is, I think, going to be key to longer term developer adoption, offering these developers something that they're familiar with, meeting them where they are. And yeah, that's also going to be key.
00:35:34.980 - 00:35:55.430, Speaker A: So developer experience is one thing, user experience is another. I'm curious how you guys see wallets playing out in an Internet of thousands and thousands of blockchains. Are wallets application specific? Is there one to rule them all? Is there a WeChat wallet for crypto? What are your thoughts there?
00:35:56.040 - 00:36:46.680, Speaker C: I mean, a kind of far out idea is that wallets are just top of funnel for applications. So wallets go find the users and bring them in exactly how they do that. I think there's a lot of white label solutions out there already. And you could imagine a convenience store launching their own wallet that has their loyalty program that's run in USDC and that filters back down into the, you know, wallet is this term that I think we need to unbundle a little bit. But I think the way that we talk about it most is that sort of top of funnel of the users. There's obviously the custody pieces, there's the technical infrastructure that's needed to make that happen, and all of that stuff is really cool. But at the end of the day, it's about eyes and clicks and tokens, and that's users.
00:36:49.180 - 00:36:58.270, Speaker A: Zucky. If you could snap your fingers and make one thing happen in the Internet of blockchains to accelerate growth and adoption, what would that be?
00:36:59.600 - 00:38:03.280, Speaker D: Well, I think it would have something to do with the wallet conversation. I don't feel like I have, as a builder, a detailed understanding of consumer behavior regarding wallets. The way consumers behave. Wallets with wallets mostly doesn't make sense to me. Things that don't make sense to me is like, why is metamask so sticky? Why is that so sticky? And why is it that the user feedback, but at the same time, why is it that users are like, hey, I use Kepler and now you want me to install metamask to use the sommelier app, and I don't want to do that either. Very confusing to me what exactly it is, because I don't personally experience it. And one of the biggest challenges I think we have in general is that a big part of where application builders lose contact with their users is in the wallet infrastructure.
00:38:03.280 - 00:38:39.550, Speaker D: We have this third party piece of software that we don't really have control over. We push a user into it and then we maybe see the output, but we don't know what goes on inside of it. And it's a real blind spot in understanding, sort of consumer behavior. So what wallets have to be like such that users will mass adopt the interchain is, I think that is one of the biggest pieces, and we just have lots of theories, and those theories now need data to sort of validate them, and it's hard to get visibility into that.
00:38:40.160 - 00:39:28.092, Speaker C: I think that in the same way I was talking earlier about the Ethereum community having this core ideal of everything kind of filtering down to Ethereum and how that shapes their worldview in web3. So much of what we do is a reaction to what we all really don't like about web two. And I think we have a lot of blind spots when it comes to some of the good things about Web two. And what Zach is talking about with tracking users is a great example. When you're an app and a user clicks through the wallet connect, there's a lot of missing analytics in that flow that don't allow you as an application builder to understand what the user behavior is and how you can help improve those user experiences. And it's the same thing with the programming languages thing. We need to meet those users where they are.
00:39:28.092 - 00:39:30.584, Speaker C: And yeah, that's a key missing.
00:39:30.632 - 00:40:12.490, Speaker D: I think the thing that's skipping with IBC fun and then their announced Kepler integration is, I was saying, one of the biggest pain points of Cosmos right now is that there's this website, Tfm.com, that no one has ever heard of, but it makes the IBC UX 100 x better. And it's like mostly what I use to interact with IBC now. I used to use the osmosis deposit page or whatever and those sorts of things, but now we have much of that experience is now coming also to be integrated into Kepler. How will that change behavior? I think is going to be a huge data point.
00:40:13.740 - 00:40:38.770, Speaker A: So how do we bring those users in for things like TFM or IBC fun if we don't have any insights into that behavior? If we're in blockchains and most wallets are pseudonymous, unless they're docs, how do we gather any insight into topple funnel business development for applications and preserving privacy on the other end?
00:40:40.200 - 00:41:27.084, Speaker E: I personally think tracking users in the browser like opt in is an option. Sure, like telemetry and stuff. That would certainly give us insights. But I think it could start even much simpler. You could just do usability research, talk to users, do focus groups. It sounds very naive, but I think you will catch most of the flaws of our thinking of how users interact with things and they're actually interacting with things I think you'll catch, like, 80% of that just by doing proper usability research. And I think that should be done independently of one ecosystem.
00:41:27.084 - 00:41:48.970, Speaker E: It shouldn't be driven by, oh, we want to figure out metamask, we want to figure out Kepler. It should be independent of that. Here is a user. They want to interact with an app or web free or something, and it should be independent of these ecosystems. In my opinion. I think that would already move the bar much higher.
00:41:49.980 - 00:42:11.500, Speaker C: This is kind of an aside, but Zoko from Zcash is one of the people I've seen do the best job of this. Every time he meets somebody for the first time, he has them install a zcash wallet on their phone and then sends them zcash. And he times every step of the process and keeps a record of all of these. And this type of focus on user experience is missing in a lot of places.
00:42:11.920 - 00:42:32.484, Speaker D: I think there's also a kind of an interesting question. I don't think we're really clear on what the top of the funnel is for the modular ecosystem. Is the top of the funnel like ETH, l one users or monolithic blockchain users? Is the top of the funnel like social media? Is the top of the funnel like web? Two application users?
00:42:32.532 - 00:42:34.520, Speaker B: It's tron payments in Asia.
00:42:36.300 - 00:42:38.424, Speaker D: Quite probably, yeah.
00:42:38.542 - 00:42:39.640, Speaker B: Not a joke.
00:42:40.060 - 00:42:41.050, Speaker C: You're right.
00:42:41.980 - 00:43:02.400, Speaker A: A quick survey. How many people in the crowd, raise of hands, has a Kepler wallet? Yeah, pretty decent amount. Okay, maybe 80, 90%. Zucky. Let's close on this design. Tell us how to get into the cosmos ecosystem. What is the path of least resistance as a user?
00:43:04.260 - 00:43:50.044, Speaker D: Cato and squid. Those are the things like squid. Router is great for bringing assets from any other ecosystem. Onboarding from lots of place, Kato, is a great experience for onboarding from fiat if you're in, depending on jurisdiction, et cetera. But I honestly think that, again, one of the missing pieces, I know a bunch of Ethereum people got excited about bad kids and wanted one. They were all like, how do I odboard onto Cosmos? And I was just like, squid. It's that easy an answer, I think more support with the worm chain and noble coming online and stuff like that.
00:43:50.044 - 00:43:52.592, Speaker D: There's going to be more options to that. But that's right now the best.
00:43:52.646 - 00:43:54.480, Speaker B: You couldn't get them to install Kepler.
00:43:55.220 - 00:43:59.650, Speaker D: They did. No, Kepler was fine. They couldn't figure out how to get assets into.
00:44:00.340 - 00:44:30.124, Speaker C: And, you know, this is like those core pieces of infrastructure that have gotten built out. One of those is swapping forward on osmosis, where users can send an IBC packet in, have it swap automatically, and send those assets out. So in this particular flow, you want to buy bad kits on stargaze with stars. You need those stars somewhere, and you need to make those IBC transfers. But the automation makes that easy. It makes it a single transaction on Ethereum for the end user, and they end up on the chain they want in the asset they want. That's a key experience.
00:44:30.242 - 00:44:47.712, Speaker D: Yeah. And I don't think we're that far from being like, I have eth. I want a bad kid, and you don't have to do anything other than sign an intent or an order or whatever. And that. And then there's like, the infrastructure will just take care of it. We're really not that far from that future. Cool.
00:44:47.766 - 00:45:10.776, Speaker A: So if you're in Ethereum, go to squid, transfer some assets over, buy a bad kid. If not, go to Cato, install Kepler, come on over to Cosmos. We have a lot of fun, boxing matches included. I'm sure everybody is hungry and looking forward to lunch. So I want to thank everybody on the panel for all of your time and you guys for being here and have fun today.
00:45:10.958 - 00:45:12.180, Speaker C: Thank you, David, for moderating.
