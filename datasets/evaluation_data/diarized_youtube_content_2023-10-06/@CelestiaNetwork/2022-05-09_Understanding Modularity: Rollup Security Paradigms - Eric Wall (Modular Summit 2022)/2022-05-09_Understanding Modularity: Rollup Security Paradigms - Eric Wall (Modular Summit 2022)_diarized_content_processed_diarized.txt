00:00:03.050 - 00:00:27.640, Speaker A: Thank you, Nick. Thank you so much. Hello, everyone. My name is Eric Erica. Combination of those. I'm a swedish crypto fund manager, blogger, VC, but I'm also recovering bitcoin maximalist. And I've been covering for about three years now.
00:00:27.640 - 00:01:37.078, Speaker A: And I want to tell a story. I think this is a story of why I'm here on this stage and the story of how I grew out of bitcoin maximalism and why I think this is one of the most important things that is happening in the blockchain space right now and why I couldn't think of any more crucial place to be. So I want to congratulate all of you guys that are here, and I want to share my story with you, how I came to that conclusion. So, like Nick said, I used to be called the altcoins player. In this picture, you see some of the coins that I supposedly killed, they're still out there. I mean, it's really hard to kill coins, but supposedly I killed iota neo heterohashgraph. And in this journey of killing altcoins, I always had this belief from the beginning that bitcoin was going to be the currency that was going to the network that was going to power everything else in the blockchain ecosystem.
00:01:37.078 - 00:02:11.266, Speaker A: And the rationale for that is that if you go back, we're going to go way back in time now. We're going to go all the way back to 2014 when the company blockstream was founded. So if you read the vision statement of why Blockstream was created, it is actually kind of beautiful. It's a beautiful story. So it reads that the altcoin approach of creating a new cryptocurrency just to introduce new features creates uncertainty for everyone. Looking at cryptocurrencies from the outside, there seems to be no natural stopping point. Each fork can be forked again at infinitum.
00:02:11.266 - 00:02:52.590, Speaker A: This creates both market and development fragmentation. We think that for cryptocurrencies to be successful as a whole, we must build network effect, not fragmentation. We believe everyone should enjoy freedom to innovate, too, without seeking permission from us or anyone. We needed a different way to get there than by attempting to disrupt our own success. It's kind of beautiful. To accomplish this, we propose technology to enable new cryptocurrency networks that do not need new cryptocurrencies. Delivering on this vision will require continued investment and in cooperation with the bitcoin ecosystem as a whole, along with the full time support of many people with broad and specialized backgrounds.
00:02:52.590 - 00:03:29.774, Speaker A: We felt that in the bitcoin ecosystem. And in the world at large, there is a shortage of companies working on trustless cryptographic infrastructure. That's why we, along with our other co founders who share our vision, came together to establish blockstream. So this was the picture that they shared, like their vision for how the blockchain ecosystem would grow. And I like this picture so much. This used to be the banner picture of my LinkedIn profile. I was so hyped up about that vision for blockchains and for side chains to interact with each other.
00:03:29.774 - 00:04:26.370, Speaker A: And these side chains are not your, they weren't originally proposed as what we see today, where there's proof of authority chain with a bunch of validators. These were supposed to be merge mined side chains, reusing the proof of work strength of bitcoin to secure the transaction order. And you have the developers here speaking like, yeah, merge mining is an option. You could also have proof of stake and proof of authority. But merge mine side chains that reuse the hashing power of bitcoin to secure these side chains were a crucial element for this vision. And you can even go back and you see Greg Maxwell here talking about using snarks to interpret the programs running inside of sidechains, which is basically what we have today with ZK roll ups. So this was already envisioned back in 2014 by the blockstream developers.
00:04:26.370 - 00:05:58.826, Speaker A: And what was the purpose of being able to run a snark to interpret other programs? Like, what was the vision? Well, it was the vision already then to build things like Dexas, to build trustless peer to peer marketplaces, options, contracts, all of those things that we see blossoming in DFI were already the vision back then. And in 2015 they said, in the coming weeks, we're going to publish a proposal for a fully decentralized two way peg. The peg is how you transfer an asset from the main chain into the side chain and back that would be completely decentralized and the side chain itself would be merge mined, but it never materialized. But in 2018, I still believe that this was the vision for bitcoin, that we would see this ecosystem of side chains emerging around bitcoin that would be trustless merge mind. So I would go around writing these twitter threads saying like that in architecture, it is a no brainer that every structure of importance that we build, whether it be religious monuments, skyscrapers, pyramids, starts with the establishment of a rock solid foundation to persist through the test of time and with the billionaires to come. So I was really in this vision, that bitcoin as the strongest, most solid consensus engine would power everything else. And around that point in time, we were thinking in terms of drive chains.
00:05:58.826 - 00:06:46.766, Speaker A: Drive chains were the latest iteration of how to build these hash rate backed side chains to bitcoin. And this is pretty funny quote here. So I believe that the only way to compete with bitcoin is by figuring out how to make a more decentralized, robust consensus engine. And the problem that I had with all altcoins was that all of them were competing in bitcoin in the exact opposite way. So they were trading away their core robustness and simplicity for smarter contracts. And this is before I understood the concept of modularity. Because if you think about Celestia, Celestia really is an even more simple base layer than bitcoin is.
00:06:46.766 - 00:07:22.914, Speaker A: Bitcoin bundles settlement execution data availability together in one monolithic piece. Celestia is that piece that abstracts the data availability and the consensus away and focuses on just that most simple piece. But this was before such constructions existed. So anyway, I was really hyped up about drive chains. I wanted to drop everything that I was doing at the time to build a drive chain. And even the bitcoin core developers, a lot of them were on board with this vision. They wanted to also see drive chains come into fruition.
00:07:22.914 - 00:07:44.094, Speaker A: They thought it was a good idea. But something happened. This is just one year later. Just one year later, something changed. And I think it was the block size wars that got so intense. And what a lot of bitcoiners realized is that the miners are not our friends. The miners had previously been involved in every upgrade in bitcoin using their hash rate.
00:07:44.094 - 00:08:37.570, Speaker A: They signaled their support for upgrades, and the miners were working together with the community. But during the block size wars, we kind of realized that miners weren't our friends, and we wouldn't want to give, because in a merge mind sidechain, the problem is that the miners can always steal the coins from the side chain because everything is relying on the hash rate. So something changed in the sort of conversation around drive chains. We didn't want to give more control to the miners. And one thing that happens when you have a merge mine side chain is that if you are not validating these merge mine side chains, you're not mining those side chains. You don't get the fees from those side chains. So if they have a lot of mev, only the miners that have very high capacity bandwidth are able to extract those revenues.
00:08:37.570 - 00:09:31.730, Speaker A: So something changed. And even Peter Todd, who's also one of the core contributors to bitcoin, said that merge mine side chains were Gregory Maxwell's biggest mistake. So 2019 kind of realized that it wasn't going to happen with bitcoin. Bitcoin was not going to become this piece that powers all of the blockchain ecosystem. And then roll ups enter the scene. And the powerful thing with roll ups, the really intelligent part, is that the miners and the validators that process the base layer, they don't need to validate the roll up, they don't need to process the transactions. They can only look at the fraud proofs and the validity proofs to make sure that those systems are safe.
00:09:31.730 - 00:10:40.600, Speaker A: So if you are a bitcoiner and you're thinking that the only problem that we have with drive chains is that they cause centralization around mining, roll ups are that exact mechanism that you need to get away from that problem. So I sort of wanted to bring this to the bitcoin community and say, hey, look at the Ethereum researchers, look at what they have come up with that actually solves that core piece that we've been looking for all along. This should be a very interesting architectural design for how to build blockchains that can scale, that can have different execution environments, that does not cause centralization for the validator set. So I try to convince other bitcoiners, like, look at the architecture of this thing, just look at the construction. If we can just learn from this mechanism, we could integrate something similar into bitcoin, and then we would be able to realize that vision, that was what the blockstream company was built on. That core vision was now within reach. It didn't go that way.
00:10:40.600 - 00:11:15.380, Speaker A: So I tried to bring it to the bitcoin community, and I asked. I'm reading this stuff on the Ethereum research page. I'm reading on Vitalik's blog post. I'm finding new ways that we could reach that goal. And what does that make me? And I got told that it makes me potentially dangerous. And a lot of this is also a blockstream employee. So I basically fell out of favor with the bitcoin community just for having the idea that maybe there's something interesting going on in the Ethereum community that we should learn from.
00:11:15.380 - 00:12:04.210, Speaker A: So people were starting to make bets around how long I would last in the bitcoin community. And this vision that was originally proposed about how bitcoin would power these side chains, what it all came down to at the end was just this. The only side chain that blockstream ever created was a single proof of authority chain that had no crypto economic guarantees. That was the culmination of half a decade of research that blockstream was supposed to deliver to bitcoiners. So Eric the all coins layer turned into Eric, the potentially dangerous shitcoiner. And I was feeling miserable at this time. I started to write my own eulogy.
00:12:04.210 - 00:12:41.050, Speaker A: It was kind of a sad time where I didn't know what to do because I had been building up my reputation and my community, my friends within the bitcoin community, for seven years. And this is what it all came to. But I found new life in the roll up design space. There are so many things that you can do with roll ups. You can experiment with completely new vms. You can experiment with the sequencing logic, the fee logic, the MeV. You can make combinations of ZK roll ups and optimistic roll ups.
00:12:41.050 - 00:14:10.258, Speaker A: It opens a whole new paradigm for innovation experimentation. One of my favorite roll up constructions is the ZK operu construction, which allows you to make zcash style private payments inside of an optimistic roll up. So you can get almost perfect privacy within an optimistic roll up just by leveraging the fraud proof system on the base layer of Ethereum. Another thing that I think is hugely interesting is the idea that if you have a roll up and you have perhaps a more centralized sequencing mechanism, that creates an opportunity for MEV to be generated in a more centralized way, and you can do things with that MEV. For example, one of the biggest problems that we've had in bitcoin is how do we fund developers to keep contributing infrastructure to bitcoin? How do we fund developers? How do we fund public goods? So this idea, by optimism that we could use the MEV in a chain that the sequencer extracts to fund public goods, is an incredibly interesting idea. And following along that path, if you have the ability to create an entirely new vm just by, because if you're running a roll up by using the fraud proof mechanism, you don't actually need to be able to interpret all the internal logic within the roll up itself. All you need to be able to do is validate a fraud proof or validate a validity proof.
00:14:10.258 - 00:15:21.460, Speaker A: Those things allows you to create entirely new vms. So inside of fuel, which is one of my favorite roll ups, you can run smart contracts using a Utxo data model. And that allows for parallelizability. So you can parallelize transactions and get basically Solana type efficiency inside the roll up. So that's a whole new paradigm of an execution environment that is enabled through the separation between the main chain and roll ups using fraud proofs or validity proofs. So I want to talk a little bit about what does this mean for security? So there is a difference between roll ups and side chains. Even the merge mind side chains that we had, roll ups are superior because like I said, in the roll up paradigm, what you can do is you don't need hash rate to secure a side chain because the fraud proofs that get posted to the main net and the validity proofs, that's the only thing that you actually need to validate for the validators or the miners to do their job.
00:15:21.460 - 00:16:05.790, Speaker A: So roll ups present a way more attractive security model inherently than side chains were ever able to produce. But they still come with some drawbacks. There are some people who say, well, roll ups, they are L2, and the L2 inherits the security of the layer one. That is roughly accurate. It's not 100% accurate, because there are, of course, some things that there is some level of complexity that comes with a roll up that creates security risks. So it's not like one to one perfect equivalency between the security of the layer one and the L2. There are some differences there, and I think that it's good to perhaps get a grip of what those differences are.
00:16:05.790 - 00:16:36.358, Speaker A: So, I mean, the most obvious one is that of course you're going to run into some implementation risk. The roll up has a roll up node. That roll up node has its own software. There can be bugs in that software. It's just no way to get around that. If the roll up isn't implemented properly, even on the contracts under layer one, a bug can arise. Like if you look at most of the hacks that have happened to side chains, only a few of them actually happen because someone compromised the keys.
00:16:36.358 - 00:17:35.738, Speaker A: In many cases, there are simple implementation bugs that can cause complete failures for the roll up system, for a side chain system, for any type of system. So every time that you use an external software component that can have an implementation bug, and you can lose your money by using a roll up this way, there's no way to get around that. The nice thing is that we can theoretically move away further and further away from that risk by improving our systems. With a side chain, for example, you can never get away the inherent risk that either the miner steals the coins or in a proof of authority side chain, you can never get away the risk that the validators steal the coins in the side chain, but you can get away from that risk if you design a roll up really well. You also have a sequencer risk in roll up. So roll up doesn't use the same validators they don't use the same block producers as the layer one does. They have their own set of sequencers that produce the roll up blocks.
00:17:35.738 - 00:18:44.980, Speaker A: And there are some risks there. The most common risk that you speak about is, well, what if the sequencers start to censor transactions on the roll up? Now for optimistic roll ups like arbitrum and optimism, there's a way around that you can post transactions directly to the layer one contract on the base layer, and that makes the roll up process those transactions. So you can get away that censorship. It's not as easy on Starknet. For example, I haven't seen a design that allows transactions to be posted on the layer one that will automatically be included into the starknet roll up. You also have mev risk. I actually prefer to think of the mev difference here as an advantage, like I showed with optimism that you can actually use the fact that you have a different set of sequencers that can be permissioned or have priority, and they can generate MAv, and they can decide that this MAV is going to go to benefit the overall system.
00:18:44.980 - 00:19:32.658, Speaker A: But there are still differences in how MAV works inside of a roll up compared to the layer one chain. So that's also a risk that you got to think about. Another thing that I think that people don't talk that frequently about is something that I call state access risk. So a lot of people believe that, well, in a roll up, all the transactions data are posted to the layer one. And because you have full data availability provided by the layer one system, that means that you're never going to have a problem to access the state. And you need to be able to access the state. If you want to be able to withdraw your funds from a roll up, you need to have access to not only the raw data itself, you need access to the full state.
00:19:32.658 - 00:20:25.538, Speaker A: And the risk here is that, okay, well what if there aren't any nodes who are providing me with a state? The risk then is that you. And if you haven't produced that state for yourself, if you're not running a roll up node, which in a roll up, their execution environments are designed to be more performant. So it's going to be more resource intense to run your own roll up node versus running a layer one node. So if you're not doing that, which most people won't do, and for some reason there is no other node that is providing you with what the state looks like, then you can run into a situation where you actually have to generate that state yourself. And if the state takes a very long time to be computed. Then, let's say, for example, you're getting liquidated in another roll up, and now you got to withdraw your funds from that roll up into the other roll up, and that takes time. Now you got to regenerate the state.
00:20:25.538 - 00:20:45.910, Speaker A: The time that it takes to generate the state is a risk. It can cause you to get liquidated. It can cause you not to access your funds in time. Maybe those funds lose value. Like maybe there's something happening in the cryptocurrency space and your assets are losing value. You need to be able to get those out and sell those. If that takes time, well, then that's a risk.
00:20:45.910 - 00:21:30.282, Speaker A: I'm coloring these in yellow because these are not like catastrophic risks, they're more like mediocre risks. And then in most of these roll ups, the reason that these two are white is because these problems are not inherent to roll ups themselves. But it's something that we're likely to see with most roll ups. So most roll ups in the beginning are going to have admin keys, the ability to make emergency upgrades. That of course is a risk. The idea is that we will move away from those training wheels with time and we won't really have these admin keys that can change the entire roll up system once these systems are mature. But they're probably going to be with us for a couple of years.
00:21:30.282 - 00:22:27.958, Speaker A: These types of admin keys and a lot of these roll ups are also planning to add governance tokens. And governance tokens also provide an attack vector. Like if the governance tokens has the ability to vote on something crucial for the system, then if someone is able to acquire a large amount of those governance tokens, well, they get control of a part of the roll up. So that's also a risk. The most secure roll up would probably be a roll up that doesn't use like if we had no implementation bugs, then the most secure roll up would probably be a type of roll up that has had as little as possible of these types of admin keys or governance tokens, or at least limit their ability to do anything material to the system at all. So those are some inescapable things that you sort of get with roll ups that make the security different from the layer one itself. So then there are also differences between ZK roll ups and optimistic roll ups.
00:22:27.958 - 00:23:12.618, Speaker A: I'm not going to go to get too bogged down into this, but it's good to have at least the basics of it. I think that most people in this audience probably do know the basic security assumptions, that trade offs that you make between a ZK rollup and an optimistic rollup. The ZK rollup, of course, uses starks or snarks. Those have significantly higher complexity and a lot fewer people that actually understand those systems in detail to be able to audit them to a level where we have an assurance that the system is going to work as intended. So they are more complex. The probability that they have implementations, bugs are significantly higher, even though in a system like arbitrarium, for example, the arbitrum virtual machine is also quite complex. There's also an added risk of complexity there.
00:23:12.618 - 00:23:52.710, Speaker A: But I don't think it's fair to say that these risks are comparable. I think it's probably fair to say that the ZK rollups do add a more material layer of risk. But in the optimistic rollup, you have the assumption that someone is watching the chain. That someone, if the sequencers post an invalid Merkel route, then a Merkel route commitment, then someone needs to be able to produce a fraud proof and invalidate that update. So roll up has this other trust assumption, that you need to trust that someone is watching the chain. Either that has to be you or that it has to be someone else. And ZK rollups don't really have this assumption.
00:23:52.710 - 00:25:05.662, Speaker A: And then if you are using another system or another component to provide data availability, then you're always exposed to the underlying risk of that system. We used to say that validiums, for instance, a validium is a ZK roll up that does not actually post the data on the layer one. It uses another entity or a federation of entities to guarantee that that data is there. We used to say that these validiums had a low risk profile because the only thing that they could do is freeze the funds. They could freeze the system, but they couldn't steal the funds. But we've sort of come to the conclusion that if you're able to freeze a roll up, it's very easy to turn this into a ransom situation where you're ransoming the funds, and even if you have emergency keys which allows you to roll back the state of the validity, that opens up another attack vector which allows the attacker to double spend their funds. Because when you roll back the attack, then the attacker can just do that attack again.
00:25:05.662 - 00:25:41.340, Speaker A: So you create a double spend risk. So no matter how you want to wrap the burrito, if you're using other data availability systems, you're always going to run into this issue that you sort of have to trust that those components are functioning correctly. So I also have this picture. I saw that Mustafa had this one earlier I want to make a joke about. This is the modular conference. So we're outsourcing other people's diagram skills to the ones that are most suitable to create those. So that's my excuse for using other people's diagrams in this talk.
00:25:41.340 - 00:26:30.426, Speaker A: So we sort of covered everything except these two so far. We're talking in very, very broad stokes. But I don't think that you're going to be able to learn everything about every single trust assumption between different roll ups in a 30 minutes talk. But let's talk about the broad strokes here. So if you're running a roll up on Celestia, there is a difference between sovereign roll ups and settlement roll ups. So the sovereign roll up has its own settlement and execution environment. So that allows for a lot of flexibility because you can hard fork or soft fork the roll up itself and change the rules of that roll up without having to depend on any other community celestial is not going to stop you for changing the execution environment of your roll up.
00:26:30.426 - 00:27:16.898, Speaker A: So if you want to change something inside the execution environment, you can. In a sovereign roll up, that gives you flexibility. That's why they're called sovereign roll ups. But that does mean that the roll up can change as long as the roll up community decides that the roll up should change. And that means that if it's a small community, if it's a small roll up and they are malicious, they could hard fork and perhaps steal your funds from that roll up. So you have a different risk profile in a sovereign roll up versus a settlement roll up. The benefit of a settlement roll up is where you share an execution environment where many different types of roll ups can settle their fraud proofs and validity proofs.
00:27:16.898 - 00:28:13.946, Speaker A: And if they are all batched together in one layer, then one roll up can't go rogue and hard fork their system because that makes them incompatible with all those other roll ups that they have enjoyed the ability to interact with. So if you're using a settlement roll up for the compatibility with other roll ups, now you can't hard fork one of those. So it sort of ties all of those roll ups into that specific settlement layer. So using a settlement roll up with many roll ups sort of batches their security together in a different. The last thing I wanted to steal, another diagram here from Maven Rain and coffee made this excellent chart. I think that shows a little bit easier how these different rollups interact with the Celestia system. So on Celestia, you can have a sovereign, optimistic roll up.
00:28:13.946 - 00:29:22.078, Speaker A: You can have a sovereign ZK roll up and then you can have these restricted settlement layers for roll ups like Sevmos, but you can also have other settlement rollups like that on which you can build other roll ups that sort of gives you a better picture of what the ecosystem looks like, I think. And if you want to get really bogged down into the very nitty gritty differences between an optimistic rollup and a validium or a ZK rollup, I think that matter labs did a quite good deep dive into the nitty gritty differences in terms of security, but also performance, usability and other aspects that you can look at. So I would recommend to read from this website, it's not 100% perfect. You got to realize that matterlabs, they have a ZK roll up themselves, so they might be a little bit more biased towards ZK roll ups with that. That was the end of my presentation. Thank you very much. Great to see you guys.
00:29:22.078 - 00:29:24.780, Speaker A: So many of you here. I don't know if.
