00:00:00.160 - 00:00:31.030, Speaker A: What happened? All righty, I think we're live. Maybe we'll get a confirmation if we're live. Alrighty. Welcome everybody to the infinite Space Bazaar Hackathon workshop. For today's workshop, we got an amazing debrel at Celestial Lab. Josh Stein. He's gonna go over an interesting topic.
00:00:31.030 - 00:00:59.066, Speaker A: How do you build with op stack with Celestia underneath? Before we get started, I just want to remind everyone the hackathon is 45 days. It ends on May 17. And there are 100 can prizes for the main pratch. And there's a lot more in prizes for the bounties. So be sure to check it out at bazaar dot celestia.org. And yeah, let's get started, guys. Good morning.
00:00:59.066 - 00:01:00.734, Speaker A: I'll hand it off to Josh.
00:01:01.234 - 00:01:31.714, Speaker B: Yes, GM, everybody. Thank you for coming in this workshop. As Yaz said, thank you for the introduction, Yaz. We'll be going over an introduction to op stack with Celestia underneath. So the workshop structure. First we're going to do an introduction to Celestia just to refresh our brains. Then we'll do a section on what a roll up is and why you should deploy one.
00:01:31.714 - 00:02:27.782, Speaker B: The next thing we'll do is an introduction to opstack with Celestia underneath. And we'll go through deploying our own or using an existing roll up because there are some testnets that you can use without having to actually deploy your roll up just to get the feel for things, to see if that's really what you want to do. And the last thing we'll do is deploy a contract to the roll up. Lastly, we'll have a q and a discussion, so go ahead and get started. What is Celestia? If you're here, you probably already know, but Celestia is the first modular blockchain network that makes it easy for anyone to securely launch their own blockchain. This is made possible by data availability sampling, which we'll get into a little bit later. But this basically allows everyone to be able to sample the chain.
00:02:27.782 - 00:03:28.884, Speaker B: And the more people that do that, the more block space we can have, and therefore, the more roll ups we can have that all share a common layer that is Celestia for security. So now that we've talked about Celestia and building rollups on top of it, it's probably a good idea to define what a rollup is. A roll up is just a blockchain that outsources one of its components to a separate chain. I feel like a lot of the times we talk about rollups they're almost in their own world, where we think of them as a different thing than a blockchain. But at the end of the day, they are just a blockchain with a little bit of a different design than we're used to. We can think of a roll up as a blockchain with the superpowers of scalability, efficiency, and in the case of using celestial for da verifiability by all.
00:03:32.864 - 00:03:37.468, Speaker C: And more specifically, since we're talking about op stack in this workshop, what is.
00:03:37.476 - 00:03:59.972, Speaker B: An op stack rollup? An op stack rollup is a blockchain that is posting data to Celestia instead of its call data on ethereum. So in the normal case of the op stack, which is what is used for optimism and many other chains. Now, the op batcher in the op.
00:04:00.028 - 00:04:03.816, Speaker C: Stack is used to post data to.
00:04:03.840 - 00:04:26.324, Speaker B: Ethereum is called data, then op node reads it back. But in this case, Celestia is the place where we're sending the op batcher commitments, and op node is reading those from Celestia instead of Ethereum. And really it just makes it faster and cheaper for the users without sacrificing security.
00:04:29.244 - 00:04:31.068, Speaker C: So I guess you're also wondering, why.
00:04:31.116 - 00:04:42.964, Speaker B: Deploy rollup now that we know what it is? Why do we want to end up on this leaderboard? You can see on selenium, which is Celestia block explorer, there are, I think.
00:04:43.004 - 00:04:47.584, Speaker C: Nine or ten chains, maybe just nine on there right now.
00:04:47.884 - 00:04:50.584, Speaker B: And a lot of these are using the op stack.
00:04:51.404 - 00:04:55.306, Speaker C: Some of them aren't, but yeah, why.
00:04:55.330 - 00:05:32.644, Speaker B: Would you want to do that on your own? So if you deploy a roll up, the end goal or the end state is that it will be cheaper for users, it will be verifiable by all. With running a light node, you can actually verify the chain yourself, instead of running really big infrastructure like a full node on another chain, or even a full node on Celestia. This is something that you can actually do on your phone and even on an iPhone. Now, another thing about rollups is that they're scalable. We've seen a lot of.
00:05:34.544 - 00:05:35.016, Speaker C: L two.
00:05:35.040 - 00:06:08.890, Speaker B: S on Ethereum, and the prices are very cheap on those. But once you continue to scale and make modifications for your roll up to be more efficient and more cost effective, the prices that users are paying goes down quite a lot. The third part here is that rollups are customizable, so we're not going to get too much into it in this workshop. But one of the best things about rollups is that you can add different precompiles and basically customizations in the way.
00:06:08.922 - 00:06:11.466, Speaker C: That the chain that you're running on.
00:06:11.490 - 00:06:39.494, Speaker B: Top of whatever the base layer is work better for your use case. And this is where we go in the direction of running app chains and things like that. Lastly, roll ups are secured by the base layer. So in the case of settling to Ethereum and posting data to Celestia, that's both secured by Ethereum in this case and Celestia for data availability.
00:06:44.334 - 00:06:46.382, Speaker C: So I want to go in a.
00:06:46.398 - 00:06:49.954, Speaker B: Little deeper on how these are cheaper for users.
00:06:51.414 - 00:06:53.406, Speaker C: So on the left side we have.
00:06:53.510 - 00:07:01.314, Speaker B: An l two without Celestia da doing an ERC 721 min. And at the time it cost.
00:07:04.094 - 00:07:08.942, Speaker C: About two, like in ETH about $2.57 and.
00:07:08.958 - 00:08:07.826, Speaker B: Then an L two with Celestia da cost around $0.47. Now this is all dependent on kind of the gas prices at the time, but if we scale even further and we do a layer three, which would be a roll up on top of an existing roll up. So a blockchain on a blockchain on a blockchain. We have an example from syndicate where they're running a frame chain and frame chain is on top of base built with op stack. And yeah, the savings were basically exponential. Like it saved the entirety of the gas that would have been spent if all of the minting and storing data and new contracts that were created would have been done on an existing, like on existing Ethereum mainnet. So it's literally less than $0.01
00:08:07.826 - 00:08:29.414, Speaker B: for I don't know how many transactions, but $321,000 of gas that would have been spent on Ethereum. I also do want to ask if anyone in the chat has questions, please feel free to share them. We'll get to those later. We can always jump back to any of these slides. Going deeper into that frame chain example.
00:08:29.754 - 00:08:32.534, Speaker C: We can see that minting a token.
00:08:32.574 - 00:08:35.314, Speaker B: Would cost about $6. On ethereum it would cost.
00:08:37.934 - 00:08:42.954, Speaker C: It looks like less than 100,000,000th of a cent or something like that.
00:08:44.694 - 00:09:01.374, Speaker B: On storing data would cost about $13 and it's exponentially lower on an l three. And deploying a contract would be pretty much in the same direction. Now the benefit of this is that.
00:09:01.874 - 00:09:07.066, Speaker C: Instead of users having to pay five.
00:09:07.130 - 00:09:44.874, Speaker B: To ten to $15 to do any sort of interaction on your chain, it gets to the point where this is easy, like basically free, and it isn't really free, like it costs, I don't know, going back, still less than a cent. But this enables you to really reduce the prices for your users and at the end of the day reach the point where these transactions actually don't cost that much or anything for your users. So I think often when people.
00:09:46.894 - 00:09:53.824, Speaker C: Think about Celestia and they're coming from the EVM world, at first, for me especially.
00:09:53.904 - 00:10:25.504, Speaker B: I didn't really understand what all of the cosmos stuff meant, and I kind of felt like that meant that I couldn't build on Celestia. And I've come to realize that Celestia is so, I guess, customizable that you can either use an existing Cosmos SDK framework or even, I guess, another vm. I guess.
00:10:27.404 - 00:10:29.464, Speaker C: We'Ll leave that open ended.
00:10:29.764 - 00:11:12.112, Speaker B: You can use build anything on Celestia. I guess the best thing I want to bring it back deploying an op stack roll up provides a really similar experience to EVM developers that they're used to. And you don't really have to think too much about Celestia because that's just the place where data is getting posted. And assuming the integration is like the op stack integration or the arbitrum integration, the end experience for the developer and the end experience for the users is going to be the same a lot of different ways or three different ways.
00:11:12.168 - 00:11:16.312, Speaker C: To deploy or use an op stack roll up.
00:11:16.488 - 00:11:21.512, Speaker B: The first one would be to deploy from source on your own, and I.
00:11:21.528 - 00:11:24.440, Speaker C: Would note that you would definitely need.
00:11:24.472 - 00:11:54.614, Speaker B: Some DevOps experience in order to do this. If you're curious about doing that yourself, you can head to the Celestiadocs at docs dot celestia.org dot and look in the developers category and learn how to deploy an op stack roll up yourself. The second way, and probably the easiest way to actually deploy your own rollup is to use a rollup as a service provider like caldera conduit or gelato.
00:11:54.914 - 00:11:57.254, Speaker C: And others to come.
00:11:58.474 - 00:12:03.354, Speaker B: The third way would be to use an existing op stack testnet. So.
00:12:06.654 - 00:12:12.750, Speaker C: Right now we have two testnets that are running.
00:12:12.942 - 00:12:59.994, Speaker B: The first one is hosted by Caldera and this is Bub's testnet. This is the original one that we had back when the integration first came up. What you can do on there is play around, use the faucet, deploy some contracts on your own and not have to manage any of the infrastructure yourself. So this is like the first and easiest way to get started with no friction. The next one is the raspberry testnet, which is hosted by Gelato. And you can do the same thing here as with bubs and in the bottom right you can see the bridge. So also, instead of using the faucet.
00:12:59.994 - 00:13:08.154, Speaker B: You can see that bridging from Sepolia for example, to the op raspberry testnet. It works the same as any other.
00:13:08.194 - 00:13:20.294, Speaker C: Roll up that you might have used in the past. And for some examples on how actually.
00:13:21.634 - 00:13:45.224, Speaker B: Easy this really is, you can see that deploying a new roll up on caldera, you select your stack. In this case we're choosing optimism bedrock, which is op stack. We're going to do a testnet and use Ethereum as the native gas token. You can also customize your gas token if you want. And then next we'll select a data availability layer.
00:13:49.884 - 00:13:53.956, Speaker C: And the next example we have is with conduit.
00:13:54.140 - 00:14:09.348, Speaker B: That's going to give you a similar experience where you select your framework, you select your settlement layer, you select where you want your da to be done and whether or not you have a testnet or mainnet, and literally click to deploy the roll up.
00:14:09.476 - 00:14:12.652, Speaker C: So I think in the past few.
00:14:12.708 - 00:14:28.434, Speaker B: Years we've come a long way in not only the integrations that we have available, but the experience for the end user to actually make it as easy to deploy a smart contract or make it as easy to deploy roll up as it is a smart contract.
00:14:29.894 - 00:14:34.514, Speaker C: And then next option is with Gelato.
00:14:35.174 - 00:14:44.034, Speaker B: In this case you're going to choose the framework NDA layer and then the gelato team will help you set it up. I think self serve will be available at some point.
00:14:45.354 - 00:14:50.294, Speaker C: So once you have that set up, this example is a conduit roll up.
00:14:50.714 - 00:15:32.734, Speaker B: You can actually see the logs of your batcher and proposer and sequencer. You'll be given an RPC URL. Similarly to if you were to make an account on like an existing RPC provider, you'd get these for whatever chain you're using, but conduit does everything for you. Same with Caldera and Gelato. You also get a websocket connection as well as the block explorer and bridge. And yeah, we're going to go through shortly and see all this in action. So this is an example deposit from Sepolia to the l two roll up.
00:15:32.734 - 00:15:38.186, Speaker B: It takes about like two minutes maximum.
00:15:38.250 - 00:15:39.494, Speaker C: For that to go through.
00:15:40.174 - 00:16:02.034, Speaker B: And once you have that deposited on your l two, you can go ahead and start playing around. So I'll stop here before we get to some live demo and do some questions if you have any from the chat. Nice. What do I like most about op stack?
00:16:04.854 - 00:16:11.106, Speaker C: I honestly would say that it's just been really wild to see how easy.
00:16:11.130 - 00:16:44.624, Speaker B: It is to deploy an op stack chain at this point in time. And the coolest part for me or what I like the most is just, I guess it applies to any scaling solution. But the fact that the cost for the end user gets to the point where like, personally I think we really want all these chains to get to where people are not paying multiple dollars for transactions, especially on sending just straight up sending funds.
00:16:47.524 - 00:16:50.660, Speaker C: But yeah, I don't have a great answer for that.
00:16:50.852 - 00:17:03.840, Speaker B: But the ease of deployment is something that across the board I think is really fascinating to me. I actually don't know the cost per.
00:17:03.872 - 00:17:14.484, Speaker C: Roll up on gelato mean that I can tell you. I think conduit for example, is. No, actually don't know.
00:17:15.304 - 00:17:36.784, Speaker B: But yeah, I would reach out to those, the roll up as a service providers. If you do want to do that on Mainnet, conduit I know has a discount code for this month for people in the ISB and Caldera I think lets you run two roll ups as testnets for free right now.
00:17:40.964 - 00:17:44.212, Speaker C: And yeah, with that we'll go ahead.
00:17:44.268 - 00:18:19.836, Speaker B: And get to the next portion of this. So I made a, like, I misspoke a few seconds ago, but I was actually just kind of kidding on April fools that we want to make it as easy to deploy a smart contract as it is to deploy a blockchain. This is the backwards version of making it as easy deploy a blockchain as it is a smart contract. But I think we've actually gotten to that point where the experience on something like conduit or Caldera or gelato or.
00:18:19.860 - 00:18:28.100, Speaker C: Gateway FM coming up is pretty much identical to deploying something on third web.
00:18:28.252 - 00:18:56.264, Speaker B: And third web is used to deploy smart contracts, marketplaces, the full stack of applications that you can put on top of a blockchain. But I don't actually know which one's easier now. Like deploying on conduit takes one click and deploying on third web takes one click. So I think we've actually gotten to the point where it is as easy to deploy a blockchain as it is a smart contract.
00:18:58.484 - 00:19:00.344, Speaker C: So now that we're done with that.
00:19:00.844 - 00:19:06.344, Speaker B: Introduction, we're going to go ahead and actually deploy a roll up and a smart contract on it.
00:19:07.324 - 00:19:11.744, Speaker C: We'll be starting out with an example.
00:19:12.964 - 00:19:19.756, Speaker B: We're going to go ahead and deploy one on Caldera. So this is Caldera.
00:19:19.780 - 00:19:22.036, Speaker C: You can get to the dashboard by.
00:19:22.060 - 00:19:26.596, Speaker B: Going to Caldera XYZ. And in order to get started, we're.
00:19:26.660 - 00:19:28.544, Speaker C: Going to just click to deploy.
00:19:29.404 - 00:19:42.064, Speaker B: So we'll do a testnet with optimism, bedrock. We're going to use ETH as a native gas token. We'll use Celestia as a da layer and we'll do, oh.
00:19:44.844 - 00:19:51.588, Speaker C: Call it op stack workshop l two. And all we need to do here.
00:19:51.676 - 00:19:55.824, Speaker B: Is, oh, maybe we're not going to deploy this all the way through.
00:19:57.444 - 00:19:58.944, Speaker C: No, we're good. Nice.
00:19:59.484 - 00:20:03.524, Speaker B: So there's a $1 fee just to make sure that I can, if I.
00:20:03.604 - 00:20:05.464, Speaker C: Keep this running, I can pay for it.
00:20:05.964 - 00:20:27.972, Speaker B: So it's going to take about 15 minutes for this to be deployed. We're going to go ahead and actually jump over to one that I've deployed with conduit already that's already set up. We can come back here to check it out. When that's done deploying. I have a roll up here that.
00:20:28.028 - 00:20:30.734, Speaker C: Is with conduit nop stack.
00:20:31.154 - 00:21:16.964, Speaker B: It is deployed hosting data to Celestia and settling on Sepolia. So this is on Mainnet Ethereum. Well, not Mainnet, but the L one Ethereum sepolia, not one of the l two s on the left or on the terminal view here. We can see that looks like our chain is at around 280,000 blocks. It's been going since last week. We can check out the batcher that is collecting all of its blocks, rolling them up, and then posting commitments to Celestia. So yeah, we can see some successful postings.
00:21:16.964 - 00:21:40.676, Speaker B: We can also see the proposer and the sequencer. But most importantly, as a user, we can see the information like the chain name, the chain id, the framework settlement layer, da layer on the right side here, and also the roll up config. So I'm going to go ahead and.
00:21:40.700 - 00:21:42.904, Speaker C: Add this to my wallet. It's already done.
00:21:43.284 - 00:22:10.594, Speaker B: It will prompt you in metamask or your other evm wallet when you decide to do this yourself. If you want to deploy to Mainnet, there's also an option to upgrade that, and the same thing would apply on another rollup as a service provider. One thing we can demo real quickly is bridging in from Sepolio. So let me go ahead and connect my wallet.
00:22:15.694 - 00:22:16.678, Speaker C: And we're going to switch.
00:22:16.726 - 00:22:28.756, Speaker B: To Sepolio and I'll go ahead and deposit one ETH. And as with most bridges go, you're.
00:22:28.780 - 00:22:34.064, Speaker C: Going to just click some boxes to acknowledge that you know what you're doing.
00:22:35.884 - 00:22:37.916, Speaker B: So we're going to go ahead and.
00:22:37.940 - 00:22:41.380, Speaker C: Confirm that transaction and then we can.
00:22:41.492 - 00:22:57.786, Speaker B: Monitor the progress here. I'll actually just come back and check this in a few minutes. So we have that bridge transaction going. That's going to give me some funds to be able to deploy on this roll up and we can also go.
00:22:57.810 - 00:22:59.374, Speaker C: Check out the block Explorer.
00:23:01.234 - 00:23:18.682, Speaker B: So in this case, I haven't made the name very pretty, but you'll get your custom block explorer with the name of your chain where you can see that about every other second. We have a block coming in. As with on the dashboard, your users.
00:23:18.738 - 00:23:41.488, Speaker C: Can actually add this chain information if they want. I'll wait on switching networks for now, but you can see deposits and mine's still going through. But once that lands, we'll see it in this dashboard. I haven't made any withdrawals yet, but.
00:23:41.576 - 00:23:59.084, Speaker B: Withdrawing from an l two to an l one, anything that happens in that fashion will show up here. We're not doing a tour of a block explorer, so yeah, you get a full block scout instance when you deploy with conduit. I think Caldera does the same thing.
00:23:59.664 - 00:24:02.768, Speaker C: And we can go ahead and check.
00:24:02.816 - 00:24:21.454, Speaker B: In on that deposit and it looks like it's confirmed. So on our block explorer, this is for my local chain. We can see that that deposit was successful and we're going to go ahead and just see that here as well.
00:24:23.274 - 00:24:39.274, Speaker C: So now what we can do, now that I have a lot of jumping around here. So I have one more in my wallet now and this is on the roll up. So what we can do is actually.
00:24:39.314 - 00:24:45.002, Speaker B: Deploy a contract onto this roll up. Now go ahead and close some of.
00:24:45.018 - 00:24:45.774, Speaker C: This out.
00:24:47.874 - 00:25:06.014, Speaker B: Before I get too far. We do have Da being posted to Celestia and if we look on the mocha testnet for Celestia, we can see that every few minutes.
00:25:06.674 - 00:25:07.074, Speaker C: Yeah.
00:25:07.114 - 00:25:30.680, Speaker B: So 36 seconds ago we had a blob that was posted to the namespace for this roll up. And if you want, you can always inspect those. But this is where the data is being posted by op batcher. You can actually look at the blob itself if you really want. It was just posted, so it might.
00:25:30.712 - 00:25:51.824, Speaker C: Take a second, but yeah, the blob will load eventually. Cool.
00:25:51.904 - 00:26:28.984, Speaker B: So now that we have the roll up running, we've checked out our namespace, we've checked out our explorer. We're going to jump back to this real quickly. So, yeah, it looks like this is still deploying. It will take a little bit of time, but we're going to get the same thing out of this. One thing I like about Caldera is they have a status page, so you can see the status of your roll up similarly to checking pretty much any other service out there that you're used to. And you'll also be given a hub page that's a public page for your chain, a block explorer and a bridge.
00:26:29.804 - 00:26:33.052, Speaker C: I actually don't know if there's a.
00:26:33.068 - 00:26:35.384, Speaker B: Hub page for these chains.
00:26:37.724 - 00:26:41.544, Speaker C: Yeah. Interesting. Cool.
00:26:42.164 - 00:26:45.304, Speaker B: So the next thing we'll do.
00:26:50.384 - 00:26:50.840, Speaker C: Is.
00:26:50.912 - 00:27:08.644, Speaker B: I'm going to go to third web. So third web is a platform that has pre built and audited contracts. And if you're a developer, it has an SD. There's an SDK that you can use to deploy these contracts.
00:27:09.624 - 00:27:15.066, Speaker C: If you're just kind of getting your feet wet and want to not write.
00:27:15.090 - 00:28:00.004, Speaker B: Your own contracts and just use things that are audited, I think this is like a really good way to go. But also, if you don't want to spend time in your terminal, don't want to spend too much time in your code editor, you can actually deploy contracts with third web with no code and basically click to deploy. So in this case, I also want to show you that you can find the raspberry op, Celestia raspberry testnet by gelato in here. You can also find Bub's testnet. Just make sure to use the one that's not deprecated. This happened because Gurley was deprecated, so we switched over to Sepolia. And again, this is hosted by caldera.
00:28:04.764 - 00:28:06.412, Speaker C: I'm already on my roll up on.
00:28:06.428 - 00:28:35.604, Speaker B: My wallet, so I'm good to go. We can see the balance from my deposit in there. And what we're going to do is deploy a silly smart contract to get started. So we're going to use an addition drop. The addition drop is an ERC 1155 standard. This is basically a semi fungible token where there is one version of something and then many copies of it.
00:28:37.864 - 00:28:39.656, Speaker C: We go ahead and click deploy.
00:28:39.720 - 00:28:43.124, Speaker B: Now we're going to be using a picture happy baby.
00:28:45.024 - 00:28:53.992, Speaker C: And we'll make the symbol baby refund. All right, so GM again, everybody, we're.
00:28:54.008 - 00:28:55.844, Speaker B: Going to go ahead and deploy this contract.
00:29:00.364 - 00:29:03.212, Speaker C: So the first transaction is to be.
00:29:03.308 - 00:29:13.104, Speaker B: Deploying the contract and the second transaction will be a signature to add this to our dashboard.
00:29:15.804 - 00:29:17.704, Speaker C: So the contract's been deployed.
00:29:18.164 - 00:29:32.364, Speaker B: Now we're just confirming that we're going to add this contract to our third web dashboard. And once that's done, I think it'll refresh itself.
00:29:33.744 - 00:29:34.604, Speaker C: Sweet.
00:29:35.384 - 00:29:48.684, Speaker B: Now we see the happy baby contract is deployed successfully. Now we need to add an NFT to the contract itself. So this contract actually supports multiple nfts.
00:29:52.684 - 00:29:59.424, Speaker C: Or tokens. I guess they're not actually nfts because they're not, they're semi fungible. But sfts, I don't know.
00:30:01.364 - 00:30:08.184, Speaker B: You can add in some background color and external URL for OpenC.
00:30:11.164 - 00:30:12.636, Speaker C: The thing is, these aren't going to.
00:30:12.660 - 00:30:16.554, Speaker B: Show up on opensea. I don't think you can add custom chains there yet.
00:30:21.014 - 00:30:24.126, Speaker C: And we'll go ahead and set the.
00:30:24.150 - 00:30:45.204, Speaker B: Mood of this baby to happy. Next thing we'll do is lazy mint the NFT. And once that's done, we're going to set some claim conditions.
00:31:04.824 - 00:31:05.928, Speaker C: So that was first.
00:31:06.016 - 00:31:13.154, Speaker B: The first NFT was successfully minted. Now we're going to set the permission or the claim conditions for this.
00:31:13.734 - 00:31:14.230, Speaker C: Yeah.
00:31:14.302 - 00:31:43.074, Speaker B: Okay, cool. So inside the token there's a tab for claim conditions. And basically this is where you can set up your allow list. You can set up your like pre claim or pre minting phases and all that fun stuff. So we're going to go ahead and do public so anyone can mint it. We don't really need to give it a special name or anything. The naming is for your own understanding.
00:31:43.074 - 00:32:00.166, Speaker B: We're going to say that people can mint unlimited for zero ETH, basically just paying the gas fee. Once we save those, it's going to update the contract itself. Now that we've done this, we can.
00:32:00.190 - 00:32:20.364, Speaker C: Actually go ahead and, and mint one after that transaction goes through. I keep checking in on the caldera roll up every few seconds here. Awesome.
00:32:20.444 - 00:33:33.894, Speaker B: So the claim phase is currently active. There are unlimited happy babies to be minted. The default price is free and the limit per wallet is unlimited. So in the case that we want to add some more strict rules, we can do an allow list and basically add a snapshot of people that we can allow to claim the NFT. The easiest way to test this out is to use the embed down at the bottom. And we're going to go ahead and mint a free gm from the happy baby contract and we're going to confirm that. Now to see the composability of all this, I'm also going to add that to my wallet.
00:33:33.894 - 00:33:53.184, Speaker B: The other one you're seeing is a test contract. So we're pasting the contract address from third web. We're entering the token id of zero as you can see over here. And we're going to import that. So now I have two and I don't know which one's which. So 1 second.
00:33:57.004 - 00:34:06.852, Speaker C: Go ahead and remove that. All right, so let's try that again. I'm going to import that contract, address that token zero.
00:34:06.988 - 00:34:32.783, Speaker B: And now we have that happy baby. So as you would see on any other roll up or on Ethereum, we can see this in our metamask wallet, but the data that's on the data from the chain itself is being posted to Celestia instead of call data on Ethereum. That's pretty much it for the demo.
00:34:33.523 - 00:34:38.963, Speaker C: I'm going to go ahead and check on this again, but I. Oh, okay.
00:34:39.263 - 00:35:32.104, Speaker B: So we're getting close. The status page and the block explorer are still being set up, but the one thing I wanted to show here is actually the hub page. So this is going to look really similarly similar to the Bubs Testnet page with the overview of chain details, mainly including the chain id, your HTTP RPC, and your websockets RPC. Also, we're going to have a faucet here. So if I go and pull my address, I can enter my address and request some funds on that new roll up, but it's still not set up, so that was a little too early to do that. We're also going to get a wallet connection here so we can add that chain to our wallet and then the status page in block Explorer will show up here shortly. I might jump back to that after we do some Q and A.
00:35:35.004 - 00:35:37.020, Speaker C: When I go back through, just to.
00:35:37.052 - 00:35:39.904, Speaker B: Show you on the smart contract side.
00:35:41.004 - 00:35:42.744, Speaker C: There'S a lot of different options.
00:35:43.844 - 00:36:05.594, Speaker B: If you played around with Bubs Testnet and minted something on the marketplace, I used the third web marketplace contract and the third web front end for this. You can also do a normal NFT drop for an ERC 721 and many other options such as like staking ERC 21s. You can do.
00:36:07.374 - 00:36:08.622, Speaker C: Kind of like lootbox.
00:36:08.678 - 00:36:10.914, Speaker B: Packs, which are pretty neat.
00:36:11.574 - 00:36:14.894, Speaker C: And yeah, there's plenty of options there.
00:36:15.014 - 00:36:16.234, Speaker B: If you want to explore.
00:36:17.454 - 00:36:19.670, Speaker C: But since we're here for roll ups.
00:36:19.782 - 00:36:26.514, Speaker B: We'Ll go to questions for anything around the op stack that you're curious about.
00:36:34.414 - 00:36:40.230, Speaker C: That's a good question. I mean, yes, but I'm curious to.
00:36:40.262 - 00:36:55.988, Speaker B: Kind of know a little more like not out of the box. I guess the way that you would permission this is you would only share like your chain information with the people that you want to use it. I'd say, like on the actual implementation.
00:36:56.036 - 00:37:00.944, Speaker C: Of that, like on Opstack itself.
00:37:02.724 - 00:37:34.204, Speaker B: That might be a case where you want to actually modify the roll up, maybe doing different precompiles and. Yeah, I guess I don't really know too much how that would be done, but yes, it can be done. All right.
00:37:35.264 - 00:37:47.844, Speaker A: Yo, Josh, that was pretty cool, especially using the third web smart contract to easily deploy the NFD contract. I thought it was pretty like all in house.
00:37:49.744 - 00:37:53.004, Speaker B: No click deploy a roll up and a contract. Look at that.
00:37:53.304 - 00:38:22.400, Speaker A: Yeah. One click deploy. One click deploy a roll up. One click deploy a contract. Easy peasy. I guess one of the things I want to ask is, given all the resources you went over today, what are cool things you think people can take advantage of using? You know, the op stack, roll up deployment and third web you showed an NFT mint contract. Is there any other cool thing they can do on the application side with their op stack?
00:38:22.592 - 00:38:56.260, Speaker B: Yeah, for sure. I guess starting it, like, for me, like art and digital ownership was kind of what got me hooked on crypto or like blockchains as a whole. And. Yeah, I think like an easy example is deploying a marketplace, and then for that marketplace you could deploy your own NFT contracts for that. Actually, I want to go ahead and we'll peek around here. Yeah, you could have people stake their NFTs if you're into that. We're going to go ahead and view all the popular ones.
00:38:56.260 - 00:39:35.864, Speaker B: You could do a membership token for a DAO, for example. I know there's a lot of meme coins right now, but I feel like we need to bring the Daos back. You could deploy your own token, which I guess we can go ahead and do one just for fun. Yeah. So it's just as easy as setting a name for it, maybe giving it an image or something, and then doing the deployment, I guess, on the roll up side. Is there anything else that you're curious about there?
00:39:37.964 - 00:39:41.708, Speaker A: I believe you went over both caldera conduit, right?
00:39:41.876 - 00:39:42.624, Speaker C: Yep.
00:39:42.924 - 00:39:50.344, Speaker A: Nice. And both of them are like, great option for people to use for deploying an op stack.
00:39:51.044 - 00:40:04.480, Speaker B: Yeah, I would say those are like the two that are self serve right now. I might be wrong, but I think, yeah, for gelato, you have to contact the team and they'll help you set it up and then give you the information that we're seeing in these dashboards.
00:40:04.632 - 00:40:05.444, Speaker A: Okay.
00:40:06.184 - 00:40:14.844, Speaker B: And then there are a few other roll up as a service providers that are like in the works and I guess will be on our website.
00:40:15.784 - 00:40:16.564, Speaker A: Nice.
00:40:19.944 - 00:40:48.994, Speaker B: I wanted to real quickly see we, it's been, I think about 15 minutes or 20 minutes since we started this. And we have a. The hub page is live. There's also a status page that will show us how long a roll up has been online, which you can also. Wow, nice. You can have people subscribe for updates as well. And we also have the block Explorer is live or, sorry, the bridge is also live.
00:40:49.574 - 00:40:50.794, Speaker A: That's insane.
00:40:51.534 - 00:40:57.034, Speaker B: So, yeah, if we want to bridge from Sepolia to our op stack workshop, l two. We can do that.
00:40:57.894 - 00:41:18.344, Speaker A: And Sepolia is the l one part, right? It's on the l one side. Okay. One of the questions, I think, by Leslie, and how do you bridge from one roll up to another roll up? I don't know if that's provided by Caldera or conduit, but I think the normal solution would be hyper lane or polymer, right?
00:41:18.504 - 00:41:35.416, Speaker B: Yeah, I think so. I guess, like, out of the box. If you deployed two roll ups right now, you couldn't do that. The roundabout way would be to just, like, withdraw and then send it to the other roll up. But, yeah, polymer. Probably the best way to go about that.
00:41:35.600 - 00:41:48.204, Speaker A: Yeah. And for people tuning in, we do have a hyperlane and polymer workshops coming up. I need to double check what time they are or what day.
00:41:50.864 - 00:42:04.124, Speaker B: Let's see. While you're doing that, I'm looking through the chat. Yeah, I guess the teletubbies do have the same colors as ISP. Nice catch. There.
00:42:08.464 - 00:42:38.314, Speaker A: We have the permissionless interoperability and deployment workshop by your, from hyperlane on April 12 at 12:00 p.m.. Eastern, daylight saving time. And then we have, I think the. The polymer one will be on April 19. It's called connecting Ethereum. L two, interoperability through polymer. So I think that one's also relevant for a lot of people related to the question to ask.
00:42:38.314 - 00:43:07.554, Speaker A: Nice, what is something, Josh? Okay, one question I want to ask is, given that you're deep in the modular ecosystem, like a builder and stuff, for any new builder, what is something you wish you knew when you got started on your modular journey that you want to impart on new developers?
00:43:11.094 - 00:44:10.554, Speaker B: That's when I started. It's less like something I wish I knew, and it's more that something I'm happy that exists now for all of the people that are in EVM world, is that when I started, I was mainly working with Cosmos SDK chains and Rolekit. But for me, as someone who entered this world using Ethereum, using Solana, but mainly on the Ethereum side, I think it's really cool that we have these options available for people to deploy their own roll up just as easily as I deployed that token on third web. I think that's amazing in terms of progress and bridging the gap for people who, like, hear about Celestia, know that it's a cosmos chain, and wonder, like, where do I get started? I think it's really cool that we kind of have this entry point now for people working on the EVM.
00:44:12.254 - 00:44:48.894, Speaker A: Yeah. And, like, the cool thing about it is for a lot of people, like, you know, based on what you went over today, if I'm coming from the EVM world, I just need to know that what Celestia is used for from my roll ups point of view, is scalability and ease of deployment. And I don't need to worry too much about all the different moving parts and celestial. I can just one click deploy roll up, as usually is deploying a smart contract, and then one click deploy a smart contract, and voila.
00:44:49.234 - 00:45:56.574, Speaker B: Yeah, as easy as to deploy rollup. So, yeah, on that note, I guess, like, the thing that I kind of wish I understood the way that you just explained it, is that the way that I would analogize Celestia now is very similar. The way that you use Celestia to deploy a roll up is really similar to how you use alchemy to use an RPC endpoint or anchor or quicknote or something like that. When I go onto one of those providers and make an account and use my RPC from them to build my application on an existing l one, it's like, pretty much abstracted away from me enough where I don't really need to think about what's actually going on. I just know that it works. So for the case of Celestia, I think that's like, yeah, the thing that it's taken some time for me to understand, but it's basically like the infrastructure that allows you to make those roll ups and to scale those roll ups, but you don't really have to know too. Too much about everything that's happening behind the scenes or underneath.
00:45:57.154 - 00:46:49.074, Speaker A: Rather, it's kind of like if I want to deploy an instance on AWS, I don't need to know exactly what they're doing at the data center. Like, I probably have some requirement, like, I need this specific instance from, you know, pretty kind of traffic I'm getting and stuff. But other than that, I don't need to know, you know, like the stack of servers. How did that all work? How did it all connect together? I have a specific requirement for the kind of os I want, the kind of hardware requirements, if you will, that I want, and then I click and I deploy with AWS, then I can deploy my application on it, and that's kind of what Celeste is doing. It's like cloud computing for web three and scalability while keeping the costs really cheap.
00:46:49.474 - 00:47:24.594, Speaker B: Yeah, and I guess like the way that you just described deploying one of those cloud instances, it seems really similar to me, to the way that we just deployed the roll up. Like, we picked our stack, we picked the DA layer, and. Yeah, yeah, I guess magic. Pretty cool to me. So hopefully, people in the chat or people watching find it interesting. And, yeah, I guess the thing we didn't explore too much is that you can also run this on your own, and if you want to do that, just visit the docs.
00:47:26.614 - 00:47:42.360, Speaker A: And is it fair to say that, let's say somebody wants to experiment really fast. Maybe they don't want to get to Conrad or caldera step yet, but they want to have an existing testnet or these resources available to them.
00:47:42.542 - 00:48:09.124, Speaker B: Yeah, for sure. They're also going to be found in the docs. That's the easiest way. Or if you want to look in the slides after this, we're going to send the slides out, but we have both of the existing testnets in the deploy a roll up category on the celestia docs. I can also drop to those.
00:48:09.904 - 00:48:36.524, Speaker A: Yeah, there's, um. There's the bubs testnet, which I'm going to drop here. And then there's the raspberry one. Yeah. Which I'm going to drop in here. This is specifically for Opus stack. We have other one for arbitram, but the arbitrum workshop is happening later, so.
00:48:36.524 - 00:48:38.160, Speaker A: Yeah.
00:48:38.352 - 00:48:52.684, Speaker B: On that note, I'm excited for Diego's workshop. I think you're gonna. If you're into the EVM, you'll find one of the two something that you can use for your project. So, looking forward to see what people build.
00:48:55.264 - 00:49:27.064, Speaker A: Yeah, I'm really excited about that, because it's like you guys, the fresh fd oven, like, new integration happening, and there's a lot of cool things that people can build with it, and that's. I think it was announced last week, as well. Right. So I'm excited about that. Hopefully, if Diego has enough time, he might include stylus integration into it, but it depends on how much time he has available and stuff like that.
00:49:28.264 - 00:49:37.284, Speaker B: I guess with that, I think we're. Unless there's any last questions, I don't think I have anything else to add.
00:49:38.144 - 00:49:41.496, Speaker A: Yeah, same here. Anyone questions?
00:49:41.680 - 00:49:42.724, Speaker B: Tuning in?
00:49:49.024 - 00:50:03.304, Speaker A: Going ones. Going twice. Thank you, Josh. That was. Oh, yeah, let's do that. Oh, look at that. Thank you so much for your time.
00:50:03.304 - 00:50:14.384, Speaker A: And this has been a really amazing workshop where people can one click deploy a roll up, and then one click deploy a smart contract. Easy peasy.
00:50:15.564 - 00:50:16.802, Speaker B: Just like that.
00:50:16.988 - 00:50:21.994, Speaker A: Just like that. And then there's a lot of confetti here. I don't know if I get. Oh, I got the fireworks.
00:50:22.974 - 00:50:23.630, Speaker B: All right.
00:50:23.742 - 00:50:28.914, Speaker A: Thank you, everyone, and thank you, Josh, for this amazing workshop.
00:50:29.294 - 00:50:32.654, Speaker B: You're welcome. Have a good one, everybody. Bye.
