00:00:00.880 - 00:00:08.406, Speaker A: Welcome to another year of sovereign radio. I'm your host Chango and chain. I'm here with Orkhan of Citria.
00:00:08.478 - 00:00:09.654, Speaker B: Hi, nice to meet you.
00:00:09.742 - 00:00:11.662, Speaker A: Nice to meet you. Welcome to the show.
00:00:11.806 - 00:00:12.446, Speaker B: Thank you.
00:00:12.518 - 00:00:20.414, Speaker A: So Citria is a bitcoin l two. And Orkhan believes in hyper bitcoinization. Why don't we talk about that?
00:00:20.542 - 00:00:45.152, Speaker B: Yes, sure. So hyper bitcoinization is an idea that puts around like ten years ago by an old bitcoiner called Daniel Kravis. And the idea is in the future world we will see bitcoin is adopted as the unit of account and we don't need any other inferior monies like turkish lira or us dollar. Instead everyone will use bitcoin for their all day stuff.
00:00:45.296 - 00:00:48.432, Speaker A: And bitcoin being the global settlement layer.
00:00:48.536 - 00:00:58.094, Speaker B: Yes, bitcoin being the global settlement layer. BTC being the unit of account assets. BTC being used in regular economy just like we use fiat currencies today.
00:00:58.262 - 00:01:06.710, Speaker A: So how did reading that paper then lead you to build a bitcoin? L two?
00:01:06.830 - 00:01:35.744, Speaker B: Yeah. That paper is actually a very, very short article, but it's created, I think even before that people were thinking bitcoin will be adapted for all the states and all the governments around the world. They will back their money with PTC. But the idea is there's a growth that needs to be happened while reaching to that point. Right now I think we are in still store of value stage of bitcoin. We haven't reached to medium of exchange or unit of accounts. And in order to make that happen we need scaling.
00:01:35.744 - 00:02:14.004, Speaker B: That's the bitcoin score challenge. Bitcoin L1 is the most decentralized and secure base layer. Most people can argue it, but I think it's not something to argue given the number of nodes and the mining, cash, power and stuff. But in order to people, everyone should use BTC and everyone should use BTC whatever they want. They should be lending borrowing stable coins or they should be lending borrowing bitcoin backed assets. But in order to make it happen, we need layers on bitcoin. This is not only roll ups like we built, but it can be channels, it can be private applications, roll ups, side chains, whatever.
00:02:14.004 - 00:02:27.096, Speaker B: But what we want to see is layers on top of bitcoin that can make access to bitcoin very easy, cheap and can provide more options to users instead of just doing large payments on the base layer.
00:02:27.288 - 00:02:31.440, Speaker A: Citria is a Zk roll up on top of bitcoin.
00:02:31.520 - 00:02:32.064, Speaker B: Yes.
00:02:32.192 - 00:02:35.144, Speaker A: And you're using Bitvm for a settlement.
00:02:35.272 - 00:02:35.608, Speaker B: Yes.
00:02:35.664 - 00:02:38.200, Speaker A: Can you talk about the technical architecture?
00:02:38.320 - 00:03:00.016, Speaker B: Yeah. So on the l two level, it is very similar to Ethereum ZK roll up. Today it's running as we are building a Zk EVM. So you can compare it with, let's say, scroll. On the l two level, it is very similar. There's a sequencer producing blocks, there's a prover producing proofs. But instead of settling on the Bayes or every single block, what we do is we simply inscribe that proofs to bitcoin.
00:03:00.016 - 00:03:53.732, Speaker B: Just like inscriptions, just like the proof wizards or cats images, we just inscribe that proof to the Bayes layer. And after some time, we aggregate these proofs together and at the end we have a single succinct proof representing the whole citria blockchain and undead proofed is optimistically verified on bitcoin using bitvm. BitvM is a bit complex mechanism that enables arbitrary computation on bitcoin in an optimistic way. So how bitvm work is, there's a simple ZkW fire script in bitcoin, but it is way larger than the block size, so you cannot execute on chain directly. And we simply, BitFm simply divides that CKP verifier into small chunks. And if there's something wrong, you can just execute the incorrect chunk. So bitcoin can verify through incomplete computation whether it is correct or not.
00:03:53.732 - 00:04:11.162, Speaker B: Using tech mechanism, we enable trust minimize two way peg mechanism between citra and bitcoin. But just inscription also enough to get bitcoin security for double spending, rework resistance and social resistance and all the other parties that bitcoin provide to us.
00:04:11.316 - 00:04:21.130, Speaker A: Makes sense. Are you concerned about the potentially ephemeral nature of inscriptions and posting proofs to sats?
00:04:21.510 - 00:05:02.514, Speaker B: So it's a bit hecky way to put data on bitcoin. It was already possible since the bitcoin genesis with op return up to 80 bytes. But inscriptions, people realize that you can put up to four megabytes data each block, but the data throughoutput is still way, way like lower than Celestia or like Ethereum with blobs or AvA or whatever. But that's the only way to get bitcoin security. If you are using other DA layer, then you are trusting that DA layer to not with all the data, their social consensus. But most bitcoin users, they are just part of the bitcoin social consensus. They are not part of other blockchains usually, and they are not part of their social consensus.
00:05:02.514 - 00:05:37.858, Speaker B: So we start in that way. It is not extremely scalable, like million TPs or whatever. But it's the only way to get full bitcoin security. And in our roadmap, we have models like volition, which we enable also off chain data, and users can choose where to send their data. So we simply opt in another DA option, which is our peer to peer network, and people can use it if they don't think bitcoin security needed for that application. But if they think this should have bitcoin secured, they will simply choose to send their data to bitcoin, and this is how we are going to scale in the next coming years.
00:05:38.034 - 00:06:04.240, Speaker A: Okay, so, yeah, I don't fully understand the technical differences between inscriptions and stamps, but my understanding of it is that stamps is actually immutable on chain forever. But then inscriptions, in terms of miners, they can and cannot decide to propagate the data in the inscriptions.
00:06:04.540 - 00:06:42.470, Speaker B: Yeah. So for inscriptions, you put the data into, like, the witness part. So some miners, like ocean mining pool, chooses to filter that. So if you have a transaction which costs a lot in terms of data, but not in terms of script, they simply don't put into the block, but they are way lower on hash rate compared to the other pools in bitcoin. The other thing is the stamps, is they put the data in bitcoin script directly rather than putting into the witness part. But it costs four times more than inscriptions. But, yeah, it is extremely hard to understand whether it's a stamp or regular bitcoin transaction.
00:06:42.470 - 00:07:00.756, Speaker B: So some people use it to just spam the network and make Maxis angry. But I think inscriptions are very safer to use, and if someone does not store their inscriptions on their computer, they can simply prune it. So that's also another advantage of using inscriptions.
00:07:00.908 - 00:07:30.974, Speaker A: Yeah. So that leads to my question, which is, if you have a zk roll up that's running on bitcoin, youre probably going to have some high value transactions that you want to be immutable on the chain. So if you're submitting proofs to an inscription on bitcoin, how does that inherit the security of bitcoin?
00:07:31.102 - 00:08:03.134, Speaker B: Yes. So on the l two level, these transactions are processed in blocks, and eventually prover creates a proof. And that proof says, I started from this l two block and ended in this l two block, and I round all the EVM execution. And that's correct. This is the proof part. And together with it, there's a statif created, which is simply the difference between the latest blockchain data and the initial blockchain data during the proof generation, and these two things go into the bitcoin as an inscription. So if you are just running a full node, you simply sync from sequencer.
00:08:03.134 - 00:08:34.330, Speaker B: But you also check bitcoin regularly and get that proofs and verify locally so that you can make sure sequencer is getting confirmations correctly and equal to everyone. So some other node cannot just fork away with sequencer data, because bitcoin is now your source of truth. If the data is not on bitcoin, if the proof is not on bitcoin, then this means that fork of the chain is invalid. So you get the double spending protection of bitcoin. If it's already ordered in bitcoin, then it's fine. That's how you get bitcoin secured for these l two transactions.
00:08:34.430 - 00:08:52.594, Speaker A: Gotcha. All right, and so you have given a talk at the modular summit. Yes, and I'm curious to know what you're covering in that talk. What are you about to reveal to the world with respect to hyper bitcoinization?
00:08:52.762 - 00:09:28.642, Speaker B: Yeah, my talk, full title is like hyper bitcoinization through modularity. My idea is in order to like achieve the hyper bitcoinization, we should have layers. And I don't think we should only have one layer like lightning or citra. We should have multiple layers, and they can be all connected through these channels, like lightning, or they can be connected through chain abstraction. But we cannot scale solely on the l one. It's too hard, especially if you're on bitcoin. Then you need to go through this social consensus process, which takes four or five years per each bip.
00:09:28.642 - 00:10:07.860, Speaker B: And it's not possible to scale l one without increasing blocks like gigabytes of data, which we definitely don't want. But if we can build optional tools like roll ups, like volidiums, like channels, then we can scale bitcoin for everyone without bothering l one too much. ZK proofs are very great example for that. You do all the stuff on l two, but l one simply has this 200 bytes of data to prove to protect the validity of the l two transaction and nothing else. So I think that's an ideal way of scaling. And on Citra, you can simply build l trees using alternative DA layers as well. So you get extremely cheap transactions with trust.
00:10:07.860 - 00:10:40.150, Speaker B: Minimize BTC as your native assets. I think there should be great applications to be built, like order books using bitcoin prediction markets. Settling with bitcoin, there are a lot of applications to build. We just trying to provide the best infrastructure so that you can build applications with the same level of security. Of bitcoin. And in the future we want to see more and more layers on Citria, on bitcoin, on lightning, whatever. But they should be all connected and work in interoperable way to scale bitcoin for all use cases and everyone.
00:10:40.570 - 00:11:03.960, Speaker A: Yes, right. That makes sense. So most of the higher volume that requires higher throughput transactions are supposed to be run on your ZK EVM and then possibly settle on something like Celestia, like a separate DA layer or something. And then transactions ultimately settle in bitcoin.
00:11:04.040 - 00:11:29.370, Speaker B: Yes, exactly. Like if you want to have extremely high true output, you don't have to have this da limit of bitcoin. So in order to kind of bypass it, you can build an l three where you can send the data to Celestia and settle on Citra. And Citra eventually settles on bitcoin. So you get bitcoin security with very cheap fees. So you can build extremely high chain, high chains to build all this stuff like prediction markets and order books.
00:11:29.450 - 00:11:34.298, Speaker A: Very interesting. Are there any applications currently building on citrus?
00:11:34.314 - 00:12:15.302, Speaker B: Yes. So we recently launched our public Devnet that's kind of zke VM running on bitcoin, but the bridge mechanism in between is still work in progress. But this kind of developer preview so that developer can see that this is fully evm compatible and they can simply copy paste all the solid applications and run here. There's currently Dex live to like people to test the swaps. So you can min tokens, you can swap tokens. And there are a couple teams installed building core primitives like alertes, like blending, borrowing like Dex, but on production, there's only one today running on Devnet so that people can experiment. But we always look for founders in modular summit.
00:12:15.302 - 00:12:45.470, Speaker B: There are a lot of founders, especially I think we already have enough infra. Everyone is talking about this, but we have enough infra now we should focus on applications. And I already seeing some people starting to create more creative use cases with PeTC and bitcoin security. So if there is like anyone who wants to build something cool on bitcoin but don't want to deal with bitcoin script or don't want to get the limitations of bitcoin script, they can simply come and build citria with the same level of security.
00:12:45.850 - 00:13:14.004, Speaker A: Excellent. Well, I'm excited to have Citria exist. And if you are too, be sure to tune in to Orkon's talk at the modular summit. And yeah, you could follow along. Do comment below in the comment section to see if you agree with the worldview of hyperpigmentation or not. Love to hear from you. Thank you, Arkan.
00:13:14.052 - 00:13:14.820, Speaker B: Thank you for having me.
