00:00:00.520 - 00:00:29.440, Speaker A: Hey guys, welcome back to more sovereign radio here at Modular Summit. I'm here with Andrew Huang from Conduit. Co founder, CEO. What do you prefer? CEO, CEO, founder, CEO, CEO, founder. I'm Hart Lamber, co founder of a cross protocol and part time podcast host in this series. Andrew, let's go into quickly your origin story. How did you get to conduit and this idea for sure?
00:00:29.480 - 00:01:01.940, Speaker B: Well, one, thanks for having me, Hart. Excited to be here. Prior to starting conduit, I was an engineer in web two. And so I had worked at this company called Wish, which is like e commerce mobile shopping app. You might have purchased some really cheap items from there, but they're famous for just scaling really quickly. So a great place to learn the infrastructure, how to scale things. And then I joined Paradigm as an EiR towards the end of 22 and kind of targeting infrastructure times crypto problems.
00:01:01.940 - 00:02:00.448, Speaker B: And I followed obviously during the bull and a lot of activity, a lot of money flowing through the system, still very constrained on compute. And so it kind of felt like in order to sustain that demand or at least give more supply of compute, we needed better infrastructure, navigated the maze. I think where you end up landing is that roll ups are the way to securely scale crypto compute. You might do a side chain, but people don't want to bridge over. You might do an ephemeral roll up, but there aren't a ton of use cases today. Really what you want is a secure way of interoperating with Ethereum and doing that off chain compute. And it was at that time we realized that one, the op stack was coming to fruition, open source with the bedrock stuff, obviously followed that up with the arbitrum orbit and the arbitrum nitro stack.
00:02:00.448 - 00:02:07.340, Speaker B: And so it's been off to the races and giving, I think, developers a primitive that has been sorely needed.
00:02:07.960 - 00:02:19.330, Speaker A: So you're kind of like a modular stack poster child in the sense that you're like modular stack is your take on how to scale compute 100%.
00:02:19.370 - 00:02:57.014, Speaker B: I think we're a great poster child. I think initially we were very kind of Ethereum aligned and there were certainly skeptical takes around some of the modular stuff. But I think very quickly, just the economics of the modular stuff really made rollups accessible in a way that Ethereum at the time was not. I think we actually just launched not blobs. You've probably seen rollup. WTF? We launched the blob da version of that chart. And if you look at the cost ranking right now, blobs are actually free on Ethereum.
00:02:57.014 - 00:03:17.470, Speaker B: And so kind of the cheapest data source today, obviously, as that finds price, discovery will kind of go up. But slash is kind of next with I can be and some of the other options. And so it's been interesting to see that cost performance ratio over time and how that's enabled many, many different types of roll ups and even things like later thirties.
00:03:18.010 - 00:03:33.058, Speaker A: Yeah, I got some data for you on what we've seen post den kun two, which you can get into, but before we go too deep, let's make sure we get everybody on the same page with what conduit is. Give me the two second pitch on what conduit is and where you think it's going.
00:03:33.154 - 00:03:57.186, Speaker B: Yeah, so conduit is AWS for crypto. So we're a rollup native cloud platform and we think rollup is the new server. And so there's a lot of infra companies out there. I think traditionally it's only been like read APIs and not actually scaling compute. We think it's an entirely different kind of vertical. And so, yeah, that's how I thought.
00:03:57.218 - 00:04:38.130, Speaker A: You were going to describe it. And I'll just repeat it back because I think it's such a clear, crisp image. This idea that I go to conduit, I pick my vm, whether it's like EVM or SVM or whatever. I pick my stack, I pick opstack, orbit, zksync, I pick my da layer and I hit deploy. And that to me is such crisp, clear product offering. And when I first heard this, I was the one thinking, okay, yeah, this does make the compelling argument that running your own roll up can be equivalent to running your own server, which is also really cool. And I want to actually ask you about later how that kind of evolves.
00:04:38.130 - 00:04:52.874, Speaker A: So cool. Okay, so that's conduit. How do you think, because there are other roll up as a service providers, to ask you the annoying question, like how do you differentiate yourself? Or what's the value add?
00:04:52.962 - 00:05:22.820, Speaker B: Totally. I think each roll up as a service in the market is kind of carving out its own niche. I'd say ours is really what's underrated is the operation, maintenance and upgrading of these roll up frameworks. And so I think deployment is a commodity. I think anybody can run some scripts, get something spun up. I think it's the entire lifecycle and journey with the customer. We say rollup is the server, but the probably correct definition is a database.
00:05:22.820 - 00:06:08.750, Speaker B: As you add more and more data to this database, it gets harder and harder to migrate out and that's why the decision of who you go with isn't a three to six month decision and kind of a rip and replace. It's like I'm going with this provider and I'm probably going to be with them for many, many years. And so I think kind of our reliability, our performance, our stability, and just the customer set that we have today, that is really pushing the limits of kind of the roll up frontier of what's possible means that we can build really cool features and then kind of integrate those back into the product and instantly distribute that to any customer. If I was a team looking for a roll up provider, I'd want to be on the one that all the best customers are going to in the same way that many go to AWS today.
00:06:09.090 - 00:06:36.290, Speaker A: Okay, got it. So premium roll up as a server or roll up as a database, which makes sense, but I guess to extend that analogy too, and talk about where this goes, like you were saying, if this is AWS for rollups, you start with the roll up itself, but then you're going to want to add services in the same way. AWS started with EC two. And I forget what their storage is called right now.
00:06:36.370 - 00:06:36.826, Speaker B: S three.
00:06:36.898 - 00:06:48.980, Speaker A: Yeah, s three. And kept adding more and more services. So I know you guys, what's that look like in your world? What do you think are the other services rollups need to be successful?
00:06:49.130 - 00:07:14.964, Speaker B: 100%. So, one, I think it's probably not going to be possible for us to build every single thing here. So that's why we recently launched or announced the Conduit marketplace. And so the idea is, on any new chain, you're going to need a bunch of tooling, and you ideally want the best in class services. So a great example here is like, every chain needs a fast bridge across. Great fast bridge. And so imagine one click adding across to your roll up.
00:07:14.964 - 00:07:31.964, Speaker B: It's a really powerful way to immediately get access to that. We're working with great partners like Dune, tenderly, indexers like Goldsky. And I think it's increasingly representing an opportunity for us to build additional products and services and distribute it through that marketplace.
00:07:32.132 - 00:07:40.744, Speaker A: Yeah, the dune thing I saw. Now, any conduit roll up will have Dune analytics day one, basically.
00:07:40.892 - 00:07:43.936, Speaker B: So if the customer opts into it, they can have it on day one.
00:07:44.008 - 00:08:20.640, Speaker A: Yeah, cool. And yeah, back on across. Our goal is to be like the day one fast bridge on all these stacks. And I do think this is the cool modular world that I would see coming, where you run your roll up. It's the new server you run your roll up as a new server. You get these day one services that you can do useful things on and you have no code experience to create and launch these things. That seems cool, but I guess to play it forward too.
00:08:20.640 - 00:09:07.070, Speaker A: I'm quite curious and I think there's a lot of fuzzy unknowns around what a world of 1000, 10,000 or a million rollups might look like. And I think it's always quite fun to talk to informed people in the space and get their predictions and hypotheses for what will these roll ups be used for. What does that market structure look like? Is it going to be a handful of major roll ups that have a lot of apps on them? Or are we going to have this app chain thing where each app is their own roll up? Or is this bit of both? I mean, we don't know yet, but what are you thinking?
00:09:07.450 - 00:10:00.380, Speaker B: Yeah, I'm definitely not Nostradamus here, but I think we'll see a variety. And I think on conduit today we see definitely the ecosystem approach. So how do I build out an ecosystem? How do I make sure my rollup has all of the integrations necessary to support that? And then my business model is going to be sequencer revenue. I think the probably the best examples of this are like base and arbitram one, but we have a couple on conduit, like a mode network or something like that, in my opinion. I think basically it depends on the scalability limit of these roll ups. Base has been continuously pushing up the gas limit. If there's some sort of vertical scalability limit there, you're by necessity going to need many different settlement or ecosystem layers for that demand or activity to leak out into.
00:10:00.380 - 00:10:42.364, Speaker B: The other way. I think about it is what differentiates an ecosystem. And if they're all relatively the same, then maybe you just load balance between them. And I even think beyond that really, I think applications taking off and making unique use of their block space is going to be the way forward for many teams. I think only so many people can play the ecosystem game. There's only one Coinbase, there's only one Jesse Pollock. And so I think for most people it'll be what uniquely can I build on my chain? If I'm on my own chain, how do I utilize all of that block space? For example, we have this great game called proof of Play Pirate Nation.
00:10:42.364 - 00:11:10.086, Speaker B: If you've heard of them, they're doing 40 million gas a second, which is 20 times ethereum, five times base, and they have 100k daus, 5000 concurrents. And pirate is the only coin that's been up in this market. I think once you start really embracing that as a server and that amount of compute lifting constraints that maybe people's mental models previously had, I think you can start to build some really cool.
00:11:10.118 - 00:12:02.120, Speaker A: Stuff going back to the base example for a second, because to me it's quite interesting where. Okay, so base is hitting the limits of what you can do on a roll up, and they're going to keep pushing that for a while. Coinbase obviously wants to keep everybody on base, or I would think they want to keep people on base because they earn sequencer revenue plus they kind of just have more control, if you will. But then at some point the biggest applications, they'd also be like, well, I want my own sequencer revenue and, or I maybe can't get the performance or the low gas costs I want on this platform. But then migrating off is quite difficult too. So I don't know. Do you have any thoughts on, do you think some of these larger roll ups might be launch pads for app chains to spin off into or.
00:12:02.580 - 00:12:41.904, Speaker B: I think that's exactly right. I think if you think the original spin offs were like optimism and arbitrum, I think we'll continue to see that kind of. I don't want to use the word fragmentation, but kind of evolution, if you will. What we see base has the most l three s out of any roll up. And I think you can start on base and then if you have an l three settling two base, it's a lot easier to then migrate your state. I think the demand leaking out into these l three s is an evolutionary path forward that we see for a lot of applications that start on a shared layer, obviously it's easier. And then once you hit escape velocity.
00:12:41.904 - 00:13:10.350, Speaker B: And the fact of the matter is, for any kind of settlement layer, it's one size fits all. And in some sense, yes, a roll up is modular. It's also monolithic in the sense that you have many different customers of that roll up, and so you can't optimize too heavily for any particular use case, whereas on your own roll up you can obviously make a lot of customization that kind of push the frontier just for your app. I think for that reason alone, there's a lot of good reasons to launch your own chain.
00:13:11.690 - 00:13:17.510, Speaker A: This is actually a different take than I've heard on the l two, l three thing in a bit, because.
00:13:19.290 - 00:13:19.602, Speaker B: The.
00:13:19.626 - 00:13:42.000, Speaker A: L three thing felt a little foreign to me. But hearing you describe it here, it feels like it gives that application almost max flexibility to do their own thing in the future because they can kind of change their settlement point. What's your takes on the l three thesis? Do you think that's going to be growing? And have you been seeing that at conduit?
00:13:42.380 - 00:14:26.174, Speaker B: The l three thing has definitely been growing. I would say its moment in the sun was, I think, when we launched base, all three s with the base team back in March, and so we saw a huge flood of demand. I actually think very quickly they started raising the gas limit. That calmed some of it down. But as we're hitting congestion again on base, as they continue to expand and as more cool stuff gets built on chain, it's just such a natural release valve for that demand that we're still getting a ton of l three s. And I would say today, numbers wise, it's not 50 50 yet. I would say big portion, maybe like 30%.
00:14:26.174 - 00:14:28.454, Speaker B: And growing quickly are l three s.
00:14:28.462 - 00:14:58.540, Speaker A: Versus l two s. Okay, last thing to touch on, like, interop. So in this world of all these chains, I mean, I care a lot about this with, like, across, but how do you think we navigate this? Right? So it's like, this is the. In my mind, this is the core trade off of the modular thesis of like, okay, great, we have all these. We have more compute because we've isolated these roll ups or these state machines, but now we have to connect them and. Yeah, I don't know. Do you have any high level hot takes on what Interop will look like?
00:15:00.160 - 00:15:41.430, Speaker B: I don't know if I have any hot takes. I think zooming out. I think fragmentation is initially a bad thing. I think there's. I've used this term before, but, like, vestigial overhang of needing to max composability at all times. I think if you look at web two, like Facebook and Instagram and Google, they don't necessarily compose that often, and you have well defined paths for the data that does. I think if you look at interoperability in a many chain world, it's unclear to me that somebody playing pirate nation needs to arb some mvv on base in the same kind of atomic transaction.
00:15:41.430 - 00:15:58.050, Speaker B: I think the key thing is really making sure that you can use the chain. If I'm on chain a, I want to interact on chain b, that should be seamless. I think that's where protocols like across come in, where you can make that seamless with some of the interop stuff. And I think that's kind of the end game.
00:15:59.310 - 00:16:24.424, Speaker A: You might not think it's a hot take, but I think it is actually kind of a hot take. One that I very much agree with, but I keep quiet. Composability, I think, was overhyped in Defi 1.0, and people thought this is just this thing you need. It's this amazing quality that a single blockchain gives you. I fully agree. When you look at web, two apps, they don't talk to each other, but they could.
00:16:24.424 - 00:16:52.470, Speaker A: There just hasn't really been much need to. And so I don't know. This does fit into my own thinking, where the most important thing you need for interoperability is the seamless way to move value, to be able to bridge swap and call bridge assets, bridge value to chains, maybe swap from one asset to another, but basically, so you have gas money to do the action on your chain. So I think that's. I mean, I agree with you, but I think it is a space to take.
00:16:52.850 - 00:17:10.680, Speaker B: I think maybe the other way to look at it is composability kind of inherently means, like, maybe they should be one app. It also means it's pretty easy to get commoditized. So I think trying to build a protocol or an app that isn't as composable is in some ways, very differentiated.
00:17:11.260 - 00:17:19.684, Speaker A: Very cool. All right, I think we got to wrap this up. But if people want to hear more about conduit, if they want to launch their own roll up, where do they go? What do they do?
00:17:19.812 - 00:17:24.204, Speaker B: Yeah, go to conduit XYZ and our Twitter conduitxyz as well.
00:17:24.332 - 00:17:25.640, Speaker A: Cool. Thanks so much, Mandev.
