00:00:00.570 - 00:00:26.870, Speaker A: A successful accomplishment of our long term vision, or a north star, is really to grow this modular future of blockchain, accelerate it, help bring it about. And what a result of that will look like is we now have achieved, say, a four to five digit number of functioning roll ups. And I would say more than half of them are being secured to some type of main interchange security module.
00:00:28.810 - 00:01:07.634, Speaker B: Welcome, everybody, to another episode of Celestia Spotlight. I'm Nick Coo at Celestia Labs, and the purpose of Celestia Spotlight is to hear from people at the forefront of the modular movement, people building the infrastructure that we're going to be using in the future. Today, my guest is John Call, who is building Hyperlane. And Hyperlane is a permissionless interoperability layer built with a modular security stack. That's a lot to unpack. And so we have an exciting episode ahead of us. John, welcome to the show.
00:01:07.634 - 00:01:17.750, Speaker B: I'd love to hear a bit about your background before we jump in. But first, I also have to ask you, have you run a celestial light node yet? And if not, why not? What's stopping you?
00:01:17.820 - 00:02:00.530, Speaker A: Well, I was trying to run it on this little fitbit versatube that I bought three years ago. We're getting there. Step one, jailbreak the damn thing. But that was going to be my contribution. And if I don't manage to jailbreak it and get it running, I'm going to make it look like I did, because I saw some of those memes. I thought you posted one where you had it on a switch, and I was like, damn, this one actually is real because I know the jailbreaking thing that is running in the background to make this happen. So it was impressive, but maybe you'll see one for me on the Fitbit.
00:02:03.190 - 00:02:04.754, Speaker B: I would be very stoked to see that.
00:02:04.792 - 00:02:06.470, Speaker A: So I hope you get it.
00:02:06.620 - 00:02:11.810, Speaker B: Yeah. Let's hear a bit about your background before we dive into hyperlink.
00:02:11.970 - 00:02:46.014, Speaker A: For sure. I've been in crypto for a little while. I got really enamored around 2016 when a buddy over the weekend is like, yo, John, I'm going to put all of my money into ethereum. All my friends are doing it. Do you think I should? And why is he asking me this? He's asking me this because I'm the only one he knows who presumably knows a thing or two about money. The time I'm a bond trader at Morgan Stanley, a little bit out of school, and like, yeah, this guy's like, put everything I got into Ethereum. He's a dear friend, and maybe that's a bad idea.
00:02:46.014 - 00:03:12.558, Speaker A: I don't know. So let's spend some time on it. And we spent some time on it, and we spend the entire weekend, and I am just hooked because I'm someone who, I grew up in Israel, and Israel, the banks are fucking awful. The banks treat you as if they're doing you a favor, that they take care of your money. It's not really your money, it's theirs. You just kind of get to sometimes withdraw some parts of it. And so I'd been very interested in anything that will help dismantle the banks.
00:03:12.558 - 00:03:46.178, Speaker A: And that's funny from someone who ended up working at investment bank, but I needed money, so I spent the entire weekend on Ethereum, and I'm like, this is the first thing I've ever seen that might actually serve my general cause. It's kind of like dismantling these fucking terrible institutions. That is just like banks because they've personally irked me. Both in Israel. Then I moved to the states. I'm one of the people that Wells Fargo steals money from in the account, if you're familiar with the Los Angeles area scandal, that my account was one of them. And so I come back to the desk on the Monday after that, and I'm just like, oh, my.
00:03:46.178 - 00:04:10.198, Speaker A: Like, we are all going to be out of a job. This Ethereum thing, it's coming, and we're so fucked. And for the next two years in Morgan Stanley, I am the laughingstock of the desk. I am the crypto guy. I'm this weirdo, like, 200 people, conference calls, they're just laughing at me. I basically, from that spring of 2016, for the next year and a half, I just relentlessly learn about crypto. One point, I become a small time miner.
00:04:10.198 - 00:04:44.438, Speaker A: I think I might even have my. Excuse the mess. We're just moving. I might have one of my last gpus. I kept it as a memento, but it was a small time minor for a little bit. By the end of 2017, I get into crypto, officially find my first job that wasn't going to land me in jail, and became a crypto investor at a firm called Passport Capital. Had a good run there, became, like, the first investor in things like Solana, also had not so good of a run by investing in things that then kind of, like, unceremoniously exploded that I'm sure everyone's thought about and talked about.
00:04:44.438 - 00:05:22.862, Speaker A: Spent the next three years before starting hyperlane at Galaxy. If you're familiar with Mike Novogratz, it's his firm ran the investment business. There had also a great run there, invested in this obscure thing called lazy ledger at some point. And that thing, I think is doing all, you know, this whole time I very interested in this notion of interoperability. So on my team, I'm the only one without an engineering. At least I'm the founding, but the only one without an engineering background. And I remember hooking up to the Internet 1996, and not being able to talk to my buddy who was on a different ISP.
00:05:22.862 - 00:06:04.160, Speaker A: Like, our chats wouldn't work, the emails wouldn't work, and then within a year it worked. And so when I heard that blockchains can't talk to each other, I was in the San Francisco area, a lot of cosmos people in the Berkeley and SF area, and they were just like, no, this thing's coming. It's going to change everything. These blockchains are going to talk, don't even worry about it. So I thought it's like a year away, but five years later, it still felt like a year away from being a year away. And so, end of 21, there was this opportunity to work on what later became hyperlain. And I was really interested in just like letting anyone connect any chain because it seemed insane that these super cool Internet computers can't talk to each other.
00:06:04.160 - 00:06:15.720, Speaker A: So that's a little bit about me and kind of like how I got to this point. It's a weird story, but I'm pretty content with my life, with my obscure decision so far.
00:06:17.690 - 00:06:36.346, Speaker B: I love it. Yeah, that's quite the transformation from Bond trader to interoperability. Geek. So anyway, yeah, let's dive into hyperlane. Tell us, unpack this whole mission that we started with.
00:06:36.368 - 00:07:15.618, Speaker A: I'd love to. Yeah. So I came in, and today I want to talk about hyperlain. We said, oh, it's like this permissionless interoperability layer, and it's got a modular security stack. So what does that really, really mean? If there's one takeaway you should take from the entire 45 minutes, hour we're going to spend together today, and this is you both, Nick and certainly the audience. The goal of this thing called hyperlink is to let anyone connect any chain. And why do we do that? Because we believe that if you think about the problems of blockchains, sometimes we talk about them, sometimes we don't.
00:07:15.618 - 00:07:56.610, Speaker A: But scaling is still like a major, major issue. Blockchains kind of, by definition, constrain digital resources. So every time demand increases, we get the same problem. It's very predictable. And I think that the modular future of blockchains is really a good solution for, to me, maybe unbiased, the most promising solution. So in this world, we're going to end up having a lot of chains and we need a way to connect between them and we need a scalableish way to do that. So what do we really mean? Let's get into it.
00:07:56.610 - 00:08:59.610, Speaker A: Sometimes when you see stuff talking about hyperlane, and I'm sorry if they go on a minor tangent, you'll see us talk about this concept of the interchange highway. It doesn't seem to make any sense, but just think of like us trying to create a path between all these chains floating in space. And to do that, we think we need to enable permissionless interoperability. And to enable permissionless interoperability, we need modular security. So in the same way that celestia kind of heralded this ascent of thinking of a blockchain, not just as this individual thing, but as the combination of multiple operations and layers in a stack, we wanted to bring that notion to security today. And I recently wrote a piece about this by why I think that permissionless interoperability, and interoperability in general is kind of the last layer of that stack, and we'll spend more time getting into that. But what does it mean to.
00:08:59.610 - 00:09:57.130, Speaker A: Sorry, getting. Moving ahead of myself. How does it complete it? We need this notion of modular security. So at a high level, just think about being able to, instead of having one size fits all, like one security model that tries to address every situation at all times for all people, no matter what, you now delineate security into individual modules. And by virtue of being able to do that, you're going to be able to have a more permissionless way to provision the service that is interoperability. And in that regard, think it fits quite well into the modular stack. So I think one way to make more sense of everything I just said would be to talk a little bit of what are the problems that are faced by developers and people trying to create and navigate blockchains.
00:09:57.130 - 00:10:13.860, Speaker A: And through that, it'll be an easier time to kind of conceptualize and really visualize how something like modular security makes sense, how that helps us obtain something that looks like a permissionless form of interoperability, and we can take it from there. If you're up for it.
00:10:15.830 - 00:10:18.098, Speaker B: Let'S do it. Let's dive in.
00:10:18.264 - 00:11:06.338, Speaker A: All right, so there's a general problem that probably everyone in the audience today knows about that is not really worth spending a lot of time on. Right. Like if you are tuning into a celestia spotlight, I imagine you know about the data availability problem, and if you know about that, you probably are aware of one of the most fundamental problems that blockchains have, which is they don't know how to digest information that is not endemic to them. Put simply, a blockchain doesn't know anything about the world outside of it. And if you want it to know, you need to find some way to feed it into it. And now you're faced with this typical garbage in, garbage out problem, and this is kind of like a fundamental thing. And if been around crypto enough, you're like, oh, that's like what feeds in the oracle problem? Like, yes, that's right.
00:11:06.338 - 00:11:51.898, Speaker A: So this general problem of connectivity is what creates the necessity for an interoperability solution. But in the year of our Lord 2023, there are solutions, some of them much better than others, but they don't always work everywhere. Some of them, to some people's view, not as good, but there are solutions. Like, technically, if I want to connect John's chain with mixed chain, we can find a way. Not everyone's going to like that way, but we can find a way. Primarily, though, this leads us into what we think is like the problem that hyperlain is out to solve. So we have a general problem that we're solving, but really it's about a specific problem of permissioned interoperability.
00:11:51.898 - 00:12:29.226, Speaker A: So if you wanted to do any type of complex action between two or more chains, you really need more than just like simplistic asset transfer. Now you need to include some logic. You need to be able to perform an interchange function call. Maybe you want to do a view call, right? Like in IBC parlance, wants maybe to do something like an interchange query. And that requires some logic to be passed around. Now, today, yes, we do have interoperability solutions, but they are quite permission. Certainly if you want general message passing, you're looking at completely permission system.
00:12:29.226 - 00:13:19.146, Speaker A: And why that is, I think there is a good reason for it. And this diagram is kind of meant to illustrate I'm not the best artist, so have to excuse me, but I think it stems from the fact that in their effort to create the product that will be the connectivity between chains, the messaging interface, they have lumped it in and tightly coupled it with the security model to secure the message being passed. I think, again, good reason for this in crypto, it's the most adversarial environment we've ever created. Right. A lot of people spend the last 1015 years working at big tech companies where a motto like move fast and break things kind of rules the day. But certainly that doesn't really work in crypto. Crypto can't really think like traditional tech.
00:13:19.146 - 00:13:53.430, Speaker A: It needs to think more like aerospace, because if you move that fast and break things, like, you make one small mistake, now you're out nine figures. So it's kind of like you make one small mistake and that plane is fucking crashing from the sky. That's not good for anybody. So because of that, people view security as a product within itself, and I don't think they're wrong in doing that. But that has led to them tightly coupling these two things. But it doesn't have to be this way. You can offer things that are at the same product, same product quality on the security side, but now the two become separate.
00:13:53.430 - 00:14:48.418, Speaker A: And so we talked about this modular security. What does it really mean? It means we are no longer tightly coupling the message interface, one product with the security product or product features. And that means is that instead of thinking like, okay, so when I use this system, this is its security model, and I know that this is all I get from it. This is what I need to do to get from it. There's actually like a number of options, and there's a way for me to operate some parts of it myself. There's a way for others to operate it for me to kind of leverage their service. But in the hyperlink case, it starts off with kind of like a base configuration where different modules will look like, say, they can be as simple as maybe wrapping an existing security provision like IPC.
00:14:48.418 - 00:15:55.120, Speaker A: They may be slightly, actually probably the same level of simplicity. And just, hey, there's a multi sig, and that multisig says that this is fine, so I'm good with it to a bit more complex. Like, oh, I want to have a group of validators that are attesting to the state of what they are putting money on the line in the form of their stake. And that is what's making me feel comfortable with the attestation of this nature to even slightly more nuanced, like an optimistic system where now we don't just take what was given immediately, we put in some time delay, the similar in concept to the optimistic roll ups that we're all familiar with, but not exactly the same, where you have some challenge period. During that challenge period, people can observe it. Does this look like a valid transaction? Okay, if it does, let's let it manifest. If it doesn't, let's shoot it down.
00:15:55.120 - 00:16:59.550, Speaker A: And so that's the concept of modular security. And how does it lead you to permissionless interoperability? Well, in this world, in the world of things being tightly coupled and intertwined, you're always going to need the permission of the security model operator to basically add your chain into it. It has to be a conscious decision from them, or it has to be something that you can, through some more distributed process, can become a part of. And so that was a lot. Maybe I'll stop there for just a second, but hopefully that gave people a moment to kind of like digest things. Nick stopped me if I feel like I'm getting too into the weeds. But I think one thing that will be really useful to kind of make sense of this notion of different security modules is to understand what different flavors do you get in the realm of interoperability.
00:16:59.550 - 00:17:07.426, Speaker A: Like high level, what do things look like? How does that sound? Let's do it.
00:17:07.448 - 00:17:11.878, Speaker B: Yeah, let's go in. I already have a bunch of questions, but I'll save them till the end.
00:17:12.044 - 00:17:45.146, Speaker A: Excellent. And obviously, feel free to interject. As I mentioned before, I come from, I'm israeli, so I'm from a place where conversation is a very dynamic thing. So in interoperability, you get native verification and external verification as kind of like the two main forms. So native just really means like you're leveraging the consensus mechanism between the two or more things you're connecting. That's kind of really nice. Wherever you can use native verification, it by most people is considered the ideal.
00:17:45.146 - 00:18:15.846, Speaker A: And I think it's a very reasonable stance. Like, if you can replicate that consensus in such a way where you don't need to trust anything else, that's really great. It's closer to trustlessness now. It still means that you are trusting a and b, right? It's not magic. There's no magic. But presumably if you want to connect a and B, you're kind of good with both a and b, or else you probably would not be doing that to begin with. So what's the catch? The catch is that it's the most costly method.
00:18:15.846 - 00:18:54.130, Speaker A: Right? Like replicating consensus is really expensive. Now, you can design a system with certain set of constraints where under which those constraints, you reduce the cost of this replication. And a great example of that is IBC. So IBC works with chains that look very similar. Mostly they don't have to technically be tender main chains, but they have that same appearance, right? They have fast finality, they have lifeline verification. And in those cases where the chains are, for all intents and purposes, near carbon copies of each other, replicating consensus is not prohibitively costly. It becomes totally acceptable.
00:18:54.130 - 00:19:22.954, Speaker A: But if it wasn't costly, we would use this everywhere. Everyone would. There's no reason to not leverage this wherever you can. Good news, there are some advancements that are going to make this more possible, but to date, we are kind of stuck with this. We're mostly like defined systems that I like to call defined rule sets. Those are really the only place where you can easily leverage native verification. So if we have native, the other is external.
00:19:22.954 - 00:19:59.370, Speaker A: And the big difference here, you introduce something in the middle, a third party. Between these two consensus mechanisms you're verifying. So you're still trusting the a and the b, but now you get a little thing in the middle, and that little thing can take many forms, as I stated before. Right. It could look like crazy to think about, but very early on there were single key systems where like one single key was signing off on things. People were kind of okay with that, and it ended terribly, as we all remember. Now, this is probably more likely would be a multi sig.
00:19:59.370 - 00:20:44.810, Speaker A: This could take the form of some proof of stake system where you have validators and they are putting money on the line, as I said earlier. Now, there you would have two major classifications. In one case, you concentrate all the stake on one chain. There's a lot of good reason to do that, and there's some really serious edge case risks that we can get into if you want, later, but in the interest of time, I'll spare that. And the other system is one where it's per chain. So the drawback there is you don't get to have the stake, have economies of scale because it has to be divided per chain, but you don't have those drawbacks that we can talk about. Namely, like in this configuration, you don't need any assumptions about an honest majority.
00:20:44.810 - 00:21:36.460, Speaker A: This system can also take the form of something optimistic, like we talked about before, or it could even be some type of magic that we're just, we haven't devised it yet. Like think of some cool new multiparty computation systems or anything, and in there it might look like a trustless setup, but ultimately you are still trusting the implementation to have been done correctly. Because I think this is one area where I diverge from some of the more research oriented people, where I consider you're still trusting the quality of the implementation. We can't forget that. That is a very important thing. Like a lot of implementation bugs have lost a lot of money. So all of this leads me to one of the first things we said at the beginning is just.
00:21:36.460 - 00:22:35.626, Speaker A: We think that modular blockchains really represent kind of the future of solving a future solution to a lot of the issues that our industry faces. And what is that going to look like? I think it's going to look like we're going to have a lot of hubs. A lot, a lot of hubs. And what do I mean by a hub? A hub is somewhere where settlement activity concentrates, but even less so than settlement activity concentrates. Like does this hub contribute to the eruption or spreading of other smaller chains? So if the monolithic system is like, let's just build one magic, huge supercomputer in the modular world, as everyone listening knows, we're just aiming for more smaller computers. And a hub is, in my view, anywhere where an increasing number of small computers is connecting to. And so we're going to have a lot of these hubs.
00:22:35.626 - 00:23:18.646, Speaker A: But what should it mean for you? What does it mean for you? I think it means that we're going to need permissionless interoperability, because there's going to be an increasing number of chains and increasing number of hubs. And excuse my language, I will be using the term chain to refer to whether it's another layer one, whether it is a roll up, a generalized roll up, an app specific roll up, an app chain. I'm going to use it as a casual term because I think we're moving towards a world where more and more apps are going to command their own chain. You're already seeing this trend. Beginning the ascent of cosmos has been just enemy. Cosmos as an ecosystem is the best evidence of that. I don't think this trend is stopping.
00:23:18.646 - 00:24:19.166, Speaker A: I'm of course super biased and embedding the farm on this trend. But I think we'll find a receptive audience for this trend. So why do you need permissionless interoperability in this world? Because you're just going to keep getting more and more chains. And think of the work that your team is doing by making data availability much more plentiful. Right? Like making it much easier to submit fraud proof almost everywhere you need by even work that is kind of like extracurricular. By creating roll kit, one of, if not the best, roll up frameworks out there, you are effectively making it easier and easier and easier to spin up a new chain. In the meanwhile, we're also seeing businesses come up to cater, right? Whether it's folks like Caldera and Eclipse and Altlayer and conduit and layer n.
00:24:19.166 - 00:25:41.910, Speaker A: And the number keeps increasing because this category seems to have so much potential people are making it easier and easier and easier for you to spin up a no chain. Okay, so we're going to end up with a ton of these, right? Like initially dozens and then hundreds and then thousands, and then maybe even millions. Well, like I said earlier in the bit about this being the last piece of the stack, what is it all worth if they're all like disconnected islands and there's no easy way for them to communicate? And so with hyperlink, our goal is to create something that if it's this easy to launch a chain, it should be this easy to get going with interoperability. So if roll kit becomes like three commands and I got my roll up running, can hyperlane be the fourth and fifth command such that now you got connectivity and you're good to go? And that's what we try to create with the system. And so after all that, it's probably time to spend just a couple of minutes on how it works. This is a kind of architectural diagram that will show the lifecycle of a hyperlane message. And luckily, it also shows all three parts of the system in hyperlane.
00:25:41.910 - 00:26:01.418, Speaker A: There's really three levels to it working. There's the mailbox. This is a contract that does exactly what it sounds like. It sends and receives information between chains. There's the modular security stack expressed here through an interchange security module. So in our lingo, ism for short. And there's the relayer.
00:26:01.418 - 00:26:42.374, Speaker A: The relayer is a permissionless agent, a bot between chains that processes the messages. If you're familiar with IBC relayers, this relayer looks and feels very much the same. So we'll go through a quick lifecycle of a message. Got the mailbox. You're a user, either like an app or an eoa. You're sending something to the mailbox. The mailbox has this interface, a dispatch function that takes in the destination, like, which chain are you going to, which address on that chain? And it also has, we said it sends and receives.
00:26:42.374 - 00:27:23.094, Speaker A: It also has the logic for receiving. So in this case, we call it handle. And as you get into that logic, now you're starting to get to that modular security stack that we touched on before. This is where things like validators or like an optimistic watchtower can come in. And the cool thing about hyperlane is that when you define how you receive the information, that's when you're selecting and you're really defining which security modules do I want to use and how do I want to use them. Now, that's the second level, is the security model. This is if the mailbox, all on chain.
00:27:23.094 - 00:28:01.414, Speaker A: The security modules are mostly on chain insofar as like the logic, but they can also have an off chain component like this watchtower, like some additional software to validate the state of a chain. And again, the third, the relayer. So once a message has been sent to the mailbox, relayers look at the mailbox, they see, oh, Nick is sending something from Celestia to avalanche. For whatever reason, Nick wants to see what's going on on avalanche. He's a big Avax guy. And the relayer sees that. He's like, oh, Nick left a nice tip here for me.
00:28:01.414 - 00:28:28.142, Speaker A: I'm going to take that, thank you. Please. And with that, the relayer goes to the mailbox on avalanche, pays the gas fees such that you, Nick, never had to have Avax. You paid for it in the native gas token on your origin chain. So in this case, you paid for it with the Celestia gas token. And you don't have to worry about Avax. The relayer took care of it for you.
00:28:28.142 - 00:29:09.500, Speaker A: And now that transaction has included, it goes through the security model. So being included doesn't mean that it'll get processed, because maybe the security model's logic says, wait a minute, something here doesn't look right. If everything looks good and the security model checks pass, now it gets to its destination and all is well. And so that is kind of like a high level of hydeworks. And I think maybe now is a good time to hit some questions, can talk a little bit more about the different ways that modular security can work, like the different ways that people can leverage hyperlane, anything that comes to mind. Really?
00:29:10.690 - 00:29:55.146, Speaker B: Perfect. Yeah, I'm eager to ask some questions that came up to mind. The first thing that I want to touch on, because we've had conversations one on one about this, and I thought this was really interesting. The way that you framed it is how this security model gives you a menu of different ways of verifying the message that you receive. And I remember you also saying that it can be conditional. So depending on the type of message or the amount of money in the message, it goes through a different sort of security module. I found that really interesting.
00:29:55.146 - 00:30:01.280, Speaker B: And you also kind of made an analogy to how the real world works. So maybe touch on that for a bit.
00:30:01.810 - 00:30:26.470, Speaker A: Perfect. And maybe actually, like, I'll go back to this slide for 1 second here because it's relevant. So think about it like this. Actually, I just had this happen. As mentioned, we're moving. I had to take care of some things in the bank. Normally when I go into the bank and I need to get like $100 out, I put in the pin and no questions asked, and I can leave there in 2 seconds.
00:30:26.470 - 00:31:01.610, Speaker A: This time around, I needed to wire a slightly larger sum, over $10,000. And I got a good line of questioning. Remember the last five transactions that your account did? Who's the direct deposit on your account? Do you remember the other name on this account? Like, what's the address? Do you remember the address you changed from recently? Different security protocol. I was doing something different. The bank wanted to do something, treated me differently, questioned me in a different way, a different security procedure. And the one time I tried to close my account, I'm still a Wells Fargo client. So I was unsuccessful.
00:31:01.610 - 00:32:14.470, Speaker A: They really ran me through a ringer of questions. It took a while to the point that I just gave up, never closed it, still have that same account. So the bank used different modes of security based on my action. And that, as a concept, is something I think a lot of people will find agreeable, and so wanted to bring that same idea to hyperlain. So, in this little diagram we got here, you can see, okay, so we're sending something from ethereum, goes to some contract, and then it hits the modular security stack, and it needs to go through some of these configurations. So with hyperlane, like I mentioned earlier, when you set it up, you're deciding, how do I want to receive this? And as you do that, you're defining like, I want to use this security module, I want to use this security module, and I want to use this security module. Well, guess what? That also means no one will know better how to kind of decode the contents of your messages than the implementer, right? Like you're the most familiar with them.
00:32:14.470 - 00:33:07.026, Speaker A: And so let's say you're like a lending app, or you're a margining app, and someone wants to deposit collateral on eth to borrow something, say, on osmosis. Well, as this app, you know what your message contents look like, you know what your function calls look like. And so as the message comes through, you can say, wait a second, what is this person doing? Is this person just taking out a small loan, less than like ten basis points of my lending pool? Well, that looks all right. How about we just go through economic security because there's enough stake in our pool to secure this, right? Like, there's more stake covering the amount at risk. So it doesn't make sense for these validators to do them. And this could be the fastest path let's go through that. Then another action.
00:33:07.026 - 00:33:19.482, Speaker A: Oh, wait a second. This person's trying to take to clear out the entire liquidity pool for this asset that don't look right. How often is that going to happen? And you know what?
00:33:19.536 - 00:33:22.266, Speaker B: If you really need that much, should that ever happen?
00:33:22.448 - 00:34:00.322, Speaker A: Should that ever happen, right? How often is that going to happen? How often does someone come into the vault and is like, guess what? We're doing a day. We're taking everything out? Probably not very often, right? Something is amiss. Even if it looks right, you might want to take a little while. And again, whenever major, major transactions have happened, right, they always raise eyebrows. You see people on Twitter up in arms when there's like a 300, 400 million dollar total action. And some type of DFI apps are like a series of defi apps. So clearly people are paying attention to these large moves.
00:34:00.322 - 00:35:05.230, Speaker A: So as the app itself, you can be aware of this and you can say something different is happening here, a different action from the one that came before it. And I want to treat it differently. I want to run it through a different security protocol. So maybe in this case, you say, I want to run it through the optimistic system, because this just feels fundamentally different. And you know what? Do you really need that 100 million right now? Could you wait 12 hours? Is that okay? And so that's this concept of not just, it's one thing to have the different modules and being able to, as an app, pick them, it's another thing to then pick through them dynamically based on what the users are doing. And I think this is where it pays to kind of be a simpleton like myself and kind of stepping into crypto and being like, okay, look, I get it. I know that if I could design something that is always the best, no matter what, of course I do it, but I don't think I can.
00:35:05.230 - 00:35:45.766, Speaker A: I don't think anybody can. And I think by year six of doing this, I've seen enough bodies on the road from trying to do this that don't want to. So let's have a menu of options, doesn't need to be too many, and let's let people kind of pick and operate the right ones. And one thing I should mention, hyperlink does offer the ability for people to write their own. But realistically, I don't think that's going to happen in the immediate term simply because it's still a new system. People still need to get comfortable with it. But certainly I could see a world four or five years from now where there's kind of like a robust market of security operations where you could even have competing.
00:35:45.766 - 00:36:08.020, Speaker A: Right. So there might be competing optimistic systems for the same set of chains. There might be competing economic security modules for the same set of chains, but don't think we're there yet. But it's nice to have the options, hopefully that covered. And certainly if it didn't. Happy to get deeper into anything I just said.
00:36:09.590 - 00:36:56.480, Speaker B: No, that was perfect. And to me, this is one of the biggest selling points of hyperlane is this dynamic nature to the bridging, because it just makes so much sense. I don't know why someone hadn't thought of that before. I know in cosmos they are adding things like rate limiting to the bridge, but that's not quite the same as, not quite as deep as this sort of modular, dynamic verification logic for the bridge. I could see so many benefits also for user experience because let's say I'm just bridging $10 or $100. It's like, do I have to wait the seven days or whatever for an optimistic bridge? That makes no sense. And that's such a pain.
00:36:56.480 - 00:37:49.780, Speaker B: Maybe a multi sig is actually fine because you trust that multi sig enough for that amount of value, and then all of a sudden it can be basically instant. And so it just makes a lot of sense. And so I'm very excited for this. I have another question that's kind of built on that, which is in the modular stack. We do want to eventually build towards these trust minimized bridges right where the bridge actually fully verifies the execution of the other chain. And so you're trying to minimize the amount of assumptions you make so that you can't be exploited. Of course, my question is, and those things are not ready yet, there are some implementations of them, but I think it's still a ways away before those are practical and deployed as a standard.
00:37:49.780 - 00:38:17.020, Speaker B: My question is, does Hyperlane's model make it easier for us to sort of gradually upgrade, keep the same bridge basically between these two chains or roll ups, and then add new security features as they become practical and usable? So it's not like, oh, we have to implement a whole new bridge or start over from scratch, but we're just going to add a new pathway or something. I don't know.
00:38:18.590 - 00:38:46.358, Speaker A: I love that you asked that question. I love that you asked that question. Again, this is where big benefit to if you're going to start a company, I recommend being a little bit of a simpleton and finding really smart people and surrounding yourself with them. And I am so lucky that I am, said Simpleton. And I found an incredible, brilliant group of people that joined me along with this ride. And you want to do exactly what describe. It's like, wait a.
00:38:46.358 - 00:39:26.450, Speaker A: I have tremendous faith in our industry and the people working on all parts of it that, yes, certain things aren't ready yet. But I talked earlier about native verification, and wherever it is available, it is the ideal. I do want to use it. So how can I use it? So if we really kind of, like, decompose what an ism is an interchange security module. It's a really simple thing. It's just a wrapper on some bit of logic that makes you feel comfortable about what's coming in. So you give it some type of thing that would make you feel comfortable.
00:39:26.450 - 00:40:05.210, Speaker A: Maybe in some cases it's a multi sig. In some cases, it's an optimistic system. In some cases, it'll be native verification wherever you can get it. Probably native verification makes you feel quite well. And you wrap that and you kind of make that a logic gate for, hey, did that condition happen? Is this thing that's supposed to make me comfortable saying I should be comfortable? Oh, it does? Okay, cool. Go through the gate. Oh, it doesn't hold up like, what's going on? And so what does that mean? It means that, again, we can kind of wrap anything that would make us feel comfortable.
00:40:05.210 - 00:41:10.206, Speaker A: Now, conceptually, there is no barrier to any form of investment being wrapped up as an ism. And really, this is, why did I make the simpleton comment earlier? Is because that was kind of like a requirement we laid out because it seemed like, wait a second, at some point, someone's going to figure out better things in this. And we are asking people to use this thing that we've built to put their hard work, their life's work, in some cases, on it. Right? Like, what does it mean to integrate into something like hyperlink? It means that you're kind of using this bit of infrastructure, and you hope that it treats you well and you hope that it grows with you. And so this ability to absorb new models and new advancements as they come up was imperative. And so it really should be as simple for the user because as kind of, like, changing. I grew up playing a lot of, like, Nintendo games, love the n 64, so kind of like taking the cartridge out and putting a new one in or just like, adding it.
00:41:10.206 - 00:42:10.440, Speaker A: Imagine if you've got an infinite amount of cartridge slots, because sometimes you want to use multiple ones based on the situation. So, as I said before, when you do the second side of the integration, like when you define the receiving logic, you say, hey, look at security modules a, B, and c. Well, now, if there's a d that you like better, how do you do it? You go back to your handle function, and you say, hey, now let's look at d as well. So the moment that these new advancements happen, we wrap them in an ism. Someone wraps them. This is actually where this notion of anyone being able to write a new ism can come in quite handy, and that can kind of be forwarded to the network for other people to use that and what does actually result in. If you're already running hyperlink, you just point to a different thing, but the assets that you're moving over, all the other integrations you have, everything else just keeps on working.
00:42:10.440 - 00:42:21.900, Speaker A: So being able to do that was really important. So sorry for the long winded answer, but I'm so happy you asked that. It really hits on a lot of things we've been thinking about for the last couple of years.
00:42:23.950 - 00:43:16.586, Speaker B: I couldn't agree more. I think the bridge technology will always be growing. I hope it's always changing and being upgraded and approved upon. And so if that's the case, we need to build infrastructure that can accommodate that. And so it just, again, makes so much sense to me. I have a question that we've talked about a little bit one on one, but I think the audience will also be interested in, which is, I want to put hyperlane in the context of the broader bridging category, because, you know, there's so many bridges out there. Well, I also think the term bridge is just very overloaded, because it's not like everything that people call a bridge is really the same thing.
00:43:16.586 - 00:44:03.660, Speaker B: You have things like a multi sig bridge that someone operates, or it could be its own sort of protocol, like Axelar, that acts as this committee that attests to the validity of different chains. But you also have things like IBC, which is not like, it's not something that someone operates. It's more of, know, a set of functions and standards that different chains can opt into and know if they follow that, then they can talk to each. And to me, I guess hyperlane seems more like IBC type of bridge. And maybe so maybe you could just sort of high level see how you see the bridging landscape, and then where does hyperlane slot into that?
00:44:05.150 - 00:44:53.258, Speaker A: Yeah, that is a very good way and very articulate way to frame it. I'll start by saying, and maybe this is dumb, but I used to kind of be like, it's not a bridge, don't call it a bridge. And my team would very usually get upset with me for that. But I'll go into why I still think that is the case, although I'm less militant about it. I would say your diagnosis was very, very accurate in the sense that we view hyperlane as, or I should say we view IBC as our spiritual predecessor. In fact, like Hyperlane came out of an effort of treating IBC as. This is, to date, the best way that we figured out how to do this thing that we want to do.
00:44:53.258 - 00:45:40.390, Speaker A: What was it the thing that we wanted to do? We wanted to let anyone connect any chain. And again, by that point in time, IBC seemed clear cut. The best way to do it, but where it felt a little bit short was on the any chain part, because as I mentioned before, it's quite rigid in it. Right. The things that it will work with and kind of give you the guarantees that you expect from it are a limited set of chains. And unfortunately, while cosmos is certainly growing, it is not the largest ecosystem just yet. And so we wanted to take IBC, use it as the starting point.
00:45:40.390 - 00:47:13.350, Speaker A: How do we make this much more extensible so we can enter different environments, different ecosystems. And so what I would say is you have things that are just, actually just bridges. They are just, like, focusing on asset transfer, and they have different forms. And so I would put the systems like, or describe them by an axes of how permissioned they are. And this generally lends itself to what I spoke about earlier, this tightly coupling of product messaging interface and product of security, and another axes of what are the security guarantees that I can get from this thing? And so on one far corner, you have something like IBC because it is very permissionless, and at the same time, it can offer very strong security guarantees that don't really require a lot of trust. You would have something like a more committee based bridge, like a specific and locked in set of validators, as being kind of much further out on the permissioned set. But as long as those validators are good, you might get still really good security guarantees.
00:47:13.350 - 00:48:38.242, Speaker A: Hyperlane is on that permissionless access, I'd say around that same place of IBC, but you want to evaluate each different module setting as landing on a different place on the other axis of how secure is this really like, what am I trusting in the system, right? Because in some cases, modules will just be wrapping native verification systems, which that's amazing where they exist. And in some, the modules are going to be as simple as like a multi sig, and at other times the modules are going to be more optimistic. So you'll kind of land in different parts of these axes. And maybe in that respect, that makes this two axe system not a useful way to dissect. Where does something like hyperlink lay on the landscape? But I'd say if we're maximalists of anything, it's the notion of, like, anyone should be able to just do this, and we don't want to be able to stop anyone. And so permissionlessness is the thing we care about the most, and probably a bit more permissive, pun somewhat intended, with different security modules laying in different parts of the spectrum. I think just offering the choice is how we kind of reconcile that.
00:48:38.242 - 00:49:10.720, Speaker A: In some cases, you're going to end up with something that can be highly trusted, where you might end up on a roll up, where the thing that's securing the outbound communication from it through hyperlane is genuinely just like a multi sig controlled by the people who created that roll up. And we think pragmatically that'll be fine for a lot of users for quite some time. And then in other cases, an ism is going to just be like wrapping something like an IBC outbound channel. So that's kind of how I see that.
00:49:13.090 - 00:50:03.100, Speaker B: Yeah. I think that the permissionless part of this is what's so important, because, as you said in your presentation, and we say this all the time on this podcast, the modular future is one where there's going to be a proliferation of different blockchains, and it's just not going to be possible or desirable for every time someone launches a new roll up, they have to actually go and do business development to get supported so they can actually bridge assets. It needs to work out of the box without them having to call someone up. And that's really, I think, also just a core value of the blockchain ecosystem is like permissionless innovation. And so I'm really glad and aligned that hyperlane believes in that kind of.
00:50:04.430 - 00:50:38.182, Speaker A: Well, I'm so happy to use that term, permissionless. Know, there's actually a whole book, I forget the name of the offer, but this is something that was ingrained in me. I'd say more than like, I don't know, twelve something years ago, whenever I started maturing as a person in the world. I'm turning 33 soon, so that stings a little. But this concept of permissionless innovation, since ever understanding it and hearing about it, just became obsessed with it. And I think that is really what drew me into crypto in the first place. The fact that I just don't have to ask.
00:50:38.182 - 00:51:47.600, Speaker A: And I guess personally I find that appealing because I never liked asking. I was in the IDF for a little bit and I may or may not have spent some time in army jail because I don't like asking. And I'm not a big rule follower as a person. And this way of like, I can just do stuff in crypto and I can just use it and I don't have to ask anybody. This is the reason why I think software as a category has just kind of exploded over the last three decades. And I think it what makes crypto so appealing? And so the idea that we're going to make it so easy for you to just spin up a chain, but then you're going to do that, and now you have to find some large interoperability provider and you're going to have to basically ask them to come and help you. And what are you doing if they say no? And actually worse than them saying no, what do you do if they say fucking say nothing? If they just ignore because you're too small? Because the crypto equivalent of two guys in a garage, which I guess maybe is like two anime PFPs hanging out in a gather town, what do you do?
00:51:51.650 - 00:52:17.786, Speaker B: Yeah, well, yeah, I completely agree. So to shift gears a little bit and start to wrap up, I'm curious, just selfishly how you first heard about modular blockchains and how you kind of, I don't know, got into that frame of mind and how maybe that also informed some of the design of hyperlane, as you said, that you take this.
00:52:17.808 - 00:53:20.566, Speaker A: Sort of modular decoupling know, sheer luck, sheer serendipity. So I happened to go to the school at UC Berkeley, and some of the first people I met who were into crypto were all know, some would call them cosmonauts. Zucky once made an analogy when talking with me about how they were all like monks in a monastery. And it feels like he didn't say this, but to me it feels like that monastery was dead set in Berkeley, California. And so I got to run into this idea, and they didn't use the same language that I think Celestia codified, really. But the concept they were heralding is like one of app chains. And certainly the construction wasn't as clear, the messaging wasn't as clear as it is today, but so that kind of planted the seed and this notion that, yeah, this new version of the Internet is going to be first a little bit more asynchronous than we think because all the Internet works in an asynchronous fashion, so that seems not surprising.
00:53:20.566 - 00:54:20.442, Speaker A: And then that you're going to have dedicated environments for dedicated applications that also doesn't seem like that. Crazy, right? Like, most companies have their own little racks, and so that's where I first exposed to it and then it just continues. A lot of just luck, right? Like, at a certain point, I become friends with another good cosmonaut, and later on we end up working together at galaxy and they become obsessed with this paper about this thing called lazy ledger. And so that exposed me to what later became celestia. And just being in that orbit and just working with all these, I guess one thing I suffer from is sometimes having delusional faith in certain ideas and sometimes it's really worked out. Right? Like, having that in crypto six, seven years ago was a great outcome for me and in this case as well. Right? Like, just thinking, like, wait a second, these people are like, they're in crypto for the right reasons.
00:54:20.442 - 00:54:45.206, Speaker A: They are not going to stop no matter what. They are not flinching, not for a second. So I'm positive that not only does this make sense to me, based on everything I said before, there just feels like this is going to sound like. But the vibes were good. These are people who are not going to go anywhere. We didn't go anywhere when crypto sucked a few years ago. It sucks again now a little bit.
00:54:45.206 - 00:54:56.380, Speaker A: Who cares? You're going to have to drag me out of this industry. And it seemed like the people working on this problem were exactly of that same mindset. So it's like, this feels good that we want to be here.
00:54:59.230 - 00:55:39.578, Speaker B: Yeah. I was just smiling and nodding that whole time because I could not agree more. I think it's really important in crypto to, I don't know, align yourself with the people who are in it for the right reasons and who want to use crypto to affect civilization level change. And when that's your motivation, it doesn't matter whether it's a bull or bear market. It's like we're going to build this because we believe that this is what the world needs. And there's just something about that that is so inspiring. And when you surround yourself with those kind of people, it feeds on itself.
00:55:39.578 - 00:55:51.420, Speaker B: And I definitely think cosmos community has that. I think ethereum community has that. I also think that the modular community very much has that. And, yeah, I could not agree.
00:55:52.770 - 00:55:53.134, Speaker A: Yeah.
00:55:53.172 - 00:56:07.906, Speaker B: To close things down. What's the long term vision for hyperlane and also what is the near term roadmap? And what can people expect from the hyperlane team in the next six months or a year?
00:56:08.008 - 00:57:08.040, Speaker A: Of course, that's a lot of fun. Love to answer that. So the long term kind of like vision is, you talked about just civilization level change. So to affect that, I think it's imperative that when you're building something, you're not just building something that first foremost has to be able to grow the pie of the crypto economy. But second, can it help accelerate its rate of growth? So can we do that for the modular world? So a successful accomplishment of our long term vision or a north Star is really to grow this modular future of blockchains, accelerate it, help bring it about. And what a result of that will look like is we now have achieved, say, a four to five digit number of functioning roll ups. There are annually hundreds of billions of transactions flowing between them.
00:57:08.040 - 00:57:38.190, Speaker A: And I would say more than half of them are being secured through some type of hyperlane interchange security module. That would be like the long term vision that we want to realize. And the only way that we achieve that is if we fulfill the goal of letting anyone connect any chain. That's going to take a few years. That has a lot of other dependencies. But like you said, we're kind of here and we're going to do this thing. We're going to basically die trying.
00:57:38.190 - 00:57:58.094, Speaker A: And I'm okay with that. And I think this ecosystem kind of self selects for people who are like that because all the other people are just like, you guys are crazy. I don't want to be around you. That's cool. That's fine. More short term, you can anticipate a number of things. So first, I'd say just keep tabs of what we're doing through either the Twitter account or the discord.
00:57:58.094 - 00:58:51.394, Speaker A: We have a really fun discord. It's still kind of like a small place, and so you can have a lot of fun conversations there with other people building on Hyperlane. And that's the best way to stay updated. But in the imminent future, watch for Hyperlane's expansion into new environments. I would say sometime over the next six months, you'll see Hyperlane appearing as supportable for sea level, the Solana VM, supportable for fuel VM, and perhaps most importantly, its appearance as both a Cosmos SDK module and a cosmosm set of instructions. And so all of that gets us closer to being able to allow anyone to connect any chain, because, again, hey, if I can do it in theory, but then I actually need to write the entire interpretation for a different environment. That's kind of tough.
00:58:51.394 - 00:58:58.490, Speaker A: So we definitely want to deliver on that. And those are the biggest things that you'll see from us in the near term.
00:59:01.150 - 00:59:21.390, Speaker B: Wow, that's a lot of expansion. I mean, the list that you had there is pretty know, I would say, the majority of every chain out. So that's. That's really. Yeah, I mean, people should definitely keep tabs on what you guys are doing. Follow you guys on Twitter. Hop in on the discord.
00:59:21.390 - 00:59:52.440, Speaker B: John, thanks for sharing all your knowledge and insight on the bridging problem and also explaining to us more about what Hyperlane does and your vision for permissionless interoperability and modular security. I think we started out the episode with that as a phrase, and I really think we were able to unpack that and really explain what that means and why it's so important. So thank you so much for coming on, and hopefully people learned a lot.
00:59:53.290 - 00:59:55.170, Speaker A: Thank you. It was a pleasure. Bye.
