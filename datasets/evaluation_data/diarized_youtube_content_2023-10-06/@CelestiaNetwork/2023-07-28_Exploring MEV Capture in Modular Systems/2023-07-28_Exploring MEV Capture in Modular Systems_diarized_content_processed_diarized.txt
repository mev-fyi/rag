00:00:04.010 - 00:00:40.060, Speaker A: Okay, so I work at Celestia, I'm a core dev. My name's Evan and I'm here to talk about exploring mev capture in modular systems and really start a discussion about a few ideas that they already exist. If we combine them, we can create a very powerful tool. And to be honest, I just don't enough people are talking about it. And now before I get any further this has trade offs. Everything has trade offs only siths deal in absolutes. So just getting that out of the way.
00:00:40.060 - 00:01:13.102, Speaker A: The alternative title to this talk was how to make validators cucks and on one sense I'm just being playful but on another sense I'm being very real. Weirdly real. So like the status quo of validators is capturing large amounts of value, right? This is how it works today. And this stems from the fact that they have a monopoly over that given block. Now, it is a small monopoly, it is only for one block. But sometimes, like in the context of a builder it's very important. We can have a builder build a block.
00:01:13.102 - 00:01:29.850, Speaker A: It has three heart emojis. That's a lot. Everyone loves that block. But that's not the block that gets committed. That's not the canonical block. That's because a different builder found a way to exploit more mev or do something else and ended up bribing the proposer more. So now we pick that block.
00:01:29.850 - 00:01:52.366, Speaker A: So the proposer is getting most of the money. Now, that's not the end of the world. It's not even the worst thing. Ideally the proposer can up the security budget. It's not even sure that this is not ideal. Like all mev has to get captured somewhere. Going to the proposer is not the worst place.
00:01:52.366 - 00:02:40.142, Speaker A: However, it would be really nice if it was more programmable if we had a way for L ones and L two S or roll ups to be more programmable. So we also have to consider that with roll ups this has to be scalable. Not just in the sense that there's like 1000 different instances of this setup but also in the sense that roll up devs only have so much brain capacity. They can't be playing like these five D chess when they're thinking about these things. So shout out to Skip if anyone from the Skip team is here for pushing the narrative of sovereign mev. Now, all I'm trying to say here with sovereign mev over solving mev is that there's many different solutions to capturing mev. There's not just one, there's many.
00:02:40.142 - 00:03:15.338, Speaker A: We're picking winners and losers here, all right? So that decision is between like a community and their god. That is not like a decision that you can make for everyone all at once. That's at least what I believe. So in order to solve this, to make sovereign mev you have to move it on chain. Because when something's on chain, it's programmatic and when something's programmatic, it inherently in the context of a blockchain is verifiable. So if we want it to be sovereign, all we have to do is choose to change our binaries. By simply switching our binaries, right.
00:03:15.338 - 00:03:52.038, Speaker A: We now have changed how mev gets captured, assuming that we can get it in protocol. So in order to do this, you have to break the proposer monopoly. This must happen. So this is a meme that I stole from Elijah. Elijah works at Duality. He's done some amazing work in this area of ending the proposer monopoly. And if you recall the first slide, right, if we don't end the proposer monopoly, then there's always going to be some sort of censorship that they can do in the context of mev to game the system.
00:03:52.038 - 00:04:24.074, Speaker A: So we can write whatever clever rules we want on chain. But it doesn't really matter because the validator can always or the proposer can always accept a block that gets built to game the system. So also shout out to special mechanisms groups. A lot of this work is just like repurposing their work. Highly recommend. So we kind of have to think about different things differently. Instead of building a block and then coming to consensus over it, we have to come to consensus over an unbuilt block.
00:04:24.074 - 00:04:55.206, Speaker A: And then we build it, right? We build it using a deterministic function. So there's two things necessary here. We need to have a way to have for proposers multiple proposers include their input for what they want to be in the next block. In the next block. Elijah refers to this as multiplicity. So there's many different ways to do this. One of the simplest ways or one of the ways that I keep coming to is just some different flavor of narwhal and or tusk.
00:04:55.206 - 00:05:17.010, Speaker A: And that is great because it makes the entire block censorship resistant. There's other ways to do this. So Skip does top of block options. They already have this implemented. If you want to go try some of these ideas out, you can literally go do this by building a Cosmos chain right now, thanks to Skip. And you have self assembling blocks. So this is the second part.
00:05:17.010 - 00:05:54.254, Speaker A: The second part is that you need a deterministic function to build a block. And it's very important that the order of the inputs doesn't matter. Right? It's addition. You can add two numbers in any order and you'll get the same result. That's the important part here. Once we have these things, we are now free to define mev capture. So this is again in the context of L ones at the moment, where for the simplest case, all we need to find, all we need to define is a less than or equal function of what a bundle is.
00:05:54.254 - 00:06:19.538, Speaker A: Now, what's the only thing better than one fire emoji. Three fire emojis. Correct. So if we have this, we can do something that's similar to a fork choice rule, but now we have a bundle fork choice rule. So you imagine we have a less than function. That's all you need for it to sort. Now we can sort these transactions or these bundles, and if there are any conflicts, then we go back to that rule.
00:06:19.538 - 00:06:39.914, Speaker A: Well, which one has more fire emojis? Okay, well, we're going to pick that one. And you can replace fire emojis really with anything. But this has a cost. This has trade offs. This is not for every state machine. This is not for every blockchain. In the context of Celestia, there's one thing you can do.
00:06:39.914 - 00:07:08.218, Speaker A: You can pay for data to be included in the block. That's it. It's payments. This means that there's basically no conflicts. Conflicts are incredibly rare. So that dramatically that makes it so it's like a very viable thing to do in Celestia. Now, if you consider other chains, like most chains today are like these permissionless Turing complete smart contract platforms that whenever you see a transaction, you can't even know what state is accessed until you execute the transaction.
00:07:08.218 - 00:07:38.160, Speaker A: That's not really like a viable thing. You can't just have a deterministic function. Not only that is that if you have a lot of mev to be exploited, then it turns out that you have something that I'm referring to as death by gas auction. You just get completely overwhelmed unless you have some sort of private memple. That's not like a hypothetical. That's like a well tested thing that happens all the is like it's very dependent on the chain. Fortunately for Celestia, you can do this.
00:07:38.160 - 00:08:15.798, Speaker A: So now the proposal monopoly has been broken. We can define how we want mev to be captured on the L one roll up should also be able to easily define how they capture mev. And they can do this too, right? The proposal monopoly is broken. We can submit multiple different roll up blocks as if they were a builder, like in PBS to the same Celestia block. And now it gets included. Right? And now we can define similar how we defined a bundle fork choice rule. Now we can define a just fork choice rule, a normal fork choice rule, except for it's completely arbitrary.
00:08:15.798 - 00:08:39.630, Speaker A: We're used to fork choice rules with like hash power and stuff. Right? This is just completely arbitrary. What does heart mean? It could mean, judging by Twitter sentiment, people love to burn tokens. I hope we get more creative than that. But that is like a perfectly functional thing. Whoever burns the most roll up token, not the L one token, the roll up token. Whoever burns that, that's the canonical block.
00:08:39.630 - 00:09:06.566, Speaker A: Right? Fork choice rules rule because you can just have anyone build you can make it so that I can have like literally anyone can submit a block. Roll ups do not have the same issues that L ones have. Where you have a limited set of block producers. Roll ups can have however many they want. It just has to be defined in your fourth choice rule. So again, this can be very arbitrary. Rock beats scissors.
00:09:06.566 - 00:09:54.860, Speaker A: But the coolest thing about this is that if we ever decide that we want scissors to beat rock, all we have to do is change our binaries, right? We can just do that. And in the context of modular blockchains, in the context of these, we have these trust minimized Light clients, right? These Light clients are the ones that are verifying the chain, the node operators, right? So they decide light clients decide how this actually operates, how mev gets captured. Oh, and as a side note, you know, you can decentralize how your rollup gets sequenced just by simply having a fork choice rule and relying entirely on the consensus of the base layer. No big deal. Shout out to rollkit. They're working on this. If you really want to get your minds blown, talk to a roll kit dev.
00:09:54.860 - 00:10:17.058, Speaker A: Lastly, again, not everyone can do this. This is extremely limited. It almost requires privacy tech. You can ditch sequencers entirely. You can just have a bundle for choice rule, and the blocks just build themselves. So there are trade offs. This will not work for everything.
00:10:17.058 - 00:10:50.566, Speaker A: Okay, so it has increased demand for blockspace. Currently, that's DOA it won't work. But can we imagine a world where blockspace is abundant? Thank you, Nick. So now if blockspace is abundant, this is actually more feasible than we think and increased full node requirements. There's no way of getting around that this has increased full node requirements. However, it's very application specific. It's very dependent upon your fork choice rule.
00:10:50.566 - 00:11:45.194, Speaker A: It's very dependent on so many different things. So we can build around this if this is a property that we want really bad, and I mean, this isn't really saying anything new, but in order to have good mev, we need more privacy tools. And same thing goes for here. So when mev is defined in protocol and when Light clients can verify the protocol, right, that means that Light clients can determine how profits are captured in a system. That's pretty crazy, right? That's pretty damn crazy, right? Power changes hands. It is no longer just the validators, the politicians, the technocrats, and yes, even the token holders who are deciding these things. It is light clients.
00:11:45.194 - 00:11:55.440, Speaker A: They are cucking all of these people. Okay, so that is how I would like to end my talk, if you're interested in anything else.
