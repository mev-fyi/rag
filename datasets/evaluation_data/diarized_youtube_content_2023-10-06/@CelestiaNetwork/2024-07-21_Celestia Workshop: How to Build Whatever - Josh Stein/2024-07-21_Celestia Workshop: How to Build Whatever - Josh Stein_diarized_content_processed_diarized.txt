00:00:02.680 - 00:00:39.006, Speaker A: Welcome, everyone. Thank you for coming to my workshop, and thank you for coming to the modular summit. I hope you've had a good time so far. Today I'm going to be doing a workshop. It's kind of technical, but we're going to do a pretty high level overview of Celestia and what you can do it. And if you've been at the conference, you've probably seen build whatever kind of plastered everywhere here, and we're going to talk about really what that means and kind of show you the different options for what you can do with the modular stack at this point in time. A little bit about me.
00:00:39.006 - 00:01:22.410, Speaker A: I'm a solutions engineer at Celestia Labs. I work with some of the people in this room. And previously I was at Anchor and Buildspace in 2022. And before that I was pretty much pilled on crypto, pilled on web3 by developer Dao and Buildspace in 2021. I guess my background is a little bit different. In my undergrad, I studied business and focused on supply chain management. There's this kind of beautiful mix of things in 2021 2022, where I figured out blockchains kind of are an application of supply chain management.
00:01:22.410 - 00:01:53.184, Speaker A: So I think that is really how I ended up going down this route at the end of the day. So a little overview of the workshop I'm going to be going through, what Celestia is, what modular blockchains are. I'm actually, I know for sure a lot of you are familiar with this, but we're going to be going over data availability and data availability sampling, and we're going to talk about how you can build whatever and whatever is. But that's the thing. You could do whatever you wanted. And we're going to run a light node this time. We're going to be able to do it in our browser, which is pretty sweet.
00:01:53.184 - 00:02:34.940, Speaker A: We're going to post some data on selenium, which is also something that's relatively new. And we're going to mint an NFT on a sovereign roll up, which is going to be a little bit different than we're used to because we're going to be using metamask. So an Ethereum EvM wallet instead of Kepler. We already have some TiA that's been bridged over for that. So first, what is Celestia? Celestia is a modular data availability network that makes it easy for anyone to securely launch their own blockchain. And if we cut some of that out, Celestia allows anyone to make their own modular blockchain. And it's probably important to define what a modular blockchain is before we go too deep into that.
00:02:34.940 - 00:03:23.910, Speaker A: Modular blockchain is a blockchain that decouples the core functions of a blockchain. It basically breaks them apart and splits it into execution, consensus and data availability. We can also think of settlement as one of the layers, but I think those three are the easiest for the mental model. And what that looks like in practice is we're able to split up the different layers. And instead of having one, pretty much one monolithic blockchain that runs into bottlenecks, we're able to split those layers apart and specialize each one so that they are more efficient. And this is something that helps you reduce your gas fees, basically the cost for users, but also reduces the overhead for people to launch their own blockchains. And when it comes down to it, a modular blockchain is a blockchain.
00:03:23.910 - 00:03:57.396, Speaker A: I used to have this as just a blockchain, but I think it's cool. They're all blockchains. And what this looks like in practice is we have execution. And you can think of execution in an analogy with a football game, where execution is basically you being able to see who won the game without watching the whole game. This is like going and looking on your phone to find the score. And in the blockchain world, this is the outcome of the transactions. We can basically see that I sent one to you, to Samuel, for example, and you can see the outcome that Samuel has.
00:03:57.396 - 00:04:33.634, Speaker A: One, I have zero after that settlement. I'm not going to go too deep into this, but this is like an umpire solving disagreements during a game. And in the blockchain world, this is solving disagreements about transactions. So if I try to send someone a token here, and I don't have that token to send, it's going to reject the transaction. Now, consensus is a little bit more important because, well, they're all important. Let me backtrack there. But in the context of a football game, the consensus is us agreeing to watch the same game.
00:04:33.634 - 00:05:36.410, Speaker A: So we're looking at the same thing. And then in the blockchain world, this is basically us agreeing on the order of transactions and the state of the chain. Data availability is, in the football game sense, basically like a recording. So if we all had a recording of the game, we can all go back and look at that penalty or look at the goal that may or may not have gone in and tell for ourselves whether or not that happened. And now in the blockchain context, data availability is like being able to sample the little bits of the chain to get the reassurance that I did send the tokens to my friend, or Bob did send ten tokens to Alice. And what data availability is, is probably something we should go into as well. Data availability in a blockchain ensures that transaction data included in every block produced is accessible to every node in the network, allowing everyone in the network, every user, every person running a node, to independently verify the validity of the transactions.
00:05:36.410 - 00:06:30.750, Speaker A: This is important because a lot of monolithic blockchains today require really, really high hardware requirements, which makes it hard to verify the information, basically hard to verify the chain without actually running the same hardware. So at the end of the day, it's pretty centralized and not as user friendly because it makes everything more expensive. So data availability is verifying that data has been published. So this is important in the most recent transaction data, and you can think of data storage as transaction data that's already been verified. So this is blocks that are a month ago, blocks that are even further back than that. It's not really as important to the user at the time when they're sending the transaction. So yeah, I think it's important to clarify the difference between those two because they're often confused.
00:06:30.750 - 00:07:43.668, Speaker A: Now, data availability sampling is something that Mustafa basically invented, where we're able to download a very small portion of the block, around 1%, and verify that with a high probability guarantee that the data is all there. And basically what this does is instead of us having to run those big nodes, we're able to scale, all of us are able to run nodes. And while doing that, it increases the scalability of the network, but also reduces the cost for every user to operate a node. The more nodes there are on the network, the more capacity the network has. So this is a little graphic of what it looks like when you're running a node on your phone, it's just pulling little bits of the data. If we were running a monolithic node or a full node, I guess even on Celestia, we would be downloading the whole block and re executing all the transactions, which at the end of the day just causes a lot of bottlenecks if we're trying to all do that every time we do anything. Yeah, so in the monolithic world, we're going to download all the data, we're going to verify everything.
00:07:43.668 - 00:08:28.360, Speaker A: And in the modular world, we just download a tiny little sample of it and verify with a single proof. And again, the more nodes we have, the larger blocks we have, because the more people are sampling the blocks themselves. So I think this is pretty much the same thing, but I really want to hammer in that. Basically, if we wanted bigger blocks in a traditional monolithic blockchain, we're going to have a really large cost increase to do that. Whereas in the modular world we're able to download a small portion of the block. And basically the more people that are doing that, the more block space we can have as a chain. Most importantly, this is verifiable by all.
00:08:28.360 - 00:09:41.130, Speaker A: I would say that we can run this on phones, and I think that's really awesome. But I think at the end of the day, we're really looking to a future where you can run this on your Apple homepod or youre a refrigerator, or you just have these things like running passively in your home or around wherever they may be, so that we're able to actually just increase the scalability of the network itself. So there's something that is a basic light client in traditional blockchains. However, this only checks the header. And what we're able to do with the celestial light node is check the header and then download a small portion of the data, which gives us a much higher like a better trust assumption, where we're not just trusting that the body of the block is there, but we're actually checking some bit of it to make sure it works. So a good way to think about that, basically when a block is made on celestia, the data is replicated so that it's easier to recover. And the way that this happens is with something called erasure coding.
00:09:41.130 - 00:10:31.382, Speaker A: It's basically some really fancy polynomial math. And it's also used by CDs and QR codes. So on a CD, if you have a disk that's scratched, for example, and you try to play it, there's a good chance that it will work, unless you've gotten, basically gotten rid of too much of the data or made it impossible to access that data. But a QR code is probably better example where both of these QR codes up here are going to be doing. They'll get you to the same exact place, but the one on the right is missing like, I don't know, like a fifth or a 6th of it. And this is also something that uses erasure coding. So I'm not going to go too deep into the maths, but if you want to read the lazy ledger paper, I would recommend doing that.
00:10:31.382 - 00:11:14.070, Speaker A: And then also the fraud and datability proofs paper. Basically, the more that we sample, the higher probability guarantee we have that the data is there. And then also the more samples we have, the more nodes or the more block space we can have. At the end of the day, I think the coolest thing about this is that anyone can run a light node. There's a lot of ways to run light nodes now. I think this is like something we just announced at modular summit. You can run a light node in your web browser with Lumina, you can run it on your phone that's a little bit more hacky right now.
00:11:14.070 - 00:12:07.690, Speaker A: You can also run it in your computer terminal, but it's really as easy as celestial light start. So now that we've talked about that and kind of what modular blockchains are of, we're going to talk about what rollups are and the different types of rollups. So a rollup is a blockchain that outsources one of its components to another blockchain. And a roll up is just a blockchain, or is a blockchain. I think it's important to clarify because the terms kind of get thrown around interchangeably a lot of the time. And what this looks like in practice is a roll up is on the top of the image here and it's taking in user transactions and basically batching them into a proof that gets posted to celestial, which is the purple box on the very bottom. And a sovereign roll up is a roll up that doesn't use a settlement layer.
00:12:07.690 - 00:13:41.950, Speaker A: So a sovereign roll up posts transaction data directly to Celestia. If you want to learn more about this, I'd recommend reading Mustafa's, one of his most recent blog posts on or not blog posts, forum posts on blockchains as sovereign communities. And the one quote that I like to pull out of there is communities have an inalienable right to thrive through self organization and collective action unburdened by the status quo technologies that make it possible to launch community computer owned programs. Community owned computer programs in the form of sovereign blockchains are important to realizing this, right? So what this really looks like, if we kind of break it down into different pieces, is we're able to cut out a lot of the middleman that we traditionally have in a traditional organization or even an app on a shared l one, where in a pretty important way, or like you're basically relying on the l one as a middleman. So whatever the l one decides that's going to impact what you're doing with your social contract on top of that, or with your dao that is underneath of that. And there's a lot of benefits with building modular it's definitely something that takes a little bit of figuring out how to put the pieces together sometimes. But what it allows you to do is specialize in the monolithic world, basically, you're required to think about all the things that are going on where in the modular world you're able to specialize in one or two tasks.
00:13:41.950 - 00:14:12.110, Speaker A: For example, you can focus on your execution environment and your application. And all you're doing with Celestia is posting the data and retrieving it. So it's pretty much just like a post and get request. At the end of the day, you can iterate quickly. So I'll show you later at the end of the workshop. But deploying a blockchain, a modular blockchain, is very easy to do. It's something that I think you can actually do as easily as deploying a smart contract on third web, for example.
00:14:12.110 - 00:15:00.970, Speaker A: And this allows you to use any vm and scale your application. The more users that it has, the more users that you have using your application. Whoops. So, scaling, I think a big part of modular blockchains and the appeal for applications is scalability. So basically, I've already talked about it, but I want to rehash that the more nodes we have, the bigger the blocks can be. And if we have bigger blocks, this also allows us to have lower fees based on the more transactions that there are. Unlocking sovereignty is also important here, where we're able to basically balance stability and innovation.
00:15:00.970 - 00:15:32.510, Speaker A: So we're able to rely on, so we can take a few steps back to the bitcoin era where it's stable but stagnant. It kind of works. I mean, it works, but there's not much being improved there. And in like the Ethereum and cosmos vision, we have an innovative blockchain. But all the things on it, on top of it, rely on that base layer. They rely on the execution of Ethereum. High gas fees lead to bad user experience.
00:15:32.510 - 00:16:08.552, Speaker A: Siri. Coming up. But when it comes down to it, what you're able to do on Celestia is you have a base layer that is stable. Like I said, you're just posting data to Celestia, retrieving data from Celestia. You don't have to worry about any kind of state transitions for your roll up, actually. And on top of this, you can focus on your application. So on the right side of this graphic, you can see that some of the little applications are maybe not doing as well as the others, but everything else is still stable.
00:16:08.552 - 00:17:01.632, Speaker A: So basically, this splitting apart these different functions of a blockchain allows us to run into fewer bottlenecks and cause fewer issues among the entire ecosystem. So I guess when it comes down to it, the modular approach allows you to collaborate and tap into existing modular blockchains instead of just trying to build your own l one on some siloed environment. And I think it's important to cover the question of how is this different from Cosmos or Ethereum? So, with Ethereum, we have shared security. It's easy to deploy on, but it's not sovereign, it's not scalable. And in Cosmos, there's no shared security. It's not easy to deploy because you have to bootstrap a validator set, and it is sovereign and it is scalable. And Celestia is kind of the combination of these two.
00:17:01.632 - 00:17:41.036, Speaker A: In the best of both worlds, where we have shared security, it's easy to deploy. We can actually go and do it in a few clicks here on our computer, and we can also run sovereign blockchains and scalable ones. So we can think of this as pretty much like an evolution from calculator to cloud computer. Going back to the bitcoin era, we have an application which is bitcoin. Consensus DA and execution are all tightly coupled. Ethereum, we kind of split that apart into applications, consensus DA and execution as well. But the applications are a little bit more separate.
00:17:41.036 - 00:18:10.026, Speaker A: And in the Celestia vision, we're able to specialize each one of those applications. Oh, man, I forgot these were there. Surprise. So I think one of the important things about Celestia and building modular blockchains is shared security. So in the bitcoin era, we have app chains. In the Ethereum era, we have the monolithic era. And starting in 2019, we began the modular era.
00:18:10.026 - 00:19:18.180, Speaker A: So the most important thing about shared security here is to visualize the difference in what it looks like to set up on the left here, your own l one, for example, where you might have uneven security between two different chains. And in the modular world, we're able to share the security of celestia and build chains on top of that which are able to communicate with each other easier. So without shared security, we can have our own blockchain, but it kind of lives in its own world. And with shared security, we're able to lean into each other and help each other out and collaborate and make things that are actually useful to everyone else in the world. So what this looks like the differences between running your own l one or running a roll up. The biggest lifts for bootstrapping security are that it requires a ton of engineering expertise. You also have to gather a set of validators and then coordinate with them to run their validators, you also have to issue a token, which there's a high operating cost for lots of things to figure out there.
00:19:18.180 - 00:19:52.824, Speaker A: When you inherit security, the technical requirements are a little bit lower. Pretty much just write the business logic you can deploy permissionlessly. No one needs to really like. You don't have to coordinate with 100, 200, 300 people to do that, and there's no token required. You could use another token like TIA. You could, I guess, do pretty much anything else you wanted. And without shared security, like I said, each application has to bootstrap their own security.
00:19:52.824 - 00:20:52.620, Speaker A: They kind of could live in their own little bubbles where one is bigger than the other, and then you pretty much run into insecure interoperability. With shared security, we're able to, with a better trust assumption than bridging between two random chains, we can bridge with a little bit higher trust assumption. I'm going to skip through this. I got a lot of slideshow. So what does this look like in practice? We're basically able to plug both of these chains into celestia, which gives them the same trust assumptions. And I guess there's like a big conversation that could be had there that's not like 100% true, but it depends on what the different chains are. So what do you mean? Build whatever you can mix, you can match whatever you want in the modular stack.
00:20:52.620 - 00:21:26.378, Speaker A: And what this looks like in practice with a few different options is we can have a roll up that is posting data to Celestia. It's settling on Ethereum. It's using consensus on Ethereum as well. You could have a roll up that is doing execution and settlement on its own, and then using Celestia for DA and consensus. You can think of that as like a base roll up. You could also have your chain that settles to some other thing and post data and uses celestia for consensus. These are just like three options.
00:21:26.378 - 00:21:51.480, Speaker A: I guess that's pretty much like the general framework for how you do it. But what this looks like in practice and in a graphic is we're able to run things like polygon. That's a terrible example. Rip op stack l two s. Arbitrum orbit l two s. Any kind of other ethereum l two that we want. And we can make our own.
00:21:51.480 - 00:22:31.980, Speaker A: We could use move vm, we could use Cosmos SDK and run a sovereign chain. We could use something like rollkit. But at the end of the day, the possibilities for what you can actually build on top of Celestia are pretty much endless. So what can we build? You can build bitcoin, l two s, you can build ethereum, l two s, you can build sovereign roll ups like forma, you can build whatever you want. It's up to you to figure that out. So let's enter the modular era. I think I went through this a little quicker than I expected, but we're going to go ahead and talk about rollups.
00:22:31.980 - 00:23:26.024, Speaker A: So why should I deploy a rollup instead of my own blockchain, for example? Why do you want to join this crowd? So a rollup is something that makes blockchain scalable. A rollup is a scalable blockchain, in my opinion. And a good example of this is something called frame chain, which is built with optimism. Op stack on top of base and posting data to celestia. So it's like a word salad, it feels like. But what? This is basically just a blockchain on top of base that's posting data to celestia. And in this example, this was a frame on Farcaster where people were able to basically do a dummy transaction to show how little it would cost on frame chain.
00:23:26.024 - 00:24:28.970, Speaker A: So this frame was running for a little bit, and it used what would be equivalent to like two tenths of a cent on actual of actual gas versus what would have cost like $321,000 on Mainnet Ethereum L1. So, like what it boils down to is this is better for your users, it's cheaper for your users, it's verifiable by all. It's scalable, it's customizable. You can do things like put it on top of base, put it on top of orbit, you can put an op stack on top of nitro, you can have some fun there. But ultimately it's secured by the base layer and now it's as easy to deploy a roll up as it is a smart contract. I think it's literally true. And yeah, so I'll get to that in like a second and we're going to go through on Caldera and see how easy it is.
00:24:28.970 - 00:25:10.176, Speaker A: But I think EVM is something that's a pretty big focus in all of the blockchain world that I know, at least. So if you're interested in deploying an EVM roll up, there are a few ways to do that. But first, I guess it's important to clarify how that works a little bit. So an EVM roll up that settles to Ethereum is a blockchain that's posting data to celestia instead of call data on Ethereum. And what this does is it allows for faster and cheaper transactions without sacrificing the security. So the ways to do this, you could deploy nitro or op stack from source on your own. Note that there's definitely DevOps experience required here.
00:25:10.176 - 00:26:05.540, Speaker A: Like seriously, if you're not comfortable with it, I'd recommend going to the second option here, which is deploying using a rollup as a service provider, which is something that I would compare to the user experience of using Open Zeppelin to deploy a contract or third web to deploy a contract on the web browser. I guess on that note, it's more like third web where you can just select your parameters and then deploy the contract. But in this case, we're going to be able to select your parameters and deploy a roll up. You can also play around with an existing op stack testnet, such as Bubs Testnet. This is an op stack testnet with Celestia underneath, hosted by Caldera. We also have raspberry Testnet, which is an op stack testnet as well. And then we have some arbitrum nitro testnets in the works.
00:26:05.540 - 00:26:43.288, Speaker A: So that's the way to deploy an EVM roll up. I think it's probably good to cover what sovereign rollups are. We're here talking about modular blockchains and sovereignty. So the ways to do that are Astria. Right now, Astria is a shared sequencing layer, but you can also deploy roll ups with them. Rollkit is an open source framework for modular blockchains, which is basically, I think it's actually built into the cosmos SDK now and then sovereign SDK, which is a little bit more customizable. You could also make your own.
00:26:43.288 - 00:27:07.202, Speaker A: This could be something that is an application that's. I'm trying to think really simple. It just posts data to Celestia, retrieves the data from Celestia, does something in between, post data, again, retrieves data. Pretty much what all that's going on here. I'm tripped out by having the clicker too. So there's a few. There's also a testnet to use for sovereign rollups.
00:27:07.202 - 00:27:37.026, Speaker A: The cosmosm testnet right now, I think is actually the only one. This is a rollkit roll up that's using cosmosm. It has Celestia underneath and there's no settlement layer or anything. It's just a sovereign roll up insert. There is no settlement. I love you, Meme. So forma is the first sovereign roll up that's live in production forma is an EVM roll up without settlement to Ethereum.
00:27:37.026 - 00:28:06.764, Speaker A: I feel like that's important to note. It's just using the Ethereum virtual machine, and it's using Astria's shared sequencing layer, and it uses Tia as the native token. So this TIa is something that we take from Celestia. We bridge it using hyperlane in stride, and then we can use it on our roll up. And of course, Forma is using Celestia as DA underneath. Don't know what this is. All right, cool.
00:28:06.764 - 00:28:51.410, Speaker A: So what this looks like when you're using it as a user is you're going to add the site, you're going to add a network to your wallet. In this case, it's going to be forma. As you can see, it's using the currency symbol as TIA with the chain ID and the RPC for the network. Then we're able to see our balance. So this is probably a little confusing to look at at first because it's metamask, but it has Tia in it. Then we're able to basically, this is assuming I had zero balance, I'm able to bridge by connecting my Kepler wallet and then connecting a metamask walleth. What I do is basically sign one transaction and then I see that in my metamask.
00:28:51.410 - 00:29:55.940, Speaker A: Cool. So, yeah, this is, I feel like last year did this talk, and there's definitely no roll up in production. Mainnet hadn't launched yet, but this is the first sovereign roll up. And it's pretty wild to me to see the UX be like, pretty much no different than using any EVM chain that I've ever used. I would say the biggest difference is probably gas, where we're basically paying nothing to mint something, except for the fee, of course. So also running a light node has gotten a lot easier since modular summit 2.0. I think it's going to be kind of small to see, but on the right here I have, I think it's a post from pre modular summit last year where the coolest thing that I had going was Quasar, which was a one click light node app where you could run it on your computer.
00:29:55.940 - 00:30:54.290, Speaker A: I then worked on something called what I was calling Pat, which is a little bit different, where it was exposing logs. You could actually see what was going on with the node itself, see the logs, instead of it just being kind of abstracted away from you. And then I guess the closest I got to something that was really user friendly was being able to run that with one command. I think these are all just examples of things that I played around with. I feel like that's important to clarify. But now you can run nodes in your browser, and that's possible thanks to the iger team, who has been working on Lumina. And Lumina is an in browser node built with rust, and we're able to run that in chrome and sample celestia without even touching a terminal, without downloading a program, without doing anything that, I mean, honestly, that I've done in my past workshops.
00:30:54.290 - 00:31:09.150, Speaker A: So it's pretty wild to me to not. We're not going to have to. We might do it if we have time, but we won't even have to jump into a terminal today. We won't have to download anything. I got my slides mixed up here. Sorry. That was a successful mint.
00:31:09.150 - 00:31:53.250, Speaker A: So now we're going to go ahead and do a few things. We're first going to run a light node in my browser with Lumina. We're then going to post data using selenium. We'll mint an NFT on forma to see what that UX is like if we have time. I'm not going to push it too hard, but we might play around with a node API playground after installing a local celestia node. Before I jump to that, if you're interested in getting involved with Celestia, with the ecosystem broadly, I would recommend checking out the forum discussions. If you have a good idea and want to share something, want to write it down, the forum is the best place to do that.
00:31:53.250 - 00:32:39.740, Speaker A: Also recommend checking out the celestia improvement proposal process, where we work on improvements for the protocol itself and things like the infinite space Bazaar hackathon. We already had one, but we're going to be holding another one at some point in the near future and GitHub issues. It's a really good way to get involved, like knock out your first few tickets and see what's going on. So yeah, we're going to go to demo now. I'm going to first start with Lumina and just show how quickly you can do that. So I'm using Arc, which is a chromium based browser. I think it works on Chrome based browsers right now.
00:32:39.740 - 00:33:19.086, Speaker A: So if you have that, you can do this on your own too. What we're going to do is click Start. It's going to have the boot nodes that it's connecting to, and once we hit start, we're going to see a little bit of setup going on where we're setting up the browser for the web node. We're getting ready to verify the new blocks that are coming in and we're connecting to the chain. So I think I ran this a little bit earlier so it didn't jump that quickly to 7%. But what it's doing is it's fetching the past headers and verifying them within the sampling window. But we can also see that the latest blocks are coming in.
00:33:19.086 - 00:33:49.990, Speaker A: So this graphic on the right side is the square with a nice illustration that's dynamic, of course, depending on the size of the block. And if we want to, we can also jump to the advanced side of this where we can see the logs coming in from the headers that are being sampled. We can see the time that it takes to sample those. We can also see the square size. So that's where this is coming from. You can see this is an eight by eight square. I think this is also an eight by eight square.
00:33:49.990 - 00:34:26.028, Speaker A: Nash Q would love this. And we're going to see in a second a 32 by 32 square. And if you're doing this, I guess none of this is live. But if you're at the modular summit right now and you do this on your computer, do this on your phone, you can actually claim a limited NFT on forma. So I'm going to skip the process of logging in with my email here and I'm going to connect my wallet. Ooh, psych. Can't do that.
00:34:26.028 - 00:35:02.168, Speaker A: We're going to mint another one on here. But yeah, if you are attending the modular summit and you want to mint this NFT, you just need to log in with your email that you used for your eventbrite ticket and you'll get a free mint. It's going to send you a little bit of Tia to cover the gas, too, I guess. Also, it's important to note that that uses. It's using privy as a way to abstract away the wallet login. So that's why it's using an email. All right, so we have a light node running.
00:35:02.168 - 00:35:47.560, Speaker A: It's still syncing. I don't think it's going to kill my computer, so I'm going to let it run in the background and we'll see where it's at in about ten minutes. So the next thing we're going to do is we're going to use selenium to post some data. I'm already logged in with my wallet here and you can see that my balance is one Tia. What we're going to do is submit a blob and I'm going to just put a little demo text file here, and we're going to post it to the cell st, something like that. I think that's. Nope.
00:35:47.560 - 00:36:09.626, Speaker A: Oh, no. All right, we're using deadbeef. Ok, cool. There's some way that that celestial works in hex. So this is going to look like a transaction. I guess if you're not familiar with Kepler, this might confuse you or not be something that's familiar. But this is just like any other transaction we're sending in Kepler.
00:36:09.626 - 00:36:41.960, Speaker A: We're going to hit approve and this will be sending it to the deadbeef namespace. It's a plain text file. And once that blob is submitted, we're going to be able to go and verify that that was posted to Celestia. I'll just go ahead and open this. So, yeah, 19 seconds ago, we have this file that was posted. We can see the signer, which I think is actually my wallet. Yep.
00:36:41.960 - 00:37:20.320, Speaker A: So we can see that I was the signer for this. And also we can see the blob. So this is the example data that I posted. We can also verify that with textedit real quick and see that that is the same bit of data that I wanted to post. I think the next thing we're going to do is mint an NFT on forma. So if I want to do that, it looks like there is a mint that is still going on. For the sloth gang of Athens, I what we're going to do is log in with metamask here.
00:37:20.320 - 00:37:48.030, Speaker A: I have not added this chain yet, so, like I showed earlier, we're just going to add this network to our wallet and hit approve and switch to that network. Now that we're good to go, we can actually see my ens up here. And, bummer, I already minted it yesterday. Whoops. This is like, live demos never go well. Perfectly. So, yeah, interesting.
00:37:48.030 - 00:38:21.764, Speaker A: Might get lucky there. Nope. All right, I'm going to save us. Save me trying to save this live. So, yeah, I already covered it in the presentation, but minting that NFT on format is going to be the same UX as you're used to on pretty much any other platform. I don't think we're going to do this because I have to put in a card to do it. I just want to briefly demonstrate how easy it is to deploy a rollup.
00:38:21.764 - 00:38:45.800, Speaker A: This is going to be an example with Caldera. Caldera's rollup is a service provider. What we're able to do is go in here, click deploy a rollup, select a stack. If you're not sure about what to do. I'd recommend clicking learn more to understand the differences between those two options. And we're going to go with optimism, bedrock. We're going to just do a testnet here.
00:38:45.800 - 00:39:14.920, Speaker A: We can use a custom token if we want. In this case, I'm going to play it safe and use eth. And we're going to pick Celestia as the DA layer. I love auto generated names. We're going to call this one modular summit three and it'll come up with a new chain id for us. And this is something that we use to identify the chain to wallets. And we can go ahead and click deploy new roll up.
00:39:14.920 - 00:39:32.088, Speaker A: This is a Sybil prevent. Like this is basically just to prevent people from using this maliciously. I actually guess I might already have a card in there. Cool. So we're deploying a roll up. Nice. In the background.
00:39:32.088 - 00:40:12.980, Speaker A: What this is going to do is start running some nodes for the rollup. It's going to take about 15 minutes, so we're not going to be able to watch that during the workshop. But that is how easy it is to deploy a rollup today. As we can see, we're going to get a status page with this. We're going to get a hub page which will show us pretty much all the information for the roll up. We'll also get a block explorer and a bridge. In this case, since this is a roll up that settles to ethereum, it's going to be on Sepolia Testnet and the bridge will allow you to send Sepolia eth to this roll up and then back if you wish.
00:40:12.980 - 00:41:12.666, Speaker A: On that note, I think I'm going to skip showing off the node playground. But if you are curious and maybe watching this after the fact, I'd recommend checking out the Celestia node API playground, which is something that one of our solutions engineers built recently. It allows you to. You know what, we got some time. I don't know how the Internet's going to do here, but what we're going to do is we're going to go to the docs, we're going to, going to head over to run a node to the quickstart and we're going to set up our environment. Since I'm using Mac, I'm going to go ahead and follow the instructions for Mac Apple. I'm using an M chip computer and I actually don't have go installed here.
00:41:12.666 - 00:41:48.270, Speaker A: So we're going to go ahead and do that as well. No rip. Ok. We might just skip this? Yeah, we're just going to skip this. I don't want to deal with it. So what I was going to show you is that you can run a local light node on your computer here in your terminal. And if you want to learn how the API works, we have a new playground which allows you to connect to that local node and send the request, for example, to get a blob from the network.
00:41:48.270 - 00:42:23.540, Speaker A: We're able to send that to our local node and see the response here in the UI. So this is something that's useful if you're building some kind of roll up on Celestia and you want to try it out for yourself. But, yeah, I think I'm going to jump back to the presentation and kind of leave the floor open. I'm not in too much of a rush to get out of here, but if anyone has questions, I'd be happy to chat. I do recognize a lot of you and know a lot of you. So, yeah, thank you for coming again, and hopefully you enjoy the rest of majo summit. Thank you.
