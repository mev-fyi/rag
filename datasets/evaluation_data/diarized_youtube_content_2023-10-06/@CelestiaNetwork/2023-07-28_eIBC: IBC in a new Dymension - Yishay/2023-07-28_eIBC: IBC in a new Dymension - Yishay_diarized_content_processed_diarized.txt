00:00:01.850 - 00:01:00.042, Speaker A: So my name is Ishai, now, the co founder of Dimension, and this talk is going to be about EIBC and IBC in a new dimension. So EIBC is a paper that I wrote with the team about optimistic roll ups in an IBC setting. But let's talk a little bit about context. What is dimension and how does it connect to YBC? So dimension is network of modular blockchains called rollapse. We're in the modular summit, so it's worthy to say that these modular blockchains, they post data to a DA layer, like Celestia or like avail or any other DA modules or DA capabilities that we're going to have in the future. And these roll apps are modular by execution as well. So they can choose their execution environment and they settle to the dimension hub, which acts kind of as a router to this Internet of roll ups, to this network of modular blockchains that is called dimension.
00:01:00.042 - 00:01:56.402, Speaker A: So the dimension hub is a settlement layer with an enshrined support for our roll up framework, which is called the RDK. This is a unique architecture, I think seeing a lot of these lectures here and a lot of talks in the modular summit, I noticed that dimension has a very unique architecture. As one of, or I would say probably the only settlement layer that focuses on modular settlement and validating bridge for roll ups. So that's interesting. And it also enshrines the roll up framework that we've built. I think the difference between dimension, to Ethereum for that matter, in terms of settlement, is that dimension doesn't use smart contracts for roll ups. It actually uses the chain itself to support these roll ups and to gain more decentralization for sequencers from day one.
00:01:56.402 - 00:02:37.546, Speaker A: So this is kind of why we built dimension. But let's talk about EIBC and what it is. So EIBC is an IBC based protocol for supporting optimistic rollups. What does this mean, and why do we need this protocol? Why can't we use just IBC? This is a question that comes to mind. Why can't we use vanilla IBC for roll apps? Just reminding you, all dimension roll apps are optimistic roll apps. So this question comes to mind, and the answer is, we can actually use IBC. We can use IBC.
00:02:37.546 - 00:03:10.890, Speaker A: And we use IBC. So from the dimension hub to the roll apps themselves, we use regular IBC. It is not an issue. But from the roll apps themselves, back to the dimension hub, we can use IBC. But we have a setback. We have a setback that is common to every optimistic rollup because of a characteristic that optimistic rollups have, which is the fraud proof dispute, period. So optimistic roll ups are the most popular scaling solution.
00:03:10.890 - 00:03:44.450, Speaker A: I guess most of you know that on Ethereum, in terms of TVL, in terms of popularity, you see arbitram, you see optimism. You see all these roll ups. They're very, very popular, but they have a few issues. One of them, as I mentioned, is the dispute, period. So the dispute, period basically prevents us from trusting the roll up immediately. We need to allow other participants in the network to submit a fraud proof. So it's a one of n assumption that somebody's listening or somebody's capable of submitting a fraud proof to the settlement layer.
00:03:44.450 - 00:04:58.038, Speaker A: But there's another setback that's not that known or not that common of people to talk about or to think about is the verifier's dilemma. The verifier's dilemma is the situation where a sequencer is honest and is being honest for quite a while. Let's say that and other full node operators don't have any incentive to run a full node for a roll app, contrary to an l one or a cosmos chain where they can validate and earn rewards, earn fees, roll up full node does not have any incentive to continue running this full node. When he knows that the sequencer is honest, he's assuming that this might be a possibility for him to catch fraud and maybe make money. But the more we go in time, the more we understand, okay, this sequencer is honest, and most of the verifiers would just stop operating these nodes. These nodes cost money, so they just eventually stop. And then the full node or the sequencer, by that time of point of time, they could be tempted to start cheating or doing any malicious state transitions.
00:04:58.038 - 00:05:45.846, Speaker A: So this is the verifier's dilemma. We have to make sure that in an Internet of roll ups like we envision in dimension, where we say cosmos is just the tip of the iceberg, we can build an Internet of roll ups which are connected to the cosmos ecosystem, ViABC and via the dimension hub. We must figure out a way to understand who will verify these rollups and to understand how we can trust these roll ups or these sequencers if they don't have a lot of full nodes out there. So these are two big problems if you want to address an Internet of rollups that is based on the optimistic approach. So we have a solution, and this is what I want to talk about today. The solution is called EIBC. E is for escrow.
00:05:45.846 - 00:06:34.358, Speaker A: So EIBC is an IBC wrapper on the settlement layer that basically transforms the settlement layer into a clearinghouse of IBC withdrawals that are tradable or that you can use to clear them before the dispute period. So we want to address the dispute period. We want people to get an instant transfer experience and not damage the UX for everybody because of the dispute period. We have for optimistic roll ups. So this is a short kind of brief about EIBC. Let's understand how it works in detail. So for understanding that, we need to address the assumptions.
00:06:34.358 - 00:07:14.870, Speaker A: So the first assumption is that users are willing to pay an additional fee for instant withdrawals. This is obvious. If you want to get out of a roll up, if you want to get out of an exchange, you would pay a little bit more to get out of that roll up or that exchange, or whatever it is, you would pay a fee. The second assumption is that verifying a roll up eliminates the rollback risk for the verifier. So assuming I am suspecting something, or whatever it is, I'm running a full node of the roll up. I have now verified the state. I eliminated the risk of rollback.
00:07:14.870 - 00:07:47.618, Speaker A: The third assumption is that verifiers who encounter fraud will submit a fraud proof. I think these are pretty feasible assumptions that we can take, and it will help us move forward with the flow of EIBC and how it works. So let's talk about the flow. So, Alice is a user on roll up X. She sends an EIBC withdrawal requesting ten dime out of the roll up. So Alice says, I want to withdraw ten dime and I'm willing to pay one dime fee. Okay, this is an example.
00:07:47.618 - 00:08:23.258, Speaker A: It's not the implementation, but just an example. So Alice wants to withdraw ten dime. She sends it as a regular transaction to the roll app with the fee, with the fee requirements later on. The EIBC message is relayed to the settlement layer escrow module, which cues it. And this is an important fact, an important detail here. The EIBC message is relayed to the settlement layer, to the escrow module, and not to Alice itself. So Alice is not getting the EIBC withdrawal.
00:08:23.258 - 00:09:13.326, Speaker A: Remember, we have to wait for finalization. There is a fraud proof dispute, period. So we need to make sure that we only accept the real IBC message after the fraud dispute, period. Super important. So we need to figure out how we can counterpass this hurdle. Okay, now, Bob, which is a liquidity provider, and remember Bob, because he's also a verifier, remember him? Bob is a liquidity provider who decides to fulfill the EIBC message, the IBC transfer, he's willing to purchase the delayed IBC message that Alice has already sent. Remember, the settlement layer escrows these IBC messages, and he can actually auction them.
00:09:13.326 - 00:09:57.606, Speaker A: So Bob is capable of purchasing a future withdrawal and paying nine dime, right? Now, remember, Alice wanted to pay a fee for getting out of the roll up immediately. So she's willing to get nine dime for a ten dime in the future, which Bob is willing to wait for. So Bob actually sends the nine dime to the settlement layer escrow module. The EIBC module on the settlement layer delivers Bob's tokens, right? Bob sent nine tokens and now delivers the nine tokens to Alice immediately. Right. So Alice wasn't capable or she didn't want to wait. She got her nine dime immediately.
00:09:57.606 - 00:10:50.460, Speaker A: And the original EIBC message of Alice, the ten dime, is now waiting for finalization, but it's rerouted for Bob's address. So what we did here, we made the settlement layer a clearinghouse for roll up withdrawals. So we took, one need of Alice is I want to get out of the roll up immediately. I'm willing to pay the settlement layer escrows. The message, it knows it, can't accept it because of the optimistic assumption. And Bob is willing to take that additional risk and additional waiting time for that fee. Okay, but what happens if there's no one who wants to fulfill the EIBC transfer? The IBC liquidity transfer.
00:10:50.460 - 00:11:36.460, Speaker A: In this scenario, the message would just wait, transfer. The IBC message would just wait as usual and would finalize and would be transferred to Alice according to the optimistic assumption that we'll wait for the dispute period. So this EIBC protocol is fully compatible with IBC. It just uses a wrapper on the settlement layer to create a market for the future withdrawals. It's a market, and this is what it is. And this is, I think, what makes it super exciting because it elegantly provides economic and crypto economic assumptions or game theory to create a better system. So let's look at the result.
00:11:36.460 - 00:12:50.820, Speaker A: The result is Alice received her tokens immediately without waiting the dispute, period. Alice is now capable of transferring VIBC, of course, her funds or tokens, whatever she wants, to any other roll up in the ecosystem. That's pretty amazing, because once you withdraw out of rollup x or whatever roll up you are, you can easily deliver the tokens or transfer the tokens to any other roll up that's connected to the ecosystem. So by solving what we did in the first leg, in the first flow, how do we get out of the roll up? We actually get a roll up to roll up system that works fluently. So Alice also didn't need to trust any centralized actor for bridging. This is super important because right now everybody's using arbitral, optimism, whatever roll up on Ethereum or whatever roll up that is optimistic, they're using it with the liquidity provider that they trust. So we leverage the IBC mechanism and we leverage the trust in the validator set of the dimension hub to create a trust minimized environment for people to use and basically to leverage it.
00:12:50.820 - 00:13:53.910, Speaker A: The other result from Bob's side is Bob made money. I think it's super important to understand that we want to allow or we want to enable as much ecosystem participants that will make money. This creates a community, it creates an economy, it rewards the players that are in the ecosystem, and it's good. But Bob, apart from making money, has a crucial incentive right now to verify the roll up. And I think this is what makes EABC super special and super important and elegant is that we kill two birds with 1 st and we allow the ecosystem to verify itself. So according to usage, according to, if a roll up is popular, you would know that it's being verified because somebody wants to get out and somebody's willing to give liquidity. So you would know that this roll up is safe because it's being verified.
00:13:53.910 - 00:14:30.770, Speaker A: So we're using crypto economics, we're using game theory instead of computation to create this incentive mechanism to verify thousands of, or tens of thousands of roll ups with crypto economics. And by that, solving the verifier's dilemma. So the verifier dilemma is solved. The fraud proof dispute, period, is mostly solved if there's interest in the roll up. Right. So if somebody is in the roll up, if somebody wants to take the risk of running it, it's also solved. So it's also kind of an on demand.
00:14:30.770 - 00:14:57.234, Speaker A: Yeah. And we get a better ecosystem and a better experience for our users. Creating this Internet of roll ups with immediate withdrawals and usage of the original IBC mechanism. I guess we're getting to the end of this presentation. Thank you. Maybe time for Q A. Don't be too rough.
00:14:57.234 - 00:15:11.500, Speaker A: I know you're going to have hard questions. It's especially you in the back there. Yeah. Any Q and A? Anybody wants to add something? I assume not. Okay, thank you.
