00:00:03.820 - 00:00:10.592, Speaker A: Welcome to Sovereign Radio, our short form podcast series created for the modular summit. I'm here with Ismail. Welcome.
00:00:10.726 - 00:00:21.090, Speaker B: Hey, thank you. I'm Ismail Coffee, co founder and CTO of Celestial Labs. And, yeah, I've been working on that project for almost four years now.
00:00:21.460 - 00:00:26.330, Speaker A: So we're here in Paris. I am curious to hear how has your experience been so far this week?
00:00:27.420 - 00:00:46.636, Speaker B: The week has been rather quiet for me in the sense that I did not attend many other events, and I only met with the team and with a few people. Otherwise, I was preparing slides and working yeah. Getting ready for this and also getting ready for launch. Yeah.
00:00:46.658 - 00:00:52.604, Speaker A: So we're recording this on the first day of the modular summit. It has just started. But I am curious, what are your impressions of it so far?
00:00:52.722 - 00:01:05.836, Speaker B: It's amazing. I mean, the venue is amazing. The organization is amazing. We have a bunch of really interesting speakers. Like, when I looked at the agenda, I was like, oh, I really want to listen to all of these talks.
00:01:05.948 - 00:01:06.572, Speaker A: Nice.
00:01:06.726 - 00:01:13.380, Speaker B: Usually I just like, I want to listen to a few talks. But this time, the agenda is really packed with interesting things.
00:01:13.450 - 00:01:35.388, Speaker A: Yeah, actually, I mean, the ZK Validator, one of my companies. We're actually organizing the ZK track today. So obviously I'll be there. I'm excited for that. Okay. I think it would be great for us to start talking a little bit about Celestia. Celestia is one of the teams that actually co produced the modular summit and the radio and but, I mean, more primarily, it's a blockchain project.
00:01:35.388 - 00:01:37.310, Speaker A: Tell us a little bit about what it is.
00:01:37.920 - 00:02:16.548, Speaker B: Celestia at its core is the most minimalistic layer one that you can imagine. It's like a general purpose chain that decouples execution from consensus and data availability. So the core idea is that applications, decentralized applications only post their data onto Celestia. So it gets ordered, and it gets the guarantee that the data is published to the network. And other than that, Celestia doesn't do anything else. And all the applications, the business logic, run on roll ups or on a layer above their Celestial.
00:02:16.644 - 00:02:28.430, Speaker A: So you just mentioned roll ups, and I think a lot of our viewers are probably familiar with roll ups, but I think they're familiar of, like, they know the infrastructure in the ethereum context. So what's different here?
00:02:29.360 - 00:02:36.080, Speaker B: It's very similar. The main difference to Ethereum is that we do not have an enshrined settlement layer.
00:02:36.740 - 00:02:37.872, Speaker A: What does that mean?
00:02:38.006 - 00:02:43.836, Speaker B: A settlement layer is a specific execution layer that can be used for bridging between roll ups.
00:02:43.868 - 00:02:47.312, Speaker A: Like the assets. Is that what you mean? Like the actual tokens?
00:02:47.456 - 00:02:47.908, Speaker B: Yes.
00:02:47.994 - 00:02:56.628, Speaker A: Okay, so you don't have there will be never a roll up that will send a token to Celestia, and then it will be sent like the tokens don't live on Celestia?
00:02:56.724 - 00:03:40.576, Speaker B: I mean, I wouldn't say never, but the current configuration, the current way we're launching it. There's no general purpose execution environment on Celestia, so there's currently no way to bridge in and out from and to Celestia directly. Right. It will be possible through third parties, like chains via IBC. You could swap out the tier token to a different chain and then to a roll up. And roll ups can talk to each other as well, but there's no direct way. Mustafa actually proposed a very interesting way to do bridging from and to Celestia without enshrining a settlement layer which uses ZK snarks.
00:03:40.688 - 00:03:41.350, Speaker A: Interesting.
00:03:42.680 - 00:03:44.740, Speaker B: It could be own episode.
00:03:45.400 - 00:04:10.936, Speaker A: But wait, I want to understand. So, like, the execution layer is where you'd also deploy applications and things like this. So you're saying, like, Celestia won't have that? There's no applications directly directly or like there's no generalized applications. At the same time, I'm assuming developers will interact with it somehow. So what are they doing with the base chain? Are they just deploying roll ups?
00:04:11.128 - 00:04:39.620, Speaker B: I mean, let's put aside all the proof of stake logic. And what developers will care most about is basically one transaction type, which is Pay for Blobs. So they submit when a roll up or some other layer submits data to Celestia, they do so via triggering a transaction type, which is called pay for Blob, and that's about it. And they also run a light node, so they do data availability sampling.
00:04:39.700 - 00:05:01.280, Speaker A: We should actually maybe make a distinction here. So the question I actually had was more like the roll up developers, a roll up developer, how do they even create a roll up to lock into Celestia? Especially going back to those original ideas of rollups. Like, roll ups are a collection of smart contracts often. So if you can't deploy that, what are you deploying on Celestia?
00:05:03.140 - 00:05:44.620, Speaker B: So on Celestia directly, you do not deploy anything. It's more that there will be infrastructure on top which allows developers to easily deploy roll apps, which could also be smart contracts, like in the Ethereum case. But they're very specific, maybe, yeah, there could be very different ways to and we're already seeing this. There's different service providers where you can have one click solutions. You write your program, for instance, in Solidity and then you deploy. And in the background what's happening, you use a shared sequencer or you spin up your own sequencer, or you directly post data. Like as a base roll up, you directly post data to Celestia.
00:05:44.620 - 00:06:10.384, Speaker B: So it's like different ways to interact and it's very nuanced in my opinion. But if developers are given the choices directly, they will have to choose from very different set of configurations and trade offs. But luckily there are companies and projects working on simplifying this such that developers can very easily interact with Celestia by abstracting it away, essentially.
00:06:10.512 - 00:07:07.628, Speaker A: I think I'm realizing that I've been sort of thinking about rollups on Celestia wrong, maybe. So the way I always think about them, obviously, having looked mostly at the Ethereum case is that to deploy a roll up, you're talking about months and months of work and maybe less now because the libraries are built. But originally it was like you had to build these things from scratch. You have to kind of build a space for other users and other developers to be able to use your execution environment. And then you'd create that connection point and then you deploy it. But what you just said makes me think, like, actually the DAP producer, like the DAP developer, the one who's just creating an application that users could use, is creating a very fast roll up that then hosts its business single app. Yes, okay, I've heard sort of talk of that, but I hadn't realized that that is actually what you're imagining.
00:07:07.628 - 00:07:20.872, Speaker A: So when you think of roll ups, you're not thinking of a single l one with maybe four roll ups that then have execution environments. You're thinking of hundreds or maybe more little application roll ups.
00:07:20.936 - 00:07:46.328, Speaker B: Exactly. So there's both, right? Like, there's these rollups like optimism. There's currently deployed Opstec on top of rollkit which posts data to sliced directly. So there you can deploy smart contracts, but there will also be application specific roll ups. And yeah, I mean, the vision that I think we will see play out more and more in the future is more these application specific rollups.
00:07:46.364 - 00:08:10.910, Speaker A: That's so interesting. But I mean, kind of going back to that idea, like the data availability layer, the sort of thing that Celestia is doing, do those roll ups need to also connect to any other chain to be able to exist in space, if you know what I mean? Right now it sounds like you could create an application. It will live on that roll up. But how does it touch anything else?
00:08:14.240 - 00:09:01.864, Speaker B: Again, there will be different ways. There will be sovereign roll apps, which will be their own chain, essentially, that directly posts data to Celestia. You can imagine like a Cosmos SDK app built on top of rollkit. And then you have your own chain. But there also will be, as I said, there will be also settlement hubs, also roll ups on top of Celestia that will fulfill the function that the settlement layer has on Ethereum as well, such that applications that are using that settlement layer can bridge directly. They can touch or interact with other rollups in its own kind of ecosystem very seamlessly and interoperate very seamlessly. The sovereign roll apps will, if they're using a committee, can use IBC.
00:09:01.864 - 00:09:15.188, Speaker B: If they're not, they will have to use some multi SIG or some other provider. There's a bunch of Bridging providers that are currently working on how to bridge between this heterogeneous set of roll ups.
00:09:15.304 - 00:09:35.750, Speaker A: It's almost like so in the Ethereum case, you see so much of like EVM and then EVM compatible, like EVM roll ups. But here it's like you've taken the different pieces of that underlying blockchain and then sort of sliced it. And so Celestia is the DA, but then you'll have another one that's settlement. And I don't know, is there anything else that you would need?
00:09:36.120 - 00:10:11.490, Speaker B: Yeah, I mean, you can have general purpose execution environment on top to have people deploy their smart contracts as they used to. And on that you could again have a different layer. Right. You can deploy a settlement contract for a layer on top as well. But I think what we will see is rather Celestia, several settlement hubs, and then a lot of application specific rollups. And these settlement hubs will kind of have their own ecosystems as well.
00:10:13.620 - 00:10:56.256, Speaker A: As you describe this, I can't help but remember or think about the Cosmos sort of model as well, which is like there is no central kind of point of truth. There's like lots of blockchains that are connected through IBC here. You're sort of slicing the blockchain differently. So it's like there's different groups that will have parts of proof of what's happening. And do you actually imagine something like a DA layer, an execution layer, settlement layer, being sort of connected? Would you almost have, like, a group which tends to work together? Or do you imagine these groups independently working with very different partners, like almost branching? I don't know. I don't know if I'm doing a good input there.
00:10:56.278 - 00:11:25.332, Speaker B: But I think there will be, like, clusters of chains interacting with each other, essentially. There will also be other ecosystems, obviously will continue to exist as well. Right. So there will be a larger blockchain ecosystem where rollups talk to each other, and other ecosystems that are not using Celestia also talk with Celestia or Celestia roll ups.
00:11:25.396 - 00:11:52.672, Speaker A: Cool. Can you tell me a little bit about those other projects? If someone's using Roll Kit, creating a settlement layer as their thing, is this a partner? Are you doing this also in house? Or would you like yeah, I'm just kind of curious. Is Celestia purely focused on the DA or does it help with the other stuff? Because it's a very distinct vision that I guess you need to kind of champion a little bit.
00:11:52.806 - 00:12:14.536, Speaker B: Yeah. When we started, there was no roll up framework whatsoever, right. So we had to build one at least or start one in house. Today, there's many options. There's like sovereign SDK there's opstack. But when we started, there was nothing. So we started building Roll Kit, what is called Rollkit today.
00:12:14.536 - 00:12:58.424, Speaker B: Back then it was called Optimint because basically what it is, it takes all the abstractions that Tenement provides, but it strips away the consensus. So it's like an ABCI app. You can build ABCI apps as you're used to with the Cosmos SDK. Or if you're familiar with ABCI, you can continue using exactly the same paradigm. But under the hood, it uses Celestia for data availability. So that we built in house. It's on purpose that it has its own branding and its own GitHub organization because we want to be as neutral as possible and eventually this might be spun out and built by a different project or team.
00:12:58.542 - 00:13:23.088, Speaker A: Let's talk about data availability and why you kind of mentioned you strip out consensus. So it's also doing consensus, like for the blockchain, for the whole kind of ecostia. Yes, Celestia. Yeah, but what's the connection then of consensus and data availability? I've actually been a little bit confused about that because I'm like, why don't you just say consensus then? Yeah, well, is it only like a flavor of consensus that you're doing?
00:13:23.174 - 00:14:15.116, Speaker B: I mean, you could argue that any layer one provides data availability, right, automatically. But what we mean by data availability layer is you somehow guarantee that the data was published. Right. How it usually works in other chains is like full nodes download the data and ensure that it is published by doing this. And in celestial's case, there's like this technique called erasure coding employed, which makes it possible that nodes can sample small chunks and with that ensure that the whole block has been published such that these roll ups, these application specific roll ups can only download the portion of the data that they care about, so they don't have to download the whole block as it's like. Usually if you verify layer one, they.
00:14:15.138 - 00:14:16.512, Speaker A: Have to download have all of it.
00:14:16.566 - 00:14:16.880, Speaker B: Exactly.
00:14:16.950 - 00:14:24.048, Speaker A: Are these light clients, would you call what these modes are sort of light client like, except that they do the sampling?
00:14:24.144 - 00:14:41.780, Speaker B: Yeah, I mean, they are classical tenement light clients, essentially that are augmented by the functionality of doing like they additionally do data availability sampling. And with that gain probabilistic almost 100% certainty that the whole block has been published.
00:14:41.860 - 00:14:50.348, Speaker A: You mentioned earlier the developer creating the roll up would put a Blob, is that what you called it?
00:14:50.354 - 00:14:50.716, Speaker B: Yeah.
00:14:50.818 - 00:15:02.816, Speaker A: So is that sort of the equivalent of what the EVM sort of the ZK roll ups on the Ethereum case are like posting to chain, just whatever that is? Or is it different?
00:15:02.918 - 00:15:34.260, Speaker B: I mean, there's also, I think, like two roughly without going to detail, but like roughly two configurations, how ZK rolls work. Is this validium method that only posts the proofs onto Ethereum and the data to a Data Availability Committee or to some data layer? So Celestia is more like the Data Availability Committee, but as proof of stake chain.
00:15:34.420 - 00:15:42.052, Speaker A: But do you imagine with roll kit, are the types of roll ups being created ZK roll ups?
00:15:42.196 - 00:15:44.088, Speaker B: They could be, I think.
00:15:44.254 - 00:15:50.860, Speaker A: Where then does the proofs go? Would you need a separate environment to post the proofs? If there were ZK roll ups?
00:15:51.520 - 00:15:54.540, Speaker B: If there were ZK roll ups.
00:15:57.600 - 00:16:02.592, Speaker A: And it was we're saying not the validium type, but the the other type of roll up.
00:16:02.646 - 00:16:21.116, Speaker B: Yeah, I mean, again, it kind of depends. If the ZK roll ups use a settlement layer, they would post their proofs on the settlement layer. If they're not, the proofs could also be dispersed on the peer to peer layer or amongst full nodes amongst Light clients as well. So it kind of depends.
00:16:21.168 - 00:16:32.364, Speaker A: Again, when you mentioned, though, I want to go back to the Light client topic. So who runs is it the roll ups themselves? Is there like a Light client on the roll up or is there a Light client on the Celestia side? For the roll up?
00:16:32.402 - 00:17:01.204, Speaker B: For the roll up, yeah, that's only on the roll up. Celestia does not run the roll up. Light client got it. Celestia just runs like the consensus and it's the roll up sequencers or the roll up infrastructure to ensure that the data has been posted to Celestia. They run a Celestia lite client essentially that's doing sampling. That's doing sampling and also you verify the commitment to the data on Celestia. That's why you need the header as well.
00:17:01.204 - 00:17:21.092, Speaker B: And the data availability header. The way we implement Rocket is also more general. Like we're not implementing it that it can only be used with Celestia. It's also general purpose. I think the Rocket team not too long ago was the first team that used Bitcoin for data availability, essentially.
00:17:21.236 - 00:17:22.910, Speaker A: So how did they do that though?
00:17:24.160 - 00:17:49.620, Speaker B: The very basic idea is there was an upgrade to Bitcoin that made it cheaper to post data directly to Bitcoin. And then instead of using Celestia as a data availability layer, they use Bitcoin as a data availability layer using roll kit and post the blocks directly to Bitcoin without sampling. But you have to download the whole block and everything. It doesn't have all the benefits, but still is more general purpose.
00:17:50.520 - 00:18:15.372, Speaker A: That's cool. I actually want to ask you about that because working right now in the space you're creating open source software rulekit. The example you just gave is not even for a Celestia case. But how do you approach that? Are you trying to also just create a little bit more of the vision? You have to create the tools to be able to work with your system, but those tools could also be used with other systems. And you're cool with that?
00:18:15.426 - 00:18:37.552, Speaker B: Yeah, absolutely. I think it's important that it's not called modularism, not maximalism as a meme only. It's what we believe in and I think, yeah, we need this infrastructure as necessary anyways. And if other teams use it or fork it and modify it, I think it will benefit everyone anyways.
00:18:37.616 - 00:18:54.212, Speaker A: Nice. I know that your background had been a bit more in Cosmos and you sort of like hinted at IBC stuff. Everything we've described I think, still lives primarily within the celestial world. But how are you seeing Bridging or any sort of connection point to other networks?
00:18:54.356 - 00:19:11.916, Speaker B: I think initially for the celestial ecosystem, we mostly see more XLR like systems or like multi six Bridging between roll ups just because it's there, it's there. It will be immediately available and you.
00:19:11.938 - 00:19:20.768, Speaker A: Did say when you said the execution layer as potentially a roll up, would you have a roll up that acts as like the swap spot or something?
00:19:20.854 - 00:19:21.376, Speaker B: Could be.
00:19:21.478 - 00:19:23.200, Speaker A: You could have like a Dex roll up.
00:19:23.270 - 00:19:23.600, Speaker B: Yes.
00:19:23.670 - 00:19:25.424, Speaker A: Or a bridge roll up.
00:19:25.462 - 00:19:33.856, Speaker B: Yeah. So it would make sense to mix this with like a settlement hub, right? Like, you have a market maker, you have a Dex and a settlement hub.
00:19:33.888 - 00:19:52.216, Speaker A: I see. So those are two different things. The settlement hub is just to take note of what is out there. But you do some sort of bridge roll up. But then you also mentioned Axelr, they have their own validator set. Do each of these roll ups, are they supposed to have validator sets, too, the roll ups?
00:19:52.248 - 00:20:21.700, Speaker B: They don't have to they could it doesn't make sense for them to have a huge validator set with doing its own consensus because you can use the celestial one. Right, but they could. I think the roll ups most likely will be like a committee, but it is not trusted necessarily. Right? Like it could be trust minimized in the sense that that committee is not relied on for state validity.
00:20:22.120 - 00:20:50.136, Speaker A: Do you notice that there's all these ecosystems that seem to be converging on? I love it as you describe this, I think about the Cosmos Hub's move for shared security or Ethereum and rolloffs. But it's that idea that you start to share the validator set at the bottom in the center and that security that it can garner is then used by these other things applications. Or do you see it as quite different for Celestia?
00:20:50.168 - 00:21:14.384, Speaker B: It's quite different, right. Like the validator set of Celestia does not need to have overlap with the sequencers or validators of rollups. It's different than interchange security with this, like interchange security guarantees is more similar to what polkadot does in some sense, because basically the validator set of the main chain is shared across other chains.
00:21:14.432 - 00:21:15.892, Speaker A: Actually validating the other stuff.
00:21:15.946 - 00:21:33.612, Speaker B: Also, the state it has to execute the transactions. And that's quite different in Celestia because here you just get the guarantee data has been ordered and published. That's quite different. And the guarantee that the execution is actually valid happens on the layer above again.
00:21:33.746 - 00:21:47.872, Speaker A: So then would you also say then, like, Ethereum, Cosmos Hub and Polkadot are all sort of because they're all validating execution, like they're validating those three things that we had talked about settlement. Well, yeah, right.
00:21:48.006 - 00:22:26.404, Speaker B: I think I mean, in Ethereum, it is a bit more lightweight in the sense that it can be used as a settlement layer and then the settlement layer only validates the proofs or certain disputes. It doesn't have to be the case that the Ethereum validator set has to validate actively the whole chain of the rollups on top of Ethereum, which is the case in interchange security and somewhat the case in Polkadot, where it's only a subset right. Like they get randomly chosen to validate the parachain.
00:22:26.532 - 00:22:34.572, Speaker A: I want to talk a little bit about the Celestia validator world because I'm going to say the ZK Validator is a validator. It's going to be a validator on Celestia.
00:22:34.636 - 00:22:35.152, Speaker B: Awesome.
00:22:35.286 - 00:22:48.660, Speaker A: But yeah. Tell me a little bit about what that's like to put together. I don't know how much you were part of that. I know often there's like a team that's dedicated, but yeah. Tell me a bit about bringing together that community who are the validators to bootstrap that community.
00:22:48.730 - 00:23:25.772, Speaker B: We launched a lot of testnets, right. Like, early from DevNet. I think it's like almost two years ago already, the first testnet, DevNet, which we opened to the public that started basically that early community. And then I think what will direct the mainnet validator set will be the last one, which is the incentivized testnet called Block Space Race. So basically the winners of the Block Space Race will be the validators in the Genesis file.
00:23:25.916 - 00:23:26.880, Speaker A: The one that just happened.
00:23:26.950 - 00:23:27.664, Speaker B: Yes. Cool.
00:23:27.782 - 00:23:28.610, Speaker A: We actually.
00:23:32.180 - 00:23:39.300, Speaker B: And then, I mean, it's a public network, so it's unclear how it will develop, but that's the initial set.
00:23:39.370 - 00:23:55.256, Speaker A: Cool. Okay. I think we should kind of continue on that sort of thread of the roadmap and what's coming. So we've talked a bit about validators, but there's probably so much more. What is it to launch Celestia? What is the launch process? Because you're getting close.
00:23:55.358 - 00:23:56.472, Speaker B: Yeah, we're getting pretty close.
00:23:56.526 - 00:23:58.136, Speaker A: Will it be 2023?
00:23:58.318 - 00:23:58.712, Speaker B: Yes.
00:23:58.766 - 00:24:13.872, Speaker A: Okay. I'm pretty sure we're doing this in July, so you still have quite a few months. Okay. So tell me yeah. What's ahead or what's, like, short term ahead? What are the next steps? You have the validator set somewhat defined. What do you still need to do?
00:24:13.926 - 00:24:55.916, Speaker B: I mean, there's still bug fixes, like what we doing with the separation of the consensus and the data network as well. Right. That's also two teams working, and their software is also two different repositories, and one team is doing an internal audit as well as an external audit. So there's like, bugs bubling up and need to be fixed. And the node software itself, we're not doing an external audit, but we're finishing because this has not been done before. There's no other project doing data availability sampling. We're going to launch a minimal viable version of that, basically.
00:24:55.916 - 00:25:10.048, Speaker B: Right. We'll have data availability sampling, working, block sync and bad encoding, fraud proofs, and block reconstruction. So we're basically finishing the last 5% of that.
00:25:10.134 - 00:25:10.770, Speaker A: Wow.
00:25:11.220 - 00:25:14.930, Speaker B: Once that's ready, we're going to launch, basically.
00:25:15.380 - 00:25:17.620, Speaker A: Is this the first time you've launched a blockchain?
00:25:18.040 - 00:25:20.950, Speaker B: No, I've been part of the team that launched the.
00:25:22.920 - 00:25:33.320, Speaker A: I mean, that was that was one of the first it wasn't the first, but I know it was one of the first proof of stake networks, and it was also one of the first to do maybe it was the first to do the incentivized testnet. Model.
00:25:33.390 - 00:25:50.300, Speaker B: Yes. I think Zaki introduced was it called Game of Zones back then, right? Yeah. It makes a lot of sense for me to do, like, incentivized testnets and I think what's being copied now in the whole space.
00:25:50.450 - 00:25:59.840, Speaker A: So you do have some sense of what to expect in terms of how things roll out? Yes, but yeah, tell me a little, like, are you excited, are you nervous?
00:26:00.260 - 00:26:33.144, Speaker B: Both I would lie I'm very calm and it's just exciting because the thing is it has not been done before in that way. Right. I'm very confident and familiar with the consensus layer because it's just another ten m and chain. Right. But the whole data layer and all the roll apps on top of it, it's not been done before, so it's of course it's very exciting, but yeah.
00:26:33.182 - 00:26:37.452, Speaker A: How do you launch then? Actually, now that you mention it? So you start with just the L1?
00:26:37.506 - 00:26:37.724, Speaker B: Yes.
00:26:37.762 - 00:26:49.312, Speaker A: That part you're not worried about? No, because that'll just be like yeah, but it won't be connected to anything. There's no risk. It's just sort of like doing would you have like empty blocks then?
00:26:49.366 - 00:27:02.164, Speaker B: Yeah, initially, probably there will be activity in the sense that people will experiment with pay for Blobs and also the whole proof of stake logic also will generate transactions and stuff.
00:27:02.362 - 00:27:05.910, Speaker A: And then what's next? So then you tap a few.
00:27:06.300 - 00:27:25.864, Speaker B: I think it's not us that will do the ecosystem and the community will launch the projects on top. Right. It's like on Ethereum more or less where Ethereum was launched, and then people started writing smart contracts and deploying on top of Ethereum. So it's more like that than us launching chains on top directly.
00:27:25.912 - 00:27:43.812, Speaker A: But do you have any partners or any groups that you already work with that you think, you know, they're already building these things? And I imagine you put out a little bit of a call for like, we might need a settlement layer, we might need these other things. Do you know any of those teams? Can you share who they are?
00:27:43.866 - 00:28:37.952, Speaker B: Yeah, I mean, there's actually a lot already going on for a pre launch project. It's quite amazing to see last modular summit. Everything was still very early and there was very few teams actually working on very base layer infrastructure now. There's actually applications and there's like a few games. There is a team that's building basically an Opstack, and there's a team on top of that as like, make it possible to deploy your roll up via one click solution. There's teams like Barrachain that is launching like an EVM settlement layer, and there's also Dimension that has the same. So there's more and more like infrastructure, but also applications like games and DeFi and so on and so forth.
00:28:38.016 - 00:29:08.750, Speaker A: I actually want to talk to you about that. Like the infrastructure period. We're still in it. This is infrastructure. We've spent the last five years at least working on this, do you think? It's at a state. And I'm not only talking about Celestia here, I'm actually talking about generally where there maybe should be a shift in focus more towards those applications that users need. Very leading question I just gave you.
00:29:09.120 - 00:30:03.856, Speaker B: I think we are not fully there yet, to be honest. I think there's still need for further infrastructure, especially in the Celestia case. There still needs to be a few layers being built until application developers will have a very good time building. And the goal is that application developers can deploy their roll up or their own application chains, easier as it is today to deploy like a smart contract, essentially. Right, that would be ideal and I think we will get there, but it will take a little bit of time again. And then I think yes, I completely agree, there should be a shift to end user applications and end user usability. And I think before that, though, to wrap up that infrastructure, we need a focus on developer usability as well.
00:30:03.856 - 00:30:17.140, Speaker B: Before that. Right. And then in parallel or at the end, we need to focus a lot more on end user usability as well because it's still too difficult to use any of the stack, in my opinion.
00:30:17.640 - 00:30:37.888, Speaker A: As you're describing this. I'm wondering each of the roll ups in terms of language that a developer could use, do you have to use a certain language within a roll up? I feel like you can't put any language in there. You can just write JavaScript. You could isn't there like issues with that? You need a certain kind of language.
00:30:38.004 - 00:30:53.516, Speaker B: Yeah, it's less about the language, but about the execution environment. Right. If someone provides a VM that supports a subset of JavaScript, or this Agoric for instance.
00:30:53.548 - 00:30:55.580, Speaker A: Right, hardened JS.
00:30:55.660 - 00:31:20.996, Speaker B: Yeah, exactly. And I think this hardened JS, you could deploy that as a roll up on top of Celestia and then people could deploy their smart contracts in JavaScript as well. So it's not really the language. As long as you have a VM or a framework like the Cosmos SDK or something that can interact, where you have a framework where you can build your application, essentially.
00:31:21.108 - 00:31:25.796, Speaker A: Very cool. Well, I want to say thank you so much for this wonderful interview.
00:31:25.908 - 00:31:31.252, Speaker B: Thank you for having me again. And it's an honor that you're doing the modular radio.
00:31:31.316 - 00:31:32.744, Speaker A: Yeah, it's so cool to do it.
00:31:32.782 - 00:31:33.288, Speaker B: Thank you.
00:31:33.374 - 00:31:35.940, Speaker A: So yeah, and thanks for watching. Thanks. Bye.
