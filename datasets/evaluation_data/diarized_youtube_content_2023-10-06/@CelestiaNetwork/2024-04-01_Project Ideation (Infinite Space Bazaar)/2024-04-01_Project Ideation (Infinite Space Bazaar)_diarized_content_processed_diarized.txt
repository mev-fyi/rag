00:00:00.080 - 00:00:18.734, Speaker A: Oh, let's talk about the worst idea possible. That's actually a very effective strategy where instead of, like, think about it from brainstorming. All right, let's think of a solution. No, you invert the process. Let's think about the worst possible solution. And the reason you want to do.
00:00:18.774 - 00:00:21.390, Speaker B: That is a lot of time when.
00:00:21.422 - 00:00:29.744, Speaker A: You are in a brainstorming environment, a lot of times people try to overthink what is the best idea. And the idea, like here in this.
00:00:29.784 - 00:00:32.664, Speaker B: Process, you're not, you're not should be.
00:00:32.704 - 00:01:00.960, Speaker A: You shouldn't be worried about thinking of the best idea, but you have to generate ideas. Now, if you find yourself blocked on brainstorming, you can work in inverse, which is the worst possible idea strategy. And this has actually allowed you to relax and boost your confidence because you know that the idea that you're proposing is bad, but because there's no pressure, you're working in the inverse kind of relationship. It's actually much better and more creative because you come up with the worst.
00:01:00.992 - 00:01:03.144, Speaker B: Possibility, you write it down, and then.
00:01:03.184 - 00:01:23.084, Speaker A: You start working inversely from there. And how do I improve it? Slowly until it becomes a feasible idea? And there's a lot of different ways that you can do it. The worst possible idea. Yeah. And let's talk about the process. You know, you can come up with many bad ideas that you can and list why they're terrible ideas. It's very important.
00:01:23.084 - 00:01:25.480, Speaker A: There are properties, if you can list.
00:01:25.512 - 00:01:26.284, Speaker B: Them out.
00:01:28.194 - 00:01:39.394, Speaker A: And then list what makes the worst of these so very bad. So you define why the properties of your ideas are bad. Now pick those properties and what makes them so very bad from the worst.
00:01:39.434 - 00:01:43.018, Speaker B: Of these properties, and then you can.
00:01:43.066 - 00:01:49.938, Speaker A: Search for the opposite of the worst attribute. So you have one property for your idea that's like the worst kind of attribute.
00:01:50.026 - 00:01:51.654, Speaker B: What is the opposite of that?
00:01:52.534 - 00:02:05.886, Speaker A: You can consider substituting something else in for the worst attractive. Like, you know, you can mix, and then you can see mix and match all these terrible different kind of properties of an idea until you come up with something that is useful.
00:02:06.030 - 00:02:06.598, Speaker B: Right?
00:02:06.726 - 00:02:31.080, Speaker A: So that is one strategy and one technique. You know, this is like the process for it. It's like the reverse of brainstorming. There are no templates, but we'll cover. Now, the third one, I like this one a lot. Because scamper doesn't necessarily only help for ideation. It can also be used for creative thinking and for debugging.
00:02:31.080 - 00:03:22.428, Speaker A: Now, if you're a hacker, I would recommend looking at scamper like, if you're stuck on something. Scamper can be a really good way to debug where you test all your assumptions. You try to find everything that could have gone wrong in a brainstorming or debugging process, and you can use this scamper method to just help you debug something. Now, scamper stands for substitute, combine, adapt, modify, put to another use, eliminate, and reverse. Let's start with s substitute. You have a proposal in mind now, or you have an existing proposal. What happened if you substitute one property of that proposal idea for another thing? This allowed you to mix a lot of things by, you know, substituting different properties.
00:03:22.428 - 00:03:30.344, Speaker A: Like, um, you can think of it like, for substitution. You can think about it like.
00:03:32.484 - 00:03:35.316, Speaker B: What if I. I don't know if I.
00:03:35.340 - 00:03:53.966, Speaker A: Created an iPhone app that works on Mac, like, natively, but that's like. Like a simple solution. You should definitely check out more about scamper but online to learn more about that. But then if you go to combine, combine is like, okay, how do I. What if I combine this property with.
00:03:53.990 - 00:03:58.994, Speaker B: Another property I haven't thought about? Right? Like.
00:04:01.494 - 00:04:07.108, Speaker A: What if I combine this integration with another integration I haven't thought about?
00:04:07.196 - 00:04:07.824, Speaker B: Right?
00:04:08.724 - 00:04:39.716, Speaker A: Adapt is how do I adapt to a new situation? Adapting, whether it's my branding, it's adapting my adapting, my current implementation. If I'm building an application, how do I adapt it? Let's say there's a new feature, opcode or precompiles in solidity. How do I adapt my existing application to leverage that? That way you can be ahead of the game. Modify allows you to modify something that.
00:04:39.740 - 00:04:43.044, Speaker B: You have that exists and modify it.
00:04:43.084 - 00:04:58.676, Speaker A: For different kind of target. One good example for modify would be if you remember the history of, let's say, Netflix. They were like direct to DVD order kind of business. And they realized with the rise of.
00:04:58.700 - 00:05:01.576, Speaker B: YouTube that people like to stream a lot.
00:05:01.680 - 00:05:54.454, Speaker A: So Netflix modified their strategy to feature more streaming as part of. And now streaming is like, taking over. And Netflix became really successful. One other thing you can do with the P is put to another use. So you have a pro, you know, you have a feature, you have a thing like your application, your idea. What if you put it to another use? Then the initial assumption that you had, how would that look like to put to another use? So moving that property or moving that idea or proposal and putting it to maybe a new target market, a new target audience, like maybe you're. Maybe you built something like an NFT marketplace, and your initial target were people who are not artists, but then you focus something that is more like artists first and stuff that could be something that you can put it to another use.
00:05:54.534 - 00:05:56.694, Speaker B: Now, eliminate is really helpful.
00:05:56.734 - 00:06:05.694, Speaker A: What if I eliminate that property? What happens to the project? Yeah, so, Sammy. Yeah. The workshop is recorded.
00:06:05.734 - 00:06:06.354, Speaker B: Yeah.
00:06:07.574 - 00:06:19.434, Speaker A: So if I eliminate, I'm removing one element of my idea and see what happens. So elimination can sometimes makes it better. And how do you focus on problem solving?
00:06:20.374 - 00:06:25.454, Speaker B: Reverse, finally, is, what if I reverse that property?
00:06:25.534 - 00:06:33.994, Speaker A: What if instead of you flip the script on it, it's moving, it's like, you know, reverse it so it goes in a different direction? What if instead of.
00:06:36.294 - 00:06:37.102, Speaker B: Instead of like.
00:06:37.158 - 00:06:38.846, Speaker A: The prop, like, you know, like your.
00:06:38.910 - 00:06:43.710, Speaker B: Let'S say your idea is I like.
00:06:43.742 - 00:07:31.112, Speaker A: Maybe I want to create a roll up on top of settled on ethereum and then writes Celestia da. What if the reverse of that is? What if I create a sovereign roll up? Or what if I have a sovereign roll up and instead I want to create roll up that settled on solicitor. So looking at a problem like reverse allowed you to reverse things? I'm going to share the slide, I swear, after. And you have a lot of templates for all these workshops, techniques like scamper. So there's other ideation techniques that are not covered that might be helpful. There's analogies. So oftentimes, me personally, I like to work with analogy a lot because it helps me frame a problem much better by comparing it to something that I understand fully.
00:07:31.112 - 00:07:43.900, Speaker A: Like analogies. Right? So, like, my favorite kind of analogy on understanding what ZK technology was is how do you like, you know, one analogy was like using finding Waldo.
00:07:44.032 - 00:07:45.184, Speaker B: Where's Waldo?
00:07:45.484 - 00:07:56.396, Speaker A: And it was basically ZK. You can think of ZK as proving that Waldo exists in a photo without knowing where Waldo is.
00:07:56.540 - 00:07:57.580, Speaker B: And that is one of my favorite.
00:07:57.612 - 00:08:48.478, Speaker A: Analogies because it helped me understand that, okay, I can prove that Waldo exists even if I don't know where Waldo is. And that's like a way to use analogy. Crowdstorming can be effective where you can talk to your community about gather more kind of brainstorming, but, you know, feedback from your community for different ideas. You can do storyboarding, which allows you to create kind of like sketching and stories and diagram to help you map out your ideas better. There's mind mapping, which is kind of like sketching, but you're not focused on more like illustration, but more like just the idea. Mapping the idea as statements under sketching as well, which is kind of like storyboarding, but you're just, you know, sketching out how you can implement your idea. And then challenging assumptions where it can be really effective.
00:08:48.478 - 00:08:49.646, Speaker A: If you want to think about it.
00:08:49.670 - 00:08:53.910, Speaker B: From first principles, where if a statement.
00:08:53.982 - 00:08:56.110, Speaker A: Is through and nobody has ever contested.
00:08:56.142 - 00:08:58.822, Speaker B: It, that is the ground for you.
00:08:58.838 - 00:09:00.502, Speaker A: To challenge that kind of subject.
00:09:00.638 - 00:09:01.314, Speaker B: Right.
00:09:01.694 - 00:09:14.710, Speaker A: One good example of that is if you think about how Elon Musk and Tesla like, you know, and space act like the success of them had been a lot about first principle think, you know, first order principle thinking and challenging.
00:09:14.742 - 00:09:25.074, Speaker B: Assumption, where according to them, their only limitation, the only law that they focus on is the laws of physics.
00:09:25.734 - 00:09:49.354, Speaker A: Everything else is an assumption, a recommendation. And, you know, that's their guiding principle and that's what allowed them to do first principle thinking. I have a link for the ideation resources. I'm going to, it's all going to be part of the slide that we're going to share after. Now let's talk about the hackathon wishlist. I'll try to pull it up here. You give me a second.
00:09:49.354 - 00:09:53.354, Speaker A: I'm just going to go over briefly.
00:09:58.654 - 00:09:59.474, Speaker B: Yep.
00:10:01.054 - 00:10:32.616, Speaker A: If I present share screen. All right, so here we have the hackathon maincrack ideas wishlist. So here we have Celestia's infinite space bazaar hackathon. You have a lot of resources here about the trailer. If you haven't registered for the application, feel free to do that. Information about the houses, the tracks and bounties. Judging criteria developer resources.
00:10:32.616 - 00:10:53.694, Speaker A: This is a public, um, one that we shared on the slack. Uh, sorry on the discord, but let's go over the wish list. So the first one is about to build whatever track, um, you can. Like, you know, there are several ideas. Like let's say if you want to do something in gaming, what if you develop and launch games, who will an asset or governed on chain.
00:10:54.034 - 00:10:54.562, Speaker B: Right.
00:10:54.658 - 00:11:50.340, Speaker A: Um, and this is really helpful. If you spin up your own roll up per game, it could be a, you know, like an l three roll up, an l two sovereign roll up. There's many different ways that you can do it for nfts. There's like proposals like NFT marketplaces, especially if you take advantage of various possibilities unlocked by the modular crack on chain rendering. Like if you mint the NFT on chain and you can render it on chain roll ups specifically for an artist and ephemeral auction roll ups, there's defi building DeFi application that are suited for high throughput block space, decentralized lending protocol across chain decks from the public good for develop on chain applications for funding public good. Kind of like GitHub sponsored or Patreon and then ZKML. If you can build any kind of thing in ZKML using the modular track, that would be really cool to see.
00:11:50.340 - 00:12:04.466, Speaker A: And let me know if you guys are doing that. Developer tooling. What if you can spin up your own indexer? Let's say I have a developer tooling allowing me to spin up my own indexer so I can index the blockchain into a local database. Or if I can, using command line.
00:12:04.530 - 00:12:07.786, Speaker B: Spin up my own wallet, having a.
00:12:07.810 - 00:13:06.522, Speaker A: Sequencer as a service mobile rest like client, we actually have a rust lite client, but maybe if you want to add features to it, and if you're a rust developer and you want to work on that, we can send you like share the rest client with you. And if you want to iterate on that, one cool thing is mobile first Dapp development. So if you have, if you're building a DaP that is mobile first, and you have an SDK for that, for the modular infrastructure, we'd love to see that transaction site to TIA cost converter. So if you like figuring out if I want to submit a blob, how much it's going to cost me in TIA, just like having it as a developer tooling would be really cool. Transaction backlog like estimated time to confirm estimated gas Grafana. There are tools to parse and retrieve, block data and display it for analysis. What if you can deploy a testnet for a specific execution layer? Like let's say you build a roll up, right? It could be maybe an EVM roll up, a custom wisdom roll up, et cetera.
00:13:06.522 - 00:13:40.474, Speaker A: And you provide a lot of tooling for that node API wrapper. So celestial node is your interface to the data variability layer, and we have it in Golang. But what if you have wrappers? I think there's already one in rust and there's an existing library in typescript that maybe you guys can build upon. And then there's Python. This actually is supposed to be node js, but yeah, I'm in typescript and Python IBC. We layered. What if you can work more, further enhance earnings for.
00:13:42.654 - 00:13:47.822, Speaker B: Celestia Foundry for rollups? I really like this one is if.
00:13:47.838 - 00:14:37.234, Speaker A: You ever played with foundry, which allows you to deploy a smart contract. What if you have a foundry simple CLI application that allows you to deploy a roll up? And it can be any kind of roll up, right? Decentralized web. If you can find a way to integrate IPFs, ENS or handshake Filecoin, that could be a proposal under core track. There's some ideas by Rutul who is one of the core celestial like original data square visualizer there's rush consensus node would be nice. Rust create a commitment kurtosis package and kurtosis is already one of the partners. There could be an address watcher, monitor an address and get notifications file uploader allows me to deploy any file uploaded.
00:14:38.214 - 00:14:40.394, Speaker B: As a blog to Celestia.
00:14:41.974 - 00:15:20.114, Speaker A: And then there's ideas by Connor which are a forum post like on the base layer summary to ZK prove the Celestia L one state machine creating a mobile app for the light node and wallet interactive data visualizer for celestial roll up for sovereign roll up liquidity style stablecoin based roll up with a built in Oracle making a roll up with a user facing app creating your own roll up chain ZK provable state machine with tower APCI wrap this along SVM and ABCI would be really interesting.
00:15:22.574 - 00:15:22.862, Speaker B: And.
00:15:22.878 - 00:16:29.116, Speaker A: There'S a few others. Now let's go to UX. So for the UX part, we want to see improved bridging user experience. So how do we improve bridging at the UX? Cross minting? If I want to mint cross chain creator tooling, so what if I want to do minting contract front end I will have a front end for minting contracts. Abstracting contract deployment away dynamic art deployers second key UX for games so that every game has a session key UX improvement to address fragmentation in modular architecture and something that is super important could be anything that if you use PWA which is progressive web application, if you ever looked at Fronttech, it uses PWA, that could be a lot of like this would help you qualify for the UX track. Now finally, community nfts for each house. We can provide assets and stuff if you want to create nfds and that could be around custom art, like maybe a citizenship card, just like the design of it.
00:16:29.116 - 00:17:07.264, Speaker A: Merck design for each house lore for each house. So if you want to add lore for a specific house, that qualifies you for the community track lore for the infinite space bazaar as a whole. If you want to reimagine the infinite space bazaar, this is like a community kind of collaboration around how do we want to define the infinite space bazaar? If you have a proposal for a meetup, we have the modular meetup program. So developer region with limited support would love to see that. And finally educational material in different languages. So these are like the tracks. Like the wish list for the tracks.
00:17:07.264 - 00:17:09.724, Speaker A: I'm going to go back to. Where am I?
00:17:12.204 - 00:17:16.220, Speaker B: Yeah, so, yeah, well you have to.
00:17:16.252 - 00:17:40.834, Speaker A: Go to, you probably have to go to the discord. Try to go to our discord. We have everything there. The door hacks, we'll just reserve it for submission portal. So definitely try to join us on the discord. To join the discord you have to sign up on type one from our website, bazaar dot celesta.org and that will give you access to the discord.
00:17:40.834 - 00:17:46.114, Speaker A: With that said, I'm going to leave it open for questions.
00:17:47.054 - 00:18:08.564, Speaker C: So first of all, thanks a lot for the presentation. I think it was very insightful and I hope a lot of developers going to benefit from this. So maybe let's give the audience some time to ask questions. But in the meanwhile, like the hackathon, overall duration is about one and a half months. What would you suggest? Like how much time should developers spend on their ideation?
00:18:09.904 - 00:18:42.524, Speaker A: You shouldn't be spending too long on ideation. You can like, honestly for a brainstorming session you could probably spend an hour or if you're a group of people, maybe like an hour, an hour and a half until you guys come up with an idea. And using the wish list and idea notion page to help inspire you more, maybe you have a different way of approaching it, but you shouldn't spend too long on an idea. If you're not sure about an idea. You, you can always like hit me up on the Discord channel server for the infinite space bazaar and we can talk about it more.
00:18:42.824 - 00:18:51.924, Speaker C: It sounds very good. And we also gonna include the notion on the Dorahex page so people can just click on it and see all the different suggestions.
00:18:52.544 - 00:18:55.124, Speaker A: Sounds good, sounds good.
00:18:56.464 - 00:19:14.704, Speaker C: Is there any questions from the audience? Maybe you could share a bit more about what are like common mistakes in terms of the ideation, like what could go wrong and how could people overcome those issues.
00:19:15.404 - 00:20:29.394, Speaker A: A lot of times people make the mistake of trying to find the best idea, which kind of takes them more time than implementation. And it's not about finding the best idea, but finding like something that is useful, that is impactful, that is so like one, one of my favorite ones so far is somebody talking about building like a UI for running a light node and tracking all the different light nodes around the world. And I like that because I mean, it's not, I mean yes, it's technically a bit complex, but it's as a concept, it's actually very useful for everyone, including me personally, because I would want to use that thing, you know, use that kind of platform. So stuff that can help solve a problem for the community, for the developers, even if, like, let's say you're trying to, maybe one you built, you're building a project and you realize that, man, I need a developer tooling for this project because it's going to help me, you know, build faster. And you build a developer tooling, that developer tooling can be useful for so many people and that could be a project on its own. So a lot of times, you know, the tool that you're using to help you get the job done can be the tool that help you succeed.
00:20:30.414 - 00:20:56.644, Speaker C: That sounds very good. So we're looking forward to seeing hackers building solutions that solve problems and make development easier and so forth. Yeah, like, if there's no more questions, I feel like we could wrap it up. And then please also join the Celestia discord, the infinite space discord. If you have any remarks, like if I. Or if you forgot to say anything now, you can.
00:20:57.904 - 00:21:13.864, Speaker A: So. No, I mean, like, the only thing is tomorrow we have the introduction to modularity workshops. So that will help you guys understand the modular blockchain thesis and stuff. So just keep an eye out for that and. Yeah, right.
00:21:13.904 - 00:21:42.644, Speaker C: So thanks a lot, yas, head of defraud from Celestia for joining us today and sharing a lot of insights about the ideation for your hackathon project. As yas just mentioned, tomorrow there's another workshop and a lot more in the upcoming weeks, so feel free to subscribe to us and join the next upcoming workshops. There's a lot of support on Discord, so also join the Celestia discord if you haven't done it. And yeah, once again, thanks so much for joining us today.
00:21:43.424 - 00:21:46.152, Speaker A: Thank you, Jan, for having me. Take care, everyone.
00:21:46.328 - 00:21:47.648, Speaker C: All right, thank you.
00:21:47.776 - 00:21:48.384, Speaker B: Take care. Bye.
