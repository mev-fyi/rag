00:00:00.090 - 00:00:00.302, Speaker A: Hello.
00:00:00.356 - 00:00:22.970, Speaker B: Hello. Welcome, everyone. Thanks for coming. I'm really excited about this Twitter space. I guess it's called X Spaces now. We're going to be talking about all things bitcoin and modularity and roll ups. And joining us today, we have Eric Wall from Taproot wizards, and we also have Orkun from Citrea.
00:00:22.970 - 00:00:50.170, Speaker B: And we should have Rob and Linus joining us later. I think he's running a little bit late, so hopefully he'll come in in due time. But we wanted to get started anyway. So why don't we start out with a bit of an introduction for our guests? Maybe give us a little background about you and why you are passionate about or interested in the topic of bitcoin roll ups and modularity.
00:00:50.770 - 00:00:52.462, Speaker A: Yeah. Shall I take it away?
00:00:52.596 - 00:00:53.086, Speaker B: Yes.
00:00:53.188 - 00:00:55.722, Speaker A: Eric, how are you doing today, by the nick?
00:00:55.786 - 00:00:56.400, Speaker C: Good.
00:00:57.010 - 00:00:59.440, Speaker B: I'm so stoked to be on with.
00:01:01.330 - 00:02:23.078, Speaker A: Yeah, I think it's super exciting. There's two big narratives sort of coming head on here. The first one, and I really think that this is quite incredible, that the data availability. We've been talking about this for years. I made predictions since 2022 that DA is going to become this big narrative unlock and that people are going to realize that for this elegant L2 construction that are called roll ups, the scalability limiter in most cases is bounded by how much DA you have, basically, how much data can your system access? Because we know, how do you generate these fraud proofs and validity proofs comes down to you as a user having access to data, and how secure are you that you're going to be having access to that data in? So, like, we've been predicting that DA was going to become a massive thing, but we didn't really know that that was the case until we've seen how successful the Celestia launch has been. And now Celestia is here, it's launched, and everyone's talking about Da. Everyone and their mother is basically launching a DA layer now.
00:02:23.078 - 00:03:00.034, Speaker A: And Celestia was the first one sort of really focus on that. I mean, I remember Celestia since the lazy ledger days. That's sort of how you flex these days. You know, that celestia used to be called lazy ledger. That's in group signal mechanism. And then we have this other narrative that's happening in parallel to this, which is that. So I think really what has happened is that Casey Rottermore found a way to turn arbitrary data into JPEGs on bitcoin.
00:03:00.034 - 00:04:02.860, Speaker A: And that turned out to be a slam dunk success. Massive hit. Everyone's doing it. We, of course, with taproot wizards love this idea because the reason that it's so interesting is not necessarily there's a bunch of interesting things culture wise that you can do with JPEGs. But the most interesting part here is that when people are fucking around with JPEGs on the mother chain, then it causes fees to go up and it exposes these realities about the scalability solutions that we thought worked. And the sort of overall sentiment for bitcoin is probably that people are coming to terms with lightning doesn't seem to function as well as we thought it would in a high fee environment. When people notice that it's very difficult and challenging and expensive to rebalance your channels when the L1 is congested, while that is happening in lightning, and you see these other L2 solutions built on Ethereum that don't have this challenge with.
00:04:02.860 - 00:04:58.566, Speaker A: You don't need to rebalance your roll up because there are no childs in a roll up. It's another type of L2 construction that's been completely unexplored and haven't been given the time of day in the bitcoin world. And I think this comes from basically that the bitcoiners saw how the Ethereum people were sort of how they were embarking on the l two journey initially. So you'd see white papers like plasma, and then they never really went anywhere. And you'd see state channel ideas being popularized by the Ethereum world. And then seeing how raiden, for example, just did an IcO for a token and then nothing really happened. And I think there was a point where you actually needed to use these raiden tokens to use the L2 solutions, and everything just seemed like it's going nowhere.
00:04:58.566 - 00:06:17.990, Speaker A: And then within the Ethereum research community, you of course had people understanding that actually roll ups do work. And the problems with these previous L2 constructions like plasma roll ups target their specific pain points, like the reason that they don't work with the Max exit problems and the data availability issues, and just has the exact solution to all those challenges. So in the Ethereum community since 2018 2019, it's been well known that roll ups actually do work. But it's taken until now for the bitcoin community to now that we're coming to terms with lightning not being a solution, you can see that there's like billions of dollars inside these Ethereum l two s, and they obviously did ship and there's a lot of excitement there. So we have these two things coming together that bitcoin is now understanding that there's another way to scale blockchains that we can take lessons from. And that in conjunction with the modular thesis that you can sort of pick and choose your execution environments and your DA layers and you can compose those together. It doesn't need to be like all that DA that you're looking for to get your scalability solution working.
00:06:17.990 - 00:06:55.840, Speaker A: Doesn't need to come from bitcoin, necessarily, depending on what your trust model appetite looks. So to sort of answer your question, my name is Eric Wall. I work with the Taproot wizard team, co founder of Taproot Wizards. I've also been involved in the bitcoin space and Ethereum space for a very long time. And what we're talking about here today is sort of a collapse of a bunch of different thesis and narratives that are all now here coming into sort of the eye of the. What do you call it? The eye of the tornado? The eye of the storm. Right.
00:06:55.840 - 00:06:59.150, Speaker A: Yes, I'll leave it there and pass it over to.
00:06:59.300 - 00:07:28.700, Speaker B: Yeah, yeah. That was a wonderful way to open up the space, Eric, because I think you touched on almost like so many of the topics that I want to get into things like taproot and the other scaling solutions that bitcoin has tried in the past and how they sort of contrast with roll ups as well as all the other themes around modularity, like data availability and stuff. So excited to dive deeper in a lot of those things that you mentioned. Orkun, why don't you jump in and give us an intro?
00:07:30.030 - 00:07:44.142, Speaker C: Yeah, sure. Hello again. Hello everyone. So I'm Orkun. I am the co founder and CEO of Chainway Labs, the company building Citra. Citre is the first VK roll up on. So, like, similar to Erica, I think.
00:07:44.142 - 00:08:44.580, Speaker C: I do think the same things with Ornos, we find a way to embed arbitrary data into bitcoin. And before ordinals, actually, we were a team working on ZK, but after ordinals we realized, okay, there is this huge potential that bitcoin can be used for a base layer for so many applications. Then, actually we merged these concepts together and started building the first sovereign ZK roll upon bitcoin a year ago. And back then, this was a cool idea that you can access all the meta protocols, all the things, but not liquidity, because it was only like pure da layers. There was no bridge on bitcoin after that. There's this BitVM paper came out from Robin and two or three days after we met with Eric and he said, to me, I remember I thought that one year ago, sovereignty Kerr ops on bitcoin was the coolest thing. But right now there is this bitm stuff, and we want to work on that.
00:08:44.580 - 00:09:01.610, Speaker C: And I think after a couple of weeks after that, we realized to build a breach using this bitrem stuff as well. So since then, we are building bitcoin's first Ethereum and building on bitcoin's liquidity and bringing modular to bitcoin.
00:09:03.870 - 00:09:47.470, Speaker B: Awesome. Well, we'll also talk about Bitvm. I hope Robin does end up joining, because obviously he's the author of the BitVM paper. I think there were a few different moments over the last year that have sort of increasingly sparked more and more interest in bitcoin rollups. I think Bitvm is definitely one of the biggest ones. So why don't we just dive into the fact that from my perspective, Eric, you touched on this, but the bitcoin community has been exploring sort of off chain scaling solutions for a long time. Like, none of this is really new, right? You have ideas like drive chains and lightning.
00:09:47.470 - 00:10:15.600, Speaker B: And I think even way back in the day, in the bitcoin forums, a lot of the OGs were discussing these different novel approaches to scale bitcoin that look, in a lot of ways, they have a lot of similarities to roll ups. What's different about roll ups versus these other approaches? And why are you guys much more excited about this?
00:10:17.810 - 00:10:22.894, Speaker A: Yeah, I can answer that. The way that I see it is.
00:10:22.932 - 00:10:23.520, Speaker C: That.
00:10:25.690 - 00:11:42.230, Speaker A: Basically, before serial knowledge proofs sort of became good enough for applications like blockchains, that you could verify serial knowledge proof on your laptop that could prove a complex computation. You only have to go back a couple of years, and it wasn't the case that serial knowledge proof really were feasible to run on consumer grade laptops. So you have basically an explosion in innovation in serial knowledge proof and applied cryptography, and you also have just fraud proofs in general. That sort of happened almost in the same moment in time. The idea that you could build optimistic roll ups using fraud proofs, those are relatively new ideas, even in the Ethereum world. These ideas came to the scene 2018, and then also having the full roll up construction where you put all the DA. So you don't get these fishermen attack scenarios where you can't access DA and you run into issues where an operator freezes and you can't unilaterally access your funds.
00:11:42.230 - 00:12:35.674, Speaker A: I mean, those innovations happened not that long ago, and in the bitcoin space, we needed to come up with scalability roadmaps before that. So in 2015, that's when the block size wars and the scalability wars started in bitcoin. And then bitcoin needed to come up with a scalability narrative, like how are we actually going to scale the system? And back in 2015, it wasn't that we could say, oh, we're just going to do fraud proofs and roll ups, and then that's how we're going to scale, because that solution didn't exist at that time. And similarly for serial knowledge roll ups, that technology was something that had been theorized in bitcoin forms, but it wasn't ready for consumer grade applications. It wasn't something that you could run on your own laptop. It was mostly just theory at that point, and most of the theory had been assisted at that point. So bitcoin had to come up with a scalability narrative.
00:12:35.674 - 00:14:36.530, Speaker A: And bitcoin explicitly, if you sort of think about the elders of bitcoin, sort of the Greg Max squelts, Andrew Polestrass and Peter Willis, the authors of Segwit and Taproot, which are our latest two softwares. In mean, if you put yourself in the shoes of those people that were supposed to come up with a vision for the future, back then, you really didn't have that many options. There were some ideas on how to build channel based scaling that Satoshi started playing around with payment channels back in 20 13, 20 09, 20 10. And then the elders of bitcoin basically had to decide now, well, do we just want to make the blocks larger and forget this whole idea that you're supposed to be able to validate a bitcoin block on your own full node and just makes the blocks bigger and basically centralized the blockchain validation so that only a few big mining pools or big corporations could be involved in that activity. I think back then it did make sense for the bitcoin developers to say, well, considering this option between channel based scaling, which is going to be complex, it's going to be hard work, and we don't know if we can work out all the kinks and the quirks of that, or we go and we just make the blocks bigger and we basically undermine the decentralization of the system. If you are now tasked with this monetary revolution, this monetary invention, you're going to probably choose and say, well, why don't we explore the safer path that doesn't undermine the decentralization of the protocol and see if we can get that working? So that's basically what they did. So 20 15, 20 16, 20, 17.
00:14:36.530 - 00:16:34.490, Speaker A: During those years, this sort of small blocker camp was cemented and the vision for bitcoin to scale through channel based scaling, that was basically the roadmap that was carved out. And then perhaps the accident that happened was that after the block size wars were won by the small blocker side in this war, then you had a very, very effective meme campaign and like a social campaign that needed to convince the rest of the crypto industry internally in the bitcoin space that this path for scaling was going to work and that it was going to be a slam dug success. And you started to do things like coming up with excuses and you started to focus more on narratives than you actually did on doing actual technology work. So many of the when we tied ourselves to the mast of this scaling based approach, it also shut down a lot of other conversations that could have happened in the periphery during that time. So to answer your question, the roll up paradigm scaling paradigm didn't exist at the time that bitcoin was in this sort of phase where it needed to pick a specific scalability path and convince people that the future of bitcoin was technologically solved and was just now an implementation detail and a market maturity challenge to get that thing ready. So it hasn't really been until now, when the system is getting stress tested, that even lightning developers themselves are looking at this thing and saying hey, maybe we haven't finished the technology homework here and maybe there's still frontiers left to be explored.
00:16:35.630 - 00:17:06.520, Speaker B: I see, yeah. So there was a lot of the big block debate and how all that went down and how that then informed the rest of the scaling roadmap and the attitude towards scaling was really relevant. And then it kind of became clear, I guess at some point that there were better solutions that had emerged, I guess, elsewhere and were relevant to bitcoin. And now that's sort of like filtering through. Is that sort of the right way to think about it?
00:17:08.010 - 00:17:09.720, Speaker A: Yeah, I'd say so.
00:17:10.650 - 00:18:20.154, Speaker C: I think several other points also besides what Eric said. So the technology was the thing, but back then I think most people were focused on how do we make payments better? And at that time this channel scaling like lightning should look better to those people. So they started implementing, but especially with Arnold, we see that people demanding bitcoin block space and they mostly demand to do programmable things, not just payments. Obviously trades on ornaments, marketplaces are payments, but people want to land their BTC, land their or no, or do this decentralized exchange swaps and channels are not enough for that and once people realize that our team, we think that okay, channels doesn't solve this, and also like drive chains, they stuck with merge mining, which is like too old idea. And right now we have zero knowledge proofs which are way more scalable and applicable to bitcoin also. And it solves the two way peg problem. So why not start with these? Yeah.
00:18:20.154 - 00:18:44.180, Speaker C: Technology was one of the important factors, but others is bitcoin kind of enabled this bitcoin economy itself with Ornos. And we realized that we need a fully VMs, like fully fledged VMs, like EVM or other VMs that you can actually build programs and run and enable this bitcoin finance, even though it is for just tokens or like NFTs, but the bitcoin native asset itself also.
00:18:45.690 - 00:19:49.820, Speaker B: Yeah, I think that aside from scalability, I think bitcoin going modular also seems to be a conversation about what bitcoin should be used for. Right. I think there's sort of like the bitcoin traditionalists who think that it should only be sovereign money. And any other use case, whether that's ordinals or even roll ups on top of bitcoin, are like a plague or a distraction from what people should focus on. So it seems to me that there's also sort of like a cultural element to this about it's not just about scaling bitcoin, but even adding new functionality and finding new uses for bitcoin, and enabling people in the bitcoin community to start doing all the other things that people in the Ethereum and the rest of crypto have been doing for a long time. Things like DeFi and NFTs and all these other emerging use cases. How much do you think this is a culture thing beyond just a technology thing?
00:19:52.670 - 00:21:18.486, Speaker A: Yeah, so I think that it's definitely probably mostly a culture thing at this point. I don't know how to explain it. I mean, I know the sequence of events that led us here, but from my perspective, Casey Rottermore, with this little trick, using the taproot upgrade to find a clean way to put in arbitrary data blobs into bitcoin. It's just like it opened a portal in the bitcoin culture, because now that you can put any arbitrary that you want inside a bitcoin without splitting it up over multiple inputs or multiple transactions, what we did at the Taproot Wizards team was that we took an entire bitcoin block and we filled it with one four megabyte JPeg that filled up an entire bitcoin block. When we did that this was one of the first few hundred inscriptions in bitcoin. But I think that really, I don't want to give myself too much credit here, but it did cast a spotlight within the bitcoin community to the point where they couldn't stop talking about these fucking JPEG people are filling up entire blocks now with JPeGs. And then they got so mad and they couldn't stop talking about that.
00:21:18.486 - 00:22:59.720, Speaker A: So it almost became like a funny thing where it became funny to use this possibility inside the protocol and regardless of what you did, you could guarantee that the entire bitcoin maximalist space would be up in their arms and talking about this and inadvertently giving a lot of attention and free marketing for the projects that wanted to engage in that activity. And then when we started to think about, okay, well, so what are we actually doing here? Are we just fucking around and trying to make bitcoin maximalists upset by putting JPEGs on the chain that they can stop? I think that there were some narrative points that actually had authenticity and legitimacy to them. And the idea that if you think about putting a JPEG on chain, why would someone actually do that? But it's not that stupid. If you go back and you look at old forum posts or old counterparty NFTs, and most of those NFTs that had web two links, you can't actually fetch those images and see what the JPEG was. So that part of bitcoin culture, when people were doing these NFTs on bitcoin, before ordinals existed with counterparty, we can't really see a lot of that art has just disappeared and it's died. And I think that this is one aspect of Ethereum nfts that some people think it's a bit cheap. Yeah, sure you can put an ipfs link, but IPFS is not like an automatic data replication system.
00:22:59.720 - 00:24:13.382, Speaker A: It's just a hash of an image that someone is hosting. So it doesn't give you better guarantees necessarily than like a web two link does. So there's a bunch of ipfs links that are gone too, that don't link anywhere anymore. This narrative that started to emerge within the bitcoin ordinal space was that, well, if you actually inscribe all that data inside the bitcoin network, then that JPEG image is always going to be available. And if you have an NFT that for some reason should be super valuable, maybe it's created by a super famous artist, or it represents a cultural moment in time, that it's a symbol for something. Why wouldn't you pay like a few hundred dollars or tens of bucks to make sure that that data gets embedded into the bitcoin network? So I think that that part of the story, the data availability part, was actually something that gave. That part is actually true that there is a use case for that and people haven't been doing NFTs in that way.
00:24:13.382 - 00:25:09.342, Speaker A: It is true that you can do NFTs like that. I know that there are some NFT projects that do put all the necessary data into the state of Ethereum. But at the same time, you have Ethereum in general. If you wanted to store your JPEG data in the same way that roll ups, for example, store their data on the Ethereum network, then the roadmap of Ethereum is going towards like history pruning. So if you look at this famous roadmap image by Vitalik, I think in the section called the splurge, you'll see, no, actually I think it's the purge. You'll see this history expiry thing on the roadmap, which means that the history of the blockchain of Ethereum that's older than one year will get purged. Like regular full nodes won't actually store that.
00:25:09.342 - 00:26:08.702, Speaker A: So you can't really think of Ethereum as a persistent place to store your data. And that is one thing that bitcoin has, that the whole design philosophy of bitcoin is that we're never going to make the blocks bigger than what is possible for a regular person to download on their laptop. So right now, the bitcoin blockchain grows by 200GB per year, and we're not going to increase that limit. So it's now unfeasible to even download the entirety of the blockchain. We're going to have to stick with how more ubiquitous is data becoming for regular people and regular users, and then sort of make sure that the block size limit isn't expanded beyond that. So that data that is accessible in bitcoin, you can actually think of it as a scarce resource. You can think of it like you're taking that scarce resource and you're taking those bytes out of the bitcoin blockchain that is scarce.
00:26:08.702 - 00:27:11.682, Speaker A: And you're molding them into artworks, you're molding them into music files, you're molding them into these things. I think that innovation or variant of doing NFTs kind of came at a time where nfts in general were also suffering from the prices were down. It's a bear market. People are looking at their stupid monkey pictures. And they're like, why did I spend generational wealth on this picture? And so NFTs really needed a new story, a new rebranding, and it just happened. The timing of that just happened, lined up so well with ordinals that bitcoin has, in a very legitimate way, in a serious way, started to onboard the entire NFT space. I think that an ordinal connection like Nodemonks right now is very close to flipping board apes.
00:27:11.682 - 00:27:59.350, Speaker A: So you have this new coming bitcoin projects that are competing in size and market share with the top Ethereum projects from the last cycle. And I think that also with bitcoin getting the ETF, bitcoin growing and becoming more relevant in society now that there are traditional financial instruments to invest in this, I think that a lot of people are thinking like, why aren't I building on bitcoin? Why am I not putting my project on the mother chain? If it is possible, why would you go for number two when the number one provides you with that access? So I think that is a big part of why this is happening now on bitcoin.
00:28:01.210 - 00:28:04.070, Speaker B: Absolutely. Or kooten. Do you have any thoughts?
00:28:05.690 - 00:28:06.866, Speaker A: No, not specifically.
00:28:06.898 - 00:28:11.100, Speaker C: I think I said already, but I generally agree with Eric's point.
00:28:13.070 - 00:29:22.830, Speaker B: Yeah, I think, at least for me, seeing ever since kind of ordinals came on the scene, I kind of had discounted bitcoin, I guess, from a technological perspective, and I really wasn't paying attention. And I thought all the innovation is going to be happening elsewhere. I mean, obviously I still believed in bitcoin sort of as digital gold and just sovereign money. But ever since ordinals and sort of the pickup of innovation in bitcoin, all of a sudden I'm like, wow, actually this is really interesting. And so what I'm trying to say is I think that modularity and starting to use bitcoin in different ways is also sucking, attracting new community members. It's not just sort of converting the existing one, it's also like drawing other people closer and making bitcoin more interesting. So anyway, I think I want to transition a little bit more to the technology aspect of this, because when I talk about bitcoin roll ups with some people, they kind of discount it saying that.
00:29:22.830 - 00:30:14.770, Speaker B: Or at least the existing roll ups, because they say, well, how much are these l two s or roll ups? Actually roll ups when bitcoin has very little DA throughput, it's really the wagyu of DA options because it's so scarce and it also has no settlement capabilities, at least not yet. I mean, obviously bitvm sort of showed a way to make this possible, but as far as I know, it's not yet live, especially not with any of the existing roll ups. To what extent are these existing roll ups real and what is the roadmap? Or what does bitcoin need to do in order to make itself more, I guess suitable, make itself more modular essentially to support these new emerging use cases?
00:30:15.830 - 00:30:58.926, Speaker C: I think the roll ups on bitcoin, to be honest, most of the teams that markets like their product as roll ups today, they are not building roll up, they are building side chains. But this is like hardware, so they are using it and raising money and ICO and stuff. I'm skipping that. But in a technical sense, roll up is a blockchain that uses the underlying blockchain's data available time, consensus. So even though it's like a sovereignty roll up on bitcoin, or uses BitVM or uses any other mechanism, I think we can call them real roll ups. Yes, the DA is very limited, but this doesn't affect the abilities. And settlement is not a, let's say prerequisite for being a roll up.
00:30:58.926 - 00:31:33.894, Speaker C: But what we actually know about roll ups is they kind of have this trust minimize or trust breach between the base there. This is still missing today. BTVM is completing this part in a way that BitVM is very generic virtual machine that you can build anything. But most of the teams will build bridges, including us. And right now we are working on it. So it will enable this bitcoin settlement in an optimistic way, similar to what arbitrum runs on Ethereum today. So it will also enable settlements so that we will have this trust minimized two way peg.
00:31:33.894 - 00:31:39.340, Speaker C: So I will say, yeah, if the product is actually exist, then bitcoin roll ups are real.
00:31:41.570 - 00:31:48.320, Speaker A: I think that we're currently existing in this terminology hell and I don't know.
00:31:50.290 - 00:31:51.840, Speaker C: That's definitely correct.
00:31:53.170 - 00:32:33.406, Speaker A: Let's talk about this terminology hell. Why it is so confusing and I don't know how we got into this situation. I don't know who to blame. I'm wondering if I helped cause this terminology hell myself. And now I'm sitting in this bed. I think probably the most problematic term that we have is the idea of a sovereign roll up. I think a sovereign roll up was, I mean, I think it started to sort of blow up when people were thinking about various forms of celestia roll ups and you have this idea of a sovereign roll up.
00:32:33.406 - 00:33:57.762, Speaker A: And in the celestia context, it makes a lot of sense, because with a sovereign roll up, it means that the execution logic of your chain can be an independent social community that can fork and change what is the underlying consensus of this network while you still have a more global consensus on the ordering of the data. So you can hard fork, you can soft fork irrespective of what other roll ups are doing. So you have this very well defined category that's called a sovereign roll up. It makes sense, right? But if you take that idea now and you say, I'm going to build a sovereign roll up on bitcoin using this block space that we just talked about that people were making JPeGs out of, and you say, well, I'm just going to take that data and I'm going to make a sovereign roll up on bitcoin. So doing that can potentially be a very cool idea because you can get a lot of the security benefits of bitcoin in terms of its data availability and its ordering. You can take that and you can create a strong, but, as you say, very limited roll up, and you can build that on bitcoin. And now, yes, the main constraint here is that you cannot bridge the bitcoin asset into that sovereign roll up in a trustless way.
00:33:57.762 - 00:35:04.866, Speaker A: But we can see that in the ordinal space there are a lot of people that are making new assets, right? So they're making ordinals nfts, they're making BRC 20 tokens, like semifungible tokens and fungible token standards. And that is turning into its own ecosystem. And if you want to do that on bitcoin, why don't you actually put it into a better execution environment? Like you could put, for example, the EVM there, but you could also put other VMs, like the Cairo VM. So you could access this tooling and infrastructure that has already been developed and built, and just use bitcoin as a DA layer, and then you can plug on any execution environment that you want. Okay, so that sovereign roll up idea now makes sense. But when you're now thinking about sovereign roll ups in this way on bitcoin, you also realize that, wait, if this is the terminology that we use, there's a bunch of things that actually classify as sovereign roll ups on bitcoin. The most common examples that people will bring up is Mastercoin.
00:35:04.866 - 00:36:22.066, Speaker A: So some people might not know it, but tether USDT used to be like all the USDT stablecoins actually used to be existing on bitcoin using something called the omnilayer and the omnilayer did exactly this. It embedded a bunch of arbitrary data into bitcoin transactions, and you had another system, another client that you double clicked and it ran and it interpreted the bitcoin blockchain in a different way than what a bitcoin core node would do. So it gave it other semantics, other rules, other meaning. You took that data and you created other meaning out of it. It still inherited a lot of parts from sort of the normal bitcoin stack, like how do you transfer an asset, how does a valid transaction look like? It reused much of the Utxo model of bitcoin and how keys work, but it basically created a fungible token standard protocol on top of bitcoin, and a non fungible token standard as well. So you had nfts. So the omnilayer was basically this, right? A way to have other tokens on top of bitcoin.
00:36:22.066 - 00:37:30.522, Speaker A: And using the terminology that we have today, a sovereign roll up, the omnilayer was exactly that. Right. And then there are other systems that we would also call sovereign roll ups on bitcoin today, actually ordinals themselves. The ORd client would also classify as a sovereign roll up on top of bitcoin. And inside of OrD, there's this BRC 20 protocol that describes how you can use the ordinal protocol to create json files that describe how a specific, like it would describe a specific semifungible token inside the ordinals protocol. That BRC 20 protocol that runs on top of the ordinals protocol is also a sovereign roll up on bitcoin. But even though this is potentially confusing, it is also 100% legitimate that sovereign roll ups and sovereign zk roll ups, if you do exactly what omnilayer did, or what Mastercoin or what BRC 20 are trying to do, if you do exactly that.
00:37:30.522 - 00:38:58.874, Speaker A: But instead of having one of the issues, for example, with the BRC 20 standard right now, is that it's actually extremely difficult for a regular person to run a BRC 20 node and figure out who has which token balance, because it uses this incredibly inefficient way to index the data inside the ordinal system to create different accounts and balances and keeping track of who owns what. It's super complex. So if you instead had a very elegant account model and you had zero knowledge proof, then you could build a very efficient system to keep track of who is transferring which tokens. So you can build very competitive protocols, sovereign protocols inside of bitcoin using the modern technology and CK circuits and this is basically, I think, yeah, Orkin, I'm going to pass over the ball to you here, but this was basically the starting point for Citrea and the chainway team. Right? Let's just build much better execution environments on top of bitcoin using the EVM and serial knowledge, proving that, using the best in class proving systems, and risk zero and graph 16 zk circuits. So that is a completely real thing. And according to the known terminology frameworks that we use in crypto, this would be a sovereign ZK roll up.
00:38:58.874 - 00:39:55.686, Speaker A: So that is a very real thing that exists, and it's a cool thing, and people should absolutely explore that design space. Now, the difficult thing that has happened now is that meanwhile, you can have a sovereign rollup, ZK roll up if you want. There's now this new invention that Orkin talked about, which is BitVM. And BitVM is a way to build an optimistic two way peg for the bitcoin asset to sort of get locked in a contract on the main chain and then unlock in the side chain environment. And then since it's a two way peg, it also means that you can bring it back from the side chain to the main chain. And the validity of these transfers. BitvM is the contract and the code that actually runs using the bitcoin script itself, the layer one scripting tools.
00:39:55.686 - 00:40:08.480, Speaker A: And if I needed to explain what Bitvm is for someone that maybe is new to this idea, the way that I would describe it, and bear with me, because this is the first time that I'm trying out this explanation. So we'll see how it works.
00:40:09.730 - 00:40:11.534, Speaker B: You can do it, Eric. We believe in you.
00:40:11.572 - 00:41:22.306, Speaker A: So imagine that you have a chessboard and you're trying to use the different pieces on the chessboard. You have a knight, you have a horse. And these pieces on the chessboards, they have these predefined ways that you can move, right? So you know, for example, that you have a pawn. You can only move crossways or forward, or you can do, like these two step jumps. So if you're thinking that I'm going to use this chessboard logic and I'm going to create a computer out of it, I'm going to create a turing complete computer out of the pieces of the chessboard by inventing a game for how the pieces can move. But you're only working with the knights and the pawns and the bishops on the chessboard and using the way that they can move around, you're going to run into some clunkiness reaching a turing complete stage using these tools at your disposal. If you're trying to do that with a chessboard, BitVM basically says, well, forget all the pieces that are on the chessboards.
00:41:22.306 - 00:42:48.930, Speaker A: Let's remove all of them and let's just use the pawns, because the pawns have this sort of binary aspect to them where they can only move forward or sideways. And if you think about a computer, a computer at its lowest instruction or its lowest computational ability, you basically have a logic gate that can take a zero and a one and decide if the output should be a one or a zero. So you have basically two incoming numbers, and then you're supposed to say, okay, so I have a zero and a zero. Should the output be a zero or a one? That's what logic gates do, and that's what the smallest component of a computer ultimately does. Like, we have these transistors and they do these extremely simple things, but if you just put on more layers in more context, you can actually reach turing complete computer at the end of it. So bitvm focus on this concept called Nand Gates. And because bitcoin has the ability to do a NAND gate computation, if you then apply the power of taproot trees and use these NAND gates that you can actually emulate through bitcoin script, then you can build a turing complete computer inside of bitcoin.
00:42:48.930 - 00:43:35.086, Speaker A: If the only thing that you're trying to do is prove that a computation was not executed correctly. So it basically tries to build a computer out of like white and black pebbles. And it uses bisection games. It uses logic gates essentially to prove that some type of computation was not executed correctly. So it carries some resembles to how optimistic roll ups work. It just does that at a much more primitive level. And that also means that it's much more complex to work with because you cannot invalidate a state transition with the full semantics of an EVM.
00:43:35.086 - 00:44:40.006, Speaker A: You have to do it at this super low level where you're checking, did this zero turn into a zero when it should have turned into a one? So that is sort of my high level description of what BitVM is. I'm sure that I sort of fucked the explanation up. I'd love for you, Orkin, to sort of attack that description and how you reason about that system. But the unblock here is that you're actually tapping into a turing complete computation on bitcoin, even if it requires lots of the main trade off here is that this game can only really be executed among the participants in the game. So imagine that this whole thing is like a state channel, and that dispute resolution game can only be played by the people that are in that state channel. That is basically what you can do with BitVM. So it allows you to build a type of two way peg for bitcoin, but it's not going to be accessible to anyone in the way that roll ups are.
00:44:40.006 - 00:45:37.240, Speaker A: So for example, in an optimistic roll up, anyone can is supposed to be able to deposit a bond and make a fraud proof and say that this state transition in the roll up. I'm going to post a fraud proof here. I'm going to show to the rest of the roll up participants that a computation, a state update happened incorrectly in the roll up. That is not possible in the BitVM paradigm because it's only accessible to the participants in a specific state channel. So there will be like a predefined multi sig of participants that now has the ability to play out a verification challenge game between each other. So we have some flavor of optimistic roll up. It's just that it's confined, that it's not something that can be unilaterally accessed by outside participants that are observing this game.
00:45:37.240 - 00:45:43.306, Speaker A: I'm going to pass it over to you, Orkin, if you want to sort of brush up that analogy in some way.
00:45:43.488 - 00:46:36.298, Speaker C: Yeah, I think most of your explanation was correct. Expect the one thing that get updated in between implementation. But yeah, very simply, there is this off chain computer, literally a computer running among a set of participants. And if any of them doesn't agree with the result, then it can go on chain and force the computer to reveal some points, very succinct points, so that it can make the claim incorrect or correct in terms of bitcoin's point of view. So this is very simple explanation. But besides you mentioned about NAND Gates and like one or zeros the current bitwim implementation, instead of depending NAND gates, it really depends on instructions. Like a computer instructions add, multiply, divide module like that.
00:46:36.298 - 00:47:31.318, Speaker C: Thanks to that, right now the trace length is much more smaller, which allows us to do much more with that. So this is the one update that I will add and the breach part. So people usually think that, okay, BitVM is here, BitVm is ready. Then we have this breach, magical breach, right? BitVM is simply, it's an optimistic computer, it enables breach, but it doesn't mean BitWm works as a breach for all the use cases and the security for all is the same. So we will open source our implementation this month and it requires much work to build the bridge, actually. So building BTM is a challenge, but building a bridge around is also another challenge because you have to deal with all these connector outputs. You already had these pre signatures coming from BitVM, but right now we have more pre signatures because of connector outputs.
00:47:31.318 - 00:47:48.820, Speaker C: And you need to enforce everything into BitVM program. So we had to, let's say, recursively verify everything in a single ZK proof. So the bridge work is also extremely hard to do besides the bitm implementation. And this will be the second thing I will add.
00:47:51.350 - 00:49:06.490, Speaker B: Well, there's a lot to sort of digest and summarize there. But I think to recap what you guys said, Eric, you started out talking about sovereign rollups and the fact that actually there have been roll ups. In fact, I think the first roll up ever developed and used was mastercoin was omnilayer on top of bitcoin. But I think at least the way I see it is that sovereign roll ups on top of bitcoin are not that interesting because a sovereign roll up is essentially just using the DA and consensus aspect of the underlying chain, which bitcoin does have very secure consensus, but the DA is quite limited and you're not using at all any of the settlement or tapping into the liquidity or the users in the community underneath. So I think the way that I see it is the settled roll ups on bitcoin and sort of innovation of BitVM to enable that is what makes these roll ups even more sort of compelling. And at least within BitVM, it sounds kind of like it is itself almost like a BitVM instance on bitcoin. It almost sounds like it is itself an optimistic roll up, essentially.
00:49:06.490 - 00:50:16.414, Speaker B: But then within that optimistic roll up with sort of like a limited amount of, you can't run the EVM or anything very sophisticated in BitVM. So instead what you do is you would run for example, Citrella, which could have EVM or some other roll up. And then those roll ups then post their proofs to settle into the BitvM roll up or an instance of BitvM on bitcoin. And so that way you end up sort of having, like you said, this two way peg. And that will enable the liquidity and users and community on bitcoin to sort of have a. I don't think it's fully trust minimized at this point, but a less trusted bridge essentially to those roll ups. And I think the fact that a lot of people sort of like say, oh well, BitVM collapses to a multi sig because it's not a truly optimistic construction in the sense of optimistic constructions are supposed to be one of n like anyone, essentially it's permissionless to be the person to post a fraud proof or contest the state update and that's not yet the case in BitVM.
00:50:16.414 - 00:51:15.782, Speaker B: So I know that there's probably still. I've heard that there's a lot of work going on a new version of BitVM maybe perhaps in development. I also think as far as I know there's a few other upgrades that people have been talking about to bitcoin. I know that one of them is very close to your heart, Eric, which is op cat and as far as I understand it will enable covenants and different things that might make things like BITBM more trust minimized or something to that nature. And also perhaps in the far future I'd love to talk about the possibility of bitcoin actually adding a ZK verification opcode to its state machine because that then would enable native settlement like Satrea. You wouldn't have to go through this sort of like two step of like, okay, well we have this other optimistic roll up essentially that we settle to that then settles to bitcoin. It's like you settle directly in bitcoin itself.
00:51:15.782 - 00:51:30.170, Speaker B: It just seems much cleaner and simpler to deal with. So I'd love to talk about Opcad and ZK verification opcodes for bitcoin and what you guys see there.
00:51:30.240 - 00:52:57.234, Speaker A: Yeah, so just continuing on from what Orkin said previously, that in the BitVM white paper it talks about these NAND gates. But then in the implementation stage you don't necessarily need to work with NAND gates. It's more like a way to describe how you can actually reach turning completeness with a very simple system. So you mentioned these instructions working and just since I'm not as involved in Saddam, we don't have Robin Linus here that's working on the implementation of this. But you guys are obviously working very close and keeping track of the latest status of BitVM. These instructions that are more high level. You mentioned the instructions, but are we talking about assembly instructions or are they actually like bitcoin script instructions or these mull and div instructions that you gave reference to? Can you give some color onto how high level are these instructions? Is it assembly based or is there something that we know that they're using it? Or are they making their own implementation using bitvm instructions that encapsulates some primitive instructions for basic arithmetic or something like that, yeah.
00:52:57.272 - 00:53:46.146, Speaker C: So basically it is very similar to assembly, but they have their own instruction sets. So they are building this BitVM computer, which literally, it is risk five like instruction sets. So what we do is, for example, we compile our VK verifier into RISC five. Then we transpile it into the bitvms instruction set. So it is kind of custom computer with fresh NIV instruction set, but it is very similar to existing instruction set, so that you can easily transpile. And for each of these instructions, there is an on chain script correspond to the instruction. And once you construct this, while you are constructing this BitVM contract on chain, you simply get all these instructions and merges scripts together with, let's say, size of four megabytes or 1.
00:53:46.146 - 00:53:51.730, Speaker C: You embed it into Merkel chunks, Merkel leaves of the taproot tray.
00:53:52.810 - 00:54:37.138, Speaker A: Another question that ties into what Nick wants to talk about next. I remember that you actually had the opcat. You had the opcat, basically in your Twitter name, you had OpTV and opcat. And Robin Linus, who's not here, unfortunately, has also been gone on multiple tweeting sprees, talking about how amazing it would be to have Opcat in bitcoin. Just to explain to the audience super simply what opcat is, I'm going to do another stupid analogy here and see if it works. Maybe it'll be simpler this time. But imagine that bitcoin script is like a calculator.
00:54:37.138 - 00:55:17.742, Speaker A: And if you look at a calculator, then maybe you've seen, like, there are some sinus symbols, there's cosine and there's tan. These buttons do different mathematical things, and these things are basically called opcodes in bitcoin. Also there's the regular arithmetic, math, science. Also, you can press two and you can press plus, and then you press two. And then your calculator knows what to do. In the case of Opcad, it's a very simple opcode that would allow you to take, if you press two, and then you press two again, and then you press cat. What it does, it's going to take those two twos and put them together.
00:55:17.742 - 00:55:56.586, Speaker A: So now you got the number 22, but it can also do this for strings. So, for example, if I say hello, if I type in hello into the calculator, and then I type hello again, and then I press cat, it turns into hello. Hello. It sounds as simple as multiplying things or adding things. It actually sounds even more simple because you don't even have to do anything, especially arithmetically on this, like, you're basically just smashing them. You're smashing two things together. You don't have to actually calculate what is three plus two or what is seven plus five, or do any multiplication.
00:55:56.586 - 00:56:46.430, Speaker A: So it's a super simple opcode. But through the magic of computers, you can do extremely advanced things with this. And one of these things that you can do if you had the ability to squish things together this way. If you know anything about how merkel trees are constructed, a merkel tree is essentially like a tree of hash values. And what you do in a merkel tree is you squish hashes together, and then you hash that, and then you keep doing that. If you imagine ten items at the lowest level of a tree, and then for each two sets, you squish them together and you hash them. And now you have five hashes, and you keep squishing them.
00:56:46.430 - 00:57:55.070, Speaker A: Sorry, I should have done this with a different number. But if you have an exponent of two at your bottom, then you can keep squishing hashes together until you get a single hash that sort of hashes all the value underneath it. And the root of that is called the Merkel root. And a lot of the things that we're doing in bitcoin is based on Merkel routes and Ethereum also, like all the accounts and all the states of the Ethereum, is also expressed through Merkel trees. And if you have that, you can basically reference a current point of the entire Ethereum network or the bitcoin network by pointing to, this is the root hash of that block, or this is the root hash of that state in Ethereum. So if you have the ability inside bitcoin script to validate such a tree, then a lot of new programmatic paradigms become unlocked. Another thing that you can do is you can basically look at hashes of transactions.
00:57:55.070 - 00:59:10.890, Speaker A: So if you squish enough data together inside the bitcoin script, you can verify that that transaction has a specific hash. And then you can, based on that checking, if the hash matches a specific value, then you can allow other outcomes to be true. So this is exactly what is called covenants in bitcoin, that you constrain the future output of a transaction based on like, it needs to look like this other transaction. If you can do that, it unlocks a programmatic paradigm that we call a finite state machine in bitcoin. So you can create like a small computer inside the bitcoin scripting language itself that has the ability to keep track of values and variables. So you could get something that starts to look like an Ethereum smart contract where you have a one, and then you update it, and it turns into a two, and it turns into a tree into a three. Like right now, you don't have that level of expressivity inside of bitcoin, but if you had something like Opcat or another covenants related opcode, you could start to get contracts with state inside of bitcoin.
00:59:10.890 - 00:59:29.780, Speaker A: So this is one of the reasons that at the Taproot Wizards team, we're super excited about OpcaT because it unlocks this. It essentially allows us to create smart contracts that could be the basis of other L2 constructions that are more similar to actually roll ups. The way that roll ups actually look on Ethereum today.
00:59:31.830 - 01:00:15.982, Speaker C: Yeah. For example, in BitVM, I talk about the instructions. So simply to put a fraud proof for these instructions, after each instruction, the BITM program mercury all the states. So it creates a Merkel tree of its state. And after that, you can put a fraud proof, or you can reveal the leaf by using this Merkel proofs. But with today's bitcoin script, you simply cannot do that because the inexistence of Opcat, if you had this like Opcat, then we can simply concate the two leaves and hash it together and concate with the next leave so we can get this Merkel proof working on bitcoin. And in bitwam, we need this.
01:00:15.982 - 01:00:59.390, Speaker C: So basically, Bitwam team built a new hash function from scratch, which is called Blaketree. So they built this hash function just to be able to do that. And it already, I think, cost several hundred bitcoin instructions. So if we adopt, it will be much more simpler, and this will make the bitcoin script size smaller and on chain footprint smaller as well for fraud proofs. So it is kind of important to have this opcat for almost everything that includes Merkel trees and covenants. This is why mainly I was supporting OpCAT, and I do still support it. Besides that, there is two covenant proposals, which is takes hash and CTV.
01:00:59.390 - 01:01:28.630, Speaker C: So they also reduce the number of pre signed transactions in BitVM setup. So it will also help us to reduce the off chain data cost and setup cost in BitVM. So I agree with everything Eric said. We immediately need Opet, and I do support both. Like take Sesh, CTV. I don't have enough knowledge to say one is better than the other, but either of them will work and make the bitcoin much more efficient.
01:01:29.610 - 01:02:46.030, Speaker A: Yeah. So, Nick, sort of answer your question. I think Orkin explained it great, that through Merkel commitments, you can make, like, way more efficient. And one of the things that we're talking about here is when you set up these state channels, you remember how sort of trusted setups were required for some type of serial knowledge cryptography in Ethereum with BitVM, you have not exactly that, but you also have like a setup phase where the participants in the state channel basically need to share with each other and sign each of them an entire tree of a computation. So you have to basically take the entire computational tree of the type of computation, of the type of circuit that you want to be able to validate, but that involves building the entire binary computation, or can. You're going to have to help me out with the explanation here. But you have to exchange large quantities of data where you store these bit commitments even before you do anything.
01:02:46.030 - 01:04:13.280, Speaker A: So in order for the state channel to even work, you need to exchange large amounts of data. And if you want to update the number of participants or include another bitcoin deposit that's supposed to be guarded by this circuit, then you need to do this computation again. So those are large amounts of data that the participants of this stage channel will need to exchange before they can do anything. And that is one of the trade offs of using BitVM as your two way peg system, because it's sort of constrained by, okay, how much data can we communicate here? How fast can we do that? You can make BitVM a lot more efficient by reducing the amount of data that you need to exchange in the setup phase. But what we're discovering in the Taproot Wizards team is that you can do something with OpCat that looks more like sort of a traditional optimistic roll up using these Merkel commitments outside of BitVM. So you don't necessarily need to use BitVM and the confines of that. There's another property that we discovered recently, and it's the CTO of the Taproot Wizards team.
01:04:13.280 - 01:04:50.810, Speaker A: Some of you may have seen him. His name is Rot 13 Maxi Ryandall. He basically started to play around with an old idea from the blockstream team where you could build a type of covenant construction using cat. He wanted to explore whether you could build recursive covenants. So basically have transactions that depend on transactions that depend on previous transactions. If you can build that, then you can build this finite state machine that I was talking about. So he was exploring that to build vaults on top of bitcoin.
01:04:50.810 - 01:06:00.910, Speaker A: And in that process, he basically discovered that from this old blockstream article from 2021 by Andrew Polestra, the inventor of Taproot. He found that you could actually use that idea to create recursive covenants. And if you then combine that with sort of the Merkel commitments from OpCaT, you can build something that's even more powerful than BitVM. And we haven't shared the details of what exactly that would look like yet, but it's something that we're probably going to start putting out in front of the technical community pretty soon. We could be talking over the order of weeks instead of months, but it's difficult to sort of talk about it because we haven't really shared how that looks like yet, and we haven't really finalized how we want to describe that system yet. So there might be something new coming out that's like something comparable to BitVM, but more similar to how optimistic rollups work on Ethereum.
01:06:02.790 - 01:06:38.330, Speaker B: Very interesting. It's amazing that such a simple opcode can enable so much. It's like you said, Eric, kind of the magic of computers that you can build such complex things off of just very minimal building blocks. But one of the things I want to ask though is do you guys actually think that BitVM with Opcat and the new things that enables, is that enough for bitcoin to be a settlement layer or should we still push for zk verification opcode in bitcoin? Because that to me is at least the gold standard in trust minimized.
01:06:39.790 - 01:06:41.420, Speaker A: Go ahead, orcan. Sorry.
01:06:42.590 - 01:07:15.814, Speaker C: So yeah, I think op Zkp, op sark verify, whatever it's called. I think it is like gold standard. We must be there once we have VIP ready and all the test done. But there are several blockers on it. So first we need to first decide on a proof system which is like current, I don't know, maybe hundreds of proof system exits and everyone independent from us. There is trade off. Like stark stars are very good, but they are huge growth 16 is nice, but it requires trust to set up.
01:07:15.814 - 01:07:54.066, Speaker C: So we need to find common ground that every proof can be wrapped into and represented into bitcoin. So this is the first worker and the second is. It is like too broad. So basically, once we have this opzkp, then we don't need to have any other bip for opcode chains because you can build a circuit for CTV, you can build a circuit for cats or any other thing. So it is great. But it also enables some maybe like attack vectors that we haven't discovered yet. Even though I support this kind of soft fork and VIP, we need to be careful about the implementation and also what it can cause.
01:07:54.066 - 01:08:08.300, Speaker C: So I don't think it will happen in two or three years. Maybe this year we can see a VIP, hopefully. But BitVM is currently a stepping stone for every team, including us, to have this gold standard.
01:08:10.350 - 01:09:38.150, Speaker A: Yeah, what I was going to say is that of course we want native serial knowledge proof verification on bitcoin, but there are multiple challenges to that. The first one is that a serial knowledge verification opcode isn't enough on its own in bitcoin in order to create a ZK roll up, we talked previously about the need for just the ability to preserve state. Like have a variable that you can update, like sure, you can have a bitcoin script and then you can have inside that script you need to do a little bit of computation and make sure that the synology proof equates to valid. And that's all fine, but what are you doing with that? Unless you're updating the state of a bridge and you're allowing people to unilaterally access out of a bridge, you need to be able to do something that preserves the outputs of the serial knowledge verification. So you need covenants still in combination with a serial knowledge proof verification opcode. So it sort of follows logically that you'd sort of do the easier thing first, which is a covenants, and decide what should that look like. So that's why we're now focused on OpcAt is a way to enable covenants.
01:09:38.150 - 01:10:23.780, Speaker A: Let's see if we can get a covenants opcode activated first. And even covenants are extremely difficult. I described this previously. We're talking about something that squishes two numbers together on a calculator button. So in the Ethereum world, if you're telling them that hey, we're really struggling here, we want to be able to squish two values together in bitcoin, and there's a big social discussion that needs to happen, whether or not this is fine, whether this is okay, or whether there are second order effects that harm the bitcoin protocol. From the fact that we can now squish two numbers together. To an ethereum person that's like thinking about KZG precompiles and stuff like that.
01:10:23.780 - 01:11:26.200, Speaker A: They're used to adding so much more complexity to the Ethereum system that to an Ethereum person it's going to sound ridiculous that we're having this conversation. The other thing with bitcoin, that even if we had like covenants and even if we had zero knowledge proof verification, the types of covenants that were likely to get into bitcoin are going to be severely limited just because bitcoiners are so afraid of. We don't actually want full, rich statefulness on bitcoin. We want more leaner, elegant tools that are very confined and constrained in terms of what they can do. Even if we have, like, a covenants and a serial knowledge proof verification opcode. Imagine that you try to build a roll up from that. Maybe you could only build a type of roll up that you can deploy once, and then you can never upgrade the code for that roll up.
01:11:26.200 - 01:12:38.734, Speaker A: And also keep in mind here that this serial knowledge proof verification opcode that we're putting it into bitcoin, what exactly is the Ziki circuit that we're using there? What is the VM that that zk circuit is good at proving? How fast is this prover working and how competitive is that to other types of W? There's hash based seronology proof systems, and there's curve based serology proof systems. And these two things have different tradeoffs. And there's a technical progression for the hash based ones, there's technical progressions for the curve based ones, and it's sort of in flux at the moment, like, which I work for the Starknet foundation. I'm a board member of the Starknet Foundation. I think that I can see a lot of advantages of the hash based ones, like serenol cryptography. I think that it fits better with, it doesn't have a trusted setup, and it's using very non exotic cryptographic primitives. So I think that that would sort of vibe better with the bitcoin culture and the bitcoin community.
01:12:38.734 - 01:13:59.762, Speaker A: But at the same time, you have this curve based serial knowledge cryptography that's really popular in Ethereum, and a lot of it is like, maybe you can even serial knowledge proof the EVM faster using that type of cryptography. So how are you going to choose which serial knowledge proof upgrade you're going to pick? If it's going to take three years to get that activated, how are you going to be sure that three years from now, that is still the type of circuit that you want to serial knowledge proof? Because you don't have this ability in bitcoin to. Okay, we want to have one serial knowledge proof opcode, and then if we don't like it, we want to use a different one. We had to sort of pick one and then stick to that. So we are working in a much more constrained environment that just opens up for this endless bike shedding on picking which ones we should have. That's why some of the conversation right now is around do we just want to find a way to very efficiently prove, like a wasm engine inside a bitcoin, and then we can write a bunch of different serial knowledge proofs in that language, and then serial knowledge proof that. So you basically create like a little microcosmos for creating and validating serial knowledge proofs.
01:13:59.762 - 01:15:25.886, Speaker A: Like, maybe that's what we want to do in bitcoin. Problem then is that you'll have people saying, well, if you have like a KZG, sorry, a curve based serial knowledge environment on top of bitcoin, and then you want to maybe use a hash based, you want to use a hash based serial knowledge proof system to prove that if you're sort of layering these different serial knowledge proving systems onto each other, you may lose, like now you still have the trusted setup problem, ultimately, because you've layered these two constructions on top of each other. So it's not necessarily obvious either that we can sort of layer nestle like, serial knowledge systems inside of each other and get the full benefits of that. So I'm more optimistic that we can do something like OpCAT, and then maybe we can do optimistic verification of different serial knowledge proofs. So if you have a way to do, like, arbitrary computation that you can do an optimistic resolution of, then you can still access a lot of the serial knowledge proof systems by allowing that to be the thing that you're doing the optimistic verification of. This is basically what BitVM is trying to do. It's all this dispute resolution.
01:15:25.886 - 01:15:56.910, Speaker A: How that becomes most powerful is that if you're doing that on top of serial knowledge proofs, and this is exactly what the citrea team is doing, it's using the BitVM, optimistic verification of serial knowledge proofs. And I think that that's probably going to be a place we're going to be at in bitcoin for a long time. Like doing optimistic verification of serenol proofs rather than finding one silver bullet serial knowledge proof verification opcode and soft forking that into bitcoin.
01:15:59.250 - 01:17:14.466, Speaker B: Yeah, there's a lot of reason to be cautious. And I think actually the bitcoin community has done a great job in stewarding the protocol and keeping it very minimal. And what's so exciting about BitVM, and also, I guess, adding a ZK verification opcode is it's like change that you can the minimal amount of functionality that enables the most amount of things that you can build on top of bitcoin. And so I think there's actually a lot of similarities to that sort of philosophy in the celestia community, where we want to keep the state minimal, we want to keep the chain, the protocol, as minimal as possible. And there's no kind of coincidence that I think Celestia is also exploring a CIP that would add so called ZK accounts, which is sort of the same ideas as ZK opcodes for the celestia state machine. So there's a lot of connection there. And maybe, depending, I think Celestia can obviously be a little bit more aggressive than bitcoin being much earlier.
01:17:14.466 - 01:18:02.690, Speaker B: And maybe there's some lessons after we've implemented that, that could help inform what bitcoin does. I think that'd be really cool. We're coming up in the last ten minutes of the space, and so I wanted to ask a few more sort of high level questions, which is that it sounds like we're all aligned. Everyone's very excited about adding settlement to bitcoin, but the other thing that's necessary for roll ups is data availability. We haven't really touched on that yet. I'm curious, Eric, you said earlier in the space that the bitcoin community has always said they want to keep the block small so that people can run nodes and verify the chain using a very minimal machine, and that they want to preserve the history of the chain. Don't want to embrace pruning, which both Ethereum and celestial will embrace.
01:18:02.690 - 01:18:33.146, Speaker B: So I'm curious if, what do you think happens for bitcoin? What is its role ultimately in the modular stack? Is it purely as settlement? Do people maybe still use it for DA and consensus? Or do you think that off chain da solutions, like Celestia, for example, would be necessary for scaling and securing bitcoin.
01:18:33.178 - 01:19:47.794, Speaker A: Roll ups in the future? I actually do have an answer to that. And I'm going to tease you with something, Nick. I'm going to leave you with a bomb to, if you want to buzwordify this, the thing that Opcat allows, it essentially allows for bitcoin to go modular. Because if you get this merkel, if you get this Merkel verification, then you can combine this Merkel verification with a bunch of different DA layers. Because you know what you do in optimistic roll ups, right? You have state commitments, you have state updates that commit to a state in a type of Merkel route update. And then you prove that between this Merkel route and that Merkel route, there was an invalid state transition, and that type of being able to do a fraud proof between two Merkel states, that is the sort of ingredient that allowed Ethereum to become modular. That is why we have a bunch of different execution environments in Ethereum.
01:19:47.794 - 01:20:58.474, Speaker A: As long as you can validity prove or fraud proof that execution. And with OpCAT, we're going to be able to do that on bitcoin. And so it's going to open up this modular paradigm for bitcoin also. So that is very exciting. And then to sort of answer your question, what I was talking about for ordinals, and that the provenance is extremely important, like seeing exactly who owned what. That is very important for this very niche use case of bitcoin where you have this NFT ecosystem and people are caring a lot about which are the different owners that have held this particular NFT. But if you wanted to build something that's more like commercially useful, like actually scaling bitcoin, if you wanted to build a high throughput second layer system that doesn't just process a couple of hundred transactions of bitcoin transfers, or also if you want to tap into expressiveness and do matching engines or automated market makers or something like that, you're going to need more DA.
01:20:58.474 - 01:22:31.690, Speaker A: Yeah, I mean, I think that sovereign roll ups on bitcoin today that actually use the bitcoin da. That is going to be useful for in the medium term, that's going to be useful only for this very niche ordinals focused use case. But if you want to build actual scalable systems for the future and giving bitcoin the ability to become like a micro payments asset, then a validium is a pretty interesting place on the trade off spectrum, right? So if you have a validium or actually a celestium for example, would be even more interesting here you could have a serial knowledge proof system that uses, and I'm talking now about like optimistically verified serenology proof system. So it wouldn't be real validiums on bitcoin, but you can build a type of celestium on type of bitcoin where the DA is on Celestia, and then you do like fraud proofs over on the bitcoin side. That is a system that has an interesting spot on the trade off spectrum and could reach like gigantic channel free scaling for bitcoin in a type of L2. So I think that definitely we're going to explore all the variants of this in the bitcoin ecosystem as well. But in my mind, maybe you can do this with BitVM, but I'm more personally excited about what we're going to be able to do if we get OpcAt activated.
01:22:33.470 - 01:22:37.146, Speaker B: Or kun, how do you guys think about data availability?
01:22:37.258 - 01:23:37.230, Speaker C: Yeah, so like bitcoin DA is, yes, quite limited, but it is the only option that gives you full bitcoin security. So in that sense, BitVM bridges, even though it's like huge improvement over existing multisig solutions, it is quite inefficient in bridging. So you have to have this fixed utxo size and there's some limitations and pre signatures. So I think that there won't be many altus that use this kind of BitVM bridge because it is costly to operate and not that efficient. So I think having a celestium using BitVM bridge might not be that feasible because with BitVM we introduced this honest minority assumption, but then with blobstotream, we kind of get this honest minority majority assumption. So even though celestia protects the data, it is like own social consensus. And token, once you relay the data, I think it's not honest minority anymore.
01:23:37.230 - 01:24:06.010, Speaker C: In celestia, it becomes honest minority because of signers of the blob street. So I don't think it is not very usable for every use case like l two, but I think for l three s and custom execution environments and custom niche applications. Yeah, I think integrating LPA layers like Celestia will enable these l three s to achieve huge TPs with using the Strauss VTC.
01:24:08.750 - 01:25:32.594, Speaker B: Beautiful. We're almost at the end of the time, you guys have any closing thoughts? One thing that just sticks out to me is just I always kind of come back to Satoshi, who's sort of the godfather of all of blockchain. And I know that the bitcoin community often refers back to his opinion and what he said and the limited amount of sort of communications that we have the records, although there were a bunch of new emails released recently, and I know that, for example, he was almost included Opcat, for example, but then he removed it because he was afraid of increasing the attack surface. But that makes, I think, introducing Opcat a little bit easier from a community perspective. But in the bitcoin white paper itself, interestingly, Satoshi makes a reference to this idea of alerts, which are essentially sort of like a very similar construction to a fraud, just. And he always made a big emphasis on SPVs and users being able to verify things. And so I feel like Satoshi, if he could communicate with us, or they could communicate with us, they would be in favor of modularity.
01:25:32.594 - 01:25:43.180, Speaker B: I just get that feeling. I wonder what your guys opinion of that is. What is your read on what Satoshi's opinion of all this stuff would be?
01:25:43.630 - 01:27:22.138, Speaker A: This is sacrilege Nick. I can't put words into a dead God, but I will say that Satoshi has a lot of writings around that actually favor the big blocker position. In many cases where he's talked about that, bitcoin never really hits a scaling limit and you can always just increase the block size. A lot of those arguments sound similar to what big blockers say, but I think that he made a lot of those points before it was very clear to him that this fraud proof flagging mechanism alert mechanism that he had described in the white paper didn't really work in practice. So like fraud proof was like this thing that we thought in bitcoin was going to be easy initially, and then the types of SPD proofs that were ultimately built didn't give you sort of that fraud proof mechanism. So in a world where you actually have fraud proofs, I think that is a world that allows you to do things like increasing the block size more under reasonable security assumptions. So I definitely think getting fraud proofs working on top of bitcoin through BiTVM or Opcat or something like that, it opens up for processing large amounts of data as long as the only thing that you have to validate is a fraud proof in order to have a reasonable security model.
01:27:22.138 - 01:27:33.100, Speaker A: So definitely fraud proofs usher us into this world that Satoshi envisioned where you could have large blocks without a complete degradation of the security model.
01:27:34.990 - 01:28:26.266, Speaker C: Yes. So if I say yes to build Satoshi, like I said, modularity is the way I would feel like a little bit maxi. So I wouldn't say that. But yeah, the alert thing is definitely it refers to fraud proofs like Celestia does today with this incorrect encoding, fraud proofs and such. And also he multiple times mentions he or she multiple times mentioned that zk proofs should be used for compressed blockchain data and there can be other chains which share full CPU power of bitcoin. So this is kind of describing zk roll ups where you do all the execution, but eventually all of the execution is secured by bitcoin thanks to this succinct proof. And it uses full CPU security of bitcoin with little overhead.
01:28:26.266 - 01:28:35.300, Speaker C: So I think this kind of execution delegation or execution sharding he or she will be favoring that.
01:28:37.910 - 01:29:09.420, Speaker B: Fantastic. Well guys, this has been an amazing conversation. I think we've covered a lot. I learned a lot about BitVM and just how bitcoin intersects with modularity and what we can expect going forward. I'm really excited about all the innovation going on and I'm hoping that Celestia can also play a role in helping the scale DA for bitcoin roll ups. Feel free to share any closing thoughts and then I think we can end the space.
01:29:13.810 - 01:29:24.990, Speaker A: I think it was unfortunate that Robin Linus wasn't here and I had to torture everyone with my black and pebble description of how BitVM works. That's sort of where I'm stuck still mentally.
01:29:27.250 - 01:29:29.920, Speaker B: Oh, well, you did a really good ahead. Go ahead.
01:29:30.290 - 01:29:37.830, Speaker C: Thank you for having me. I think it was both technical and cultural. Inspiring speech. Thank you everyone for joining.
01:29:40.330 - 01:29:57.170, Speaker B: Thanks everybody for joining. Thank you Eric and Arkun, for enlightening us. I think there's a lot to look forward to in the bitcoin space around modularity and I'm hoping that, yeah, we'll have more conversations like this. So thanks, everyone, and we'll see you soon. Bye.
