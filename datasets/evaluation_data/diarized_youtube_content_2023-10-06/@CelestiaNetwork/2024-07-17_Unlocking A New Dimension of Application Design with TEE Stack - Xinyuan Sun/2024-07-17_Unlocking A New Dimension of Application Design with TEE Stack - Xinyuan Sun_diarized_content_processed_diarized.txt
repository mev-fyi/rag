00:00:01.880 - 00:00:49.458, Speaker A: Okay. Yeah. So, as dimars introduced, the question that we are wondering is what applications are uniquely unlocked or just unlocked by the te stack? From the past two talks, I believe everybody has a general understanding of what the te stack is and in general, what are some unique properties. But before we begin diving into the applications, I want to kind of like do a recap of the properties. First of all, the answer what unique properties that te have? I argue the first one is this type of. I took the words from game theory. It's called conditional recall, which essentially means that you are able to commit or credibly signal that you are forgetting some information after inspection.
00:00:49.458 - 00:01:43.808, Speaker A: So I think in Andrew's talk, he introduced the tstack as something that you can allow two bots that negotiate to enter into the same room and do all of the negotiation, inspected the other person's item and then kind of forget after you leave the room. So that is kind of captured by this meme here that you can unsee something after you see, because that allows you to strategically or intentionally forget information. Okay. And the second property is this. I think the unique differentiator between Te and ZK is that allow computation over shared private state. And if you think about information age, right? Like, people talk about intents, what intents are is essentially like it's moving the boundary of property and the value from the action level to the intent level. So, like, for example, you know, this has been happening a lot.
00:01:43.808 - 00:02:31.280, Speaker A: Like in Google's case, right? In Google, the Google captures value at like the intent level. It mines the user's data and uses that data to kind of do better recommendation model. And that data is purely informational. It's not an action level thing. Right? An action level is more like, oh, I have this skill, and then let's say like, I fix plumbs. And then the way for me to exchange value is to actually do the action. So then as we move more and more into this value at information error, then high speed transaction, high speed computation over shared private state is really required for scaling, trading and exchange whenever value exchange happens.
00:02:31.280 - 00:03:15.370, Speaker A: Okay? And the third one is kind of like a combination of the previous two properties. We can name them something like encumbrance. Right? So encumbrance means is essentially you can put some secret into the TE and then allows an agent to add on a secret, and that agent can credibly signal to anybody else outside the te that it hasn't done any equivocation. Right. It allows the agent to commit to non equivocated actions. So in other words, in the left curve world, this just means you can commit to no logging. Okay, so using those three properties, what is the application we enabled on? High level, it's programmable authorization for web two accounts.
00:03:15.370 - 00:04:05.006, Speaker A: Essentially they allow you to make one time programs for your account. So how this concretely happen is that you let the user log in into some web two accounts and then inside the t you change the password or you generate a new secret that controls user's account, that allows the user to do delegated actions to the agent inside the TE. And due to the benefit of computation over shared private state and encumbrance, this also means that the user is able to program more authorizations. So essentially at a high level, this just means that we are able to bring web3 composability and programmability to web two. Okay. Of course. And this idea is not new.
00:04:05.006 - 00:04:47.886, Speaker A: I'm like kind of. We've been exploring this area for quite a long time. So this paper, I think is from 2018, called delegate. So the prime example you're seeing here is like Netflix account password sharing using Tesla. And of course, you know, I think in Defcon, dark dots and smart contract with free will was like a follow up work on this as this complete knowledge. And then finally with Tom Cry, I think he's seeing, yeah, 2016 is really old work. So what it does is essentially it allows you to do a t's connection from inside the t to prove some web two data was creatively fetched.
00:04:47.886 - 00:05:33.930, Speaker A: So therefore allowing you to move valuable states from web to web3. So this may also remind some of you guys about the work on TL's notary and multipody computation based TL's. I want to stress that the difference between that and the te approach is that that approach doesn't allow, you know, well, doesn't allow or haven't really been any exploration in the area to explore credible rights. Like so usually over there, you're using chaos notes for you to achieve this, like credible read. You are like moving an oracle on chain. However, here we are saying, we don't want to be mere mortals, we want to control our own fate. It's not like you're letting a God tell you what to do through an oracle.
00:05:33.930 - 00:06:09.032, Speaker A: You want to say, here's something that I want to do, and then have that thing be realized. So then that's kind of like the opposite of an oracle, right? You are like letting an onchain data or an onchain agent to creatively control a web two account or web two action. So what's that? That's kind of like a prophecy, right? If you are like a prophet, when you say something, then that thing becomes true. Okay. Okay. Yeah. And all of the previous work, I guess, can be kind of captured, captured by this work in 2008 called one time programs.
00:06:09.032 - 00:07:23.060, Speaker A: It's like a classical cryptography paper. And if you actually, you know, look at the paper, the prime example you see in this is actually, I think, email delegation, right? So the scenario is like you go on vacation and then you want your agent or your, I don't know, your friend to take over your account, but then, you know, obviously you don't want your friend to look at your other emails or like reply to emails that don't have the right title. So then you can develop a one time program secure by cryptography to say something like, oh, the assistant Bob can only have the powers to decrypt and sign emails stated September 2008. And, you know, and upon realizing this, I tried to brainstorm some use cases with cloud and it actually refused to talk to me. So what that means over here is that t applications are so powerful that is against AI safety policy to even discuss it. So everyone here should realize what powerful technology we're building and the giants, anthropic and openly are actually afraid such that they embed, forbid the knowledge from spreading. They're trying to help you unsee it.
00:07:23.060 - 00:08:16.492, Speaker A: Okay? And then next I will demonstrate the power through two very quick demos. So first one, we are at modular summit, must pay tribute to the celestial people. So most of our previously, I think, tweeted something I wanted a platform where I can anonymously send me bangership, post ideas to unctuous accounts that I don't want to tweet myself. I'm going to demonstrate quickly using tes how you can achieve this. Okay, so over here I have my Twitter account, and then here's an app running fully inside Te, swiss attestation. I can share the hash in my link to my talk, so then I can kind of create a new NFT. So what just happened is that the front end redirected to a server running inside Te that does the callback to Twitter URL and then stores the Oauth token in OAuth 2.0
00:08:16.492 - 00:09:06.790, Speaker A: which is used by Twitter credibly inside the encrypt page cache which is encrypted memory. So then it allows you to mint an FT that when redeemed allows somebody to tweet from your account. So over here I'm fully testing on my own account and of course when somebody tweets from your account, you don't want them to tweet some random stuff. So then you can additionally define something called a post safeguard here. So I can say something like, I guess only Te posts and then I can mint the transaction. So currently it's like on base Polyana. All of the costs, even to the on chain cost to base are conducted inside the te, by the way.
00:09:06.790 - 00:09:48.550, Speaker A: Okay, so I think, yeah, so I think the NFT number 59. So this is like the NFT so that I can kind of copy the invite link. And suppose now I'm opening a new browser to simulate what would happen if I send this to my other non crypto friend. Okay, maybe the Internet needs some time to load. So then let's just directly redeem under this account. Okay, so only te posts. Let's say something like, okay, let's say te app accelerationism.
00:09:48.550 - 00:10:25.996, Speaker A: Now let's redeem the NFT and then it should tweet from my account. Okay, yay. So this kind of, yeah, works. So over there, what essentially happened is that it did the whole web two to web3, flow inside the te by encumbering or storing my Twitter account inside the te. Okay, and r1, quick final kind of demo. Is that so? Previously there was this game called Mischief plays demo. So the game rule is really simple.
00:10:25.996 - 00:11:00.162, Speaker A: It's like players can pay $10 to join before the start of the game. And the price pool currently is like one hundred twelve k. And then every hour people can vote to get other players out. So then naturally you can create some kind of dao to clue to win this game, right? For example, you have a dao that everybody joins and the members commit to not vote for each other. However, since this is a web two game, the Dao's implementation is a bit hard. By the way, you can visit proof codes too. See it? So how we implement the DAO is essentially we simulate a browser and hosted the email server inside the te.
00:11:00.162 - 00:11:43.500, Speaker A: And then you encumber or delegate or take control over the user's account by email link to change the password. So the user cannot log in on their own and deviate from the DAO strategy, which is vote for others. And then inside the t you have an agent that takes actions on the user's behalf, which is like vote every hour for members outside the DAO. And all of those actions are done by in the simulated browser. So here are some architecture graphs. So all sounds great, but what really interesting just happened before this talk is that yesterday I did the same demo. And I think Andrew got very excited about this, such that he tweeted about this.
00:11:43.500 - 00:12:08.568, Speaker A: And what happened is that. How's it going? Ethereum is a dark forest, but Twitter is also a dark forest. This is so crazy. Okay. We got literally Twitter or mischief Amy vid. So, like, you know, before this talk, I got this email from Andrew saying, like, hey, how they are coming for me? Make the TDX, which is a type of te do something. So.
00:12:08.568 - 00:12:50.960, Speaker A: Okay, you guys have to realize what happened here is that Andrew tweeted about our strategy, about using tes to collude. And one of our coworkers happens to also play this game, but they are not inside the tea. And they, you know, I think it's some discord server where people are playing those, like, non t based, you know, like, just plain old human coordination. Servers found out and they voted Andrew out. So, like, you know, he just stared the hell out of himself by broadcasting his intent, or our intent, to colluding this game. And what's sad is, you know, like, he. He tagged me and my id in that post.
00:12:50.960 - 00:13:48.858, Speaker A: And then what happened is the hour after Andrew got voted out, you can see here, I received 120 votes to get eliminated from the game. So over there, what we can learn is that information does carry value, and broadcasting your intent into the public manpower really gets you screwed over. But on the good side, where the sacrificial lamps to demonstrate the beauty of decentralized private coordination. We died, but the tax stops there. The beautiful part of this is that people don't know what other members are in the DAo because the DAo is running inside the te, so there's no way for them to vote anybody else from the Dao. By the way, before coming to this talk, I've received the news that some discord servers saw our bad faith and wanted to integrate. So that really shows team product market fit.
00:13:48.858 - 00:14:11.540, Speaker A: Starts from trolling people on games. Yeah. So if you want the space to be more interesting, do acceleration of apps via the te stack and. Okay, so what's next? Aside from apps, we still have to remove infra choke points in the system, like security, liveness, and hardware, which leads to the next panel. Thank you.
