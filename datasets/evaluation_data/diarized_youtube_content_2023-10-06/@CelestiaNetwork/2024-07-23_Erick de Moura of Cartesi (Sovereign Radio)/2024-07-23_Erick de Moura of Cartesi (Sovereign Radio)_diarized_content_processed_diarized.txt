00:00:00.760 - 00:00:21.250, Speaker A: Hey, guys, welcome to sovereign radio at Modular summit. It's bright and early. It's the start of the three day conference. I think it's three days. And I'm Hart Lamber. I'm doing some podcast interviews as part of sovereign Radio. I'm the co founder of across protocol and apparently a part time podcast host.
00:00:21.250 - 00:00:33.766, Speaker A: I'm here with Eric D'Amora, one of the co founders of Cartesi, to tell us about what he's up to and go deep on all things modular. Eric, welcome.
00:00:33.878 - 00:00:47.558, Speaker B: Thank you. Thank you, Hart. Thank you so much for having this conversation today. Very nice to be here. And yeah, my name is Eric. I'm a co founder of Cartesi. We have been doing this for quite a while, since 2018.
00:00:47.558 - 00:00:52.846, Speaker B: We're going to delve a little bit into this and. Yeah, I mean, let's go for it.
00:00:52.918 - 00:01:25.994, Speaker A: Yeah, let's go. I mean, so you and I both been building in the space since about 2018, which makes us older gentlemen in the space. But I thought maybe it'd be interesting. We do a little tiny bit of the origin story of Cartesi, keep it short, and then get into what it is, and then get into all things modular and make sure we spend lots of time talking about what you guys are about to launch since you are live on Mainnet and the first cartesian apps are coming out very soon. So. Yeah, how did it start? How did you get into this?
00:01:26.122 - 00:02:22.159, Speaker B: Cool. Yeah, so as we're talking about before, talking about this before I was a digital nomad back in 2012, 2014, I was traveling Thailand and it was cool for a while, but then it started to get exhausting and kind of shallow that I felt I was not building anything meaningful. And I back then started to get very interested about blockchain tech more toward 2016. And it happened that while I was trying to figure out a tech business to start, a great friend of mine called me from the academic world and he said, I'm prototyping something. Blockchain would like to co found this with us because you need some business people to leverage this idea. And then, yes, let's go for it. So we got a team together and that became later Cartesi.
00:02:22.159 - 00:03:06.760, Speaker B: So at the beginning, the guys had this idea of creating a decentralized AI marketplace back then, and in order to create such a marketplace, it was necessary to specify a virtual machine that could actually run a generic computation. So they're trying something that would boot Linux, which was quite ambitious, and I found that quite cool. But I didn't really buy into the idea of the AI marketplace back then, but felt that you were tapping into something that was actually more generic and more useful for the industry than that. That's when Cartesi became a L2 solution for scalability.
00:03:07.380 - 00:03:25.916, Speaker A: So let's talk on that for a second. So this cartesi Vm, maybe it'd be worth. And then we can get into the capabilities of what Cartesi offers. But what's the difference between your VM and the ethereum VM or the Solana VM? What's it enable? That can't be done otherwise.
00:03:26.028 - 00:04:03.090, Speaker B: Okay, well in terms of implementation we cartesi. The Cartesi VM is an emulation of the RisC V instruction set. So actually it emulates the entire instruction set of the RiSC V architecture, which is an open standard architecture used by Qualcomm, Google. And it can actually boots an operating system. This VM has all the properties that a blockchain VM should have. It's deterministic, reproducible, it can generate a proofs, fraud proofs. And we started from there.
00:04:03.090 - 00:04:16.666, Speaker B: We wanted to create a machine in which people would be able to develop for web3 pretty much like they do for web two using the software stacks that are already available on mainstream.
00:04:16.858 - 00:04:47.048, Speaker A: Yeah, so I think this is a concept that maybe seems very simple, but is really quite ambitious, should push on it. But basically you're saying, ok, the EVM and the SVM that everybody knows in the blockchain space they can run code but they can't run Linux. You effectively have figured a way to create a way to boot Linux onto a blockchain VM. Is that roughly right?
00:04:47.184 - 00:04:48.216, Speaker B: That's right.
00:04:48.408 - 00:04:58.724, Speaker A: And so what does that give you if you can do that, outside of the fact that it sounds like as a developer I could have a better developer experience maybe. What are all the benefits that you get?
00:04:58.852 - 00:06:03.630, Speaker B: Well, I think from the beginning we have this dream in web3, to create a decentralized web that you don't want only to have DeFi applications and NFT applications. You want to broaden the spectrum of what's possible. And for us since the beginning, it was quite clear that in order for us to get that point, not only we had to tackle this scalability issue, nowadays we also talk about ux, it's quite important, but we also thought that this expressivity was missing. You know, if you just think about what you can do with solidity in the EVM, we want to give people all this flexibility to build like real centralized applications in different domains different use cases that would bring people much closer to what they can do in web two. So the idea is that you don't have to reinvent the wheel. As a software engineer, I know people who develop, they are very used to the concept of abstraction. Nobody wants to reinvent the wheel.
00:06:03.630 - 00:06:53.300, Speaker B: So, to give you some examples of things that we can do, last year one of our engineers managed to make Doom verifiable on chain. So basically, you can have a gameplay, you can, let's say store the gameplay of Doom and submit it to, compact it to the blockchain or some da layer, and then from there, Cartesi roll. Apps can read that as inputs and verify the gameplay in a deterministic way. And the writes, I mean, if there is someone cheating, since it's optimistic roll ups, as long as you have one node that tells the truth, it can enforce the right result of the gameplay on chain. So it was a good example, because who would think it would be possible to run Doom on the blockchain?
00:06:54.280 - 00:07:15.084, Speaker A: That is interesting. Okay, so I can prove my gameplay of Doom on a blockchain. Where do you think this goes? What do you think? If you can do stuff like that, what does it enable? What kind of like, what's the new frontier that this would enable?
00:07:15.212 - 00:08:03.672, Speaker B: That's a great question. Actually. We have a thesis that we call the cone of innovation for web3. Let's say we look at web3 as a computational platform. We need to get to a point where data is very cheap, computation is very cheap, latencies are very low, right? So as we expand on data capacity and computational capacity, new use cases become possible that were not before. Maybe you can deal with high frequency trading, you can do smart cities, applications, lots of things that today we can do. For instance, another example of the things that are coming up now on Cartesi is a system called bugbuster.
00:08:03.672 - 00:09:00.050, Speaker B: It is a decentralized bug bounty platform, because since you are able to run Linux on the cartesian machine, you are able to. People can deploy any kind of program they can compile for Linux, and they can create a bug bounty for these programs advantages. For instance, if you use platforms like Immunify today for bug bounty, there is also the intermediary coming into play. If a developer hacker finds a bug, they then submit a claim. And then there is a human being that is going to have to intermediate and the company will have to, the software creator have to also agree to pay a certain amount. And there is some subjectivity involved in this system. People are able to create bug bounties without any human intermediation, fully decentralized on chain.
00:09:00.910 - 00:09:10.894, Speaker A: Very cool. Okay, so Cartesi is live on Mainnet as of like very recently, right? Like last couple months or even less?
00:09:11.022 - 00:09:14.926, Speaker B: Yeah, no, actually it went live last year, end of last year.
00:09:14.998 - 00:09:53.494, Speaker A: Okay. But the first apps are coming out very soon. Yes, before we get into like, the apps, I also think it's quite interesting to think about the components, the other kind of technologies that I think my intuition is were kind of necessary before you guys could really go live on this. To me, it seems like you need cheap data availability in order to make this be like feasible. And you've also needed you publish either to an optimistic roll up stack like arbitrum or optimism, or do the sovereign roll up thing strategy. Is that about right?
00:09:53.622 - 00:10:17.422, Speaker B: That's a good point. We are an execution layer. So Cartesi has an optimistic roll up solution, meaning that if you want to deploy a Dapp, your Dapp has its own roll up. It's an app specific roll up. So by doing that, you can really scale computation a lot, because now your Dapp is not competing for block space, at least in terms of computation with other applications. You have your own roll up.
00:10:17.486 - 00:10:18.130, Speaker A: Yep.
00:10:18.750 - 00:10:35.850, Speaker B: You have your own cpu. Now, of course, if you have a lot of computation, but you don't have much data available to you, or data is very expensive, the possibilities of applications can develop, is reduced. So as you also improve the data situation, then you can have more use cases.
00:10:37.070 - 00:11:22.650, Speaker A: So. Okay, so, yeah, because it kind of seems to me like you guys are almost the poster child for the modular ecosystem. It's like doing your own execution environment, require your separate data availability, require settlements to a different optimistic system. And it feels like from a very modular ecosystem type perspective, we needed all these pieces to exist before you could really deliver on what your promise is. Which then I think is pretty cool, because it does seem like we finally have the technology here to have this level of scalability for an idea that two years ago, and it's been a lot more than that, but even two years ago, I think most people wouldn't attempt, believe this was possible.
00:11:22.810 - 00:12:10.924, Speaker B: That's correct. And actually one of the challenges that at the beginning we were, because the concept of modularity was premature or did it even exist the way we understand today, we are kind of trying to implement other pieces that were not our domain, like a DA layer before. And at some point we decided to really focus on the cartesian machine, the VM, and be an execution layer and put all of our resources and intelligence on that piece. And now everything starts to really make sense. And looks like we were a bit ahead of time, but now things are coming together very nice. And especially when you think about partnerships, like when we are doing close work with espresso. Lots of experimentation with Celestia Eigen layer as well.
00:12:10.924 - 00:12:30.600, Speaker B: So you can run Cartesi as Cartesi roll apps on Ethereum directly, as a L2 or as a layer three on arbitrum or other L2 solutions. Now we're exploring also the possibility of running Cartesia as a coprocessor on Eigen layer.
00:12:30.940 - 00:12:32.324, Speaker A: So, interesting.
00:12:32.412 - 00:12:32.850, Speaker B: Yeah.
00:12:32.940 - 00:12:35.334, Speaker A: How would that work in concept?
00:12:35.422 - 00:13:18.592, Speaker B: Yeah. The idea is that if you think about cartes roll apps, you are thinking about a stateful system. You are advancing the state, like you do with any application running on main ads, on main chain, or on a roll up. But as a coprocessor, you can have a lambda services that you specify a computation. You outsource the computation to be run by this external system, and then it returns the results safely to a smart contract or on chain. It's a single step computation, not a single step, but it's a stateless kind of computation. You provide the program, you provide the inputs, and then you get the outputs in a safe way back on chain.
00:13:18.592 - 00:13:34.352, Speaker B: And then you can use the AV's system and use ways to have several nodes endorsing that result together. And you can even have a slash mechanism that can be done using fraud proofs.
00:13:34.416 - 00:13:57.042, Speaker A: Yeah, I do see the idea of having that kind of, the Cartesi vm being very useful to Eigen Av's systems. It's very interesting. Okay, so then the applications that are coming out soon, can you give us. They're not announced yet, so probably can't tell us too much, but can you give us a flavor of the types of things you think that you're most excited about?
00:13:57.106 - 00:14:34.846, Speaker B: Sure, sure. There are some that are quite public. If you go down here, the guys from rives, they are already presenting at the Cartesi booth. So rive is this kind of a decentralized game console. It expanded from the idea of the doom that was run on chain. They pushed that one step further. They are now creating this project that you can have this idea of a global, worldwide arcade game where people can compete for a place on the leaderboard, but they are also creating a marketplace for people to create cartridges and new games and get monetization on that as well.
00:14:34.846 - 00:14:56.840, Speaker B: So all that economy and verifiable gameplay experience is being developed on Cartesi and people can already see it downstairs. The demo. The other one I mentioned was Bugbuster, which is also being developed publicly. The guys are looking for collaboration, making this project more community, more collaborative as well.
00:14:57.180 - 00:15:13.480, Speaker A: Very cool. Okay. Only. Cause I work on across protocol. And how does interop work? Like, how do you transfer funds to these rollups? Is it just the same way that you would bridge in arbitrum and optimism kind of stacks, too.
00:15:14.540 - 00:16:01.184, Speaker B: That's a challenge, but it's a challenge. We've been discussing this for since the beginning, and we are trying to solve that alone ourselves. And now it became a challenge of the ecosystem because now that we're thinking about a future where you're going to have thousands, if not millions of roll ups, and they have to communicate safely between themselves. Not a problem of cartes, a problem of the industry. So we are working together, let's say, with espresso. Espresso sequencer and other protocols that are also helping to tackle this problem. But, yeah, there are ways that you can actually make the transfer of funds and coins or even send messages across rollups in a safe way.
00:16:01.184 - 00:16:03.208, Speaker B: But that's an ongoing work.
00:16:03.344 - 00:16:11.300, Speaker A: Very cool. Okay, well, we got to wrap this up, but just for where people want to find out more about Cartesi, what you guys are doing, where should they look?
00:16:11.620 - 00:16:20.612, Speaker B: They can go to Cartesi IO and find everything from there. You can also find me on Twitter. Eric Demora is my handle on Twitter.
00:16:20.756 - 00:16:30.700, Speaker A: Great, Eric, thank you so much. Super cool. Congrats on the progress, and let's enjoy our modular summit here for sure. Thank you. Thank you.
