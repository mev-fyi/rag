00:00:02.010 - 00:00:26.840, Speaker A: Okay. Yes. So I'm going to be talking about Bonsai. It's a verifiable ANZK. I'm trying to use the new terminology here, platform for a modular world. So Bonsai basically lets you prove massive computations for all kinds of applications. We're going to talk about a bunch, bunch of those in this talk.
00:00:26.840 - 00:01:17.640, Speaker A: Yeah. Also, it's now actually available for testing, and if you want to get access to it, there's actually a link at the end. And please feel free to apply and waiking if you're out there. Yes, we will get you a key. So I do want to mention briefly, Bonsai is built on top of the risk zero ZKVM or VVM. And I don't want to explain exactly what that is, because I'm sort of assuming most people know what zkvms are. General idea is it takes a program in, produces a ZK proof, and in this case, the risk zero ZKVM is a RISC five chip, sort of a virtual RISC five chip, which lets it run any kind of normal program.
00:01:17.640 - 00:03:25.150, Speaker A: And people have built a whole bunch of interesting sort of hackathon applications on top of it. And we've just recently added pretty amazing capability we call continuations. This lets you split proofs into any number of chunks and prove them independently, which lowers memory requirements and lets you roll things up in parallel and prove arbitrarily long computations so there's no longer any kind of cycle limit. So one of the things I was trying to think before I made this talk, what are the themes of the modular summit and what I think is going on in blockchain right now? And this thought that came to me is that an ecosystem of any kind can be as decentralized as it can be. I think me and my friends started the first maker space in Seattle like 15 years ago, and the amount of sort of tragedy of the commons that went on in that situation and how difficult it was to manage, I really see as a lack of collaborative tooling and ways to assign values to things that are a lot more fluid than the current tools at the time supported. So I feel like the more we can all do to build capabilities in this ecosystem, and especially focus on ones that allow us to collaborate with each other, the more decentralized we can be and the more we'll be able to benefit from the advantages of those things. So these are things that I think the modular ecosystem benefits from, sort of roughly, interoperability capability, the ability to do anything and run multiple execution layers, diversity, having lots of different projects, different clients for the protocols that are out there, et cetera, and then obviously customizability.
00:03:25.150 - 00:05:04.510, Speaker A: So Bonsai is a general purpose, verifiable and ZK computing platform, which turns out is very useful to sort of enhance the capability of any system or protocol to do those kinds of things. Obviously ZK is a huge part of many of the interoperability projects that have come out recently. And you can see how critical ZK technology has been for allowing multiple chains to actually communicate with each other in a low friction and efficient manner. Obviously ZK has brought all kinds of capabilities to different ecosystems with all of the sort of ZK coprocessing that's going on, and the kinds of things you can do with Bonsai. You can build more clients with ZK, and you can also build fraud proving systems without doing any work, which I think lets people have a lot more agility when it comes to getting systems that might be too complex for ZK currently out onto the market in a way that they can really serve their users. So all of the great things that you can do with ZK are obviously only useful if they're actually accessible to developers. So Bonsai is really focused on making the most advanced features in ZK and advanced cryptography available to all of the developers in the modular ecosystem, across all blockchains and also off chain.
00:05:04.510 - 00:06:34.006, Speaker A: Sort of always known we were going to build some kind of network and or platform as a service type offering. But I think the thing that's really crystallized to me over the past 18 months of being in this space has been how important it is to actually build an ergonomic platform for developers, especially when you're dealing with something as difficult as ZK. So Bonsai's goal is to make it as easy as possible to do the most things that you can with ZK. So what that means for now, Bonsai is going to be a lot of things over time. Initially sort of version that's available for testing now and will be at sort of 10 status in the fall. The sort of core of it is a high speed proving service that lets anyone submit proof requests for, for instance, running Linux programs on top of Cartesi, on top of RISC five. So you can actually verifiably prove the execution of Linux using something like Bonsai.
00:06:34.006 - 00:07:25.402, Speaker A: Now you can do this on your own computer, it's just very slow. So Bonsai has a very optimized machine in front of the singular executor part and then can spread computations out to thousands of machines. And with that very recently, I think the prior fastest risk zero vm execution speed that we've seen was about 100 khz. We're now up to 2.5 mhz, so it's about 25 times faster. And we really expect to see that number continue to go up over the near term. So it's really amazing how quickly you can prove some fairly out there things.
00:07:25.402 - 00:08:02.630, Speaker A: And we'll talk about that in a bit. So we also have built out a proof relaying system. This is effectively focused on Ethereum chains for now, but this is a full foundry integration and template that lets you and set of smart contracts that let you easily interact with Bonsai from your smart contract. So along with that in the past, we're a stark based system. We always have been. This produces proofs that are too big to economically verify on Ethereum. So we've built.
00:08:02.630 - 00:08:32.782, Speaker A: This is brand new and I'm very excited about it. A stark to snark translator for our proving system. So you can actually just post a single gross 16 proof for any risk zero computation in the future. We'll also let people save money by aggregating a bunch of proofs and sort of posting that for people. And that will still integrate completely with the sort of relaying infrastructure. Yeah, that will be coming up soon. We'll eventually probably make some kind of proof market.
00:08:32.782 - 00:09:55.658, Speaker A: We already have a bunch of light client and ETH proving stuff in the pipeline. Yeah, so there's going to be a lot more. These are not just early case studies, it's some of our partners and some of the, I guess, example applications and spaces we've started exploring on the application side. The first one I talked about this neath denver a little bit, was a central limit order book that utilized bonsai to run all of the matching logic off chain. So currently, the version of this that we'll eventually release after we clean it up more basically works by having people place their vote, sorry, their orders on chain. And then the smart contract does literally nothing with those except call out to bonsai, where bonsai ingests whatever orders have been placed, whatever orders are open, computes whatever matches exist, and then sends back effectively a set of settled orders or orders that are no longer valid, et cetera. By doing that, we actually found that using this pattern, it's about 100 times cheaper than sort of a pure EVM clob would be, and actually cheaper than uniswap v three by two to three times.
00:09:55.658 - 00:10:48.662, Speaker A: So of course people always ask, why on earth would you build an order book and ZK, it's going to be too slow. Obviously latency is a factor and ZK is kind of slow, but this runs pretty quickly. And you're also. I'll talk about one of our partners that's doing some innovative work to combine ZK with some other techniques to resolve that. So this is now available on our GitHub page under examples voting, I think, or governor. We just posted this. This is a full app built on top of this foundry template I mentioned that integrates with existing Dow voting frameworks.
00:10:48.662 - 00:11:43.838, Speaker A: So it's kind of an example of how you can use bonsai to effectively replace gas intensive components of any application. And when people wanted to do this, I was kind of skeptical that it was going to be worth a time. It's actually three x cheaper than the original application. And I was really surprised to see that. If you then take this kind of concept and start integrating something like Celestia to store your votes, you start to reach the capability to do a bunch of things on chain that were difficult before, especially when you couple with the count abstraction coming online. Hopefully people have seen some of the amazing demos people have built with this. I really think there's going to be a lot more capability to build applications that actually use blockchains and people use them.
00:11:43.838 - 00:12:50.062, Speaker A: So I'm really excited about the ability to have more information from people in a sort of ZK and pseudonymous manner coupled with identity feeds from SisMo or anything like that. Yeah, so a nice thing about this, we were able to effectively build something that would interoperate with existing uis and applications in about three weeks with one person. So this kind of demonstrates the efficiency gains of being able to use general purpose language for your ZK development. And this is a recent one that we've been very heavily working on as part of our proposal to optimism to help them with ZK, which I'll talk about in a second. And where we've gotten to now is that you can run an entire ethereum block. This is missing some optimization for pre compiles. This is using an existing EVM.
00:12:50.062 - 00:13:47.358, Speaker A: I think we support REVM and Sputnik and we'll support the rest at some point as well. And yeah, so you can actually run an EVM that's been fully audited and is in use in many other places directly on top of risk zero. Now it takes quite a while. I think the two to 4 billion cycles takes about 15 minutes on Monzai, but that's going to go down pretty rapidly, I think. So, yeah, we're going to be in a place where we're looking at $0.20 maybe to ZK approve ETH blocks for full size eth blocks without needing to even think about writing an EVM or about compatibility with other smart contracts. Yeah, and we expect people to start integrating this into various rollap frameworks.
00:13:47.358 - 00:14:39.430, Speaker A: Nobody's doing that quite yet, though, and I'm excited about it. Okay. So I do want to talk about some integrations that we've been working on, and this is sort of a general category here. And I was on a panel Monday, I think, and people, one of the questions was, okay, it's ten years from now or five years from now, and ZK has lost to optimistic approaches. Why? What happened? And I don't think it's an either or kind of question at all. I think optimistic approaches coupled with ZK approaches can produce a lot of value for the user in terms of supporting livelier applications. And then obviously throwing Zk on top of that supports fairly quick liquidity in and out of whatever sort of applications you're using.
00:14:39.430 - 00:15:41.690, Speaker A: Layer N, the team over there actually built a sort of example of a. Actually, they're pretty far along of a fraud prover for their order book, and they basically didn't have to do any work. You just run the matching engine yourself on data and produce a proof that the results that got posted on chain aren't the actual results. So this lets you run your order book or any kind of application sort of at the frequency that you desire, and then gives an opportunity to kind of use ZK to tie it all up and give everyone confidence that everything's in the right shape moving forward. And indeed, this is a lot of what optimism wants to do with their sort of ZK support for optimism. Very excited that us, along with the awesome team over at one labs, were both selected to work on this. So very excited about that.
00:15:41.690 - 00:16:30.988, Speaker A: One of our partners from sort of the earliest days of our company and theirs has been the sovereign team. They're building the sovereign SDK, which is a roll app framework that's highly aligned with the modular ecosystem. I really love what they're doing. They basically made a very sensible way to program blockchain applications. Pure Rust has tons of flexibility. And then they kind of take care of all of the difficulty of figuring out which parts of the modular stack to use where and which ones. So Ris Zero is going to be one of their first adapters that actually supports doing ZK computations for sovereign apps.
00:16:30.988 - 00:17:37.020, Speaker A: Very excited about that. And yeah, what else did I want to say. Also, one of our great sort of partners and people we collaborate a lot with is the team over at Eclipse. They're building roll up framework as well. The work we did with them so far has been limited to a pretty amazing project, which is effectively doing ZK Solana executions by turning risk zero into an EBBF approver. So we got pretty far with that and really looking forward to starting to give people the ability to migrate code from Solana to wherever they want it to run, or doing roll ups on Solana, even though in theory you don't need them. One of the most recent sort of hackathon winners, I think this is at EtH Waterloo built a really amazing and fairly.
00:17:37.020 - 00:18:13.750, Speaker A: It's not simple. I mean, they did it in a hackathon, and it's effectively a demonstration of using some new authentication standards along with ZK to let you immediately sort of make a wallet that's based on a biometric identifier. Okay. Yeah, thanks. Yeah. So this lets you make wallets without worrying about seed phrases or anything like that. And you can see this is a sort of amazing entree into making crypto accessible for a lot more people.
00:18:13.750 - 00:18:30.650, Speaker A: That's pretty much all I have. There's a bunch of links here. If people want to get to know more about bonsai, what we're doing, and you want access to the bonsai API, you can go ahead and apply at that link up there. Thank you.
