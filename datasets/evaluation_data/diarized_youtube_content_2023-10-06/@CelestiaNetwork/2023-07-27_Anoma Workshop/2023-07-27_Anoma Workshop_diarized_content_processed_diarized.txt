00:00:00.890 - 00:00:39.146, Speaker A: Hello, everyone. Thank you for coming to our workshop, where we're going to show you how to do a number of things on the Namada protocol. So hopefully, we'll be doing a few things that you'll be able to try out on our DevNet, which we have spawned by our friend Banked over here. This is banked and I'm park. I do community community, and Banked does project management and just kind of like general Namada stuff. So we appreciate you coming. This works best if you have a laptop with you, so you can actually try it out.
00:00:39.146 - 00:01:10.660, Speaker A: If you don't, that's fine. Just follow along and you from the stage. So it'll be great. Go to the next slide. Okay, so what is namata? Namata is a proof of stake blockchain that is IBC connected, that allows to do privacy focused actions within IBC connected. So that means is we run on Comet BFT. We can settle effectively within the.
00:01:13.270 - 00:01:14.020, Speaker B: Sorry.
00:01:14.950 - 00:02:17.426, Speaker A: It takes multi asset private transfers for any currency that you might want to use within the within the cosmos ecosystem, as well as ethereum currencies, and anything that's within the pool is effectively not identifiable. So what this looks like from the account perspective is any asset you have goes into the pool, and the amount of privacy within the pool increases with the number of people who are holding assets within the pool. We have a number of different qualities for nemada that we hope to have people engage in from their accounts. Part of this is also public good funding. You can vote on different proposals that will be supported by the Namata community as it continues to grow, as we have a privacy focused community that is using Namata to guarantee privacy throughout the entire Cosmological ecosystem and beyond anything IBC connected. Truly. Isn't that what I just said? Right.
00:02:17.426 - 00:03:12.678, Speaker A: So why do you want nemada? So effectively, we need to have people think about privacy in a different way. Up until the current time, all of the actions that you do on blockchains are effectively quite transparent, unless you're specifically within a privacy ecosystem. Trying to create is interoperable with other ecosystems that are IBC connected, allows people to opt into privacy rather than having to engage entirely inside of a private setting. The issue with a setting is that all of the actions that you perform within it are private, but you can't really do anything outside of that. So Namata allows you to engage other chains while still maintaining your privacy. And the way we do so is by having accounts. When you put the assets into the pool, we generate a pinned account on the outside of the pool for any actions outside of the pool.
00:03:12.678 - 00:04:09.500, Speaker A: But that pinned account is not associated with your account. It's not visible. You can't actually see that happen. Do you want to go to the next slide? So with the workshop itself, if you want to take part, we'd like to have you join the discord. And in there, there's the workshop channel and you can just get inside the workshop channel and you can use that to send other people in the channel your address, which you'll need later in order to send some shielded transfers between accounts. So if you'll just join us on the discord first of all, and then you can follow us at the follow along with the actual actions themselves on this HackMD. It looks a little split up, but it's mother zero X mastemp and that'll allow you to actually pull the code instead of having to handwrite it yourself.
00:04:09.500 - 00:04:17.902, Speaker A: So I'm going to hand the mic over to Banked to actually guide us through the workshop portion from here on.
00:04:18.036 - 00:06:15.460, Speaker B: Sweet. Okay, I forgot to check the permissions of this HackMD, so could I just get a raise of hands of people that managed to get onto the hack MD? Nobody? Shit. Okay, well, you'll just have to yeah, I mean, it should be quite straightforward if I did my job well. It should be straightforward. Does anyone here not have Git installed on their machine? Git clone and then this URL and then sorry, and again will appear as a folder that you could enter and you enter it by running CD join network. So once you've done that, because you're on Mac, which everyone is, given that no one said they were running Linux, you want to run this evil command that lets you disable all of the gatekeeping that Mac tries to safeguard you, or like the Mac software is trying to safeguard you from viruses and malicious software but in doing so is very annoying. So if you run this command, it tells the Mac computer that you know what you're doing and will just help us move forward.
00:06:15.460 - 00:06:32.810, Speaker B: Okay, I'm assuming everyone's run that. So yeah, that prompt should no longer be a problem, and if it is, just raise your hand and we can overcome that. So you want the command?
00:06:39.450 - 00:06:46.940, Speaker A: Okay, do you want to go to the you can open the Pack MD link and yeah, that'll actually have that command in there.
00:06:49.630 - 00:06:49.994, Speaker B: Yeah.
00:06:50.032 - 00:06:56.122, Speaker A: Well, sorry, the QR is to the discord. Yeah.
00:06:56.176 - 00:06:59.520, Speaker B: So the link to the actual AKMD is down here.
00:07:02.770 - 00:07:04.720, Speaker A: Do you want a second so you can get to it?
00:07:05.250 - 00:07:10.320, Speaker B: Give us a thumbs up when you're when you're ready. And I realize something.
00:07:16.900 - 00:07:17.724, Speaker A: In the workshop.
00:07:17.772 - 00:07:43.046, Speaker B: Channel on the discord. Smart. Sweet. Yeah, wait, let's see. So, yeah, assuming you've cloned this repo now, is that also in the hack MD?
00:07:43.158 - 00:07:48.026, Speaker A: Yeah. Cool, so do you want to give them a second to pull it through? Yeah, just let us know when you're.
00:07:48.058 - 00:08:22.774, Speaker B: Like at the you have the repo. Sweet. Okay, nice. So, yeah, you've disabled the annoying prompt, the annoying prompt. And now you want to enter. So you want to run the script using this join network sh. And it will prompt you with a bunch of questions so I will do it with you guys.
00:08:22.774 - 00:08:24.230, Speaker B: Do you want to hold this for a minute?
00:08:36.030 - 00:08:41.920, Speaker A: Can you see that that's on the screen? Okay, cool. Perfect.
00:08:46.880 - 00:08:52.590, Speaker B: Enter a chain ID. I need this chain ID here, which.
00:08:57.210 - 00:09:00.060, Speaker A: I think if it's not, I'll add it.
00:09:02.030 - 00:09:02.890, Speaker B: Boom.
00:09:06.830 - 00:09:10.678, Speaker A: That's a locally generated DevNet generated DevNet.
00:09:10.774 - 00:09:54.570, Speaker B: Just because otherwise you guys would have to think with the testnet, which has been going on for a while. But in principle, you could use this script to join a testnet as well. So then it will ask you if you have the respective Namada binaries installed for this chain. I'm going to assume that you don't. So if you hit N, it will ask you for the version of Namada that you want to install for this chain ID. It assumes that you're running version zero point 190, which includes a bunch of cool stuff, including the ETH bridge, although we won't be using the ETH bridge given that we're only using one chain right now. Boom.
00:09:54.570 - 00:11:05.700, Speaker B: It downloads the binaries and then asks you if you want to add the binaries to your path permanently. If you hit yes, it will prompt you for your password, which hopefully now it's not being revealed on screen. And if you enter that successfully, it will ask you if you have a custom base directory you'd like to use. So when it comes to base directory, what that means is I don't know if you're familiar with other chains in the ecosystem, Celestia being one of them. The default place where people tend to store all of their chain configurations as well as the wallets. Everything that has to do with the specific chain you're trying to join. In this nomada folder in your home directory, we chose to go and use the actual correct directory for that which is specified by your machine, which happens to be in this place called Library Application Support.
00:11:05.700 - 00:11:50.400, Speaker B: So if you don't specify to be a special place such as, like, Namato, which you might want to use, it will be saved there. It asks me if I'm a Genesis validator no because I am too busy coding, and then says, please run this command in a separate window, which I will oblige. So I have this other window, and if you don't know how to open a new tab, it's literally just command T when in terminal. Let me increase this one.
00:11:52.610 - 00:11:53.600, Speaker A: There you go.
00:11:56.540 - 00:12:30.054, Speaker B: And you will see a bunch of logs and it will start trying to catch up to the latest block height of the network. And it's asking me, is the ledger running? Yes. It's smart enough to realize that it's not cut up yet. So it waits. Wow, we really managed to churn through blocks. Let's see how long it takes.
00:12:30.252 - 00:12:36.700, Speaker A: We'll just wait for a moment as it catches up. This is exactly up to date.
00:12:43.170 - 00:14:00.170, Speaker B: Yeah, that'll take a while, but I forgot to add the chanity to the hack. It shouldn't be too long though. It should only take like because when we spawned this like 3 hours ago well well, I'm really surprised by how far it's gone. Okay, well, as fun as it is to look at a ledger run, I believe there are more fun things to do. So once you've run this script, you should have Namada installed. So if you run Namada version, it should output the expected version. Let's see if that's true.
00:14:00.170 - 00:14:42.990, Speaker B: Yes. This tells you about where your base directory is stored. Like I said, it uses the standard that is meant to be used. So for Linux, that would be in this special folder. So home, local, sharenamada, but otherwise it'll be in your application support folder. And this is just a reminder to read the log. So if anything ever doesn't work as expected, the logs will be telling you why that is.
00:14:42.990 - 00:15:52.406, Speaker B: And when I say logs, what I mean is this here, whatever is written here. Okay, so when you've run this script, it runs a bunch of commands that creates both keys in your wallet and reveals the addresses to the ledger to create what is called an implicit account. So whenever you have an Ed 2519 key pair, you have the ability to send money to the address of that key pair. What is an address? An address is simply a hash over the public key. So I'm assuming most of you guys are familiar with how keys work, but that's how we interpret addresses on Lamar. We then have what are called established accounts. And the difference between an established account and an implicit account is that an established account has what's called, like logic attached to it.
00:15:52.406 - 00:16:49.910, Speaker B: So if you're coming from ethereum land, the way that you'd think about this is a smart contract wallet, right? Yeah. So you can add things like multi SIG capabilities, you can stop assets from being transferred to your established account if you don't want them to be, et cetera. When you make an established account, you therefore need to pay for some fees to execute the code that creates that account. This is still catching up. So when you make an account, you probably want to receive some funds on mainnet. It won't be this simple because we won't have a faucet on mainnet. However, for testnets and devnets, we have a very easy way of making you rich, and that is by asking the faucet to send you funds.
00:16:49.910 - 00:17:54.252, Speaker B: We send funds by saying, just transfer money from faucet to ourselves. And it allows you to sign this transaction with any address. Normally, when you send transfers from one address to another, obviously you need to provide a signer of that transaction. And if that signer doesn't add up to the person sending the money, the ledger will be like, stop trying to steal money. Now, whenever you do this, we have proof of work that works over the faucet to make sure that you do some work before you gain the funds from the Faucet. And does anyone know why we didn't have this in the beginning? The first testnet did not have a proof of work over the Faucet. What do you think went wrong? Yeah, people emptied our Faucet by just like, asking for all the money in the Faucet and then bonding their validator to it.
00:17:54.252 - 00:18:51.100, Speaker B: And then their validator didn't have the correct versions and didn't have enough upkeep, so the network went down. And then we thought, how do we let people use this network without letting them take over? And we said, let's just use this spam resistant mechanism that's been tested by Bitcoin for a couple of years now. That seems to be working fine. And it solved our problem. How the hell have we not cut up yet? So once you do that, you can check the balance of your account by running this command nomadic client balance. And here you can check if you've bonded any stake. You can see who's bonded stake and to whom by running Nomada C bonded stake.
00:18:51.100 - 00:19:12.256, Speaker B: And this way you can query proposals on governance. But it would be nice to do this live. Okay, at this point, I'm almost going to give up and just use the newly spawned DevNet. But we're so close.
00:19:12.358 - 00:19:15.692, Speaker A: Potentially, I can update that hack MD release.
00:19:15.836 - 00:19:16.530, Speaker B: Yeah.
00:19:18.180 - 00:19:34.890, Speaker A: Okay, so if you're running script, go ahead and pause the script. Just close it. Yeah. With control C. And we'll use a new chain ID that he's spawned on his computer because this is an old DevNet, so it's taking a while to sync up.
00:19:41.220 - 00:19:47.010, Speaker B: Yeah, we just caught up.
00:19:48.020 - 00:19:52.448, Speaker A: If you ended your process never mind. Let me go check. Let me go check.
00:19:52.554 - 00:19:55.640, Speaker B: They can easily join the correct network.
00:19:57.420 - 00:19:58.650, Speaker A: Okay, let's do it.
00:20:01.500 - 00:20:32.100, Speaker B: Cool. We're synced. Let's go. So then it asks you, oh, it's synced. Would you like to set up some default keys and fund them? And then it does that. Now you can query a bunch of cool stuff. So what did we say? Namada C Balance Owner.
00:20:32.100 - 00:20:37.190, Speaker B: And then you can put in like a name of some account you have.
00:20:39.400 - 00:20:48.330, Speaker A: Within the HackMD as well. It says nomada client. Nomada C is a abbreviation that allows you to do the same thing.
00:20:49.020 - 00:20:55.210, Speaker B: So we have this account called Alice. We haven't sent her any nom yet. So no nam balance found.
00:20:56.400 - 00:21:04.750, Speaker A: Important to understand too here is that the Alice account is an account within your generated account.
00:21:06.080 - 00:21:39.050, Speaker B: Exactly. Yeah. So now the moment you've all been waiting for, we're going to make a shielded transfer. So the first thing you do is to create a shielded key. So you do this by running no matter wallet, mask, gen, key, I believe alias someone think of a cool name.
00:21:40.540 - 00:21:50.830, Speaker A: What's a cool name? Just off the top of your head? Yeah, cool name. Paris. There you go.
00:21:51.760 - 00:22:22.630, Speaker B: And then I'm going to say, don't encrypt this because I don't want to enter a password every time. Nice. We have Paris. So now we want to send money to Paris. But in order to do this in shielded land, you need to create what's called a payment address, which is linked to this key. So you do this? Yeah, possibly. Actually.
00:22:22.630 - 00:23:00.576, Speaker B: We'll find out. What do you want to call the payment address? Let's call it park because she's in Paris. Your name's not Bangkey paris. No, it's Jen ADR. Nice. Now we want to send money to Paris, and we do that by sending it to park, who is actually like you have like, a mask, so just.
00:23:00.598 - 00:23:24.840, Speaker A: To make that clear, the park or a generated address, that is the shielded account that you're using from your wallet. So your initial account has generated an account within nemada that is from the outside, not associated with this account that you just named.
00:23:25.920 - 00:23:56.180, Speaker B: Exactly. So let's send some tokens. No matter. C transfer source, faucet target alice. Send 100. This should be enough. Oh, no token.
00:23:56.180 - 00:24:00.790, Speaker B: Let's send some ETH. Why not?
00:24:04.710 - 00:24:05.362, Speaker A: Cool.
00:24:05.496 - 00:26:00.720, Speaker B: So that means they just need to fund our account. The reason this is taking time is because we need to make this proof of work. If we already had it, it would be oh, what? This should work. I have spawned it with DevNet 19, right? Yeah, you might be on the wrong. I have a small suspicion that we're on the broken DevNet to be bad, but not the biggest of worries. I think what happened was we were on some DevNet that had some issues with the faucet, which I fixed, but yeah, applied seven transactions. Okay, so now it should actually work.
00:26:00.720 - 00:28:02.274, Speaker B: Why are you not receiving any funds yet? We're still creating accounts, and now it okay as we let the code work. Does anyone understand actually doing or like, are people familiar with how shielded transfers are able to hide things like the token, the amount, and the address? No. Would you like to learn? Cool. I think so. I think the Aztec are using the same circuit as Zcash, but I'm not sure if they use this multi asset set or if they have one. So there's a very easy way to do it, right, is just to take the Zcash circuit and then create one for ETH and create another pool for Atom or Nam or whatever. Let's just see.
00:28:02.274 - 00:29:15.610, Speaker B: Did this go through this time? But the cool way to do it is to allow for assets. And all you need to do is to have a separate generator point for each asset on the same curve. And if you can just generate these generate generator points, but you get what I mean, find a way to create these generator points in a way that it's not like there's no way to connect one generator point to the next through some multiplication, then you're fine. Because if you were able to do then you'd be able to do some wacky like convert your to e. Big problem. So yeah, as long as you can solve that, then suddenly you're capable of having all assets in this pool. When you do a shielded transfer, you do is you create zero knowledge proof which generates object called a note.
00:29:15.610 - 00:30:33.522, Speaker B: And a note is simply a zero knowledge proof that commits whenever you hear the word commit means it hides the asset type, the amount and address to which it sends you. In order to create a note, you prove that you're not creating new money. Right? So you also need to prove that you either deleted or like removed that value from the transparency or that you removed that value from the shielded side. So when you shield assets, then you use the fact that your transparent balance has decreased and you can just provide that balance. But when you try to remove value from the shielded pool, you prove that you destroyed a note in order to generate the new one. So that's what we're doing here in the background. I wish it would say something cool like you are destroying and creating notes, welcome to the dark side or something.
00:30:33.522 - 00:31:35.720, Speaker B: But instead it just says transaction is valid. So let's see. Okay, we have balance now, so we can finally shield it. So you send money from Alice who is on the transparent side, and you send that to pork. And remember, pork is just the payment address for the shielded key called Paris. Fantastic. And now you should have now you should be able to query the balance of the balance token and suddenly we have ten shielded nom.
00:31:36.300 - 00:31:53.820, Speaker A: So just to go over that again, right, we sent it to a different address name and the balance is now in the Paris account showing that the Paris account wasn't represented in the transfer to that account, which means that it was shielded.
00:31:54.420 - 00:32:21.970, Speaker B: Correct. So now Paris can spend this money to anyone else that has a shielded account or a transparent account. To be fair. Did you manage to set this up? I wasn't able to. I see. Okay, no worries. Basically.
00:32:34.060 - 00:32:38.490, Speaker A: Just one transaction. Yeah, that's true.
00:32:40.060 - 00:33:59.024, Speaker B: You're hitting the number one thing that any shielded like pool needs to work around and that is the fact that everyone can see what's gone in to the shielded set and you can see what's coming out. So if you wanted to de anonymize people, then the first person that enters the shielded pool has zero privacy because they're the only ones that can exit. And as soon as they exit, you know who it is. When someone else enters the shielded pool, you have a 50% chance of guessing right from who took it out. When n people enter the shielded pool, your guess is as good as one over n until you take into account the amount because let's say sorry, what's your name? ARCHIN puts in all of his ETH, which is a million ETH. And then I only have 0.4 E, which I've put into the shielded pool.
00:33:59.024 - 00:35:39.056, Speaker B: And it turns out that the other 10,000 users around the world have put in a fraction of that, like, let's say 100th of an ETH. Now ARCHIN Arjun wants to take out his ETH and he takes out ETH, no big deal. The problem is everyone knows it's him because no one else was able to. Even if he sent, I guess he could have sent the someone else in the shield set and then they could have removed it, but it's very unlikely that he did that without buying a country. So the more assets we have on Namata and the more users we have, the better privacy guarantees we get for everyone. For that reason, we have this incentive scheme that incentivizes people to shield their assets and to keep them in the shielded pool. So each epoch Namada assets are converted into or sorry, any asset that's incentivized is converted into a new asset, which from like, the user is equivalent but has this epoch attached to it or like this timestamp.
00:35:39.056 - 00:36:46.650, Speaker B: And in this way, whenever there's a new epoch, you get rewards for keeping your assets in the shielded pool. And this reward schedule is dependent on how many assets are currently in the pool. So that when there are very few assets and here is like major alpha for people looking to reap rewards, is that when there aren't a lot of assets in the shielded pool, namada will be paying you a lot of money to shield your assets. Once everyone finds out that this is a way to make money, especially for people that might be indifferent between privacy and non privacy, people will start putting their assets into the shielded pool. And this will decrease the reward rate because the need for these additional assets become less and less valuable to the ecosystem. Cool. So if you guys want to see so you can see here that it says the last committed epoch was four.
00:36:46.650 - 00:38:04.032, Speaker B: So now if we check, hopefully my speech was long enough for us to pass epoch. Nice. We passed epoch into epoch five, and now the asset becomes converted to the latest asset type. The problem is that we only shielded ten Nam. And Nam is hard coded to have 0% reward rate on this DevNet. But had we shielded, like ETH, which I believe is hard coded to be 1%, if we shielded 100, you'd end up with 100 E plus one Nam in your account, which is pretty cool. Yeah, I feel like I've exhausted you enough with how to use Namada, but I feel like I've gotten the big idea through to you, and that is how do you shield assets? And this is going to be important for you guys if you're going to be working on Namada mainnet and trying to reap these shielded rewards, which will be very high in the beginning, because guess what? There are going to be very few assets in the shielded pool to start with.
00:38:04.032 - 00:38:12.470, Speaker B: So, yeah, tell your friends, don't tell your friends if you want to make all the rewards for yourself.
00:38:15.960 - 00:38:47.040, Speaker A: But just to pin in a little bit more on your question right at the beginning of the network. Yeah, conceivably you could detangle who it is that is in the set. But since there are these rewards, the incentive is more people will be added to the set, more assets will be shielded, and it will be less and less obvious who it is that's inside of the set. So maybe at the beginning, but all you do is put it inside the set. All it is, is inside the set. So as it increases, like at that point, it becomes very difficult to disambiguate.
00:38:57.540 - 00:39:39.080, Speaker B: Yes. So great question. Within the shielded set, you can only make transfers. However, it supports any asset type. So you could send an LP position as long as it's represented by an ERC seven two one into the shielded set and no one knows who owns it anymore. So we have this thing called shielded actions where so park was touching on this earlier on, before I started to bore you with my one its own voice. That you could send assets from the shielded pool outside of the shielded pool to some protocol such as it needs to be IBC compatible.
00:39:39.080 - 00:40:41.468, Speaker B: Because you send this as an IBC message to I believe Osmosis does liquidity pools. So you can get the LP token from there and then send it back to Namata. And in this way you can kind of create this shielded liquidity position, which is very cool, and get to use the liquidity that's on Osmosis at the same time. One thing I forgot to mention with these rewards, which is very cool, is that they're distributed in a shielded manner. How do we know who to send rewards to without knowing who owns what? We don't. Instead, this conversion itself is part of the circuit and occurs algorithmically based on some really cool cryptography that we've added to what Zcash Pre built for us. You had your raised, your hand raised.
00:40:41.468 - 00:41:58.532, Speaker B: So that's a very good question. And the beauty of IBC is that when you make, I don't know, Aztec worked on ethereum. Right. So then you do need bridges to get out of the Aztec network and onto something else. But the beauty of IBC is that you can so far, even though it's in the specification, comet BFT has implemented it so far. All I know that people use IBC for is moving assets from one place to the next. But IBC is more powerful than that.
00:41:58.532 - 00:42:56.420, Speaker B: It allows you to attach what's called a memo field to the transaction which is received by the other chain. And as long as the other chain is a contract that reads the memo field of that IBC message, it can execute arbitrary logic based on what is specified in that memo. So in this sense, what is needed from a developer point of view is the app on the other side. So Osmosis, which we're doing a collaboration with, needs to implement in their I don't remember if they call them smart contracts there as well, but their equivalent form of smart contract that they will interpret this memo field. And then all that is needed from the Namada side is to write that memo field in a way that it can be interpreted by Osmosis.
00:42:56.500 - 00:43:58.380, Speaker A: And then we're, it seems are you familiar with IBC itself? Okay, so IBC allows you to pass packets between any IBC compatible chain, which means you don't need a bridge. So you have the system of receipts between them, which allows you to not have to worry about building bridges between layers of anything that's in the cosmos. And that's one of the greatest value propositions of Cosmos is actually, the stack that Cosmos is built out of is mutually compatible between all chains within Cosmos. They're each atomic L ones, which can be used either as an individual L, one that's acting as an app chain or as with a modular stack between different pieces of a stack that you're trying to build. So packets that are sent between them don't need bridges because you're using a message transfer protocol between them. That doesn't require you to actually build a bridge because it's instantly already compatible between either parts of the stack or different chains.
00:44:00.400 - 00:45:22.190, Speaker B: So, yeah, if you wanted to send addresses between machines, then you need to use this form of address, which is actually interpreted by the chain. So in order to find that, you type, you can do mask address list, but this actually brings in all the ones. Oh, wait, no, it doesn't actually bring in the mask ones. So here we have this park payment address payment address, where this is what you'd need to send to someone else for them to transfer the asset to you within the network. Obviously, as a user, the wallet takes care of this for you. But if you're building a wallet, I'm assuming no one here is building a wallet, but if you're building a wallet, this is where you'd grab these addresses from. Yeah, that is another great question.
00:45:22.260 - 00:45:47.160, Speaker A: It is a great question, but more important to understand is that a lot of the pieces that go into Namada are parts of Anoma has all the qualities of Namada. Namada doesn't have all the qualities of Anoma. So the way that Namada is built is off of the stack that Anoma will eventually use, but it is a separate L one.
00:45:49.370 - 00:47:27.382, Speaker B: To answer specifically, what parts of the stack Nomada uses that is part of Anoma is that Nomada uses this validity predicate architecture. So whenever you hear Intent Centric architecture, it means that instead of smart contracts, we use validity predicates and validity predicates. Are meant to be coded in a way that it represents what wants to be done right, like an intent. So everything you've seen here with all these transactions, all these transfers, have invoked hard coded validity predicates that are coded in a way that when you make a transfer, it needs to satisfy the fact that it needs to satisfy the conditions that you have the balance that this address that you're sending to is not on your blacklisted addresses, et cetera. But all this is happening under the hood and we don't allow for users to customize their validity predicates on Namada. And that was something that was going to go into the original nomada spec, but we decided to remove that because we targeted another type of use case for Namata, which is just transfers could easily be enabled once we launch if we want that.
00:47:27.516 - 00:48:13.330, Speaker A: So the way to think about it is essentially the architecture within Namada that allows you to perform transfers in the way that we do is what will be used in Anoma as well. It's just that in Namada it's hard coded, so there's no variation of how you can express your intent. The intent is hard coded into Namata itself. So Anoma is going to be obviously you have a lot more variability on how to express your intent, and that will be a lot more in the hand of a user of the architecture that comes from Anoma. But we built Namata on the basis of using pieces of the and therefore.
00:48:13.750 - 00:49:13.186, Speaker B: I don't know if you've heard of our pitch of Anoma or like you're familiar with the stack there, but it's a subtle difference. Once you allow for intents to be generalizable, you also need abstract form of ways to solve these intents. The nice thing with intents being hard coded is that we can provide a simple solver algorithm that's in baked into the protocol. But once you have arbitrary intents that can satisfy any desire, we can't predict every type of intent that will exist and neither produce the most efficient way to solve these intents. And then we need this of solver on top here and suddenly the question or like the implementation becomes much, especially if you want to use zero knowledge proofs over these date changes. So this allows you to do transfers.
00:49:13.218 - 00:49:30.090, Speaker A: Privately and that's it while still using the logic of what Anoma will use, making it so that it's private and still using that same closed validity predicate.
00:49:31.390 - 00:50:43.780, Speaker B: Another thing we had, so Anoma has this thing called Fervio, which is like front running protection. So Namada had that up until or had that as part of the plan to be included. But eventually, because of how we change strategies, we removed that. But when you saw these transactions go through earlier, first it says wrapper transaction hash was valid, and then it executed the transaction hash. That is simply like the reason we structured transactions like this was that first the wrapper transaction needed to be committed by the validators whilst the inner transaction was still encrypted. And then once the wrapper transaction was committed to the validators, would decrypt the transactions using an MPC scheme. And in this way, you get front running protection because nobody knows what the transactions are going to do until the validators have committed to them.
00:50:43.780 - 00:51:06.410, Speaker B: Which is a pretty cool design concept and something that might be implemented in the future. In Nomada, if the community wants it. We use Comet BFT as our consensus algorithm, and OMA will be using an inbuilt, like an in house one called Typhoon.
00:51:11.330 - 00:51:12.080, Speaker A: Yeah.
00:51:26.050 - 00:52:02.810, Speaker B: At the very start of Mainnet, Mainet will launch with this incentive scheme. And I said, like, these values were hard coded for this DevNet. For the next testnet, it will be dynamic. The most recent PR fixes or changes the hard codedness into being dynamically adjusted based on how much is in the shield. So if you want to test this incentive mechanism or this incentive scheme, join the next testnet, which should be out, if all goes well. Tuesday.
00:52:03.310 - 00:52:08.506, Speaker A: Yeah. When? Main net right.
00:52:08.608 - 00:52:09.322, Speaker B: End of the year.
00:52:09.376 - 00:52:10.846, Speaker A: End of the year, for sure.
00:52:11.028 - 00:52:16.718, Speaker B: When? By the end of the year. I don't want to promise you we.
00:52:16.724 - 00:52:25.730, Speaker A: Were aiming for September, but if you're in the discord, you'll be able to stay up to date on the testnet to test all other roles.
00:52:33.190 - 00:53:04.900, Speaker B: Yeah. When you say value accrual, do you mean sorry. Oh, I see. Yeah. We have no. We have no, like we have nothing similar to Olympus or whatever. Is that what you're referring to? But we pay fees in Nam tokens.
00:53:04.900 - 00:53:41.744, Speaker B: You use Nam to in order to governance. We have governance on Amada in order to be able to change literally any parameter of the chain. And that is done by how much you can vote on these proposals based on how much Nam you have staked. So Nam is very valuable in the sense that the people with the most Nam have the most say in how Namata will look like in the future.
00:53:41.942 - 00:54:25.230, Speaker A: Essentially, the value accrual for a Cosmos chain comes from the utility of that Cosmos chain. Know it's not just like an inflationary reward, but the price prediction would be on the basis of paying fees on the network as well as its value to the surrounding ecosystem. So if you wanted to perform actions from within the cosmos ecosystem, then the utility of this having things inside the pool and having your rewards during the form of nom or your staking rewards from the validators that you're staking to the value of the network is dependent on how much is being used within the entire cosmos ecosystem. So the price prediction, people like what the the price would be as a result of people's perception of the utility of the token itself.
00:54:27.760 - 00:54:36.212, Speaker B: Sweet. We're three minutes over. Thank you all for taking your day. And we hope you learned something.
00:54:36.386 - 00:54:42.100, Speaker A: Yeah, for sure. Thank you. Sweet.
