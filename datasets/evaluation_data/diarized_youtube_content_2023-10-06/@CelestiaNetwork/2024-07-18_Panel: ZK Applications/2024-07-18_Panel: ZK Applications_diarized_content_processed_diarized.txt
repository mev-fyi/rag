00:00:01.880 - 00:00:31.896, Speaker A: Hey, everyone, how are you feeling? We are almost at the end of this third modular summit. How are you doing? Feeling good. Still have a bit of energy. I'm really excited about this panel. I feel like I've been sort of looking forward to it all day. When putting together this program, Yaz was kind of saying like there was an attempt to have more of a focus on applications. I don't know if it was successful, but that was sort of the push.
00:00:31.896 - 00:01:18.534, Speaker A: And with today's panel, the plan is to actually talk about ZK applications. But even still in the ZK space, I feel like we're probably going to end up talking about some of the infrastructure just leading up to the applications, but we're getting closer. Like a few years ago we were really talking about the proving systems, only then it was like some implementations of those proving systems, then it's like scaling solutions, then it's co processors. You're still in infrastructure, you're getting closer, but you're not quite at the user. But today I have three guests with me that I feel are working much, much closer to the user and actually maybe in your case, directly with the user. So a true application. Let's start off with a couple of intros.
00:01:18.534 - 00:01:20.710, Speaker A: Ayush, why don't we start with you, Ayush?
00:01:20.750 - 00:01:39.190, Speaker B: Yeah, I'm Ayush. I work on zkemail primarily. So the idea is that you can make proofs about any email you've sent or received and use that to either trigger blockchain transactions via emails directly, or use it to prove any identity information that you already have in your inbox. Cool.
00:01:39.230 - 00:01:47.250, Speaker C: I'm Tracy, I'm the co founder of Pluto, and we're making web proofs, which is a proof of Internet data that you can use for a variety of things. We'll talk about.
00:01:48.200 - 00:02:16.060, Speaker D: Hi, I'm Florent. I'm working on proof of passport, and what we're doing is making it really easy for users to scan the data that's in the NFC chips of their government issued id, whether it's like id cards, whether it's like purely digital id, whether it's passports, and making sure that they can do like, selective proofs of specific things with it without like, disclosing all of their private data if they want to like, be compliant or just prove that they are real human beings.
00:02:16.430 - 00:02:27.502, Speaker A: And maybe just to make a slight distinction between these projects. So in your case, you're actually working with an end user. So you have an application. So yours is a true ZK application.
00:02:27.646 - 00:02:28.462, Speaker D: Yeah, I guess so.
00:02:28.526 - 00:02:35.462, Speaker A: Okay. Wow. Yeah. We have one, a use case, but.
00:02:35.606 - 00:02:36.742, Speaker C: Use case has emerged.
00:02:36.806 - 00:02:47.610, Speaker A: The other two, I mean, tell me if I'm wrong, but I think of what you're doing is like just before that application, the web proofs. Like a developer would be using these, right?
00:02:47.750 - 00:02:53.490, Speaker C: Yes, but they live in your web app and we'll probably build some applications. I don't want to spoil things.
00:02:53.530 - 00:02:56.746, Speaker A: Okay. Okay. So you might go forward to the user.
00:02:56.898 - 00:02:58.110, Speaker C: I know, it's crazy.
00:02:58.850 - 00:03:44.210, Speaker B: Well, I would say we have, I think you sort of need both. Like you, like we have this library. It's like in eight lines, you can define like a new type of proof, or you can, you know, in three lines of the SDK, you can trigger a transaction from an email wallet. But it's also, I think, to know what to build, we also have to be building the applications or work very closely with people who are building the application. So in our case, I think we saw ZKP two P at one of the ZK hacks, take some of the ZK email tech and just run. And that even deployed itself on Mainnet using ZK email tech, which was really cool. And then on the core ZKe email team side to give ourselves product feedback, we also have some, I guess you could kind of say this is a user facing application, but it's like two FA and account recovery on existing wallets with emails.
00:03:44.210 - 00:03:54.938, Speaker B: And so it's kind of like an add on to any existing wallet. But we are going to see the moment we launch on Mainnet, probably next month, we'll see users start actually making these proofs for wallets.
00:03:55.034 - 00:04:11.130, Speaker A: Okay. I'm trying to come up with a slight definition, though, of what category? Like at what level are these projects that you're building, you two? It's almost like just under the application, it's like middleware.
00:04:11.250 - 00:04:12.150, Speaker C: I don't know.
00:04:12.530 - 00:04:16.034, Speaker A: Yeah, I always feel bad when I call something middleware.
00:04:16.082 - 00:04:20.642, Speaker C: I know it's a horrible, it's an SDK API.
00:04:20.706 - 00:04:22.514, Speaker A: It's got like a weird. Hmm.
00:04:22.642 - 00:04:38.974, Speaker C: The reason is it's like not a pure protocol. Right. So we can't just ignore all the realities of how user experience and devx experience works and just like write pure rust code and ship it. We actually have to get into the meaty bits of how web apps and mobile apps work. So that starts to get to middleware.
00:04:39.062 - 00:04:39.462, Speaker A: I see.
00:04:39.526 - 00:04:56.182, Speaker B: Maybe I see it as there's some sort of dev tooling layer between the user or the application developer and the ZK stack. So they don't need to think about circum or ZK or constraints. They just define the parameters of their proof and we figure all that out for them.
00:04:56.246 - 00:05:25.812, Speaker A: Very cool. Let's talk a little bit about ZK applications. So in your case, you're doing proof of passport, and like, I think that's firmly in the id type application. And I feel like there are other variations of that. So the one you're doing is working with, I guess, the NFC chip in a passport, in a physical passport. There are others that do identity based on, on chain activity. You had mentioned stripe.
00:05:25.812 - 00:05:34.400, Speaker A: So this is like, I guess Photokyc or is it just because you have an account or you have a bank account? How does that.
00:05:35.280 - 00:06:00.620, Speaker C: Yeah, I guess there's a lot of identity information stored in different places. And passports is one. And central databases like stripe or even Coinbase. KYC is like an example of identity data. Usually it depends on some sort of identity document in order to get that data into Coinbase, but then you can kind of transport it out of that with approve.
00:06:01.110 - 00:06:04.902, Speaker A: Although I'm just realizing actually those aren't ZK examples, those are just regular id.
00:06:04.966 - 00:06:12.886, Speaker C: Examples, but ZK just standard id, but the ability to port it around and have authenticity is where ZK comes into the picture.
00:06:12.918 - 00:06:37.424, Speaker A: There, there were also previously like Zkid, which were like, I mean, this is a project I always bring up like Cismo. I just thought that was so cool, the badges and stuff and like zkps to accounts that were unattached activity that had happened on other accounts. You're currently in the id space. Are there any other sort of like ZK id variations that you've seen?
00:06:37.592 - 00:06:44.704, Speaker D: Yeah, so we're actually mostly working on passports, but now there's a few teams. Well, there's a few teams working on passports and there's also, I think I.
00:06:44.712 - 00:06:46.240, Speaker A: Know it's you and two others.
00:06:46.320 - 00:07:07.162, Speaker D: Yeah, yeah. Like the rarimore Freedom tools people. There's like ZK passport. There's also a lot of team, like just teams, like just prototyping like id stuff. So there's one doing like the taiwanese, like digital identity. There's like Mina wallets doing it with the my number cards in Japan, which are really nice because they can like sign transactions, do a bunch of things. There's like different id systems.
00:07:07.162 - 00:08:09.326, Speaker D: And my take on all of this is that like trust and like identity online have been extremely hard to make work basically since the beginning of like the Internet in the nineties, because data is really simple to transmit and send and store, but trust is much harder to transmit because it relies on this very human interactions and networks. And this is why basically every web of trust system that has tried to do under collateralized lending or something has pretty much not worked because it's very easy to attack. I think the key thing that's happening right now is that ZK is becoming just practical enough that we can take all of the sources of identity that are not purely on chain. I think this is the mistake that system made personally. They just focused on the on chain stuff. But now we can take id cards, passports. Okay, they are not perfect.
00:08:09.326 - 00:08:49.306, Speaker D: I guess countries can cheat and means an arbitrary number of passports, but they are not doing it right now. So right now we can use it to bootstrap those networks. And then maybe later we have other problems of the countries are cheating or something. But when that's the case, half of the work is already done because we can bootstrap those very reliable trust systems. And I guess signatures is the kind of perfect way to do it because you can directly prove them in ZK. And for other things, you've got a TL's notary style designs and other designs that you can use to bought this data in web3.
00:08:49.498 - 00:09:28.890, Speaker A: It has felt like there's sort of a disconnect between some of the zkid stuff and the stuff that people actually use for iding things. And still, even in the examples you gave, I feel like there's one missing. And I'm curious if anyone else does this, but whenever I'm trying to verify whether something is real, I actually just go on Twitter to see if that company released that link or that somebody I know from that team has, like, clearly put it. And I will not even always trust that one tweet because, you know, that could be compromised too. But I'm using. It's so weird if you think about it. Like, that's my attempt to get that authenticity stamp.
00:09:28.890 - 00:09:42.380, Speaker A: It's quite weak. But yeah, I'm just. I'm thinking like, this bringing together of all these different senses for identity will be really exciting. And ZK does seem to be the only thing so far that can really do it.
00:09:43.200 - 00:10:02.900, Speaker C: Yeah, I think building on what Florence said, I think ZK lets you have portability of trust without a custodian. So in the past, you had to kind of trust somebody else to go get information from one place, move it to another, and you needed a custodian in the middle. And now you can just carry forward the provenance of that trust, which is a powerful primitive.
00:10:04.730 - 00:10:14.750, Speaker A: Do either of your products do that, though? That thing I just described, where you go to Twitter to see if it was tweeted. Oh, I see, Colton, a verification?
00:10:15.810 - 00:10:34.020, Speaker C: Yeah, I think we could make a proof of a tweet having happened and I guess you could carry that around. You could bring it to a different website or to a blockchain. That's a little bit less about the authenticity of that tweet, though. It's more just like, assume taking for granted that it was truth when it was tweeted.
00:10:34.960 - 00:11:02.896, Speaker B: Yeah. I think similarly on proving data from a place like Twitter. I think when you want to get that web two, data onto web3, the ideal world is somehow Twitter has made a digital signature, attesting this is what happened. And then you can wrap that digital signature in any ZK proof and prove it on chain. And a lot of the trouble we've had is that these signatures are quite elusive. Platforms don't really sign most things. Some social media platforms, like Bluesky or Farcaster, have really been like signature maxis.
00:11:02.896 - 00:11:37.770, Speaker B: Like, every post is signed, every action is signed. And that's huge because those are immediately interoperable with not just unchained tools, but any tool that connects to unchained tools. And so that's quite powerful. And you can really build really interesting systems on top of that. And in the Twitter example, for instance, they send some interesting emails which you can directly hijack the signature off of and make proof. So, for instance, they can tell you, oh, here's what's in your feed today, or they can tell you, hey, this is your username, and so you can get some of those directly, but for the others, you need to trust, like a notary or a proxy or something like that, which is still better than what we have today, which is nothing at all.
00:11:38.910 - 00:12:34.970, Speaker C: Yeah, this is like, exactly the limitation with web data today is none of this stuff is signed. So you have to come up with some clever scheme in order to emulate signatures, which I admit is like a shitty solution because you have a collusion problem. Collusion, literally. I was laying awake last night thinking about this collusion problem because it literally keeps me awake and trying to devise clever schemes to avoid it. But I think the perfect solution would be, like, all the web servers just emit signed data. There's a spec called SXG, which is about signed exchanges, I think it's called, but about signed web data. I'm somewhat pessimistic this happens at scale in the next few years, but maybe we can kind of encourage the adoption of it and also show the demand for it by using a tool that may have collusion risk to start building use cases that are interesting, like the Twitter account escrow I talked about a little bit earlier and other things.
00:12:35.090 - 00:13:12.324, Speaker A: Yeah, Tracy, you just gave a presentation earlier today. So I think we sort of, we have a better sense for web proofs and how that's built. We also, you had a bunch of people asking you questions also kind of figuring that out. But, ayush, we didn't hear from you about how Zke email works a little bit deeper. And I think it would be good, especially because I have these other use cases I want to kind of bounce off you guys. So I want to, like, I think it's important for us to understand exactly what that's doing, because that is sort of one of those workarounds you talked about where it's like, we don't have access into the companies, but the only thing we have from them are the emails that they're sending out of, and then we can do stuff with that.
00:13:12.492 - 00:13:54.540, Speaker B: Yeah, it's a great question. So the core idea behind ZKe email is that we hijack the signature on every sent email. So, for instance, since 2017, there's been this DKIM standard in play in which all sent emails, the sending mail server signs with an RSA key. And so the idea is that, say, Venmo sends you an email. In order to land in your Gmail inbox and get verified, Venmo needs to sign it with their RSA private key and then sign from the to the subject and the hash of the body, and then you can verify that. And specifically, Gmail mail server does, when you receive that email to check, oh, does this key that signed it match the key that Venmo posted on DNS? And so what we can do is we can wrap that entire thing inside a Zkproof. And then we threw.
00:13:54.540 - 00:14:18.208, Speaker B: We also built Regex inside a Zkproof, and we threw regex on top of that. And now you can parse out any data you want in that email and make just that data public. And so the idea is that, yeah, it's a little bit cheeky. We're taking this data that was never really meant to be proven, that was never really meant to be outside of your own inbox. And we're kind of hijacking and say, hey, we can prove your email domain, or we can prove your username, or we can prove you have an account or something like that. Yeah.
00:14:18.344 - 00:14:35.034, Speaker A: And the example you had given there was Zkp two p, where it's like a Venmo account and you're using the literal. This took a while to sort of realize what it really was, but it's like the literal emails that Venmo, the company is sending the user is what you're using. It's awesome.
00:14:35.122 - 00:14:54.274, Speaker B: It was really cool. I mean, we didn't even communicate with ZkpDP by the time they had built the first version of their product. And then we were like, oh, wow, yeah, this is great. I'm so glad someone did this. And it's really lucky. It just happens to be the case that Venmo provides these really nice emails which they have the sender, the receiver and the amount, which is exactly what you need to prove that a transaction happened on chain.
00:14:54.362 - 00:15:36.170, Speaker A: Yeah, that's so cool. I want to now. So we kind of, we've covered id somewhat, but I want to now think of some other cases. So generally, traditionally ZK applications were used for payments, or the ZK application was payments. And we gave one example which is kind of like a modern version of that, which is the ZKP two p example. Are there other ZK payment systems other than like zCash and the kind of more traditional ones that can use your tools or can you envision sort of other ways that like you could use, you could create ZK payment applications?
00:15:37.630 - 00:16:30.092, Speaker D: I mean, I guess one thing that's interesting in, well, it's not just payments. It's like the intersection of payments and ID is that now that we have all of those like reliable sources of identities, we can do stuff like for instance, instead of having to KYC into all of those different payment providers and banks and everything, maybe I can just show that I have signed data from the government from my passport or ID card that shows that I can do this transaction. For instance, I do locally approve that I'm not on the OFAC list at the time when I send the transaction. And so even if the OFAC list is updated every time, I can just prove that again. And this is actually all doable in circuits, which is really cool. One of the things we're working on, very excited by. And I guess what's interesting is a lot of payment systems from zcash to tornado, and those are basically all the same designs in the end, also the same ideas.
00:16:30.092 - 00:17:35.354, Speaker D: Semaphore. It's basically just proving you are included in a big mercury in a snark. They were not really suitable for anything that could combined with the traditional financial system because they were so obfuscated. And so I think it's one of the things that made some actors kind of think that, oh, ZK is necessarily dangerous because it's like this privacy preserving thing. But if we can show that you can have the privacy preserving properties for what you want, like, I don't want to disclose all of my data to many different companies every time I kyc, because it's just like, obviously not secure. There's going to be leaks. It's like, sure, in the long term, but just use it still to have enough, I guess, compliance or just rules so that we can be interoperable with the rest of the financial system, which has those rules, then we can unlock a huge thing that's a way bigger bridge between, I guess, the crypto world and the rest of the world.
00:17:35.354 - 00:17:42.630, Speaker D: And that can allow us not to be that, I guess, isolated from the rest of the economics.
00:17:43.610 - 00:18:26.830, Speaker C: Yeah. Doing that while preserving sort of the values of a blockchain that you have privacy and these types of things, it feels super powerful. The regulation probably would need to change for this to ultimately work in the best way possible. Because my understanding of it right now is KYC has to originate on the place where you're going to do the money transmission. And so if you try to prove that KYC or bring it across from a different system, you can't really use it to be KYC'd in a new system. So I talked to a couple companies about this. Like, could you build a Kyc flow purely with Zkkyc? And they were like, no, it won't meet our regulation, but hopefully someday.
00:18:27.290 - 00:19:06.408, Speaker B: Yeah, I think also one underrated payment, ZK overlap is actually ux. Like, you don't usually think of ZK as having very sleek UX. It's like all the proof takes some time to generate. But it turns out that some of the things we stumbled upon are actually, you can improve the UX of payments with, for instance, Zke email. Like, for instance, you send a transaction, if it's over $1,000, then your multiseg automatically has an email sign and it says, hey, are you sure you want to do this transaction of $1,000 over email? And you confirm, and then now the transaction goes through. And so this was like one of the cool things we built where it's like, oh, this actually improves the UX of payments and improves security in a way that one wouldn't really necessarily expect ZK to do.
00:19:06.504 - 00:19:49.260, Speaker A: That's fascinating. As you guys are talking about KyC. Sorry, I started to just laugh at the, like, this is a little side tangent, I think Amin did a talk about, like, how KYC is evil. And I don't know if I fully agree with exactly the thing in there, I think there's reasons and there's times where you understand why KYC exists. But if you have ever done KYC for a lot of different jurisdictions or companies, and I'm assuming some of you guys have, it's almost like no matter what you did on the other one, you're going to have to do something new on this one. First it's a picture, then it's you and the passport. Then it's you tapping your head, turning around for rubbing your belly.
00:19:49.260 - 00:20:22.780, Speaker A: Make it, like, on one knee. Like, picture of your house, making sure you're with you and a dog. Like, it just gets weirder and the questions get stranger. And I guess that's why, even though the dream is, and I don't know if everyone knows how the ZkkYC would potentially work, but it's like you show your data, once you show the passport is valid, you show it's not on list. You kind of, like, prepare all those things, you wrap them up into a proof, and then all people need to see is that the proof verifies. So the thing has been checked, and now it verifies. That's the dream.
00:20:22.780 - 00:20:28.380, Speaker A: But it's true that these systems are so freaking different every time.
00:20:29.040 - 00:20:47.280, Speaker C: Yeah. I think people have daydreamed a little bit about a one password. You have all your passwords, but instead you have all your proof material stored in this thing. And you go to a website and you need to KYC and you click a button, proof material gets pulled into the website. None of your privacy is leaked. The website checks it. It's like, that looks good to me.
00:20:47.280 - 00:20:52.442, Speaker C: And you're through. Yeah, that's like a pure ux win for actual users.
00:20:52.506 - 00:20:56.562, Speaker A: If it worked that way, it's technically possible.
00:20:56.666 - 00:20:58.026, Speaker C: It's just a distribution problem.
00:20:58.098 - 00:20:58.906, Speaker D: It will happen.
00:20:59.018 - 00:20:59.594, Speaker A: You think so?
00:20:59.642 - 00:20:59.890, Speaker C: Yes.
00:20:59.930 - 00:21:00.826, Speaker A: I like this.
00:21:00.938 - 00:21:06.586, Speaker D: I think it will happen. The question is, who does it? Does Apple do it in Apple wallets or do other people do it?
00:21:06.778 - 00:21:43.630, Speaker A: Yeah, maybe if one of the big ones does it. So we've talked a little bit about id. We've now done KYc, which is kind of related. We've talked a little bit about payments. I now want to just, like, share if you know other kinds of uses for, like, ZK. Because now, you know, the purpose of this panel was really like the application level. Like, maybe it's ideas that you have, things you want to build or things that have already been built using your system, or maybe it's like other applications that you would use yours with.
00:21:44.530 - 00:22:31.722, Speaker B: I think one. So we were very curious about this precise question, and so we ran this residency where Florent and I were at during May, called signature singularity, where we were exploring what are all the signatures we can find in the wild. Can we make a bunch of proofs of them? And can we build them into user apps where everybody at the end of the month has to be able to try your app, it has to be user friendly? And there were a bunch of really weird signatures we didn't expect. So there was, I mean, Florent mentioned some of the ID ones earlier, like the minor card. There was also one interesting one around appatest. So it turns out that, for instance, Apple signs that your app executed correctly on the iPhone. And so you can prove, oh, yeah, I actually query the location API and I actually returned this value, and then I queried the image, the camera API, and returned this face.
00:22:31.722 - 00:23:30.190, Speaker B: And if somebody goes through all the process of jailbreaking their phone, maybe they can get past it. But overall, it's like, for 99% of users, this is kind of like a very user friendly way for them to interact with ZK. And it's a very nice way to get proof of app execution onto a ZK. Proof and interoperating with other things. So that was a really interesting exploration. There's also one line of research which cursive is kind of leading, which I thought was very curious, which is that ZK provides truth, but what do you do with that truth? And so the whole shtick is maybe ZK alone is interesting, but what if you combine ZK with two PC fhe, and you build really interactive social experiences that are really fast and you use lots of advanced cryptography. And we actually saw some of this stuff at ZK Eleven in Athens, where the attendees put things about themselves in the app, and you could tap somebody else's NFC and overlap with PSi, which is like this other crazy cryptographic primitive, the things you have in common without sharing it to a server.
00:23:30.810 - 00:23:39.738, Speaker A: That's so cool. Nice. Any other, first of all, I don't know, is there a write up of all of those ideas that you had?
00:23:39.834 - 00:23:58.072, Speaker B: Yeah, there's a ton. So if you go to demo dot sigsing.com comma, like demo dot sigsing.com dot, we have an hour and a half demo video where each of maybe 15 teams presents like, here's some crazy signature we found, here's the proof. And here's a QR code that you can literally try right now.
00:23:58.136 - 00:24:13.140, Speaker A: That's so cool. I'm going to kind of mark that also because we have an upcoming hackathon, so you can hack Montreal just in case anyone wants to check it out. But we're always looking for really cool use cases, so it might be fun for people coming to that to check it out before.
00:24:13.640 - 00:24:30.266, Speaker B: Yeah, I think it's useful both as inspiration, like, whoa, I didn't know you could do this. What if we built this, this thing on top of it? And also here's a bunch of open source code that now I can use to adapt to this new signature. I found that I can make a little bit more efficient by making it in this proof system. And I think it's a really cool start of a brainstorming tree, I think.
00:24:30.338 - 00:24:35.030, Speaker A: Very cool. Tracy, I want to hear some of these weird app ideas.
00:24:35.330 - 00:25:14.422, Speaker C: I've been thinking about traditional payment rails a little bit like credit cards and debit cards and potentially attaching to the back end proof of a transaction happening there. There's this smart young guy I know. His name's Sophia. He's been brainstorming some ideas around the stripe API and using that with credit cards. But we had actually both had ideas around, can I create a credit card and on demand have someone else fund it for me and have anonymous payments so I could anonymously buy something. And the company that I'm purchasing from the e commerce store won't learn how it was funded. And I could maybe even fund it with money from Zcashenhe.
00:25:14.422 - 00:25:21.682, Speaker C: So that's a cool one. And I think he's developing some other really clever ideas around gamifying that. So that's one I've been excited about lately.
00:25:21.826 - 00:25:31.330, Speaker A: I actually. I want to add to that. Like, just, I don't think things like gnosis pay have ZK in them, but I wonder if they could. Do you know what I'm talking about with that?
00:25:31.450 - 00:25:33.866, Speaker C: Yeah, that's like a debit card for expenses.
00:25:33.938 - 00:25:42.318, Speaker A: It's a visa, it's a credit card, but it's attached to, like, a gnosis account. So you're actually. It's a not like, you know how, like, crypto.com used to do?
00:25:42.434 - 00:25:42.974, Speaker C: Right, right.
00:25:43.062 - 00:25:49.930, Speaker A: Like, you could pay with your wallet essentially in there. Like, it's custodial in this case. It's like non custodial that.
00:25:50.270 - 00:26:26.196, Speaker C: Yeah. I've. I've actually been meaning to, like, dig into the Ach rails that and the debit credit rails that underlie those. I used to actually work at stripe and I would work on these things. Yeah, there's so like visa uses SFTP actually to like register payment completions, upload this multimegabyte file to an SFTP server owned by Visa. I've been like brainstorming, could I like somehow scheme a way to prove I SFTP'd this? Unfortunately, like you have to have this deep relationship with Visa in order to do that. But maybe there's other rails globally that like this could happen with.
00:26:26.228 - 00:26:30.396, Speaker A: I think they built a relationship with Visa too. I think that was like, it's a fully acceptable.
00:26:30.428 - 00:26:41.614, Speaker C: Yeah, yeah, those types of things are, yeah, they're very official. But I think the money movement in those systems is pretty fixed. So if you could find rails that are more flexible, it could be less fixed.
00:26:41.742 - 00:27:01.734, Speaker B: I mean, one interesting note is also like the first version of the no dispay card a long time ago actually was making a digital signature. It was saying, hey, this is your private key on the card and the private key is going to sign some stuff and Visa is going to pick that up. And I think for UX reasons they ended up switching to their current version, which is a little more UI friendly. But I think also Florentous did a bunch of exploration with credit cards.
00:27:01.862 - 00:27:24.210, Speaker D: Yeah. So me and Ayush, we experimented a bit with actually getting normal credit cards to sign things. And the fun thing is that they actually sign transactions in some way. We couldn't get down to the lowest levels of actually modifying what they do, but I'm 100% sure it's possible. It's just digging a lot in the EMV spec and everything.
00:27:25.270 - 00:27:26.690, Speaker C: I'm familiar with this.
00:27:27.110 - 00:28:01.800, Speaker D: I think it's like a very low fruit for hackathons and everything, because it's a very fun stuff and you could actually use it to do ZKP, two P type system. It's always using things that were not meant for this. It might not work in every case, but I think it's interesting to prototype and basically have a system in which you can peer to peer on ramp or on ramp using someone that has registered as a visa merchant and just signing fees with your card and proving that you send it and everything.
00:28:02.620 - 00:28:04.916, Speaker A: I really like this where I'm brainstorming.
00:28:04.948 - 00:28:12.300, Speaker C: It right now, the on ramping counterparty is the merchant. Like the merchant acquirer. Yeah, this is a cool idea.
00:28:12.340 - 00:28:22.114, Speaker D: Well, you have to register with Visa, but once this is done, you can sign things with your phone, you can emulate the terminal on your phone, so you can just sign with your phone and your cardinal.
00:28:22.192 - 00:28:22.958, Speaker C: That's awesome.
00:28:23.094 - 00:28:34.430, Speaker A: That's cool. Okay, so that was one example, Tracy, that you gave, which is like, revisiting payments. Anything else? You had the Twitter. Selling Twitter?
00:28:34.510 - 00:29:06.972, Speaker C: Yeah. I mean, that's like a general big idea I've been pursuing. We're not quite there yet, but basically selling valuable web, two assets. So you might have a Twitter account that is of financial value. There might also be actions you can take on Twitter that are of financial value. But this is true on many websites. And being able to actually create a system that, without a counterparty or an escrow, can exchange those with an anonymous person on the Internet, it's something I want to actualize.
00:29:07.076 - 00:29:10.316, Speaker A: Does that need a blockchain? Kind of. Would it be something like you would create.
00:29:10.348 - 00:29:33.594, Speaker C: I've actually been thinking of it as a non blockchain centric market where you have two legs of. Of the journey. You sort of have, like, the leg onto the blockchain for the first proof and the leg off the blockchain for, like, money into your Venmo. So, like, I think the ideal user experience is I go to sell my Twitter. I, like, enter a few things, I create a few proofs. Maybe it's like 20 proofs, but a few proofs, and then I get money in my Venmo account.
00:29:33.722 - 00:29:40.436, Speaker A: It's funny that you go to Venmo. Why not just get paid on revolut, wherever you want? Why regular money? Why not just buy it?
00:29:40.538 - 00:29:42.140, Speaker C: Oh, nobody uses blockchains.
00:29:44.560 - 00:29:47.384, Speaker A: Oh, yeah, you're right. What am I thinking?
00:29:47.552 - 00:29:56.192, Speaker C: I mean, true, I'm not all doom and gloom, but, like, you know, it's facilitated by a blockchain, but the users don't have to on ramp and, like, learn how wallets work in this.
00:29:56.216 - 00:30:01.200, Speaker A: It's just funny, though, that you, like, go through a blockchain to get to the payments when, like, blockchains were kind of meant.
00:30:01.240 - 00:30:08.442, Speaker C: Yeah, it ends up being the custodian. It's the. It's the person who can check these. It's the. Or it's the mechanism that can check these proofs.
00:30:08.506 - 00:30:37.124, Speaker A: Yeah. Okay, so that was another one. I want to keep going in that direction, though, because there's some very interesting things, like, okay, so, Tracy, when you were talking about being able to prove the balance in a bank account, I guess this would be like getting access to things, getting accreditation of some kind, because you can prove something in your life. I guess it's still in the KYC bucket.
00:30:37.212 - 00:30:37.636, Speaker C: Yeah.
00:30:37.708 - 00:30:38.292, Speaker A: Or something.
00:30:38.356 - 00:31:00.932, Speaker C: There's, like, interesting social consequences like, I don't know if this is interesting, but like private group chats where you have to be a millionaire to get in there, or like, you know, in order to post on Reddit, I have to like Reddit about GameStop stock, right? I have to like prove I own, you know, prove I've got millions of GameStop and then I'm like the authority even though I'm anonymous. Right?
00:31:00.996 - 00:31:14.686, Speaker A: That's such a good idea. Like if you like all that noise out there for like people who often don't have any skin in anything and they actually don't even know what they're talking about. Like the person hasn't even read the book or seen the movie or bought.
00:31:14.718 - 00:31:18.370, Speaker C: That thing and they're shitting on it, demonstrating some authority.
00:31:19.230 - 00:31:21.410, Speaker A: Wow, that's really neat.
00:31:22.350 - 00:32:26.100, Speaker D: Yeah, I guess another interesting thing is civil resistance in general. So for instance, because of the big bot problem in Twitter, there was all of this talk about, for instance, mask creating this blue check thing, which you can pay, and a lot of bots ending up just paying it. And so now the replies on the average with are just way worse than before all of this was even instantiated. And yeah, I'm not so sure it would be so easy to see attacks these kind of systems if you had to actually use attestations like id cards or passports or even other web two like data attestations, like the fact that you have Google Twitter accounts that are connected by the same email, you can do snacks of this using zkjwts and aggregating all of those sources of data. And I think it's very interesting to think about what social medias could be like if verifiable trusts and attestations were built into them directly.
00:32:27.520 - 00:33:28.136, Speaker B: I think there's also, I mean, two use cases that we've been thinking about. One is this kind of, I think it's like maybe a little bit clickbaity, the way people talk about like AI and crypto. But I think there's two very interesting, like, verticals here which are, in my opinion, changed quite a bit by ZK. One is how you sell training data to these like kind of AI companies. Currently, some central middle company like Facebook or whatever, sells all your data directly. But if users can prove they own the data, they own the username, and then they group together in these data dials like Vana is doing, and then you sell that directly to the buyer of that data, then you can split it amongst the users in kind of this data guild like format. And I think that requires ownership proofs with ZK to be able to do this, which is, I think, one cool thing that's unlocked kind of on the training side of AI and then on the inference side of AI, there's often these models, it's very hard to tell like whether something came from a model or from reality.
00:33:28.136 - 00:34:09.842, Speaker B: And I think you talked about the KYC checks and those get way worse. Like now you can have a model generate yourself pulling three fingers and dancing on a ball, and it works totally fine. And so if you want to get around that, I think it's actually good that now the AI's can do that because now you have to trust cryptography. There's no way around it. And so you have to build these rails or else you're not going to be able to tell like truth from fake things anymore. And I mean, Tracy mentioned this in the talk, but there's this whole line of research around perceptual hashing where now if you can make like, let's say you have some image and canon signs some perceptual hash, or OpenAI signs a perceptual hash, like, hey, I generate this image and it looks roughly like this. And now you see some image floating around online and you say, hey, here's an image I found.
00:34:09.842 - 00:34:34.888, Speaker B: The perceptual hash looks like it matches. You can do that in fhe and prove that you found that match in ZK and say, hey, this image that I saw that's cropped and compressed on WhatsApp actually came from OpenAI. It actually came from the New York Times or actually came from canon. And so there's a lot of these really weird, like kind of out there use cases that only crop up when AI is strong enough that it actually like, changes dynamics of how humans interacted.
00:34:35.014 - 00:35:22.606, Speaker A: Yeah, although that example, because like, we know, we've done experiments around the more basic form of that, which is like the zkps, to prove provenance through transformations, but it's dependent on the first thing having a signature and it's dependent on whatever tool you're using to make the changes having this like ZKP creation. And so it's like if you took then like a screen of the thing and did something to it, it loses it. So it's, and I even know some teams doing it and I really want to see that in the world. I think it should be in the world. But at the moment it still feels like an experiment. Like I don't know how it gets really, really believed or used. I don't know how it gets like authority.
00:35:22.798 - 00:35:28.764, Speaker B: I think the Proteus approach of using perceptual hash is really strong there, because the perceptual hash is robust to screenshots transformation.
00:35:28.852 - 00:35:30.820, Speaker A: What is that? Perceptual hash?
00:35:30.980 - 00:36:00.428, Speaker B: You can think of this as like an intermediate embedding that an AI model generates. Or something is like, oh, here's like 160 bits that describe something of the form. There's some edges here, and there's a cat on that tree or something like that. And that is, even if you compress, crop change, whatever, you can still map it back to, oh, this is kind of the core information that was in the image. And this means you don't have to do proof of transformation. You don't need Instagram to implement this into their editing app, and you don't need a signature to come from the original OpenAI source. You can say, someone else can be like, hey, I am the trusted.
00:36:00.428 - 00:36:20.220, Speaker B: I look at the New York Times every single morning and I sign every image and I put it up here, and as long as you trust, I did my job in the morning, it's good enough. And so now you've removed both those requirements. You don't need the original signer to sign, although it is nice, and you don't need the image editing app to include it, which in my opinion, is never going to happen. It's so heavy and it's so difficult. You need to have a way to reverse engineer these images without doing the transformation.
00:36:20.260 - 00:36:22.780, Speaker A: So in this case, though, you're proving that it is aihdenite.
00:36:22.850 - 00:36:36.260, Speaker B: You're not proving or not AI. Like you can prove, oh, I can prove. The New York Times put this on the homepage, and then it's like, yep, that image, maybe it's a, maybe it's not, but at least the New York Times attested to it at this point in time. And you can prove that even with a web proof.
00:36:37.360 - 00:36:38.380, Speaker A: Interesting.
00:36:39.400 - 00:37:06.022, Speaker C: Yeah. One thought that came to mind is like, while Ayush was going through this is like, the more adversarial the environment becomes, which I think AI is making the Internet an increasingly adversarial environment, the more important cryptography becomes. And I think this is a trend, really. I've like, I'm thinking a lot about over the next ten years, I think the environment's going to continue to get adversarial, and the defensive tech we can use to counteract that is really cryptography.
00:37:06.166 - 00:37:23.644, Speaker A: Oh, I've also had that thought. I didn't know exactly how that looks, but it seems like cryptography even blockchain. But ZK seems like the humanness hopefully preserved somehow against this wave of other stuff.
00:37:23.812 - 00:37:32.972, Speaker D: Yeah, they can do fake images of everything, but they can break D log. Right now at least. They cannot break discrete log and all of what we use, which is cool.
00:37:33.156 - 00:37:39.640, Speaker A: Yeah, for now, if cryptography is lost, is all lost.
00:37:40.540 - 00:37:45.246, Speaker B: I mean, that's the ultimate Deac tech. It's the ultimate defense system we have.
00:37:45.438 - 00:37:58.838, Speaker A: Is it the ASI? It's the artificial superintelligence. Before that, hopefully, we can still hide behind the cryptography. We have 15 seconds left on the clock. What should we do?
00:37:59.014 - 00:38:00.170, Speaker C: Audience question.
00:38:00.630 - 00:38:02.210, Speaker A: Is there an audience question?
00:38:10.520 - 00:38:15.220, Speaker D: I don't have a question, but this is the best fucking panel I attended for years.
00:38:15.840 - 00:38:18.456, Speaker A: I think so, too. I just said that I liked it.
00:38:18.528 - 00:38:20.720, Speaker C: Here's to the real ones in the room. Thank you.
00:38:20.800 - 00:38:33.560, Speaker D: It's not just discussion how cool my project is or how cool my project is. It's just about things that people actually touch within, like, next 510, whatever, 20 years, and it's awesome. Thank you.
00:38:33.720 - 00:39:03.090, Speaker A: Thanks for that. Cool. Any other questions? Comments? So, you know, the way that all of your approaches are going about things, you know, you're not like, you know, the data provider is not expecting these tools to be used this way. But why not, like GDPR to get data from the big tech companies? And I maybe put it in a Merkle tree.
00:39:03.130 - 00:39:15.990, Speaker C: And, yeah, you can use a web proof to pull a zip of your Google GDPR data and unzip it and prove that it contains some information. I think that's GDPR is, in a weird way, an enabler of some of this.
00:39:17.130 - 00:39:22.630, Speaker A: That's interesting. Anyone else?
00:39:24.050 - 00:39:50.818, Speaker B: Oh, hey. So what do you guys think is the best way to have cyberez resistance for, like, airdrops or on social media? Like, is it just about, like, if you prove you have a Reddit account with an Amazon account and you bought stuff that adds up a certain amount of points, and then a passport would exam, like, for example, would add the most points. Yeah, like, what's your idea on that?
00:39:50.954 - 00:40:36.412, Speaker D: So I think that, like, the. All of the recent airdrops, I've kind of shown that, like, airdrops cannot continue, like, going the way they are right now because it's basically a lot of just, like, people just attacking them, and it's really hard for them to actually understand how they can incentivize real activity on what they're doing. So a really interesting approach is what Gitcoin passport has been doing, and they started doing it originally for Gitcon quality funding grant rounds. And so they have this system in which you can connect all of your accounts, basically like Google, Twitter accounts and everything. And you can have this scoring system and if your score passes a certain threshold, then you get access to your passes. A real human. And it's actually quite good.
00:40:36.412 - 00:41:20.736, Speaker D: We tried to basically break it by creating accounts and it's actually quite hard. So I think it's interesting. My guess is that we have to go further than that. For instance, they're not matching attributes in between multiple things, so we can actually just connect accounts that have different emails, different names. You could actually match them and you could actually match them in ZK so that you don't even have to reveal to Gitkin passport itself like the link between your accounts. You could do this kind of thing way more generally with other attestations that have just recently been prototyped in CK ids and everything. And I think it's really the way to go for severity resistance.
00:41:20.858 - 00:41:25.920, Speaker A: That really was what Cismo was, too. Sorry, every time you say it, I'm just like, Cismo.
00:41:26.420 - 00:41:27.020, Speaker C: Why?
00:41:27.140 - 00:41:30.076, Speaker A: It was such a cool project. I don't know if you guys know it.
00:41:30.108 - 00:42:15.798, Speaker C: I've been thinking about this a bit too. I think you probably also just want a model to estimate the quality of an account at the end of the day. So one of my brainstorms is every transaction comes with a proof, and that proof is similar. There's a tool called Stripe radar which checks for fraud with credit card transactions, but it's the same kind of thing for blockchain transactions. You bundle up a bunch of this information and you're a magical one. Password that has all your proof data and you run it through a basic scoring classification model. And maybe the app developer who builds that app could even layer in new factors on demand when they see a new attack come through or an emerging threat happens and be like, oh, actually I need a little bit more information because someone's been breaking our system lately.
00:42:15.798 - 00:42:20.886, Speaker C: They can stick this in and it'll just pick it up, include it in the proof and your transaction goes, settles with its proof.
00:42:20.958 - 00:43:04.420, Speaker A: That's such a good idea. But yeah, what you were trying to prove with that, and I guess your question was sort of like finding a way to prove like real genuine activity of a user instead of these silly. Kind of like, yeah, farming, just tons of accounts doing dumb things. Yeah. Anything else we should talk about? I think if not, then we can wrap up our panel, our last panel on this stage for modular summit 3.0. For some of us it's also the last event and thing that we're doing at all. So this has been a really crazy week.
00:43:04.420 - 00:43:31.688, Speaker A: Agni, who from the ZKV team and Cohen. Thank you guys for hosting the stage. Yeah, why don't we give them a quick round of applause. Thank you, guys for coming to this last panel. Thanks for watching all of the talks on the ZK track. Yeah, this was done by the ZKV company project. We're a validator running on twelve networks and on Celestia.
00:43:31.688 - 00:43:37.800, Speaker A: So you can also find us there if you want to delegate to us. Cool. All right. I think that wraps us up. Thanks.
