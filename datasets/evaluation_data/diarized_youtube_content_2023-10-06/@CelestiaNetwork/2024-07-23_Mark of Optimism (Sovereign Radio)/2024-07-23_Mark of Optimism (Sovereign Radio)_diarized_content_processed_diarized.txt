00:00:00.600 - 00:00:23.174, Speaker A: Hey, guys. Welcome back to Sovereign radio. It's day two of modular summit Brussels. It's rainy but pleasant. I'm Hart Lambert, co founder of across and apparently part time podcaster. I'm here with Mark, one of the co founders of Optimism. We're going to talk about all things op, modular, stack, all that.
00:00:23.174 - 00:00:32.180, Speaker A: So, Mark, it'd be cool just to start with your origin story, how you got involved with optimism, how you got involved with crypto. Yeah, tell me more.
00:00:32.340 - 00:01:04.550, Speaker B: Yeah, totally. So crypto is kind of like this, like, revolutionary technology. And before I even learned about crypto, I wanted to go into academia, and I was really interested in getting a PhD and trying to, like, solve, like, the world's biggest problems. I just was really interested in pushing forward the world and the way that we understand it. And I got to academia, and it kind of wasn't what I expected.
00:01:04.850 - 00:01:06.986, Speaker A: Was this, like, a computer science PhD?
00:01:07.098 - 00:01:08.338, Speaker B: No, it was a neuroscience.
00:01:08.434 - 00:01:09.202, Speaker A: Okay.
00:01:09.386 - 00:01:40.410, Speaker B: Yeah. I was really interested in, like, the mind, how the brain works. I think they're, like, very powerful tools. And I left academia, and I had no idea what I wanted to do with my life because everything was focused around this goal of getting a PhD. But then. So after leaving academia, I was left with a bunch of debt, and I was like, wow, I have all this debt. You know, I'm stuck, forced, looking to get a job that I don't care about.
00:01:40.410 - 00:02:05.410, Speaker B: I have to, like, work just some, like, mindless, big company kind of thing. Like, I don't know what to do with my life. Like, I spent so much time studying, so I just became so frustrated. Then I heard about bitcoin, and I kind of, you know, really got into this idea of hard money and fell down the bitcoin rabbit hole. Couldn't stop talking about it. And then I heard about Ethereum.
00:02:06.350 - 00:02:08.130, Speaker A: What year is this? Ish.
00:02:08.510 - 00:02:36.170, Speaker B: Maybe like 2016 ish. Okay, so I heard about Ethereum, and then I was like, wow, okay, so bitcoin is money. Ethereum is the foundation for our institutions. I just wanted to rebuild the institutions because I thought that this was our chance to upgrade civilization with this technology.
00:02:36.790 - 00:02:40.766, Speaker A: Love that. And I agree. And you became very optimistic.
00:02:40.878 - 00:03:06.384, Speaker B: I became very optimistic. So I joined the space. I was originally working for this bitcoin startup called Purse IO. It was a really interesting company. Know, we maintained an alternate implementation of a bitcoin client called bcoin. And the bitcoin core devs are very opposed to alt clients. So it was like this weird political thing.
00:03:06.384 - 00:03:31.060, Speaker B: We were big blockers. It was kind of difficult to work there. I didn't really like the culture. So then after bitcoin cash happened, bitcoin cash didn't take off. So then the next thing was we worked together and we launched this blockchain called Handshake. And Handshake was interesting. It was like this project by Joseph Poon in JJ.
00:03:31.060 - 00:04:01.534, Speaker B: It was a decentralized DNS root zone. It was like a soft fork of the Internet. Full node was a DNS server and it opened up all the extra top level domains. When you pointed your DNS server to it, it resolved the existing Internet exactly the same way. But all the new top level domains that don't yet exist could be purchased with an on chain auction. And then you can just configure your same DNS setup and just point at the blockchain instead.
00:04:01.622 - 00:04:03.766, Speaker A: Yeah, yeah.
00:04:03.798 - 00:04:09.158, Speaker B: That never took off because, you know, too early. It was too early. It was too early.
00:04:09.214 - 00:04:14.982, Speaker A: I remember that. And yeah, it was cool, but it was too early. And then you found your way to the optimism team.
00:04:15.086 - 00:04:46.050, Speaker B: Yeah. So I found Jane, Carl and Ben at hackathons. I have really good early memories just running into them at ETH Denver and SBC, back when it was Stanford blockchain conference. And I really liked just the people because I think that's the most important thing to choose on. It's the culture of the organization of the people that you're working with.
00:04:46.700 - 00:04:48.260, Speaker A: It's important to work with good people.
00:04:48.340 - 00:04:49.000, Speaker B: Yes.
00:04:49.700 - 00:04:53.508, Speaker A: Can't have a happy life, can't have a happy job without working with people you enjoy.
00:04:53.604 - 00:05:09.068, Speaker B: Totally. So, you know, I joined forces with them and together we were able to kind of birth optimism and really help to grow it to what it is today.
00:05:09.164 - 00:05:09.700, Speaker C: Yeah.
00:05:09.820 - 00:05:12.156, Speaker A: Which you guys have to be pretty proud of. Pretty cool.
00:05:12.228 - 00:05:30.368, Speaker B: Yeah. I still wake up and I'm like, how is this real? I'm like, wow. I'm just like some guy that was, like, coding in some random couch someplace. I'm just sitting there, and then all of a sudden there's all this money locked up and people care about it. It's like, wow, you just can't even believe it.
00:05:30.464 - 00:05:35.000, Speaker A: Scaling ethereum, man. Scaling ethereum with the modular stack.
00:05:35.120 - 00:05:36.464, Speaker B: Yeah, totally.
00:05:36.632 - 00:05:37.632, Speaker A: Which is pretty wild.
00:05:37.736 - 00:05:38.496, Speaker B: Yeah.
00:05:38.688 - 00:06:02.780, Speaker A: Okay, so the audience is going to know a lot about optimism. I'm pretty sure everyone listening to this is going to have used optimism, and if they haven't, you guys should go and use optimism or base or something. Stack. We switch to what's new with op, with the op stack and with roadmap, start with fault proofs. Which shipped a couple of weeks ago.
00:06:02.860 - 00:06:39.234, Speaker B: Now, totally. Op mainnet is a stage one roll up with permissionless fault proofs. What does that mean? That means that anyone can make a claim about the l two state to facilitate withdrawals from the l two. A real roll up inherits the security of l one. So a stage zero roll up, there's some trusted actor that facilitates withdrawals. And now op mainnet, anybody can facilitate withdrawals. It's permissionless, actually.
00:06:39.282 - 00:06:47.100, Speaker A: Dumb questions for me to ask. That same rollout also applies to other op stack chains like base, right?
00:06:47.180 - 00:07:10.116, Speaker B: Yes, it also applies to base. Base is currently in the process of rolling it out. I'm not exactly sure their timeline, but I'm sure it'll be sometime soon. The idea is to get to the point where literally every single upgrade, it's really easy to deploy the exact same upgrade to all the chains.
00:07:10.308 - 00:07:21.852, Speaker A: And that might be super chain related too, which maybe we can get into. Okay, other dumb question. Remind me what a stage two roll up means again? Like, what's the difference there?
00:07:21.956 - 00:08:04.830, Speaker B: Yeah. So the most important part about a stage two roll up is the fact that the Security Council can only act on the system when there's an on chain attributable fault. Okay, so what that means is between the stage one roll up and a stage two roll up. For a stage one roll up, the Security council can really intervene anytime. They can use like, off chain means social consensus to choose when to intervene, to like pause the system, or to like upgrade the system to fix a bug. For a stage two roll up, the property is that the system must be able to introspect on the fact that there was a bug.
00:08:05.690 - 00:08:06.426, Speaker C: Yep.
00:08:06.578 - 00:08:24.070, Speaker A: Okay, cool. So foolproof, shipped. Big deal. Actually a big deal. It's kind of one of those things that for the normal user, they don't care about it. But from your perspective, big deal. And from anybody that cares about the ultimate security and scalability, these roll ups, it matters a lot.
00:08:24.070 - 00:08:28.328, Speaker A: What's next? Like what's on the near term roadmap for op?
00:08:28.384 - 00:08:55.672, Speaker B: Yeah. So fault proofs are. It's a project that we're iterating on. It's really important to deliver software incrementally. Right. You don't want to design a system that you're working on for three years and then ship this massive thing. You want to figure out what's the minimum viable thing that we can ship and then we can learn, and then that helps us prioritize what to focus on next.
00:08:55.672 - 00:09:43.406, Speaker B: So we ship fault proofs. The next thing is multiproofs. Multiproofs is what gives the ability for the system to introspect on a bug a fault. What I mean here is basically we're going to have multiple fault proof systems that all run in parallel. And the idea is, is if a user can make two different systems conflict with their results, then what we can do is have the bridge pause itself and then the Security Council can just simply unpause it after the bug is fixed.
00:09:43.478 - 00:09:44.250, Speaker A: Got it?
00:09:45.190 - 00:09:45.614, Speaker C: Yep.
00:09:45.662 - 00:09:57.740, Speaker A: Okay, makes sense. So that's coming out, or that's something you guys are working on in the near term roadmap. Is there a name for that next release?
00:09:58.040 - 00:10:34.296, Speaker B: Yeah, so right now we're calling it multiproofs. Obviously there's smaller releases inside of that. We don't want to release this huge monolithic thing. So right now we're working on a new fault proof vmdezenhe that runs RISC five. The one that runs in production today is called Canon. It runs in MIPS 32. In a VM you have a program, the program that's running in production today, we call it Op program.
00:10:34.296 - 00:10:47.330, Speaker B: It's written in go. We're working on a rust program that's called Kona. Then the idea is that with multiproofs you can run any program in any.
00:10:47.370 - 00:10:51.906, Speaker A: VM, which lets you write more programs, basically, yeah.
00:10:52.018 - 00:11:25.490, Speaker B: It lets you have more combinations and then you ultimately get more security because now we're getting coverage of two different compiler tool chains, the go compiler tool chain, the rust compiler tool chain, and then we're getting two different VM implementations. Then it's also the implementations themselves. Then the best part about all of this is the proof system is so modular that you get the ability to plug it into ZKBM as well.
00:11:25.830 - 00:11:26.574, Speaker A: Interesting.
00:11:26.662 - 00:11:27.330, Speaker B: Yes.
00:11:29.030 - 00:11:49.468, Speaker A: Let's back this up for a second, actually, because I think it'll be useful for me and maybe the audience to understand this more. What we're doing here is like, okay, in Op we've got transaction data published somewhere, so data availability. Then we've got state routes get periodically, I use the word checkpoint. Do you guys still call it checkpoint?
00:11:49.644 - 00:12:06.952, Speaker B: You can think of it like checkpointing with the release of fault proofs. There's like no nest. There's not really an interval that these checkpoints must happen. But the checkpoints are really like every time that one claim finalizes and a.
00:12:06.976 - 00:12:10.288, Speaker A: Claim now is triggered when anybody can.
00:12:10.384 - 00:12:34.954, Speaker B: Trigger a claim at any time. Previously we operated the software that kept the bridge alive by periodically checkpointing, by periodically posting the l two state routes to l one. Now it's permissionless. If we go offline, people can still withdraw without needing us because they can just come to the bridge and post to their own state route.
00:12:35.082 - 00:12:35.578, Speaker A: Got it.
00:12:35.634 - 00:12:36.330, Speaker C: Okay.
00:12:36.490 - 00:12:47.466, Speaker A: However, in production, just from a practical sense, the optimism sequencer is going to continue to post these checkpoints on like a five ish minute type frequency, something like that.
00:12:47.538 - 00:13:11.350, Speaker B: User experience is very important, so we periodically post them on behalf of, like, the users because we don't want to degrade user experience. It's really only the really smart people in the ecosystem that would be interested in posting these. So exchanges.
00:13:12.770 - 00:13:13.714, Speaker A: Sophisticated actors.
00:13:13.762 - 00:13:14.794, Speaker B: Sophisticated actors, yeah.
00:13:14.842 - 00:13:47.080, Speaker A: Which makes total sense. And what we're saying now is that because we have the multi proof thing happening, you have more sophisticated ways of creating these, of proving these claims, which is laying the foundation, I guess, for ZK proofs too, which is quite interesting. I'm sure there's probably another 15 minutes or a lot longer for us to talk about, about potential ZK migrations or transactions. But regardless, the foundation is set to allow.
00:13:48.240 - 00:13:48.576, Speaker C: Yeah.
00:13:48.608 - 00:14:12.456, Speaker A: More different proof architectures. Okay, very cool. So let's talk about Interop for a second before we get to super chain vision here. So what's new on the interop side? I know a lot because I've been talking to you about this too, but for the audience, what's the TLDR on what optimism is looking at in terms of native interop? And I think you're very involved in this.
00:14:12.568 - 00:14:31.552, Speaker B: Yeah. So we want to ship an interoperability solution that allows for low latency transactions to be sent between chains. And the idea here is that interoperability is a technology, it's not necessarily a product, right?
00:14:31.616 - 00:14:32.040, Speaker C: Yep.
00:14:32.120 - 00:15:19.240, Speaker B: Even if you have interoperability, you can just send messages like, it's not really that useful unless you're sending something that is useful. We're really focused on sending ERC twenty s and ether between chains because that's what people want. And so the idea is we expect to ship native interoperability between the op stack chains, where all the ERC 20s that have been deposited into the bridges can opt into becoming interoperable. And then you'll be able to move them seamlessly between all of the chains. And all of this will be secured by the fault proof.
00:15:19.980 - 00:15:20.800, Speaker C: Yep.
00:15:21.700 - 00:15:57.244, Speaker A: And the high level understanding of how that happens is if two super chains will say OPA super chains have this interoperability enabled and messages are sent between them. Correct me if I'm wrong on this, but if basically, if a fault is found in one of those chains where there have been interoperable messages sent from another chain. That fault gets tags the other chain with this fault, too. Kind of like a shared validity proof. Is that the right way to think about this?
00:15:57.332 - 00:16:25.342, Speaker B: Yeah, totally. And just to be clear, kind of like what you're talking about has to do with the bridges. So all the proofs in the bridges are going to be tied together. There's one distinction that we want to make. I mean, this would be like a two hour conversation if we went really deep into it. But the bridge is not. The roll up finality for the chain itself is when the data is posted.
00:16:25.342 - 00:16:34.620, Speaker B: So you don't need to worry about like some remote chain reorgan you through the fault proof. This is like a very common misconception.
00:16:34.700 - 00:16:35.400, Speaker A: Yep.
00:16:36.180 - 00:16:55.112, Speaker B: So, yeah, we made sure to design something that was really simple and assumed minimal trust. The protocol is completely trustless if you wait until the chain that you're accepting a message from has published their data.
00:16:55.256 - 00:16:56.824, Speaker C: Yep, yep.
00:16:56.992 - 00:17:03.144, Speaker A: Which is, in practical sense, kind of like a 15 minutes type timeframe, right?
00:17:03.192 - 00:17:07.680, Speaker B: Yeah. And as we increase the gas throughput of these chains, that number will go down.
00:17:07.760 - 00:17:08.380, Speaker C: Yep.
00:17:08.920 - 00:17:55.460, Speaker A: This is very cool. Actually, everyone, that you should go watch your talk. I actually saw parts of, parts of it yesterday, but your module, assuming talk goes deeper on this. And yeah, we also need to do another podcast where we talk about interop intents ERC 7683, which is something we're working on and how native interop can make protocols across better. However, I think we also got to talk about the super chain quickly before we wrap this up, too. Super chain is a buzzword that's been thrown around bunch, and it's very cool, very cool concept. But like, tell us, like, what we should, what the audience should think of as the super chain and what your vision is for it.
00:17:55.620 - 00:18:02.708, Speaker B: Yeah, I mean, the super chain exists really to upgrade capitalism and elevate humanity. Right.
00:18:02.804 - 00:18:03.916, Speaker A: Big, big ambitions.
00:18:04.028 - 00:18:36.920, Speaker B: Yeah, I mean, it's more than just building blockchains. Like, it's just technology. Like, we're not here just to like, you know, build some, like, random application that gets users. There's a lot more to the world than that. The idea is to literally upgrade capitalism. We want to figure out how to create a mechanism that enables retroactive funding to scale. This is our first experiment in upgrading capitalism.
00:18:36.920 - 00:19:28.230, Speaker B: Retrofunding is just this idea of, we say impact equals profit, where we look into the past and we see what was impactful and then we reward the impactful things. And this is meant to attack the problem of the tragedy of the commons, where people don't support the free software that everyone uses, there's one developer working on it that is underpaid, and everyone from the big tech companies are yelling at them and the public GitHub messages, why aren't you fixing this? And they're just like not being paid. And so the idea is to fundamentally change the economics of these systems, the way that people come together, the way that companies operate.
00:19:30.530 - 00:19:38.544, Speaker A: In a slightly more practical sense, how is retroactive funding tied to the super chain? What is the correlation between those two?
00:19:38.682 - 00:19:51.876, Speaker B: Totally. So people that are part of the super chain, they contribute a part of their chain's revenue to this treasury that helps to back retrofunding.
00:19:51.948 - 00:20:00.772, Speaker A: And then on kind of on the more technological level, what is the super chain? How should we think about the super chain? As a technology?
00:20:00.916 - 00:21:06.170, Speaker B: Yeah, as a technology, the super chain is built from the op stack chains. And the op stack, it's free software. I knew when fork it, run it. There's this interesting problem around thinking about different configurations of the op stack. It's really easy to take the op stack and fork it in a way that's unsafe. Governance plays this role of quality assurance to make sure that flavors of the op stack are safe for users to use. Really we're looking at how do we scale this process of allowing governance to give the thumbs up to configurations of the op stack so that users can know that if they use a particular chain, that it will not steal their money and that they can be expected to have some level of security and quality.
00:21:06.750 - 00:21:42.742, Speaker A: So then can you say, okay, Op Labs has built this amazing set of software, it's public good, can be forked and used, lots of security risks about how it could get used. So the deal you guys are sort of setting up here is opt into the governance and security of the super chain, which also gives you other advantages like native interop and closer connections of this group of chains. And in exchange, you're asking for these chains to contribute to retroactive public good funding.
00:21:42.806 - 00:21:43.342, Speaker B: Yes.
00:21:43.486 - 00:21:45.694, Speaker A: A set of butchered version of this.
00:21:45.702 - 00:21:48.102, Speaker B: Yeah, no, that's perfect actually.
00:21:48.126 - 00:22:15.904, Speaker A: I hadn't heard it explained that way. That's kind of cool. So it achieves your guys, your mission, the optimism mission of upgrading capitalism here through retroactive public goods as a first experiment and others to follow it, in a sense, finances the development work of op labs and the people building this software. And it creates a safe and scalable blockchain environment with interoperability. I like the vision man, that works awesome.
00:22:15.952 - 00:22:16.208, Speaker B: Thank you.
00:22:16.224 - 00:22:26.578, Speaker A: But also, it fits with our little modular thesis here. Very, very well. Thank you, Mark. Appreciate it. And, yeah, let's do another podcast going deeper on this stuff very soon.
00:22:26.674 - 00:22:27.770, Speaker B: Cool. Sounds great. Thank you.
