00:00:01.840 - 00:00:32.996, Speaker A: Hi, everyone. Thanks for coming to this fireside chat with me and Mustafa. So some of you might know that he has a very interesting personal story. So we're actually going to start with that. You know, as a teenager you were what's called a hacktivist. You were involved in Lulzick or I think that was your group, and anonymous. But before we get to that story, I just want to even hear, like, about your childhood because that I feel like sort of sets the stage for what happened next.
00:00:33.188 - 00:01:00.970, Speaker B: Yeah, sure. Sorry. So, yeah, I was born in Iraq, in Baghdad. And I moved to the UK as a refugee when I was five. Moved to London, and I was like Southeast, like London on a housing estate. And I kind of like had my first experience with a computer when I was six or five. And this was like a, kind of like a Windows 95 computer.
00:01:00.970 - 00:01:26.870, Speaker B: And that kind of like, was my first introduction to computers. And from there I kind of like just very curious. I was just very curious. And I think this is like a actually, it's actually a very common story with a lot of people who learn programming from an early age. And I came across software like Microsoft Front page, which was like this software in a Microsoft office suite that lets you create your own website. And I kind of experimented with that and that's how I first got into technology and coding.
00:01:28.410 - 00:01:35.122, Speaker A: And so from there, how did you end up, I guess, engaging with these different hackers and becoming a hacker yourself?
00:01:35.306 - 00:02:26.832, Speaker B: Yeah. So I started to figure out how to create my own websites using programming languages like PHP. And as I was doing that, I kind of realized the ways that people could make mistakes, or programmers could make mistakes when they're creating their I or programming their websites to create security flaws. And as I was thinking about that, I kind of, every time I would visit a website, I would see if it's vulnerable to what I think is vulnerable to. So for example, like one day I was doing my maths homework and I didn't have a calculator with me. So I googled for online calculator and it turned out there was this flaw in the calculator that lets that you can, instead of typing one plus one in the calculator, you could type in computer code into the calculator and execute that computer code. And this was a calculator that was run on this university, on this american university server.
00:02:26.832 - 00:03:18.490, Speaker B: So it was really interesting to me that you could hack a university through a broker and calculator on the website. And that's kind of like how I first realized that you could actually hack into things or things could have security flows. But then I kind of, I was also very interested in accessing software or media that I couldn't afford to access at the time. And back then, the BitTorrent and the pirate bay was a very popular way of accessing that kind of information for free. This was like before Netflix existed or other streaming services existed. And to me, BitTorrent was really interesting because it was like a peer to peer file sharing system that did not rely on centralized entities. And to me it was evidence that we didn't have to, we didn't need a centralized Internet.
00:03:18.490 - 00:04:11.770, Speaker B: But I first got into activism when there was a group called Anonymous that was conducting a denial of Services act against the Motion Picture association of America and the RIAA, which was trying to take down the Pirate Bay. And then these people kind of organized denial of service attack against those companies. And then, so I kind of got involved into these hacker chat rooms and that's how I kind of got into the hacker scene. And then it kind of ended up with me creating my own hacker group called Lulzsec that kind of, in the summer of 2011 went into a kind of like a massive hacking spree that hacked into all kinds of organizations like Sony, FBI affiliates, Fox News, and like a bunch of other corporations, including military contractors.
00:04:12.470 - 00:04:17.090, Speaker A: And so for, I mean, there's just so many stories there. But do you have any favorites?
00:04:17.790 - 00:05:21.150, Speaker B: Yeah, I mean, so like one of the, I mean, I guess, like the point of it was part of, the point of it was political, but a big part of it was back then no one was taking security seriously. So the only way to show people that they weren't taking security seriously was to kind of show that the emperor had no clothes. So, for example, there was a company called HBG Federal, which was a military contractor or defense contractor to the US Department of Defense. And the CEO used the same password for his World of Warcraft account as he did for his PayPal account and his emails and his company emails. And it was kind of, it was like, it wasn't because we were great hackers that we were able to do this is because people were doing dumb things like using the same password everywhere, for example, or their websites were vulnerable to very basic vulnerabilities that everyone knows exists. But no one had the balls at the time to kind of actually hack those companies and show that the emperor had no clothes. So it's kind of like an issue that everyone knew existed but couldn't do anything about it.
00:05:22.760 - 00:05:30.272, Speaker A: That was like a government contractor, did they end up just getting no more work from the. I mean, that seems like a really bad breach.
00:05:30.456 - 00:05:39.380, Speaker B: Yeah, I mean, the CEO had to end up resigning and I think there was like an investigation to them in Congress about how that kind of. How that happened.
00:05:39.800 - 00:05:41.568, Speaker A: And you were how old when you did that?
00:05:41.664 - 00:05:43.580, Speaker B: This was when I was 15 to 16.
00:05:44.120 - 00:06:01.964, Speaker A: I love it. I love it. And, I mean, there are so many others. Like, I listed a bunch and you could really pick any other story that you want to tell. Like, the Westboro Baptist church was also kind of a funny one. Sony, there's another thing involving the Arab Spring, but, yeah, I don't know if you want to tell another story.
00:06:02.132 - 00:06:52.118, Speaker B: Yeah, so, I mean, Sony was a fun one because this was in the summer of 2011. There was kind of like big hack. Like the PlayStation network was down for like a month and a lot of kids everywhere were really angry that the PlayStation network was down. But I. Sony is a perfect hacker target, or was a perfect hacker target at the time because they just had prosecuted George Hotz for breaking the DRM of the Sony, because he managed to install Linux on the PS three, and because it was such a great hacker target. Sony was hacked around 30 times in the summer of 2011. They were hacked so many times by all these different people that it kind of became a game to see who can hack them the most.
00:06:52.118 - 00:07:33.670, Speaker B: So someone was keeping track and it was like, we hacked them seven times and this other hacker hacked them six times. So it was kind of like we won the race against this other hacker to see who can hack them the most in different ways. You had so many pictures, so many music. They have so many different areas of their business and so many, such a big attack surface to attack. Westboro Baptist Church was also a fun one. So Westboro Baptist Church is this really controversial kind of hate group in the US that pickets, for example, the funerals of dead soldiers, to say that they deserve to die because they were gay, that kind of thing. And they kind of put out oppressively challenging us to hack them.
00:07:33.670 - 00:07:55.600, Speaker B: I think it makes sense for them because they need attention. But we managed to kind of hack them and hack their website on a live radio show. And it was kind of like they were being interviewed and in the middle of a radio show, we kind of like put up, defaced their webpage and then that video online. You can watch that video on YouTube. It's got like 3 million views on YouTube.
00:07:56.540 - 00:08:07.340, Speaker A: I love it. I love it. This is so, just so interesting because you were a teenager as we mentioned. And so then at the age of 16, you got arrested. How did that happen? And what was that like?
00:08:08.440 - 00:08:51.622, Speaker B: Yeah, so, yeah, I was arrested, and it turned out that there was an FBI informant in the group. He wasn't originally FBI informant, but because he had two children that he was looking after when he was caught by the FBI, he kind of turned into an informant that was logging everyone's chats in the chat rooms. And, yeah, so I was arrested when I was 16, one month after I finished my exams. So that's pretty convenient because if it was before then, it would have been more annoying, but. And then I was arrested and I was taken to, like, a police station, and I was. They did, like, a separate charge for each pack. So they had, like, 80 charges.
00:08:51.622 - 00:09:32.620, Speaker B: And they have to arrest you for each charge. So every time they arrest you, they have to caution you by saying something along the lines of, you are not under arrest for this. You don't have to say anything, but if you do not say something that you let you rely on in court, then this might have your defense. They had to say that. They were supposed to say that 80 times for each arrest, but I gave a no comment interview. So my answer to each question they were asking was no comment because that's what I was advised by my lawyer to do. But they only managed to finish arresting me 40 times instead of 80 times because there was a time limit to how long you can keep someone under 18 in custody without charging them.
00:09:32.620 - 00:09:43.180, Speaker B: And unless it was for terrorism. Unless I had some excuse like I was a terrorist or something, which I wasn't, and so they didn't manage to finish arresting me.
00:09:45.160 - 00:09:49.780, Speaker A: I can't even imagine what your parents must have thought. They probably were just like, what is going on?
00:09:50.860 - 00:09:52.720, Speaker B: Yeah, they had no idea.
00:09:54.820 - 00:10:05.240, Speaker A: All right, so clearly he's got a colorful history, and then he gets into crypto. So you got into bitcoin. How did you go from that to getting into bitcoin?
00:10:05.620 - 00:10:56.694, Speaker B: Yeah, I mean, I was kind of, like, very naturally interested in bitcoin because of my interest in Bittorrent and the Pirate Bay. Like, when I was using Bittorrent, which was just a peer to peer file sharing system, I was interested to see, okay, like, we can have decentralized file sharing. What else can be decentralized? So even before bitcoin, people were trying to decentralize all kinds of things. Like, people were trying to create, like, a decentralized domain name system because they were worried that the Pirate Bay domain name would get shut down by ICANN for example, they were trying to create decentralized social media because they were like, Facebook would censor stuff during the Arab Spring, for example, or governments try to censor that kind of thing. So when bitcoin came around, that was kind of like naturally piqued my interest. And our hacker group accepted bitcoin donations at the time. So that was kind of my first experience with bitcoin.
00:10:56.694 - 00:11:43.502, Speaker B: And it was also the case that, for example, WikiLeaks accepted donations in bitcoin because they were, because they were blocked by Visa, Mastercard, so they had to use bitcoin to accept donations. So that kind of like, that's when I. So I first learned around bitcoin in 2000, 920 ten. And that's when I kind of started following it. But then I was arrested in 2011 and I couldn't, I was not allowed to use Internet, according to my belt conditions for two years. So then I kind of, like, came back online in 2013, and I started following the space more closely in terms of the scalability debates, because at the time, there was this 1 mb block size limit. And I was kind of worried.
00:11:43.502 - 00:12:23.470, Speaker B: I was very into bitcoin. So I was like, okay, at the time, the main narrative was, let's make bitcoin accepted everywhere for payments and retailers. Even Microsoft started accepting bitcoin for payments, and different companies were experimenting with it. But then I was worried, okay, there's this 1 mb bulk size limit. What happens if it gets hit? So I started discussing this in these core developer chat rooms, and people weren't really worried about it. But then in 2013, the block size limit did actually get hit. And there was this huge internal war within the bitcoin community about whether we should increase the block size or keep the block size small, but scale with payment channels.
00:12:23.470 - 00:13:32.660, Speaker B: And I was kind of very much on the side of increasing the block size. But the reason why they didn't want to increase the block size is because they thought it would make it more expensive to verify the chain, or for end users to run a full node to verify the chain, which kind of defeats the whole decentralized nature of bitcoin. But in the bitcoin whitepaper, Satoshi mentions this idea of fraud proofs, or what he calls alerts, which is the idea that a end user running like a wallet on their phone, if even though they're not verifying every transaction in the chain, they could be alerted to an invalid block by a full node that has detected that invalid block. But this was like a very nascent idea that wasn't fully fleshed out, and there was problems to it, including the data availability problem. So then I kind of decided to focus a lot on layer one scaling. And how do we square this dilemma between decentralization and scale scalability?
00:13:34.680 - 00:13:36.060, Speaker A: What year was that?
00:13:36.560 - 00:13:47.620, Speaker B: So this was like 2013, 2014, when we started hitting the block size limit. And then in 2016, I started doing a PhD at UCL, focusing on layer one scaling.
00:13:48.320 - 00:14:06.860, Speaker A: Okay. Yeah. Because in my head, at least, the. The block size wars didn't get settled until 2017 with, like, bitcoin cash. And even now, sometimes they still flare up again in case of. I don't know, some of you might notice that. But I guess at that point, that brings us to Celestia.
00:14:06.860 - 00:14:11.320, Speaker A: So how did you go from that point to founding Celestia?
00:14:11.900 - 00:15:00.992, Speaker B: Yeah, so the current, like, the current approach or coherent thinking around how we scale layer ones, especially within the Ethereum community, around 2016, 2017 was mainly centered around this idea of sharding the chain. So the idea of sharding is like, you have a layer one chain, but can we split up that chain into multiple chains that each have their own values that can process transactions in parallel? And this was like, what the original Ethereum 2.0 version was. It was gonna have, like, 1024 shards. And I co authored the first smart contract sharding paper called Chainspace during my time at UCL. But. And that was that.
00:15:00.992 - 00:16:05.646, Speaker B: And that was kind of spanned out into a company that was acqui by Facebook. But when I was working on this, to me, there was, like, the. There was a massive missing pieces of puzzle to making sharding work. And this is also known in the Ethereum community. And that piece of the puzzle was, how do you basically, how do you protect yourself? Or how does a network protect itself from malicious shards? Because when you're sharding the chain, you're also sharding the security of the chain to all these shards. So, like, if you split up the chain into ten chains, you're also kind of splitting up the security of the chain into ten chains in some way. So you can't assume that every shard, what happens if one of their shards is dishonest and starts kind of infecting invalid state to all those shards? So the essential kind of, like, missing piece of the puzzle was a way, a way to detect that shards were misbehaving, and that would, basically, you would use fraud proof to do that, which is the.
00:16:05.646 - 00:16:43.302, Speaker B: Which is the idea that Satoshi mentioned in his white paper when he. When he released it in 2008. This idea of alerts. But the problem with fraud proofs or alerts is that you can't, if the malicious shard does not publish the data in that shard, then you can't prove that anything bad happened. You can't generate a fraud proof. So the missing piece of the puzzle was this data availability problem to make the whole system secure. So then I kind of started researching it, and I saw that Vitalik had done something around that, and he had a note on GitHub to how that can be solved.
00:16:43.302 - 00:17:44.009, Speaker B: And I started chatting with him and realized that this was actually a fundamental, I was surprised that no one was talking. People weren't talking about it more because it was such a, it's like, it's like such a fundamental element to blockchain scaling. And then I kind of realized, and I co authored a paper with Vitalik on how to implement this and proving the security and basic idea is that you can have data availability proofs to prove to other shards or to users that data is available. But then I kind of realized that data availability is actually the core primitive for blockchain. So at the time, people were thinking about blockchain scalability from a top down perspective, like, okay, we have shards and how do you make them secure? But then at the bottom of the entire stack is data availability. So then I started thinking about it from the bottom. If you start from that, what do you get? Because it turns out that the core thing that a blockchain does is just a proof of publication.
00:17:44.009 - 00:18:09.234, Speaker B: It's a proof of publication system. And that's what's mentioned in the bitcoin whitepaper Satoshi introduces. Satoshi doesn't even mention the word blockchain in the white paper. He mentions a timestamping server. He refers to the bitcoin system as a timestamping server, where you publish data into it. So the core primitive of all of these things is this proof of publication system. And it turns out that if you scale that, that's all you need.
00:18:09.234 - 00:18:40.360, Speaker B: And that's indeed the primitive to all roll ups. And so that's when I kind of started lazy ledger. I wrote a paper about lazy Ledger, which is what now what Celestia now is, which is basically a blockchain that is lazy in the sense that it only does the core things, that layer one does, which is just published data, and have consensus over that data. And that's what Celestia is. And it turns out if you just have that as a core primitive and scale it, then anyone can build anything on top of it.
00:18:41.460 - 00:19:03.760, Speaker A: Yeah, I love how the two core pieces, one comes from Satoshi and the other from Vitalik, which is sort of a metaphor for crypto today generally. So we're going to talk more about Celestia, but before we go on a little bit further, can you just define, I'm sure a lot of people know, but just to level set that what data availability sampling is.
00:19:04.140 - 00:20:20.860, Speaker B: Sure. I mean, why don't I start with data availability? So, as I mentioned, it's the core primitive for what blockchain does. All a blockchain does is it's just basically a system that proves that some data had been published, and it tells you when that data has been published. So if you know that some data has been published and you know when that data has been published, then you can build, you basically have a ledger in which you can build any decentralized application on top, including applications like cryptocurrency or payments. But the what data availability sampling does is it allows users to verify that the data has actually been published without requiring users to actually download all the data themselves. Because if going back to this bitcoin block size war, remember that the whole reason why the bitcoin community did not want to increase the block size over 1 mb is because they were worried that if you make the blocks too big, then the only people that would run, that would be able to verify the chain are like big, big players who have access to data centers and big hardware. And if that's the case, then that kind of defeats the whole point of blockchains, because then you have to trust the miners, you have to trust the validators.
00:20:20.860 - 00:21:29.000, Speaker B: If no one can verify the chain, the miners basically have the freedom to change the rules of the chain, to print money, to change people's balances, for example. And the whole point of a blockchain is that you're not supposed to rely on any committee to enforce the protocol rules. The end user who's verifying the chain directly should be able to enforce the protocol rules. So what data availability sampling allows you to do is it allows you to basically very efficiently, an end user can very efficiently check that the data has been published without them having to download the whole data, which basically circumvents this original problem that bitcoin community had with increasing block size, because now you can increase the block size without damaging the ability for end users to actually verify that the chain is correct. Because now they can check the data is published. And if they know that the data is published, they know that someone can generate a fraud proof or prove that data, prove that something bad happened on chain if the validators were dishonest.
00:21:29.940 - 00:21:38.050, Speaker A: And so Celestia finally launched last fall. What do you feel has been going well? And what have you been surprised by?
00:21:38.550 - 00:22:24.660, Speaker B: Yeah, so we launched October 31 on Halloween, and I think there's definitely been a massive expansion. I think I've definitely been surprised by the amount of product market fit we pad, because when we launched, there were no change at all that had the ability to support data blobs. Like this was before EIP 444. So once the launch, there was this extremely pressing need in the industry that we just needed a place for these roll ups to post data blobs cheaply. And so now we've seen kind of like an influx of roll ups. Posted Celestia. There's something like 20 IP stack chains posting the data session right now and many more in the pipeline.
00:22:24.660 - 00:23:22.440, Speaker B: So there's this kind of like extreme, kind of like product market fit. And so I think that's kind of, that's going well. Especially with, like, I always kind of envisioned two years ago that like, even three years ago, my vision when I created Celestia was that one day you'll be able to go on some website and you'll be able to click a button and immediately launch a roll up, your own roll up, which is basically a virtual blockchain. And that's now possible today. And I didn't imagine that would happen that quickly. But now we have many different roll up as a service providers like Caldera, contribute and gelato that all make that possible. And now we're seeing that the default way for developers to deploy decentralized applications is not to use smart contracts on a shared smart contract environment, but to deploy their own roll up using these providers that let you do it in one single click.
00:23:22.440 - 00:23:30.000, Speaker B: And if you asked me three years ago if that would happen that quickly, I wouldn't have kind of believed it, but it has.
00:23:31.500 - 00:23:56.420, Speaker A: Wow. Yeah, that is super interesting to me because it goes very much against the idea of the fat protocols thesis in the sense that that kind of almost assumes that there will just be very few. But I love this idea that there could be many different blockchains. So what is on this lessee roadmap now that you're looking forward to?
00:23:57.160 - 00:24:41.976, Speaker B: Yeah, I think there was a few things that was presented by Ismail earlier today, but the roadmap kind of revolves around three main things. The first thing is this idea of abundant block space. So we want to have 1gb blocks, and this is very important because what we've seen in blockchain in history is that use cases have always been limited by supply of block space. Like, even in bitcoin. I mentioned that bitcoin was used for payments before 2013. And retailers like Microsoft actually stopped accepting bitcoin for payments. So there's actually less, there's actually a period of history where retailers, there was more retailers accepting bitcoin, and then they stopped accepting bitcoin.
00:24:41.976 - 00:25:48.910, Speaker B: And the reason for that is because there wasn't enough block space and so transaction fees were too high, so it didn't make sense. No one was using bitcoin for payments. So you have this idea where kind of like the early Internet, more bandwidth made different use cases possible, like YouTube would not be possible today with the bandwidth, the average Internet bandwidth or speed that people had in the early two thousands. I believe that if you have, if you increase block sizes and have more abundant data throughput, it will enable applications and use cases that simply weren't possible before, or no one had imagined before, especially like more payments on lower value payments. Like imagine you could stream one micro cent payments. And that was actually possible because we had the block space for it, for example. And so, like, we now that, so the idea is like, we bought block space from the dial up area to the early broadband area, and now as part of the roadmap, we want to bring it to the fiber optic area with 1gb blocks.
00:25:48.910 - 00:26:46.712, Speaker B: The other part of the roadmap is to have a widespread adoption of trust minimized light nodes. So instead of wallets connecting to centralized RPC endpoints like infura and alchemy? And this was a massive criticism of web3 as it stands today by boxy Marlinspike, who's the creator of Signal, that you're basically like, what's the point of web3 if you're just connecting to decentralized RPC endpoints that tell you what the state of the chain is, and you have to trust them. That's how most people interact with web3 today. They just interact with inferior alchemy. But we want to see a world where you can actually, these wallets are collecting directly to the network, to the p two B network, and verifying the state directly with these light nodes. And we're one step closer to that, because now we have a celestial data availability sampling light node that you can actually run in your browser. And that's a very important first step to making sure that those light nodes can be embedded within wallets.
00:26:46.712 - 00:27:49.530, Speaker B: And finally, the final kind of piece of the puzzle or part of the roadmap is this idea where we're going to have abundant block space, but we also want the block space to be frictionless and useful. So, like, developers want access to liquidity. We don't want to have an ecosystem where you have a thousand roll ups and they're all fragmented and it's hard to bridge across them. So as part of that, we have this, we've been working on this concept called ZK accounts, where you basically can have a Celestia account controlled by ZK program, and that will basically allow roll ups to bridge directly to Celestia and with each other. So you can think about it as a more generalized version of polygons. AG layer, in the sense like the ZK account itself is not an ag layer, but you can build an Ag layer on top of it. So it's just a very generalized primitive that you could, that could be powerful primitive to use to connect all these roll ups together in a verified way, instead of having so many fragmented roll ups.
00:27:50.150 - 00:28:01.470, Speaker A: And so just explain that a little bit further. So you have the ZK account, and so it sounds like more like a control center and there's more execution in the roll ups. Or can you.
00:28:01.630 - 00:28:41.210, Speaker B: Yeah, so it's like the idea is you basically assume that. So you have an account that where the account, the funds in the account can be controlled by a ZK program. So you can imagine that you can express any roll up as a ZK program, even if it's an optimistic roll up. You can have ZK fraud proofs, for example. So now, basically, it means that any roll ups can directly have a trust minimized bridge with Celestia. Now that's already possible today with Ethereum, for example. So that's basically making something that's possible with Ethereum, now possible with Celestia.
00:28:41.210 - 00:29:44.500, Speaker B: But the advantage, but the main difference is because I think Celestia is more suited towards this use case of defragmenting liquidity. Because the reason for that is because one of the reasons for that is because Celestia supports IBC, which means that now, unlike Ethereum roll ups, which only have access to assets within the Ethereum ecosystem, Celestia has a native way to bridge assets outside of the trust zone of Celestia and its roll ups using IBC. So, for example, you have projects like Noble, and you have cycle issuing USDC or Noble, and you have IBC Bridge within, from Noble to Celestia to Celestia to that roll up. And so that kind of gives you access to a much wider network of assets, because whereas Ethereum, your liquidity, your trust zone, your native bridging zone, is kind of limited to Ethereum and roll ups, with Celestia, you have Celestia, the roll ups, and also any chain that supports IBC, basically.
00:29:45.360 - 00:29:49.458, Speaker A: Okay. And then there's also this concept, lazy bridging. Is that so?
00:29:49.474 - 00:30:44.166, Speaker B: Lazy bridging is kind of like a lifestyle that encompasses ZK accounts. And the idea is that users are kind of fed up with this fragmentation, so they just want to be lazy. So it's called lazy for three reasons that the users want to be lazy. And also Celestia l one is minimal. And so, like, it's a lazy, it's a lazy protocol. And the idea of ZK accounts is that the idea of lazy bridging is that it's ZK account combined with technologies like chain abstraction and things like intents. And if you combine all these technologies together, like ZK accounts and chain abstraction and intents and cross chain contract calls, then you can basically, and things like aglayas as well, then you can basically have a seamless user experience where the user basically feels they're only interacting with one chain and they don't even know they're interacting with different chains.
00:30:44.166 - 00:30:53.250, Speaker B: And they don't have to worry about the security assumptions of all these different chains because everything is kind of unified in a lazy way. And so that's why it's called lazy bridging.
00:30:53.790 - 00:31:01.590, Speaker A: And so when Celestia achieves its vision, then kind of like, what will that overall user experience be? Like? Part of it will be lazy.
00:31:01.750 - 00:31:41.042, Speaker B: Yeah, I mean, the user experience should be like you're interacting with one chain, you open your wallet, you see all the assets you have, even if those assets are across many different chain. Let's say you have assets on ten different chains. You want to use those assets to minus NFT on some other chain. You just don't have to care what assets those chains are on. You just care about the end user actions. The chains should be completely abstracted to the user. Similar to how if you use the web today and using different websites on the web, the user has no idea what infrastructure those websites are using.
00:31:41.042 - 00:32:11.930, Speaker B: Like, they don't know if they're using Amazon AWS or Google Cloud. The idea is to achieve a similar experience with web3, such that the only thing that the user sees is a wallet. Right? And they see assets in that wallet, but they don't need to care about where, which chain those assets are hosted or they don't have to care about bridging those assets through some canonical bridge and performing multiple transactions and make sure they have liquidity and so on and so forth to perform different actions that they want to do on chain.
00:32:12.790 - 00:32:36.690, Speaker A: And so when you kind of tie together, like, everything that you've done with computers since you were six or seven or eight, you know, if you think about kind of like, the different principles that led you originally to do the hacktivism and then why you got into bitcoin, like, ultimately, you know, what do you think it is that people will be able to do with Defi or with crypto once all this is built?
00:32:37.550 - 00:33:03.972, Speaker B: I mean, ultimately, I just want to see a return to the decentralized web. Because in the late nineties, there wasn't big tech companies like Google, Facebook, or Twitter. Like in the early two thousands and late nineties, people were using. People hosted their own blogs, people had the bulletin boards, people had peer to peer connection. Even Skype was peer to peer. Like Skype, you just connect directly to someone's ip address. People were using IRC.
00:33:03.972 - 00:33:52.450, Speaker B: So I want to. That was kind of like a Internet that a lot of people miss. And now we have this very centralized Internet controlled by three or four big companies like Facebook and Twitter and Google. And so we've seen the pendulum pendulum swing before between decentralization and centralization. And now we're starting to see the pendulum swinging back from centralization to decentralization. And I think having abundant block space is vital to ensure that pendulum actually swings back. And so that the default way for people to develop applications is to simply deploy them on a blockchain instead of being forced to create, to insert themselves as intermediaries, because that's the only technology available.
00:33:52.450 - 00:34:01.100, Speaker B: Like, it should be seamless to just create these services like Uber, Airbnb, or even social media by just deploying them on a blockchain with no intermediaries.
00:34:02.600 - 00:34:21.060, Speaker A: And then, so for users, like right now, we pay Uber to take our rides, or we give our data to Facebook or Twitter, and then they run ads against it. So that's the current web. And so we'll probably do very similar activities, but in a different way. So what will that look like?
00:34:21.720 - 00:35:11.970, Speaker B: Well, it will look like you can have private, you can have private payments where you can pay people directly without having. Without requiring visa, Mastercard, or PayPal, have access to entire transaction history. For example, you can trade assets, whether it's meme coins or actual assets that are backed by some value without having to sign up to Robinhood and having them cancel your buy button because it wasn't in their interests. People can create their own social communities, whether using platforms like forecaster and moderate their own social communities without having to be holden by some global set of community rules imposed by Facebook or Twitter or some algorithm imposed by Facebook and Twitter, for example.
00:35:13.390 - 00:35:20.950, Speaker A: Okay, well, is there anything else about celestia or about the modular stack that you would like to talk about?
00:35:21.650 - 00:35:24.950, Speaker B: I think that covers it very well, but maybe people have questions.
00:35:35.130 - 00:35:41.590, Speaker A: Nobody, don't be shy. Okay, there's one.
00:35:42.010 - 00:35:56.080, Speaker C: Can you talk more about, like, connection between CPA accounts? Can you talk more about the connection between ZK accounts and the Aglar which you mentioned?
00:35:56.580 - 00:36:30.550, Speaker B: Yeah, I think you can kind of think of ZK accounts as a more generalized version or a primitive, lower level primitive than AG layer. But you can build an AG layer on top of ZK account, because a ZK account is basically just a normal blockchain account that's controlled by a ZK program, and you can have multiple layers of ZK recursion on top of that ZK account. So basically you can basically think the same way that Ethereum La one is a primitive that can be used to create an AG layer. ZK accounts are also a very general primitive that can be used to create an aglaya.
00:36:32.690 - 00:36:35.630, Speaker C: So can chains settle on Celestia after that?
00:36:36.250 - 00:37:19.046, Speaker B: Well, I mean, settlement is a loaded terminal. We kind of like, you can argue settlement, but the way that we're looking at it is not as in like, so that we're not trying to pitch less js, some global settlement there that competes with Ethereum. The way that we're looking at it is like developers have this need that they want to be able to have access to liquidity and have access to assets. And we're basically providing a basic kind of functionality or basic improvement to fulfill that need. But it's not the case that, like, Celestia Solomon layer in the sense that Celestia will not have a Dex, will not have a uniswap. So it's not like you're bridging it. It's not like you're, it's like way more limited than Ethereum.
00:37:19.046 - 00:37:25.182, Speaker B: It's more likely the settlement layer will be, will be something on top of Celestia using a ZK account, if that makes sense.
00:37:25.366 - 00:37:26.570, Speaker C: Yeah. Thank you.
00:37:29.790 - 00:37:30.850, Speaker A: Anyone else.
00:37:38.360 - 00:37:39.720, Speaker D: Two quick questions.
00:37:39.880 - 00:37:42.576, Speaker B: First one, how many light nodes are enough?
00:37:42.768 - 00:37:44.776, Speaker D: And the second is, what's the rough.
00:37:44.808 - 00:37:46.660, Speaker A: Timeline for ZK accounts?
00:37:47.320 - 00:38:36.060, Speaker B: How many light nodes are enough? Well, I mean, the ambitious target is 1 billion light nodes. I mean, it seems, it might not be, it seems very ambitious, unrealistic. But if we have like this, if you have a billion browsers and if light nodes are so resource non intensive that the idea is that users can just run them, that your wallet will automatically embed a light node without you even knowing it, then I think that is possible. There's probably a billion connections to infura, just replace those with light nodes and having hundreds of millions or a billion light nodes is feasible. In terms of the second question, when the timeline for ZK counts, I would say something. I would say it's hard to. It's hard to say because it's ultimately dependent on a decentralized governance process.
00:38:36.060 - 00:38:45.700, Speaker B: There's currently a working group, celestial improvement per working group to add ZK counts to the base layer. But I would probably guess somewhere by the end of the year.
00:38:49.610 - 00:38:50.710, Speaker A: Another question.
00:38:56.650 - 00:38:57.706, Speaker B: I wanted to ask also.
00:38:57.738 - 00:39:10.706, Speaker D: Like something related to ZK accounts. So essentially it feels like that ZK accounts not turn like but add like a ZK like verification functionality. Like to Celeste, what do you think.
00:39:10.738 - 00:39:11.750, Speaker B: About also.
00:39:13.450 - 00:39:38.372, Speaker D: Using like Celeste as for a preview market so that you. Because essentially this temporary storing function is very good fit for premium markets because they only need to store the large flu for a short period of time and it sort of adds another value. And now you go from modular to integrated little if you can put.
00:39:38.396 - 00:39:43.350, Speaker B: So thanks. Is the question more like can you do a preview market on slasher or I.
00:39:43.420 - 00:39:49.590, Speaker D: Well, yes, can you do that? And like second, what do you think about it? Is it like a good idea in general or. It makes no sense.
00:39:50.610 - 00:40:21.920, Speaker B: Yeah, I mean I guess you could build a proof of market on celestia, but I think more importantly that celestial will heavily depend on proven markets. I think proverb markets are very important piece of the puzzle to making ZK accounts kind of like widely adopted because as we know, like proving ZK programs is very expensive. But I think teams like succint and risk zero are doing good work there in terms of creating marketplaces or providing proving services to people that need them.
00:40:26.420 - 00:40:27.760, Speaker A: Any other questions?
00:40:32.580 - 00:40:47.090, Speaker E: If sort of the whole technical roadmap of Celestia like everything falls into place, what's sort of the next points that are sort of the, oh, that's a friction point or this worries me, like this needs more attention. Is there anything on your mind?
00:40:48.670 - 00:41:58.534, Speaker B: I mean, I guess the roadmap I propose is very high level. So like 1gb blocks. It's kind of hard to say. Like it's such a high level roadmap that's kind of hard to predict what the prediction point, the friction points will be after that already. But I would say, like, if you're trying to think ahead, I think, like, Zach from Aztec made some really good points about this. It's like, how will people, if crypto is widely adopted, how will people look back at us in 2030 years and think of us? Will they think positively of us or negatively of us? And there's a very likely impossible route where they will think negatively of us because we're just going to end up in this hellscape where we've created a worse financial system than visa and Mastercard because there's no privacy. So it's like everything is on chain, all the payments, there's no payment, privacy, and it's just a hyper financialized ecosystem where it's kind of like people have nostalgia to what we have now, where it's just like, more cash based.
00:41:58.534 - 00:42:43.334, Speaker B: You can use cash. So I think if we don't carefully think about what the true values of web3 are and try to build according to those values, like making sure that we do care about privacy. We do embed privacy into the systems, like teams like Penumbra and Aztec have been doing that. We don't enshrine powerful interests, and that's why trust minimized light nodes are important. We don't have governance systems that are plutocratic where it's just the token holders decides what goes. I think it's important to stick to those values so that we're not looked on negatively in 2030 years because crypto and blockchains, it's not a good or bad technology. Technology is neutral, like, blockchains can be used for bad.
00:42:43.334 - 00:42:48.570, Speaker B: And dictators have wanted to use blockchains to create their own coins in their own countries.
00:42:52.960 - 00:43:04.280, Speaker A: All right, any other questions? Okay, well, I guess we're ending on a bleak note, but this was actually a really engaging, wonderful talk. Thank you all so much for coming.
