00:00:00.330 - 00:00:00.880, Speaker A: You.
00:00:01.730 - 00:00:39.340, Speaker B: Thanks for joining us, guys. I'm Walt. I'm an investor at Galaxy. We've got a panel talking about applications in Cosmos. The over under on this guy taking that off is 20 minutes, so you can place your bets in the back with Skip. But to kick things off, I'm going to let everyone kind of introduce themselves what they're focused on within the cosmos ecosystem or adjacent to it, and kind of talk about applications that they see today that their ecosystems are focused on but also have already built and then kind of who they are as well. So if you want to go ahead and kick it off.
00:00:40.510 - 00:01:17.970, Speaker C: Hey, I'm Dan lynch, founder of Cosmology. We're building the adobe for Web three, meaning we have a suite of products for the interchange in which our products are actually becoming the standard. We're probably powering try to give exact numbers, but probably about 80% of all the front end applications in the cosmos, everything from low level encoding to wall interfaces, all the top projects like Osmosis, DoidX, Juno, and Stargaze are using our tooling for everything. And essentially our focus is really on just minimizing the gap between intention and execution, helping developers execute their ideas.
00:01:19.110 - 00:01:37.500, Speaker D: Big fan of what you're doing. So I'm Yelena. I'm a co founder of Noble. Noble is a native asset issuance chain in the Cosmos ecosystem. We're bringing native USDC to Cosmos and also other stable coins and working with asset issuers one on one to really enable that on ramp into the ecosystem. So happy to be here.
00:01:38.270 - 00:02:07.730, Speaker A: Hi, I'm Albert. I'm the co founder and CTO of Injective Labs, which is the development company behind injective, the layer one blockchain. So injective is a blockchain built around finance focusing on Defi. At our core, we offer a high performance on chain, fully on chain, decentralized order book based exchange for spot perps futures and binary options, and have a whole host of other Defi applications and now are looking into integrating with rollups to bring SVM and EVM compatibility as well. Cosmos.
00:02:11.910 - 00:02:12.274, Speaker D: Hello.
00:02:12.312 - 00:02:42.480, Speaker E: My name is Yang Yin Li. I'm in charge of the head of partnership at the Crescent. Crescent is one of the spin off project by the B harvest. Crescent is the orderbook hybrid deck. So we are supporting old swap and transaction and defi protocol transaction, and we want to build total service for the. Yeah. Nice to meet you.
00:02:43.250 - 00:02:51.410, Speaker F: And last but not least, I'm Dev Bear, CTO co founder Bear chain. Bear chain is EVM compatible, all one built using Cosmos. Oh, do I not have my mic on? Is it not working?
00:02:51.480 - 00:02:52.274, Speaker A: Oh, is there a mic?
00:02:52.312 - 00:03:01.019, Speaker F: Yeah, I have a mic. I'm good. Is it good? It's ridiculous, but it's good. So, yeah. To kind of start again. Yeah. Bear chain EVM compatible, all one.
00:03:01.019 - 00:03:29.310, Speaker F: On Cosmos, what we did is we replaced proof of stake with what we call proof of liquidity. It's the extension of delegated proof of stake that aligns validators with providing liquidity on the chain and makes it so that the act of providing liquidity is what's basically giving you network ownership. In addition to that, we've also built out Polaris, which is an EVM framework that allows for true native EVM equivalents that's interoperable with Cosmos, IBC and all of that fun stuff. I'm super excited to be here to talk about Cosmos applications.
00:03:29.970 - 00:03:39.538, Speaker B: Yeah. And just super quick, because I think we missed it. If you could just say where your protocol or project is at. Is it live? Is it on testnet? So just starting back with you. Going quickly through.
00:03:39.704 - 00:03:57.350, Speaker C: Yeah, we're live. We're currently powering stuff on osmosis, Juno, Stargaze, Dydx. I think they're using our tools, but they're probably not launched yet. The new Cosmos version, as well as a ton of other projects. So, yeah, we have about eight different products, all live. We're shippers.
00:03:57.770 - 00:04:08.380, Speaker D: Yeah. So we have a mainnet with a validator set that is a hub validator set. So it's a subset of the hub. And we will be transitioning to interchange security in a few months.
00:04:09.070 - 00:04:13.760, Speaker A: Yeah, injective has been on main net since 2021, so about two years now.
00:04:14.930 - 00:04:30.420, Speaker E: So Crescent has been launched since last year, and it's been a year and a half. And for the P harvest, we are running a market maker and r and D center and Tas as well. So all of our protocol are on main net.
00:04:30.870 - 00:04:38.760, Speaker F: Beautiful. And Bear chain will be entering testnet throughout Q three. And we have multiple teams starting to integrate Polaris into their devnets as well.
00:04:39.690 - 00:05:22.846, Speaker B: Great. So kind of, I think for the audience, we're all at a crypto conference, so we're all pretty familiar, but just kind of interested in hearing different perspectives. We have, like, a general purpose chain. We have a couple versions of interchange security or applied some sort of restaking or shared security, and then someone who touches almost every chain in and kind of like your words. And we'll start with Devbear, who's working on something a little bit more general purpose. Where do you kind of see application design and cosmos being different, and why is it different? Or if it's not different, why do you think there's such an emphasis on application sovereignty and kind of like a tight coupling with consensus and the other pieces in the stack?
00:05:22.958 - 00:05:54.602, Speaker F: Yeah, I think having an app chain is really interesting because it does give you that sovereignty, as you mentioned. Right. It allows you to define your own rules. It allows you to define how you want to build your application, not only at an application layer, but at an infrastructure layer as well. And a big part of what allows for that is the dev UX of Cosmos. The ability to take something that's complicated, like a blockchain, bring it down into things that are simple to understand, like modules, and really break things apart, I think has done a really good job of that. Additionally, I think what's a really cool, interesting thing is the concept of app chains that are built on top of vms as well.
00:05:54.602 - 00:06:16.278, Speaker F: So things like Op stack, where they're like, okay, you can launch your app chain, et cetera, et cetera, and write all your things in solidity, which is like a framework that people know how to use really well. And that's part of why we built players as well. As we see that we want people to build app chains, we think app chains definitely have a future, but we want to make them more accessible to devs who maybe don't know go or don't know rust and feel that sometimes a virtual machine is the way to.
00:06:16.284 - 00:06:20.040, Speaker B: Go and we can just bring it back this way.
00:06:21.690 - 00:07:00.382, Speaker E: I think Appchain concept is pretty interesting because I'm very new in cosmos ecosystem. I know Cosmos has a pretty long history, but I work at Chainlink for almost three years, and I moved to here last year. So it's pretty interesting. So all the application on top of the appchain can fully enjoy the customization. So it can pretty friendly for the protocol level. So, for example, on the Ethereum basis, it's really hard to use a fast transaction like Autobung. Need a fast transaction, but it has a challenge on the Ethereum.
00:07:00.382 - 00:07:11.160, Speaker E: But on the outline, we can customize it and we can use all the different module. So it's pretty interesting for the protocol and dapps level.
00:07:14.250 - 00:08:28.222, Speaker A: I think one new area that injective has been thinking as an app chain, as a sovereign app chain, has been with regards to roll ups and mainly roll ups, you might see on more established layer ones like Ethereum, where you cannot make protocol level changes. So it's restrictive to what you can do. But something that we've been thinking through is what if you could have, for example, a more of an enshrined roll up? And the reason for doing so is to have more atomic composability, where suppose each of the validators of the injective blockchain were also part of the sequencer network, then they could just submit the header and state route data information to injective. And for example, that could allow for bypassing a fraud proof window and allow for more atomic composability. But these sorts of protocol level changes you would never be able to make on something like Ethereum because it's just ossified and it would take years for anything as radical as that to occur. But you have this flexibility, right? Alternatively, you could also explore things like interchange security. So if you want to, instead of a roll up, have something like a fork of Evmos or Barachain, to have EVM capability, you can do so.
00:08:28.222 - 00:08:54.866, Speaker A: So there's a lot bigger design space that you can experiment with, and I would say at all layers of the stack, right? And with people like Skip, you can do things like prioritize mempools, injective, for example, you can use Ethereum accounts, you can support metamask. So at all layers of the stack you have flexibility. And that really allows for chains to differentiate themselves and find a unique value proposition to offer to end users eventually.
00:08:55.058 - 00:09:20.240, Speaker D: Yeah. I mean, I think for Noble, we leverage the Cosmos SDK quite a lot. And I mean, there's all of these modules that make a lot of sense for Noble's use case. And so we really leverage a lot of the open source sort of modules that teams like osmosis have built when it comes to things like token factory or even things on the protocol side, like the packet forward middleware. So just really leveraging the open source kind of primitives that exist is why we think it's really easy to build in cosmos. To be honest.
00:09:22.690 - 00:10:14.750, Speaker C: I think that the Cosmos represents the flagship representation of the third generation of blockchain. If you look at the first generation of blockchain, which is digital money, like store value, couldn't do much with it. So we fixed that by creating the second generation of blockchain, which was like Ethereum, and programmability. And so the third generation represents interoperability, kind of like horizontal sharding, where you can create your own app chain and customize things. What's also interesting is it also opens up a whole new design space. A lot of the tools in Ethereum are very monochromatic because everything is just built on one chain and there's sort of one library for sort of interacting with everything. Cosmos is very unique because now we have to actually look at all these different chains with all their customizations and still try to come up with tooling to create these cohesive ways of working with their functionalities.
00:10:14.750 - 00:10:35.160, Speaker C: So that's actually really interesting challenge for us that we've also solved with compilers and transpilers. It's actually really fun working with all the chains and helping them expose all these unique, different unique features, but then creating, like, a unified way to access them. So really love the cosmos and what everyone's building.
00:10:36.570 - 00:10:59.758, Speaker B: Yeah. So I think it'd be interesting to get everyone's kind of perspective. Ethereum is 2015, Cosmos is 2017. Really 2019. And right around 2019, Ethereum kind of transitions away from plasma and starts thinking about optimistic scaling with roll ups and then even kind of looking into the future with validity. Roll ups injective. You've mentioned it.
00:10:59.758 - 00:11:18.420, Speaker B: You've also mentioned kind of this transition from money to programmability to kind of the cosmos third vision of, like, an Internet scale type system. So how do you guys kind of see roll ups within this framework? Do you think it's all compatible or very differentiated? So you can start.
00:11:19.110 - 00:11:31.306, Speaker C: I've definitely heard some people talking about creating IBC connections to L2s. I will admit I'm not the expert in rollup, so I'll pass it, but I will say that I have heard some interoperable support.
00:11:31.488 - 00:12:18.870, Speaker D: Well, we're really excited to kind of connect with the roll up ecosystem, especially, obviously, with the celeste ecosystem from what is currently kind of the status quo. It is not a solved kind of question of how you bring IBC to roll ups, but bridging protocols like hyperlane and kind of other examples are trying to solve for that. So I don't know if that answers your question, but I think that at the end of the day, IBC as this kind of standardized, interoperable kind of protocol for permissionless message passing, at least for cosmos kind of bulls or whatever, that's what we see as the future of this message passing across different layer ones and L2s. Right now, it's not the case yet, other than, I guess, poke it out to Cosmos. But I think we'll get there eventually.
00:12:19.850 - 00:13:00.760, Speaker A: Yeah, I would say there's a lot of engineering work involved here, particularly for IBC. You have to currently wait for the fraud proof window to pass, which in the case of Ethereum is seven days. So obviously, these windows can be shorter, but that really hampers composability, especially from developers or users in cosmos expecting instant finality, because that's how it currently is. You don't want to have to make that trade off. Right. So I think that's why, as I mentioned before, we're exploring ways to have more atomic composability. And the design space is quite large as an app chain because you're not restrained by existing consensus rules or protocols that you have to follow.
00:13:00.760 - 00:13:08.680, Speaker A: But yeah, I will say that injective is still quite early here, but we are partnering with Espresso and systems and many others to figure this out.
00:13:11.370 - 00:14:04.522, Speaker E: Yeah, actually in 2019 and only of 2020, IBC and Cosmos is quite vague. And it's pretty ollie for me. So I don't know what they're doing and what they will going to bill. But after they launch the IBC and ICA stuff, I pretty understand what it is and it's pretty simple and easy, not only for the retail user, but also the developers. So thanks to the IBC, a lot of the developers, a lot of the retail user doesn't need to worry about the bridge risk and bridge issue recently, except the IBC. A lot of the bridge, they still suffering from the bridge risk. So if we can utilize IBC concept or ICA all Cosmos basis technology, then we can solve a lot of problem.
00:14:04.522 - 00:14:14.974, Speaker E: I think it's pretty good to start and with the modularity and intensifying the modularity technology, we can break through all.
00:14:15.012 - 00:14:16.560, Speaker D: The challenges, I guess.
00:14:17.490 - 00:14:56.362, Speaker F: Yeah, I think at the end of the day, speaking about it specifically from a roll up context is an interesting lens. Because at the end of the day, I think it's important that people have the scalability and have the tools to build applications that they want. And we can talk about what's the best scaling mechanism. Is it roll up? Is it things like ics? But at the end of the day, people who are building applications just want to build applications. People that are building with react or people that are building with Django, they don't really care what they're using to get the job done. It's just the fact that it works for their use case. And I think we need to think about these scalability and these bridging solutions kind of in the same way where if I'm an application, I need access to these other applications or to liquidity or something of the sort.
00:14:56.362 - 00:15:00.218, Speaker F: And what's the easiest and lowest cost way to get that for them.
00:15:00.384 - 00:15:46.490, Speaker D: Yeah, I mean, I think it comes down to the path of least resistance and what is the most optimal path from getting from point a to point b. And I think in Cosmos we see that really simply with IBC and doing a token transfer. It used to be kind of hard, like when IBC first launched in 2020, I remember being like, what is going on? How do I do a manual token transfer like in Kepler with the dev mode, the developer mode? Sorry, but that has greatly improved in terms of the user experience in the past, I guess, three and a half years. Things like automatic routing, things like packet forward, middleware, things like what skip is doing to just make it super straightforward to get from point a to point b without having to do a million swaps in between, which used to be the case. Not quite a million, but you get my point.
00:15:46.640 - 00:16:26.822, Speaker B: Yeah. So kind of coming from the sidelines, I think obviously, developers love kind of like being in Cosmos land. It's very friendly, it's great documentation. There's a lot of things that you can kind of plug and play and build how you want. But crypto broadly, but also specifically, Cosmos has struggled with adoption. Everything's pretty prone to the financial cycle. But what are kind of the applications and also the changes to the stack, whether it's ux custody something, what are the kind of the next steps in the next six months to close out the year and then going into the future that makes you really excited both on the application side and then on kind of the user experience.
00:16:26.822 - 00:16:28.200, Speaker B: Friction side.
00:16:30.810 - 00:17:19.586, Speaker C: Yeah. Well, I mean, the way I see this is that you rewind about a year ago. And to build an application in the cosmos, first it would have taken you between three to seven days to connect a wallet, and you'd have to manually write all your encoders. So this is something where you're trying to build an app, you have this great idea, but you get lost in the weeds with all these complexities around things that as a developer, let's say you're trying to build the user interface and you're trying to create that user experience that will onboard these non technical people or these laypeople from the real world into crypto. But in reality, the type of technology skill set required was like a senior engineer that understood blockchain. So after cosmology came onto the scene, we basically abstracted all that. So we can minimize that distance to where now you have your idea, you can actually build it.
00:17:19.586 - 00:18:10.310, Speaker C: And this is actually quite new. We've only recently kind of gotten through the full stack to where if you have a cosmos chain or a cosmos and smart contract all of the front end tooling can now be completely automated. So they were kind of fighting this impedance for the past year or a couple of years now to where the user experience has greatly suffered because the developer experience has suffered. So now that we've fixed that developer experience and provided a streamlined workflow for developers, to the point where if you're a junior web two react UI developer, you don't have to know anything about blockchain now to start building dapps inside of the cosmos. So I think then we can bring in, open the floodgates to all the web two developers who now have all these great ideas and they can build something. And I think that's how we can create beautiful user experiences to have mass adoption.
00:18:10.890 - 00:18:51.394, Speaker D: Yeah, I mean, I'll talk about it from the perspective of just like your average user, and then I'll talk about it from Noble's perspective, but from the perspective of an average user, I think know a lot of what Dan just said. I think me is my profile or kind of my Persona or my user Persona is pretty good. I know pretty basic, like HTML, some markdown, I can read a little bit of go. I know logic, but I can't fully code adapt, but there's all of these tools, all of these really seamless ways of interacting with the Cosmo stack. So, I mean, this is kind of like back in the day. This isn't necessarily a thing that is around anymore. Maybe I'm wrong, but things like Starport, with a couple lines of code, you can create your own Cosmos blockchain.
00:18:51.394 - 00:19:18.206, Speaker D: This is a tool that the ignite team built a couple of years ago. So just making it extremely user friendly, making Kepler kind of more versatile, making all these different integration points just accessible, obviously good documentation. I mean, these are all things that need to drive our ecosystem forward and I think we're getting a lot better at it and I'm quite optimistic. So that's more on the user side. Just on your Saturday night, what am.
00:19:18.228 - 00:19:18.734, Speaker E: I going to do?
00:19:18.772 - 00:20:22.558, Speaker D: I'll kind of play with Starport, why not? But then more mainstream, kind of like what's going to bring thousands of people to the next thousands of people to injective or to osmosis or to all of these app chains. I talk a lot about this. It is liquidity. It is like the institutions, it is actually partnering with them and being able to speak their language and actually being able to advocate for Cosmos standards and the Cosmos stack and going through the motions of explaining what is IBC, what is middleware in this IBC world. How do you mint how do you burn? What are the standards for things like asset issuance, which is obviously what Noble is focused on. So in terms of the application itself, I'm very excited and proud of what we're doing with noble and bringing native USDC to the ecosystem, and just really making sure that noble can serve all of the other app chains that need this liquidity, need these more institutional focused actors to kind of come in and feel comfortable with the ecosystem.
00:20:22.734 - 00:20:29.894, Speaker B: Not to put you on the spot, but do you see other asset types for noble down the line, and what does that kind of look like?
00:20:30.012 - 00:21:08.942, Speaker D: Yeah, I mean, we're very focused on stablecoins, and we see these fiat collateralized stablecoins as having huge real world use cases. And one of the things that motivates a lot of our team is real world adoption. And I think we've seen USDC really do well in the space. So really stablecoins are a big part of it. And really just being an ambassador for that asset issuer within the space. So, not competing on DeFi, not competing as a Dex, just saying we are here to propagate your asset as far and wide as possible and making sure we have the right integration points and we can have people actually use it properly and not have these concerns. So, stablecoins wrapped assets rwas.
00:21:08.942 - 00:21:10.820, Speaker D: We'll see where the world takes us.
00:21:12.630 - 00:22:03.122, Speaker A: Yeah. In terms of the next wave of adoption, I think there's two things here to look at. One is that there have to be sufficiently compelling opportunities and products for people to use on chain that are better or that they cannot find in tradfi or CFI. And two, that we have to have infrastructure and tooling that can enable a lot more experimentations, a lot more shots on goal to do that. I think the work that Dan does, for example, at cosmology is great, but it's at all layers, right? It's from the RPC stack, it's from. Even in cosmos, the kinds of applications like making the bar know it's quite challenging for people to learn not only rust, but cosmosm and all these cosmos concepts in order to just build a simple application. Right.
00:22:03.122 - 00:22:34.110, Speaker A: So, expanding even at the virtual machine level, like allowing for EVM and SVM and having good composability with that, is really important. Yeah. And I think also that bringing real world assets is very valuable here. USDC as an example, but also on chain treasuries and the initial promise of DeFi. Right. I just talked to a protocol. I forgot their name as a user right now, buy treasuries in your Schwab account.
00:22:34.110 - 00:23:01.814, Speaker A: Sure, that's great. But this protocol was trying to do treasuries. Plus you sell a straddle so you can juice your yield further, and it's that sort of thing. So instead of earning 5%, you can earn 8% 10%. Right. That's one example of how DFI can offer more compelling opportunities. Yes, maybe it's not as crazy as it was in DFI summer, but it's these sorts of experimentations that we have to enable at a much larger scale if you want to have a chance.
00:23:01.814 - 00:23:04.310, Speaker A: I think at greater mass adoption.
00:23:07.530 - 00:23:07.798, Speaker B: I.
00:23:07.804 - 00:23:52.550, Speaker E: Think when it comes to the mass adoption, the most important thing is we need to make it easy from the protocol level. Like, for example, when they think about the sushiswaps beginning, they just add one code and one function from the uniswap. So it's really easy to make and easy to deploy another Dapp. But on the cosmos ecosystem, they need to operate, and they need to concern about how they can support the chain security. So it is the very tricky part of the Cosmos appchain perspective. So not only for the running protocol and DF, but also they need to concern about how they can secure the chain security and how they can make their own validator set. So it is a real tricky part.
00:23:52.550 - 00:24:26.580, Speaker E: But thanks to the Celestia, so we can easily use their module and their layer, so they don't need to worry about bootstrapping their own validator set on security or data availability. So we can utilize that kind of product very well. As well as the saga. Saga, they support the app chain a lot, so they can reduce the burden of running a new app chain. So thanks to this kind of the new protocol, I think mass adoption will be coming very soon.
00:24:27.030 - 00:25:12.478, Speaker F: Yeah, to get a tie on to, I think, a little bit of what everyone said. Obviously, bias here is definitely coming from the Ethereum ecosystem, but seeing how easy it is for people to deploy solidity and viper smart contracts in that ecosystem, in retrospect or in comparison to cosmosm, you need to be like a senior engineer to deploy a cosmosm Dap. But my twelve year old cousin can build solidity Dapps and send tokens to his friends, and it's really easy. So I think getting it more simple at the end of the day, right, people don't want to have to worry about maintaining a validator set. People don't want to worry about learning rust or having to learn new tools. They just want to be able to reuse things that may be legacy, and maybe old, as you mentioned, ethereum 2015. It's approaching almost a decade old at this point.
00:25:12.478 - 00:25:52.220, Speaker F: But in that sense it's kind of reached somewhat of the JavaScript legacy, where when people who are maybe doing a coding boot camp or people who are self taught get into computer science, they quite often more than not get into JavaScript because it's easy. They can start making fun things. They can see their progress if they're building a little web app or a little node JS app or react app or whatever. And that's kind of how I see solidity, is that you can clone soulmate, deploy a little token, and it just kind of works right. So it's really friendly and makes it really easy to onboard not only experienced devs who are building crazy protocols with off chain components and stuff, but the next generation of builders as well, who may be still in high school or elementary school.
00:25:52.670 - 00:26:18.670, Speaker C: I just want to make a comment. I completely agree. In general, I think it's not a technology problem, it's a people problem. And he's right. Like Rust is a very difficult language, and cosmosm is actually based on Rust. And if you look at things languages like typescript, there are millions and millions of developers. So if there's a way to open those floodgates, to bring those folks into writing smart contracts, that's like a huge lower barrier of entry.
00:26:18.670 - 00:26:54.820, Speaker C: Actually. I don't know if you guys know this, but cosmology, while we've mostly been focused on front end technology, recently acquired the Terran one team, and we actually have a compiler to cosmosm that actually has a very sort of hybrid rust to end typescript like languages. It's very simple, bakes the semantics of the smart contracts into the syntax. So it's actually very simple. And our goal with our Cosmos compiler is to actually onboard a lot of these Python and typescript developers that I see those languages as languages of the people. And so that's a big part of our strategy to onboard more developers from web two into web3.
00:26:55.670 - 00:27:22.490, Speaker B: So kind of to wrap things up here, do you guys want to each outside of the project you're associated with, what's one application you think represents kind of the cosmos coupling of consensus and application, and kind of creating something unique really well. And what's something that could be within your project's ecosystem or could be outside of it, but still in cosmos that you're really excited for and think could be a potential catalyst or kind of bring in more adoption?
00:27:25.630 - 00:27:28.650, Speaker D: I don't remember preparing for this. You put me on the spot.
00:27:29.550 - 00:28:29.454, Speaker C: In terms of projects. I think the bad kids NFT collection is pretty awesome because it's super unique. And while at first I was kind of into the punks and all these other things because I was looking at Ethereum for inspiration, it took me a while to realize it, but the bad kids are so unique. I know it's not actually a project that's powered by developers, but the Stargaze team did build the NFT marketplace. And I'm really excited about bad kids and just like kind of like what Joe was talking about with the art world yesterday at osmocon, I just found really inspiring to think about. And I'm really excited about kind of catalyzing more of a creative artistic creations by just giving more tools so people can actually execute their ideas. I think it's been so technically difficult to build things that as we lower the bar, just giving creators what they need to do and what they want to build.
00:28:29.454 - 00:28:30.846, Speaker C: So that's about it.
00:28:30.948 - 00:29:11.902, Speaker D: Yeah, I mean, I'm having a hard time coming up with one example. I don't want to just say one name and have that kind of live forever. So what I'm excited about is actually the components coming together, so these different projects coming together and actually powering something very meaningful. So to Dan's point about NFTs, we'll have a little bit more to share about this in a couple of weeks. But being able to buy a bad kid on Stargaze, one click with USDC, that's not possible right now. There was a bit of like a Twitter kind of viral thing that happened a few weeks ago where a bunch of Ethereum people wanted to buy a bad kid. They didn't know how.
00:29:11.902 - 00:29:34.820, Speaker D: They were like, what are stars? What is this nonsense? Well, very soon it'll be abstracted away and it'll actually be very easy within your wallet to one click buy an NFT with something like USDC or maybe even another currency. So things like this are just really exciting and I think will make people realize how powerful the cosmose ecosystem really is.
00:29:36.250 - 00:29:58.620, Speaker A: Yeah, I'm excited quite about the L2 work that we're doing with Eclipse and also espresso, actually having a decentralized sequencer network and having it in production with IBC as well. So there's a lot to figure out there for interoperability and atomicity, but I think these are solvable problems and it's just a matter of actually doing. Yeah.
00:30:01.150 - 00:31:15.438, Speaker E: I think the liquid staking protocol improved a lot of user experience, I guess from the capital efficiency perspective. Most of the crypto people, they don't care about the capital efficiency and the risk management. They're not good at this kind of stuff. But thanks to laker staking protocol, user can experience and user can understand what is the capital efficiency and what is the better choice to invest and what is the risk management. So I think it was a great use case, it was a great application for the user experience about the DeFi protocol for the upcoming protocol, not the new protocol, but I heard that, I don't want to speak the specific protocol's name, but I heard that some protocol and some app chain, they're preparing the interchange query oracle right now. So actually cosmos ecosystem, we don't have any specific oracle protocol so we need it definitely. Also using an interchange query is very important to the entire cosmos ecosystem because using IBC can make a delay.
00:31:15.438 - 00:31:23.410, Speaker E: So interchange query would be ideal. So I'm looking for the, and I'm very excited about the new Oracle protocol.
00:31:24.390 - 00:32:12.866, Speaker F: Yeah, a lot of what we're focusing on is figuring out ways to take existing Ethereum things and bring them into cosmos and onboard those users in a way that's really easy. For instance, one of the things we're working on with the guys at Skip is a vote extension based oracle that will tie into barrachain to provide pricing. And those pricing will be exposed to the EVM via an interface that's identical to chainlink. So we're trying to find ways to onboard users and bring users from other chains, from the EVM ecosystem into the cosmos ecosystem through things that they're familiar with. When you have to reinvent the wheel, when you add friction, when you force people to learn what vex 32 is, when you force people to learn what cosmosm is, it can add that friction. But I think what kind of in the angle that really approaching is, you know, bear chain is an EVM chain. How do we bring EVM users that's kind know it's very familiar to them, et cetera.
00:32:12.866 - 00:32:25.640, Speaker F: And over time they'll start to realize, oh, what's this IBC pre compile you guys have? Oh, what's this? What's this? And you onboard them into cosmos in a way where they don't even realize they're being onboarded because they just see it as an EVM chain. That's something they're super familiar with.
00:32:26.250 - 00:32:36.960, Speaker B: Great, thank you. We have about 3 minutes for any audience. Questions could be for a specific project or more generally, otherwise we can wrap it up. So any questions?
00:32:40.690 - 00:32:44.558, Speaker D: I think everyone's just building Cosmos applications so they don't have any questions.
00:32:44.724 - 00:32:50.046, Speaker B: Well, thanks, guys. We'll stick around after if you want to grab contacts for anyone. But thank you very much for joining us.
00:32:50.148 - 00:32:52.490, Speaker D: Thank you. IBC.
