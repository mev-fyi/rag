00:00:01.760 - 00:00:23.630, Speaker A: Hello, everyone. I'm Josh. I'm the co founder and CEO at Astria. And so previous talk I gave that's gotten quite popular was titled we're all building the same thing. That is not what I'm going to talk. Can you guys reset the clock, maybe just so I know where I'm at from, a timing talk about we're all building the same thing. That is not what I'm talking about today.
00:00:23.630 - 00:00:48.736, Speaker A: Today I'm just going to be blatantly shilling Astria. I think generally I have this shtick of being very forward and very honest. And quite frankly, what I'm here to do today is I'm going to sell Astra to you and I'm going to talk about what we've done and why we think you should use it or you should be interested in it. Oh, come on. So what is Astra? Astra is a shared sequencer network. We call it the shared sequencer network. This is going to be the bottom of every single slide here.
00:00:48.736 - 00:01:30.718, Speaker A: But what does it mean that it's the shared sequencer network? Well, I'll argue that the important part of that is the network bit. When we say it's a network, what do we mean? Well, really, we mean that this is a network like other blockchains. There's been a lot of talk about like, oh, I want to decentralize a roll up. Isn't that just making another blockchain? And yes, making a decentralized sequencer is making another blockchain network. But it's also accurate to say that Astria is a shared sequencing layer. And what do we mean when we say it's a layer here? That's somewhat of like an overloaded term, right? Is it an l one? Is it an l two? Is it an l three? Is it a layer? Zero. We use this diagram here.
00:01:30.718 - 00:02:11.892, Speaker A: I think this is like, the simplest way to put it is that we assume Astria is the sequencing layer, which is going to sit in between roll ups and in between celestia as a data availability layer. But it's important to note that Astra is a l one. And I think that's something that if I want people to take anything away from here, fundamentally, Astra is an l one, and that's why we think it's important to call it a shared sequencer network. We have a network of nodes. Astra itself is not a roll up of another chain. It is its own l one. And what are the important parts of being an l one? What does this actually enable us, and we've seen a lot of chatter around base roll ups.
00:02:11.892 - 00:02:45.868, Speaker A: Right. We've seen a lot of discussion about preconcs for base roll ups and fundamentally myself and kind of the project downstream from that is opposed to preconce. And you've seen a lot of discussion generally from the paradigm crowd about how we wouldn't need preconfs for our base rollups if the l one block time was just faster. And that's exactly what we've been building for the past 18 months. We've been building an l one explicitly to sequence rollups. And those rollups are fundamentally based rollups of the Astria l one shared sequencer. And that's what we've done.
00:02:45.868 - 00:03:16.638, Speaker A: We're running with around two second block time. So there's a bit of variance in comet BFT, and we're running using comet BFT. We get single slot finality. And we think that is the optimal architecture to give you decentralized liveness guarantees with a roll up and a high quality user experience. Astra is also kind of a settlement layer, right? And this is a word that's been overused a bunch, and it's somewhat confusing. But generally, when we say settlement layer, we mean bridging. And what do we mean when we say Astria also supports bridging? Well, again, it's an l one.
00:03:16.638 - 00:04:09.618, Speaker A: It has its own consensus set. It has its own state machine in it. And so what bridging on Astria looks like is you can have roll up number one and you can have roll up number two, and they're going to have these bridge accounts inside of the Astra shared sequence or state machine. And structurally, this is very, very similar to what you would have on an optimism or an arbitrum, where you're going to have a smart contract, and that smart contract is going to be looked at, it's going to be watched by the roll up node, and that roll up node is going to drive information out of that contract. And what this enables people to do is to have multiple rollups using the same shared sequencer as based rollups, and they can do a withdrawal from their roll up. It will result in funds appearing on the shared sequencer, like their base layer. They can then transfer those funds to a different bridge account, and those funds will immediately be derived into the other roll up.
00:04:09.618 - 00:05:03.472, Speaker A: This is the set of things that we are providing with Astra that we think makes it a great platform to build rollups on top of. Why did we build Astria, though? When people say, why Astria? Why? You know, that really what they're often asking is, why not X? Why not some other thing that is not Astria? And generally, a lot of times this is going to be, why not Ethereum? Right. We're at the modular summit, you know, thank you, Maven. Eleven. Thank you, Celestia. And a lot of times in this kind of modular space, in this Celestia native space, we get the question of, why are you doing a new thing? Why are you not doing 4844? Why are you not working on dank Sharding? Why did you make a new thing? And fundamentally, I joined Celestia as a relatively early employee in 2021 when Celestia was not that well known. And so a lot of people say, well, look, Celestia is still kind of new.
00:05:03.472 - 00:05:57.980, Speaker A: Celestia has a relatively low FDV, a relatively low TVL. It's a relatively new token. Why would you not just use Ethereum? And from my perspective, as someone who was a very early kind of person, to make a commitment to Celestia. Celestia looks really, really good today relative to when I made a kind of large commitment to work on Celestia. And the reason I picked Celestia is fundamentally, the people at Celestia invented this concept of data availability sampling. And I think it's important that we look to what the people who invent these concepts are going to do with them and have brought data availability sampling to market as the first blockchain to support that. And fundamentally, I think there's value and building on an upstart project and being able to make, and being able, being willing to make the commitment to a new project and not completely depending on the incumbent perpetually, because that's going to constrain innovation.
00:05:57.980 - 00:06:38.668, Speaker A: Now, why not centralized sequencers? Why do we think it's important to have decentralized sequencers? Fundamentally, this is an ideological perspective. You can run a roll up with a centralized sequencer. You can get some decentralization guarantees, mostly in the safety space, to get forced transaction inclusion, whether it's a twelve hour delay, a 24 hours delay with various kind of safety properties. But from my perspective, and again, my project is generally downstream of that. Right? So when I say something, you should generally assume Astri is going to kind of follow that perspective. Right now, it is not a decentralized project right now. So why don't we do centralized sequences? Because I think it's important to fundamentally be ideological in this space.
00:06:38.668 - 00:07:29.756, Speaker A: The point of working in cryptocurrency is that decentralization is important to us. Decentralization is the point of working in this space if you want to do centralized things. There is a robust tradfi industry that quite frankly has a lot more assets in it even than the incumbent ethereums or solanas of the crypto industry. But we think it's important to be decentralized and we're willing to be upstarts who are willing to pay a high cost from development, from acquiring new assets because we think decentralization is important. And from my perspective, I think that extends to liveness guarantees and to exposing it to users. Fundamentally, if you give users a centralized kind of point of interaction with the chain, they will get used to that. And you have abstracted away the reality that decentralization is not free.
00:07:29.756 - 00:08:00.758, Speaker A: Decentralization has a cost. We're running more nodes, and if you give users a centralized intermediary there, they will think that is what is kind of to be expected. And there's this saying, it's hard to convince a man of something if his salary depends on him not being convinced of it. Right? It's probably misquoting that. Right. But fundamentally, when we have these roles with centralized sequencers, when they think about decentralizing, they've had it on the roadmap for years. They have a revenue stream that they have to come to, kind of.
00:08:00.758 - 00:08:31.916, Speaker A: They have to get comfortable with giving up part of that revenue stream to decentralize. That's not a likely outcome. So we think decentralization is the point. We think it's important. We think it's important for liveness and safety, and we think if you don't do it first, if you aren't decentralized by default, the incentives are such that you're not going to want to do it later. So what have we built at Astraea? Right, we've built Forma, right? Or we've helped build Forma, we've helped incubate forma. Forma is a cultural hub of the module ecosystem.
00:08:31.916 - 00:09:00.264, Speaker A: It's been live on its main net for a couple of weeks now. It's done several NFT collection mints. It's mints, a bunch of nFts. In general, it's been successful. Forma is very useful as a demonstration of what I keep saying, these Celestia native roll ups. That's one of the things we're really focused on, is saying if you're going to use a new ecosystem, you can't use it halfway and only use Celestia to be alternative da for an Ethereum based thing. You are still making significant concessions to the incumbent Ethereum system.
00:09:00.264 - 00:09:39.656, Speaker A: And so we think it's important to explore and provide these Celestia native roll ups. And so forma is our kind of first step there, and it's been running on its main net for a while, and we're very, very happy with kind of how it's done. We've also made the Astra stack, which fundamentally is what powers forma. And what do we mean by like the Astra stack? We mean fundamentally things like the execution API. And this is a API we've made. It's a GRPC, it's a protobuf API, and it is what rollups use to integrate with Astria. And we made this as an alternative to something like AbCI or something like Ethereum's engine API.
00:09:39.656 - 00:10:17.682, Speaker A: And the reason we did that is fundamentally, we think when you're going to be a startup, an upstart against an incumbent, there are lessons to be learned from the incumbents. It's not that their APIs are bad, it's not that they're terrible, but it's that we've seen how they work in practice. And if you're going to bite the bullet and do a new thing, there are things to learn and you don't have to pay the same cost they have to to maintain it. Then we made our known execution API. More importantly, we've made a lot of open source software. And when people talk about decentralization, it's fundamentally my view that the most important part of being decentralized is that your software is open source. And I want to be clear, I mean open source and not source available, right.
00:10:17.682 - 00:11:03.616, Speaker A: It's important that if you are making a decentralized project, anyone can come in and use the software you make to innovate on that project, to modify that project, to make an alternative to it. If we're worried about reg risk in this industry and you are running a BSL license, it's like a business source license, and your entity, whether it's a Delaware C Corp or something else, and your entity is attacked and you're under BSL, you may not be able to open source that license, and people may wait a two year clock. So we think the most important thing is that the software is open source. That is the core pillar of decentralization to us. We've also made a lot of developer tooling because we think that's important. And fundamentally, when I joined crypto three and a half years ago, the state of developer tooling was not good. It's still not great, and it can be better.
00:11:03.616 - 00:11:43.054, Speaker A: And again, we're trying to do something from scratch. We're willing to kind of commit a lot of effort to that. And so we think it's important to try to provide a better developer tooling system from the start, right? So one of the big things we've made is the CLI. Astrigo. CLI is like the repo name, right? But fundamentally, what we've made for the CLI is we've accepted we're in a modular ecosystem, right? And what modular code means for those that may have worked in a space where they worked with like a monolithic code base, they move to a microservice code base. Fundamentally, you need to get comfortable maintaining multiple components. And the way you do this well is you bring your development environment dramatically closer to what your production environment looks like.
00:11:43.054 - 00:12:17.096, Speaker A: And so we've built a tool that allows you to run all of the components in the Asteria stack locally in a very easy to use way. If you have the prerequisites, like just and go and rust and whatever you can get. Clone this repo, you can run Astria, go and knit, and it will go pull all of the binaries you need, and you can run Astria dev run, and it will run all of the components in our stack. And what this will run is this will run our sequencer app state machine. This will run a cometbft instance. This will run composer, which is functionally the write path relayer between a rollup and Astria. And it will run conductor, which is the kind of consensus node of the rollup.
00:12:17.096 - 00:12:57.720, Speaker A: And we think it's important that this provides a very easy hot pass, something similar to what a lot of web developers in web two are used to, where you can run a local tool and you go edit your code, and it takes you 30 seconds, maybe a minute to modify your code, save your file, rebuild your code, and redeploy the instance. So we've created a tool that enables you to do that, but in a blockchain, modular development environment. And again, this is open source, this is MIT and Apache tool dual license. This is useful to your project. It's a relatively generic framework. Our team would be more than happy to talk to you and see how this might be helpful to your team to use a different state machine or to use a different set of componentry. Right.
00:12:57.720 - 00:13:35.666, Speaker A: We've also built Astria guests because the state of crypto is what it is. We run evms that is the environment that has the most broad developer community, the best depths of liquidity in developer talent. So we've built Astra Geth, which is something that works with the rest of the Astria stack. It is fundamentally our first kind of like audited, committed execution environment that integrates with the execution API and the rest of the Astria stack. What about the Ras? Back in December, we had a ras for a moment here. This was what the UI looked like. We provided it for free.
00:13:35.666 - 00:13:57.654, Speaker A: It was on our devnet. We ran a large Kubernetes cluster and we allowed people to enter a name, a roll up id, and launch a roll up on the shared sequencer. Turns out if you give people a button, you don't charge them any money, you don't make them log in or anything you put on Twitter. A lot of people click the button. We got something like 700 or so attempted deployments on this. About 530 of those kind of half deployed, and about 350 of them total worked. We ran out of ips in a lot of places.
00:13:57.654 - 00:14:37.906, Speaker A: And so why do we not still have the ras? And fundamentally that's because we don't think that this one click deployment is all that valuable, because it doesn't allow you to have a differentiated roll up. It says you can easily deploy the same guest node as everyone else. And so that's why we focused a lot more of our developer resources on local development environments like our CLI, that more easily allows you to modify your roll up state machine and test that flow very quickly so that you can go to play it. But I do want to note, we run infrastructure for forma. We're happy to run infrastructure for you, but we're not going to give you a one click interface. We're happy to run the infrastructure, but we don't think this long tail one click interface of undifferentiated roll ups is fundamentally a valuable space to explore. And for the first time here, I'm going to talk about Flame.
00:14:37.906 - 00:15:12.466, Speaker A: What is Flame? Flame is fundamentally harkening back to how Astria started. It started as the Sevmos project when I was at Celeste, and the goal here was to get an EVM rollup running on Celestia as a Celestia native roll up. And that's what Flame is. Flame is our in house roll up that is focused on Celestia native Defi. And what do I mean by Celestia Defi? I mean this is a roll up that runs on Aster Geth. It runs on the Asteria shared sequencer. It writes its data to Celestia and it uses Tia as its native gas asset, and it's primarily focused on doing deFi around Tia as the kind of core asset of that ecosystem.
00:15:12.466 - 00:15:51.050, Speaker A: Again, a lot of people would say, why would we do that? Why would we not use eth? Why would not use ethereum? There's significantly more athens, and fundamentally it's because I think it's worthwhile to commit ourselves to contributing to an early ecosystem and being a first mover and seeing what kind of legs Celestia can have. So what's next? We've built a bunch of stuff here, right? Well, we're actively working towards the testnet. We are going towards our kind of final audit in the next couple of days. And when that comes back, we're hoping we're able to move into a kind of testnet phase with a small number of validators. If you are a validator, please do not come talk to me right now. Picked the testnet validators. We have a very long list of your interests that you have provided, and we have picked the ones we are working with at this moment.
00:15:51.050 - 00:16:19.804, Speaker A: We will reach back out to all of you when we are at a second phase. I appreciate the interest, but we're not taking inbound on that right now. And then we're going to move to a main net, and that's going to be a more appropriate time for all the validators to come and ping me on telegram and we will chat with you then about how we want to pick our main net. Right. But right now we just want to get the testnet. We want to make sure it works and we want to get to market as soon as possible. And then after we get a main net out, we're going to work on a forma migration, because right now forma fundamentally runs on its own Astria cluster.
00:16:19.804 - 00:17:15.330, Speaker A: Fundamentally, it uses the Astria stack as a centralized sequencer, but it does post all of its data to Celestia mainland. If you want to go to the selenium block Explorer and you go under rollups, form is going to be listed there. You can look at all of the blocks of posted census genesis block. But we do want to migrate it to the Astria shared sequencer main. And why do we want to migrate it there? Fundamentally, it's so that we can actually explore a lot of the theoretical topics we've talked about when we discuss shared sequencers. Do we want to have interoperability? Can we have interoperability between the roll ups and in our view, the easiest way to actually explore this thesis is to have these two roll ups that are built through like partnerships with us or in house like Flame that allow us to have forma and flame living on the same shared sequencer network that both have native bridges through the shared sequencer network, and to kind of explore the actual practical design space of providing a better user experience for interoperability between rollups. And then we're also going to start working on Astros.
00:17:15.330 - 00:17:55.654, Speaker A: We've been talking to the rest team for almost two years now. They've gotten to a v 10, right? We have gotten close to a main net and we think now is the time where it's worthwhile when we have enough kind of bandwidth on an engineering side that we're going to start working on integration there. And we're very excited for that because we are primarily a rust based team and really our CLI and geth are kind of the remaining bits of go code in our stack. So we're very excited to start working on like an Astria rest as a replacement for Astria Geth. And then we do intend to migrate both forma and flame over to rest when the time comes. And then the last bit, we're going to start working on validity proof because I'm going to be honest with you, the native bridge that we have in our shared sequencer, it's a multisig or fundamentally it's a threshold signature. We're not going to have fraud proofs.
00:17:55.654 - 00:18:19.240, Speaker A: We're going to work towards validity proofs because we think the zkVms, most notably succinct and risk Zero, are at a point where they're getting production ready. Risc Zero is already on a v one and we're going to start working again as we go to mainnet as we free up bandwidth on engineering to start building validity proofs and try to get both of these rollups running on Mainnet on a shared sequencer with validity proofs. That's my talk.
