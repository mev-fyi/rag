00:00:00.090 - 00:00:14.320, Speaker A: Once we lay the foundation of unified capital, efficient, permissionless, automatic liquidity for a world of millions of chains, then we can start building more building blocks on top of that.
00:00:15.970 - 00:00:58.160, Speaker B: What's up, modular fam? I'm here again with another episode of Celestia Spotlights. I have Jim from Catal list here. Catalyst is building cross chain liquidity for the modular future. And as you guys know, in the modular future, the vision is that we're going to have millions of chains. The thing is, when you have millions of chains, they're going to need some way to bridge assets across from each other so that they can interoperate and users can use all these different apps. And so bridging is a really big part of the modular future. So that's why I'm really excited to have Jim to tell us all about Catalyst and how it's solving that problem.
00:00:58.160 - 00:01:02.880, Speaker B: And so, Jim, thanks for coming on. Tell us a bit about yourself.
00:01:04.850 - 00:01:54.606, Speaker A: Yeah, definitely. Thanks for having me on. Happy to share more about kind of what we're building at Catalyst and kind of give a high level overview of what we're thinking for the future. But, yeah, so it's like what you said, catalyst is basically built for this kind of vision that I think a lot of people have come to consensus around, which is the modular blockchain thesis and what are kind of the implications of having a modularized kind of set of tools and primitives that developers and now individuals can use? And I think one of the implications is very much like a proliferation of chains and essentially the breaking of kind of a lot of the existing infrastructure we use in that new world.
00:01:54.708 - 00:01:54.926, Speaker B: Right.
00:01:54.948 - 00:02:37.454, Speaker A: And so right now we have smart contracts or we have kind of like Defi or NFT protocols that kind of work in a multi chain context of like five chains or six chains or what have you. But what happens when there's like thousands of chains or tens of thousands, hundreds of thousands, millions, right? You can't just keep deploying the same thing and using the same kind of governance contracts or coordination contracts we're using. We kind of need to scale that. Right. And so those are all the questions and the general through line that catalyst thinks about, and I would say broadly, that's our mandate. And right now we're trying to solve what we think is the most pressing issue within that kind of problem statement, which is bridging, like what you're mentioning. Right.
00:02:37.454 - 00:02:50.750, Speaker A: Like very kind of foundational and baseline. It's just like, okay, how do you actually move value between these chains in the world of proliferation of chains. And so that's kind of our mandate.
00:02:50.910 - 00:03:05.400, Speaker B: Got it. So bridging is the first step, but the long term vision for catalyst is to solve all the various problems of coordinating applications across this really vast multichain future.
00:03:07.290 - 00:03:33.778, Speaker A: Yeah, absolutely. And we could talk more about that later in the chat. But, yeah, I think right now, 100% of our focus is on this kind of bridging piece. We see ourselves as our team. We're mainly like cross chain experts, right? We love cross chain, we love interoperability, and we think about all the time, but we're kind of also applying our defi background to kind of solving this really foundational problem right now.
00:03:33.864 - 00:03:42.994, Speaker B: Cool. Well, yeah, why don't we dive into the slides? I think you prepared a presentation, and then we can go from there.
00:03:43.192 - 00:04:46.214, Speaker A: Like what we said, catalyst is cross chain liquidity for the modular future. And so basically what we're going to walk through quickly is kind of, what is the modular future? Kind of what is the problem statement that kind of lines up with that and why we think catalyst is the perfect solution to solve the liquidity piece of that. And so, yeah, the problem, I can kind of breeze through this because we already kind of talked about it in a more truncated sense earlier, but the future will have millions of chains, we think, by modularizing what was previously a monolithic kind of set of functions that a blockchain did into the four different disparate pieces allows for a lot of scalability, ease of deployment, and customization at various levels, especially the execution level. And so when we look at it from an execution sense, we think that every application will essentially have its own chain or have its own roll up.
00:04:46.252 - 00:04:46.406, Speaker B: Right.
00:04:46.428 - 00:05:05.866, Speaker A: It'll have its own execution environment that's tailor made to perfectly do the exact things that this application wants it to do. Right. It's going to have the right gas prices, it's going to have a native gas token, it's going to have optimizations on the opcode level, it's going to have Mev capture, et cetera, et cetera.
00:05:05.898 - 00:05:06.094, Speaker B: Right.
00:05:06.132 - 00:06:08.642, Speaker A: And so don't need to kind of go down that rabbit hole necessarily. But this is something that we think is kind of like a consensus take at this point that we want to customize and optimize these execution layers using the modular blockchain stack. And because of that, since every application have its own chain, and we think there's going to be thousands, hundreds of thousands, millions of chains, therefore, you can kind of come to logical conclusion that there's just going to be a lot of chains. And so that's awesome, right? I think we're all very excited for kind of this future of a proliferation of chains, but unfortunately, there are implications that come from that, that we need to be thinking about. And so in this kind of modular future world, what does that kind of look like? And so the first thing that happens once we have a world of millions of chains is that we lose kind of the connectivity that we used to have when we all had kind of applications on a shared state machine. And so that's not really kind of a good thing. Right.
00:06:08.642 - 00:07:05.902, Speaker A: It was kind of the drawing point of crypto, kind of the ethos of crypto to have the sense of connectivity and to kind of be able to share the states of one another, that was kind of the drawing point of ethereum, at least when it started with its world computer narrative. And so losing that by having kind of a proliferation of chains is not ideal. Kind of related to that is the composability piece, right. With Defi Summer, with the narrative of money legos, we did see the power of what it means to permissionlessly combine different primitives together or have some form of atomicity when you create transactions in the form of flash loans or what have you. And so we also lose that, right. When we move to a multichain context, we're no longer able to have those guarantees, which is kind of defeating the purpose of the magic of crypto as we've seen it. And we also lose existing infrastructure.
00:07:05.902 - 00:08:07.542, Speaker A: And so this is kind of a really important piece that I don't really see a lot of people talking about. But all the things that we enjoy in kind of monolithic blockchain environments do break in kind of this context. And so the wallets that we enjoy, the data indexing block explorer analytics dashboards that we enjoy, aren't able to kind of keep up with the pace of continuous deployments of chains. Right. Same said, with kind of RPC nodes and governance kind of frameworks and oracles. And so this kind of is a bit of a snowballing effect, so to speak, when we have a lot of these different chains and they break kind of the existing structures and standards in place that allow us to actually access the information, interact with the information from these chains. And so that really bodes the question of, okay, we have a world of millions of chains, lots of things are going to break.
00:08:07.542 - 00:08:37.666, Speaker A: We're going to lose a lot of the magic of what crypto is in this future. So how are we actually building for the modular future? And I kind of lay out three really important principles. So the first important principle is automatic, which kind of makes sense, right. As there are more and more chains kind of spinning up, it becomes incredibly trivial to the point of one click, two clicks of deploying an execution environment, you want to actually automatically integrate them as they go live.
00:08:37.768 - 00:08:38.178, Speaker B: Right.
00:08:38.264 - 00:09:28.580, Speaker A: And so right now, that isn't necessarily the case when a new chain goes live, there's a whole kind of process in which these new chains need to be integrated into a lot of existing infrastructure. And in the future, we need to change that. We need to have automatic inclusion of these new chains. And so things that I think are really exciting are modular cloud, of course, right. Formerly known as celestia scan is kind of thinking out this from a data indexing perspective. And then metamask is not quite automatic, but I think as good of a automatic experience that we have right now, in the sense that, okay, if you're following some sort of general specification, you have a chain id, you can kind of just add it to metamask. But we do need something that is a bit more scalable in the future as it pertains to the wallet design space.
00:09:28.580 - 00:10:12.570, Speaker A: We also need it to be permissionless. Right. It kind of doesn't make sense if we have this world of millions of chains, and you kind of need to go through a belabored kind of governance process or have some sort of offline or off chain bd meeting in order to actually deploy products or actually connect these chains together. We need that to be as easy as possible so that it could be kind of an open cross chain economy, so to speak, that can transact with one another. And so things that I think are really cool from a permissionless perspective are jokedao and caldera as well, which is a role as a service project. And then we need to be extensible.
00:10:12.650 - 00:10:12.942, Speaker B: Right.
00:10:12.996 - 00:11:55.646, Speaker A: I think the notion that we live in a, or we can enforce kind of a single standard in which execution environments, or just modular blockchains in general, can operate in is a bit naive, I think kind of the genie's out of the bottle there. And so how are you actually building primitives that are flexible enough to adapt or to easily expand to this heterogeneous environment is super important. And so right now, we have kind of a world of different vms, different consensus mechanisms, signature schemes, et cetera. We kind of need to move to a world in which we have some sense of not quite shared standards, but a way in which, or an adaptable way in which these protocols can go into these different vms and consensus mechanisms, quite trivially. And so our solution, when we think about this design space is how do we take these three principles of what building for the modular future looks like? And actually applying that to what we think is one of the most important problems in the space, which is just connecting chains together and moving value to and from them. And so the first thing that we're doing is automatic chain connections. And so the power of catalyst that I think makes it very different from any other kind of liquidity layer or any kind of bridge out there right now is that as new chains come live, catalyst is built in a way in which the connections to these chains actually come out of the box.
00:11:55.748 - 00:11:56.302, Speaker B: Right.
00:11:56.436 - 00:12:39.520, Speaker A: If you have catalyst and you're a new chain that's being deployed, you can automatically start swapping with any other chain that has catalysts. And I can talk a little bit more about how that's possible. The second thing that we have is permissionlessness. And so we have permissionless cross chain pools. And so kind of similar to how chains are automatically kind of connected through catalyst, we also have the ability to permissionlessly create new pools on any of these chains. And so let's know. You're a new polygon modular chain, and of course, you want to support matic, but you want to facilitate swaps from ethereum as well.
00:12:39.520 - 00:13:52.390, Speaker A: Again, once this polygon modular chain is deployed, it can actually connect to any other chain that catalyst is deployed on. But you still need a pool to be created, right? You need some sort of value to be deposited so that these tokens can start swapping. And so in this case, you can just connect to the catalyst smart contract on ethereum, connect to the eth pool, have your matic pool on the polygon modular chain, and you can start permissionlessly swapping again. This is all straight from out of the gate upon initialization of this polygon modular chain. And then lastly, we have an extensible protocol design. Catalyst essentially is built in a way that is so lightweight and extensible that it kind of spans or it can be deployed into different kind of virtual machines or different kind of other specifications of an execution environment, quite trivially. And again, I can talk more about how that's the case, and that's really powerful, because, again, we're kind of seeing this environment of different virtual machines, different standards, different ways in which data is communicated and propagated.
00:13:52.390 - 00:14:45.506, Speaker A: And catalyst is again, flexible enough to kind of navigate all those things, actually, quite trivially. And so that's something that we're incredibly proud of because, again, we're building for this modular future of a lot of different standards and environments, and we want to make sure that we can capture them all in a very light way and extensible way. And so I talked a lot about how we built catalysts based on those three principles and why we think that's really well fit for the modular future. But I think I should actually say what catalyst does. And so catalyst is essentially an amm. That's the mechanism design that catalyst deploys in order to facilitate these kind of cross chain swaps. And they do so by essentially having assets that live in pools, but on separate chains.
00:14:45.506 - 00:15:39.334, Speaker A: And so in this instance, we have, again, that similar example I use. We have eth on Ethereum, and we also have matic on this polygon modular chain. What catalyst does is essentially allows for the swapping of these tokens by using something that we call the unit of liquidity. And essentially what the unit of liquidity is, is it's a calculation of how much kind of liquidity that's been added into the origin pool. And you kind of calculate that into kind of a shared number or shared standard that every catalyst smart contract understands as a universal form of liquidity. And then upon receipt of that message on the destination chain, they can then withdraw the necessary amount of matic into the user's wallet. And so let's walk through this specific use case.
00:15:39.334 - 00:16:23.222, Speaker A: Let's say a user deposits one eth onto ethereum. You can see here that now the ETh, which is c, in this case, has increased into the pool. What catalyst does is it just calculates how many units of liquidity have been deposited, and they send that as a cross chain message. And so in this case, let's say three units of liquidity have been deposited, and they send it as a message. And so once the catalyst smart contract pool receives that information on the polygon modular chain, they then convert that into how much matic needs to be deposited or withdrawn from the chain, sorry, withdrawn from the pool into the user's wallet. And so, again, that's actually how catalyst works. It's pretty simple.
00:16:23.222 - 00:16:56.402, Speaker A: User deposits assets. Catalyst is basically calculating this mathematical value. It gets passed as a message upon receipt on the destination chain. Again, the pool sends the matic into the user's wallet. And so from the user's perspective, they just sold one eth, and they got the liquidity equivalent amount of matic in their wallets on a different chain. And so that's kind of interesting in a one to one use case, right? Kind of interesting. I think what becomes more interesting is thinking about it from a one to many use case.
00:16:56.402 - 00:17:35.120, Speaker A: And so catalysts can kind of connect to not just a one to one relationship, but a one to many relationship. Right. And so in this instance, let's say the user wants to swap their ETH, but doesn't actually want matic from polygon modular chain. They actually have the option to redeem, essentially their liquidity units from any other chain on the catalyst network, so to speak. And so in this instance, they say, okay, I actually want DyDx on the DyDx app chain, which is in cosmos in this case. And they can absolutely do that and receive di Dx on their DyDx app chain wallet. Sorry, I said DyDx a lot of times.
00:17:35.120 - 00:17:52.610, Speaker A: Yeah. So that is at least at a high level or somewhat of a 202 level, how catalyst works. But hopefully, that kind of explains why we're building what we're building, the values behind what we're building, and a little bit of a sneak peek into kind of how it works from a mechanism design perspective.
00:17:52.950 - 00:18:20.490, Speaker B: Thank you, Jim. That was fantastic. There's a lot to dig into. I have probably just some really super basic questions first for the audience to kind of help understand a little bit better. So that you mentioned, there's these pools on these different chains. Are they all kind of unified into one pool, or are there separate pools between each chain?
00:18:22.850 - 00:18:41.250, Speaker A: So the way that catalyst works is there are assets that live in chains, right? So there would be a pool per asset for each chain, and they're connected to other pools of assets on other chains.
00:18:41.670 - 00:19:15.710, Speaker B: And so each pool is doing accounting about itself, saying, this is how many liquidity units I have in my pool. And as a user, I have a certain number of those units of liquidity belong to me. And then at any moment, I can say, hey, I want to redeem this unit of liquidity on a different chain, to withdraw like an asset somewhere else. So they are kind of like one unified pool, but they're living on different chains, essentially. They speak the same language.
00:19:17.170 - 00:19:27.742, Speaker A: Yeah, exactly. I think there's two helpful ways to frame the unit of liquidity. One is that you use the word accounting. It's very much just an accounting abstraction.
00:19:27.886 - 00:19:28.242, Speaker B: Right.
00:19:28.296 - 00:19:46.834, Speaker A: It's like there is a unified kind of metric that all the catalyst pools use in order to communicate how much liquidity there is. And essentially, we're just kind of moving them around such that in the composite system view, the liquidity reigns equal.
00:19:46.882 - 00:19:47.046, Speaker B: Right.
00:19:47.068 - 00:20:01.334, Speaker A: And that's how we ensure a competitive price and an accurate price between these cross chain pools of different assets. So that's like one good framing and another framing use is, it's basically like a receipt.
00:20:01.382 - 00:20:01.594, Speaker B: Right.
00:20:01.632 - 00:20:06.634, Speaker A: It's like a receipt that you can kind of redeem in any other catalyst pool on the destination chain.
00:20:06.762 - 00:20:36.200, Speaker B: Got it. I know that you guys are still in the process of releasing the white paper, so you can't necessarily share everything, so feel free to just say that you'll answer certain questions later. But when I like. So how is it possible that the chain knows the amount of liquidity it has? Does it have, like an oracle? How does it know the value of those assets to be able to manage the accounting part?
00:20:38.990 - 00:20:43.802, Speaker A: Yeah, that's not something that I can provide too much detail into at the moment.
00:20:43.856 - 00:20:44.460, Speaker B: Okay.
00:20:44.910 - 00:21:29.690, Speaker A: But I will say that it's non oracle. We don't rely on oracles to price these assets. We're also only using native assets. So there's no form of, like, wrap, token, or virtualized liquidity. So you're just using the native assets, but essentially at a high level. Catalyst is a math library that ensures the synchronized accounting of the entire system. And how that's done will be revealed with our white paper in the coming weeks.
00:21:29.760 - 00:22:09.080, Speaker B: That is juicy. I am excited to hear how that works. All right, so one last really basic question. So what are the components of catalysts? Right. So obviously there's the sort of pool contract where I can deposit things, but then is there some other contract that is managing passing messages between the different chains? Is there like a relayer kind of, I guess, responsibility or role in the protocol? Or do you use some kind of existing message passing service that handles that side of it for you?
00:22:10.970 - 00:22:59.270, Speaker A: Yeah. So there's three pieces. The catalyst. So the first piece is kind of what we were just discussing, right. It's like the pools that hold the assets and basically communicate the units of liquidity, or calculate units of liquidity within these pools and then eventually communicate them? The second piece is our cross chain messaging interface. And so we don't have our own relaying network to pass this information. What we do instead is we essentially leverage, or said differently, like piggyback off of existing kind of arbitrary messaging protocols in order to pass this unit of liquidity message.
00:22:59.270 - 00:24:04.934, Speaker A: Right, amongst other metadata that's important, like destination address and some other things. And so we're basically leveraging ambs, which is why kind of where we see ourselves as very much like a pure liquidity play as opposed to competing in the general message passing space. So that's kind of the second piece. And then the third piece is basically, we have security mechanisms, right? And so in addition to the security that we inherit from our arbitrary messaging protocol kind of partners, we also have our own, or like, the protocol has its own kind of opinion on what security should be. And so that's essentially said in two to ways, like rate limits, at least to start, right. As a form of training wheels. And then the second piece is, even with the training wheels off, we have anomaly detector.
00:24:04.934 - 00:24:24.114, Speaker A: And so an intelligent way in which we're able to detect erroneous transactions, essentially, and again, can share more about that in the coming weeks. But we want to have many layers of security because we are operating in a very scrutinized space, to say the least.
00:24:24.152 - 00:25:02.714, Speaker B: Absolutely. And I mean, the theme of last year, I feel, was major bridge hacks. And so it's really smart to be cautious. And, I mean, rate limiting is such a no brainer. I don't know why that hasn't been implemented more often, because obviously you think it's like there's kind of a common pattern among bridge hacks where it's like, oh, all of a sudden all the liquidity is gone, and maybe it's not a good idea to allow someone to just in one transaction, drain everything. So I'm very happy to hear that. Okay, now the basics are covered.
00:25:02.714 - 00:25:38.380, Speaker B: I want to go into some slightly more juicy topics. So the first one I want to talk about is Mev specifically. So last time I had Josh from Astria on, and they're doing shared sequencing, and a big theme there is like cross chain MeV. And so I feel like a lot of that's arbitrage between different liquidity pools, potentially. I mean, there's lots of different forms of it, but it sounds like catalyst would be something where meV, crosschain Mev is going to be a very big part. So how do you guys think about that?
00:25:40.990 - 00:26:49.758, Speaker A: Yeah, I will preface and say that cross chain, or sometimes called cross domain MeV, is definitely like an emergent research topic. And so we spent a lot of time working with a lot of members of just the broader Mev, broader crypto community, just thinking about what does it mean to simulate, measure cross domain MeV, and eventually, with the hopes of mitigating it or harnessing it or what have you, like, some sense of control over the mev generation leakage within a system. Right. So that's kind of like the preface that we're kind of all figuring it out together. Yeah. With that said, I think any kind of defi protocol, especially if you're thinking about swaps, needs to think about meV. And kind of the mev that's being generated in the system.
00:26:49.758 - 00:27:47.540, Speaker A: And I think historically, what we've seen is the way that amms are constructed is that there's a lot of kind of mev being created in the form of toxic order flow or arbitrage, and that's being kind of leaked out and retained by external parties. Right. Whether it be searchers or what have you. And now I think there's a lot of conversation around, okay, that is kind of value that's being extracted from other parties and who's kind of taking the short end of the stick there, and that's lps. Right. And so our perspective, and I think there are a few other next gen projects, so to speak, thinking about this is, okay, how do we actually capture the value of this mev that's being generated and then leaked out to external parties and have it retained within the system.
00:27:47.990 - 00:27:48.402, Speaker B: Right.
00:27:48.456 - 00:28:36.366, Speaker A: And so protorev with the skip and osmosis team is something that comes in mind. And so we're definitely of the camp of kind of that narrative of harnessing Mev that's being generated in the system and kind of redistributing that back into the people that we think are taking on that price discovery risk. Right. Which is lps in this case, but doesn't necessarily need to be the case. I think as it evolves, we have the flexibility to also give it to users that are kind of getting taken advantage of and having MeV taken from them, or we can give it to the protocol broadly. And so we're kind of on the camp of like, I think the word that's being used a lot is like sovereign mev. It's like, let's kind of just take control the mev.
00:28:36.366 - 00:28:42.110, Speaker A: It's being generated and distribute it where we see fit based on kind of the mechanism design that we deploy.
00:28:42.190 - 00:29:35.220, Speaker B: Yeah. It's been kind of a problem that's emerged for Amms generally that lps get wrecked, but they're so vital to the system. So what is their incentive to participate? And I think really the solution is that you have to somehow redirect some of the mev to subsidize them and incentivize them. So that's really cool. And I'm excited to see where things go there. And also, of course, a big fan of skip, and I also kind of reminds me of another project, duality, that's also working on new forms of Amms that try to internalize MeV and distribute it in different ways. It's a very interesting research area, so that's cool.
00:29:35.220 - 00:30:09.120, Speaker B: What is your thought on cross chain ux? Because obviously I think it's going to be a big part of what you guys build is like making it seamless for users. I want to see a future where people using app chains or whatever, all these modular blockchains, don't even know that they're separate chains, really, and it just feels like one kind of unified ecosystem of apps. And I think catalyst is going to be a big part of that. So how do you think of that?
00:30:11.250 - 00:31:12.770, Speaker A: Yeah, so UX is definitely something that we think a lot about. I think there's enough design space alone in just like the user flow of just bridging an asset or swapping a token that we are really excited to kind of push the boundaries on. But then you kind of add in the cross chain elements, and there's just a lot for us to do in kind of the UX department, right. We're kind of bridging between different environments that might have different wallets, that might have different kind of token specifications, different data indexing. And so we spent a lot of time thinking about how do we actually not only abstract that from the user, but also build kind of scalable or extensible kind of architecture underneath the hood in order to allow us to expand to new chain environments. Right. This is kind of what I was alluding to in my presentation.
00:31:12.770 - 00:32:30.246, Speaker A: So all that to be said, when I think about cross chain ux, of course, the general theme that I'm trying to kind of implement against is abstraction, right? It's like, how do you have some form of an overlay such that you're kind of only exposing to users what is necessary and kind of like obfuscating the rest? And right now, let's say we were to integrate two chains that were disparate, right? Like one's like EVM, another one's like a wasm chain. That would be pretty hard. I think it would be a pretty harsh user experience. Said differently for a user, right? Like different tokens, different wallets, et cetera, et cetera. Like a lot of different signing and token approvals, what have you. The blanket answer I have to solving that is like abstracting that using kind of a lot of the emerging narratives that we're seeing right now, which is around account abstraction, which is around using multiparty computation as a form of programmatic transaction construction. But instead of doing that, I think a lot of people are doing that within the context of one chain.
00:32:30.246 - 00:32:43.882, Speaker A: And so once you add different chains to it, it becomes a lot more interesting. But essentially using those primitives in addition to some form of a decentralized key management system in order to abstract that away into one sort of unified wallet.
00:32:43.946 - 00:32:44.174, Speaker B: Right.
00:32:44.212 - 00:32:46.818, Speaker A: And so we're not really in the wallet business.
00:32:46.904 - 00:32:47.154, Speaker B: Right.
00:32:47.192 - 00:33:39.794, Speaker A: We don't necessarily see ourselves in that space, but we're thinking a lot about partnering with wallets and working with wallets on how to abstract away a lot of the cross chain complexities and pain, honestly, and exposing that to the user. And so that's kind of like our idea of it, and maybe like the tie a bow on top of kind of what I'm saying. Essentially, it's essentially smoothing the edges of an existing cross chain experience. But eventually, kind of what we want to do is, of course, what you mentioned. Take away the chain element in itself, and you basically just have an interface in which people express intents of wanting to be on a certain place, or wanting to do a certain action or wanting a certain asset, and then we're able to actually do that. And then you could actually take that. You know what? It's fine.
00:33:39.794 - 00:33:42.194, Speaker A: Maybe we'll pause there, and I have a little bit to add after that.
00:33:42.232 - 00:34:43.960, Speaker B: No, I mean, you literally took the words out of my mouth. I was literally about to say the sort of unification of this Ux, and also the MeV piece is intent based sort of transactions, or I'm not really sure what the latest phrase for this is, but the stuff that's being pioneered by enoma and also now flashbots with suave, where users basically just say, hey, this is the end state that I want. And then other people fulfill that, and they kind of make the state changes that make that happen. And the cool thing is, that also solves it, makes it so that MEV can be captured in more creative ways, and people can bid kind of on that MeV that could be captured through that user's intent. And so it's kind of like this unification of, like, it solves so many problems at once. It's like another really beautiful sort of insight that I'm looking forward to seeing. So I don't know, maybe that's where you were going to go with it.
00:34:46.170 - 00:35:35.762, Speaker A: Yeah, definitely. I think it ties really nicely to kind of the MEV narrative as well, of, like, intense. I didn't even mean intense in that perspective. I agree. It's, like, intense in the formal definition of users expressing their end state and having executors bundled transactions in order to achieve it. And we very much see catalyst playing like a very integral role in that, because the way catalyst is constructed is you can essentially have a sense of cross chain animicity around not only swapping assets cross chain, but actually doing actions post arriving in the destination chain. So it's like buying an NFT or performing, or voting on governance or doing XYZ.
00:35:35.826 - 00:35:36.054, Speaker B: Right.
00:35:36.092 - 00:35:47.530, Speaker A: And so we very much see catalyst as that resource, essentially, for these executors in this future MEV landscape that's developing.
00:35:48.430 - 00:36:30.890, Speaker B: A last thing on ux, cross chain Ux, that's been a pain point in ecosystems like cosmos, where there's lots of bridging happening, is this issue of the proliferation of different asset representations. So depending on how an asset is bridged, or by whom to a new chain, they're not fungible, they're actually something different. And then it's like, oh, well, now I can't make a liquidity pool. Or just like, then it becomes confusing. And so I think that's a really big problem. I am wondering, what is catalyst doing? Do you guys think about that problem? Is there a way to solve it from your perspective?
00:36:32.510 - 00:37:59.782, Speaker A: Yeah, we think about it a lot. I think our perspective is that the notion of wrapping an asset and issuing some form of synthetic representation of it was a v one or like a generation one solution to cross chain, and we're kind of proposing an augmentation to that. And so when you look at a wrapped representation, whether it be an ICS 20 kind of token that's floating around different chains in the cosmo space, or if you're looking at more of an actually bridged asset, like an axle asset with axl or x asset with wormhole, they all kind of run through the same problems that you're alluding to, right? They're different assets. And that's a major pain point that we see in the space of people saying like, oh, I thought I was getting USDC on this chain, and I did get USDC, but it's kind of like someone's iou of a USDC now. I don't know how to swap out of it. And so our solution, and you kind of maybe saw this when I was explaining how catalyst works, is it's just native assets, right? V one bridges was like, okay, we're going to store assets on this one place and then mint more. Mint an iou on another place.
00:37:59.782 - 00:38:12.546, Speaker A: We're just saying, no, let's just leverage the native assets that live on each chain or to do the swaps and if you need the case in which you have to have capital injection into a new bridge.
00:38:12.578 - 00:38:12.738, Speaker B: Right.
00:38:12.764 - 00:38:59.366, Speaker A: Because that's kind of like what token bridges have originally been solving. It's like, how do we inject more capital into kind of like a new environment? You would have something more like a CCTP, right. Where you have like a burn and then some form of an off chain attestation for a mint. And I think when you look at other native bridges, like the Dai bridge that's being developed, that's very much along the lines of where the world's moving towards. And then we looked at noble. That's something that they're doing as well with their form of asset issuance. And so we're working very closely with those people mentioned, but also kind of within that through line of like, okay, how do we emerge out of this world and create that new bridging experience that kind of mitigates the problem that you just described.
00:38:59.478 - 00:39:20.400, Speaker B: Very cool. Yeah. So the solution is that rather than having to even move assets, just keep the assets where they're natively issued and enable people to sort of move the value across the chain and redeem for other native assets. That's super cool. A last question.
00:39:22.290 - 00:39:38.194, Speaker A: Sorry. Maybe in addition, on top of that is maybe there's some economic value that could be like a lot of bridging is to do an intent.
00:39:38.242 - 00:39:38.454, Speaker B: Right.
00:39:38.492 - 00:39:56.518, Speaker A: To kind of tie it back to our previous conversation topic. So if you have some form of bundling, have some form of atomicity around what those intents are to do on a specific chain, you can kind of just eliminate the need for bridging in general. And so we're also approaching it from that angle.
00:39:56.614 - 00:40:00.800, Speaker B: Can you give an example of what that would mean or look like?
00:40:02.370 - 00:40:11.274, Speaker A: Yeah, sure. And so let's take an example of, like, I want to go to a new chain and take advantage of some yield farm.
00:40:11.402 - 00:40:12.990, Speaker B: Right, djen baby?
00:40:14.390 - 00:40:41.100, Speaker A: Of course. Yeah. It's a standard use case. We got to speak everyone's language. So I have one e that I want to deposit into this pool. Right. But knowing that this is such an arduous process and there are kind of a lot of fees that can be taken along the way, and there might be some other pools that I want to take advantage of.
00:40:41.100 - 00:40:46.934, Speaker A: I actually don't just bridge one eth into this new environment. I bridge five eth.
00:40:47.062 - 00:40:47.450, Speaker B: Right.
00:40:47.520 - 00:40:49.510, Speaker A: I'm rolling.
00:40:49.670 - 00:40:50.234, Speaker B: Yeah.
00:40:50.352 - 00:41:29.062, Speaker A: In this use case. Yeah. And so now I just have four ETH or four wrapped ETH or what have you that's just sitting in this new environment, but I'm only using one. And so now I have this weird inventory problem where I'm anticipating more farms, but they're not there yet. But I have money on a place that is higher risk than I would feel comfortable with. Whereas with catalyst I can execute a different intent where I'm saying, hey, I just want to deposit on this farm and take advantage of it. I will swap one ETH's worth of value and acquire one ETH's worth of value on the destination chain.
00:41:29.062 - 00:41:56.702, Speaker A: Right? So it's like essentially before, when you bridge your intent, may have maybe predicting future intents, but we're essentially saying, hey, you don't need to do that projection anymore. Because of the mech design we employ and the economics we deploy, you can just do your original intent and if you have future intents, you can just execute them on an as needed basis.
00:41:56.846 - 00:42:19.290, Speaker B: Wow, super cool. Thank you for that. Last question. On the technical side is related to celestia and the notion of sharing a data availability layer between these different chains. In your view, what's the significance of that and how does it help with all this cross chain bridging?
00:42:20.990 - 00:43:27.360, Speaker A: Yeah, I've written a good amount about bridges at this point, but I think one of the things that I keep coming back to is around what are the trust assumptions that need to be inherited when you move across different zones of sovereignty, I guess is the word that people like to use, or different domains. Right. And so different trust assumptions also means different thresholds of finality or different kind of definitions of soft confirmation. Right. And so if you're moving across data availability layers, you basically have a lot of trust assumptions, right. And basically what that translates to is a pretty high bar for finality because you don't want to pass a message that isn't going to be included into the canonical chain, right. In fact, that would be detrimental for the destination chain because now they're basically just lost money.
00:43:27.360 - 00:44:07.606, Speaker A: You have a high definition for finality, which also means you have a lot of latency, right? And so that's the reason why if anyone tries to swap out a polygon, why you have to wait 20 minutes is because polygon is known for their 100 and 5200 block deep reorg, right? So you have to be absolutely certain. And that's 20 minutes. And you can imagine that 20 minutes is, I don't know, I rarely find anyone in this space that thinks 20 minutes is an okay user experience to wait for a cross train swap. And so when you have a shared data availability layer, you kind of mitigate.
00:44:07.638 - 00:44:08.074, Speaker B: A lot of those.
00:44:08.112 - 00:44:19.790, Speaker A: Right. You have less trust assumptions, which means you have a lower bar for soft confirmation. So if you have the DA proof, you're basically only operating the latency of the celestia block time.
00:44:19.860 - 00:44:20.046, Speaker B: Right.
00:44:20.068 - 00:44:41.362, Speaker A: And so that is a much better user experience. And hence why we like to work with roll ups building with celestia, why we like to are working with the roll kit team in order to enable catalysts to facilitate swaps and have that kind of really streamlined user experience because of kind of that mechanism that I just described.
00:44:41.426 - 00:45:32.070, Speaker B: Yeah. The way that I like to visualize it is that the celestia block time is sort of like the heartbeat of the whole ecosystem of roll ups on top, because that's kind of when they synchronize, that's when the new sort of estates and the transactions for those roll ups get all kind of like finalized, essentially. And so that becomes sort of the heartbeat of the cross chain, I guess interactions between those roll ups too. And sharing that common heartbeat and that common security of the data availability layer is really powerful for interoperability. So, yeah, I could not agree more, speaking my language, and that's a big part of why the modular stack is so transformative.
00:45:33.930 - 00:45:59.966, Speaker A: Yeah, definitely. If I can just add one last thing there. I think maybe like a few weeks ago there was some conversation around how do you build trust minimized bridges across different zones of sovereignty. And I'm of the camp that that is not possible. You're always inheriting. My understanding is maybe that might change. Right.
00:45:59.966 - 00:46:29.082, Speaker A: Strong opinions weekly held, but that you will always be beholden to the honest majority assumption of the origin chain. And that's just the net of going across. Like if you're not sharing anything, you have to have those trust assumptions and you have to have that kind of finality delay, which is where I think the next. Can't share too much, but I think that's where catalyst can play a key piece as well if you have to do that.
00:46:29.216 - 00:47:14.710, Speaker B: Amazing. Well, yeah, it's a really interesting problem space, and I've been thinking about that a lot lately, but I have some thoughts. I haven't been able to formalize them yet, but I want to write like a forum post or a thread at some point about this problem of true trust minimized bridging. But that transitions really well into my next question, which is kind of moving on from the technical piece and more into the vision of catalysts long term. And specifically, I wanted to say, because you mentioned in the beginning, bridging is just sort of the first step. But your long term vision for catalyst is much deeper and broader than that. It's about building for this world of millions of chains.
00:47:14.710 - 00:47:41.920, Speaker B: So what do you think is the next most important problem to solve in the crosschain stack once you've sort of built out this liquidity thing? And maybe it's this governance part that you talked about, the coordination between these zones of sovereignty or, I don't know. Just tell me, what is like the next big thing on your guys mind after solving this first problem?
00:47:44.390 - 00:48:47.086, Speaker A: Yeah, I will say solving this first problem is already like a multi year endeavor because we're kind of starting from what we think is the most foundational, which is we want to have chains connect to each other automatically and we want to be able to facilitate economic activity between these chains permissionlessly. Right. But there's a bunch of different augmentations that we want over time for that, right? We want to make this system more capital efficient. I think it behooves the entire crypto space to be more capital efficient. There's not number go up forever. We have to find a way to ensure security and liquidity is being wisely used. There needs to be kind of more improvements on the kind of like ux side, more improvements on, sorry, Ux as it pertains to latency and finality between different chains.
00:48:47.086 - 00:50:02.350, Speaker A: And so there's a number of things to do, right? I look at my roadmap every day. I'm like, wow, got a long journey. But it's all about just like the drumbeat. I've kind of learned that in my time in product, but afterwards, we are, like I said, interoperability lovers first and foremost. And so once we lay the foundation of unified capital efficient, permissionless, automatic liquidity for a world of millions of chains, then we can start building more building blocks on top of that, right? Like, then we can start building things around. I don't even want to give examples, so to speak, but that's kind of the foundation. But then thinking about, I always like to use the analogy of world trade, right? It's like, what does world trade look like with free flowing movement of value between different nations? And that's things like access to liquidity upfront against collateral, or like trade agreements said differently.
00:50:02.350 - 00:50:23.250, Speaker A: Or it's like the promise of some commodity for another commodity or for another value, right? And so those are like the foundational pieces that I kind of envision. And I think that analogy kind of helps a lot as we look at roll ups and chains.
00:50:23.670 - 00:51:11.220, Speaker B: Yeah, I love the analogy of world trade. And in general, there's a lot of analogies you can draw between sovereign blockchains and then sovereign states. A lot of things translate over, and there's a lot of metaphors that sort of carry over. I really like that. It's exciting to think about the future of blockchains with the framing of world trade. Cool. So I'm curious then, just one other question is, like, where do you see the modular stack itself five years from now? What will change? What is the user experience? What is the developer experience? Where do you see this space going?
00:51:13.510 - 00:51:29.722, Speaker A: Oh, man, I can give a very long answer. Yeah. I can literally go down every piece of the stack and say how I think it's going to unfold, but I'll try to keep it to maybe three hot takes.
00:51:29.776 - 00:51:30.282, Speaker B: Okay.
00:51:30.416 - 00:52:03.294, Speaker A: So to speak. I think on the execution layer, it's going to be almost like, I think when you look at an execution layer, there's a lot of debate on what an execution layer is, but I think everyone agrees that it's at very least a virtual machine. And you can probably argue maybe block space as well. And so that becomes very commoditized and not commoditized, but it becomes very abstracted.
00:52:03.342 - 00:52:03.506, Speaker B: Right.
00:52:03.528 - 00:52:12.162, Speaker A: And so you kind of interacting with it, not too different to how you interact with AWS compute instance.
00:52:12.306 - 00:52:13.000, Speaker B: Right.
00:52:13.770 - 00:52:36.686, Speaker A: And so that's kind of how I see that unfolding. And you see a lot of these rasp projects are kind of going towards that. Right. It's like, okay, you're pricing this saga, prices it based on some notion of usage. Right. So that kind of mirrors the kind of docker kind of business model. And then you can customize a lot of things with it.
00:52:36.686 - 00:52:56.840, Speaker A: Right. And it becomes quite trivial to kind of change those different parameters. It literally just looks like a config. Sorry, that's too long of an answer. But that's kind of how I see that unfolding. It becomes just really trivial and customizable and very easy. Not too much of hot take, but that's how I see it.
00:52:56.840 - 00:53:21.382, Speaker A: I think for the other parts of. Yeah, maybe I take number two for the other parts of the stack. I kind of alluded to this, but there will come a time in which maybe we don't hit like an asymptote, so to speak, of the money in the system in crypto, but it gets very slow.
00:53:21.526 - 00:53:21.846, Speaker B: Right.
00:53:21.888 - 00:53:57.474, Speaker A: The increase of it. And in that sense, it needs to become less zero sum in which we're leveraging this money for things that we need to do which is, I think, right now, like security in the form of Pos and also liquidity. And so that's why I think a lot of people are very excited about restaking, very excited about lsds, because they provide some notion of capital efficiency in order to allow us to use this kind of finite amount of money in the pool to do things that we need to do.
00:53:57.612 - 00:53:57.914, Speaker B: Right.
00:53:57.952 - 00:54:53.254, Speaker A: And so when you look at security, every kind of primitive within the stack needs some notion of security that needs to be reused somehow. And I think you can find really interesting coordination that occurs once you see which layers reusing, which layers security or which layers liquidity for security. Right. And so that's kind of how we see that unfolding. We got to get a lot more efficient in that perspective. My last take is that I think we're going to see maybe, like one more stack emerge. Honestly, I don't know exactly how that's going to slice, but if I had to say, I would say that we're maybe decoupling.
00:54:53.254 - 00:55:19.166, Speaker A: I mean, it depends on how you feel about settlement layer, but you're maybe decoupling settlement into two different pieces. One is like the validation of a transaction from execution layer, and the other one would be the validation of an outside layer, like an outside execution layer interacting with a native one. So said differently, it's basically like a bridge verifier.
00:55:19.278 - 00:55:19.554, Speaker B: Right.
00:55:19.592 - 00:55:38.226, Speaker A: I think a bridge verifying and verifying of a roll up execution layer on top of a settlement layer looks very different, and I feel like that probably needs to be split. Yeah, that's. Those are kind of my unorganized thoughts. I love it on the future of module.
00:55:38.258 - 00:56:01.680, Speaker B: I love it. Yeah. I mean, this is my favorite thing to talk about, as you can probably tell. Well, Jim, it's been awesome to learn about catalyst to have you on. What's your upcoming roadmap? What can people expect from you guys in the coming months or the next year? What are the big milestones you guys are working towards?
00:56:03.830 - 00:56:11.506, Speaker A: Yeah, so let's go in chronological order. So white paper.
00:56:11.608 - 00:56:15.540, Speaker B: Nice. Coming out eagerly in the next few weeks, waiting that.
00:56:16.150 - 00:56:40.298, Speaker A: Yeah, maybe then I can come back on and actually answer your questions instead of deflecting testnet in the summer. So get excited for that. We're a Cosmos project. We're proud to be a Cosmos project. So we'll be launching on Cosmos end of this year, and then we'll come home to Ethereum next year.
00:56:40.384 - 00:56:57.070, Speaker B: Nice. Cool. Well, a lot of stuff in the future for you guys, and so maybe at some point we can have you guys back on for an update? Where can people learn more about what you guys are building and follow your guys progress?
00:56:59.110 - 00:57:17.942, Speaker A: Yeah, I would say if I had to give a pithy answer, just follow us on Twitter. It's catalyst amm. On Twitter, you can know, check out our documentation, you can go to our website, you can sign up for our list for our testnet, but all roads lead back to our twitter. So just follow us there.
00:57:17.996 - 00:57:51.570, Speaker B: Yeah. And I think people should also follow you. I love your insights and you've been writing a lot of great blog posts and stuff on this subject. Well, Jim, thank you so much for coming on. This was really an interesting conversation. Bridging is one of the most important problems, I think, that we need to solve in the modular stack. So I'm stoked that team, as talented as yours, is working on this, and you guys are really taking a new direction and approach to solving this problem.
00:57:51.570 - 00:57:55.880, Speaker B: So it's just very exciting all around. Thank you so much.
00:57:57.450 - 00:58:36.942, Speaker A: Yeah, thanks for having me. I think more and more as the modular kind of blockchain thesis kind of pervades throughout the system. Is that a word? Throughout the system, bridging becomes super important. Right. I had this revelation a couple of weeks ago. I'm like, wow, bridging is incredibly more important than I thought because you need to coordinate all the layers and you need to coordinate different layers with shared layers, and it gets quite complicated. So I'm even more excited than I was a month ago about building and bridging, which is, I didn't even know that was possible.
00:58:37.076 - 00:58:43.150, Speaker B: As am I. As am I. Well, thanks again for coming on, Jim, and we'll be following you guys closely.
00:58:44.530 - 00:58:45.540, Speaker A: Yeah, thanks for having me.
