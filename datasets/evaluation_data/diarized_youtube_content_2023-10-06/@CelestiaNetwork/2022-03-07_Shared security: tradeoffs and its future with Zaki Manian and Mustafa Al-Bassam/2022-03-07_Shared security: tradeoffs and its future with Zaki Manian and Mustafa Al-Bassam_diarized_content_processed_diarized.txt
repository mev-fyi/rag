00:00:07.930 - 00:00:12.720, Speaker A: Zaki, welcome. I think we have our folks here. Zaki, how are you?
00:00:13.170 - 00:00:15.354, Speaker B: Happy to be here, dude.
00:00:15.402 - 00:00:38.006, Speaker A: We're so happy you joined. So, everyone, welcome. I think we can get started. I'm going to lay the stage for the conversation and introduce our speakers. So just bear with me and then I'm going to shut up and let the dialogue just flow. We are all convening at an interesting time. Shared security is one of the hottest topics of the moment right now.
00:00:38.006 - 00:01:14.830, Speaker A: For those unfamiliar at a really high level, shared security is this idea of multiple chains that inherit some security from a common source. There are different methods by which shared security can be delivered. Hence there's just a lot of activity, consequently, buzz at the forefront of this concept. So just a lot of news. Cosmos will be introducing interchange security, which we'll definitely be talking about. And Polkadot, I think we've all seen, has introduced parachains, which shared security of the relay chain. So the world is clearly moving in a direction of shared security, for better or for worse.
00:01:14.830 - 00:02:07.566, Speaker A: And thus at the center of the movement is a growing and intensifying debate. There are proponents that disagree with the idea of shared security, claiming that it introduces security risks and trade offs that outweigh the benefits. And on the other hand, there are staunch supporters of shared security who believe that it is necessary for chains to communicate more securely in a multichain landscape. To help us make sense of it all, we have three of the brightest technical minds in web3 who all have pretty strong opinions on this topic, and hence, we've brought them all together. We have Mustafa, John and Zaki. We'll real quickly go through introductions for those who are joining who don't know these folks. We have Zaki Munyan, co founder of Somalier and iclusion, and someone who has contributed significantly to Cosmos.
00:02:07.566 - 00:02:33.102, Speaker A: We have Mustafa Albasam, previously co founded Chainspace, acquired by Facebook, now Meta, and is now the co founder and CEO of Celestia, which is quickly becoming known as the first modular blockchain network. And then we have John Adler, creator of optimistic roll ups, previously at consensus, and now a co founder of Celestia and Field Labs. Gentlemen, welcome. How are we all doing? Can you guys all hear me? Are your mics good?
00:02:33.236 - 00:02:36.160, Speaker B: I think we kicked John out of the speaker set.
00:02:37.330 - 00:02:39.360, Speaker A: Okay, let's get him back in here real quick.
00:02:39.730 - 00:03:20.490, Speaker B: But, yeah, no, everything's real good. This is a fun topic. I don't think people really realize that this is not a new topic. This has basically been like the central topic of blockchain protocol. Design for since 2015. It just seems that the number of people who are interested in talking about it has suddenly exploded. I feel like in many ways, I think the two things that have changed since 2016 is one is these systems are much less hypothetical than they were in 2016.
00:03:20.490 - 00:03:48.920, Speaker B: So we have real systems, and now we have real users interacting with those real systems. So we're starting to get some imperial, because a lot of these questions about shared security, I think, are just hypotheses around how users and markets will form on top of blockchains. And we're certainly not in an end state yet, but we at least have users and markets that have formed, so we can start to ask questions about that.
00:03:50.090 - 00:04:08.490, Speaker A: Okay, so let's get into it. Zaki, why don't we start off with you? There's a lot of non technical folks here, and I've gotten scores of dms about just the overall or high arching idea of it. Can you quickly introduce the topic of shared security further?
00:04:08.910 - 00:05:19.542, Speaker B: Okay, I'm going to try my extremely non technical vision explanation of shared security and see if it works. And also see if Mustafa murders me for explaining it wrong. We'll see. Okay, so here's my central point of view. The whole question of blockchain security really comes down to this question of who can rug you? Who in the system actually has the ability to rug you for your money to disappear into nothing, for them to steal your funds? And for anyone who's been interacting with the DeFi or NFT ecosystems, you're starting to get a visceral sense of the rug, of what a rug feels like. It's like, oops, my money's gone. Right? And the basic question that shared.
00:05:19.542 - 00:06:29.890, Speaker B: So in any blockchain system, there's a lot of information asymmetries about how and where can you get rugged. There can be a bug in the system, like the software developers couldn't make a mistake in the base layers protocol. The smart contract author can either intentionally backdoor the system or have a vulnerability in the system. The team can use governance tokens or a multi sig to screw over the project. There's a lot of ways in which a project can get rugged. But one of the central question that is at the heart of shared security, especially as we sort of have transitioned into proof of stake, is can the validators rug you? And how many validators have to work together? To rug you is basically the question of shared security. And for the question of shared security is basically in the shared security vision.
00:06:29.890 - 00:07:52.594, Speaker B: And every time people try to build shared security. What they're basically aiming for is a system in which the number of validators that have to collude to rug you on any sort of scalable blockchain system is equivalent to the number of validators you have to collude for a major layer one to fail. And so trying to make a scalable system in which the same groups of people have to collude to rug, or the same validators have to collude to rug you, and the people who are trying to build, who have built non shared security systems that are scalable and interoperable have been willing to say, hey, it would be okay if part of the system fails, because this set of validators, rugged over here, and the whole system as a whole continued marching along. So is it acceptable to live in a world in which the Polygon bridge operators or the polygon validator set can essentially steal all of the funds that are bridged over the Ethereum Polygon bridge? Is that an acceptable world or a completely unacceptable world? And that really is the central question of shared security.
00:07:52.792 - 00:07:59.960, Speaker A: Mustafa, let's kick the ball over to you. Please share your high level thoughts and your general point of view on shared security.
00:08:01.370 - 00:09:13.210, Speaker C: Yeah, I think that's a good overview. I would contextualize it within a kind of multi chain ecosystem. So to get into more of the details of what shared security means in practice, effectively, this is very applicable to systems where there's multiple blockchains that each have their own state machine. So if you look at Ethereum right now, for example, Ethereum, the main chain is like it's just one chain with one state machine that executes everyone's contracts. But recently people have realized you actually have to have a multi chain ecosystem where there's multiple blockchains, because you just can't scale web3 with a single state machine that processes everyone's transactions. So you effectively have to shard execution and to shard execution, or to split execution across different nodes or different chains, you basically need a multi chain ecosystem. Multichain ecosystems come in different forms.
00:09:13.210 - 00:10:03.070, Speaker C: A few years ago, there was kind of, I guess like two main kinds of multi chain ecosystems. There was this Ethereum 2.0 sharding, back when Ethereum had execution shards where each shard was its own chain. And then you had more cosmos style systems where it's similar to sharding, except that there isn't a predefined set of shards. It's more like anyone can create a shard. And in multi chain ecosystems, it's important to have composability or interoperability between those chains. So let's say you have chain a and chain b, and let's say chain a sends funds to chain b or user transfers funds between those two chains.
00:10:03.070 - 00:10:51.470, Speaker C: If one of those chains happens to be insecure or has a validator set that can start to put invalid transactions into their chain, then they can potentially steal user funds that have been transferred into that chain from other chains. And that kind of potentially creates a systemic risk to the ecosystem. So what shared security says is, effectively, if you have, let's say, two chains or three chains, how can we make it so that in order to break one of those chains, you have to break all three chains? So that's effectively, like, on a high level, what I consider shared security to be in its kind of most basic form, I suppose.
00:10:54.370 - 00:11:10.354, Speaker A: Thanks, guys. That concept of the central question is really interesting. Zaki, how do you comment on what Mustafa just said? Do you agree with him? Are there any parts that you disagree build on top of it?
00:11:10.552 - 00:12:26.726, Speaker B: Yeah, no, I very much agree with Mustafa's framing. I have tried that framing myself, and sometimes it seems to work for people and sometimes it doesn't. I would also say that basically, until Celestia came along, I've been following Mustafa's work on this problem. Before Celestia, the company was founded, the idea of a very scalable system of multiple chains with shared security was extremely hard. And one of the sort of things, when I started working on this problem in 2015, there were a lot of people who had basically been like, okay, I want to build a multichain ecosystem which has this property. And this was a central topic of conversations in the early days of ethereum 2.0. Polka dot, polka dot definity.
00:12:26.726 - 00:14:28.820, Speaker B: All of these things, all were enormous amounts of effort were put into, how do I build a system where you have multiple chains, but if you break one, you have to break all three? And really, what was sort of different about cosmos was that Cosmos was really about building a system in which you can break one chain. And the cascading failures are in some ways understandable and limited by the other parts of the architecture of the system, but people will still definitely get hurt. And so then Celestia came along, and Celestia was okay, like, here's a system that is plausibly as scalable as cosmos, but can actually have this property where you can't have sort of state machine failure, where the interoperability layer basically gets broken and sort of cascading economic effects sort of propagate out of it. I mean, we all got to see this very vividly in the wormhole hack that just happened. But again, these are the interesting pieces of trying to describe these things. It was a smart contract flaw and not a failure of the validator set, but you end up with 120,000 forged ETH bridged over by subverting a piece of the bridge system and then cascading economic disruption sort of emerging from that and saved only because a single investor jump was willing to step in and mitigate the loss of funds. Right.
00:14:28.820 - 00:15:04.590, Speaker B: This is the kind of economic disaster that shared security proponents envision happening in a world of interoperable non shared security blockchains, where you have these essentially economic crises that emerge when a single bridge or a single blockchain fails. And the dream of shared security is a very scalable infrastructure in which those kinds of attacks are sort of mitigated.
00:15:06.370 - 00:15:07.854, Speaker A: John, welcome back.
00:15:08.052 - 00:15:10.878, Speaker D: Hi, can you guys hear me?
00:15:11.044 - 00:15:26.900, Speaker A: Yeah, we can. So we were discussing our point of views on shared security and the central question that underpins it, how do you see shared security? What's your point of view and what do you think is the underlying question?
00:15:28.070 - 00:16:38.460, Speaker D: Yeah, so I generally agree with what Mustafa said. To no surprise I did want to point out a few interesting things. One of them is that while it may be true that, for instance, the wormhole hack wasn't the result of a failure in the validator set, if you want to call it that, of Solana, for example, and it's pretty rare to see cases of blockchain to blockchain bridges that are compromised due to validator sets being compromised, as opposed to smart contract bugs. There are many cases of blockchain to centralized exchange bridges, if you want to call them that, being compromised by a compromise in the blockchains, either validator set or miner set, ethereum classic is a pretty big one from the past few years. I think they had maybe three or four very large reorgs. And from the perspective of the bridge, the fact that the other side of the bridge is a centralized exchange instead of another blockchain is essentially irrelevant. It's an implementation detail.
00:16:38.460 - 00:17:03.166, Speaker D: This is like a very clear example that block producers of a blockchain can and will attack a bridge if it's not trust minimized. It happened with ethereum classic and it will happen eventually in proof of stake chains, if it hasn't happened already on some smaller chains, and we should see it only happen in larger chains.
00:17:03.358 - 00:17:20.220, Speaker B: I've been waiting for this to happen for so many years. I'm very excited to see it happen. As far as I know, it hasn't. I have tried to pay people during game stakes and game zones to do these attacks, but to no avail. But I look forward to them happening.
00:17:20.590 - 00:18:33.566, Speaker C: So I think the more likely scenario of this happening more likely than the validator set fading or being acting purposefully malicious. I think the more likely scenario where this might happen is more in a network upgrade that the community is not agreed on. So, like, let's say, for example, there's some popular chain and I don't know, let's say a terrorist group uses the chain. The community might advocate for locking or freezing or potentially reassigning the funds in that chain. And that would require a hard fork because that would potentially violate the state transition function of blood chain effectively. But because the bridge itself doesn't actually verify the state transition function, it will just follow what the validators say. So if the validators choose a hard fork, they will do so even if it's like a potentially controversial network upgrade.
00:18:33.566 - 00:18:53.830, Speaker C: So I think long term or even short term, that is more likely kind of attack or failure scenario, effectively a network upgrade that most of the community might not agree on, but the validators have been compelled to do, let's say, by, I don't know, law enforcement, for example, or other parties.
00:18:59.550 - 00:19:05.980, Speaker A: Zaki, can you please comment on what Mustafa just said? I think what he said was interesting, but curious how you see it.
00:19:08.030 - 00:20:52.030, Speaker B: I definitely think of this as stuff that, like somewhat excited to see starting to play out in the real world. I'm very excited for the world in which a cosmos chain. One of the biggest questions, I think there are a bunch of layers to this question that this makes me think of. One is we still don't really know what a controversial fork looks like on top of a chain that has a significant amount of DeFi on it. Because DeFi has resulted in a world in which there's a lot more infrastructure players, including stablecoin issuers and oracles and all these other places that are sort of big parts of this question of how does a fork happen? How would an invalid state transition be processed? How would it be viewed? How would I get controversial hard fork? We have yet to see a controversial hard fork on top of a chain that has DeFi on top of it. So there's like a certain amount of sort of mega unknowns about this. And I think this is a little bit of why Celestia is such an important contributor in this world, where I also think Cosmos, IBC, the Cosmos interop model, has a lot of virtues.
00:20:52.030 - 00:21:08.980, Speaker B: Which is, it may be that the risk of a controversial hard fork to an ecosystem with DeFi on top of it is so great that it's intolerable to not have further assurance that an invalid state transition won't happen.
00:21:11.830 - 00:21:23.640, Speaker A: We're talking a lot about Celestia real quickly, Mustafa, I'm seeing a lot of chatter on Twitter. Some folks don't know about celestia. Can you quickly introduce Celestia and tell us about it?
00:21:25.450 - 00:22:17.640, Speaker C: So celestia is what is described as a kind of the first module blockchain network. But what the core product is, is a pluggable data availability layer. So you can think of celestia as basically a very simple blockchain or a very simple layer, one that only does the core things that a layer one should do. And those things are, number one, ordering messages, and number two, making the data of those messages available. And if you have those two core primitives, those are the two core primitives required to have shared security across two different chains. As long as those chains are using the same data availability layer, then they can benefit from shared security.
00:22:21.880 - 00:22:34.650, Speaker A: Awesome. Going back to what Zaki said about mega unknowns, Mustafa, John, any comments on this? Do you guys see any mega unknowns as it relates in the context of shared security?
00:22:39.260 - 00:22:41.400, Speaker C: What do we mean by mega unknowns?
00:22:43.500 - 00:22:52.540, Speaker A: That if we play this out from the near term to the long term, any variables that you think could derail the shared security vision?
00:22:55.360 - 00:24:17.720, Speaker C: So I think there's two different narratives for shared security or why shared security is needed, and more generally, why roll ups are needed. Recently, the Ethereum narrative for why roll ups are needed is security or shared security in the sense that you should use roll up, even though a roll up is even roll ups are actually quite expensive on Ethereum because Ethereum data is quite expensive. It's still like a few dollars per transaction if you use a roll up. Depending on what roll up you use, you can still use a roll up because it's more secure, because it's got a trust minimized bridge to Ethereum, as opposed to using some other chain like, I don't know, like Polygon or Avalanche that supports EVM and having $0.01 transactions. So the risk I see there is that in practice, users don't actually care that much about the trust minimization of the bridge. They care mostly about transaction fees, except especially when the transaction fees on different chains are 100 x cheaper, then it's almost a no brainer for users to take that risk of the bridge failing because they're getting 100 x cheaper transaction fees.
00:24:17.720 - 00:25:25.740, Speaker C: I think if we really want to kind of have a shared security ecosystem, the actual narrative we should be pushing is that you should use roll ups because it's easier to deploy new blockchains as roll ups than deploying your own blockchain with its own validator set. And deploying your own blockchain for your own application gives you better benefits than just using a smart contract on the same blockchain as everyone else. For example, in the future, I could see potentially gaming app specific blockchains or app specific roll ups for, let's say some DeFi game or some NFT game might have its own roll up and does all the execution there for that game because the game doesn't need to compose that much with all its smart contracts. I think the usability narrative is more likely to win than a shared security route, given that users mainly care about cheaper transaction fees.
00:25:28.800 - 00:25:30.940, Speaker A: Sorry, go for it, Zaki.
00:25:32.260 - 00:27:08.930, Speaker B: Okay, yeah, so there's a really interesting question here, and the question is, are roll ups a useful tool primarily to users, or are roll ups a useful tool primarily to developers? And I think this represents sort of the interesting question here. And I think we're at currently a very interesting moment in this history and story. When you build the initial sort of generation of roll ups that sort of started to get deployed this year, they were all targeting the EVM as their virtual machine. And sort of implicit in the idea of I'm targeting the EVM is very much I'm targeting users and not developers or users in the broadest sense, like smart contracts and dapps and stuff like that. But I'm certainly not targeting anyone who wants to build a custom blockchain or the Cosmos SDK style of application specific blockchains. And we built the Cosmos SDK with this in mind, where we're like, hey, we think that there is a substantial number of developers who will want to build their own blockchain at some point, and there needs to be a toolkit for them. And so we built a toolkit for them.
00:27:08.930 - 00:28:20.500, Speaker B: But right now there's a question of, okay, I think one of the big questions that we're just starting to see the glimpses of the potential of is like a Cosmos SDK kind of thing for roll ups. And now that Canon has been open sourced, which is optimism, sort of next generation mips based, which is like a sort of general microprocessor targeted environment, you've started to see the first base layer of what could become the Cosmos SDK. For blockchains and arbitrum when Nitro comes out is another alternative, which is webassembly based for building a Cosmos SDK for roll ups and more of. As more stuff in the zero knowledge world gets open sourced, we're going to start seeing the capacity to build a Cosmos SDK for roll ups. And I think that possibility, that evolution to me, seems as significant as when we were developing the Cosmos SDK back in 2018.
00:28:22.220 - 00:28:34.490, Speaker A: Let's talk about Cosmos hub interchange staking model. How does that compare to Celestia's model of shared security? Mustafa Zaki, whoever wants to go first, please?
00:28:40.380 - 00:29:57.776, Speaker C: I think, and I agree on this, but we've discussed this before, but the interchange staking module, I see the interchange staking module and celestial security model having different purposes. So I guess to recap, the Cosmos hub interchange staking module, the way it effectively works right now, or at least the way it works in the v one, is that you can set up a chain where the validators of the Cosmos hub are also the validators of your chain. So effectively, the Cosmos hub validators are also validating other chains. So they're validating multiple chains and they're also executing the transactions in those chains and processing the transactions. So this is quite similar to some extent to the Polkadot shared security model where there's parachains and the relay chain takes an interest in the validity of those parachains. The problem with this model is that it doesn't scale to, let's say, thousands or millions of chains. It scales to an order of magnitude of maybe like 100 chains, which is like polka Dot has to auction off parachain slots.
00:29:57.776 - 00:30:51.956, Speaker C: There's like 100 parachain slots and they have to auction it off because obviously the validators in relay chain can't validate every single chain in the world. Now, with Celestia, our aim is we see a world with millions of blockchains. So we're kind of catering towards the kind of tail end of blockchains. Imagine you can just deploy a blockchain. Maybe you're still a small project, and recruiting the Cosmos hub validator set is too expensive for you, then you can just deploy on Celestia and use Celestia as data verbal layer. The advantage of that is one interesting part of that is if your roll up does not initially have a lot of activity, then it's not as if you have to post blocks on that chain, like every single epoch. So you can just post blocks as long as you need to.
00:30:51.956 - 00:31:58.220, Speaker C: So it's like you pay as you go, data birthing, ordering and something that I echo with. Zaki, what Zachi has said before, I think the interchange staking module is kind of useful as a value accrual mechanism for the token. So let's say the Cosmos hub wanted to kind of acquire or deploy new chains that are in the same vertical as the Cosmos hub. So, for example, in the future, I see a world potential where the Cosmos hub might want to deploy or launch its own settlement layer for roll ups. And using cosmos, for example, a community might decide they don't want to actually integrate cosm wasm to the hub itself. So they might deploy cosm waSm specific hub, and then there's two chains in parallel, but they're interchanged with each other. So it's kind of like a way for the hub to have a suite of chains.
00:32:01.870 - 00:32:04.810, Speaker A: Zaki, same question to you, please.
00:32:04.880 - 00:34:35.770, Speaker B: Well, I agree with everything Mustafa has just said, and I think the biggest way of thinking about it is it's like Cosmo shared security is a sort of expensive solution to the deployer of a chain that hopefully gets them a business benefit, which is like this tight partnership with Atom holders, a solid value accrual mechanism for this tight partnership between this new chain and atom holders. And hopefully this gets is an opportunity to create value and it coexists in an ecosystem where you can start a validator set with three machines on AWS and just go from that. The Cosmos model is permissionless in a rop, and so shared security is this very specific point solution. I think one of the other things that is sort of worth sort of exploring a little bit more is that my expectation over the next few years is there's going to be the celestium SDK or I don't know how we're going to brand this, but there's going to be this roll up SDK that emerges out of the atomic components of the zero knowledge proof work, and the mips work on Canon and the wasm work on arbitram nitro. And there's going to be this emergence of a new developer toolkit. And my expectation is that there is going to be sort of parallel optimization of both the cosmos and cosmos like stack of next generation interoperable blockchains and parallel optimization to the modular architecture change, where both the Celestia base layer becomes much like evolves in a much more scalable direction. But also these sdks for building fraud provable state machines or validity provable state machines start to proliferate.
00:34:35.770 - 00:34:40.400, Speaker B: And I expect these things to happen in parallel for quite some time.
00:34:43.410 - 00:34:54.290, Speaker A: Interesting forecasting, Mustafa. Do you also expect the same as what Zaki is alluding to, or do you see it differently?
00:34:56.390 - 00:36:20.320, Speaker C: Yeah, I mean, this idea of optimistic roll ups that can do fraud proofs on any arbitrary computation is really powerful. And the idea of interactive replication games in general, you can potentially deploy any kind of computer program you like to mips if we're using the Canon example, and you can fraud proof that, and this will take some time to fully mature. But this is very powerful because it means that one thing I want to try and figure out how to do is deploy Cosmos SDK zones, for example, using Canon's MIPS project proofing system. So I've already managed to compile a Cosmos SDK app to mips, but there's still modifications that have to be made to get the oracle working. But the idea is if we can actually deploy a Cosmos SDK zone, which is the go code, and you can fraud proof that, then that's very powerful, because anyone will be able to deploy a Cosmos SDK zone and instantly have a trust minimized bridge with a settlement layer like Sevmos or Ethereum, for example, without having to worry about creating their own validator set.
00:36:23.650 - 00:36:35.380, Speaker A: Thanks. Let's talk about data availability. The question to both of you, why is data availability essential to shared security? Zaki, why don't we start with you?
00:36:36.390 - 00:38:25.026, Speaker B: So the sort of root of the data availability question comes in, which is if you build a system which is only secure. So there are a couple of things in which data availability is designed to solve the problem for you. I typically like to explain this in terms of the optimistic roll up model and the optimistic roll up model and the, and the so and the, and the sort of validium zero knowledge ZK roll up model. But one of the most important things about these systems is who can propose a block and who can verify the state. So in an optimistic roll up model, you need to have both a broad set of people. You need to have as broad a set of people who can verify the state, because you need people to detect if there is invalid state transition and then play the interactive verification game. And then the second in the zero knowledge world, the zero knowledge proof provides proof that every state transition is valid, but you need data availability to enable other people to propose blocks.
00:38:25.026 - 00:38:55.950, Speaker B: Otherwise, you end up in a situation where a single centralized party can censor. So really the core properties of a blockchain, censorship, resistance and auditability are entirely dependent on this actual property, which is data availability. If you want to operate in this sort of hyperscaled million blockchain world. And that's why data availability is like the fundamental problem of blockchains.
00:38:58.050 - 00:38:59.550, Speaker A: Go for it, Mustafa.
00:39:00.150 - 00:40:54.186, Speaker C: Yeah, so, I mean, it's an interesting question, because it sounds very counterintuitive that data availability is like the core primitive that blockchain provides. We've seen tweets from Ava on their team saying that data availability is just some random problem. They don't understand why it's even relevant in the first place. So it's very counterintuitive to understand why. If you've been looking at blockchains in the old model that bitcoin has introduced, where consensus and execution are coupled together effectively, but where you have a model where the consensus nodes don't execute your transaction, then it starts to become clear why data availability is important. Before Celestia was created, or before it was called celestia, it was originally called lazy Ledger. And the reason why it was called lazy Ledger was because I was trying to figure out what is the most minimum viable blockchain you can make, or in other words, what is the least amount of work that a consensus node could do for that chain, and how much, if you look at if you had an extreme, how much computation and work could you actually push to the end user like clients and make it so that the consensus knows now how to do it themselves? And the conclusion I came to you was, if you wanted to take this in extreme, let's say you wanted to build a version of bitcoin with this, you would basically just need a chain where you can dump arbitrary data on it and every single transaction is allowed.
00:40:54.186 - 00:42:19.550, Speaker C: So imagine a version of bitcoin, for example, where invalid transactions are allowed to be posted on chain. Like you can steal people's money on chain. How would that be secure? It will still be secure because you just insert a rule on the user's notes to say we will simply ignore invalid transactions that have been firsted on the chain. And in the case, let's say, like, there's two transactions that are trying to do a double spend, and there's two transactions are trying to spend the same coins, and then obviously you just ignore the second one. But in order to know which one came first, like, if you have two completing transactions in order to know which one came first, not only do you need ordering over the transactions, you also need data availability, because obviously you need to know the complete set of transactions that have ever been posted in order to know which one is the first transaction with a specific property like for example, which is the first transaction that spent this CTXO. So this is kind of intuitively why, if you look at it from first principles, why data availability is kind of a core primitive of blockchains. And this isn't anything new, by the way, even back in 2014, before Ethereum, bitcoin developers were kind of arguing about this and discussing this.
00:42:19.550 - 00:42:42.360, Speaker C: And one developer, there's a mailing list post where Peter Tod argues with Gregory Maxwell about what a blockchain fundamentally is. And Peter Todd was the first person to realize that a blockchain is fundamentally a data availability layer. And he refers to it as a proof of publication system. Effectively, you're proving to people that you publish data.
00:42:44.810 - 00:42:56.650, Speaker A: I want to pull on the rope of data availability more. Zaki, back to you. Any other strong opinions on data availability? Tell us more about how you see its role.
00:42:57.250 - 00:44:11.854, Speaker B: Okay, so two things that are worth mentioning. So one of the things that I think is most sort of, most sort of underappreciated about Nakamoto consensus in proof of work is that it actually has like really strong, it economically incentivizes publishing blocks as long as the concentration of mining power is below the selfish mining is profitable limit. And so one of the things that I think that Satoshi really got at some fundamental level in designing the original bitcoin consensus is that I needed to provide it economic incentives. Because if you basically mine a bunch of blocks but don't publish them widely, the likelihood of people building on top of those blocks is low. And you never get the block rewards for those blocks. Those block rewards are on invalid, are not on the longest work. And so you lose your block reward.
00:44:11.854 - 00:46:08.842, Speaker B: So you create this economic incentive system for miners to push their blocks out to the rest of the mining pool, to other mining pools, and to make their blocks available at the lowest possible latency, to the point where now we have the fiber network and the bitcoin network almost never forks, because there's both infrastructure and economic incentives for miners to make their blocks available super fast and super efficiently. And I think it is one of the things that in pre blockchain BFT research just did not understand this problem, did not understand why it was important to solve it, and failed to produce a solution to these things. And Satoshi sort of somehow intuited that there was this missing idea in sort of open network public consensus, which was like, you must publish your data, otherwise you lose money. Which I think has been sort of like the deeper insight that is frequently lost on sort of classical BFT researchers. So that's one digression into the. I think the other thing that is, is sort of important to understand is that the limit of computation that we experience is that most people who are thinking about computers and stuff like that are used to limitations on their computers. Like how many cores does my computer have? How fast is the cpu? But really, what is our limitation on how many transactions a blockchain can process is the I O bounds like how much memory does it read? How much memory does it write? How much disk does it read, how much disk does it write? This comes down.
00:46:08.842 - 00:47:12.750, Speaker B: You frequently hear about this in the context of ethereum scaling, that even if we made Ethereum consensus super fast, we would still have this limit of I O. And by decoupling data availability from this process where you're publishing and making transactions available, but not actually running the I O that is required to process the transaction, this is the only plausible way in which we can truly achieve the sort of like we are going to produce petabytes of block space. We're only a minority of the node operators for any given state transition, any given blockchain are actually processing those transactions because they care about it, but the underlying transaction data is available to the entire world. That's like how we get, that's like the only plausible path to petabytes of secure block space as a strategy.
00:47:14.050 - 00:47:18.400, Speaker A: Mustafa, can we get your thoughts on the two points that Zaki just made?
00:47:21.350 - 00:48:25.880, Speaker C: Yeah, I generally agree. In general, I think bitcoin got a lot of things right that previous academic research hasn't kind of realized. And in general, I find that traditional distributed assistance researcher often kind of. There's a lot lost on them when they look at blockchains, because it's a completely different model. And they often try to apply traditional distributed systems concepts on blockchains, which most of the time works and is necessary, but sometimes does not work mainly for the main reason. Like traditional distributed systems have a kind of state machine replication model where they assume honest majority assumption for the correctness of the state. So like traditional BFD systems, they just assume like two thirds of the operators or the validators in the BFT consensus are being honest.
00:48:25.880 - 00:48:48.000, Speaker C: But actually the threat model for bitcoin is much more harsh than that. The bitcoin threat model does not assume that the miners are honest because it assumes that users are running full nodes or there should be light clients that support fraud proofs, which is referred to alerts in the original bitcoin white paper.
00:48:51.490 - 00:49:13.960, Speaker A: Let's transition. I received a significant amount of questions around IBC question to you both. What role do you see IBC playing in a multi chain world, and general thoughts about IBC and as it relates to shared security? Zaki, why don't we start with you?
00:49:16.970 - 00:50:05.238, Speaker B: So I think it's important to sort of always like to recognize. Okay, so there is IBC as it exists as a concrete piece of. IBC exists as a concrete piece of software. IBC exists. Sorry, I got distracted. IBC exists as a concrete piece of software which is a tendermint like client, a set of application protocols that live on top of it. And this is this mutually communicating tendermint like client world.
00:50:05.238 - 00:50:58.680, Speaker B: Now, IBC is a framework in which you can build lots of stuff on top of it. And so you could build a version of IBC that has data availability proofs in it and a challenge period, or requires a validity proof. These are the underlying elements. These things can be included into the IBC model. So I think it's going to be, it sort of represents an interesting question as to which direction IBC evolves. Does it stay out of sort of these state machine verification components, or does the technology of rollups start to actually start migrating into the IBC world?
00:51:00.090 - 00:52:11.310, Speaker C: Yeah, so to add to like, we have been looking at adding forward proofs or ZK proofs to IBC before. So where this becomes relevant is, first of all, it's a common misconception that roll ups must post fraud proofs on chain. That's only if you've got an enshrined bridge. Ethereum roll ups weren't that way because ethereum roll ups have an enshrined bridge between the roll up and the Ethereum chain, and they just post it to the Ethereum main chain because they implement a light client for that roll up as a smart contract in solidity. But there's different ways you can do that. Instead of posting the fraud proof to some chain, you can actually just distribute it on the peer to peer network, assuming that the chain you're bridging to has already embedded the light client for your roll up natively as part of its code. And so this is kind of like more in line with how IBC works.
00:52:11.310 - 00:53:09.870, Speaker C: So with IBC, it supports different types of light. There's a cellular machine, for example, or there's a multi Sig or like multi validator type validation like light client, that you could potentially introduce a new type of light client to IBC specifically for your roll up or for a roll up that in addition to checking that your roll up chain has the correct signatures by the correct operators. It also listens out for fraud proofs for your chain, but it listens out for the fraud proofs on the PHP layer. So think of Mina for example. Mina is a blockchain that has a ZK proof for all of its blocks. But where does the ZDK proof get posted? It doesn't get posted to on chain like a roll up, it just gets distributed on the PSP layer. And you can do the exact same thing with fraud proofs.
00:53:09.870 - 00:53:25.160, Speaker C: It's easy with single round fraud proofs, but it gets a bit more complicated with interactive fraud proofs. But it's still theoretically possible, and I know of researchers have schemes for it.
00:53:28.570 - 00:53:47.702, Speaker A: So we're going to transition to audience Q a here very shortly. But before we do, Zaki, just summarize the trade offs and your higher level message for the audience on shared security. Is there anything you want to leave us with before we go into Q A?
00:53:47.856 - 00:55:44.770, Speaker B: Okay, so there's one thing I would say that is a meaningful trade off, which is all of these fraud and validity provable state machines and all of the machinery around verifying them and generating them and performing computations inside of them are all like extremely new, extremely cutting edge, extremely exciting computer science. But on the other hand, we have tendermint which exists and generally the space of blockchain BFT consensus. And so one thing that I think sometimes gets a little bit lost in the conversation is that the non shared security model has the advantage of using fairly mature technology as its underlying interop layer that has been developed over the last seven years, whereas all of this stuff that is enabling shared security is very much so. It's interesting that I sometimes see the perception that shared security is safer now on the current software that's running on than IBC is now. And I think the theoretical limit of safety of shared security is much safer than IBC and the sort of permit like client model. But the actual practical applied security of these systems is in favor of the IBC model today. But it presumably won't be know at some point when these fraud provable state machines are fully mature.
00:55:47.750 - 00:55:56.310, Speaker A: And before Q a Mustafa, please leave us with your sort of final take on shared security and your stance.
00:55:57.690 - 00:57:02.010, Speaker C: Yeah, I don't disagree with that. ICOM to shared security. To me the best use case of shared security is not so much trust minimization bridges or trust minimize bridges, even though that's actually very important to me. It's about the ease of deploying your own blockchain. It's easier to deploy your own blockchain as a roll up, because you don't have to worry about having your own validator set then, as opposed to having to bootstrap a secure and decentralized validator set. And so that's why I'm not opposed to I agree with Zaki that I'm not a trust minimized bridge maximalist. I think people should do whatever is reasonable for their use case, and whatever is the easiest way for them to deploy their own blockchain, as long as that chain has the threshold of security that they require.
00:57:05.550 - 00:57:36.742, Speaker A: Okay, so I think we had a pretty good discussion, and it's time to go into Q A with the audience. We've been roughly going for an hour. Let's field some questions. I've been seeing things on Twitter, so please raise your hands. But I'll start off with one question that we got a decent amount of likes on, and here's the question. Many applications on ethereum, such as maker and compound already trust governance tokens for safety. They might as well use them for consensus too.
00:57:36.742 - 00:57:45.270, Speaker A: Scoping governance token permissions is a similar problem to designing application specific chains. Opinion, what's your guys'take?
00:57:46.270 - 00:58:50.794, Speaker C: I guess there's several things I will take of that. Yeah, I mean, that could potentially make sense for compound. Maybe they have decided they could very well decide that they have a sufficient distribution among their governance token set that it could be a validator network. Although I don't think that's likely, because I think if I remember correctly, 50% of those governance tokens are owned by two or three entities, one of which being is being a 16 v or other entities. I might be getting that mixed up with maker, but that's my free collection. But the point that I'm making here is the token distribution for governance token is not necessarily the ideal token distribution for validator set or staking distribution. That's the first thing I would say that might be appropriate for compound, but it might not necessarily be appropriate for all chains.
00:58:50.794 - 01:00:07.480, Speaker C: And the second thing I would say is not all applications might be in favor of on chain governance. And even if they are in favor of on chain governance, they might not be in favor of on chain governance to arbitrarily change the state machine or code of that smart contract. They might only be for on chain governance for changing specific parameters of that protocol, not necessarily for changing the entire state machine or transition function for that protocol. And the last thing I would say is my vision for blockchains in general is I see blockchains as sovereign communities or more generally social coordination platforms. To me, the most powerful thing about blockchain is if a group of people wanted to organize something and wanted to get together for a common purpose, they could create a dao. For example, on Ethereum, they could choose to create a dao on Ethereum. But creating a dao on Ethereum is kind of like incorporating a company in a specific country.
01:00:07.480 - 01:00:58.790, Speaker C: By creating a dao in Ethereum, you're incorporating an entity in Ethereum. And so you're bound effectively by the social contract of Ethereum. Let's say your dao gets hacked and you have to convince Ethereum to hard fork. Or let's say another case might be like Ethereum might hard fork to introduce EVM opcodes or resource pricing that makes your unfavorable to your dow or application. The future model for blockchains I see is where each application gets its own chain, and each chain is a community of people that have shared interest or shared beliefs. And in that model I see hard forks as a feature. Hard forks are effectively a social recourse mechanism.
01:00:58.790 - 01:01:39.570, Speaker C: The smaller a chain is, or the less applications that chain serves, the more likely the community of that chain is to agree with each other on upgrades and changes. And so you can kind of have like a community chain or use your chain as a social coordination platform to implement decisions made by your community. And you might not want to use physiocracy like whoever owns the most tokens as your governance mechanism. And I think that's one of the things that's the most powerful about this multi chain application specific blockchain paradigm.
01:01:41.510 - 01:01:57.050, Speaker A: Zaki, we'll kick it over to you before you speak, folks, we are fielding questions here, so if anyone does want to ask a question, please do raise your hand. Zaki, go for it. I know Mustafa just dropped a lot for us. Please comment.
01:01:57.550 - 01:03:15.010, Speaker B: I mean, I don't know what to do with it other than how joyous it is when you hear Mustafa or anyone else just recite the cosmos thesis back to you five years later. I think there is this enormous logic towards application specific blockchains and I think that there are always going to be sort of mega application blockchains that are in some senses going to be application specific. They may be centered around a particular set of defi primitives or a particular dow or something like that. There will always be big blockchains in this world. But I really fundamentally believe that enabling this power law, distribution of blockchains where there are small, super secure community settlement engines is the mission of this space. And I think Celestia is. There are a lot of specific software development things, but Celestia is fundamentally an enormous step forward in the very long term vision of cosmos.
01:03:15.010 - 01:03:44.780, Speaker B: And Cosmos is a very long game that has made enormous strides forwards this year. And it is really exciting to see 37 interoperating cosmos chains alive in the world. And I expect that to be in the hundreds or the thousands, and then someday we want to be able to go to the millions. And that is the infrastructure that Celestia is building.
01:03:47.470 - 01:04:07.810, Speaker A: We got a pretty specific question, I think, from Ansem. What is the difference in the security of bridges from l one to l one, l one to l two, l one to side chains versus IBC versus IbC? And how significant are the trade offs there? Mustafa, thoughts?
01:04:11.350 - 01:05:15.750, Speaker C: Yeah, so I have a blog post about this called clusters that categorizes bridges into two types. What I call trust minimized bridges and what I call committee based bridges. The bridge between an l one and a roll up is considered to be a trust minimized bridge. And what that means is that even if the roll up operator misbehaves, the roll up operator cannot steal your funds. On the other hand, a bridge between the l one and a side chain is very similar to a bridge between two Cosmo zones using IBC. It's what I would refer to as a committee based bridge, where you have to kind of put your trust in the committee, which might be the validators of that chain, or operators of a bridge, like wormhole bridge, to effectively attest to the state of that chain, and to make sure that only blocks that have valid transactions are relayed across the chains, and therefore your funds, in order for your funds not to be stolen, you have to kind of trust this committee.
01:05:19.100 - 01:05:20.620, Speaker A: Zaki, you care to comment?
01:05:22.320 - 01:07:04.060, Speaker B: All I would say is I do think that there is a big difference between. There's one thing that matters, which is, is there a plausible way in which there's, like, one sort of subtle difference between various kinds of committee based chains? And one is the question is, do you have to do business development with the committee in order to interact with the blockchain? And if you look at committee based blockchain that are not IBC, like the wormholes of the world, you have to go to a bunch of meetings and convince a bunch of validators to connect to your chain if you want to join the wormhole network, for instance, or any of these enormous number of other committee based bridges. Right now, we live in a world where the ratio of there's an extremely large number of bridge projects, of committee based bridge projects, and a relatively small number of blockchains. So for any given blockchain, someone will probably be willing to bridge you. But that stops making sense as the number of blockchains starts to grow. And IBC is very special in the way that it does not require business development with the committee or the validator set in order for two blockchains that speak IBC to connect with each other. And I think that's one of the more important properties of IBC.
01:07:04.800 - 01:08:01.820, Speaker C: And one thing I would add to that is I'm not inherently against committee based bridging. I think we need both. And actually there's a potential world where roll ups themselves, you might deploy a sovereign native roll up on. Celestia itself has a committee based bridge operated by a bridge provider to other chains. And if you think about it, that's basically what Ethereum is. If you kind of turn your view upside down, in a sense, if you look at the view of Ethereum from Polygon, Ethereum is technically just a wormhole type bridge for all the roll ups on Ethereum. It's a very secure wormhole type bridge because obviously it's secured by the entire Ethereum validator set, but it's still a committee based bridge.
01:08:01.820 - 01:08:34.010, Speaker C: So there's definitely a potential for roll ups themselves also to have committee based bridges as well as trust minimized bridges. Because ultimately we will have an ecosystem where there's multiple chains that use a mixture of committee based bridges and trust minimizer bridges. As I said before, the main interesting thing about roll ups is the ease of deploying your own chain that can be secure in itself without having to kind of bootstrap your own validator set.
01:08:36.480 - 01:09:00.930, Speaker A: Mustafa, to keep you on the mic here, there was a significant amount of inbound on really defining modular. It's a nascent space, there's tons of talk about it. But I know you have some strong opinions here. Can you build on top of sort of your modular thesis? How do you define this budding world?
01:09:04.680 - 01:09:56.980, Speaker C: Well, I guess different people define it differently. I originally used the word module blockchain in a blog post in 2019 to introduce laser ledger to mean the separation of consensus and data. Sorry, separation of consensus and execution in a blockchain. Different projects have used it in different ways, and so that's why I think there's some confusion there. For example, Ava has used it to mean modularizing the software stack itself. In the sense the software stack itself might be modular. Sentiment itself is actually modular from a software perspective because it separates the statement machine and the consensus.
01:09:56.980 - 01:10:26.140, Speaker C: You can plug in your own state machine using ABCI to tendiment. And that's basically how cloud SDK and tenement interact with each other. But in the context of crypto Twitter, modular blockchain generally means separating consensus and execution. And that's effectively how roll ups work, because they do execution off chain. But post data on chain.
01:10:27.760 - 01:10:53.672, Speaker A: I think we have a question here. We'll add this guy as a speaker while he's connecting. We'll actually have. Welcome. Care to ask your question? Okay, looks like he's not.
01:10:53.726 - 01:10:54.810, Speaker C: Can you hear me?
01:10:55.580 - 01:11:31.330, Speaker A: Yes, we can. Thank you. I've been following on and I'm really impressed with everything. I just had a question. So Mustafa said polka dot basically can scale to 100 chains, and he didn't really speak on the power threads that they have where you can pay block by block. So I was wondering if you could just speak on that and to see the difference between celestia and polka dot in that variance, in the sense that even though you have 100 chains with the power threads, you can scale even multiple and further than the 100.
01:11:33.000 - 01:12:31.270, Speaker C: So is this like a new thing they've added to the roadmap where you can pay instead of paying for execution slots on a per chain basis? You can go model? Yeah, so I think that is interesting, but it's still fundamentally different because you're paying for execution, even if you're paying per block. On the polka dot side model, you're paying the radio chain to verify the execution of your chain, or at least at minimum, take an interest in the validity of execution in your chain. In the celestial model, you're only paying the celestial main chain for data availability but not execution. So, like, you're not bottlenecked by execution, effectively because the main chain does not have to execute your stuff, because your chain uses fraud proofs or Zk proofs to prove the execution to other.
01:12:33.160 - 01:13:54.832, Speaker B: So thank you very much. Okay, let me try and explain it in sort of Mustafa's framework, which is Polkadot is a system in which there is a built in bridge and the bridge assumes the validity of the state transition, that the state transition function is honestly executed by all parathreads and parachutes. So because of the way in which the built in bridge works, in Polkadot, the Polkadot relay chain has to take an interest in the validity of the state transition function for any chain in which it is executing the state transition, because it has this other function of being a bridge. And that bridge function requires. So you can sort of flip Polkadot over and think of Polkadot as a committee based bridge in which the committee basically says, okay, for this straight transition that we want to bridge, you are going to spin up a validator set and check some number of blocks. Whether or not that number of blocks is one or more, which is the parachain model. More is the parachain model.
01:13:54.832 - 01:14:10.440, Speaker B: One is the parachain thread in order for our bridge to function. I think sometimes Polkadot almost kind of makes more sense if you think of it primarily as a bridge that has this property as being like a very interesting committee based bridge.
01:14:11.580 - 01:14:33.340, Speaker A: Thanks, Aki. We have another person here who'd like to ask a question. Chad, go for it. Yeah, my question is, do you guys think it's possible to have shared security amongst non instant finality chains, or do you think shared security can only occur amongst instant finality?
01:14:38.520 - 01:14:48.330, Speaker C: I think exactly to answer that better. But I don't see any inherent reason why you can't have shared security against delayed finality chains. You just have to.
01:14:51.280 - 01:16:08.288, Speaker B: Yeah, I mean, you get into these. There is this weird coupling that you start to see in roll up centric ethereum where you're like, okay, I publish my. I publish my zero knowledge proof to a chain, then it's going to take 15 minutes to finalize where the zero knowledge proof chain is sort of waiting for its own state transition function to be finalized. And you get these weird couplings between the bridges that happen in these non instant finality environments. I think that the design space of everything you can do in low latency bridging environments in non instant finality change is not fully explored. I have some ideas that have not actually, I haven't really written about yet, but there is that. The other question is whether or not the roll up itself could be non instant finality.
01:16:08.288 - 01:16:28.600, Speaker B: And I think in the celestial model, it's very easy for you to imagine a roll up that is not instant finality where there are multiple parties that have the authority to extend the chain and there is some fork choice rule. I know that Mustaf and I have talked about this in the past, in previous private conversations.
01:16:31.680 - 01:16:53.330, Speaker A: Thanks for your question, Chad. I'm going to call out some folks here who I think should be asking some questions. Eric, wall, Aliatia, Cody, daddy. Don't be shy. Jump in while you guys do. We did get a specific question around Celestia. How does Celestia empower light clients? Mustafa, please.
01:16:56.180 - 01:18:29.420, Speaker C: So, like, celestia is built from the ground up with light clients in, like, if it wasn't designed for light clients in mind, then we would have released Mainnet maybe a year ago, but it might seem insignificant. But when you actually think about it, light clients is effectively have core to blockchain scalability because scalability is defined so blockchain scalability is defined as equal to the throughput of your chain divided by the cost for end users to validate that chain. And that's the fundamental reason why Ethereum doesn't just want to increase the gas size limit. And the fundamental reason why Solana's strategy is somewhat controversial, because there's very high resource requirements to run a node there, but no one can actually validate the chain using a laptop, for example. How can you actually be sure from your problem, the user perspective, it's not different to a web two database because you can't actually verify the chain. And the most important aspect of web3 or one of the most important is that you don't have to rely on trusted third parties or middlemen for the state validity of your application. So it's very easy to scale a chain.
01:18:29.420 - 01:19:27.220, Speaker C: If you don't care about end user validity, you just fork bitcoin or Ethereum and increase the gas size limit. Job done. But roll ups are kind of a more long term approach because roll ups try to scale chains using Ford and ZK proofs, which allow end users to, which doesn't increase execution requirements of that chain. So in Celestia, what we've done is two components to like clients. We've implemented data availability sampling like clients, which means that like any user could verify the entire data availability of the entire Celestia chain without having to download the entire chain. Instead, they only have to download a very small piece of every block. And with that they can actually get assurances that are almost equivalent to running a validator node or a full node.
01:19:29.560 - 01:19:50.270, Speaker A: We have dieselfi here ready to ask a question. Go for it, man. Hey, thanks for bringing me on. I just wanted to ask Mustafa a little bit about the difference between optimate and Sevmos. Celestian using evmos as the execution layer and also what the final product would look like for someone trying to start their own DaO or chain without bootstrapping a validator set.
01:19:52.320 - 01:21:20.232, Speaker C: Yeah, so Sevmos is like one of the first products that is being built on top of Celestia. And Sevmos, in a nutshell, is basically like a settlement chain for EVM based roll ups. So what does that mean? That basically means instead of deploying your EVM chain on top of Ethereum, you could deploy it on this other settlement layer called sevmos. And the reason why you would do that is because we're designing sevmos from the ground up in such a way that the resources would be priced and the chain would be structured such that roll ups are first class citizens in the sense that we want to discourage people from deploying smart contracts or applications directly on the settlement layer, but pushing them to roll ups which do offshore execution. I think that's really important because Ethereum has this kind of like, first of all, chicken and egg problem, where on the grand scale of things, roll ups, using a roll up on Ethereum does not save you that much fees. It maybe saves you like 75% of the fee if you use optimistic roll up, because call data is still so expensive. But for most people, that's not really compelling reason to use a roll up unless they truly care about shared security when they can just get $0.01
01:21:20.232 - 01:22:40.880, Speaker C: transactions on polygon or avalanche c chain. A significant chunk of users by ethereum are just whales or people that have a lot of eth that don't mind paying $50 transaction fees. So I think there's some value in creating a chain that's optimized solely for roll ups, not just like arbitrarily, but also in terms of resource pricing. One thing that we're looking at is making the cost to write on read state too expensive for people to deploy smart contracts directly on the settlement layer, so that they will be forced to use roll ups strongly, financially incentivize people with these roll ups. And this is kind of something that the guest team is actually trying to avoid, and they're trying to do the opposite of this. If you look at EIP, forgot what it's called, but it was the EIP where supposing call data costs to be reduced. The guest team main concern about this was actually that it favors roll ups too much and that it would make normal applications too expensive that are not using roll ups.
01:22:43.060 - 01:22:59.000, Speaker A: So we'll be concluding shortly here. So if anyone has any final questions, please raise your hand. Zaki, we did get a question for you, somewhat of more on the personal side of things. When and how did Zaki realize that data availability is a fundamental part of the blockchain scalability?
01:23:04.230 - 01:24:40.660, Speaker B: So I think one of the people I remember talking most compellingly about data availability a long time ago is Joseph Poon from the original lightning paper and handshake, and talking about how the data availability incentives work in bitcoin, and why data availability is sort of a little bit of the is sort of the fundamental problem. I think the other thing that is just like when you try to work through committee rotations in a sharded blockchain and you're like, okay, how will this committee rotation fail? You typically run into this problem of, hey, the way the committee rotation will sharded blockchains are all well and good until a committee rotation fails. And then there's like, basically what happens is you get like, one of the shards is not live, and then how do you ever recover? It's kind of an interesting sort of the root problem to trying to figure out how a sharded blockchain can be secure. And all of those things sort of kept landing me back at data availability problems and sort know looking in the world for solutions. And that caused me to pay attention to what Mustafa was working on.
01:24:43.350 - 01:24:45.842, Speaker A: Helpful, actually.
01:24:45.896 - 01:25:26.830, Speaker B: There's another problem that is sort of related to data availability that I have a lot of experience with, which is why is there a 21 day unbonding period on the cosmos? SDK the sort of default cosmos unbonding period comes from this notion of wanting to make sure that there's enough time for data on consensus attacks against the IBC light clients to become available. And if we had some sort of magical data availability solution, of which I've been interested in several different flavors of, you could substantially reduce that unbonding period.
01:25:30.230 - 01:25:47.510, Speaker A: Thank you. Zaki. We are getting this on Twitter. Mustafa, when you mentioned sovereign roll ups or sovereign communities, can you please expand on that and tell us more about your vision as it relates to that term?
01:25:49.290 - 01:27:20.434, Speaker C: Yeah, so the way I see it, and this is kind of echoing something like Ethan Bachmann said, which is that the invention of personal computing allowed individuals to be sovereign. Sorry, individuals to be sovereign. But the invention of blockchains allowed communities to be sovereign in the sense that for the first time, you can actually have a shared community space where you can have a group of shared people, kind of can get together and organize independently of the status quo. In a sense that you can have a community with self agreed rules that are completely voluntary, that are enforced without requiring a third party, like a court system or the police, to enforce those rules. And this only works in a limited kind of setting, specifically with resource allocation in a financial setting. But I think that's very powerful, and in particular because it's very Internet native in the sense that it allows anyone with Internet connection to join a movement or community and decide how resources within that community is allocated. But at the moment, that's just currently done.
01:27:20.434 - 01:28:02.002, Speaker C: Using dows and smart contract. But I think it would be very powerful if you could actually create your own chain. Community could create its own chain that does not necessarily derive its authority from some higher chain in the sense if you deploy Ethereum, dao or roll up, your chain is bound by the social consensus of the Ethereum community. But maybe you want to diverge from the Ethereum community. You don't necessarily agree on the politics of the Ethereum community. You don't really have many options to have your own effectively state machine with.
01:28:02.056 - 01:28:02.850, Speaker B: Rules.
01:28:04.790 - 01:29:02.100, Speaker C: Unless you just create your own chain with a weak validator set, which isn't great. But Celestia actually allows you to create what's called sovereign roll ups so that you can create a roll up that does not settle to any other chain. For example, Ethereum roll ups are effectively baby chains. To Ethereum they derive the authority from the Ethereum main chain. But similarly you have a GitHub fork that's connected to the master git repo. But what if you actually disconnect that link? What if you connect in GitHub? You can disconnect that from the network. And so with a sovereign roll up, you can actually have a roll up that does not necessarily post or have an enshrined bridge to some other master chain that you can have a completely independent chain, independent roll up.
01:29:02.100 - 01:29:16.790, Speaker C: And you can hard fork that roll up at your own will. The community can hard fork its roll up if it decides to without having to ask for permission from the chain as it enshrined Bridgewood.
01:29:22.110 - 01:29:31.040, Speaker A: Okay, so we're at time here. Zaki, we'd like to thank you for just taking the 90 minutes here to be with us. Any parting words for us before we go?
01:29:35.490 - 01:29:57.400, Speaker B: I think roll ups, data availability, the modular blockchain hypothesis is just like one of the most. It's been a very exciting thing. It's kind of time is now. I think that this is kind of the moment where it kind of all starts to come together. And so it was very exciting to be here with you guys.
01:29:58.730 - 01:30:01.560, Speaker A: Thank you. Mustafa. Any parting words for us?
01:30:02.730 - 01:30:27.120, Speaker C: Yeah, likewise. Very exciting times. And if you're interested in learning more about celestia, then go to celestia.org. There's various resources there that you can learn more about. We're also building out a section of the website to allow people to learn about modular boxing in general. That should be hopefully kind of coming this year.
01:30:28.930 - 01:30:36.730, Speaker A: There you have it. If you want to learn more about modular, go to celestia.org, everyone. Thank you so much, Zaki. Thank you, Mustafa. Thank you. We'll see you guys offline.
