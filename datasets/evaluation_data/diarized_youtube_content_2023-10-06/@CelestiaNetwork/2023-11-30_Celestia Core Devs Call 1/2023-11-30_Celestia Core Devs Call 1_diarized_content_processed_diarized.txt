00:00:02.570 - 00:00:31.990, Speaker A: All right, if you can just wait a second to get the confirmation from Alex. Yeah, that's fine. Is Becket on the call? No, I don't see him. I tagged him on oh, it started. We are live. All right, cool. Yeah, so I think we might as well kick it off now that we have two minutes.
00:00:31.990 - 00:01:19.714, Speaker A: So, yeah. Everybody. Welcome to the first Celestial Cordevs Call. I'm going to explain a bit about the call in a second. This will be the one of many we'll see, depending on proposals and stuff, whether this is going to be something that we do biweekly every two weeks or maybe every month, depending on the cadence. And it depends on the amount of submissions and proposals being sent. Now, the purpose of the Celestia core dev call is to coordinate with everyone building on top of Celestia on the core dev client side of things, whether it's on the protocol itself, whether it's on the consensus layer from the data availability layer.
00:01:19.714 - 00:01:48.078, Speaker A: There's a few other things that we'll go over in CIP One, which explain the process so you can see other ways that people can contribute to the process. But before we get started, I would need to do a quick roll call for anyone who's representing any of the teams. On the consensus side, I need to do a roll call. The representative of Celestic Corn App. I believe Evan's on the call. So if you can just say here or present, that would be fine.
00:01:48.244 - 00:01:49.440, Speaker B: Hello. Present.
00:01:50.690 - 00:02:11.542, Speaker A: Awesome. On the data availability side, we have Celeste Node. I believe Renee is here in Glib. But if any of you can just say you're here to represent. And we also have Iger. I believe there's a few folks from Iger. If anyone can just verbally confirm that you guys are here.
00:02:11.542 - 00:02:58.870, Speaker A: Hey, we are there. All right, awesome. And over time, we'll add more people who are building on top of their consensus or the protocol layer as part of the client teams. But now, for now, for the first step, we're going to go over CIP One. I hope some of you might have maybe read it and stuff, but if not, that's fine. I'll go over it. And the purpose here is to explain what the process is, the history of such processes when it comes to standards, creating standards for any kind of open source protocol development process, and the purpose of it specifically for Celestia.
00:02:58.870 - 00:04:16.890, Speaker A: Now, CIP stands for what we call a Celestial Improvement Proposal, which is a design document that provides information to the community, whether you want to describe a new feature that you want to implement or add on Celestia or processes or environment. Now, features can be on the core protocol itself. They can be on things that interact with the core protocol or things maybe that don't really impact the protocol at all. Historically, if you want to look at the history behind these kind of processes, it started off with the IETF, the Internet Engineering Task Force that created sector process which allowed for open source development in a distributed way around the internet and different teams that got inspired and utilized such a process. Over time you have the Pep which is around Python, you have Bitcoin improvement proposals or the VIPs. And then the most famous one that we're all familiar with is the EIP or the Ethereum improvement proposal. So this builds on things that already most of it worked in other processes with a few things tailored specifically to Celestia.
00:04:16.890 - 00:05:32.310, Speaker A: Mostly because within the Celestia development landscape you also have the consensus and the data availability layer. In a CIP, the author is responsible for building consensus within the community and documenting dissenting opinions regarding any kind of proposal. Which means, in other words, the CIP author the champion of their proposal. You can't just create a proposal and expect other people to champion it unless it's been explicitly said that somebody is like they're like we want to champion that proposal. The rationale is that it creates better mechanism for proposing features off chain, which is much more important, allows us to interact more on the social layer versus doing things as some folks are more familiar in the cosmos landscape that are more on chain with voting. So here it's not like that at all. Here it allows you to actually discuss under technical merits specifically with your peers on whether proposals valid to be included to activate new features on Celestia.
00:05:32.310 - 00:07:10.920, Speaker A: Now there's several types of CIPS, right? So the one most people going to be interacting with from the core dev side will be what we call the standard scrap, right? And it has a lot of different examples whether changing something in the network protocol within the block transaction validity rules and it's divided into a lot of subsections. So you have the core component. Core is anything that requires a consensus for that touches the consensus layer and many things that are not necessarily consensus critical, but they are relevant, especially if it's like things that a validator might be operating. Then you have the Data availability track which any kind of improvements that help on the data availability layer which are not necessarily consensus breaking, but they're very relevant for nodes to upgrade after. We also have a networking track for Lit P to P and the peer to peer layer, an interface track, which would be very helpful if you're coming as a roll up and you want to line with other roll. Ups and say with the Celestial Nerd and Iger team who are representing the DA side on what would be like a basic or specification for the API RPC standards that allow you to interface and directly connect and submit blocks to Celestia. Then we have CRCs which are if you're familiar with EIPS, kind of like ERCs which stand for Celestia request for comments for sure.
00:07:10.920 - 00:08:39.758, Speaker A: Here it's things that are not really impact Celestia directly, but they allow you to create different proposals. Like, for example, if you remember, one of the most famous ERCs in Ethereum is ERC 20, which allowed people to create a standard around how do I like token creation, right, for a smart contract. Now, Celestial doesn't have an execution environment, but there are a lot of things that you can build or propose as a standard that would be able to not necessarily impact the protocol, but people can adopt them and stuff if they follow specific kind of standard. At the top of my head, one cool example would be like a standard around how do you format a namespace ID in such a way that it may be recognizable by a lot of roll up that decide to adopt such a standard around? How do you construct a namespace ID? Then we have meta CIPS, which describes multiple processes. So meta CIP, the most famous one you'll be able to see over time is for hard work. So in a meta CIP you'd be able to see a reference to more than one CID, which is why we call it the meta CIP. And that would just be a design document to explain what's going on, what's going to be activated in a future hard work, right? And then you have informational CIPS.
00:08:39.758 - 00:09:59.500, Speaker A: Now informational CIPS, they're suggestions, recommendation, but nobody is required to follow them unless you want to. But they're there for informational CIPS are there to help provide any kind of work streams or overview and stuff. And you'll see an example in a bit. So the workflow around the Celestial improvement, the CIP workflow like you want to shepherd a CIP. Let's say you have an idea proposal. The best place to start would be, especially if you're not talking to other core devs, especially people on this call, the best place to start would be on the you know, you post an idea of like, hey, what about if we add X or Y or improve Z within Celestia on this specific layer? So starting that conversation to see if two important things, if a lot of people align and think this is a net value add. And the second, if this hasn't been proposed before, because if it's been proposed before, you can look at an existing CIP that's been proposed before and you can use that to understand where that CIP has been from a status point of view.
00:09:59.500 - 00:11:27.910, Speaker A: So specifically on core CIPS, what we will mostly be talking about in these calls is the core CIPS, right? Because they impact Celestia the most because they touched on the consensus portion and they'll be scrutinized the most because these are the most highly impactful CIPS in terms of how they impact the network. So these will be mostly scrutinized, right? Now, how do we decide on core CIPS? It could be also applied to other tracks, but specifically for core CIPS, there's a thing called what we call rough consensus. And this has been done since the IETF day. You can read the document here on what rep consensus means. So in like, the TLDR on it is it's not voting. We don't vote, but it mostly allows a general rough consensus, which is the best benchmark or rule of thumb is between 50% to 99%. Consensus or approval, in that sense, is like, let's say there are five of us discussing the technical merit of a proposal.
00:11:27.910 - 00:12:48.338, Speaker A: One person has an issue with one of the CIPS being proposed and says that we shouldn't implement this. So in rough consensus, the way it works is like, you don't ignore just because there's four or five, you ignore the concerns of the fifth person. You actually try to understand why the issues exist, what the fifth person trying to say, right? And you have to address those concerns, because if the concerns have been addressed and the four out of five people still decide that recorded for notetaking and coaching purposes, if the four out of five people address the concern and say, we understand your concern, and from a technical point of view, it doesn't impact the issue the way you're describing it. You still have rough consensus and you can move ahead. And this minimizes like a vocal minority and allows things to move ahead. The only way you can decide, like, hey, if you're the fifth person, you're like, no, but this is still a bad proposal in that dynamic. The way it works is unless they have new information on why this proposal, for example, shouldn't be implemented, given if they only have their same old arguments and stuff, given that's already been addressed, it's fine.
00:12:48.338 - 00:13:42.254, Speaker A: Like, rough consensus is still weak, so it's not 100% alignment. It's, like we said, between 50% to 99%. And I would highly recommend checking out this document to see how rough consensus is practiced. This is how it's done in Ethereum, in IETF, and in Python specifically. And the burden is always on implementers to if you decide that, hey, I think this feature is great, but you would have to get that consensus from the client maintainers and stuff, because at the end of the day, somebody has to build it and stuff. And if there's no alignment, it's hard to get core dev to build a new feature if there's no alignment on that new feature. And then I'll try to wrap it up really quickly because it's still a draft mode.
00:13:42.254 - 00:14:13.100, Speaker A: But basically the CIP process, you have several different stages, right? There's the Idea Draft, which in the Idea stage, you're just having a conversation on the forum. You don't have to even come up with a CIP yet because you're testing out the waters on whether this sector proposal would enhance celestial and if there's any alignment around it. And then you start out with a draft. You create a draft. We have a template here. Give you an example what a CIP draft looks like. You can check it out here.
00:14:13.100 - 00:14:49.622, Speaker A: When you do the draft, you can submit a pull request for the draft to this repository. Now then you have what we call the CIP editors. CIP editor. I'm currently a CIP editor and I'm going to nominate Josh. But anyone can be a CIP editor. It's mostly like the role of the CIP editor is also covered elsewhere. But basically all you're doing is making sure that pull requests submitted to the CIP repo align with, first the template.
00:14:49.622 - 00:15:40.954, Speaker A: And it actually makes technical sense. Now, whether it's controversial or whether the speaker is major, there's no practical way to implement it. The editor cannot decide on that, right? As long as it makes sense enough from a technical point of view and formatted, according to the template guidelines, it's fine to approve it. And the CIP editor is the one who assigns a number for the CIP. And obviously they can also decline a CIP if it's too broad, unfocused, or doesn't address specific things, or doesn't align with selective values and code of conduct. And then after a draft, right, let's say a CIP author can request with a pull request to change the status of a CIP to review. When you mark it for review, other peers can review it.
00:15:40.954 - 00:16:36.422, Speaker A: And then finally well, not finally, before moving it to final, which is like it's been accepted. We have what we call a last call, and the last call typically takes 14 days. It's the last call for the CIP to be in this status before we move it to final. A final represents a final standard that's been added to the CIP process. But it doesn't necessarily mean this CIP has been activated. Activation can happen on this call, and it's informed by the meta CIP if we need a hardware for it or not, using whether it's activated on mainnet. And then there's other statuses, like random ones, like Stagnant, if the CIP has been inactive for six months, withdrawn if the CIP author doesn't want to champion a proposal.
00:16:36.422 - 00:17:05.380, Speaker A: And then we have a special one called Living. So the CIP one, by moving it in this process to Living, it becomes a Living document, which means that if I can update it, I can update it over time. Anyone can update it if they have a full request to how to enhance the CIP process. But normally, nonliving documents, once it's final, is final. You can't modify anymore. Right? But with a Living document, it's fine. You can always update it over time.
00:17:05.380 - 00:18:10.970, Speaker A: You can also look over what belongs in a successful CIP, but I would leave that as an exercise to everyone. But do check it out on your own time. But like the preamble, the abstract, what's the motivation of your CIP? The specs, the actual specification, under rationale backward compatibility test cases, these are all optional. And then security consideration for the CIP and copyright waiver. For copyright waiver, we're using Create a Commons license and then yeah, the preamble discusses the CIP number, title, description, author category, what kind of category it is. I'm not going to go over decent because they just explain it more in depth and stuff, but I assume most folks have already linked to it. There's other sections like how do you link to other CIPS and stuff? You can check those out or if you want to reference an external file or transferring CIP ownership.
00:18:10.970 - 00:19:14.750, Speaker A: The only thing here would be for the CIP editors is I would recommend adding Josh Stein, who's also currently on the Celestia Deborah team and who'd be great as a CIP editor. And if anyone else within this call wants to become a CIP editor, feel free to reach out to me. It's a very straightforward process. I can go over on a separate call if anyone wants to also become a CIP editor, but I would also be adding Josh as a CIP editor, and you can briefly look at the CIP editor responsibilities. There's also CIP too, which talks more in depth about editors. And all of this stuff is mostly like, the history of such a document, heavily derived from Ethereum VIP process, which was derived from Bitcoin VIP, which has been derived from Python's Pep. And yeah, with that said, I'm going to move back to the agenda.
00:19:14.750 - 00:20:15.640, Speaker A: Give me a second. So far, I'm going to let you all if anyone has any questions on the CIP One process so far, or any comments or feedback. Okay, so what I'll be doing next, as a step, I'll make a pull request which adds Josh Stein as a CIP editor alongside me, and I'm going to move the status of the CIP from draft to Last Call. Technically, it should be in review stage, forgot to add it there, but it should be moved to Last Call right now. So I'm going to move this to last call. I'm going to share it later so everyone can review it in Last Call. Last Call will last two weeks.
00:20:15.640 - 00:21:02.120, Speaker A: So within two weeks, we can activate the process officially, and then CIP we want will be a living document that we can use for reference for the CIP process. Okay. If there's no more questions about the CIT one, we can move ahead. Is that okay with everybody? Cool. All right, so for the next steps, there'll be a proposal. I have, before we talk about any of those specific CIPS that have been submitted or ideas for CIPS, the next step will be a proposal for working groups. Right? So currently I would propose there's already been done unofficially, but I would propose a Data Availability working Group, which includes Iger and Celestial Node.
00:21:02.120 - 00:22:29.268, Speaker A: Currently, Iger and Celestial Node work closely because One is building a Golang client, one is building a Rust client for their data availability network, and I would propose making it as a working group. The only difference there is if somebody like an external core dev want to participate in that working group, they would just have to contact somebody who's managing that working group and stuff. So I think for now, if anyone wants to be shared, the working group can do that. And for their DA working group, the way it would work is they would be like a separate working group working on the DA layer. And if the outcome of these working group is CIP being proposed, given that they're the one who manage the CIP side of things for the data availability layer, they're the best one to know what's best to be added to activate new features in the DA group. So with that, I would recommend between Iger and Celestia node proposing somebody who's just like sharing this group and basically recommendation is on your own cadence, having either bi weekly or monthly calls between Iger and Celestia node. You guys don't have to decide on it now.
00:22:29.268 - 00:23:19.872, Speaker A: You can inform me later on this and we can officially add some of that information. If people want to reach out, if they have proposals for the data availability layer, they want to share it with that working group. They'll know how to reach out to somebody there. So I'll leave that as an exercise for Iger and Celeste node among themselves. They can discuss it separately and let us know about who they decide will be facilitating that working group next on the agenda and interface working group. Now this doesn't have to happen right now, but it is a recommendation. So folks like I believe Astria and a few other roll ups like Eclipse do work closely with the node API and this might be an opportunity for an interface working group around the node API.
00:23:19.872 - 00:23:57.330, Speaker A: At the same time, if you're like Pklab or modular cloud and you do a lot of indexing on the Corn app API, maybe there's a few things that you'd like to add or part of a specific standard inspects around the API itself on CoronApp. So for that, I would recommend an interface working group. However, it's up to Y'all to decide on that. So maybe Josh or someone else can decide on that.
00:23:57.700 - 00:24:31.070, Speaker C: Yeah, I'm happy to share like an interface working group. I think it would be useful to have Iger involved in this sense, at least from our side. And I don't know specifically on Eclipse, but we're using the Iger Rust client to actually communicate with the node directly. So we do have layers of stuff on top of that. But the direct interface is there. So it would be useful to have kind of there does need to be some relatively tight coupling between what we call the node entity. So Iger and Celestia node team and the interface, but happy to chair a working group if we want to move forward with that.
00:24:31.680 - 00:25:06.392, Speaker A: That sounds good. Okay. All right, so Josh, sounds like you might want to move forward with that. We can talk about it after the call. Then we can create a way for if anyone wants to contribute to that working group, they'll find available information, most likely on the CIP GitHub repo who to reach out to. I've also been informed that Raman, who's leading the celexi node team, I would nominate him to run the working group for the DA working group as well. Ramen, if you yeah, I'm there.
00:25:06.446 - 00:25:07.690, Speaker D: It sounds good to me.
00:25:08.620 - 00:25:49.124, Speaker A: Awesome. So sounds like we have chairs for both working groups. We can talk about it after the call and best recommendation and how to manage those working groups and how to allow if other external contributors want to participate in those working groups. Okay, now, moving forward so there's two proposals that are actually now CIP draft. The rest are more like a discussion about ideas that people want to propose. But there's no CIP, sir. So for the first call, that's fine because this is the first call we're doing.
00:25:49.124 - 00:26:15.900, Speaker A: I would recommend for future calls to come up, even with a simple draft like a CIP draft or ideas that you want to discuss so that people have something they can reference. But with that said, for the first know, this is the first kickoff call. We're all participating from the beginning. Let's start off with the consensus critical mint fee proposal. I believe this is by Evan.
00:26:17.360 - 00:26:23.090, Speaker B: I think column will be writing it. So, column, feel free to take this if you're on the call. If not, I can.
00:26:26.900 - 00:26:49.690, Speaker E: This is the global min gas price. Yeah, this is something we have like, we're working on at the moment. I estimate a CIP to start reviewing it by next week. Would you mind me to go through the details of this or is this something that we would rather say for in a week's time?
00:26:51.660 - 00:26:52.344, Speaker B: Up to you.
00:26:52.382 - 00:26:52.644, Speaker A: Yaz.
00:26:52.692 - 00:26:54.410, Speaker B: I'm not sure on the structure on this.
00:26:55.820 - 00:27:23.776, Speaker A: It's mostly if you guys want to talk about it among our peers and Cordes. Yeah, for the next, like I think the call would be maybe I'm going to book another call for in two weeks time. Having a CIP draft would be helpful so people can review it more in person, be able to read it and stuff. But yeah, if you guys want to talk about it now before you make the CIP draft, this will be the opportunity to do that.
00:27:23.958 - 00:27:34.790, Speaker E: Yeah, I think it's better once we have an actual document that people can look at so something that can be discussed and the plan for that is to be by next week.
00:27:36.200 - 00:27:43.816, Speaker A: Okay, that sounds good. So, yeah, whenever you guys have one, submit a pull request and we'll take a look from the we can do.
00:27:43.838 - 00:28:37.790, Speaker B: A quick summary for the consensus critical min fee. Or a better term is like a consensus critical gas price, minimum gas price. So this is very similar to EIP 1559, where you have some sort of function that determines a minimum fee or a minimum fee rate that must be paid by each transaction that gets included in a block where that fee actually goes is TBD. So whether it's burned, given to Delegators, et cetera, is not strictly, as far as I understand, part of the CIP. But how you actually calculate that minimum fee rate is definitely something that I think will probably be discussed in this proposal, or it might be in a separate CIP. But that's just like a very quick summary so that people have an idea of what it is.
00:28:38.800 - 00:29:04.100, Speaker A: Amazing. If nobody had thoughts about high level proposal, once there's a forum post about it, people can share more thoughts there and stuff for discussion offline. The second one will be converting ADRs to CIPS for the mechanism behind upgrading for V Two, and the signal link mechanism that will be used afterwards. I believe that's also Evan.
00:29:05.320 - 00:29:53.184, Speaker B: Yeah, this is another one where we don't have CIPS for any of these. We can just go through very quick summaries. This is where we have Celestia got rid of NV One, like the current version that's on main Net. It doesn't actually have the normal upgrade mechanism that you would find in the Cosmos SDK. Instead of having Governance sort of approved like some binary, and then you restart all at one height, instead we actually have a new binary that is backwards compatible with V One and V Two, and then you actually run that. And then once enough validators have signaled that they have upgraded to V Two, then the upgrade process actually happens all in one single binary. So you don't even have to restart at that point.
00:29:53.184 - 00:30:09.000, Speaker B: So that's sort of the CIP for we have a lot of things written about that. We've been working on that for a while, since V One, before even V One was out. So we just need to sort of convert some of that stuff to a CIP.
00:30:11.740 - 00:30:32.160, Speaker A: Amazing. I look forward to that proposal as well. I think it'll be really exciting to see new upgrade mechanism. I think there's a starting CIP for adopting Relayer incentivization middleware. I forgot who posted that. I think it might be Evan.
00:30:33.060 - 00:30:57.690, Speaker F: That was yeah, we'll write is the IP, but basically the middleware is to incentivize delivery of packets with IBC, the full packet lifecycle. But yeah, I guess just write a CIT and have it actually laid out for proper.
00:31:01.420 - 00:31:09.676, Speaker A: Is this for the relayer stuff? Where would that be on the stack? Evan? Would that be on Core or is.
00:31:09.698 - 00:31:20.160, Speaker B: That on yeah, it would be in Core. We would add it to whenever we initialize the IBC module, we would add in some middleware.
00:31:20.580 - 00:31:41.460, Speaker A: Okay, awesome. So, yeah, Susanna, whenever you guys can submit a pull request for the CIP and we'll be happy to review it to include it as a draft so that people can review it after and stuff and we can discuss it more further. Starting a CIP for gas refunds.
00:31:42.680 - 00:32:25.910, Speaker B: Yeah. So I think Ratul will be probably helping to write this and implement it. So Ratul chime in if you have a different understanding of this. But my understanding of this is the Cosmos SDK at the moment, doesn't actually refund gas. So whenever I submit a transaction, I specify a gas limit, and that's the amount of gas that I end up paying no matter what, even if the actual gas used is significantly lower. So what this proposal would do is effectively somewhere along the execution of the transaction is we would refund you effectively only pay for the gas that you used, and that's it.
00:32:27.480 - 00:32:36.710, Speaker A: Great. And then starting a CIP for adopting the packet forward middleware, I'm not sure. Would that evan as well?
00:32:37.480 - 00:33:00.270, Speaker B: Yeah. So I've spoken with the Strangelove team about this, and they've already done a lot of great work around the packet forward of middleware. So if they want to, and if they have time, I'm sure they're very busy, they can champion this CIP. But if not, we will also write the CIP for adopting the.
00:33:02.160 - 00:33:02.712, Speaker A: Evan.
00:33:02.776 - 00:33:17.270, Speaker C: You know, we'd love to help work on that. I think Alex from my team has expressed desire to do this. We've got a couple other CIPS we'd like to work through moving forward. So excited that this is the first one. And thank you guys for soliciting this. Really appreciate it.
00:33:18.680 - 00:33:28.200, Speaker A: Amazing. Awesome. All right. And then starting a CIP for just narc protected accounts.
00:33:28.940 - 00:34:18.424, Speaker B: Yeah. So I think this is the last CIP in the list, I think. So this is something that we're starting. I don't think that this was going to be included on mainnet anytime soon. However, it is a very cool feature, and we sort of want to start getting people thinking about this. So release, like maybe doing what we're supposed to do with CIPS, where we start the process very far earlier from when it actually gets included in a release, a snark account is I don't want to get too far in the weeds, and it probably wouldn't make too much sense to explain it very much here, but effectively you have a normal account. It does everything that a normal account would do, except for instead of being protected, meaning, like, I have to authorize it, someone has to give permission for that transaction to do something.
00:34:18.424 - 00:34:53.764, Speaker B: Usually that's done with a signature. Well, instead of being a signature here, this would be just an arbitrary Snark. And the benefits of this is it's sort of like a very flexible abstraction around Bridging. So most of what a bridge does is it just withdraws and deposits funds. And the whole thing with Celestia is Celestia has to be state minimized. So we don't really want to have smart contracts or arbitrary things that you would otherwise require for a bridge. So.
00:34:53.764 - 00:35:39.250, Speaker B: If you wanted to, you could technically have a ZK roll up that verifies quite a few different things like the fork choice rule and the state. And I'm probably forgetting like, two or three other things. And effectively, that's all done inside of Snark. And if that's all done, then you can withdraw and deposit funds. And some call this settling, but the benefit here is that it's extremely state minimized, so it has the same amount of state as a normal account, which makes it very palatable for the celestial state machine. And I think that's it. I'll keep rambling about it if we keep going.
00:35:39.250 - 00:36:22.880, Speaker B: It's a very cool feature and there's a lot that you can actually do with it. I'm very excited for it, but we kind of want to get that rolled out. The implementation the last thing is the implementation of this is actually on the celestial side, I think actually quite simple. But the harder part, of course, is building a roll up that can actually do this in a safe way and secure funds. So that's why we kind of wanted to start the process. Now, ideally, we'd even have make this so that anyone can spin up their own test network, maybe like a version of Arabica or something that actually has this feature included sometime within the next six months. So then we can actually start building on this feature.
00:36:25.380 - 00:37:31.044, Speaker A: Amazing. Well, this sounds really exciting. I think Marco had a few comments in the chat about yeah, I mean, for now, I think we'll get started once we have some CIPS in the pipeline. All right, moving on. Okay, so normally in these calls, I don't necessarily want to cover informational CIPS like other informational CIPS, but just given it was the first call, I'll allow it. For this one, I believe there's a champion for the CIP Five, which is to rename data availability to data publishing. I don't know if the author proposals on the call are you on the call? I think his username is Hugh, but yeah, I'm not sure if he's available on the call.
00:37:31.044 - 00:38:19.920, Speaker A: If you are, just raise your hand or just unmute yourself if not, because I believe he should have had the zoom information. Now, when it comes to informational CIPS, like the one about moving the terminology from data availability to data publishing, it's only informational. It's not necessarily required for anyone to align with an informational CIP. Right, yeah. For the future, we don't need necessarily have to cover informational CIPS within this call for everyone's time. The next one is CIP Four to standardize data expiry time for Pruned node. Now, normally this will be happening within the Data Availability Working Group because it's related to data variability.
00:38:19.920 - 00:38:29.130, Speaker A: But Mustafa, if you like, you want to give a brief overview of it just for everyone here, even though this will be more covered in the working group.
00:38:29.820 - 00:39:31.020, Speaker D: Yeah, it also makes sense just to cover it here briefly because it kind of has potential applications on the core data, the core network as well. But the general idea here is that right now, celestial node does not Prune historical blocks and the tendermint nodes in the contest network have a Pruning flag for minimum retained blocks. But there's no kind of like recommendation about what it should be. Now, as people know, the purpose of Data Availability layers is not to guarantee the permanent storage of historical data, but to make sure that data was published to the Internet so that anyone that wants to download it can download it. And I guess that's kind of like why people are proposing to rename data availability to data publications so it's more clear. But as part of that, we want to kind of set an expectation for how long that data will be downloadable. And that's what the CIP proposes.
00:39:31.020 - 00:40:46.100, Speaker D: It proposes that if you're running a Pruned node, then you should store at least 30 days worth of blocks and also distribute to the network, to anyone that asked for it, 30 days worth of historical blocks. So then the social expectation would be that if you post data to Celestia, then the network kind of guarantees that will at least be downloadable for 30 days. And after that you can only download it from archival modes, basically. And the rationale for 30 days is because it's longer than the 21 days unbonding period for tenement or the weak subjectivity period for tenement, and the data availability something that nodes need to at least sample data within the week subjectivity period to independently verify the data availability of the chain. So that's why it needs to be at least 21 days. So 30 days provides a sort of buffer for that and 30 days is a reasonable amount of time for anyone that wants to download the data to download it. And also, EIP, I think 30 days is also proposed in the IP for it for four.
00:40:46.100 - 00:40:50.630, Speaker D: So it's kind of like an industry standard. But I also need to double check if that's still the case.
00:40:53.720 - 00:41:44.620, Speaker A: Sounds good. This will be more championed and discussed more in the Data Availability Working Group. But thank you for this overview. The last item here is I'll be submitting a CIP at some point just to capture what are the current on chain governance parameters in a living document. Now, this is already part of the you can find it on the Celestia CoronApp specification, but capturing it within a CIP, like what are the on chain governance parameters that are active and what are those parameters? Like what are the key value pairs in a CIP? That's a living document. Living document because it can't be finalized, because things can be modified on chain after. So that's why I would recommend doing it as a living document.
00:41:44.620 - 00:42:41.610, Speaker A: I'll be proposing that hopefully by two weeks time. Now finally I also been made aware, I think also for the interface working group. Glib wants to also help co chair, and I think that's a great idea because you have Josh Bowen representing from the roll up side and Glib from both Cornap and Celeste Node on the API interface side. So that way it can align both folks who are the users and the people who are building the API to come up with a standard. So I'll talk to you all both after to figure it out together and what are the next steps. With that said, I actually extended this call for 90 minutes, but I think because we don't have the CIP drafts ready yet, we kind of sped through it, which is fine. I think we're at the end of the call.
00:42:41.610 - 00:43:42.030, Speaker A: So the action item so far is like, I'll reach out for the DA working groups and the Interface Working groups directly. I'll move CIP one to last call, and people will see the status move to last call, and then that gives you all two week period to review it before it becomes active. And that would include Joss Stein and one of the CIP editors. With that said, any final thoughts? Any questions so far for the next call? I'm going to schedule it two weeks from now, and that would probably be the last call for December because the holidays are coming up. And then we'll continue the core death calls starting in January after that. So I'll send more information about the next call coming up and we'll create an agenda. This call is recorded so people can review the video after the call, and, yeah, we can take it from there.
00:43:42.030 - 00:44:17.608, Speaker A: Any final thoughts? Any final comments? All right, I don't think there's anything let me double check on the chat. Somebody chatted. Okay, cool. With that said, thank you all for attending. I know it's taking time out of everyone's busy day. Very excited about this, especially about coordinating with a lot of people who want to build on top of Celestia or building Celestia itself. I'm really excited to see so many people ending, and this is like the start of something really cool.
00:44:17.608 - 00:44:20.570, Speaker A: So, yeah, I'll see you all in two weeks.
00:44:21.420 - 00:44:22.890, Speaker C: Thanks, everyone. Thank you.
00:44:23.260 - 00:44:26.900, Speaker A: Cheers. Cheers. Cheers. Cheers. Cheers. Cheers.
