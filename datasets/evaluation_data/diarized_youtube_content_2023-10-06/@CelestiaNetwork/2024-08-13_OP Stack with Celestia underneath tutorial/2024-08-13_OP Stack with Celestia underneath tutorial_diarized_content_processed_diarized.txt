00:00:00.240 - 00:00:34.140, Speaker A: Welcome. In this tutorial we'll be going over how to run an op stack roll up with Celestia. Underneath, we'll be going through two different versions. The first version will be running a devnet that posts to Celestia's Mocha testnet, and then we'll run a testnet that posts to Celestia's Mocha testnet. But instead of using a mock l, one uses sepolia testnet for ethereum. So this is going to be using something called rollup. We're going to be using a fork of the original by ox fable.org
00:00:34.140 - 00:01:13.120, Speaker A: on the celestial.org repo. And we're going to be also using op Plasma Celestia, which is one of the alt da integrations for Opstack and the first alt da integration for Opstack. And we'll be going through the testing section using roll up for a devnet and then for a test node. So what this looks like in practice, we're going to need some dependencies here. In order to get started. We'll be using Celestia node as one of the dependencies.
00:01:13.120 - 00:01:45.770, Speaker A: In this case, our light node must be fully synced and funded. I've already done that. And what this allows us to do is submit and retrieve pay for blobs to and from mocha testnet. And this helps you post and retrieve data without any errors. So by default the integration is going to use the node store that's in this default directory. That's what we will also be using through that throughout the tutorial. And it's going to be running with an account named Myselesskey.
00:01:45.770 - 00:02:40.134, Speaker A: So the first thing we need to do in order to run this is check out the readme. We're going to be using Python in a virtual environment and we are on Mac Os. So we're going to go ahead and do that, I guess. First I'll go to the readme. And if you're watching this video, I'd recommend pausing and read through all of the overview section yourself. And once you get back, we're going to be starting in the testing section. In this case, I've already cloned rollup and what I'm going to do is head back over to the docs and we're going to set up a virtual environment here and we're going to be using this to build and run a roll up.
00:02:40.134 - 00:03:28.714, Speaker A: So the first thing I can do is back to this readme and we're going to run rollup setup and say yes. So we're installing foundry, it's going to try and run. The thing is, I've already built this, so if you have not done this before, it's going to take about five minutes or so to build. I did this on an m one Mac with about 16 gigs of Ramdhenna. And I guess depending on what you're using, it might take a little bit longer, a little bit less time, but this is actually going to speed this up. So the first thing we're going to do is run a Devnet. And this is going to start Devnet using a mach l one.
00:03:28.714 - 00:04:01.796, Speaker A: For the evM, it's going to run an l two. That is your roll up. And it will be running in alt Da mode. With Celestia node in testnet mode, we're going to go ahead and run that command and overwrite any existing data that we have. The first thing we can see starting up is an l one at port 8545. And that's going to act as our in place of ethereum, in this case, l one ethereum. We can also see some logs here showing what is being deployed.
00:04:01.796 - 00:04:43.220, Speaker A: As it happens. Once we see the celestial light node up, we can check our account address, and then we can also take a look at that in the browser over here. We're going to be using selenium. We need to switch to, and we're not going to see anything yet until all of this is running, which it is. Now, if we go over here and hit refresh, we're not going to see anything yet, but what we can do is go back to the readme and we're going to look at the logs from our roll up. And these logs are going to show the blobs that are being submitted to Celestia. So actually, we can go all the way to the top here.
00:04:43.220 - 00:05:14.800, Speaker A: We can see that it's using the local node or da. This is posting to Mocha testnet. We can see the first blob was successfully submitted here and then requested to make sure we can actually send and post and get the blobs. We can see that those are actively being posted. The l two is all running here. So if we go over to selenium, we can see that we have quite a bit of new activity on this account. These are all for this new roll up.
00:05:14.800 - 00:05:52.972, Speaker A: And now we have a devnet running. So congratulations if you just did that yourself, you now have a devnet running that is posting to Celestia. So you have op stack running with Celestia underneath. Now, if you want to make this something turn a little bit more real. Now we can run it in semi production environment on a testnet. So what we're going to do is close both of these processes that are running and check out the deploying to a testnet. Deploying a testnet to an l one typo, I'll fix that and Mocha.
00:05:52.972 - 00:06:15.802, Speaker A: And the way that we're going to do this is go back to the readme again. It's going to have some notes for us on how to run that. It's telling us to check out the config example. So I will go ahead and open that up. Whoops. And actually open that up this time. And when we look in this example file, we can see this is the chain ID for the devnet that we just ran.
00:06:15.802 - 00:06:57.840, Speaker A: This is the L1 RPC for the local evM that we had, as well as the chain id. We can see that it's using the junk anvil accounts for everything. So if we were doing this to something like Gurley or Sepolia Rip girly, we would want to have a little bit of our own information in there. In this case, we're going to need a private key with about ten ish ETH in it. And this will be our account that we're using to deploy to Sepolia. As you can see, there's been no transactions recently, so nothing's running yet. This will also be posting with the same account on Celestia.
00:06:57.840 - 00:07:39.622, Speaker A: And I tried earlier to see if using a paid RPC helps, but I still ran into an issue using alchemy. I was on their free tier, but I think the best way to do this on Sepolia is to use deploy slowly and set that equal to true. This is going to help you avoid any issues with RPC, like nonce issues, or even just issues with trying to submit transactions too quickly and going to the next step before it's actually confirmed. Enough rambling about that. Let's go ahead and. Let's go ahead and start the testnet. So I'm going to open up a config file and this config file has some information already.
00:07:39.622 - 00:08:09.656, Speaker A: I'm going to go ahead and get rid of that and put in some new stuff. So the chain ID for the roll up we're going to be using is 1117-7557 just random string here. And we're going to be using Sapolia Ethereum as RL1. So we're actually deploying this live to polio here. We're going to set deploy slowly to true as I said to avoid issues with the public RPC. And then we're going to set our keys. This is a real account.
00:08:09.656 - 00:08:52.074, Speaker A: It does have sepolia Ethan array. Now, if you're watching this after the fact and you found it, congratulations. But this is going to be the account that is deploying all of our contracts for the roll up. So this is basically the account that controls our l two. Next thing we're going to do is head back to the readme and we can run a very similar command where we're going to change this to 57. We're going to point to the file that we're running, the config that we're running with. We don't need that py and we're going to be asked some of the same questions, except we need to do this in the virtual environment.
00:08:52.074 - 00:09:17.952, Speaker A: So, reminder, again, if you're doing this, following along, you need to be in a python virtual environment on Mac. So now we're ready to start this roll up. We're going to overwrite any existing versions of things that already are there. And we have a light node started. If we really want, we can check that account address to just to see that it's running. We can also check the sampling sets to see where it's at in syncing. It looks like this is very close to caught up.
00:09:17.952 - 00:09:49.336, Speaker A: If I check it again, it's probably going to be almost cut up anyways. Our RPC server's good to go in terms of the l one and now what's happening is we're deploying our contracts. I refresh this. It looks like it's still compiling, waiting on things to be included. This is a reminder, we're using slow deployment mode, so this will take some time. I think the full deployment takes around 30 minutes. Once we have a few contracts deployed here, I'll probably let you pause this on your own.
00:09:49.336 - 00:10:07.944, Speaker A: It looks like we're deploying a lot of things that's going on here. Okay, cool. Awesome. Those are good logs. It just wasn't skipping to the bottom. So this should take about, I would say 20 to 25 minutes, depending on the network. And once this is done, it's going to tell us that all l two components are running.
00:10:07.944 - 00:10:44.632, Speaker A: I guess the most useful thing to watch this would be to watch the logs. And in this case we're going to change this to a seven. But we can see our logs. We have the plasma da server running. So this is using celestial store as Da and we're still deploying those contracts. I think now if we head back over to Etherscan. We're going to see the first few contracts being deployed, and in the meantime, you can pause this video, come back when we have alt l two components running, and we'll be able to see some data being posted onto Celestia.
00:10:44.632 - 00:11:31.010, Speaker A: For now, that's not going to run until the actual roll up itself is running a few minutes later. And we have only been about two minutes and a handful more transactions that have been confirmed, and we're checking back in again. It's a little bit still rolling steady. While we're waiting on this to finish deploying, I definitely encourage you to check out the optimism docs where they talk about how to run an alt DA mode chain. You can also see different DA's you can use and different ways to configure your op node in batcher as well as feed configuration. So now that we are talking about it, the l two node is starting. It looks like those contracts to the l one are pretty much all good to go.
00:11:31.010 - 00:11:55.316, Speaker A: And we have all l two components running. Awesome. So now your roll up is running. Soon we'll see some activity here for Celestia. You can see it didn't take as much eth as I thought it would, but you do need that in there to avoid errors. We still don't have anything being posted to Celestia. I think this is because we're running in slow mode and things are still being set up, but shortly we'll see that change.
00:11:55.316 - 00:12:28.930, Speaker A: Yeah. If you have any questions, please do reach out in the discord if you find any bugs or want to make a PR. That is always welcome on both rop and op plasma. Celestia, thank you for going through how to run an op stack roll up with Celestia underneath, and I look forward to seeing you in a future tutorial. Oh, look at that. Awesome. Okay, so now that we have all l two components running, all of the setup has been finished and we can see that blobs are successfully being submitted.
00:12:28.930 - 00:13:05.890, Speaker A: If we refresh selenium here, we'll see these blobs that were submitted just recently, and we will continue to see the same thing as it posts to Celestia underneath. So that's all. I encourage you to reach out with questions in the discord and telegram, and if you run into issues, please make a PR. I'd also encourage you to check out optimism's docs on how to configure your RP node, how to configure your batcher, and generally about how to run a chain in alt da mode. Thank you very much for watching this video, and I look forward to seeing you in the next one. Thanks.
