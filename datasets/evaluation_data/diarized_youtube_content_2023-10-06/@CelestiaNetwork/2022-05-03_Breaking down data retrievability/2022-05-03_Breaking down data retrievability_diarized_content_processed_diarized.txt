00:00:04.650 - 00:01:23.510, Speaker A: So celestia does not guarantee data retrievability. What Celestia guarantees is that the data was published at some point in time. The assumption that we make for data retrievability is basically the same as ethereum full node, which is that once the data has been published, and if you can verify tried that the data was published, then from that point on, there's an honest minority assumption for the ongoing retrievability of that data. Because effectively, if you can check that data was actually published Internet, then for the ongoing retrievability, you just need to assume that there's at least one honest server on the Internet that's willing to host and serve that data, or there's at least one available data on the Internet somewhere, kind of like the streisand effects in a sense. And this is why also there's a block size limit. Obviously, that would not work if you have tens of terabytes of data, because people would not be able to host that. But if you have a block size limit that scales the number of users, then you're more likely to guarantee that assumption is more likely to hold true.
00:01:23.510 - 00:01:48.510, Speaker A: In particular, because the way that we want to design the system is that you can actually contribute to the storage of a network without storing the entire blockchain. So we have this concept of partial storage nodes that can store parts of the blockchain and contribute to part of the storage of the blockchain. Kind of like, kind of like a bit torrent files with different peers that hold different parts of the file.
00:01:49.410 - 00:03:11.082, Speaker B: Okay, so my nitpicky summary of the situation here would be that I would say that, yes, if all the data in the celestial is 1 would assume that this data is still retrievable. And retrievability, in my opinion, is the security requirement, not just availability. So if it's just 1 would assume this data is probably there, but if it's a million terabytes, then I would assume that the actual nodes in reality actually storing all of that data is much smaller. So meanwhile, it is commonly said that as users grow, you'll have more sampling and the security scales with the number of users. I think that you cannot escape this harsh reality that as data grows, there will be perhaps fewer that actually stores the data, and the certainty that you can retrieve it shrinks. So I think attaching when you're saying that security scales with the number of users, you're really thinking about the data availability sampling scales with the number of users. But security is retrievability, and retrievability is impacted by the actual size of the data.
00:03:11.082 - 00:03:46.420, Speaker B: So that's just like a nitpicky summary of the situation. I still understand that the data availability sampling does give you favorable properties here, but if you're going to the very cold, harsh truth of the situation, then thousands of petabytes of data on Celestia, you're going to have to rely on that data still exists because you're not sampling it all the time and you're not getting proofs from other nodes that they have sampled it to your node all of the time, at least not in the way that silveste is designed at the moment. Do you think that's a fair. Did I say anything that was incorrect there?
00:03:46.950 - 00:04:34.610, Speaker A: Well, I guess there's two things I would say to like. The first thing is what I've said is the status quo of how blockchains work. That's the same assumption that Ethereum full node makes, and obviously that assumption does work. No one complains about the assumption, as you rightly say. That's because we're talking about a few terabytes of data. But the question then becomes, what if you have hundreds of terabytes of data? There's several things I would take to that. First of all, just because we would not want to have on chain or in protocol incentives for data retrievability does not mean that there cannot be incentives for data retrievability.
00:04:34.610 - 00:05:26.500, Speaker A: It just means that the incentive layer for data retrievability and data availability is decoupled. For example, Ethereum technically does have Ethereum today technically also has a data retrievability problem. That's why people pay infuria to get access to full nodes, to get API queries from Infuria, to get data out of Ethereum. You can think of Infuria as a centralized data retrievability layer for Ethereum, but obviously you can actually have kind of decentralized versions of that. For example, you've got pocket network, which is more distributed, and you have the graph, which is retrievability for index data. And then you've also got statisticals. For example, Filecoin has proof of.
00:05:26.500 - 00:06:19.140, Speaker A: So like the first thing I would say, there's no inherent reason to have data retrievability incentives as core part of the protocol. The second part I would say to that is, even if that's not good enough, it could be the case that the end user applications that people build on Celestia could make their own assumptions about data retrievability. Like for example, they could create data retrievability assumptions within their applications, like Celestia guarantees data availability. But if those applications want higher data retrievability guarantees, they could add data retrievability or proofs of reachability within their application if they wanted to do so, even though I don't think it's necessary. But they could.
