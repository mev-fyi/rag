00:00:05.130 - 00:00:42.370, Speaker A: All righty. Hello everyone. I hope all of you have been enjoying today as much as I have. I know I've been really looking forward to the summit and appreciate Maven and Celestia inviting us to speak today. But my name is Joe. I do investing over at Framework and very excited to be joined by this group today as we kind of discuss our various perspectives DIVS on supporting the modular thesis through our work as investors in this space. So I think we'll kind of start just by kind of going around, introduce yourself where you're from and then as well, maybe the first concept or idea that introduced you to kind of the modular paradigm.
00:00:42.530 - 00:01:12.290, Speaker B: Yeah, cool. So I'm Matais, I'm a partner at Maven Eleven and part time event planner these days. We're co organizing this. So incredibly happy you're all here. I think I first ran into modularism or modular blockchain design when I ran into the Lazy Ledger paper written by Mustafa in 2019. I reached out to John Adler with some questions and we then helped bootstrap Lazy Ledger with their initial sheet round.
00:01:13.270 - 00:01:40.490, Speaker C: Everyone, I'm Alex, I'm a partner with Blockchain Capital. I was first introduced to the concept of the modular blockchain paradigm probably in 2019, just reading ETH Research forum. So the first concept, I don't forget the specific project that I first read about, but was the optimistic roll up. So it was either optimism or fuel or Arbitrum.
00:01:42.290 - 00:02:30.300, Speaker D: Hey, I'm will. I work at Galaxy Digital and invest on behalf of the team there. Obviously paid attention to the optimistic roll up stuff in 2019. But I think the moment where the shift to the modular sort of approach really clicked was watching in October 2020, when Vitalik was posting about the sort of roll up Centric roadmap and ethereum's shift from ETH 2.0 sharding to sort of like a data shard. Centric approach was the moment that it clicked that these different functions of A blockchain are going to be split up and then started reading Mustafa's papers at that point and started to work with the team around that time and then proceeded with that.
00:02:31.170 - 00:03:41.330, Speaker E: Cool. My name is Eli. I'm a partner on the Polychain Investment team. I think the first time that I started thinking about kind of the modular stack, I think it's hard for me to trace back exactly, but it really evolved from conversations just with brilliant people in the industry. One of them being James Creswitch, who I was kind of, like, trying to work with, I guess, when I was, like a struggling or mediocre developer just on Interoperability. And so this evolved into this idea of or this exploration of a trade off space of really you have composition which is like how do you compose different functions within the same execution environment, like how the EVM operates today. And then you have interoperability and the various kind of permutations of that with IBC or Xcmp in the polkadot ecosystem and then we are also thinking about scaling.
00:03:41.330 - 00:05:01.562, Speaker E: And so this evolves from all of these ideas around Sharding and how do you appropriately communicate between these shards? Like how do you make them interoperable? How do you compose these functions? Because that's a really interesting kind of thing to discover with flash loans or what have you. And I kind of came to the conclusion that maybe the best way forward is not to put such an emphasis on composability or kind of synchronous composability rather. And so after evaluating this for a while, you can kind of parallelize it with shards or you can kind of compress or commit data in a roll up. And just after exploring a lot of these ideas, I actually realized that what I had kind of discovered or rediscovered was a pitch that I had heard a year before with the Lazy Ledger white paper. And so for those who are not aware, lazy Ledger is the academic name behind Celestia.
00:05:01.626 - 00:05:02.334, Speaker A: Exactly.
00:05:02.532 - 00:05:05.678, Speaker E: So that's really what led me to.
00:05:05.844 - 00:05:07.358, Speaker A: Down the rabbit hole, so to speak.
00:05:07.444 - 00:05:10.574, Speaker E: Yeah, this modular kind of way of thinking.
00:05:10.772 - 00:05:30.230, Speaker A: Love it. I think one thing that I'm really curious around to get some of your guys perspective on is in a broad sense, what makes yourself or kind of the investment thesis that you hold. Why is it so bullish specifically on this modular stack versus monolithic constructs?
00:05:31.130 - 00:06:11.246, Speaker B: Yeah, I think it's of course about the various parts of the stack and that you can optimize for say, data availability or execution, et cetera, but maybe deeper down, and especially with data availability sampling, it goes about giving users or end users and their light clients the ability to be first test citizens. I think still words we use of these crypto networks so that I with my mobile phone have similar security guarantees or almost similar as a full mode. Whether that matters or not is maybe the bigger question. And I think we'll get into that later with Mustafa and Anatolia. But I think that's why we're building Web 2.0 to have end user verification.
00:06:11.358 - 00:06:12.926, Speaker A: Absolutely. What about you, Alex?
00:06:13.038 - 00:07:04.350, Speaker C: Yeah, I mean, for me it comes back to why we're here in the first place, which is we want to build open, incorruptible, censorship resistant networks for the web. In our view, we see the majority of the world's economic activity moving on to blockchain networks over some period of time that is probably over the next couple of decades. And in order for that to happen, you look at what the end state is and that's millions of transactions per second. So what we have right now is definitely not going to get the job done. And what is the best proposal for how to get to that end state and to do so safely. And by safely that would mean without breaking the guarantees that decentralized blockchain networks give you today. So censorship, resistance and security primarily.
00:07:04.350 - 00:07:56.754, Speaker C: And the best proposal that I've seen for that is to scale via roll ups and to scale via a modular blockchain stack where instead of introducing an honest majority assumption, every time you scale horizontally, you can scale vertically. And via some combination of fraud proofs, validity proofs and data availability proofs, you can introduce only an honest minority assumption, and you can significantly increase the throughput and the expressivity of new execution environments that all share some decentralized foundation. That to me makes the modular blockchain stack the only viable approach right now to an end state where the world's economic activity is happening on blockchain actually be achieved there.
00:07:56.792 - 00:07:57.362, Speaker A: What about yourself?
00:07:57.416 - 00:09:02.774, Speaker D: Will it's always, I think for us, comes back to scaling. We just simply haven't seen like roll ups can work, but we're not operating at scale yet today, right. So the kind of scale that can onboard a global and full user base across the world, I think why we're bullish and we believe in the modular thesis is because when you split out these layers, data availability from execution, from settlement, you can optimize the three separately, right. And you can let them when they're bundled together, you fundamentally can't perform the optimizations that each one is capable of being on their own. Right. So splitting out data availability in particular gives you the ability to go from basically data availability proof in O of N complexity to O of square root of N. Right? And that's a phase shift in the ability to scale blockchains.
00:09:02.774 - 00:09:27.470, Speaker D: Right. And we're looking, I think at times, particularly investing in technology, it's like you're looking for phase shifts as an investor and going from O of N to O of square root of N is a phase shift. And so I think we think this kind of stuff will continue to emerge as this sort of thesis is played out and technologies continue to develop along these lines.
00:09:27.630 - 00:09:29.326, Speaker A: Anything to add there, Eli?
00:09:29.518 - 00:10:25.462, Speaker E: I think I covered a lot of this in kind of my earlier point, kind of jump the gun. But I think the only thing that I would kind of add is that if you look at the history of computation, maybe you started with something more primitive like Abacus, and then you kind of worked your way up through application machines. There were these kind of machines or contraptions that could solve a Fourier series or something, right? But they were very application specific, they were very bulky. And then we worked our way up to Mainframes or what have you, and then worked our way all the way down to kind of modularizing it right. With CPUs, GPUs, whatever is kind of in your desktop or laptop. And I think that we're seeing a similar evolution in the blockchain space. But I do think that there's a little bit of ambiguity about what modularity actually means.
00:10:25.462 - 00:11:12.226, Speaker E: Right? I think that so far we've seen modularity in the Cosmos SDK or the substrate design for polkadot. But I think that Celestia is really interesting to me because you can have all of these modules, you can build custom execution environments, but you still inherit the security of the underlying chain through roll ups or whatever. And I think this extends to other kind of other categories of investing, whether that's bridges or what have you. It's really important to further modularize some of these concepts but also still inherit some of those security principles, elements of.
00:11:12.248 - 00:11:25.942, Speaker A: The kind of the security foundation I got you. What do you all think is kind of like or are some of the larger distinctions when it comes to investing in a modular thesis versus a monolithic one? And maybe we could start with yourself, Eli, on this one.
00:11:25.996 - 00:12:54.290, Speaker E: Sure, we've been pretty bullish on this modular paradigm for quite some time. But I think when thinking about kind of monolithic versus modular architectures, if you abstract modules in Celestia or just like roll ups on Ethereum or what have you, really you just kind of end up with a bunch of different chains if you abstracted it away enough. And I think that our name is Polychain, right? We have a bunch of application specific chains in our portfolio. And whether you're exploring that because you want to implement some kind of new execution environment or maybe you want to incorporate cheaper fees for some kind of privacy based feature or whatever it may be, we don't live in a monolithic world. It doesn't really make sense, even from a portfolio construction perspective to invest in one monolithic chain, if you believe in that kind of I mean, I still really like Solana and everything. I really like Ethereum, and I don't think that they're going anywhere, but I kind of view them almost as their own modules.
00:12:54.630 - 00:13:00.290, Speaker A: Interesting. Will, what about yourself? What do you think makes kind of the largest distinctions between investing in these two separate thesis?
00:13:00.370 - 00:14:30.238, Speaker D: Yeah, it's actually, I think, maybe more challenging in theory, I think, to invest in modular, not like it's hard to decide that that should be your thesis, but thinking through what parts of that stack are going to be valuable is actually, I think, harder to do as an investor, frankly. I think when you have a sort of monolithic L one, whether it's Ethereum or something else, fundamentally the tokens on the L one are being used to pay for compute bandwidth like memory and solid state storage. Fundamentally, they're provisioning those resources on the network, but that's okay because those things are all bundled together and obviously you're paying for it at the opcode level. But at the end of the day, when you're submitting a transaction, you're paying for all in one bundle, fundamentally. And that creates a surplus, a transaction fee that produces a surplus above and beyond what the miner takes in. That's kind of the EIP 1559 model. I think this is more challenging, right? Because now you have different layers where there's different fundamentally different resources being sort of like provisioned at the end of the day and understanding which of those resources, whether that's compute or bandwidth or solid state storage or memory.
00:14:30.238 - 00:14:53.298, Speaker D: Understanding what people are willing to pay for each of those and then who exactly is going to pay for each one I think is pretty non obvious to me at the moment. Maybe these guys have answers, but it makes it more challenging, frankly, to really evaluate, I think, these modular projects as an investor.
00:14:53.394 - 00:15:00.206, Speaker A: Alex, I know we've talked a lot about this kind of what are your thoughts, maybe on some of what Will was speaking on, or just kind of the distinctions between yeah, I mean, for.
00:15:00.228 - 00:16:26.022, Speaker C: Me, I think it comes down to end user and developer choice and iteration speed, specifically. So when you build a monolithic blockchain, you're marrying, obviously, consensus settlement, data availability, execution, and that constrains the directions that you can move in. It's much more difficult to upgrade a system where all of those pieces are coupled together, whereas in a modular blockchain, you can deploy a new roll up when you want to experiment with a new execution environment. And so, over time, what I'd love to see is a wallet where I can have almost like a slider for what's the level of security you need, what is the level of privacy you need, what is the speed of transactions that you need for whatever your application is, or even just as an end user doing payments. And I think if we have wallets switching between a bunch of monolithic blockchains that are specialized for each of those things, that introduces a massive security hole in bridging assets between them. And so when you have roll ups, you have these natively trust minimized bridges that are baked in and you can achieve very highly customizable security, highly customizable privacy, et cetera, for applications without compromising on security. So I think that approach is more.
00:16:26.076 - 00:16:31.346, Speaker A: Sound, long term, almost giving developers kind of an additional choice by kind of modularizing that aspect.
00:16:31.378 - 00:16:55.998, Speaker C: Yeah, exactly. I mean, at the end of the day, these are open networks, it's open source software. And so the more experiments we run, the more iterations we produce, the better the results are going to be and the faster we're going to move as a space. And so I think one of those approaches lends itself much more effectively to experimentation, to iteration. And I think that it's very likely that that'll produce more interesting applications and developer experiences long term.
00:16:56.174 - 00:16:57.780, Speaker A: Anything to add on that one?
00:16:58.230 - 00:17:30.726, Speaker B: No, I agree with almost everything that has been said, but two, maybe more general points. Will said earlier, right, these rollups aren't live fully yet. So I think there's still a lot of ongoing research. And when looking to back founders, I think you have to accept that there can be quite radical Pivots based on the latest research. So you need to look for people that are willing to do that that aren't like set in stone and I'm going to build just this. And when a new insight comes, they ignore it. In addition, and I think this is something we already see with the rise of bridges between monolithic chains.
00:17:30.726 - 00:17:45.790, Speaker B: I expect these communities of the various parts of stack to get increasingly intertwined. So we see that with Avalanche and Terra now, right. Their communities are sort of splitting, combining through bridges, I think, in the modular stack that's going to happen so much more.
00:17:45.860 - 00:18:14.490, Speaker A: And it is an interesting thing to think about when not only are you modularizing the technical components of these, but also the underlying social consensus of each of these layers. And it does lead to kind of some of these interesting kind of ideas to think about on a much longer term basis, as well as people are kind of choosing where to go and which layers to use under them. Do you all think there's maybe a particular layer within the modular stack that you believe is maybe underappreciated, under discussed or maybe even potentially undervalued?
00:18:15.230 - 00:18:39.314, Speaker B: Yeah, I think right now we mostly focus on execution environments that are EVM focused. I think different types of execution environments, virtual machines, I know Fuel was on here earlier, they're doing something with that are vastly undervalued because it brings in a whole new wave of developers. And I think that's something that excites me a lot about modularity sorry, front.
00:18:39.352 - 00:18:43.220, Speaker D: Running you I know you agree. I think we're all going to agree on this point.
00:18:44.070 - 00:19:51.170, Speaker C: Yeah, maybe just to expand on the intuition there, I guess the most dominant development standard today is based around the EVM, which I don't think that a lot of folks would disagree, is suboptimal in a number of ways, like the way that it prices storage, the way that it handles memories. These things create limitations in the types of applications that you can build and the level of scalability that you get, how efficiently you use node resources at the end of the day. And so allowing the space via modular execution environments to break away from the EVM and run experiments on can we optimize a VM for a specific application? To me that is like we've more or less saturated, probably development efforts around the EVM and that's important. We should continue to improve it and make it better and make EVM proliferate more. But alternative VMs are very important and have a large place in the world. And so those experiments I think, are very welcomed.
00:19:51.330 - 00:20:50.426, Speaker D: Yeah, we're all going to be on the same page on this one. I mean, ironically, it's like data availability, sampling and data availability that unlocked all of this, right? So in some ways that should be what we're most excited about. But at the end of the day, the real exciting part of the modular stack fundamentally is that I think the design space for the execution layer has been blown wide open by splitting out execution, optimizing the data availability and consensus layer. I think we haven't even started to explore the design space. And what's cool about it is you can iterate a lot fast. I mean, obviously Cosmos and Cosmos SDK and other projects have provided some outlet for this in the past, but still there is a lot involved in scaling a validator set and some of the work you have to do to spin up sort of like a Cosmos zone. So credit to where credit's due to people who have gone down this road in the past.
00:20:50.426 - 00:21:44.666, Speaker D: I just think the pace of developing new rule sets for execution environments or execution layer is going to be way faster on top of Celestia and in this sort of roll up, modular sort of approach things that there's a number of parameters we could sort of imagine tweaking but there's just so much you can do, whether that's increasing block intervals, trying something with longer block intervals where it allows you to do longer. Sort of like compute. Right. So that you can do write longer programs. If compute is really cheap and you could write longer programs, people might try doing something like that. You might try parallelization of transactions was mentioned before. There's so many parameters you can sort of modify and it's just a multivariate sort of like design space.
00:21:44.666 - 00:21:52.960, Speaker D: And I'm excited to watch people explore this over the next couple of years because I think that's where a lot of the exciting stuff around the modular stack will happen.
00:21:53.350 - 00:23:36.626, Speaker E: Yeah, I think that there's just this kind of elegance around the minimal design of Celestia specifically. And when thinking about how the execution environments on Celestia or any other chain will evolve does get really interesting naturally. The first step is to have this kind of EVM environment, maybe slightly modify it, maybe it's a canary network or something like that. But I think that the next step gets even more interesting where you can take a Cosmos SDK app and maybe decouple some of the staking economics from the core business logic, right? You no longer or maybe you don't have to subsidize the validator set as much, right? Or you can defer some of those costs or just cut costs in general. I think the step after that gets even more interesting where you can kind of have this IDE where what you're really doing is deploying separate roll ups of sorts and you're no longer competing to include a transaction in this order matching logic. And that's separate from voting logic in a governance module or something, right? So you have like a matching engine module and then you have a governance module or something, right? And these things can seamlessly communicate between one another using Celestia or even ethereum can do this on a long enough time horizon, I'm sure.
00:23:36.648 - 00:23:57.782, Speaker A: Absolutely. I think one of the ideas that makes me think a lot about is just like I think we've covered a lot of what about this stack excites us? I'd love to hear some more about what are the implications of that on applications, on end users. I think there's an aspect of security that could get discussed here, but also just the new design space that this opens for applications would be awesome to hear your thoughts on.
00:23:57.836 - 00:25:21.730, Speaker E: Yeah, I think that even taking a step back from just thinking of Celestia as the modular stack, I think that other applications have been really interesting to see evolve. So there are these different kind of layers that we've seen as more chains just come into existence. You no longer are just loyal to this L one E. Right? And using a lot of layer twos feels very similar to layer ones that have deployed EVM compatible environments. And so we're seeing new kind of like liquidity layers, like connects that can act as like a clearinghouse between all of these different environments. And I think that when you have this clearinghouse, you don't really have to worry about certain security concerns because it's modularized in a way where it inherits the security of the local instances where it's deployed. Or you have something like Nomad that can be used for passing messages between these different modules or environments.
00:25:21.730 - 00:25:38.274, Speaker E: And then at the application layer, outside of just kind of communicating or transferring tokens between all of these environments, you have core applications.
00:25:38.322 - 00:25:38.486, Speaker D: Right?
00:25:38.508 - 00:25:45.418, Speaker E: It's like something like dYdX, they're deployed on StarkNet. And I think the majority of the.
00:25:45.424 - 00:25:49.302, Speaker A: Reason they can even function is solely because of kind of the scalability increases.
00:25:49.446 - 00:25:49.994, Speaker E: Exactly.
00:25:50.112 - 00:25:55.040, Speaker A: Limitation. Will, what do you think about or what excites you kind of about the application space when it comes.
00:25:56.130 - 00:27:17.762, Speaker D: I think, you know, we've made a lot of points and there's just a lot, I think that generally excites this group. One thing that I want to flag as well, while we have it's, like some of the work Cello has historically done on Plumo, which is the sort of light client that's optimized for mobile, I think there's some elements Celestia's data availability is very different. But the modular paradigm and data availability, let's call them like an eager blockchain versus a lazy blockchain, like lazy blockchains are fundamentally pretty good at fundamentally better for sort of mobile users. And if mobile users want to be self sovereign because light clients have stronger sort of censorship resistance guarantees. So I'm excited to see if we can use the data availability paradigm and the modular paradigm to approach new applications for mobile first users. That's a little bit further down the road and that's a little more speculative, but I think that always should be a goal of the crypto and blockchain community is like, how do we build things for different sort of computing platforms like mobile? I know that's a bit of a digression from some of the stuff Eli was just talking about but I wanted to flag it as something I find exciting and we'll see if that can sort of emerge.
00:27:17.826 - 00:27:29.402, Speaker A: I'm definitely aligned with you there. I think there is an end goal for web Three where we need to have or at least provide the optionality for end users to be verifying and making that easy on user device like a mobile phone.
00:27:29.456 - 00:27:45.374, Speaker D: Otherwise inevitably somebody will build it will build an application for a mobile phone and you won't have the option to have self sovereignty via a really censorship resistant light client. So for me that's pretty cool.
00:27:45.492 - 00:27:54.562, Speaker A: Awesome. I know we only have a few minutes left but I'll let you guys hit on this one. Anything particularly interesting that you guys are kind of foreseeing when it comes to the application layer? Sure.
00:27:54.696 - 00:28:45.380, Speaker C: So a colleague of mine, Ryan, likens it to I guess like the shift here to a breakthrough in hardware. So it's really hard to say what does this new paradigm enable but I think we have some instincts on what it might enable. So as an example, fuel processes transactions in parallel so they can run at a significantly higher speed than a monolithic blockchain. So that enables things like micro payments which aren't practical or economical on blockchains today. They also have a significant memory expansion at the node level and so that allows things that are memory intensive, like an on chain order book, dex for instance, which is not something that you can really practically run on ethereum today.
00:28:45.990 - 00:28:49.758, Speaker A: Without any trade off. Yeah tyas, what about yourself?
00:28:49.944 - 00:29:18.510, Speaker B: Yeah, I think the order books have been mentioned a few times. Right, totally agree there also on the application layer I think we will just see more radical innovation because it's easy to just deploy an application specific chain and try something out another but this is maybe more infrastructure if you will, is bridges that share state between optimistic roll ups isn't area I'm very interested in. I haven't really seen it yet so if someone's building it do reach out but yeah, apart from that agree with what they all said.
00:29:18.660 - 00:29:24.490, Speaker A: Awesome guys. Well I think we are at time but really appreciate you all joining us and thanks everyone for coming out to the summit. I hope you all have enjoyed.
