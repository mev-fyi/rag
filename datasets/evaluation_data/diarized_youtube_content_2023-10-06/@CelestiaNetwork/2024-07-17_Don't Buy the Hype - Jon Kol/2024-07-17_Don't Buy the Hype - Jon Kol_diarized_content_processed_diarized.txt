00:00:01.880 - 00:00:36.180, Speaker A: Thanks for coming out. I know a lot of people weren't excited to come to the city, which is unfortunate. It's actually a lovely city. I've been enjoying it very much. But regardless, thank you for coming out to modular summit for our third time gathering, and thank you, certainly, for coming out for this, specifically to hear what I have to say. So, as you think about this event here today, there's been a ton of excitement since what we were doing last year. The modular ecosystem has basically become a household name.
00:00:36.180 - 00:01:24.490, Speaker A: In fact, it's become so big, so renowned, so hyped in some ways, that it's become pretty popular to take the counter opinion to it, to now say, like, oh, this is all noise. There's nothing really there. You're just, you know, you don't have to worry about this thing. It's not actually going to produce the results that you think. And I'm here to tell you that actually, there is a ton happening, and you don't need to buy the hype about it. There's plenty real that you should get excited about, and that's what we're going to cover today. So before we do that, let's start talking about why are we here? Why are we here at all? So the proximate reason why we're here at this event is obviously, presumably everyone here is in some extent, excited about the modular ecosystem.
00:01:24.490 - 00:02:11.590, Speaker A: But why are we here, really? Why are we here in Brussels? Bigger question, why are we here in crypto? Well, that, I think, is because we care about these Internet computers. We care about these blockchains. You know, presumably we think that they could do something interesting, something meaningful, something impactful the world. And so we put our life energy into increasing the demand for them. Everyone here, probably in some capacity, works in crypto and works towards increasing the demand for these systems. Well, then we have an issue, right? Because what these systems do, by definition, by virtue of their construction, is they restrict the access to digital resources. They make what have been abundant digital resources that make them scarce.
00:02:11.590 - 00:02:41.322, Speaker A: And so we have a very predictable problem. We have somewhat a counterintuitive problem. It might be counterproductive. It might even be self defeating. We're all putting all of our life energy into increasing the demand for these systems, but they make digital resources scarce. They, by definition, have a certain fixed supply. And if, on the other hand, we're increasing the demand, well, everyone's had this feeling.
00:02:41.322 - 00:03:49.756, Speaker A: Everyone at some point, like, tried to do something on a blockchain, probably on Ethereum, and you ran into this and you're like, why the hell do I need to pay $50 to just move $50 around? That doesn't make a lot of sense. I don't like this. And so what can we do about it? And that is what we're all here to try to solve, specifically through the modular ecosystem. By now, I feel fairly confident that this modular approach, if you could call it the app chain thesis, you could call it horizontal scaling, you could call it the many computers approach, whatever you want to call it, all ends up in the same direction. That the best solution we have for the scaling problem, instead of trying to build bigger, faster computers, let's just spread it out. Let's build as many of these computers as we can, and then we can actually increase demand without that counterproductive thing that we were doing before, where we increased demand. But then we were so successful at it that we made the thing that we were increasing demand for completely unusable.
00:03:49.756 - 00:04:32.040, Speaker A: And, you know, we've ran into that in 2017 and 2021 again, and today in 2024, this is our best bet for not running into that counterproductive problem. But if you have so many of these computers, you're going to need a way to connect them. And that is where something like hyperlane comes in, a permissionless framework for interoperability, an open framework for interoperability, something that lets anyone connect any chain. And so this is a lot of the vision that I kind of laid out last year. You know, if you were with us last year, probably heard me talk about this. Exactly. And a lot has happened since then.
00:04:32.040 - 00:05:18.530, Speaker A: The last few minutes of this conversation have basically been the majority of the talk from last year. And so what's happened since then? The modular expansion kind of begun happening now. This is real. This is no longer just something that you need to imagine. You can feel it, you can touch it, and let's go straight into that. So I don't think you can pinpoint a single moment in time and say, hey, that was the inception of the modular ecosystem. But I certainly think that there is a moment that you can point to as the beginning of the expansion, and it would have never been able to reach there if not for the work.
00:05:18.530 - 00:06:43.964, Speaker A: The culmination of years of work, really, by teams like Celestia, who have been a big driver in this entire effort, teams like optimism and arbitrum, who have built really scalable and extensible roll up frameworks, all the roll up service providers, whether it's caldera, conduit, anchor alt layer, they make it super easy to launch your own roll up. But the closest thing to the beginning of this expansion phase, in my view, happened in Q four last year when Celestia launched. And that is almost like a big bang moment for the modular ecosystem. And from that point in time, we've seen just the number of rollups really start to take off, to the point that now we're starting to see real distinct roll up ecosystems forming. And from that launch, that's when really hyperrelane started kind of breaking onto the scene, bridging Tia, the main celestia asset, to an increasing number of rollups and just evolve from there. So how is this expansion going to happen? Well, a critical, a crucial component really, is that the cost to deploy a chain, the cost to deploy a roll up is basically trending towards zero. So if you look here, you got, you know, as I was making this deck here the other day, I thought, let's time myself as I go to launch a roll up using Caldera's interface.
00:06:43.964 - 00:07:44.770, Speaker A: So this here, this is Caldera's roll up as a service interface. It lets you pick the environment that you want, the data availability layer that you want, a couple other customizations, and in just over it was about two minutes, 40 seconds, I was able to launch my own rollup. And at the same time here, this is another indication of that cost going to zero. Sorry about the resolution, but this is a chart of the leading roll up submitting data availability to Celestia. And what you'd be able to see here is just how low that cost is. All of these posting gigabytes of data and the entire cost here, if you add it all up, adds up to about $7,000, which is a fraction of what this had been if all of this had to be posted on Ethereum. So the cost is going to zero both in dollar terms, but also in time, right? We just talked about two minutes, 40 seconds to get a roll up off the ground.
00:07:44.770 - 00:08:34.100, Speaker A: What good is it for me if it takes me this, basically three minutes to launch a chain, but then I need to spend three months waiting for the good graces of one of the permissioned interoperability providers to come and connect my chain with everybody else? It doesn't make any sense. So this world that we talked about where horizontal scaling many computers are the solution to our scaling problems, doesn't make sense if I don't have a fast, scalable and permissionless way to connect all those chains. And again, that's where hyperlane comes in. So if it's not clear by now, hopefully it will be soon. Modular blockchains love. I would even say modular blockchains need permissionless interoperability. They absolutely need something like hyperlane.
00:08:34.100 - 00:09:14.502, Speaker A: And so in that in Q four last year, when Celestia launched, hyperlane was there to be the first interoperability protocol catering to the bridging of TIA. The main asset there, if you've used hyperlane at all, if you've been exposed to it, that was probably the first time. It's pretty janky. Thank you all for bearing with it. At that time, it's gotten a lot better sense. And since that point in time, over 900 million in TIA has been bridged between different roll ups and chains. After that, things really began to pick up.
00:09:14.502 - 00:10:08.300, Speaker A: Things really began to move quite fast for hyperlink. Not just the speed of the bridging, but also how fast things were evolving. A few months later, if you're familiar with injective, injective entered the fray of the roll up space, launched their own roll up in EVM, and used hyperlane to bridge the gas token. In the couple of months since that's happened, over $700 million in that gas token have been moved between injective and the roll up, and things really began to take off from there. So let's look at kind of modular expansion by the numbers. Ever since that q four moment, hyperlanes processed over 4 million interchange messages. Today, by activity, hyperlane does more messages than any other interpretability protocol short of layer zero.
00:10:08.300 - 00:11:12.054, Speaker A: Some days, even more than layer zero surpasses, wormhole surpasses. Axelr, you see that here, the number of distinct contracts that have been interacting with Humperlane, the number of distinct users. So over 4 million messages, over $2.4 billion in volume, and just the last few months here, several thousand users distinct addresses interacting within every chain. And to me, the most interesting, the most appealing aspect of this is the growth and the permissionless expansion of hyperlane. So not just the areas where the core team, our team, is operating Hyperlane, deploying it, but rather areas where teams themselves are running hyperlane and whether it's stride. If you meet them here at the event, you can ask them about their experience with their hyperlane deployment, whether it's forma, whether it's keric, or the dozens of teams that are now progressing towards production with their hyperlane deployments.
00:11:12.054 - 00:12:07.990, Speaker A: So with this indistinct rectangle here that doesn't have a chart on it, what that is is a screenshot from the public registry on GitHub, where hyperlane deployments that are using the Hyperlane CLI, to deploy it and operate it themselves, can make a pull request with their deployment and the information about how to connect with that. And that is growing rapidly. Just the other day, as I was making this, there were three new prs in a single day from new chains that are going live with hyperlane. And so this is what permissionless expansion really is. There's more than 45 chains in apps that are already connected through hyperlane, over 1000 in total distinct contracts that are interacted with it in this registry. It keeps on growing. So I told you before that hyperlane is the open framework for interoperability.
00:12:07.990 - 00:12:50.928, Speaker A: But what does it mean to be a framework? What does it mean to be open? Like, how does that manifest itself first in some of those numbers that we've seen before, most notably the self hosters? These are people who are not waiting on our team or any other team to connect with any other chains. They're taking it into their own hands. They're doing it themselves. They're operating Hyperlink, and no one can stop them. And if they don't tell us, if they don't post on the registry, we wouldn't even have a way of knowing. What's another way that this framework, this open framework mentality is manifesting? It's through expansion to new vms. So today, hyperlane is already live on Cosmwasm and on Solana, and of course on the EVM.
00:12:50.928 - 00:13:43.980, Speaker A: Perhaps the most interesting part of this is that the implementation of both the Solana and the Cosmos and work they weren't started by the core team, and in fact, in the Cosmos case, that was started and carried to production by the team at Mitosis, if you're familiar with them. Since then, we've had several other teams begin to build Hyperlane for new vms. Pragma, which is a large oracle on Starknet, is just about done with their audit for a starknet version of Hyperlane. Movement Labs built a move version of Hyperlane, the Kadena team, the Rootstock team. There's a whole host of other teams that are building Hyperlane for their own vm. Why are they doing that? Why would they care? It's because they need an interoperability solution that can scale. They need an interoperability solution that they can control.
00:13:43.980 - 00:14:32.774, Speaker A: And if someone was giving this to them, they wouldn't do it themselves, but no one is. So these people are taking it into their own hands, and they're contributing to hyperlink because they know this is the only tool that they can use that they could run on their own terms without dependency on anybody else, that they can own every aspect of it. They can own the security, they can own the actual operations. They can even monetize it. Some of these people will be operating hyperlink themselves and running a business off it, monetizing the transaction fees. And I'd say if any of you in the audience today are familiar with the telegram ecosystem, we're definitely looking for someone to help build a telegram implementation so we can add it to that list there. But so we've talked about what hyperlane is.
00:14:32.774 - 00:15:13.430, Speaker A: Let's talk about what you can do with it. When you think about interoperability, you probably think about bridging. Well, unlike the standard concepts of bridging that you can see pretty much with every other protocol, hyperlane does bridging a little bit differently. Of course, you could use it to do whatever you want. But if you want something out of the box, something fairly nimble, check out our warp routes. So we're bridging normally is all the people, put all the assets into one contract, with one rigid security setting becoming an increasingly large honeypot as that bridge becomes more popular. Warp routes are different.
00:15:13.430 - 00:15:59.830, Speaker A: They're individualized on a per asset basis with distinct security settings. So much so even that you, as the asset issuer, can participate in the security of that bridge and more on that later. As I could show you a live case of this. Warp routes can be used to go to as narrow a set as one chain, say, one bridge from Ethereum to Solana. Or you can use it to create a very nimble, fast bridge between a collection of chains as large as you'd like, where once you make that initial deposit, the asset can move between all of those chains freely, and it just gets burned and minted each time you transfer it. But that's pretty cool. People are familiar with this.
00:15:59.830 - 00:16:27.412, Speaker A: You can do this. You can actually go on our cli right now and try this for yourself. The cooler thing is what we call yield routes. So everyone's probably familiar with what blast did earlier, or I guess late last year with their native yield bridge. Pretty nice idea, right? Like, we have all these assets, they're just sitting in these contracts. Wouldn't it be nice if we could do something with them? Like, hell yeah, it would be nice. And so that's why blast became really popular.
00:16:27.412 - 00:16:54.582, Speaker A: People wanted to bridge to a chain, but also earning yield while they're doing that, while they're playing around with it. Yield routes. Let anyone do that. If you run a chain, you can use real yield routes to bring a yield bearing bridge to your chain. How does it work? In simple terms, because we're running out of time here. Assets go into the route. You, as the deployer of the route, configure which 4626 standard vault they go into.
00:16:54.582 - 00:17:32.865, Speaker A: So there's plenty of vaults on Aave Pendle that will accept assets in this format, and then you just use it as any other warp route that you would. So you could have something go from ethereum to arbitrum. Optimism, Solana, Cosmos. Wherever and while those assets are in, you configure the vault that they go into. And all the while, they're earning yield. Some new features that are coming to yield routes are better customization about how to split the yield, allowing you to decide, like, maybe you want to keep all of it and use that as a revenue source for your business. Maybe you want to give it all to your users.
00:17:32.865 - 00:18:18.110, Speaker A: Maybe you want to land somewhere in between. Either way, that upgrade is coming to yield route soon. Now, let's take a look at a warp route in action. So, on June 19, just a few weeks ago, Renzo, one of the largest liquid restaking players, put easy EtH, their main LRT, on hyperlane through a warp route. Coolest thing about this is, before, remember, we were talking about how warp routes can have distinct security modules? So this bridge, this easy eTh thing, Renzo is in the business of providing security. They have a whole set of operators that are involved with their restaking token. Well, in this case, it's not.
00:18:18.110 - 00:18:57.520, Speaker A: When you're using this, you're not trusting some indistinct group of hyperlane folks. It's Renzo and Renzo's operators that are securing this bridge. This can only happen with Hyperlane launched with eight chains. As you can see on the screen here, in those three week cents, already moved $700 million with a single day high of just about 100. And a few chains have already been added in just the last few days, fracs most recently, and a few more that are coming shortly. Then we have the Hyperlane CLI. This is basically your main interface for all things Hyperlane.
00:18:57.520 - 00:19:32.308, Speaker A: This is how you manage your Hyperlane deployments, how you make those deployments. If you're in a fun mood, pull up your laptop, try it out right now. You'll be able to deploy a warp route in minutes. You'll be able to deploy hyperlane on your chain and then manage it from there. The important thing, to think about it with it. This is just your main gateway, your main access point for this open framework for interoperability before we go, some kind of use cases in the wild that don't involve direct bridging use more general messaging capabilities. Most interesting might be AAVE.
00:19:32.308 - 00:20:11.490, Speaker A: AAVE uses hyperlane for interchange governance. So when something passes on AAVE through governance on Ethereum, they no longer have to do a sort of manual process to push that update between AAvE on all the different chains, they use hyperlink and they use layer zero too. It's okay. And they propagate that between all other deployments of AAVE. Superform is a very cool interchain yield app. You have money on some chain, but you want to earn yield. You don't want to start chasing yield between every different chain.
00:20:11.490 - 00:21:03.480, Speaker A: Superform through hyperlane lets you deposit in one place and then they find the opportunities everywhere else. Mitosis has an interchange liquidity product that keeps improving and has an increasing set of offerings. Perhaps the one that I'm most excited about and is going live very, very soon is Everclear, that is using hyperlane for their interchange clearing layer, which if you're not, I used to, a long time ago, used to be at Morgan Stanley on a trading desk, and there's a robust network of clearing houses that help make the system a little bit more efficient. But in crypto, we don't really use that. In effect, we end up bridging a lot more than we actually need to because there's no netting system and everclear is building that first netting system. So if you'd like to learn more about it, check out our docs. Join our discord.
00:21:03.480 - 00:21:18.610, Speaker A: You can follow us on Twitter, or I guess now it's xyperlane. Our website is hyperlane xYz. Come find me later. And of course, feel free to send me an email or shoot me a text, but I know we're running out of time. Thank you for being kind with me, and that's all we got.
