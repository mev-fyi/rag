00:00:00.250 - 00:00:00.800, Speaker A: Um.
00:00:04.290 - 00:00:20.990, Speaker B: What if there is one application that is so popular that it just, you know, the it drives the fees up on Celestia to $5 per per transaction. Like is this a is this a catastrophic scenario for Celestia or is that still viewed as a positive outcome?
00:00:22.210 - 00:01:17.998, Speaker A: Mustafa, please know I'll respond to that. But I also want john should also I'm sure John also has lots of opinions about this. So the short answer is yes. First of all, no blockchain can guarantee cheap fees. If any blockchain guaranteed cheap fees, then it would be vulnerable to denial of service attacks because someone could just spam it with free transactions which includes it in Celestia and every other blockchain that is not vulnerable to null service attacks. There is a block size limit and in Celestia there will be a block size limit. The question is what is that block size limit? There's several questions here.
00:01:17.998 - 00:03:25.710, Speaker A: So first of all, what is that block size limit and how do we pick that block size limit and how does it scale? And secondly, what is the maximum potential size for that block size limit compared to a monolithic blockchain? Like solana, for example. First of all, so one thing I've said before is we define scalability as equal to the number of transactions or the throughput that blockchain can handle divided by the cost for an end user or a light client to validate the correctness of that chain. And this is the fundamental reason why, for example, Ethereum or Bitcoin would not just increase the block size to something insanely high because end users would not be able to run a full node to check that the chain is correct. Now, this is kind of contrary to Solana, for example, where solana have taken the approach where they don't care about end user verification and they just want to scale throughput as high as possible on the monolithic chain. So for the bottom part of the equation, which is the cost for an end user to verify the chain, the property in Celestial is such that because we use a primitive called data availability sampling, the more users there are in the chain, the more likelihoods there are on the chain doing data availability sampling. Then the higher the block size we can increase it to safely without compromising the ability for end users to verify the correctness of that chain or in other words, to check that the chain data is fully available. And that's because with data availability sampling any Glyte client can verify that the chain is fully available by only downloading a very small piece of that chain.
00:03:25.710 - 00:04:57.946, Speaker A: So that's one side of the equation which is that we can scale with number of users or any blockchain, including when Ethereum 2.0 adopts it. Any blockchain that supports states availability sampling can scale end user verification with number of users. But then the next question is scaling end user verification is all well and good. But how about actually increasing the throughput of the chain or the block production of the chain? Because that's the other end of the equation, which is how big of the blocks can the actual miners or the validators or the stakers in the chain actually scalably produce? So in Celestia, I would argue that would be fundamentally higher than other systems like Solana. And the core reason for that is because the validators on the Celestia chain, they don't do execution of the user's transaction, they just do data availability, which is a very bandwidth heavy resource requirement but not computation or kind of memory heavy requirement. And the fundamental difference here is that including just providing data availability is a stateless operation, which means that you don't have to remember any user state.
00:04:57.946 - 00:05:44.530, Speaker A: So like for example in Salana, you have to have a huge amount of memory, I think it was like 256GB of memory to run a validator because you have to remember a huge amount of state, for example, user balances to actually validate blocks. But in Celestia, because we decouple data availability and execution the actual validators of the chain, they don't have to maintain state, they just have to have the bandwidth to receive transactions and put them in blocks. And that fundamentally allows you to increase block production to much higher than if the validators also have to do execution and computational transactions.
