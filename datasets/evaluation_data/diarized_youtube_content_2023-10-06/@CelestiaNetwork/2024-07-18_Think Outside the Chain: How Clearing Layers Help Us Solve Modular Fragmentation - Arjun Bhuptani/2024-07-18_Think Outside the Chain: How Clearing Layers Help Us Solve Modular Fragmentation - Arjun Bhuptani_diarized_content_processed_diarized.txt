00:00:00.040 - 00:00:18.326, Speaker A: Arjun. I'm Arjun. I'm one of the founders of Everclear. We were previously known as Connext. Everclear is what we call the first clearing layer. Over the course of this talk, I'll be kind of explaining what that is and how it fits into the modular space. So fragmentation.
00:00:18.326 - 00:00:53.156, Speaker A: Fragmentation is the big, scary boogeyman for modular today. And it makes sense, right? Like, over the course of history, we've just seen this acceleration of TvL moving to other chains aside from Ethereum, except for that kind of minor blip over there in 2022, which was terra rip. And this problem isn't really getting any better. There are 61 Ethereum based roll ups live today. That kind of blew my mind, by the way. I had no idea that that number had already gotten so high. And then there's 79 on the way, according to l two beat.
00:00:53.156 - 00:01:38.168, Speaker A: But I actually went and I talked to a bunch of roll up as a service projects and a few other ecosystems. That number is way, way higher. There are multiple rollup as a service projects claiming to have hundreds in the pipeline by the end of the year, which is kind of insane, right? Like, we are really, really accelerating logitech expansion. And of course, that means that this fragmentation problem is about to get so, so much worse for this entire ecosystem. So what do. Last year, Connext started talking about this idea of chain abstraction, and it's something that's been kind of really picked up by the broader community, which we're really, really excited about. Chain abstraction is this vision for the future where users never really need to care what chain they're on.
00:01:38.168 - 00:02:21.692, Speaker A: And from our viewpoint, we think that we can achieve this using a technology called intents. Intents have obviously been a super, super hot topic at HCC, so I won't dive into them once again. But a really, really awesome breakdown of how intense work is to look at this really fantastic diagram that was built by one of the most popular intent protocols out there today, Uber. So when you use Uber, you're effectively expressing your desire to get from point a to point B, and Uber fulfills that desire. And you kind of see this mirrored in the way that chain abstraction works, right? You have, at the very kind of top of the stack, you have your permissioning layer. That's not the laser. You have your permissioning layer.
00:02:21.692 - 00:03:08.810, Speaker A: This is where you kind of tell Uber, hey, I need to get to ethcc on time. And then Uber auctions that off, that intent off to find you a driver that can get you there. It quotes you five minutes though, of course, because it's brussels that is actually 25 minutes. Then you finally get a ride, a driver that takes you to ECC, and then at the end of your ride, you settle with the driver, which means you pay them. This flow obviously makes a lot of sense. It has analogies both all over web two and tradfi. And in, in this space, it makes sense to kind of separate out actions that you're doing on chain and delegate that complexity to third parties that can specialize in doing that for you on your behalf.
00:03:08.810 - 00:04:01.180, Speaker A: But there are challenges. Jim started to touch on this, which I really, this really, really big challenge, which I think everybody's starting to think about today, which is solving for chain abstraction, solving for intent protocols is just a really, really highly centralized activity today. And until we can fix this, you kind of have this paradigm where if you are a solver with a large amount of inventory and sophisticated actor like Wintermute, you are really making the vast, vast majority of volume revenue in this space. And if you're an individual solver, you are, unfortunately, all the way out here. Until we fix this, we really can't scale solving. This should be a straight line. Your returns should scale proportional to the amount of liquidity that you have, not multiplicatively proportional to the amount of liquidity you have.
00:04:01.180 - 00:04:53.680, Speaker A: So a couple of years ago, we started to encounter this problem, and we encountered it because we were building an intent based bridge, working with a bunch of solvers, though we didn't really call them solvers at the time, that were largely passive actors. They were like staking service riders. And those staking service riders, despite having lots and lots of liquidity in the system, were not actually routing transfers. So when we dug into why, we realized that there's this weird paradigm that exists today, we talked about the first couple of steps of the intent. So user says they want to do something on arbitrum, solver goes and fulfills that request on arbitrum instantly. So from the user perspective, this is a fantastic experience, but it's what comes afterwards that is still unsolved, really. The third step, which is how do you do settlement? And most importantly, when you do settlement, solvers go and unlock funds on the source chain.
00:04:53.680 - 00:05:39.072, Speaker A: And so this creates a need for solvers to rebalance. Rebalancing is actually one of the most challenging parts of solving today. This is like, inventory management is kind of what this is called in like, financial or market making terms. And solvers don't want to be market makers, right? Only if you make solvers market makers then the only people that can be good solvers are market makers. And the reality is, like, every single solver has to deal with this today. Every single solver has to spend lots and lots of time and energy building an operational team and paying money to go and bridge their funds back to where it needs to go in order to be able to continue solving transactions. We went and we talked to a bunch of solvers in the space about this, and the solvers said, hey, we use these bridges to rebound, so we use market makers to rebalance.
00:05:39.072 - 00:06:37.080, Speaker A: And we went and we talked to the market makers, and the market makers said, oh yeah, we use like centralized exchanges or canonical bridges to rebalance. And we went and we talked to centralized exchanges, and they said, oh yeah, we're hiring a team of 20 people that just go hit the button on the arbitrary bridge and they just do this all the time, right? Everybody is, everybody is dealing with this problem. It's just not going away. It's a fundamental issue with the fact that we live in a world where it just takes time to get between chains, right? The minting rights of these bridges are consolidated in these extremely, extremely secure bridges, relatively speaking, which is fantastic, but they take a long time. So how can we fix this? Interesting breakthrough for us came when we realized that 80% of the volume that actually moves between chains today is nettable. What this basically means is that for every, I guess for binance chain, for instance, for every $1 that you send into binance chain per day, $0.85 moves out.
00:06:37.080 - 00:07:30.336, Speaker A: So this kind of brings up an interesting question, which is, why are we sending $0.85 into or $1 into binance chain to begin with? Why not just send $0.15? This insight is at the core of what we call netting. Netting is something that is quite established in like, traditional financial systems, where you take a bunch of obligations that people have, financial obligations people have to each other and reduce them down to one kind of final sum obligation. So for those of you that are from North America and use splitwise, the splitwise is effectively a netting application. You pay your friends when you go on a trip, you kind of have ious to your friends because they're fronting to buy plane tickets or to pay for food or whatever. And rather than having to pay each other each time and spending additional money to actually do that, you can just register your obligations in splitwise.
00:07:30.336 - 00:08:29.546, Speaker A: And then splitwise at the end of your trip gives you a final amount of funds that you actually need to sell. So you're basically turning dollar 420 worth of transactions, by the way, not at all intentional, down to $10 worth of finals, like just a final $10 transfer. To harness this insight, we want to introduce this concept of clearing to the space and really Everclear as the first clearing layer. Everclear is a system that negotiates the relationship, basically negotiates the global funds movement of funds between different bridges that are moving funds between chains. So, for example, if I have funds on polygon, I'm a solver, and I have funds on polygon, because I've just filled a transaction going from polygon to somewhere else. And Jim is a solver on arbitrum who has filled a transaction going from arbitrum to somewhere else. But we actually want to end up, I want to end up with funds on arbitrum, and Jim wants to end up with funds on polygon.
00:08:29.546 - 00:09:20.240, Speaker A: Instead of both of us having to bridge, we can just atomic swap with one another. This is a coincidence of wants effectively like a cow swap. And instead of creating yet another system which, yet another bridge which has liquidity within it, we can create this different sort of system that actually allows bridges to negotiate with one another. It sort of removes this perennial trap we've been stuck in, where we continue to build new bridging standards, we continue to put liquidity further and further into new systems, which just fragments things more and more instead of making things better. How does this work in practice? Well, Everclear is a roll up. It's actually a fairly straightforward system, different users of the system. So this would be solvers, market makers, centralized exchanges, deposit funds into Everclear and register their desire to kind of rebalance to another chain.
00:09:20.240 - 00:10:04.856, Speaker A: The system turns, basically purchases those deposits effectively, and issues invoices which are like ious from the protocol back to the user. And then it auctions off those invoices against available liquidity. It will decrement the kind of notional price of an invoice if there is no available liquidity. So there's always like an incentive for someone to come and arbitrage it. Everclear sits at the bottom of the chain abstraction stack that we talked about earlier. It's powering this seamless liquidity backbone for solvers that are then able to go and continue participating in auctions much more efficiently than they could otherwise. Right? They're basically cutting out 80 plus percent of their cost basis because they're not having to go and continue rebalance.
00:10:04.856 - 00:10:34.582, Speaker A: And instead they are able to get their funds back to where they need to be faster so that they can continue solving transactions. Right. It's like, as an Uber analogy, this allows for these. It allows for an Uber that's driving from here to the airport to go and pick up somebody at the airport and come back, rather than having to come to drive all the way back to Brussels to get another ride. And this also allows us to scale out the number of Ubers. Right. The more people are able to solve in a way that's very, very cheap and cost effective, the more people can just be independent solvers.
00:10:34.582 - 00:12:15.024, Speaker A: The goal here, with a combination of Everclear and other kind of infrastructure, like Catalyst and Kalani and other solver infrastructure that is simplifying the process of being a solver, we can ideally get to a point where we have achieved this outcome that we need to achieve, where we move from the monolithic stack over to modular, and then move from modular over to abstracted. And where abstracted here means I a stack where users just never know that they're on multiple chains. We think that this is maybe one of the most important sort of technological transitions that crypto has ever faced, where we can work towards this outcome, where you have scalability solved by modular, and then this front end of abstraction that is solved by the chain abstraction stack, or as it's referred to in academic terms, the modular mullethood. For the past ten years, just about this space has been thinking really, really deeply about how do we actually scale out blockchains? How do we get to the point where every single chain or every single application is able to build in a way where it's unfettered by the usage of other applications, where you can build truly billion user scale applications, where you could build an actual Uber on a blockchain. And every single time we've sort of hit the same bottlenecks, which are limitations around the trade off space, around scalability versus security. With this transition, we think that we're actually finally in the place where we can solve this problem. And I think that's how we get to this next step.
00:12:15.024 - 00:13:09.670, Speaker A: I have personally been very, very interested in getting to a point in this space where I can move beyond just building infrastructure and go towards building some of the things that we've talked about really, really change the world, right? Like coordination platforms that allow us to work on rebuilding the incentives around climate, mutual credit systems, peer to peer lending and insurance programs, right? These are, these can be fundamental Internet native public goods that can scale to every single user. And we're close. We're actually now finally, for the first time, very, very close. This is in a nutshell what Everclear is doing. We are trying to build a, we're trying to kind of accelerate this outcome where we can get to the point where every user can build, in a way, every user can use any application, regardless of what chain it's on. If you're interested in building that or if you're interested in this outcome, definitely come and talk to us. We want to talk to everybody that is building in this space.
00:13:09.670 - 00:13:11.050, Speaker A: Thank you so much.
