00:00:00.720 - 00:00:20.614, Speaker A: Welcome to the second annual modular summit. I'm one of four hosts, Django Unchained. I'm originally the host of inner chain FM, and I'm back for a second time in a row. And I want to welcome Rishabh, the co founder of Socket Protocol, to talk about the future of the modular stack. Welcome to the show.
00:00:20.702 - 00:00:31.534, Speaker B: Thank you so much for having me. Very excited to be here. And, yeah, the conference looks. Looks dope. Very excited to what we have today and tomorrow in the pipeline.
00:00:31.622 - 00:00:37.414, Speaker A: Yeah. And you said that you have a panel at ECC, is that right? What's the topic about?
00:00:37.502 - 00:00:42.966, Speaker B: It's about chain abstraction. Okay, so it's tomorrow, I think. Morning. Morning, yeah.
00:00:42.998 - 00:00:52.818, Speaker A: But by the time that this show comes out, it's going to be past that. So do you want to talk about what you're going to talk about on the panel about soccer protocol?
00:00:52.974 - 00:01:54.000, Speaker B: Yeah. So I think we're kind of going to touch upon as we kind of are in this modular world with, I think we're already at 100 l, two s, or 100 roll ups in the world. And it's increasingly kind of like the number is kind of exponentially going up. So as we head into this world, it's becoming increasingly complex for users to kind of, like, manage. So, for example, every user now has to think about, should I have my USDC on 100 different chains? How do I even think about that? Or do I need 100 different cash tokens? How do I want to go to this application that lies on this xYz chain and start using it? So all of this complexity is something that we need to solve for or in some sense abstract away for the users. That's basically what chain abstract. And that's what we'll be diving into tomorrow.
00:01:54.120 - 00:01:59.088, Speaker A: Okay, so please explain chain abstraction to anyone who's not familiar with that term.
00:01:59.184 - 00:02:31.104, Speaker B: As, as, like these hundreds and millions of roll ups as we're kind of, like, heading into this space, right. What's really happening is these are basically siloed environments, right? Like where applications exist, or even users. Users have, like, these tokens and gas. Gas tokens and all of these things that I was talking about. Right. The thing is, it's very hard for any user to really interact on chain directly. If a user comes in, they really need a scientist.
00:02:31.104 - 00:03:56.888, Speaker B: You're literally wearing the NASA uniform. You really need NASA engineers to really interact with on chains as it's becoming so complex over time. Of course, this is not something that normal users who are just used to using applications and single clicks and everything without having these complexities go through. So the idea of chain abstraction is today, if users like ourselves are exposed to 500 or 500 different variables, so if you even just want to bridge from one chain to other to another, you're basically exposed to two rpcs, two gas tokens, then you have to, it's not cost for you, then it's like gas cost on one chain, then there's a bridging cost, then there's a gas cost on another chain, then there's bridge, then there's like swap costs. The number of variables are increasing and increasing. How do you basically boil down all of these different variables into some global level block space interaction view for users? So instead of 500 variables, the users are just exposed to one or two or three most important variables for them, maybe cost or security or speed or whatever have you, and they just kind of like care about that, and they just interact in this global block space paradigm without having to worry about what's really under the hood.
00:03:56.984 - 00:04:15.146, Speaker A: Yeah, without having to worry about which chain am I on. Is my transaction going to through going to go through if I'm on this RPC versus the other RPC, one doesn't work with VPN, one does. So it's a lot more complicated for the average user today than it was even a few years ago.
00:04:15.258 - 00:04:45.998, Speaker B: Exactly. So application, like how we think about it is application and users are coming closer together. Right now, applications are somewhat buried with the chain itself, and that kind of just increases that complexity. And now application and users come together, and it's really kind of like going into web two experiences so far. Caster is like one great example. You don't even realize that farcaster is on chain, but every application needs to go in that sort of a direction.
00:04:46.134 - 00:05:02.142, Speaker A: Gotcha. So in which part of the chain is it being abstracted? It sounds like you're saying you're abstracting away the user and application layer from the underlying chain consensus layer.
00:05:02.286 - 00:05:30.298, Speaker B: Like I was saying, there are 500 variables when you use chains today. There are some variables that are extremely important, some variables that are not as important. So, for example, RPC's gas tokens, not as important. Security properties important. Right. So the idea is to basically push to the user things that are important for them and hide away or abstract away things that are not important to them.
00:05:30.354 - 00:05:32.790, Speaker A: Okay, is it an interface level thing then?
00:05:33.210 - 00:06:12.334, Speaker B: It's a protocol level thing. So it's how protocols are built. So like just going deeper. So there's this like, global interactions that we want users to do, but the fragmentation really exists right. So like I was saying, users don't really interact with chains directly. So what will happen in this world and how we are kind of like approaching this is users will send, let's say a signed user request right to the system. And now instead of interacting on chain directly, we'll have like these specialized off chain entities in the middle who will compete with each other to be, to, for the right to execute these transactions for users on chains.
00:06:12.334 - 00:06:55.290, Speaker B: Right? So when a user signs, these entities will come in and they will think, okay, what is the best way to really execute these, these transactions or user, user requests for users on chain? They will execute that. But we basically provide something like a control mechanism because you want to control the behavior of these agents. So for example, if security is important to you, you want these agents to kind of like do these transactions for you in secure manner. So you can control all of this by this mechanism that we call MoFA, modular order flow auctions, which allows users or developers to basically config how.
00:06:57.430 - 00:07:18.842, Speaker A: I see it now I'm going to infer what architecture looks like based on what you've told me. And so there's this off chain almost mempool, I suppose. So this off chain mempool has an auction system that then the operators bid on to then process the transaction and put it on a blockchain.
00:07:18.946 - 00:08:11.234, Speaker B: Yeah. The idea is about the global layer, which is a great inference here, which is so far every chain has its isolated execution environments. Even when we talk about cross chain, for example, that operates between the chain here, we are basically operating at a global level with a view of all the roll ups under the hood. And once user sends these user requests, these can be executed across all of these chains. And all the execution and settlement happens on chain itself. So on chain agents are just, you employ these off chain agents in some sense, they're fiverrhead, fiverr folks who users kind of like employ to put these transactions on chain or handle these complexities on chain for the users.
00:08:11.362 - 00:08:15.770, Speaker A: So who actually is able to act as the operator in this offshore network?
00:08:15.850 - 00:08:56.438, Speaker B: That's a great question. Anyone? So we are basically making this system permissionless. What that means is, and here's an interesting part, there are off chain actors that already exist in transaction lifecycle today. So, for example, when we talk about account abstraction, there are bundles and pay masters in a roll up world. There are sequencers, then there are like market makers, searchers, validators and so on and so forth. Everyone can come in and participate in this layer, right? And that is what's really interesting about it. So, for example, think about a shared sequencer who also is like a market maker or who is coordinating with a market maker under the hood.
00:08:56.438 - 00:09:30.568, Speaker B: That shared sequencer can. Let's say that you're on three chains that share sequencer can give you, like atomic swaps of sorts on all the chains that the share sequencer supports. So you start with op on optimism and you want to go to arbitrum and let's say this shared sequencer and market maker entity exists there literally in the same second, you basically complete that swap where this shared sequencer can give you arbitrary on this chain and claim op from you on this chain, and it's all super seamless for you.
00:09:30.744 - 00:09:36.664, Speaker A: And so you're basically scaling up that model to more of a global network.
00:09:36.792 - 00:10:33.138, Speaker B: Yeah. So we are basically bringing all of these off chain agents together at this global network level and having them provide all of this great stuff. So for example, just as an example of this global paradigm, so we kind of release this mechanism. We propose this mechanism called magic spend. So today, as a user, right? Like when you go to your wallet, this is the most irritating part of, like, my day when I open my wallet and I see five different USDC on five different chains, right? So think about like, you have three chains, 100 USDC on three chains, and you want to buy mint pudgy penguins on Ethereum. Just as an example, right? The only option today that exists is you have to bridge USDC three times from three different chains. And then you accumulate funds on this chain and then you are able to mint the NFT.
00:10:33.138 - 00:11:30.454, Speaker B: This is an awful experience, right? So we kind of like, released this proposal called magic Spend, which can be built on top of socket, which basically allows you to achieve one global balance, global aggregated balance, which is 300 USDC. And you can use this aggregated balance on any chain instantly. So what will happen is when a user wants, like user wants to mint the pudgy, the user will come and sign the user request to this global layer. Like I was saying. Now this global layer has paymasters, for example, or, you know, like liquidity providers. Now these liquidity providers can use their own liquidity, mint the pudgy penguins for the user and give that user the NFT they wanted instantly. But then later on, go in this fragmented world themselves and claim 100 USDC from all these different chains that users held those 100 USDC.
00:11:30.454 - 00:11:39.214, Speaker B: So for the user, it's all global at a global level. But these operators are existing at this fragmented level.
00:11:39.342 - 00:11:53.474, Speaker A: Understood. That makes total sense. And it's a very valuable service. So then how do the operators who are providing this service get paid or subsidized for doing it?
00:11:53.602 - 00:13:03.024, Speaker B: Yeah, as these user requests come in, these agents basically, or these operators are basically finding value in different ways and in different shapes and form. So this value is basically, let's say the most simplest value could be fees. So if they're executing a swap, they could have a fee on top that they could charge. Otherwise they could achieve efficiencies in the market that do not exist right now. So, for example, just bundling things together into like, gas for gas optimization is like the simplest form of efficiencies it can go to as complicated as extracting MEV from all of these transactions and then passing that back to users and application layer, basically. Right. So, yeah, all of these kind of like, efficiencies exist in the system that these agents can basically absorb and pass that value, keep some of that value to themselves, and pass like a majority of that value to these applications and users.
00:13:03.112 - 00:13:34.734, Speaker A: Interesting. Okay, so yeah, what I'm hearing is we've gone through the phase of disaggregation and it's so spread out, basically. And now with socket protocol, we're entering phase of reaggregation. So that makes sense. And is this global network of operators competitive? Are they competing each other on fees? Who could provide the fastest service and lowest fees?
00:13:34.902 - 00:13:57.574, Speaker B: Exactly, exactly. So the idea is that, so there's no chain in the middle. Right. Like, we don't want to build another chain to solve chain abstraction. Right. So yes, these agents are competitive, like you mentioned, for the applications to be able to define what's important for them and how this, you know, like how should they compete or what should they compete on? Like you mentioned. Right.
00:13:57.574 - 00:14:11.278, Speaker B: They could compete on cost, they could compete on latency or like speed. Right. Like, so the idea is to kind of like open the system so that these agents can compete for whatever is most important for applications. Right.
00:14:11.334 - 00:14:33.330, Speaker A: Got it. Okay, perfect. Well, this is exciting. And I look forward to this new frontier of aggregating all the different roll ups now that there's going to be tens of thousands of roll ups in just a few years. We'll see about that. Well, if you're looking forward to learning more about socket protocol, visit our website.
00:14:33.630 - 00:14:39.470, Speaker B: Look up our docs, socket tech, and. Yeah, and you should find everything there.
