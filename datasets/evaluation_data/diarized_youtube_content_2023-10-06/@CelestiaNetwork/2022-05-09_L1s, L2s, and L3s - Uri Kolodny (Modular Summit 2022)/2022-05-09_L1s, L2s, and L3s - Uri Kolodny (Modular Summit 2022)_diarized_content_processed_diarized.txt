00:00:03.500 - 00:00:51.730, Speaker A: So from layer one to L2 and on to layer three. Hi. So first there was nothing, right? We were all wondering aimlessly. And then Satoshi showed up, and some people were doing some useful stuff, but not many. And then Ethereum showed up few years later and with this beautiful concept of, for the first time, allowing general computation on a public ledger. And that was very exciting for a lot of people. And this provided two massive benefits and delivered as promised, unlike many, many other projects, truly decentralized network and a secure one.
00:00:51.730 - 00:01:40.500, Speaker A: So delivered on security and decentralization. So that's good. It failed massively to deliver on scale. And the year is 2022 and repeating the same numbers and 15 TPS and the whole moving from 10 million gas per block to twelve and a half to 15, the gradual erosion there around decentralization and the high tech efforts involved in launching an EVM compatible chain with 150,000,000 gas per block or one and a half billion or 50 inch mazillion. But scale wasn't provided. So L2 s were born. And so L2 was introduced as this new concept that conceptually says, let's try and solve scale.
00:01:40.500 - 00:02:20.972, Speaker A: And of course, the base layer, or Ethereum, was retrospectively renamed layer one. And we came on the scene in the middle of 2020, our first main net deployment with Starkx, which is a scaling service. It's a SaaS business that supports a bunch of use cases and that does solve scale. We'll give a few examples in a second. We started out with Validium, where data is stored off chain. And this is very pertinent, an event hosted by Celestial. We think that data availability is a massively, interesting design space, and we'll talk about that in a second.
00:02:20.972 - 00:03:07.530, Speaker A: But we launched StarkEx in validity mode and in validity mode. And we launched StarkEx in roll up mode. One is with off chain data with a data availability committee. The other is with on chain data. And as of this week, we have a new mode called Volition, where the choice whether data resides on chain or off chain is actually made by the user, not the application at the single transaction level. Okay? So the nice thing about these Starkx deployments is that they actually achieved scale. To give you some numbers, Starkx over the past year has settled over 150,000,000 transactions on Ethereum, over half a trillion dollars.
00:03:07.530 - 00:03:53.530, Speaker A: In terms of scale, we've reduced, say, dYdX's gas per transaction from 250,000 300,000 gas per transaction to 480 gas. So a 700 x reduction. We're talking about tens of millions of transactions on Ethereum, Mainet. This isn't crypto Twitter, and this isn't some test bed. And for so rare and immutable, for example, we reduce the cost of minting NFTs from about 200,000 gas per mint to less than ten gas per mint. So a 20,000 x reduction. So scale, that was demonstrated in a very sort of powerful way.
00:03:53.530 - 00:04:34.640, Speaker A: But a few things were sort of not achieved in the process. So first of all, this isn't general purpose. Starcark supports a bunch of use cases out of the box. So payments and transfers, spot trading, minting and trading of NFTs perpetual contracts. Now a new use case called DeFi Pooling. There are actually folks in the crowd here building a business around that, but not general purpose and not composable. You could think of these dark X instances as these islands run by these businesses dYdX so rare, immutable no composability.
00:04:34.640 - 00:05:07.100, Speaker A: So this beautiful vision of composability was not achieved and of course not permissionless. You have to sign a contract with us. There's an actual legal document in place. So all these things were not achieved. Now for Starkx we developed a programming language called Cairo. There were about five druids on the planet who could take a given computational statement and translate that to a set of polynomials, all of them on the Starkware payroll. Guess what they were terrified of their own occupation.
00:05:07.100 - 00:05:54.332, Speaker A: Because when you said how about we modify the business logic from this to that they said well let's not do that anytime soon, okay? Or maybe the other guy can do that. I don't want to touch the uranium and the core of this nuclear know. It's just too dangerous. We need a programming language. We need to turn this from Sorcery into just plain good old programming. And that's when Cairo was born and Starkx is powered by Cairo. Now the minute we had Cairo and we said this thing is becoming increasingly higher level, increasingly more secure just by merit of sort of being battle hardened, the obvious idea was to say, well let's externalize this to everyone everywhere.
00:05:54.332 - 00:06:34.696, Speaker A: And so StarkNet was born. We announced this in January of last year. The public testnet went live in June of last year and the Alpha went live on Ethereum Mainet in November. And it's getting a fair bit of attention in the ecosystem these days. And this does give, it gives general purpose. It has composability. Well right now, much like our friends at Arbitrum and optimism with the proverbial crutches, the first phase of the network is in fact permissioned.
00:06:34.696 - 00:07:30.252, Speaker A: We want to make sure that the whole thing doesn't fall apart, but the intent is within a few months time to make it truly permissionless. The public testnet by the way is permissionless for both deployment of contracts and sending transactions to the network. So all these things were achieved, but still stuff was missing. Okay, what was missing? So first of all, scale is never the thing where no one ever said okay that's perfect, that's enough scale for me, thank you very much. Right. Bandwidth being sort of the obvious example, but beyond that I think it's control and privacy being one example of control. So how did this whole thing sort of evolve in our minds? How did this realization evolve in our minds so often when the narrative of these things.
00:07:30.252 - 00:07:57.824, Speaker A: You come in and you say, well, we thought about A and then we realized B. And then we said, C is really a forced move. Reality is far messier than that. And the reality for us was that a particular project came and said, we want to do derivative trading. We're an exchange. And we said, that's terrific. We can build for you something like what we built for dYdX, perpetual contracts.
00:07:57.824 - 00:08:19.736, Speaker A: And they said, no, we want every form of all sorts of derivatives. And we said, well, that's terrific. Go do whatever you want on StarkNet. You don't need our permission for anything. And they said, well, the problem is that we're an honest to God sort of regular exchange. And there are legal contracts, God forbid, with banks on the other side. And those are denominated in that pesky.
00:08:19.736 - 00:09:09.448, Speaker A: Fiat called us. Dollars. And we can't have revenue coming in in dollars and costs fluctuating with gas prices. They said, if this network of yours is anything as successful as you expect it to be, you haven't sort of invented new physics. This is going to supply and demand is going to dictate the prices of gas here, and we may not have a business. And so at that point, we said, well, how about you run your own instance of StarkNet? Okay? So think of this as a wall garden. And the beautiful thing about these metaphors is the minute you have the metaphor and you start using it, it becomes a very sort of relatable way to sort of process these ideas.
00:09:09.448 - 00:09:47.044, Speaker A: So we started talking to all sorts of folks about this, and it turns out that this concept resonates in a very powerful way with web two companies. And web two companies, they understand that something massive is happening. Okay? But this Kumbaya view of and excuse the Kumbaya folks here, but of everyone going fully uniswap and it's not going to happen. It's not going to happen. Not because we don't want it to happen. It's just not the way of the world. Companies exist for a reason and economic forces are in play, and all these things will continue to exist.
00:09:47.044 - 00:10:34.264, Speaker A: So control for companies is something that they need. They need this because the regulator requires them or their business partner or their users. That's where layer three was born. Now, the one thing we can immediately do in terms of layer three is move the Starkx instances up there. So what does that even mean? So Starkx? Much like the public StarkNet, the transactions process there, we create proofs. Those proofs are verified on ethereum, on layer one. If instead of verifying those proofs on ethereum, you verify those on the public StarkNet and L2, conceptually, you could say, well, this thing just moved one layer up.
00:10:34.264 - 00:11:18.312, Speaker A: Okay? And that's exactly what we intend to do. This will be in production in a short number of months. The POC in house is already done. And so that's one very interesting thing. But just like the anecdote I told you about the birth of this idea, this will also allow for private Starknets to be born. And privatenets will exist for single companies or for all sorts of consortia of all sorts. And we expect a lot of experimentation to go on there because, say, in the context of data availability, the stuff that Celestia is working on, this is the space where you can knock yourself out.
00:11:18.312 - 00:12:10.570, Speaker A: You can move faster than the public chain, you can move slower than public chain, you can do all sorts of alternative stuff without building sort of the broader consensus that is needed for something like EIP 1559. And we firmly believe that that kind of experimentation is actually critical for this ecosystem to succeed. Okay? In my opinion, if that doesn't happen, then this whole experiment will fade into the haze. So, of course, you can have multiple instances of these things, as many as you want. You would have all these desired properties. You can, of course, recursively apply this and say, let's go higher up if you want. There are, of course, trade offs, right? The final settlement on the base layer gets delayed the further up the stack you move.
00:12:10.570 - 00:13:13.884, Speaker A: And the final step is to basically say, well, just like we're settling on Ethereum, just like there are trade offs in the context of data availability for different applications, so on and so forth, there are going to be trade offs in the context of the base layer. Not everyone and everything needs the security offered by Ethereum. And we think that other layer ones are going to eventually adopt these tools. I think that the salana approach of building more lanes is, well, just like we see with highways that sort of typically ends in tiers, and so they need proper scaling solutions in other layer ones as well. And I think that's sort of the way things will unfold. So this is our view, sort of our story, where we came from, how L2 was born and how we're sort of moving to building out these layer threes in the coming months and years. That's it.
00:13:13.884 - 00:13:15.550, Speaker A: I'm happy to answer any questions.
00:13:24.260 - 00:13:24.880, Speaker B: Any questions?
00:13:24.950 - 00:13:25.484, Speaker A: AHA.
00:13:25.532 - 00:13:31.250, Speaker B: All right, take it away.
00:13:33.000 - 00:13:39.990, Speaker C: Thank you very much for your presentation. At which layer does it stop? How high can you go?
00:13:44.360 - 00:14:14.450, Speaker A: What does it mean, a layer three? In this context, it means that I prove a computation that takes place at layer three. And instead of verifying that proof by a verifier smart contract on Ethereum layer one, I verify it in a smart contract that's deployed on the public StarkNet. Now, you can build this as high as you want at some point. The question is, why are you doing this, sir?
00:14:15.700 - 00:14:22.560, Speaker C: But do you then think that layer three is sort of the general optimization point for layers?
00:14:25.240 - 00:15:02.604, Speaker A: I say this with a fair bit of caution and these things go in waves. Right. So, Zaki, a few years ago, he described basically this notion of these different ecosystems have different names. But Zaki, in 2018, I was new to the space, this view of these autonomous environments and the need for those. He articulated that several years ago. And then sort of everyone went sort of fully uniswap. Composability is the only thing that's the only and when we started servicing dYdX, some of our investors who actually became investors of dYdX later said, the walled garden.
00:15:02.604 - 00:15:30.180, Speaker A: Once again, that metaphor. That's so 1990, that's gone. There are no walls. And it turns out there are walls, and sometimes people want them at different heights, but that's sort of it. It sounds like a human need metaphor. I heard from one of the web two companies, they refer to this as noisy neighbors. I thought that was a cute expression.
00:15:30.180 - 00:15:31.880, Speaker A: They don't want noisy neighbors.
00:15:32.860 - 00:15:33.850, Speaker C: Thank you.
00:15:37.020 - 00:15:40.110, Speaker B: Yeah, I see you. Hold on.
00:15:44.240 - 00:15:49.740, Speaker D: From L1 to L three, what do you think is the most underappreciated impactful economic force?
00:15:52.080 - 00:15:55.336, Speaker A: What is the most underappreciated economic force?
00:15:55.448 - 00:16:22.410, Speaker D: Something that might be decisive. So, say, like in COSE's theory of the Firm, how he identifies transaction costs as leading to large companies and small companies and the dynamics there and why everything might not be decided on an open market. And you might want to internalize transaction costs. So, for instance, do you think that there's something other than transaction costs, such as privacy mev that might be decisive in the l one to L three landscape or the possibility of higher level roll ups that we're not quite paying attention to?
00:16:24.140 - 00:16:54.448, Speaker A: Yeah, I think that the basic statement around this will all exist on a public chain. First it was layer one. Then this will all exist on a L2 period. No modifiers or qualifiers about it. And people will say, well, there is a way to achieve privacy. You can do true ZK roll ups like our friends at Stick have already implemented. Yes, that is true ZK privacy.
00:16:54.448 - 00:17:25.740, Speaker A: But in many use cases, there are all sorts of other grades that are of interest and value and far simpler and computationally more efficient, et cetera. That level of control control is the word is offered in layer three. Now, how this will unfold in terms of additional layers, I have no clue. Beautiful. Thanks.
00:17:26.590 - 00:17:27.900, Speaker B: Any other questions?
00:17:30.190 - 00:17:30.940, Speaker A: Cool.
00:17:37.070 - 00:17:37.482, Speaker B: Hi.
00:17:37.536 - 00:17:54.302, Speaker E: So for projects that are considering deploying on their own private StarkNet or on the public StarkNet, beyond just having the scalability primary reason that you discussed, what are the specifications and factors where you would push a project towards one or another?
00:17:54.436 - 00:18:44.080, Speaker A: So I'd like to think that we don't push them, meaning that we're truly agnostic. And I think the intent is to build a software stack that turns that into reality, meaning it would be perfectly fine for you to spin up your own private StarkNet. And then if one day because you've concluded that composability for your business is in fact not terribly important. Interoperability is good enough, you don't need the synchronous calls, the async stuff is fine. And in fact, you have a beachhead. You exist in layer three, but you have a beachhead, which is your smart contract on L2 for the stuff that you do want to be composable. And then your business changes and you say, well, I actually need to be part of the public network here.
00:18:44.080 - 00:19:13.376, Speaker A: And you basically plug the logic. Everything is implemented in Sargnet contracts. You can, at the switch of a button, become part of the public. So the intent is to reduce those switching costs to the greatest extent possible. Hey, Rory, thanks for the talk. Could you talk a little more about.
00:19:13.478 - 00:19:18.152, Speaker D: Recursive roll ups and hyperscale when it comes to L two and the limitations that exist?
00:19:18.236 - 00:20:03.740, Speaker A: Sure. So recursive roll ups are actually intimately tied to this concept. And I'll explain the concept of layer three and I'll explain why right now, for example, we're minting batches of 600,000 NFTs in a single proof, which is a fair number of NFTs, but that requires reasonably powerful machines in the cloud to do so. And that is, of course, conceptually. This sort of goes against decentralization. You'd like to sort of move to lower requirement on hardware. You'd like to cut down latency.
00:20:03.740 - 00:20:31.640, Speaker A: Right. When I batch 600,000 transactions, two things happen. A, it takes me time to batch 600,000 transactions, two transactions came in and another two, it's going to take a while for 600,000 to accumulate. Okay? That's one thing. The other is that once I have 600,000 transactions, proving that is a very big computation. So generating that proof takes a long time. All this builds up, adds up to significant latency, which affects the UX.
00:20:31.640 - 00:21:15.924, Speaker A: So for recursive proofs, what you could do is you can take, let's say, 100,000 transactions, and instead of proving 100,000 transactions in one proof, I'd say let's split it up into 100 batches of 1000 transactions. And so we now can create in parallel the emphasis here is an in parallel by much smaller machines, 100 proofs. And these proofs from a computational they prove the same computational statement. I've verified the transactions in this batch and they all abide by the logic that we want to enforce here. Now you have 100 proofs, and now is the recursive step. Okay. Now is when you say, well, let me prove something else to you, I'll prove something that actually has nothing to do with the application specific logic.
00:21:15.924 - 00:21:56.550, Speaker A: I'll prove to you that I have verified 100 stark proofs for these hundred proofs that I've generated. Okay? And now I have a single sort of master proof. And of course, you can do this in multiple steps. So this is how recursion would work and this is something that we intend to deploy very, very soon. This is my stand up meeting in Israel. Now, reminder so this ability is, of course, needed in order to support the verification of proofs generated at layer three on the public StarkNet. So these things sort of go hand in hand.
00:21:56.550 - 00:21:59.910, Speaker A: Thanks. Cool.
00:22:01.740 - 00:22:06.890, Speaker B: That'll be the last question, by the way. We have to move on to the panel. Cool.
00:22:09.100 - 00:22:45.700, Speaker F: Thanks. So in your diagram, you've got L3s. S is sort of the hyperscale point. But to the question you answered just earlier, if composability sort of continues to be a thing very valuable, more of these private Starknets start to move on to L2. Do you think that's a concern in the long run that you will ultimately need to make the L2, the public StarkNet sort of ultimately be the place for all the throughput? Instead of effectively having this sort of inverse upside down pyramid where you've got slow ethereum, then public stock net, then hyperscale at the top, would that middle layer become really fat?
00:22:46.440 - 00:22:50.816, Speaker A: Fat and what's? Yeah, I think I had you till.
00:22:50.848 - 00:22:51.624, Speaker F: Just the very end.
00:22:51.662 - 00:23:06.684, Speaker A: The subtext. I don't like it. How about thick, heavy bodied? Right. An, asterisk he's referred to as heavy bodied. So I'm not sure I understand the fat. In what sense?
00:23:06.802 - 00:23:13.870, Speaker F: As in burden with a lot of computation. Correct. Because of the desirability of composability at the L2.
00:23:14.960 - 00:23:49.030, Speaker A: So I don't know what the equilibrium will end up being. So for I for one, I think we at Starquare are sort of of the opinion that ethereum eventually will be the place where proofs are verified, period, that everyone else will be priced out of the market like the actual transactions that they want to conduct there. Now, whether there will end up being a public StarkNet whose purpose is to support the layer threes versus a public StarkNet, which is sort of geared at composability, I don't know. We'll see. Thank you.
00:23:51.000 - 00:23:55.276, Speaker B: All right. Thank you. It all right.
00:23:55.378 - 00:23:56.890, Speaker A: Thank you very much, everyone. Cool.
