00:00:00.330 - 00:00:35.750, Speaker A: You. Hello. Hello. Good to see everyone. Welcome to Modular Summit 2023. About a year ago at Modular Summit 2022, we hosted an event in Amsterdam where we tried to tackle a problem that has plagued us in the blockchain space for over a decade, which is this problem that monolithic blockchains don't scale. And we've ended up in a constant, endless cycle of new monolithic layer ones, every single cycle that fizzle out and don't live up to their promises.
00:00:35.750 - 00:01:39.046, Speaker A: So, to recap, I'm going to explain what modular blockchains are and what their benefits are. Then I'm going to talk into a little bit about the progress of the modular stack today. Some open problems, and what the destination is that we should all be aiming for. So when the bitcoin white paper came out in 2008, it introduced a model of blockchains that kind of stuck around for the next decade, which is this monolithic model of blockchains, this monolithic era, this model where a blockchain couples consensus and execution. A model where every user has to execute every transaction of every other user, which we all know doesn't scale. A model that limits flexibility, because you're enshrining specific execution environment and you can't experiment with different execution environments. But in 2019, I proposed lazy Ledger, which is like a very simple blockchain that only does consensus and data availability.
00:01:39.046 - 00:02:47.054, Speaker A: And in that model, you have a very roll up centric model, where you have a data and consensus layer that is only responsible for consensus, and then an execution layer, which could be a roll up that posts its blocks to a date layer and inherits consensus and security from the data layer. And this basically ended up in a modular blockchain ecosystem where consensus and execution are no longer coupled. So what are the layers in a modular stack? Let's very briefly go through them to recap. So the first layer is consensus, that's the layer at the bottom. And with consensus, provides an ordering over arbitrary messages. So developers input messages or transactions into the system, and the consensus layer simply decides what the order of those messages are. And then once those messages have been ordered, users need a way to verify that they've actually been published to the network.
00:02:47.054 - 00:04:26.174, Speaker A: Because what could happen? A validator could execute a block or data withholding attack, where they only publish the metadata of the block header, but they don't publish the actual data. And in that model, with that attack, no one will know what the actual ordered messages are, and then no one will know what the state of the chain is and be able to generate fraud proofs or progress the chain. And interestingly, if you actually go back to the original bitcoin white paper, the proposed solution to the double spend problem was this idea of a timestamping server, and I'll just read that out here, which is a timestamp server works by taking a hash of block of items to be timestamped widely publishing the hash, such as in the newspaper or Usenet post. The timestamp proves that the data existed at a certain time, obviously in order to get into the hash. And this is basically describing what the core property, or what the core thing that a blockchain provides are, which is ordered data that is made available and timestamped. And if you have this basic primitive, which is a timestamping server, which is basically a consensus and data layer, then you can pretty much build anything on top of it using any kind of execution environment. And because if you understand that data availability consensus are basically the core primitives of blockchain, we figured out scalable ways to kind of scale that using a primitive called data availability sampling.
00:04:26.174 - 00:05:22.850, Speaker A: With data availability sampling, you have an over 99% guarantee that almost all the data is available by only downloading a very small portion of the data. And with this primitive, that basically means that we don't have to live in the world anymore, where users have to download every other user's transaction. And so now you can scale blockchains more directly in a more practical way. And then finally, or, well, not finally, there's something after this. But you have the execution layer, and the execution layer sits above the data and consensus layers. And what the execution layer does is it takes a bunch of transactions and it outputs a state. So for example, those transactions could be payments, and the state is what people's account balances.
00:05:22.850 - 00:06:10.798, Speaker A: And that's what a roll up does, for example, or layer two does. It provides an execution environment to process transactions and to create a state commitment to what people's balances are. And in a modular blockchain model, the consensus and execution layers are decoupled, as I mentioned. And then finally you have the settlement layer. And a settlement layer is basically just like a special case of an execution layer that is used to bridge other execution layers or roll ups together. So for example, if you look at Ethereum as an execution layer, you have on chain light nodes for roll ups. On Ethereum, which act as bridges between roll up and Ethereum, you can bridge assets between them and they can verify.
00:06:10.798 - 00:07:07.024, Speaker A: And the on chain light client accepts block headers from the roll up. And verifies fraud proofs or ZK proofs. So putting that all together, like, what is a modular blockchain? There's something wrong with the slides. Well, what is a modular blockchain? A modular blockchain is basically a blockchain that fully outsources at least one of the four components of a blockchain. As I mentioned, that's either consensus, data availability, settlement, or execution. Okay, there we go. So what are the benefits of modularity? The first one is obviously scalability.
00:07:07.024 - 00:08:08.600, Speaker A: So for several reasons, I'll just go to two reasons here. The first reason is that, as I mentioned, users don't have to execute the transaction of every other user, because now roll ups, because they have their own execution environment, that means they have their own dedicated computational resources. Like if you spin up a roll up, the roll up has its own computational resources. So even if another roll up gets busy or has high computational requirements, that's not going to affect every other roll up in the system. And secondly, thanks to data availability sampling, you have this loop where the more light nodes you have, the more block space you can have in a secure way. Because the more light science you have, that is sampling, the more data they can collectively reconstruct and the bigger the block size that you can have. Because in a system that does data availability sampling, the light nodes are collectively storing and making all the data available instead of just like one or a few nodes.
00:08:08.600 - 00:09:35.380, Speaker A: Secondly, you have the developers get the freedom of choice. So with Ethereum, instead of being limited with the Ethereum virtual machine, for example, over the past few years, there's been a lot of new developments and advancements in more efficient and more practical execution environments for different use cases, whether that's for scale or for privacy. There's execution environments that add certain ZK opcodes, and it's not really practical to deploy a new layer, one just to make a modification to an execution environment. And so with the modular blockchain stack, you can now just modify EVM a little bit, add an opcode, and just deploy a roll up for that, instead of having to deploy a new layer one from scratch. And this is also what various projects in our ecosystem have done as well. And you also have different types of roll ups that you can use according to your use case, like sovereign roll ups, settled roll ups, validiums and celestiums, and specifically with sovereign roll ups are an interesting case of roll ups that have kind of gained traction over the past year that effectively give the community of that roll up the freedom to fork that roll up. So you basically get the freedom of a layer one, but without the overhead of a layer one, without needing to create a new consensus network or token necessarily from scratch.
00:09:35.380 - 00:10:20.820, Speaker A: So let's talk about what the modular stack looks like today. And because we've made a lot of progress over the past twelve months, this is what the modular stack looked like a year ago, in 2022. A year ago, it was mostly theoretical. There was various projects in the stack, but it was still very underdeveloped. Ecosystem like Ethereum was the only set on that layer, very few execution layers, not a lot of infrastructure around it. But we've made a lot of progress in the past year, and this is what the modular ecosystem looks like today. We have various new data availability, consensus, settlement and execution environments.
00:10:20.820 - 00:11:41.016, Speaker A: But also, interestingly, we have a lot of new infrastructure that is surrounding that modular stack. We have infrastructure like block explorers, analytics providers, and so on and so forth. We also have a surge in interest in sequencing providers, shared sequencer provider, shared sequencing and decentralized sequencing that roll ups can use that makes roll ups more sensitive, resistant, or more have have better self commitment, finality. And then you have various roll up frameworks which make it very easy for developers to deploy their own new roll up without having to define, to write their own roll up from scratch. Stacks like Opstack, Sovereign Labs, sovereign SDK roll kit, and those stacks make it very easy for people to just write their application and deploy roll up. And then we also have roll up as a service providers that use these roll up frameworks and provide a hosted service for people to deploy their roll ups. So instead of having to maintain your own infrastructure, just like you can go to AWS or Digitalocean today, you can deploy a virtual machine in the cloud in seconds.
00:11:41.016 - 00:12:37.660, Speaker A: In the future, you'll be able to deploy a roll up in seconds with a hosted provider, with your code. And the ultimate goal here from an engineering perspective should be that deploying a roll up, deploying your decentralized application as a roll up should be more easier and more convenient and more practical than deploying a new smart contract. And that's basically what we've seen in web two. Like in web two, if you create a new web application or you deploy a new website, you don't use WordPress usually, or you don't use like a hosted provider, you deploy a new virtual machine in the cloud. You have your own virtual machine because that gives you more flexibility, more scale and more choice. You don't use a shared hosting provider or a shared platform necessarily. In many cases like a WordPress or blogspot.
00:12:37.660 - 00:13:58.232, Speaker A: Finally, we have a various number of new crosschain providers and MeV providing bridging across roll ups but across different frameworks. But the goal of this conference today is to get everyone to make connections and to talk and to discuss the future of the modulus ecosystem. Who knows what's in store for 2024 and what new layers or what new types of tooling and infrastructure that we might have not even thought about today might exist in 2024. Like a year ago, people weren't really talking about shared sequences. Now they're older. Age quick few highlights over the past year in the past few months a few months ago, Opstack was the first kind of ethereum focused roll up framework to add a modular data availability API. And we at Celestia contributed that data availability API and that made it possible to deploy upstack chains using celestia as a DA layer and other daos as well.
00:13:58.232 - 00:14:51.512, Speaker A: And to me this is really the meaning of modularism and not maximalism because this is like an example of different ecosystems working together and interoperating with each other in a beneficial way. We also have manta, which is deploying Opstack roll up based on this interface. And then Caldera has also launched a testnet using this. About a year ago we introduced the concept of sovereign roll ups, which are still controversial in certain communities. But the idea of a sovereign roll up is roll ups don't necessarily have to be a scaling mechanism for l one. They can also just be an interesting and more efficient way to deploy a new blockchain or sovereign chain. Like instead of deploying a cosmos chain, you can just deploy a cosmos roll up.
00:14:51.512 - 00:15:33.172, Speaker A: And a year ago, sovereign roll ups didn't exist. Like there was no implementation of a sovereign roll up. But now we have many projects actually building and working on sovereign rollups, which is really cool to see. We have Sovereign Labs building sovereign SDK. They recently launched an alpha release of Sovereign SDK, which is a toolkit that lets you deploy and create sovereign DK roll ups. We have Eclipse, which is a roll up as a service provider for sovereign roll ups. And we also have Rollkit, which recently was able to deploy the first sovereign roll up on bitcoin, which is really cool because bitcoin has historically been one of the most maximalist communities.
00:15:33.172 - 00:16:16.820, Speaker A: And this is really kind of like when that was published, that was kind of seen as a way to kind of foster cross chain collaboration. We also had dimension releasing the first IBC enabled roll up using the EVM, which is really cool to see as well. And they also have a testnet live as well. But there's many more highlights which I can't list all in this talk. Celestia has a rapidly expanding ecosystem. We also have various applications, including gaming providers, gaming chains. After this talk, I know that Scott is talking from August about the world's engine.
00:16:16.820 - 00:17:24.000, Speaker A: Curio did an interesting demo recently where they run a real time strategy game on a modified EVM roll up on Celestial. And there's many other as well, many other interesting pieces of infrastructure and applications on the stack. So we have made a lot of progress over the past year and we're reaching a selection point, but there's still like a lot of open problems that we need to solve to get to where we need to go and to really make, to really defeat maximalism and to have a positive sum mindset instead of a zero sum mindset. And this conference is meant to kind of like foster these conversations and try to discuss these open problems and progress. The so one of the open problems is ux for bridging. There's still a lot of work to improve ux and bridging, especially in the cosmos ecosystem users need multiple feet tokens, for example, to bridge across chains. I know there's various people also working on that, like Skip.
00:17:24.000 - 00:18:14.872, Speaker A: I think they recently did a demo recently. You can go IBC fun. It's a website that has a demo. We also need tooling for custody and payment systems for roll ups, and to access resources across the stack. So for example, you might have a roll up that needs to pay the DA layer or settlement layer. And there needs to be a way to kind of hold these different tokens or do exchanges or do token exchanges in an easy way for developers without them having to maintain too much like wallet infrastructure and pricing mechanisms and so on and so forth. It's kind of like a good problem in a way, but there's a lot of choice for developers, and that can be very hard for the developers to understand.
00:18:14.872 - 00:18:58.388, Speaker A: The trade offs between those like different execution environments, different settlement layers, different DA layers. And so I think we need to do a better job at trying to educate developers or explain the trade offs between different components in the stack. We also have a lot of dependencies across the stack, like a DA layer has to connect to an execution environment and so on and so forth. And there isn't really any common interfaces. Like for example, Opstack has a specific dA interface. Rollgit has a specific DA interface. Tendermint has an ABCI interface that interacts with cosmos.
00:18:58.388 - 00:19:39.024, Speaker A: And these dependencies can be very hard to maintain if there's a breaking change in any of these dependencies. So I think we should have some discussion around if there's a way to create some common interfaces or to have better dependency management across the stack. So things are less likely to break when improvements are made. We need better proofing systems or more work on proofing systems. So fraud proofing systems are still underdeveloped because there isn't a single permissionless deployment of a fraud proof roll up, except for field v one, obviously. And then ZK proofing systems are still slow. There's still a lot of kind of optimizations they need to be made faster.
00:19:39.024 - 00:20:49.710, Speaker A: I know there's a lot of work in hardware acceleration and fpgas to make ZK proving systems faster and also privacy. One of the reasons why the current blockchain does not have privacy is because you often need to enshrine it into the execution environment. But now we have an opportunity to do that because instead of having to deploy a new layer, one just to deploy a new execution environment, people can now experiment with privacy enabled execution environments. I know that anoma is going to be talking about some of these topics later today and tomorrow. So what we're trying to achieve, what is the destination we're trying to get to? Let's discuss some of the values of modularism and what we're trying to achieve with a modular blockchain stack. So first of all, users should be first class citizens of the network. This is like an ideal in crypto and web3 that seems to have been forgotten over the past ten years.
00:20:49.710 - 00:21:36.700, Speaker A: The whole point of blockchains and the whole point of bitcoin is that you don't have to trust middlemen, and that includes validators and miners. You shouldn't have to trust middlemen and centralized RPC endpoints and APIs, because that's just web two all over again. If the main way that users are interacting with web two is just two centralized APIs, that's not like fundamentally different to web two. You're just interacting with a database. So one of the things I appreciate about bitcoin is that it has very good light node support, light client support. You can actually install light client on your phone, and that connects directly to the bitcoin network and can get data out of the bitcoin network and without using any centralized API endpoints. So I think we kind of need to go back to this ideal.
00:21:36.700 - 00:22:36.060, Speaker A: And that's why data availability sampling, like clients, are important to allow users to get back to the roots of web3, and to really allow users to not have to rely on centralized middlemen and endpoints, which are prone to censorship and corruption. Secondly, like modularism and non maximalism, is one of the obvious important ideals of modulism. And this is pretty much what this whole conference is about. And the reason why this is so important is because over the past decade, we've been stuck in this endless cycle of new layer one chains, every single bull run. You had Ethereum in 2014, then in 2017, you had eos, Tron, Cardano, and they promised the world. And then 2021, we had Salana and avalanche. And then this time, now we have Aptos and Sui.
00:22:36.060 - 00:23:56.680, Speaker A: But this is not sustainable, because it was creating an endless cycle of new tribes and new ecosystems that are not collaborating with each other. It's a very zero sum mindset that needs to be replaced with a positive sum mindset, where incremental improvements can impact everyone that uses crypto. And we can replace the zero sum mindset with a positive sum mindset by adopting a modular ecosystem or modular stack, where people can. For example, if people make a more efficient execution environment, like aptos and sui have, Solana have, you can just replace that layer in the stack. You can replace the execution environment in the stack without having to deploy a new layer one, because it's simply not sustainable to have a constant graveyard of new layer, ones that are sucking up a lot of funding, but eventually extract value, then fail to get traction. Like, crypto is never going to mature with this cycle. And it's really important that we escape this endless cycle as soon as possible to have a more positive sum crypto ecosystem that actually kind of develops into worldwide mainstream developer adoption.
00:23:56.680 - 00:25:28.592, Speaker A: And finally, one of the important aspects of montanabulism is that communities have the choice to be sovereign. If they want to, they don't have to, but if they want to, they can. And sovereignty is basically the freedom to fork, because one of the fundamental things that crypto and blockchains allow that previous systems haven't allowed is the ability for a group of people with a specific shared goal to kind of thrive through self organization and collective action by effectively having a creating a contract with each other that for the first time does not need to be enforced by physical law or like police or courts, but can be enforced cryptographically on a peer to peer network. Whereas previously, if you wanted to create a shared agreement, you'd have to do so under a specific jurisdiction. But with blockchains, you can kind of bypass all of that and have a direct top level social contract. And the top level social contract gives you the freedom to fork if the community decides that they want to change the protocol rules. So, to recap the three values of blockchain modulism, users should be first class citizens as a network by focusing on light nodes and allowing people to run light nodes.
00:25:28.592 - 00:25:56.910, Speaker A: Secondly, modularism and not maximalism. It's really important that we escape the layer one blockchain monolithic loop. Otherwise crypto will never grow up. And finally, communities can choose to be sovereign because they have the right to fork if they want to. So I really hope that you enjoy the conference and a lot of interesting conversations happen. I'll be around, and many of the celestial team and other teams on the ecosystem will be all around. Thank you.
