00:00:00.730 - 00:00:52.490, Speaker A: Everyone's talking about intense, but I think there's still a bit of an information gap. It's like the early stages of people figuring out and understanding what they are. And the three speakers that we invited today all gave talks at research day in May. And if you haven't watched those talks, I really encourage you to do so. And I don't know if they coordinated this or not, but I would say that they successfully nerd sniped everyone that was at the conference on intense, and something that was kind of something that people were already talking about became really the topic of the hour. And so I'm really excited to have these three speakers on with us today because they each have a really good view. And luckily, we also have Henry from Penumbra, who I guess just joined, and hopefully we can include in parts of this conversation.
00:00:52.490 - 00:01:54.210, Speaker A: I first encountered the idea of intent, so I picked up a copy of the Noma white paper at Cosmoverse last year, and then I read it on the flight home. Or rather, I tried to read it, and I remember the idea of intense stuck out to me as something that was very novel and made a lot of sense, but I only understood at the surface level. And then when I tried to go deeper, I got completely lost. And so I've been learning a little bit more about intense over the coming, over the last few weeks and months, as I think everyone else who's probably on this Twitter space have been as well. But I think the goal of today's Twitter space is to answer the question, WTF are intents and why do they matter? What do people need to know about them, especially all the builders in the audience? And so, yeah, I couldn't think of better guests to have on to answer this. So why don't we go ahead and do a round of introductions from each of you, and then we can dive into the meat of this conversation.
00:01:59.250 - 00:02:20.840, Speaker B: Cool, I can go zucky. Longtime cosmonaut, longtime blockchain builder, co founder of Somalier. Yeah, one of the people. I gave a nice, like, ten minute intense talk at Research day, which I think is fairly digestible. Like, what the fuck are intense talk?
00:02:24.810 - 00:02:55.470, Speaker C: Yeah, I can go next. I'm uma. I'm one of the co founders of Succinct. We're a company focused on more secure and more general interoperability. And I also give a talk at research day, talking about cross chain interop bridging and intense and how it all comes together. And Zaki was actually one of the big original inspirations for my even starting thinking about, oh, that's really sweet.
00:02:56.630 - 00:02:57.940, Speaker B: I didn't know that.
00:02:59.110 - 00:03:08.420, Speaker C: Yeah, it was all from your group chat, telegram messages about intense and being excited. And I was like, oh, yeah, I should look into this.
00:03:09.770 - 00:03:14.550, Speaker A: And then we have the OG nerd sniper of all. Chris.
00:03:16.570 - 00:03:46.320, Speaker D: Well, that is a title I do not deserve. I credit myself only with abstract philosophical nonsense, and then later on, other people assign coherent meanings, and I just get to claim that I was right all along. It's very convenient. Yeah. I'm Christopher. I've worked previously on IBC for the Cosmos project, and I now work on anoma, which does use the word intent, although I guess I'd like to know. We in no way aim to assert a monopoly over that word.
00:03:46.320 - 00:04:05.270, Speaker D: We've been using it for a while because it's a helpful design concept for us. But I think one reason the intent meme is so popular is that it ends up being kind of a way to describe commonalities between a lot of these systems and what they're trying to do in perhaps different, specific ways. So we just want to contribute to that discourse.
00:04:06.970 - 00:04:20.330, Speaker A: Amazing. Okay, so let's jump in. I want to start with the most basic, basic question, which is, what are intents? What would a good definition of intents be, and what problem do they solve?
00:04:24.750 - 00:04:26.170, Speaker B: I'll take a shot.
00:04:28.270 - 00:04:28.874, Speaker A: Though.
00:04:28.992 - 00:05:11.900, Speaker B: So my, my. Okay, so I like to start what problem they solve rather than what they are, because I feel like the best. That's the clearest explanation of what an intent is. Why would you need this? Like, hey, millions of people are sitting there with their metamasks, clicking through transactions happily and using blockchains, and it's great. Three, four years ago, there were hundreds of people using blockchains, and now there's millions. That does seem like progress. Okay.
00:05:11.900 - 00:06:03.606, Speaker B: A lot of this, to me, came from. So similia is this sort of app that's designed. Is this framework or protocol or application for making defi easier to use? Especially, like, complex defi things like providing liquidity on the decks, running, like a leveraged strategy, that kind of stuff. We try to make these more accessible, and I think we've succeeded assuming someone can actually get into one of our smart contracts. And that seems to be the hardest usability barrier that we encountered as we were building sommelier. You start out with a user, and the user is like, I have some coins somewhere. They're like, I have a coin on a centralized exchange.
00:06:03.606 - 00:06:42.898, Speaker B: I have a coin on eth, l one, I have some coins on l two, s. I have a coin on I have atoms, I have USDC on any number of chains. The answer to the question is like, okay, cool. I have these things and they're like, I want to use your app. I want to get the benefits of having my money in real yield eth, turning my eth into more eth. But people are like, how do I do this? All right, now, depending on where you are, you might have to send your money to a wallet on chain. You got to send it to the right chain.
00:06:42.898 - 00:07:08.146, Speaker B: You got to have the right type of coins. You might have to use a dex or a centralized exchange to swap this. You might have to bridge your coins between chains. You have to use the right bridge to end up with the right asset. You might have to use IBC. Inside of cosmos, you have all these different answers. And basically there's been a bunch of problems with that.
00:07:08.146 - 00:07:44.606, Speaker B: One is just like, how do I navigate? It's amazing to me that anyone successfully does remember I was helping last night, someone from the ETH community who wanted to buy a bad kid on Twitter. He was like, how do I buy a bad kid? He's like, this is the hardest problem with computer science. And I showed him some apps and stuff like that, but he just wanted to buy a bad kid. And he had. And he was like, how do I do this? And it was a totally unsatisfactory answer. We have meme coins where large numbers of people come on. They hear about some meme coin, they want to buy it.
00:07:44.606 - 00:08:17.590, Speaker B: It's only available on decentralized exchange, and they lose money to mev bots. They have to know about gas. This is to be like, oh, we built all of this amazing infrastructure, but this is the usability story that we've presented people with. And it's clearly a though, like, this is the problem. The problem is we don't have good enough Uis. We don't have good enough UI frameworks, meaning we don't have enough services. We have all these missing pieces.
00:08:17.590 - 00:08:41.866, Speaker B: And so we tried to build that for civilia. We tried to build routers to route people into our contracts. We spent lots of money on this. They kept losing money on slippage. It's been a never ending nightmare. There are certainly better routing frameworks from teams like Enso coming out, but it's pretty difficult. And then when you add the cross chain piece to this, it becomes like an unsolvable nightmare.
00:08:41.866 - 00:09:38.154, Speaker B: Okay, so that's the problem statement. The problem statement is, all right, we built all these amazing blockchains. They're scalable, they're fast. They could handle large transaction volume, but no one could use them. How do we solve this? And the idea is that we could build infrastructure where people could say, I am willing to trade X for Y. I have some USDC and I want to buy Pepe and I'm willing to trade it for at least I want a minimum of this much pepe for my USDC. They would be able to sign a statement and then if and some off chain actor figures out how to get Pepe into their account, provides a proof, like over a bridging protocol, something that is identifying your knowledge, proof, something like that that is available to a smart contract.
00:09:38.154 - 00:10:02.920, Speaker B: Smart contract reads it and says, yes, as promised, you provided this much pepe, you can claim the user's USDC. And the idea is the user doesn't need to know about gas. And that if we can construct these things correctly, maybe the user gets a refund for some of the mev that they created. That's kind of a simplified description in my mind of what intents are.
00:10:03.770 - 00:10:07.050, Speaker A: Was that financial advice, by the way, buying Pepe?
00:10:07.550 - 00:10:30.820, Speaker B: No, I have no opinion about what meme coin. I am bad at trading meme coins. I don't know want. I do believe that that is a legitimate use case for a blockchain. I do believe that. I think we should meet our users where they are. And if our users cannot buy their pepe and that's what they want, we have failed them.
00:10:32.310 - 00:10:58.826, Speaker A: Absolutely. Okay, so it sounds like that's a really good motivation for intents. It sounds like you see it as a way to solve a lot of user experience problems that coming from a completely different angle than the traditional approach, which is like, we need to build better wallets, et cetera. It's like, well, actually just build a system where the users actually don't interact that much with the guts of blockchains and someone else doesn't put it on.
00:10:58.848 - 00:11:00.460, Speaker E: The map, but that's the same.
00:11:00.910 - 00:11:25.060, Speaker B: Just to quickly say this is like, I become frustrated with the idea that ultimately you're describing a wallet that basically knows everything that a market maker knows, knows about tracking prices. It's tracking gas, it's tracking arbitrage opportunities. It knows fair prices for. And like, I'm skeptical of anyone's actual ability to build.
00:11:30.230 - 00:11:34.038, Speaker A: Okay, so Henry, you sound like you want to say something, but I guess.
00:11:34.204 - 00:12:21.934, Speaker E: I was just going to jump in and say. Your column, I think draws to this question of like, okay, what is a wallet? Right? And one of the things that I think is kind of interesting to do in this ecosystem is like, imagine you're like looking at it and you just kind of defocus your eyes and let things blur a little bit and see what are the areas where things blur into other things. And how could the boundaries, if you take any component of the system and zoom in on it, there's going to be a bunch of complexity there. And if you zoom in, you can say, oh, this has the XYZ internal parts.
00:12:22.062 - 00:12:22.606, Speaker A: Right.
00:12:22.728 - 00:12:35.910, Speaker E: But it's an interesting exercise to kind of let your vision Blur, lose sight of what are the boundaries between these different things, and how could those boundaries be possibly reconstituted.
00:12:36.070 - 00:12:36.780, Speaker A: Right.
00:12:38.110 - 00:12:59.490, Speaker E: What is a wallet even? And could it be that if you build this whole kind of intent settlement system where, oh, well, it turns out that means you're effectively building in the capabilities of a market maker, maybe that actually just is sort of a part of this bigger wallet assemblage.
00:13:03.430 - 00:13:33.180, Speaker A: Interesting. I mean, it sounds like the common through line there is that we need to kind of take a step back and reevaluate some of the base assumptions of how we want to build blockchains and what the different components do and should be responsible for. I want to turn over to Chris and Uma to also take a stab at describing what are intents and why they.
00:13:35.230 - 00:14:10.498, Speaker C: I can, I can also take a shot at it. I think Zaki motivated the reasoning for him getting into thinking about this really well. And I also had a really similar experience, so it's succinct. We're trying to do better, more secure interoperability. And we are fundamentally, right now, building this really secure messaging protocol. And for myself, to operate our protocol, we need to run relayers across a bunch of different chains. And I would say as a fairly sophisticated user, I would dread managing all my balances across all these different roll ups.
00:14:10.498 - 00:15:18.278, Speaker C: And that was me. As a fairly sophisticated user, there's all these problems around which bridge should I use? Which is the fastest? Like where do I go for each different chain? And then I think moving towards this app chain world or app roll up world, the problems get so much worse because it's unrealistic to expect any one company to maintain all these integrations. So say you have a bridge aggregator coming out. Well, how are they going to maintain this really long tail of integrations? And it feels like fundamentally something's broken here. I think in terms of defining or starting to define what is an intent, I think we've talked a lot about the problem, and I think the fundamental problem is today transactions are very declarative. So if you think about something like, I want to buy a particular coin on uniswap for this price, that's saying I'm going to specify the venue at which I trade, I'm going to specify which chain I trade it on, and I'm going to specify my other parameters. And in this very multidomain world, say you're trying to get the best execution price across a variety of venues.
00:15:18.278 - 00:16:25.220, Speaker C: As a user, you shouldn't need to specify like, oh, I want to do this much of a trade on this roll up and this much of the trade on this other roll up, because the liquidity is better for these reasons. And so I think an intent is where a transaction is declarative, and specifying all this stuff, like what venue, want to do stuff on how much you exactly want to do an intent is like saying you're specifying what you want your outcome to be. So basically like, I have some coins now, and I want these other coins like I want my pepe coin, and someone else basically figures out the best venues, the best execution, the timing, wherever that is, and then they do all that stuff for you. They're a sophisticated actor, and then they help fulfill your intent. So I think going towards kind of a definition that's, I guess, not very mathematically precise, but more like philosophical is transactions are declarative and the onus is really on the user, whereas intents are users expressing what they want the end state to be, and then other people figure out how to get there.
00:16:27.590 - 00:16:54.170, Speaker A: It's interesting that I feel it sounds like a lot of the people who are most bullish on intents or have encountered them are the people who have worked most closely with cross chain systems. And, like, we can talk about that more later on. But it's interesting to notice that, know, I feel like maybe people who know live on one chain don't experience these pain points quite as acutely. Chris, do you want to take a stab at defining.
00:16:56.270 - 00:18:23.346, Speaker D: So, you know, I think Zaki and Uma did a great job going over sort of the practical UX reasons why you might want to think about system design this way. And I am a big fan of what, you know, zooming out and blurring your eyes or so to speak, so to do a little bit of mean. Personally, I guess I came at the concept of intense originally from just thinking about what coordination systems do and the OG coordination system that we all exist under the aegis of is natural language. Right? And if you think about one of the enoma papers, which contains lots of mistakes. Please don't take it as canon, but I think we use the example of hunters trying to encircle a deer, which is maybe not something many of us do in this conversation, non vegetarian. But like in principle, if you are trying to encircle a deer with other hunters, what you need to communicate with them in order to coordinate your action is a bunch of preferences and plans, right? You need to communicate all of these internal states that aren't visible in the external world, which you all observe. So you're communicating something about internal states, and in particular you're communicating what you want and kind of what you are able to or plan to do so that you want to kill this deer or this other deer, and that you're able to shoot this arrow or move in this direction.
00:18:23.346 - 00:19:22.458, Speaker D: Your current position is x, right? Stuff like this. So typically those in just English, as far as I know, would be referred to as intentions or something like this, or a shortened version, intents. So that is how I got the word, at least personally when I was writing with it. I think different intents can seem probably nebulous and abstract and maybe even like marketing. And I'm sure that sometimes it is, that as all words are. But to me, to kind of generalize over what people seem to be using the term to refer to, I would say intenser, are commitments that are credible commitments to preferences over the state space of a system. And there are different systems with different state spaces, right? So like ethereum or ethereum plus some roll ups or celestia or some cosmos chains, you can kind of define the boundaries of the system in different ways.
00:19:22.458 - 00:21:07.342, Speaker D: And then to say, to view that system from an intent centered perspective is to say that, okay, intents defines some preferences a user has over the state space of future possible executions of a system. And then what we want to do in matching intents and settling is to find ways that we can satisfy multiple users preferences that also satisfy the constraints of the system itself, that the signatures are checked or kind of the linearity we want to be enforced is enforced, and then settle those appropriately such that we can make a credible promise that the user's preferences are respected, right? That if they said x and y and z in an intent, that the system actually does x and y and z, or it does something that satisfies the preferences they've described, or nothing, right? So we want this kind of correct atomicity guarantee. And I mean here, not atomic in the sense of like atomic multi blockchain or something that is related, but a distinct concept, just atomic in the sense of either the intent is settled and the user's express preferences are respected, or it's not right. And you can, you know, anoma, I guess, takes a view of this definition that also includes privacy. So our definition of intent is something like commitment to credible commitment to preferences, also over the state space of the system, but where the state space of the system here is kind of redefined to include who knows what. Right? So it's almost a commitment to information, future information flows in the system. And I guess we're kind of going after the general definition because we think that's an interesting question, but I don't think that's not the end all, be all.
00:21:07.342 - 00:22:05.310, Speaker D: I think that the concept of intent is useful because it allows you to describe the relation between a user of the system and the system itself very well, in that the user can say what they care about specifically, as opposed, they care about things that they can measure and the intent can express the measurements, the outputs they care about from the system. And they might not care about a lot of details of execution, or they might care about kind of properties of those execution traces, but not the exact trace. Right. In a system like, oh, I don't want to front run Henry, but as far as I understand, in a system like penumbra, users might care about something like the fairness that all intents settled within one batch. However that's defined, get the same price, and the price is calculated fairly as the midpoint, something like this. So that's an example of a property of an execution path, but not an exact one. I think that would be my definition.
00:22:06.370 - 00:23:00.100, Speaker A: I like that. Credible commitments of preferences over the state space of a system. I think I got that right. I think that sounds like a very complete and specific definition. Now that we have that sort of the ground kind of covered background established, I want to ask something that I think a lot of people have been wondering, and I've noticed people bring up a lot in the Twitter sort of discourse, which is what is the difference between intents and things like account abstraction that a lot of people have been talking about for a while, or things like paymasters also, some people say, oh well, limit orders are just intense. Why do we need this new term? How are intents different to some of the things that already exist or people have been talking about?
00:23:02.710 - 00:23:50.306, Speaker C: I think I spoke a lot about this in my research day, talk about how account abstraction and intents are related. So I think account abstraction basically is this way, or it's this protocol, and it can help enforce very specific intents. So take a really concrete example of I want a rate limit on a smart contract wallet. Like, for example, I only want $1,000 per month to leave my account. That's an intent, right? It's not a declarative transaction. You're enforcing some preference over the state space. To go back to Chris's terminology, you're saying like, oh, any state space which at the end of the month has more than $1,000 leaving my account is not acceptable to me.
00:23:50.306 - 00:24:27.486, Speaker C: And then the smart contract wallet has logic in it to enforce that intent. So I think account abstraction is just a spec for a smart contract wallet. And in particular, it can enforce very specific intents that relate to the state of your account. So it can enforce like a rate limit or things like social recovery. And then it has this concept of a paymaster to help deal with intents around gas. So, hey, say you have an intention that's like, I want to pay for gas in USDC, and I want to reimburse someone else for gas. Well, you can enforce that in this way with the account abstraction spec.
00:24:27.486 - 00:25:10.118, Speaker C: But fundamentally, I think account abstraction is a spec, and it's a protocol in service of very specific intents. And so it's pretty limited. And for anyone who's looked at ERC, four, three, seven, I think the spec is very long and winding and complicated, because basically, I think the creators took, let's say, five common user intentions that they want to enforce, like rate limits, social recovery, gas abstraction. And then they stuffed it into this protocol. And then for each part of the protocol, like the paymaster or the smart contract wallet validation enforces each of those intents specifically. And it's not like a very general system. Like it's kind of brittle.
00:25:10.118 - 00:26:15.694, Speaker C: And I think if you look at all the account abstraction diagrams, it's really complicated because they kind of worked backwards from, hey, I want to enforce these very specific intents. How can I make the protocol do what I want to do in a way that's compatible with ethereum? So I think in that way, it's kind of ugly and not general enough. And for example, an account abstraction, it does not help you solve the problem of, okay, I have eth on ethereum, and I want to get the best price, as much pepe as possible trading across a variety of venues and across a variety of l two s, roll ups, app chains, whatever. I think the biggest problem with account abstraction is that it's a single domain protocol. And I think a lot of what intents solve is actually like dealing with multi domain stuff. So I think account abstraction, TLDR is like an intent specific app, is what I called it in the talk. And I think it just doesn't solve a lot of the problems with multi domain that I do think intents do solve, because account abstraction was designed in this very single domain way.
00:26:15.694 - 00:26:25.090, Speaker C: So I think intents are like a very useful abstraction and even more useful in the cross domain world in a way that account abstraction is, I think, very fundamentally flawed.
00:26:28.390 - 00:26:52.140, Speaker A: Yeah, account abstraction is sort of like a limited subset of intents. So intense is like a much more general, wider concept that can encompass a lot more user experience rather than single domain. That makes a lot of sense. Anyone else have any takes on this question?
00:26:55.150 - 00:28:33.740, Speaker B: Eli Krensky made a really good point to me, which was one thing, that it might be very familiar to at least defi savvy users, is like the concept of a liquidation, right? And so a liquidation is basically when you have, say, vault on maker, right? And you're like, hey, I've locked up some ETH, I've mint some die. Basically, you bind that vault to an intent that says that if the price of Eth falls below a certain place, someone has the right to take the eth out of my vault and sell it for die to pay back the debt. And what I think has gotten people excited about intents is that we've been, from seeing billions and billions of dollars of liquidations happen in DeFi successfully, to seeing these off chain actors that are in the account abstraction spec, to seeing how much stuff is happening in the MEV space with actors inferring intents from users transactions and then acting on them and bundling them and extracting MEV from them and all this stuff, there is this whole rich ecosystem of off chain actors. And the question is, can we align those off chain actors with users goals such that we can make the entire blockchain UX 100 x better?
00:28:37.730 - 00:29:04.780, Speaker A: I like that. Yeah. In fact, I kind of did an overheard tweet. Basically that was like something that you had said, which is that intents turn toxic order flow into non toxic order flow, and they turn bad cross chain ux into good cross chain ux. So I think, yeah, that all really checks out. Henry, you were raising your hand. Did you want to jump in?
00:29:05.710 - 00:30:18.098, Speaker E: Yeah, just to add on to something that, and also that you mentioned about sort of in a cross chain world, the problem appears more naturally. One thing I would say about that is, I think the reason is that if you're in a kind of like monochain paradigm. Fundamentally the idea is, okay, my transaction is going to specify here is the execution that I want to happen. And I know that that is going to all get executed at once and what order it gets executed in. Okay, people can mess around, play games with me, but within that execution I'm specifying that very directly. And in a cross chain context you suddenly have all kinds of asynchronous execution where some stuff has to happen in this part of the system, some stuff has to happen in that part of the system. Maybe those different parts are different chains that are communicating asynchronously and so you don't get the same kind of either this entire transaction succeeded or failed and I locked the entire world to make it happen.
00:30:18.098 - 00:30:34.310, Speaker E: And so the reason that this sort of intense predicates solution kind of naturally appears in that context is that that's the way that you kind of recover from the introduction of asynchrony.
00:30:37.370 - 00:30:52.554, Speaker A: Yeah, intense is sort of a way to, when you don't have atomicity, maybe there's still a way to sort of guarantee that what you wanted to happen does end up happening even across all these domains. Is that kind of what you're saying?
00:30:52.752 - 00:31:54.720, Speaker E: Yeah. Suppose I'm executing a transaction on ethereum, right? In, in some sense I'm like buying too much. I'm like paying through gas to stop the entire world and everything has to stop. Hold on, I'm doing something and pay everybody else to not do anything so that I can get the property that I want out of my transaction, but I'm paying for way too much synchronization there. I don't actually care about did somebody mint an ape NFT at the same time that I did my swap? No, but because there's no way for me to express any kind of sort of criteria about what executions are acceptable as a user in that type of monolithic system, the only way for me to get predicates that I desire is to pay everybody else to stop the world.
00:31:56.450 - 00:32:42.910, Speaker A: Yeah, I like that. When you frame it that way it makes it sound just like kind of crazy that that's how things currently work. The next question is for Chris, which is now we have an idea of what they are, how they're different to other things that exist. Now what do we have to change in the way that we build blockchains or build the systems around blockchains to make this possible? And I know you at anoma have been working on this for years now, so I'm really curious how you see that and what are the pieces that are missing. What needs to change, how deep does this change need to go? Do we need to go all the way to the very core of how these systems work? Or is it something that just kind of add on to the surface?
00:32:46.290 - 00:33:48.094, Speaker D: Right. It's a good question. I think one interesting aspect of the way the intents are playing out, at least at the moment, is it seems like they're kind of, at least this frame is kind of inevitable. That even if you start out, Ethereum, for example, was originally designed under the banner of a world computer. And I think that it's easy to actually kind of underestimate the importance of that concept. I think that concept framed a lot of things that happened in Ethereum, and a lot of where it draws inspiration from, in terms of building a sort of von Neumann virtual machine, how it thinks about politics, in terms of building a kind of single central. Not that everyone thinks this way, necessarily, right? I just mean in broad strokes, but in terms of building a kind of single root of trust, and then a hierarchy of different trust domains, which all kind of settled to the root.
00:33:48.094 - 00:34:43.080, Speaker D: I think that concept was very relevant to how the structure of that ecosystem and protocol ended up evolving over time. But despite that, it seems like an intense system is coming to exist on top of ethereum, or in the ethereum ecosystem more broadly. So I think that to some extent, this is perhaps dictated by protocol, political economics, or something like this. Like people are always going to use these systems when they have preferences. That's just what the value of coordination is in the first place. If you didn't need to agree with other users on settling your preferences together, you don't need a coordination system like a blockchain. So I think that the kind of economic structure of it is a little bit inevitable, but there can be many different.
00:34:43.080 - 00:35:36.246, Speaker D: What actually happens, in what order, is pretty path dependent. For us, it's very important that we end up with an intent implementation, as in we broadly, humanity ends up with access to an intent implementation that is compatible with privacy or that doesn't require that information is always revealed to the world, let's put it that way. And many of the current intent implementations just don't have this property, which is totally understandable, because privacy is hard. And it wasn't perhaps so clear initially that it would be such a key problem. But I think that it's essential if we want the system to actually work. And depending on how you define intent, it actually becomes part of the definition. To my mind, that's kind of one thing that current systems typically don't have, of course, something like penumbra coming soon is an exception to this.
00:35:36.246 - 00:36:41.318, Speaker D: Even something like, you can think of something like zcash as like an extremely, extremely specific implementation where the intents are only, I want this other person to have more money in their account, right? Transactions are intents, they're just intents that have an exact constraint on the path. So I would say privacy is one thing that has to change. I think many things that exist in the world, like the EVM, are kind of actually orthogonal to intent centric architecture designs, as far as I understand them. Like they're not correct or bad, they're just sort of specific implementation choices, like they're equivalent to cpus, right? So you might have different programs, and those programs are written in some typically more abstract language that provides or promises higher level properties, and then you compile them down to specific sets of cpu instructions. And those are physical systems. They have some very specific physical trade offs and costs and stuff. And I would see something like the EVM as kind of like a cpu.
00:36:41.318 - 00:37:58.446, Speaker D: It's virtualized, but it has the same relation to an intent architecture as something like a Haskell program does to an X 86 chip, that you could also make another cpu, and it would execute some programs faster or some programs slower, or something like this. But it doesn't change what the programs mean, and it doesn't change what has to be done in order to execute them correctly. As in you could take a program and execute, write a compiler for a different cpu, and then it might be faster or slower, but it would still be the same program. So I think a lot of stuff is kind of like that one area, and then might be supplanted by things that are slightly faster but isn't really sufficiently compatible that it will work, at least for a while. And maybe the optimizations aren't necessarily important for everything, although I think for privacy, this ends up being not easy to make privacy APM compatible. But just to highlight, one other area that I think needs to change a lot is peer to peer network designs. If you look kind of zoom out, at least this is my impression, if you zoom out of where different parts of the blockchain research literature are in relation to kind of where they need to be, I think the thing that is furthest behind is peer to peer network designs.
00:37:58.446 - 00:38:48.462, Speaker D: Cryptography is pretty clear how to do general purpose programmable privacy. It's pretty clear how to do distributed consensus distributed systems. It's pretty clear how to do distributed database optimization and special case roles and stuff, roll up architecture and different kinds of modular scaling. And I think peer to peer networks have just been kind of forgotten. And unfortunately, the state of designs is not very good when you want to think about a heterogeneous security kind of privacy preserving, intent centric world. In particular, there's this sort of dichotomous framing in the literature between structured and unstructured networks. So structured networks are ones where you have some specific idea of which nodes are connecting to which other nodes, and unstructured networks are ones where all the connections are random.
00:38:48.462 - 00:39:41.806, Speaker D: Right? Like a DHT is typically an unstructured network. And Ethereum, for example, the Ethereum, peer to peer layer, the tenement, peer to peer layer, basically all blockchain peer to peer layers in existence, as far as I know, are unstructured and assume that all nodes receive all messages. And this doesn't make sense in a heterogeneous security intent centric world, or even just across domain world, you don't want all nodes to receive all messages. You want some nodes to receive some messages, and you want them to kind of discover network topologies over time, but also maintain as discover optimized topologies over time, but also maintain some resiliency. So you kind of need to exist as far as we think at least you need to exist in between these structured and unstructured designs. And there just is no research precedent for this that we have found. It needs to be kind of designed from scratch.
00:39:41.806 - 00:39:58.460, Speaker D: It's more of a cybernetic networking approach, I guess. I found this old thing called the recursive Internet network architecture that was someone's alternative proposal for TCP IP. And it seems kind of related, but that's the only thing I found. So I think that's one area to maybe give some more attention to?
00:39:58.990 - 00:40:11.166, Speaker A: Well, there's a lot to unpack there, but I know that, and we should definitely talk more about privacy too, especially since tenries here. But I see Zucky and Uma raising their hand. So either one of you feel free to jump in.
00:40:11.348 - 00:41:03.470, Speaker C: Yeah, Chris, it's really interesting that you think the p to p layer needs the most work. So I guess one question for you just thinking through this, is do you think a design or the proposal kind of, or discussion for a suave like structure where it seems like the design is that you have one network that is surfacing kind of all these preferences and intents for all these different domains, do you think that's kind of untenable? And is the concern there that basically the amount of volume and throughput that would be required for one network to process all of the intents across all domains is just not possible. Yeah, I'm curious how you, given what you said about the network topology, not yet needing to be different. What do you think of like, suave?
00:41:04.050 - 00:42:40.814, Speaker D: Right, I guess caveat this, I am not an expert on suave, and I get somewhat different impressions sometimes when I talk to different people. So perhaps the version that I understand is not the one true suave. I think if suave is kind of one specific place, one location perhaps operated in a decentralized fashion, but one logically centralized location where all intents get matched and then they go elsewhere for settlement. Yes, I think that design is untenable, or that topology rather is untenable. I mean, I think because kind of to Henry's point, because you're paying for this, all this, like in some sense you're paying for this logical centralization that you don't actually need, because many intents just have nothing to do with one another, right? Many intents are dealing with completely, they're dealing with different security domains, they're dealing with different parts of state, they're dealing with different capabilities, different users that just don't need to ever interact with each other, like in principle. And if you make them interact with each other by trying to have one central location, then you're just paying for all this. Like you're paying for the intents to be broadcast to all your intents to be broadcast to all of the swab validators or something like this, and you're going to be limited by the throughput of that system, and there's going to be one central target, even if it's operated in a decentralized way, for someone looking to co opt the system to go after also, it just seems like if you think about the practical implications, just seems weird to me.
00:42:40.814 - 00:44:18.974, Speaker D: Like if you are settling intense in some specific area, like, I want to have my conference, burning man conference, right? I shouldn't call it a conference, but I want to have my local event and we're going to create our own wham for the event, and we're going to do some intent settlement for exchange of physical food or something like this. Why would I send my intent to some global settlement system or, sorry, global intent matching system? It doesn't make a lot of sense to like. To be clear, I think what suave actually proposes to build, building maybe a faster system for Ethereum and designing it in a way, or designing ways to map the idea of an intent to the EVM. I think that's very useful. It's not going to be the one true place where all the intents go, as I understand the economics at least. It's going to be like, maybe swap has a nice network and kind of a nice language for intents in a way that is EVM compatible, which that seems very useful to me, and I would imagine like lots of intents going there, but not everything. And in particular one, I guess maybe a practical challenge, at least the way that we've kind of thought about things, as far as we know, is that it is really hard to make long term privacy Ethereum compatible or EVM compatible, because the EVM just didn't think about this from the get go.
00:44:18.974 - 00:44:54.234, Speaker D: And privacy is not a feature that you can add onto systems after you've designed them almost ever. It's something you have to include from the get go. And I think Aztec, for example, also has basically decided not to build, not to try to build a private EVM. As far as I know, nobody has. So I think that's very difficult. But what suaves like temporary privacy for intent solving in SGX, I think is very helpful and is also compatible in principle with privacy, long term privacy preserving systems. So I hope to see kind of interoperation there.
00:44:54.234 - 00:45:46.170, Speaker D: The only other thing I would say is that to kind of perhaps provide a tangible aspect to the part of up peer to peer networking that I brought up earlier. The reason I think it's important to come up with a good general protocol for peer to peer networking is that it would allow these systems to compose more cleanly. So at the moment, there's like the ethereum mempool, and there's the cosmos sub mempool, and the osmosis mempool and blah blah. There are like a million different mempools, and they're all separate, unstructured networks. They're like separate. If you think of the system as a bunch of circles, they're like separate circles. And then there are specific lines in between which are sort of specific bridges or relays or nodes, like in IPC's terminology, relayers, but nodes who are copying messages from one circle to another circle.
00:45:46.170 - 00:46:20.920, Speaker D: And that is when you zoom out and squint, you see that this is kind of just really a ven diagram, right? And you have all of these memp pools, and people are sometimes sending messages to one mem pool that doesn't impact another mempool, and sometimes they're sending messages to one mempool that sending a message that does impact another mempool. Right. So you have all this kind of partial overlap. And I think if we design the peer to peer networking part well, we can get a protocol that does all of this. So instead of there being.
00:46:24.250 - 00:46:24.982, Speaker B: 50 million.
00:46:25.036 - 00:47:01.890, Speaker D: Mempools or whatever, there's one mempool protocol that handled these kind of partial overlap scenarios and handles heterogeneous security and maybe even some stuff related to privacy. And then everyone can configure that in the way that they want. They can configure that with their validator set or their specific intent, acceptance criteria, rules for which messages to accept, from whom and how to relay them and stuff like this. But they can agree on the protocol, and that would make it much easier to compose these systems. So I hope that we aim to work with flashbus, for example, on suave and anyone else who's interested in this question, on standardizing at this layer.
00:47:03.030 - 00:47:15.960, Speaker C: Yeah, I think the p to p layer of intents. And I really like the abstraction you mentioned about these shared or kind of partially overlapping mem pools. I think that's not often talked about. So that's super interesting to hear.
00:47:19.290 - 00:48:09.010, Speaker A: Wow. We're getting very deep, and this is extremely interesting. I feel like this is probably the leading edge of all research on this area. And I think there's so many unanswered questions and so much knowledge in Chris's brain to mine. But I wanted to go back a little bit more high level again, just because I think there are some other details about how intents work that maybe some people listening, including myself, don't have a fully clear picture of. And I just want to get those covered as well, which is, I know that in these intent architectures, there are some new concepts that don't exist in the standard blockchain world. So there's like this concept of an actor called a solver.
00:48:09.010 - 00:48:49.250, Speaker A: There's also these proofs, which I think Zucky alluded to. It could be a proof of optimality of your trade, or maybe it's a proof that something happened on a different chain so that you can settle those intents. And there's also sort of this notion of a credible commitment that Chris was talking about earlier. What does that to. I don't know if anyone can sort of unpack a little bit more of these details and maybe do it via an example of maybe that cross chain trade, like what is happening, who are the actors in the system and the different moving parts.
00:48:55.850 - 00:49:03.400, Speaker D: I'm happy to take this, but I also don't want to talk too much so I would be happy to yield to somebody else. If anyone else has.
00:49:06.910 - 00:49:30.766, Speaker C: Mean. I have a super simple example. Maybe, Nick, you're kind of looking for something that's maybe more relatable for relatable to the things that we have today. I think, for example, a cross Chain RFQ looks a lot like a proto intent. You know, I'm a user. I have some eth on Ethereum. I want some, I don't know, op token on optimism.
00:49:30.766 - 00:50:14.960, Speaker C: I broadcast that desire to the world, and then I kind of request a quote, and then someone else who's a sophisticated actor or market maker is doing a transaction on optimism to send me my op tokens, and then they're taking my ethereum that maybe I've locked up in some contract after there's a proof they've sent me the op tokens, and maybe they participate in some auction for the right to fulfill my quote. And then we already have people doing this today. There's RFQ systems. I think they're generally auctions. I'm not sure whether they're conducted on chain or not. And generally they seem like a little centralized. But I think that's just like a very concrete example of how a proto intense system working in the wild today.
00:50:14.960 - 00:50:21.866, Speaker C: To make things more concrete, I'd like to.
00:50:21.988 - 00:50:26.020, Speaker A: Henry's raising his hand, or. Go ahead, Chris. Actually, whichever one of you.
00:50:26.710 - 00:50:27.570, Speaker D: Henry.
00:50:28.230 - 00:50:33.590, Speaker E: Oh, well, no, maybe Chris should go because I was going to give an example that is kind of. Of a different flavor.
00:50:37.900 - 00:51:31.460, Speaker D: Okay, well, I was just going to address specifically the solver part of the question, because I think it's helpful for understanding the intent frame. I mean, in general, if you take intents to be some kind of preferences over the state space of a system, most of these systems are quite flexible. And so in the general version of the kind of intent matching problem, the problem is in NP, right, in the complexity class NP. So it's a sort of search problem where you have verifiable solutions. The intents, of course, define what valid solutions are, but you don't have polynomial time algorithms in the general case for finding solutions, at least not so far as we know. If P equals NP, everything breaks and we can all go home or do something else with our lives or something. But for now, it doesn't.
00:51:31.460 - 00:52:30.364, Speaker D: And there's part of this problem that is like kind of unbounded search, right. And unbounded search is something that you do not want to do in replicated computation, right? You want to have someone do the search and then verify the results of that afterwards, once you found some solution that satisfies the requisite criteria that you can cheaply test. Right? So in our lexicon, at least from a node's perspective, solvers are the entities doing the search. They have some choice, perhaps over execution paths. They can come up with execution paths that satisfy the criteria of intents. However, those intents define those criteria, but mostly what they're doing is just search. And if you define your fairness criteria clearly, or something like this, or your welfare maximization criteria clearly, then solvers are kind of done, quote unquote, so to speak.
00:52:30.364 - 00:53:14.730, Speaker D: Or they're like they're entities who you're paying for specifically doing the search, like you're paying them for compute, in a way that at least we tried to design things so that solvers are basically fungible. Like you're creating a market for compute, and maybe you want some resiliency properties, so you're overpaying a little bit, or want a few solvers to submit solutions or something like this. But because you can verify the results of that compute, you don't need to trust the solvers at all if you're not disclosing information to them. And sometimes you might be disclosing information to them. And then this equation is a little bit different. So it depends on what roles end up overlapping. But in the purest definition, solvers are just doing the search problem.
00:53:15.260 - 00:53:42.850, Speaker A: So how do I know that the solver, let's say I say I want to trade this thing. How do I know that the solver actually gave me a good deal and achieved a good price? Obviously, I can verify that the outcome is within what I stated as my boundaries, my constraints. But what about the other aspect of it? Is that just auction mechanism? That kind of guarantees that, right?
00:53:44.660 - 00:54:45.400, Speaker D: At least I don't think there's a universal mechanism here that gives you the best properties in all cases, I think there are different specific mechanisms that give you different properties. So an RFQ system or a kind of order flow auction system is based on auctioning with intents, basically based on running an auction. Another thing you can do is just the nice thing about intents is that they're cheap. So you can send a lot of intents and gradually change the price over time, or have a price curve and an intent that goes down as a function of time. And you need some reference clock, perhaps signatures from a validator set, and then you can just, especially if you don't know the price, this can be helpful. You can say, depending on your time preference, you can say, I'm going to start with this high price that I like a lot, and then gradually lower that price and see who picks up my intent. That seems like it's almost certain to happen in kind of a dark forest world where a lot of liquidity is private.
00:54:45.400 - 00:55:32.150, Speaker D: Then you can also do something where you basically restrict the role of solvers to only compute by having first a commitment to ordering as an intent. Typically encrypted in some fashion, are ordered and then they are decrypted, and then solvers search for solutions, but those solutions are required to satisfy fairness criteria. These fairness criteria might be something like fair market clearing price or a batch amm. They might be something like Pareto efficiency improvements. For a sort of slightly more general version of the problem. You could have other welfare metrics. Like you could make your welfare metrics localized to some community, and then it would be like improvement along the welfare function defined for this community, basically.
00:55:32.150 - 00:56:01.890, Speaker D: And in this case, because you've separated the roles. So the validators or something are ordering intents while they're still encrypted, so they don't have any information on them. Then they're threshold decrypting them, or witness decrypting them. And then solvers are just searching for solutions that have to satisfy the strict criteria, including processing all of the intents in that batch. Right. So solvers, they don't have a lot of freedom to optionally include or not include things.
00:56:02.980 - 00:56:05.170, Speaker A: Henry, you were going to give an example too.
00:56:06.500 - 00:57:09.876, Speaker E: Yeah, so this example is a little different for penumbra, I guess. We have, I think, a different sort of approach towards the same goals in that we haven't really started off with. Like, here is the overall vision. It's sort of like, let's try to solve a problem and then stumble backwards into a good idea. And we actually end up having sort of like two different intent systems, one of which is actually not even never touching a chain, never doing anything. And we use that just to taper over the complexities of having a Utxo like system for managing notes or doing other stuff. If you imagine making a transaction, even just like a simple send transaction, if you're in an account based system, you can say, okay, debit x tokens from my account and increase x tokens in this other account.
00:57:09.876 - 00:57:37.352, Speaker E: But if you're in a shielded system, you have to be saying, I'm going to consume these little state fragments that are recording this balance, which are effectively like shielded Utxos. And so actually planning out your transaction involves doing Utxo management and that sucks, not even from a usability perspective, but from a dev UX perspective.
00:57:37.416 - 00:57:37.644, Speaker A: Right.
00:57:37.682 - 00:58:48.310, Speaker E: If somebody's trying to write a front end, they don't actually want to be doing, for the most part, fine grained management of Utxos. And so we ended up kind of basically building a sort of proto or a trusted intent system where someone can specify, here's like a high level description of what I want this transaction to do, and our own sort of client stack can translate that into, okay, here's a specific transaction plan. Here are the specific notes you're going to consume, here's the change notes that you're going to make to yourself to make the whole transaction balance, and so on and so on. And I think this is sort of an example of a thing that I mentioned at the beginning of sort of blurring your eyes, like seeing this sort of fractal nature of reality and distributed systems, where if you think deeply about any one component of any of these systems, it ends up actually having a lot of similar problems inside of that microscale as the full system writ large.
00:58:52.760 - 00:59:22.368, Speaker A: Whoa. Yeah, it sounds like you guys are really thinking about this in a deep way, in the way that it will affect users. And I think you're baking in a lot of very cool approaches to solving these problems. We're kind of up on the hour here. I think we're going to go maybe another 1520 minutes or so. So I want to start wrapping things up. One topic I want to talk more about privacy and Mev and stuff.
00:59:22.368 - 01:00:38.392, Speaker A: One thing I want to make sure that we also just touch on quickly, selfishly, is sort of the overlap or not overlap between intense and modular blockchains. Because at Celestia, we do believe that this modular blockchain architecture is going to be a big way that we scale these systems and onboard more applications and solve a lot of the core problems of blockchains. And it sounds to me like intents are another really big part of solving these problems. And so I'm curious on the overlap. And I guess for me, the thing that really jumps out is that a modular blockchain future is one where the number of chains really proliferates. And it seems like intents are very necessary in that kind of world where like Umu was saying, if there's even just a handful of roll ups, it's really hard to manage all of your accounts and wallets and balances and all that. You're also, if you're interacting with a bunch of different, you know, these apps are living in different domains and you want to compose them.
01:00:38.392 - 01:01:37.420, Speaker A: From a UX perspective. Bridging is one thing, but even just the user experience of trying to interact with all of them at the same time, even knowing what bridges exist and what liquidity is there, basically it becomes so complex, the complexity just explodes. And I feel like you need to offload that complexity to more sophisticated actors. So at least that's the way that I see this overlap. I'm curious what your guys perspective is there. And last but not least, another small tidbit that I want to touch on is intense, is definitely something that's not built into this last year data availability layer. I don't think it's really necessary for something that is just so simple as just like, hey, I want to post this blob of data, but I'm curious if there's any reason that you guys would see for having some kind of intent like thing within a lazy blockchain like celestia.
01:01:40.000 - 01:02:33.100, Speaker C: I think something you said earlier about cross domain people kind of arriving to intents and there being a reason for that is I think having this super modular stack solves a lot of problems and I think it has a lot of pros. But then the cons are also created because it is way more fragmented and users have to keep track of a lot of different things across a lot of different roll ups. And then intents is kind of this way of solving that and helping keep most of the pros and then also getting rid of the cons. So I think that's why people in the cross domain space think a lot about intents. And I think that's why it comes up in this like with the rise of the modular stack. I think that's why this has also become more popular to talk about because the problems are only now being created by having so many roll ups.
01:02:35.440 - 01:02:38.008, Speaker A: I'm curious if. Zucky? Yeah, go ahead, zucky.
01:02:38.104 - 01:03:54.280, Speaker B: Okay, so I think one of the things that has become an increasing part of my framing of blockchains is probably there are only two layers of blockchains that are actually accrue value. One layer is like we sell basic commodity, we sell data availability, we sell execution in a shared state with a bunch of other things that are valuable. And then there's my joking phrasing of it is like artisanal, organic, nontoxic order flow. These are the things that are valuable in a blockchain. And celestia is canonically like a vendor of a base commodity and potentially a shelling point for shared state execution. That might be valuable. And then the real goal that we all are trying to build to, is to build the farmers market of artisanal, organic, nontoxic order flow.
01:03:54.700 - 01:03:56.520, Speaker A: I'm loving this analogy.
01:03:57.100 - 01:03:57.850, Speaker D: Sorry.
01:04:00.540 - 01:04:50.250, Speaker B: I think my general view of this is we're going to see the other thing that has to be, I guess, reemphasized is intents are not a future concept. To a large extent, intents are already here you have cowswap, which is this phenomenal mechanism by which users sign intents to perform a swap, and solvers. I probably first talked to Martin Copeland about cow swap in 2017. So this intent idea is not remotely new. And visionaries have been working. Visionaries in the space have been working on it. One inch fusion is another example of an intent system.
01:04:50.250 - 01:05:41.880, Speaker B: Even something like the OpenSea order book, which is based on Chris's prior work on Project Wyvern, is an intent system. So basically, many people who view blockchains also mev share from flashbots another great example, and they're doing the programmable privacy thing. That is kind of like another frontier of it, which is like it's done in a centralized setting. But not all, everyone who is trying to figure out to essentially bid on your order flow can see your entire order. They can only see some aspects of your order. And so we just keep seeing proofs of principle, and I think these proofs of principle and, yeah, I could go on. There's like, so many examples.
01:05:41.880 - 01:06:16.260, Speaker B: We have these things that we do in cosmos, where we delegate, where a user signs one transaction, but actually, multiple steps have to occur asynchronously across multiple blockchains, and you give that to the IBC reware. So we just keep building systems like this. Intents are already here. Intents are going to be a big part of successful systems built on top of the modular architecture. Ultimately, the goal of intense systems is to really elevate that organic order flow.
01:06:19.000 - 01:06:21.060, Speaker A: Beautifully said, chris.
01:06:22.040 - 01:06:42.430, Speaker D: Yeah, I guess I'd second both of those sentiments. I think. To me, another maybe common intuition in the concepts of modular blockchains and intent centric design. Also related to Henry's point earlier about kind of seeing intent centricity fractally or sort of in different parts of the.
01:06:44.480 - 01:06:44.844, Speaker B: Know.
01:06:44.882 - 01:07:58.932, Speaker D: I don't work on Celestia. I don't know everything about it. But as I understand the idea of modular blockchains, it is to kind of separate out the functional components that different parts of this distributed system are providing, such as data availability, maybe, or long term storage, or compute, or sequencing or execution and come up with interfaces around those components that kind of define them in a sufficiently general way that you could put together these different building blocks which are compatible with the interfaces and get lots of different configurations of system. So it's like Lego blocks for blockchain, something like this. That's how I understand it. And I think that there is one thing that you really want to make sure you do, if you're trying to build a composable system of primitives, is define interfaces that specify at the right level of abstraction, that are not too specific, as in they don't. You don't want to define interfaces that include details about how some subcomponent does something, because that restricts the freedom of people implementing that subcomponent by preventing them from doing something.
01:07:58.932 - 01:09:38.324, Speaker D: But you want to include interfaces that define the properties that you want the subcomponent to have, right? So you want like a very declarative interface, like prologue style. I think there's actually direct precedent for this in unrelated research literature in something called denotational design by Conal Elliott, who's like a really long running and skilled programming languages researcher, did a bunch of work in Agdad and some other stuff that has kind of a more mathematical formulation for what it means to design a system this way. But it's like at every layer of, you have sort of a dag of definitions, for example, and at every layer you define what you want the underlying primitive to do from the perspective of an observer, which in this case is like the code that is calling it. So for example, with data availability, the way the enema architecture thinks about data availability is that someone who is seeking data availability wants some data to be stored for some period of time where that data will be retrievable, subject to some trust assumptions, right? And the person, the consumer of that interface has basically like a data availability intent. Like they want to get data availability in a way that is compatible with the things that they've stated, but they might not care about exactly how it happens as long as it's compatible with their preferences. They might be fine with celestial doing it, or like some subset of the celestial validators doing it, or they might be fine. They might want Ethereum to do it, and they might want the data to be stored for 15 days or 30 days or something like this.
01:09:38.324 - 01:10:20.464, Speaker D: So they're like one side of the market, right, for data availability. And on the other side of the market that the providers, as Aki put it, of this commodity would be like celestia, for example. The celestial validator set or the ethereum validator set. I mean, most blockchain systems that are actually running can provide data availability for a fee. Many of them are not designed to do it, but it's readily available in some sense. So I think that if you architect a system in this intent centric way, we're trying to kind of come to a pretty clear mathematical definition. We can even input into Agda or something like this, which actually checks that our side accomplishes this.
01:10:20.464 - 01:10:38.600, Speaker D: But you end up with intent centricity at every layer. And I think that that's really maybe not exactly the same thing, but a prerequisite maybe for the kind of modularity that you might want out of a modular blockchain system. That's my understanding of the relation.
01:10:39.100 - 01:11:10.850, Speaker A: I see, so you're saying that there could be sort of an intent layer even for each service to some degree, like even data availability. And so it makes it kind of like hyper modular in the sense of there's so many different options for data availability and you just sort of set your parameters of maybe security threshold or like, yeah, you said the duration, et cetera, and then you put your intent out there and then someone else is like, okay, well, this is the right solution for you. And they sort of bring the supply and demand together.
01:11:11.780 - 01:12:39.100, Speaker D: Yeah, I mean, sometimes you don't necessarily always need like a distributed market over the network. I mean, in Henry's example of a transaction plan, the intent matching is happening like on gore machine, right, in one trust domain and with you know exactly who the counterpart is. But you still want this kind of interface because it allows the user to kind of say what they want at the level of specificity and abstraction at which they want to say it, and allows the system to do some work on behalf of the user, figuring out how to do that in the case of the transaction plan API, as far as I understand, selecting which nodes to use to consume in a transaction, for example. So I think the interface pattern kind of holds generally. Maybe another way of articulating it is that I think designing things correctly in this way, for example, ensures that enoma and celestia will be compatible without even trying. Like if we design things in this way and you design things in this way, maybe I think the modular blockchain way, or when I talk to people from celestia talking about dependency inversion or something like this, I get the sense that we have very similar ways of thinking about modular design. So I think that if people agree on kind of a clear way of thinking about systems, this way you end up with, because you have thought about how to define the interfaces in this sort of maximally general way for the function that's being provided, such as data availability.
01:12:39.100 - 01:13:27.710, Speaker D: There's kind of one unique maximally general way, like data availability is a thing and you can parameterize it in certain ways, like who's doing it, what your trust assumptions are, and how long the data is stored, and what the data is is just an input to the function, right. So then you end up with compatible interfaces, like magically. Right. I didn't need to go talk to Celestia, and I think that's very first sort of permissionless or kind of coordination of an ecosystem of people who are building different components, coming up with a way to have compatibility that doesn't actually require the people to talk to one another, is really powerful. It's like a huge sort of boon to our ability to build systems that compose with each other.
01:13:30.000 - 01:14:07.870, Speaker A: Cool. So we got to wrap up here pretty soon. So I have one last question, and then we will wrap it up. And that is that Zucky gave an outline of a few of the systems that are live right now that already kind of have some sort of version of intents implemented. I'm curious to hear two things. One is, what is the current state of intents, like the different projects building them. So this is like a chance to shill a bit about anoma and also penumbra and other projects that are out there and like swab, for example.
01:14:07.870 - 01:15:00.590, Speaker A: And then I'm curious to sort of project a little bit into the future, let's say three years from now or so, when the whole intense architecture and actors and this whole, I guess, stack is built out more robustly and people are actually using it, what does it look like? And what kind of world will we be living in? And even I'm curious, as a user, what does it look like? Do I even open up my wallet and am I switching chains? Or do I just have this master view of all my accounts across all chains? Or. I didn't even realize that there's different chains and I'm just like saying things and they just magically happen. Is it one portal? What does this actually look like in the future if this all works?
01:15:04.360 - 01:15:09.508, Speaker B: Couldn't remember if it was directed towards me. I sort of vaguely remember it being towards me.
01:15:09.594 - 01:15:12.376, Speaker A: It could be anyone. I think I want to hear kind of everyone's take.
01:15:12.478 - 01:16:30.996, Speaker B: Okay. My suspicion is that intents are like the capstone of the last ten years of blockchain infrastructure building is basically my point of view on this question, which is we've had a lot of problems that needed, that seemed insolvable. Consensus, data availability, bridging, what should your smart contract be written in what language? All those things and lots of progress and privacy. All of these things like actual concrete progress has been made of. But I think especially the pandemic period, right, where we had all these people come onto blockchains, I think to me it was very informative, just like, oh, okay, where is this whole system going to break down? And so, yeah, I think the intent world ends up being, I don't think people will do everything with intents. I think the full. You do everything with intent.
01:16:30.996 - 01:17:35.540, Speaker B: Sometimes it's just not going to be worth it. It's just gonna be, especially if you're just like, if you have like one of one kind of things. If it's like, I want to like breed my crypto kitty, it's probably just easier to specify the transaction. There's only one path to do it. You're dealing with a singleton object. But the future wallets will be able to abstract over so many workflows that confound users today and the workflows that are the most popular workflows like token swapping, buying nfts, all of these things. In an intent world, you don't need to know whether or not the NFD you want to buy is on openc, on Ethel one, or Salana or stargaze, which I think is one of the things that the intent world is going to do is it is going to abstract over and commoditize a lot of the differences between ecosystems.
01:17:35.540 - 01:18:00.350, Speaker B: People will have their sports teams, they'll have their favorite thing. There will be communities around tokens. But if you're a user, you're going to be like, yeah, I open up a wallet. It speaks this intent language. I see an NFT I want to buy, I buy it. Didn't have to know anything about what blockchain ecosystem, it was part the, I saw the picture. I could buy it.
01:18:05.270 - 01:18:06.420, Speaker A: Anyone else?
01:18:08.250 - 01:18:52.126, Speaker C: Yeah, I think the state of intents today, Zaki actually talked about it. It's already here. There's like a bunch of apps, I think, that already service these very app specific intents, whether that be like Dax aggregators or one inch fusion with the RFQ, which I guess is a Dex aggregator. And so I think there will continue to be more app specific intents. And I think in particular at succinct, we care a lot about making interoperability better and making the interoperability ux today much better than the current bridging ux. The current bridging paradigm is super broken, and I think we want to create a future where users don't even know what a bridge is. That's a concept that will be long forgotten.
01:18:52.126 - 01:19:41.122, Speaker C: Things will be happening behind the scenes, and they can just take the actions they want to take. And I think the step to building that is going to have another kind of proto intent or bridging specific intent system. And I think that's what we're kind of working on and thinking about right now. And hopefully, as we're all building these different app specific intents, we can also talk more about a more general abstraction. So it's not like everyone's building their own intent language and settling these intents, or having solvers for these intents in a centralized way. And there's like a more decentralized platform and more decentralized order flow options to help solve these intents. And there's going to need to be some coordination there if there is going to be a more general solution that everyone can coordinate on.
01:19:41.122 - 01:19:50.600, Speaker C: And I think the general solution will have a lot of benefits, including decentralization and more competitiveness for the solvers. And so in the end, it also is important for users too.
01:19:55.090 - 01:19:59.520, Speaker A: I like that. Henry or Chris, do you guys have any thoughts on.
01:20:03.810 - 01:21:24.220, Speaker D: I mean, I agree with everything Sakiyanuma said. There are already intense systems. I think that some parts of those systems are inefficient in ways that maybe don't matter so much, and some of them are inefficient in ways that matter a lot. Like the peer to peer part of those systems is just really inefficient at the moment when they're sort of used for intents, because it wasn't designed with that in mind. I think the nice thing about thinking about systems in this intent centric and modular way is that if we kind of do it well, it ensures a certain kind of future compatibility. Like if we build these sort of nice, well abstracted intent based systems for bridging, for example, or state machine verification stuff like this, then we can have our current batch of blockchains, which have a lot of valuable state, right? They have assets and different smart contracts and things that people value, and they will want the future world to be able to reference that state and kind of build upon it. And that, I think will be rendered possible by starting to build these kind of proto or more specific intense systems and progressively making them more general or able to interface with those systems in more general ways.
01:21:24.220 - 01:22:06.374, Speaker D: Kind of one thing that we're working on in hernoma that we hope will help with this is a good sort of general abstract definition for intents. So the equivalent kind of to the Turing machine is like a nice abstract definition for what a computer does. And very few actual computers implement Turing machines. Like they don't literally have a tape, that would be ridiculous. But they do something because Turing machines are sort of universal in this way that is relevant. They do something that's equivalent, like you can translate between different specific implementations of this general thing. And we're trying to come up with such a general thing.
01:22:06.374 - 01:22:55.720, Speaker D: But for intent systems, which includes sort of privacy, or it's kind of more general, a cousin, which is, I think better described as information flow control. So you could think of that as an intent language. Yeah, and also sort of a model for what, like a way of defining what it is that an implementation of an intent system must do in order to be correct, just as Turing. But you can implement something that will faithfully execute a program programmed for a Turing machine if it simulates the tape or something like this. And then you can specialize your special machines for different specific programs written in different specific ways. And I think that will continue to happen. Like there won't be some, maybe some things can become over time, more and more compiler problems instead of sort of human design problems.
01:22:55.720 - 01:23:44.230, Speaker D: The optimization frontier will move to algorithmic choice, but there are still going to be lots of specific different things will just move, or can move towards more general things over time. The only thing that I'm specifically kind of still a little bit worried about is that I think it is difficult to make systems, in some cases difficult to make them compatible with privacy. Or if you embed transparent verification as an implicit design assumption into your proto intent system, it may not be compatible with privacy preserving intent systems. So I think that thinking about that at this stage is perhaps important and helpful.
01:23:44.810 - 01:24:30.934, Speaker A: Yeah, I love the idea of creating a definition that is sort of like universal, kind of like the Turing machine for intent based systems. I thought about that a lot in the context of modular blockchains too, of how we try to break down these different functions. And you need a minimum set of these functions of data availability. You need ordering, you need some kind of socially agreed upon validity rules to implement a blockchain, essentially. So I love that, and I'm interested to see how that goes. We're kind of up on time, so I want to open up for you guys to give some last closing thoughts before we wrap up. So, Henry, maybe you want to go first.
01:24:30.934 - 01:24:42.266, Speaker A: And anything that you want the audience to take away from this conversation about intense or about what you guys are building at Penumbra, go ahead.
01:24:42.448 - 01:26:24.940, Speaker E: Yeah, I don't want to shill too hard. I think we're building some pretty cool stuff. If people want to check it out, I would definitely recommend it. But for this context, I think the thing that I think people should take away is that intents are already here in all these sort of different manifestations. And also that it's really sort of interesting and important to look at systems both in a kind of component by component approach, as well as a holistic approach that lets you ask, like, okay, what are actually the boundaries between these components? And the reason that I think that's important is that if you think of this sort of full stack concept of protocol development from a user, how do I trace a user's Ooda loop? As they're decide they're seeing what is going on in the environment, they're deciding what to do. They do some actions, they observe the effects of those actions that flow, you can trace through some system, and as you trace that through, you'll discover what the actual scope of the protocol is. And through that whole stack, at each individual layer, I think you can kind of see intent systems already in place.
01:26:24.940 - 01:26:39.200, Speaker E: And the thing is just to sort of take this sort of raw material that's under the marble or whatever and flesh it out and chisel away the pieces until we get this sort of beautiful future.
01:26:41.830 - 01:26:46.690, Speaker A: I love that. Anyone else closing thoughts?
01:26:51.900 - 01:27:54.430, Speaker B: Yeah, I guess my closing thought is, I do think that this does represent a pretty big change of over what layer one protocol designers have considered their priorities and importance. They're like, okay, we need to have transaction privacy. We need to build encrypted mem pools. We need to build ways in which users can read what the effects of the transactions that they're signing are going to be. I think the reason why this thing is interesting is because of the shift in priorities, right? It's like a shift in orities, as like, what is the most important piece in making blockchains that solve actual users problems.
01:27:58.660 - 01:28:00.080, Speaker A: Chris or Uma?
01:28:04.660 - 01:28:51.644, Speaker D: Yeah, I mean, I would second both of those sentiments, particularly Henry's, which I thought was beautiful. And maybe he won't shill penumbra, but I will. I think penumbra is an amazing example of a sort of near term, privacy preserving, intense solution, kind of optimized and designed around one specific use case of private trading or privacy preserving trading, but designed to such a level of precision and kind of a careful reflection on what it is that that product does and for whom, and the udo loops of the users, et cetera, that it ends up being this kind of specific incarnation that illuminates the more general concept.
01:28:51.692 - 01:28:52.144, Speaker B: Right.
01:28:52.262 - 01:29:41.630, Speaker D: So I'm very excited about that, both using it and kind of seeing the whole through the lens of the part in this. I think to echo on Zaki's point a little bit, one reason that I find intense helpful, or that we found it helpful in our design questions is that they provide a good way of framing the general problem of what is it that these systems are supposed to be doing? What is the problem that blockchains solve right now? Intents don't provide. They don't provide a specific answer to that question. Right. They don't answer the question of do I want this asset or do I want this other asset? Or as I think, as Sam Hart put it, the thing about intents is that you assume that users know what they.
01:29:42.240 - 01:29:42.700, Speaker A: Yes.
01:29:42.770 - 01:30:31.600, Speaker D: I mean, if users don't know what they want, maybe they know it to only a certain level of precision that could be modeled. But if users don't know what they want, that is just not a problem that economic systems solve. Right. So I think a general concept can be helpful actually, because it illuminates what a system can't do. If it's sort of sufficiently general or what all systems of this sort just can't do, it finds the boundaries very clearly. So I think that as we think about things in this intent centric way, it can give a useful lens to which parts of the stack are perhaps under prioritized from that perspective. Like, I guess today I sort of made the case for peer to peer networking as a part that's been sort of under prioritized from this intent centric perspective.
01:30:31.600 - 01:31:36.150, Speaker D: I think that VM design is another part that's been kind of under prioritized from this perspective. The talk I gave at research day was a little bit about that. I think that maybe thinking also about what privacy means in an intent centric world and whether maybe, to me, I'm not sure privacy is actually the right word for what the systems are doing, but I think that examining that question was also important and kind of helpful, using intents as a lens through which to understand these different components of the design problem, as Henry mentioned. So I just hope that if we think about the components clearly and kind of as an ecosystem of people working on these many different specific projects which implement different specific parts of some potential intent centric future stack that we kind of keep talking about things and come to a good sort of social consensus that achieves a kind of appropriate distribution of labor across these different components of the whole problem.
01:31:38.040 - 01:31:41.028, Speaker A: I love that. Since you want, go ahead.
01:31:41.114 - 01:32:37.190, Speaker B: Zucky started when I was thinking about this. Initially, I really questioned whether or not the privacy component was essential to the success of an intent system and whether or not we could roll something out that would meet some practical use cases without having some form of privacy involved. And I have mostly run into the really challenging problems when you don't have privacy, like your ability to reveal when you're doing an intent, like, hey, you don't want to reveal, like, here's the most I'm willing to pay. Because if you reveal the most you're willing to pay, you will always have to pay the most. And so, like, you know, this is the. This is. These are the.
01:32:37.190 - 01:33:04.720, Speaker B: And so, like, if you don't want. If you want to have, like, sort of not highly interactive processes where, like, you know, a user's device has to be online and interacting with its counterparties and adjusting its bids and offers and pricing and stuff like that, pretty much the only way to build non interactive systems is with privacy. So really become convinced of the importance of privacy in building intent.
01:33:09.450 - 01:33:25.130, Speaker A: Very, very interesting. And I just want to say that since Chris won't shill a noma, I will also just plug. I know that you guys are launching Namada soon, and so people should definitely check that out. Uma, do you want to offer any closing thoughts?
01:33:27.070 - 01:34:04.060, Speaker C: Yeah, I feel like we've been over quite a lot, so I don't have too much more to say other than I think the most interesting thing to me here is the intersection of kind of the research and theory community, like, lowercase our research with actual focus on ux, because I think that is one of the biggest problems in crypto. And I feel like with intense, it's been this really good shelling point where those two groups have met, and people who normally don't talk have started engaging. And so I think on a metal level, yeah, that's something that's cool to see, and I hope more of that keeps on happening.
01:34:07.310 - 01:34:53.066, Speaker A: Okay, well, we covered a lot today. This ended up being longer than I expected, but I think it was hard to avoid that because there's just so much to unpack, and I think intents are going to be such an important topic going forward across the whole industry. And so I'm really grateful that we had you guys here to explain all of that to us. And I think there's a lot more conversations to be had, clearly. And so I hope the conversation continues on Twitter. And also, I want to say that we will be definitely having a lot of intense content at modular summit this year in Paris. So I encourage everyone or people should look out for that.
01:34:53.066 - 01:35:07.100, Speaker A: I will definitely have a lot of speakers like the three that are here. And yeah, I'm looking forward to continuing the conversation in Paris with all of you guys. So thanks, everyone, for coming, and we'll see you next time.
01:35:08.670 - 01:35:09.880, Speaker C: Thank you for having us.
