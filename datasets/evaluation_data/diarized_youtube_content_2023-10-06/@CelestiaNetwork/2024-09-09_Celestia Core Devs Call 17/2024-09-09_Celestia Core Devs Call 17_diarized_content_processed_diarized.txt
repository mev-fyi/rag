00:00:00.240 - 00:00:53.205, Speaker A: Celestia Core devs call 17. My name is Josh and I'll be just be going through our agenda here and then going over cips today. Currently we I guess thank you everyone for coming too. We do not currently have any updates from working groups unless there has been something that has changed in the last day or two. So I just want to kind of leave the floor open for that in case there are any updates. But I don't think there are. And I guess something that we haven't covered since it happened is the Lemongrass network upgrade which was successful and that was CIP 17.
00:00:53.205 - 00:01:56.095, Speaker A: But I guess congratulations to everyone who played a role in that making it successful, especially all of the node operators. And on that note we have some CIPs that are coming up, both CIP 21 and CIP 24 as well as an upcoming CIP with identifier to be determined which will add a gas limit to each block. I want to spend some time going over Cips 21 and 24. Those are different than the gas limit. And cover what is CIP25 which includes all of these ones that I mentioned under the v3 network upgrade, which we're going to call the Ginger Network upgrade. So first things first, I think we can go to CIP21 and I'll cover that abstract. I don't know if columns here or not, I think he's actually out.
00:01:56.095 - 00:03:23.205, Speaker A: But CIP 21 introduces a blob type with a verified signer and this introduces a blob type where you can know who signed the blob and that address is included and verified. This was moved to last call from review for the last call deadline of October 7th this year. So yeah, I guess this is the right time for anyone to bring up questions about this before there was no verified signer, I think, I guess one of the things that came up in discussion is whether or not they go down to the reference implementation. I think whether or not the signer is the account that paid for the blob or the account that sign the blog. But I think that's maybe getting too deep in the weeds. But yeah, I guess if you have feedback on this, now is definitely a good time. But also if you want to comment on the forum or open a pr, that's the right way to do it.
00:03:27.625 - 00:03:30.247, Speaker B: I think one thing that's. Go ahead.
00:03:30.401 - 00:03:34.771, Speaker C: Yeah, you said that it becomes final October 7th, right?
00:03:34.963 - 00:03:35.819, Speaker A: Yeah.
00:03:35.987 - 00:03:36.735, Speaker C: Cool.
00:03:37.035 - 00:03:38.295, Speaker A: So that's the deadline.
00:03:40.275 - 00:04:09.031, Speaker B: I think one thing that I wanted to mention that I think is important is that this still Enables you to submit blobs the old way. So this will just be a new option for roll ups that want to use that way but is not required. So yeah, I think that's important for. I guess.
00:04:09.183 - 00:04:10.355, Speaker A: Thank you for catching.
00:04:10.735 - 00:04:22.215, Speaker B: Yeah that they sort.
00:04:22.824 - 00:05:27.755, Speaker A: Yeah I guess I don't know if there's anything else that anyone wants to bring up on this. I think it's pretty straightforward and as Evan mentioned that this will go to final on October 7th and then for CIP24 this is one that I have a little bit less context on. This is for version gas schedule variables which transitions to hard fork only updates for gas schedule variables. So blob gas per blobbyte and auth transaction size cost per byte will no longer be modifiable by governance. So these will be consensus breaking and require a breaking network upgrade to do this. This is also in last call with the same deadline of the 7th of October. So between now and then if you have any feedback that would be the right time to add it in.
00:05:27.755 - 00:06:43.505, Speaker A: I think something maybe to cover actually is we changed a lot of the doc or all of the documentation I guess except for this to clarify that a network upgrade is when there are consensus breaking changes and else it will just be a normal like regular upgrade that's not consensus breaking. Okay. So unless there's any questions or comments there, I think this one's also pretty straightforward. I would like to jump to CIP 25 and I think I might need to invite Evan to talk about the CIP that is to be determined. Yeah, I can jump to that in a sec. Sorry Evan, but for the Ginger network upgrade this will be for V3 this is consensus breaking and this is a meta CIP. So it basically just includes the CIPs that are included with the network upgrade.
00:06:43.505 - 00:07:02.837, Speaker A: As I mentioned, the blob type with verified signer and the version gas schedule variables are included as well as something that Evan will be working on for limiting compute per block. So Evan, I guess if you want to take that. Yeah, sure.
00:07:02.941 - 00:08:09.505, Speaker C: The limiting compute per block Rashid has done some benchmarks on and what we found out is that the thing that we care about is process proposal. So how long does this take when we're like blocking consensus and we have about half a second worth of time. So in that half second worth of time we can execute, we want to measure like what's the heaviest, what's the most message sends we can execute, what's the most IBC client updates we can execute, what's the most PFPs we can execute in that period of time to like processing those during process proposals, making sure they follow all the block validity rules. And what we found out is that we can do a lot more PFPs than we can other things, at least in terms of gas limit. That's problematic because we can't just set a gas limit now. So this is why it's TBD and not. We don't like have a CIP open and we're doing, not doing, just changing the gas limit because we can fit so many more pfbs in than normal transactions.
00:08:09.505 - 00:08:59.989, Speaker C: It's significantly more likely that we'd have. Or you'd have to lower the gas limit. You'd have to have a gas limit that's very, very low, which means that you would leave room for blobs like there would be room in the block to fit more data, but we wouldn't be able to fit those data, fit those data in because we, the gas limit would block the PFPs from being included. So we're still figuring out like a better solution to that. There's basically two that are kind of slightly different solutions that we're sort of looking at now that are pretty simple fixes. Crude but simple. You can change the resource pricing.
00:08:59.989 - 00:10:10.933, Speaker C: It's the first option. So this fixes that issue where pfbs are using can use significantly more gas than these other messages that take longer to execute. And then the second option is to have a very crude separation of the fee market for that. And you can do that simply by limiting the number of non PFB transactions. So if we limit the number of non PFB transactions, but don't limit the number of PFB transactions or put a limit on that still fits in with this within this half a second, then that means we're sort of having like a multidimensional fee market in the sense that they're priced differently. I'm, I'm, I can pay a lower gas price for a PFB as opposed to something like a message send and the PFB will get included because we have room for it where the message send might not, even though it has a higher gas price because the allocation for message sends or IBC client updates, et cetera, has already been filled. So those are the two options that we're sort of looking at right now, at least as far as I understand.
00:10:10.933 - 00:10:28.295, Speaker C: Rashid, correct me if I'm wrong. Rashid is writing up, writing up some of our options might extend beyond those two. And we're having a sync tomorrow to try and evaluate those. Nash, you have your hand raised.
00:10:31.235 - 00:11:05.801, Speaker B: I guess I had it for a different thing but would it make sense on this topic? Would it make sense to. I know it can't be enforced by consensus but you could write let's say the validator in a way that they pick PFPs more preferably from the mempool than other transactions.
00:11:05.993 - 00:11:37.175, Speaker C: That's interesting. So it's a non consensus breaking change to sort of fix the gas limit issue that we're hitting now. So we'd set the gas limit and then by default if a validator doesn't change this, it will prefer pfbs but it won't actually make it like consensus critical. Yeah, that's a good idea. I like that. We should include that in our. Rashid, are you on the call?
00:11:38.515 - 00:11:40.995, Speaker A: I think so. Cool.
00:11:41.115 - 00:11:45.815, Speaker C: I'll talk with Rashid and make sure he's aware of that. That is a potential option as well.
00:11:46.275 - 00:11:50.375, Speaker B: Yeah, that could be like a bandaid before. Well there's.
00:11:51.315 - 00:11:57.255, Speaker C: Yeah, exactly a band aid and it's nice because it can be pushed in like a patch.
00:12:01.365 - 00:12:02.145, Speaker B: Cool.
00:12:04.285 - 00:12:24.185, Speaker D: Isn't the concern here that a block could have too many transactions that would exceed the 0.5 seconds we have allocated to process proposal? So if it's not consensus critical and hypothetically a validator like modifies their software then we could have a bunch of blocks that take longer than 0.5 seconds.
00:12:25.265 - 00:12:45.685, Speaker C: If a validator does then that would mean that they wouldn't get that block included. Their proposal would be not would we wouldn't be able to reach consensus on their proposal. So it's. It definitely has trade offs. But yeah. Does that make sense.
00:12:48.785 - 00:12:49.525, Speaker D: John?
00:12:50.385 - 00:12:52.165, Speaker C: Or wait before John retool.
00:12:53.105 - 00:13:07.177, Speaker D: Why wouldn't we be able to reach consensus on it? Why wouldn't it just take longer to reach consensus on it? Like oh, because we're going to decrease the process proposal timeout. Yeah, got it.
00:13:07.321 - 00:13:29.525, Speaker C: This is for like an 8 megabyte block. I think it can take up to. If you filled the eight megabyte block up with message sends or IBC client updates, it can take like five seconds to process all of those transactions. Now that's thousands of transactions but it could take that long. In which case we would not reach consensus in that block. John.
00:13:31.585 - 00:14:27.435, Speaker E: I wanted to guess provide some more intuitions for posterity because we discussed this but not in the context of this call, which is that if the proposal doesn't reach consensus then this is not an issue because it doesn't reach consensus. If it does reach consensus then there's also not an issue because at least two thirds of the validators were in fact able to process the block in a timely manner. So any concerns around not being able to process the block quickly are moot. Of course there might be some smaller validators on the tail end of the 1/3 that may not be able to process blocks quickly. But that's like. That's given the fact that, you know, we're not talking about people running on Raspberry PIs, I find that highly unlikely that if a block gets consensus then you should expect computers to be able to process like all the computers on the network are going to be able to process that block at a similar rate.
00:14:28.215 - 00:14:51.255, Speaker C: Yeah, exactly. It's nice in that way. As long as the default always works, then we should be covered. Thank you for suggesting that, Nash. We didn't have that as our options. I like that option.
00:14:54.915 - 00:15:01.499, Speaker A: Sorry my zoom crashed, I missed context. But yeah, I don't know.
00:15:01.547 - 00:15:07.815, Speaker B: We just finished discussing the CIP tbd.
00:15:08.115 - 00:15:09.243, Speaker A: Yeah. So.
00:15:09.299 - 00:15:42.355, Speaker B: And we ready to move on. But what I wanted to ask is a new topic While going through CIP 24 it says that it changes how gas is estimated but that gas estimation does not change like it. Like there's. There are code changes, but I would still pay the same amount of gas for the same block.
00:15:45.495 - 00:15:48.487, Speaker A: Is it just that it's hard coded?
00:15:48.671 - 00:15:57.325, Speaker F: Yeah, values have not changed, it's just that they became constants instead of governance. Modifiable params volumes are typed.
00:15:57.905 - 00:16:05.845, Speaker B: Well, just wanted to double check. So like no users affected. Cool, thanks. That's it?
00:16:10.385 - 00:16:44.415, Speaker A: I think I was asking it as my computer cut out on me and I know that part of this network upgrade is going to be a reduced block time and I was wondering if that's something that is covered any. I don't think it's covered anywhere in a CIP or if it needs to be. But if anyone has more context to add, I feel like that is important to talk about for this network upgrade and then also just kind of for node operators. Actually I'll wait for that one.
00:16:45.635 - 00:17:43.165, Speaker C: Yeah, that's a great point. So technically speaking it's not consensus breaking, changing the timeouts because they're already configurable. Now I think a validator on Mainnet for example has changed their timeouts which results in every time they produce a block it's a six second block and not 12 seconds because of that. I don't think we like our little engineering brain filters didn't go off and that we needed a CIP here, but we probably do. So that's a good point. And a very important aspect of this network upgrade is that block times are now by default instead of being configurable by the validators, they get overridden. So the reason for doing that is that you can coordinate based on app version or something else.
00:17:43.165 - 00:17:51.765, Speaker C: And for the app version V3 the timeouts get set so that the block time is about six seconds.
00:17:53.665 - 00:18:01.409, Speaker A: So this is from my understanding, doubling throughput. Right? Yeah.
00:18:01.457 - 00:18:05.205, Speaker C: Block size stays the same but the block time decreases by.
00:18:07.555 - 00:18:21.895, Speaker A: Cool. Yeah. I will connect with you on that and how we think that should work if it needs one, but I think we're probably good for now.
00:18:22.755 - 00:18:24.315, Speaker C: Cool, thanks for bringing that up.
00:18:24.435 - 00:19:03.615, Speaker A: Yeah, you're welcome. The other question I had was more for node operators and the these cips are state breaking. But the way that the upgrade will work is going to be a little bit different than the Lemongrass upgrade, I'm pretty sure where an upgrade flag was provided. I don't think this is going to tell me anything, just scrolling through it where an upgrade flag was provided and I don't think that's necessary anymore. So could someone who's more familiar with that please just quickly detail how that works?
00:19:04.635 - 00:19:50.837, Speaker D: Yeah, so you're spot on that the V2 upgrade was coordinated with this upgrade height that we kind of communicated or it was communicated externally and then everyone provided that as a flag when they started up their Celestia app binary. For v3 it looks different. There's actually this in protocol signaling mechanism which is the SIP you're talking about here sip 10. So that got included in v2 so we can use it for the upgrade from v2 to v3. And the way that this works. So the way that this works is validators after they upgrade their binary they're going to submit a transaction on chain. If you scroll down a bit there should be message signal version like as a type.
00:19:50.861 - 00:19:51.077, Speaker E: Yep.
00:19:51.101 - 00:21:02.215, Speaker D: Okay, so that thing and basically validators are going to submit these messages on chain. Put the version that they're running or that they are like now supporting basically. And once 5, 6 of the network of the voting power of the network has voted for a particular version, anyone can submit a message. That is the message try upgrade thing that's right below that and that'll start off this like countdown clock that is like currently configurable but it's a week long by default. And so a week after 5,6 of the network has upgraded there's like a grace period where the last 16 can upgrade basically and get everyone onto the next version before the entire chain upgrades to the next version. So hopefully I described that clearly there are a few like queries you can see on chain and we actually built this utility called the upgrade monitor that you can use. It is 56 is the quorum not 2/3? There's actually like a little rationale calum put in here about like why 56 instead of 2/3.
00:21:02.215 - 00:21:42.225, Speaker D: But I was talking about the upgrade monitor thing. There's a way for you to query how much of the voting power has signaled for a particular version. So expect us to like use that to query how much of the network is upgraded. This will be pretty easy on Arabica where all the validators are like run by us, basically run by our DevOps team. But for Mocha and for Mainnet we're going to end up simulating the actual process where each validator signals their version. We wait a while until enough of the network is upgraded or signaled and then we upgrade.
00:21:43.015 - 00:22:00.835, Speaker A: That's it. Nice. So when five six that quorum is hit, does the network just automatically upgrade? So like the secondary question there is will there be like a expected time of this upgrade or is it strictly based on the quorum?
00:22:01.815 - 00:22:41.275, Speaker D: Yeah, so it's based on the quorum but there's a delay. So after 5, 6 is upgraded a manual action needs to be taken and you can kind of assume that anyone like we actually have a utility that will submit that message try upgrade thing as soon as 5,6 of the network has upgraded and then there is a one week delay after that quorum has been met or after someone has submitted the message try upgrade. So there's like three series of steps. Maybe I should draw a timeline to make it like extremely clear. But it's basically wait until 56 is voted message try upgrade. One week later, the whole chain upgrades.
00:22:41.615 - 00:22:50.279, Speaker A: Nice. Yeah, I think it's clear enough in the actual cip. Yeah. So thank you for explaining more on that.
00:22:50.447 - 00:22:51.195, Speaker C: Yeah.
00:22:52.135 - 00:23:57.125, Speaker A: Anyone else have questions there on CIP 10 or even the other ones that we've talked about today? I'll take the silence as a no. And on that note, I want to just leave the floor open in case there's anything else anyone has to discuss or if there's any questions about things we've discussed. Again, actually something that I realized I asked, I made a poll in the Telegram a long time ago now. Okay. About like three weeks ago and I was curious if there's another day that works best for core devs calls. There were a lot of tallies for Friday, but being Aware that a lot of us are in maybe EU time zones. I don't think that's ideal.
00:23:57.125 - 00:24:17.725, Speaker A: Be like 6 o'clock on a Friday for a lot of people and then even 8pm for some others. So I'm wondering if we can kind of like bring this back to the chat if we need. But I'm wondering if Thursdays would be a good day for this or if we just want to keep them on Wednesdays.
00:24:19.345 - 00:24:38.027, Speaker B: I mean, we can maybe a good follow up another poll could be to exclude Monday because nobody wants Monday and also exclude Friday because of EU and then see again how with those days not being in. What's the consensus?
00:24:38.211 - 00:25:10.795, Speaker A: Yep, sounds good to me. Yeah. And on that note, that's all I have, so thank you for coming and I think, I guess follow up question there is, are we safe to schedule this at the beginning of November or do we think we need to do this in two weeks so that we can stay on top of the ginger upgrade? If there's no hard preferences, I think we can do it in a month.
00:25:13.865 - 00:25:17.845, Speaker B: Do we have a set date or timeline for the ginger upgrade?
00:25:18.825 - 00:25:27.769, Speaker A: I think it's supposed to go into Arabica next week. Yep, Arabica next week.
00:25:27.857 - 00:25:32.249, Speaker C: And then there's about a month delay for Mocha and then I think a month delay for Mainnet.
00:25:32.377 - 00:25:35.129, Speaker A: Yeah, so we have about two months until Mainnet.
00:25:35.297 - 00:25:41.035, Speaker C: Yeah, I think December 4th is for Mainnet. If I recall correctly, it's the most important date.
00:25:42.455 - 00:25:50.115, Speaker B: I guess the only thing important would be the TBD CIP that it needs to be going to go through.
00:25:51.255 - 00:26:17.365, Speaker A: Yeah, I think tentatively, maybe we should do a call in two weeks. I'll go ahead and schedule that and then maybe we can do a month after that. We'll see. Yeah, it can be quick. Thank you again everyone for coming. I think we're good to call this the end of the call. Thank you for coming.
00:26:17.865 - 00:26:19.177, Speaker F: Thanks, Josh. Bye.
00:26:19.241 - 00:26:19.385, Speaker A: Welcome.
