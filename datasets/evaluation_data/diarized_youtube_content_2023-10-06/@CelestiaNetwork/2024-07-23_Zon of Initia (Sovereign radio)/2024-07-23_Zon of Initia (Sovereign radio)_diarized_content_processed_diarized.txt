00:00:00.880 - 00:00:09.430, Speaker A: Hi, I'm Anna, the host of the Zero Knowledge podcast, and I'm here with Zon, one of the co founders of Initia. Welcome to Sovereign radio.
00:00:09.590 - 00:00:11.770, Speaker B: Thanks for having me. Are you excited?
00:00:12.350 - 00:00:18.110, Speaker A: I'm excited, too. I want to hear more about Initiat. What is this project? Where did it come from?
00:00:18.230 - 00:00:36.310, Speaker B: Okay, I'll give you the abbreviated rant. Essentially, Initia is a network for interwoven roll ups. What we're trying to do is holistically rebuild how multichain networks should look, feel, and operate along the architecture stack, the product stack, and the economic pieces that tie them together.
00:00:36.610 - 00:00:45.850, Speaker A: Would you then place yourself in the Cosmos celestia ecosystem? Are you working at all with Ethereum, or are you really outside of that?
00:00:45.970 - 00:01:15.412, Speaker B: Yeah. So I'd say we do definitely fit within the modular thesis because we have a system of basically multi chain, but we use the Cosmos SDK as the foundational system for our L2s as well as the layer one. But we support multiple different VMs, so EVM, moviem, WaSm, VM. I don't think we are necessarily part of the cosmos ecosystem to a degree. We're trying to rebuild what Cosmos was originally trying to do.
00:01:15.476 - 00:01:15.964, Speaker A: Oh, wow.
00:01:16.052 - 00:01:43.996, Speaker B: We're just really big believers of the app chain thesis, the understanding that people will want to vertically integrate what they're building into a chain, make sure that they own all the value that they create, and ensure that there's a good, feasible way to do this without having things like the fragmentation you see right now, without the choice overload that you have when building rollups at the moment and ensuring that these teams have much better flexibility than rollups on Ethereum to date.
00:01:44.148 - 00:01:53.400, Speaker A: When you talk about rebuilding cosmos or the interchain, are you using something like IBC, or do you not use IBC? Is that one of the key?
00:01:53.480 - 00:01:55.280, Speaker B: It's a good question. No, we do use it.
00:01:55.320 - 00:01:56.416, Speaker A: You do? Okay.
00:01:56.608 - 00:02:41.650, Speaker B: So IBC is just a great messaging protocol. It does have its problems, though. So one of the biggest problems about IBC is it's pairwise dependent, meaning that if you went from chain a to b to c versus a to c directly, you'd get two different tokens, which is horrible for what you want of, like, a bridging protocol. We actually use IBC to connect to other Cosmos chains, but we recently announced that we built a Cosmos SDK module with the layer zero team that essentially enshrines layer zero messaging within a L2, as well as the layer one on initiat. Anytime you launch a new roll up, you basically have out of the box IBC support as well as layer zero support.
00:02:42.190 - 00:02:51.878, Speaker A: What does that actually give you, though? It almost sounds like, are you using IBC to come into the ecosystem? But once you're in the ecosystem, you're using something else to move between it.
00:02:51.974 - 00:02:55.254, Speaker B: So we use IBC to move between L2s and the layer one.
00:02:55.342 - 00:02:56.302, Speaker A: Oh, you do? Okay.
00:02:56.366 - 00:03:34.024, Speaker B: Yes. And then we also have the optimistic roll up bridge. But you can kind of decide which one you want to use. And then if you're moving from, say, a cosmos chain like osmosis or celestia to your roll up or to hour layer one, you would use IBC from osmosis to initia and then to your roll up. But if you're bridging assets from Ethereum, say something like Athena's s USDE, that layer zero module gives you mint burn permissions of USDE. So we can bring over those assets as, like, native assets without having to go through something like Axler and creating, like a Axler USDE token.
00:03:34.112 - 00:03:42.666, Speaker A: Yeah. And I guess because it's our already in the module that people are using to deploy these roll ups, is it standardized throughout it already?
00:03:42.818 - 00:03:43.202, Speaker B: That's right.
00:03:43.226 - 00:03:44.554, Speaker A: You don't have to do anything extra.
00:03:44.642 - 00:04:33.694, Speaker B: You don't have to do anything. One of the reasons we did that is because our L2s on initia are essentially full fledged Cosmos SDK chains. We ripped out a couple of modules and you put in our roll up module. That creates the optimistic bridge between our layer one and your L2. You can change anything about the roll up itself on the Cosmos SDK side. So whether that means how transactions are ordered, the way that those transactions are processed, you could take something like osmosis or bear chain or DyDX and turn those into a roll up very easily. Then on top, we've built a new EVM on Cosmos, a movie on Cosmos, and there's WaSM VM bye as normal, because all of those are different vms that you can use.
00:04:33.694 - 00:04:43.810, Speaker B: We built this layer zero module as within the Cosmos SDK side. So despite what VM you choose to use on top, you still have layer zero messaging.
00:04:44.190 - 00:04:51.870, Speaker A: Those are actually roll ups that you built these different vms. Do you expect people to build other vms? Is it open to do that or.
00:04:51.910 - 00:05:16.480, Speaker B: It'S open to do that? Essentially, any VM that you could put on Cosmos SDK, you could then launch as an initial roll up. But I'm not really seeing much demand outside of these three vms. I think the SVM, for example, people are talking about. It's going to become modular. We're going to have L2 s. I think the demand for Solana is like, we care about the Solana ecosystem. We like the users and apps.
00:05:16.480 - 00:05:19.832, Speaker B: No one's like, the SVM is the best language to write in.
00:05:19.976 - 00:05:35.316, Speaker A: It's actually the first time I've heard SVM, but that's a good shorthand for the Solana Vm. It sounds like you already have a lot of experience in the Cosmos world. I'm super curious, what were you guys doing before? Why do you feel you could rebuild this better?
00:05:35.428 - 00:05:38.428, Speaker B: Yep. Very good question. So I.
00:05:38.484 - 00:05:39.412, Speaker A: What have you seen?
00:05:39.516 - 00:05:51.478, Speaker B: Yeah, I've seen a lot, let me tell you. So I got into crypto back, and during Defi summer, I played a lot within Ethereum land. That's still where I play mostly when it comes to Defi.
00:05:51.534 - 00:05:52.130, Speaker A: Yeah.
00:05:52.790 - 00:06:23.190, Speaker B: Then I became a big believer of the app chain thesis. Vertically integrate what you're doing, have a shared threat of infrastructure for all things, interoperability. Cosmos was really the only relevant thing at the time that did it. And the only relevant chain within Cosmos was Terra. So I worked at Terra as a smart contract developer, helped build some of the Dapps, was loaned out to the ecosystem to help build those. And then in early 2022, I left with my current co founder, Stanford, to build our own project called Sigma, which was also on Terra.
00:06:23.490 - 00:06:32.314, Speaker A: Wow, your timing. So you had been part of Terraform Labs, like the actual company behind Terra, but you left before everything went down.
00:06:32.402 - 00:06:47.288, Speaker B: I became basically like an Eir. So I was still in the company, but I was now working on my own project. We had just finished fundraising for it. We were set to launch and the collapse happened one week before our launch.
00:06:47.464 - 00:06:49.024, Speaker A: Wow. And then you didn't launch.
00:06:49.072 - 00:06:51.304, Speaker B: I guess we did not launch. We then launched.
00:06:51.312 - 00:06:58.104, Speaker A: Would have been amazing if you still launched actually, on Terra two, I don't even think it existed yet.
00:06:58.152 - 00:07:04.440, Speaker B: But, yeah, a lot of the value prop would have been lost. I think mostly it was about the ways that we could tap into anchor and the ways that we could tap.
00:07:04.480 - 00:07:06.094, Speaker A: Into the ecosystem projects.
00:07:06.272 - 00:07:17.282, Speaker B: And so then we basically just returned all the money that we raised back to our investors and said, yeah, believe in whatever we build next. And then some of them did when we started initia, maybe about four or five months later.
00:07:17.346 - 00:07:18.018, Speaker A: Okay.
00:07:18.154 - 00:07:39.722, Speaker B: And so we saw the comings of Cosmos. We saw all the problems of, like, what it takes to build a cosmos chain. It's a pain in the ass. To build a layer one, you have to bootstrap a validator set, you have to inflate your token supply. You have to deal with IBC relayers. It's just a daunting task. But Cosmos SDK is the most flexible stack to build unique blockchains.
00:07:39.722 - 00:08:49.092, Speaker B: And I think that'll forever be the case. If you look at Ethereum and roll ups there, which started to rise around right around this time as well. You can launch chains very easily, but you get the same copy paste fork basically everywhere you go. If you use Caldera, conduit, any of these RAS services, the only differences that you can do are on the smart contract level. And there might be a lot of compelling reasons of why you want to change the chain. And the fragmentation that you saw within Cosmos and the assets there, the fragmentation you see across rollups on Ethereum right now, if modular expansion continues like ten DA layers, 15 interoperability solutions, all these oracles, it's going to become a shit show. And so we said, how can we design a layer one plus L2 solution that gives people the flexibility of Cosmos SDK, the ease of launching rollups from Ethereum, and removes all the biggest problems when it comes to how you send assets between chains, how you launch them, what types of vms you can use, what the product UX looks like, how the economics work.
00:08:49.276 - 00:08:55.004, Speaker A: But then don't you have that problem of bootstrapping the validator set at getting the value as well?
00:08:55.172 - 00:08:59.560, Speaker B: The initial layer one does have to deal with that. It does have to, but no, L2 has to deal with.
00:08:59.600 - 00:09:01.580, Speaker A: At what stage is the l one?
00:09:02.000 - 00:09:07.032, Speaker B: It's all done. So we are maybe just a couple months out from Mainnet.
00:09:07.096 - 00:09:07.376, Speaker A: Oh, wow.
00:09:07.408 - 00:09:10.440, Speaker B: We just finished an eight week public testnet.
00:09:10.520 - 00:09:10.824, Speaker A: Cool.
00:09:10.872 - 00:09:44.860, Speaker B: Went extremely well. We hit over 100 million transactions across the eight L2s that are live on initiative right now, as well as our layer one. Nearly 2.8 million wallets. And the roll ups that are live right now are not like, the goal wasn't just spin up roll ups and have people test those. We've been working with a strong suite of teams that have built novel, native, interesting new applications, and they launched those on Testnet so that when we launched day one on Mainnet, we already have an entire ecosystem of applications and rollups to play with.
00:09:44.940 - 00:09:53.876, Speaker A: I want to hear about all of the roll ups, because you mentioned three vms, but what else is there then? And have you built the other roll ups so far? You said eight.
00:09:53.988 - 00:09:56.052, Speaker B: There's eight. They're all built by external teams.
00:09:56.116 - 00:09:56.460, Speaker A: Okay.
00:09:56.500 - 00:10:04.372, Speaker B: So we basically give teams a way to build rollups very easily, and they can pick what smart contracting language they want.
00:10:04.436 - 00:10:05.120, Speaker A: Okay.
00:10:05.460 - 00:10:12.924, Speaker B: And then, you know, if they want to change things on the Cosmos SDK side, they can. So I'll give you a couple of examples of teams.
00:10:12.972 - 00:10:18.922, Speaker A: You don't have to list all eight, but maybe just like the highlights and. Cause I'm kind of even trying to picture what kind of roll ups.
00:10:18.996 - 00:10:19.230, Speaker B: Right?
00:10:19.270 - 00:10:20.854, Speaker A: Like, what are they doing? What are they.
00:10:20.942 - 00:10:34.838, Speaker B: There's a project called Blackwing. So they have raised 4.5 million from hashed and gumi. They are basically building what they call the modern Dex abstraction layer. And so what that means is, do you know what infinity pools is?
00:10:34.974 - 00:10:35.638, Speaker A: Not really.
00:10:35.734 - 00:11:18.440, Speaker B: It's basically a concept where you can collateralize lp tokens from like a uni V three or uni V two position and then perform leverage on the assets within there. So if you have tokens that make it off pump fun and are on radium, you can then collateralize those and perform leverage on those meme coins. And you can do this basically for any liquidity pool. So what they've done is they've built this system called limitless pools, which is an extension of this, and then use their L2 as basically a intent hub. So they can do leverage on any asset, on any chain, all fulfilled by their intent hub. And their limitless pools design is that.
00:11:18.600 - 00:11:26.688, Speaker A: Specific to any chain in the initiative ecosystem, or any chain, any chain, anywhere connected to. Oh, wow, that's cool.
00:11:26.744 - 00:12:04.156, Speaker B: So that one's really cool. There's another one called Milky Way. They raised five mil from polychain and Binance. They are the first liquid staking token or platform for Celestia. Now they're building a restaking portal using their chain as basically the issuance hub where all these AVSs will be stored, creating a restaking system for basically, like sovereign roll ups and other modular things that need to have security. And then there's a project called Contra. They are building something called the Glob, stands for gradual limit order book.
00:12:04.156 - 00:12:12.208, Speaker B: And it's basically a twap mixed with an order book that slows down markets. And it's built specifically for prediction markets.
00:12:12.264 - 00:12:12.792, Speaker A: Oh.
00:12:12.896 - 00:12:41.376, Speaker B: So one of the problems about prediction markets is they're susceptible to front running right now. Things like polymarkets, they use kind of like a more uni V two style pool. So if someone finds out information quicker than someone else, they can basically snipe the entire bid and like, win all the profit. The glob slows down those markets. So if I find something out sooner than someone else. I don't necessarily win the entire bet. I just need to be directionally correct within a certain timeframe.
00:12:41.376 - 00:12:44.616, Speaker B: And that makes for much fairer prediction markets.
00:12:44.808 - 00:13:00.684, Speaker A: Somewhere in the literature, as I was doing research for this, there was talk of one of the problems you're trying to solve is fragmentation. I don't know if this is still something that's you're thinking about. Can you share a little bit about at least what your thinking was and if you are still doing it?
00:13:00.732 - 00:13:28.718, Speaker B: Sure. Yeah. So one of the big problems within cosmos, like I was saying, because everyone uses IBC, is you have these pairwise dependencies. So when Cosmos was coming to light, originally, Atom, which was the hub, was supposed to be like the router for all tokens. Because everything then goes through atom. You basically don't have this fragmentation happened. But once you had osmosis, which became like the Dex chain, you had things like Axler.
00:13:28.718 - 00:13:34.486, Speaker B: People were like, where is the canonical token sourced from within, especially staples?
00:13:34.598 - 00:14:00.448, Speaker A: I'd say that's the example I often hear is like, the USDC, the AUSDC, or TC. There's all these USDC with another letter. And the reason those are there is because they're using some sort of bridge and you might end up with USDC, but all these different variations, and even those like an Axel or USDC might also be on other chains. So you could own USDC on two chains. They're like separate.
00:14:00.504 - 00:14:30.730, Speaker B: Yeah. And it gets even worse because you could say, this is Axler USDC from the osmosis chain that's brought to me. Or this is the Axler USDC that's from the axler chain that's brought to me. And those would be different tokens too. And so noble, they kind of solve this problem for stables within cosmos because they issue USDC on their chain. And then if you're sending from, say, chain a to chain b, that USDC, it always has to route through the noble chain. So the last hop is always from noble.
00:14:30.850 - 00:14:32.042, Speaker A: So it keeps it kind of canonical.
00:14:32.066 - 00:14:34.746, Speaker B: So you have like, this kind of canonical fungibility of SQL.
00:14:34.778 - 00:14:35.394, Speaker A: Yeah, yeah.
00:14:35.522 - 00:14:47.972, Speaker B: And so in initiatives world, we do something similar. We have IBC paths connected to our layer one on these L2s. And basically, if you're sending from roll up to roll up, those assets go through our layer one.
00:14:48.036 - 00:14:48.364, Speaker A: Okay.
00:14:48.412 - 00:14:52.972, Speaker B: And so you always have the final path coming from the layer one. So you used to have this sense of fungibility.
00:14:53.076 - 00:14:58.012, Speaker A: Would you still say that's one of the problems you're trying to solve, or do you feel like, Noble has sort of solved it.
00:14:58.116 - 00:15:21.612, Speaker B: Definitely. So Noble solved it coming into initia. But then say there's a new token, like a Milky Way token that gets issued on the Milky Way chain. You still want to be able to send these to other roll ups or to other applications without there being multiple versions of that, because all those still route through our layer one. There's still only one type of that Milky Way token.
00:15:21.636 - 00:15:29.780, Speaker A: Then what happens, though, if bridges get built between these roll ups, independent? Could you end up with a similar fragmentation?
00:15:29.820 - 00:15:50.778, Speaker B: You could. That's one of the things about initiatives. We're very opinionated on the way that this architecture is built. Like, we don't say you can use these three different DA options. We don't say there's these five oracles or all these ways to bridge. We basically build in a lot of these systems and enshrine them.
00:15:50.834 - 00:15:51.386, Speaker A: Okay.
00:15:51.498 - 00:16:08.960, Speaker B: And then roll ups on top of initiative, they have the flexibility of choosing their vm and changing things on the SDK side. But usually these other pieces are not that critical. Like, the reason to choose one Da layer over another is really about, like, which one hasn't done their airdrop yet.
00:16:09.340 - 00:16:09.964, Speaker A: Okay?
00:16:10.052 - 00:16:14.964, Speaker B: So to a sense, they're fungible, and those aren't really decisions that application teams care about.
00:16:15.012 - 00:16:15.348, Speaker A: Okay.
00:16:15.404 - 00:16:19.340, Speaker B: They care about building their apps, and we just want to make it as easy as possible to do that.
00:16:19.420 - 00:16:39.966, Speaker A: I just realized, like, so you talked about the eight roll ups, but. And then you started to describe them, but then you also had talked earlier about the VMsheen. I always think of these vms as the roll ups, sort of like the ZKM or the. Like that the VM is in that. Is that not the case in yours? Like, I'm kind of now a bit confused.
00:16:40.038 - 00:16:51.598, Speaker B: So you have a roll up. Right. You can imagine as a Cosmos SDK chain, then you can decide between three vms out of the box. Yeah. What type of VM you want on that roll up.
00:16:51.734 - 00:16:52.134, Speaker A: All right.
00:16:52.182 - 00:16:54.886, Speaker B: So, yeah, we support evm, move and wasm.
00:16:54.958 - 00:16:55.254, Speaker A: Yeah.
00:16:55.302 - 00:17:00.918, Speaker B: Right. Now, from those eight, I believe four are move, three are wasm, and two are EVM.
00:17:00.974 - 00:17:05.062, Speaker A: Wow. Four are move. Because actually, a question I had is, like, why move?
00:17:05.206 - 00:17:27.306, Speaker B: Right. So move is just a. I think it's going to be one of the biggest languages in the future. It is extremely easy to understand as a new developer. And the object model is just completely different from the way we built smart contracts right now. It's basically object oriented programming within smart contracts. And you're not figuring out how to put everything in a different map, which is really handy.
00:17:27.306 - 00:17:44.746, Speaker B: And a lot of teams that were building within Apdos and Sui originally, they wanted to become sovereign. They wanted to own the value that they create. They wanted to let their users use things like Metamask onboard from other chains. And building their own roll up was the best way that they could do it.
00:17:44.818 - 00:17:50.750, Speaker A: Wow. Can actually move vms work with Metamask.
00:17:51.980 - 00:18:17.740, Speaker B: That's interesting right now, but what we've done is we've built new signing types on the Cosmos SDK set, so you can technically sign with any EVM based wallet, any move based wallet, SVM wallets, Cosmos wallets, in app wallets. We built our own wallet on any of these L2s, despite them being in whatever VM. Interesting, because all the signing happens on the Cosmos SDK side.
00:18:17.820 - 00:18:30.408, Speaker A: That's cool. I actually had a question about wallets, and I'd seen that there is a wallet that you guys put together. But I was wondering if, like Kepler, if you could also use Kepler, can you use it also with the l one or just the l two s?
00:18:30.464 - 00:18:31.920, Speaker B: You can use the l one, too.
00:18:32.040 - 00:18:32.368, Speaker A: Nice.
00:18:32.424 - 00:19:11.682, Speaker B: And so one of the things we wanted to do for these roll ups is just lower the barriers to entry. I want it to be as easy as possible for users on Ethereum to come use the applications that are here. And one of the ways we did that is we built a wallet widget. It just basically lets you connect to any wallet available, despite what VM the L2 is in. The second thing we did was built a bridge widget, and it aggregates the flows over layer zero. IBC, CCTP fiat on ramps directly into these roll ups. If I had to tell someone, like, bridge to the initial layer one through this front end, and then go, bridge to my L2 through this other front end, that'd be a horrible end user experience.
00:19:11.682 - 00:19:27.652, Speaker B: I want these app chains to feel like apps. You shouldn't even need to know that you have to go do all this complicated bridging. This bridge interface kind of just psyops. Is you a little bit into thinking I'm sending between all these different applications rather than I'm doing all this bridging in the backend?
00:19:27.836 - 00:19:48.032, Speaker A: Speaking of that, you kind of talked about being opinionated and choosing what is enshrined. But, for example, with a ZK EVM, can't anyone lock into existing bridges if they want to or couldn't the bridges deploy their EVM smart contracts? They could.
00:19:48.216 - 00:20:10.560, Speaker B: But whether we include that in, like, our bridge widget, which all these roll ups use whether we care about, like, promoting their assets. I think in the long term that could happen if they have significant sway. But I think for the interim and the way that we're trying to set this up, like, if those assets don't have liquidity, it's not like it matters.
00:20:10.640 - 00:20:10.896, Speaker A: Okay.
00:20:10.928 - 00:20:22.970, Speaker B: Like, Axelr by default is basically connected to any of EVM or any cosmos chain through IBC. But if we don't try and create a lot of liquidity for those assets, it's not really relevant.
00:20:24.070 - 00:20:30.054, Speaker A: What's your connection to Celestia? And are they the DA solution that.
00:20:30.062 - 00:20:33.302, Speaker B: You chose for all of our L2s? We just enshrine Celestia for DA.
00:20:33.366 - 00:20:33.974, Speaker A: Okay.
00:20:34.102 - 00:20:45.886, Speaker B: It's just something that we didn't care to think about, like how to scale that. We don't want state bloat on our layer one. And so, yeah, by default, just all the L2s automatically post their data to Celestia.
00:20:46.078 - 00:21:00.782, Speaker A: I have to ask a follow up here, though, because when I was reading about initia, the idea of an l one with these roll ups on it, it reminds me a little bit of the celestia model with the sovereign roll ups on it. So are you kind of competing? A little bit.
00:21:00.806 - 00:21:41.150, Speaker B: I think there's some similar ideas. So we actually have a full, optimistic roll up framework. So I think those have much better security guarantees than sovereign rollups. That's the op init stack that we built, which is basically similar to optimism's bedrock, but built within the Cosmos SDK. And then I think all of the stuff that we're trying to do on top of this system, so not only the architecture stack, but the product stack, the economic stack, those are going to be what actually helps drive a lot of new users and new L2s. And so I guess there is some competition to agree, but I don't think there's going to be any competition, really.
00:21:41.230 - 00:21:54.870, Speaker A: Okay. I mean, we're at the modular summit, so hopefully not. I thought I'd ask that question, though. So you're using the op init stack. It sounds like you've extended the op stack, perhaps, or is it.
00:21:54.910 - 00:21:58.752, Speaker B: It's basically just similar to the op stack, but in the cosmos SDK.
00:21:58.886 - 00:22:01.084, Speaker A: I see. Did you have to re implement it then?
00:22:01.172 - 00:22:02.340, Speaker B: Yes, we had to rebuild it all.
00:22:02.380 - 00:22:16.724, Speaker A: Ah, okay. I had originally thought it was like taking it and re okay, but you actually had to rebuild. Why did you choose fraud proofs? As the host of the Zero Knowledge podcast, it makes me slightly sad. So explain to me why the ZK.
00:22:16.772 - 00:22:26.978, Speaker B: Init stack can come at some point, but this was like, what's the fastest way we can get this thing to market? I see there are teams we want to work with. We want people to start using everything we've built.
00:22:27.044 - 00:22:27.454, Speaker A: Yeah.
00:22:27.542 - 00:22:41.398, Speaker B: Like, what's nice about owning this entire system from l one to roll up framework to communication layer to L2 system, is that we can change the architecture however we want in the future. Like if there's new tech that can be swapped out.
00:22:41.494 - 00:22:58.904, Speaker A: I see. When like op though, I think only recently had the actual fraud proofs implemented. So like when you built this, when you've been building it, have you been building it without fraud proofs as well? Did you have to like, have you added them? Like, yeah, I'm just curious.
00:22:58.952 - 00:23:37.356, Speaker B: We've added a system for doing basically challenges as well as rollbacks. So right now anyone can come submit a governance proposal to the layer one validator set to say like, oh, there's fraud happening on this L2. And then the layer one validator set would fetch data from Celestia and basically decide if they need to change like who the operator address is or where the optimistic bridge is. And then there's a system that can basically state sync and roll up from all the data and reconstruct the chain up to a certain point and basically just create a new instance of this roller.
00:23:37.468 - 00:23:41.884, Speaker A: Okay, that's kind of cool. Does that mean it's implemented or is that is implemented?
00:23:41.972 - 00:23:50.148, Speaker B: I don't know if that's exactly the same as full fraud proofs. I think that's something that we need to add next, but it shouldn't take us too long.
00:23:50.324 - 00:23:54.448, Speaker A: Inshaallah, do you have l three s?
00:23:54.624 - 00:23:55.340, Speaker B: No.
00:23:55.800 - 00:23:57.544, Speaker A: How do you feel about all three s?
00:23:57.672 - 00:24:30.688, Speaker B: So I think the reason l three s exists is like, will you get support from a chain? Right? Like the reason to build an l two is like, okay, we need scalability. The reason to build an l three is I want my own app chain, but I want optimism to help shill me, or I want arbitrum to help, or I want base to help give me users in initiatives world. Our entire goal is like, how can we help L2 teams win? Because if they win, we win. And so there's no real reason to build an l three instead of an l two on initiative.
00:24:30.744 - 00:24:38.776, Speaker A: Okay, so would you say though, then you're like discouraging the l three s because it's like the l two s? I guess they're, they could put in.
00:24:38.848 - 00:24:43.736, Speaker B: The same stack and build their own? Yeah, I just doubt they would do that.
00:24:43.808 - 00:24:49.336, Speaker A: Okay. One of the terms I saw was minisha miniature. What's Minisha?
00:24:49.408 - 00:24:49.776, Speaker B: Yep.
00:24:49.848 - 00:24:51.736, Speaker A: Minisha is the larger ecosystem.
00:24:51.808 - 00:24:54.328, Speaker B: Minisha is a mini initiative.
00:24:54.344 - 00:24:54.848, Speaker A: Okay.
00:24:54.904 - 00:24:56.620, Speaker B: That's what we call the L2s.
00:24:58.480 - 00:24:59.392, Speaker A: Those are the l two s?
00:24:59.416 - 00:25:02.224, Speaker B: Yeah, those are the l two s. And then we also have omniscia.
00:25:02.352 - 00:25:02.848, Speaker A: Okay.
00:25:02.904 - 00:25:06.552, Speaker B: Which is the set of all L2s and the layer one.
00:25:06.656 - 00:25:21.468, Speaker A: I see. That's the overarching system. That's the network. You had other things listed, like elastic block production. I mean, I kind of want to go through some of these, I guess. Are they features or, like, characteristics?
00:25:21.604 - 00:25:28.324, Speaker B: Yeah, they're kind of features and or characteristics of the L2. Oh, Minisha or minishas? Yes.
00:25:28.412 - 00:25:34.364, Speaker A: Okay. Are these like modules or these, like, add ons in the Cosmos SDK that they can implement or.
00:25:34.452 - 00:26:10.610, Speaker B: These are basically just like tweaks to how the Cosmos SDK runs specific for L2 sdhe, because the Cosmos SDK is just this flexible stack, but it's never really been done in a roll up fashion. Right now, Cosmos chains, they continually create blocks every fixed interval, typically around 3 seconds. We have these L2s running at about 500 millisecond blocks, and that's just a lot of blocks to create if there's no transactions coming in. With elastic block production, we just don't create a new block if there's no transaction.
00:26:10.690 - 00:26:11.434, Speaker A: Okay.
00:26:11.602 - 00:26:18.914, Speaker B: We say every minute we'll create one by default. If there are transactions that come in, then we'll switch to 500 milliseconds.
00:26:19.002 - 00:26:37.010, Speaker A: You'll go faster. I see. Okay. There's some other, there's some really cool things. One is called the initiative vested interest program. Do you want to share? Like, maybe highlight. I think there's quite a long list there, but maybe you want to highlight a couple of these.
00:26:37.050 - 00:27:07.264, Speaker B: Yeah. So when. Okay. When you launch a roll upon initiative, you have the flexibility of changing anything about the chain. On the Cosmos SDK side, you can pick whatever smart contracting language you want on top through the VM, and then through the layer one. You're basically provided anything you need. So instant bridging through IBC or layer zero, native USDC and CCTP access through noble enshrined oracles that are built within the layer one validator set system relayed to all the L2s.
00:27:07.264 - 00:27:48.564, Speaker B: So you don't need to do, like, pull based approach or need pith or anything like that. You have all the oracles. You need front end interfaces to connect to whatever wallets you want. The bridging interfaces to bridge directly in fiat on ramps elastic block production. And then there's this thing that we've built called initiative vip, and it stands for vested interest program. And it's basically a system designed to help L2s attract new users, but also to push the init token into the L2 apps themselves. And the reason we did this is if you look at Adam or Cosmos right now, no one gives a shit about the atom token.
00:27:48.564 - 00:27:58.948, Speaker B: And that's because they never did a good job of pushing Adam into the ecosystem. It's basically game of thrones. Everyone fights for themselves. They only care about their own chains token.
00:27:59.044 - 00:28:20.444, Speaker A: Although at the moment you do still see Adam as like often like in Cosmos land. It's like. Seems to be that I actually had an interview about this earlier, which is like, there's Tia and Adams still often as the two listed tokens. I would say maybe accidentally because it was first. I don't know if it's like.
00:28:20.572 - 00:28:34.860, Speaker B: Because it's ideal, I'd say within the modern cosmos, chains like neutron osmosis, that's probably it. No one cares about Adam at all, even though neutron is a ICS chain.
00:28:34.940 - 00:28:35.600, Speaker A: Wow.
00:28:36.420 - 00:29:17.490, Speaker B: Like they're just not relevant anymore. But if you look at systems like rollups on Ethereum, everyone cares about the ETH token. ETH is what's paid for gas on them. It is also like the canonical asset for every Dex or every lending market. And so in initiatives world, if we have thousands of roll ups in the future, we want to ensure that the init token has a good use case across them all. We're in the business of building block space here. We want these L2s to use whatever tokens they want for gas, whether that's their own native token or USDC or something else, things like burning the init token are unlikely to do something significant.
00:29:17.490 - 00:29:34.810, Speaker B: The best way that we can create value for initiative is building use cases for it vip. What it essentially does is it pushes init rewards two L2s, and builds them as key pillars within their applications.
00:29:35.350 - 00:29:52.692, Speaker A: Is this meant to be for. It sort of reminds me a little bit of these programs where it's built into the protocol itself, I guess. Is it funds going in? Is it to market make or to add liquidity into them, or is it to compensate the builders?
00:29:52.886 - 00:30:18.100, Speaker B: So it's a bit of both. I'll walk you through how it works because it's actually pretty complicated, but I think it's super cool. So what happens is on the initial layer one, there's a gauge vote every month. It says, okay, the layer one stakers say 30% of the vip rewards for this month go to this layer. 230 percent goes to this layer. 240 percent goes to this last L2. Then on each L2, there's two distribution parameters for those rewards.
00:30:18.100 - 00:30:25.778, Speaker B: One is init balances held by users, whether it be within the smart contract system that exists there or just their wallets.
00:30:25.834 - 00:30:26.218, Speaker A: Okay.
00:30:26.274 - 00:30:39.346, Speaker B: And the second is a KPI that the L2 team sets by themselves. So if they're a lending market, maybe they set their KPI as number of borrows or like amount of dollars borrowed for the user.
00:30:39.378 - 00:30:41.818, Speaker A: Like a user for the user did it. Okay, wow.
00:30:41.874 - 00:30:59.640, Speaker B: Maybe they're a perpetuals market and they say we care about volume. Basically, the initial system distributes rewards directly to users based on those two methods, balances and the KPI. And then they're distributed as escrowed init.
00:30:59.980 - 00:31:00.468, Speaker A: Okay.
00:31:00.524 - 00:31:16.582, Speaker B: And the way to unlock escrowed init is by maintaining your engagement over time. So if I earned a bunch by trading and doing all this volume, I have to continually maintain my volumes over multiple weeks to slowly unlock those rewards.
00:31:16.686 - 00:31:17.166, Speaker A: Okay.
00:31:17.238 - 00:31:30.534, Speaker B: As I do maintain my volume, I'll also earn more escrow. It's like a longstanding grant system as well as incentivization method that encourages, like, actual activity across these L2s.
00:31:30.582 - 00:31:36.570, Speaker A: Interesting. But don't do the l two s still look like l two s with, like, sequencers and fees.
00:31:36.870 - 00:31:43.624, Speaker B: They do look the same in the sense that there is a sequencer. We actually have decentralized sequencers by default.
00:31:43.672 - 00:31:44.064, Speaker A: Oh, cool.
00:31:44.112 - 00:32:01.448, Speaker B: So all these L2s have comet BFT underneath. And so you could technically have 3510 sequencers if you wanted. They have a series of bots that do, like, batch submission to Celestia. And then, yeah, they could have sequencer fees, but they get to keep all.
00:32:01.464 - 00:32:04.232, Speaker A: Of that and distribute it how they want, probably.
00:32:04.336 - 00:32:04.856, Speaker B: Yep.
00:32:04.968 - 00:32:11.440, Speaker A: Cool. So before we wrap up, what should people look out for in the initia ecosystem?
00:32:11.560 - 00:32:17.760, Speaker B: Yeah, so Mainnet is coming very soon, and that means we have about four weeks left of testnet part two.
00:32:17.840 - 00:32:18.464, Speaker A: Okay.
00:32:18.592 - 00:32:26.792, Speaker B: If you're interested in trying out the roll ups that have been built on initia as well as all the product features, just go to initiat XYZ and you can get started.
00:32:26.896 - 00:32:29.288, Speaker A: Nice. Well, thanks so much for this interview.
00:32:29.384 - 00:32:30.016, Speaker B: Thanks for having me.
00:32:30.048 - 00:32:38.430, Speaker A: It was fun to learn about initiative. Cool. And thank you for watching this episode of Sovereign radio. And stay tuned for the next one.
