00:00:01.610 - 00:00:47.900, Speaker A: So, yeah, let's talk about infra for fully on chain games. I'm sure you heard of a couple talks on this, but I want to take a slightly different approach. Let's talk about Keystone, which is what we recently developed as the new flagship, fully on chain game infra. But I'll take a slightly different approach where we start from the experience that on chain games need to or are uniquely poised to create, and then the design paradigms that can create those experiences. And finally, what infra can support those type of design paradigms. And for those of you who aren't familiar, Curio is a crypto native game and infrastructure company. We're basically all in on fully on chain games, and we want to make it happen as soon as possible.
00:00:47.900 - 00:01:27.222, Speaker A: And we're both building games to push forward the game design barriers as well as the infrastructure. So, yeah, that will be the structure of the talk. First, a quick philosophical detour. What do you think makes the real world feel real? Is it just the rendering quality or is there something else? And there's definitely an important piece to this, which is the social relations we have with other people. If you think about it, humans are social animals from the beginning, and the relations we have with other people are very complex. You can't really define someone as a pure friend or a pure enemy. It's very rare that that happens.
00:01:27.222 - 00:02:02.754, Speaker A: And we have all kinds of interactions with people, varying degrees of promises and agreements and contracts that happen. Now, virtual worlds today and games today have very limited social interactions, if you think about it, compared to the real world. And why is that? Let's take a look at a couple of game models today. The first genre I would call Social 1.0, which is purely PvP based. And the only social relationship that happens in these games is competition. So players fight each other.
00:02:02.754 - 00:02:42.218, Speaker A: This is StarCraft, by the way, and CS Go and Overwatch, and these games all belong to this category. There's not really any cooperation. And the only thing that happens is competition, which is very drastically different from the real world. And a lot of player complaints in this category is like one, the onboarding cost, the barrier to entry is pretty high, usually because there's a lot of skills involved and there's not that much social interaction. And then the next step, kind of in the multiplayer genre with social relations, is social 2.0, where most of the mmos are. And in this category, there are two types of primary interactions.
00:02:42.218 - 00:03:28.270, Speaker A: One is cooperation within certain groups, such as the alliances defined by the game, or competition between the groups. So players are no longer just competing on the individual level. They're also cooperating within a group and competing between groups. But this is still very different from what we see in the real world, where people can act anywhere between friends and enemies. And that's what makes it interesting. So what exactly is missing? Right? Let's take a specific example from the previous picture, which is rise of kingdoms, which is a mmo style of civilization in this game. Let's say the two players highlighted in two different guilds or alliances want to trade with each other.
00:03:28.270 - 00:03:53.654, Speaker A: Let's say they want to trade resources, two types of resources. They can't. And they also don't need to. Because the game is defined as competition between guilds, right? There's no need for play to player interactions, which takes away a lot of the fun. And this does not limit to players that happens between guilds as well. Let's say the two guilds on the top want to sign a peace treaty for some time. They really can't do that.
00:03:53.654 - 00:04:51.446, Speaker A: They can promise to each other. But if one side betrays, there's no punishment that will come, right? And that equals no deal. So what does the real world do better than games? Add these. In my mind, there's two very important components. The existence of highly valuable assets, such as your house or anything that makes you really care, and effective law enforcement that protects people's interactions around these assets, right? And that's why people, when you walk to work and fight your colleague over a small disagreement, you don't have to worry about them taking your house or killing you or something like that, because there's a mechanism that protects you from getting those harm. But there's not such thing in virtual worlds or games today. So blockchain has actually already figured out half of the solution, which is the existence of digital assets.
00:04:51.446 - 00:06:07.826, Speaker A: We have digital assets that can get very highly valuable and decentralized, so it's protected. Some people might even say it's more secure than in the real world. But there's not really the equivalence of law enforcement, right? When people make promises to each other, there's not an entity that can say, okay, I will enforce these for you and today's game. The problem is that there's not a language in which the players can tell the game engine what they're agreeing to so that the game engine can take care of the promises for them. So this is like a pretty trivial example where, let's say, in a grand strategy game, I don't know if you can see the text, but let's say you have a player named Vitalik right next to you, and you are equal strength, and you're fighting over a couple gold mines, and suddenly there's this player called Justin sun that approaches both of you with a lot of high level horsemen, right? And reasonably, you want to stop attacking each other for a bit so that you can both defend against this much stronger player. But let's say you agreed to do this for three turns, but in two turns, you decided you just really want the gold mines and you're going to attack Vitalik anyways. What happens? Well, nothing really happens.
00:06:07.826 - 00:07:14.230, Speaker A: And in fact, if everyone does that to Vitalik, he's going to quit the game and blame the game for not being designed very well. So what can make this up? Right? What can allow justice to come in virtual worlds and let players not worry about. Worry about breaking promises and actually interact fairly with other people? Well, we designed a system called treaty, which is actually very straightforward. It's using smart contracts to enforce social contracts in games. So basically, in mmos and grand strategy games, players are able to create or reuse smart contracts that define their relations with other people in a way that gets enforced automatically by the blockchain over some trigger condition. So what do I mean by this? Some examples of this include a simple thing like non aggression pact, which we just showed with an example with Vitalik, to more complex things like North Atlantic Treaty Organization. You can have guild currencies that on chain Saudi Arabia can launch to back with their oil.
00:07:14.230 - 00:08:10.278, Speaker A: You can even have different kinds of governance models that govern how policies get passed. And treaties are, we think, important social building blocks for blockchain, for online games to allow players to do exactly the social interactions that they couldn't do for a long time. And this is uniquely suited for blockchain because smart contracts already exist, but they currently don't have a function in much more context rich worlds like games compared to things like DFI, NFTs. So, yeah, we built a game out of treaty and we launched this January 2023, so this year, and people really enjoyed it. People made some wife jokes about this for playing the game too long and not sleeping while not washing dishes. But anyways, the game lasted for a week. And actually, the end result of the game was affected by some player creating a treaty called loan agreement.
00:08:10.278 - 00:09:08.710, Speaker A: Basically, the ultimate victor of the game were able to loan troops from another player and to raid the alliance who already occupied the center of the game, which is the flag tile. That is the victory condition. So that was pretty cool, but we ran into some other problem. I think players really enjoyed it and we're so confident about the design space of high stake PvP, adding on the social interactions that we're building a real time war strategy game with high stakes, fully on chain, and hopefully launch that in a couple of months. But I think we ran into problems as well, which is with regards to performance, right. Each transaction of our game, which wasn't that complicated when there were 20 players playing, you check a couple of treaties, you check permissions and you move people, you battle. They took anywhere from 20 million gas to a couple of hundred million gas.
00:09:08.710 - 00:10:02.350, Speaker A: And that's not even because the smart contract is fully written. It's just because the game is so context rich. You need to perform a lot of logic in one transaction. And that's why players were joking that the Blue Troops, which indicate movement in our game, don't actually move and the red ones don't actually attack because the moment of intent was just too far from the moment of execution in the games. And this is not unique to our games. This is a sheer problem with all fully on chain game frameworks today, right? Because all the logic is implemented as smart contracts that live on top of the blockchain that use usually EVM or Starknet execution environments to run the game, which these systems are not meant to do. And games like Dark Forest kind of avoid this problem by designing their game in a way so that all the actions take really long time.
00:10:02.350 - 00:10:43.926, Speaker A: And that's what meant to be. So Dark Forest had energy rays taking anywhere between 15 minutes to several hours to send, which work I would say potentially works for some players. But if you want to get to mass adoption and have a lot of players who don't really care about the blockchain elements and just want new experience come, this is very limiting, right? And so specific problems. Games are very context rich and they have much bigger transaction size. And because of that you have some fall on problems like stack two, dip deep. So you have to do more gets, which even just cripples the system. And there's a lack of game tick.
00:10:43.926 - 00:11:50.190, Speaker A: So what that means is, let's say if you want to move from point a to point b, the intent is moving to point b, but the actions are you might want to move many times before you get to point b, that usually traditional engines take care of using this thing called game tick, which is kind of like the sun rising every day or seasons coming every year automatically. And they don't come because someone send a transaction that the sun would rise today and in the same way you move in the game, you take every step that the game engine basically take for you. You don't have to send transactions every time and check the permissions every time and check intent, which are wasted computation. And finally, solidity is not okay for smaller scale games. But to create a game as complex as some of the even medium stage sized games in web two, it's very very complex. And there are much better suited languages and stacks that allow players to develop, or allow game developers to develop much faster and more stably. So because of all these challenges, we thought, okay, we wanted to preserve the social composability.
00:11:50.190 - 00:12:59.490, Speaker A: We wanted to create to preserve the social composability, aka the ability to create contracts, social contracts and the trustlessness of the logic and the assets. But also we want to add high performance and great graphics and basically all the UX stuff. So great game developers can create these fully on chain games that will take us to the next stage, right? And that's why we created Keystone, which is a sovereign roll up based onchain game engine framework meant to specifically 100 x the performance while preserving some of the best parts of fully on chain games. I should need to switch screen to show the demo, but you can find this on our twitter. Basically we spent two weeks putting Warcraft three the game on chain, and all the movements and battles you see with the dozens of troops moving and attacking at the same time subsecond level happen in real time on chain. Right? And all the logic are on chain. So that's like a huge step from what we see today with today's frameworks, including our past framework with treaty.
00:12:59.490 - 00:13:48.946, Speaker A: So key features of Keystone include its high throughput ECS based game engine. ECS just states the way game data is stored. And the fast Gametech supports classic rts style games like Age of Empires. You can theoretically for a fairly simple game, get to 60 ticks per second, which is pretty much all you need for a close to very real type of, type of experience. It supports historical state querying, so you can write treaties such as if something didn't happen for three turns, then whatever reward that is, or punishment. This is not about the current state, it's about historical state. And finally it supports EVM based treaties.
00:13:48.946 - 00:14:24.266, Speaker A: So treaties still use solidity, but use pre compiles to get and set certain states. And finally it's written go. So basically I'll talk about the architecture. You have the game logic that lives on the same layer as the EVM. So it's not really fully on chain, but fully in chain. Because if you think about it, the digital physics or the game rules don't really change that often. Just like the EVM layer, right? And what happens is the EVM supports all of the social contracts players make with each other in real time, whereas the game tick.
00:14:24.266 - 00:15:33.366, Speaker A: And a lot of the feature like indexer and a lot of other features that blockchains currently don't have with games are added in parallel with EVM and interoperate with custom staple pre compiles. And this whole system settle data to Celestia da for anyone to basically observe and be able to challenge the validity and also to ethereum for payouts and the asset related features. Right? And basically there will be a multi sig of guardians that are basically sequencers of this whole thing. And the multisig is able to kick out to vote out anyone who acts maliciously based on players input. We basically open source this by the end of May and we're in the process of still improving the system coming up with Keystone V two probably in the next couple of weeks. Our games obviously built on top. We're getting more people who are interested in building onchain games that are not just hobby projects to build on top and to really impress people.
00:15:33.366 - 00:16:24.178, Speaker A: So yeah, definitely welcome all suggestions or questions here, but yeah, we think this is the first step toward games that have massively complex social relations like ready player one, that also have highly valuable assets. This is what we don't have today in today's virtual games. So yeah, we're building Keystone V two. We're working on the flagship game, which is the high stake strategy game. And ultimately we are, as I said earlier, the game space that fully ongoing games open is massive and we alone cannot possibly explore even probably 5% of everything. But in order for games voting on Keystone to succeed, we can just host hackathons. We don't think that's enough for a game like you have to worry about so many things like art, distribution and capital.
00:16:24.178 - 00:17:11.302, Speaker A: We will provide all of that for you as long as if you talk to us, we'll figure out what's the best way to be on chain for you. What's the tick rate design? How do you settle data? How do you get your initial group of players? We'll even match you with the art teams we have for basically much better looking games than today's onchain games. We'll support you with all that so you can focus on the mechanism. So yeah, that's everything. I think we're slightly over, but I think we can take some questions. You. Yes.
00:17:11.302 - 00:17:18.166, Speaker A: Norris Wall. Okay, you're next.
00:17:18.268 - 00:17:46.346, Speaker B: Hey, great presentation. Thank you. So I'm just curious, in terms of the users for these games, right. Who do you think this appeals to primarily? Is it your hardcore on chain gamers, like the ones who played Dark Forest? Or is it more crypto gamers who are like your axes, et cetera, who are probably there more for speculation? Or do you think there is a pathway for this to get entirely non crypto gamers from outside who are both mobile or console based?
00:17:46.388 - 00:17:46.642, Speaker A: Right.
00:17:46.696 - 00:17:49.486, Speaker B: Just curious, where is this going from a user standpoint?
00:17:49.598 - 00:18:41.070, Speaker A: Yeah, that's a great question. So we're solving a very fundamental user need, and it's more on the psychological rather than technical side, where we're attracting players who are generally very willing to, who are interested in highly PvP types of games with high stakes and at the same time perhaps are looking for more complex social interactions in online games. So imagine if you're a competitive delta, if you're a really good delta player, but you're not competitive, so you're not enough to participate in esports, right. But you still really want to play rts games and play with stakes with other people and perhaps win or lose based on your skills. And you want to improve your skills so you can perhaps earn more. Right. That's the type of people that we think we'll attract.
00:18:41.070 - 00:19:19.694, Speaker A: We will attract. That's obviously in hypothesis. We still need to test it, but it's drastically different from today's blockchain or like web 2.5 gamers who are, I would say, looking for asset appreciation, which is unsustainable. It might have a big overlap with today's fully on chain players, but not perfectly because I do think a lot of fully on chain players today are only interested in the technicals, but are not really looking for a good experience. I do think the ultimate goal is to get people who, for example, like StarCraft or like poker and basically fit the criteria I described earlier to come. Right.
00:19:19.694 - 00:19:23.010, Speaker A: And we need to basically solve a lot of problems before that comes true.
00:19:23.160 - 00:19:24.082, Speaker B: Okay, thank you.
00:19:24.136 - 00:19:24.740, Speaker A: Yeah.
00:19:29.510 - 00:19:33.186, Speaker C: Okay, I got one technical and one social question.
00:19:33.288 - 00:19:34.290, Speaker A: Let's do it.
00:19:34.440 - 00:19:59.594, Speaker C: My technical question is, in my mental model of time, it takes change to execute. Thing like the bottleneck is really the mercuryization, like committing to the state, any form of commitment. How do you do that? Because do you manage to bypass this bottleneck by doing something clever? Or don't you date routes or something?
00:19:59.792 - 00:20:27.298, Speaker A: Yeah, that is the slow part. You're right. And there's kind of different ways to think about it. If you need real time settlement, I don't know. On a subsecond level, I think that might just have trade offs with how complex the game can be. Or alternatively, you can have kind of a challenge period after, let's say each game lasts for three days or something at the beginning. Right.
00:20:27.298 - 00:21:03.550, Speaker A: I don't think we'll have very persistent games at the beginning. Do you have strategic depth? In that case, you can have a challenge period after the game so that people can run the game over after the data is settled, mercalized and settled, and make sure that everything's this fair. And then basically the payout then happens. So I think it really depends on the specific game setup that you have. Yeah. And also, this is very early. We haven't thought too much about consensus of the mercalized data.
00:21:03.550 - 00:21:07.860, Speaker A: That's a hard problem that I think we're thinking about.
00:21:09.190 - 00:21:27.718, Speaker C: The idea, if I'm correct, is that there are some outcomes that you care about, like this player won, and maybe these resources shifted after the game, and so the game nodes will commit to that, and then you can sort of challenge that these are not the correct outcome, but you'll need to mercuryize the whole state with all the health at any point.
00:21:27.884 - 00:21:33.450, Speaker A: Right, exactly. Or we could mercuryize the whole state if it's doable.
00:21:33.790 - 00:22:10.238, Speaker C: Yeah, definitely. Interesting question there. The other one is like, okay, the premise of your game is, well, not the premise. Like, one of the big features is you want the smart contract agreement between player. But don't you think that sometimes the sort of drama of it is what gets people hooked? Like, the betrayal and the game theory of it? Like, oh, I have this agreement with this guy, but I need to watch my back because he might betray me. But if he does, his reputation is going to be ruined. And it's like sort of an iterated game thing.
00:22:10.238 - 00:22:14.278, Speaker C: Don't you think that's worth preserving some of that? Or how do you think about that?
00:22:14.284 - 00:22:51.902, Speaker A: No, this is a key question. So let me just ask you, right? Let's say in today's corporate world, right, everyone signs contracts like NDAs with each other and freaking, I don't know, whatever other types of contracts, but there's still tons of betrayal that happen, right? And they are basically kind of like loopholes of the contract that gets exploited, and that makes the whole betrayal more interesting. So let's say I sign a non aggression pact with you. It doesn't say I can't have a vassal state that can attack you, right? I can pass the troops to them to attack you. Right. That's something. So we're creating these structure for very blatant violations to be impossible.
00:22:51.902 - 00:23:02.662, Speaker A: But you can think of, it basically requires players to think on a higher level and betray on a more interesting level, if that makes sense.
00:23:02.796 - 00:23:03.590, Speaker C: Yeah, that's interesting.
00:23:03.660 - 00:23:36.494, Speaker A: That's cool. The goal is definitely not to avoid any social relationship change. In fact, it's to encourage that, but by freeing a lot of the minute for the small things to worry about. If I want to do a trade for three turns with you, I don't want that to be broken if I'm doing that with like 500 other players. But then I can think strategically, like, oh, maybe what vassal stage should I set up over the next 500 turns to have what kind of XYZ goal?
00:23:36.542 - 00:23:46.294, Speaker C: Right, so you are actually expanding design space of the interaction that are possible because there are things you would never ever do if you couldn't trust people. Yes.
00:23:46.412 - 00:24:11.100, Speaker A: And there are also things such as, we probably won't allow permanent non aggression packs just for the reason you mentioned. Right. We can have all treaties time bounded to like 500 seconds or something like that. That's also a pretty straightforward thing to do to limit the negative consequences. Cool.
