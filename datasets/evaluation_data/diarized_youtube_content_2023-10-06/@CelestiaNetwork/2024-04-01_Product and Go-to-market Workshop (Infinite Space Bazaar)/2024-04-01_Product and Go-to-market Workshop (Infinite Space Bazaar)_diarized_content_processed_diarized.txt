00:00:00.680 - 00:00:11.794, Speaker A: And the theme that's going on for today, you know, we'd love to just have a conversation and, you know, learn more about the hackathon and the workshop for today. Yeah, the stage is yours. Thank you so much.
00:00:12.254 - 00:01:05.578, Speaker B: Yeah, thanks for having me. So basically, basically work on building out the early ecosystem. And what I wanted to present on here is sort of like how to think about this sort of concept of go to market and what the considerations are, what the limits are of different approach, of basically different components, et cetera. And so basically go from here. So let me just hit the slide. So yesterday, actually, last night, there was a really good tweet that I thought basically was just really well timed for this presentation. So I threw it in there from sobey, and that's basically like he was sort of asking on the timeline, like, hey, what's, like, more impactful to business success? Is it, you know, ten x partnerships and bd and whatnot? Is it ten x dev, etcetera? And so, you know, it's easy to sort of think about it.
00:01:05.578 - 00:01:36.680, Speaker B: You know, there's different people who probably weighed in different way, I think, like the BD and partnerships. One was winning when I looked at it. But the point is, like, you know, there's sort of these two different ways of thinking about go to market and one of, or like, what drives, like, a product success. And so some people are sort of sitting on one thing about the bus. It's like, oh, like all that really, you know, in an.org that's like, thinks of itself as a product and driven as opposed to BD and sales driven. They're sort of thinking about, like, well, you know, like, basically we're all that, you know, this part of the, what we're working on is all that matters and is all that's driving the success.
00:01:36.680 - 00:02:36.738, Speaker B: This other part doesn't matter. And then there's some opposite case, I guess, of companies where it's like they're thinking of like, oh, all that matters is, you know, basically going and closing these ten big customers. And basically engineering is great, but at the end of the day, we're just basically getting adoption through just these end user relationships and whatever. The reality is that neither of those really make sense or the right way to think about it. And the right way to think about it is actually thinking about these two things in tandem, especially in a modular context, which is what presented about here is everything that you do has to combine the two in a way, and I'll get into why. But basically, we should think about these things as fundamentally integrated into one thing called go to market, I think. And so the way to think about is like, product, the limit of product, sort of like a product driven or only product driven approach is like, the benefits of it are that it's extremely, extremely scalable.
00:02:36.738 - 00:03:07.952, Speaker B: So, like, in the case of WhatsApp, you can have a really small team, and you can have some insanely huge adoption outcomes, especially when it's network effects driven. You can get. So WhatsApp, they have 50 engineers. This is a while ago, it's almost ten years ago, but they had 50 engineers. They had 900 million users. And that's big in web two, but it's even more, potentially even bigger in crypto and web three. So you think about bitcoin, how many people ever contributed to bitcoin? And it's a trillion dollar asset, it's a trillion dollar digital gold.
00:03:07.952 - 00:04:00.284, Speaker B: I mean, just like the sheer number, the, the amount of adoption relative to number of people who ever worked on it is so enormous, um, that it's just sort of like, just so asymmetric. And that's what product, that's, that's what happens when a product gets, like, really widely adopted, when it has runaway success, um, et cetera. It's especially true, this, this properties, this property is especially true. It's something like the modular stack and the modular ecosystem, because the rest of everything else is built for you. So if the modular ecosystem and all these other things get a huge amount of adoption or get take off, then celestia plugs into them, basically, or some other layer plugs into the modular stack, so their new product comes out, it can theoretically just touch everything. So you're like, oh, every layer that arrives in the modular ecosystem can theoretically scale to everything in crypto, if everything becomes modular. But the reality is, that's totally theoretical.
00:04:00.284 - 00:04:41.334, Speaker B: You don't necessarily know whether all these other people in the stack, whether the end user cares, et cetera, and we'll get into like, sort of some of that. But that's like a way to think about these. Like, this product is like scalable. Like, it can have wild asymmetric outcomes, but it's still theoretical. It doesn't, it doesn't guarantee anything, right? And the other thing about product is that it has all these, especially, as I was gonna say before, is like, the modular stack has all these hidden transaction costs, and not like the network transaction costs, but the cost of doing business or like integrating or whatever with all these other layers in the stack. And then on the other side, you have BD. And sales, and that's really local.
00:04:41.334 - 00:05:40.678, Speaker B: And so it can't really, it doesn't scale as massively by itself, but it's completely outcomes driven. So it's completely like, basically it's based entirely, if it's successful, it's based on this notion of user empathy, basically that when you directly interface users, what is it that they want to get them to achieve this outcome that you want? But it's limited by things like manpower. It needs to align with the product direction to scale, et cetera. Then on the end to end, it's end to end. So basically the user, if it's defined correctly, the user, when they adopt something via BDS and it's driven by obedience, sales is the proximate cause. That's because basically you're basically achieving some end to end results. It's actually, the user can actually go and do what they want, or the customer or whatever, the partner can go and do what they want, end to end.
00:05:40.678 - 00:06:48.366, Speaker B: And that's why it's really a key part of that is validating the actual user stories, the actual ways that people use the product. What go to market is about is basically this notion of scalable outcomes. We want to basically take the scale that you get from this crazy product, like the WhatsApp example, but we want to unlock it with the user empathy that initial, if you're building something, for example, that's low in the stack, like how do users like realize the benefits? And because the sooner they realize the benefits of your product, the sooner that they're going to want to integrate you, to use you, to use stuff that's built on you. If it's an infrastructure, if it's infrastructure or layer and developers who are built or they're ultimately, they're not thinking about, they don't really care about the infrastructure building on, they don't necessarily care about et cetera. They care about achieving some goal. Everything that they integrate in the modular stack is instrumental to that goal. It's not the end in itself.
00:06:48.366 - 00:08:16.024, Speaker B: Right. And so the question is like, how do you help them do that better and where do you start? And then the next part is sort of like this idea of, you know, if you're building user facing applications, so even higher in the stack and you're building on your own chain or whatever, you're building some new thing. What kind of new on chain experiences can you build with this modular infrastructure that you know, don't, didn't exist? It wasn't, isn't possible on some chain like base or someplace like, you know, on Ethereum main net or on Solana, or what is new? Like, what, what can you do that's actually interesting or novel? Um, that actually justifies all the fragmentation, all the awkward bridging for now, like, et cetera. And are you using it imaginatively? Are you just copy pasting something onto a cheaper chain? And can users tell? Like, that's another question, right? If they can't tell, then, you know, it's also this question of, like, does it need to, where does it need to be? And I think actually there's a really good, um, you know, one really good way of thinking about crypto is that, um, it's actually a feature sometimes when, um, basically something, uh, you actually know that it's on chain, because that's like the whole, the whole point is that we're scaling this, like, trust minimization. And, and, um, you know, these properties of blockchains are kind of embedded in every app and every, every product that gets built. Um, and so what we're trying to do is we're trying to find a rock or a place that unleashes an avalanche or a landslide. And so what you're looking for is you want to take the local, you want to use the local benefits of something like beating sales or something very targeted.
00:08:16.024 - 00:09:10.554, Speaker B: And we want to create these massively scalable outcomes. And so what are the barriers to that? What's different? Well, in crypto, go to market works really differently than it does in traditional, traditional tech, or traditional go to market broadly in that, um, because of what it is, control, the limits of control over the stack, etcetera and decentralization are a feature. So, like in web two, the whole point, um, unlike in web two, the whole point of this whole infrastructure stack and this whole, this whole, all these protocols is that they're neutral. No one's supposed to control them. They're supposed to be, you know, decentralized, et cetera, and achieving, like, end to end readiness. When all the other people that, you know, all the other components that are necessary to build a world class end to end product, et cetera. It requires coordinating multiple parties or layers of the stack, even in monolithic architectures.
00:09:10.554 - 00:09:44.020, Speaker B: For example, Solana right now is having these issues with transaction. They're relying on Jito, or Ethereum was relied on flashbots in the case of these MEV instances, and the monolithic chain cases. And then you have stuff like arbitrum. One, they want to be a native l two, of Ethereum. They need Ethereum to ship 444 right. And so there's always going to be these reliances on third parties that you don't necessarily control and like, basically, or infrastructure providers where there may be some specialized knowledge. And so it's not even just a modular thing.
00:09:44.020 - 00:10:09.586, Speaker B: It's actually something that is just true of crypto broadly and web three broadly. And so coordinating across this whole module stack is really, really tiring. It's really exhausting. Um, and each layer can kind of have diverging incentives, et cetera. And so that's like a big limit of, of kind of like the way it works. But when it works, it really works. Like, you can build things that are like, just completely, like, you know, customized to the use case or to developer.
00:10:09.586 - 00:10:55.648, Speaker B: You can monetize it directly, et cetera, but, but, and at the, at the benefit. Right, of customization and control, et cetera, whereas, like, monolithic chains are kind of like, you know, we can control that whole end to end thing, but then we have, like, issues like all this mev and broken transaction flows and inclusion and stuff like that. The next thing is the other thing about crypto that's different from a go to market service, that your growth and market size are really, really not fully in your control. And so the industry, its products, things built on top, they go in and out of favor. So, like, things are popular for a period. They're not. They may actually be the thing that's a winning architecture.
00:10:55.648 - 00:11:27.378, Speaker B: A winning thing. Like something like Celestia, right? Like, originally was called Lazy Ledger. It was basically in 2019, it was basically a white paper. No one necessarily, there are people kind of in the research community that understood it, saw what it could potentially be, but no one really, like, got it. And then eventually, you know, the narrative, the monster narrative, really, like, took off. And then suddenly there's, like, people trying to do all these. In every layer of the stack, there's like different people trying to do different things or trying to do the same thing in different ways.
00:11:27.378 - 00:12:33.698, Speaker B: And so in crypto broadly, there's way more narrative excitement earlier on, before there is like, you know, basically necessarily opportunity that you're looking for. And so there can also be this limitation to a lot of go to market. The other one that's really one of the superpowers is that in crypto, that in Mister is that open source software is just the runaway default building in the open. Switching costs are really low, but anyone can fork you, anyone can copy you, anyone can vampire attack you, because, like, if you're on chain, it's not just open source, it's also just openness. Like, if you're on chain, everyone can see your application, you know, and so, and can, like, interact with it, compose with it, can vampire attack it, et cetera. And so you're trying to build. You need to build things in this, like, hyper adversarial or, like, hyper, you know, context aware way that that doesn't, that isn't as, like, common in traditional, like, say, web two, where like, say something like WhatsApp.
00:12:33.698 - 00:13:46.730, Speaker B: Like, you know, it's a much more, you know, like a lot of it's like, probably, you know, obviously it's based. Some parts of it are based, you know, it's based on signal protocol, but it's like, you know, like a lot of the clients, all stuff, it's like, private, right. You can't necessarily, you know, easily just, like, spin up your own WhatsApp, right? And so there's a lot of, there's a lot of things about that aspect, especially that where things. When you think about, you know, building something that people want to use, et cetera, it's like you kind of have to think about, like, all these open source considerations and openness considerations. But the other thing that's cool is that you also get to tap into, especially in the modular stack, you get to tap into pre built infrastructure and all the surrounding tools, everything for each layer, typically. And so that's another thing that's a plus around that constraint, too. The other big thing, another way to think about just, like, go to market in crypto, is that ultimately the end user, everyone on the planet who could use, who could interact with this stuff, they don't walk around the world thinking about the infrastructure, the products that are being built.
00:13:46.730 - 00:14:24.826, Speaker B: They're walking around, they're doing their thing, and they just stumble across either a product, a blockchain, whatever. And it's not like they necessarily are an enthusiast unless they're into this space. They don't necessarily, like, they just, it doesn't even come into their consciousness that, like, this is something relevant to them or whatever. And basically. But yet there's this whole, like, sort of stack of things that sort of are there powering their, you know, what they're interacting with. So this is what I kind of was like, one way to think about is, like, the user from their perspective, they're like, okay, I have a wallet. I have my funds here.
00:14:24.826 - 00:15:37.370, Speaker B: Increasingly, that even feels like, kind of abstracted, right? You can log in with Google, with priv things like privy or dynamic or whatever, and then you interact with applications and those applications are maybe nowadays people are doing things through telegram bots, they're doing things through in much more web two like experiences. And so like a lot of what they're doing is just increasingly just applications and a wallet. And there's like increasingly less and less of a, you know, the full infrastructure stack is increasingly not as exposed to them. And so as this is a con I was making is like going back to the bus meme, it's sort of like there's people who are users who are sort of like I'm just living my life changing and there's always infrastructure. Who wants is just fighting to kind of get integrated and connected to the apps that are the products that serve these users interact with. Right. And then the other thing I was going to say is that users below this, below what the user sees and interacts with, there's basically this thing I call the developer zone, which is, this is all the stuff that basically, obviously developers are building stuff all the way to the user.
00:15:37.370 - 00:16:53.332, Speaker B: But the point here is more just that. There's this whole part of stock where it's exclusively developer centric, where the execution layer, the rollout framework, the RASM, the Mayesh infrastructure, and then things like Celestia or settlement layers or whatever, all these other parts of the stock, and nobody is really sitting around necessarily thinking about this whole thing. And basically what I think one thing I wanted to sort of hone in on is that you want to find basically, like when you're building an application across this whole stack, you basically want to really hone in on an actual user with an actual end to end user story that goes all the way from the bottom of the stack all the way to the end user. If you're going to build something that's some piece of infrastructure, you're going to build some new custom execution layer. You're building a role framework, or you're building an app or a chain that's targeted at some ecosystem. What is that actual end to end user story that your product or protocol uniquely suits right away and solves real problems? It sounds obvious. Sounds so obvious.
00:16:53.332 - 00:18:15.234, Speaker B: But go look at most of the things, like a lot of the products and projects out there in crypto, and you'll realize that you know about what they do as like a piece of infrastructure, but you can't necessarily always speak to what they're, who their exact user is, and those things disappear. Those are the things that do not continue on, do not make it to future phases of the industry. It's okay if that initial user that you find doesn't excite you. It's okay if they don't confirm, as long as they confirm your product market fit and they create a feedback loop. Basically, that's all you're looking for. You just need to have basically a way to know that what you're built, that somebody needs what you're building on, and that unless there's skin in the game, someone actually has skin in the game to actually go build an end to end working thing that meets some kind of criteria of success, you're never going to know whether the thing you're building anyone wants it. And a common way that projects fail in crypto is more about basically a lack of discovery around this end to end readiness problem and a lack of not shipping fast enough, not getting to users fast enough.
00:18:15.234 - 00:18:52.162, Speaker B: And if you can't find somebody to use your product or protocol, it's very early maybe in the market that you're trying to go after the thing you're going after. Nobody really sees the benefits of it. Then just go dog food it. Like, just go, just go. Literally just find someone or build yourself and see what the problems are, see what, see what emerges. You know, you need to have, but there needs to be that end to end experience, because otherwise, if you go back to this diagram, it's like you don't necessarily know what layer the stack. There might be bottlenecks or there might be problems where maybe you actually should vertically integrate your product.
00:18:52.162 - 00:20:12.076, Speaker B: Maybe there's things that you basically can do uniquely by connecting multiple of these layers as opposed to just building a thin layer. A lot of what we see in this industry, broadly, especially in the monster stack, is folks realizing this point. Actually, you see so many cases where folks are sort of like, they're building x layer, they're building x thing, and they sort of realize, oh, actually, um, you know, nobody, like, like the developer, like, this layer is cool, but like, there's no way to bootstrap it or this, this type of network is cool, but there's no way to get people to just jump in and use it without this additional adoption, these additional complimentary, um, you know, uh, pieces of infrastructure. Um, and the next thing I say is like, it's just fundamentally like the ultimate. Ultimately, what really matters here is just this notion of user empathy. And what you're really looking for at the end of the day is a win win, is basically a win win approach that basically triggers a landslide of other users basically doing the same thing. What you need to do is you basically need to show that once you find, going back, once you find this thing, you find this actual user.
00:20:12.076 - 00:20:59.774, Speaker B: This actual user is, you know, basically validating or demonstrating, validating your PMF or surfacing why everything doesn't make sense. Basically, you basically, you either need to course correct. It's like you sort of like figure out what's not working, et cetera. Or obviously, the main thing is like you just quadruple down on whatever this exact use case is. Because in crypto, even if the market size isn't that big, the hard part in general has been, aside from these initial few use cases, there's just basically a number of verticals where things really will take off. And that's why there's certain categories with really big runaway success. Those things like DeFi, those things like nfts to some extent, that's things like gaming, et cetera.
00:20:59.774 - 00:21:59.980, Speaker B: But there's this whole long tail. It's almost like middle part of the industry or whole set of other applications that don't really, we haven't really seen runaway success in. And that's because those things basically don't have basically that level of PMF. And maybe what's going to change in that category is just moving it to something high throughput. So, for example, gaming is a great example where historically, the infrastructure that people have used to build things like gaming projects, et cetera, have been, they can't scale to a billion users. And so if you're going to be building something at that layer, for example, the modular stack actually is like an unlock, big unlock for basically potentially finding some big vertical success in some vertical like that. And so there's a lot of opportunities that kind of, to date, have basically been stymied.
00:21:59.980 - 00:22:38.230, Speaker B: It's very easy to think of them as like they're not going to work out, et cetera. But like, look at things like friend tech or now Farcaster, et cetera. It's like on chain social is an idea from many years ago. It's an idea from 2016, 2017. There are even people trying to build these kinds of products and protocols. And why do they take off now? Why are they go to market successful now? Well, it's like because the infrastructure and the, the, like, the market readiness for this thing of just people actually building the NTN thing is there. And so like, you look at, for example, like an example, like front text, really good.
00:22:38.230 - 00:23:55.958, Speaker B: One of the things that really unlocks it was the arrival of privy and the PWA, you know, Pwas and embedded wallets. And basically, like, even a bunch of these projects they had been doing other things before that they realized those things didn't. When they went to actually go work with customers, they realized it didn't really work. And then they found these opportunities, they seized them and they built an end to end experience that then, even if it's not that good, I don't know if people try the early friend tech or even early warpcast or Farcaster, it's like these products were not actually that. They're not very good from a web two perspective, but they have this end to end quality that drives success. And one of the things I've noticed, for example, in the past six months, to know since it had this before and after effect, was that I would go to, we'd go to talk to, for example, execution layer teams or other infrastructure layer teams, and they'd always say, I'm looking for my friend tech moment or my, this moment where basically something will take off. It's like, well, and I asked them like, well, are you building, like what? What's like, you know, what are you building that is end to end to the user such that, you know, basically you could onboard something like that? And the answer is usually, but they weren't really doing that.
00:23:55.958 - 00:24:59.788, Speaker B: They were sort of thinking of it more from the bottom of the stack, like, well, we have a chain, or we have this custom execution environment, we have this other piece of infrastructure. Not basically we want to build this thing that has a cohesive end to end experience that gets people to do something. That's the thing to emphasize in the modular stack. We get the opportunity to swap out like things that are like sort of where things we can, we can build even more cohesive or end to end experiences compared to stuff like Solana and other Monte chains. And those chains have sort of a different set of benefits and properties. But one of the things that we can do is we can actually turn the Mozra stack into something that has more user empathy than like anything that's come before. Because we can continually, by focusing, starting at the end user, starting with user empathy, we basically can work backwards to figure out what layers are missing.
00:24:59.788 - 00:25:57.494, Speaker B: Rather than going upwards and saying that we're going to start with, say some new execution layer, some new ZK thing, some whatever. No, let's start with the user. Let's force ourselves to reckon with and understand what layers we need. What is the best cohesive experience, but retain all the properties and benefits of doing a launcher stack, the, you know, end user verification, the advantages of, you know, a building on something where someone you know, can have like sovereign infrastructure and customize what they're doing the whole way down. And so that's the point of this thing. And so that's the stand. But that's kind of like the point to leave you with is like if you want to figure out whether your piece of infrastructure is even need, is needed, just like start from day one, as soon as you possibly can with this end user, full end to end experience, even if it's horrible, even if you have to build it yourself, because otherwise, we just don't really know.
00:25:57.494 - 00:26:35.658, Speaker B: We just don't really know what your thing is useful for or how it plugs in or why we need it. But if we build in a way where, and we grow this modular ecosystem in a way where there is like an end, it starts with users. It's all driven by user empathy. Then basically we never have to wonder whether there's too much info chasing three apps. We can validate it. We can figure out what's missing. We can address problems like fragmentation or bad user experience or whatever that people like to talk about rather than just say that they'll be solved through some other layer or some other approach.
00:26:35.658 - 00:26:36.394, Speaker B: Judge.
00:27:05.834 - 00:27:09.134, Speaker A: A few slides back if you want to go back to that.
00:27:09.434 - 00:27:11.162, Speaker B: Oh, yeah, just give me a second.
00:27:11.338 - 00:27:12.374, Speaker A: Yeah, no worries.
00:27:24.114 - 00:27:25.054, Speaker B: Which one?
00:27:26.994 - 00:27:34.974, Speaker A: The slide that you're talking about how everything really works. And you know what your examples would be in your perspective.
00:27:35.314 - 00:27:35.922, Speaker B: Let's see.
00:27:35.978 - 00:27:47.346, Speaker A: I think a few, maybe a few slides back. Let's see. Yeah, right here. Ah.
00:27:47.450 - 00:28:46.760, Speaker B: Oh, I see. Which, yeah. Yeah, so, I mean, I think the example is some of these new things that are coming out on like things like, you know, base l three s, I think, are one where I think it's really cool you can have zero fee onboarding. You can, you know, you can basically allow someone to have totally custom block space. And like, you know, I mean, I think we're seeing like a lot of developer attraction around stuff where you can basically customize way more of the stack. And that's where I think, you know, it really, it can really, really work. And there's obviously there have been, I think, a bunch of really, really cool sort of like apps that people are like, they haven't launched yet, but they're kind of just waiting for kind of like the right, basically they're waiting for kind of the readiness of a bunch of these sort of higher throughput roll up stacks combined with say something like celestia or whatever.
00:28:46.760 - 00:29:27.710, Speaker B: And like those that plus like good account extraction, tooling, et cetera, can create these like really nice user experiences. And I think, yeah, that's probably the best, the best example is like stuff where you basically. So for example, I mean, the example I gave before was frontech, but like, say it's far caster frames. Like we, for example, we does, the folks at syndicate built this far caster frames l three. It costs almost nothing. And like the, in the frame, they actually were doing something where you let people mint there on the cell three. And then basically they would look at how much in fee, basically they would have paid on ethereum or I think, or on base itself or whatever.
00:29:27.710 - 00:29:46.714, Speaker B: And it's like the orders of magnitude different in cost. And basically things like that I think are really cool. It's like you have this cheap onboarding people can do on chain actions the way they do interact with web, two apps, stuff like that, I think are the things that were like, are just very exciting from an adoption perspective.
00:29:53.814 - 00:30:17.194, Speaker A: The chat. Thank you for the detailed answer. We really appreciate it. And also the presentation, it was very detailed and very interesting. To learn more about Celestia's go to market your strategies, how important the user is, and the verticals that go through it. Yeah, and just a few questions on my side as well. I was just wondering, you know, the hackathon is live right now.
00:30:17.194 - 00:30:38.094, Speaker A: You know, the deadline is, I believe, May 17. So there's a few, there's a month left, or a month and a half left for you guys to, you know, into the hackathon to submit your submissions. But in your perspective and your personal opinion, what is some, you know, projects that you're looking forward to seeing from the hackathon?
00:30:39.324 - 00:31:20.052, Speaker B: Yeah, I think for me, the most exciting things to see are people building, user facing stuff. Just period, full stop. So anything, it's like on chain, anything gaming related, anything where someone is building something that is really cheap on chain for the user, but basically is usable by. We can actually go. And you go to an actual web app and you can use it. And like, I think that's the phase of the modular ecosystem that we're in, where it's like, that's kind of all that matters from a, in terms of, you know, unlocking the next wave of infrastructures. Like, we need to, like, really validate that.
00:31:20.052 - 00:31:30.704, Speaker B: Like, you know, we basically have something that works that's end to end ready. And basically, I think, like, yeah, those are the types of things that I'll be looking at the most, I think.
00:31:31.524 - 00:31:56.070, Speaker A: Yeah, definitely those are some exciting projects. I'm looking forward to some of those use cases as well. We have another question from the audience as well. What are some of the tech apps that you were talking about, Rolekit, Sovereign, Astra, and other examples as well. What toolings are most commonly seen in between those gaps and what are the solutions for that as well?
00:31:56.262 - 00:33:25.436, Speaker B: Yeah, so I think there's two big things that I see. So one I think is definitely the short term one is good interop across an onboarding across a lot of different chains. And I think that actually a lot of the ingredients are there, a lot of the tools are there, there's things like skip API socket, relay protocol, et cetera. But once that, so once there's like more things like Hollygon's ag layer, um, there's a lot of like really cool, um, possibilities when, you know, once that stuff, once the onboarding, once you can onboard it to any chain from anywhere in crypto, uh, I think that's going to make, uh, things look a lot different and like, you know, people are going to, um, it's, it's going to allow more and more people to like, build their own chain and confident with confidence, uh, rather than like feel like, oh, if I build my own chain, I won't be able to get users because they're all going somewhere else or they're, they're closer to, say, building on base or whatever. One of the big things though also is there's a lot of infrastructure. It's like when you go from being an application on Ethereum, an application on base, application on archer one, whatever, wherever you are, you want to go and you want to deploy your own chain instead of just being an app on those chains, there's a whole set of things that disappear that you have to watch out. Say you're, say you are a, or you are something that relies on oracles.
00:33:25.436 - 00:34:14.214, Speaker B: Well, if you're used to using chain link, you don't necessarily have chainlink anymore on your new chain. And so there's this question of like, well, those kinds, that type of infrastructure where there's some premium around the support that's given to an existing chain, to applications that needs to be redesigned for sort of the chain based approach. And so there's a lot of effort needed and a lot missing from, you know, from that part of the stack still. And like, there's a lot of people who want to address it, but it's still really nascent. I just think until there's a lot more applications at that layer, it's going to in a lot more chains at the layer. Like it's just going to take a while to basically sort of fill all those gaps end to end.
00:34:16.054 - 00:34:34.310, Speaker A: Yeah, definitely. That makes a lot of sense. Thank you, everyone in the audience, for, you know, asking these questions. If you guys have any further questions, please feel free to, you know, type them in the chat right now. Love to answer them and, you know, discuss them a little bit further. But, yeah, just kind of going back to the hackathon. The hackathon.
00:34:34.310 - 00:35:14.982, Speaker A: The prize pool currently is $100,000 USD, so that's up to grabs as well. And Celeste has implemented a unique way to kind of integrate into the community by, you know, having four different teams. If I remember correctly, it's the House of Puddle tale, the House of Whimsy fall, House of Mind flux, and House of Lemon Tree. So you could join these different teams just kind of, if, Jacob, if you want to kind of give a more detailed, you know, explanation of these teams. But it's kind of a way for the hackers to be part of your community. And further down the line, these communities will be able to. To receive different benefits that are tailored to your community.
00:35:14.982 - 00:35:25.566, Speaker A: But I feel like this is a really interesting and unique way to engage the community. So, Jacob, if you have any insights and you want to talk about that a little further, love to hear your.
00:35:25.630 - 00:36:26.292, Speaker B: Yeah, yeah. So I think the coolest thing is that it kind of changes the whole dynamic around hackathons. So I think the thing that's really original and interesting about it fundamentally is just that it creates, like a, it kind of reshuffles your allegiance. Like, when you like, so, like, if you are just like, say you are, I don't know, say you're just, you're. You're a developer who is built, you know, used to building games. You go to ETH global hackathons, or you go to autonomous world hackathon or whatever. It's like, instead of being associated with, like, whatever other tribal associations you might have going into one of those things, instead you kind of have this constructed or, like, new, like, identity within this, like, more modular hackathon like universe that basically just kind of creates a different framing of which you look at even the space, and you're kind of now sucked into this world, this other world, this other hackathon universe.
00:36:26.292 - 00:36:51.580, Speaker B: And then hopefully we want everyone to sort of carry that over into, into, like, sort of like building in the modular ecosystem in some way. And so, so I think, like, that. That's like, and that's very, that, to me, feels very. That's, like, very original. I think it's like very, it's something that will take a while to develop and refine and get right. Like, I don't think it's gonna, you know, I think there's, there's gonna be, you know, people who. It'll take some adjustment for people to, like, fully get it.
00:36:51.580 - 00:37:19.414, Speaker B: Like, in fact, when I first heard the idea, I was actually confused initially. And then once I clicked for me, I was like, oh, this is actually really original. Like, this is like a really, really new take on things that I think could really get people to feel like they're in a different unit. Like in a, they've been brought into a universe of, like, other people building crazy, like, you know, inspiring stuff. So I think that's basically how I think about it.
00:37:19.994 - 00:38:01.964, Speaker A: Yeah, definitely. And I think kind of correlates with your whole entire, you know, theme and mission about focusing on the users first and, like, being very user centric and building up that community. So I think it's really important and also unique, like you said, and will be, you know, a very interesting and original idea that could be implemented, the hackathon. But, yeah, I don't see any further questions that are coming in right now. So I think with that, I just want to, you know, give another shout out and thank you to Jacob once again for your time. We really appreciate, you know, the presentation going through. The whole entire strategies go to market and, you know, the importance of the user base, you know, the verticals that you guys are having right now.
00:38:01.964 - 00:38:38.874, Speaker A: And also want to thank everyone in the audience for coming and joining us for another workshop for Celestia. And I do recommend everyone to check out the Celestia hackathon on Door hacks page. You can find more details regarding, you know, the submission dates, the deadline, and also the judging and also more details. It is very important to read over the submission guidelines. There's a lot of different nuances that are, you know, being detailed out and explained. So please take a look at it. So to make sure that you guys can put your best foot forward to complete and be, you know, qualified for the hackathon as well.
00:38:38.874 - 00:38:54.804, Speaker A: Oh, we have another question that came in from the audience. Thank you for asking. We appreciate it. They said slightly uninformed question, but what is the big deal with pwas? Isn't it just a mobile first react app?
00:38:55.184 - 00:40:32.512, Speaker B: Yeah, I think maybe because I mentioned it in relation to friends second stuff, but the reason I brought up, or like, reason I think it's a really big deal is that if you go back to here one of the things that kind of sits above where it says wallet is, or maybe between. Sorry, between wallet and say, app is basically like this distribution question, like, how do you access this? How do you access this application that you want to interact with? And the thing that pwas have solved kind of or improved is that the App Stores, like Google Play and Apple's App Store, the iOS App Store, they don't, they're not very friendly to crypto applications historically. And so what happened was that last year, there's this period where PWA, basically, Apple decided to start allowing notifications in Pwas. And so when you'd add one to your phone, you'd add like a, you know, you bookmark a PWA on your home screen or whatever, you could basically could send push notifications to your phone. And so that means that the PWA that you're using now almost, you can download, anyone can download it or not download, but have it on their phone, like the way they would a native app. And it has all the experiences, like the user experience pretty close to what you're used to with any mobile app that you use, like native mobile app that you use. And so that's a really big deal because distribution wise, you can sign in that PWA.
00:40:32.512 - 00:41:11.052, Speaker B: And then, like, people started building infrastructure like Privy and whatnot. That is really well suited to sign it, you know, having signing in there and stuff. And so there's just like a whole kind of like a very. It breaks a lot of the distribution bottlenecks that typically have held back have slowed down the access to users. So it's like, if you think of it before, it was like, think about the user experience of crypto. It's like if you were using something on your mobile phone, you basically would have to use wallet, connect, and go between your wallet, and then basically say you're on uniswap, you want to buy something or OpenSea or something, you have to go back. You'd have to do this deep linking experience.
00:41:11.052 - 00:41:47.674, Speaker B: It's really weird. Whereas in pwas, you just sign stuff directly. You just interact with, at least when you use on privy, you can directly interact with it. In a lot of cases, those things together, basically, in addition to cheaper block space on base, in addition to just sort of like, kind of just the right place, right time. Like, all of that stuff together has created kind of a different distribution funnel for crypto that basically takes it from kind of like enthusiasts to everyone, because everyone can install PWA.
00:41:50.174 - 00:42:06.772, Speaker A: Yeah. Thank you. Thank you for that question. Um, from the audience, we really appreciate it. Um, yeah, if there's any further questions, please feel free to ask them now in the chat. We'll take a look at them and discuss them. Um, but yeah, just continuing on.
00:42:06.772 - 00:43:14.204, Speaker A: Um, if we don't have any further questions that are coming through, let me take a second to make sure. Um, but yeah, just, just another, you know, follow up question. Do you know how, do you have any like tips for the hackathon that you're looking, you know, to advise for these developers that are building out and also like is there any like hacker resources? I know there's a bunch of hacker resources and developer resources on the door hacks, celestial hackathon website. So feel free to check out those documents that are being shared on the website to kind of help you guys out. There's a lot of detailed documents, very informative as well to kind of help streamline the process for any new development projects that you guys building out. But yes, I think I don't see any further questions. So if there's any like developers that kind of want to contact Celestia directly and, you know, want to ask for more detailed information on what to build, you know, for just contacting you, is there any kind of resources that they can reach out to you guys?
00:43:15.244 - 00:44:03.916, Speaker B: Yeah, I mean we have, if you go to celestia.org build, you can always, you can check out the different role of frameworks you can use. Get to our docs dot slusty.org. You can start playing around with like a bunch of different examples, especially shout out to like Josh and Diego and Viet and all those folks that and just the whole Devrel team has done like amazing stuff to like, they've done amazing work to really build all these really nice docs and onboarding tools and so I think all that stuff is there. One of the main products I'd like to see for the hackathon is another question we got. I guess so. One of the main ones, honestly, I just want to see things like user facing things that's really, I honestly don't even want to be able to guess what it's going to be.
00:44:03.916 - 00:44:23.544, Speaker B: It'd just be cool to see stuff like where you like applications where you try it out and it's something you've never seen before, something did, something really original or hopefully, you know, just, just something. Or it's like totally novel or like fresh, but user facing and practical by other people or whatever. Like that's the kind of stuff that I'm, I'm the most keen on seeing.
00:44:24.924 - 00:45:13.504, Speaker A: Yeah, definitely just kind of the whole entire workshop overall overview, you know, improving the user experience so the modular, you know, ecosystem can help onboard you users. I think that's like an important theme and, you know, projects that can implement that theme, that'll be, that'd be great to see in the hackathon. But yes, if we have any further questions, feel free to ask. Now, we are slowly running out of time, but I don't see any further questions coming through right now. So with that, I kind of want to close out this workshop with Jacob today. I really want to thank your time, Jacob. Really appreciate your insight on the whole entire strategies and go to market.
00:45:13.504 - 00:46:04.384, Speaker A: I also want to thank everyone in the audience as well for taking their time reaching out, asking questions as well. If you guys have any further questions about the hackathon, feel free to contact us directly at Dorahacks or also on our discord as well. We can help you and also guide you as well to, you know, reach out and connect you to the right point of contact for any questions that you may have. And we'll try to answer them as well if it directly relates to us as well. There's a lot of details on our Adora Hacks celestial website, you know, kind of gives details about the submission deadlines, the prize pool, the judges as well. And once again, I do recommend that everyone takes a deeper dive and deeper look into, you know, the eligibility for, you know, the prize pool. Just make sure that you guys fit in the requirements and that you guys don't get disqualified in any way.
00:46:04.384 - 00:46:27.360, Speaker A: But yeah, with that, I want to give you another thanks to Jacob for your time today. I really appreciate that and I think we could close out. Thank you once again, everyone in the audience for asking questions and being part of and taking the time to be part with us today. Awesome. Thank you. Thank you, Jacob. And if you have any closing statements, feel free to know.
00:46:27.472 - 00:46:32.804, Speaker B: No, no. Just excited to see how it. No, just excited to see how it all plays out and what people build.
00:46:33.624 - 00:46:42.664, Speaker A: Awesome. Thank you, Jacob. Alrighty. Lynn, I think.
