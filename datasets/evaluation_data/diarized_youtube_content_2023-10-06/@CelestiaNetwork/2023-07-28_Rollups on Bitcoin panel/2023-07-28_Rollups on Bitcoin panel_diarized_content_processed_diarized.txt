00:00:00.730 - 00:00:10.426, Speaker A: All right, so I don't know, has there been a lot of panels about Bitcoin or any talks about bitcoin so far at this conference? Has anyone seen any bitcoin talks?
00:00:10.618 - 00:00:12.670, Speaker B: Not specifically about bitcoin.
00:00:13.810 - 00:00:43.146, Speaker A: So Sonny, I want to go to you first. I saw that you wrote a completely insane tweet a couple of weeks ago. I want to give you a chance to sort of elaborate on that and feel free to introduce yourself. Also, you wrote that proof of stake was a mistake. Was that a joke or is that something that you it was a little.
00:00:43.168 - 00:01:43.440, Speaker C: Bit of just in a moment of frustration, I guess, but it was mostly just around like I was frustrated with staking derivatives at the time. Where I just saw that we built or how these staking derivatives protocols are evolving is we're effectively turning our systems into proof of authority systems. And because the staking derivative providers are just basically hand selecting the validators and I was like, we spent so much time designing security mechanisms into proof of stake and slashing and making sure there's bonding programs, we've just undid all of them. And what was especially frustrating was just the fact that core protocol developers are pushing these things and it's like, wait, why did we spend all that time on proof of stake? If we wanted to, we could have probably just built a proof of authority system into the protocol, like actually maybe have token holders use governance to vote in validators and stuff like that. So I think that was like the main point I was trying to get across.
00:01:44.210 - 00:03:08.758, Speaker A: No, I think it's super interesting because we have in crypto lots of proof of stake systems and we have the largest cryptocurrency is bitcoin. It uses proof of work. And I don't think that any one of us can for sure know how the economics of these proof of stake systems are going to end up and how decentralization due to staking derivatives are going to impact these systems. So even though you can have proof of stake as your preference, you can think it's much better than proof of work. But it's kind of nice that there's a proof of work system there is there that we can use as a backup plan if there turns out to be some issues with proof of stake. I think though, at least when I look to myself, if I think about bitcoin and I think about how is that system going to reach mass adoption or scale, it feels like the bitcoin community to today have significantly tied themselves to the mast of the lightning network. So the lightning network was invented in a white paper in 2015 by Taj Dryja and Joseph Poon that basically connects a bunch of payment channels together and leverage that system to route payments across the network.
00:03:08.758 - 00:04:19.870, Speaker A: And I was listening to a podcast with David Marcus, who was the president of PayPal previously and then worked for Libra for a while and now has a company called Lightspark where they are trying to make Lightning work. And one of the things that he said is that in Lightspark they have a functionality called Lightspark Predict which uses AI in order to figure out how you predict which path you should try in Lightning to make a payment. And I would kind of say that if your payment system requires AI in order to just find a path that you can send a payment that doesn't sound like a functioning payment system. Is there anyone here that sort of has? Do you see necessarily a future for lightning? Or do you think that if we want bitcoin to work, do you think that there is actually a good reason? If we want to take the biggest cryptocurrency out there and we want to make it usable for payments, is there a reason to perhaps explore other L2 technologies on top of bitcoin?
00:04:22.130 - 00:05:19.140, Speaker B: I will have an opinion about that. So I think Lightning and payment channels, generally speaking, make sense for high throughput kind of use cases. Fast gives you really fast high throughput payments. And I think it would be good for payments that the whole world doesn't need to know about. Because, like, with any blockchain, whether it's a layer, one blockchain or a roll up, you kind of have to tell everybody in the network about this payment and they have to store it forever. And so for payments like maybe machine to machine payments or other kinds of micro payments, something like Lightning or payment channels, generally speaking, I think maybe makes more sense for that kind of use case. But yeah, it still remains to be seen what that model really gets product market fit for.
00:05:20.150 - 00:05:57.390, Speaker D: I agree with that, especially because I don't know about Lightning technical problems and the progress on that too well. But definitely when we're talking about in the context of roll ups on bitcoin, at the end of the day, bitcoin has a maximum of four megabyte data throughput every ten minutes and there's a limit of even if you're leveraging a roll up, there's a limit of number of transactions you can compress squeeze into that. As a result of that, lightning definitely serves pretty interesting purpose, especially in the case of bitcoin.
00:05:59.330 - 00:06:36.460, Speaker E: Payments are the original use case for cryptocurrency. It's the least speculative proposed use case for cryptocurrency. And payment channels have some amazing properties. They can be extremely low cost, they are good as finalized instantly. As soon as you receive it, you don't even have to wait for a block time. Even though in Ethereum and the rest of the blockchain scaling research has sort of started to focus on things like roll ups now and we sort of left behind payment channels, those properties are lost on roll ups and it's certainly worth trying to make the technology work if we can, to get them back.
00:06:37.790 - 00:07:05.300, Speaker D: To be fair if you can scale data throughput to the levels that your payment network can leverage it really well. And we know that we can scale data quite well in a way that we can scale execution. So we can still have similar throughput like systems with data scaled DA layers like Celestia. But especially in the case of bitcoin, you just can't do that.
00:07:06.810 - 00:07:33.722, Speaker A: So, sonny, do you care about bitcoin at all these days? Is it something that I know that you work in the cosmos ecosystem? And is there a vibe in that community that bitcoin is a lost cause? Or are there actually people that care about improving bitcoin and coming up with solutions to improve the system? And how do you feel about it personally?
00:07:33.866 - 00:08:00.278, Speaker C: So, for me personally, I spent a lot of time thinking about bitcoin. I got into cosmos because I wanted to build the app layer for bitcoin. I was working at consensus for a little bit, and I was like, they're doing all this ethereum stuff is cool, but what is this ETH shitcoin? And we got to build for bitcoin. And bitcoin is an app chain. I was like, oh, okay, good. This is simple. We're going to do payments and issuance here.
00:08:00.278 - 00:09:07.686, Speaker C: But then blockchain was the one who came up with the idea of side chains, and it's never really shipped. And I just saw cosmos was the place where people are actually building sidechains and app chains. Okay, we're going to issue bitcoin on the bitcoin blockchain, and then the BTC asset is going to flow off into the cosmos ecosystem and be the money of this ecosystem. And so that's kind know, five years ago, that's how I got into, you know, got busy with shipping and building all the products and stuff. But now I think it's time for I personally really want to shift cosmos back towards that original mission that was there for a lot of us. And so I really do think that the ethereum ecosystem, it has this base money and it has this huge ecosystem of applications around it. I do think that the cosmos ecosystem has the second biggest ecosystem of applications, but we lack a base is like I do think the future of cosmos is to figure out how to bring bitcoin and build this application ecosystem around bitcoin.
00:09:07.686 - 00:09:33.620, Speaker C: That's why we're working with axelar to build a property centralized bitcoin bridge that bridges not just bitcoin, but it'll bridge ordinals it'll bridge BRC 20s. We're talking with the Lightspark people about making so you can bridge via lightning and stuff. So I do think that I personally think that bitcoin is the future of cosmos. Obviously, cosmos is a very decentralized, distributed group of people and community. So different people have different views, though.
00:09:33.990 - 00:09:40.898, Speaker A: I love that answer. Is it possible that I could get you to wear a bitcoin builder hat?
00:09:40.994 - 00:09:47.080, Speaker C: 100%. Thank you.
00:09:47.950 - 00:09:56.682, Speaker A: We used to have a culture of innovation and fun and building in bitcoin? I don't know. John, do you want to wear one too?
00:09:56.736 - 00:09:58.170, Speaker B: I gladly accept.
00:09:58.910 - 00:10:47.820, Speaker C: I think, honestly, the whole ordinals thing was really exciting to me. Not because of the technology behind it, it's not that crazy or anything, but just the fact that it brought this renewed excitement to the bitcoin community again. And I think it's the first time in years I've seen bitcoiners be excited about things. And I think it's just restarted this conversation that I can reasonably see that at some point in the next two years we're going to see more soft forks into bitcoin, get new protocol upgrades, which I will admit I did lose faith in the rate of development on bitcoin core in the last couple of years. And I do feel this sort of renewed excitement and cultural shift in the community, honestly, a big part, thanks to the work that you and ud have been doing.
00:10:48.350 - 00:12:11.058, Speaker A: I've heard a lot of people say that there's sort of a renaissance of building culture coming back to bitcoin. And one of the reasons that I want to talk about bitcoin rollout specifically here is because we have this massive modular ecosystem now where there's executioner environments and there's proof systems and there's all these different tools that's being massively invested in innovated upon that. If bitcoin can just tap into all that innovation and try to bring some of that home, then we could sort of leapfrog the bitcoin space several years into the future. So on the topic of bitcoin roll up, I think maybe it's a good idea to sort of give a lay of the land so that people understand, are roll ups on bitcoin even possible? We've had this conversation in different formats and different podcasts, like 15 times, so I think we can just summarize it super quickly. So in bitcoin, what you can't do, for example, is that if you have one transaction that says x equals five in another transaction, you can't multiply that value by two, so x becomes ten. Bitcoin doesn't have, like, state and variables and values in that sense. The only thing that bitcoin has is unspent transaction outputs.
00:12:11.058 - 00:13:16.410, Speaker A: So what you can do in bitcoin is you can reference an unspent transaction output, you can combine it with a script, and now you have a new unspent transaction output, but you can't really reference other variables in bitcoin. So you can't really build, like, a roll up on bitcoin today, but what you can do with bitcoin so, for example, we put JPEGs on bitcoin. So that means that bitcoin works as a data availability layer. All you need in order to build a sovereign roll up on a blockchain is that you need some space to put that data blob. So in the context that we're talking here, initially, we're talking about using bitcoin as a data availability layer in sort of the modularity sense. We can build sovereign roll ups from that and then there is this whole body of discussion around, okay, what upgrades would be necessary at the bitcoin base layer in order to enable roll ups. And then I think the consensus is that we would need some way to sort of store state on the bitcoin chain, either through a covenant construction or something else.
00:13:16.410 - 00:14:02.940, Speaker A: And then we would need a way to validate a fraud proof or a validity proof. So we would need, like in bitcoin right now, for example, you can't look at the merkel route and verify that a value belongs in that merkel route. You also can't validate a serial knowledge proof. Bitcoin is like a super primitive calculator. You can only do like, add two values together and you can't even store that value anywhere, but you can use it as a data availability layer. So we're going to talk a little bit about sovereign roll ups. So for those of you who don't know the difference between a sovereign roll up and a real roll up, like Arbitrum or StarkNet or optimism, it's basically that the sovereign roll up doesn't have a bridge between the layer one system and their L2 system.
00:14:02.940 - 00:14:59.386, Speaker A: Maybe we shouldn't even use those layer numbers anymore. I think that the modular space is trying to move away from that. But you basically can't bridge bitcoin trustlessly into the second layer, the bitcoin asset, and bridge it back. But you can use bitcoin as a data availability system to store a bunch of transactions and execute a state from that and create expressive layers on top of bitcoin, basically. So if we put ourselves in the situation, that okay, we think that roll ups on bitcoin are interesting, and the first step to get there is to build a sovereign roll up and then build some type of bridge, some trusted or crypto economic bridge into that second layer. I think it's more interesting than going back to the conversation, like, how is it possible to build bitcoin roll ups? It's more interesting to talk about. Okay.
00:14:59.386 - 00:15:37.270, Speaker A: Given the tools and applications that are out there today, if I gave you like a challenge and I said, okay, well, by the end of this year, we need to have a first sovereign roll up on bitcoin. If you have that as your mission right now, that that's what you have to do, and you will get fired if you don't deliver on that. What tools would you leverage from the sort of the existing domain of modularity or whatever in crypto in order to reach that goal? We can sort of start here and then make our way to the end of the row.
00:15:38.030 - 00:16:18.614, Speaker D: Okay, perfect. To start, I want to deemphasize the idea of real roll ups versus sovereign roll ups. Sovereign roll ups just don't need a smart contract or any execution at the base layer to verify your fraud proof or your validity proof. But that only means that at the start, without verifying that bridge. It doesn't have that bridge. However, the security guarantees of a smart contract roll up and a sovereign roll up are the same. We just create a proof of the sort that we read all the data from the base layer and we processed all the transactions correctly later on.
00:16:18.614 - 00:17:04.034, Speaker D: These sovereign roll ups can also have bridges, so you can still derive all of the Bitcoin security and build an application on top of it. And the only thing that you would be lacking is the ability to bridge Bitcoin. And to be fair, that's a big missing point about the stack that I would use to build sovereign roll upon Bitcoin. I'm extremely biased. At Sovereign Labs, we work on Sovereign SDK. So there are already teams working on a Bitcoin adapter to make sovereign SDK build roll ups, deployable to Bitcoin. And so I would definitely go with that.
00:17:04.034 - 00:17:23.820, Speaker D: And I would choose our ZK option. We provide both optimistic roll ups and ZK roll ups using ZK single round proofs or ZK proving everything. But I would go with ZK because the block times on Bitcoin are quite long, so you don't take the full advantage of being an optimistic roll up.
00:17:25.150 - 00:17:34.538, Speaker A: So you already are working with a team that is building an adapter to leverage Bitcoin as a data availability layer.
00:17:34.634 - 00:17:35.230, Speaker D: Correct.
00:17:35.380 - 00:17:48.260, Speaker A: So maybe to you, Connor, perhaps you could give a little bit of an intro to what Rollkit is. And I think that are you also working on a similar problem?
00:17:49.270 - 00:18:27.406, Speaker E: Yeah, roll Kit is also an SDK for provisioning sovereign rollups. It's meant to be quite customizable. You can put in any kind of virtual machine that is compatible with the ABCI interface, which should be any VM you could conceive of because it's a very flexible interface. Rollkit also wants to support all different kinds of proving systems. We have fraud proofs for Cosmos SDK already. We hope to add different kinds of ZK proving schemes as well. And also we have an integration into Bitcoin already.
00:18:27.406 - 00:19:07.866, Speaker E: We developed a implementation of the DA interface for the Bitcoin taproot witness. That was done by Javed Khan on my team, who should be here and unfortunately couldn't make it, but we miss him. And as for design considerations for a sovereign roll up on Bitcoin, what features would you want? What token would you use? What kind of VM would you pick? Ideally, you would use bitcoin. I think bitcoiners. Want to use bitcoin. I don't think they want any shitcoins. But you can't trustlessly do Bitcoin up to a sovereign roll up like we talked about.
00:19:07.866 - 00:20:00.086, Speaker E: So would they accept some sort of trusted bridge? I'm not sure. If the answer is yes, then that's what you should do. You should have some sort of trusted bridge or ecosystem of trusted bridges to get Bitcoin up there so that they can use the money that they believe in. If they don't want to trust a bridge or a committee to attest to those bridge transactions, then you got to make sure the token on the sovereign roll up is something that aligns with bitcoin. Do something without a pre mine, do something without insiders, maybe even AirDrop it to the bitcoin UTXO set. When you launch the roll up for features, there's a bunch of things you could do. You could add payment channels, you could give a lightning network to this thing and it would have more capacity to open and settle those channels than bitcoin does because I think it has more block space with the four megabyte taproot witness.
00:20:00.086 - 00:20:26.840, Speaker E: That's enormous. That's bigger than not bigger than a celestial block I can't remember, but it's pretty huge. You can do a lot on there. You could add privacy to it. You could add zcash style privacy that bitcoin base layer doesn't have. And it would have the security of bitcoin. A sovereign roll up is basically an app chain, but with close to the full security of whatever it's deployed on.
00:20:27.370 - 00:21:51.120, Speaker A: So I just want to stop here for a brief second and reflect over the fact that there are two modular builders here that have already built hooks into the bitcoin protocol to start leveraging that as a data bank. So all that stuff that is happening, like out there in the ethereum world, in the cosmos world, in the modular world, because we have these hooks into the bitcoin base layer as a data storage, all of that stuff can start creeping back into the bitcoin ecosystem now. So like bitcoin builders, they're going to get challenged by this whole other ecosystem that has been practicing and building applications for these layers for years now. Sunny and light, do you guys see any risks with that? Is it maybe in bitcoin's best interest to just stay as pure and as far away from all that staking derivatives and mev and sero knowledge proofs and complex math? Is there a risk that as we bring the innovation that has happened sort of outside the bitcoin space, that we also bring with us the issues?
00:21:53.330 - 00:22:11.590, Speaker C: I think the point is that you keep the bitcoin core chain as simple as possible. There's a few upgrades I would like to see mostly around making bridging a little bit more trustless. But beyond that, I think all this stuff should be experimented with at the edges on these new chains.
00:22:12.810 - 00:23:03.320, Speaker B: Yeah, from the research that I've seen, mev tends to stay on the layer. That where the transactions are actually executed. So if you have roll ups on bitcoin, the sequencers might be capturing mev, but there is not really opportunity for the bitcoin miners to get involved in that directly as the mining network. And so I'm not too worried about mev in the context of either sovereign roll ups or even like L2 roll ups on bitcoin. And like sunny, I think the changes that we want to make to bitcoin would be relatively minimal. Just to enable trustless bridging. And then beyond that.
00:23:03.320 - 00:24:23.982, Speaker B: I think that the application design space that is opened up by Rollups is huge and would be really valuable to Bitcoin. Whether it's more private transactions like Connor was talking about or whether the focus is on Scalability because you can do massive witness aggregation into zero knowledge proofs and get transactions down to just, like, a dozen bytes or so, which would be huge for throughput and improving scaling. So I'm not too worried about it. In terms of your original question about the stack, I think what these guys are building, it would be a really great foundation for a sovereign roll up. I also think that there are interesting possibilities that are opening up. Like if we don't have trustless L2 bitcoins or bitcoin bridges, we do have things like crypto economic bridges, like what Threshold Network has built, or nomic, which is a bitcoin side chain in the cosmos ecosystem. Once you can get bitcoin onto, let's say, nomic, you can use IBC to connect bitcoin to any other Cosmos chain.
00:24:23.982 - 00:24:51.526, Speaker B: And so you could either build like a modular system there where you move bitcoin into the cosmos, and then you could use Celestia as a data availability layer to have an even more high throughput chain on top of that. So I think there are a lot of possibilities that are either already here or just around the corner as these systems start to mature.
00:24:51.718 - 00:25:02.810, Speaker A: So, Sonny, I saw that you were nodding a lot. Is there any connection between this and sort of is there a way to connect IBC to bitcoin using a roll.
00:25:05.650 - 00:25:05.966, Speaker D: Mean?
00:25:05.988 - 00:25:42.940, Speaker C: I've thought about what would IBC on bitcoin look like, and really the point of IBC is to bring the trust assumptions of your bridge as close to the trust assumptions of your consensus protocol as don't know. I think the direction that I'm most interested in right now is mostly around drive chains. I think it's basically know, I think drive chains are the proof of work equivalent of IBC, where it's saying, hey, let the bridge be operated by, instead of the validators of your proof of ACUM, but let it be operated by the miners of your proof of work system.
00:25:43.710 - 00:28:14.460, Speaker A: Yeah, I know that we have at least three fans of drivechants on this panel. So I want to talk about something slightly different, which is that I've at least made an observation that if you look at the roll up space in the ethereum world these days, you see that for example, optimism has the Op stack and ZKsync came out recently with a ZK stack. And at the ECC event, StarkNet announced the StarkNet stack. I think what is basically happening is that these different roll ups that exist on Ethereum today are trying to modularize their specific stack so that other builders can deploy app chains and other instances of the same roll up which we have seen with example with Binance launching BNB opstack and Coinbase launching Base which is built on Opstack. And I think that the reason that these teams are doing that is because they want other builders to sort of use their tools so that everything that they build, everything that Coinbase builds on base, everything that Binance builds on this BNB Opstack chain will become compatible with sort of the mothership. So everything that happens there, optimism, will just be able to integrate with no friction at all. So I'm thinking that is that a trend that you guys have seen also that these sort of stacks are emerging? And is that maybe something that we could leverage for Bitcoin? Like could we do something like taking Opstack and putting it on Bitcoin? Could we take ZK stack and putting it on Bitcoin? Could we take the STARTnet stack and putting it on Bitcoin? And is that a direct orthogonal thing compared to what you guys are building with these SDKs that are building sovereign roll ups on Bitcoin? Or are there synergies here? Like could you take ZK stack and then use roll kit to put the data into Bitcoin? Or how could you take a stack like that that I think may emerge as really powerful software frameworks? Could we leverage those with the types of tools that you guys are building.
00:28:16.030 - 00:29:21.550, Speaker D: So you can totally take these stacks and modify them to work on Bitcoin? The key part is rollkit and sovereign SDK is inherently being built to be for sovereign roll ups to start and then you can add bridges to them. And that makes it really easy to integrate it with Bitcoin because we're just using Bitcoin as a pure datability layer with optimism. Even with the integrations Op stack, even with the integrations they did to Celestia so far, ethereum is the settlement layer and then Celestia is like the data layer. They still require that smart contract interaction. So to derive full bitcoin security would not be possible. At least unless they do heavy modifications to the Op stack in a way that might currently might introduce security vulnerabilities, because they're trying to stay as close to geth as possible, but over long term it's definitely possible. But they need to get out of the smart contract roll up framework.
00:29:25.030 - 00:30:43.980, Speaker C: I'm actually personally a little bit less interested on using Bitcoin as a data availability layer for everything. I see. The Bitcoin proof of work is actually a really good data availability system because what it does is you put data on there and miners are incentivized to broadcast it as widely and as quickly as possible because they want as many people mining on top of their block as possible. So it's really good as this incentivized fast propagation layer, but also as this hard timestamping layer. And I think trying to put all your data onto Bitcoin, to me at least right now, seems like not a good use of Bitcoin block space and resources. But I think putting the types of data that you want this sort of hard timestamping for is what's more important. So I'm an advisor to Babylon and what they're doing is say like, hey, okay, what can we actually benefit from putting on here? Why don't we put our proof of stake block headers on here? And that way we get this strong timestamping system and we basically make it so we can by putting proof of stake block headers on there, you basically can solve these long range attacks that you get in proof of stake, get the best of both worlds of proof of stake with proof of work.
00:30:43.980 - 00:31:04.660, Speaker C: And I think being a little bit more smarter of what kind of data, I think different data availability solutions have different benefits and being smart about what type of data you put where. And so, yeah, block headers, I think that belongs on bitcoin. Putting your entire block data, I don't see the point.
00:31:06.310 - 00:31:49.470, Speaker E: Yeah, bitcoin ordering is very valuable to people. We've had stacks, which is this thing that checkpoints its blocks onto bitcoin, and Babylon, which is doing something similar. And when rollkit announced the bitcoin sovereign roll ups, a lot of people were confused on what the difference is. And the difference is rollkit puts the full blocks in the witness. But kind know what's the point of that? It's not so clear. Data availability is talked about a lot in regards to roll ups, sovereign and settled, where there's an on or off chain light client where you have a commitment to the results of the state transition and some sort of proof that it's correct. And then you want to verify somehow that the data is available.
00:31:49.470 - 00:32:18.490, Speaker E: And if you can verify that a lot of data is available without needing to download all of it, then it can be described as very scalable. Bitcoin doesn't have sampling. So if you want to verify data availability for bitcoin, you have to download the whole block that's the whole four megabytes. So it's not like Celestia where you can verify the whole block is available with only some small samples of it. So there's a good argument that it's really the ordering that we care about and not necessarily the data availability.
00:32:19.390 - 00:33:25.120, Speaker A: And I like what you said previously, Connor, that if we wanted to build a roll up system natively for bitcoiners, for the bitcoin ecosystem, maybe you would try to do this even without introducing a new token. So are there other considerations, like if you were to build specifically for the bitcoin ecosystem, are there particular use cases that would maybe be more interesting to build for bitcoiners? Are there perhaps something on the privacy side? Maybe there are some things that doesn't have all that negative connotations that some bitcoiners are worried about. Let's say we had an executioner environment today that had expressiveness, that was secure, either had the full data on bitcoin or had some of. The data, but was basically secured by bitcoin and used the bitcoin native asset. What would be some interesting use cases for that? We start with you, John.
00:33:27.970 - 00:34:30.290, Speaker B: Well, assuming a good trusted bridge for BTC, I think the use cases that are already popular on bitcoin, just being able to do those maybe in a more scalable way. So like a lightning channel management roll up where opening, closing, rebalancing your lightning channels is like super cheap. That could be interesting. Privacy is also, I think, a significant pain point for bitcoin users. If you've ever tried to make your bitcoin private, there's these guides on the internet that are like ten pages long and if you screw up any of the steps, then all of your work is for nothing. And so having like a zero cash just easy button for privacy that just encrypts all your transactions I think would be pretty useful. And then can't underestimate, I think, the utility of bitcoin DFI.
00:34:30.290 - 00:35:01.022, Speaker B: It's a pretty big use case. I think over 1% of the bitcoin supply is being traded or lent or borrowed against on different chains. And so, yeah, just doing that in a way that where you also get the full double spend security of bitcoin through the bitcoin DA settlement layer I think could be useful to a lot of people.
00:35:01.156 - 00:35:12.670, Speaker A: What about like a bitcoin backed stablecoin? Like USD that's backed by bitcoin? Do you think that could be something that would be interesting to bitcoiners?
00:35:14.050 - 00:35:42.434, Speaker B: I think it could be because right now the stablecoins that bitcoiners have to use are like fiat stablecoins backed by money in a bank somewhere. And so if we could actually use stablecoins that are backed by bitcoin in a smart contract instead, I think that would be better. We actually built one of you can kind of consider it like a proof of concept of this on the Rustock side chain. It's a sovereign dollar, it's a bitcoin.
00:35:42.482 - 00:35:46.010, Speaker A: Backed stablecoin, and that's with over collateralization.
00:35:46.350 - 00:35:47.430, Speaker B: Over collateralization.
00:35:47.510 - 00:35:55.802, Speaker A: We're not getting into like a terra luna situation with this where it's going to end up with billions of bitcoins getting sold because there's an algorithmic peg that sort of detaches.
00:35:55.946 - 00:36:40.940, Speaker B: Yeah, it's over collateralized. There's like efficient liquidation mechanisms, so it always stays over collateralized. At least that's the design right there. Could be a flash crash and maybe black swan event. But yeah, it's not like a partially backed stablecoin, it's a fully over collateralized stablecoin. But being able to do that on a chain that gets the full double spend security of bitcoin, unlike ROOSTOCK today, which has its own independent security budget, can be reorg to independently of bitcoin, I think it brings that kind of utility in a more, I think, bitcoin native way.
00:36:43.470 - 00:37:40.670, Speaker D: Totally. But also, to be fair in any yes, these roll ups will introduce general purpose programming to bitcoin, like using bitcoin security. And I think the bitcoin crowd, as I've seen at Bitcoin Miami, is extremely excited for that. But at the same time, since Bridging bitcoin will definitely introduce new trust assumptions, any bitcoin back stablecoin will definitely not have the attractiveness as it would have had without any trust assumptions, for sure. I think what's a bit more interesting, something that excites me, is that in a sovereign roll up, since you're reading the whole data space of bitcoin and applying rules from there, you could also read into USDT transactions and represent USDT trustlessly on the sovereign roll up itself and introduce liquidity in that way and build a DeFi ecosystem.
00:37:43.170 - 00:38:09.494, Speaker E: I'll be a little bit contrarian. Maybe we shouldn't do a general purpose VM. Maybe you just want enshrined DeFi so that way you can avoid smart contract bugs. The fear of smart contract bugs, the upgrade authorities that people introduce as central points of failure to deal with those bugs and have something that's more bitcoin aligned and without all the things that cause bitcoiners to push back so hard against DeFi on Ethereum.
00:38:09.622 - 00:39:27.198, Speaker A: That's such a great point. I actually wish that we had spent some more time talking about that, that when we're talking about building ZK roll ups and optimistic roll ups on bitcoin, we don't necessarily need to take the entirety of the EVM. We could actually go back to that thing that bitcoiners used to say, that we're going to analyze what all these other altcoins do, and then we're going to take sort of the best parts, the things that we really like about them, and we're going to integrate them back home. So maybe we wouldn't necessarily want to take all the complexity of Solidity and the Ethereum virtual machine and try to cram that into bitcoin, not only because there's sort of bugs inherent with that, but also because it's really difficult to prove the EVM if you're using zero knowledge proof. It's basically a system that's hostile to be zero knowledge proven. And there are other virtual machines out there, like Cairo, for example. I had a conversation with Vitalik and asked him, what do you think would be the best sort of virtual machine and language to run on Bitcoin? And I don't want to put words in his mouth, but I think he sort of was trying to point me towards Cairo as a better language to be serial knowledge proven.
00:39:27.198 - 00:40:06.302, Speaker A: So we don't necessarily I think it's sort of a mistake if people think that we're talking about taking all the complexity from these smart contract ecosystems. There are sort of narrow versions of that that could be more focused on privacy or could be more focused on payments only taking those. With that, we're kind of out of time. Is there anything that you guys feel that you want to say before we wrap this up? Okay, that's it? All right, thanks, everyone. Thanks for coming to the panel. If you guys are interested in building on bitcoin, I'm definitely in the business.
00:40:06.356 - 00:40:06.960, Speaker D: Of.
00:40:09.330 - 00:40:21.100, Speaker A: Hearing your story wanting to introduce more builders back into bitcoin. I also have a company we're hiring, so if you want to build roll ups on top of bitcoin, try to find me after this panel. And thank you very much for coming.
