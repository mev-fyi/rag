00:00:05.130 - 00:00:56.110, Speaker A: Okay. Welcome, everyone, to Celestia Cordett's call two. This is the second call happening right before the holidays, the last call we're going to have before the holidays. At the end of the meeting, I'll schedule for the third call to happen somewhere in January, probably like the first or second week of January. For the agenda, we'll start with a roll call and then we'll move CIP one to living status because today is the final day for review. We'll have some updates from the working groups and we'll go over the CIPs that are mostly one in review, a few in drafts that cover the course category of the standard stack. All right, so let's get started with a roll call first for the consensus side.
00:00:56.110 - 00:01:01.406, Speaker A: Anyone from the core app team? Present rep, I think Callum might be here.
00:01:01.508 - 00:01:02.640, Speaker B: Yeah, I'm here.
00:01:03.890 - 00:01:16.100, Speaker A: Okay. Your audio might have feels like a little bit distance. I don't know if you guys are using the owl, but maybe check in on that. Second one is strangelove. I think Jack is on the call.
00:01:16.550 - 00:01:20.120, Speaker C: Hey, we've also got John and Alex from my team as well.
00:01:20.570 - 00:01:28.378, Speaker A: That's cool. As long as there's one representative from your team, that's fine. Then we got the IBC team. I think Suzanne is on the call.
00:01:28.544 - 00:01:30.220, Speaker D: Yeah, I'm here. Hello.
00:01:32.110 - 00:01:38.620, Speaker A: And then binary builders. Marco, I think, is on the. Awesome.
00:01:39.150 - 00:01:39.900, Speaker C: Hello.
00:01:40.610 - 00:02:01.874, Speaker A: All right, from the data availability side, we got celestial node on the call. Renee and clip and then iger. Renee. Yes. Awesome. Now we got a full house. All right, so first order of business is CIP one moving to living.
00:02:01.874 - 00:02:32.478, Speaker A: So there's not much to cover here other than that it was on last call. And the last call deadline is the 13 December, which is today. So the only update here is I'm going to move it to living status, which means that in the future we could still update. It's not a final process because that way we can reiterate on it. So I'll be submitting a pull request today to update the status to living. And. Yeah, that's it for CIP one.
00:02:32.478 - 00:03:04.966, Speaker A: Now, moving on, we need to move on to the working group updates. So I would like an update from the DA working group. I submitted some CIP informational cips on how to get started as a working group within the CIP process. Like, it's mostly recommendation. And what is the role of the chair or co chairs and stuff? So we'll get started with the DA working group. I believe ramen Ramina is on the call. If you have any updates from your side?
00:03:05.148 - 00:03:05.446, Speaker D: Yeah.
00:03:05.468 - 00:03:48.440, Speaker E: Just want to say we had our initial meeting just to get started. We just went over what was within scope of the working group, what wasn't, and then really who was present was the no team from celestial labs and the teams from Iger. We have created a GitHub repo. There's nothing in it yet, but that will be where we collect things like the charter, different things like meeting notes and stuff like that. But the idea was we just wanted to have an initial meeting, kick off and shift our sort of team meeting that we were having between the two teams from implementation of different nodes to the working group. So we've started, but not much to share back yet, and we'll resume in the new year.
00:03:49.610 - 00:04:18.720, Speaker A: Sounds good. Once you guys have information, or if you want to link to your repo after the call, we can add it to the readme page of the CIP repo so that people can know where all the working groups, what repo they're located and any information about them. But we can do that after the call. But that's great to hear that you guys kick started the working group. I mean, I attended it the first call and stuff. It went pretty well. I'm glad you guys are kickstarting it.
00:04:18.720 - 00:04:40.580, Speaker A: Any questions for the DA working group from anyone else before we move on? Okay, moving on to the interface working group, I think. Glib and I'm not sure. Is Josh Bowen on the call, the co chair of the interface working group. If there's any updates from your side.
00:04:41.350 - 00:04:43.700, Speaker C: Yeah, I'm on the call, but Halib will give the.
00:04:44.630 - 00:04:45.550, Speaker A: Yep.
00:04:45.710 - 00:05:44.994, Speaker F: So yeah, we set up our DA working group, invited a bunch of folks from various organizations. By the way, if you are not there and you are interested in interfaces of the modular ecosystem, you should be there because they will affect you. Please contact us and we will add you there. Besides, we basically started discussion on again what's in the scope of the working group, what's not, and covered some architectural questions and we are planning on considering having a new cap. The first cap produced by this working group, which will be likely about DBA interface and the one might go after is the sequencer API. This hasn't been decided, but we're only kicking off. There's a lot of stuff that we need to align on and agree on and decide.
00:05:44.994 - 00:05:51.000, Speaker F: So it's pretty fun so far. Join us and that's it for me.
00:05:52.510 - 00:07:05.070, Speaker A: Okay. One other thing I wanted to add for everyone else is the interface working group not only covers DA, but also anything on deck consensus side, like from core and app. So if you're interested in that work stream or let's say if you guys are, I believe if you're an explorer and you care a lot about indexing and stuff, and you would benefit from discussing that consensus layer API, I think this interface working group is for you because when we kicked off that call, the working group, call it mostly DA interface representative, and we didn't get too much from the consensus side. So I would highly recommend anyone who's working on indexing or interfaces a lot with the consensus layer through an API to participate in that working group. Okay, any question for the interface working group before we move on, how do we join? You can message the potentially, I'll add you, Jack.
00:07:05.810 - 00:07:09.906, Speaker C: Yeah, awesome, thank you. You can also add John and Alex too.
00:07:10.008 - 00:07:14.020, Speaker F: Yeah, I'll dm you and you can give me emails of who to add.
00:07:14.470 - 00:07:15.666, Speaker C: Perfect, thank you.
00:07:15.768 - 00:07:31.240, Speaker A: Thank you. Awesome. All right, cool. Next up is CIP six, which are currently in review stage to go over the author. Callum, you want to kick it off?
00:07:31.610 - 00:08:05.326, Speaker B: Sure. Give a quick intro. Hopefully my mic sounds a little bit clearer. I'll start just more broadly and then sort of focus on this part specifically. So I guess you can say that solicitor is a marketplace between buyers and sellers, and the sellers are the validators which are offering DA and the buyers are roll ups which are buying that DA. And then in between that you have a price with which these kind of things settle. Now, I guess initially we were just focusing on the product itself, like the protocols underlying it, and now we're sort of focusing our attention on making sure that that value that is provided is correctly captured.
00:08:05.326 - 00:09:04.838, Speaker B: And so there are a bunch of different phases to this and there's a lot of time thinking around something similar to eip one five nine. Although this is just a preliminary step which is focused around price enforcement. This is basically making sure that the sort of like value exchange happens on chain and not on some sort of like third party. So it does this through a similar thing that we see in other chains. So basically enforcing a global min gas price. So currently what can happen is that a proposer or a validator can set their gas price to zero and because there is no sort of enforcement around this, they can sort of get paid off chain essentially, so they can open up, say I want it in a different token, I get paid for this stuff and then I can post it directly on chain. And what happens is that this encourages all these proposers to do this because they get more revenue from that than they do from having it through the chain itself.
00:09:04.838 - 00:09:40.900, Speaker B: So that's one thing. The second part of this is making sure that basically every single transaction has a signer and a fee associated and is capable of paying that fee. So we don't really care too much about the validity of it, so long as they're willing to cover that fee. Currently, right now, you can sort of submit arbitrary bytes on celestia, and so you could use that as a mechanism to get free dA. So you're essentially publishing random data that is unpassable by the validators of celestia, but for your own roll, it could be. So these are kind of just two small changes that just helps with that and then allows us to move on to further stuff later on.
00:09:44.390 - 00:10:08.694, Speaker A: Sweet. So, Callum, given that it's in the review stage, I would recommend keeping it in review until early January. Then by early January, if there's no more feedback from anyone on the call from the core devs, I would prefer moving it to last call. So that gives you a final two week review before it becomes like a finalized specification.
00:10:08.822 - 00:10:25.280, Speaker B: If that works for you, yes, that's fine. And if this is new for you and you're interested, then I suggest going to the forum. There is a page there to discuss it, so we don't have to discuss it now. I'd love you. If you have questions now, happy to answer them, but we can also do it there.
00:10:29.230 - 00:10:58.900, Speaker A: Sounds good. Any feedback on CIP six? Any discussion, any points to be made by anyone here? Otherwise, if later you have a discussion point, you can talk about it on the forum post, but I'll give you guys a few seconds if you guys want it. We're doing this now, but this will mainly make an impact when we enforce a minimum fee, right?
00:11:00.150 - 00:11:00.514, Speaker E: Yeah.
00:11:00.552 - 00:11:07.480, Speaker B: So the question is, what is the mechanism that decides what that minimum fee is? And that's something that to be answered later on.
00:11:08.250 - 00:11:10.962, Speaker A: Okay, so this is more like a prerequisite.
00:11:11.106 - 00:11:28.860, Speaker B: Yeah. And then there are sort of discussions around this that are going on. And then hopefully, once we have some clarity about what makes sense, there'll be a proposal to come forward that we can then sort of review around. What is the actual pricing mechanism around this?
00:11:38.730 - 00:12:18.878, Speaker A: Sound good? Any more questions for Callum? Cool. If there's no questions within this call, feel free to ask questions async on the forum post directly. We can move on in early January. Callum, if there's no more feedback or questions, we can move it to last call if you and the core app deem it ready to be finalized. Okay. Moving on is CIP nine. This is packet forward middleware.
00:12:18.878 - 00:12:27.142, Speaker A: I believe Alex Cheng might be on the call. Yes, I'm here. All right. Want to go over the proposal? Sure.
00:12:27.196 - 00:12:47.500, Speaker G: So packet forward middleware is a highly adopted piece of IBC module that enables packet forwarding and things like multi hop IBC and path unwinding. It's already been adopted by dozens of Cosmos SDK chains, and absolutely be helpful for slusher supporters as well.
00:12:51.320 - 00:12:51.764, Speaker A: I guess.
00:12:51.802 - 00:13:12.060, Speaker C: One other note here is there's a lot of common multi chain flows, things like squid and skip and leap that rely on packet forward middleware to be able to offer seamless swapping in and out of tokens. So it will help make Tia easier to use across other chains within IBC.
00:13:19.130 - 00:13:24.090, Speaker A: Sounds good. Anyone has any question from the core devs?
00:13:30.580 - 00:13:37.650, Speaker H: Could you quickly explain a little bit more in detail what the middleware does?
00:13:40.360 - 00:14:36.720, Speaker G: Sure. So pack four. Middleware allows IBC packets to be forwarded across multiple chains, and it is designed such that packets should not get lost in between, and either it completes the entire route of which you can chain together an arbitrary number of chains, or it all gets refunded back to the source chain. So, like Jack mentioned, particularly useful for actions such as swapping and forwarding tokens across multiple chains like squid does. Also very useful for things like path unwinding so you don't to maintain fungibility across tokens that have been IBC'd out to other chains.
00:14:38.900 - 00:14:43.670, Speaker H: Why is the refund timeout 28 days? What's the rationale behind that?
00:14:45.400 - 00:15:27.590, Speaker G: Right, the refund timeout is the total amount of time that it can take to go through the entire route. So imagine if you have a route that goes across 100 chains eventually this timeout, or the refund timeout, is the total amount of time that is allowed for that path to proceed. And this is just a safety mechanism so that coins don't get indefinitely stuck in this module. So after 28 days, if it has not completed the path yet, it'll be refunded back to the source chain, if that's configurable.
00:15:28.490 - 00:15:46.720, Speaker B: Sorry, I had a point on the forum that I raised as well, which is, I assume this can be done kind of off chain, right? Like it's automating a process that could then be done in which you just wait for every single transaction sequentially to happen before you unwind, or if you're going from one chain to another.
00:15:48.450 - 00:15:50.350, Speaker C: What do you mean by off chain?
00:15:52.690 - 00:16:05.780, Speaker B: Essentially having some process that say, I want to get tokens through celestia from chain a to chain b, it submits it to chain a, waits for it to go to celestia, reads it from celestia, and then submits it to chain b.
00:16:06.310 - 00:16:17.110, Speaker C: That process would necessarily be entire. The custody remains in the part of the user that sends the transaction initially.
00:16:21.520 - 00:16:26.700, Speaker B: So you're saying it's not possible to have a non custodial solution that is off chain.
00:16:27.360 - 00:17:01.320, Speaker C: So you would have to sign. This would require that all chains that you're transacting with have Auth Z, and you would need to grant permission on each of those chains to a separate process to allow that process to send transactions on your behalf, specifically moving funds and sending IBC transfers. And then that off chain process would sign. The whole purpose here is to provide single transaction user experience that allows the user to perform actions on multiple different chains.
00:17:08.020 - 00:17:21.672, Speaker B: Yeah, I guess it would be difficult. Like it'd be added burden for the user to have to sign multiple times, and then there's not too sure whether the first one is going to be successful or not. Yeah.
00:17:21.726 - 00:17:41.310, Speaker C: So here, user signs once and they can be reasonably sure. And by reasonably sure, like this is used in production every day. There's millions of packets that have gone through it, and I don't think we have any cases of more than one retry. Really?
00:17:42.240 - 00:17:42.990, Speaker B: Yeah.
00:17:49.620 - 00:18:03.140, Speaker H: Could I imagine this being like a wrapper where one IBC transaction is wrapped in another IBC transaction that is going to be forwarded?
00:18:03.640 - 00:18:47.620, Speaker C: Yes. Think about it like intent. Nash user declares their intent on the original sending chain and then that is carried out through the chain of transactions. So one example, use of packet forward middleware. Let's say I have Tia on Osmosis and I want to move it over to Kujira and make a trade in a pool over there. On Osmosis. I would sign a single IVC transfer that includes a memo field that triggers a packet forward middleware on Celestia, and then also a swap and forward middleware over on Kujira.
00:18:47.620 - 00:19:49.166, Speaker C: So when the user signs the transaction and sends it, the osmosis validator set includes that transaction. The celestia validator set would get a relay transaction that includes the proof from osmosis. It would begin processing the packet. See that it has a memo field, an ICS 20 memo field that matches the packet forward middleware spec. It would grab that data, create a new outgoing packet to Kujira and take anything that remains in the next field and put that into the memo for that second transaction. That second transaction would be sent to Kujira, which would read the memo, see that it was encoding a swap and then swapping those users funds in the pool, and the user would end up on their declared account on Kujira with the token that they desire. Does that flow make sense?
00:19:49.288 - 00:19:57.110, Speaker H: Makes sense. And if the swap is not being executed, then we'll be refunded on osmosis.
00:19:58.810 - 00:20:15.440, Speaker C: So it depends on how the swap and forward middleware, I mean, depends on how the swap and forward middleware would be configured on Kujira. Sometimes they would send it back, sometimes the user would just end up with Tia on Kujira, and then they could manually perform the swap themselves.
00:20:15.970 - 00:20:16.574, Speaker A: Okay.
00:20:16.692 - 00:20:43.830, Speaker C: I think that's how most swap and forward implementations work. But again, packet forward middleware just helps with path unwinding effectively. And then the other middlewares would be chained on top of, you know, on Celestia, you don't need to do anything besides submit Da or move Tia around. So all we need here is packet forward middleware.
00:20:45.370 - 00:20:48.342, Speaker H: How is the memo field restricted? Can I put in there?
00:20:48.396 - 00:20:51.640, Speaker C: Anything arbitrarily, I believe so.
00:20:53.390 - 00:20:54.140, Speaker A: How?
00:20:54.510 - 00:20:58.410, Speaker H: Pricing the memo field, parsing it.
00:20:58.480 - 00:21:58.270, Speaker C: There's two columns, so it's not the memo field in the transaction, it's the ICS 20 memo field. So in ICS 20, the packet format that goes over IBC has an amount, a denomination, a sender address, a receiver address, and a fifth field, which is a memo field. The memo field is a string representation, or maybe bytes. I think it's in bytes, but it parses to a JSON string. And I believe that when the handler gets called, we attempt to parse JSOn. If that fails, then receiving the packet fails. Within that Json, we look for certain keys, and then within those keys we look for certain structures, and we validate all of the fields within those structures.
00:21:58.270 - 00:22:02.240, Speaker C: Alex, maybe you can go to packet forward middleware and pull out the.
00:22:03.970 - 00:22:06.000, Speaker H: Like. That wasn't my point.
00:22:06.550 - 00:22:07.058, Speaker C: Okay.
00:22:07.144 - 00:22:33.400, Speaker H: The attack that I'm thinking of is that you can use the memo field because it's arbitrary to put in any kind of information in it, to basically use that as your quote unquote da layer, because you can put in arbitrary bytes so people maybe get so. Okay.
00:22:35.530 - 00:22:38.210, Speaker C: You'Re still paying gas on the size of the memo field.
00:22:38.300 - 00:22:47.680, Speaker H: Yeah, that's what I was asking. How are you calculating? Okay, cool. I think column answered my question.
00:22:48.370 - 00:22:49.120, Speaker B: Cool.
00:22:50.450 - 00:22:51.406, Speaker G: Yeah, I do want to point out.
00:22:51.428 - 00:22:52.830, Speaker C: Questions about PFM.
00:22:54.530 - 00:23:14.470, Speaker G: Column. I'm looking at your comments on the forum, and you're noting that Celestia had used the token filter to only really allow Tia to flow. So, yeah, the main use case for Celestia and packet for middleware would be to support Tia flows between other chains while maintaining fungibility.
00:23:15.690 - 00:23:19.110, Speaker B: Yeah, that makes sense to me. Thanks for the clarification.
00:23:24.980 - 00:24:15.084, Speaker A: Okay, I would recommend now for the discussion to continue on the form for us if there's any more points to cover for the author, Alex, of the proposal. I think we can only hit review stage if we complete this final section, but I would recommend if there's any more discussion points to have for everyone to do it on the form before you finalize this section. Once you get some kind of feedback from the core depths. With that, we can move on to the next proposal. Thank you for presenting this proposal. Let's move on to Ciq ten. This is also Callum, coordinated network upgrades, if you want to kick it off.
00:24:15.084 - 00:24:15.820, Speaker A: Callum?
00:24:16.560 - 00:24:54.936, Speaker B: Me again. Sure, a lot of this work or a lot of things around this work has been done already. A lot of it was in preparing for v one, and now it's a little bit like kind of after the fact discussing this. So basically, maybe different to other cosmos chains, we're trying to have complete backwards compatibility. That means if you run a v five node, you'll be able to verify and execute v one, v two, v three, all the way up to v five. So that means you can start a v five node from Genesis and process all transactions. So that was like one aspect of it.
00:24:54.936 - 00:25:50.904, Speaker B: And then the other aspect is trying to reduce the amount of downtime we have in between upgrades. Given that as a service chain, making sure that going through an upgrade happens very smoothly. So the kind of direction that's been proposed to head towards, and it's probably best described, if I have it in terms of a flow, is that if we're doing a major upgrade, all validators upgrade to v two ahead of time in this case, and then they still run v one. And then once a quorum of people have upgraded to v two, we have some sort of like, coordination mechanism with which we agree now to propose v two blocks. And so this CIPA is basically around this coordination mechanism. And so there are a couple of different alternatives that were discussed. The one that sort of seems the most prevalent is to have this sort of stuff on chain through these signaling messages.
00:25:50.904 - 00:26:44.780, Speaker B: So each validator, when they come online with their new version, will signal, okay, I'm now running v two, when I'm running v three or v four or whatever. Once a forum have signaled for a certain version, then we use a crank message to upgrade the network so a crank message was used instead of using end blocker as a way of just optimizing for gas. So instead of having to calculate the tally every single height, we just have someone who is doing that calculation on their single node, and then when there is sufficient, they pay the gas to perform the upgrade. One thing of note here is that the quorum is five six, not two thirds. This is because, and I go into detail here in this rationale, imagine a scenario where you actually have two thirds as the quorum. You could have a single visit team validator hold the network. They could do this by just having two thirds who are on v two, and then one third who's still on v one.
00:26:44.780 - 00:27:32.076, Speaker B: So this byzantine validator could signal, hey, let's go to v two. Everyone does this and then refuses to sign the v two message once it gets proposed, and so therefore halting the chain until some of the one third that are on v one upgrade to v two. So we've got this dilemma where you can't actually maintain one third fault tolerance during an upgrade, at least in terms of liveness. You still have it in terms of safety. And so the best we can sort of reach is somewhere in between two thirds and one, which is five six. So that provides one 6th byzantine fault tolerance, or like for liveness, people trying to signal an upgrade but not actually upgrading. And then also the other end, which is that it needs at least one six to actually meet you.
00:27:32.076 - 00:27:33.100, Speaker B: An upgrade.
00:27:41.540 - 00:28:44.880, Speaker A: Cool. Anyone has any question about the new upgrade mechanism specification? I personally might have some, but I just need to read it more in depth and I'll probably ask the questions on the forum post. Anyone? Okay, if no question, maybe. I think for next step, maybe we can continue discussion on the forum post and then working on a reference implementation whenever it's ready. That way we can move it from draft status to review status so that it can be reviewed by everyone. I feel maybe more people have feedback on the reference implementation by then. Okay, if there's no more discussion points, we can move on to the next point.
00:28:44.880 - 00:28:52.000, Speaker A: CIP eleven is Ratul. Is Ratul on the call?
00:28:52.550 - 00:28:53.794, Speaker I: Can you hear me?
00:28:53.992 - 00:28:55.620, Speaker A: Yeah, loud and clear.
00:28:56.390 - 00:29:46.322, Speaker I: Cool. So sip eleven deals with refunding unspent gas. So for a bit of context, when a user submits a transaction on celestia or any other cosmos SDK based chain, they specify a gas limit. And regardless of how much gas their transaction actually consumes, they always pay a fee based on the gas limit. So you can kind of see this in action on selenium for example, if you click that link and then scroll over to the gas column, you'll see that a lot of transactions. Well, I can't really share my screen, so I'm just going to tell you what's on selenium. There's this gas column and a lot of the.
00:29:46.322 - 00:30:29.454, Speaker I: Oh, there you go. So some are green, as in the gas used was actually close to the gas limit, but some transactions are actually red. And in those scenarios, users are kind of overpaying for their transaction because the fee that they pay is the entire fee associated with that transaction. So SIP eleven talks about a mechanism for refunding a portion of that unspent gas that's remaining after transaction execution. We can talk about the details, but I feel like that might be better suited for forum discussion. So I'll kind of leave with.
00:30:29.492 - 00:31:55.494, Speaker A: That's sounds good. Any questions about the CIP? CIP eleven refunding allocated but unspent gas back to the fee payer? I mean, it feels pretty reasonable as a proposal, refunding people for overpaying, but I would recommend if nobody has any immediate questions. Now, that's what a forum for. So, for Rutul, if there's any test cases in reckless implementation, just fill up that, submit a pr whenever you guys have that, and then whenever you're ready for it to be reviewed by everyone else that is ready for review, we can update the status to review, and then if you feel it's been reviewed sufficiently, we can move it to last call. The way it would work is we'll move it to last call on a call. So that means we have rep consensus to do one to final weeks of review before it becomes like a final specifications. If there's no more questions, we can move on to the next point, which is CIP twelve ICS 29 relayer incentivization middleware.
00:31:55.494 - 00:32:01.440, Speaker A: Wow, that's a mouthful. Susanna and I believe Aditya. Are you guys on a call?
00:32:02.290 - 00:33:11.410, Speaker D: Aditya isn't here, but he was the original writer of the specification, which has basically just been copied and pasted from the specs. But some context is celestia is IBC enabled, which is amazing, of course, but right now, relayers are not funded in a sustainable way. When I wrote this, I just looked at the IBC volume of celestia in the past 30 days, and there'd been 72,000 transfers. And I know that there's like a dynamic fee model, but I estimated somewhere between 144 and 1440 TIA has been spent by relayers on IBC fees. And yeah, just doesn't seem super sustainable in the long term. And so the point of this middleware is to incentivize the timely delivery of IBC packets. So in IBC, you've got a receive packet, an acknowledgement and a timeout.
00:33:11.410 - 00:34:20.250, Speaker D: And the middleware works by Aurelia registers their kind of source and destination address, and a user, or it could be a community pool, will attach incentives to specific packets. So there'd be a fee attached to the receive packet, a fee for the acknowledgment packet, and in the case that the packet is never delivered, you'd also have a fee for the timeout packet, which hopefully your packet is delivered successfully, and then you go kind of down the happy path of having the receive an acknowledgment. So that timeout incentive would actually be refunded. But whichever relayer relays the packet first, they basically get this additional fee. So yeah, that's kind of the idea of the feature. On a high level, it's quite inextensive spec, because it's the same one that was from the specs repo.
00:34:24.410 - 00:34:28.710, Speaker B: I have a question. How well supported is it by wallets?
00:34:29.450 - 00:35:33.870, Speaker D: So I'm talking to Kepler right now. So they have support for the custom message type to pay the fee. So right now, if you did a female aware transaction, you would have like kind of two messages appearing, one for your normal transaction and one for the incentivization messages, and then it would be supported. So the correct amount would be kind of visibly deducted. We have a tutorial, actually, which shows all this, if you're interested, but there is still like a little bit of work and open question around exactly how much the incentive should be. And we've been talking with Kepler about this and how they currently know how much fee to recommend a user to charge. And right now it's kind of done with their own registry, so it's quite manual.
00:35:33.870 - 00:36:00.230, Speaker D: And they weren't super keen on having depending on an off chain oracle to determine the fee on the destination side. So yeah, we're just like talking through exactly how that's going to look in more precise detail. But yeah, we're hoping to just integrate it with their existing way of working out fees.
00:36:03.460 - 00:36:10.320, Speaker C: How does relayer fees interact with other middlewares, like swap and forward or PFM?
00:36:11.940 - 00:36:51.520, Speaker D: You just have to wire it up in the stack. So you could have a middleware stack with PFM and Vmidalware. You would just have to have the channel version that indicates you're using those two middleware in your versioning you'd have to have the order of the wiring done correctly. So the packet for middleware would be like the last middleware they would want to pass through. Right, because that's the last one where you're going sending onwards. But yeah, you can have multiple middleware in a stack.
00:36:54.820 - 00:37:12.724, Speaker B: I was reading on the forum that in order for this to take effect, because it's a breaking change of some sorts, that it would require a new channel. Is that correct? So if there was a channel between celestial and osmosis, say an incentivized channel would have to be a new one.
00:37:12.922 - 00:37:31.100, Speaker D: Yeah. So I replied to the message, right now that's the case. But with IBC go v 8.1, there would be channel upgradability. So that wouldn't be the case anymore because you could upgrade your channel version.
00:37:33.040 - 00:37:35.870, Speaker B: And that's already released. 8.1.
00:37:36.320 - 00:37:38.860, Speaker D: No, it will be in January.
00:37:39.760 - 00:37:54.830, Speaker A: Okay. Any more questions on the technical merits of the proposal? No.
00:38:00.100 - 00:38:03.840, Speaker H: You basically register relays. Are we registering them on chain?
00:38:05.300 - 00:38:06.048, Speaker D: Yeah.
00:38:06.214 - 00:39:25.350, Speaker A: Okay. I'll recommend, if there's any more questions, to take it to the forum post. Suzanne, I realized there was already a reference implementation and stuff, and most of it's been done already in a separate repo and we're just moving them over. So that's totally fine. I think the path towards making it so moving it to review stage could happen like whenever, if you guys have any more information about testing cases, but if not just fine, then we can move it to review stage for the core depth to review it, and then getting rough consensus for it as a specification, as if it has technical merits to move it to final, even though if it's final, it's final that these specs are final. We're not modifying this stuff now. Whether it gets included or not in a future upgrade by Celestia is, I think, something that we discussed on this call once we as a community specify what we want to add to an upcoming hard fork, which is why we're having these calls about adding which cips to an upcoming hard work.
00:39:25.350 - 00:39:33.500, Speaker A: But it wouldn't stop it from becoming a final spec within the CIP process, given that it's already been finalized elsewhere, if that makes sense.
00:39:33.950 - 00:39:47.390, Speaker D: Yeah, definitely. I didn't realize there would be another call this December, so I kind of rushed to put it together, but I can definitely add in test cases.
00:39:47.890 - 00:40:27.062, Speaker A: Okay, cool. That's awesome. And then once you do, you can make a pull request, we can move it to review stage and people can comment on the forum post with any feedback or review or questions and hopefully maybe by January, if there's no more review, we can move it to last call. Okay, if there's no more comments on CIP twelve. Thanks Susannah for presenting. The last one is actually a CIP proposal by me, so I'll go over it. Basically this is a CIP to just reference all the on chain governance parameters for the solicitor network.
00:40:27.062 - 00:41:26.590, Speaker A: I added Evan because he wrote the entire documentation for the spec side of things. As an author. Basically the motivation here is given there are on chain governance parameters that impact the core protocol itself and there are parameters that are defined by on chain governance in a way that kind of outside the CIP process. Because the CIP process, it's know, coordination and stuff. I wanted to create a CIP that instead of the final status being final, it'll be living kind of like the CIP one. It'll be a living document just because parameters change over time and stuff. And it'll be up to me, the author, over time as new governance parameters are modified or removed or new ones submitted or added to update the table.
00:41:26.590 - 00:43:13.596, Speaker A: And the useful thing here is anyone who wants to go through the CIP process look at existing specification, at least they have a reference to what is currently activated on Celestia Mainnet. So these are all the tables of what is on Mainnet Celestia Mainnet taken from the celestia app specifications. So the one thing about backward compatibility being that given that they're for Mainnet, some parameters do require hardware which doesn't introduce backward incompatibility after a network upgrade. If one of these values need to be changed and yeah, so I wanted to submit this more like CID doesn't really add anything, but it just creates a reference specification that becomes updated over time to better reflect what's happening on main net. And there's also a forum post if people want to discuss this. But yeah, that is the CIP 13 if anyone has any questions, anyone as okay with that said, I'll probably move it to review also maybe around later this week or maybe in January and if there's no feedback it can move to living status. With that said, I think we're at the end of the call.
00:43:13.596 - 00:43:52.564, Speaker A: Thank you all for taking the time to come join us year for the second seles of core dev call. I'll post some information later on. When's the third call going to happen? It's going to happen maybe like the first two weeks of January so that everyone can join and then we'll continue going from there, do you? Only thing is for today is I'm updating CIP one to move to living. So that way it's a living document. We're aligned around the process how to do the CIP, and that's pretty much it. So thank you all for attending. Happy holidays, enjoy your break, and we'll see you in the new.
