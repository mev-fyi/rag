00:00:02.040 - 00:00:55.418, Speaker A: So let's start. My name is Alex. I'm from selenium. Pklabs Baconbet. And thank you for coming for workshop on how to work with selenium, how to interact with Celestia directly from selenium, and how to verify how your applications working on top of Celestia. And you know, like basically all networks, all chains, they need explorer for first of all to add transparency to how they perform and to validate that everything goes like as expected. And as we all know, Celeste is focused on data availability and consensus as a consensus layer for roll ups.
00:00:55.418 - 00:01:55.950, Speaker A: And one of the main entities on this chain, it is blobs. And we at Selenium decided to have built a block explorer for Celestia by which you can track any data flow on Celestia, track how your application, how your roll up performs, and so let me give you some demo on how you can do it via selenium. So this is our dashboard. You may have seen it on our booth, and it shows in real time all transactions that happen on Celestia. But as I mentioned, one of the main entities, it is blob. And let's start with the main action that you perform on Celestia. You posting blobs, we'll do it on arabic network.
00:01:55.950 - 00:02:37.748, Speaker A: It is Devnet. And for example, I'm gonna. I would like to post some binary data on Celestia. And let me do a real time example of posting this. Nice notebook. Yep. So I have scanned this, this thing, but as we might notice, it's pretty, pretty big in size.
00:02:37.748 - 00:03:06.110, Speaker A: It's like almost 1 on Celestia. There is like a limit for block size. It's 1.8 megabytes. So we'll initially do it a little bit smaller. So it will cost us smaller amount of money. So let's do sips and make it a little bit less in size.
00:03:06.110 - 00:03:21.310, Speaker A: So now it's 5.2. You might see that. Now it's smaller. Yeah. And. Okay, not here. Yeah.
00:03:21.310 - 00:04:17.990, Speaker A: And through selenium, you can post blobs directly by connecting your wallet and using submit blob function. Here, you should select namespace. And all blobs are associated with specific namespace. It was designed so you could search your blobs faster and to identify where in which block your blob is located. So let's put a namespace like current date in reverse order and add some data to it. Click, continue. Oh, looks like, yeah, when you do it in the full screen mode, it looks a little bit stitchy.
00:04:17.990 - 00:05:05.158, Speaker A: Yeah. So now we are submitting blob. Yeah, now it's successfully submitted and we can see transaction that for this submission you can see this is the page of transaction. You can see all messages that were related with this transaction. All events you can see also like this event in raw format. It's like it's easier to debug data and look at the, look at it in JSON format. And at the bottom of this page you can see blobs table with this particular transaction you can notice that there is only one blob.
00:05:05.158 - 00:05:47.740, Speaker A: This is our blob that we have posted. And in selenium we have also added feature to preview all known mime types that you have posted in the blob. Let's look at it. Yeah. And now you can see that this picture of this node is on chain. And you can also open a dedicated page for blob. With this beautiful hex viewer you can select, and you don't have to open your hex viewer anymore to validate what exactly was posted on Blob.
00:05:47.740 - 00:06:36.990, Speaker A: Right now it's more for fun and to maybe track some specific headers in the blobs. Maybe you want to analyze what kind of compression different robes utilizing and also you can use different character sets. It may be helpful if, if your roll up utilize some specific compression algorithm. And so it will be more readable for you to track what exactly is going on. And also you can see Blob metadata data. You can download all blobs. And again you can see the image that was posted.
00:06:36.990 - 00:07:26.520, Speaker A: And more than that, selenium we use a specific way of storing all blobs. So it's like it's much more cheaper, it's much more efficient for search than to get this data from real node. And you don't have to run full node to access this data. And so by using our API, you can receive all historical data, all historical blobs. And no matter what happened with like you know, printing and other stuff. So that was the submission of blob. And let's also see how this blob is located in blog.
00:07:26.520 - 00:08:51.166, Speaker A: We can go to the blog page and we can see that there were two transactions with pay for blobs message. And by clicking in the top right corner ods you can see original data square. So by this view you can see how exactly bytes were located in block. And it might be useful if you are a core developer and if you are thinking of how you can optimize your data submission, how you can optimize your algorithms. Because as we know Celestia uses it extends shared commitments to the size that will be equal to the power of two. And in that case, if you post for example 17 kb, then you'll need to pay for like 32. So by using that tool, you can visually see how, where you can do better, where you can perform better, and like you can cover and see in which exactly namespace was utilized by specific part of block.
00:08:51.166 - 00:09:18.900, Speaker A: Also here's like system namespaces like pay for blob and tail padding. Like this is like zeros. Yep. Okay. And more than that you can go like through different blocks. And more fun is to analyze how. Let's go like this.
00:09:18.900 - 00:10:24.442, Speaker A: Yeah, more fun it will be to see how exactly blocks are utilized on Mainnet because there's a lot of more data. And here we see that also all of these namespaces, there's also huge amount. Part of block is utilized by transactions. And from here you can go to any specific namespace that you would like to inspect by clicking on that particular namespace. In Celestia, as I have already mentioned, all blobs are published with the relation to specific namespace. And you can track any namespace. On selenium you can track all namespaces on the namespaces page.
00:10:24.442 - 00:11:39.084, Speaker A: And if you want to track which namespace is right now is most popular is like, maybe it is not still known namespace, but you can see that the amount of data is growing in this particular namespace. So to do this, you can see like the sizes in this list, or you can open treemap view and see all namespaces in treemap with the ability to select top five, top 15, top 30 namespaces. And as you can see, these namespace is like the number one from data point of view. You can go here and see that this namespace, it is now like in Selenium we know that this namespace is utilized by rollup orderly. We'll get back to order in a couple of minutes. But as you can see, this namespace doesn't have a name. And for example, you want to, you want to track this namespace, you want to return to it in a couple of days.
00:11:39.084 - 00:12:47.088, Speaker A: Or maybe there is specific transactions that you want to save and to share it with. For example, you can track transactions that delegate tier and return to it and save it somewhere. So on Selenium we have that feature of bookmarking any entity that you see like the basic entities, not all entity, it's not a great use case. And you can add name like for example orderly namespace, we can save it. And now you can see that in Ui you will see everywhere where you see previously the hash or id of namespace. Now you will be able to see the alias that you have just created. Also you would be able to see the list of all bookmarks that you have already saved.
00:12:47.088 - 00:13:45.880, Speaker A: And let's go to namespace list now. Yep, now you can see that namespace id is everywhere. It is like the original id, but orderly namespace is replaced with its ls. And so by that you can do like even more add even more transparency to how you read data on selenium. Okay, and I know that there are also a lot of validators and you can use to track your stats, to track your performance on Celestia by using validators page, you can also compare yourself with other validators. And if you interested in specific validator, in performance of specific validator. For example, let's go to Kepler validator page.
00:13:45.880 - 00:14:45.082, Speaker A: And on this page you can see like all basic information about this validator. You can see all delegations that were performed by this validator. And you can see all proposed blocks that related to this validator and statistics about when he was like jailed and were there any problems with his performance. Also you can see the validator uptime right now. You can see that was his adding signature per block successful for each block. And as you can see, the Kepler is performing very well. And after viewing all these details, I came up with the idea to delegate some tier tokens to this validator.
00:14:45.082 - 00:15:27.930, Speaker A: So again I can connect my wallet and I can click delegate button on the top right corner of this page. So, and I'm gonna delegate some amount of tokens the transaction is sending. Yep, delegation was successful. We can see this transaction. Yep, the type of message is delegate. And you can see that everything works as it should be. Great.
00:15:27.930 - 00:16:32.510, Speaker A: Also you can track blocks all transactions, but it's like more like specific atomic details of selenium. You as a developer or like analytics maybe might be more interested in looking at blobs graph. By this widget you can see all blobs that were posted on specific date. You can see it is like a GitHub like widget and by clicking each block it is like one day of a wait. And you can click it for today for example. And you will see all transactions filtered by the type of message by this link, the transactions will be filtered by type of message. Pay for blobs and you can add specific date range on which you want to track and work with which transactions you would like to.
00:16:32.510 - 00:17:35.994, Speaker A: So this is like basic instruments, but if you're a roll up developer, how exactly you're gonna use selenium? For example, we have just submitted blob, but we have used Kepler and selenium feature. But if you are a roll up developer, you need to do it with some kind of program like a roll up or roll kit or any other framework. Let's see how you can do it with a simple demo script. So if you are a roll up developer, to post data you need to run a light node or a full node. It is like it depends on your context and your purposes and just type. Light node will work with Arabic. You need to install and compile celestial node.
00:17:35.994 - 00:18:23.700, Speaker A: I did it previously and for the start you're going to init node and choose replica. Yep, it's good. Now you're going to start node and we're going to use one of the comments before. Yeah, because like here you should select the RPC for RPC for full consensus node. And this is validator one celestial Arabic eleven.com and I'm choosing Arabic as a network. Let's go.
00:18:23.700 - 00:19:06.560, Speaker A: Good. Almost good. Yep, now everything works great. Our light node has started and after that you need to get the authorization tokenization. You can do it by running comments listed auth admin and also selecting the network that we would like to operate. And here's our. Oh no.
00:19:06.560 - 00:20:20.428, Speaker A: Okay yeah, here's our token. And after that you're gonna add some kind of logic like imagine that you're a roll of developer. You have like this all code that executes the contracts like implements the virtual machine and you have the part that submits blobs to Celestia. In that case you'll have something like this is a simple script in Python where I have already pasted the auth token commitment of our blog namespace in which we will post our data. We read the block from prepared file with some bunch of binary data and after that we specify URL for light node and prepare the header and request for our light node. In this request we specify the namespace data. It is our blog share version.
00:20:20.428 - 00:21:02.586, Speaker A: It is like the constant zero and still and will remain and commitment of this blog. After that we will display everything and send requests with the post method to this URL with this data. Okay, let's, let's do it. Great. Also we have specified the gas limit that we 0.1 with our request. Great.
00:21:02.586 - 00:21:57.170, Speaker A: We have the result and we see that our block, our blog was posted in this blog with the id 146-1755 now, let's go to selenium. But on Arabica network and also on selenium, we have common center. And almost everything in our UI, you can do with only utilizing your keyboard. You can call it by clicking command k. And let's open block 146-1755. Yeah. Internet connection today is pretty lazy.
00:21:57.170 - 00:22:25.020, Speaker A: Yeah. Close the door and becomes bad. Okay. Yesterday, it was much more faster. Yeah. It's like more people maybe. Yeah.
00:22:25.020 - 00:22:58.430, Speaker A: Yeah. Okay, let's. I think it's still. Still. Yeah, let's go. Yep. Now.
00:22:58.430 - 00:23:12.370, Speaker A: It's great. Thank you. It's like physical world. Yeah. Like always. Sometimes create problems with blob transmission. Yeah.
00:23:12.370 - 00:23:34.270, Speaker A: Okay. And we see that this block. We can see that our. Yeah, this is our blob. That. That's where exactly it is posted in this blog. And we can see our blob.
00:23:34.270 - 00:24:32.902, Speaker A: But imagine that you. If you running a roll up, and even if you have some kind of optimizations when you post blogs only when there were some kind of interactions on the network and you have transactions to include in blog. But still, you will almost post something to Celestia continuously. And let's update this script a little bit to make it more. Make it look more like a real roll up. Import time. And let's add, for example, we have a block time equal 10 seconds for block with our roll up.
00:24:32.902 - 00:25:39.276, Speaker A: And while one will do some kind of infinite loop, we'll do posting blob two into this loop and add some sleeping time. Slip and block time. Cool. Now we can run our roll up part of our roll up that will publish sequence of blocks into ten. Here we go. We can see that in block 146-1778 weight, there was new blob. Here we see it.
00:25:39.276 - 00:25:57.406, Speaker A: Great. Yep. Now it's new block. And you can go to this block and check it whether this blob was posted or not. But it's really uncomfortable. Yeah. You should always track these commitments.
00:25:57.406 - 00:26:45.964, Speaker A: You should always track the block, the height where it was posted. And in that case, if you want to have all your blogs, all your blobs in one place, and see stats on how you perform, on how much fees have you paid. We have introduced the roll ups page. And on Arabica, there is only one rollup registered. It is like a roll up for this workshop called MS Three Workshop. And on this page, you can see all blobs that were published to this specific rollup. You can identify rollup only by the namespace and by the account that posts the data.
00:26:45.964 - 00:27:59.498, Speaker A: And as you can see, the last 24 hours is pretty we see pretty aggressive like race of activity of this roll up. You can see it for the last seven days and last 31 days, but this roll up was registered a couple days before. And you can also export all data or register new roll up if you have developed new rollup on Celestia. So it's like simple Google Doc page. So and I believe that's it regarding crawl ops regarding like basic interaction with Celestia through selenium. Also you can track such things as guesthouse tracker like price for gas, like Heatman for gas. You can track also if you will run your roll up on and it lays Ethereum arbitrary one or base network as a settlement layer.
00:27:59.498 - 00:29:38.780, Speaker A: You can also track all data on blobstream dedicated page. But it's like it's the question of next demo. Yeah, so that's basically it. Do you have any questions about how selenium works and how to interact with celestia through selenium? Who are main selenium users? Who are main selenium users? Ah, who are main selenium users? Good question. It's like right now selenium first of all, selenium is a dev development rendered. Firstly and most of the time we have requests from analytics from developers who create, who build roll ups from rollup as a service providers and they are like they have really great insights on how rollup performs and what exactly roll up developers need. And also there is a lot of guys who want to track their accounts who want to track what exactly going on with tier transfers, with delegation and, and we also noticed that there were a lot of requests from validators about how we can do our validators page better.
00:29:38.780 - 00:29:57.550, Speaker A: Firstly, we were focused on developer experience and now we cover all other fields of how you can utilize selenium to make it even more insightful from the like general Cosmos side of view. Yeah.
00:30:11.210 - 00:30:19.470, Speaker B: Blocks a pretty indexer that is going to be indexing all these things and you're exposing my new page.
00:30:21.100 - 00:30:27.532, Speaker A: Yeah, we, the question is about like how we index all this information should.
00:30:27.556 - 00:30:31.548, Speaker B: Be present in probably a full node or litecode, right? So from that, how do you convert.
00:30:31.604 - 00:30:32.332, Speaker A: It into this one?
00:30:32.356 - 00:30:37.412, Speaker B: Do you like have an index and then you have it as a separate DB and expose by IP or like.
00:30:37.556 - 00:31:13.640, Speaker A: Yep, yep. We have like we have several components. Like first of all it is. Yeah. Indexer that basically track all things that's going on through consensus node. We have also worked with, we had integration with data availability layer node, Dell node. But after some trips and tricks we could manage ourselves to decrease.
00:31:13.640 - 00:32:33.902, Speaker A: Eliminate this dependency with getting all information from consensus node and beside indexer we have of course database where we store all information. But still we do not store blobs in database. It doesn't make sense. So we store database like with also tips, like some tricky way to make it more cheap, more fast and so we could search for blobs. And for example, if you're a roll up developer and you need your blobs, it will require you a lot more work to do if you'll do it through their node. But if you use our API then it will be much more faster and easier and you won't need to store some additional information on your side. It's like you'll need only one thing to do it, like your roll of name and without any commitment like crypto stuff.
00:32:33.902 - 00:33:18.230, Speaker A: So it will be much more easier. And of course here we have API and it's like different services for different networks and front end of course. Yeah, it's like the basic components. Yeah, yeah. Any more questions? I think we have talked with everyone before, so it's like maybe I have already told everything near the booth. Thank you.
