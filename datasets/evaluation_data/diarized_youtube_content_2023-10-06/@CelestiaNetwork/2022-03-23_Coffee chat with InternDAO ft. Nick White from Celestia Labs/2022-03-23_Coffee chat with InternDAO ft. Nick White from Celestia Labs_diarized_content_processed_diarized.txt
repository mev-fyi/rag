00:00:07.850 - 00:00:13.322, Speaker A: Thanks, everyone, for joining the fourth installment of our interndao interview series, a little bit about ourselves.
00:00:13.386 - 00:00:13.614, Speaker B: Right?
00:00:13.652 - 00:00:39.910, Speaker A: Interndao is a research Dao, and our mission, ultimately, is to have fun, share alpha, and build a decentralized future with friends. So we're pleased to be hosting Nick White from the Celestia team today. And with modularity and modular blockchains being pretty hot topic as of recent, we're excited to be able to chat with Nick and learn more about Celestia, the first modular data availability layer. And we also have Hyperion from Interndao, who will also be co hosting.
00:00:42.330 - 00:00:43.080, Speaker B: Cool.
00:00:43.870 - 00:00:58.110, Speaker C: Yeah. Thank you, everyone, for joining. Nick, do you want to go ahead and start with a quick background about yourself? Give a quick intro. When did you get into space? When did you meet Mustaf and the other guys on the team? And when did you, frankly, decide to focus on Celestia?
00:00:59.090 - 00:01:34.214, Speaker B: Sure. Happy to. So, yeah, I'm Nick. I got into crypto in 2018. I co founded another blockchain protocol called Harmony, which is a proof of stake and sharding blockchain, and then did that until late 2020 when I read the lazy Ledger white paper. And for those of you who are really in the know, you know that Celestia's original name was Lazy Ledger. And basically, when I read the white paper, it just completely blew me away, and I realized that it was the future of blockchain infrastructure.
00:01:34.214 - 00:02:43.502, Speaker B: So I left Harmony and joined the Celestia Labs team full time as COO, and the rest is history. So Celestia is the first modular blockchain network. And the key insight of Celestia is that unlike monolithic blockchains, which is pretty much every blockchain that's been built so far, we separate consensus from execution. And what that means is that consensus is the process by which blockchains add new blocks to the chain, so everyone agrees on what the new transactions are, and execution is where you determine what is the actual output or the validity of those transactions. And if you separate those two things, you're able to have a more scalable system that is more decentralized, more secure, more flexible for developers, and also solves key problems and interoperability. So it enables a true multi chain future. So that's like a really high level, but I'm happy to sort of dig into.
00:02:43.502 - 00:02:46.910, Speaker B: I don't know, more about my story or more about Celestia.
00:02:47.410 - 00:03:00.200, Speaker C: Yeah, absolutely. So, kind of going back to one of the facts that you stated as a co founder of Harmony, how do you think your background and experiences have helped shape the direction that celestia is going towards?
00:03:00.890 - 00:04:13.438, Speaker B: That's a really good question. So I originally was actually an electrical engineer, and I studied signal processing, which is sort of like machine learning and like neural networks. And so when I fell into. When I got really interested in the blockchains, I was lucky, because a lot of what I learned in electrical engineering kind of translated over. And so it was very easy for me to pick up a lot of the sort of concepts behind cryptography, and a lot of new concepts too, like consensus algorithms and networking and all that kind of stuff. But basically, the way that harmony kind of informs my perspective on Celestia is that back, if you rewind the clock to 2017 and 2018, everyone at that time, there had been a lot of hype around plasma, which is like layer twos, essentially, but people kind of realized that they all run into this problem, like the data availability problem, although I don't know if people were necessarily calling it that yet. And so there was kind of people l two sort of fell out of favor to some degree, I would say.
00:04:13.438 - 00:05:34.230, Speaker B: And people were instead talking about sharding, which is basically how you parallelize blockchain execution, by running multiple blockchains in parallel, but that share sort of like a common sort of security framework. And so that was, at the time, the best answer that people had for scaling blockchains in a way that still the chain would remain decentralized. But there are actually a lot of drawbacks to sharding. So the first of them is that it's just a very complicated system to build. And even though, for example, harmony is on main net, a lot of the things like even just getting cross shard transactions to work effectively is actually a pretty difficult problem. It has a lot of similar sort of challenges to just like interoperability for blockchain, sort of like IBC. The other thing is, it's very complex from the perspective that you have to rotate validators, and you need some sort of randomness to do this in a secure way, and the validators can be corrupted if there's sort of like a more advanced adversary.
00:05:34.230 - 00:06:21.590, Speaker B: A lot of the security assumptions of sharding just are a little bit dubious. And the amount of complexity in the system just makes it feel to me, I always felt like it was a little bit shaky. It was always on shaky ground, I would say. But it was the best approach that people had come up with up to that point. And so I was very committed to that, because that was, to me, the only answer to scaling blockchains. In a decentralized way. That was until, I guess, I learned about Celestia and I realized that Celestia essentially has a lot of the benefits of sharding, and then some, and then some more new ones that make it even better, while actually being more simple and elegant of a solution.
00:06:21.590 - 00:07:05.800, Speaker B: And for that reason, also being more secure, I kind of had to go through that whole journey of building a starter blockchain and understanding blockchain scaling from that angle to really realize why a solution like celestial was necessary and was the future. Because back in that time, I think a lot of people are waking up to this whole narrative of modular blockchains. But back in 2020, when I first read the lazy ledger white paper, I don't think it wouldn't have been that obvious to the average person. You had to be very deep in sort of the research and actual implementations of these systems. Got it.
00:07:06.410 - 00:07:27.820, Speaker C: There's many other appealing solutions today, right? Ethereum down the line is going for 2.0 with same sharding. Avalanche has subnets, Polygon avail, I guess. How would you compare celestial, both current as well as upcoming scaling solutions? And are there any trade offs in celestial design?
00:07:28.590 - 00:08:20.310, Speaker B: Yeah, that's a really good question. So I think I would break those into two different categories, actually. I would say high level. There's like a few broad categories of scaling solutions out there right now, and I'll kind of explain where I see Celestia fitting within that. So the first and probably the easiest are just like the typical monolithic chains. So chains like Solana, for example, who, their approach to scaling is essentially that they just increase the node requirements. So for those of you listening in, every blockchain basically makes an implicit social contract with all the participants that says, this is the sort of minimum resources that you need to run a full node.
00:08:20.310 - 00:09:00.542, Speaker B: And to me, running a full node is like basically how you can participate in the chain as a first class citizen. Because you get to verify everything yourself. You don't have to delegate your trust to someone else. So the reason why most blockchains don't increase node requirements is because that necessarily reduces the number of people who can be first class citizens. Therefore, it centralizes the network. Like Solana is one chain where they've made the explicit decision to basically, in my mind, centralize as a way to scale. And that's fine, that's their choice.
00:09:00.542 - 00:09:59.210, Speaker B: And I think we'll see how those decisions play out long term. Then I would say there's sort of a different group. And I put avalanche in this group where avalanche does have an interesting consensus algorithm. Consensus, however, in my opinion, is not the bottleneck to scaling, but the interesting thing about what avalanche and ecosystems like cosmos are doing is that they are building out toolkits to make it very easy for people to build new blockchains and connect those blockchains together. So that would be like Pendermint and the Cosmos SDK and IBC. It's sort of like this software toolkit that enables people, rather than trying to scale one single blockchain, one single thread, one single execution space, they make it possible to build separate blockchains side by side and connect them together. So that is one other sort of major category.
00:09:59.210 - 00:11:14.020, Speaker B: And then I would say the last one, which is very different, is sort of the more modular approach in which you and I would put celestia in this category. I would put Ethereum also with Dank sharding in this category, and also Polygon avail, where we are building a very scalable and simple layer, one that only does data availability and consensus. And then people deploy, rather than deploying separate chains with separate consensus networks and separate sort of like security, we enable people to deploy roll ups on top of this sort of like shared security based network, this data availability network. And that's, I think, to me, like a much more optimal long term, a more optimal sort of scaling approach for a lot of different reasons. And then I'm also happy to unpack, how does celestia differentiate from avil and dank charting too, if you guys are interested?
00:11:14.870 - 00:11:46.910, Speaker C: Yeah, that's a really good kind of summary and categorization of the current solution as well as upcoming ones. Can you explain how, essentially, our data availability works in the context of roll ups? If a roll up posts data, what does it entail to validate reading that state? There's invalid data. Let's say a role can simply ignore what is there to prevent someone from invalid data, which ultimately would cause state role.
00:11:48.530 - 00:11:56.260, Speaker B: Yeah, you kind of cut in and out, but I think your question is about actually, could you repeat the question a little bit? Yeah, definitely.
00:11:56.870 - 00:11:58.370, Speaker C: Is this better, by the way?
00:11:58.520 - 00:11:59.794, Speaker B: Yeah. Okay.
00:11:59.912 - 00:12:20.470, Speaker C: Yeah. Can you explain how data availability works in the context of roll ups? So let's say a roll up post data, what does it entail to validate when reading that state? And if there's any invalid data, which the roll up can simply ignore, what does celestial provide in order to prevent someone from spamming with invalid data, causing state bloat?
00:12:22.110 - 00:13:02.018, Speaker B: Yeah. So one important thing to notice, or to note here, is that one of the problems that celestia solves in its design is exactly state float. So, in a monolithic chain, every new application has to have its own state that gets recorded on layer one. And so all the full nodes of that monolithic chain need to carry that state. Right. So then the more users, the more applications, the bigger that state gets. And that becomes problematic because it requires bigger and bigger resources to run a node for that chain.
00:13:02.018 - 00:14:15.934, Speaker B: So what celestia does when you separate consensus and execution, it means that celestia itself, as the layer one, doesn't actually know anything about the applications that are running on top of it. So none of the celestia nodes have to carry around the state for any of the roll ups or applications running on top of celestia. So there is no such thing. The only state that celestia as a layer one has is basically the information of who has what balance and who is staking what basically validator set state. So celestia is actually very similar, in a sense, to bitcoin. The functionality of bitcoin is extremely limited, and therefore, you don't have a lot of these problems that you encounter in sort of chains like ethereum or solana. It's very limited on purpose because that limitation actually makes it more elegant and makes it more modular and composable for the applications want to build on top.
00:14:15.934 - 00:14:22.506, Speaker B: So I don't know if I can get to your spam question, if that's still of interest.
00:14:22.628 - 00:14:25.300, Speaker C: Yeah, definitely, if you can address that.
00:14:26.550 - 00:15:28.338, Speaker B: Yeah. So one of the interesting things about a paradigm where you use a data availability layer to actually sort of create your own blockchain is that in a typical chain, there is a cost associated with proposing a new block. Let me back up a little bit. If anyone can post data to celestia, it is a completely permissionless protocol. So as long as you pay the fee associated fee, then you are allowed to post any data you want to celestia. So that's awesome, because if I'm building a roll up, I'm a roll up operator, rather than having to have my own consensus network where I have to stake tokens to propose a block. Or let's say I'm doing proof of work, I need to do proof of work mining in order to have the right to post a block.
00:15:28.338 - 00:16:43.566, Speaker B: I don't need that anymore. I can just post blocks and pay a small fee, and then Celestia takes care of the consensus and data availability part for me. So that's like the whole value proposition of celestia, but where that can be problematic is the fact u in traditional blockchains, the fact that it's costly to propose a new block is a good thing because either, let's say it's proof of stake, if I propose a block that's invalid, I will get slashed. Right? And so obviously I don't want to do that because I don't want to lose money or in proof of work, it's like, well, I could propose an invalid block, but I'd have to burn a lot of energy to do that. And so why would I waste my time if that block is just going to be rejected? So in celestia, the thing is that anyone can, in theory, post data there and be trying to propose a new block for a roll up, for a given roll up. And so that does open up the possibility for people spamming roll ups on celestia, build within a given namespace. It's sort of like an address for that roll up.
00:16:43.566 - 00:17:38.126, Speaker B: So if I wanted to sort of mess around with a particular application, I would just spam that namespace and say, hey, I'm posting new blocks. And essentially the people who are using that roll up would have to find some way of rejecting all those invalid blocks or invalid transactions. Fortunately, there's actually quite a few different schemes that you can use to sort of avoid that situation. So you can have leader selection. The roll up itself can have its own form of proof of stake, essentially, where any block that is not coming from an address that is sort of like part of this sort of round robin leader selection, you just ignore off the bat. There's like a myriad of different solutions. But you are right that Celestia is slightly different in that sense.
00:17:38.308 - 00:18:03.320, Speaker C: Got it. Oh, thank you. So just kind of shifting back a bit more to what you're speaking about in terms of state flow, celestial address. State flow, like validators, aren't required to hold the entire state of the chain. And so can you actually kind of touch upon how data availability sampling works?
00:18:04.810 - 00:18:51.190, Speaker B: Sure. Yeah. So I think it's important for everyone who's listening to understand what data availability is because it's a very poorly named concept that I think leads to a lot of confusion. And I remember first learning or hearing of the word data availability maybe in 2019, and it took me a long time to get around to actually reading about it and learning what it meant. But until that, I was like, oh, well, I don't know, data availability is probably just something to do with, I don't know, data being stored or something. It seemed very vague. So it's important, I think, for people to understand.
00:18:51.190 - 00:20:23.406, Speaker B: So data availability is best thought of as a solution or a protection against a very specific kind of attack that block producers can enact. And that is a data withholding attack. So a data withholding attack is where a block producer tries to convince clients in the network that, hey, it mines a new block, it proposes a new block, and it says, hey, just trust me, the new state of the chain is valid. Don't look at the transaction data that I used to generate this new state. Just trust me that it's true. Right? And the problem with that is basically that the block producer can essentially, we're used to things like people talk a lot about double spending attacks and things like that in blockchains, but really the most nefarious kind of attacks you can do are just straight up state transition violations where, for example, every blockchain has rules like, oh, well, I can only spend this bitcoin if I signed it with my private key, right? But if a block producer does something like a data holding attack, they're able to basically break all the rules of the chain. So they can just spend coins that aren't theirs.
00:20:23.406 - 00:21:31.830, Speaker B: They can mint coins out of thin air, they can literally do anything that they want. So that brings us to data availability. In order to prevent this kind of attack, you need to make sure that all the transaction data behind a given block is published to the network so that everyone can see it and verify that it's valid, that there's no funny business going on, essentially. And so that's what the property of data availability is. So the naive solution to data availability, like to protect against data withholding, is to have every full node in the network download the entire block, right? And so how do you make sure all the transactions data is there? You download all of it, and then you make sure that it all checks out. The thing is that that doesn't scale, because essentially what that means is that every time you want to increase the block size, you have to also increase the bandwidth of all the nodes in the network. They all have to be able to download.
00:21:31.830 - 00:22:43.940, Speaker B: Let's say it's a 1 mb block. If you want to make it ten megabytes to scale the block size by ten times, all of a sudden all the nodes need to have ten times the number of resources, right? So this clearly doesn't scale. And that's where this concept of data availability, and by the way, that's how every current monolithic chain works. And that's partly why they're not scalable. So that's where this very clever scheme that Mustafa, our co founder and Vitalik, they devised this scheme that's described in the paper, fraud and data availability proofs. Anyone is really interested to get deep on this topic, I suggest that they read that white paper. But this scheme essentially describes a way that you can, among a group of nodes, like lesser resource nodes, you can all sample block data and then collectively basically ensure that all the data is available.
00:22:43.940 - 00:24:02.810, Speaker B: You take the block data and you use eraser coding, which creates redundancy, and it makes it such that a node in the network doesn't have to download the full block to know that the full block is available. And what's even better than that is that the amount of data that you need to sample to make sure that a given block is available only scales as the square root of the size of the block. So if we go back to our original example, let's say we had a 1 mb block, and then we wanted to scale that to, let's say like a 64 megabyte block. You would only need to increase the node resources by eight times to get a 64 x increase. Does that make sense? You are able to scale the throughput of the network in a way that actually doesn't increase linearly the node requirements. So it becomes a very scalable system. Got it.
00:24:02.810 - 00:24:05.642, Speaker B: So we know that in many other.
00:24:05.696 - 00:24:28.340, Speaker C: Chains, people who want to run, let's say, just not necessarily validate, but also want to have some view of the state run white clients, right? In the case of celestia, if you can run a node without having downloaded all the data, what use cases do you actually see for people running white clients? If there is any?
00:24:29.350 - 00:25:32.130, Speaker B: Yeah, so the original name of the project was lazy Ledger. Right? And the reason for that name is that Celestia is a very lazy blockchain. And the reason for that is it doesn't do any transaction execution on the layer one. So just does consensus and data availability. And so for that reason also, there isn't really much inherent utility on the layer one itself. Celestia assumes that people will build roll ups and layer two systems on top that leverage the sort of utility of consensus and data availability to do more interesting things like all the applications that we know and love, like Defi and NFTs and Daos and all of. And to get to your point about light clients.
00:25:32.130 - 00:26:15.940, Speaker B: So what is the function of a light client? Or why would I run a celestia node if it doesn't do anything? The reason that you run a Celestia light client is that now, if you're using a roll up or an application that's built on layer two on top of celestia, then in order for you to verify basically the roll up that you're using to make sure that everything is legit, you also need to be verifying the data availability of the celestia main chain at the same time. And so you would be running anyone who is. So essentially, if you're a client of any roll up on celestia, you are also a client of the celestia main chain, if that makes.
00:26:18.330 - 00:26:44.160, Speaker C: Definitely. And then kind of building off that. We also saw kind of Mustafa fleet a while back, several weeks ago where he was actually running light node on his Android. Can you envision a world where the entire sampling and just validating process is done entirely on a whole network of mobile phones? Is that possible, or is that just kind of an outlier edge case?
00:26:45.170 - 00:27:51.774, Speaker B: Well, that's a very good question. I think that the way that we see it is that it'll be kind of a pretty heterogeneous network in the sense that there's going to be lots of different sort of tiers of nodes. So what's really important though, is that what we believe is the most important thing for decentralization. Also, the way that we define scalability is end user verification. Right? So blockchains are all of. There are these trust machines, right? So the whole point of a blockchain is that I can verify that everything is behaving as it should myself directly, right? If I can't, then that means by necessity, then I'm delegating trust to some third party who's telling me like, oh, all of this is legit, you can trust it, but the whole point of a blockchain is to eliminate that trust. Minimization really is the goal.
00:27:51.774 - 00:29:22.854, Speaker B: Right? So that's why having the ability for people to run a full node on their smartphone is such an important design, I think, outcome, because everyone has a smartphone. Not everyone can run a Solana validator, right? They don't have the hardware or the know how. And that's also why, for example, Ethereum, they target a full node for a laptop, because that's sort of like most people have a laptop and they would be able to run a full node of Ethereum on their laptop. So anyway, that's kind of a long winded way of saying that having the ability for people to run full nodes on their smartphones is important. But long term, there's no way that we're going to be able to build a network that is ultra scalable if the only kind of hardware that we can use is a smartphone. And so that's why one of the beautiful parts about celestial design is that we can actually have very high resourced block producing nodes, and we expect that, and we need that, actually. So when the people who are proposing blocks and constructing blocks, like the block builders, are going to have to have very high resources as we get into bigger block sizes.
00:29:22.854 - 00:31:05.870, Speaker B: And whereas in Solana, that's a problem because by having really high resource nodes be the ones who are building blocks also in Solana's case, the way that it's designed, everyone has to have the same level of resources as the block builders to verify what's happening in Celestia, the block builders can have really high resources and be proposing massive blocks, but the end users can still verify that everything is happening and is legit using a smartphone. So anyway, I guess what I'm trying to say is, and there's going to be a full spectrum, right? People are going to be able to run the equivalent of a full node on their smartphone, but there's also going to be really high resource nodes and there's going to be everything in between. And the beauty of Celestia is that you can also run a node that is just dialed into whatever sort of capacity you can bring to the network. So let's say rather than a smartphone, you have a laptop, you can also run a node on your laptop and actually contribute more security and scalability to the network that way, by contributing more resources than just a smartphone. So that's kind of the way that we see the network participating. It's sort of similar to Bittorrent, right? There's some people who are really hardcore with BitTorrent and they seed, I don't know, maybe like terabytes of files or whatever, and then there's people who don't really, but they have a little laptop and they just seed what they can. It's like everyone kind of contributes what they're capable of contributing.
00:31:05.870 - 00:31:08.260, Speaker B: Got it. Cool.
00:31:09.270 - 00:31:36.860, Speaker C: And kind of shifting over a bit to more on the composability side, something that was actually spoken about in previous Twitter spaces with, I believe it was Mustafa, is that selection offers shared security, but would have actually limited composability across roll ups when it comes to atomic transactions. So if I have different applications on different shards, essentially, currently.
00:31:38.750 - 00:31:39.386, Speaker B: Is this just.
00:31:39.408 - 00:31:50.670, Speaker C: A technical limitation today, not being able to transact atomically across essentially different roll ups? Or can you see a future where transactions can be executed atomically?
00:31:52.130 - 00:33:04.360, Speaker B: That's a good question. I tend to believe that atomic cross chain transactions are probably not possible because the transaction needs to be executed on one chain, and then the fact that it was executed needs to be relayed to another chain, and then the other chain needs to react to that. Let's say something happens on the previous chain that forces that makes that transaction that they thought was finalized, no longer finalized or no longer valid, whatever ever. You have to sort of roll back everything. I would wager a bet that atomicity for cross chain transactions is not maybe technically possible. The thing is that I think that's not the worst outcome, and I think we're going to get pretty good ux despite that, and even developer experience despite that. And that's where a lot of these bridging projects come into play.
00:33:04.360 - 00:34:40.134, Speaker B: And even if you've been using people out there, using Cosmos IBC, it's a very smooth experience. And it's not that think. And the cool thing is that the way that I see Celestia's ecosystem sort of growing up is that there will probably be roll ups dedicated to DeFi or NFTs or different kind of application verticals where composability between those applications is very important and those applications will live within the same execution space. But if there's an application that doesn't need to, it can live on its own sovereign, separate execution space with its own sort of fee model and be isolated. And I think there's just going to be this big sort of spectrum of design trade offs where it's like, well, how badly do I need composability? Do I need it this badly? Okay, then I'm definitely going to build the same chain or the same roll up as these little applications or I really don't need it that bad. So I'm fine with being on a separate roll up and just having cross chain communication to facilitate whatever it is I need to do. So I think obviously, if we could have everything live, if it were possible, if the vision of a world computer were possible and were scalable, then I wouldn't see very many drawbacks to that, except for the fact that everyone had to live on the same execution environment, like everyone had to live within the EVM, let's say.
00:34:40.134 - 00:34:53.980, Speaker B: But aside from that, I think that this sort of outcome of a multi chain future that everyone's embracing is actually going to be just fine. Got it. Cool.
00:34:56.750 - 00:35:02.806, Speaker A: So Nick, would you classify celestia as a layer one or a layer know.
00:35:02.848 - 00:35:55.870, Speaker B: I actually think everyone needs to stop using terminology like layer one, layer two. Also, the term layer zero makes no sense. I don't even know. I mean, I've seen polka dot marketing putting that out there, and honestly, it's kind of a joke to me. What is a layer zero? I don't know what that even means. I think in some sense you could consider it as a layer zero in that it does less than a typical layer one. But basically what I would appeal to everyone to the terminology, I would appeal everyone to start using it is more like things like data availability layer or execution layer or settlement layer, like something, a word that is descriptive of what that layer is doing in the stack.
00:35:55.870 - 00:36:52.090, Speaker B: As we move into a modular blockchain world, that's really what's going to differentiate between different blockchains. It's like, oh, well, I'm a roll up, okay, I'm an execution layer. Oh, I'm a data availability layer, then that's sort of like the lane that you're in, right? And I think there's going to be a myriad of different approaches to solving and optimizing each one of these layers. So there's going to be a bunch of different approaches to data availability layers, there's going to be a bunch of different approaches to execution layers and settlement layers, and we're all going to sort of recompose and recombine all these different pieces. And I think basically layer one, layer zero, layer two is kind of like, it doesn't help in my mind to explain what's really going on underneath the hood.
00:36:52.250 - 00:37:05.620, Speaker A: Yeah, that makes a lot of sense. So Celestia being a first of its kind data and availability platform, what kind of application or blockchain do you see built on Celestia that wasn't previously possible?
00:37:07.510 - 00:38:32.782, Speaker B: Really good question. There are a few things that will say that's less enabled that previous blockchain designs do not. The first of them is this idea of flexibility, which I mentioned in the beginning. So if you kind of take a step back, this is more like modular paradigm as a whole, not just celestial, but if you think about what was so important about Ethereum, was that before Ethereum, if you wanted to try out a new decentralized application, you had to create a new blockchain. You couldn't just run Mastercoin on top of bitcoin, you had to actually create a whole new network. Right? So the beauty of Ethereum was that it created this general purpose blockchain on which any decentralized application could be run without having to launch a new consensus network. And we're reaping the fruits of that very fundamental sort of innovation in blockchain, even to this day.
00:38:32.782 - 00:40:02.110, Speaker B: Right? We wouldn't be where we are without that. Now, Celestia takes it a step like modular blockchains. Take it a step further in that in the monolithic paradigm, if you wanted to experiment with a new execution environment, you had to also create a new chain, right? So what I'm trying to say is, if I'm building on any given layer one, I am stuck within their execution framework, right? I'm stuck within the EVM, or I'm stuck within substrate or sea level or what have you, right? I don't have the ability as a developer to say, hey, actually, I want to try running in a different environment. It's like, oh, fuck. Well, in order to experiment with this new environment, I actually need to build an entirely new blockchain. So, in my mind, in the same way that the experimentation around the design space for decentralized applications was extremely limited before Ethereum, I think the experimentation in the design space around execution environments has been similarly limited because of the fact that everything has been built monolithic. And so what modular blockchains allow for is for people to build new kinds of execution environments, experiment with them, and deploy them rapidly and with very low costs and low repercussions.
00:40:02.110 - 00:40:16.660, Speaker B: So that's one of the use cases that I'm really excited about to see emerge on top of celestia. And there's like a few different teams already that are experimenting with this, which really excites me.
00:40:17.110 - 00:40:22.260, Speaker A: Can you explain some of these or share some of these examples of other chains that are experimenting with this?
00:40:23.030 - 00:41:26.950, Speaker B: Yeah, I don't want to leak any alpha, but basically there's one project, and these are all very early stage, by the way, but we have this idea for sovereign roll ups. So the concept of a roll up came out from the necessity to scale Ethereum and to scale, like, basically execution that was happening on a layer one and sort of offload some of that off chain. But fundamentally, if you think about what a roll up is, it is actually an independent blockchain. It's not just a scaling solution or band aid to help augment a layer one monolithic chain. It is actually a completely separate chain that just piggybacks off the consensus and data availability of another chain. So in our mind, roll ups can be completely sovereign. They're not baby chains.
00:41:26.950 - 00:42:52.850, Speaker B: But the thing is that most of the Ethereum roll ups that have been designed and built so far operate under the assumption that oh, well, we're just scaling Ethereum and we are sort of a baby chain to Ethereum and we have a built in bridge to Ethereum and we settle our state updates to the Ethereum main chain. But that comes with a lot of different drawbacks. One of them is that when you want to fork or upgrade, make changes to the roll up that you're operating, it actually requires coordination with the Ethereum main chain. And so you end up kind of being bound within the Ethereum community, the Ethereum social consensus and sort of the EVM as the base layer. And it kind of limits you, right? It forces you to sort of play within that sort of sandbox. And sovereign roll ups is essentially this idea that you can build a roll up that doesn't settle to any other chain that settles on the peer to peer network level. So rather than posting your fraud proofs or validity proofs to another execution layer or a settlement layer, you just post those proofs to the clients of the roll up directly.
00:42:52.850 - 00:43:19.100, Speaker B: And that basically frees you up to be like a standalone blockchain, but a standalone blockchain that doesn't have to run its own consensus. So that's one of the exciting projects, that there's a team that's still very early, but they're wanting to build the first sovereign roll ups on top of Celestia. That's one example.
00:43:19.550 - 00:43:44.210, Speaker A: Oh, that's interesting. Changing gears a little bit, John Adler at his East Denver talk stated, quote, celestiums take the best of the world, Celestia and Ethereum, and bring them together synergistically. A celestium is an Ethereum l two chain that uses celestia for data availability, but uses Ethereum for settlement and dispute resolution. So can you share more about celestium?
00:43:45.190 - 00:45:10.106, Speaker B: For sure. So first, I just want to give a shout out to Paulinea, who was the person who turned us onto this idea back in maybe November of last year or maybe even September. But essentially it's funny because originally we never had the idea to pursue an idea like Celestians, but basically with the, there's kind of two things that kind of emerged that made us realize that this is a real use case. So first of all, roll ups are a really promising scaling solution. But the thing is that even like roll ups right now, if they post all their data to Ethereum, it's very costly because gas on the Ethereum network is very expensive. And so what this means is that even though roll ups do scale Ethereum, they're still decently high transaction costs like, I don't know, maybe like a dollar for a transfer and a couple of dollars for a swap or something. With Ethereum sort of base layer still being limited in its current design, if demand for roll up usage increases, that also will affect all other roll ups and make it more expensive.
00:45:10.106 - 00:46:34.102, Speaker B: So we realized that actually there's kind of a need within the Ethereum roll up ecosystem for a cheap but secure solution for off chain data availability. So we are building a bridge from celestia to Ethereum that will allow roll ups on Ethereum to post their data to celestia rather than to the Ethereum base layer. So all of a sudden they can cut out all of the gas fees associated with posting their transaction data to Ethereum and still settle to the Ethereum blockchain. So basically there is a compromise on security in that the data availability is now being guaranteed by the celestia validators rather than the Ethereum base chain. But we think that that is a fine compromise for the additional scaling benefits. So yeah, I can go into more detail there, but basically celestium is a solution for scaling Ethereum roll ups. And I want to also say here that a lot of the team are very heavily sort of like aligned.
00:46:34.102 - 00:46:52.640, Speaker B: We're very aligned, I would say as a project and as a team with the Ethereum community overall. And we see Celestia as being very synergistic with Ethereum, and we would really love to support the Ethereum ecosystem to scale in this way.
00:46:54.630 - 00:47:06.230, Speaker A: Awesome, thanks. Do you have anyone from the Ethereum foundation that's working with Celestia at all, or is this a bit just with celestia being synergistic with Ethereum?
00:47:07.050 - 00:47:34.750, Speaker B: So we talk with them quite a bit, actually. So we share notes on things like data availability schemes and just general roadmap stuff. We met with them in Denver and Lisbon and all that, but I wouldn't say there's any direct collaboration between the teams on the celestials idea. Right now we're mostly collaborating with the Ethereum roll up teams.
00:47:36.130 - 00:47:46.034, Speaker A: Awesome. So we'll move into Q a pretty shortly here, but before we move to that, just wanted to ask Avi if you had any other points you wanted to speak on.
00:47:46.232 - 00:48:05.158, Speaker B: Avi, get in here, baby. Yo, yo. Honestly, you just keep asking amazing questions. I don't want to take away from your role. You've done such a good job. And Nick, as always, well articulated and making me more bullish on celestial, which.
00:48:05.164 - 00:48:07.560, Speaker C: I didn't think was even a possibility at this point.
00:48:08.750 - 00:49:41.990, Speaker B: Come on, man, you got to have at least one question. Yeah, honestly, I think you guys asked a lot of the good technical questions, so maybe I'll ask a little bit more of a qualitative question. But how do you expect to attract, what's your plan for attracting people to the actual ecosystem and getting people to build on it and building a good dev community while also building a good user community? That's a really good question. To some extent, I know how hard it is to build a developer community and just bootstrap an ecosystem partially from my time at harmony. And so I do feel like that is generally the hardest problem or the hardest thing to tackle when building a new layer. One, I would say first, one of the things that we really benefit from is actually like a first mover advantage, which is like, we're lucky that we're at least so far the first and kind of only modular blockchain in town. And so I think that has its own advantages and that all these new unique things that you can kind of only do with a modular blockchain design, I think they'll be experimented with first and we'll have kind of the ability to build the first sort of developer community around a lot of these applications.
00:49:41.990 - 00:51:31.034, Speaker B: And I've actually been pleasantly surprised with the number of talented teams who have been getting in touch with us who are interested in building stuff with us already, even though we're still so far out from Mainnet. But beyond that, we're not just stopping at building the core protocol itself, because frankly, even more so than the monolithic chain, the core protocol alone, without developers or without people, is completely useless, right? Like it's a lazy ledger that has no function other than the functionality that people build on top. And so we're very actively building out tooling to make it as easy as possible for developers to deploy new roll ups on top of celestia. So that's, for example, one example is the sevMos, which is a settlement layer that we're building that emulates, it basically emulates the same kind of architecture that people have come to expect for Ethereum based roll ups. So that will make it possible for people to, for example, take let's say arbitrum or Zksync or any of the Ethereum based roll ups and deploy them on celestia with basically as few modifications as possible. So it's kind of like EVM compatibility, which was like the big thing for monolithic layer ones, it's kind of the equivalent of that. But for roll ups, where it's like with sevmos we'll have EVM roll up compatibility, so to speak, but obviously it doesn't stop there.
00:51:31.034 - 00:52:17.762, Speaker B: So we also have optimate, which is going to be a tool that enables people to deploy Cosmos SDK based chains as roll ups on celestia. What I'm trying to say is we're building out a suite of different sort of software and tools that will make it as easy as possible for people to deploy different kinds of roll ups and execution environments. How to get users beyond that, I think is still TBD. It's probably a little bit early. I think there are definitely playbooks out there, like liquidity mining incentives and things like that, but it's way too early to really comment on that. Fair enough. Great answer, hyperion.
00:52:17.762 - 00:52:22.666, Speaker B: I don't know if you had anything on your end that you wanted to end with. Yeah, that's it for me.
00:52:22.688 - 00:52:28.154, Speaker C: So, I mean, let's actually go towards any speaker if you want to come up and ask any questions.
00:52:28.352 - 00:52:28.714, Speaker B: Yeah.
00:52:28.752 - 00:52:37.600, Speaker A: So for anyone in the audience, if you want to request to speak, you can do so. And then we'll go through a couple rounds of Q A.
00:52:38.450 - 00:52:39.680, Speaker B: Let's do it.
00:52:41.970 - 00:52:46.180, Speaker C: I know we actually had some before, but looks like they dropped out.
00:52:51.750 - 00:52:58.930, Speaker A: Well, Nick, looks like your responses and answers were so thorough that everyone now understands Celestia.
00:53:00.070 - 00:53:05.814, Speaker B: I highly doubt, really, really highly doubt that. Well, for those of us who are.
00:53:05.852 - 00:53:15.210, Speaker A: Too shy to ask questions, can you tell us where we can find out more about Celestia, where we can learn about updates and follow along with the development?
00:53:15.950 - 00:53:32.350, Speaker B: Yeah, for sure. So I would say the best place to go to learn more about Celestia is celestia.org. That's our website. There's a faq section. There's a resources page. There's a blog. You can read up a lot there.
00:53:32.350 - 00:54:06.060, Speaker B: There's also been an increasing amount of community content, and I've been meaning to aggregate all that into one place for people to read because some of the best content has actually just come from all of you guys out there writing and explaining what Celestia is in your own words. I would also say you should follow us on Twitter. So celestia.org is our Twitter account, and there's a lot of educational threads that come out of there. There's a lot of project updates that come out. Yeah, that's really the high level.
00:54:06.510 - 00:54:06.970, Speaker A: Awesome.
00:54:07.040 - 00:54:07.322, Speaker B: Thanks.
00:54:07.376 - 00:54:10.154, Speaker A: We're really excited about Celestia as well and want it.
00:54:10.272 - 00:54:18.160, Speaker B: Go ahead. I was also going to say, join our discord and our telegram channels. You'll find the links on our website.
00:54:19.730 - 00:54:45.078, Speaker A: Awesome. Yeah, we're really excited about Celestia as well here at Interndao. So thank you, Nick, so much for coming on and chatting with us today. We'll have this spaces recorded, right? So we'll publish that here and on YouTube as well. And if anyone's interested in being an intern, our pinned tweet has information there as well. So thank you so much, everyone, for joining in.
00:54:45.244 - 00:55:08.400, Speaker B: So before we go, I have my own question, actually, which is. All right, when Celestia intern. When Celestia Interndao, you're leaking some alpha right here. Do I have to stake, like, intern dot tokens that manifest a celestial intern?
00:55:11.490 - 00:55:13.230, Speaker A: We'll connect with you offline.
00:55:13.970 - 00:55:15.440, Speaker B: All right, sounds good.
00:55:17.490 - 00:55:20.000, Speaker A: All right, thanks so much, everyone.
00:55:20.850 - 00:55:22.970, Speaker B: See ya. All right, you guys, thanks for hosting.
