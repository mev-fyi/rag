00:00:29.840 - 00:01:04.666, Speaker A: Is Felipe actually here right now in the stands? Oh, boom. I've been looking. Right here we are. Ready? All right, so, ladies and gentlemen, welcome to the chisel stage for day two of modular summit. We're going to be having a wonderful day of programming all the way through 07:00 p.m. today on metagame at modular summit. And it's great to hand the mic over to Felipe from Celestia, who will kick things off.
00:01:04.666 - 00:01:15.430, Speaker A: I'm sorry, Cartesi. My apologies. And clicker here.
00:01:16.740 - 00:02:04.394, Speaker B: How do I pass slides? Justin? All right, so this is an impromptu talk. I found out that I was going to do this very recently, so please bear with me. The idea is to talk a little bit about the user journey user, in this case meaning developer, and specifically when choosing the execution layer that's going to host their app. So I'm going to explore a little bit about the design tradeoffs on execution layers of. So the point of this talk is to convince you of two things. First one is that execution layers have a very big design space, and that is a shame to explore app change, for instance, without also exploring the design space of execution environments. And the second thing is that execution environments are very context dependent.
00:02:04.394 - 00:02:27.164, Speaker B: So it depends on what kind of app you want to build, what kind of application, what kind of user experience, and so on. A little bit about myself. I'm this guy. I'm a co founder, and I led the first roll ups implementation at Cartesi. I'm brazilian, but I'm very bad at soccer, and I'm also very bad at designing slideshows. I'm always down to chat. I like to talk a lot, so please reach out.
00:02:27.164 - 00:02:51.812, Speaker B: I have a forecaster and an X account, and there's a link to the Cartesi development community. It's kind of fun because we do every development and research in public, so you can see all the conversations live. Quite interesting. There's a lot to learn there. So let's start. So this is the modular summit. So I guess I'll skip a little bit this slide, but that's the common accepted view of the modeler stack.
00:02:51.812 - 00:03:22.332, Speaker B: So have execution, settlement, consensus, data availability, and also a meme layer down there. That's very important. The definitions change. Often there's a bunch of new modular layers being added basically every day, added and subtracted. So at first sight, the execution layer looks very simple, right? It's just got an input. You execute on it and have an output, right? Usually you have a state, you add an input and you get a new state, and the outputs can be embedded on that state. So it's quite simple.
00:03:22.332 - 00:04:26.550, Speaker B: The problem that you have is that the execution layer has interplay with a lot of other layers, right? So this is a good example to show the interplay between computational capacity and data availability capacity is what we call the cone of innovation. And it's just an intuition. It's not to be taken as gospel, but it's the idea that as the computational capacity grows and the data availability capacity grows, you have an extended design space for applications. So if you take, let's say, ethereum l one, which you have limited without EIP 4844, you have limited data and you have limited computation. So there's only so much that you can do as an application developer. Once you start to go to, like, say, EVM rollups, you start to increase the computational capacity, and you start to do, to be able to do way more than just, in a sense, gentrified defi, and then have appraised roll ups, which is a trade off between interoperability and computational capacity. And then you start to be able to do much more fun things as well.
00:04:26.550 - 00:05:16.214, Speaker B: So here we have areas without any application, and that's to show the intuition that it doesn't really matter if you expand one of the axes a lot without touching on the other one. Right? In other words, if you have 10gb of data availability, but you have the computational capacity of one calculator, then there's not really much you can do with that. So that's why you have some errors without applications. All right, so what should you consider about your execution environment when you are thinking about developing a dapp? And just as a quick reminder, the Dapp lives in the execution environment. So in a sense, the developer, the developer's final experience is the execution environment. So that's why it's very important to choose it well. So the first thing is a little bit obvious.
00:05:16.214 - 00:06:22.896, Speaker B: It's the kind of dapp that you want to build. So what kind of dapp are you optimizing for? Are you trying to do defi? Are you doing games, social fi governance, and so on? How intense, how much computation will your dapp need? Is it a super simple dapp, or are you trying to build something complex with a lot of computation? Right. So what's the preferred programming language? Are you okay with coding? Solidity? Chiral? Do you want to use python, rust, or any other language? You see, there's a long list of things that you need to consider before locking yourself into an execution environment. So, for instance, you have developer resources. What resources will you want to use when coding your dapps? Do you need a file system, or are you okay with just storage and call data? Do you have latency tolerance? Do you need instant composability, instant interoperability? Or are you okay with having latency outside your dev domain? So if you're say, interacting with uniswap, you probably need instant composability. If you're ERC 20, you need instant composability. If you are an order book exchange, then very likely you don't really need instant composability.
00:06:22.896 - 00:07:27.248, Speaker B: You can deal with asynchronicity a little bit more. Is your app shared or isolated? Is your execution environment supporting a single Dapp, or is it supporting multiple dapps at the same time? So if you think about Ethereum, Ethereum and EVM was built to support multiple dapps at the same time, and it takes the trade offs necessary for that to happen. That's why when we talk about Auth vms, there's some people that criticize EVM a lot, and I'm not on that camp because I do believe that EVM is quite useful for a lot of things. All right, so please don't get bored. There's a proving system. Like are all the choices that you made regarding your execution environment, are they gonna catch up to you when you try to prove it to the base layer? Right, because it's very easy to promise a very incredible execution environment, and then you'll find out that it's very hard to prove. What's the financial model? For instance, if you have a shared layer like an EVM roll up, then your application doesn't need necessarily to sustain itself because you can just launch it and it's going to live on that layer forever.
00:07:27.248 - 00:08:37.568, Speaker B: You don't need to constantly pay the upkeep price of the infrastructure. An app chain, on the other hand, has to justify itself financially, because if you have a launch app chain and no one is using that, then who is running the nodes? Who is paying to run the nodes? How important is privacy? Do you need privacy for inputs or just for state? So it's a last one, but it ends in an infinite list. So what kind of inputs is our application expecting? What kind of outputs will you bring? Like what kind of messages are you going to send to the other applications? And so on, so on and so on. So you can see it's a lot of, it's a massive design space for execution layers and a lot of decisions that the dev developer need to make. Before locking into one. I think a very good way to split the design space in a first look is to think about shared roll ups and app chain roll ups, right? So have this idea of shared roll ups, which we have machines, execution environments that were planned to support shared rollups. So the AVM is an example of that, right? The Solana VM as well as, and so on.
00:08:37.568 - 00:09:20.018, Speaker B: And these are execution environments that are planned to host many dapps at the same time. And if you want to do that, then you have to be very careful of things, right? Because first of all, if anyone can deploy a Dapp, then someone can deploy malicious the app to attack your execution environment. Right, to attack other dapps. So memory safety is a problem. Metering, adversarial metering is a problem, right? And you see that in Ethereum all the time. They have to be very conservative of gas costs, because anyone can launch an application that takes advantage of some mispriced gas to attack the entire layer. On the other hand, you have app chain roll ups, which are way less composable than shared roll ups.
00:09:20.018 - 00:10:30.816, Speaker B: They have a worse interoperability. But they do have the advantage of being a safer environment for your application, because your application is not really attackable by other applications, at least not directly. So you can take more design trade offs regarding metering gas and even decentralization, computational scalability, and so on and so cart, as you are at this side of the spectrum, you have like Solana, this is not a complete graph, of course, but yeah, and you have some projects in the middle who are trying to cater for both shared roll ups and appchain roll ups. But this separation usually is very good at defining the kind of trade offs that you're going to get. So, just going over real quick about the design choices that we made at Cartesi, just to give an example of what I'm talking about, Cartesian is an architectural environment with a RiSC fiber architecture, the Linux runtime, and it's optimized for appchains. It would be insane to run this as a shared layer, simply because the computational scalability wouldn't be there. It's too expensive for you to host multiple applications at the same time.
00:10:30.816 - 00:11:21.460, Speaker B: So we optimized for computational power, which means that we had to sacrifice instant interoperability. For instance, we optimize for fairly complex applications, and therefore we need an extreme environment that can support complex tooling, because you can only build complex applications if you have complex tooling, at least safely. And you. Oh, these slides are a bit outdated, but one of the trickiest parts of building Cartesi is building the fraud proof system. As you can see, you have to prove a very big computational power application that has complex tooling on a semi complex machine, which is Rix five, which is not really complex, but it is complex compared to the EVM. So that's it. Thank you, guys.
00:11:21.460 - 00:11:23.380, Speaker B: And any questions? I'm around.
00:11:28.080 - 00:12:20.030, Speaker A: We do have time for a couple questions, if there's anything from the audience. All right, big round of applause. So, next up we have Ethan and I will be pulling up the slides and he'll be joining me on stage in a moment. This is a beautiful, beautiful initial slide.
00:12:20.570 - 00:12:25.492, Speaker C: Hello, hello, hello. Yeah. All right.
00:12:25.556 - 00:12:26.212, Speaker A: Turning it over.
00:12:26.276 - 00:12:26.652, Speaker C: Oh, yeah.
00:12:26.676 - 00:12:27.960, Speaker A: Ethan is all yours.
00:12:28.620 - 00:12:42.240, Speaker C: All right. What's up? Modular summit. Cool. Do I have a timer? I gotta keep precise track. No. All right, I'm gonna bust out my phone. I'm already wasting precious, precious time.
00:12:42.240 - 00:12:54.466, Speaker C: Okay, cool. Well, thanks, everyone, for coming out here. Modular summit. Woo. Yeah. Round of applause. All right.
00:12:54.466 - 00:13:07.906, Speaker C: That's right. Yeah. Love this place. So, I'm back. Guess who's back? It's me. I'm the co founder of Cosmos, CEO of Informal Systems, and we're incubating the cycles protocol. We do a lot of stuff in informal systems.
00:13:07.906 - 00:13:29.358, Speaker C: Security audits. We run staking offering on ethereum and in the cosmos ecosystem. We're also leading development for the Cosmos hub. Best place to launch a chain. We do a lot of secure engineering for the interchain and for starkware and others. And we're incubating cycles, which I'll talk to you a bit about. So, a lot of exciting stuff happening, but I also like to think about sort of bigger problems in the space.
00:13:29.358 - 00:13:45.626, Speaker C: And that's what I want to talk about a bit today. And so the talk is called defund the dealers. But I'm not going to tell you why for a little bit. So just keep the mystery. Just hold it in the palm of your hand. Is this. This is what I want.
00:13:45.626 - 00:14:25.040, Speaker C: All right, so we're here to talk about liquidity, and we're here to ask the big questions about liquidity. Where does it come from? What is this mysterious stuff? Is it in the room with us right now? Yeah. Who pays for it? How do we decentralize it? What does it even mean to decentralize it? Is that something we want? Okay, and these are the things we're going to try to answer, or at least understand a little bit more in this talk. But to do so, we're going to have to talk a little bit about history. Okay? And I promise I'll be brief. Sort of, when I heard my talk was gonna be 25 minutes instead of 20, I thought I could, you know, shower you all on a little bit more monetary history. This is the stuff I love, I promise.
00:14:25.040 - 00:14:50.778, Speaker C: This is not seed oil. This is, you know, pure, extra virgin olive oil here. Monetary history. All right, so we're gonna talk about the medieval period. Okay? And the reason this is important is because they actually had a quite advanced and sophisticated banking system and monetary system that isn't that well known. And I think there are things that we can learn from that historical monetary system that we've kind of lost in the transition to modern capitalism. And I want to sort of revive that.
00:14:50.778 - 00:15:30.740, Speaker C: And I'm not suggesting that we need to return to the medieval era or anything like that, but there are things we might have lost that are worth knowing about. And so I want to describe this system briefly, and then we're going to evolve forward in time. And so in this period, you had many different jurisdictions, and they all issued their own money, primarily in the form of a silver coin, sometimes gold. And there were two main institutions in the money market at this time. There was what we call the mint and the exchange. Now, the mint defined the issuance of coins within each particular jurisdiction, and this was governed by the king, while the exchange defined the exchange between different monies, between different jurisdictions. And this was dominated primarily by the italian banking families.
00:15:30.740 - 00:16:13.998, Speaker C: How did this all work? Well, at the mint, some merchant would come along and they would have some silver, some silver bullion that they acquired from trade or from mining or dug out of a hoard or something like that, and they would bring it to the mint, and they would give up their silver to the mint, and the mint would give them back some coins. And in doing so, the merchant has given up some of their silver as seigniorage. They're sort of taken away by the king. And so the merchant is paying, essentially for this service, but they receive coins in exchange, and the value of those coins to the merchant in that jurisdiction, their actual purchasing power is higher than the metal they started with. Right. So they actually gain purchasing power, but they have to give up some silver. Right.
00:16:13.998 - 00:16:41.130, Speaker C: And this excess purchasing power actually comes from sovereignty. It's the power of the king itself to declare that by stamping my face on the coin, it's now worth more than the silver in its uncoined form. Right. And so the important thing to emphasize here is that it's the users, it's the merchants that are paying for liquidity, right? They're paying for access to the, through the liquid coin form. This means of payment. They're paying for it by giving up some silver. And they're incentivized to do so because the coins are worth more.
00:16:41.130 - 00:17:18.732, Speaker C: And that's the sort of power of sovereignty expressed by the king that allows the merchant. The king wants silver because he needs to fight wars overseas, right? His own coins aren't kind of enough for him. He needs the silver. But the merchants, so long as they're doing business in a local jurisdiction, they're happy to get those coins and to get that higher purchasing power. Now the exchange is a little bit different right? Now, remember, this is a time when usury, it was illegal, right? So it was prohibited. So you couldn't deal in the time value of money, because time is something that belongs to God. And who are you to sell something that belongs to God? And so they were having modular summits at the time where they'd get on these panels and they'd talk about, can we sell something that belongs to God? And the theologians were unanimous that, no, you can't.
00:17:18.732 - 00:17:41.896, Speaker C: And the italian bankers are like, all right, so we're going to have to do something else. So we're going to engage in foreign exchange. And that was legal at the time. That was okay. So instead of dealing in current versus future money, these guys are dealing in present versus absent money. And that was what sort of dominated the monetary system at the time. And the way this would work is that some merchant, say, in France, who's an exporter and has some importer in Spain who owes him money, and he's in France.
00:17:41.896 - 00:18:19.780, Speaker C: And so he wants to collect his money, but he doesn't want to go to Spain. He doesn't want to ship metal. It's all expensive. So he'll write up a bill, he'll draw a bill on his importer from Spain, and he'll sell it to a banker in France, and the banker will give him some coins, and then it'll now be the banker's problem to collect on the debt. But the bankers were smart. They coordinated a highly sophisticated, very advanced banking system. This is back in the 16th century and even earlier, and they would coordinate the whole system to try to balance the trade flows across the different regions so that they could gather on a quarterly basis in these clearing fairs, where they got together with the other bankers and they cleared all of their debts without using any money at all.
00:18:19.780 - 00:18:46.934, Speaker C: Very, very powerful. They were focused on this idea of liquidity saving that between themselves, they would structure the whole system so that they could save liquidity. Now, so that's clearing and liquidity saving, but the users are paying for liquidity. And unfortunately, or fortunately, fortunately, the system sort of came to a crashing halt at the end of the 16th century because of all the silver that was being imported into Spain. It compressed the spreads. It kind of ended senorage. And it led to the rise of the central banks and the modern system.
00:18:46.934 - 00:19:39.100, Speaker C: Right? And so in the modern system, instead of focusing, you know, instead of the users paying for liquidity, now the state is explicitly subsidizing liquidity by paying for private people to actually produce it, rather than the other way around. And we've moved from a system based on the clearing principle and liquidity saving to one based on accumulating reserves and liquidity provisioning. Right? And so, in summary, this is a beautiful chart. Take a picture of this and mull over it. But the important thing to emphasize is that we move from the merchant paying to the state paying, from a principle of clearing to reserves, liquidity saving to liquidity provisioning, from a quality theory of money based on balancing the graph to a quantity theory of money based on an imbalanced graph funding the permanent deficits of states. Okay? And so I'm not saying that we have to go back, but maybe we lost something. Maybe there's something to be learned there.
00:19:39.100 - 00:20:01.244, Speaker C: Okay? Now, where does that leave us today? Well, you know, today we have our good friends, the grand firefighters, you know, Janet, Jerome and Ben. This is a real picture. You can tell because that's actually what Janet's hands look like. And, you know, there's the grand firefighters just dousing the world in liquidity, right? Like, oh, we're in this crisis. Everyone's on fire. The fires of illiquidity are just ravaging the planet. And so we need the great firefighters to douse us in liquidity.
00:20:01.244 - 00:20:20.036, Speaker C: But what is this liquidity? Everyone's just obsessed with the Fed's balance sheet, right? This is the fed's balance sheet. You know, the liabilities over the last, I don't know, 20 years or so. Look at this explosion. But is this stuff even money? Who is this liquidity for? It's only liquidity for the banks. Only the banks can access this liquidity. These are their deposits. I don't have deposits with the Federal Reserve.
00:20:20.036 - 00:20:41.498, Speaker C: They won't let me in. You know, I could try to register. They'll exclude me, right? And so this kind of liquidity, it doesn't even make it into. Into the real world, right? Everyone's obsessed with these numerical quantities. How much liquidity is the fed printing? What is this stuff? Is it in the room with us now? Can you access it? Can you use it? No, you can't. Only the banks can use it. Right? And they're starting to recognize that this is a problem and they need to do something about it.
00:20:41.498 - 00:21:19.596, Speaker C: Right, but it seems like in crypto, same shit, different ledger, you know, I mean, for all of our open source and verifiability and transparency and all this great stuff, we're still stuck in the same paradigm of monetary aggregates. This obsession with liquidity that has no meaning, no value, no utility to real people. When was the last time your mother accessed liquidity from one of your blockchains? She never did, and I'm not sure she ever will. Well, we might have something to do about that. Okay, so before we kind of address that problem, let's talk a little more about providing liquidity. Now, where do we start with that? Well, I'm starting with Jack trainer's the economics of the dealer function. It's a very, very nice, easy, clean paper that just describes the mechanics of how dealers work.
00:21:19.596 - 00:21:38.830, Speaker C: We're just going to cover it briefly. How do dealers work? Well, besides the dealer, we think about two different kinds of actors. There's the value investor and the time investor. Okay? Now the value investor has low time preference, right? They don't need, sorry, high time friends. They are high time horizon. They don't need to worry about liquidity. They're just in it for the fundamentals.
00:21:38.830 - 00:22:07.798, Speaker C: They want to buy low, sell high. Right? But the time investors in a different situation, they have illiquidity issues they need to transact now. Okay? So the willingness of the value investor to buy low, sell high, creates what we call an outside spread. And within that, within, that's the outer bars. And within that outside spread, there's an opportunity for the dealer. The market maker, right? Dealer, market maker, it's the same term. They show up and say, hey, I'm going to take advantage of this outside spread, and I'm going to quote an inside spread, a bid, ask price to the time investor, who needs money now.
00:22:07.798 - 00:22:35.712, Speaker C: And I'm going to use my balance sheet to absorb flow from the time investor so I can make liquidity available to them. And I'll take the risk onto my balance sheet because I'm going to expect that over time, the flows are kind of going to net out. So I have this opportunity because of these, you know, because I can take some risk but the flows will net out. I can harvest this spread in the meantime. Right. But the size of that spread is actually the dealer's estimate of their uncertainty of the existence of the market itself. Because if they take on too much directional flow.
00:22:35.712 - 00:22:48.670, Speaker C: Right, then the market's going to disappear altogether. The dealers are going to step out. And this happens from time to time. Yeah. Okay. Now, in crypto, we've gone ahead and tried to decentralize the dealer function. Amms xy equals K, all this beautiful stuff.
00:22:48.670 - 00:23:23.576, Speaker C: But in doing so, we've collapsed the spread into a static fee. It's no longer something dynamic that the dealers can adjust. It's just the transaction fee in the amm. Now, there's been a lot of research over the last year or so about, okay, how can we make dynamic fees in amms? Can we make them a function of volatility, this kind of thing? But it's still a big open area for research. And we're increasingly discovering that actually just decentralizing the dealers isn't quite cutting it. And a lot of folks are going back to hiring centralized dealers, centralized market makers, adding concentrated liquidity, things like this, to address these kinds of liquidity problems that are still plaguing us in the blockchain ecosystem. Now, cosmos is certainly no stranger to this.
00:23:23.576 - 00:23:57.608, Speaker C: We've been plagued, you could say, by liquidity challenges. And despite having clearly the best tech, Celestia and everyone else and amazing user interfaces and all of a sudden, amazing Dex like osmosis, we're still struggling to attract sufficient liquidity to compete with, let's say, Ethereum and Solana and these kinds of ecosystems now. So what are we going to do about this? Well, we're introducing hydro, right? So this is an application that we're building at informal systems. It's cool. We've gone from, like, theory and history, deep theory and history of money to actually building, like, degenerate liquidity providing in the Cosmos ecosystem. Let's get it done. Right.
00:23:57.608 - 00:24:26.528, Speaker C: And so this is a decentralized auction platform for protocol owned liquidity. Right. We want to make, there's all this capital tied up in community pools across the cosmos ecosystem and beyond. We want to make this capital accessible. We want to deploy it into amms and into other, you know, other apps that actually need access to liquidity in a frictionless and permissionless way. We're going to work with our friends from the time wave project to make this all kind of automated, because right now, what's happening is people are making proposals to the cosmos hub to say, hey, we want some atoms. We're going to put it into Multisig, we're going to deploy it into some amm.
00:24:26.528 - 00:24:45.260, Speaker C: It'll sit there in the LP. No one's really monitoring. It's all kind of like ad hoc. So we want to formalize it, build a proper action auction platform, let people bid on it, and unlock all that capital in the community pools to provide liquidity across the ecosystem. All you modular people building roll ups, you should know that the Cosmos hub is Celestia's best ally, and it's your friend and it's here to support.
