00:00:05.610 - 00:00:16.270, Speaker A: Testing, son. Yeah. Hey, guys, thanks so much for being here today. I'm super excited to talk about developer infrastructure in the modular context. Do you want to get us started by introducing yourself and about what you're building and your protocols?
00:00:18.610 - 00:00:46.314, Speaker B: I guess I have the microphone, so I'll go first. Hi, I'm lzrs. I'm the founder of Modular Cloud. So we're building cloud services for modular blockchain, and our first product is a block explorer. It's one of the things that we do. We have definitely a very different approach to Dora, and we actually work with Dora, and we're very good friends. But what we do is we index da layers, l ones, as well as the roll ups that are on top of them.
00:00:46.314 - 00:01:02.430, Speaker B: And there's a lot of really interesting implications to doing this and a lot of different architectural decisions that we make as a blockchain cloud company that differs from ones that were previously servicing monolithic chains. So I'm excited to dive into this more on this panel.
00:01:03.350 - 00:01:28.700, Speaker C: Hi, I'm Josh, and I'm a solutions engineer at Celestia Labs. And we're building Celestia, which is layer one data availability and consensus, layer one blockchain. And the goal of what we're building is to make it as easy for people to deploy a blockchain as it currently is to deploy a smart contract. So, yeah, really excited to talk about infrastructure for developers today.
00:01:30.750 - 00:02:09.080, Speaker D: I'm Jordan. I'm the CTO, co founder of Astria. Astria. We're building a modular, shared sequencing chain built on top of Celestia right now using modern DA. The goal of what we're building here is to make it such that when you make deploying a roll up as easy as deploying a smart contract, that it can also be done in such a way that it's decentralized today. The L two s and whatnot, that people are familiar with using all use centralized sequencers. And so we're trying to change that and hopefully create a better future for us in that regard.
00:02:13.370 - 00:02:42.800, Speaker E: Hello again. My name is Bunny. Also more easy to hear you, whichever is fine. Building a multi chain search engine called Ora. As LCrs said, we work very closely with them. They are building a modular block explorer, a modular indexer, or also a roller power indexer, many names for it. We're building a multi chain search engine.
00:02:42.800 - 00:02:59.750, Speaker E: We made some interesting infrastructural decisions, I'd say, as well, in order to be able to support this modular infrastructure. We're very happy to talk about it, a lot of them is just pretty much relies on very heavy collaboration amongst all of this very composable infrastructure.
00:03:00.890 - 00:03:38.530, Speaker A: So I think a common theme that all of you guys talked about and just building modular in general, is how do we make it simpler to build blockchains or roll ups for teams. Right. But at the same time you have to interact with a bunch of different layers, a bunch of different piece together, a bunch of things you might not have had to before. So I guess my first question is generally, how do you think that developer infrastructure and tooling can support making things easier for developers? And perhaps if you feel as though developers that are thinking of building module are a little bit intimidated in doing so and what can be done to support them, is that for me it's for everyone. I'll take turns.
00:03:39.030 - 00:04:43.666, Speaker B: Yeah, I think that this is actually a very difficult problem in engineering, but I don't think that it's specific to modular blockchains. I think the general problem is, and this is something that we face, building an indexer and a block explorer is imagine you have 1000 different chains. These are all going to be built slightly differently and there's going to be nuances in the details of each one of these systems that you can't create a common abstraction on. You can't necessarily, for example, make an abstract block schema that you build your application on. And you can do that, but you're not going to have the depth that every single protocol you're not going to be able to go and you're going to lose resolution on the data. So this is a hard thing and I don't think that it's necessarily a bad thing that we're facing this, but we definitely need to be making the right engineering trade offs when we're building tools. So the way we think about it is there's kind of a spectrum.
00:04:43.666 - 00:05:30.600, Speaker B: Whenever you're as an engineer, when you're designing something, you're going to have two engineers in a room and one of them is going to say, let's over engineer this, let's make this super generalizable so we can upgrade it later. It's going to be very easy. And on the other end of the spectrum, there's going to be an engineer who's saying, wait, no, this is the requirements for the customer, so let's just build exactly what they need. And I think as tool developers and infrastructure developers in the space, we need to go way more towards that flexible side so that we can make our tools very adaptable. And so the tact that we're taking at modular cloud is we're really focused on acknowledging that we can't generalize across all protocols, but what we can do is we can make the developer experience of creating an integration which needs to be done manually, but we can make that developer experience as easy as possible.
00:05:32.250 - 00:05:35.574, Speaker C: Yeah, go ahead.
00:05:35.772 - 00:06:51.198, Speaker D: I was just going to say that I think that we talk about this in the context sometimes of modular blockchains, but I think it's really a whole crypto blockchain space problem where my background is more web two and big tech. And the reality of someone in that world trying to get into this space is that there's a huge headroom to just jump in. If you're a front end dev and you say, I want to build an app and I want to try and use a blockchain, you're trying to figure out how am I going to run a local blockchain or if I'm using ethereum, I going to pony up whatever, like $20 a transaction to dev test this application. There's all sorts of hiccups along the way and so much tooling along the way. It's very complex and it's a huge barrier to entry to actually get some of these ideas onboarded. So when we think about building in modular, we see it as an opportunity to kind of correct some of that to an extent, make it. I hear lots of people I talk to like, well, isn't launching something modular, like more complicated? And I was like, well, we get to have a more narrow space of what we're focused on, which means we can really work on tailoring that experience and we can make it a lot better and easier to use.
00:06:51.198 - 00:07:22.140, Speaker D: And then that breadth can grow as we get more and more specializations and there's more pieces in this space, much like if you use Google Cloud today, you don't really know how networking works. The fact that we're sitting here, and if you want to be a smart contract developer building an app, you're like, I need to understand exactly how the core protocol works. That, in my mind is an abstraction that we need to kind of move past in order to. So building the tooling so that we can do that in the future is important.
00:07:23.310 - 00:08:18.390, Speaker C: Yeah, I was going to say pretty much along those lines. I think one of the biggest problems, while you've pointed out it's not really a modular problem, it's more of a crypto problem in terms of where the industry is at. I think the most complicated part that needs to be figured out in the next 510 years is those sort of common APIs and interfaces that allow composability but also optionality for people to pick what they want to use. So I guess for example, like a data availability interface that would be somewhat standard so that people can use different DA layers but also use the same tooling. I think that's something like rollkit is working on. For example, dimension is another example, a rollup. As a service provider, they've packaged together both their roll up SDK along with the celestial lite node.
00:08:18.390 - 00:08:59.000, Speaker C: So instead of having to go and start each one of those manually, you can actually do it all in one in the command line interface. So I think things like that, some of them might last, some of them might not. But I think whatever the happy middle ground with all of that is the way that this is something that we can take to the web, two developers and be like, hey, do you want to try this out? It's actually fun. And you're not going to spend your whole day trying to set up the light node or trying to start the roll up. So yeah, I think we have a long way to go, but it's really cool to see things like dimensions like roll up SDK for example, that actually exist already and excited to see where that goes.
00:09:04.570 - 00:09:55.382, Speaker E: I'll give you a brief. I think first of all, we very much relate to the point of trying to create a very good, somewhat abstract, generalizable schema. It is a noble approach. It's very hard. Someone in the room is very famous, some people in there are very familiar with that. But yeah, very much resonate and echoing the fact that it is a lot of trying to create packages, trying to create bundles, trying to create any semblance of, hey, we maybe figure out the best way to go about building a DeFi specific app chain, NFT specific app chain, defi enable NFT app chain, you can leverage composability. I think it's a very wonderful thing once you are able to come into an ecosystem and come into an entire industry and say, hey, there's a lot of people that have done a lot of the groundwork for me already.
00:09:55.382 - 00:09:58.166, Speaker E: I can just get extremely creative with whatever I want here.
00:09:58.348 - 00:10:18.900, Speaker A: Yeah, I totally agree with that as well. And I think the challenge then is on you guys in developing your protocols to make it easier and abstract that away so they don't have to think about it. So I guess a question for all of you again is what are some of your biggest challenges in doing so? What are the biggest hurdles that you have to go through to be able to make it simple for everybody else.
00:10:20.790 - 00:10:45.820, Speaker C: Things are always changing. And I think in the early stages of all this, we don't really know what the best way to do it is. So speaking of the DA interface with roll kit, for example, we might have a beta version of that, but at the same time, we don't know that that's the final version. So I think it's just, I guess, a factor of where we are at in the lifecycle of this modular ecosystem and crypto ecosystem as a whole.
00:10:46.910 - 00:11:41.226, Speaker B: Yeah, I'll definitely echo that. I think that the amount of attempts on goal is the key. So the cool thing about this, and one thing, for example, that Astria enables, is for it lowers the barrier of entry, of having a decentralized chain. So it used to be really hard to deploy a blockchain based application, and now with celestia, with shared security, and now shared sequencing and stuff like this, it makes it really easy. So from the perspective of people actually building applications, we're going to have so many more shots on goal, on trying to find out that one thing that hits a zeitgeist like bitcoin did. I mean, I think people don't realize when bitcoin came out, nobody thought that that would be something that people would actually find valuable, but that application was very valuable. And that's why we're all here today, because everyone got inspired by this.
00:11:41.226 - 00:12:15.270, Speaker B: We started trying to improve it, and now we're all here at the modular summit. And I think that's one thing that's going to happen. We're going to find out the killer apps through making it easier to experiment. And we're also on the tooling side, also trying to build systems where we're basically, right now, the approach we're taking at modular cloud is we're finding services and APIs that people want. Like for example, people want NFT APIs for EVM rollups. So we have an NFT API. This is something that there's clear demand for, and we're trying to build a collection of these things.
00:12:15.270 - 00:12:36.720, Speaker B: And then what we're doing is we're finding, we don't know what a generalized platform is, we don't know how the design should be. For a generalized platform that can provide cloud services to all protocols, that's a really hard problem. But what we're doing is by making a bunch of attempts, we're finding out these general patterns, and we're discovering how these things should be built.
00:12:39.810 - 00:13:41.954, Speaker D: Yeah, I think I resonate a lot with the idea that you need a lot of attempts. And I think that's one of the things that the modular space really enables. And one of the things that we think about trying to enable as a shared sequencer is launching these roll ups. What's the likelihood that of the first two blockchains that really became big, that those are like the final end state and enabling more iteration on what you can actually do? And I think that's really important. The difficult part is that if you want to be the base of that foundation, you have to make it such that people can actually innovate. And so I think there's a lot to what Josh said here of we're building things for the first time, and then we're building things on top of things, which are iterating pretty quickly, and there's a lot of interconnectedness in bootstrapping your own project. And so I think one of the big things that we do internally is just dog fooding what we do.
00:13:41.954 - 00:14:05.260, Speaker D: It's, hey, we have this and it's like, cool, let's go build a roll up on top of it. You have to actually make sure that what you do, and it's not perfect dog fooding. We come with our own biases, and you try to try to work through that, and that's why you get product out to people and you get it in their hands and you find out, and the same as any iterative development approach, it's like, okay, what was wrong with it? And what can we do and learn from that?
00:14:09.020 - 00:14:13.400, Speaker E: Hello, can you repeat the question again?
00:14:13.470 - 00:14:21.672, Speaker A: Oh, yeah, I was just saying, what do you think are the biggest challenges for you in your protocol? Having to make things easier for the user or the developer?
00:14:21.816 - 00:15:30.992, Speaker E: I think one of the biggest one is, honestly, again, to echo everything that everyone said in the room, but actually to give a very concrete example, we got a chance to, because we're building a multi search engine, we got actually the chance to chat with a bunch of node operators throughout this week. They were very enlightening chats because we got to see how one of the very core entities on the stack is able to think to reason through whether or not to support a certain ecosystem. We all form these very implicit types of equations, some more explicit than other. Some very large node operators have a very concrete equation that they use to actually figure out whether or not to support a certain ecosystem. One disclose which. But something interesting is that one of the very key components of that equation is just how much is this ecosystem iterating under nodes being able to actually tinker around with your notes is something very powerful. It's something that you can get very inclusively complex with.
00:15:30.992 - 00:16:08.400, Speaker E: I mean, there's nothing necessarily intrinsically wrong with it, but there is a point in which infrastructure providers really want to feel comfortable saying, okay, this is going to be the one version of the client that I'm going to be able to spin up 28 nodes per ecosystem, per chain, whatever, and I'm going to be able to provide industry great offerings on top of it. And yeah, that type of offering is just something that has presented to be a very insane straw for everyone. Yeah, we might be able to center schemas and such, but still it's something as simple, quote unquote simple as defining, okay, this is the no client can prove to be a very hard thing to do.
00:16:08.550 - 00:16:36.920, Speaker A: Totally. And I think going on to the idea about different building in one ecosystem first and then perhaps moving to another, I think some of you were starting as the Ethereum ecosystem, others more so in the celestia ecosystem, I guess, why would you select one over the you if everyone wants to? Let me know why. You kind of went with one direction first. And if you feel there are times where it's just best to stick to one ecosystem and not try to integrate with all of them, like there's just a certain level at which it just becomes too complex.
00:16:40.780 - 00:17:18.116, Speaker E: Okay, so I'd say a couple of honestly very practical things. I do tend to think a lot about infrastructure as being the byproduct of current economic incentives. In that sense, incentive alignment at this point is one in which, let's say we do incentivize a plurality of validators within the Ethereum ecosystem. You run a validator on Ethereum, on the active set, you can get paid to be able to secure Ethereum. That's great. You run a full node, not so much. So from this standpoint, there's very much the approach of, hey, I like this technology.
00:17:18.116 - 00:17:45.192, Speaker E: I find it very cool. I think it's very impressive. I think it's the most secure, the most optimized for whatever my use case is. That's great. Is it a viable economic solution long term? And that is not to be, let's say, incredibly cynical of a lot of really wonderful technology. But that is also just to say, hey, we do need to make infrastructure is only as sustainable as the economic mechanism holding it. So from that standpoint, that is something that we took very much into consideration.
00:17:45.192 - 00:18:30.860, Speaker E: We looked at all the different ecosystems that were the ones that had the most plain and simple demand, the most demand of people asking us, hey, can you build this? Can you build this other thing? I'll pay you right now. I need to get my hands on whatever you're building right now. And that is a very clear cut example for it. However, we also know that we're in crypto. There's the ecosystems that are very wealthy and powerful still, and they may not lend themselves to give us as much flexibility as something that we can actually do within a modular ecosystem. So that is also why we decided to build on top of it. We very much think that people can get very creative with it, and there's nothing more powerful than very creative infrastructure.
00:18:33.040 - 00:19:27.980, Speaker D: I think to that point, on the economics of it all being important, I think I take a slightly different approach. I 100% agree. But I go down and I look at just kind of a first principles of like, okay, if I'm trying to build something scalable, right, we talk about like, oh, we want users, we want actual useful applications in crypto. One of the things I always say to that is like, okay, I used to work at a web two startup and we had a database that had two terabytes of information. That's like six years of ethereum data. So the question is like, okay, if we want to actually have these useful applications, we need scalability, we need a huge multiple. And so coming from a first principles of that is like, okay, how would I build that? And that's, I think modular is just if you're building software in the world, for the most part, if you want to scale, you end up going more modular.
00:19:27.980 - 00:20:01.096, Speaker D: You have specific specializations of what you're working on. And so I think that's a part of why I look at this space. And then to the point of the economics, it's like, okay, well, Ethereum can also make these changes and they're working on things that will help with scalability. But it's a question of also just like velocity, you have all that economic security, it's all in this one space, and you have all this liquidity. It's difficult to move. It's a financial product with a ton of money. It's like, how quickly are banks changing their banking systems? Right? It just doesn't happen that quickly.
00:20:01.096 - 00:20:14.460, Speaker D: So if you want to actually come in and challenge the incumbent and be like, hey, we offer something better, I'm not going to do the exact same thing as what the incumbent is doing. I'm going to actually try and change a lot faster.
00:20:16.500 - 00:21:20.052, Speaker B: Yeah. So we first started off supporting Celestia that was our first integration, and that's a cosmos chain, essentially. So when we launched our block explorer, we only supported Cosmos, and we've since added EVM support, and we do have proof of concepts of other vms that are compatible with our infrastructure, but those are the two primary ones. I just think on a practical level, if you support right now Cosmos and EVM for your tooling, I think you're going to have compatibility with a supermajority of apps that people are using. So that's a really good starting point. But I think on a theoretical level, the reason why we started with Celestia is back to this point that we were talking about earlier, about getting a lot of shots on goal and essentially what is possible with, let's say that you have the Ethereum virtual machine and you want to improve it. If you wanted to contribute that upstream to actually the Ethereum network, as something I talked about in my talk earlier, coordinating with a large group is extremely hard.
00:21:20.052 - 00:21:53.384, Speaker B: So that's a very difficult process. If you want to change that execution environment, it's very difficult to do. So. If you look at a blockchain, there's actually a lot of things in the monolithic architecture that's all bundled together. And these things, they don't actually have to be. So what needs to be bundled? We need a lot of people to all provide security to the ordering of the data, and there is a strong network effect in that. And if you subdivide that into many different l ones, I'm not saying that there's not viable.
00:21:53.384 - 00:22:20.964, Speaker B: I think it is very viable. And there's a lot of people who are great solutions for making l ones that are other than just the major top ten chains. I think we're going to see even a lot more l ones. But you have to admit that it does sacrifice security. And there is kind of like economies of scale to security as well. And especially with data availability sampling. As you add an additional byte to the network, it's actually sublinear scaling.
00:22:20.964 - 00:23:12.984, Speaker B: So it actually takes like log n steps of verification more per n bytes. And so there's actually a really great property of having an l, one that's just dominant and that most people contribute to. But that network effect does not necessarily carry over to other parts of what the blockchain is. So in my talk, I talked about the fork choice rule, and you can roll up is basically defining this, and this is operating on another fork choice rule, which is like the l one. I gave this talk earlier today, and essentially being able to customize a lot of that stuff. Actually, it makes it possible to make a lot of improvements to the way that these systems work. And a lot of things in ethereum were kind of just, we were kind of just figuring it out as they went.
00:23:12.984 - 00:24:27.820, Speaker B: And it's not necessarily like I think someone had said earlier, just because what are the odds that one of the first blockchains was optimally implemented? I think that there's a lot of improvement, but going through an upgrade path of actually convincing the community to take every single change necessary to get there is really difficult. And also, you don't want to experiment at all in one of those situations, because if you try a crazy idea and it destroys the network, you're going to nuke everyone's bags and we're all going to be unemployed. So we really don't want to do that. So I think what's cool about modular blockchains is you can have a bunch of roll ups on top of an l one. This l one has a giant network effect, but the actual implementations you can have, these all be permissionless. And what's kind of cool about this is it actually is a better way of building a blockchain than it has a really interesting productivity scaling property where you can parallelize the iteration process, because all the different people that are trying to make different roll ups are not needing to communicate with one another. And as a result, you can have a much, much higher speed of iteration.
00:24:27.820 - 00:25:11.230, Speaker B: Something it's kind of like if you have like a distributed system and your application is not designed for that, you can't just add nodes. That's like trying to build something within the confines of a single project where you have to agree with everybody. You're going to have a lot of communication overhead between each person trying to put forth an idea. But if you have permissionless innovation, you can do everything asynchronously and you can scale the amount of innovation with the amount of people trying to innovate, because everyone can take their own bets. And I think that that is why I believe that the modular ecosystem is going to be where the dominant amount of innovation happens. And as a result, I think there's going to be a large amount of activity in the future on that. And that's why we took a strong bet entering this ecosystem very early.
00:25:12.480 - 00:25:35.510, Speaker C: I guess I'm a little biased here. I work for Celestia Labs, but I think the thing to take away for me is that people building on top of celestia and actually building on top of other DA layers. I forget the actual question, but I think the reason that I really like. Yeah, what's the question?
00:25:36.120 - 00:25:37.652, Speaker E: I know where I was going to go.
00:25:37.786 - 00:25:43.240, Speaker A: The question was just why start out building in one ecosystem versus another? Or maybe staying in one.
00:25:43.310 - 00:26:15.920, Speaker C: Yeah, so I'm definitely biased, but I guess the thing that I do have flexibility of my choice is what execution environment I'm using. So I just think in the grand long term, having standardization to some degree between those execution environments, as great as it would be to keep them in the celestia ecosystem, I think that having the ability to connect with other DA layers that are building the same sort of consensus, like shared consensus network, is something that can be really powerful.
00:26:17.220 - 00:26:34.170, Speaker A: All right, want to jump in a little more here into your specific protocols? I'm going to start out with both bunny and lzrs. You guys are both building block explorers or search engines. Would love to hear from you guys how your approaches differ, or also how they could be similar or additive to each other as well.
00:26:35.740 - 00:27:17.172, Speaker B: Yeah, I can go first on this. Yeah, I think they have a fantastic block explorer. Ours has a very different angle. First of all, it's primarily for developers and we have an indexer that works with roll ups and lots of different chains, including DA layers. And we think of our block explorer as kind of like the web console. For this you can log into AWS and set up your services and run computations in their cloud. And we think of our block Explorer as just the web interface for our cloud.
00:27:17.172 - 00:27:55.170, Speaker B: And it's also kind of a reference implementation. Since it is an open source block explorer, it's a reference implementation. So someone who wants to build a product with our cloud can look at how we use it and they can just copy that. Exactly. And we would love for them to use our APIs because that's how we make money. And I guess the last but not least, I would just say that when we design it, our approach is that we are very developer focused because we're working mostly with long tail projects, things that are, there's not any users at all. But no, it's true.
00:27:55.170 - 00:28:23.870, Speaker B: The users are the companies that are developing it and that's who we're talking to a lot. So they're debugging things right now. This is the stage that they're at. And of course, are there users on any blockchain protocol? I mean, that's a question, but I'm sure there's hundreds. But we are trying to make all the tools that developers need for building applications and debugging their protocols as they're building it live.
00:28:25.600 - 00:28:48.576, Speaker E: I can confirm there's users in other blockchains. True? Yeah. No, as long as the blocks are not empty, we're happy. Or even as long as there's people that need block explorers that are very. We used to use the phrase human readable quite a bit. I feel like over time now, I've grown a little bit more detached from it. I think it's just more.
00:28:48.576 - 00:30:39.076, Speaker E: So from the standpoint is also a not so great word. Trying to find a new one for it, but legible from the standpoint, that is something that people can just understand. Maybe friendly is the appropriate word for it. Something that you can feel it's approachable, something you can relate to, something that does not assume any single level of complexity from the user prior to knowing, oh, I don't know what is a swap, but everyone can understand what is a send and receiving, what is sending and what someone is receiving in a swap or exchange transfer. Beyond that, a lot of our infrastructure is set up in such a way that we are able to actually leverage infrastructure like models to collaborate on, let's say, hey, you have a really wonderful indexer, can we get some of that data right, also index the same way that, okay, going back to the economics of it all, we do believe that, let's say if you're building critical infrastructure for a lot of these ecosystems, even whether or not they are long tail or very much at the center of the velcro, you should be still getting paid, you should still be a very sustainable project on your own. Right? I think we more so prioritize the fact that developer tooling can only takes us so far in such a way that we can allow people to create, we can allow providers to create goods that people can start interacting with very easily. However, just developer infrastructure stops at the point in which as soon as any user starts trying to engage with your ecosystem, that is where you don't want to show someone, hey, here's the console, right? You very much want to create a product that someone else that knows very well how to use the console can then use a product like ours and say, hey, look, you just minted this.
00:30:39.076 - 00:31:04.270, Speaker E: You just engaged with this good. You just partook on this service. You just send money around the world. You were just able to bank yourself or even, let's say, something as communication. I actually didn't have a phone number for an entire year and I think, yeah, very free and I highly recommend it. But being able to leverage our infrastructure, let's say, peer to peer messaging networks. I had no problem living around the world that way.
00:31:05.200 - 00:31:08.352, Speaker A: That's awesome. Might try that actually one day, just not having a phone number.
00:31:08.406 - 00:31:09.250, Speaker E: It's great.
00:31:11.700 - 00:31:23.748, Speaker A: I had a couple more questions for you guys. I think I'm going to move on just so we don't run out of time here. So. Sorry. Oh, I have five more minutes. Oh, okay, perfect. All right, so great.
00:31:23.748 - 00:31:39.210, Speaker A: So basically, the way I understand it, bunny, you're more focused on the consumer side of things, and ldrs more so on the developer kind of backend kind of things. I would love to hear, I guess, starting with you, more about the cloud platform that you're building and how you can help.
00:31:39.900 - 00:32:42.380, Speaker B: Yeah, I think one issue that we're going to be facing very soon is it's becoming very easy to launch a chain, and that means there's going to be a lot of chains, and these chains are continuously producing blocks. And the cost of putting data on these chains is now plummeting. So people are going to be putting a lot more data on these chains. And so one interesting thing, first of all, there's basically two, this leads to two challenges. One is, and I think I might have mentioned this earlier, but fragmentation of the different types of implementations of everything. So if you have a traditional indexer and cloud based application or tool that works with, for example, EVM chains, you're already not going to have compatibility with every non EVM chain. And as we get more chains, that's going to be a large selection of interesting projects that you're not going to have compatibility with.
00:32:42.380 - 00:33:28.270, Speaker B: And even within the EVM space, there's fragmentation. So not all evms are the same. There's some evms that don't have a given RPC endpoint that you might want, or they have some pre compile, or it just doesn't work exactly the same way. And it's actually becoming increasingly hard to just simply make an EVM compatible tool. So one thing that we're doing is we're just trying to think from first principles, how can we rebuild these systems so that we are not making assumptions about how a protocol should work and we can just let people define that. But as I had mentioned earlier, we want to make that developer experience as easy as possible. So that's one of the things that we're doing.
00:33:28.270 - 00:34:22.620, Speaker B: And the other thing is kind of gets into the economics of actually running a cloud based company. When you have a lot of chains, you're going to have this long tail of chains that are somewhat interesting, but maybe they're just not extremely well adopted yet, or they have potential, but there's just not that much usage yet. And you might want accessing any one of these given chains. It probably doesn't give much value to people. Maybe not that many people want an API for that, but a lot of people will sometimes want to access data from some of these chains. And so I can't remember the statistic off the top of my head, but last year I was quoting this thing where there's some very large percent of Google searches that are long tail. So people are searching for data, searching for information on Google, and a lot of these searches have never been searched before.
00:34:22.620 - 00:35:02.356, Speaker B: It's a non trivial amount. It's actually surprisingly high. So what that indicates is that people, when you have a distribution like you have a head of data, most people are accessing data in the head. And this long tail, there's a lot of demand to access data in that long tail. The problem is that it's really expensive to store that. And if you just say, okay, well, I'll just buy all these terabyte hard drives and just put them in my basement. It's also then hard to actually run computations on that and access that and query that in a way that is performant and acceptable in a way that is useful for people building applications.
00:35:02.356 - 00:35:17.650, Speaker B: So we're trying to make the infrastructure on the cloud side of things that can allow people to run computations and query this data set and make that available for everyone so this stuff doesn't just get lost to history.
00:35:19.540 - 00:35:22.028, Speaker A: You're up. Why consumer focused?
00:35:22.204 - 00:35:23.068, Speaker E: Pardon?
00:35:23.244 - 00:35:37.588, Speaker A: I guess the question was just, I believe that you're kind of more on the consumer side, helping users interact very easily with the block explorer more so like a search engine. So I was just curious as to why you picked that direction over something like modular cloud, which is more of the back end side of things.
00:35:37.674 - 00:36:08.496, Speaker E: Sure. So I say we very much are intentional with the wording of referring to our product as a search engine as opposed to a block explorer. But I'll actually just hop off. There's a lot of queries that do not get actually search on Google. The statistic is insane, as you were saying. I was just thinking, okay, just think of a standard query like five letter, like what is, and then just insert whatever word, do a permutation on that, on those characters. It's going to be an insane number.
00:36:08.496 - 00:36:38.856, Speaker E: And yes, they're never going to get searched. And I do often find myself finding stuff that, oh, there's no search result for page for this. I think it's kind of fun. Then how do you build a product that actually allows you to access these things? You don't necessarily build a product that allows you to access only hash data. You may want to do that if you want to specifically, again, take the approach of letting people be extremely developer focused. That is great. That is actually the perfect product for that.
00:36:38.856 - 00:37:11.420, Speaker E: That is how you want to reference stuff. Maybe blockkite. Some people do that as well. Why not support it all? But the point in which we were very intentional on us being a search engine support to blocksper is we believe people don't necessarily want to search for a specific data sets or a specific, how to say it, factual information. That all of the top 100 searches on Google every single year are all brands. They're all brands, they're all goods. They're all good, they're services.
00:37:11.420 - 00:38:01.140, Speaker E: The only exceptions are stuff like weather, food around me and stuff of the sort in different languages as well, because everyone searches is not something appropriate to the crypt ecosystems. Therefore, I think it's such a good approach to actually take it. Okay, if everyone in the world searches, and he's saying billions of searches every single month, I forget the precise amount, but it's definitely on the two digits end of things, like 36 billion searches, I think, every month. Don't quote me on that. You can google it yourself or dora it yourself someday. And we take that approach because we want people to actually not search for this factual information on every single block, every single transaction, every single internal transactions, locks, whatever the coded locks. What we want is people to actually search for these goods and services.
00:38:01.140 - 00:38:46.870, Speaker E: And at Dora, when you search for NFT smart contract right now, this only bound to, let's say, aura ERC 721 draw proxy contracts. But we want people to be able to mint within Dora, which you are able to do right now. If you search NFT smart contract, Sora draw proxy 721, you're able to mint it within Dora. If you search up Dex within Dora, we generate a friendly Ui for you to be able to engage with the swapping widget within that. Right now, it's of course, bound to one of the most used ones. We use the uniswap widget in the future, we hope to have this very generalizable infrastructure allows you to leverage every single good and application, regardless of whether or not it's the first. So last time that someone's looking for it as well.
00:38:46.870 - 00:39:05.416, Speaker E: We think that that is how people relate currently to goods and services. So therefore, why actually not offer that in the space. We have a lot of providers for many things. Why not actually give it to people in a way that they're already used to engaging with them?
00:39:05.598 - 00:39:32.960, Speaker A: Sounds great. You guys are really additive to each other and kind of approaching it from a different angle. I think it makes a lot of sense. So thanks for going into that. Jordan, jumping over to you on shared sequencers, there's a number of different shared sequencer networks popping up, including Astria. Would love to know what's different about Astria from both, I guess the developer infrastructure experience for the most part, or how easy is it? Will it be to plug in and use your solution?
00:39:33.620 - 00:40:24.396, Speaker D: Yeah, first of all, we're really excited to see more people building the shared sequencers. We think from our perspective it's only positive to have more people thinking on this and more people working to push us to build something great. I think the reality of this space is that the shared sequencer narrative took off in March April, and I think espresso yesterday launched like a demo thing that they posted, which is great. Pretty cool. Excited for them. We're going to do a demo of what we have a little bit later here today at a workshop. So I think the reality is that it's really early and the debating over who has better product UX and whatnot.
00:40:24.396 - 00:41:21.632, Speaker D: It's going to be really early. I mean, to an extent where it's like, I looked this morning, I was like, oh, espresso had this post, let me go look and see how this works because I'm going to be talking about how we're all thinking about our user experiences. And it's just so early to really give you this is our differentiator in terms of how our product actually works. What I can talk to is our experience and whatnot, which is that my background is in developer tooling. I worked at GCP, I worked at Meta doing their API designs and worked at a CI CD company for a while. So it's really our background is building developer tooling. And so everything we do comes from kind of that mindset of what is a user, what is their journey, how do we make it so that it works? What are all the things they're going to want to do, how do we work on those integrations? And then from here we get products out and then, like I said earlier, it's going back, it's hearing what people have to say and continuing to improve on it before we get to a final launch.
00:41:21.632 - 00:41:23.910, Speaker D: And that's kind of how we think about it.
00:41:26.120 - 00:41:46.600, Speaker A: Thanks for that. I'm also kind of curious from the node operator perspective when people are coming in to run a sequencer. Maybe it's too early to touch on that as well, but I'm just curious to hear who might be such an operator. Is it someone like a traditional validator or professional node operator that already exists for other kind of things?
00:41:46.750 - 00:42:05.216, Speaker D: Yeah, I guess I have kind of a follow up question, but I can answer both of these, which is when we talk about a node operator, are we talking about validating sequencing nodes or are we talking about a node that someone runs at home so that they have access to the data?
00:42:05.398 - 00:42:07.824, Speaker A: I meant the former.
00:42:07.952 - 00:42:35.950, Speaker D: Okay, yeah, I think the way I think about this is similar to other specialization pieces and similar to tendermint. We'll go after traditional validators for the most part to start with. I think this is a big part of the appeal of a shared sequencer network is if you want to go and launch your blockchain, we're going to do the legwork of making sure that there's good validators that are using it, that's part of launching this product. And that way when you go and you launch your roll up, you don't have to do that because.
00:42:37.840 - 00:42:38.428, Speaker E: It'S just.
00:42:38.434 - 00:43:13.464, Speaker D: A people coordination problem. And so whether or not that's an institutional node operator or that's an individual with their special high performance setup, I think at the end of the day it just comes down to doing it and doesn't. I don't have any specific biases one way or the other. Our sequencing chain is built on top of comet BFT. So lean on top of the institutional knowledge, and I say really like ecosystem knowledge that people already have in terms of running those.
00:43:13.662 - 00:43:27.884, Speaker A: Thanks for that. Yeah. Josh, your turn. So you're a solutions engineer at Celestia. Would love to know a little bit about what you work on day to day and how you're helping the entire Celestia ecosystem build things on top of it.
00:43:28.002 - 00:44:24.990, Speaker C: Yeah, so I guess a lot of my day to days, mostly maintenance of our documentation. So if you've run a light node, there's a good chance I've at least edited something that you followed to do that. If you're running a roll up on roll kit, I also work with their documentation as well. I guess on the integration side of things, I work on different execution layer integrations, so I worked with the op stack integration with our engineering team. Kind of like polish the docs up for that and give it to the end developer to go ahead and play around with. But I guess one of the most fun things that I've had or enjoyed the most recently, is trying to abstract away the console or the terminal for people when running a light node. So I have like a beta version of this Mac OS app that I made that you can just download on your Mac like you would any other application and start a node up.
00:44:24.990 - 00:45:07.710, Speaker C: So yeah, I kind of just experiment with things, but I think that's the beauty of where we're at in this space. We're still figuring all these things out. There's many EVMs, as LZRS was talking about, that could be used as execution environments, but some of them have different pre compiles and just like different properties about them that aren't all the same. So figuring out which one of those are best in the long run, I think is going to be a really important thing for this space. I kind of got a little bit out in the end there, but yeah, you're good a little bit all over the place, but mostly experimenting and helping people post data.
00:45:08.560 - 00:45:28.988, Speaker A: Maybe this might be a bit too early of a question, so apologies if so, but going back to our first kind of question about how easy things will be, given everything you just said, how easy do you think it will be to launch a roll up using Celestia, both from the perspective of someone just doing it themselves, or developer doing themselves or leveraging a Ras solution?
00:45:29.084 - 00:46:18.516, Speaker C: Yeah. So I guess one of the next ideas I have for this Mac app is to first put in a transfer function so it can act like a wallet. I want to also put in posting data to the network function, but the bigger addition to that would be something where you can go in and literally click start a roll up or initiate a roll up, and maybe leverage something like dimension, for example, to do that. So I think in the next year or so, there are going to be things like that that exist, maybe even sooner. Conduit is an example that has not built on top of Celestia yet, but they do have the ability, if you go to their web interface and make an account for free, you can start your own roll up on Gurley. And I think that's fascinating. They handle all the infrastructure for you.
00:46:18.516 - 00:47:11.072, Speaker C: You can inspect the logs of the actual software that's running. And I'm very optimistic about this, basically drag and drop sort of roll up infrastructure. Like the same way that if you want to go make a web store right now, you can use Shopify and basically have no knowledge of development or anything, and you have something that works and is a fully fledged product. I guess I'll stop after this, but I think that's one of the beauties of where we're at, is we're going to be able to figure out all the different pieces of the stack really well. And the really optimistic vision I have is that the same way that blockchains work in the future is the same way that software works now. I know it's called the OSI model. I don't know much about it, but there's seven different layers in the way most applications we use operate.
00:47:11.072 - 00:47:45.150, Speaker C: And I think I want to get to a point where no one has to know what's going on under the hood of that roll up. They just know that they have a roll up. Here's their special key to access it or whatever. But I don't know what happens when I send an email. Like every single layer of my email, I couldn't tell you what happens. So I hope that we get to a point where developer, tooling and even just the end user products are at that place where people don't have to think about it, because it's overwhelming, to be honest. And I think that's probably one of the biggest challenges of this space.
00:47:46.160 - 00:47:58.740, Speaker A: So I think we're out of time. Thank you guys so much for being here. Would love to do it again sometimes. I have some more questions for you, but it was really engaging conversation, so really appreciate your time. Thanks again, everyone.
00:47:58.810 - 00:47:59.590, Speaker E: Thank you.
