00:00:09.320 - 00:00:55.468, Speaker A: Hello everyone. Quick little background about myself. As was mentioned, I'm a co founder at Celestial Labs, which is a modular data availability layer. Previously. Before that, I was doing a PhD at UCL where I was focusing on layer one scalability and I worked on the first smart contract sharding research paper called Chainspace, which was later kind of spun out into a startup that was acquihired by Facebook. But I was the only team member that did not join Facebook and I ended up working on Laser ledger and Celestia instead, which I think was a very interesting alternative design to blockchains. So I'm going to talk about three main points today.
00:00:55.468 - 00:02:28.136, Speaker A: The first point is we're going to actually set the record straight on what is a modular blockchain stack and define it clearly and what is not. And then we're going to give some examples of configurations of blockchain stacks and we're going to talk about the key benefits of modular blockchains. So when Bitcoin was first proposed in 2008, it proposed a model where it was a monolithic blockchain where effectively the full nodes and the validators, they do consensus on the chain and they also execute the transactions on the chain, so they provide consensus and computation on the chain. And for the ten years after Bitcoin, most blockchains followed the same model. So when Ethereum came around in 2013, it followed a very similar model to Bitcoin, except that it replaced the execution environment of Bitcoin with a general purpose smart contract environment known as the Ethereum virtual machine. But the actual architecture of the blockchain was similar architecturally in that it was monolithic and full nodes did the same general tasks. But obviously the problem with this approach is that and full nodes to verify the chain have to do effectively two things.
00:02:28.136 - 00:03:29.950, Speaker A: The first thing is they have to check if the chain has consensus. And the second thing they have to check, they have to actually process and execute every single transaction to check that all the transactions are valid. And that obviously doesn't scale and is quite limiting because obviously it doesn't scale if full nodes have to execute the entire state and transaction history of the network. But if you think about what is the most basic blockchain you can create, like what is the most minimal layer one? If you took Bitcoin or Ethereum and stripped it back to its core components, what would you get and what is the core functions of a layer one? If you remove the execution from a layer one, what you would get is a blockchain where full nodes do two things. The first thing is consensus. They take transactions and they order them. And the second thing is that they ensure that the data of those transactions are actually available.
00:03:29.950 - 00:05:00.680, Speaker A: And the reason why you want to ensure that the data of the transactions are available is because that's all you need to build an application on the blockchain to allow clients and users to know what's on the blockchain to compute the state of the application vision. And I wrote a paper about this in 2019 called Lazy Ledger, which was the former name of Celestia, where I proposed a paradigm for blockchains where the blockchain is only responsible for consensus and data availability and all the execution happens off chain, which I call client side smart contracts or client side or off chain execution. And that's basically the same model of how roll ups work. So for the off chain computation you can use a roll up. ZK roll ups were proposed in 2018 and optimistic roll ups was proposed three months after I released a laser ledger paper. And in a roll up paradigm, the roll up execution happens off chain but you're only using the layer one chain only for data availability and consensus, which is exactly what the laser ledger kind of paradigm does. So in this kind of model, what your FF could be doing is separating consensus and execution.
00:05:00.680 - 00:06:08.850, Speaker A: Whereas previous blockchains like bitcoin and ethereum nodes did consensus and execution, in this new model, layer one nodes only do consensus and data availability and the execution happens on a layer above, above the stack off chain, not on layer one, either as a roll up or as a different kind of L2 solution. And this actually makes a lot of sense if you think about it. So in computers you have this thing called the OSI model that proposes a modular kind of like stack for computing, where at the bottom of the stack you have the physical layer, which is the actual cables and wiring and hardware of the Internet or the network. And then if you go all the way up the stack, you get to the application layer like Facebook and Google. But in between you have all of these different layers that can be swapped out. And I think blockchains are kind of shifting to this paradigm because it makes a lot more sense. And I'm going to talk about why.
00:06:08.850 - 00:07:46.876, Speaker A: So let's talk a little bit about what are the actual layers in a modular blockchain stack once you decouple them from a monolithic blockchain. So the first layer is consensus and consensus the consensus layer is simply responsible for taking arbitrary data or arbitrary messages and then providing an ordering over those messages. So a developer would submit a bunch of messages to the network and the blockchain or the consensus layer would tell you in which order those messages are serialized. And at a fundamental level that's what consensus does. Then above that you have data availability. And what data availability is trying to solve is once the kind of consensus nodes or the consensus layer has decided or determined what the ordering of those messages should be, they usually commit to that as a merkel route or any kind of other commitment. But they also need to actually tell the network what the actual data in those messages are, because if they don't actually publish the data that they agreed on, then users and applications would not be able to know what the state of their application is because they don't know what the transactions are in their application.
00:07:46.876 - 00:09:04.200, Speaker A: And they wouldn't be able to generate things like fraud proofs. In the case of optimistic roll up, for example. So with data availability there's some cool techniques you can do such as data availability sampling which lets you verify that the entire data is available by only downloading a very small percentage of the data. Then the third layer is the execution layer and the execution layer takes the messages that have been agreed on, ordered in the blockchain and have been made available and then does some computation or processing on those messages. So in this example on the board you can see you take a bunch of transactions in and those transactions might be payments and then once you actually compute those payments you can know what people's balances are. And in the execution layer nowadays people typically use roll ups, whether optimistic or ZK roll ups. And you can prove to users the execution was done correctly by either using ZK proofs or fraud proofs.
00:09:04.200 - 00:10:18.604, Speaker A: The final layer, which kind of sits in between the execution layer and the consensus layer technically is a settlement layer. A settlement layer is basically like a special case of execution layer. It's basically an execution layer that bridges other execution layers together. So, as I mentioned, you would typically prove in a roll up whether a computation was valid using a fraud or ZK proof. A settlement layer basically verifies there's fraud or ZK proofs on the settlement layer itself and provides dispute resolution on it. And that would basically allow different execution layers and roll ups to bridge with each other and transfer assets with each other in a trust minimized way. Now, having listed all of the main components of a modular blockchain stack like how do we define what a modular blockchain is? So I define a modular blockchain as a blockchain that outsources fully at least one of the four components I e.
00:10:18.604 - 00:11:17.730, Speaker A: It does not handle that component. So, for example, Salana wouldn't be a modular blockchain if you just added roll ups to Salana because Salana's l one still has a smart contract environment and its validators are doing data availability, consensus and execution and they're not specialized in a specific task and therefore it's not modular. So what is not a modular blockchain? So there's often some confusion on this. A blockchain that handles all the components but has a modular software design is not a modular blockchain. A modular software design can be helpful to build modular blockchains like we use Tendermint. The ABCI construction in Tendermint is very helpful to build modular blockchains. But deploying a blockchain using this modular software library does not make that blockchain modular in itself.
00:11:17.730 - 00:12:22.772, Speaker A: And secondly, a network of blockchains where each blockchain in the network handles all the components is also not a modular blockchain. For example, avalanche subnets are not modular blockchains because each chain in that subnet in the network handles all the components that I just described. Therefore it's not modular. Let's go through some examples of what a modular blockchain stack could look like. So, as I mentioned, there's these four components data availability, consensus, settlement and execution. So you have monolithic blockchains like bitcoin or ethereum as it is traditionally where you basically have a general purpose smart contract environment and the validators and the full nodes handle all of those four components. Then you have roll ups.
00:12:22.772 - 00:13:41.440, Speaker A: And in roll ups the L1 handles the first three components data availability, consensus and settlement but not execution. And the roll up itself handles the execution of chain. And then you have validiums. Validiums are basically roll ups but they do not have on chain data availability or they do not use the same layer one as the settlement or consensus for data availability and therefore they are not roll ups but more like side chains or balidiums as they're termed. So this is kind of like the kind of modular design in the ethereum space that has been kind of like discussed so far. But then there's also a more of a celestial centric modular design or configurations of the stack. So in Celestia we're quite interested in this idea of sovereign roll ups and in a sovereign roll up, the sovereign roll up uses the L1 only for data availability and consensus but it does not have an enshrined settlement layer.
00:13:41.440 - 00:14:29.600, Speaker A: Instead it does its own settlement. And the reason why it's sovereign is because it can hard fork and it can upgrade without permission from a higher execution layer. So for example, if you have an ethereum roll up, your roll up is effectively like a baby chain to the ethereum settlement execution layer and you can't really hard fork it without convincing the ethereum kind of social consensus to do so. But with a sovereign roll up because it does its own settlement, it's effectively like its own layer one chain. It's effectively like deploying your own layer one. You can hard fork it and it can have its own social consensus. You've also got this ideal settlement roll ups.
00:14:29.600 - 00:15:49.970, Speaker A: A settlement roll up is basically like a standard roll up except that it's only optimized not for general smart contracts or computation, but for settling other roll ups on top of it. And I think Yuri is going to give a talk about this today with this idea of L1s, L two S and L three S. So, like, for example, you can have an L two that has L three. S, but the L two might only be up might only be supposed to be used for settlement, for other roll ups. But you're not supposed to host actual applications on that roll up. And then you've also finally got this idea of a celestium which is basically a validium that uses Celestia for data availability on paper has similar security trade offs as a validium except that it has slightly higher crypto economic guarantees because of Celestia's data availability, sampling and slashing. Here's the different kind of current players in all of these different stacks.
00:15:49.970 - 00:17:08.980, Speaker A: As you can see, there's currently a higher focus on the execution layers in this stack. And I think that makes a lot of sense because there's a lot more kind of innovation or divergence that can happen on the execution layer of the stack than the lower layers which kind of do more of a kind of simpler role, simpler but more but important role. Let's talk about some of the benefits of a modular blockchain stack. So first of all, obviously the big one scalability. So intuitively modular blockchain stacks are more scalable because there's a separation of resources and that means each node in each layer of the stack can be more specialized to a specific function. So for example, on the data availability layer the nodes don't do any computation, they just do data availability. And that means they can optimize their resources to having high bandwidth resources rather than computation and they can be specialized just on that one task.
00:17:08.980 - 00:18:32.240, Speaker A: And the main benefit of this kind of comes from the resource pricing. You're separating the resource pricing for different resources on the network like you have different resource pricing for data than computation. And finally, in a modular blockchain stack it's quite common to use technologies like data availability sampling and fraud proofs or ZK proofs. And this is very important for scalability because in order to scale blockchains you can't just increase throughput. You also have to increase throughput while enabling users to still gain assurances about the correctness and validity of the underlying chain. And in traditional blockchains the only way you can do that is if the users actually re execute every single transaction, which most users cannot do. But with technologies like data availability sampling and fraud proofs and validity proofs, it allows ordinary users to effectively be first class citizens of the network and have almost the same level of security as a full node that is actually downloading all the transactions without having to have the same resource requirements as a full node.
00:18:32.240 - 00:19:34.164, Speaker A: Secondly, flexibility is a major advantage of modular blockchains. We can see there's a Cambrian explosion of different execution layers that are innovating in different ways in the ethereum roll up space, for example. And these different execution layers have different advantages. For example, Fuel's execution layer is paralyzable, for example. And this is very important because if you think about the history of the web before the cloud or virtual machines were popular people used to just use shared web hosting providers like DreamHost or GeoCities. And that really limited innovation of the web because you were limited to whatever execution environment or programming languages that that host provider had on their server. But nowadays no one uses that.
00:19:34.164 - 00:20:49.868, Speaker A: Nowadays people just deploy virtual machines on Amazon EC Two and they effectively have their own operating system and they can install whatever they like on it and experiment with all kinds of different programming languages and technologies. Finally, I think this is more celestial specific but if you think about the different layers in a blockchain stack you have layer one which is commonly known as the consensus layer. But the consensus layer only has value because people agree that it has value. Like people agree that the current Ethereum chain or the current bitcoin chain has value as opposed to some fork of Ethereum because people have just agreed it by social consensus. If I fork Ethereum, no one's going to say that's the real Ethereum. So to define the real Ethereum, that requires social consensus. But applications on shared smart contract platforms and smart contracts do not have that same property.
00:20:49.868 - 00:21:56.330, Speaker A: Instead they kind of borrow the social consensus of the layer one that they're using or the execution environment they're using. So if you have a smart contract in Ethereum you can't fork it without convincing the social consensus of Ethereum. To some people that's a feature, but to others that's a bug. But with sovereign roll ups you can actually have your own layer one execution environment that your community can hard fork and that it therefore has its own social consensus. I think this is a very interesting kind of model. To me, the whole point of blockchains is that it's basically a social coordination mechanism for off chain social decisions that have been made. I think there's kind of three main values from my perspective of a modular blockchain stack or blockchain or the idea of blockchain modularism in general.
00:21:56.330 - 00:23:08.960, Speaker A: Firstly, users are first class citizens of the network thanks to technologies like data availability, sampling and DK proofs and fraud proofs. Those technologies allow users to have the same level of security as a full node or similar level of security as a full node without needing the same resource requirements and hardware as a full node. And so you're allowing end users to actually be first class participants of the network. Secondly, I think a second important value is this idea of layer one fighting and layer one maximalism is kind of getting old. And I think modularism is much more interesting than maximalism because it's not a zero sum game. And if you allow developers should have the freedom to build their application how they want according to their use case. And the more players there are in this modular blockchain ecosystem the more value there is to be created.
00:23:08.960 - 00:25:21.320, Speaker A: And finally, I think an important value is that if they want to communities can choose to be sovereign by deploying sovereign roll ups. And the main difference with that with deploying your own L One is that it's much easier to deploy a sovereign roll up than it is to launch your own new layer one chain with its own consensus, because you have to bootstrap a secure and decentralized validator set using something like proof of stake. But with sovereign roll ups, communities for the first time have the ability to create a sovereign blockchain very quickly, within minutes without having to worry about the overhead of maintaining and creating their own consensus network with a secure val layer set because they can effectively have shared security with the data availability layer without losing the sovereignty of their execution layer. I think the reason why I think it's so important to kind of move towards a modular blockchain stack is because over the past ten years we've kind of been stuck in this kind of cycle of like, layer one chains being created all the time because the previous layer one chains could not scale. And you can see this is not ending well because all of the chains here have also run into performance issues and gas and transaction fee issues and uptime issues. So clearly we kind of need to escape this cycle of new layer ones with something that actually kind of works. And I think the best way to do that is to have a modular blockchain stack and use technologies like roll ups and ZK proofs and fraud proofs and data availability proofs.
00:25:21.320 - 00:25:40.430, Speaker A: So if you want to free yourselves from the kind of limitations of monolithic layer ones, then build modular and gain your freedom. Him thank you, everyone. Pick.
