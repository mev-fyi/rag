00:00:01.080 - 00:00:01.376, Speaker A: Yep.
00:00:01.382 - 00:00:03.862, Speaker B: Ruth, this is me, Evan.
00:00:03.998 - 00:00:19.034, Speaker A: I saw Nini as well. Nice. Strange love. IBC team binary builders. Informal.
00:00:19.734 - 00:00:26.674, Speaker C: I'm here. There's a, there's an ICF workshop today that's, I think is the reason a bunch of the other folks aren't here.
00:00:27.054 - 00:00:32.794, Speaker A: Sounds good from the Da side. Anyone from Celestia node here?
00:00:33.694 - 00:00:37.114, Speaker D: Yeah, I'm here. Ramen and Oleg, who's new on the team is here too.
00:00:37.654 - 00:00:54.624, Speaker A: Sounds good. Iger? Anyone from Iger? Mikoya here. I'm from Iger. Nice. Okay, we've got a full house, sort of, at least on the DA side. Has there been any kind of updates from the DA working group?
00:00:55.364 - 00:01:21.764, Speaker D: No, we still haven't had another meeting. There hasn't really been a reason for one, but we keep perpetually saying this, but pruning is getting close. So now that flib is co chairing with me, maybe it'll be time in the next week or so because Schwab and pruning are pretty much there. But yeah, it'd be good to rally around with the iger team and everything and get it going. But yeah, we haven't had a meeting yet.
00:01:22.504 - 00:01:33.284, Speaker A: Sounds good. What about interface working group? I believe there was a meeting last week. Can anyone talk about that meeting? What happened in that meeting? Any updates?
00:01:34.544 - 00:02:15.424, Speaker D: Yeah, I guess I can talk about that one too. So Ismail kicked it off as starting as co chair. And the main thing there was just a kick off, a discussion around the canonical API and starting that as a sort of work stream and wider initiative to sort of improve both the celestial node API but generally establish a guideline for any sort of implementations of a DA node, what they should support and everything. So it was really more of a kickoff call. There are some notes somewhere I can chase those up and add them to probably, I can probably comment them here on this GitHub issue for this. But yeah, there was a call and we will have a regular cadence of them now. So that's it.
00:02:16.724 - 00:02:29.068, Speaker A: Awesome. And I guess within that call there's like the work stream around the canonical API. And did Viet have any updates for that group as well?
00:02:29.196 - 00:02:48.438, Speaker E: Yeah, Viet shared like user stories and feedback they gathered and he has like a whole list of user stories. It's not public. Are you thinking about publishing? Are we publishing the user stories or.
00:02:48.446 - 00:02:51.694, Speaker A: Is that from the interface working group that you worked on?
00:02:51.734 - 00:03:07.504, Speaker F: Hey, yeah, I just wanted to say we can definitely do that so everyone have visibility on user stories. It's more up to the community to decide if we actually need that. So I can copy basically the page and yeah, we can have full visibility.
00:03:08.204 - 00:03:42.924, Speaker A: So yeah, for context, user stories related to how do people interact with the interface itself. That's what the working group is scoping out and under canonical API specification, work that is now doing with a CIP coming soon. I think that's it for updates from the interface working group. Next is the CK working group. I know it happened an hour ago. I wasn't on that meeting because I had another thing to do. But any updates from the CK working group anyone can share?
00:03:45.624 - 00:04:15.564, Speaker C: Yeah, I could give an update. I think the crux of it is there's a CIP in development again. It was on hold for a couple months, but there's been some recent progress and I think they're looking to get it out of draft in a couple of weeks. Mostly it's focused on which cryptography to adopt and questions around what proving system to use. And then the group will move forward on other questions around the actual ZK account protocol abstractions there.
00:04:17.064 - 00:04:56.432, Speaker A: Nice exciting stuff. Yeah, I mean whenever they update it we can all give it a review. Okay, so there's been from Rutul, one of the CIP editors and cordette on corn app, there's a few updates here. First one is CIP six moved to last call. This is the last CIP needed for lemongrass. After final we can move lemongrass to last call. Um, is there a pull request for this?
00:04:56.528 - 00:05:13.604, Speaker B: Um, yeah, that one merged actually last week. So there have been, those updates were for last week's call, but obviously that one got postponed to today. Yeah, so there were those three updates for last week and then three more sip status updates in the comment below.
00:05:16.344 - 00:05:50.592, Speaker A: So um. All right, so then there's CIP ten moved to final. That, I mean, I guess the last call deadline has exceeded and CIP ten is on final. And then there's CIP 14. Let's move to final. And if we go here, this pull request is moving. CIP 17 has this been, this is for the specification for Lemongrass.
00:05:50.592 - 00:06:29.446, Speaker A: We don't have to do like review because it's just a meta CIP and it's more like most of it is around the actual content of the CIP's listed. So it's fine to move it to last call because I met a CIP on CIP 20. Yes, we exceeded May 14 so that when going to final there'd been no feedback. And then CIP six is, has been moved to final because it was on the 22nd. And if my math is correct, today is the 22nd. Cool. So the editors can start merging it.
00:06:29.446 - 00:06:51.854, Speaker A: I'll start approving it because this all seems correct. Moving back. Okay, so it seemed like, you know, the action item there is pretty straightforward CIP 17. Was CIP 17 moved to last call?
00:06:54.594 - 00:06:56.362, Speaker B: It's moved to last call on this pr.
00:06:56.498 - 00:07:09.544, Speaker A: Another one? Yeah. Sorry, I thought it was a different one. Okay, cool. In that case, it seems like we're moving on track for Lemongrass Hartford. There been any updates on audits?
00:07:10.364 - 00:07:45.034, Speaker B: Yeah, they're actually. Thanks for bringing it up. So we started the audit kind of kickoff on Monday with informal systems, and they're planning on dedicating seven person weeks to this. And they have two people looking at it. So within three to four weeks, we should kind of wrap up the audit and then we kind of have like a buffer time to address any findings discovered during the audit. So I can update in this core devs call next call if they find anything and share it with us. But, yeah, that's about it.
00:07:46.094 - 00:08:28.614, Speaker A: Sounds great. And after, if you can walk us through the timeline that happened, like, let's say the audit is completed, best case scenario, there are no issues and stuff. Or let's say there's some issue, then things were fixed and implemented. What if the timeline looked for like this being activated? There is a process that is recommended where you start with a Ravika, given that it's like developer focused, one that's easy to test, moving from there to mocha, because that one is like a testnet that has a lot of validators running it, which allows us to actually test out the hard work before going to Mainnet. I'm kind of curious if you guys were thinking about that.
00:08:29.474 - 00:08:41.254, Speaker B: Yeah, I fully agree with that plan. We're kind of like, working on that plan this week, but fully agree with, like, rolling it out and letting it bake on testnets before Mainnet.
00:08:42.034 - 00:08:56.366, Speaker A: Amazing. So it sounds like most things move to last call or to final. We're on track for the hard work. Just waiting on August before we start, like testing and using Testnet for deployment and moving from there.
00:08:56.550 - 00:08:58.074, Speaker B: Yep, exactly.
00:08:58.454 - 00:09:18.714, Speaker A: Exciting. Okay, so Callum has a new CIP that he might want to bring up on a call. You may want to bring it up or do you want to bring it up? All right, cool. Let me mute myself and the window. So there's.
00:09:20.254 - 00:09:52.150, Speaker G: Okay, I've unmuted myself. Yeah. So there is a new Cip that I just submitted today. It hasn't yet been approved yet or merged, but in the process, just give a quick introduction of what this is, it basically comes from some coordination with sovereign labs and how they're using celestia at the moment. We basically want to introduce a new blob type. So this is using, we're calling a v two blob type, which has a signer in the blob itself. And the validators basically authorize that the signer is correct.
00:09:52.150 - 00:10:37.274, Speaker G: And why that's useful is for many rollups, they want to check who actually created that blob as part of their fork choice role. And so this will be just a more efficient way of your loop. Whereas instead of doing a bunch more steps, you only have a couple of steps where you basically read off the blobs and know, without having to actually find the pfbs, which blobs are valid or authorized according to your fork choice rule. More details in the CIP itself. This does make a change, I guess most significantly to the shared version. So there'll be a new share version that's introduced. However, there is still backwards compatibility, so you can still submit the old blob types as well as the new blob types.
00:10:37.274 - 00:10:53.078, Speaker G: This is still early stages, probably slated for v three, so nothing in this more imminent future. Yeah, if you have any questions, head over to the forum. Happy to sort of talk to you about them.
00:10:53.166 - 00:10:58.434, Speaker A: Does it minimize words attack if people sign the blog from like a known signer?
00:11:02.214 - 00:11:51.416, Speaker G: I think this kind of depends on how it gets used because the validators themselves still don't know who the actual signer should be. That would be a different kind of system. So you could have a system where like the namespace has to have this kind of signer, and therefore the validators will reject any other block that doesn't have or blob that doesn't have a signer at the moment, they just authorize that the person who paid for those blobs is included, that address is included in that blob itself. So if you're a roll of full node and you go okay, I know that this address is the address or these set of address, there can be a list, there can be some other rules incorporated as well. I think sovereign have quite a complex way with which they have their fork choice rule, then it will list through, okay, it's part of it, I accept it. If it's not part of it, I can move on quickly. It makes it quicker when processing it.
00:11:51.416 - 00:11:57.534, Speaker G: I don't think if it fully eliminates the words attack. If you still have a lot of blobs in your namespace, you still need to process through all of them.
00:11:57.624 - 00:12:00.410, Speaker A: Got it. Yeah.
00:12:00.442 - 00:12:01.014, Speaker F: Is.
00:12:04.234 - 00:12:07.426, Speaker A: You still like the signers? Like the validator?
00:12:07.490 - 00:12:07.706, Speaker F: Yeah.
00:12:07.730 - 00:12:12.378, Speaker A: They might not know sign of it, but you just want to know that it's signed by a specific kind of team. Right?
00:12:12.426 - 00:12:13.054, Speaker G: Yeah.
00:12:15.714 - 00:12:17.014, Speaker F: That's interesting.
00:12:18.034 - 00:12:20.454, Speaker A: You block transaction types.
00:12:23.314 - 00:12:26.090, Speaker G: I can unmute myself and you can switch back if you want.
00:12:26.162 - 00:12:27.986, Speaker A: Wait, were you muted?
00:12:28.090 - 00:12:31.414, Speaker G: Sorry, I can mute myself and you can unmute yourself.
00:12:35.514 - 00:12:43.534, Speaker A: Alrighty. Does anyone have question for Callum about the proposal? Actually, I do, yeah.
00:12:49.994 - 00:13:01.484, Speaker H: This is commonly being requested by software labs, and I was very specific in working with how they actually work and listed there, like, what their loop is. I'm calling this like a loop.
00:13:01.944 - 00:13:02.600, Speaker G: Does a roll.
00:13:02.632 - 00:13:32.206, Speaker H: Do every block in relation to Celestia? And, like, can we reduce the amount of steps, the amount of complexity, the amount of, like, computation required, especially if they're doing a lot of things in serial circuits. I can imagine this is helpful for anyone that is using some kind of, like, enshrined sequences set up, which is kind. The general setup at the moment, most of them is like a centralized sequencer, so it makes it easier if you go, okay, that centralized sequencer has an address, and that's how I read blocks of the namespace.
00:13:32.270 - 00:13:33.114, Speaker D: Makes sense.
00:13:37.534 - 00:14:11.408, Speaker A: Any more questions for Colin? Shared commitment, because. Sign in it. What kind of upstream effect does it have? Yeah, Nashville. I don't know. It's just like, it's kind of choppy to signal from your side. Write your question in the chat. All right.
00:14:11.408 - 00:14:32.326, Speaker A: Okay. Gutul has another question. I get Nashki. Write your question in the chat and we'll go to our sovereign lab invited to these calls. Their attendance seems useful for future discussion on this IP. I think that makes sense, given that if there's something requested by them, we should definitely invite them. I'll make that as a note too.
00:14:32.326 - 00:14:34.254, Speaker A: Well, I can.
00:14:34.414 - 00:14:44.914, Speaker H: Yeah, we definitely have other channels which we're communicating with them. And if there is anyone else who this is relevant for in terms of as a roll up developer, than happy to solicit feedback.
00:14:49.174 - 00:15:01.270, Speaker A: Okay, so include sub labs in a few. Actually, can you add them on Telegram? Do you have Jen and Preston to this? To the telegram group.com?
00:15:01.462 - 00:15:03.398, Speaker F: Yes, yes, I'll add them.
00:15:03.446 - 00:15:03.950, Speaker A: I'll add them.
00:15:03.982 - 00:15:04.714, Speaker F: No worries.
00:15:06.364 - 00:15:12.944, Speaker A: Okay, so by Nashq, what kind of upstream effects have breaking the share commitment?
00:15:13.964 - 00:15:25.904, Speaker H: There won't be breaking up the share for a moment in the sense that it'll still be backwards compatible, but you can still have an old blog type that does not have a sign up, that will still create a blog commitment in the same way that was created beforehand.
00:15:26.404 - 00:15:28.540, Speaker A: The signer part will be empty.
00:15:28.652 - 00:15:42.164, Speaker H: Yeah, the sign part will be empty, but in terms of, it's more about actually the share encoding. And the share encoding is going to be included. So the proto encoding will include an empty string. The share encoding wouldn't be included, but that's reflected in the shared version.
00:15:44.584 - 00:16:21.732, Speaker A: Awesome. Any more questions? Well, either way, my ask for the CIP editor is like, let's review this whenever you're ready for it to be reviewed as a draft, not for review stage, just like an initial draft. And if you guys want to continue talking about it offline, there's a forum post attached to the PR, but we'll merge it, assign a number to it, and there is a forum post where you can, you know, push all kind of discussion on it.
00:16:21.828 - 00:16:22.504, Speaker C: Yeah.
00:16:25.534 - 00:17:17.694, Speaker A: Okay, I think we're nearing the end. Is there any other thing that. Oh, thank you. Is there any other thing that we should cover in this group regarding that hasn't been covered by the agenda? Going once, going twice. Okay, cool. So the TLDR is we got a new exciting CIP and we're on track for Lemongrass hard fork or as the core devs call it, v two. So just now waiting throughout this and yeah, we'll see you guys in two weeks time.
00:17:17.694 - 00:17:22.852, Speaker A: Take care of y'all.
00:17:22.908 - 00:17:23.700, Speaker B: Thank you.
00:17:23.852 - 00:17:27.904, Speaker A: Thank you. Bye bye. Thanks.
