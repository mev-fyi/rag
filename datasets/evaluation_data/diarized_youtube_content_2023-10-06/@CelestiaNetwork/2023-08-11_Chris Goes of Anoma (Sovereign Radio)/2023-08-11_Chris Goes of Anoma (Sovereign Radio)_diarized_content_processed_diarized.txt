00:00:03.940 - 00:00:05.028, Speaker A: Chris Anna.
00:00:05.124 - 00:00:06.692, Speaker B: Welcome to Sovereign Radio.
00:00:06.756 - 00:00:07.752, Speaker A: Thank you for having me.
00:00:07.806 - 00:00:10.810, Speaker B: Why don't you tell our viewers a little bit about yourself?
00:00:11.500 - 00:00:20.100, Speaker A: I'm Chris. I previously worked as the architect of the IBC protocol for the Cosmos project, and now I'm one of the co founders of anoma and Nemata.
00:00:20.180 - 00:00:28.656, Speaker B: Cool. I want to explore anoma first. Yeah. Tell us what anoma is, what it does, what it's known for.
00:00:28.758 - 00:00:39.952, Speaker A: What is anoma? So I think sometimes we are, like, perhaps renowned for not giving a very clear answer to this question. You're just smiling, knowingly at things no one will tell me. Right.
00:00:40.086 - 00:00:45.540, Speaker B: Although I will say this. Some of the things you said back then we didn't understand, and we're starting to understand a little bit better.
00:00:45.690 - 00:01:00.840, Speaker A: That's the goal, right? Yeah, we'll see. But to me, it often helps to zoom out on kind of the history of what's going on in the blockchain space. There's a lot of noise. There's a lot of technical noise, and a lot of the technical noise leads to great innovation, but it also makes it hard to see where things are going.
00:01:00.910 - 00:01:01.144, Speaker B: Yeah.
00:01:01.182 - 00:01:49.000, Speaker A: So to me, if you zoom out, there are kind of three stages of blockchain architecture, and the first two stages, I think we've kind of seen already. And we're in the phase of the kind of coalescence of the third stage. And the first stage is what I'm going to call scriptable settlement. And scriptable settlement really just started with bitcoin. Back in the days of bitcoin, no one thought about programmability, no one thought about intents, no one thought about solvers, no one thought even about privacy, because it was just like, what was this crazy thing? Was it even going to work? Bitcoin built, I mean, a surprising amount of like, there is a little bit of programmability in bitcoin script, right? But there's one asset, the thing that the network allows you to do fundamentally is send that asset around. Maybe their multi sigs are like a few different configurations, but it's know the asset and the protocol are kind of very tightly coupled. Right.
00:01:49.000 - 00:02:31.136, Speaker A: And the second phase is what I'll call programmable settlement. And really, programmable settlement only came about with the advent of ethereum. There were attempts before to build colored coins, different assets on bitcoin, to build kind of some services around the protocol. This was before the days of lightning just a little bit more, but they really never took off. It was clear that bitcoin, just by its design, treated all other assets and all other programmability built on top as a second class citizen. And it was very hard to get both the kind of technical security and the user experience that you need in order to actually build something people want. So ethereum came along and tried to build kind of full modular gas during complete programmability on top of a distributed ledger.
00:02:31.136 - 00:03:00.576, Speaker A: Right. It's the same kind of decoupling the asset in the blockchain a little bit. Right? So now people could make ERC, 20 tokens, they could make Dows, they can make all of these kinds of programmable interactions, but still the essential thing that was going on was settlement. So when Ethereum started out, at least you sent your transactions to the Ethereum Mem pool and they said what code the Ethereum ledger should run. Right. They specify a sequence of imperative state transitions. They say like, go to this contract, make this message call, add these balances, subtract these balances, then you're done.
00:03:00.576 - 00:03:20.820, Speaker A: Right? And over the years, when Ethereum started out, that was what happened. And I used Ethereum in some of the early days. And you sent your transactions to the Ethereum Mem pool? I think I ran like, the C plus plus implementation before it got deprecated. It had these really cool emojis on the command line output. Yeah.
00:03:20.970 - 00:03:23.464, Speaker B: Which one came after that? After C plus plus.
00:03:23.582 - 00:03:52.610, Speaker A: I mean, it was C plus plus for a while it was C plus plus ethereum and Parodies, which used to have this like, in browser wallet interface. I thought it was really cool. I was sad when they ditched that project. But over time, it's become clear that users don't exactly want to specify transactions. They want to specify, well, kind of what they want when they use the system. Let's just say it in an abstract sort of way, and there's a lot of in between. That happens often.
00:03:52.610 - 00:04:16.084, Speaker A: They need to find what we call counterparties. Right. They have one side of an interaction. They have asset A, they want asset B. They're looking for an asset which satisfies some properties, but they don't know who's got the asset. And one thing that's to me really compelling about these kinds of distributed systems is that potentially they can help us discover counterparties programmatically. Right.
00:04:16.084 - 00:04:32.444, Speaker A: This is very new. So you could always like even with Bitcoin you could say, oh, I want to do a two of two multi SIG to atomically swap some things, but I need to go troll around some signal groups, I need to go to Wintermute, I need to go to the OTC provider to find my counterparty. Right?
00:04:32.482 - 00:04:32.780, Speaker B: Yeah.
00:04:32.850 - 00:04:53.796, Speaker A: Counterparty discovery was still manual and counterparty discovery wasn't. I don't think it's so much that Bitcoin and Ethereum were wrong or anything like that. They were just trying to solve a different problem. The original scope of what blockchains were doing just involved settlement. It just involved ordering transactions on a ledger, executing them, maybe at most making the results available for verification by a light client. Right. But users want something else.
00:04:53.796 - 00:05:17.608, Speaker A: Users have what we call intents and the term intents I tried to look this up because I didn't expect it to become popular. Right. And I was trying to figure out, okay, where did you find I've used it for a little while, but I didn't attach any import to it. Right. I found the first time I used intent was in this short protocol description of Wyvern that I wrote.
00:05:17.704 - 00:05:18.200, Speaker B: Wyvern?
00:05:18.280 - 00:05:48.420, Speaker A: Wyvern, yeah. Wyvern is like a still existent ethereum. Dex protocol was used by OpenSea for several I mean, at the time, I just thought like, okay, well, why are people going to use know my friends who don't go to this conference? They will use the system because they want something. Right. Coordination technology is only useful if you want to do something with someone else. And just doing something with someone else already brings to mind this concept of counterproduct discovery. Right?
00:05:48.490 - 00:05:48.868, Speaker B: Yeah.
00:05:48.954 - 00:05:52.304, Speaker A: So back then I tried to build really what was kind of like an intense system on Ethereum.
00:05:52.352 - 00:05:53.860, Speaker B: So you built smart contract.
00:05:53.940 - 00:05:54.472, Speaker A: Right.
00:05:54.606 - 00:05:56.232, Speaker B: What was wrong with that though?
00:05:56.366 - 00:06:31.484, Speaker A: I mean, the Smart contract worked, but it just didn't do everything that was necessary. Right. So the Smart contract, I mean, the EVM is not really designed for intents. It's designed on the basis of Von Neumann VMs, just designed to execute programs sequentially and handle message passing between programs on a mainframe computer. Right. That was the original design imperative for these systems. And I would say it's possible to emulate intents on top of the EVM and it works, but it's a little bit clumsy because the EVM imposes this kind of strict ordering requirement.
00:06:31.484 - 00:06:49.764, Speaker A: So when you write transactions for the EVM, you include like the order of message calls. You say, start with this message, do this other thing, end with this message. And you can't give any. It's difficult to give freedom to the later system to make those decisions about ordering for you because usually what users care about is not global ordering.
00:06:49.812 - 00:06:50.312, Speaker B: Right.
00:06:50.446 - 00:07:04.700, Speaker A: You're paying for more than you want most of the time. You're paying these really high gas fees to get a global linear order of all transactions when most of the transactions tough state that doesn't have anything to do with each other. And most of what the users wanted potentially could have been satisfied in a different way.
00:07:04.770 - 00:07:06.156, Speaker B: So what comes next?
00:07:06.338 - 00:07:51.788, Speaker A: What comes next? That model, I mean, in our view, it will be this kind of intent centric world and an intent centric world really it tries to invert the problem. So rather than thinking about, okay, we have blockchains and building stuff on top of them, an intent centric view thinks about users and users have intents and how do we kind of the intents are like the boundary constraints of the system. Right. So I think sometimes it's helpful to think about it spatially. If you think about the intents, the intents are like the circle at the edges and the intents flow into the network. And in the network there are a lot of different they're operators, right? There are validators, there are solvers, there are gossip nodes. There are all these other nodes and the intents kind of constrain and specify what they can do if we describe them well.
00:07:51.788 - 00:08:22.232, Speaker A: But some freedom is also given to the operators to make some decisions. And there's a tricky balance here between giving the operators the appropriate freedom but also constraining that freedom because if they have too much freedom, then you see something like mev, right? Then you see that because the preferences of the operators are different than the preferences of the users, the users want they want as much of asset B as possible or they want at the very least like a fair swap price. But the Mev searcher wants as much money for them.
00:08:22.286 - 00:08:22.552, Speaker B: Right.
00:08:22.606 - 00:08:31.604, Speaker A: You see this kind of this divergence in preferences when the action space of these interior operators isn't sufficiently constrained.
00:08:31.652 - 00:08:34.570, Speaker B: And that, I'm guessing, is where.
00:08:36.540 - 00:09:03.088, Speaker A: I mean so we conceive of anoma as an architecture and let me define that by contrast. I think it will make it clearer. Sonoma is an architecture and not a blockchain. Now, we will at some point propose a genesis block for an asset which could be used by people. But it's not like the whole thing is built to be neutral. The Enoma asset doesn't have any privileged place in the system and we're not trying to get everyone to inherit security from Enoma or something like this. I see.
00:09:03.254 - 00:09:08.484, Speaker B: It's not like a hub and spoke things aren't locking into anoma as a right.
00:09:08.522 - 00:09:40.768, Speaker A: Right. In particular, I guess we envision the topology of the actual consensuses that you want to run as determined from the intents. So let me maybe give an example to make this a little bit clearer. So if I'm in Paris and I'm trying to buy coffee and I need to swap my maybe I have some atoms privacy in Cosmos, right. I need to swap my atoms to Euro to buy you know, my intent is to swap atoms to Euro to buy coffee and I need enough security for a coffee payment. Right. I don't need a lot.
00:09:40.768 - 00:10:13.204, Speaker A: So probably just by virtue of describing that clearly, the system can go look on my behalf and it can check, is there someone in Paris willing to accept Adams and give me Euros? And that doesn't require it never requires leaving Paris. So the latency with this interaction can be like 50 milliseconds and you don't need to pay for some kind of global security that you just don't need in this case. Now, maybe it's the case that someone, no one in Paris has Euro and wants Adams seems unlikely but possible. And then the system can figure out, okay, it needs to go search further.
00:10:13.252 - 00:10:14.376, Speaker B: And wider I see, to kind of.
00:10:14.398 - 00:10:16.196, Speaker A: Try and satisfy my intent.
00:10:16.388 - 00:10:28.450, Speaker B: I have a question about the three steps you just gave. There is also like a change in the way that the kind of technology is built. So there's the UTXO state model. Do you imagine this looking like the state model or is it something else?
00:10:28.820 - 00:11:02.344, Speaker A: Yeah. So maybe this is a little bit spicy, but I think UTXO versus account is actually kind of a false dichotomy. I think if you investigate, if you try and pin these systems down to their essence, make them as minimalist as possible or as modular as possible, you could say, and you defer the decisions about ordering to runtime, then you end up with something which is both and whether or not state is still segmented. Right. Like in UTXOs. But the segmentation of state is defined by the program and defined by the user and how they interact with it.
00:11:02.382 - 00:11:12.910, Speaker B: Right. Do you think of then the Enoma system being a hybrid as well, or will you need to affect that level, or can you just borrow it from what existed before?
00:11:13.360 - 00:11:27.360, Speaker A: I mean, I think you can emulate things on what existed. Know, you can emulate UTXOs on an account system. You can emulate account systems on a UTXO system. It just comes with some extra cost and it makes it more complex to reason about what's going on.
00:11:27.430 - 00:11:29.990, Speaker B: But for the intent centric, do you need a new model?
00:11:31.560 - 00:12:20.732, Speaker A: I think we need a new model, particularly as it concerns sort of security or like consensus security and information flow control, in that we need a way for users to specify these kind of the assumptions they're willing to make the consensus providers they're willing to use and the constraints they want to put on who gets to see what information as a result of their interaction, their intent, their interaction with the system. So I think that requires some more expressive systems which are capable of capturing these things. Some of the differences are maybe like implementation efficiency differences. Like you can emulate things on the EVM. Those costs matter because they translate to like, dollars. Right. If you're paying ten times as much gas because there's unnecessary ordering going on, then a whole bunch of use cases for your system just become feasible.
00:12:20.732 - 00:12:24.052, Speaker A: So some of the differences are just implementation and you could emulate it.
00:12:24.186 - 00:12:39.556, Speaker B: I want to ask you a question that folks might actually be asking. So you sort of mentioned Anoma and Nemata. Those are two different names, two different brands. What are each of those things? I think we have covered, in a way, what there two why are these two linked?
00:12:39.588 - 00:13:06.256, Speaker A: Right. Why are they linked and why are we doing so many things at once? Great question. So just as there are three phases of blockchain architectures, I also think there are kind of three phases of privacy in blockchains. I think we started out in the phase, really with the birth of Zcash, where privacy was tied to an asset and privacy was like you chose between the different altcoins that they used to be called, right. And some altcoin and the different altcoins were defined by the feature sets. Right.
00:13:06.358 - 00:13:09.644, Speaker B: And the feature set of Zcash and Monero was privacy.
00:13:09.692 - 00:13:16.420, Speaker A: Privacy, exactly. Zcash literally was a fork of the bitcoin code base, which added Zcash, which added privacy. They tried to change as little as possible.
00:13:16.490 - 00:13:17.110, Speaker B: Yeah.
00:13:17.720 - 00:13:58.444, Speaker A: And I think that credit to Zcash, where credit is due, ZK as it exists today, and all of these ZK roll ups, ZK systems, Anoma, Penumbra, Namata, none of this would exist for sure without the Zcash. But I think that that tie between asset and protocol choices has been very limiting because people have to choose they kind of have to choose both or neither. So either they choose to exchange their assets to Zech, the Zcash asset, and they can get great privacy, world class privacy on the Zcash blockchain today. But they have to hold that asset. And that asset is not necessarily what everybody wants for all interactions. Right. People want many different assets.
00:13:58.444 - 00:14:28.456, Speaker A: They interact with many different systems. They might want to use local currency and stuff like this. And Zcash just can't support that as it is currently designed and architected. So I think the kind of the second phase of privacy, which is the phase which we're still in, is one where privacy is service and things like tornado cash and Nemada and Penumbra fall into this phase. Right. So here, privacy is not tied to an asset. You can take your existing assets from the existing ecosystems and move them somewhere.
00:14:28.488 - 00:14:30.120, Speaker B: To get private environment.
00:14:30.200 - 00:14:40.464, Speaker A: It's a service. It's like you can take the things that you have and move them into a private environment which is still separate from the whole thing is kind of mostly transparent, mostly public, and you might.
00:14:40.502 - 00:14:41.856, Speaker B: Pay a small fee to do that.
00:14:41.878 - 00:15:00.944, Speaker A: Right, exactly. And you do have to choose between, do I interact with DApps on Ethereum right now? Or do I get privacy right now? You can move between them cheaply, but the cost is not zero. Right. So we're still in that phase. And I think the reason we're building the Mata is to help that phase progress further.
00:15:01.072 - 00:15:04.408, Speaker B: And what's that third phase is? It privacy from the ground up.
00:15:04.494 - 00:15:32.012, Speaker A: The third phase, we think, requires really a ground up re architecture. To me, honestly, I think it's hard to know how to play the memetics exactly. But privacy is not quite the right word. It's a very difficult word to use in the context of systems architecture because it doesn't actually describe a property of a system. It describes a property of an interaction relative to a person. Right. Like, what is a private system? A system where all data is private to everyone is useless.
00:15:32.012 - 00:15:37.120, Speaker A: You never want this. Why would you use such it's like a magic box. You put stuff in and you can never get anything.
00:15:37.190 - 00:15:53.608, Speaker B: I like this. It's sort of like you're seeing the nuance of that word. Privacy is used a lot. It means different things in different places. And yeah, there's this gradient. And so maybe what is Nemata's flavor of privacy? And I'm guessing that is in that third phase, actually.
00:15:53.694 - 00:16:06.844, Speaker A: Right. To situate things the third phase as we envision it is one where privacy is a default, you could say, or where users specify instead of specifying what they want to keep private, which is still true in a privacy as a service world.
00:16:06.882 - 00:16:07.084, Speaker B: Right.
00:16:07.122 - 00:16:17.992, Speaker A: By default, your things are public. You decide what to keep private. In a privacy as default world, users decide what to make public. Right. Which seems like that's how we interact in social contexts normally.
00:16:18.056 - 00:16:18.568, Speaker B: Totally.
00:16:18.664 - 00:16:22.208, Speaker A: You don't make everything public to all of your friends at once. You say specific, and it should be.
00:16:22.214 - 00:16:25.090, Speaker B: Made easy to make things public if you want to.
00:16:26.900 - 00:16:48.536, Speaker A: We think about what Enoma does is really programmable disclosure, right? Things start as private. They just start as local. Right. The information doesn't need to go anywhere that you didn't specifically tell it to. Of course you want to prove to specific parties that you've done specific things. You want to prove to the validators that your transaction is valid. You want to prove to your counterparties that they've been paid.
00:16:48.536 - 00:16:53.064, Speaker A: You want to prove to the auditor that your accounts are in order, and you should be able to do all of those things.
00:16:53.182 - 00:16:54.660, Speaker B: But what is Namata?
00:16:54.740 - 00:17:09.216, Speaker A: What is nemata? So, I think phase one, most assets are still transparent, right? There's a little bit of privacy as a service available, but it hasn't yet been normalized, let's put it that way.
00:17:09.238 - 00:17:11.920, Speaker B: Is that where Nemada is? That's where it's phase one.
00:17:11.990 - 00:17:39.608, Speaker A: Phase two. Phase two, nemata is trying to normalize privacy as a service and trying to kind of build some economic incentives around privacy that treat privacy as a public good. So privacy is a public good in the sense that it's non rivalrous and more or less non excludable, but also that the more people use privacy technology, the more privacy everyone has, for sure. Right.
00:17:39.694 - 00:17:43.880, Speaker B: But people are, in this case, like, in an environment, and they're going to opt into that space again.
00:17:43.950 - 00:17:44.392, Speaker A: That's right.
00:17:44.446 - 00:17:44.712, Speaker B: Okay.
00:17:44.766 - 00:18:11.344, Speaker A: That's right. And that will still be true until we reach phase three. But what we hope to do with Nemada is offer privacy as a service product that makes that opt in cost as low as possible. It's sort of designed to be one hop from the cosmos ecosystem, one hop from the ethereum ecosystem, and the privacy that you give to everyone by using the shielded pool on Namata is paid back, in some sense, in what we call shielded set rewards to people who are keeping their assets in the pool.
00:18:11.472 - 00:18:17.860, Speaker B: Going back, though, anoma and Pneumada, so both exist at the same time. How do they connect?
00:18:18.010 - 00:18:54.080, Speaker A: Right. So Anoma is like an architecture designed for the long term, and we want to be able to make the right long term design choices, because once you deploy a protocol, it's very hard to change. Right. See? Zcash, ethereum, IBC. Everything has its property. But we wanted also to provide some assistance in bridging from phase one to phase three of this sort of three phase privacy spectrum more quickly. Because if we end up there's this Dystopia, right, where blockchains become this transparent surveillance nightmare, where there's now this open intelligence market right on Ethereum called Arkham.
00:18:54.080 - 00:19:19.348, Speaker A: It's not only that Noma tries to solve the long term design questions, but I don't think this is enough. Right. We could solve the long term design questions correctly and like maybe the thing is live in two years and it's just too late. And everyone has decided blockchains are a surveillance nightmare and the regulators have imposed mandatory KYC on everything and we've just given up. Right. So we want to provide some incremental steps to help bridge them and Nomada.
00:19:19.364 - 00:19:24.324, Speaker B: Is that I see. And it uses the Enoma architecture?
00:19:24.452 - 00:19:37.096, Speaker A: It uses parts of it. Part of it, yeah. We wanted to ship the quickly and so Nomada uses tendermint, which Enoma will not use. And it uses a more it's not fully programmable. It just supports multi asset shielded transfers.
00:19:37.128 - 00:19:53.956, Speaker B: And these shielded rewards after Nomada, is there something like do you have any sense for what the next stage, what a third type of privacy product look like? Or network look, maybe you build it or would somebody else build mean?
00:19:53.978 - 00:20:24.984, Speaker A: I think maybe it's good here to make a distinction between the architecture and the primitives. So anoma the reason we've gone after this, like what is architecture? An architecture in some sense can be understood as a way of organizing things, a way of organizing components. So it's a way of organizing things like seruml's proof systems, but as an abstract primitive. Right. So the architecture is not tied to a specific one. So I think that we view our role as kind of helping with architecture and not optimizing specific primitives. I'm not a trained cryptographer.
00:20:24.984 - 00:21:14.430, Speaker A: I don't know what the newest thing in efficient zero knowledge proof systems is going to be, but I'm hoping to build an architecture that is future compatible with by abstracting things properly. So I think it will be a collaborative effort. Okay, but maybe one other useful in some sense a way of understanding what Enoma is trying to build for interoperability of privacy is like private IBC, which requires reorganizing a lot of abstractions. The way IBC was originally designed just didn't have privacy in mind. As an explicit design goal and as in many other things, it's difficult to retrofit privacy for sure. So we hope to be able to offer a way of arranging things that allows for the properties people want and then connect to all of these specific, often modular primitives that optimize for specific things.
00:21:15.280 - 00:21:26.930, Speaker B: I want to bring us back to the topic of intents. You just mentioned that and defined it earlier. But do you see an interaction between intense and roll ups and why?
00:21:27.540 - 00:22:16.364, Speaker A: Right, I think this is a good question and honestly, sometimes maybe it's just that I don't read everything. But to me roll up is this kind of fuzzy word where I don't always know exactly what it means. So I went to the Celestial Glossary earlier this week to make sure I had accurate up to date information and Celestia glossary said paraphrasing here something like roll up is a type of blockchain that ultimately interacts with and inherits some properties from a layer one at least data availability, which I think is a good definition. It's clear. But the part in that definition that is a little like a little fuzzy is a type of blockchain. What is a blockchain? So when we think about things in an intent centered world, we start with intents and we do what we call solving. Solving means matching intents.
00:22:16.364 - 00:23:00.240, Speaker A: So taking like A for B for A, you can match those together, but you can also do what we've called so far in our parlance, partial solving. Partial solving is where you take A for B and B for C and combine it into A for C. But I think this is a roll up. It's like an on demand roll up because you're doing sort of compositional sequencing just on demand from the intents when you need it, instead of like when you use an application on a roll up, it's fixed to a specific roll up. It's like you fixed some of the topology of settlement. You're going to send your transactions to this application, that application is going to sequence them and execute them, and then it's going to post data to Celestial ethereum, something like this.
00:23:00.310 - 00:23:18.550, Speaker B: Still a little lost on that connection point, though. You're saying you do this partial intent solve, but why not do that on the L one? Or what does that really have to do with the roll up environment? Is it because there's certain parts of its consensus have been kind of taken out?
00:23:18.920 - 00:23:28.200, Speaker A: I think maybe the advantage of such an approach is that it allows you to choose which roll ups to use dynamically based on the intent.
00:23:28.940 - 00:23:33.816, Speaker B: You're imagining multiple roll ups. Then in this case, this is not all happening in a single one.
00:23:33.918 - 00:23:35.704, Speaker A: No, it's like roll ups on demand.
00:23:35.752 - 00:23:36.124, Speaker B: I see.
00:23:36.162 - 00:23:57.036, Speaker A: It's like take two intents, A for B, B for C and just make a roll up. Make a roll up in the gossip system, really, it's completely ephemeral. But make a roll up, combine them to A for C and then you could view this. Even if you have some final settlement layer, you just do this until you get a transaction and then you post the transaction to the settlement.
00:23:57.068 - 00:24:16.724, Speaker B: I guess this is a really different way of thinking about roll ups because I always think of roll ups as like a full fledged blockchain where there's a team and it takes months to do something like this. So how would you be able to do it so quickly for a trade or for an intent search? I guess you call it intent matching.
00:24:16.772 - 00:24:48.016, Speaker A: Yeah, I think it's possible to standardize the protocol. So as I understand the space at the moment, it's not perfectly, but different roll ups want to make different specific choices. Like they want to build different instruction sets, they want to build slightly different VMs. They want to optimize their storage for such and such a purpose. And I think that's great. And we'll continue to see that kind of specific optimization and Enoma comes at this from the perspective of making things compositional. So let's say there's like, roll up software one with instruction set one, and roll up software two with instruction set two.
00:24:48.016 - 00:24:56.092, Speaker A: And when you articulate things as intents, you don't need the instruction sets to be the same. They could be different because you only check the results.
00:24:56.156 - 00:24:56.960, Speaker B: Okay, right.
00:24:57.030 - 00:25:11.684, Speaker A: So I can take intent one that was formatted in the way of roll up one, and intent two that was formatted in the way of roll up two. And then the intents need to be able to understand the results of execution. So there needs to be some legibility at the state layer, but they don't need to agree on the instructions.
00:25:11.732 - 00:25:19.996, Speaker B: Is this almost like a roll up on those roll ups that just lives there for a brief second? Does the combination and sort of spits back something?
00:25:20.098 - 00:25:20.700, Speaker A: Yes, exactly.
00:25:20.770 - 00:25:21.340, Speaker B: Okay, exactly.
00:25:21.410 - 00:25:24.380, Speaker A: It's like creating roll ups when you need them.
00:25:24.530 - 00:25:36.092, Speaker B: What that looks like to me, or what it sounds a lot like is a bridge between two roll ups that does something. But I feel like you're not thinking about I mean, you're calling it a roll up, you're not calling it a bridge.
00:25:36.236 - 00:26:07.948, Speaker A: Yeah, I mean, I think it depends on it hinges on if we look at the definition of roll up that Celestial Glossary uses, it says a type of blockchain. So whether you consider it a roll up or a bridge kind of depends on what counts as a type of blockchain. Right. And that depends also on what you view the essence of a blockchain is. Right. Sorry to dive into language here, but it's hard to like, let's call this thing that I'm describing, let's call this like parallel sequencer composition. Right? So we think of a lot about sequencing and roll up.
00:26:07.948 - 00:26:09.724, Speaker A: Plan and sequencers are making decisions about.
00:26:09.762 - 00:26:13.244, Speaker B: Ordering on each roll up individually at this time.
00:26:13.362 - 00:26:45.380, Speaker A: Right. And because intents don't specify ordering, because they're kind of ordering agnostic, or at most they constrain it somewhat, this allows for parallel composition. I think it might be helpful here to think about sequencing something that roll up folks talk about a lot and sequencers are making ordering decisions, but intents are purposefully agnostic to exactly how things are ordered. They specify at most constraints around ordering, but mostly they specify what someone has and what someone wants. Right. They specify preferences. And this allows for intents to be intents that were sent to different sequencers to be composed.
00:26:45.380 - 00:26:59.788, Speaker A: So we. Can say sequencer one takes A for B, B for C, composes it to A for C, and sequencer two takes C for D and D for A and composes it to C for A. Then sequencer three takes A for C and C for A and composes it.
00:26:59.794 - 00:27:10.688, Speaker B: To A, which is action both like it's basically combining them from that start point to that endpoint. Does it actually have to combine all the stuff in between to do that? Or does it sort of throw it out and just say, actually we're just.
00:27:10.694 - 00:27:19.170, Speaker A: Going to skip all of you, luckily with sort of ZK roll up basically, okay, we don't need to reprocess things.
00:27:19.860 - 00:27:23.664, Speaker B: So it's been processed. You're using that, I guess, right?
00:27:23.702 - 00:27:31.204, Speaker A: That's right. So when we do A for C, we've already figured out the stuff in between and when we do C for A, we've already figured out stuff in between and now it's just one more.
00:27:31.242 - 00:27:49.804, Speaker B: Step of kind of going back to that modular, all those roll up. I'm just trying to picture like there's a lot of roll ups all of a sudden. What does that do to the economics? The center of gravity of one of these things? Are we just getting further and further away? It has become more dangerous, lower security?
00:27:50.002 - 00:28:17.348, Speaker A: Yeah. I think it will be very important in this world that we come up with good ways of describing security to users and enforcing those descriptions at the system level. Right. So one danger just with or one maybe warning with the modular stack as it's kind of currently being deployed is that users are using these systems with a bunch of modular components operated by different parties and they are not going to understand the security assumptions of each other. Right.
00:28:17.434 - 00:28:29.016, Speaker B: In this case, in this kind of architecture, where is the center of gravity for data availability? Is it still in the middle? And also if you get further away from that, does it affect security or something?
00:28:29.118 - 00:28:51.520, Speaker A: I mean, I guess I would understand. Data availability in this architecture is polycentric that it's going to depend on what the data is like, what it means to users. If this is data, data has some value. Right. We could think of it as private keys that allow me to spend something or some kind of information about assets that we're deciding to keep on the ledger. Right. And what that value is, is not defined by the system itself.
00:28:51.520 - 00:29:23.944, Speaker A: Right. That's like defined by the relation, by what five atom means or something to the world. So it's not something that we can I don't think it's something that we can entirely standardize or that should live in one place. It depends on what it means, what the user's security assumptions are, how much they want to pay for it. Globally, replicated data is more expensive, how much they care about latency. If you want to typically want data to be available in the sense that you might want to be able to retrieve it. In order to retrieve it, you need to physically contact the person who's storing it, and that's more expensive if they're further away.
00:29:23.944 - 00:29:47.280, Speaker A: Right. Also, I think it matters for Resiliency that you don't suppose that there was some global war and the global Data Availability provider got disrupted or half their nodes went offline, or half of them are not allowed to respond to your requests anymore because of physical threat or something like this. It would be really bad if your community's data was all only stored on its global Data Availability provider. Right. So you always want, like, local backups and copies of the data.
00:29:47.350 - 00:29:49.184, Speaker B: So you do see it sort of fragmenting then?
00:29:49.302 - 00:29:58.100, Speaker A: Yeah, I see it more like you could also view it as, like, a distributed cache optimization problem with just additional constraints around security, like better tests, stuff like this.
00:29:58.170 - 00:30:08.520, Speaker B: Okay. I have a last question, burning question. You know, we talked about Pneumada in the context of these three stages of privacy, but is Pneumada a roll up?
00:30:08.590 - 00:30:48.676, Speaker A: Is Pneumada a roll up? Well, the definition of roll up includes something called L one, and I think maybe I have a slightly different view on what an L one is. I think people think of L one as like an architectural difference, that some things are L ones and other things are not L ones. But if you understand, L One is also kind of meaning that this is the final route of trust or something like this. To me, that's a decision that is observer dependent. It's, like, defined by the user not only and it doesn't have to be consistently defined by the user. It can be defined differently for different interactions. So when I'm paying for my coffee in Paris, I don't want to wait for the global L one.
00:30:48.676 - 00:30:56.104, Speaker A: Right. I want to wait for the Parisian fast forex settlement roll up right. Or something. That's my l one.
00:30:56.142 - 00:31:01.130, Speaker B: Right, okay. So would Nomada live on? Would nomada be an L. Four.
00:31:02.700 - 00:31:03.832, Speaker A: It could be an L one.
00:31:03.886 - 00:31:06.088, Speaker B: L2, I guess is the real question.
00:31:06.174 - 00:31:17.272, Speaker A: I mean, at the moment, it does not provide, like, full recursive state proof. It provides something, I guess, comparable to, like, a multi SIG and some L two S. Some things that call themselves L two S just have multi sigs.
00:31:17.336 - 00:31:19.792, Speaker B: Okay. You could bridge over to something.
00:31:19.846 - 00:31:31.510, Speaker A: Right, exactly. But in the future, Namata and certainly Inoma will have full recursive state proofs, and then you could say that anything is a roll up of anything else.
00:31:31.880 - 00:31:37.204, Speaker B: But would it be an L one? Instead? Things branch off it maybe both.
00:31:37.242 - 00:31:37.830, Speaker A: Right.
00:31:38.360 - 00:31:51.428, Speaker B: I can hear this. You have very much the mesh view. Right. Like, that it's not center with a lot of things coming out of it, but much more of, like, a mesh. A lot of pieces bridging together, data availability, living everywhere.
00:31:51.524 - 00:32:20.752, Speaker A: Yeah, I mean, I would say eventually I think we're using these systems for economic coordination and eventually I think the architectural topology will kind of be drawn to match the economic topology. And the economic topology very much is polycentric. Right. And when it's too central, we run into trouble. Then we run into global world government or American empire or other shenanigans that are difficult to deal with because there's kind of one center and everyone's competing for control over it. Yeah, I'd say.
00:32:20.886 - 00:32:36.330, Speaker B: But at this moment in time, don't you feel like in the blockchain world there's also sort of that there is like the winners right now and they won't necessarily be the winners forever, but it's like there's this period of lots of different options and then there's a winner, then there's lots of options.
00:32:37.260 - 00:32:55.464, Speaker A: Yeah. I mean, in some way you could view that kind of expansion and contraction as like a learning process or a selection process not that's perfect, but they're like they're periods of what we call bull markets or something like this you could call periods of experimentation. And a bunch of money is spent on stuff that's like not going to work, frankly.
00:32:55.512 - 00:32:56.748, Speaker B: But some of it some of it.
00:32:56.754 - 00:33:00.924, Speaker A: And you don't know until you try. Right. And then bear markets right now are this phase of contraction.
00:33:00.972 - 00:33:01.328, Speaker B: Yeah.
00:33:01.414 - 00:33:56.640, Speaker A: And the phase of contraction is I mean, it's painful, especially if you are not and there's lots of luck involved. There's skill and luck and not everyone's going to be both lucky and skillful all of the time. Right. But on the other hand, it's necessary to kind of not waste too many resources and just clarify what's going on because the group of people and the distributed consciousness are forced to come back together, kind of reckon with what are the relations between all these different experiments. So I think you see this now actually in this particular cycle there's this sort of like architectural convergence where you see it in ethereum DEXes, like uniswap cowswap, one inch are all basically building the same slight variations on the same thing. I think you see it in kind of the modular architecture and ten centric architecture approaching each other from different directions, bottom up and easier down. I think you see it.
00:33:56.790 - 00:34:09.908, Speaker B: I wonder if the experimentation has just moved somewhere else though. Maybe parts or are we only in an optimization phase where we've decided or sort of come together around ideas now we're optimizing those ideas? Or is there like yeah, I mean.
00:34:09.914 - 00:34:41.232, Speaker A: I think there's also a lot of these systems actually work in practice. A lot of the necessary experimentation is not technological or not solely technological. It's also cultural. And I think we're only at the beginning of that phase like dows mostly don't work. Right. But there's a lot of good experimentation and the good experimentation seems to be at least sometimes like congealing into replicable practices or languages or sort of patterns of organization that at least somewhat different than corporations. And that for someone's definition of work.
00:34:41.232 - 00:34:44.496, Speaker A: Work. So I think lots of that to come.
00:34:44.678 - 00:34:45.628, Speaker B: Thanks Chris.
00:34:45.724 - 00:34:46.192, Speaker A: Thank you.
00:34:46.246 - 00:34:49.790, Speaker B: Thanks for coming on Sovereign Radio and thank you all out there for watching.
