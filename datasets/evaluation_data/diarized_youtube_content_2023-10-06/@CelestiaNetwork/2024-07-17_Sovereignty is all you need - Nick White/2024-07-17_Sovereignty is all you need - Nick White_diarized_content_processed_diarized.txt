00:00:01.720 - 00:00:36.880, Speaker A: What's up, guys? Good morning. I'm stoked to be here. I want to talk to you guys about sovereignty. And I want to explain why sovereignty isn't some techno mumbo jumbo or some philosophical thing, but actually a really key feature for building powerful blockchain applications. And I think it's going to define the next era of blockchain infrastructure. So lately there's been no shortage of Fud about the modular stack. On Twitter you have people saying that modularity is just an excuse to issue more tokens, that there's more infrastructure, apps and l two s than there are users or even applications.
00:00:36.880 - 00:01:13.524, Speaker A: Meanwhile, in modular land, we are debating the definition, the semantics of what it means to be a sovereign roll up. And the result is that we get dunked on yet again. Mert says, no one gives a shit about your dumb nerd lingo in politics. If you're so smart, build something people want. Now, actually, I think that there's a synthesis here, which is if you think about this phrase, build something people want, the people are users. So who are the users when it comes to blockchain infrastructure? Well, the users are developers. So we should be building something that developers want.
00:01:13.524 - 00:02:01.094, Speaker A: And what I want to convince you of today is the fact that developers want sovereignty. And the reason they want sovereignty is because sovereignty is equal to power. And when you give developers sovereignty, they have the ability to build better applications compared to your normal standard crypto developer. So to introduce this concept, I'm going to borrow something from psychology, but adapt it to crypto. So instead of having Maslow's hierarchy of needs, we have the crypto application developers hierarchy of needs. And the idea here is that there's a core set of needs that a application developer has to have fulfilled from the infrastructure they choose to build on. And the infrastructure that fulfills these needs the best is the one that they will choose to build on.
00:02:01.094 - 00:02:29.058, Speaker A: So at the bottom here we have security. So this is about verifiability, censorship, resistance, liveness, all the things that you expect when you're building an application on a blockchain. If you don't have these things, then what's the point of even building web3, you should just build a web two application. Next up, you have composability, and this is about distribution and interoperability. So you don't want to build your application in a vacuum. You want to easily onboard new users and liquidity, and you want to interoperate with other applications people have built. You also have user experience.
00:02:29.058 - 00:02:58.468, Speaker A: So depending on the infrastructure it can either be slower or faster or costly or cheaper, and that impacts the user experience of your application. And finally, is developer experience. Developers are really lazy. We all know that they want it to be very easy to build and deploy and maintain their application. And I think that the. So far in the history of blockchain infrastructure, we've been focusing on solving these four core needs. And Solana, if you think about it, does an extremely good job of solving these four.
00:02:58.468 - 00:03:29.526, Speaker A: It has a very secure and decentralized validator set. It has really good composability, out of the box with the entire ecosystem, really good user experience. It's fast and cheap. And the developer experience in the SVM has really improved and is now the second most adopted platform after the EVM. But the thing is that there's something missing here. There's yet one last need that has not been fulfilled. And I think we'll define this next era of blockchain infrastructure, and that is sovereignty.
00:03:29.526 - 00:04:20.644, Speaker A: So by sovereignty, I mean specifically customizability and economic ownership. And this is where, of course, rollups and the modular blockchain stack come into play. So as far as customizability, what I mean is that you want to have the ability to control and customize the infrastructure stack. If you're building on something like Solana, all these decisions have been made for you that set certain constraints and define aspects of your application. When you build a modular and you use a roll up, you have a whole menu of different components that you can choose from to mix and match and build something that's really custom, tailor made to your application. And then when it comes to economic ownership, I mean, controlling the value that your application creates. So aside from just capturing the base level application fees, there's also the congestion or execution fees and mev.
00:04:20.644 - 00:04:55.468, Speaker A: And when you build a roll up, as opposed to a smart contract, you're actually able to capture those fees. And this is a very significant amount of money. The top l two s on Ethereum make millions of dollars in monthly revenue. And even if you look at Solana itself, it makes millions of dollars in daily revenue. And 90% of that is mev and congestion fees that actually could be, and probably should be captured by the applications that are generating it. And so rollups give you these two really powerful properties of sovereignty. But the issue is, of course, composability.
00:04:55.468 - 00:05:47.880, Speaker A: So we all know that, that there's a significant amount of fragmentation in the modular stack, because when you deploy a roll up, you're deploying it fundamentally a new blockchain, right? And so in order to interoperate and onboard users and liquidity, you need to go through bridges and bridging. Ux sucks and frankly it's just not very secure. And that's why l two s exist, right? The benefit of an l two is that you anchor into an underlying l one that has an ecosystem of users and liquidity and things like that that you can easily onboard. So you get better distribution and composability by enshrining this bridge in the l one. But the thing is that l two s are just fundamentally not fully sovereign. So there's actually more to the sovereignty story that we haven't covered yet. And that is specifically two things, technical independence and social independence.
00:05:47.880 - 00:06:30.880, Speaker A: And this is where sovereign rollups as opposed to l two s come into play and give you this additional power. So what do I mean by technical independence? Well, when you build a sovereign roll up as opposed to an l two, you make very minimal assumptions about the underlying l one. You just treat it as a dumb simple da layer that you post, you publish data and you retrieve data from. And this means that you have really minimal switching costs. You can just point your chain to a different layer in case that underlying l one that you built on fails to scale properly, so then it becomes more expensive. Or maybe that l one tries to extract more value. It gives you more power in this relationship of the infrastructure that you've built on top of.
00:06:30.880 - 00:07:08.230, Speaker A: And so you minimize your platform risk as opposed to an l two, where you are actually part of the application. Like the logic of your application, your roll up lives on the l one. There's a much tighter coupling. And so you can kind of think of this as a double edged sword, right? When you deploy an l two, you do get the upside of composability, but then you're sacrificing, you have greater lock in. That kind of limits your power in the relationship. And then next is social independence. So an l two is specifically like has the canonical chain of your roll up is defined by the bridge that's deployed on the l one.
00:07:08.230 - 00:07:44.634, Speaker A: And that means that you can't fork independently of the underlying l one. And forking via social consensus is actually a feature and not a bug of blockchains, right? It's all about like blockchains derive the legitimacy from the social consensus of the community that uses them. And when you build an l two, as opposed to a sovereign roll up, you are sacrificing that ability. And then next, social independence is also about the community, culture and brand, right? When you build an l two. You are associating yourself, affiliating yourself with the culture, community and brand of the underlying l one. You're an ethereum l two. Or a Solana l two.
00:07:44.634 - 00:08:27.882, Speaker A: Or bitcoin l two. Fundamentally, what that means is that you are inheriting and sort of tying into this pre existing community, culture and brand that kind of limits you from being fully independent and owning your community. When you're a sovereign roll up or a sovereign chain, that the community is yours and you have sort of this separation, this clean separation of your brand and your culture. And it sounds kind of silly, but we're actually already seeing this happen. For example, in the cosmos ecosystem, where there's a lot of chains that are built using the cosmos stack, but they specifically don't want to identify as cosmos chains. They want to identify just as themselves as Dydx. And so I think Antonio actually articulates this really well.
00:08:27.882 - 00:08:59.949, Speaker A: When he says apps should transcend any particular technology they are built on. He's talking about social sovereignty. But then the issue with sovereign roll ups is that now we've given up that composability benefit of l two s, and if this weren't solvable, then they might not be viable. But fortunately, there's a whole movement called chain abstraction that is solving composability and solving the fragmentation of different roll ups. And there's tons of different projects building. There's different bridge interfaces. They're bridging providers.
00:08:59.949 - 00:09:51.068, Speaker A: There are asset issuing chains like Noble. There are intense protocols. There are APIs like skip that kind of integrate this all into one easy user interface. And the promise here is that we can have this modular mullet. That's why I'm wearing the mullet wig today, which is that we can have this unified, seamless user experience on the front end, powered by chain abstraction that abstracts away all the complexity and fragmentation of the underlying modular blockchain backend. And so what's happening here is that modular blockchains and the sovereignty that they enable are teaming up here to provide developers with the power to build sovereign fat applications. And when I say sovereign apps are fat apps, what I mean, I mean that in three specific ways.
00:09:51.068 - 00:10:18.180, Speaker A: Right? The first is that sovereign apps are fat apps from an infrastructure perspective. Right. They don't just control their application logic like a smart contract. They have a say over every single component in the stack. So they're owning significantly more here. Sovereign apps are also fat apps from an economic perspective. They're not just capturing application fees, but they're capturing way more of this economic stack, the MEV fees and execution fees.
00:10:18.180 - 00:11:34.508, Speaker A: And last but not least, they're fat apps from a social perspective. So they own their own social layer and they own their own independent community and culture and brand. So really the vision of the modular blockchain stack at the end game is that we can create a world where every developer gets to have their own fat application, they can have as much power and their application can be super powered. And now there's two main criticisms to this vision that I'm laying out. The first one is that people often say, well, if you want to maximize sovereignty, why not build an l one with the tendermint and the cosmos SDK or maybe avalanche or whatever other toolkits exist to actually build an l one instead of a roll up? And the answer to me is that the trade offs are likely not worth it. You could argue that you have more technical independence as an l one because you have literally no, you fully own top to bottom your whole infrastructure stack, and you are not relying on any external protocol. Some people argue you have better customizability, but I kind of struggle to think of applications that you can build, as in a one that you can't build as a sovereign roll up or roll up, but you end up.
00:11:34.508 - 00:12:42.422, Speaker A: So those are the pros, which are minimal, and then you have this really massive cost when it comes to developer experience. So instead of something that would take you maybe a few minutes or a day to choose all these modular components off the shelf, plug them together and deploy it, now you're talking about something that is literally a multi year endeavor to bootstrap and launch your own consensus network, your own proof of stake token. And trust me, launching your l one is not a simple thing. And last but not least, when you're in l one, you sacrifice a specific aspect of composability with other applications, which is trust minimized interoperability. Only rollups that share a common da layer are able to have this advantage. So you're also kind of like distancing yourself from the rest of the blockchain ecosystem by being an l one. The next criticism of this vision is that modularity means that there are more middlemen and more extraction, because if you think about it, you have more protocols, each of which wants to take its own cut, take its own pound of flesh from the application and from the developer.
00:12:42.422 - 00:13:55.094, Speaker A: Um, but if, if you actually examine this, you realize that it's the, the truth is actually the opposite, which is that if you wanted to have, uh, more power and more ability to extract, um, and more leverage over applications. You would want to vertically integrate the stack and own as much of it as possible so that you could extract more, more value. Right. And what's happening in the modular stack is exactly the opposite, which is we are making a competitive market for each layer of the stack, such that the protocols that are going to win are the ones that provide the most value and extract the least value, the most developer and application aligned. And so it's really the opposite of what Toli is saying here. But then you might be wondering, okay, well, if modular chains are minimally extractive, then maybe they have no economics, like how are they going to be sustainable, or are they going to be valuable at all? And I think he addresses this really well by saying that even protocols that are minimally extractive can actually be very valuable as long as they produce their good and sell their good at scale. And this is really what modular blockchains are trying to do.
00:13:55.094 - 00:14:26.578, Speaker A: They're very thin protocols that produce a very specific service, and they try to solve that problem at massive scale. And so if we take Celestia as an example of this. Right, Celestia is a thin protocol to enable fat applications. It has very thin functionality. It just does data availability and consensus and tries to do that extremely well. And it's meant to be minimally extractive. So Celestia is trying to produce block space and make sure that block space is very cheap and abundant for everyone.
00:14:26.578 - 00:14:55.150, Speaker A: Right, but it wants to do that at maximum scale. We want to reach gigabyte blocks and even beyond. And last but not least, is the ethos of Celestia underneath. What does this mean? It means that Celestia is not trying to be the main character. It's trying to play a supporting role and elevate the developers and the applications built on top. It's trying to empower them as much as possible. Celestia is a thin protocol to enable fat sovereign applications.
00:14:55.150 - 00:15:44.110, Speaker A: And zooming out the three ecosystems we talked about today, there's a sovereignty spectrum that emerges in Solana. All the applications are minimally sovereign because they're meant to be built as smart contracts on a single global atomic state machine. So this is minimum sovereignty. Ethereum's vision, and even Emmanuel came and gave a talk yesterday, is that L2s are cultural extensions of Ethereum. So they do want to give you more developers more sovereignty, but there's a limit. They still expect you to sort of pay back and tie into the underlying social and technical layer of the Ethereum L1. And then we have Celestia where blockchains, roll ups, applications are considered sovereign communities in their own right.
00:15:44.110 - 00:16:44.070, Speaker A: And these differing visions result in very different technical stacks and solving for very different needs for the developers. And I believe that in a long term, prioritizing sovereignty in the platforms that give developers the most sovereignty are the ones that are going to win. And so we're faced as an industry with this choice, basically, of continuing to build monolithic infrastructure, continue to build smart contract applications that fundamentally limit the power of applications and developers and the communities that use them. Or we can build modular infrastructure and build rollups, sovereign rollups that give the power back to the developers and the communities and the applications where it belongs. And so, to me, the choice here is very clear, and that is that we should build modular and be sovereign. Thank you.
