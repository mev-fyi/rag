00:00:00.250 - 00:00:15.360, Speaker A: I found this thing that nobody else is seeing, and, like, I can capitalize on it. Once you have bots for the short tail, you know, you're doing uni arbs and stuff. I think that's where most people gravitate because the payoff is, you know, orders of magnitude higher.
00:00:16.530 - 00:00:24.334, Speaker B: GM GM, everyone. My name is Togachi, the host of scraping bits, and today I'm with Brock Smedley from flashbots. How's it going?
00:00:24.452 - 00:00:26.134, Speaker A: I'm good, Ben. Thanks for having me.
00:00:26.172 - 00:00:37.880, Speaker B: Yeah, thanks for coming on. We've had a few chats before, but it's good to have them recorded now, and I think this would be pretty good. I don't think a lot of people from flashbots do podcasts in general, right?
00:00:38.650 - 00:00:40.730, Speaker A: Yeah, it's kind of a mixed bag.
00:00:41.070 - 00:00:56.000, Speaker B: Yeah, some people do it, some people don't. But this is your first one, right? I'm hoping, yeah, I think it is. Let's go. Yeah. Just for the people that don't know who you are, then who are you and what do you do?
00:00:56.770 - 00:01:27.110, Speaker A: Yeah, so I'm an engineer at flashbots. I've been here for almost two years. So started in the MeV guest days. My official title is searcher experience engineer, but it's like, completely made up. So it's basically. Yeah, it's like mostly user experience and prototyping for new products. So I've worked on a lot of different projects at flashbots, just kind of go between teams and help out and just do fun shit.
00:01:27.690 - 00:01:30.220, Speaker B: What were you doing before you joined Flashbots, though?
00:01:31.230 - 00:02:13.720, Speaker A: Yeah, before I joined flashbots, I was working at a company that I joined right out of college, and I was hired to work on a project called Forte. We were like a little development shop in a small college town in Oregon. So we contract out to Forte and whoever else would hire us. So I worked on that for like a year and a half. If you haven't heard of forte, it's like NFT management platform for various blockchains. So their application is directed at games that want to do, you know, collectibles or game items, know, stuff like that. But, yeah, I worked on that for a year and a half.
00:02:13.720 - 00:03:03.110, Speaker A: And in the last few months that I was there, I got connected with Santiago, who was working at open Zeppelin at the time, and they were looking for somebody to help out with a white hat mission. So somebody had some tokens stolen, and they had some sitting in the wallet that the scammer hadn't taken yet. So they wanted somebody to help out recovering this and Santiago was saying I should use flashbots to do it. So he was, like, the first one to introduce me to it, and he had done a couple of these before, so he showed me the ropes and reviewed my code. We pulled that rescue off and wrote a little blog post about it, shared it.
00:03:03.180 - 00:03:07.720, Speaker B: So how did you really do the rescue, though, because. Was that, like, your first time ever doing that?
00:03:08.330 - 00:03:09.478, Speaker A: Yeah, it was.
00:03:09.644 - 00:03:13.020, Speaker B: What was that experience like? I don't think a lot of people get to experience that.
00:03:13.870 - 00:03:59.420, Speaker A: Yeah, it was really cool. I hadn't been exposed at all to flash bots and mev or private mempool technology in general, so I was very used to this mempool paradigm, and I was, like, racking my brain, like, how do we pull this off? And then Santiago had a script that was basically done, just had to be refactored for the specific tokens and account that we were. The. The coding bit wasn't very hard. It was more, am I doing this right? And I hadn't read the API docs or anything. I was just kind of, like, going off of this script and probably lucky. I've seen people try rescues with no preparation and lose, like, millions of dollars.
00:03:59.420 - 00:04:29.330, Speaker A: Yeah, this was only, like, seven grand, so the stakes weren't super high. I had a team of three that I was working with, and we were all just, like, reviewing the code and just trying to read as much as possible to make sure that we knew what we were doing. And then it was actually April 1 when we executed the recovery. So it was like, great time. Great time for jokes.
00:04:31.510 - 00:04:33.678, Speaker B: We got your money. April fool.
00:04:33.774 - 00:05:06.240, Speaker A: Fools. Exactly. We ran that. Everything went well. So I posted that blog post about it and then started talking to the, you know, Scott was, like, leading the hats, and, like, Robert and Alex were kind of, like, hanging out and helping connect everybody. So I got a few more cases and started making some money on the side. Doing that.
00:05:08.450 - 00:05:10.240, Speaker B: Portion of saved or something.
00:05:10.690 - 00:05:48.234, Speaker A: Yeah, I was taking, like, 10% of whatever was recovered, so pretty decent money. Just doing, like, small four or five figure rescues. And then, yeah, I just started getting really into it. I started reading more about Mav and getting really excited about that. So I talked to my employers, and I was just like, you know what? I'm just going to quit. This stuff is just too cool. And we're not taking this as seriously as I would want, because I was like, we should do more of this at my company that I was at.
00:05:48.234 - 00:06:04.106, Speaker A: And they were like, yeah, there's just not a lot of money in it. And I was thinking more along the lines of building infrastructure to support white hats. And even supporting white hats, I think, was being a greenhorn. I was thinking pretty small scope.
00:06:04.298 - 00:06:26.678, Speaker B: Yeah. Being in the early days, it's always small scope until you kind of learn a lot more about the space, and then you get to see what's missing, what's possible, et cetera. You're like, oh, wait, I can build something here, be like, big help. But I think that usually stems from needing it yourself and then eventually building it. And if it was helpful for you, it'd probably helpful for someone else, right?
00:06:26.764 - 00:07:00.354, Speaker A: Yeah, exactly. Yeah. I just started building in that space. I quit and just started doing white hat, like, full time to pay the bills. And I remember the day I quit, I sent Robert Burt Miller a message on Twitter, or maybe it was discord, because we're still using discord a lot at the time. And I was just like, yo, I quit my job and I want to work for flashbots, but give me, like, three months to read and experiment and just enjoy being unemployed for a little bit. And then I think it was way more than three months.
00:07:00.354 - 00:07:26.426, Speaker A: It was like six months went by and I hadn't reached out. And then it's like, out of the blue, Scott sent me a DM. He's just like, hey, you still want to work for his head rent free? Yeah, right? I was like, yeah, I was really enjoying not working, but I was like, this is going to be dope. I'm coming.
00:07:26.608 - 00:07:29.558, Speaker B: And then, what was, like, the first things you really did in flashbots?
00:07:29.654 - 00:08:11.606, Speaker A: Oh, yeah, let me think. I think one of the first projects that I was working on that didn't go anywhere, but I thought was pretty fun was like this. It was like a GUI for self recovery of assets, so you could do your own white hat rescue. One thing I noticed is most of these people who get scammed, they do so by sharing their private key with somebody who's not looking out for them. So then when they come to us, we're like, okay, we can help you. Just give us your private key. Scammed again? Yeah, man, this is so antithetical to our whole mission.
00:08:11.606 - 00:08:21.680, Speaker A: So I tried putting that together, but it turns out these people who share their private key so willingly, they're pretty willing to share it again. They don't care.
00:08:22.370 - 00:08:27.598, Speaker B: Lost so much. It's like just a gamble again. May as well make it all back.
00:08:27.684 - 00:08:44.386, Speaker A: Yeah, it's funny, man. At flashbots, we emphasize so much the importance of privacy and security and self custody, and all the great things about decentralization it turns out most people don't really care at all. They just want it to work.
00:08:44.568 - 00:09:15.950, Speaker B: Yeah, real. I think it's kind of interesting with flashbacks about decentralization, because what we're seeing now is only maybe like five or four or even free sometimes, depending on how many their percentage owned, but there's only like around five or less builders and maybe like three or two relayers that are really controlling the entire network. So is it really decentralized?
00:09:16.770 - 00:09:43.430, Speaker A: Yeah, it's less centralized for sure, but, yeah, true decentralization. I think what we're seeing now is the big meme right now is geographical decentralization. Even if you have five separate actors or agents, and they're all in city, like, if somebody takes out the power grid in New York City or something, the network is down for the globe.
00:09:46.810 - 00:10:12.990, Speaker B: Rsync and Titan are both in the UK, and they're the biggest ones. Titan had like 40% at one point, and it's always a competition between them. Asking is always at like 25%. Blocks being built constantly throughout this year. And it's like, oh, okay, so like 75% of the network belongs to them. They're building all the blocks.
00:10:13.430 - 00:10:14.226, Speaker A: Yeah.
00:10:14.408 - 00:10:33.110, Speaker B: And it makes you question, why would someone choose to send their bundles to those two over flashbots, which is like the original creators, and have this vision of decentralization? Right. Why would someone want to choose to send their bundles to flashboards?
00:10:33.530 - 00:11:08.162, Speaker A: Yeah, for sure. It ties into the same theme that people don't really care about the privacy guarantees. I think people are already pretty used to their information being public on Ethereum and just using the mempool. I think most people want to do is really multiplex across all builders and just say, whichever one of you puts me in a block fastest, that works. I don't really care if it's like flashbots or like, ofac resistant or whatever. It's just like, get it on the chain. That's all they care.
00:11:08.162 - 00:11:08.820, Speaker A: Yeah.
00:11:09.750 - 00:11:37.930, Speaker B: People just think about which builder they send it to if they're in Mev. Really, it's not really like the average user is like, in this market condition, I should send a titan or this one due to Rsync. But I think it should be like a standard, though, for people to send private transactions anyway, because it's just a metamask, because everybody just gets wrecked when they go through uniswap.
00:11:38.750 - 00:12:20.410, Speaker A: Yeah. This is, I think, a big reason that a lot of people are focusing on intent architecture right now. Cowswap and matcha and some others, EIP 712 is basically a form of intent, but it's strictly centralizing. You have to have basically metamask sign the message and give it to the web client, and they're responsible for delivering it via their back channels to whatever network of executors. The user doesn't get any say in where that signed message actually goes.
00:12:20.560 - 00:12:24.010, Speaker B: Oh, yeah. It's pretty big risk.
00:12:24.830 - 00:12:34.750, Speaker A: Yeah. But obviously, I think the biggest reason people actually care about privacy is just front running protection.
00:12:35.330 - 00:13:15.210, Speaker B: Oh, yeah. You just get completely screwed because especially when you're doing amms, right? Like on sushi or uni or any of those exchanges, or even just trying to be first into a pool and like a master chef pool. Like when something launches, a generalized front runner just sees profit. Steal transaction. Your transaction fails, or you just get completely wrecked from slippage, and they don't even know they're my tokens, not what I put in. Turns out Garrett from subway came to give them a little visit.
00:13:17.870 - 00:13:20.570, Speaker A: Yeah, man. All vinegar.
00:13:20.930 - 00:13:34.900, Speaker B: Yeah, real. And you guys recently changed your builder to produce the most profitable block. Instead of guaranteeing, like, top of block execution in respect to gas. Why did you change to that?
00:13:35.510 - 00:13:45.138, Speaker A: Yeah, so I think the big reason, and I don't work on the builder directly, just the disclaimer. So I don't have the direct insight into the.
00:13:45.224 - 00:13:45.762, Speaker B: Okay.
00:13:45.896 - 00:14:14.046, Speaker A: But what I understand is the general idea is that to win in the block space market, you have to win blocks. Switching to a max profit algorithm simply wins more blocks. If we continue to guarantee top of block execution, generally we would lose out on more blocks. Landed. Yeah, you just wouldn't get aggregate more included more blocks. So Max profit does a better job of that.
00:14:14.228 - 00:14:23.994, Speaker B: And this is because I'm pretty sure it's the relayers that select the most profitable block. Right. Or is it the validator? I can't remember. Yeah, I think relay.
00:14:24.042 - 00:14:40.402, Speaker A: Yeah, technically it's the relayer. I mean, the relayer doesn't really have any. It shouldn't have any custom logic to block, but it could. If you're running a MeV boost relayer, then it's just going to choose the most profitable block.
00:14:40.466 - 00:14:42.390, Speaker B: But what if they did do custom logic?
00:14:44.490 - 00:14:48.810, Speaker A: I think we have that outlined in, like, a code of conduct or something.
00:14:48.960 - 00:14:55.866, Speaker B: Code of conduct? I mean, it's not like you're going to audit their relayer, though. How would you ever know?
00:14:55.968 - 00:15:16.420, Speaker A: Yeah, I think if a relayer was doing something mischievous, it would be obvious we wouldn't have to audit it. I think we would probably see it much sooner than we would have to then would require an audit. There would be an obvious.
00:15:18.950 - 00:16:14.206, Speaker B: You know, if they were in Afghanistan or some know, or somewhere where you don't have Afghanistan, probably like Russia or North Korea, and they've just like, they're the main relayer, right? Let's just say like ultrasound money is in North Korea and blocks are out in Russia. That's like 50% of all the blocks being, I guess, censored in some way. And if they made partnerships with a builder that's got the most percentage of blocks being built from them right now, Async is 34%. Then Beaver build is like 23%. So if that number one relayer paired up with the number one builder, or like, I don't know, there's some conglomerate and all teamed up somewhere. They basically own the entire network to some extent.
00:16:14.318 - 00:16:30.250, Speaker A: They own the builder market. Right. But as a validator, you still have the choice of which relays you connect to. So if you know, as a validator, you know that they're doing that, then you can just disconnect the slot auctions.
00:16:31.150 - 00:17:22.362, Speaker B: You did a write up on them. And correct me if I'm wrong, it seems like you could remove the relayers completely. And then the block builders basically proposed the validators or something similar to that. It's like a terrific step in the right direction in terms of removing entry requirements to participate in this market, because no normal person is going to spin up a relay and maybe spin up a builder at the same time. Even just spinning up one of them is an infrastructure problem. And you need money to host a server, and you need the expertise to run one of these things and make it optimized so people use it. So I think it does lower the entry requirement, and so it makes decentralization much easier, but we'll see how that goes.
00:17:22.362 - 00:17:39.278, Speaker B: I think that would be a pretty cool upgrade, though, completely removing the relay. So there's no, what's it called? PBS proposal builder separation. So I think that would be pretty cool. But who knows how that's going to kind of play out.
00:17:39.364 - 00:18:32.720, Speaker A: Yeah, I mean, it's like uncertain to me when that can happen. But yeah, the relay, as I understand it, was always designed to be an interim sort of role. It's really a bootstrap mechanism to connect, to reduce the trust assumptions between builders and validators. You need some sort of intermediary to basically hold the block builders accountable for delivering the best block and hold the validators accountable for choosing the best block. That's what the relay does. And if you could put that into code, that's basically when people are talking about enshrining PBS into Ethereum. That's sort of the goal there is replace it with some protocol level code.
00:18:37.650 - 00:19:06.486, Speaker B: Okay, that makes sense. I wonder what would happen, though, if you did actually remove the relays. That'd be hard, I feel like, because it's kind of every, every builder is aggregated to the relayers, then that's kind of determining what to send out and what to stop, et cetera. But if you just had builders, I wonder how that would work. I guess I would select all of them by default. But then you could select a certain amount to accept.
00:19:06.598 - 00:20:05.434, Speaker A: Yeah, I think if you had builders and validators directly connected, most likely validators, they would set up some sort of mev games you send to a specific builder so that your mev transactions are landing in their blocks. And then you only ever choose their blocks that give you mev. And that's not the most profitable block for the network, but it gives you the most money because you have a dog in the race. Eventually every validator would catch on to that and you'd have basically the same problem that we had with the mempool. Before it was validators, it was miners, and miners were doing mev in miners? Yeah. You receive all the transactions from the mempool and then you're building blocks locally, so you're like injecting mev all over the block. I think it would be like the same situation if you remove the relay.
00:20:05.482 - 00:20:19.954, Speaker B: How does the block space market kind of work? Because I think a most recent thing that you mentioned was in the post, the articles, is you can actually sell block space and people can buy that up and use it. Is that correct?
00:20:20.072 - 00:20:56.046, Speaker A: Yeah. I think that's Sort of like a high level abstraction way to explain it. When you say, I'm selling block space, it's just like saying I'm a builder and you can give me transactions and I'll put them in the block, you pay me a fee, and that's just like your gas fees. It's like just an abstraction that makes it easier to talk about, but it's not like, oh, here's this block space that we're auctioning off. It doesn't feel like that when you're using it. You know what I mean?
00:20:56.148 - 00:21:22.838, Speaker B: Yeah. In terms of that, where you're like selling in an auction, in that kind of environment, the person with the most money always wins. And so what if some HFT firm, some billionaire, came in and just always bought up the block space? Now he's just kind of cornered the market. Maybe Jared does that. Maybe he's just like giga rich. I mean, he is now actually like five mil a month or something. Or 15, if I remember the.
00:21:23.004 - 00:21:29.222, Speaker A: Yeah, I heard some crazy figures. I saw like a million dollars a day. I don't know if that's true, but maybe.
00:21:29.356 - 00:22:11.510, Speaker B: I think it was true, actually. But it seems like that could be a possibility. Or a searcher teams up with a builder, and then the builder teams up with a relay, and now you have the entire chain of entering the block, producing the block, sending the block, like, the most profitable one, and they don't have to make profit to get the most percentage. You could just lose money and still outbid everyone else that are trying to make money. So you purposely gain percentage by losing money. And billionaires could definitely do that. That's like a whole nother problem in itself.
00:22:11.510 - 00:22:14.086, Speaker B: And how do you solve these?
00:22:14.268 - 00:23:09.734, Speaker A: Yeah, well, I think that's not a huge problem just because of basically, just look at the incentive structure. If you're a billionaire and you want to buy up all the block space for whatever, okay, you can do that. And you can fill every block with whatever you want. There's actually a pretty funny example that I think it was Mev refund on Twitter, or maybe repost like R-I-P-O-S-T-E-I think he was screwing around with mev boost on Gorely, and he managed to send a block and take up the entire block, and it was completely empty. And it just had, like, a graffiti on the block that just said, this is my block. It was hilarious because it was, like, just a joke, but it was a proof that you could completely own a block if you really wanted to. You just had to have enough money.
00:23:09.734 - 00:23:53.314, Speaker A: He had enough gorely east to do it. It was like twelve eth or something. But it's Gorley. Yeah, no big deal. But if you wanted to do this on main net, you'd have to have a really good reason to do so, because if you're a lone actor, you have all these mev rich blocks to compete with. And I think the theory or the principle is that the more order flow you have and just the more traffic you're processing as a builder, the more valuable your blocks are going to be just because you have more opportunities for me. And so to compete with all of that mev extraction and still produce the most profitable block.
00:23:53.314 - 00:24:25.410, Speaker A: And this is like assuming that you stick inside Mevboost. If you just ran your own validator solo, then, yeah, you could just do this. Without having to worry about Mevboost and just propose your own blocks. But the opportunity would be much more rare to land every block you'd want to be in Mevboost. And so then you'd have to subsidize every block. And the cost is so high, it's like, for what? What are you doing? If there's a really good reason and it makes you money, like, okay, sure, but good luck. Like competing with all that Mev.
00:24:25.410 - 00:24:28.350, Speaker A: Still profitable.
00:24:28.510 - 00:24:42.520, Speaker B: Yeah. On the topic of order flow, what can an RPC provider do to monetize the order flow? And how valuable do you think overall order flow is or will be in the future?
00:24:44.010 - 00:25:41.398, Speaker A: Great question. Yeah. RPCs are basically the entry point users, and so controlling that is a pretty important position of power. As an RPC, you essentially have full control over the transaction and the signature. So signed transaction, and you get to choose where it's sent after you receive it. So whether that's faithfully sent to a builder, or whether it's decoded and mined for mev information and discarded, it's like up to you, because there's no way of anybody else knowing what happened to it because the message was delivered off channel, never touched the chain, never was gossiped. So as the RPC provider, you have basically complete control before it lands on chain.
00:25:41.574 - 00:26:00.000, Speaker B: Yeah, like the infuria. And forget the other ones I haven't used in so long. Alchemy. Yeah, these people are basically what all the normies are using, all the nonmev people. It's like the entire space. Right. Or whatever metamask is connected to as well.
00:26:01.970 - 00:26:02.494, Speaker A: As well.
00:26:02.532 - 00:26:14.930, Speaker B: Yeah, it's just like you have utter then. You know, I imagine these RPCs would also track your ip. I know metamask does that. I recently found out all my anon wallets are no longer anon.
00:26:16.630 - 00:26:17.940, Speaker A: They never were.
00:26:18.470 - 00:26:23.302, Speaker B: Yeah, they never were. It's like that meme, the astronaut in the space.
00:26:23.436 - 00:26:23.878, Speaker A: Yeah.
00:26:23.964 - 00:27:28.746, Speaker B: If I were to run a node, theoretically, not saying I would, but it is a possibility to track every ip and put everyone in a database to some degree, and being like, okay, what's this address doing? And it also makes you wonder if people talk a lot about hacks, and obviously the entry to do a hack is sent to an RPC, or spin up your own node and gossip through that. But there's always going to be the block builder you have to send to, at least. So I think in terms of security in the space, do you think app security would be less important than system security or network security in the terms of live detection and even like forensics as well. If you're tracking ips and you see like a hacker, you could find them irl them, unless they use a VPN and Tor or something. But I think it'll make it like one step easier in a sense.
00:27:28.848 - 00:28:14.854, Speaker A: Yeah, I think for sure it makes it one step easier. I mean, if you're a hacker, you're most likely never going to leak your ip like your actual IP, but it's the right direction. Yeah, but I've heard a lot of projects doing inline detection. What I mean is say there's a module in metamask that simulates a transaction, and you tell it, or it analyzes or figures out somehow what isn't intended and what's actually happening, and they're like, do this detection in line before you send the transaction, which I thought was pretty cool, I think. Yeah, there's a lot of things we can do at that app layer.
00:28:14.902 - 00:28:52.920, Speaker B: Oh yeah, the wallets simulate and all that stuff. Yeah, I think one of them was like the fire wallet. I think that one was kind of doing that stuff of simulating and decoding like call data and whatnot, or like the contract. But I think the ultimate wallet would have to be able to simulate, even do their own exploit kind of, or vulnerability detection on the contract, et cetera, because people get wrecked from like rug pools and whatnot. Anyway. Yeah, there's a lot of infra awaiting, it's just definitely who's building it.
00:28:53.370 - 00:30:05.214, Speaker A: Yeah, I think a lot of people are building wallets that address this in the pre chain context. I've heard some pitches about systems that analyze private mempool data and look for opportunities that arise in multiple transaction contexts. I'm explaining this, bad opportunities that come out of multiple transactions. If you have a bundle and the exploit doesn't trigger until the third transaction, you wouldn't be able to see that in the single transaction, inline sort of thing, but you could detect it as like, okay, the searcher is exploiting this user by front running or back running them somehow. But then that introduces a whole other host of security concerns, like a bot that just reads the private mempool all the time and aggregating data for its AI processor, constantly monitoring it. Somebody pitched that to us, and it was a cool idea in principle, but we were like, hell no, that's not going to happen. Just going to be collecting all this data and shipping it off.
00:30:05.214 - 00:30:07.040, Speaker A: No, we can't do that.
00:30:07.970 - 00:31:16.274, Speaker B: Yeah, it's interesting, because I think a big thing that people are building now is like live transaction kind of hacks, like detection and prevention, kind of like insurance protocols. That's kind of what I see in the cybersec area of automation. It's just they pair it up with AI, they train it on like, okay, what's the normal hack look like? And what is kind of out of the, like, Mev is technically hacking as well. Technically, it's like interchangeable words, in my opinion. I guess you're not hacking to a degree of millions, but you can argue the guy that did the mango exploit was just doing like Meb, right? But since it was so much money, they're like, oh, it's a hack or an exploit, but everything else is kind of an exploit to some degree. You're just using the protocol, but that whole kind of philosophy is, I guess, controversial. I've spoken to a few lawyers about it and it's kind of a gray area.
00:31:16.274 - 00:31:21.240, Speaker B: I think sandwiching is like illegal in the US now, or has been for a bit.
00:31:21.850 - 00:31:57.810, Speaker A: Yeah. I think in traditional markets, I don't know if they've implemented any official laws for sandwiching on chain, but in the traditional finance context, it's definitely illegal. And I think where most people draw the line between hacking and Mev is just based on a degree of exploitation. The mango guy, he dumped a bunch of money into a pool specifically to manipulate the price so that he could execute something else. Obvious market manipulation.
00:31:58.230 - 00:31:58.594, Speaker B: Yeah.
00:31:58.632 - 00:32:26.410, Speaker A: Which is there's no rational reason aside from doing the hack to make that kind of trade. It's not something that somebody would just do because they're trading. It's like clearly market manipulation. But if you're backgrounding somebody because they caused the price shift, and you want to do a little arb, that's not manipulative at all, it's like corrective. Yeah, I think it's a good framing for that debate.
00:32:28.190 - 00:32:51.380, Speaker B: I mean, flashpots could definitely just collect data in general from the private mempool and even maybe unethical, but it could work towards advancements of, I guess, hack prevention, because that's ultimately the reason why big players are not coming in, because there's the inherent risk of hacks. But then it's a question of secure code. Right?
00:32:51.910 - 00:32:56.900, Speaker A: Let me ask you, what do you think about the debate of code is law?
00:33:00.970 - 00:33:24.702, Speaker B: I don't really have an opinion on it. I kind of like have taken my way outside of all of the building and stuff in cybersecurity. It's just like, well, I don't want to hack, but I want to be able to find an exploit. And that's the kind of fun of know coder's law. Exploiting a protocol is like taking money that's just out in the open.
00:33:24.756 - 00:33:25.214, Speaker A: Right.
00:33:25.332 - 00:33:51.718, Speaker B: And you can compare that to a wallet on a bench. If you're in the Middle east, you don't want to do that because legal implications, right. So you can look at it from that perspective. But other people also say it's like, oh, they built it, they should have known better. But the same as kind of with the wallet on the ground, you're going to take this guy's id and his credit card, he should have known better, right?
00:33:51.804 - 00:33:52.294, Speaker A: Yeah.
00:33:52.412 - 00:34:05.100, Speaker B: When you put it side by side, it seems obvious. Yeah, sure. That's the reality of it, but it doesn't mean it makes it okay to take all the money in it.
00:34:05.550 - 00:34:32.626, Speaker A: Yeah, I agree. Yeah. Ethically does make sense. And I think just also, just from a design standpoint, from a software designer's perspective, that's a shit take. There's no such thing as perfect code, and I don't think there ever will be. It's just not something that we should strive for. People are going to make mistakes and they're going to write shitty code, and that's the way it's always been and I think that's the way it's always going to be.
00:34:32.626 - 00:34:38.174, Speaker A: You can make your code better, but it's never going to be perfect and you're never going to find every exploit.
00:34:38.302 - 00:35:38.330, Speaker B: There's human error, right? And that would never be gone as long as a human is doing it. So there's always going to be something wrong or something you didn't think of, especially in the blockchain space where there's like just infinite possibilities of a protocol comes out and you have your intended execution paths. How can you diverge from this? The possibilities of function sequences and call data inputs within each function sequence is just like infinite, and it's beyond our comprehension. So if you can't account for everything, there's something that you're going to miss. I feel like unless you make it very strict in terms of, I guess only within that protocol or very strict checks, kind of like Aave's flash loan, like at the end of the flash loan, you got to pay it like that kind of stuff. That's the only thing I can really think of. Because proxies are great to a degree because you're going to upgrade them, right, like the implementation.
00:35:38.330 - 00:36:40.846, Speaker B: But it's kind of a double edged sword, being able to write software that's immutable to some degree, but that just puts a higher emphasis on security. And that's why these researchers get paid so much, because there's a lot on the line in terms of reputation and money. You see these big protocols getting hacked for tens of millions, or even more like the bridges getting hacked for hundreds of millions. And the bridges you can kind of change because it's a bit off chain. But the on chain protocols, if you get hacked once and tens of millions are gone, your reputation as developers over, especially if you're doxed, who's going to want to invest, put their money back into someone that got hacked for tens of millions. Right. I think it's a bit easier for a nons because they can kind of ditch the identity and start a new one.
00:36:40.846 - 00:37:14.166, Speaker B: But, yeah, it's still not a good thing. So I think cybersecurity is like the biggest thing, preventing global adoption. Just something like traditional markets. Right. Because it's just the inherent risk of losing everything. If you're a firm putting a couple of mil into a protocol to yield farm on like 5% interest or something, that's like a reputable protocol. Imagine one day it just gets hit, like three years later or something, and all that money is gone.
00:37:14.348 - 00:37:15.080, Speaker A: Yeah.
00:37:15.530 - 00:37:33.790, Speaker B: I don't think people want to take that risk. How come you never got into searching? You've gone so far into flashbots, and you're very knowledgeable of all the stuff, so why not get into searching and start capitalizing on that knowledge in the MeV world, or advising for other teams or whatnot?
00:37:34.530 - 00:37:50.274, Speaker A: Yeah, I think the biggest factor is just the game itself. It's just demanding to compete really is the challenge. It's like a lifestyle, I feel like.
00:37:50.392 - 00:37:51.250, Speaker B: Yeah, definitely.
00:37:51.400 - 00:38:25.200, Speaker A: It's not just like I spend a couple of weeks writing a good bot and I run it and then I'm set. It's like, no, it's like I watch the chain every day, and I'm analyzing my competitors bots, and I'm making tweaks all the time, and it's just like every day it feels like every searcher I've talked to is sort of like, in that mindset of always on, always searching. Honestly, just don't want to do that. Having dinner at 06:00 p.m.
00:38:27.010 - 00:38:31.040, Speaker B: Not worrying about someone overtaking you and you're not making any more money.
00:38:31.410 - 00:39:18.480, Speaker A: Yeah, I'm really intrigued by the scene and the software. And so I've written a bunch of bots just to prove the concept and use them in some experiments. Hindsight is a good example. I built this bot that was based off of rusty Sando that just removed the front run component. So instead of a sandwich bot, it's just a background bot running. Yeah, and I just use that to gather historical data, and that's just for data analysis for the data team. And it's like you're writing the same code, but the game you're playing is totally different.
00:39:19.570 - 00:39:39.080, Speaker B: Yeah, definitely. It was interesting because I was reading that repo, and I think you mentioned that with hindsight, the historical MeV strategy simulator, people are still leaving money on the table after doing an Arb or some kind of extraction, which is weird, right?
00:39:40.970 - 00:40:31.750, Speaker A: Yeah, well, most of what I noticed is most opportunities just aren't being captured, and the ones that do, there's basically two kinds of bots that are running on MeV share right now, and I think the most dominant one is on chain searching. So, like, Univ two. To univ two, you just do the xy equals k, and you can just calculate the perfect arb with relatively low computation. So this is like our simple, blind arb bot that we have. I think most people are running a strategy that's similar to that. But then Frankie from paradigm, he's got Artemis that has a Univ three Mev share bot. It does like a probabilistic algorithm, but it's not really based on heuristics.
00:40:31.750 - 00:41:00.350, Speaker A: It's just a sweeping range of hard coded arbs. Eventually, every once in a while, it will land one. But if you're completely guessing with no heuristics, it's going to be pretty far off the ideal ARb. So that money is getting left on the table, and then I think just the searcher market is like, it's going, but it still hasn't hit that critical point of all the MEV being captured.
00:41:01.330 - 00:41:05.490, Speaker B: Yeah, I think that's kind of impossible, though, unless you have some generalized.
00:41:06.310 - 00:41:09.540, Speaker A: Yeah, I mean, for sure never hit 100%.
00:41:10.230 - 00:41:32.970, Speaker B: Yeah, I think the only way you can hit 100% is if you have some kind of some automated analysis tool to basically find every single combination from every single contract, every single function. That's the only way. And then you have to do that live as well, because when someone deploys a new contract, then you have to check that with every other contract.
00:41:34.270 - 00:42:19.290, Speaker A: Yeah, that's like an n factorial problem. It's just not happening. Yeah, search space is impossible, but, yeah, you never hit 100%, not only because it's like, even if you had a lot of historical data or whatever, like, ways algorithms to find new opportunities, you still wouldn't necessarily have all the possible opportunities. And there's hacks and things that could be considered MeV rich that you'll never find. The way that hindsight evaluates it is it just restricts the search space severely. So it just says, yeah, if you're only talking to uniswap and sushi swap, what's the addressable MEV here? Because that's pretty easy to calculate.
00:42:19.870 - 00:43:09.194, Speaker B: Yeah, I think that's majority of the MEV as well. In terms of short tail, long tail also maybe. I think it's either like an entry or exit point of getting a specific token to interact with a protocol and then exiting that token after you do the long tail. But I could be wrong. They might just have their own internal oracle or liquidity pool, which isn't embedded in uni. An interesting thing with the uni as well is the mini MeV game of LP sniping. Whereas when an LP comes up, all the bots rush in to buy that LP before everyone else's, and then whoever's first basically makes a giant killing because they bought so early, and now the price is inflated, they just sell it.
00:43:09.194 - 00:43:25.950, Speaker B: But the funny thing is, there's like this counter mev thing in this mev in general, whereas the people deploying the tokens write custom tokens for the LP. So when the bots come in, they kind of just rug them.
00:43:26.100 - 00:43:27.086, Speaker A: Oh, yeah.
00:43:27.268 - 00:43:56.978, Speaker B: So it's like a game within a game. And that's super interesting. And they do like very highly customized. So you can only buy after x amount of blocks, or buy y amount, or maybe only some addresses can buy, or only EA ways. It's a whole game. And that stuff is super hard to analyze, I think generally in a generalized sense, because you can move like a storage slot in a different. Yeah, you can move a storage slot in a different slot.
00:43:56.978 - 00:44:15.198, Speaker B: So if it does the same thing, like the reserves or the balance, you would just move it to a different slot basically, and then you wouldn't know generalizing, you wouldn't know where it is. Unless it's like you find some really good heuristics, but man, they'll be hard, I think.
00:44:15.364 - 00:44:24.930, Speaker A: Yeah, it's just impossible to know. So, yeah, we just use like, if we want to estimate the addressable MeV, we just say, how does it compare to the baseline?
00:44:26.230 - 00:45:20.434, Speaker B: Yeah, I think on the dashboard of all the MeV, like the MeV tracker you guys use, or even, what's that other company? It's like they track the long tail? No, not long tail, like short tail, I believe, but there's so much other Mev going on, it really doesn't display the true amount of money just lying down. I remember watching Burt Miller mentioned he found some long tail. Was like a couple dozen grand or close to 100 grand or something. This was a while ago, maybe two years ago. I was watching this YouTube video of his, like, one of his tutorials back in the day. Yeah, he mentioned, like, he found something, and then maybe he got front round or something. But it was a lot of money.
00:45:20.434 - 00:45:25.960, Speaker B: Long tail is very lucrative, but it's like digging for gold, really.
00:45:26.970 - 00:45:40.918, Speaker A: Yeah, for sure. That's why I call it long tail. It's just rare opportunities, and I think that's probably the most appealing part of searching. I don't know, just from a builder nerd perspective.
00:45:41.094 - 00:45:41.820, Speaker B: Yeah.
00:45:42.910 - 00:46:00.800, Speaker A: I found this thing that nobody else is seeing, and I can capitalize on it. Once you have bots for the short tail, you're doing uni arbs and stuff. I think that's where most people gravitate, because the payoff is orders of magnitude higher.
00:46:03.250 - 00:46:14.238, Speaker B: Yeah, I think it's just easier to kind of get into. It's kind of like the de facto standard. Like, the hello world of Mev is like a shitty univ two r bot.
00:46:14.334 - 00:46:14.980, Speaker A: Yeah.
00:46:15.850 - 00:46:51.360, Speaker B: That loses money. Yeah. I remember when I made my first one, it was like, use a binary search, and I think that's, like, you could do, like, some math to try and optimize the most optimal amount. But binary search was chill to begin with, but you weren't getting the specific exact amount you could really extract. But it was still cool, though. It was really exciting. This was a couple of years ago, but man, that was fun.
00:46:51.730 - 00:47:11.478, Speaker A: I remember when it was about a year and a half ago, maybe two, it was like, just before I had started at flashbots, I found this video that I think Stefan, and I don't remember who else was in, but it was titled how to make a million dollars a month with me.
00:47:11.564 - 00:47:13.080, Speaker B: Oh, yeah, I saw that as well.
00:47:13.530 - 00:47:20.778, Speaker A: Just like. Yeah, what a great title. That's, like, one of the most popular videos that came out of, like, of course people love money.
00:47:20.864 - 00:47:26.010, Speaker B: It sounds like a scam. Like one of those scam videos, like, uniswap bots on YouTube.
00:47:26.750 - 00:47:31.790, Speaker A: I've been seeing those crop up lately. It's insane. I get, like, discord dms.
00:47:33.090 - 00:47:40.670, Speaker B: Oh, you need to turn the noties off. Yeah, but, yeah. Such a crazy title.
00:47:41.650 - 00:47:43.300, Speaker A: Yeah, I know. I love it.
00:47:44.150 - 00:47:47.330, Speaker B: Flashbots is rugging the scammers.
00:47:48.790 - 00:47:55.010, Speaker A: Yeah, that's why we don't have a token, man, it would just be a nightmare.
00:47:55.670 - 00:48:02.630, Speaker B: Oh, I can imagine. I remember those like gas tokens back in the day. I don't know if they still exist, but.
00:48:02.700 - 00:48:05.714, Speaker A: Oh yeah, I don't think they're useful anymore.
00:48:05.762 - 00:48:11.100, Speaker B: You know, it'll be interesting. Like account abstraction with Mev. That would be super interesting.
00:48:11.550 - 00:49:07.130, Speaker A: Yeah, that's a hot topic right now, and I think it's going to be an increasingly hot topic over the next couple of years is everybody's talking about intents, and a lot of architectures are shifting towards intent focus or at least intent support. But yeah, it's really not any different than what we have now, except in the data format. I think we're going to have basically the same systems that deliver transactions to a block. In an intent architecture. Typically you have solvers or executors. Uniswap calls them like most likely their game is bring whatever intent to chain and then extract some mev and make it worth your while. You get paid a little fee, most likely to execute in the first place.
00:49:07.130 - 00:49:12.860, Speaker A: But yeah, you have it. It's your opportunity to background or whatever.
00:49:13.870 - 00:49:31.140, Speaker B: Imagine someone just propose like a little hack execution, like a little hack transaction of multimillions and then someone else filled it for them. Yeah, it's like, who's liable then?
00:49:33.990 - 00:49:37.586, Speaker A: That's a good question. I don't know the ones that executed.
00:49:37.618 - 00:49:39.080, Speaker B: It, I just proposed it.
00:49:40.010 - 00:50:02.350, Speaker A: Yeah. One of the things that comes up when you're talking to people about intents with an executor network, people ask, is it possible if I just make an intent that says, make me turn this $10 into $100? I don't care how. The answer is yes, of course that's possible. But who's reasonably going to fill that for you?
00:50:02.500 - 00:50:07.662, Speaker B: Oh yeah, imagine someone fat fingering just giving you money.
00:50:07.796 - 00:50:08.720, Speaker A: Yeah, right.
00:50:11.010 - 00:50:48.058, Speaker B: Another exploit, I think a new attack vector at account abstraction would be like, I'm going to make this exploit contract where the EOA that executes it actually approves their entire balance for me to use it and send it to myself. Like ERC 20 approved, but using account abstraction, someone else executes it with maybe like a balance. Right. And then they would approve me to be able to send all their money to me. Imagine that's a true attack vector. If that's the case, someone else executes it.
00:50:48.224 - 00:51:00.350, Speaker A: Well, as an executor, you have to decode the intent and figure out what it's going to do. Your code should probably not allow you to just drain your balance.
00:51:02.290 - 00:51:22.680, Speaker B: And this is when I think bytecode obfuscation and cold auto obfuscation will be like a major player in a can abstraction. I can see so many people getting wrecked because they don't know how to decode or reverse engineer these contracts. I think it'll be a very niche market, actually for the best ones.
00:51:23.050 - 00:51:24.710, Speaker A: Interesting niche market?
00:51:24.860 - 00:51:34.860, Speaker B: Well, I imagine just like the fillers that execute it, you just pose so much risk. Unless the normies do it and they just get hacked. Which I think would be a normal thing.
00:51:35.630 - 00:51:36.602, Speaker A: Sure, of course.
00:51:36.656 - 00:52:00.740, Speaker B: Yeah, because they're going to need eth to execute everything. Right? So they hold eth, and I guess their algorithms would have to check if they have their money. Right. But then they would also have to check each token. And did they get approved or wrecked in some way? Something like that. There's a whole bunch of stuff that's going to happen, I think, which I'm super keen to see.
00:52:01.510 - 00:53:09.394, Speaker A: Yeah, I've been doing a little research on intents and just intent architectures. I think where a lot of designs are falling short at the moment is they're trying to spec everything in into the protocol, and I think they're bloating too much. I think intents, in my mind, work best when they're defined by an app. And this is exactly what we have with smart contracts already. The app writes the code and you write the transaction that interacts with the app, and then intents just abstract the execution path from the actual order. But it's the same problem if you have an intent structure that very specifically lays out how to lay out your intent, how to handle swaps or how to handle nfts, or whatever other things they come up with. If you add too much detail to the spec and you don't let app developers customize how they want to verify their own intents, then eventually it's just going to be too confusing and there's going to be too many attack vectors.
00:53:09.442 - 00:53:51.174, Speaker B: But I think it's a cool idea in general. Man, if you send an intent, though, as like a black hat, and you just generate a new wallet, right, that means you don't have to fund it, right? Someone else can fund it for you in terms of executing the transaction, because then they can just flash loan and take money, make profit. I think someone did this like ape bank or something a while ago. I forget the name, but they did this exact thing, but with flashboards. I think it was with a bundle. But basically, I think in account abstraction, someone can just pay for the gas of the transaction. They just flash loan to get more money, perform the exploit, pay back, and then they have more money.
00:53:51.174 - 00:54:04.538, Speaker B: So now they're self funded and someone else funded them basically. But yeah, there's going to be like a whole new legal aspect with the intense stuff and the account abstraction, but I'm pretty keen to see this all play out. Hopefully it gets implemented soon.
00:54:04.624 - 00:54:08.426, Speaker A: Yeah, totally. It's an exciting space and you got.
00:54:08.448 - 00:54:18.080, Speaker B: To be prepared for that as well. You got to have the skills ready to be able to capitalize on that new opportunity because it's going to change the game, definitely, for sure.
00:54:18.530 - 00:54:34.580, Speaker A: But yeah, I think it's going to change the paradigm of searching. Not in the sense that you have to change your algorithms, but you just have to basically just implement new interfaces. So it's really not going to change the face. It'll change the face, but it won't change the body.
00:54:37.370 - 00:55:16.660, Speaker B: I think actually as well, in terms of searching with account abstraction, what if you see a bunch of pending transactions in the account abstraction mempool or something, and then you execute them in a specific order, and then you make a bundle out of that execution. You're basically like choosing your own function. You're executing someone else's transaction in your own order. I guess it's like a bundle, but like a different form of bundling. Yeah, there's a couple of neat ideas, and then you can kind of create a bundle by executing someone else's transaction. That was pending for a while. Maybe it was pending for like a day or something.
00:55:17.510 - 00:55:58.350, Speaker A: Yeah, that's totally possible. And I think people are actually, they want features like that, for instance, like a day long limit order. You can't do that on Mev share right now because our RPC endpoint has a 25 block period, and so if your transaction isn't included after 25 blocks, it's just discarded. But we've had people ask for features where we could just put a transaction in the private mem pool for days and don't consider it until somebody tries to back run it, don't start the timer until people are actually trying to put it in a bundle.
00:56:00.130 - 00:56:09.170, Speaker B: Yeah, I'm keen to see how this all plays out, but I'm sure we'll have another chat when that happens. Be a whole new game with flashbots.
00:56:09.830 - 00:56:12.050, Speaker A: Flashbots is all about new games.
00:56:13.350 - 00:56:31.400, Speaker B: We love the game theory and doing all this stuff, but yeah, thanks so much Prof. For jumping on. Hopefully you enjoyed this and I'm sure a lot of people would take interest in this as well. Talk about a bunch of technical things. And I think that's where the bread and butter is, especially in this space.
00:56:32.090 - 00:56:32.726, Speaker A: Yeah, man. Yeah.
00:56:32.748 - 00:56:35.960, Speaker B: Thanks so much for jumping on. We'll definitely chat again.
00:56:36.730 - 00:56:38.680, Speaker A: Cool, man. Appreciate you having me.
00:56:39.210 - 00:56:42.158, Speaker B: Appreciate you going on, and take care.
00:56:42.324 - 00:56:44.510, Speaker A: All right, you too. Adios.
00:56:45.090 - 00:56:49.690, Speaker B: Adios. Bye.
