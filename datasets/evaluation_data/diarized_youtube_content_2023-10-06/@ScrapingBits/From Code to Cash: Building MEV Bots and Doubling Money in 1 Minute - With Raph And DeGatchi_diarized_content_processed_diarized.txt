00:00:00.250 - 00:00:22.990, Speaker A: And I think in 2 hours I had ten K to play with. I was like, Boys, I never tested this code. I cannot even test it. Are you sure you want to give me that much money? Yeah, do it, do it. And it worked. I think we'll multiply the money by two, almost by two in like 1 minute.
00:00:24.610 - 00:00:33.560, Speaker B: Do GM. GM, everyone. My name is garchi. Welcome back to scraping bits. And we're here with Raph. How's it going, man?
00:00:34.410 - 00:00:35.254, Speaker A: Hi.
00:00:35.452 - 00:01:03.040, Speaker B: Not bad, not bad. Already done two episodes today and to the third. So let's talk about first of all, it's a pleasure to have you on on such short notice as well. We didn't really plan this weeks in advance. Just kind of like DM'd you and you're like, Yo, let's go. So, yeah, pleasure to have you on. I think this is going to be an amazing talk for myself and just everybody listening to get some insight into what you do.
00:01:03.040 - 00:01:08.180, Speaker B: So just to segue into it, what do you do?
00:01:10.150 - 00:01:16.294, Speaker A: So I'm an mev searcher at Project Blank, and that's basically it.
00:01:16.412 - 00:01:24.680, Speaker B: You just focus on that. Sick. So tell us a little bit about Project Blank and your kind of role in this. Project.
00:01:28.250 - 00:01:35.238, Speaker A: Blank got funded something like two years ago by Dean and Edgard.
00:01:35.334 - 00:01:36.460, Speaker B: Oh, right, okay.
00:01:36.910 - 00:01:48.190, Speaker A: Yeah. Edgard is well known in the space. I think he was one of the first to do mev. So he found me on an obscure Telegram channel. We were together.
00:01:48.340 - 00:01:50.494, Speaker B: Okay. As you do.
00:01:50.692 - 00:01:55.290, Speaker A: Yeah. And yeah, that's how we started Blank.
00:01:55.370 - 00:02:01.378, Speaker B: So you just kind of like, found each other on Telegram and then you're like, yo, let's start this. Let's try and make some money.
00:02:01.464 - 00:02:08.222, Speaker A: Yeah, that's the idea. At first I was just on Twitter looking for some people doing mev.
00:02:08.286 - 00:02:08.622, Speaker B: Okay.
00:02:08.696 - 00:02:21.746, Speaker A: At the time, I didn't know that it was called mev. I was just doing this by myself. Pretty sure that there's some people doing the same thing as me. And so I found the crypto. Twitter.
00:02:21.858 - 00:02:22.520, Speaker B: Yeah.
00:02:22.970 - 00:02:34.926, Speaker A: And I just helped Edgy randomly about programming question because he was trying to solve the same problem that I was looking for for two months.
00:02:35.028 - 00:02:36.686, Speaker B: Okay. Wow. Okay. Right.
00:02:36.868 - 00:02:44.014, Speaker A: And then one day asked me, oh, yeah, do you want to join this Telegram channel I'm creating with other researchers?
00:02:44.062 - 00:02:45.874, Speaker B: Right. So like a little alpha group.
00:02:45.992 - 00:02:46.706, Speaker A: Yeah.
00:02:46.888 - 00:02:47.522, Speaker B: Got you.
00:02:47.576 - 00:02:51.298, Speaker A: But this channel is dead now. There is like oh, right.
00:02:51.384 - 00:02:56.210, Speaker B: Everybody's being poached and don't want to leak any alpha.
00:02:57.190 - 00:03:03.494, Speaker A: Yeah. There is nothing really happening in this channel anymore. So, yeah, at the time I was bored in my job.
00:03:03.612 - 00:03:03.990, Speaker B: Okay.
00:03:04.060 - 00:03:08.122, Speaker A: I was working for a cloud provider, doing some networking stuff.
00:03:08.176 - 00:03:08.634, Speaker B: Right.
00:03:08.752 - 00:03:21.754, Speaker A: And yeah, one day ask, okay, I'm doing a professional team of searcher. Do you want to join? Okay. And 48 hours later, I resigned on my job.
00:03:21.872 - 00:03:59.340, Speaker B: Oh, really? All right, let's go. All in sick. So you were doing mev already, but you just didn't know what it was. Right. And then you just randomly met Edgar, you just DM'd him, cold DMed him and then he just was like, yeah, join this chat, let's link up. And then eventually just so I guess what has it been like working there in a full Mev team? I don't know how big it is, but what do you think it's different to being like a solo searcher? What's the differences you think?
00:04:02.670 - 00:04:23.458, Speaker A: I think the big difference is that you cannot rely on someone else to give you the answer. What you are going to do that's the whole idea of searching is that there is not the answer on stack overflow and if your alpha is dead, then you need to just move out and find something else.
00:04:23.624 - 00:04:24.242, Speaker B: Yeah.
00:04:24.376 - 00:04:36.340, Speaker A: It's not like you are doing, I don't know, front end development. If you cannot align properly the button, there is the answer somewhere on the internet. Here you are all by yourself.
00:04:36.710 - 00:04:49.100, Speaker B: Yeah. And it makes sense because it's like a zero sum game. Whoever is being the best, they don't want to share information. So it's really kind of like an arena where it's just complete PvP. Everyone's out for themselves.
00:04:50.830 - 00:04:54.166, Speaker A: It's like Hunger Games for programmers.
00:04:54.198 - 00:04:54.780, Speaker B: Exactly.
00:04:56.350 - 00:04:58.090, Speaker A: There's only one winner at the end.
00:04:58.160 - 00:05:26.066, Speaker B: Yeah. It's basically just a PvP game. But it's amazing and I think that brings a lot of competitive people into the space as well. Like massive teams, they want to be the very best and I think it's even more motivating or even more motivating to build the best product you can because you're competing against other humans. Right. And it's kind of like self satisfaction. Like yeah, I'm better than you.
00:05:26.066 - 00:05:27.486, Speaker B: See, I can do this.
00:05:27.528 - 00:05:29.800, Speaker A: You can't? Yeah.
00:05:31.290 - 00:05:40.940, Speaker B: Despite it being so lucrative for those that are profitable. Right. Like that one searcher, Jared, seen him, he's just like cornering the market, right?
00:05:41.710 - 00:06:08.238, Speaker A: Yeah. But the thing is it can be depressing sometimes because when you are creating buds, 90% of your ID fail, I think. So sometimes your last bud is dead because the competition is just too high so it's not worth it to continue it. You search for new stuff and then sometimes you are like drink two months, you have nothing and you feel like a big shit.
00:06:08.414 - 00:06:31.578, Speaker B: Yeah, that's definitely happened. I've seen small little searches, right. They just find their own little long tail niche strategy that they run for a little bit and then some bigger team comes along, copies it, and obviously they're a bigger team and more resources, so they can just throw more at it and just completely steal it from the little guy. And the little guy can't do anything about it. Yeah, it's like a whole ken and mouse game.
00:06:31.744 - 00:06:49.498, Speaker A: Also the problem is that when you're alone on your strat, you don't have to bribe high, you pay almost nothing for gas. And then when there is another competitor, then you just PGA or bribe too high and then all the profit just goes to the validator.
00:06:49.674 - 00:07:04.530, Speaker B: Yeah, exactly. And I was wondering, working at Project Blank, are you basically a full stack kind of dev in terms of customizing node making the bot strategies or is it more of like hyper optimization on your end?
00:07:04.600 - 00:07:05.378, Speaker A: A bit both.
00:07:05.464 - 00:07:09.650, Speaker B: So a bit of like a bit of hyper optimization for main strategies?
00:07:09.730 - 00:07:23.914, Speaker A: Yeah, we mostly do long tail charts. We did some short tail too. But the problem with short tail is that it's very time consuming and if you are not in the top 1%, you basically make no money.
00:07:24.032 - 00:07:58.530, Speaker B: Yeah, exactly. If you're a smaller team, it's way better to just go for those unique strategies, looking at those protocols and trying to think of ways to basically use it to your advantage. Like kind of game theory in a way. I wonder if you've ever thought about you've seen those public auditing contests, right? Like C four and unify. And C four. I wouldn't say quite recently, but recently released bot races. Which kind of seems like an mev strat in a way for auditing.
00:07:58.530 - 00:08:07.542, Speaker B: Right. Like you find if you have a bot that basically detects vulnerabilities, you're basically getting money out of it. Right. So have you ever thought about that?
00:08:07.596 - 00:08:12.102, Speaker A: I think CFO is just apps, I hope to distract searchers from their main struts.
00:08:12.246 - 00:08:30.302, Speaker B: Right. I mean, it's still a possibility. I thought about it as well and there's a few people participating. I think if you make a really good tool, you kind of hit everything. Right. You can do auditing, but you also take over the bug bounty programs. So maybe that's like a strategy people aren't really thinking about.
00:08:30.302 - 00:08:31.680, Speaker B: You could take over.
00:08:33.910 - 00:08:50.534, Speaker A: Yeah, that's true. But you need to put a lot of resources on it and you know for sure that you're competiting with the best in the space. There is a lot of other alpha that are way easier to extract, I guess.
00:08:50.572 - 00:09:09.020, Speaker B: When you started mev, how did you even get into all of this? Right? Like when you're building on yourself, like searching by yourself solo, it's such a hard thing to do, to get into because there's no information out there apart from the public repos of people that have already succeeded. So how did you really learn this stuff?
00:09:09.970 - 00:09:20.270, Speaker A: It all started a long time ago. A friend of mine sent me message about Goose Finance.
00:09:20.770 - 00:09:22.080, Speaker B: Yeah, I've seen that.
00:09:23.010 - 00:09:33.698, Speaker A: I don't know if you know Goose Finance, but basically they were releasing the egg token. It was like a ponzi, basically.
00:09:33.784 - 00:09:34.420, Speaker B: Yeah.
00:09:38.150 - 00:10:01.150, Speaker A: Obvious is a big ponzi. But it was like, okay, I just bought it by hand and I made a lot of profits. Do you think you can automate it? I was like, okay, I can have a look. So I built a small tool to just snipe the liquidity. Okay, it worked.
00:10:01.300 - 00:10:09.710, Speaker B: Yeah. There you go. Did you run your own node locally or on AWS or anything like that? Or was it just RPC calls?
00:10:10.290 - 00:10:15.890, Speaker A: No, it was a node running on his desktop computer.
00:10:16.040 - 00:10:17.300, Speaker B: Oh, wow. Okay.
00:10:18.870 - 00:10:20.946, Speaker A: And it was possible to win with this?
00:10:21.048 - 00:10:24.900, Speaker B: Yeah. Crazy. This must have been maybe like a year or two ago, right?
00:10:25.450 - 00:10:26.918, Speaker A: Yeah, it was a long time ago.
00:10:27.004 - 00:10:51.918, Speaker B: Yeah. I remember Goose Finance, when Pancake Swap came out, like a whole bunch of projects came out as well. It blew up the market. And you were there basically while it was happening. You're already prepared for all this stuff, but again, were you building these bots in JavaScript? Like python even golang. Golang, yeah. Okay.
00:10:52.004 - 00:10:52.494, Speaker A: Yeah.
00:10:52.612 - 00:11:03.730, Speaker B: Since you're using Golang and I'm assuming you're using GEEF as well. Yeah, because it's on Binance, were you building the bot inside of the node or were you kind of doing it separately?
00:11:04.550 - 00:11:19.682, Speaker A: So I started separately because at the beginning, it was just the easiest way to do. And then the problem is that communicating if the node can be slow, if you just use a JSON APC.
00:11:19.826 - 00:11:20.520, Speaker B: Yeah.
00:11:21.370 - 00:11:42.014, Speaker A: So I looked if it was possible to side load my code inside of Get. Because the problem is that every time you restart Geth, you need to wait, throw it to get some peers to sync the chain again. So that means every time you want to try some new code, you have to wait like three minutes. And that's not something I want to do.
00:11:42.052 - 00:11:43.182, Speaker B: Yeah, just sitting there.
00:11:43.316 - 00:12:13.462, Speaker A: That's actually the question that I answered, Edgar on Twitter. It was about loading module with oh, yeah, it's not module. How is it called again? But yeah, loading binary inside of the KEF binary. But it's not possible to unload them. So I just made like, a custom RPC that is just fast enough so I don't have to bother about the speed of it.
00:12:13.516 - 00:12:29.500, Speaker B: And when you set up this node, I assume first time learning about all this stuff would have been incredibly hard, right? Or maybe it wasn't. Maybe it was just really streamlined easy. But how did you go about building, basically running your first node and getting into all that stuff?
00:12:30.110 - 00:12:34.542, Speaker A: I was a DevOps in my previous life, so it was like five minutes for me.
00:12:34.596 - 00:12:35.150, Speaker B: Oh, really?
00:12:35.220 - 00:12:36.974, Speaker A: Okay. Yeah.
00:12:37.172 - 00:12:53.170, Speaker B: I guess if someone wanted to get into node optimization, just customization in general, or even just wanting to run a node just to experiment, what do you think they should do in order to kind of test something, then iterate make it better, this kind of stuff.
00:12:53.320 - 00:12:59.534, Speaker A: I think the best advice I could give is don't go too complicated.
00:12:59.662 - 00:13:00.002, Speaker B: Right.
00:13:00.056 - 00:13:29.150, Speaker A: You don't need that microsecond performance. I'm just going to lose a lot of time on this and it's not worth it. So maybe just start with LPC, maybe even a public LPC. And the first problem you will encounter is how to simulate a transaction or how to get a transaction from the main pool, but with a very small modification on the LPC side of GEF, you can get something pretty good pretty easily.
00:13:29.490 - 00:13:31.680, Speaker B: You can kind of like combine everything together.
00:13:34.050 - 00:13:41.474, Speaker A: My advice is don't overcomplicate on the technical stuff and maybe look for an alpha where no one is looking.
00:13:41.672 - 00:13:47.880, Speaker B: Basically just simplify, get it out as fast as possible and then you can go back later and optimize. Right?
00:13:48.570 - 00:13:54.214, Speaker A: Yeah. Because the money is made when you're the first on the strat, that's when you're the best.
00:13:54.412 - 00:14:13.950, Speaker B: Exactly. So I guess how do you find strategies, right? Are you doing basically your own reconnaissance and looking through every single block by yourself? Or you just find something on Twitter about some protocol and you go diving into like how do you really think about strategies?
00:14:17.650 - 00:14:36.980, Speaker A: I already look on Twitter if there's some new protocol or stuff that we don't know. We also developed a tool that is almost automatic alpha finder. It's not 100% automatic, but it tell us where to look.
00:14:37.430 - 00:14:39.214, Speaker B: Okay, so kind of like a symbolic.
00:14:39.262 - 00:14:45.494, Speaker A: Execution, though not really. It's like more like some heuristic that we use.
00:14:45.692 - 00:14:48.118, Speaker B: Okay, so how does that work?
00:14:48.204 - 00:14:49.190, Speaker A: Who knows?
00:14:49.610 - 00:15:22.180, Speaker B: Yeah. I'm trying to extract the alpha. Oh, God. What's kind of like the hardest thing really getting into mev. For me, when I started, it was basically trying to gather all the information. Where do you start and how did you start? I'm sure there's like, the flash bots, simple, Arbitrage, but that doesn't really produce any results, does it? You basically lose money. So at what point do you become profitable once you first starting, at least?
00:15:25.370 - 00:15:48.458, Speaker A: Yeah, I started with Sniping, it was pretty profitable. And then I moved to Arbitrage, like 99% of search shops when they start. And so I did Arbitrage first on BSc and then on Polygon, and it was working pretty well. And then I started blank. So we did like, other stuff.
00:15:48.624 - 00:15:56.160, Speaker B: Yeah, for sure. How many people are in your team in Blank? If that's public information you can share?
00:15:56.770 - 00:15:58.126, Speaker A: Yeah, that's not public.
00:15:58.228 - 00:16:25.186, Speaker B: Okay, right. Yeah. There's a lot of like with mev, it's just so hard to really, I guess, tell or ask questions that go like, super deep because don't want to share alpha. Right. It's even rare to find searches, go on podcasts in general, or even have a public figure like on CT. Yeah. Have you ever experimented with basically attacking other medbots?
00:16:25.298 - 00:16:30.490, Speaker A: Attacking other bots? Yeah, that's what we did. I think it was last year or beginning of last year.
00:16:30.560 - 00:16:31.178, Speaker B: Oh, interesting.
00:16:31.264 - 00:16:44.650, Speaker A: We are not doing it anymore, so I can tell this. Yeah. There is some bot that are willing to take very large risk. For example, sandwichers. And I don't mind taking money from sandwiches.
00:16:45.650 - 00:16:49.440, Speaker B: It's basically like stealing from a drug dealer. So it cancels out.
00:16:50.450 - 00:16:55.262, Speaker A: Yeah, it's not stealing. They do bad trades.
00:16:55.326 - 00:17:15.634, Speaker B: I saw a lot of stuff on Twitter, like people basically tweeting like, okay, this mevbot just got attacked and drained. It still happens now. I think it happened yesterday. As you like, how did you even approach attacking these bots? Were you just looking for the bytecode.
00:17:15.682 - 00:17:43.906, Speaker A: And you have no, we were not training the contract or anything. We are just like sending transaction into, for example, for the trap of the sandwich bot. We are just buying some token, sending a transaction that is easily sandwichable, and then when the bots try to sandwich it, we just dump the liquidity. That's it. It's like very damp, but it worked.
00:17:44.088 - 00:17:48.340, Speaker B: So it's like baiting bots. Did you create a pool or something?
00:17:49.350 - 00:17:53.166, Speaker A: Oh, no, you could do it on any pair.
00:17:53.358 - 00:18:01.010, Speaker B: Okay. Interesting. Was it like a honey pot or how does that work? Maybe I'm not understanding properly.
00:18:01.090 - 00:18:31.514, Speaker A: So the idea is that you find a pool with low liquidity, or it can be any liquidity, but it's easier on low liquidity pairs. You buy, let's say, one BNB worth of the token, you wait ten blocks and then you send another transaction, a buy transaction with a high slippage. And then once the bot tried to sandwich you, it's going to do a very large buy at the top of the block and you just replace your buy with a sale and keep the profit.
00:18:31.642 - 00:18:38.626, Speaker B: Oh, wow. Okay. You can just replace your transaction, basically. And you can do that with the nonce. Right? That's how you do it.
00:18:38.648 - 00:18:43.858, Speaker A: Yeah. You just put a higher gas price on your own transaction I got you.
00:18:44.024 - 00:18:50.520, Speaker B: And then the one that you put below basically cancels because it would revert. Right? Yeah. Interesting.
00:18:50.970 - 00:18:51.526, Speaker A: Yeah.
00:18:51.628 - 00:19:08.460, Speaker B: It's all these little intricacies. You got to know basically the EVM incredibly well how all the transaction sequencing works. And it's interesting because BSc doesn't have flashbots, where you have a private mempool and you can submit bundles. Right.
00:19:10.030 - 00:19:21.214, Speaker A: There is one now made by the Forte Club. I think there is like nine or ten validators on it. So there is a sort of flashbot now.
00:19:21.332 - 00:19:37.698, Speaker B: Yeah. Okay, that's pretty cool. I've never thought about that. I thought it was just still the same dark forest, so I guess how do you approach sort of mev on chains with a flashbot kind of system and mev on a chain that doesn't.
00:19:37.794 - 00:19:49.480, Speaker A: We are mainly on BSc, so we do almost everything via the main pool. Now. We also use prison for some strats, but most of the time the main pool is enough.
00:19:49.930 - 00:19:52.774, Speaker B: Yeah. How come you guys didn't go like ethereum?
00:19:52.902 - 00:20:02.890, Speaker A: I don't know. I think it's because we started on BSc from I don't even know why we started on BSc. Maybe because I was on BSc when I joined Blank.
00:20:02.970 - 00:20:03.406, Speaker B: Yeah.
00:20:03.508 - 00:20:10.826, Speaker A: I don't know. And then once you know very well on ecosystem, it's like less work to develop new strategies.
00:20:10.858 - 00:20:19.300, Speaker B: Yeah, for sure. You have to build up all the infrastructure and what. Yeah, I guess on BSc, node optimization doesn't matter as much.
00:20:20.230 - 00:20:22.850, Speaker A: Actually it's the opposite.
00:20:25.610 - 00:20:28.680, Speaker B: Yeah. Because the faster confirmation times.
00:20:31.210 - 00:20:44.182, Speaker A: For example for people doing backtrains, you can easily find the IP. I know that some bots have at least 1000 to 2000 different IP for the same bot.
00:20:44.326 - 00:20:45.660, Speaker B: Oh, wow. Interesting.
00:20:47.870 - 00:20:51.558, Speaker A: Some back runners are running very large info.
00:20:51.734 - 00:21:37.334, Speaker B: Yeah, sure. Have you seen that repo Cake Sniper that was on BRC? You like open sources repo what is it? It's called cake sniper. But basically he was doing liquidity Sniping on Pancake swap, and he had this mechanism in the thing called Swarm, which was basically creating well, he had, like, a preset of I don't know how many addresses, like how many wallets he had connected, but I think it was like a couple hundred. And they all had balances in them. And basically each one of these addresses would send a transaction into a block and kind of like, clog it up. So his actual transaction where he makes the Snipe is like the only transaction that's like doing something. The rest of them are just like decoys or clogging transactions.
00:21:37.334 - 00:21:41.200, Speaker B: It's quite interesting. That was like one of the things I saw.
00:21:43.170 - 00:22:01.102, Speaker A: Yeah. When I was doing sniping. And you can still see it now, but sometimes the Mempool will be so full that you will have blocks with 2000 failed transaction and you could have like five to ten blocks in a row with just failed transaction.
00:22:01.246 - 00:22:07.300, Speaker B: Wow. Just no actual transactions in it just like fake decoy ones.
00:22:08.230 - 00:22:13.110, Speaker A: It's not even fake, it's just people sending by transaction to their contract.
00:22:13.610 - 00:22:17.714, Speaker B: Oh, so they're kind of just like spamming it with the same contract or.
00:22:17.772 - 00:22:26.022, Speaker A: I mean same they're paying the same contract hoping that they will be the first one to buy the liquidity.
00:22:26.166 - 00:22:46.370, Speaker B: Yeah, right, okay. Interesting. Yeah. Because on Ethereum it's completely different. Right. You don't need as good infra for Ethereum you mainly need the contract because there's bundles and you can order stuff like that. I even know like a top tier liquidity Bull Sniper.
00:22:46.370 - 00:23:22.270, Speaker B: He doesn't even use his own contract, actually. He doesn't even have a contract. He just sends it to an RPC, the bundle and that's it. It's actually quite interesting. I was like, how is that even possible? Yeah, bundling is quite an interesting concept and I am curious of I'm quite curious about searches on non flashback chains and how they approach front running like sandwiching and all that. I think that's an interesting concept.
00:23:23.010 - 00:23:48.630, Speaker A: At Blank we don't do sandwiches because toss is immoral and it's illegal at the same time. Yeah, there is a lot of money to make on other stuff than sandwiches. So it's not really worth it for us to do it. Maybe as a solo searcher could do it, but I think it's not worth it. And also it's one of the most competitive strats.
00:23:49.130 - 00:24:04.346, Speaker B: Yeah, for sure. Well, let's talk about your solo experience because I think you can share more about that. But did you run multiple bots at the same time or were all the strategies built into a single sort of.
00:24:04.368 - 00:24:10.006, Speaker A: Entity when I was solo? No, I was focusing on only one bot at the time.
00:24:10.128 - 00:24:37.462, Speaker B: Okay. I've seen other searches use multiple bots, so they put strategies in multiple repos and then run them all separately. I guess that's for hyper optimization. So one, you don't have to spawn a bunch of threads in one repo, so I assume that's why they do it. But then you also see people running all the same strategies in a single repo. Right? I guess it really depends on your info, but it's also quite expensive, right, to run all this stuff?
00:24:37.596 - 00:25:06.026, Speaker A: That's kind of what we do. That's something I developed when I was solo and that's something we still use at Blank. It's basically kind of like a framework where you have all the tooling that you need for the basic stuff like converting, I don't know, big int to float or something. It's based on a module system. So on the same binary, you can run multiple strategies and share the resources between the strategies.
00:25:06.138 - 00:25:14.030, Speaker B: Got you. And then you can kind of put all of the strategies into one transaction. Or you do multiple transactions on BSc?
00:25:14.850 - 00:25:16.570, Speaker A: No, we do multiple transactions.
00:25:16.650 - 00:25:52.700, Speaker B: Okay, got you. I guess because the block time is so short that yeah, it's an interesting sort of mechanic. When you go onto these chains that have really fast confirmation times, it's really about efficiency and speed of how fast you can get the information in. Basically do all your calculations and heuristics on this information, get it out, build the craft the transaction, and then propagate it as fast as possible. And I guess do you have connections to these block builders as well or is it kind of just you submit to everyone, throw it out there?
00:25:53.230 - 00:25:57.738, Speaker A: BSU. We just send it to the mempool when we use the mempool.
00:25:57.834 - 00:25:58.190, Speaker B: Okay.
00:25:58.260 - 00:26:11.886, Speaker A: But depending of the thread, we can have one node or multiple nodes. Basically we analyze the network to know what is the best place to put your node, depending of the validator you are targeting.
00:26:11.998 - 00:26:15.010, Speaker B: Like the location. Like in real life location?
00:26:15.990 - 00:26:21.250, Speaker A: Yeah, in real life location. So like geographically or even in the data center location.
00:26:21.330 - 00:26:23.320, Speaker B: Oh, right. Interesting. Even more.
00:26:24.090 - 00:26:28.082, Speaker A: Some room are closer than the other to the validator.
00:26:28.226 - 00:26:32.940, Speaker B: You can put like Austin, put your server right above theirs or right below it.
00:26:34.110 - 00:26:39.226, Speaker A: Yeah, in a preferred world that will be great, but it's a bit difficult to do it.
00:26:39.328 - 00:26:46.960, Speaker B: Yeah, for sure. I mean, it sounds like you know about it, so alpha. Yeah.
00:26:47.890 - 00:27:15.970, Speaker A: The problem is that going very close to the validators means that you are fighting in the microsecond level because let's say you are just in the same data center. The difference in time between one room and another will be, I don't know, even less than 100 microseconds. So that means that your code needs to be faster than 100 microseconds. Got you to produce the transaction.
00:27:16.130 - 00:27:26.570, Speaker B: Yeah. All the speed and optimization needs to be the absolute world class. Basically, it's all like a zero ton game of just microseconds.
00:27:28.270 - 00:27:35.810, Speaker A: Yeah. So if your Shred doesn't require a lot of speed, you don't need to be too close to the rebateer.
00:27:35.910 - 00:28:00.820, Speaker B: Right? Yeah. And even if the competition as well, if you have nobody competing with you on the strategy, then you don't actually have to be as optimized. As long as you identify the opportunity and then craft the transaction, send it out as fast as possible, you should be fine. And there's so many strategies and components that go on. So, like, MEP Bots, right? Is there gas bribing in BSc or.
00:28:01.130 - 00:28:07.294, Speaker A: Is there now with the new private main pool? There is some bribing.
00:28:07.442 - 00:28:13.500, Speaker B: Oh, interesting. Wow. Transactions would matter, like the gas being sent would matter then.
00:28:14.670 - 00:28:17.510, Speaker A: Yeah. It's a bit different than Flashbot.
00:28:17.590 - 00:28:18.220, Speaker B: Okay.
00:28:18.750 - 00:28:24.142, Speaker A: You don't bribe in the transaction, but you bribe with another transaction, basically.
00:28:24.276 - 00:28:26.266, Speaker B: So there's two transactions.
00:28:26.458 - 00:28:26.814, Speaker A: Yeah.
00:28:26.852 - 00:28:27.760, Speaker B: Okay, right.
00:28:28.370 - 00:28:46.702, Speaker A: So the rule is that at least one of your transactions need to be at least 60 Guay. So if you're targeting a transaction that is below 60 Gwy, then you need to create another transaction that you put on top of it, that is just like a transfer to yourself and your target transaction.
00:28:46.766 - 00:28:47.138, Speaker B: Yeah.
00:28:47.224 - 00:28:48.806, Speaker A: It's a bit weird, I guess.
00:28:48.828 - 00:29:04.794, Speaker B: How did you learn about all these intricacies as well? These are very specific things about this blockchain. So I guess you had to read about this, I guess, in their docs. But even if you wanted to get a full understanding, you would have to read their node right. And just understand it completely.
00:29:04.912 - 00:29:14.030, Speaker A: I don't think they publish their code. No, they don't. They don't publish their code. You just read the doc and experiment.
00:29:14.450 - 00:29:15.678, Speaker B: Okay. Right.
00:29:15.764 - 00:29:16.398, Speaker A: Basically.
00:29:16.564 - 00:29:34.740, Speaker B: And that's how you would go. Okay. Right. So I guess another important question is if you were to start this whole mev career again, how would you redo it so you accelerate your progress to getting to this point.
00:29:38.710 - 00:30:02.138, Speaker A: I don't even know if it's possible to start meview right now from nothing, because you will need except if you do it full time, either you find a very exotic exotics and you can make money on it, but at the second it becomes competitive, it's not going to be possible to compete with the other people.
00:30:02.304 - 00:30:13.410, Speaker B: Yeah. I think maybe even getting to a competent level where a team would want to hire you. What do you guys kind of look for when you hire or would hire?
00:30:15.030 - 00:30:37.910, Speaker A: Depends on what we want. But what we want is someone smart. It doesn't need to be the best programmer in the world, but just someone that is smart and that can have new ID. Not just someone who you say, okay, do this code. This code. I want someone that have new ID, that can search by himself.
00:30:38.750 - 00:30:55.680, Speaker B: Right. So basically someone that thinks outside the box. They don't necessarily have to be the best programmer, because that's you can learn. I think you can also learn thinking outside the box, but it does come naturally to some people. But that's basically the number one thing you look for.
00:30:56.770 - 00:31:03.130, Speaker A: Yeah. And someone that has good analyzing skills.
00:31:03.210 - 00:31:13.586, Speaker B: Sorry. And I guess you do this for every single team member. Even if they're not a quant, they're a dev, all that stuff.
00:31:13.768 - 00:31:22.760, Speaker A: Actually, there is no quant in the team. We are all devs. DevOps. We all come from a computer science background. Except team, of course.
00:31:23.610 - 00:31:54.500, Speaker B: Yeah. I wonder a lot of people have approached me about starting their team as like the lead architect and lead developer, and they come from a traditional background where they're like a hedge fund or just a trading firm coming into mev. And they have all this capital and resources, but they have no clue about how mev works or even the dynamics of it. Right. It's nothing like normal high frequency trading. It's so hard for them to get in. So when you first started, you got into the Goose thing and you just did it manually, right?
00:31:54.870 - 00:32:01.634, Speaker A: No, I did it with about I just did it in one night.
00:32:01.752 - 00:32:12.050, Speaker B: So you did a bot, right, I was just like referring like, you saw it manually and then you made a bot off. But what was like the step by step progress to even building that bot?
00:32:12.130 - 00:33:04.134, Speaker A: I think the first thing you look for is how to create a transaction in Golang, and then you need to find how to generate the API for your contract in Golang. And then I think it was not checking the mempool. The first version was not checking the mempool. It was just checking at every block if it was possible to send the transaction. And yeah, it worked. And then you see that someone else is faster than you at the next iteration. So you look how to go faster to learn about the mempool, how to get access to the mempool, because at the time, there was no transaction subscription in the Pscgf code.
00:33:04.252 - 00:33:05.654, Speaker B: Oh, okay, interesting.
00:33:05.772 - 00:33:09.114, Speaker A: Yeah, it just got released like last week.
00:33:09.312 - 00:33:44.386, Speaker B: Wow. Yeah. So you basically made this first iteration where you're looking at basically the global state of this contract and your specific pool, I assume. And then every block, you just scan for the next block and then you're basically hitting that storage slot of okay, has the state updated since I've last checked? Since the last block. And if it has, you basically do like some calculation, some heuristics, and if it's a positive, then you build the transaction, just send it out and then.
00:33:44.408 - 00:33:57.994, Speaker A: It got yeah, for the Goose finance. But it was way easier than this. It was really like 200 lines of code. Oh, wow. Just cutting the contract. Is it possible? No. Is it possible? Yes.
00:33:57.994 - 00:34:01.382, Speaker A: Okay. Send a transaction and cross your finger.
00:34:01.526 - 00:34:02.540, Speaker B: Wow. Okay.
00:34:03.230 - 00:34:04.714, Speaker A: And it worked. It worked, yeah.
00:34:04.752 - 00:34:11.280, Speaker B: How long did it work for? Man, how long did that strategy even work for?
00:34:13.650 - 00:34:30.274, Speaker A: I think it worked for two or three iteration of the egg stuff, and they stopped it at the generation six or seven. So almost changed the whole lifetime of the egg stuff.
00:34:30.472 - 00:34:37.940, Speaker B: Right. Interesting. So, like, from the complete beginning of it until the end is when you got in. Really?
00:34:39.450 - 00:34:43.878, Speaker A: We only lost a bit of money, I think, on the last one.
00:34:43.964 - 00:34:57.820, Speaker B: On the last two, yeah. And basically after that, you had to go find a new strategy. Right? I guess. Is there any other strategies you can share that you've done in the past?
00:35:00.050 - 00:35:08.494, Speaker A: So then I did Liquidity Sniping, something I did recently by hand, but not for blank, just for me.
00:35:08.532 - 00:35:08.782, Speaker B: Yeah.
00:35:08.836 - 00:35:11.374, Speaker A: It was the Leval Finance Reward system.
00:35:11.492 - 00:35:11.870, Speaker B: Okay.
00:35:11.940 - 00:35:17.614, Speaker A: That was basically broken because it's not broken like a hack.
00:35:17.662 - 00:35:19.394, Speaker B: It's like long.
00:35:19.432 - 00:36:00.880, Speaker A: Okay, let me explain, let me explain. So they did this thing where for every dollar you trade, you get one reward token, which is the Y level, and at the end of the period, one period is 24 hours, there is a bonus that is distributed proportionally to all the order of white evil. So what was possible is that you just do a lot of rush trading and to farm some white level, and as long as the bonus at the end is larger than what you paid in fees during the wash, trading could make money of it.
00:36:01.410 - 00:36:05.054, Speaker B: All right, so you were, like, doing this manually without a bot?
00:36:05.102 - 00:36:08.626, Speaker A: Yeah, I was literally doing click click on my computer.
00:36:08.728 - 00:36:09.700, Speaker B: Oh, my God.
00:36:11.350 - 00:36:18.118, Speaker A: Why didn't you set up script? Because I don't know if it works by hand. I knew that the squad would only last, like, a few days.
00:36:18.204 - 00:36:18.502, Speaker B: Okay.
00:36:18.556 - 00:36:27.254, Speaker A: So it was not worth the efforts. I'm also doing code of the day for blank. It was just enough.
00:36:27.452 - 00:36:28.246, Speaker B: Yeah.
00:36:28.428 - 00:36:46.350, Speaker A: But I think that's what made the success of liberal Finance it's their reward system. Because if you look at their volume compared to their market cap and the number of users, they have a very high volume. But I think most of it comes from their reward system.
00:36:46.420 - 00:37:23.770, Speaker B: Yeah, everybody's just trying to go for that. Make that quick buck. It kind of reminds me of Ampleforth, like, the rebasing craze. If you were there for that, it was basically all these tokens, quote unquote, stable coins are rebasing back to their level. They would just give you a bunch of tokens. So it was like a whole bunch of strategies for doing that. One example is just borrowing from Harvey and just having that before someone called the rebase function, which was public, and then you could just borrow all these tokens, rebase it, and then repay them and you have profit.
00:37:26.350 - 00:37:29.466, Speaker A: I didn't know that about this. Yeah, that's a fancy trust.
00:37:29.568 - 00:37:41.200, Speaker B: Yeah. You just borrow the entire pool of, like, let's say, ave, and you just rebase. And now you have a shit ton of tokens for free, basically.
00:37:42.850 - 00:37:43.802, Speaker A: I see.
00:37:43.956 - 00:38:06.760, Speaker B: Yeah. It's quite interesting. So I guess people that want to join a team, first of all, how do you even find Mev teams? Because they're notoriously known for just not having a face or a public figure. Right. So how do you really get these people to approach you? Or you find them and approach them.
00:38:12.830 - 00:38:30.894, Speaker A: I think, yeah. Maybe just randomly help people on maybe the FlashPad Discord or on Twitter, share what you find on the blogs on the chain, and people will approach you naturally, like, do your own research and be public about it, and people will.
00:38:30.932 - 00:38:35.038, Speaker B: Find you basically just be, like, open source and provide value. Right, yeah.
00:38:35.124 - 00:38:37.860, Speaker A: And maybe just randomly help people.
00:38:39.270 - 00:39:24.602, Speaker B: Yeah. I think there's, like, tons of teams that are actively hiring, but it's not, like, public, like, oh, yeah, we're hiring for our Mev team. Right. It's a lot of secrecy and trying to keep it on the low. Yeah. People don't jump on podcasts or do interviews or even talk about their strategies because they don't want to release any information to help because whatever the information they leak is basically helping their competition or help building their competition. But I think it's also a terrific thing to share content like this because then you also build kind of like a network and people around you depending on your goals, obviously, but it can definitely be beneficial.
00:39:24.602 - 00:39:32.370, Speaker B: And that's something I did. I made content on Mev, like how to build a bot, how to start, and all this stuff. I even made a template.
00:39:33.510 - 00:39:36.850, Speaker A: It's you that made this template? Is it in Rust?
00:39:36.930 - 00:39:38.120, Speaker B: Yeah, the rust one.
00:39:38.730 - 00:39:39.480, Speaker A: Yeah.
00:39:40.250 - 00:39:52.730, Speaker B: So all that stuff kind of blew up. You basically talk about the thing that nobody talks about, and I'm sure you did this as well, but did you ever just go on the Flashpots Discord and read all the messages?
00:39:54.430 - 00:39:59.830, Speaker A: Yeah, I did it for some time, but it's just too much time consuming.
00:39:59.990 - 00:40:00.700, Speaker B: Yeah.
00:40:01.230 - 00:40:09.486, Speaker A: I wonder if you could spend hours on the Flashbot Discord and still get no info and nothing out of it.
00:40:09.588 - 00:40:12.400, Speaker B: Yeah. Have you ever done, like, Psyops to someone else?
00:40:13.030 - 00:40:14.574, Speaker A: Not intentionally.
00:40:14.702 - 00:40:15.380, Speaker B: Okay.
00:40:17.350 - 00:40:18.900, Speaker A: No, I don't think so.
00:40:19.670 - 00:40:24.740, Speaker B: I think I've done it a fair few times, actually. I still do it to this day, actually.
00:40:26.250 - 00:40:27.750, Speaker A: What kind of sales?
00:40:27.900 - 00:40:48.650, Speaker B: Like, someone's trying to like, oh, what do you do? And I'm like, not much, really. Just building. And then they ask a question about something specific. Tell them the complete opposite of, like, yeah, this is not good at all. Don't do that. It's a horrible decision. Yeah, but depends what it is, obviously.
00:40:48.650 - 00:41:07.700, Speaker B: But more often than not, I'm pretty helpful. So did you learn solidity before? Did you already know solidity before this stuff? Or how did you even get into really mev? Because you're working, like, Web Two right before this, and then you just jumped straight into mev, or what happened?
00:41:10.310 - 00:41:27.958, Speaker A: No, I started mev just as a side project. Like, I was waking up before. I woke up early in the morning doing mev, and I was going to my Web Two job, and then during the night, I was programming my bot again.
00:41:28.044 - 00:41:33.660, Speaker B: Interesting. And did you do any scripting botding before this stuff?
00:41:36.590 - 00:41:39.850, Speaker A: No, always, I've been on BSc.
00:41:40.830 - 00:41:49.390, Speaker B: Right. Did you program any scripts for, let's say, RuneScape? Because that's also, like, a common thing before you got mev botting?
00:41:50.530 - 00:42:07.410, Speaker A: Yeah, I did some Boting of some random stuff. I also did a bot on Binance, the McAfee stuff. I don't know if you remember, every week, I think McAfee was just saying the name of a random token on Binance.
00:42:07.490 - 00:42:08.998, Speaker B: Oh, really? Oh, man.
00:42:09.084 - 00:42:16.786, Speaker A: And it was pumping the token by 30% to 40%, a bit like what Musk is doing right now with Dosh.
00:42:16.818 - 00:42:17.560, Speaker B: Oh, yeah.
00:42:20.270 - 00:42:46.414, Speaker A: So we saw this and I made a shitty JavaScript bot in, I think, 3 hours. I asked some friend if they want to participate, and I think in 2 hours, I had ten K to play with. I was like, Boys, I never tested this code. I cannot even test it. Are you sure you want to give me that much money? Yeah, do it, do it. And it worked. Wow.
00:42:46.532 - 00:42:47.934, Speaker B: What was the return like?
00:42:48.052 - 00:42:53.022, Speaker A: I think we multiply the money by two, almost. By two?
00:42:53.076 - 00:42:54.560, Speaker B: Yeah. That's pretty good, though.
00:42:55.130 - 00:42:57.878, Speaker A: In, like, 1 minute. Yes.
00:42:57.964 - 00:43:04.280, Speaker B: Like insane. Oh, man. That's like a VC's dream, right?
00:43:05.210 - 00:43:31.790, Speaker A: Yeah, I think that was the best dopamine shot of my life because there was so much stress of when it's your own money, you don't really know. You care about your own money, but it's not really important if you lose it. Yeah, but when it's your friend's money and they're like, no, take it, no worries. But then I saw that it worked, and I was like, Damn.
00:43:32.450 - 00:43:48.390, Speaker B: Goddamn. All right. Yeah. Okay, so when you built this bot, did you build, like, a Twitter scraper as well for basically scanning his tweet? If it just had the token name or symbol, you're just like, okay, search the pair up.
00:43:48.460 - 00:44:22.486, Speaker A: Yeah, the bot was just fetching the pairs on Binance and subscribing to the Twitter feed of McAfee. And if he was doing a tweet matching with a token, then we just buy it and instantly send the sell transaction because there was so much volume that even if you send directly sell transaction, it could take like 30 seconds to 1 minute to get validated.
00:44:22.618 - 00:44:33.486, Speaker B: Oh, got you by the API. Was this on finance or on finance? Yeah. Okay. Yeah. That's so interesting, though, and the funniest.
00:44:33.518 - 00:44:44.706, Speaker A: Part of it is that it was running on a free AWS instance with one core and 512 megabytes of Ram. Jesus.
00:44:44.818 - 00:44:48.070, Speaker B: You basically just put in a new email and did like, a free trial.
00:44:49.070 - 00:44:53.546, Speaker A: Yeah, it was like the free TRDM that you can get for free. Just in.
00:44:53.568 - 00:45:09.760, Speaker B: True X Ten K. Amazing. What are more strategies if you anything else like that? Do you have any more kind of like war stories from the early days?
00:45:13.250 - 00:45:16.450, Speaker A: I have a lot of stories like this, but I don't always remember them.
00:45:16.520 - 00:45:23.700, Speaker B: Yeah, it's just like constant new stuff coming out. Build scrappy little bots in a couple of hours and run them. Basically.
00:45:25.590 - 00:46:11.438, Speaker A: That's what I said before that you don't need to focus on the performance stuff and that kind of shit. You just need to be the first and be smart about it. Like for the JavaScript bot of McAfee, it was really one of the worst code I made, but I just had a good idea to put the instance in AWS. I don't remember the data center, the one in Virginia, because I knew that the API at the time was there and I think that's all I won against the other people. You just need to think about the stuff and don't need to optimize.
00:46:11.614 - 00:46:24.354, Speaker B: Yeah, just get something that works out as fast as possible. Interesting. Yeah. That's amazing. Did you ever open source that or is it still in the archives, this bot?
00:46:24.402 - 00:46:29.542, Speaker A: Yeah, I don't even know if it was using a git.
00:46:29.686 - 00:46:30.540, Speaker B: Oh, wow.
00:46:31.310 - 00:46:38.906, Speaker A: Write a notepad and then maybe I still have it on my computer. I should check. Yeah.
00:46:38.928 - 00:46:58.434, Speaker B: I think any new search is basically doing the same thing as what you're doing. It's just finding some super niche thing. It could even be like the same strategy. Build it, it lasts for a couple days or weeks. And maybe just release it because that's basically your credentials. Right. The alpha is no longer there.
00:46:58.434 - 00:47:10.470, Speaker B: It's not going to work. You may as well release the code and then that's how you can kind of propel yourself into a full time job working with a team or even just like attract people. Right?
00:47:10.540 - 00:47:38.286, Speaker A: Yeah. And one other alpha that was super easy to implement, I did not do it, but really, it's like 100 line of code is that one must replace the Twitter logo with the DOJ logo. You could just have a script that check, I don't know, two times per second. If the logo is back to the Twitter logo and shot the DOJ and you could have made money.
00:47:38.388 - 00:47:38.942, Speaker B: Oh, yeah.
00:47:38.996 - 00:47:42.622, Speaker A: And it's like not even 200, 100 line of code.
00:47:42.756 - 00:47:59.742, Speaker B: You're basically just like yeah, meva is not just limited to on chain, it's also what's influencing it outside of the chain as well. Like these big personalities. Yeah, I think that's really outside, like, thinking outside the box strategy.
00:47:59.806 - 00:48:01.098, Speaker A: Yeah, that's JD.
00:48:01.294 - 00:48:22.910, Speaker B: Yeah. Most people are just looking on chain like, okay, how do I read this contract. Okay. Is there anything specific in this? No. Okay. Onto the next looking all the transactions in a block, but then there's always the guy that's thinking even more broader and macro. Just like what you're doing, looking at the profile picture change scraping that.
00:48:22.910 - 00:48:31.360, Speaker B: Okay, it's changed. Let's build a little switch thing and then throw it on like an AWS child.
00:48:32.130 - 00:48:38.142, Speaker A: Yeah, that's actually amazing. But that was the early days, so yeah, maybe it would not fork anymore.
00:48:38.206 - 00:48:39.860, Speaker B: But never know, man.
00:48:41.190 - 00:48:42.434, Speaker A: Yeah, we never know.
00:48:42.552 - 00:48:49.590, Speaker B: Make all my money through scraping Twitter tweets. That's the true alpha at Project Blank.
00:48:50.090 - 00:49:04.810, Speaker A: Yeah, no, right now we do like serious bots that really go deep into optimization and stuff. Yeah, but there is still like a lot of money to make with shitty shell scripts for sure.
00:49:04.960 - 00:49:31.570, Speaker B: Oh man, now you've got me excited. I'm going to go scrape some Twitter profile. I think even just like following the right people as well and just tracking their tweets and seeing common patterns. Maybe someone tweets. I'm pretty sure you'll see a tweet of someone like shilling, someone big with a lot of followers, like a token, and then you can instantly jump into maybe a whitelist or something. Front run the whitelist?
00:49:32.710 - 00:49:43.942, Speaker A: Yeah, I'm pretty sure that if you bought some crypto camera influencer, we can get a few percent every time they treat something.
00:49:44.076 - 00:49:54.620, Speaker B: Yeah, exactly. You don't even have to be inside their alpha group. As long as you're in front of all of the normies copying their trades, that's still a viable option now, right?
00:49:55.070 - 00:49:59.146, Speaker A: Yeah, it's a viable yeah.
00:49:59.328 - 00:50:24.430, Speaker B: Yo man, this has been terrific. I've actually really enjoyed this and I think those little war stories were excellent. I definitely need to listen to some more, man. Awesome. But yeah man, it's been a pleasure talking to you Raph. Thanks so much for coming on and taking the risk of getting a little bit of fame for Project Blank. Maybe you get hit up from some VCs now some more.
00:50:24.430 - 00:50:27.270, Speaker B: Yeah man, been a pleasure and I hope it all goes well.
00:50:27.420 - 00:50:28.134, Speaker A: Thank you.
00:50:28.252 - 00:50:29.620, Speaker B: No problem. Take care everyone.
