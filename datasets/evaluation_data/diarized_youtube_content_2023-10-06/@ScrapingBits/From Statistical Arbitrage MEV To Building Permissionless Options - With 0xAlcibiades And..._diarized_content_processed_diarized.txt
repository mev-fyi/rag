00:00:00.490 - 00:00:32.280, Speaker A: You could go and write an option and sell it along off, or you can go and buy an option and buy the long and hold it and get leverage. And you can obviously compose puts and calls and get into more advanced strategies. So some of that's going to be interesting when we're doing like, straddles and strangles and butterflies and condors. We're going to be releasing some interesting strategies over time for people to execute very simply where they can take more advanced market perspectives than you can with Spot. And we think that'll be interesting and novel for crypto users on these tokens that they've never been able to do it on before.
00:00:34.170 - 00:00:41.770, Speaker B: GM. GM. Everyone. My name is Dugatchi, the host of Scraping Bits, and today I'm with a special guest. Al, how's it, man?
00:00:41.840 - 00:00:48.940, Speaker A: Great. Here in sunny Florida, building all the alligators. We love it.
00:00:50.030 - 00:00:55.146, Speaker B: I think we should do a quick intro of who you are and what you do, just to give some context.
00:00:55.258 - 00:01:08.258, Speaker A: Sure. So, Mal, I'm the CEO head of technology at Valorum, and we're building a new paradigm of decentralized options to launch on Arbitrum soon.
00:01:08.424 - 00:01:15.558, Speaker B: And how did you kind of get into all this stuff? So why did you choose an options platform? Optimism, all that stuff.
00:01:15.644 - 00:01:43.706, Speaker A: Yeah. So how came about? I have a background adjacent to finance. I was an infrastructure engineer at Bloomberg and at De Shaw and never directly attached to finance stuff, but always curious about it. And in 2020 when DFI really started going, of course, was nerding out in DFI and using it and looking at it and eventually quit my day job to go do mev searching and also to kind of become a smart contract consultant. Right, when?
00:01:43.728 - 00:01:46.202, Speaker B: About when you got into mev.
00:01:46.346 - 00:02:24.442, Speaker A: Yeah. This would have been like spring of 2021, right, when Flashpots was coming around and yeah, it was like a very interesting time for me. Right. Well, it changed from being like, oh, let's be in the mem pool, to this off mem pool, kind of sealed auction to get the top of block. And it was all about top of block and it was all about gas efficiency if you were doing any of the fathead strategies, which were things at that time. So if you go dig around in my GitHub history, you'll see I open source, like my mev bot that would do this graph based Arbitrage search between Uniswap and Sushi swap. Yeah.
00:02:24.496 - 00:02:26.470, Speaker B: And how long did you spend on mev?
00:02:26.550 - 00:02:41.182, Speaker A: So I was doing that pretty much nights and weekends from maybe February of 21 into the summertime around June. It's still like working the day job, right. So it was a hobby horse, but it was very fun.
00:02:41.236 - 00:02:43.598, Speaker B: Oh, yeah. How did you manage to juggle it?
00:02:43.764 - 00:02:59.254, Speaker A: I guess nowadays in June, I quit the day job and I was looking for something that could be a bit more of a consistent business and got into smart contract consultancy both independently and through Raid Guild, which was my first exposure, like working in a Dow. Right.
00:02:59.292 - 00:02:59.622, Speaker B: All right.
00:02:59.676 - 00:03:04.806, Speaker A: And definitely very interesting form of working. Different than what you do at companies.
00:03:04.908 - 00:03:12.920, Speaker B: Yeah, it would have been completely like 180. So I guess what was kind of the onboarding process, getting into Web free.
00:03:13.870 - 00:03:45.974, Speaker A: Yeah, it was cool. With raid guild. I found it. I ended up in the Discord and talked to some people and came in on a Cohort. It didn't immediately work with it because I was busy with the day job and the mev. But later I was like, hey, guys, I'm thinking about going full time Web Three, what do you have? And just started doing all these cool, different small projects. It's mainly a shop that does proof of concept builds and early builds for founders and people who are looking to build a new project.
00:03:45.974 - 00:03:52.678, Speaker A: So got to do like a bunch of different stuff, which is a cool way to come into the space. It was definitely a good way to get exposure to a lot of stuff.
00:03:52.764 - 00:04:03.530, Speaker B: Yeah. And did you already have connections there? I guess. How did you meet everyone and start to build this brand? Because I imagine you just didn't have a brand at all from scratch. Right. Or did you already have, like, a Twitter established?
00:04:04.190 - 00:04:34.260, Speaker A: Yeah, actually, it's interesting you ask about that. My personal brand for Alcibiades, I had considered more towards that sort of summer of 2021. What that might be is a smart contract consultant then put together a landing page with the services I offered and all that kind of stuff and did actually a consult with a brand consultant companies called Cult Method. And he helped me kind of develop the brand for it, which is super good. Can recommend. He's a good guy.
00:04:34.790 - 00:04:40.440, Speaker B: And so you built the brand from scratch and then, I guess how did you even get your name out there to begin with?
00:04:41.690 - 00:05:06.958, Speaker A: Sure. Going to conferences, talking to people in various Discords, probably in like 30 or 40 different Discords. Talking a lot in Flashbots. Right. Made a lot of connections in the Flashbots Discord. But, I mean, that's the cool thing about Web Three, right? Like, you come in, you find something interesting, you join the Discord, you contribute, and if your contributions are good, you become a member of the community, which I thought was like a cool and novel thing that there's very little gatekeeping. Right?
00:05:07.044 - 00:05:24.020, Speaker B: Yeah. I remember when I started, people always told you to get involved in a community and that's where you grow the most and find the most opportunities. I was always confused of how to really get ingrained within a community. So I guess what did you do to basically do that?
00:05:24.630 - 00:05:41.500, Speaker A: I mean, particularly with Flashbots, I just started writing code and talking about it and talking about the research. Right. Was how I got into MEB. And then with Raidguild it was like let's go build some smart contracts and went and built a bunch of smart contracts. I'm a builder so the way that I get into communities is by building.
00:05:41.870 - 00:05:45.980, Speaker B: Yeah. Did you just open source stuff or was it mostly just asking questions?
00:05:47.710 - 00:05:55.840, Speaker A: So it was asking questions. I open sourced a lot of the stuff, particularly around mev after the fact because obviously there was some Alpha there.
00:05:57.570 - 00:06:07.538, Speaker B: Yeah, I think it's pretty hard to get into Mev, especially now with all the teams and the higher competition. But imagine back what was it kind.
00:06:07.544 - 00:06:44.766, Speaker A: Of like yeah, it wasn't the same thing. Right. And so that's one of the reasons I made the transition to smart contract consultancy instead of mev, because it's very much like you said, a super competitive Red Queen theory type thing. And around the summer of 21 was when you started to see serious teams who are doing it full time. And I was like a solo doing it as a hobby thing. It became something that was like, well, diminishing returns at some point unless you want to go form a team and whereas kind of my belief in building things is that when you're creating net new things, you're playing positive sum game and Mev is a negative sum game. Right.
00:06:44.766 - 00:06:48.960, Speaker A: It's very interesting, it's very fun, but ultimately the profits will diminish over time.
00:06:51.010 - 00:07:01.010, Speaker B: And it's basically like once you build this whole system and you're not winning more often than not, then you don't really get anything out of it that's net positive for the ecosystem.
00:07:01.910 - 00:07:07.686, Speaker A: Unless I guess what you learn and the friends you make along the way. Right, yeah.
00:07:07.788 - 00:07:26.650, Speaker B: But still doing Mev, I guess it's not as friendly as being a smart contract developer because everybody's hiding. I guess alpha don't want to help with questions, misdirect you when they can. So it's kind of like a PvP type arena.
00:07:27.230 - 00:07:52.946, Speaker A: It is, but that can be fun. And in fact, some of the closest relationships that partnerships for my business right now came out of my time in Mev. Right. Like our market maker, Dark Force Research is somebody that I met in the, you know, back in that there's there's some long term partnerships that came from that time for me. So I definitely look back upon it pretty fondly. Interesting. Yeah.
00:07:52.968 - 00:08:00.950, Speaker B: I guess there is always the exception of friendly games and I guess did you team up at all or was it mostly just like chatting with other searchers?
00:08:02.490 - 00:08:11.814, Speaker A: It was mostly chatting with other searchers and then there was a chance to team up but I teamed up at Raid Guild instead with other raiders and went and built product.
00:08:11.932 - 00:08:23.246, Speaker B: Yeah, yeah. And I guess how did you kind of transition into where you are now? So how long were you at Raid Guild for doing just consultancy as well and then getting to where you are.
00:08:23.268 - 00:09:23.226, Speaker A: Now from summer of 21 probably until spring of 22, I was doing more or less smart contract consultancy at Raid Guild. One of the big game changers for me in my Web Three journey was working with one of my other persons who's involved in Valorum. Now we discovered a civil attack going on on the ENS AirDrop and we prevented that and in preventing that, got like a pretty significant bounty, which we weren't looking for. We did it as a purely whitehead thing and told the ENS team about it. Yeah. And then they're like, here are some tokens, which is what kind of gave me the capital I needed to start thinking about a business that wasn't a service but a business. And so one thing I had seen in the mev stuff towards the kind of end of my involvement there and then looking at it from the outside, was that a lot of the, let's say, like a double leg strategy, a two legged strategy of SushiSwap uniswap arbitrage, started to get squeezed out by statistical arbitrage.
00:09:23.226 - 00:09:59.420, Speaker A: So somebody would come and sit on one leg or the other and wait for the ARB to emerge and then come back. And they were doing this with quite a bit of capital. And so I started thinking about on these long tokens how a searcher that didn't have that much capital might be able to do statistical arbitrage and remain like hedged using options and that there was a need for options on long tail tokens right, that wasn't being served. And so that's why I started thinking about Valorum kind of beginning of 2022 and ideating it. I think that's, like, in my journal, maybe the first time I talk about this idea of a permissionless no price oracle option system.
00:09:59.790 - 00:10:03.930, Speaker B: And just for the people that don't know what is statistical arbitrage, I mean.
00:10:04.000 - 00:10:36.280, Speaker A: It'S looking like if I sit on one side of a position, what's the likelihood that I'm going to make or lose money? And then you can kind of hedge that. Right. That's how I would describe it. Simply. So instead of like atomic arbitrage in mev, where you go to one side and you come back in the same block and you've taken your profit, you're now taking a chance over time, which is an evergreen strategy if you're good at calculating. And it's not something that can be completely squeezed out. Whereas atomic arbitrage eventually is erased to the bottom and you can squeeze out every single way of profit, basically.
00:10:36.970 - 00:10:55.226, Speaker B: So it's basically like people holding these shitcoins, just waiting for someone to interact with it and then going from there. And that's how you got the idea of these permissionless options. So people can actually kind of leverage this if they had no capital because.
00:10:55.248 - 00:12:01.618, Speaker A: That was kind of like the no or low capital. Yeah, because the person who I saw doing it, I think it was like zero x 56 or zero x 57, that big wallet that people were always talking about at that time and they had like $150,000,000 of capital or something. And so it's like as a searcher with maybe say $50,000 of capital, how can you run these same sorts of strategies as like a solo searcher? And then I was also looking at the success of things like Ribbon at that time and some of the things I thought maybe weren't that great about things like Ribbon at that time and how it could be done better and Open and these other systems. And so it's an interesting design space because you look at what played out in equity markets in the where derivatives became way bigger than Spot and in crypto there's derbit, which is big, but it's still way smaller than Spot. And then on chain, derivatives is like a tiny fraction of what spot trading is on chain. And I don't believe it's going to stay that way. And I think there's a giant unserved market waiting for something good to come along there.
00:12:01.618 - 00:12:07.160, Speaker A: So it was like the biggest unserved opportunity I saw DeFi when I started building this.
00:12:08.410 - 00:12:20.518, Speaker B: And I guess how did you approach building it in the first place? What was kind of the process from, okay, I have this idea, to building this first open beta.
00:12:20.614 - 00:12:56.420, Speaker A: Yeah. So I was at the ETH Denver hackathon and started talking to people in February 22 about this idea and kind of secured a little bit of grant money and some early funding. Maybe not that much, but enough to go build a marketing website and kind of fund a simple front end getting built and went and built a first cut of this in the summertime and then started building an API for it to be traded on and then got more serious with it and went full time with it in the fall.
00:12:57.190 - 00:13:00.918, Speaker B: So you needed like capital to basically start this or you were just kind.
00:13:00.924 - 00:13:41.790, Speaker A: Of like a little bit I do back end, right, but bring a front end dev and write a react app and that sort of the things that I couldn't do. But yeah, needed to raise capital. It was kind of inauspicious timing to raise because right when I started thinking about raising capital was right when the whole Terra Luna implosion happened. Sheets from people who were going to invest and they're like, I can't now, no, kind of had to bootstrap it, right? I mean, thinking back, I had an offer right at ETH Denver for this idea, like when I had a one pager on it basically for a million dollars in funding for 10% of it on a one pager. And I was like, no, that's a bad deal. It's a way bigger idea than that. I'm not going to take the money.
00:13:41.790 - 00:14:16.958, Speaker A: And then I proceeded to go and collect small angel tick it's for the entire year to raise the same amount retrospect. Probably should have said yes to that. You know, it was not the greatest time to be raising in crypto during the bear with all these instabilities around FTX and Terra Luna and all these other things. Interestingly, if Valorum had existed at the time of Terra Luna, people could have hedged themselves against stablecoin DPEG because you can do stablecoin DPEG insurance with Valorum, right? You could do stable stable puts. So that's another kind of use case why it would have been cool to have at that time.
00:14:17.044 - 00:14:23.760, Speaker B: Yeah, it seems like a critical piece of infrastructure that is vacant right now and you're kind of like taking the slot, right?
00:14:24.610 - 00:15:18.370, Speaker A: Yes, that's what we're trying to do, so let's make it happen here. But yeah, it's a lot to build though, right? Like basically building the kind of difference in Thesis and what's been done before is most of the options things that have come along they've been vertically integrated system that has like an AMM and pricing models built into the AMM and all these kind of very opinionated stances versus what we've tried to do with Valorum is build a clearing system and then a trade API that people who have opinions about pricing options can hook up to and then trade those options peer to peer with each other. Which is a different take and I think a better take. But having those separation of concerns and clean abstractions between those systems definitely was a lot of work as a small team to build out. I could talk more on that, but yeah, it adds a little bit of time to market. For sure.
00:15:18.520 - 00:15:33.666, Speaker B: Yeah, for sure. And I guess how did you kind of approach building it step by step? So what did you build first and did you basically write out the architecture and then start building? Or were you kind of building and writing the architecture at the same time? How did you go about that? Like planning and then executing?
00:15:33.778 - 00:16:03.520, Speaker A: Yeah, a lot of the idea was done by the spring time of 2022, but the implementation probably really took until well into October to have solid and be like getting ready to send to audit. And then we could talk about the smart contract security effort that we went into, which I find interesting, but given that it's like the way it works is an ERC 1155 multi token standard, basically with this clearing system built on top of it.
00:16:04.050 - 00:16:07.006, Speaker B: And what is the clearing? Just for some background?
00:16:07.118 - 00:16:50.286, Speaker A: Yeah. So imagine that there's a holder of option, there's a writer of option. They're counterparties to each other, but the clearing system acts as a counterparty for each of them. So, like, the holder of the option is a counterparty to the Clear system. The writer of the option is a counterparty to the Clear system. They both get a tokenized representation of, in the case of the holder, the long position, and in the case of the writer, the short position. And then they're able to settle the movement of funds with the clear smart contract to disintermediate counterparty risk that you would see, say, in traditional over the counter derivatives trades, right? So it acts as a clearing mechanism is basically what it does.
00:16:50.286 - 00:17:39.582, Speaker A: And those positions are tokenized this ERC 1155. Now, the upside of using ERC 1155 is that it's way more gas efficient to deploy novel option types, novel option chains. So instead of 2 million gas to go deploy an ERC 20, you're talking about 150,000 gas to create a new option type, which matters if you're doing, say, daily options. The downside of it is that none of the AMMS and other things out there work with ERC 1155. There was actually like, how are we going to let people trade ERC 1155s, right? And actually, Openc kind of came to the rescue with Seaport. When they put Seaport out there as a public good, it was like, okay, we can use this to let people trade this. We just need to build a back end to go on top of it.
00:17:39.636 - 00:17:39.806, Speaker B: So.
00:17:39.828 - 00:18:13.530, Speaker A: Thank you. OpenSea. So the answer to your question about architecture, right? It didn't happen all upfront. A lot of it happened up front, but then a lot of it of course, as you start building something, you learn, right, you can't always think of everything ahead of time. So building Clear, a lot of that did happen up front, but building the trade product, we lucked out in getting this big thing from OpenSea and then even making it all the way to Audit. With Clear, there are some things we look at afterwards like, oh, could have done that differently. So they'll definitely be future versions.
00:18:13.530 - 00:18:19.500, Speaker A: You do what you can in foresight, but as humans, we have limited foresight, right? And you learn things and things change.
00:18:20.350 - 00:18:27.242, Speaker B: And then how did you go about basically securing this? We mentioned what do you call off recording use Lot invariant testing.
00:18:27.306 - 00:19:02.570, Speaker A: Yeah. So towards the October 2022 time frame, when the Clear system had really come together, started to get our first significant funding, able to bring on some employees that weren't very part time or just kind of involved out of interest. And I was down at Devcom Bogota and I met my now head of product, but also really awesome, solidity Dev Neo Daoist. And we were, like, talking about EVM Opcodes in this elevator in Bogota at 01:00 A.m., right? I was like, okay, this is a guy I want to work with. Yeah. Serendipitous meeting.
00:19:02.570 - 00:19:39.894, Speaker A: So we stayed in touch after the conference. I brought him on and we basically used foundry and went got unit tests and invariant tests and property tests fuzzing in place on this thing, got up to 100% code coverage before we sent it to Audit, which is something I think a lot of products and projects don't do a good enough job of. So that when the auditors got this thing, they were able to focus all of their energy on economic attack vectors and game theoretical imperfections rather than off by one errors, which is not where you want your audit dollars going.
00:19:40.092 - 00:20:13.070, Speaker B: Yeah, you want the whole landscape kind of Game Theory stuff. That's where the critical things come about. I think. Majority of the easy ones can be done from invariant or just unit tests, I guess. Pair that up with some fuzzing and you're quite set for majority. But yeah, that's what you kind of want to get normal, I guess security researchers and auditors to come in is for the really hard stuff, the creative kind of attacks.
00:20:13.650 - 00:20:56.394, Speaker A: Yeah, I mean, we discovered some interesting things right there was and we've mitigated it mostly now, but like a probabilistic imperfection in our assignment of exercise because we were incrementing the settlement seed every time. And so you could game the exercise assignment and we went down this bit of a rabbit hole in developing like a random forest. Iterative log runtime probability mass function generator to mitigate this. Right. You want to talk about getting nerd sniped in an audit. And we're like two months into building this thing, which is really cool and something we'd love as we have more funding to do for version two to make this thing absolutely perfect. But what we ended up going with for the mitigation was like not incrementing this edelmate seed and making path determinism for exercise.
00:20:56.394 - 00:21:15.220, Speaker A: So it was deterministic but could not be gamed. And basically the only thing that you can do now is choose not to write at some times if you don't want to. But yeah, definitely audits. When they do go deep like that, they do get into Game Theory. There is a thing where you can go really deep on it if you want to, even to the point of danger for actually getting it done.
00:21:17.270 - 00:21:43.466, Speaker B: Yeah. I wonder if it's even possible to hire like an in house security auditor to just like keep on, you know, thinking about these Game Theory kind of exploits. Is that something you've wanted to explore or not necessary to? Basically like whatever iterations you make, they can basically find or keep on working on the code base for as long as it's out instead of just hiring like a team for a couple of weeks.
00:21:43.648 - 00:22:33.600, Speaker A: I mean, the way that we've aligned it right, is Zelek, who is our auditor, is now also like a close partner. And so we'll be using them continually. And our kind of plan for that is like, we release 10 and we're going to do minor point releases a lot like Seaport does. We'll have smallish deltas on the minor point releases. And since Zelek already built out a threat model, we'll continue to use them as our primary auditor. We're all very security minded on the protocol team at Valorant, but you do need somebody who's outside of the day to day, I think, to kind of see the forest for the trees, if you will, and see it a different way. I'm not sure that an internal person can play that red team long term, but I think a close partner who has looked at the code base already to shave down the costs of bringing in a brand new auditor each time, that's kind of the way we're looking at it now.
00:22:34.370 - 00:22:44.850, Speaker B: Yeah. And I guess what do you look for as a protocol developer in an auditing kind of report team output?
00:22:45.510 - 00:23:37.378, Speaker A: Yeah, I mean, I want to see like we did with our audit, I was very happy. A threat model, any invariance, they can identify really detailed impact write ups on any findings they have. But if you go check the Valoram audit, you'll see that there's like a 30 plus page threat model that talks about every single user input and then what those can impact and traces it all the way down through the internals. And so that's high quality lets us make an assessment that's high quality from an auditor. Right. I think you only can get that one with the right auditing firm, but two when you have the pre audit work done. And I do think that that pre audit work, by the way, is an unserved market segment for a lot of projects who maybe don't have those security minded folks on the team who would really benefit from a pre audit firm that wasn't the auditor to go in and do that test coverage and that kind of thing.
00:23:37.544 - 00:23:46.020, Speaker B: Yeah, for sure. And how did you go about basically creating your invariance? What's the kind of process for doing that?
00:23:47.030 - 00:24:35.266, Speaker A: Yeah. Our core invariant is that the Clear product must remain collateralized up to the maximum possible liability of Clear. There's actually some interesting things there when we thought about that more when I talk about how you can't architect everything up front. Right now, Clear is fully collateralized, but it doesn't need to be fully collateralized. It only needs to be collateralized up to the maximum theoretical liability based on the outstanding options and claim ticket positions for the longs and shorts. So there's some more work to do there that I don't want to quite go into yet because there's some plans that I'm not quite ready to share, but no problem. It's interesting when you reason about your invariance that it can actually unlock these sort of new design basis.
00:24:35.266 - 00:25:23.198, Speaker A: But that's the core one because we want to make sure that all the counterparties can get out what they need. But there are some others, if you go poke around in the code base and just kind of thinking like, well, do all the claims add up, do all the options add up? Is the outstanding supply what we think is going to be basically a lot of totaling and summing that you can do with Forge Foundry that you can't necessarily do on chain gas efficiently. So you can write up actors. Right. And then you can have these actors do a bunch of different things and make sure that the property holds without having to add the overhead of checking it every single time at Runtime. Although I will say I did see a case made by some of the Nascent guys recently that it makes sense to check your core invariant on every single function call that moves funds and their thesis. That's why Uniswap v two hasn't been hacked.
00:25:23.198 - 00:25:27.320, Speaker A: And I think there's some validity there and something to definitely think deeply about.
00:25:28.970 - 00:26:09.460, Speaker B: Yeah, I definitely think invariance is kind of the core of testing because that's your business logic and there's no real way to know what's happening without them. And I think that's where automation falls short as well. Since invariants are so specific to each code base and the business logic of each code base, then you can't really know what's to look for. But since you know it, then that's like a massive advantage and it's what people should definitely look for. But just to switch over a bit, I guess the process of building the team and I guess juggling multiple hats. How did you manage to do that?
00:26:10.070 - 00:26:38.234, Speaker A: Yeah, I mean, it's basically been people I've met. I hit the conference circuit pretty hard for a year and a half, two years, and met many, many interesting people. And some of them would have interest in the project and some of them wouldn't. And the ones who had interest in the project and who were skilled, I would try to get to join me on the journey. And I built out a pretty cool team and it happened kind of organically. So my thing in bringing people in is like, come in, try it out. If it works, stay.
00:26:38.234 - 00:27:02.420, Speaker A: If it doesn't work, don't. And built out a team of five people. Probably had like ten people come in and out with varying levels of interest on the project. And I think we've got an interesting shop at Valorum and I'm interested to see how that team grows over time. But we're all super passionate about building a future of decentralized derivatives and kind of solving the product market fit for DeFi options.
00:27:03.670 - 00:27:14.600, Speaker B: Yeah, sure. I think what was kind of like the most difficult thing of, I guess hiring because of course you can get along with people, but I think incentivizing them and getting them aligned with the vision is quite hard.
00:27:15.210 - 00:27:57.382, Speaker A: Yeah, I think it's finding people who believe in your vision is a big part of it. Rather than trying to align people, so it's people who see the value and then yeah, providing them with the right incentives is the way that I've looked at it and the way that I've had some success with it. The other thing I think that's important is ways of working in keeping people engaged when you're like a globally distributed asynchronous team with people from the Ukraine to the Pacific who are working on the team. So there's like. A nine hour time zone spread and what are the core hours where people are online and talking to each other and how do we talk to each other through up mediums? I think that's important to think about as well.
00:27:57.436 - 00:28:09.210, Speaker B: How do you properly incentivize people as well? I guess obviously salaries and equity as well, but how do you kind of determine what's best and what they want?
00:28:09.280 - 00:28:56.742, Speaker A: Yeah, I'm going to sound kind of Web Two here, but I think the salary plus equity plus target bonus structure works really well for people. I think you need people who are missionaries and not mercenaries. I've done some stuff on contract basis with people building out different pieces that can work as long as the milestones are well defined but ultimately is going to cost the project more at the end of the day. So you need passionate people who are willing to show up for salary and equity and then maybe bonus when the thing starts making some money and then just build it. It's pretty simple. It's been great mainly because the people that I found have been great and have been easy to work with and excited about the project. Right.
00:28:56.742 - 00:29:11.546, Speaker A: And if somebody's not well, then that's not going to work out. Building a startup in Web Three, especially here in the Bear, you got to be a believer in the cost and.
00:29:11.568 - 00:29:19.006, Speaker B: I guess how do you approach scaling as well. So obviously when you bring on more people you're going to transition more into like a managing role. Right?
00:29:19.188 - 00:29:46.546, Speaker A: Yeah. I mean, it's interesting because I found myself as recently as like two weeks ago between full time and part time people being like the manager for eight people and then trying to write code and also dealing with investor relations and business development stuff for the launch. Yeah, it gets a little rough. So there's a point where you have to start delegating. Right. My head of product now has his direct reports. I have some direct reports, less direct reports.
00:29:46.546 - 00:30:41.394, Speaker A: And we actually have a pretty cool plan for that, where eventually we end up with Head of Marketing, head of product, head of tech, and then they have direct reports and teams underneath them and like, two product teams. Kind of one for clear and one for trade. Kind of separating out those teams that are one right now and making sure nobody has more than, like, five direct reports. They can manage effectively and still be either a player coach or part of a strategic team as we grow to maybe 15 people. But one of the cool things with DFI is that there's not a linear relationship between the amount of employees and the valuation and ability of a project to provide value in the space because it's extremely high leverage. You're leveraging the blockchain tech, you're leveraging cloud technologies. So when we go to market, we're not going to have or maybe we will have 2000 users, but we're able to service 2000 concurrent users with our API, no problem.
00:30:41.394 - 00:30:59.280, Speaker A: And we could scale that way up from there with not that much work. So there's not like a linear relationship to, let's say, like total value locked or total revenue or total operating expense to the amount of employees that need to be working on a project or the amount of contributors that need to be working on a project.
00:31:00.290 - 00:31:16.130, Speaker B: Yeah. And now that you have open beta available, how do you kind of approach the beta? And I guess seeing what people like and dislike and then approaching what to change or maybe adjust.
00:31:17.830 - 00:31:50.080, Speaker A: So we've done quite a bit of thinking about that. Particularly Neodowist, who's heading a product of Lorem, has done a lot of thinking about that. Right. We have metrics instrumented throughout the trader app and throughout the trade API to capture positive and negative health metrics. Right. And to track funnels conversion, funnels retention metrics, negative experiences. Like when a trader can't make a trade because there's insufficient liquidity and try to optimize those positive and negative things to make sure it scales and that we're retaining the users and that the users are happy.
00:31:50.080 - 00:32:23.926, Speaker A: But prior to that, we've been doing a lot of closed beta usability testing with people. So we brought in people to closed beta. It's like, hey, use this thing. What do you think? Let's get your feedback. So our future users have been part of the design process of the user interface. And for the API, even, we talked to our market makers, we've talked to possible takers as users of the API and tried to optimize the API for their use cases too. So we're user first project, right? We think about what the users need, what the users want, what's going to be best for the users.
00:32:23.926 - 00:32:35.246, Speaker A: And we ask them, not directly, but indirectly, and do these sort of experiments to get the best result for them. And we're going to keep running that process and refining it as time goes on. Yeah.
00:32:35.268 - 00:32:58.194, Speaker B: And I guess when did you first do your first kind of beta preview kind of thing? Because I think some people will build out their tool for months on end, but never do a preview. And then once they finally get MVP and release it, nobody wants to use it. So what is the approach you kind of took? And do you think you would change anything? Sure, yeah.
00:32:58.232 - 00:33:51.154, Speaker A: I mean, over the course of the year, I was like, valoram's beta, valoram's beta, valoram's beta, a couple of times over the course of the past year. And I might not have done that as much. I might have been more like, well, let's just take a select group of people in a closed beta and have them work closely and get a little bit of their time and maybe even offer them a little bit of incentive to be like long term closed beta testers. What we did do right, sort of in the past six months that I liked is we got people from both DeFi who are possible traders and also, by the way, people from traditional equity derivatives trading in different capacities to come and usability test with us and kind of bridge that gap. Because the thing we're trying to solve with Valorum is why haven't DeFi options found fit? Why have traditional finance options found fit? And so we've actually gotten a lot of those people from traditional finance options involved in bringing a kind of non crypto native perspective.
00:33:51.202 - 00:34:03.580, Speaker B: Interestingly. Yeah, sure. So it's like multiple views and thinking kind of long term, I guess, like next bull market, a lot of non crypto natives are going to come in.
00:34:04.110 - 00:34:17.280, Speaker A: Well, yeah, I think even now you look at options in equities, you can only trade them 35 hours a week, right? Yeah. Look at options in crypto, you're going to be able to trade them 24 hours a day.
00:34:18.130 - 00:34:19.358, Speaker B: It's going to be crazy.
00:34:19.524 - 00:34:23.700, Speaker A: It's going to be crazy. Yeah. I'm super excited to see where it goes.
00:34:26.550 - 00:34:54.314, Speaker B: I guess it targets all demographics as well. It's not just kind of one specific audience. Anybody can use it anytime, anywhere really. It's not just like one specific kind of user base. So it's quite broad and who can use it and they can use it whenever with whoever. So I think maybe walk through the process of how let's say I wanted to do an option with you. How would that go?
00:34:54.432 - 00:35:30.674, Speaker A: Yeah. So there's a couple of ways that you can use what we built, right? One is the user of Valoram Clear and the user of Valorum clear is maybe a centralized exchange, maybe a decentralized exchange who integrates with Valoram Clear and lets those Valorum Clear options be traded. Maybe it's a DeFi options vault who leverages them in some interesting way. Maybe it's a yearn strategist, something like that. Right. There's the Integrator, who integrates directly with Valormclear. Then for Valoram trade, there's kind of three different classes of user that can come in and use it or three different types.
00:35:30.674 - 00:36:18.974, Speaker A: There's like an automated taker so that's somebody who's going to be writing an automated system that's going to make trades through the API. There's an automated maker that could be either on chain or off chain, which is something we've done differently. Right. So like a maker can either be an AMM soon, not quite yet, or can be an off chain market maker that prices options and they can hook up to this API. And then the third person is what we call web taker. So that's somebody who's coming in from the Valorum trade user interface and making trades with the maker. So if you're a taker and you want to open up, let's say, like a long put or a long call, you're going to be going into the trade UI and buying that from a market maker, selling it to a market maker, but it's all peer to peer, right? So it'd be you corresponding with a maker or makers and getting the execution you want and then optionally taking the quote.
00:36:18.974 - 00:36:54.078, Speaker A: Now you could be a writer too, right, through the UI. You could go and write an option and sell the long off, or you can go and buy an option and buy the long and hold it and get leverage. And you can obviously compose puts and calls and get into more advanced strategies. So some of that's going to be interesting when we're doing like straddles and strangles and butterflies and condors. We're going to be releasing some interesting strategies over time for people to execute very simply where they can take more advanced market perspectives than you can with Spot. And we think that'll be interesting and novel for crypto users on these tokens that they've never been able to do it on before.
00:36:54.244 - 00:37:05.646, Speaker B: What's kind of like an example of one of these novel strategies that maybe you're not going to implement, or maybe you are going to implement, just like an example to give kind of some context of some more advanced strategies.
00:37:05.838 - 00:38:23.162, Speaker A: Yeah, so if you go look at there's this dune dashboard, right, that shows the APIs for uniswap LPs and a lot of uniswap LPs lose money. But a lot of the new tokens, long tail tokens, they have extremely high APY, but people are losing money because of impermanent loss. So one of the strategies we're very interested in releasing is know straddle so that you can hedge your uniswap LP position and pay out some of that APY that you're getting from uniswap, but then open up a straddle using valorum trade and be hedged from your impermanent loss, like these kind of things. And we'll be writing up guides on how to do these sorts of things, but also all the traditional option strategies that you'll see if you go to the OCC education website and look at option strategies to kind of take more advanced things where you're making money on volatility or you're losing money on volatility, rather than just, yeah, I buy Token, and if Token goes up, I make money. It's like, well now you can make money if token goes down or token goes up, or you can make money if token doesn't go down or up. Or you can choose one of those so what we call it is select your market sentiment and then you can choose one of these strategies that matches your market sentiment. Whether you think you're long ball, short ball, bullish bearish, whether you just want to accumulate an asset over time, whether you want to earn income on an asset you already hold.
00:38:23.162 - 00:38:30.782, Speaker A: There are a number of different option strategies that you can take for each of those that we're going to be packaging and providing in an easy to approach way for people.
00:38:30.916 - 00:39:02.694, Speaker B: Yeah, it sounds super interesting and I think it's going to be very interesting for the DJ and sort of contrary views of each other. Someone wants to they think the market's going to go down, the other one thinks it's going to go up. It's just going to be like mayhem. I wonder. It'll be interesting when, I guess the market goes down and everybody's just trying to short it, basically. And then there's no other side. I guess there will be another side, but if it's just like super obvious and everyone's super bearish, then I assume there wouldn't be as much activity.
00:39:02.694 - 00:39:04.490, Speaker B: Or maybe I'm a bit wrong.
00:39:04.640 - 00:39:49.378, Speaker A: Well, I think it works kind of like this, right? Market makers are going to take trades as long as they have the capital available to do so, and they're going to charge a spread and hedge accordingly so that they can keep doing so. So there'll be somebody that's unapinionated and neutral on the other side that's just looking to capture a spread. And of course, if there's a huge market movement, it may be that the makers become short on capital. But I think as there's the traders that are coming in, more makers are going to come to the table. And again, this is something we thought about differently. Like there's potentially going to be, I hope, 1015 different market makers eventually market making these options, who are going to have different perspectives and different pricing models. And hopefully it'll remain pretty liquid even in different market events.
00:39:49.378 - 00:39:58.618, Speaker A: But no way to tell until we see how it plays out. In reality, it's very hard to model all of that, but architecturally we've approached it in the most flexible way possible.
00:39:58.784 - 00:40:10.240, Speaker B: I'm going to shift the conversation to basically how do you kind of structure your day? Juggling like a team, managing the team and also doing technical stuff as well. It's quite a lot happening. Sure.
00:40:10.690 - 00:40:40.482, Speaker A: And I mean, I would add to that that I'm a family man, right? Married with three kids. So there's that going on too. Yeah. How it's been looking lately is pretty cool. So I wake up at 07:00 a.m. I don't set an alarm, actually, the sprinklers that start in the backyard wake me up, which is a pretty peaceful way to wake up to the sound of running water. And then I read all my emails, read all my chat messages, kind of catch up with anything because again, we're like this global team, right? So stuff is happening while I'm asleep.
00:40:40.482 - 00:41:24.982, Speaker A: There's people coming on in Europe before I'm awake. And so I catch up on all that. I review the calls for the day and around like 09:00 a.m. After I've had my coffee and maybe I've taken a walk or gone to the gym, I'll either ride my bike or drive my car to the office. Which is like 3 miles from my house and sort of sync up with the people who are in Europe, who are devs, who are on earlier and then kind of try to knock all my meetings out by about 01:00 p.m because I'm trying to follow the whole maker time manager time split right now that Paul Graham talks about where I do all my meetings and talking and all that in the morning. And then we have our stand up at noon where we kind of review everything we're doing on Monday and Friday we have our planning and what we call our Friday wins where we plan the week and then review what we did well.
00:41:24.982 - 00:41:42.062, Speaker A: And then we kind of do a retro on Monday. We don't really get into any negatives on Friday. We want to go into the weekend with good vibes, but in the afternoon I'll do coding. Sometimes I'll go late into the night. My best flow states really, though, on code happen between like 11:00 p.m. And 06:00 A.m. Sometimes.
00:41:42.196 - 00:41:46.640, Speaker B: Yeah, same like the worst hours.
00:41:47.650 - 00:42:08.230, Speaker A: Yeah. I feel like there's some different energy when everybody's asleep, including the family and everybody else who's working, and it's just like the quiet time for deep work that goes on late at night. As a programmer, that's always been my thing, but now I try to shift that a little earlier so I can be on in the morning for Manager.
00:42:10.890 - 00:42:17.240, Speaker B: Guess, like, what's the what's your go to strategy for getting into flow state and then managing that kind of time?
00:42:19.370 - 00:43:01.000, Speaker A: Yeah, Apple focus modes. Dude, I mute all yeah, I mute all notifications. I turn off everything when I'm ready to go do code, and I open up my IDE and I have a coffee or sometimes maybe even a little bit of chewing tobacco if I really need to get super focus, and then I'll just go in. The thing about deep work for me as a developer is it takes me like a half hour to really get in context and then I can go and I can go for like 12 hours. So it's also about knowing when to shut off the flow state so you don't end up staying up all night.
00:43:01.370 - 00:43:11.820, Speaker B: Yeah. And how do you kind of manage distractions? Because obviously there's Twitter and I guess if you're on Discord or any kind of thing like Slack, do you just shut them off and just hope you don't touch.
00:43:13.710 - 00:43:49.686, Speaker A: No, no, I shut them off. Shut them have like a I have a coding focus in the Apple thing that mutes everything except for emergency calls from family members. So when I really want to code, that's what I'll do. And then I have like a work state that will only allow stuff through from Discord. And then I have a couple of different states, personal state that will turn off Discord and only let messages from friends. So I leverage that pretty heavily because, again, I'm working asynchronously so there's not too many in person tap on the shoulder interruptions. So I use Notification Manager to control that.
00:43:49.686 - 00:44:05.978, Speaker A: But it's hard. I mean we live in a world where attention is very fragmented and it's very easy to be disrupted and focus. Time is scarce. I would say in our lives, at least for me it is.
00:44:06.064 - 00:44:42.470, Speaker B: Oh yeah, for me as well. The reason I asked that question of how do you deal with Discord and Twitter is because I personally have a horrible time dealing with it. Even if I've got my IDE on full screen, I still have the tendency to just swipe left and there it all is. Even if I close it on the sidebar it'll just be like be there. So maybe a strategy is just to get rid of it in the sidebar or have a I've even heard someone have a friend that they have a whole different computer for it. It's not even installed on their main computer. So I was taking it to the extreme.
00:44:43.050 - 00:45:21.730, Speaker A: I mean it helps because the way that products have been built, good products like Discord, they're engineered to build habits. Right. That's where their power is derived from. The problem is sometimes they're too good at building habits and then it becomes an addiction. That's the problem. But when we think about building product these days, we think about the core habit loop, right. How frequently does the user come and how do you keep their attention and do you want them to come use it daily or hourly or these sorts of things? And things like Twitter and Discord have been super optimized to be very habit forming.
00:45:21.730 - 00:45:47.706, Speaker A: Yeah. And I don't know if that's a force for good or a force for evil. Honestly. At the end of the day, this sort of habit forming product building but it's certainly profitable for the companies that have done it well. And it's certainly tooling that enables us to have novel forms of association and communication. So it's a powerful tool but maybe hard to manage in life. I agree with you wholeheartedly, man.
00:45:47.888 - 00:46:04.606, Speaker B: Yeah, I think the only real way is just to kind of delete them and not have them in pure sight or at least have them not invisible view. You have to kind of do some effort to get to it. Yeah, I mean going cold turkey is usually the great best way I've done it.
00:46:04.628 - 00:46:20.322, Speaker A: But have you tried the seriously man, apple's built out some powerful tools for this. Like not only the muting, the notifications, but the time limits. So for all my socials, I time limit myself on my phone to 2 hours a day for total. And that's not even Twitter.
00:46:20.386 - 00:46:38.826, Speaker B: Everything yeah, not even on the phone though. Like on the laptop I have Discord there because that's how you communicate to people on Discord. Well that's how I do it. All my clients same here. Yeah, it's an essential on your laptops. Right. So I guess it's like how do you limit that?
00:46:38.928 - 00:47:09.080, Speaker A: It's such like a powerful yeah, there's tooling for it. Man, if you go look at that, it's like whatever they call it, like the digital health limits or whatever, you can set up per app limits and per focus mode limits. But of course, if the habit is strong enough, I'll often find myself being like, okay, ignore a limit, let me go check discord. But that's like a checkpoint for you to have with yourself. Like, am I really ignoring my time limit that I've set for myself for spending time in this thing? And do I really need to be doing that right now?
00:47:09.690 - 00:47:13.670, Speaker B: Yeah, for sure. You have to really break the habits underlying.
00:47:15.370 - 00:47:31.660, Speaker A: One thing that I haven't had time to do, that I definitely like to do, and I probably will have time after Valoran releases, is go in the woods for a couple of days and just camp out and not do any of it. Right. But that's hard when you're going into a release. Yeah.
00:47:32.830 - 00:48:07.160, Speaker B: Imagine just like you had some bug out of all of the testing, all these betas, and you launched it's, just some bug, and you're in the middle of the woods. Oh, man, I guess, yeah. What would be the plan after you even had a bug? Because I know some people that have had vulnerabilities unexpectedly, obviously, but they don't have any incident kind of plan. So I guess how do you plan for this stuff? Because I wouldn't say common, but it's a very possible thing that can happen in DFI when building a protocol. So how do you go about that?
00:48:07.870 - 00:49:03.530, Speaker A: Well, it's a hard thing to solve because I've been building infrastructure and finance for more than ten years and software for more than 16 and building high availability systems right. 30 petabyte storage clusters that stand behind some of the most important financial infrastructure in the world, where downtime was measured in the millions of dollars lost per hour. I've thought about these problems before, but the thing that you have in traditional finance and banks and stuff is that you can patch the code and you can upgrade it. You also don't have all your code in the open source for people to look at. So I'm pretty sure every bank on the planet, if their code was open source today, would just get hacked and wrecked immediately. So it's a much harder problem space when your code is open source. And particularly with the philosophy we've taken at Valorum where it's a piece of immutable infrastructure.
00:49:03.530 - 00:49:50.674, Speaker A: We're working on pre mortems and obviously if anything happened, we would hold the post mortem. But having this idea of incident response, we've thought a lot about monitoring events that are coming off the smart contracts for suspicious things that may be happening and getting out ahead of them and being able to communicate that to the community. We're using some interesting tooling that comes from our web two experience, like datadog and postdog. So datadog for aggregating traces. So we can basically see like front end to back end to smart contract and back out again, the trace of a single user interaction. And then we can build patterns out of those traces and be aware of suspicious events that are going on. But what we can't do is update the Smart contracts, right? Because then it can't be used as a money Lego.
00:49:50.674 - 00:50:35.800, Speaker A: So you kind of have to make a choice. Do you want Upgradable Smart Contracts that gives the dev team the ability to rug people or do you want Immutable Smart Contracts that doesn't give the dev team the ability to hot fix a bug? I think we went on the side of Immutability because we want these things to be rock solid and that's why we had to put, I would say, more time into testing than we did into development to flush out all possible bugs. We do everything humanly possible to almost get to the level of formal verification, maybe even do that. We didn't do that, but we might for a future version. And you do what you can or you're building an upgradable thing. And I personally am not a fan of Upgradable Smart contracts. I don't know how you feel about that.
00:50:36.570 - 00:50:42.730, Speaker B: Yeah, Sam, I think it kind of goes against the kind of blockchain way Immutability.
00:50:43.150 - 00:51:24.760, Speaker A: But adding to that, we do have good DevOps workflow, right? We have CI, we have Slither running, we have forge tests, we have the unit tests. So if we did need to push out a new version, and we have the close partnership with an auditor, if we needed an emergency to push out a new version for people to migrate to of Clear, we could do that in relatively short order. And the other thing about Clear is that options, by their nature not being perpetuals, are ephemeral. So if there were to be some sort of vulnerability, the capital would roll over pretty quickly to a new version. And that's how we plan to be able to do like minor point releases, right? Is that if people are writing dailies or weeklies or monthlies that the capital will come out of the system in some amount of time anyway?
00:51:25.610 - 00:51:45.550, Speaker B: Yeah. Okay, so I guess also having all these tools for security like Sliver Echidna or whatever, do you think there's anything lacking right now that would basically help you a ton or something that you wish existed for, I guess, protocol development?
00:51:47.170 - 00:52:52.802, Speaker A: I mean, if you asked me that question two years ago, I would have said yes. But right now I'm very happy with the state of tooling. It's more like a language thing that I'm thinking these days is not quite where I'd like to be, not even the compiler, but like traits, generics lifetimes dynamic memory allocation. Like some of the stuff we got into with the discrete random Variate generator, right, where I'm like going down into Yule and doing a dynamic memory queue and having to hand implement any sort of dynamic memory objects or when I want to go generic across an operation. The type of stuff you can do in Rust, for example, that you can't do in solidity. My personal dream world would be where somebody built a language, a high level language with Rust like semantics on top of Huff. Right? So that's where I'm seeing more need in the ecosystem is in a language like whether it be Solidity One, Solidity Two, or some other language that comes along that provides better semantics for traits generics and lifetimes in Dynamically Allocated memory primarily that's still gas efficient and lets you get into polymorphism in a better way.
00:52:52.802 - 00:53:03.910, Speaker A: And yeah, those sorts of things. But forge, foundry, slither they provide a pretty solid stack. I mean, what do you think? What are you looking for these days in additional tooling and languages?
00:53:04.730 - 00:53:33.680, Speaker B: I mean, my days of smart contract development are kind of over. I'm more in the tooling space now. But I think what lacks is probably depth in tooling. So I think all the tools right now are very surface level. They don't think about game theory where you're incorporating external contracts, different contexts, multi transaction setups, all this kind of stuff. Kind of what a black hat would think of.
00:53:35.490 - 00:53:39.518, Speaker A: That'S hard to do in terms of tooling, right?
00:53:39.604 - 00:53:39.946, Speaker B: It is.
00:53:39.988 - 00:54:30.914, Speaker A: I'm just thinking about other things that we did in the Enterprise and Web Two. I don't know if you heard of Chaos Monkey, right? But like running cloud systems, we would build what we called chaos monkeys that would just go in and be disruptive on purpose. So you could kind of look at that as like a malicious actor in a Foundry invariant test, right. Instead of an actor that does something good, it's an actor who does crazy things to try and break the system all the time. And you can write those right now, but that's something, I think that's going to come down to a security researcher or very security minded smart contract developer writing those actors custom per system and looking at the integration thing, it's an interesting space, but I'm not sure how you automate it, quite thinking about it.
00:54:30.952 - 00:54:45.400, Speaker B: Yeah, it's quite difficult. But even I think maybe like invariant generation, like maybe automated testing generation, I think that would be quite interesting, although also quite challenging to achieve. But I'm just very interested in the hard things.
00:54:46.010 - 00:55:18.658, Speaker A: Oh yeah. These are the things that ultimately increase the security of the space, make it more legitimate, make it more possible to have increased development velocity, because it's very hard still to write and verify smart contracts that are going to hold tokens. It's scary thinking, hey, what if I write this thing? It's scary and exciting. What if I write this thing and it holds a billion dollars of value eventually? Am I good enough to think ahead of all the things that could happen here?
00:55:18.744 - 00:55:19.234, Speaker B: Exactly.
00:55:19.352 - 00:55:31.702, Speaker A: Right. And if you. Believe you are. It's probably hubris and I find myself really like double, triple, quadruple guessing as I'm doing this. Have I missed anything better?
00:55:31.756 - 00:55:32.454, Speaker B: Check again.
00:55:32.572 - 00:55:35.240, Speaker A: So more tooling like that would certainly be awesome.
00:55:37.850 - 00:55:52.910, Speaker B: I think. One final question just to help all the people wanting to do startups. What do you think were the hardest things that you went through and how would you go about overcoming them in a better sense if you were to start a new startup?
00:55:53.250 - 00:56:38.090, Speaker A: Well, it's still early, right? For me, we're launching in a couple of weeks so I don't think I know all the things to really answer that fully yet. But for the real early days during a bear market, approaching VCs who are down bad and not getting funding and sticking with your project is one thing I think that I did and I would recommend to other people who think they have a good idea, like stick with your idea. Even if you don't get don't just jump ship. Yeah, bootstrap it, man. Figure out how to bootstrap it. What I could have done better. I did have significant churn in the people who came in and out of the project initially because I didn't really have a formalized hiring process.
00:56:38.090 - 00:57:14.002, Speaker A: Kind of like, you're interested? Come work on this thing. Maybe there is some value in bringing some of that formalized hiring process in even though it does kind of add some of the gatekeeping. But like early days you got to do checks on people if they're not only interested but also highly competent. There's two ways to do that, right? There's like a formal interview process and then there's like bring them in for a month or two and see if they perform well. I could have done a little bit better there. I'm reducing the churn of people who came in and out of the project, which was probably, like I said, about 50%. And then the other thing that I think is never announce a release date until you are released.
00:57:14.002 - 00:57:39.760, Speaker A: Say now, next, later, instead of we're releasing next month because otherwise you can inchworm along because some of these projects are big and take a long time and you can burn social capital by inchworming on your release date quite a bit, which we definitely did at Valorum. So if you look at the website now, you'll see now next, later on the roadmap. Not like Q one, Q two, Q Three because we don't know how long it's going to take to get things done until they're done. So that would be the other piece.
00:57:40.130 - 00:58:01.080, Speaker B: There's always like roadbumps and unexpected, I guess, challenges that take up a lot of time and I think it's just like a nature of development as well. You don't know what's going to happen from it's like a chain reaction. You don't know what's going to happen from changing something or you may have found of a critical bug. You have to change the whole architecture. It takes like an extra week.
00:58:02.810 - 00:58:07.320, Speaker A: Or you try to build a discrete probability mass function generator for two months.
00:58:07.790 - 00:58:13.980, Speaker B: Yeah, exactly. The fun stuff.
00:58:16.750 - 00:58:38.420, Speaker A: Those are the other things and I think it's an exciting space, man. I think we have so much left to build. I think a lot of it is oh yeah, so immature. Still like yeah, we are still really early and I guess that's all I've got. I mean, ideas are cheap and execution is everything, right? You got to get out there and execute as well.
00:58:38.870 - 00:58:47.538, Speaker B: Yeah, for sure. Maybe just one extra question. How do you execute efficiently? There you go. Because that's the whole core of startups, right? It's just execution.
00:58:47.714 - 00:59:46.514, Speaker A: What we've been doing and what's been a huge tool for us lately has been using linear for software development, breaking stuff down. So basically, like, product goes and talks to users and understands the opportunities and all that kind of stuff and the pain points for the users. And then we come together and design solutions and we go and we build them very single piece flow, kind of kanban, maybe a little bit of scrum light style where we get a thing and we flow it through all the way to the end and one person is working on one thing from start to finish, ideally, right? And of course we have to move around a lot but running like a weekly cadence on that readjustment. So giving people a week to focus on a problem before we yank the priorities and shift them when we need to respond to new learnings. That's been working great for us. Our velocity is increasing. And also the other thing I would say that's been useful being a distributed team, maybe a little contrarian here is that we use metaverse coworking when we're doing more complex designs.
00:59:46.514 - 01:00:15.310, Speaker A: We'll use discord voice for like quick calls or just like hacking on something in the IDE. But if we're going to go design an algorithm, or we're going to go design new UI screens, or we're going to talk about something complicated, we actually pop on VR headsets and get in a co working space together. Because we can bring in our computers and AR. We can make eye contact. We can use hand signals. We can draw on a whiteboard together and it's immersive. And so if I'm talking to you right now over audio here, I don't know if you're on your phone, I'm not saying you are, but I don't know that.
01:00:15.310 - 01:00:29.014, Speaker A: So things may get lost in translation but when you work in the metaverse you can see that, oh, that Dev is on his computer right now typing something and I'm talking about something else. Let me pause and get his attention before I plow over with this concept and he doesn't get it.
01:00:29.052 - 01:00:38.534, Speaker B: Yeah, for sure. That's kind of the first I've ever heard of that. But it does sound like quite interesting I guess everybody would need a headset, though, which I assume you provide.
01:00:38.652 - 01:01:00.030, Speaker A: Yes, we got them for everybody, and I think it was a great investment because sometimes we're trying to work on something for three or 4 hours right. That can be brutal in a voice call. The bandwidth is just too low, the medium is too flat. So those ways of working and the mediums we use for communication, it's that or you fly somewhere in person and just go hack in a room sometimes, right?
01:01:00.100 - 01:01:01.150, Speaker B: Yeah, for sure.
01:01:01.300 - 01:01:17.986, Speaker A: But the headsets are cheaper, frankly, than that. Definitely early adopters of the Metaverse for work, but it's been going well for us, and I would say it was a worthwhile investment for the company. The headsets are like $500 each. And what is that really for Devtooling at the end of the day?
01:01:18.088 - 01:01:24.680, Speaker B: Yeah, for sure. Make it all back anyway. Yeah, I think I need to try that sounds like a good time, actually.
01:01:25.130 - 01:01:32.890, Speaker A: Well, you can come cowork with us in the Metaverse if you want, man. You're welcome to come visit with us at the Velour Metaverse offices sometime.
01:01:33.550 - 01:01:59.870, Speaker B: Yeah, I'll come pop over, do an actual interview in the Metaverse once the launch happens and all that. Man, it's been such a great time talking to you. I've learned a lot, especially about options and your platform and kind of what the space is needing at the moment. I think it's definitely going to be a big thing and hopefully launch goes well. Yeah, hopefully it was good for you as well, but yeah, it's been such a pleasure.
01:01:59.950 - 01:02:12.310, Speaker A: Yeah, it's been great on my side as well and hopefully talk again soon and yeah, great job with your new podcast. Definitely been hearing a lot of cool guests come on, and I'm very psyched to have been one of yeah, yeah.
01:02:12.380 - 01:02:37.450, Speaker B: You'Re one of the cool guests now. You've made the list, but for anyone else that wants to get someone on the podcast, just DM at Scrapingbits on Twitter or send an email to scrapingbits@gmail.com and I'll review it and hopefully you get them on. Otherwise, thank you so much for coming on Al, and I'll see you, everyone, in the next episode.
