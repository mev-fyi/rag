00:00:00.330 - 00:00:21.178, Speaker A: You. $50 billion in TVL is laughable. For d five, we have an industry of thousands of people managing a little less than $50 billion. It's a joke. One of the major things keeping people at bay is this massive hack rate. Well, also this massive scam rate, but definitely this massive hack rate. So I said, okay, the main question for me is how do we enable this space at scale?
00:00:21.354 - 00:00:52.538, Speaker B: Scraping bits is brought to you by the following sponsors. Fast lane Labs, trustless mev mev protocol. Maximize your eth staking value with me v exclusively on Mev IO and composable execute any intent on any chain. Coming soon to Mantis app that is M-A-N-T-I-S-A-P Gm Gm. Everyone, my name is the host of scraping bits and today I'm with a special guest, Patrick Collins. How's it going, friend?
00:00:52.624 - 00:00:54.222, Speaker A: It's going well. How are we doing today?
00:00:54.276 - 00:01:07.938, Speaker B: Yeah, quite good. Just trying to get everything done, all the programming. Startup life is obviously difficult, but got to get through it to reap the rewards. And I'm sure you've gone through that multiple times. Segue into that is who are you and what do you do?
00:01:08.104 - 00:01:30.370, Speaker A: Yeah, sure. So for those of you who don't know, my name is Patrick Collins. I'm a smart contract developer, security researcher, educator, just everything and anything in web three. I absolutely love to develop play with. Ultimate goal for me and the team that we're building at Cypher is to enable web three developers at scale. Right now, DFI is a $50 billion industry. That's kind of a joke.
00:01:30.370 - 00:01:50.798, Speaker A: We should be half a trillion at least. So doing anything and everything to get us there. Some of the stuff that we're doing right now, we have the co founder of Cypher. We are a smart contract security company. We do smart contract security reviews and or audits. Also created platform Codehox, which is for competitive audits. And we make a ton of educational content engineer from zero to 100 real quick.
00:01:50.798 - 00:01:52.654, Speaker A: That is absolutely the place to go.
00:01:52.772 - 00:02:20.566, Speaker B: Yeah, it's like you cover the whole shebang. You've obviously very experienced in building a brand and creating a name for yourself, the content on YouTube and doing all those long videos and teaching people, et cetera. And you do this all free as well, which is terrific for the community. And I think that's where it really shines and building a reputation and people actually looking up to you and then you expand into your companies, cypherin and codehawks. So I think the key thing here is how did you really build up this brand from scratch? And make this name for yourself.
00:02:20.668 - 00:02:54.670, Speaker A: It's weird kind of answering that, because I feel like I don't really have a name. I just focused on what's missing in our space right now. Just constantly ask that question, hey, what's missing? What do we need? What do we need? What do we need? And just make tools and content and things that help fix that. So when I first came into the industry, I worked at a hedge fund for a couple of years doing product support, and then I worked at, like, a data API. One of the biggest hurdles for me was getting into web three. And I'm like, okay, well, if it's this hard for me, then it's got to be hard for other people. So I had taken some solidity tutorials that were super outdated.
00:02:54.670 - 00:03:22.058, Speaker A: It was like, version solidity was out, and it was like, version four. It was really old versions of truffle that didn't work anymore. Oh, the truffle days, yeah. And the courses were like, oh, by the way, it's $500 or some shit, right? This huge, huge hurdle. And then obviously, being a Python engineer in the fintech world, which is a group we should be targeting, in my mind, crypto, blockchain, all this technology is financial technology. All of them are Python devs. They're all python devs.
00:03:22.058 - 00:03:48.022, Speaker A: And I was like, where is the python? So it was very difficult for me to get in. So I said, okay, if it's this difficult for me to get in, nobody else is coming to this industry. Let's make a giant video that's just like, zero to 60 real quick. And then I had to redo that video basically twice. So the first one was Brownie and solidity, and then hard hat was the bees knees. And between the Brownie video in 2021 and the hard hat video, I also, personally, just got way better. Started realizing, what are the things I need to focus on? Got a lot of feedback from the first video.
00:03:48.022 - 00:04:05.010, Speaker A: A ton of people made a lot of pitfalls that told me, hey, I need to focus on pushing your private key to GitHub. I mentioned it in the first video, don't do that. But so many people did. It was like the hard hat video in 2020. That was like a 20 minutes segment. Me, like, ranting, hey, don't do this. Sign this pledge.
00:04:05.010 - 00:04:12.382, Speaker A: You promise to not use a EmB whatever. And then foundry obviously has this huge speed advantage. So I was like, okay, well, I got to do a founding one.
00:04:12.436 - 00:04:18.894, Speaker B: Like, new tech comes out. You have to do a video for that because nobody covers it. It's like you have to read the documentation, the code to understand it.
00:04:18.932 - 00:04:47.638, Speaker A: So this industry is moving so fast, but yet we still have all these problems. Right? So your original question was like, hey, how did you build this brand? And to me, I'm like, all right, I just want to focus on what did we need to make the space better. And I feel like that's been resonating, which I feel very lucky that people like my content. But the other thing that we saw in the space case was last year, chain analysis came out with a study that said around $3.1 billion was stolen from DFI from stupid hacks. Right? So that 6% number is insane. D five TVL, $50 billion.
00:04:47.638 - 00:05:05.966, Speaker A: If D five TvL is 50,000,000,003.1 billion in hacks, it's around 6%. That's like going to a bank account saying, hey, let me put my money in. You the bank going, yeah, sure. By the way, there's a one in 20 chance next year, all your money is gone. Are you putting your money in that bank? Absolutely fucking not. And we're saying, hey, we have this.
00:05:05.966 - 00:05:26.302, Speaker A: Better technology, we have this, better this, we have this. But everyone come over to web three. We're not ready for that. 6% hacks? Are you kidding me? So security right now is massive, and it should be massive, right? Because we have this immutable smart contracts that we deploy. It's a big issue. I'm almost, like, leading more to thinking in the future. All devs in web three probably need to be security devs.
00:05:26.302 - 00:05:45.510, Speaker A: Be very aware of auditing, because this is the most adversarial environment you will ever experience as a software engineer. So that's my rant to answer your questions. I'm just trying to make really good content for people. I'm trying to make really good services. I'm trying to work on really good tools and just enable people in this space, enable this space as much as possible. And I feel very lucky. I'm very happy that it's been resonating with people.
00:05:45.510 - 00:05:45.718, Speaker A: Yeah.
00:05:45.724 - 00:06:39.862, Speaker B: And I think it's a great gift or skill to be able to be, first of all, code, but then also have the communication skills to convey technical concepts to people in an easy to understand way. I think that's a big pitfall in software engineers in general, or someone that specializes in something is they get super technical with that, but then they don't have the teaching ability to explain that simply to someone else. And I think it's a perfect opportunity for creators to basically do both, but obviously they're both hard in itself. Most people are good at communicators, but then they might not be great devs, and then devs might be like terrific world class, but then they can't communicate properly. Being in between both of them is a really good position to be in, and I've even experienced that as well with my articles. I explain some very complex topics in web free, like generalized front running, how that works, and how to read and write storage slots, et cetera. And I could probably do a lot more content, but it's very time consuming unfortunately.
00:06:39.862 - 00:07:16.610, Speaker B: But yeah, it's quite interesting. And you mentioned that report with chain analysis of the very basic bugs and 6% all lost, which is crazy. And I do agree with that. Every dev should be a security engineer because I think a lot of devs come in not thinking about security, and that's what happens. They get hacked and then they learn about security and then they finally get to the stage where they're capable, but even then it's still probable of it happening. There's so many dimensions going on in the exploit space. Speaking on the vulnerabilities, how did you build Cypher and why did you build it? Or how do you specifically identify complex critical vulnerabilities? Because this is what we're seeing in real time and why there's so much money being lost.
00:07:16.690 - 00:07:40.666, Speaker A: They happen every week. Yeah, it's tough at the end of the day. So one of the big things that prompted the start of Cypher was I wanted to do more, right? I wanted to be able to do more. I wanted to be able to have more freedom to go in the directions that I think are more important. And for me, a big one is, like I was saying at the beginning, $50 billion in TVL is laughable. For DFI, it's laughable. One of the first jobs I had at a college was at a hedge fund, TVL.
00:07:40.666 - 00:08:16.314, Speaker A: This hedge fund was around $35 billion, and it was run by 150 people. We have an industry of thousands of people managing a little less than $50 billion. It's a joke, absolute joke. And I think one of the major things keeping people at bay is this massive hack rate. Well, also this massive scam rate, but definitely this massive hack rate. So I said, okay, it's a continuation of that question, right? The main question for me is how do we enable this space at scale? How do we bring in more people? How do we give more tools to developers? How do we enable security researchers more? And one of the big answers to that question is, we need to nail down the security landscape on my to do list. I've teased this a few times.
00:08:16.314 - 00:08:55.430, Speaker A: I teased it in the founder course is a security and auditing course, just so that the floor of developers of auditors, security researchers can be up here. But for any course that I do, in order for me to speak really intelligently, I need to be very good at what I'm doing. There are people who are better than me at this stuff. I mean, you said so yourself, doing all this stuff takes a ton of time. All these videos and stuff that I make, it's from hours and weeks of me, like researching, fiddling, playing with stuff to get better myself, but also talking to the extra efforts in the space, right? There are people who are way better than me. There are people who are going to continue to be better than me. Actually, a lot of people who take my courses end up being better than me, which is like a weird double edged sword, but I love doing it.
00:08:55.430 - 00:08:59.206, Speaker A: It's actually so funny. When I created the first course, I had a ton of people hitting me up.
00:08:59.228 - 00:09:01.142, Speaker B: Be like, yo, dude, thank you so much for your course.
00:09:01.196 - 00:09:26.362, Speaker A: I just landed a job for like time. I was getting paid less than cool. Oh my God, it feels great to be able to help people like that. Back to your original question. How do we build cypher? Why do we build cypher? So I had started doing security a few years ago, actually. I did a couple of mock audits just to kind of get into it, obviously. Started learning all the tools, reading all the information from the greats trail of bits, open zeppelin and the likes.
00:09:26.362 - 00:09:57.734, Speaker A: And I said, okay, I need to join the fight. The 6% number is insane. What can we do to drop this? And it's just a continuation of that. So I teamed up with some phenomenal people in this space, and I feel so lucky that they wanted to team up with me. Hansfree is one of the top. He was, for the first half of 2023, the top code farina, competitive auditor and co creator of Solidit, which is like the tool every auditor uses right now, which is phenomenal. If you're an auditor and you want to keep up to speed on what the latest findings are in audits, definitely go check out solidit.
00:09:57.734 - 00:10:26.306, Speaker A: It's literally what he used to become the number one c four auditor was. He just was like, okay, how do I stay up to date quickly on all these findings? How do I research other findings when I think I found a bug? Is there a way for me to cross reference, like, all past contests, amazing tool. Go check it out. Teamed up with him, Alex Roan, one of the best solidity devs from Chainlink Labs that I worked with him and I worked together. Yeah, that's right. You had him on. He did a ton of asset chainlink integrations out there.
00:10:26.306 - 00:10:47.142, Speaker A: And, like, a lot of code that is handling billions of dollars of transaction volume is his code, which is fantastic. Geo zero, Kage, Carlos. We've teamed up with all these phenomenal people to bring this to life. Right? And so there's a couple people's names of who I missed, but, yeah, there's all these people. To just continue to answer this question, what do we need to do to make this space better? Kind of how we got into it.
00:10:47.276 - 00:10:58.478, Speaker B: When you started it. How do you really choose who to bring on board? Like choosing the right people that align with your goals and aren't going to dip off and then start their own thing. How do you identify these gems from the pack?
00:10:58.564 - 00:11:19.198, Speaker A: It's a good question. So, pretty much most of the team in the beginning is people that have been very aware of their work. Alex Rohn, him and I have worked together for a long, long time. He's been somebody that. We've done a ton of side projects together. He's the guy that I'm like, all right, if I'm going to start something, I want to do it with him. Every time I read about finding a co founder, it's like, somebody you enjoy working with.
00:11:19.198 - 00:11:19.862, Speaker A: You really like.
00:11:19.916 - 00:11:21.030, Speaker B: Yeah, like a friend.
00:11:21.180 - 00:11:37.526, Speaker A: Yeah. He's an absolute stud at what he does. And we get along really well, which is great. We're able to argue really well, which I value a ton. Like, we disagree on a ton of stuff. I get shit wrong all the time, and it's phenomenal. We're able to disagree and then be like, all right, dude, so what are you doing this weekend? I don't know.
00:11:37.526 - 00:11:50.638, Speaker A: I'm going to go play football or whatever. But, yeah, you love that relationship. And same thing with Hans. Hans is the joke that I always make, too, is I always want to work with people smarter than me. I'm like, all right, cool. Everyone on the team, I think, is smarter than me. So this is going to work out well.
00:11:50.638 - 00:12:07.634, Speaker A: Yeah. Hans, he's just so on the ball. I've never met somebody like Hans before. He's just so on the ball, so with it. And he's got so many ideas on how to scale web three security while also being one of the best to ever do it. To answer your question, I'm looking for that. It's almost like I'm looking for people who are really good at what they're doing.
00:12:07.634 - 00:12:15.270, Speaker A: We got to fit this culture of like, hey, work really hard trying to push for scale, trying to do things at scale, help the industry grow, and that's what we've been focusing on.
00:12:15.340 - 00:12:46.398, Speaker B: Yeah, I think your core values aren't necessarily monetary driven. It's more, I want to see this field succeed, and we're going to build stuff to make that true. And you built the cypher initially, and then you built codehawks, a public contest platform that competes with the biggest ones out there, but you're doing things differently. And I'm just wondering, why did you build that instead of trying to promote these other ones out there? There's obviously something that was missing, and that's why you decided to build it. So what was the kind of reasoning behind that?
00:12:46.484 - 00:13:22.378, Speaker A: Yeah, great question. And then I do want to put some clarification out there. Yes, we make a ton of free content, and we love making a ton of free content, and we think that in order to scale this space, we need to have that barrier, be as easy as possible to get in here, because the higher the barrier it is, the less talent we're going to get in this space and the worse we're going to be because we're basically going up against traditional finance, which is a much better funded industry than crypto. But at the same time, I want to do well. I want everyone on my team to do well. But at the end of the day, we think that if we create an insane amount of value, we'll get rewarded very well. But the ultimate goal for us is to create value.
00:13:22.378 - 00:13:50.790, Speaker A: Right? Like, we're not looking for. All right, cool. Launch a token, raise a bunch of money, and then kind of cash out and kind of rest on our laurels. The thing is, for us, hey, how do we create as much, create as much fucking value as possible? And then, yeah, hopefully we will get rewarded very well for creating a ton of value. But the focus is creating value first, gaining money second, for sure. But, yes, I want us and our team to do well, but. So your question was, why do we create Cohox as well? And it's a continuation of the question, what do we need to do to enable this space more? Right.
00:13:50.790 - 00:14:19.246, Speaker A: So after our courses, a lot of people ask me, hey, where do I go next? What do I do next? And now it's really easy. Hey, go check out kodaks. Codehox is a great place to go. I do really want to legitimize these competitive audits platforms as well, just as an industry. And so I think right now, if you watch the defi security summit panel, there is sparks flying on, hey, competitive audits are better. Traditional audits are better. We actually sit right in the middle where we believe that both are really important.
00:14:19.246 - 00:14:37.634, Speaker A: Right. If you go to one of the competitive audits platforms, they say, hey, competitive audits are better. Go to one of the traditional audit firms, they'll say, hey, traditional audits are better. We say, hey, no, both have their place. Right. One of the things that you do not get out of competitive audits is the consultation device. It's very difficult to listen to kind of a sole voice saying, hey, you need to tweak your code.
00:14:37.634 - 00:14:54.678, Speaker A: You need to add fuzz tests, you need to do this, that the other thing. That's something you really only get from the traditional audit side of things or the traditional security reviews. Right. The incentives for competitive audits are find the highs and then take a hike. Find the highs, find the mediums, maybe lows. Kodox accepts lows. C four accepts lows.
00:14:54.678 - 00:15:14.090, Speaker A: Find the bugs and then like, see you later. And that's great. Or here's how I feel about it. I think it's great for one time find these bugs, but it doesn't actually help the project in the long run because auditors are less incentivized to say, all right, well, here's how we found that bug. Here's the test. Here's the tooling you can use to find it later on yourself. The output.
00:15:14.090 - 00:15:42.866, Speaker A: Right. In effect, the auditors are incentivized to not share that alpha because maybe they have some tool where they can find all these bugs very quickly. And if they want to keep getting paid, well, they better not tell anybody about this tool that they have. But at the same time, I love it because it is, hey, you're getting paid to find bugs. So if you don't find bugs, you don't get paid. And that's really, really valuable having that incentive there. So to me, there's almost this, like, yes, it's phenomenal because you're going to find bugs, but at the same time it's tough because you don't have the incentives to say, hey, well, here we're going to teach you about stateful fuzzing.
00:15:42.866 - 00:16:05.082, Speaker A: We're going to teach you about these different design patterns. We're going to give you this consultation advice to make you better in the future. That's what traditional audits are better for. Competitive audits seem to be performing incredibly well for finding a lot of bugs. The thing that's really tough though is it's also very difficult to compare the two, especially sequential audits. Comparing sequential audits just doesn't make sense. Cypher.
00:16:05.082 - 00:16:21.038, Speaker A: We've done audits after some of the biggest audit firms and we've found bugs and we've done audits after competitive audits and we've found bugs and competitive audits have done after we've gone and they've found bugs. Every audit, every security review gives more context for the next one. So very difficult to compare as well.
00:16:21.144 - 00:16:59.870, Speaker B: Yeah. In my opinion, if I were to do a protocol and I wanted an audit, I would go for a public contest to have as many eyes as possible on it, to get rid of everything that's probably missed from my eyes, from staring at it for too long. And then you would move on to a team that's highly specialized in complex bugs because that's what you're hiring them for, to find these very difficult bugs because they've been doing it a long time and it's a team, they're all working together and bouncing off each other ideas. Whereas a public contest, it's more just everyone out for themselves. It's like a hunger games. It's like mev but for audits. And it's not like when it takes all, but sometimes it can be if they're the only ones finding it for a specific bug.
00:16:59.870 - 00:17:34.826, Speaker B: But it is a great way in competitive sense that if you're not really good, then you're not going to get paid compared to the person that's developed their intuition, the tools, et cetera, to be competitive with other people in a public setting. And yeah, the tools are quite interesting and how they're developing. I know some people doing some AI stuff for like exploit for vulnerability finding. I'm doing my automatic exploit generation and the more I do it, the more I'm realizing it's 100% possible. A lot of people are doubting and saying it wasn't really too possible, but it definitely is. I'm almost there and I have some friends doing AI ones that are, when.
00:17:34.848 - 00:17:38.126, Speaker A: It drops, be sure to hit me up too. I want to do a little video on it.
00:17:38.148 - 00:18:19.834, Speaker B: Oh yeah, I'm going to do a demo on it, I think this week or next week. All right, depending on when this comes out. But yeah, it's going to be quite interesting and I'm really excited for the AI ones as well because I think that would solve a lot of stuff and even building all of this stuff as well, it's made me realize the detection systems are going to be the holy grail of security, as in prevention. So it combines front running and program analysis to detect a hack and save it. Like an insurance kind of system. I know a lot of people are doing it already, but it's definitely not at where it needs to be. It's very early stages, and I think that's not even fool's proof as well, because you have stuff like flashbots that private transactions, you can't actually see that, so you can't prevent it.
00:18:19.834 - 00:18:34.110, Speaker B: And anyone that's actually experienced or knows what they're doing, it's very easy to hack something and get away with it. If you have some opsec and you do some obfuscation in terms of the whole kill chain, it's quite easy to get away with it not promoting it. But there needs to be.
00:18:34.180 - 00:18:39.150, Speaker A: I mean, yes and no at the same time. We've seen a lot of these hackers make some real boneheaded decisions.
00:18:39.230 - 00:19:01.660, Speaker B: Yeah, I mean, it comes down to the OpSEC, though. And in reality, they always mess up somewhere. And they're probably not doing like VPN rotation or routing through something like tor, running like a VM box. All that stuff. They're probably screwing up somewhere. And usually where they mess up most is leaking IP or region and taking out money into fiat. That's where everyone gets hit.
00:19:01.660 - 00:19:31.310, Speaker B: So I don't think there's any real experienced ones. There's probably like a few people. They're probably really great at finding exploits, but I don't know about executing and getting away with. It's only a matter of time until they're found anyway. White hats, when they find this bug, they need this platform to basically guarantee payment because it's really, when they find somebody critical, it's all negotiation, and then they might not accept it and then they're just stuck with the zero day, basically, and they don't know what to do with it. Right. They can give it if they're ethical, but they might just save it for when they just wait time.
00:19:31.310 - 00:19:37.830, Speaker B: I think there needs to be some streamlined way to do this. I think that's a great video and that needs to be done. Yeah, hopefully someone does that.
00:19:37.980 - 00:19:56.342, Speaker A: I do want to just circle back real quick. On your last question, you say, hey, why'd you get started with Codehawks? The summary there is a. We think traditional audits and competitive audits are both important and essential. And we think one does not replace the other. We think they're both really important. And number two, we're actually working on some models right now to enable that. So stay tuned for that.
00:19:56.342 - 00:20:41.414, Speaker A: We wanted to get codehawks out the door like a v one right now just to kind of get the ball rolling, get our feet, work through the kinks of the first couple of rounds as we work on these new models. And then number three, make it a very clear path for a lot of these new people that we need to bring into web three of, hey, this is how you can make your first dollar, one of these competitive audits. You can make your first dollar here, and that can kind of kick start your career, because that's the question we get the most. Hey, how do I get started auditing? You see all these independent security researchers posting, oh, I made so much money this month. It's really difficult to reach that point. But a lot of them did it through competitive audits, and it's really only the top 1% doing that. But I think there's so much space for more people to have the security mindset and be building tools with security in their mind from day one.
00:20:41.414 - 00:21:08.722, Speaker A: So just wanted to circle back, but to talk about your next point about white hats. So immunify has been going through this right now where it's definitely been a little bit challenging from them, where a protocol will post, someone will say, hey, I found a vulnerability. The protocol will go, no, not going to pay, and then they'll go fix it anyways. Right now, all immunify can do is kind of kick them off the platform. To be fair, from everyone that I've spoken with, immunify has been doing a great job being kind of this neutral voice working between the two. It's a hard job. It's a difficult job.
00:21:08.722 - 00:21:38.778, Speaker A: It's very difficult for immunify to be in there when you have a protocol who's going, hey, this is low severity. In order for you to really understand the severity of a hack, you have to have so much context. So it's very difficult to expect everyone from immunify to have context of every single protocol that's on there. So, yeah, kudos to immunify for doing a great job intermediating that problem. But yeah, as you said, there's no one place to go, and a lot of these white hats might just go, effort. I'm going to be gray hat or I'm going to be black hat because that's better.
00:21:38.864 - 00:21:50.942, Speaker B: Usually you can say you're a white hat, but when millions of dollars are in front of your face it can change the way you think. Right? And I think that's most the case when you think about it. How many of these black hats are actually just white hatters that are switched up?
00:21:50.996 - 00:22:11.046, Speaker A: Yeah, it's tough. It would be great for us to do more interviews with these black hats that get caught. Darknet diaries, if you've ever listened to that podcast, he actually does a ton of interviews with black hats that got caught and they are phenomenal to listen to. We need to do that for web three. It's just really difficult to find the hackers who are getting away with tens of millions of dollars. Right? They definitely don't want to be found.
00:22:11.148 - 00:22:28.250, Speaker B: Yeah, I would definitely do it. I did one recently with an mev search that's anonymous and we use the voice changer for that. I want to get some blackouts on and do it with that. Hopefully that's an option. If anybody is a black hat listening, hit me up. Just email me at screechingbits@gmail.com if you are really keen to get those going.
00:22:28.250 - 00:23:03.218, Speaker B: But yeah, the whole kind of space with incentivizing auditors when they find it's quite ruthless, there's no guarantee it's really up to negotiation skills. And I think the best way you can do it is by showing a proof of concept that show a simulation that takes money. That's the best way. Or brick a pathway, brick a function from being used because people want something if they can see it. Everybody wants data, they want a presentation, they want graphs. It's the best way to convey. And if you can show oh, by the way, it's being deducted by 4 million, they will most likely give you something for that information because obviously they don't want to lose that much money and tarnish their reputation.
00:23:03.218 - 00:23:08.950, Speaker B: Their careers have to restart as anons. It's just not worth it for them. So they'll definitely pay for that.
00:23:09.020 - 00:23:51.158, Speaker A: No, kind of 911 is a really interesting topic because it's something that I've spoken with a lot of experts in this space about. Hey, what do we do? Is there like a 911 that we can call? And we know Sam Cz, son of friends, came out with Seal 911, but it's almost like this volunteer program that him and a bunch of others have come up with just because they've done it so many times. And that's not going to scale well when we do hit half a trillion dollars, and it does highlight though, this issue kind of before we even started talking, we were both talking about how monitoring right now is pretty not good. Forget which one. It took them like six days to notice they were missing like a hundred million dollars or something. Like just. It just shows, you know, we don't have great monitoring culture right now is one of the things.
00:23:51.158 - 00:24:11.866, Speaker A: Jocelyn from a bits I was talking about, Alejandro from Unify, Tincho from the Red Guild, we had an interview with them and we were saying, hey, what do we need? We talked about security reviews, we talked about design patterns, we talked about just knowledge of security. And we all unanimously were like, yep, monitoring right now is not good. And six days to see you're missing millions of dollars is probably evidence of that.
00:24:11.968 - 00:24:35.902, Speaker B: That's a reason, because the entire space is super early. It may not seem early at all in terms of trading, but in the grand scheme of things, we're really still at the forefront. It's super easy to become an innovator in the space. There's so many areas you can hit and touch on to really be a pioneer in some way. And obviously one of them is detection automation of tools, I think is probably the main one, in my opinion.
00:24:35.966 - 00:24:36.658, Speaker A: Yeah, definitely.
00:24:36.744 - 00:24:43.202, Speaker B: Yeah. A lot of people are doing this stuff, but it's very difficult to even get something that works and something that is effective with AI.
00:24:43.266 - 00:25:13.434, Speaker A: For example, I've seen 100 auto AI, auto audit, audit with AI, and they're all terrible. And so the other thing that's hard is if there is like an innovative product, is it just a bunch of marketing garbage? And I've looked at so many. Oh, we have this auto audit, like, hey, you should do a video on your YouTube of this AI auto tool. And I go through it, I'm like, this is like just slightly worse than slither. I don't know why I would use this. Granted, a lot of them are new, so I shouldn't be downplaying them because this is how you start building. You have to tinker, you have to iterate.
00:25:13.434 - 00:25:25.790, Speaker A: But yeah, it has to reach a point where it's better than what's currently out there. Right? Slither is a great tool as is. So if you're going to come here, in here with an AI tool and say, hey, we're this new innovative thing, well, better produce better results than slither.
00:25:25.870 - 00:25:30.760, Speaker B: Yeah, for sure. And I think anybody trying to do any AI stuff, chat GBT doesn't cut.
00:25:32.090 - 00:25:45.686, Speaker A: Oh, also like chat GBT said this was good. There's somebody who posted that, and I think it was Banteg, who was la mao. And even on Codehawks, I recently judged a few of the first competitions we did on codhawks. And you could tell I think it's.
00:25:45.718 - 00:25:49.050, Speaker B: Good for report writing but not for actually identifying.
00:25:49.710 - 00:26:09.666, Speaker A: It's agree a ton of people who don't speak English as the first language used it to help write reports. And I think that's phenomenal. And you can get good ideas. Actually. Like a famous hack on Polygon, there was a white hat who got paid out like $2.2 million from finding this EC recover issue. They forgot to, I forget what it was.
00:26:09.666 - 00:26:43.260, Speaker A: They forgot to return a value or something or they didn't check the return value of calling this pre compile and we popped that function into chat GBT and chat DBT did give like a hint, hey, you should double check the return value of this function. And so it can give hints. But yeah, it's not great at like, hey, there's a vulnerability. And the hardest part for it, because we've done a ton of experiments with it, is getting context. And I know you and I have talked a little bit about it just by our random calls, but yeah, getting context, right. You can only have so many tokens in these AI models. So if you're trying to say, all right, here's 5000 lines of code, find the bug, it's going to go.
00:26:43.260 - 00:27:06.062, Speaker A: But there's a lot of cool things that it can do. I was talking to this guy from Twitter. We were both building like antiduplicate submission, like an AI tool for antiduplicate submissions on competitive audits. So we made one. We called, it performed relatively well. We're actually iterating on it right now for future iterations of codecs. That's one of the other things that we're trying to make easier for judges is, hey, cool, here's a list of duplicates.
00:27:06.062 - 00:27:17.126, Speaker A: But we were talking about different things that AI could do. And he was actually saying, hey, one of the things that AI would be great at right now that we're not thinking about is like reading through the docs and quickly coming up with an invariant test.
00:27:17.228 - 00:28:00.910, Speaker B: It's great for understanding some docs generating docs invariants, what's actually happening. But it's not great at telling you vulnerabilities because when you think about it, these vulnerabilities, at least the ones that matter, are normally very complex, cross contract multifunction. And then you have the inputs for all these sequences, right? So it's not going to be able to do that unless you have a large database or have fed it a bunch of data in terms of this. And that's when you need a custom model to train it, I believe. And you would do unsupervised learning on that and then do like de reinforcement learning to train it up a bit. But something like Chattybt is incapable of finding these multi dimensional stuff, but it is great in terms of writing reports and explaining something that you have found.
00:28:01.000 - 00:28:15.530, Speaker A: Definitely, yeah. And it's very good at catching kind of the easy bugs that slither would catch as well. Like, oh, like reinteresting vulnerability. It's like, yeah, I've seen that for the billionth time. Stuff like, really. Hey. Oh, you didn't validate your zero address.
00:28:15.530 - 00:28:16.922, Speaker A: Really easy to finding stuff like that.
00:28:16.976 - 00:28:29.898, Speaker B: Yeah. And touching on this kind of vulnerability stuff. What have you seen commonly, or do you see any passions in an abstract sense of complex critical vulnerabilities, whether it's through code hawks or through actually going through Cypher.
00:28:29.994 - 00:28:56.102, Speaker A: Yeah. So code hawks and just competitive audits in general. One of the things that I've learned from Hans, it's really interesting talking to Hans about his approach to audits, talking to trust about his approach to Tintra, talking to all these people. They all have slightly different ways of approaching these audits, these security reviews. But Hans especially, really interesting, he has a checklist that he goes through of just, these are common things that I see all the time that are going to be in code bases always. And that's really cool. And he's able to just use that to find.
00:28:56.102 - 00:29:06.550, Speaker A: He's like, all right, cool. First we're going to look for this vulnerability. Here it is. Boom. I've seen that before. And again, that's why solid is such a powerful tool. Because if you see every single vulnerability out there, you can start to just classify.
00:29:06.550 - 00:29:39.446, Speaker A: Okay, I've seen it. Yeah. Really good chess players, for example, if you interview them about, hey, you show them a board and you go, what game is this from? They could tell you what game, like a chess board position is from, which is insane. It's all patterns, right? So it's the same thing for finding vulnerabilities. It's just looking for these patterns. So on the lamer side of things, stuff that we always see and stuff that we're tweaking the judging on code hawks to make it a little bit more fair, a little bit less rewarding to some of these, like, lamer. Lame is a bad word, but there's a lot of just like, hey, these always show up like, oh, okay, erc seven.
00:29:39.446 - 00:30:04.298, Speaker A: Seven. If you have an ERC 20 that has a callback functionality, that's a reentry vulnerability, so you better watch out for that. Or look, zero validation address or fion token transfer or rebasing tokens. This platform won't work with us. There's all these like, oh yeah, erc twenty s are weird and they cause bugs because they're weird. Oh, this one has you assumed all eRC twenty s have eight or eighteen decibels? Well, some of them have six. Ha.
00:30:04.298 - 00:30:27.806, Speaker A: Got you. Precision loss. There's just a ton of these small, kind of lame ones that come up all the time. But yeah, it's like they're small and lame, but they cause huge damage if you don't keep them in account. Something that I've been seeing, that I love to see. When I was first getting into competitive audits, back when I was doing codefrienda ones, which again, phenomenal platform, codefarina, one of the ones that I was like one of my first unique mediums. So I was doing a team with Geo.
00:30:27.806 - 00:30:51.510, Speaker A: This was early, early. This is like the first month that we launched. We found an MEV vulnerability on one of these protocols and it was like, all right, cool, you can front run in this super specific scenario, steal all the funds, stuff like that. This was like eight months ago. Not a lot of people were thinking about mev. And so we were able to find a unique medium because not a lot of people were thinking about mev. Now, I'm looking at the findings from Codex, from codefrienda, from these platforms.
00:30:51.510 - 00:31:17.726, Speaker A: I'm like, oh my. Like everyone is aware of this now, which is great, which is phenomenal. We are getting so much better at these historically weird issues, and that's great to see. And it's good for people to be thinking about this stuff, too, because a lot of times, a lot of these novel bugs, these novel issues that come up are becoming less novel. And that's what we want. We want to keep uncovering bugs. We still see from time to time some weird math heavy bugs.
00:31:17.726 - 00:31:46.110, Speaker A: Like, I think one of the recent bridge hacks was some weird signature validation or something like that. I forget those are also becoming less common, but those are also scarier ones because those are the ones where you need to be so on top of the game. You need to be so up to speed with how signature. That's like the, hey, I'm an assembly expert. I'm a crypto hashing encryption expert. Those are the ones that I think are still a bit elusive. But a lot of these other historically novel issues are becoming way less novel, which is awesome, which is awesome to see.
00:31:46.180 - 00:32:33.814, Speaker B: You got the simple ones, and then on the lassa side, you have these complex ones which involve multiple protocols. And you can say these are dependencies in some ways because they might be a constant in an array, a mapping of, okay, this contract is related to this one in some way. And then if you want to get the whole context, you would have to go through each dependency of each address, find out what are the dependencies in that. How does it interact with this original contract? And then you have the grand context, but obviously people are integrating into these contracts all the time, and then you have all these new attack vectors in different ways. And so that's where people are finding these very complex ones. A great example is pickle finance. It uses a proxy, the controller, and they made an arbitrary evil jar, which they used in the controller and then switched it for actual jar.
00:32:33.814 - 00:32:57.150, Speaker B: And then a whole multi contract exploit, because these are the hard ones and these are the ones that not everybody's looking at because they are so complex and multidimensional. So I think that's where majority of the advanced ones are. And just from my research of trying to automate it, that's very apparent that this is where they come from, because I came of it from a black hat point of view. The original tool was for blackhatting, but then I didn't want to go to prison.
00:32:57.230 - 00:33:04.406, Speaker A: It's because you have a moral compass and you wanted to do the right thing, not because you. Yes, okay, I'm ethical. Yeah. Yes.
00:33:04.508 - 00:33:47.922, Speaker B: So having that initial point of view, I know what they're looking for. And that's what I would be looking for if I were to exploit something, is find every single contract that interacts with this. And usually you would find that within the state somewhere and go through there and just go from what manages money? How can I access this? How can I influence it? And then you'll eventually get your answer if you go deep enough and spend enough time. So if you want to get good, that's what I've gathered from all my interviews and chats with the elites of our space of cybersecurity and just reading post mortems. You can go on like rec news and find them all other post mortems, and you'll be surprised, it's quite obvious of the passions that go on. So we are getting to the end. I just want to mention, thank you so much for jumping on and giving me your time and sharing your experiences and your povs on.
00:33:47.922 - 00:33:59.174, Speaker B: First of all, co founding all these projects which are pushing the space and building a brand. Hopefully we finally get to the point where we're not a tiny industry because of these efforts. So thank you so much for joining me. Really appreciate it.
00:33:59.212 - 00:34:18.346, Speaker A: Thank you so much for having me on. And I do just want to say one more thing. For all the people who are new, who are listening to this, who are looking to get into the space, at first it might seem incredibly daunting to get into the space, especially. I know we talked about a lot of different terminology here. If it doesn't make sense, feel free to read up on this. Interact with Twitter. Ask questions there, go to discords, go to githubs.
00:34:18.346 - 00:34:35.446, Speaker A: I know it can seem intimidating at first. One of the things that I always say is I don't think I myself am a super intelligent person. I think I'm one of the dumber people in this space. I really do. I think at the end of the day, time behind the wheel, the more you do this stuff, the better you get. And that's just it. If it's hard, a lot of this stuff was really hard for me getting into it.
00:34:35.446 - 00:34:45.634, Speaker A: A lot of this stuff was really hard for everybody. If it's hard for you, it's hard for everybody else. That's okay. The more you do it, the better you will get. So don't give up. Jump in. You will get better and you will see improvements.
00:34:45.634 - 00:34:54.902, Speaker A: Just make sure to pace yourself and keep practicing. We need you in web three. We need you doing security. We're very excited to have you here and we have a long way to go to Gotcha. We have a lot of stuff to do.
00:34:54.956 - 00:35:20.270, Speaker B: Yeah, there's a lot going on and I'm sure we'll get there in the end. Just matter of time, really. Final thank you for jumping on and thank you everybody for listening. I hope you enjoyed this talk. And if you're interested in learning more about Patrick on his Twitter, go check out codehawks, go on Cypher and look at his YouTube, all that stuff. And if you want someone on the podcast, just dm me on Twitter at Dagachi or at scraping bits and I'll see what I can do otherwise. Thank you so much, Patrick, for coming on and have a great day.
00:35:20.340 - 00:35:21.262, Speaker A: Absolutely. You too.
00:35:21.316 - 00:35:22.460, Speaker B: Thank you. Take care, everyone.
