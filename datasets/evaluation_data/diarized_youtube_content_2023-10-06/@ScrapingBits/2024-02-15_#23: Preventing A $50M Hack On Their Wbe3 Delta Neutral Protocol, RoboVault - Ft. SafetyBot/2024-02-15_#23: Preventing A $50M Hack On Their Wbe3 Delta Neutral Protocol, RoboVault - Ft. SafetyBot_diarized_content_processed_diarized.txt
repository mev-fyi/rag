00:00:00.250 - 00:00:20.638, Speaker A: We could have got hacked for like over 50 million. Was a bug at the time that just gave us PTSD and we were really slow on getting things live. Essentially it was a reentrancy bug. Manipulate the price of the lps using the delta neutral strategies and then could have wept. The vault GM, GM, everyone.
00:00:20.724 - 00:00:27.734, Speaker B: My name is Dugatchi, the host of scraping bits, and today I'm of Safetybot. How's it going?
00:00:27.852 - 00:00:31.830, Speaker A: It's going well, man. Can't complain, can't complain.
00:00:32.890 - 00:00:36.998, Speaker B: Let's do a little intro of who you are and what you do.
00:00:37.084 - 00:01:39.418, Speaker A: Yeah, so I'm co founder of Robo Labs Sensei. We're building out tooling and infrastructure for web3 teams. We started in 2021, basically started by launching Robovault, product that maybe some listeners are familiar with. We were doing Delta neutral strategies on phantom and avalanche, essentially allowing users to deposit earn yield, doing some hedging against impermanent loss. And basically at the start of this year, we decided to do a bit of a pivot for a number of reasons. Defi bear Market was hitting us hard and also we just found as like running DeFi protocol, most of our time was actually just spent building tools for ourselves because the current tools are actually pretty terrible and that's why we moved more to the tooling and infrastructure side of things.
00:01:39.504 - 00:01:46.240, Speaker B: Yeah. And how did you get into web free? Were you doing stuff before as a dev?
00:01:47.730 - 00:02:37.470, Speaker A: So I was actually at a startup. We were doing solar power, micro grids, and we had projects in a bunch of third world countries, one of them being Nigeria. And I was managing the finances there and our bank accounts continuously got shut down and we had to use crypto to start sending money to pay for stuff because we had kind of manufacturing in China, we'd be like paying for things in Nigeria and essentially started using crypto, then kind of just went down the rabbit hole and decided to kind of teach myself solidity as DFI summer was popping off and. Yeah, basically built. Robovault is basically the first product that I built in web3.
00:02:37.540 - 00:02:43.540, Speaker B: Right. And did you do anything prior to robovault in web3 or did you just go straight into.
00:02:43.910 - 00:03:05.670, Speaker A: Straight into that? Did play around myself and my co founder. We did play around a bit with arbitrage bots. That's more bit outside web3. It's kind of crypto centralized exchange. We didn't have much success there, though. It's very competitive.
00:03:06.010 - 00:03:20.620, Speaker B: Yeah. But it got you into the realm of strategies and bots in a sense, or automated systems. And then what made you get into basically these delta neutral strategies and how did you learn them? Because I've tried to learn them as well and it's quite hard.
00:03:22.370 - 00:04:14.410, Speaker A: Yeah, I think my background is in data science, so I kind of saw all this d five stuff happening and just pretty much started by being like, oh, this is interesting. You can earn 100% by providing an lp on this pair, but actually if the price moves, you're going to lose a lot from Il, but you can lend and borrow. What happens if I lend some money, then borrow another token and then put in the lp and then try and do some swaps when the market moves? Basically just built some spreadsheets at first and built some python simulations. I was like, oh, this actually looks like it might make a bit of money. And then just was like, can I write the code for this? Along with my co founder? We're like, oh, let's try and write some smart contracts.
00:04:14.910 - 00:04:15.274, Speaker B: Yeah.
00:04:15.312 - 00:04:46.280, Speaker A: And then basically we're like, oh, let's launch this. I think the v, one of our launch had a bunch of bugs and vulnerabilities, so luckily we never got hacked. Came in as naive developers not really understanding the security element and thankfully didn't lose a bunch of people's money. But yeah, essentially it was just kind of experimenting, playing around and finding something that worked, really playing with numbers.
00:04:46.890 - 00:04:49.846, Speaker B: And it worked right. Like it actually produced results.
00:04:49.958 - 00:05:29.830, Speaker A: Yeah, I think we had from when we launched to twelve month, the following twelve months on USDC, the yields, someone would have earned around 20% over that twelve month period. And that's without any emissions at all. We never launched a token. Yeah. So we had pretty solid track record. Obviously it's a function of volatility and the yield from trading fees, emissions, et cetera. But yeah, we have had a pretty tried and tested track record of producing pretty solid yields for users.
00:05:30.890 - 00:05:34.600, Speaker B: And what is delta neutral strategies? For those that don't know.
00:05:36.890 - 00:06:30.646, Speaker A: I guess the term is bit loosely used in terms of if you talk to a tradfi person, it's very different. But in terms of the web3, it's basically kind of market neutral. You are basically kind of, regardless of what happens in terms of market movements, you're protected against those market movements. So you kind of have some hedge. So in our case, like for a USDC depositor, they would be depositing USDC, earning yield from, say, USDC phantom liquidity pool, but they're actually protected against any movements in the price of phantom. If phantom dumps 50%, which it has done many times, they're protected against that.
00:06:30.828 - 00:06:33.980, Speaker B: So how is it actually protected at like a technical level?
00:06:35.310 - 00:07:27.942, Speaker A: So the way we did it was essentially on the USDC side. Deposit USDC into lending protocol, borrow some phantom, then pair that with the remaining USDC. So your amount of phantom in the LP pool is equal initially to what you borrowed. And then as the price of phantom moves, we just look at the ratio between what's in the LP and what's in what you owe to lending pool. And if that goes above or below some threshold, we do a swap and rebalance. So it's not like a perfect hedge, there's like some small exposure to potential price losses. But basically what we found was on, I'd say, 99% of days, we would always be profitable, the user would always be in profit.
00:07:27.942 - 00:07:48.014, Speaker A: And the drawdowns, I think the worst case were, like, less than 0.5% works well. There's like a bunch of other teams doing similar stuff still. Yeah, I think the issue is more at the moment. Just like in general, DFI yields are not that appetizing.
00:07:48.142 - 00:07:58.360, Speaker B: The whole kind of yield. Farming season is over. I think during the food crisis would have been amazing. You would be bawling in money.
00:08:00.890 - 00:08:21.006, Speaker A: There's like old screenshots I have, and it's like, look back at it and it's like there's like 28 day period where USDC yields were at like 70% APY. The good old days. Some insanity. 2021 2022.
00:08:21.108 - 00:08:49.814, Speaker B: Yeah, like the sushi swap yam. That stuff was insane. I really miss those times because now that I'm a better developer, I could capitalize on that. But, oh, man, it just makes me far more for the next season of whatever it's going to be, but if it was profitable, why don't you still do it? Now, I know the pools are quite low in terms of Apr APY, but if it's profitable, then you should still do it, right?
00:08:49.932 - 00:09:36.918, Speaker A: Yeah, I think what we found was the overhead is pretty high and the level of risk is actually pretty high. So when you're running these strategies, you have the risk of what happens if the lending protocol breaks, what happens if there's vulnerability on the side. And actually, we dealt with some pretty close calls. For example, when we were on Phantom, when scream got exploded. Before that, I think we had like ten mil tvl there. Luckily, we had set up some alerts and things like that to alert if weird things were happening. So we were able to get just withdraw all that money.
00:09:37.004 - 00:09:37.206, Speaker B: Yeah.
00:09:37.228 - 00:11:07.300, Speaker A: And basically it got to a point where as users got much more risk averse and yields were dropping. It just became not really profitable from an operational standpoint, unless you were able to really attract a lot of TBL, which we found was hard to do. It was just hard to differentiate ourselves. And as a protocol, without a token, you're competing against protocols that are maybe like popping up every month with the token and everyone's just going to go there, farm and dump the tokens. And even if you can start competing with that, which is very hard to do over the long term. And we kind of came to the conclusion for these more advanced strategies, if you really wanted to do it well, with managing a lot of money, it's probably easier to do at the moment with the state of web3 and the tools available, it's probably just easier to do it as a hedge fund and in a centralized way, you can whip up a strategy in a day there, whereas if you're trying to do it in the DFI way through a vault, it's maybe like six weeks, six weeks auditing, et cetera. I think we kind of figured out actually it worked really well in the bull market, but bear market, it's not going to work.
00:11:08.870 - 00:11:15.140, Speaker B: Always prepare for the bull market, though, since we're in the bag. Decapitalize on that.
00:11:15.610 - 00:11:18.550, Speaker A: We still got the code ready to redeploy.
00:11:20.650 - 00:11:30.540, Speaker B: Just waiting for the opportunity. You finished that, you packed that up? Did you sell it at all or just kind of close shop and move on?
00:11:30.910 - 00:12:09.558, Speaker A: Yeah. So we just basically just wound the bolts down and just said, yeah, we're turning things off, hit the off switch and basically decided to move on as a team to focus on more tooling and infrastructure, just software, actually, and a big thing. Big reason for that was, I think, as I was saying before we had a few bugs in first iteration, we almost got hacked. We could have got hacked for like over 50 million.
00:12:09.724 - 00:12:10.214, Speaker B: Oh, wow.
00:12:10.252 - 00:12:47.940, Speaker A: Because there was a bug at the time that just gave us like PTSD and we were really slow on getting things live. Essentially, it was a reentrancy bug, like price manipulation. So we were able to kind of manipulate the price of the lps using the delta neutral strategies and then could have just whipped the vaults. In retrospect, it's kind of a pretty obvious thing that we just missed, as when you're getting your first product live, you're just super enthusiastic to deploy something.
00:12:48.550 - 00:13:14.778, Speaker B: It seems like a vault kind of protocol. I remember grim finance, it had that exact same thing. Someone just re entered the same function with a false token, I think. And then at the end, the last reentrancy step, they just put like the actual token, had all the shares and then just withdrew it all. I remember seeing that in real time as well. It was crazy.
00:13:14.864 - 00:13:21.326, Speaker A: I guess when you're building this stuff as well and you see other teams getting hacked, it just scares the hell out of you.
00:13:21.508 - 00:13:22.480, Speaker B: Oh, yeah.
00:13:23.330 - 00:13:25.406, Speaker A: Always got like that look on, always.
00:13:25.428 - 00:13:29.600, Speaker B: Looking over your back, especially if you got millions of dollars at it.
00:13:33.490 - 00:13:59.978, Speaker A: Because when we first got that bug discovered, I think I just woke up at five to all these messages. It's like group chat with the UN team. And it was just like we discovered this and we were figuring out how to wind things down, how to save it. And then the next twelve months was every day waking up thinking, is today the day that another bug is going to be discovered? But luckily, I guess, how did you.
00:13:59.984 - 00:14:06.090, Speaker B: Go about winding down from knowing there was an exploit in your contract?
00:14:08.190 - 00:14:48.466, Speaker A: So with the first one, basically we kind of just worked with the yearn team. They were kind of like helping us. We basically just kind of pulled everything out of the strategies. Luckily, our vaults allowed us to change some parameters to actually remove it. We did that. I remember while we're doing that, people in our discord were like, funds being moved? Is the team rugging? And before we announced that, we just made sure everything was safe. And then we kind of announced that we're like, everyone should withdraw.
00:14:48.466 - 00:15:19.780, Speaker A: Now there's potential exploit. We've migrated funds out of the strategy, but we're going to have to redeploy a new version and that's how we do it. The communication actually went pretty well. A lot of people were like, you guys handled this well. You didn't fumble the ball because there's been cases of other teams I've seen where people point out an exploit and it's been ignored. And then they got hacked like a few weeks later. Crazy.
00:15:19.780 - 00:15:22.254, Speaker A: Luckily, we weren't one of those teams.
00:15:22.382 - 00:15:31.400, Speaker B: Yeah, for sure. You basically just helped you, helped you out, did some strategy to kind of withdraw it all and then was all set.
00:15:31.770 - 00:15:41.834, Speaker A: Yeah. And then essentially the next two months was rebuilding it without the bugs and rereleasing it.
00:15:42.032 - 00:15:56.414, Speaker B: Got you. And after you did all this, switching over to the tooling side, I guess. What was the process and going to the next project? Archival. Right. So what was the transition period like?
00:15:56.532 - 00:16:49.230, Speaker A: Say, the first few months was pretty all over the place. We were kind of trying different things out. We were like testing a few different ideas. Like, could we focus on real time alerts? Because that's something that we built for ourselves that had actually saved us like multiple million dollar losses. Archiver as well was something that we'd been building internally just because we'd found that indexing was like such a huge pain point for us having that data pipeline. So, yeah, the first two months, I'd say, was just experimentation. And then we basically kind of got a bunch of feedback from users, other teams, et cetera, and decided to really go all in on archiver.
00:16:49.230 - 00:17:13.142, Speaker A: This quarter we've got the product to private beta. We've got a few customers that we're working pretty closely with, onboarded and actually using it for various use cases. But, yeah, it's like very been the first two months were a bit all over the place. Now we have an actual direction and know what we're building. Right.
00:17:13.196 - 00:17:21.014, Speaker B: So you already kind of had the product before with Robovault and you kind of just shifted it over.
00:17:21.052 - 00:17:21.218, Speaker A: Right.
00:17:21.244 - 00:17:22.890, Speaker B: It wasn't starting it from scratch at all.
00:17:22.960 - 00:18:24.666, Speaker A: Yeah. So I guess it was built as an internal tool, so it was kind of taking it from, okay, this is something we're using internally for this very specific use case to actually, how can we build this into a general product that any full stack developer within web3 can use and can kind of do their indexing, can deploy their APIs to production, can solve a lot of the existing pain points that there are with the graph. I'm sure anyone that's worked with the graph has not necessarily always had a fun time working with it, which is one of our motivations for building archival. Yeah. So a lot of us being kind of going from internal tool to actually something that anyone can pick up and have a really good devex with and can cover a lot of different use cases.
00:18:24.778 - 00:18:43.570, Speaker B: You mentioned that you're getting feedback now, so you already have the MVP. Right. And how do you go about giving people this kind of preview alpha experience and then getting the feedback and how do you process that to make into the next steps?
00:18:44.470 - 00:20:33.074, Speaker A: Yeah, so I think luckily we've kind of got a few people, like a few teams that we're pretty friendly with from our days running vaults. A lot of it's been kind of working closely with those guys being like, do you want to test this out and just kind of showing them what we can do with the tool? Initially, there was a lot of handholding where we would potentially do the work for them. Like, okay, we'll write some index jobs for you, and here is kind of the output and actually see if they're happy with it, show them what additional stuff they can do with it, they can't currently do with the graph. So we also built one thing that's pretty interesting is an open source backtesting library that sits on top of archiver that allows you to kind of back test defi strategies. So yeah, really just talking to as many developers as we can, seeing if they're interested to try it out, having a few different examples of the workflow, what it looks like for them, and then really just getting them to try it out and just doing as much handholding as possible. Kind of really trying to if they get stuck on anything because our documentation is not perfect still, like some loose wires, like some bugs that might pop up every now and then with certain edge cases we haven't tested. So really just being kind of super hands on with our users and customers to make sure the products are really actually solving the pain points we want to solve.
00:20:33.122 - 00:20:41.162, Speaker B: Now that you've done two startups in the web free space, how do you kind of go about prioritizing what needs to be done?
00:20:41.296 - 00:21:43.882, Speaker A: Yeah, I think this is pretty tough one, and we're not like myself and my co founder haven't always done a great job at this. I'd say this is actually just still the same startup, this is actually still the same company that was doing robovault. But yeah, I think it's really just kind of talking amongst the team, trying to cover vision, getting really trying to push things, push out mvps as fast as possible so you can get feedback from users, because there is a temptation. I think a lot of engineers want to get things perfect before they kind of show it to a user. And they might spend six to twelve months building something. Then when they finally show it to users, they're like, this doesn't solve my problem. But if you can have a much faster cycle where say you spend two months getting bare bones of product and then you kind of can show them, then you're like, we're going in the right direction.
00:21:43.882 - 00:22:31.206, Speaker A: Or you kind of might be like, this is completely waste of time. After we pivoted one thing we built, we started building a product called denotify, as well as archiver, which was basically like a real time alerts engine. We're still kind of working on it, but we've deprioritized that just because we don't think it's super interesting. And there's a lot of other teams that offer like real time alerts for on chain activity. So yeah, I think it's really just try and build as fast as possible, get the feedback from your target user customer group and then figure out where to go next is how we got about it.
00:22:31.328 - 00:23:00.738, Speaker B: So how do you decide what is absolutely necessary for your product? Because I think a lot of people are like this in the startup space, is you have this idea when you want to build out each feature first and then ship it, but then there's a problem of never shipping it and then the project dies. So what are the steps you take to ensuring you get this mvp and making the bare bones minimum?
00:23:00.834 - 00:23:34.766, Speaker A: Yeah, so what we've done, we kind of have a product development process where three of us in the team, every two weeks, we basically just have a list of features, and there's like high priority, medium priority, low priority, and then we'll just kind of look at that list for an hour and be like, we thought this was high priority, but actually no one wants it, no one needs it. Let's not do this. And yeah, it's kind of just regularly, like, going through that, making sure that we're not building features that no one's going to use.
00:23:34.868 - 00:23:39.810, Speaker B: But how do you know what that is before you even do it? Before you have customers, right?
00:23:39.960 - 00:24:28.946, Speaker A: Yeah, I think before you have customers. It's a bit of a leap of faith. There is like talking to users beforehand. The way we kind of, like, our kind of thought process was we were like our first internal user customer because we built this stuff for ourselves as a team that was managing a d five protocol. We're like, oh, shit, we suffered a lot and had to use some tools that put us through. Just had a bunch of issues, wasted a bunch of time. So that kind of gave us a pretty good idea of where the gaps were in the market, what really could be improved on the existing tool set.
00:24:28.946 - 00:25:30.630, Speaker A: But yeah, I'd say before even building something, you can just try and talk to your target users, customers and just reach out to people on Twitter, discord, wherever, just like, I'm thinking of building this. Do you think it would be interesting? Ask them what are your pain points? Et and yeah, really just trying to get as much data. But yeah, I think there's a Steve Jobs quote where he talks about doing kind of customer surveys is a waste of time because you try and just ask your customer what they want and if it's like a big stepwise difference, they're not necessarily going to be able to give you good feedback. It's kind of finding balance between trying to understand the pain points of your target users and where you can actually solve a problem. And then you figuring out actually what product can do that? And what features actually solve those problems?
00:25:30.780 - 00:25:55.360, Speaker B: Yeah, I think asking, what do you want? Doesn't really make sense, because if they have, I guess, a car, they want a faster car. Right. Which just kind of, like, makes sense. But I think a better question to ask is, what are your problems? And then you can go from there, I think. Because that's more. Because that's basically what engineering is. It's solving problems.
00:25:55.810 - 00:25:56.560, Speaker A: Yeah.
00:25:57.330 - 00:26:32.186, Speaker B: And if it's just like an optimization thing, then sure, you can just make the current product faster, but I think you can go deeper into something if you ask them what the problem is, because maybe there's like an underlying. Oh, maybe instead of this car, I want an aeroplane to travel, I want to go over countries, basically. And then there's that. Instead of a car, you can't drive over water unless you make some flying car. Right.
00:26:32.368 - 00:26:51.360, Speaker A: Yeah. I think there's like a quote on this from Henry Ford where it's like, if you ask people if they wanted a car, they'd say they just want faster horses and buggies. If you relied on just asking them what they want, they wouldn't have said, I want a car, because they don't even know what a car is.
00:26:51.890 - 00:26:52.734, Speaker B: Exactly.
00:26:52.932 - 00:27:17.320, Speaker A: At that point, it's pretty hard to find that balance, because now, the thing is, if you just ask, what do you want? You might just end up with a laundry list of all these different features from different users. And then you're just trying to build just this massive maze of features within one product, trying to do too much.
00:27:19.310 - 00:27:34.510, Speaker B: And how do you manage all these hats that you're wearing? Because obviously you're an engineer, but you also have to manage the business side community, the feedback, all this kind of stuff. So how does that kind of look?
00:27:34.580 - 00:28:55.080, Speaker A: Yeah, so I've probably compared to when we first started, I've done doing way less dev stuff, kind of myself, and my co founder of split rolls up, where I'm more doing the CEO role. He's more the CTO. And, yeah, essentially I'm trying to specialize more in the less development stuff, which at times is frustrating because don't necessarily get to work on technical things, which is always exciting. But also, I'm like a self taught software engineer who's from a data science background who writes very sloppy code, whereas my co founder is legit software engineer who is just like a gun on back end stuff, everything, and can do things in a super polished way, way more efficient. So, yeah, kind of just divvying things up based off skill set, et cetera, is the way we've gone about it. And when I still jump in on some dev stuff when I can, when I have time and help out, just try and make sure that, say, like, 80% of our time is on the core stuff that we need to focus on.
00:28:55.690 - 00:29:05.882, Speaker B: I think another important thing is choosing the right co founder. So I'm assuming you guys were just friends before, but you might not have been. Why do you choose being a co founder over founding yourself?
00:29:06.016 - 00:29:58.262, Speaker A: Yeah, I think what you're saying. Myself, my co founder were both friends before we knew each other. We actually even worked at the same company before starting this. So we're actually working from the same office and then doing this crypto stuff at night and when we had spare time in our break, et cetera. But, yeah, I think if you're a solo founder, when you're running a company, there's just so many ups and downs. It is good to have a co founder, to kind of keep you grounded and just go through those battles when things are not going well, lean on each other, and then, yeah, I think at the end of the day, everyone has their strengths and weaknesses. So a lot of the stuff that I'm good at might not necessarily be things that my co founder is good at, and then vice versa.
00:29:58.262 - 00:30:35.478, Speaker A: Things that I'm terrible at, he's really good at. So it kind of helps to balance each other's weaknesses out and the gaps you. Yeah, I think there's a lot of quotes from people like Ben Horowitz that just talk about, like, co founder just makes it much easier to run a company, especially when things going bad and you're going through those tough times and potentially ready to give up. If you have someone that you can help get you through, that makes a huge difference.
00:30:35.644 - 00:30:50.640, Speaker B: Yeah, for sure. It's definitely like having someone in the weeds with you going through it all. When you're by yourself, it gets much tougher. I don't know about the benefits of being solo versus co founder. I've done both. But.
00:30:52.770 - 00:31:28.440, Speaker A: I think you can be really successful solo if you're dedicated and you multifaceted, potentially going to be harder then on the other side. If you have a bad co founder, your life's going to be hell. They're going to drag you down. You need to be pretty careful. I think it's almost like a marriage in a way. It's kind of like you guys stuck together until either the business blows up or you guys decide to part ways.
00:31:28.890 - 00:31:40.406, Speaker B: Or doing solo is like playing on hardcore mode and then co founder is kind of like bringing it down to hard mode in some ways, but is the wrong co founder. It's like extreme hardcore.
00:31:40.438 - 00:32:09.750, Speaker A: I think there's some teams that have like three plus co founders and then I've never really worked in that situation, but I imagine that gets to the point where it's like too many cooks in the kitchen and it's potentially like decision making becomes way harder. I can imagine that being pretty tough to manage, but yeah, again, it would probably just depend on the people involved. Some people probably can make it work.
00:32:09.820 - 00:32:30.442, Speaker B: Now that you're doing your second startup in this web free area, what kind of difficulties have you faced while doing every startup you've done? And if you were to do it again, how would you kind of go about doing this whole journey for a better result or a more accelerated result?
00:32:30.496 - 00:33:31.486, Speaker A: I guess running like the vault, our biggest issue was like distractions. We weren't fully zoned in at times. So I remember when there was a period where we had really good momentum, we were growing in TBL, and then I just went off and spent a month building like an mvp for an options protocol instead of focusing on building strategies. I was like, oh, this is a cool idea. I'm going to do this where we probably could have say, yeah, I think one lesson is when you have momentum, put your foot on the gas, go hard, don't get distracted by other stuff, even though it might be fun and interesting, don't get tempted. Obviously bit of experimentation is good, trying different things, but yeah, kind of going off and spending like a month plus building some random other product is probably not a good way for one of the founders spend their time.
00:33:31.588 - 00:33:31.854, Speaker B: Yeah.
00:33:31.892 - 00:34:11.360, Speaker A: And then I think just really doing a better job of interacting with users. The value of BD and networks. I personally am a pretty introverted person and hate the networking side of things, but if you can build up kind of a good group of people who you trust, you can help them out. They can help you out with questions. That actually really helps because then you can be like, we're currently struggling with this. How do you think we go about it? That's helped a lot. And, yeah, I think we didn't do that very well initially, and now we're much better at that.
00:34:11.360 - 00:34:17.230, Speaker A: Still like a long way to go, but yeah, that's one big lesson.
00:34:19.810 - 00:34:29.940, Speaker B: So the way you're building up your networks now is just reaching out to people and offering basically free products, is that it, or are you also trying to make friends with them?
00:34:30.310 - 00:35:15.410, Speaker A: Yeah, I think one thing that as soon as we shut our bolts down, basically we reached out to a bunch of teams who were doing similar stuff, and we're just like, here's a bunch of work we've already done. Here's all the pain points we had, and here's how we solved them, because our previous competitors probably had similar pain points. A few people that we did that with end up becoming customers of ours and users of ours. Yeah. Really just trying to help other people within the space. And I think that finally kind of pays dividends. You just build up a bunch of trust.
00:35:15.410 - 00:35:42.522, Speaker A: You have a bunch of people who you've helped, ideally, and then I guess humans are wired for reciprocal relationships, so they might help you later down the line. Yeah. So I think it's just kind of trying to find people that you can potentially add value to in whatever way and not just trying to go in and be like, I'm going to try and sell you this, buy this, buy this, buy this.
00:35:42.576 - 00:35:43.626, Speaker B: Yeah, for sure.
00:35:43.728 - 00:36:00.590, Speaker A: Build the rapport, authentic connections, and maybe if they can use your products and be a customer, good. If not, then at least you've got someone in your network that kind of can help you trust you, et cetera.
00:36:01.250 - 00:36:21.926, Speaker B: Yeah, for sure. I think establishing connections is probably the most important thing because without these connections, you're not going to have business, and it's something you can't really buy either. You have to do it organically. You can't really just go up to some. I guess you could do, like, a marketing agency, but then you're not building authentic connections at that point.
00:36:22.028 - 00:37:08.630, Speaker A: Yeah, I think there's no way to fake your way into it. It's like, if you have nothing valuable to offer them, whether it's just like lessons or some information, et cetera, no one's going to want to talk to you at a business level. Yeah, but I guess as someone more technical, I think often this goes ignored and the value of it goes ignored. You kind of just want to be like, heads down and building stuff, et cetera. Whereas I think a lot of people in the technical areas often just don't realize how valuable this is.
00:37:08.780 - 00:38:24.538, Speaker B: Yeah, I guess there's two different types of devs that I've noticed is the ones that are, like, 100% engineers don't do any biz dev, but there's also some that do, like engineering and Biz Dev, which I think is like the perfect kind of mixture because you have the technical expertise to build out projects you think about, but you also have the network and the communication skills to talk to people about ideas, form connections, just build friendships, right. And through friendships brings opportunities. And for example, like this podcast, I get to talk to technical people and discuss ideas and what they do, and that gives insight into different fields and what's also missing. So I think that's also a key area for any kind of engineer, which is massively lacking. I think once you develop that, which is definitely a skill, it's not something you're just born with. I mean, you can be naturally confident, but talking and making connections is definitely a skill. And I think when someone develops this, it makes life so much easier.
00:38:24.538 - 00:38:51.160, Speaker B: Especially if you run a protocol when you're building it, then you can fall back on these people, ask them for question. Ask them questions to help you, which is what I've been doing personally, and it's been helping a lot. I've had great discussions with auditors about specific things, and it's kind of like sparked ideas of breakthroughs for my project. But yeah, it's quite interesting.
00:38:51.770 - 00:39:32.462, Speaker A: Yeah, I completely agree. I think the only difference is depending on what stage your company is at, like the early stage, the kind of engineer who can wear many hats and potentially do biz dev is really good. Then say, if you become like a 50 person company, you probably don't need all your engineers to be also. You potentially want those engineers who are just like smashing code all day and nothing else, and maybe they're like on some other roll, and just all they do is 16 hours nonstop coding.
00:39:32.606 - 00:39:46.726, Speaker B: Yeah, I think that's definitely hiring the specialties is definitely a thing. But I think for founders or startups, biz Dev is like a must, unless you have someone in your team that is specifically for that.
00:39:46.908 - 00:40:45.242, Speaker A: Yeah, and I think it's even a lot of people say actually it needs to be one of the founders doing biz dev. Initially, I think a lot of teams are just like, we'll just hire Bizdev person and they can go out and talk to them, but then they don't have all the context on the product. They don't necessarily have understand the intricacies of how the tech works, and they're not necessarily equipped to actually succeed as a business dev person. If you just hire a random salesperson who's good at networking, because in those initial stages, you need to understand the product to get those, the first few users, it's just really hard to get, and you kind of need to really understand the product. Whereas just like a business person who doesn't necessarily have great technical expertise might.
00:40:45.376 - 00:41:29.640, Speaker B: Just struggle with that, yeah, I think you need a mix, because in order to convey your innovation or your edge over others, you need to be able to explain the very technical things, high level to first of all, users and also to people that you're partnering with. If they're not technically inclined, or maybe they're just like the person that onboards partnerships or something, whatever that name is, then you're going to have to explain to them, which aren't technical, about your product. So it's very essential, actually, when you think of it in the grand scheme of things.
00:41:31.210 - 00:42:14.840, Speaker A: I remember when we were running our vault, a BD person from one auditor, who I won't name, but low quality auditor, the BD person set up a call with us, and I just asked him a few questions that were semi technical, and he had no idea how to answer it. And straight out, I was like, we're definitely not going to ever work with this auditor. Just asked him some very basic technical stuff. Not to knock BD people or anything. I think it's just often founders hire BD people and don't necessarily train them up well enough as well, is another issue.
00:42:16.650 - 00:42:26.314, Speaker B: And I guess, how did you build kind of the whole stack of these projects as well? Do you hire someone for front end, or did you bring on board someone.
00:42:26.352 - 00:43:01.582, Speaker A: That did front end initially for the vaults, it was just myself and my co founder pretty much just smacked it away. We kind of did some forking of other teams front end. I think our first front end was a fork of beefy's front end with the colors changed. Yeah. And then slowly we kind of built the team out. So now we've got five people in total. So, like two full stack engineers, one front end engineer, and then myself and my co founder.
00:43:01.582 - 00:43:12.970, Speaker A: Yeah, so we've slowly built the team out to kind of move a lot faster, because obviously just two people trying to build a product is really tough.
00:43:16.030 - 00:43:25.310, Speaker B: How did you get the money to basically hire these people? Did you basically just use personal money, use a vc? How did you kind of get the fund?
00:43:25.460 - 00:44:07.722, Speaker A: Yeah, so we did fundraise in late 2021. Basically right after we had the first vulnerability and we had to shut down our vaults, we did a fundraise. Luckily, people were still willing to invest, but at that time, people were willing to invest in anything. So we raised pretty small, round, and, yeah, that, along with the revenue we've generated, has kind of kept us going. Up until now, we've been a pretty small team, so it's not as if we're kind of spending crazy amounts of money. I'm sure you've seen this. You look at some of the budgets teams have and what they've built.
00:44:07.722 - 00:44:20.960, Speaker A: They're spending millions of dollars per month and not building much. Whereas we're of the opinion like, let's keep a small, lean team and really try and build quickly.
00:44:21.330 - 00:44:31.086, Speaker B: And what was your kind of hiring process for this as well? So you obviously had a certain amount of money. So how do you get incentivized enough and choose the right people to be aligned with your vision?
00:44:31.198 - 00:44:56.330, Speaker A: This is one thing we were pretty terrible at. Hiring is actually really tough. We've gotten really lucky and gotten some really good hires. So first two hires came from like a recruiter, we use a recruiter. One of those people was really good. Still with us. One of those, the first hire is actually no longer with us.
00:44:56.330 - 00:45:43.820, Speaker A: Kind of. They just weren't a great fit. And then the rest of our hires were actually from our community. So basically people who were using our product and either like users or friends of users and just got to network that way. Yeah, I think that's probably a good way to do it. If you can kind of find people who are really excited about what you're building, actually have passion because you want people who are kind of, at the end of the day, if you're working for a startup, you're probably going to have to work a lot harder than if you're working say like a standard nine to five job. So you need people who have a bunch of passion and willing to do stuff outside of just there.
00:45:43.820 - 00:46:08.660, Speaker A: If you're hiring like full stack developer, they might need to jump on custom support one day. They might need to help a bit with marketing another day looking for people like that. But I'd say, yeah, we've gotten lucky while having a pretty terrible hiring process just to luckily stumble on some really talented people in our team.
00:46:09.510 - 00:46:21.782, Speaker B: Yeah, and you mentioned you hired through the community, so I guess when did you start prioritizing your community development in this whole process as well? While juggling, not even having a product.
00:46:21.836 - 00:47:03.700, Speaker A: Released, it's still the same team as when we had our vaults. So it's still essentially like the same core team. So basically it was just a case of when we were running our vaults, we just put out some ads, put it in our discord. Would anyone be keen? Even had one hire who we weren't actually actively hiring at the time, but was just a developer working on some other random stuff. Asked us a question, he's like, oh, I'm struggling to do this, sorry. It was really good as a developer. We were like, oh, let's just hire this guy.
00:47:03.700 - 00:47:41.646, Speaker A: I think luckily, because at that time we had a b to c product, we had a lot more kind of engagement with people, a bit more awareness, whereas now we're more a b to B product. But we haven't made any new hires. So actually our next hires, I'm not sure how we're going to go about it. Have to figure out a plan. I think potentially just trying to go to more IRL type events and just talented people there is what we're thinking.
00:47:41.748 - 00:47:58.630, Speaker B: IrL events are quite nice. I went to my first one in Japan for e Tokyo and it's quite nice meeting people finally in the space that know, not just profile pictures.
00:48:01.370 - 00:48:01.734, Speaker A: And.
00:48:01.772 - 00:48:16.220, Speaker B: You can actually build connections with them and meet their friends. Yeah, it's quite good if you have bd skills, of course, but even if you don't, then just finding someone and being genuinely interested in them, getting to know them, and then through that they kind of introduce you to more people.
00:48:17.070 - 00:49:03.020, Speaker A: Yeah, I think this also kind of helps build up your networks as well. And a lot of times you might kind of know someone from virtually, but never have met them IRL. And when you finally meet in real life, the connection gets even stronger. Yeah, I definitely think the IRL events are definitely really valuable. There is some dodgy stuff that goes on at Solomon and there's some weird stuff just like kind of people who kind of are just there to party, drink and have a good time, which is completely fine. But yeah, some people get a bit too carried away at some of these events as well.
00:49:04.670 - 00:49:26.260, Speaker B: Yeah, definitely go to the events and meet these people. I think even a great thing is speaking at events, providing, I guess, content and value to others in that sense, definitely attracts a large crowd. It's personally what I've done, otherwise I would probably still be a nobody. So yeah, providing content is a very powerful thing, I think.
00:49:26.710 - 00:49:48.780, Speaker A: Yeah, for sure. I think if you can speak at events and actually help educate a bunch of people who don't necessarily know the stuff you do, that's super valuable as well. And I guess it's kind of giving back to the space, which is always good. Yeah, definitely worth doing.
00:49:49.790 - 00:50:26.470, Speaker B: And it's evergreen content as well. If it's recorded, it would be on YouTube until YouTube dies, I guess, or something. Know, maybe they put it on Spotify and then it's just like you're always there, basically. So it's definitely worth putting your name out there. I understand the reason not to, but if you're a protocol developer, then it's necessary to get your name out there, build that reputation, have people interested, and then just keep going. It's basically linear or exponential, depending on how good you edit. But you're going to have to hit that road bump sooner or later.
00:50:26.470 - 00:50:31.160, Speaker B: But anyway, it's been great chatting with you for the first time.
00:50:31.770 - 00:50:33.222, Speaker A: Cheers, man. You too.
00:50:33.356 - 00:50:36.790, Speaker B: An old phantom buddy back in the day.
00:50:36.860 - 00:50:41.900, Speaker A: Phantom days. We made it out alive. We survived. Yeah.
00:50:43.150 - 00:50:44.570, Speaker B: All the crashes.
00:50:45.950 - 00:50:49.180, Speaker A: We're still here, still standing, still going.
00:50:49.630 - 00:51:00.350, Speaker B: Not wrecked yet. Almost wrecked, but not yet. But yeah, man. Thanks so much for coming in. Hopefully people get some value out of this and are inspired to take the leap into the startup world.
00:51:00.420 - 00:51:03.182, Speaker A: So we want more builders building cool stuff.
00:51:03.316 - 00:51:26.370, Speaker B: If the listeners have anyone they want on, just message me on Twitter at scrapingbits or email me at briefingbirds@gmail.com and I'll review who you've recommended and hopefully get them on. Otherwise, thank you so much for coming on and we'll see everyone in the next episode.
