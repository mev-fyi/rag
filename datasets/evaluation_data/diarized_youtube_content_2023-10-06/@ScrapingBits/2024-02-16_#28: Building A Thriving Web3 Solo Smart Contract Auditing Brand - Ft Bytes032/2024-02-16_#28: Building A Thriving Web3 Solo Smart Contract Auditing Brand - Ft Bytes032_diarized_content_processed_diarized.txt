00:00:00.330 - 00:00:14.974, Speaker A: Wealth, I think, is not money or status. Wealth is having an asset. Learn while you sleep. Money is how we transfer time and wealth. Yeah. I don't attempt to play status games. I think I can know how to build.
00:00:14.974 - 00:00:23.150, Speaker A: I'm trying to learn how to sell. And if I can do both, I think, you know, anybody that can do both is gonna be unstoppable.
00:00:24.610 - 00:00:30.390, Speaker B: You. Well, GM. GM everyone. And GMCU 32. It's great to have you on.
00:00:30.460 - 00:00:33.890, Speaker A: Likewise. Thank you for having me GM.
00:00:33.970 - 00:00:42.540, Speaker B: Of course. I quickly want to touch on what you do real quick just to start the conversation off, and then we can dive into more deeper stuff.
00:00:43.310 - 00:01:03.070, Speaker A: I'm 29. I will work as a director of engineering New York based startup. Disclaimer. I don't live in the US or in New York. So, yeah, I manage a few teams, and unfortunately, in my day to day job, I don't get time to code anymore.
00:01:04.230 - 00:01:05.298, Speaker B: Okay. Yeah.
00:01:05.464 - 00:01:21.186, Speaker A: That's why I'm kind of doing auditing six, 7 hours a day, like, before starting my actual job. So I wake up 330 to 10:00 a.m. From then on, I'm doing business as usual.
00:01:21.298 - 00:01:28.986, Speaker B: Okay, right. So you're basically doing auditing when you wake up at 03:00 a.m. To 10:00 a.m.. Sorry.
00:01:29.168 - 00:01:30.954, Speaker A: Yeah, something like that.
00:01:30.992 - 00:01:38.730, Speaker B: And that's like private audits. Right. And then after that, you're working like a day job, basically managing teams?
00:01:39.310 - 00:01:40.602, Speaker A: Yeah, that's correct.
00:01:40.736 - 00:01:49.070, Speaker B: Got you. What do these teams consist of? Is this like auditing as well? Like cybersecurity, I guess, protocols?
00:01:49.650 - 00:02:27.674, Speaker A: Completely unrelated. We're building a product. We're building a product that's helping document, I mean, helping generate nice documents, nicely looking documents that are used by businesses that sell a lot of services. Got you. You have plenty of sales departments in your company, and they just want to click some services, sell them quickly, prepare a quote for 5 minutes. So we build out software that actually does that.
00:02:27.792 - 00:02:44.850, Speaker B: Right, got you. Yeah. That's like a completely different feel to what you're doing. Yeah, I guess. How did you really start this path of becoming, like, a self made auditor and building, like, a clientele?
00:02:47.830 - 00:03:12.614, Speaker A: So I think I have to go back a little bit more. So I'm a heavy investor in crypto. Like, 95% of my portfolio is crypto. Since 2018, 2019. I've pretty much made all my wealth from that. So I was looking at compound or not nine or ten months ago. I didn't know about compounds.
00:03:12.614 - 00:03:44.500, Speaker A: I think it was more like eleven. So I was like, compound dropped a lot. Is it still a good project to invest in? And at the bottom of their website, I saw audits and I was like, what the heck? What's an audit? And I just clicked. Yeah, I mean, just researching. Should I bet my money on that? And then I didn't know anything about web3 security beforehand. No idea. Like, literally nothing.
00:03:44.500 - 00:04:20.240, Speaker A: I just didn't know. So that's what introduced me to audits. And then I got introduced into security, which opened completely new world for me. I mean, I was just overwhelmed. What's going on? And something that I didn't know about. And initially why I found audits interesting, because that's probably the most interesting part of the story. Obviously, I'm quite a young manager, at least especially what I work.
00:04:20.240 - 00:05:15.906, Speaker A: So in my previous job, I was an engineering manager where I had nobody to learn from. So I was super controlling. I was like, I want to review every single pull request that gets merged into Def, for example. So I reviewed enormous amount of pull requests and I was not just like LGTM and approved. So I was like, oh my God. I mean, people are getting paid for what I was doing. Purging myself for a whole year and reviewing code was, I think reviewing code is to some extent harder than actually building stuff because you have to assume, what the heck is that person thinking about? What the heck is going on here? So, yeah, that introduced me to security.
00:05:15.906 - 00:06:00.394, Speaker A: The rest about it is history to summarize. So I don't run too much. I just felt like exactly seven, eight years ago when I was starting, I would say like ten years ago when I was starting as a deaf with security was like, exactly like ten years ago. I was thinking about it all day long, thinking about it before I go to sleep. I was super excited where, as I said, I got into management quite early. So I guess I never gave up the urge to contribute on my own. And obviously doing the most nice stuff when you're in my position is not a possibility because I'm going to be the bottleneck.
00:06:00.394 - 00:06:20.050, Speaker A: So I started this as a geek where just to keep my itch at bay and just do some stuff on my own so I don't build my 150 toy project to the site. Yeah, that's how I got into auditing.
00:06:20.130 - 00:06:23.640, Speaker B: You said ten years ago. So you started cybersecurity ten years ago?
00:06:24.170 - 00:06:24.920, Speaker A: No.
00:06:26.010 - 00:06:27.686, Speaker B: Okay. The dev, right. Got you.
00:06:27.788 - 00:06:28.390, Speaker A: Yeah.
00:06:28.540 - 00:06:41.486, Speaker B: And then how long ago did you get into cybersecurity specifically? So you were investing and then you found compound, and then you're looking for the compound docs, basically. So like a couple months ago, is.
00:06:41.508 - 00:06:43.614, Speaker A: That what you said ten months ago?
00:06:43.652 - 00:07:00.738, Speaker B: Yeah, ten months, yeah. Okay, right. Interesting. And then did you do any sort of, what do you call them, like damn vulnerable DFI or any of those kind of like capture the flags or did you just go straight into, okay, how do we exploit this?
00:07:00.904 - 00:07:26.198, Speaker A: Yeah, I'm the type of guy that's going to over prepare for everything. Like I'm going to prepare a lot of resources. I have to learn that in and out. So I've kind of overstudied the first few months, but I think that's a good thing because I didn't know solidity. I've never touched solidity. Before that. I had to learn solidity.
00:07:26.198 - 00:08:09.642, Speaker A: So I did plenty of cdfs, I've read plenty of reports. So I tried one contest, like in my first month, pretty much I felt so overwhelmed because I was like, oh my God, I need to find this, that, this and that. And I did a very bad mistake where I was auditing after I finished my day to day work. It was a complete disaster. Yeah, got you. So around the third month, I changed my plan. I was like, okay, listen, I'm going to wake up, audit whatever results I get, whatever, and then study if I have time after that.
00:08:09.642 - 00:08:17.850, Speaker A: So that result into like, I'm studying what I need on the spot instead of building encyclopedia knowledge.
00:08:18.750 - 00:09:09.020, Speaker B: Yeah, I think that's incredibly important to touch on is whatever you want to do in life, whether it's like passion project or you're learning something, you've got to do what you want to be or be doing at the start of the day. Because when you wake up, that's when you're most fresh and that's kind of like shaping your future self into what you're kind of bringing yourself into the life of what you want to be like. And if you were to do your passion project, like, I guess what you were doing after work for a short period of time, you're going to be mentally drained and fatigued and you're going to have no sort of mental willpower to go full force for it. Is that kind of like the same reasoning you were thinking of?
00:09:09.390 - 00:09:11.306, Speaker A: Yeah, absolutely.
00:09:11.488 - 00:10:05.054, Speaker B: And so after all that stuff in the morning, all of your passion projects done, for example, you're doing 7 hours, then you can go to work and just do your little slave away or whatever you're doing. Yeah, but then you have your reserves and then when you get home, you can go to sleep and start it all over again. But I think that's definitely incredibly important, and I think a lot of people should start doing that. I've recently started doing that as well, so I started doing formal verification in the morning and then doing my other work later in the day. I'm still dedicating the same amount of hours to each thing, but it's just the structure of it, I think plays a massive impact. Right. And I think one thing a lot of people would find interesting is how did you really build your clientele up as a private auditor? Because I think it's quite difficult to do, actually.
00:10:05.252 - 00:10:12.718, Speaker A: It's interesting that you ask. I'm writing the article that's about to be published. Exactly about that.
00:10:12.804 - 00:10:13.838, Speaker B: All right. Okay.
00:10:14.004 - 00:10:21.774, Speaker A: I front ran. Yeah, no worries. I'm going to go through it as is. I have nothing to hide.
00:10:21.902 - 00:10:22.434, Speaker B: Okay.
00:10:22.552 - 00:11:10.146, Speaker A: So I think there are a few paths for an auditor, right. There is a traditional work for a forum path where you just get paid for 40 hours a week. Right. And then there's the kind of sole auditor path who works for Spearbid academy types where you get all the customers and you don't care about securing customers. Right. In that scenario, then there's the c four sharewalk types where you just participate in contests so you don't have to find customers too. And then the last two types, which are, you can do spearbit c four or whatever, but you find customers on your own too, which is hard.
00:11:10.146 - 00:11:19.382, Speaker A: And then the immunified types who just could probably not get a single cent for four months, but then get 1 million on the six months.
00:11:19.436 - 00:11:19.894, Speaker B: Yeah.
00:11:20.012 - 00:12:01.906, Speaker A: So I think securing customers and hitting a huge boundaries, I mean, obviously hitting a huge boundary is very hard, but I think securing customers is not easier either. I'm not getting it on the same plate, but, yeah. So I think the key is three points. Build a brand, generate content, build a portfolio, and then that's it. That's pretty much it. I decided I'm getting a very good paycheck, right. So I don't want to sell my time for more fixed pay.
00:12:02.008 - 00:12:02.418, Speaker B: Yeah.
00:12:02.504 - 00:12:13.474, Speaker A: Because you don't get rich by renting all your time. You must own equity, a piece of business or something on your own to gain financial freedom or hit a 1 billion bounty.
00:12:13.522 - 00:12:14.120, Speaker B: Right.
00:12:16.730 - 00:12:41.710, Speaker A: I decided I want to build a brand because that's where I'm going to build my own niche. Right. A lot of people are like, field is getting saturated, et cetera, et cetera, et cetera. But if you have your own niche, this can get saturated. So my brand will be myself for identity in the security space. That's how I felt about it. That's the reason people will approach me for work.
00:12:41.710 - 00:12:57.134, Speaker A: And then that identity is shaped by the story, the customers or my findings tell about my results. Right. Because when you audit a code base, you interpret it differently from the next person because you have different goals from your lens.
00:12:57.182 - 00:12:57.694, Speaker B: Yeah.
00:12:57.832 - 00:13:28.942, Speaker A: So to go to the portfolio under the one person business philosophy, you contribute in our space, you contribute by finding vulnerabilities. So you can after that show these to everybody. So there are several ways you can just aggregate all your findings in a GitHub repo, you can publish all your private audits. You can get first place on curtain or paradigm, CDF, whatever.
00:13:29.076 - 00:13:29.760, Speaker B: Yeah.
00:13:30.610 - 00:14:10.306, Speaker A: And then content. I think content is very underrated because I view content, but I like documenting my mind. I like to think about social media as public notetaking system, where I jot down on what I'm learning and how it applies to my work. My thoughts and opinions on skills and interests and the lessons I learned through my work. Teaching others is often gets swept under the rug because smart contract security requires specific knowledge that is often highly technical or creative. It cannot be outsourced. Yes, it can be automated to some extent.
00:14:10.306 - 00:14:41.474, Speaker A: I think you're doing exactly that. But I think it's hard to automate assumptions. Right. Because a lot of bugs are logical bugs. Vulnerabilities like rendering or like the latest asteria vulnerability with a proxy. I think that maybe could be catchable by a software after some point. But exploiting what the developer assumed at the time and what he actually built, I think that's hard to automate.
00:14:41.474 - 00:15:03.726, Speaker A: So building content, I mean generating content about that, it shows your expertise. That's why you're going to be approached. Because. Yeah, no, because that's obvious. So again, I try to limit myself so I don't rumble too much and still give you a sufficient answer.
00:15:03.908 - 00:15:16.062, Speaker B: Yeah, for sure. It's very comprehensive. And I want to touch on two things. So I'm just going to do the most recent. So the automation. I totally agree. It's incredibly hard to automate for business logic.
00:15:16.062 - 00:15:37.430, Speaker B: So every protocol has their own little niches and unique kind of implementations. And it's so hard to just generalize that and find every single. You basically have to write invariants. Basically. What an order. This job is like a living, I guess like the most sophisticated computer for invariant testing. Really.
00:15:37.430 - 00:16:06.878, Speaker B: It's comparing stuff with things you have in your mind. And a computer can't really do that until I guess AI gets incredibly sophisticated. But I think until then, we're good. And another thing I wanted to touch on was your brand. So I think as well, making content is extremely underrated. People think that if you teach someone this highly technical thing, it's going to diminish returns in your field. People aren't going to approach you as much because there's more competition.
00:16:06.878 - 00:17:07.174, Speaker B: But as a friend once said, jay trilly, you making that content gives you an edge in another kind of area. So you're losing in one space, but not detrimentally to your career, where you're going to lose a job basically, but you're gaining massively in another space, which is teaching people, and a lot of people love that. And basically your brand lives on for a very long time until you basically ruin your reputation. But I think even then, if your content is great, people are still going to share it, still going to read it. When people are entering the space or coming from a different field, they're going to show people and it's going to boost you from that. And then also with your brand of building a reputation from just doing contests and audits and showing that that's basically your resume, not some traditional resume of saying, oh, I have expertise in this. You're actually showing results and that's what people want.
00:17:07.174 - 00:17:35.278, Speaker B: Without results, who's going to hire you without proof of being able to do something? And touching on that, I would like to ask, looking back at it, what do you wish you did differently to accelerate this process of kind of becoming an auditor and building this reputation of someone that a company can go to to basically secure their content code?
00:17:35.364 - 00:18:44.814, Speaker A: Yeah, maybe the only thing that I would do different is get into contest earlier. That's pretty much it, if I have to be honest, because that was probably going to force me to realize I can do this. After work, I have to refine my schedule, but I don't count that as a time lost because I've learned a ton from it, which is not going to be applicable only to my security endeavors. It's going to be applicable to my life going forward. I pretty much learned how to manage stuff while having a full time job, which is crazy. Yeah, that's probably the only thing that I would change and something that I'd like to touch on that just to reply to what you noted about sharing knowledge, building content about how you actually solve problems forces you to apply what you learn.
00:18:44.952 - 00:18:45.302, Speaker B: Exactly.
00:18:45.356 - 00:19:19.342, Speaker A: Yeah. Right. You can iterate on that and get better with time. People will assume that's easy, but you're getting a huge edge in being able to learn stuff. Anything that you want, you can learn about meditation tomorrow if you want to. So that's huge. And a second thing that I think it's not obvious for a lot of people, but I don't know, at least personally, for me, I'd rather build an online brand presence, one man business instead of building a huge firm or.
00:19:19.342 - 00:19:34.162, Speaker A: I don't have aspirations for building a billion dollar company. But having control of your wife, with your audience and everything that you do is completely different thing compared to just.
00:19:34.216 - 00:19:46.680, Speaker B: Being good and you're prioritizing basically freedom over, I guess, materialistic money and building status, all that stuff. Is that kind of on the right track or.
00:19:51.610 - 00:20:00.478, Speaker A: Let me, let me, let me just think for a second. Yeah, I think the materialistic things are going to come with time.
00:20:00.564 - 00:20:01.200, Speaker B: Right.
00:20:01.890 - 00:20:34.562, Speaker A: I'd rather do what I love because I legitimately love what I'm doing. I live and breathe about it. So I think that's what's making me rich right now. I'm happy with everything that I do. I mean, no amount of money could, could buy me that. And it's different because people think about money and to wealth, they just place them on the same level. Like, wealth, I think, is not money or status.
00:20:34.562 - 00:21:01.130, Speaker A: Wealth is having an asset that earn while you sleep. Money is how we transfer, how we transfer time and wealth. Yeah. I just don't attempt to play status games. I think I can know how to build. I'm trying to learn how to sell. And if I can do both, I think anybody that can do both is going to be unstoppable.
00:21:01.130 - 00:21:03.102, Speaker A: That's pretty much it, for sure.
00:21:03.156 - 00:21:15.460, Speaker B: Yeah. I wonder if you ever did, like, did you ever approach people for audits or did they all really approach you? Did you ever cold message someone on Twitter and be like, yo, do you need an audit? What's happening?
00:21:16.470 - 00:21:17.558, Speaker A: No, never. Never.
00:21:17.724 - 00:21:23.138, Speaker B: Okay, sweet. The good old cold emailing tactic.
00:21:23.234 - 00:21:42.160, Speaker A: No, I think that it's not a sustainable approach. Maybe it's sustainable, I don't know, but I just don't feel like doing it. So. Yeah, pretty much anything I get is like, from my twitter. Yeah, sure.
00:21:43.090 - 00:22:08.166, Speaker B: I read that you actually forced yourself to learn common vulnerabilities, I guess, relating to that. Which ones have you seen most frequent? Most frequently. And if someone was trying to become an auditor? I feel like a lot of people focus on getting the critical bugs. I feel like that's not the right mindset. Right. What is your take on those?
00:22:08.268 - 00:22:42.414, Speaker A: Yeah, amazing question. I think the most subtle critical vulnerabilities, at least from what I read, because I don't have an immunified critical. Right. Some criticals and highs in my code Rena or my audits. A very interesting critical that I found was like, I just cannot disclose the project, but it was about. So they had a custom token, right? And the token had before token transfer hook. Right.
00:22:42.414 - 00:23:06.290, Speaker A: It's open zeppelin. You can just override it in the hook. There was a condition that the transfer cannot happen to the token address itself. So knowing that and that the protocol batched transactions, a lot of transactions, one transaction that is going to transfer to the token itself was going to brick all the other transactions.
00:23:06.370 - 00:23:07.000, Speaker B: Yeah.
00:23:08.890 - 00:23:46.062, Speaker A: Usually it's not a huge deal. If it was not for the batching, probably in the code arena it was going to be a QA, like a wall severity bug. But combined with everything else, that's what makes it critical. So I think I heard it in the office hours of Alex, the judge from, you know, the best criticals are, know, woes or mediums where you twist the knife, know, just bump everything around into. So, yeah, I hope that's efficient.
00:23:46.206 - 00:23:58.506, Speaker B: Yeah, yeah, of course. And another thing I wanted to ask was what is your kind of strategy? Do you use any tools to help you audit or is it completely manual? Like, I think his name was Chris, the number one order on c four.
00:23:58.608 - 00:24:01.686, Speaker A: I pretty much do everything manual.
00:24:01.878 - 00:24:04.170, Speaker B: Okay. Right. Just line by line.
00:24:04.320 - 00:24:09.418, Speaker A: I don't do line by line. I do like flows. Right.
00:24:09.504 - 00:24:09.946, Speaker B: Okay.
00:24:10.048 - 00:24:35.438, Speaker A: So for example, I just see for example, deposit money flow and it's going to generate some rewards. It's going to increase the quarter of the user, et cetera, et cetera. So I go through flows. That's better for me. I just can't do wine by wine. Just go through contract. I do wine by wine, but first I go through folks.
00:24:35.534 - 00:25:03.738, Speaker B: Yeah, that makes sense. So you're basically building each possible path that can be accessed, right? Yeah. Okay, cool. And then you go line by line and you're like, okay, wait, there's actually something here. I wonder, how do you approach, do you ever think about external contract use as well or is your scope mainly towards just the one repo and contract in its own little world without the external contracts living on the evm already?
00:25:03.824 - 00:25:24.100, Speaker A: Oh, I mean, if somebody is not considering the external contracts, it's crazy. Always. If the fool that I'm looking at has external cost, I just consider it as part of the whole flow. I just include it in my mental model.
00:25:26.710 - 00:26:09.922, Speaker B: For sure. Yeah, you basically bring in that repo that it's interacting with and you're like, okay, this is a part of it. Then I go through this and see if there's any special interactions. But there's also, well, touching on the developers not considering external contracts. A lot of the critical vulnerabilities and hacks that happen are from flash loans. And you'd think that people would account for that kind of external interaction where someone's borrowing a whole bunch of tokens that the developer is probably not even thinking about as a possibility, and then they're going through a pool or vault, something like that, and just doing like an exploit like that. So I don't know, man, people don't think of it.
00:26:09.922 - 00:26:27.720, Speaker B: There's a lot of external contracts out there, and I think Aave Flash loans is a big one, and oracle manipulation that people overlook a lot. How would you even prevent that for devs? They should be thinking of this, right? So maybe education needs to be better.
00:26:28.330 - 00:26:58.974, Speaker A: One of the best thoughts that I read about this is some from paradigm had an article about external codes, right? I think it was dangerous apprentice code, something like that. I'm just trying to remember through my mind, but people are treating, are assuming, okay, I don't want to generalize, but a lot of people relate external calls only with referencing.
00:26:59.102 - 00:27:00.322, Speaker B: Right? Yeah.
00:27:00.456 - 00:27:41.198, Speaker A: The thing is that any kind of external call, any kind of external call can do a lot of stuff that you're probably not even aware of. Let's say it's an external call to a protocol which has an external call to another protocol. You just don't know what's going to happen there. I think treating external calls should, I mean, rent trancy should be, I think that's the takeaway from his article. But he's like, yeah, we should treat any kind of external cost like as a possible.
00:27:41.364 - 00:27:44.930, Speaker B: Yeah, as an attack vector or surface.
00:27:45.830 - 00:27:47.074, Speaker A: Surface. Exactly.
00:27:47.272 - 00:28:04.262, Speaker B: Yeah, exactly. I wonder if you, let's say you had a magic bond, right, and you could bring any tool to existence, bring any tool to life that would help you, basically assist you in auditing. What do you think you would create or bring?
00:28:04.396 - 00:28:24.922, Speaker A: Okay, I have a very good answer. So I've spent a lot of time into diagramming, right? Because I think that's going to help. But there are two things I'm shit at drawing stuff. I can't understand it when it gets complicated.
00:28:25.066 - 00:28:25.614, Speaker B: Yeah.
00:28:25.732 - 00:28:50.870, Speaker A: So then I tried mermaid js, I tried excalidraw, I tried draw IO, tried everything. Then I set out for another software called structurizer, another domain specific language. Just send you the link in discord. And then I don't know. Do you know pyrometer from.
00:28:50.940 - 00:28:51.494, Speaker B: I do, yeah.
00:28:51.532 - 00:28:54.358, Speaker A: Naston from Brock. Yes.
00:28:54.444 - 00:28:54.742, Speaker B: Okay.
00:28:54.796 - 00:29:12.734, Speaker A: So pyrometer is great. I love mean, it's pain in the ass to use for a huge project. Well, try it for, let's say a huge contest. It's hard for me to read it, to visualize it.
00:29:12.852 - 00:29:13.598, Speaker B: Okay. Yeah.
00:29:13.684 - 00:29:47.282, Speaker A: So the two that I'd love if somebody built is basically pyrometer, but visualized as a graph, like direct, basically graph where the only available path are the bounds you set. Right. That's going to be a cure. And I think if somebody builds, he's going to assume you build it. You're going to net some very nice findings. I think states monitoring states is underestimated.
00:29:47.426 - 00:30:15.810, Speaker B: Sure. Yeah. State could be like something might not be vulnerable at a certain state, but let's say someone sends tokens to it, now it's vulnerable or beyond a certain threshold. But basically what you're saying is something that can create diagrams, print them out so it's readable and between some certain bounds. So give us an example of that. Like a certain pathway or flow.
00:30:16.390 - 00:30:51.550, Speaker A: Yeah. For a specific, let's just use the example from pyromeder. I'm going to send you the link in this card. Okay. It looks like this, right. If that is visualized as a graph, because right now it's easy to comprehend it, but when it's a way complicated, way more complicated function that just gets kind of hard to deal with, at least for me, I mean, I just get overwhelmed. So if that's a graph.
00:30:51.970 - 00:31:35.994, Speaker B: Yeah. Just to give an audio representation of this, it's basically. So you have a function and you have some conditionals, some require statements, and basically there's an upper and lower bound. So let's say you have variable x, which is an input, and then the required statement is x must be below, let's say like ten. So then you have all these possibilities from the maximum number all the way down to. Okay, it can be basically, that's basically that if it's below ten. So that's what parameter shows you.
00:31:35.994 - 00:32:01.170, Speaker B: It's these boundranges for variables, kind of like an intermediate representation kind of thing. And to continue on, this is kind of hard to read because when you have a bunch of these on every single line, it kind of overflows the page and it's super hard to read is kind of what you're getting at. And your alternative would be.
00:32:01.240 - 00:32:05.090, Speaker A: Well, the alternative would be a graph.
00:32:08.570 - 00:32:10.050, Speaker B: Okay, so like a dag.
00:32:10.130 - 00:32:19.000, Speaker A: Exactly. A graph. Yeah, exactly like a dag. Exactly like that. Okay, so, so the graph is like.
00:32:20.730 - 00:32:35.802, Speaker B: Yeah, instead of lines. Yeah, instead of like actual code lines, you'll be able to see like a and b equals c and it's kind of like a node for a, a node for b, a node for c, and then lines going up to c. Yeah, exactly. Sweet.
00:32:35.866 - 00:32:36.142, Speaker A: Exactly.
00:32:36.196 - 00:32:51.570, Speaker B: So if someone does that, there you go, there's some free ip. Yeah, sweet. And have you ever wondered of getting into something like automated analysis or are you just want to stick with manual?
00:32:54.310 - 00:33:03.910, Speaker A: Probably, yeah, probably I would get, but I'm trying to build my skills one step at a time.
00:33:04.060 - 00:33:07.250, Speaker B: Right, so you're trying to master what you're doing now.
00:33:07.420 - 00:33:08.140, Speaker A: Yeah.
00:33:08.910 - 00:33:30.830, Speaker B: Cool. And let's say someone's trying to start out. What should they really be targeting? Let's say they go into a c four contest or something like that and they're trying to find a bug, but all they're focusing on is like, okay, how do I exploit this? Should they be focusing on that or should they be going more for the informationals or lows?
00:33:31.250 - 00:34:18.186, Speaker A: I've never went for informationals or woes, so take my opinion with a pinch of salt. But yeah, I think especially it depends on your previous experience. Right. For example, as far as I know, trust had plenty of cybersecurity experience with iOS. That's completely different if you are with that kind of adversarial mindset and then you are somebody who's just starting overall with programming. So I think it's wrong to start and expect a lot of stuff because at least for me that's going to be overwhelming. So yeah, let's just generalize.
00:34:18.186 - 00:34:50.390, Speaker A: All the things that I'm going to say they apply to me, may not apply to somebody else, but yeah, that's how I do stuff. So just keep it chill. Limit yourself to a limited amount of, let's say, goals or tasks a day so you don't get overwhelmed. Find what works for you. Like maybe you're going to be better with reading the docs first or after. I think the biggest alpha is like in keeping out variables that can be tweaked from different places or different contracts.
00:34:50.470 - 00:34:53.500, Speaker B: Okay, so like user input basically.
00:34:54.110 - 00:35:28.626, Speaker A: Yeah. No, yeah, it's user input, but let's say you have a storage variable. I had one contract where you could pass the storage variable and then it could be manipulated into, let's say, two different libraries. Like libraries are not contracts, they're not state. Right. But it's manipulated in different places. So you just have to figure out where and under what conditions it can be manipulated.
00:35:28.626 - 00:35:38.678, Speaker A: Who's going to be able to manipulate, let's say for example, if it's an ERC 20, which functions can manipulate the total supply like burn and mint.
00:35:38.774 - 00:35:39.420, Speaker B: Right.
00:35:39.790 - 00:35:43.290, Speaker A: Under what conditions that happens, sure.
00:35:43.360 - 00:36:15.890, Speaker B: Yeah. I guess on top of that, with those set of rules you just placed out, you could really just build a tool to sort of follow these rules. Right. And I guess a lot of people do that with the bot races that were recently introduced to c four. I don't know if they're on other contest platforms, but I guess what are your thoughts on these bot races and what are they kind of missing that's not taking over the main pool?
00:36:16.870 - 00:36:32.886, Speaker A: So as far as I know, some of the bots are built with Reg X and have some conversations about Reg X. So it seems like Reg can get you pretty far gone. So maybe I'm not saying it well, but regular expressions.
00:36:32.998 - 00:36:33.882, Speaker B: Yeah, okay.
00:36:33.936 - 00:37:04.340, Speaker A: Right. Apologize. I've always like, and then other type of bots are built with like asts, right. So I have a lot of experience with asts because I've built plenty of tools for JavaScript. I'm crazy for anything Javascript. So I've built a lot of bubble tools. So bowl bots just have pros and cons.
00:37:04.340 - 00:37:15.110, Speaker A: I don't think that any of them can beat a properly fed and curated lom. Right.
00:37:15.260 - 00:37:15.960, Speaker B: Okay.
00:37:16.410 - 00:37:47.058, Speaker A: So if somebody builds the LLM, I think that's when the show is when it's going to come. Until then we're just going to have. Because current bots, again, I'm just guessing what they do. It's like kind of pattern matching. Look for some stuff here and there, compare, see if it's like the same. At least that's what I'm guessing. So it's built on the assumptions of the builder of the bot, right.
00:37:47.058 - 00:37:56.014, Speaker A: While if you train a data model, it's going to be built on the assumptions of everybody. So that's the cure.
00:37:56.142 - 00:38:44.210, Speaker B: That's the cure for everything. Yeah, I guess in order to build a good bot you've got to be a good auditor to begin with. Right? Like you've got to know kind of what causes an exploit and the common patterns to find those things. And if you're not like you can't audit normally, then automating it would be quite difficult. But it would be interesting to talk to one of these bot races in the future which I have reached out hopefully will happen. But yeah, I guess what is kind of like on your radar to do next. You're obviously doing private audits now, but do you think you'll continue that for the rest of your life or what are you aiming to do or learn in the next couple months? Years?
00:38:44.360 - 00:39:40.646, Speaker A: Yeah, I want to do more contests. So while private audits are very lucrative in terms of money, I'm probably going to refuse a few deals here and there. And I've already done that several times because I want to just get a few first places in contest just because that's, for me the best measure. Yeah, I mean, the best measure. I'm doing well, right? Yeah. I just want to know for myself that I can do so well that I can just top a few contests next. I've never audited in a team, so I'm probably going to invite some folks to, I'm going to split my private audit fee with them.
00:39:40.646 - 00:40:10.240, Speaker A: Right. My quote. So I just get to audit with somebody, so I just do it in a team. I literally don't care if we're going to split like five k each or three k or 4k each. I'd rather do it in a team and just see how it goes because that's least for now. The only way for me to do, you know, I don't have mean. I'm enjoying myself.
00:40:10.240 - 00:40:28.678, Speaker A: I legitimately enjoy what I do. I'm looking forward to etHCC in Paris in July to meet a lot of people. So, yeah, that's it. No points. I mean, just do what I feel curious about each day. That's, I think, the most interesting thing about that job.
00:40:28.844 - 00:40:46.170, Speaker B: Yeah, sure. Just basically find a passion and go for it. I guess even finding the passion is the hard thing. But once you do, you basically just got to just go hard at it. Right. And then that will take you down a rabbit hole where you might find another passion. I mean, that's what happened for me.
00:40:46.170 - 00:41:40.810, Speaker B: I went down, I think, solidity, which was amazing at the time, and then I got kind of bored. And then I tried, got into protocol development and then I did an amm, then nfts, and then after that I was like, okay, I'm really bored at protocols. And then I just did some freelancing, met some people and got into Mev and I was like, wow, a whole new world. And that's what kind of got me into backend. And then after that I learnt basically huff, which is like reading and writing bytecode. And then through that is how I discovered formal verification. So it's really just like a rabbit hole of interests and pursuing them to I guess as much mastery as you can and then on that path you meet people and learn new things that could basically direct you in a new pathway.
00:41:40.810 - 00:42:11.538, Speaker B: And I think that's kind of like really life as well, like meeting people, discovering what they do and then getting interested. Yeah, I feel like that's a key thing. And I think with auditing it's even more significant because you're reviewing all these code bases. So you must have a really good understanding of a variety of different protocols and how they function. Kind of like a research. Oh yeah, you're basically a researcher and an auditor.
00:42:11.714 - 00:42:57.426, Speaker A: Yeah, combination, the best combination for a person who's, I mean, obviously that's not a job for a person if he's like, I want to warn, react and set up for that two or three years. I actually appreciate that you brought up trying different stuff, doing different stuff. I for sure don't see myself like doing audits my whole life. I'm just not like that. Okay. I'm probably going to find something more interesting or something just that's going to spew over from audit, something. Maybe I could get into building a protocol, I don't know, but I really align with what I said.
00:42:57.426 - 00:43:41.982, Speaker A: Doing one thing opens the door for many other things and you can get interested in each one of them. And what makes you special and different is bang that you've been through all of these. I'm just not a person who's going to specialize in wanting for his whole life. Just for a bit of context. When I started I did like a mini startup where I'm here in, where I live in, I was building ecommerce stores, I was literally walking around and offering random businesses. Do you want me to be a store? And I got into absolutely like that. Yeah, 18, I was 18.
00:43:41.982 - 00:44:18.302, Speaker A: So then I got into back end, I was working with c sharp, Java, whatever. Then the Javascript craze came in, I switched completely. I was just doing mostly front end. And by front end I don't mean like CSS stuff, I was working on a lot of frameworks. I actually have contributions to react and xjs too. I just do what I feel passionate about. And don't take me wrong, I feel passionate about management too.
00:44:18.302 - 00:44:37.842, Speaker A: I absolutely love it. Like growing people, seeing how they progress with your help, that's awesome. But all the politics, all the bureaucracy and fakeness, the higher echelons of management is not my taste.
00:44:37.986 - 00:44:53.754, Speaker B: Yeah, not desirable. I guess that's a reason why you don't want to start an auditing firm as well. Yeah. Got you. That makes sense. Yeah. I think this has been a wonderful talk.
00:44:53.754 - 00:45:03.440, Speaker B: It's been amazing to have you on and talk about all these things. Hopefully you've had the same kind of experience. Yeah. It's been lovely having you on, man.
00:45:04.930 - 00:45:21.040, Speaker A: Absolutely amazing experience for me, too. Thank you for having me. I figured from Twitter you're building something, so good luck with that. I can't wait to see it.
00:45:21.490 - 00:45:33.400, Speaker B: Yeah, we'll see in the next few months, hopefully, but definitely, like, a massive grind, but, yeah. Here we go. This has been pretty good interview and we'll see you on the next one, I guess.
00:45:34.410 - 00:45:35.970, Speaker A: See you the next time. Goodbye.
