00:00:00.170 - 00:00:20.878, Speaker A: Go through their smart contracts, dive through their entire tech stack, and understand how it works. You will learn so much, both as a developer and as a searcher, and you'll find tons of opportunities that way. If you can understand their protocol before anyone else can, and in a way that no one else can, and if you can lock down that strategy first, you have a moat in information and data no one else has.
00:00:21.044 - 00:00:55.200, Speaker B: Scraping bits is brought to you by the following sponsors. Fastlane Labs trustless mev mev protocol. Maximize your e staking value with me v e exclusively on Mev IO and composable execute any intent on any chain. Coming soon to Mantis app that is mantisap GM Gm everyone. My name is Gashi, the host of scraping bits, and today I'm with Joshua. How's it going, Varan? Doing great. We love to hear that.
00:00:55.200 - 00:01:00.718, Speaker B: Just for some context, for the people that don't know who you are, what do you do and who are you?
00:01:00.804 - 00:01:11.198, Speaker A: Name's Joshua. I'm the CEO of Aori. I'm really, really interested in Mev. My day job is building Aori, a high frequency order book that's off chain that settles directly onto Ethereum.
00:01:11.294 - 00:01:20.262, Speaker B: And how did you get into all of this prior? Did you start in web3? Were you in web two? Maybe even a completely different career, not even software. What was your progression like into this point?
00:01:20.316 - 00:02:01.618, Speaker A: Yeah, I did my degree in math in university, and then I got into crypto pretty much immediately after graduating. I definitely didn't want to go work in tradfi or anything like that, so I started playing around and chatting with some friends that I knew were in crypto. We kind of got really deep into market making on centralized exchanges and spinning up our own shop for it, and spent about two and a half years leading business development and kind of the on chain trading side of a firm called system nine, and then started working in d five not long after. Started a protocol called Dam last year where I kind of got to flex my smart contract. After that, I started working on Aori. Kind of got into searching along the way. Last year, thought that was really, really cool.
00:02:01.618 - 00:02:14.550, Speaker A: Started playing around with a lot of searcher bots and whatnot and, yeah, kind of noticed some interesting problems in searching that I felt like I could kind of have an impact on or kind of improve. I'm very opinionated about on chain trading, so how I got to where I am.
00:02:14.620 - 00:02:23.578, Speaker B: Nice. Yeah. The searching field is so difficult to break into. Right. You can't really find information about it anywhere. And if you go into flashbots. It's like a flood of random information.
00:02:23.578 - 00:02:47.426, Speaker B: You got to nitpick. I know a lot of people just go through the whole history of it, but there's no podcasts or any real valuable information on this kind of stuff. You just got to go into the nitty gritty and try and figure it out yourself and catch up with everyone, or just find someone that also does it and get mentored from that. But how did you really jump into the milk game and not waste your time and not make any money?
00:02:47.608 - 00:03:39.822, Speaker A: That's definitely true. I feel like I got 90 plus percent of the information I have learned about searching came from in person conferences and talking to people who are actively searching, and talking to people at the companies that are providing infra for searching and things like that, like talking to block builders, talking to node runners. That was really how I learned pretty much everything I know about on chain searching. I feel like my kind of take on where searching is today is a little different than a lot of people's. So I feel like searching today has. If you look at a lot of the on chain trading activity, there's really only two main strategies. You see run on spot trading venues that are like majority of Mev activity, which is effectively running Dexxr bots, which is a very, very competitive game, and then also running things like sandwich attack bots and whatnot.
00:03:39.822 - 00:04:04.746, Speaker A: Those are all, like, super competitive, and there's not a ton of edge left. Right. But where I see quite a bit of edge is kind of on niche protocols, derivatives protocols, especially. My personal take is really most of the actual opportunity can only come currently from sextarb in some capacity, whether it's derivatives or spot. That's where I kind of see most of the searching currently looking or most of the opportunity that currently is available.
00:04:04.928 - 00:04:09.770, Speaker B: Interesting. And so you're really focusing on the Sextex arbitrage at the moment.
00:04:09.920 - 00:04:21.150, Speaker A: Yeah. Not to show Aori, but the whole problem we're trying to solve is right now, the only people who actually can do. Let's take a moment and understand what the Sextex arb pipeline is first. Right?
00:04:21.220 - 00:04:21.502, Speaker B: Yeah.
00:04:21.556 - 00:05:03.342, Speaker A: So really there's only like two firms that are capable of doing actual size doing sextex arb. It's really only like jump and winter mute. There's a couple more, but they're not doing nearly the volume or the size. And the reason for that is it's so capital and human labor intensive. So to kind of give an example, you have to have an entire centralized exchange team who's quoting prices from every deck or every centralized exchange. You have to have a block building team who's staying incredibly up to date and constantly lowering your latency on block building bids. And you also have to have a team that's managing MeV integrations and Dex integrations, and constantly price monitoring all of your venues that you're trading on and across all the pairs that you're trading on.
00:05:03.342 - 00:05:33.270, Speaker A: So it is like an unbelievably intensive capital as well as human labor project. You have to have dozens of employees full time on this, so it's really, really hard to do. So my whole goal is to open that up to everybody, open that searcher space up to everybody through basically allowing centralized exchange price quoters or liquidity providers who maybe don't have MEV teams to give them the ability to price quote on chain or at least provide price quotes on. Yeah.
00:05:33.420 - 00:05:39.938, Speaker B: So why wouldn't you kind of make this private for yourself? And why open it for other searches?
00:05:40.034 - 00:06:11.474, Speaker A: So the main reason is the market is much wider if you can open up a platform for this than it is to just hog it and try to milk whatever PNL you can, and then inevitably someone is going to build a platform or open it up somehow where it's much easier for searchers to do this, and then your edge is completely gone. I would much rather be in the business of building an easy to use application layer where I can connect the two rather than just try to milk some PNL for six months before someone inevitably builds this. So, yeah, that's my take on it, yeah.
00:06:11.512 - 00:06:17.394, Speaker B: So eventually someone does build these ideas, but you're trading after the P L and one thing for another, right?
00:06:17.432 - 00:06:23.526, Speaker A: Yeah, no doubt. I mean, if you just look at it, the market's already moving towards what we're building. Look at like uniswap X or like. Right?
00:06:23.628 - 00:06:24.646, Speaker B: Yeah, yeah, exactly.
00:06:24.748 - 00:07:04.306, Speaker A: I'm a big believer that amms are going to die and much faster than people think. And the transition will be to move to a plethora of off chain order books or off chain order flow venues wherein traders are able to choose a venue that they can effectively match orders on and then settle those orders directly on a data availability layer like Ethereum or like a celestia or something like that, where the trades are being done off chain through signatures and things like that, and they're being settled via some schema, like an order flow auction, like Uniswap X via solvers or intents with cowswap swap or like just a pure order with us.
00:07:04.408 - 00:07:31.782, Speaker B: Yeah, and that's really just for anything swapping related. But obviously you can still do long tail, right? With, I guess someone makes a niche protocol, let's say a Dow use their token and you do some weird thing with it, and then you eventually swap it on this order book, and then you use that new token back into the Dow, for example, and then you make profit. That will always exist. But the traditional big three will definitely see a new change. Paradigm shift. It does become just order books.
00:07:31.846 - 00:08:25.738, Speaker A: I don't think it'll all become order books. Right. I'm a little nuanced on this. I think amms or Amm type platforms where you have effectively, and I mean Amm in the literal sense, automated market makers, whether it takes the form of an XYK curve or a bot in an order book, there will be some kind of bootstrapping liquidity platform where you can basically guarantee price quotes to low liquidity markets. I very much see like early stage tokens always having an AMM or like a uniswap. But for anything that starts to actually generate real volume and as it becomes like a mid cap and starts to really trade on, centralized exchanges, inevitably must move off of Amms or else all of the AMM lps are going to just get murdered. I kind of look at this also, like, this is kind of the biggest travesty in crypto right now is people not talking about how bad and how predatory amms are for lps.
00:08:25.738 - 00:08:27.966, Speaker A: That's also something I'm really disgusted by.
00:08:28.068 - 00:08:32.590, Speaker B: In what sense, though? Because they do make fees, though, but obviously they're not too high.
00:08:32.660 - 00:08:35.178, Speaker A: Yeah, but have you been following panoptic recently?
00:08:35.274 - 00:08:35.982, Speaker B: No, I haven't.
00:08:36.046 - 00:09:00.930, Speaker A: So panoptic is trying to basically allow you to short your LP position and then collect the fees. Right. But there's inherently this idea that your fees are somehow worth more than what it would be. Whatever you LP, you're technically short a call and short a put. It's not like a perfect analogy. It's like a convex call input. But when you stake an LP token or when you stake assets to an LP pool, you are both shorter call and shorter put effectively.
00:09:00.930 - 00:09:32.126, Speaker A: So there's this premise that the fees that you're being paid are equivalent to the premium that you would get paid in an options exchange if you sold the call and sold the put. But if you actually map out the uniswap fees over time and then compare them to any options exchange in crypto, you're just getting murdered. You're not even getting paid, like 25% as much as the options are getting written for. So instead of lping, just go sell options, you'll make way more money. So it's kind of a scam getting rogue LP.
00:09:32.318 - 00:10:09.118, Speaker B: Back in the day of the yield farming craze was definitely a thing where you'd make insane amounts of money. But now that that kind of craze is off, I am also very reluctant to LP provide. I just don't see the value of it. You can just trade if you know something is going to go up, hence, like LP, then you may as well just hold the token. Right? You probably make more by doing that, because first of all, you have impermanent loss when you're lping, and the fees are pretty negligible unless you capture the entire pool, for example, with a JIT strategy, just in time liquidity thing.
00:10:09.204 - 00:10:14.062, Speaker A: Yeah, exactly. Jit is the only way that you can actually make lping make any sense.
00:10:14.196 - 00:10:24.210, Speaker B: Yeah, and if you're just a normal user and you've just got around ten k in it, you best believe someone's doing a Jit against you and you're actually making nothing. So you're kind of just liquidity at that point.
00:10:24.360 - 00:11:09.838, Speaker A: Yeah, it's so funny if you consider what just in time liquidity actually means for uniswap. You realize that Uniswap has basically do a bad on chain clop. The way. I mean, that is like some people are lping directly into Uniswap and whatnot. But the actual valuable order flow kind of comes through the form of JiT liquidity because they're providing it at the absolute best prices possible. And so this is the exact reason that on chain central limit order books have never taken off, right. When you have an on chain central limit order book where you have to pay gas to make and pay gas to cancel orders, it really makes no sense to do that because you're effectively punishing your best users, you're punishing your lps, right? Like, you're making them pay gas to trade, which is ridiculous.
00:11:09.838 - 00:11:44.502, Speaker A: To place orders that are helping you, you're charging them, in hindsight is so obvious. But that's exactly what a JIt liquidity provider is doing. A JIT liquidity provider is just like an automated strategy where they see a bunch of order flow come in and they go, you know what? Okay, I can take this trade, and this trade, and this trade, and the fees I get will be worth it based on the price movement, and therefore I will go ahead and do that. It's like if an on chain clob was super predatory to its users and was know you just have to submit a bunch of orders and pray we give you a really good price. That's it. Alrighty, bye bye. It's really this super weird dynamic.
00:11:44.502 - 00:11:57.082, Speaker A: If you look at how we got to where we are today, you're like, oh, I understand why Aracus and git providers exist. But then you take a moment to actually analyze it, you're like, wait a second, we just built the most complicated, completely unnecessary bullshit.
00:11:57.146 - 00:12:28.554, Speaker B: Yeah, yeah, it's a whole mess. It's just not really worth in hindsight. And I feel bad for the LP fighters because they might not even be knowledgeable of mev and these strategies or what's actually going on. Sure you have the ranges, but first of all, Jit, again, your range doesn't mean shit. If someone's just going to put like 100 mil at a certain point, take all the fees and just dip right after that transaction. If you think of it like that and know the whole entire story, then you could realize how flawed it actually is. And so it kind of makes sense for the order book, right?
00:12:28.592 - 00:13:32.762, Speaker A: Yeah, it's one of those things where it's like the fact that the user doesn't even know what filled at is like one of the most insane. When you tell someone that in tradfi and they hear, they're like, yeah, you just submit an order into a blind curve and you have no idea if you're going to get a better price or a worse price. You're just praying that you get not just sandwich murdered. It's just like, what? Who thought this was a good idea? And you realize they did have good intentions at the beginning, right? Like, the amm creators did actually intend this to be a good product. When you look at Ethereum in 2017, 2018, you can kind of understand why amms were considered like a good idea. They saved a lot of gas versus on chain order books like Ether Delta and things like that, but they've morphed into this tumorous thing that is consistently bleeding p l and bleeding losses of its users. The creators of it are like, I'm not going to say they're now lying about it, but it's a very gray area, very similar to that where they're telling people, oh, man, did you know that you can stake on uni, you can stake on an Amm.
00:13:32.762 - 00:13:50.230, Speaker A: If all of the trades are arbitrageous versus centralized exchanges, you make money, you will always make money. And I'm just like, first off, that's insane. That's wrong. Second off, it's like, why are you posting this like it's academic research? I don't get it. So, yeah, I don't like that at all.
00:13:50.380 - 00:14:04.854, Speaker B: I totally agree. And the obvious move for just a general consensus or using an AMM would definitely be just an order book. Right. But I wonder how people actually make money via an order book. I guess there is no kind of liquidity provision.
00:14:04.982 - 00:14:22.206, Speaker A: Well, there really is. It just takes the form. I mean, people make money in order books all the time. It's just you have to have an actual competent strategy. Your strategy can't be just like, I will take every trade that comes in like an amm. An amm is an order book. This is one of those things I have to redfill people on.
00:14:22.206 - 00:14:55.206, Speaker A: It's like an AMM is an order book. It's just an order book where the market maker is brain dead. The market maker is telling you, like, I will fill every single trade no matter what. According to this algorithm, I will guarantee you liquidity, which there's a reason nobody in tradfi, no market maker ever would do that or ever guarantee liquidity like that. You just have to be competent with how you run your strategies. Right? Like, market makers in tradfi make tons of money. Everybody has seen Citadel and DRW and all these guys like Jane street and whatnot.
00:14:55.206 - 00:15:33.766, Speaker A: I think what will happen and what we're kind of seeing a little bit on the aori side is what's going to happen is instead of having a single automated market maker strategy, like an XYK curve or like a range bound liquidity kind of thing, what will happen is there will be effectively these strategized vaults similar to that of like a yearn or like an arrakis that are running automated strategies that are delta neutral, that just are purely arbitrage based market makers that run hedged, delta neutral market making strategies that people can lp into, so that way you can actually have a customizable strategy that you're backing basically by lping. So that's kind of where I see it going in the future.
00:15:33.948 - 00:15:40.530, Speaker B: Got you. Yeah. How are you really setting up Aori for success with this kind of order book transition?
00:15:40.610 - 00:16:25.106, Speaker A: I really hope there's a lot of new order books that come out. I actually think Uniswap X is like a step in the right direction. The protocols I really love and want to shout out because I don't want to just be negative one inch fusion, Zero X, the new Uniswap X and cowswap as well those are to me like the real cream of the crop moving in the right direction kind of protocols where you want to have everything but the of the trades occur off chain. And I think a form of decentralization is competition. This is kind of the whole thing about ethereum nodes. You want to have as much competition in the nodes as possible and in the clients run. And so I see the same thing even working in favor of off chain order books, right, where the more off chain order books running, the better, then you can basically break up your trades across multiple order books.
00:16:25.106 - 00:17:12.790, Speaker A: And if any one order book is ever compromised, your risk is substantially. So. For us, what Aori is doing is we kind of take an approach different from the previous mentioned protocols, kind of minus zero x. We're order book maxis. You can kind of think of us as like an inverse cow swap. So the way cowswap works pragmatically is you create a maker order and your maker order is effectively auctioned off or bid on every 30 seconds by all of the solvers, and then the solvers all decide, hey, do I want to take your order or I do not want to take your order? So there's a body of takers who then can kind of pick your order and break it up across as many dexes as possible. On the other side, the way we work is we have an order book full of makers where the makers are all competing to provide the best price quote possible.
00:17:12.790 - 00:17:36.378, Speaker A: And then you, the user, can come in and say, I want to fill that order. So it's much more competitive in the sense that the market makers and all of the searchers in our book are having to compete to provide you the best price quote possible, rather than you submitting an order and waiting for someone to bid on it, like a Uniswap x or like a cowswap. It's just a difference in philosophy on how you want order flow to be routed.
00:17:36.554 - 00:17:41.038, Speaker B: Got you. Yeah. Obviously you can use your own search on it as, right?
00:17:41.124 - 00:18:51.014, Speaker A: Oh, yeah, yeah. So kind of going back to what I was talking about earlier, about how hard it is to run sext arbitrage, like centralized liquidity providers, and searchers who have access to really amazing price quoting to orders in our book, and searchers who have access. Searchers who would be like solvers on cowswap, for example, who are looking for routes across all defi, can fill our orders and then route them across defi. So it's kind of a way for searchers to get access to real time HFT level speeds of price quoting of Coinbase, all these exchanges and be able to lock in those price quotes for three blocks on market maker can. The flow of a standard order would be like a market maker who is very active on Coinbase. He quotes you Coinbase's best bid plus like three basis points or whatever, so he can make a spread and then you as a searcher can instantly fill that order and use a flash loan to fill it and close that arbitrage against Uniswap. Swap all the dexes that you want.
00:18:51.014 - 00:19:17.040, Speaker A: So it's a really cool way to port centralized exchange prices directly on chain without needing to run your own builder or your own centralized market making strategy. So yeah, it's a cool way to break up the centralized exchange stack. There are the sextex arb stack into a few pieces where each participant can make a portion of that arbitrage PNL themselves.
00:19:17.970 - 00:19:32.514, Speaker B: That makes sense. Yeah. Interesting. Yeah. This whole kind of transition seems inevitable, but I think there'll always be v two. Uniswap b two was always going to be around. It's just so simple.
00:19:32.514 - 00:19:38.738, Speaker B: And when v three came out and now v four, people aren't actually going to use it as much as v two.
00:19:38.824 - 00:19:43.494, Speaker A: I think I'm actually very bearish on v four. I think v four is like a bad idea.
00:19:43.692 - 00:19:44.518, Speaker B: Why is that?
00:19:44.604 - 00:20:08.810, Speaker A: Well, I mean, it's just a worse v three, right. It's an order of magnitude more complicated than v three. It still has all the same flaws as v three. They didn't fix anything from v three. They just took the v three pools and then added hooks on top of them. And I think hooks are actually going to end up leading to quite a bit more exploitation. I think this is potentially like a huge risk.
00:20:08.810 - 00:20:33.938, Speaker A: Of course, the only pools that on univ four that are going to be used are the ones verified by uniswap. Right. Real. So it's not really going to lead to much improvement in my opinion. I think it's just going to be v three, but people are going to be much more confused about where to lp to. It'll definitely beat v three in TVL, but yeah, I agree. I think two is the only protocol that actually has staying power long term.
00:20:34.114 - 00:20:54.854, Speaker B: Yeah, I agree. I think it's just so simple and it just seems like the general consensus is fork v two, create like farms, whatever, bonding. Everybody references v two. Nobody just copies v three. Right. It's just first of all very complex to really understand. And then you have to deal with ticks, which is just always to deal with math.
00:20:54.854 - 00:21:16.934, Speaker B: And I guess how many people really know math at that level, right? It's not very common, right? Even for me. I'm not good at math. I'm horrible. So I had to read the uniswap v three book to just understand it. And even then I still don't understand it. And if you're talking about a massive crowd, if they don't understand something, they're not going to use it. Sure you can make a UI really good, but I don't know.
00:21:16.934 - 00:21:50.158, Speaker B: It comes to a point where mass adoption comes with simplicity and quick understanding. Especially in an age of attention grabbers and very short attention spans. It just doesn't really make sense, especially the time opportunity cost. Tell me more about your searching journey. How do you find an opportunity to capitalize on? Because obviously there's dozens out there, right? It's really just looking for a needle in an egg stack. But I think you can increase the chances of finding an opportunity if you know where to look in the haystack initially, yeah.
00:21:50.324 - 00:22:45.022, Speaker A: So as I mentioned, kind of the places to definitely get started researching, but maybe not to directly employ a strategy because they're pretty heavily competed on are like Dexterb or sandwich tax and things like that, especially on ETh main net or any of the top LT. That's where it kind of gets a little too competitive. Like you have to have a real latency or a real edge on gas calculations and things like that. Where I definitely think there's a lot of edge is basically me and a couple of my friends. We have this weekly call where we just sit down and all talk for 2 hours about what DeFi protocols we found this week and researched. And it's specifically talking about like searching. The best way you can possibly get into searching or get into looking for really unique opportunities is to take a look at a new protocol, read through their docs, go through their smart contracts, and take several hours minimum to dive through their entire tech stack and understand how it works from the bottom up.
00:22:45.022 - 00:23:16.202, Speaker A: Try to identify any holes. Almost like treat it like you're writing a book report on like a book you're reading in college or something. You go all in on understanding every single piece of it. I was very curious. One I recently did this on was like GMXV one like a couple of months ago. It was super interesting seeing, trying to understand and explain to myself every single design choice they made around the actual smart contract layer that I cannot recommend doing enough. You will learn so much both as a developer and as gay searcher and you'll find tons of opportunities that way.
00:23:16.202 - 00:23:48.562, Speaker A: That's really the best way to do it, is to look for protocols that are growing or are new or you think have a lot of potential. And if you can understand their protocol before anyone else can, and in a way that no one else can, you have a huge edge. And if you can lock down that strategy first, you kind of have a bit of a moat in information and data that no one else has, and you'll kind of understand what works and what doesn't work with that protocol. So it really is dependent too entirely on protocol. But that's by far the best. Anytime I found a profitable searching strategy, that's how I've done it.
00:23:48.616 - 00:24:08.250, Speaker B: Yeah, that makes sense. If you understand a protocol for anyone else, it's just a given that if you can implement it also comes to the point of can you implement quickly? Are you fast enough? Can you capitalize on this opportunity? Having a solid understanding of what you're reading and being able to read fast is a key component. Basically what you're saying and also thinking about.
00:24:08.320 - 00:24:19.914, Speaker A: I mean, reading fast if it's like a brand new update or something, but on a popular protocol. But I found a lot of strategies that have been around for months that no one's noticed. There's a lot of low hanging fruit.
00:24:20.042 - 00:24:56.618, Speaker B: Yeah, I think reading files and also being able to creatively think as well, how can this connect with something else? Keeping in mind everything else that you've done is kind of the core thing. It goes with auditing as well. Right. So I guess you can kind of think it as exploit development in some way. If you think about it in some degree, it's really just finding a niche in a protocol. How can it interact with another contract or within its own contract to extract money over and over again, given a context, and that's basically what an exploit is. But there's varying degrees of what you classify an exploit and how much money goes into it.
00:24:56.618 - 00:25:03.982, Speaker B: But that's basically what MeV is, right? It kind of goes hand in hand, but maybe not just because an exploit is taking money.
00:25:04.036 - 00:25:39.478, Speaker A: Whereas, yeah, it's a super gray area, right. There's some parts of Mev where there are certain strategies like I personally won't partake in, like anything that's kind of sandwichy, I don't partake in anything that you would actually get in trouble for. In tradfi, I think is a little risky. So I kind of stay away from. That's why I stick to mostly pure arbitrage and things like that and yield boosting strategies rather than exploitative strategies, that's really the much safer avenue. And I'd highly recommend everybody kind of follow that philosophy. Yeah, suggest that.
00:25:39.644 - 00:25:59.886, Speaker B: Not wreck myself in the podcast. Yeah, I agree. And I guess what is the kind of process you take to build a bot, right? So obviously you got to build it from scratch. Are you building it with a template or you just kind of built one and just keep on optimizing? Add a little module if you find something new. How do you really go if you.
00:25:59.908 - 00:27:03.300, Speaker A: Have a strategy that you love? For me, that's like arbitrage, as mentioned, whether it's like funding rate arbs, just pure spot arbs, cross chain arbs, things like that, it makes sense to have a structure for every strategy rather than a structure for every unique protocol, for example. That's definitely the way I would suggest people try to master trading. Profits don't come from being a jack of all trades. They come from really understanding one type of trade well. And this is kind of true across all asset classes, traditional finance and in crypto. So I would highly suggest people really hone in on a particular type of protocol or a particular type of strategy that they think they can be a master of or have an edge on, and kind of stick to that and really build a bot structure wherein they can focus on that one strategy and build a modular enough system that anytime they want to add a new protocol, it's really easy. It's just about integrating an interface in and then maybe converting it into whatever data format you're using and then boom, there you go.
00:27:03.300 - 00:27:10.486, Speaker A: It should be a question of integration rather than a question of building a whole new strategy every time you find something.
00:27:10.668 - 00:27:34.206, Speaker B: Yeah, definitely. I think it kind of overlaps. If you have the underlying infrastructure, you should be fine. Anyway, it's just a simple of integrating the protocol into the kind of template, possibly template. If you already have the mempool bringing in, you can kind of just capture transactions and you can kind of identify what kind of transactions they are. Then you just integrate the new protocol, kind of track that as well. So it doesn't seem too difficult, right.
00:27:34.206 - 00:28:08.050, Speaker B: Once you already have everything set up, you just kind of implement it, which shouldn't take too long, unless it's, I think maybe like a lending platform would be the hardest, I imagine so you have all the different states, all the different borrowers, and you have to keep track of the oracle and. Okay, can you liquidate them now? I think that's probably the hardest, but otherwise it really just is an infrastructure problem, which can be solved with a node, basically infinite calls, et cetera. Interesting. Yeah. And you work in a team of searches, right? Not just solo?
00:28:08.130 - 00:28:21.702, Speaker A: Yeah, I started out kind of doing my own research solo, but yeah, I work with a team now as well. That's kind of how Aori, how we got a lot of our developers, we kind of all were working together on strategies and things like that. That's kind of how all started collaborating.
00:28:21.846 - 00:28:28.122, Speaker B: And what, you just picked each other out at a random, or did you already know each other prior to joining?
00:28:28.266 - 00:28:49.174, Speaker A: Well, combination of hiring, working with people, meeting them at conferences, things like that. If you're just around in crypto, you'll start to meet really great people, especially if you're active on telegram channels or you're active at conferences. It's really easy to kind of separate the wheat from the chaff with that, I guess.
00:28:49.212 - 00:29:26.526, Speaker B: Another thing is trust, right. Within an industry of MeV, where strategy and ip is very hard to keep secure. I guess when you hire someone, what is the kind of strategy you take to not leak everything, but give them some stuff that will enable them to contribute? Because this is obviously something hard. Like someone can join, they can sign an NDA, sure. But that doesn't mean that they can copy and paste to send it to someone else. Maybe they have like an underlying team that you don't know about and then they just dip and you don't know they've actually taken your ip. So I guess what is your strategy for onboarding?
00:29:26.638 - 00:29:49.686, Speaker A: Yeah, well, that's where you need to have good human skills. I hate to see that. There's no easy answer for this. You got to have good human skills as well as you got to have good programming skills. That's almost like most of the battle is like the human side of things. So I would just suggest pick your coworkers like you pick your friends. Be very strict about it.
00:29:49.686 - 00:30:04.320, Speaker A: Are these people that you actually trust? If you have suspicions that they're going to do that, don't be around them. You've evolved over millions and millions of years to be able to detect lies and detect fraud. So use your evolution to your advantage, my friends.
00:30:05.170 - 00:30:12.494, Speaker B: Yeah, exactly. People can be putting up a front and you might not really detect it. So I guess there's always that inherent risk, right?
00:30:12.532 - 00:30:28.574, Speaker A: Definitely, yeah. You got to be a fucking amazing actor to be able to, like, if you're interviewing somebody, you do several interviews, you have friends on calls that they're helping you vet people. If they can get past that, why are they in Mev, they should be in fucking acting.
00:30:28.702 - 00:30:42.858, Speaker B: Yeah, I get you. I mean, Mev is quite lucrative if you can get it right. Especially if you join a team. I guess you have a higher chance of making it if you're in a team than solo. So there's a way. If there's a will, there's a way. Yeah.
00:30:42.944 - 00:30:46.860, Speaker A: I mean, only work with your friends, people. This will definitely help you.
00:30:47.550 - 00:30:56.238, Speaker B: Yeah, friends only. Have you had any war stories while doing Mev at all? Or is it just kind of been like doing the same thing over and over again?
00:30:56.324 - 00:31:23.474, Speaker A: Luckily, I haven't been exploited yet. That's kind of been lucky for me. Most of my war stories come from centralized exchange, market making and trading more than anything. Usually ridiculous pumps on tokens that make no sense, that usually just come from people's bots going just completely batshit crazy. I've seen some pretty interesting. It's really fun. I find that most of the fun I have in Mev, it does not come from trading.
00:31:23.474 - 00:32:00.622, Speaker A: It comes from like, because I'm a boring old man, I run boring old man strategies. I would suggest if you want to watch a movie without watching a movie, go to the flashbots bundles and then go click through actual specific bundle transactions in their bundle searcher and look at the wars in the blocks and look at the wars in the bundles. It's so cool. If you want to see real war stories happening in real time, that's an amazing place to do it. That's really cool to do. I would highly recommend doing watching. It's fun going through and seeing all these mev bots fighting over, just like complete dog shit shit coins.
00:32:00.622 - 00:32:25.194, Speaker A: I saw one the other day that was like Jared from subway arbed. Some guy who he sandwich attacked some guy in a pool in a derivative token of Obama sonic ten enu. And it was like called Bush Shadow 20 ethereum or something, this ridiculous name. I kind of love stuff like that. That's the kind of stuff that's just so stupid, it makes no sense. It's really awesome.
00:32:25.392 - 00:32:32.038, Speaker B: Yeah. Just looking at the chain, right, is where all the action happens. And if you're really curious, you can just go look at each block individually.
00:32:32.134 - 00:32:59.878, Speaker A: That's where you start to see a lot of really cool, interesting strategies and really interesting, I would say maybe another really cool place is to look at block building bidding. That's also really cool because you can see who's bidding on what transactions to fill what. So you can see all the sex decks are happening in real time because these people are running like, full on block builders. And so you can see what transactions they're trying to prioritize. Getting in the mempool versus everybody else is really cool as well.
00:32:59.964 - 00:33:04.502, Speaker B: How can you really look at these biding wars? The know, because everybody uses flashbots. Right.
00:33:04.556 - 00:33:26.160, Speaker A: The block building side, not entirely flashpots, is quite large. Yes. But you can also go look at, like, the best research on this has been done by special mech. I definitely recommend checking them out at special Mech. Those are like the best block building analysis. I can't recall where they are using or where they're getting their block building data from, or they're pulling it themselves, but I like to go through their.
00:33:29.490 - 00:33:32.382, Speaker B: Eigenfi or. Yeah, Eigenfire is pretty.
00:33:32.436 - 00:33:36.820, Speaker A: Yeah, Eigenfi is really good Mev watcher as well. It's like an open source one by.
00:33:38.470 - 00:34:11.478, Speaker B: Yeah, it's a great place. It's probably the best place, actually, to learn about Mev in general. It's where you'll find patterns, what's actually happening, and then once you have experience of what's actually the output of allots, you can reverse it to the point where, okay, what are they actually doing? And you can just kind of track their wallet, see what's happening each transaction, and you kind of deduct a strategy from it. Right. You can see if they're just doing a specialized thing like Jared, whether it's just sandwiching or they're just doing arbitrages. Kind of the waltz together, as you said with Dex.
00:34:11.654 - 00:34:32.194, Speaker A: One more cool one, too. If you want to check out solving algorithms is cowswap solvers. Like going through the cowswap dune analytics page, you could see a ton of data surrounding all the top solvers, and you can break down how they search for individual and how they solve for individual strategies. That's another really good one I'd recommend. Yeah.
00:34:32.232 - 00:35:10.654, Speaker B: And I think it's actually really good as well if you want to find the long tail, because everything is on chain, right? So even someone that's just found a new strategy, if you're just looking for every transaction, if you may be doing it manually or automated, you'll eventually hit, oh, wait, this guy. I haven't seen this before. Nobody else is doing this. Let me go and try and outcompete this bot, because it might just be a solo searcher with a very unoptimized bot, maybe just like Javascript, just got it done quickly to actually capture it. And if you see that, you can build something a bit better, bit optimized, and actually beat them.
00:35:10.692 - 00:35:16.754, Speaker A: Oh yeah. I'm a big fan of copying and stealing like just slightly one upping people. I completely agree.
00:35:16.872 - 00:35:45.206, Speaker B: Yeah, I've actually done that as well. It was kind of a weird kind of thing though, because they original strategy, and I realized that you could do strategy in reverse and he didn't actually realize that. I just read the code. I'm like, wait, you can do this back? And I started doing that. I built that. I'm like, wow, okay, this is infinitely more profitable than the original way because nobody's actually doing it. So I found a strategy within a strategy.
00:35:45.398 - 00:35:47.980, Speaker A: Wow. Damn. I want to know more about that one.
00:35:48.430 - 00:36:02.878, Speaker B: That'sick. Yeah, the profit here was making, I think it was like 1000 a day. But then when I did the reverse of it, it was more of like four, five, 6000 a day. It's a big difference.
00:36:03.044 - 00:36:03.854, Speaker A: Nice.
00:36:04.052 - 00:36:30.074, Speaker B: Yeah, that was like the first bot I ever created. I actually didn't finish it. I just got to the simulation part, didn't know how to actually execute it at the time. It was saddening because I was working on this for like a month or two, but it was my first bot ever though, so I do have that excuse. And it was my first rust program as well. First mev, first everything I think I did. Not bad, but definitely would have been better if I could execute it.
00:36:30.272 - 00:36:38.710, Speaker A: There's a lot of troubleshooting when it comes to building any kind of strategy. A lot of missteps. That's completely normal.
00:36:38.870 - 00:36:56.338, Speaker B: But I think any advice for some new searches would definitely be learn your RPC calls and know how to do it without using, let's say, ethers, for example. I only just recently learned this stuff of how to send a transaction off just the node. Like doing an RPC call, like a.
00:36:56.344 - 00:36:58.702, Speaker A: Post request, like on like a local node.
00:36:58.846 - 00:37:37.950, Speaker B: Yeah, exactly. I was like, wow, how did I not know this? Because then when you learn that's the abstractions of foundry, for example, and hard hat, you understand using in the background, and then you realize you don't actually need them. Yeah, like simulations, et cetera, it's actually quite easy. Just read all the different RPC methods. RPC methods. I think that's what I would do into it. Since you've been doing it for a while, how would you kind of advise someone to get into it as fast as possible or the best kind of pathway into getting into Mev?
00:37:39.090 - 00:38:45.974, Speaker A: I guess it depends on if you're coming at it from the solidity side or the rust typescript side first. It depends if you're coming at it from the on chain portion first or the off chain portion because there's kind of two different types of strategies, right? There's strategies where you're taking advantage of the code structure of the solidity, and there's strategies where you're taking advantage of the way people are using the protocol. So if you're into the solidity side and you're trying to find ways that maybe a protocol is not, one example is if you're going at it from the smart contract side, right. The way to first get started is a particular protocol you're interested in. Go line by line, and like I mentioned earlier, understand their entire code base, top to bottom. One strategy I sadly did not do, but I only found out about it after the fact that I thought was really cool was on GMX G V one, GLP was failing to account for open positions. The way GLP used to work was the accounting would only get updated when someone closed a position.
00:38:45.974 - 00:39:42.550, Speaker A: So you could actually monitor in real time the open positions and then use basically predict whether or not someone was going to open or close a position and thus find the true value of GLP at that moment. So this was like a strategy that Jeex actually patched because they realized that this was like fucking people were like arbing this and so they actually directly patched it. But that's like one where if you understand the smart contracts better than the creators of them, you can have a real. So that's one amazing way. Another really is to, if you're doing something like on a uniswap or like a really active protocol where the smart contracts are understood because they're very simple or they're understood because they're very. Well, doc. You can instead look for ways like you were describing where a bot or a searcher is doing something incorrectly and leaving themselves open to vulnerable, open to vulnerabilities or open to exploitation.
00:39:42.550 - 00:40:05.134, Speaker A: And that's really the other side too. It depends on which kind of strategy you're going after, but that's the other way, I would say, to start looking for first day, you're looking for things depending on what kind of protocol you're looking at. Look directly at the smart contracts and understand them impeccably or understand how traders are using incredibly well.
00:40:05.332 - 00:40:56.550, Speaker B: Yeah, and it's basically at that point. So I think Mev is such a brilliant thing in terms of yourself because first of all, you become a solidity developer to understand what the code is and to see how they connect with everything and hopefully cool. But then you also have an auditing side of understanding the core. Okay, how can someone attack this in this? How can exploit niches, web interactions? And then you also have kind of the macro infrastructure side and bots and maintaining nodes, et cetera, tooling. So it really hits everything. It's really a full step. And then obviously the execution, propagation, RPC interaction, it's a kill chain, I guess, or the whole shebang of being like a tier developer.
00:40:56.550 - 00:41:22.920, Speaker B: Then you also get into optimizations if you want to be elite. And so you'll probably be doing well, maybe if you're, let's say like very short tail stuff like arbitrage, et cetera. But if you're not doing that, you'll be using solidity. And so even if it doesn't turn out well, you can still get a solidity job, or you've been building the bot in rust, and then you can get a rust job, or you can just fall again.
00:41:23.450 - 00:41:24.920, Speaker A: Yeah, exactly.
00:41:27.130 - 00:41:37.270, Speaker B: In my opinion, it really boosted my skills when I got into it. Obviously super hard to get into, but obviously anything worth having is quite hard to obtain.
00:41:37.430 - 00:41:42.570, Speaker A: Yeah, it's one of those things where people hate to hear that the solution is hard work and lots of effort.
00:41:42.650 - 00:41:49.520, Speaker B: Yeah, it's like, no, why can't I get abs overnight? I just think of Mev as these days.
00:41:49.890 - 00:41:52.654, Speaker A: Yeah. What's that? Mev ad.
00:41:52.852 - 00:41:54.062, Speaker B: Mev abs.
00:41:54.196 - 00:41:56.054, Speaker A: You must have MeV ads.
00:41:56.202 - 00:42:02.558, Speaker B: And how do you really go about optimizing the bots as well? Obviously that's a core factor.
00:42:02.654 - 00:42:14.498, Speaker A: This is totally, admittedly my weak point. I am not a good rust developer. I am not a good rust developer. I'm mostly a strategy identifier more than I am an actual good optimizer. So I apologize.
00:42:14.674 - 00:43:11.398, Speaker B: Yeah, I think actually identifying the strategies is more important than anything. If you have a strategy that nobody else is using, there's no point in optimizing. But it only really matters if there's competition. So you can beat them, the optimization route, whether it's gas and then you can incentivize more. Or if you're on a non chain where finalizations confirmations are incredibly fast, for example, BFC, antim, et cetera. That's when the optimizations play a massive role. Because if you're not getting in that data quickly, then obviously analysis and the finance is very short, then it really depends on the pipeline of how fast around, because someone might get the information before you and if they get it before you, think you can do calculations before you and then propagate it for you, your weak point in a system like that is slowest thing.
00:43:11.398 - 00:43:15.574, Speaker B: So that could be like propagation as well. Maybe it's super slow at sending off the transaction.
00:43:15.622 - 00:43:30.926, Speaker A: It also kind of depends on. Maybe the best way to describe it is your strategy's latency requirements. Right. There are certain strategies where latency is not as important as simply executing it. Definitely depends on strategy type.
00:43:31.028 - 00:43:54.582, Speaker B: Yeah, I mean, in the context of if someone else has strategy as well, then obviously you need to be faster than them, depending if you're on ethereum or not. Quite interesting, because a lot of seconds to do the computation of whatever strategy you have and then something else. It's really not about that, it's about how fast can you do in milliseconds. So more of like a high frequency training thing.
00:43:54.636 - 00:43:58.374, Speaker A: Yeah, exactly. I mean, everything eventually turns into that.
00:43:58.572 - 00:44:06.394, Speaker B: Do you do any node customizations running it locally? I've met some people that run their own nodes in their house.
00:44:06.512 - 00:44:25.940, Speaker A: Yeah. I don't know, I think it's better to, I like to outsource that to things like blockshroute or like chainbound and things like that. That's definitely to me the smarter way to do it instead of. Because I feel like my weak point is optimization. So I'd rather just work with someone who's done all of that work already for me.
00:44:27.990 - 00:44:34.146, Speaker B: Yeah. As long as you get the idea, I'd be open. Outsource it to the really? That's the best way to do it.
00:44:34.168 - 00:44:41.720, Speaker A: Yeah, if you have a lot of time, go for it. But you might eke out like a couple of milliseconds. It's hard to really beat guys who do that full time.
00:44:43.130 - 00:45:24.098, Speaker B: Yeah. And then have this experience, this one language just getting to an elite level, I guess it's really using as a tool. It's like an initial deposit for returns. Hopefully easily. I mean the whole of it makes sense where if you invest a lot, then you can probably get a lot out of. If you charge someone a shit ton of money or like a lot of money, whether it's hundreds of thousands, they've got to realize that they're going to make way more from it than what they're paying for if their plan succeeds. So it may seem a lot.
00:45:24.098 - 00:45:38.614, Speaker B: Obviously losing money looked you take it to heart much more than gaining money, even though it may be like a little bit like maybe one quarter of what you gain is still stronger than to gain. Yeah.
00:45:38.652 - 00:45:40.620, Speaker A: Don't lose money. Pretty simple.
00:45:41.550 - 00:45:43.302, Speaker B: Yeah. Don't pay your employees.
00:45:43.366 - 00:45:46.140, Speaker A: Basically. Be good trader. Yeah.
00:45:46.590 - 00:45:53.194, Speaker B: We have reached an hour and I don't want to take too much more of a time. I would like to thank you for coming on and spending this hour with me.
00:45:53.232 - 00:45:55.930, Speaker A: Yeah. Incredibly grateful. Thank you so much. It was a pleasure.
00:45:56.090 - 00:46:03.966, Speaker B: Yeah, likewise. I'm glad we got to talk and make this connection. It was so quick as well. We're just like, yep. Want to come on? Yes. Okay, let's go.
00:46:04.148 - 00:46:04.880, Speaker A: Yeah.
00:46:05.650 - 00:46:09.934, Speaker B: So, yeah. Very grateful to meet you and obviously the start of a new friendship.
00:46:09.982 - 00:46:14.434, Speaker A: Likewise, likewise. It was a pleasure to got you. Thank you so much. I look forward to hopefully coming back on.
00:46:14.552 - 00:46:20.790, Speaker B: Yeah, definitely. When you're a multimillionaire, you're going to come over here and put me at the yacht.
00:46:21.210 - 00:46:39.190, Speaker A: Hell yeah. Hell yeah. This is awesome. We'll have the mev yacht. We'll have the mev yacht. Everybody take 10% of your Mev profits and donate them to me. And I promise I'll be a good boy and buy us a yacht that we all can tokenize and we'll ride it around the seven seas.
00:46:39.610 - 00:46:42.238, Speaker B: You provide liquidity to get on board.
00:46:42.324 - 00:46:42.960, Speaker A: Yeah.
00:46:44.050 - 00:47:01.020, Speaker B: Exit liquidity. Yeah. But for anyone else listening to the podcast, if you want to jump on or want to suggest someone to come on, just dm me at scraping bits on Twitter. Otherwise, thank you so much for listening and I'll see you in the next one.
