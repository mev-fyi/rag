00:00:06.610 - 00:01:02.710, Speaker A: Okay, so, hello, everyone. Can you hear us? Can someone type? If you can hear us, please type. I just want to make sure that we're actually live. Okay. Hello, Antoine, can you hear us? Okay, thanks, Jim. Okay, so welcome to everyone, those of you who are returning and have been on previous start at home episodes and those of you who are new. So, basically starting pretty much with the whole Covid situation, we started giving a bunch of talks that sort of dive a little bit into this particular kind of zero knowledge math or science technology called Stark, which is what we're passionate about.
00:01:02.710 - 00:01:56.440, Speaker A: And I think this is, like, by now probably event number 15 or 16. Those of you who are curious about the math and applications of Starks are welcome to go and check out a whole bunch of other crowdcasts there that I just posted in the chat. My name is Ellie Ben sustain. I'm co founder and president at Starkware. I'm joined here by Louis Gutman, who's a blockchain researcher at Starquare, and also with Andre cone, who I'm sure does not need very much of an introduction to most of the crowd here. Andre, do you want to say a few words to the.
00:01:58.730 - 00:02:20.490, Speaker B: Know? Thanks for having me. I'm looking forward. Mean, I think right now everyone's definitely talking and excited about the l two space and especially the sort of ZK roll upstar space. So I think this is a great chat to have, and I think the timing is absolutely perfect. So thanks for having me. I'm looking forward to it.
00:02:20.660 - 00:03:07.680, Speaker A: Okay, thank you. So the plan for today, I just want to give a little bit of context and then pass it over to Louis, who's going to give a presentation and discuss it with Andre. First of all, just for those of you are unfamiliar, there's an ask a question button. So I'm just now writing a question there. You can all post your own questions. The point is that while Louis will be presenting, we won't be able to see much of what's going on in the chat. So basically, the way to ask questions is going to be through this interface, and we'll pause from time to time to answer questions.
00:03:07.680 - 00:04:12.114, Speaker A: So basically, what we're interested in is in today, understanding a little bit more about how you can apply zkps and in particular starks to create some l two systems. It's a system that takes a lot of the information off chain and works very well with things like DeFi applications, and that's going to be the nature of the talk. For those of you who are unfamiliar, let me just sort of, because some of the folks out there probably are just ZKP researchers or folks in general interested about it. So blockchains in general are these maintain some state. And this state has a lot of economic value to it. So if you have in your account, under your public key, there's one ether. This has a pretty large purchasing power, to the tune of roughly $1,800 today, and who knows what the price will be tomorrow? So you have this state that has a lot of economic meaning there.
00:04:12.114 - 00:05:01.822, Speaker A: And because of this, so this is l one, layer one. This is where truth resides and economic value resides. And now, because everyone wants a piece of this and wants to interact on it, and there's this sort of assuming that this is the truth, there's instant finality for all economic transactions. Because if I transferred my funds over to Louis, then immediately, now he has this. If I gave him one ether, so now he has this purchasing power, and immediately he gets it. So there's a beautiful ecosystem of decentralized financial applications, which Andre Cornet pretty much jump started and contributed much to. And now, because of all this huge success, there's a lot of demand for using this thing, and blockchains are very slow.
00:05:01.822 - 00:06:01.186, Speaker A: So because of that, you would like to sort of take all of this action and put it off chain. And this is what we call an l two. So you want the state of the world and what happens to be not on l one, where it has all this economic value, but on something else. And now, immediately, there is a problem that's going to arise, because how do you sort of use the fact that stuff now doesn't reside where the real truth is, and still have the ability to transact very quickly and also have it be reflected correctly in the true state, which is in l one. And this is the nature of the problem that Louis will discuss. And the particular technology of zero knowledge proofs is one way by which you can sort of assert very efficiently on l one, things that are correctly happening on l two. So, without further ado, I'm going to hand it over to Louis.
00:06:01.186 - 00:07:13.694, Speaker A: I'll just point out that if some of you are intrigued and want to implement some of this stuff, you want to say, oh, this is really great, this technology is really great. I want to build my own amm or yield farming or anything on l two, but I don't know how to use zkps or whatnot, then there is a solution for it. We have made accessible a framework and a programming language that allows you just to program stuff. And you can just go to these two links, you can start programming, and basically the systems that you build will be able to create l two s that have automatically proofs asserting their validity on l one. This is through the Cairo framework. And coming very soon to it will be a tutorial that explains how you can write an amm, no less, in Cairo, and sort of get it to be this l two amm that interacts very nicely with l one. Of course, it's going to be a tutorial with some missing holes that you need to fill in, but all the more fun.
00:07:13.694 - 00:07:16.814, Speaker A: Okay, so I'm going to hand it over to Louis, please.
00:07:16.932 - 00:07:18.574, Speaker C: Thank you very much. Thank you very much.
00:07:18.612 - 00:07:20.138, Speaker A: Annie, do you want me to.
00:07:20.244 - 00:07:35.794, Speaker C: Please go. Let's go full screen. And I will take off the. Great. That's not what I want. Okay, great. Thank you, everyone, for joining.
00:07:35.794 - 00:08:34.738, Speaker C: And thank you for the second most important person of blockchain in 2020 to join us. Huge fan of Andre's work, and I think he definitely deserves the second place. So the topic of today's talk is going to be capital efficiency in the context of the nel two era, and what capital efficiency in the two era in the context of defi. So as 1 may not know, DeFi is basically finance on the blockchain, more specifically on ethereum. So the reason why we care so much of putting finance on the blockchain is because having the finance on the blockchain provide kind of amazing features. And the first thing is it's programmable. I mean, it means that I can just run a small program, put it on the blockchain, and then it runs automatically.
00:08:34.738 - 00:09:30.266, Speaker C: And the second thing is just that now it's connected to everyone. And in addition, it's obviously permissionless, meaning that I don't have to add permission to my bank to deploy this to create this new cool financial tool. And because it's also permissionless, I don't have to log in, I don't have to have a password, I don't have to show my id to create my KYC, to send papers. And the last thing, and the reason why, the thing we're going to talk the most about tonight is capital efficiency. And capital efficiency means that because on the blockchain, all the markets are united and unified. As a trader, I will always get the best price. Another thing is that as a trader, I can move my assets very efficiently across all opportunity that comes around.
00:09:30.266 - 00:10:43.230, Speaker C: And for any financial person who work in the traditional finance, this is something traditional finance can do. And I'm going to give you a very specific example that happened no less than two weeks ago, where this lack of capital efficiency creating huge drama in the financial world. And this event was the GameStop frenzy on the stock market, on the american stock market. And when Robinhood had to stop, prevent people from buying the share, the stock, because they had this problem of finalizing operation. So in traditional finance, when you buy an asset, you technically only receive it two days after it's called t plus two. And because all of a sudden, and during those two days, there is various risk that the different parties needs to insure against. And because of the frenzy, the number of transactions that came to Robinhood was so big that their insurance guarantee they had to give to the insurance company Ten X, it became ten times more expensive.
00:10:43.230 - 00:11:21.710, Speaker C: And the only solution they find was to prevent the users to buy the share. And they had to get the last minute bailout by various partners to make sure that it could work on the next day. And when you look at the defi space, t is t plus epsilon, Epsilon being the inclusion time, usually the block. So this is amazing. This is why Defi is so cool. But it triggers, obviously, a lot of success in interest. And we eat one of the core issue of Ethereum, which is scalability.
00:11:21.710 - 00:12:12.266, Speaker C: So I won't get too much into why we have scalability issue. If you want to learn more about it, you invite you to go read what the core dev write, what Peter is writing, what Martin is writing from GEF, what Alexei from Turgef is writing, all of those guys. But one of the core reason is because we have one single state. And this question of scalability has been around for a while. And one of the way we plan to the ecosystem, the community is planning to solve it, is through roll ups. So roll ups are a specific kind of l two. So I don't know if everyone is familiar with the notion of l two, but for anyone who's been around, there has been different proposal to enable blockchain to scale from sidechain to plasma.
00:12:12.266 - 00:12:53.706, Speaker C: But the latest iteration, and at this point, the most likely to succeed is roll ups. And roll ups are called l two s, but used to be called l five 1.5. And the reason for it is because roll ups security only depend on the security of the l one of Ethereum. So that's very cool. And that's what starkware is doing. They're writing a ZK roll up. But it brings a paradox, because Defi was very successful, and because it was very successful, it brought a lot of demand and a blood of demand for the block space.
00:12:53.706 - 00:13:37.606, Speaker C: And with that demand now, the cost of transaction became very, very high. And kind of the reason why it became so successful is this capital efficiency, this single state that everyone share. And the solution to the high price are the roll ups. And what do they do? Roll ups do. The roll ups are all about splitting the state. So I invite you to look at what James Pristrich wrote. James being one of the great mind when it comes to protocol layer of blockchains, and he says right away, you cannot have cheap fees on the global consensus.
00:13:37.606 - 00:14:14.886, Speaker C: If you want it, you can't have it. So there is a paradox. One side we have in Weinstein, we have like Defi, which is successful because of the one state, and roll up, which are successful because we split the state. And this seemed like, what can we do? What can we do about this? And the general wisdom at this point is kind of the following two options. The first one is just say, okay, we're going to split liquidity across the various alt wind, we're going to bridge it, and et cetera, et cetera. And it's kind of suboptimal. Everyone knows this.
00:14:14.886 - 00:14:49.360, Speaker C: Or the other approach is to say, oh, everyone is going to move to the same roll up and everything's going to be fine. So the problem with that second solution is that, first of all, going on a single roll up, up to a scale. And the scale is very complex question. And DK roll up versus optimistic roll up comes along, and it's too deep a question to address today. If you want to, I would please reach out to me. But it also missed a second important step, which is the network effect. The success of Ethereum today is the number of projects that we have around.
00:14:49.360 - 00:16:12.460, Speaker C: And for this roll up to this big roll up to be successful, it needs to basically have everyone move right away, and it's very unlikely to happen. So today we want to present like a third path, something that will enable to benefit still from the network effect, while enabling users to go to remain on l two. And so the notion I want to introduce is we should leave the liquidity on l one, but aggregate the demand on the l two s. So when at Starkware, we were working on how we can bring that up, why we can scale DFI, how can you scale the operation? We had kind of two design goal. First of all, every l two s must have access to liquidity, and we should enforce very minimal protocol change to existing project. So I'm going to present like there is a bunch of solution and things you do on Defi today, and we can summarize them to roughly five. The five operations usually do on DeFi are lending, lending your money using a yield optimizer, like wi Fi, like what Android basically started, which is trying to.
00:16:12.460 - 00:16:51.174, Speaker C: Oh, actually I see that there is, which is trying to optimize the rate you can get on your asset. And staking. Staking is a way to enable voting on a governance problem. The second thing you want to do is borrowing. What I want to do is I believe a dollar is a shitcoin and I want to short it by buying bitcoin. So some people don't believe so. They were just going to lend me their USDT and in counterpart I'm going to pay them in interest.
00:16:51.174 - 00:17:31.198, Speaker C: And this is what is very important. Borrowing is very important and at last there is exchanging markets. And all of those are what defining Defi today. And before I dive into the solution themselves, does anyone have questions so far? I think there is already one. And I will take. So is there any questions then? So first of all, maybe I can ask Andre, did I miss anything? From your perspective when it comes to defi?
00:17:31.374 - 00:17:43.382, Speaker B: No, that's solid. You've got amms, you've got lending protocols, and the underlying assets themselves, I might say is a category in their own. But yeah, pretty much nailed it.
00:17:43.516 - 00:18:24.210, Speaker C: Okay, awesome. Thank you. I appreciate. So then I'm going to dive a bit about what's the solution we are looking at. So for those who are familiar with what stockware has been pushing as research, as blog post, we have presented something called Defi pooling. Defi pooling is very cool because it enables you to, if a bunch of users of trader wants to do the same thing, we're just going to batch them into a single l one operation and those end user are going to share it. Like 1000 user are going to share 1000 of the transaction on layer one.
00:18:24.210 - 00:18:54.160, Speaker C: So today, for instance, depositing to Ave could cost $120 with a DeFi pooling, I could lend that for $0.12 if I had 1000 people to share it with me. Lending a yieldimizer is roughly the same thing. I could just deposit there and share it into a single batch. And staking is kind of the same logic. Very simple. I deposit, I get something that says I deposited and everything's fine.
00:18:54.160 - 00:19:54.098, Speaker C: So this is what defi pooling enables you to do. It's a very simple, doesn't require any change from existing protocol. When it comes to borrowing, borrowing is a bit more tricky because you need some individual level of account management. But nevertheless, borrowing is very, to some extent, and this is debatable to some extent similar to lending in the sense that it's not a very time sensitive operation. It could be, but it's not the steady or very time sensitive operation. And in that context, what I can do is the main difference with borrowing is that I need individual account level of access. So the way you can scale lending is by basically committing off chain all the collateral user wants to do.
00:19:54.098 - 00:20:39.680, Speaker C: Like let's say a bunch of 100 user wants to borrow USDT and they want to create different collateral. What they could do is commit the various collateral, move it from l two to l one, but have an efficient commitment on l one. And the last one is what I'm the most excited about is how can you get across l one, l two s. Imm meaning something where we don't have to move the liquidity on each l two and share it among all different l two s. So I'm going to dive into this specifically because this is what I'm the most about. There is a lot of questions coming in, so I'll be more happy than too.
00:20:40.050 - 00:20:41.426, Speaker A: Wait, so now what you do is.
00:20:41.448 - 00:20:43.586, Speaker C: First of all, yeah, delete this one.
00:20:43.688 - 00:20:46.334, Speaker A: And then when you start answering, start answering.
00:20:46.382 - 00:21:17.386, Speaker C: Okay, go ahead, miscrip. Can you go further detail into the cross l two bridge will work. So I'm going to dive into, actually into this a bit later. So please keep it as we say when you present. It's a great question. So I hope it will be answered a bit later because that's how we're going to address, like I'm going to show the different ways you can address it. I'm going to ask it because apparently sushi Also.
00:21:17.386 - 00:21:27.150, Speaker C: So I'm going to do that. Start answering, Andre. Lift. Since you're working with sushi, apparently, I guess you are in the most ripped team. Are you working out, Andre?
00:21:28.450 - 00:21:32.146, Speaker B: Myself personally, yeah. I hit the gym at least five times a week.
00:21:32.248 - 00:21:58.780, Speaker C: Wow. Okay, so that's. Answer that question. So now, okay, answer the question. What are stockware expectations for the permissionless and censorship resistant of defi pooling? For example, do you see a third party as able to add a new token and a new use case for existing token without asking or telling stockware, that's a very good question and the shortest I can answer. Please do.
00:21:59.870 - 00:22:43.286, Speaker A: Okay. The short answer is that yes, this will be possible both in the solutions that Louis is going to discuss very soon. And certainly, as you may know, Starcore has announced that we're doing basically a decentralized network, l two, where anyone can run a node, anyone can run approver, anyone can put any smart contract on it. And in particular, you'll be able to code whatever things you want at much greater scale. So in particular, yes, you can do that. I just want to remind you, you can use the ask a question. By the way, I see a lot of people are joining in.
00:22:43.286 - 00:22:57.882, Speaker A: I don't know where we hit. I just hope that. I don't know that the servers or anything don't crash from this. I don't know if it was a joke before or something, but I hope crowdcast is going to be able to deal with it anyways. Okay, Louis, please go on. I think we'll continue with a split screen.
00:22:57.936 - 00:23:11.118, Speaker C: Right? Okay, yeah, I can do that. Okay, great. So I can do that. So I'm going to go back to get my nice presenter view, and I click on the wrong button. So that's okay. Let's continue. Okay, great.
00:23:11.118 - 00:24:15.746, Speaker C: So now I'm going to dive into what I was saying was something I'm the most excited about, which is, I would answer that afterwards, which is the most excited about, which is an idea that I don't think was shared publicly previously, which is the ability to have cross l one, l two s imm. And the way to do so is actually quite elegant. So the reason why we don't imm are a bit harder than borrowing and lending is because they are majorly time sensitive operation also in the sense that the price can. I mean, we are in crypto and the price can get 40. Wifi got 30% today. So if you want to buy, you want to buy now, but not everyone can pay the $40 and the uniswap cost right now. So the reason why, if you want the iMm doesn't scale is because obviously every train goes on chain.
00:24:15.746 - 00:25:21.420, Speaker C: So kind of the way we imagine like a potential cross l two, l one and l two. IMm is by outsourcing, leaving the liquidity on the smart contract, but are outsourcing the state of the IMm to an external operator. And basically this external operator is here to manage the trade that happened on the various l twos with the various traders, but only settle it at the end of a time period. So let me show you a bit how it works. So just remind ourselves, what is an imm? An imm, first of all, for those who aren't familiar, is the following. An imm is a smart contract that has three functionality. It has a trading function, a liquidity pool that user can join and leave.
00:25:21.420 - 00:25:54.340, Speaker C: And a pricing formula. So a trader can do any of the things that are expecting to aim, like deposit, withdraw and trade. And Vim can define any pricing formula you wish. As long as it's hard coded or dynamically defined, it doesn't really matter. So most classic formula are obviously the uniswap sushiswap formula, constant product. You have more advanced one like the generalization by balancer, the customized one like curve. You even have very cool and fancy one like the Unisoc one.
00:25:54.340 - 00:26:36.014, Speaker C: So this is what an imm is about. An imm is about enabling users to trade on a market maker. Meaning someone would always trade against me. And this contract will protect the people providing the liquidity by enforcing some hard logic on what the price should be. So now let's look at how we could make it across l two. So in this setting, I have three different l two s, one l one user, one cross a layer imm, which is simple smart contract on l one with the two characteristics. And this operator, right now, I'm assuming this operator is centralized.
00:26:36.014 - 00:26:39.730, Speaker C: Obviously it can be decentralized, it can create consensus around him.
00:26:39.880 - 00:26:41.460, Speaker A: Could you explain here.
00:26:43.670 - 00:26:44.482, Speaker B: What is on.
00:26:44.536 - 00:26:45.954, Speaker A: Chain and what is going on?
00:26:46.072 - 00:27:09.454, Speaker C: Of course, anything that is on the red area are on chain. Everything on the outside is off chain. That's why for instance, the l two s obviously are off chain. But the operator himself is off chain. The user is on chain the sense that he wants to do l one operation. And the smart contract is on chain in the sense that its logic is enforced in the smart contract. Before I'm diving into how it works, I would just ask.
00:27:09.454 - 00:27:34.370, Speaker C: There is a bunch of questions, so I would answer that. Okay, so what do you think about cross sale to defia composability? I will answer this. I think it's a question that is very interesting, but I would rather answer it with Andre's help. After the end of print of the different talks, leave this question for DAP developer.
00:27:38.790 - 00:27:40.520, Speaker A: Someone has to pay for it.
00:27:40.890 - 00:28:31.622, Speaker C: I'm going to answer this one. As a DAP developer, do I need to pay for the gas to onboard user on n one to l two, the user has to pay. Right now there is two questions here to answer. The first one is if you exist on l one, anything you're going to do to join DL two is an l one operation. There is no magic around this. But if you are on boarded directly on l two, let's say like a rump network directly giving me swapping Cpap transfer to eth directly on vl two then no, you don't have to pay for deposit. Will I be able to run decks and lending platform protocol at current volume level solely on mine transaction in other wheelkeeper and meta transaction be capable of allowing defi to run gas free? I'm not sure I understand, so I will keep it for later and maybe Andre will be able to help on this one.
00:28:31.622 - 00:29:22.630, Speaker C: Roll up security guarantee is people can exit back to l one, but in the roll up centric word, gas will skyrocket. Being able to exit back to l one is not good enough for people because l one transaction is exactly what they can afford anymore. Can Starquare solve this? This is a very good question and a very relevant one. What we need from when it comes to scalability and when it comes to l one, what we want is something where we want to protect the user, not to be stolen. That's the first thing we want to protect. And you're fully right. Will user be able to transact on l one is not an obvious statement, but if anyone can pick up the l two, then you don't have this problem of exiting anymore.
00:29:22.630 - 00:29:26.874, Speaker C: And that is kind of the question we want to answer. I will just drive back.
00:29:26.912 - 00:30:07.586, Speaker A: I just want to answer that. I mean, as a user that goes to l two, you basically have the option, if you feel secure enough in l two, you can stay in l two and transact there for as long as you want. And you will see very low gas cost, if any. If you feel for any reason that you want to go to l one because you want safety or you want to move to some other l two or anything, yes, then you will have to pay it. But hopefully over time you will transact more on the l two or it will be an option. You'll see what the gas prices are, maybe you wait for some better time and then you exit at that point. So it's really an option up to the users.
00:30:07.586 - 00:30:11.240, Speaker A: And of course both things will have a price and you have to choose exactly.
00:30:13.530 - 00:30:46.126, Speaker C: Okay, great. So I'm going to continue. I'm running a bit late because of the question, so let's continue. So as I said, six entity here, the operator. I need to get back the operator, the manager trade and the smart contract on l one and the user. Okay, so now what happens is whenever user wants to trade, he doesn't reach out to the smart contract to get a quote. What he's doing is reaching out to the operator.
00:30:46.126 - 00:31:18.620, Speaker C: The operator will provide him a quote and then the user can say, oh, I just want to, I'm accepting it with a slippage. So now what the user is doing, there is not only the alice here and the various traders, there is like a bunch of them. And what you can do is you can notice that on the l one, the first l one, the trade themselves are canceling each other. On the second l two, the trade are complementing each other, meaning they're go, oh, sorry. Apparently it's not big enough, it's not full screen.
00:31:19.330 - 00:31:23.870, Speaker A: I think this is a good, no problem.
00:31:23.940 - 00:31:24.126, Speaker C: Great.
00:31:24.148 - 00:31:25.630, Speaker A: No, you're now focusing on yourself.
00:31:25.700 - 00:31:39.858, Speaker C: Sorry. Yeah, I'm very not good with Chromecast. Sorry for that. Okay, great. So let me get back to this. As you can see, like on the first l one, on the first l two, the user is canceling. The user are trading against each other and canceling each other.
00:31:39.858 - 00:32:30.226, Speaker C: On the second l two, the user are just making a trade that goes into the same direction. So they are going to be appearing like a single big trade. And on the third one, a trader is basically matched against one or the other, but the net is provided. So let's continue here. As you can see what happened. The operator managed to get a zero net difference on the first l two, but on the second l two now there is a directional trade, a directional trade that going to ask for like basically we output 10,000 USDt and this user now are expecting to receive ten if. On the other hand, here we have a guy requesting a user, requesting one if and expect depositing one if and requesting 1600.
00:32:30.226 - 00:33:10.030, Speaker C: And on the l one, if the user wanted to trade from the l one, he would basically lock his token on the contract with a quote signed by the operator. And now we have the rebalancing phase. And remember that the imm is all about protecting the LPs. It's always about protecting the lps. So the lps are guaranteed execution. And because they're guaranteed execution, they can check that every trade they're receiving match to where they should be on the curve, that they're exactly where the price should be plus the fees. So now every user gets back what they are needed and the imm gets what it needs.
00:33:10.030 - 00:33:57.258, Speaker C: So now let's dive a bit. Why it works. Why does this work with LT? It works because in the ZkP base solution, scalability, you get instant finality. And when you get instant finality, money can flow in and out instantly. And the second consequence of this is that because it can move in and out, it can do actually crazy things, it can move in out, do something back in within the same operation. So now let me show you a bit of what's possible. And this is what kind of excites me the most about with ZkP based roll up is the power of optimistically.
00:33:57.258 - 00:34:59.330, Speaker C: In a ZkP based roll up, you can do l two to l one to l two. Optimistic execution and callbacks, which means the following. It means that a user could say, oh, I want to swap USDT for YUSDT, but there is no YuSDt yet in the system. But the network could aggregate their demand, execute the trade as if there was YUSDT. But the YUSDT will only arrive after at the moment of the proof of the state being updated. Why? Because I can withdraw the funds. I could flash loan the funds to the yvolt, deposit the YUSDT, swap them, make the proof valid, and reimburse the float in the single transaction.
00:34:59.330 - 00:35:53.290, Speaker C: So optimistic execution, because I'm doing things on the l two, assuming it will be right by the time we're true, by the time I'm negotiating it, and callback, because I'm calling back the system to reimburse, to flash from, and to reimburse themselves. And this has crazy features. First of all, it provides extreme l one efficiency, meaning I have the minimum amount of operation to do on l one. The second thing is it provides extremely good ux, because I just mean that the users say, I want USDT, why USDT? Give it to me, swap it. And although there is no YUSDT, I can do it. And the only major problem with this, which is manageable, is if this event is not executed, doesn't happen, then it will provoke a batch failure. The l two will not be able to settle.
00:35:53.290 - 00:37:32.514, Speaker C: So this works very well when either the system is not time, the protocol is not time sensitive, or then you actually trust the contract you're going to call very extensively. So now we also another approach, which is the asynchronicity approach, where here, what I'm doing is that if a bunch of user wants to do the same thing, I'm going to pull them together. I'm going to pull them together and simply aggregate the pool the money, create shares, create distribution, aggregate the money on l one, and then execute what I need to do. And the main advantage of this, that it cannot create a batch failure, because if the event doesn't occur, then the user just get their money back in the next batch, in the same batch. So it provide a lot of flexibility and enables synchronicity to provide resynchronize various event of various l two through the synchronicity of the l one. The problem is the cons obviously is that it's a much more complex system ux wise it could require up to two signature and also it creates some arbitrary abstraction that are somewhat complex. But this more or less works with any system and the design I show for the IMM is fundamentally based on this ability to do things asynchronously and this capital efficiency, this ability to withdraw to get my money back.
00:37:32.514 - 00:38:46.730, Speaker C: Like Thatcher would say, give my money. When can you use this? First of all, a bit about Starquare here. Starquare has two product line and two product line that exist today. The first one is one that has been live for nine months called Starkx. Starkex is a non custodial environment for trading and swapping and in Starkx so Starkx have been live with diversifying for nine months. We'll be live with Stark with godzone chain, immutable godzone chain and dydx this month if I get the date correctly and more to announce very soon. And while we cannot do this exactly like in the current version we will be enabling the synchronicity approach in v three through two new features which are respectively the ability for a contract or for actually any l one account to create an order, a limit order, a swap order directly from l one which would be valid on the l two.
00:38:46.730 - 00:39:31.962, Speaker C: The second thing is I will be able to hold assets for the user directly on an account on the l one that is valid on the l two. So basically you could have a contract that mint LP to shares, deposit them, create a limit order at a specific price and we're swapping them. This is what we're describing in defi pooling and now we have the two things that we are not completely like I didn't describe previously, which are this efficient commitment. So the efficient commitment looks a lot like the hope exchange from the Ethereum presented. It's something that we know how to build. We just didn't have the interest yet or didn't present it publicly yet. And callbacks is the same thing.
00:39:31.962 - 00:40:23.740, Speaker C: We know how to build it. We actually tried very easy for us to build it but we're still looking for people who wants to build that. But now let me present Starknet. And Starknet is what you think when you think about the general purpose l two solution like ZK solution it's a full blown trin complete l two solution. And Starknet will come in three phase planet, constellation and Universe Planet is the ability for you guys to take Cairo, which is our Turing complete language NVM, that is available for you to play around. Ellie, send the link. You will be able to write your own Cairo code, output your own information, write your own smart contract and run it by yourself without talking to us.
00:40:23.740 - 00:41:08.258, Speaker C: And that is something you will be able to do all of what I described by yourself without talking to me, although I'm very nice. And next week, sorry, I think very soon on this we will have a tutorial. For instance, how to write an imm on Cairo and constellation is roughly the same thing. The only difference is that it enable you to have multiple application running through the same centralized operation. And universe and universe is what people are the most excited about. Universe is basically the full blown version. Think like the perfect l two you dream for meaning decentralized provers proving things for you.
00:41:08.258 - 00:41:44.754, Speaker C: Smart contract that you don't have to run and written in a language that enables you to do whatever you want. So on this one we will have l one to l two execution and l one account. The efficient commitment is not something you would have even to talk to us about. You can write it yourself directly in Cairo. The only thing that is a bit more complex but feasible is enabling any smart contract to do arbitrary callbacks from the l two to l one without having any sort of authorization from the provers. So this is feasible. This is what we were looking into.
00:41:44.754 - 00:42:00.140, Speaker C: But a lot of that is TBD because obviously arbitrary computation could be dangerous, could bring a lot of complexity, and we need to solve that first. But anyway, I just want to thank you for listening to me. This is the end. And because I'm french and apparently defy the future of.
00:42:02.270 - 00:42:20.320, Speaker A: Now, before we hand it over to Andre, let's just answer. You said that a few of the questions are going to be answered by him, but okay, this will leave. Andre is going to answer this one, I guess. Let's see which one this again we said.
00:42:21.730 - 00:42:25.346, Speaker B: Actually, before we get to that, I want to add a little bit of context as well.
00:42:25.448 - 00:42:27.794, Speaker A: Go ahead, we'll move into you, please.
00:42:27.992 - 00:43:10.362, Speaker B: Because a nice thing about sort of what you can do on L2 is you can reduce any layer one action as a trade, basically. So what I mean by that is there's obviously the basic amm trade, which, let's say you want to trade eth to dai, you're going to transfer ETH to the smart contract and you're going to get dai back. Now that's a traditional amm exchange. But if you think about something like a yield aggregator. Let's take urine, for example. It works the same. If you want to deposit eth into the y e vault, you give eth.
00:43:10.362 - 00:44:04.900, Speaker B: It gives you a price that that eth is worth, and it gives you y e. And that's also just an exchange. If you look at a lender, let's look at ave you want to deposit Dai, you are exchanging Dai for Adai at a specific price and exchange. If you want to borrow against that Adai, and let's say I want to borrow eth, I'm exchanging my adai for that eth. So almost every action, whether it's borrowing, exchanging yield aggregation, you name it, can be sort of condensed to trading asset a for asset b. I'm trying to sort of dumb down what was being explained during the presentation. Now, in that once you have your initial asset on the l two, so that requires locking it into a smart contract on the l one side, and then it becomes available for you to use.
00:44:04.900 - 00:44:37.786, Speaker B: You can sort of think of it like also being backed by an asset. It basically becomes a stable coin on the other layer. That's one to one of the value of the underlying. But once you have it on that l two, you can do any of those exchanges because the l two is aware of the exchange rates on that l one. Especially with that very cool l two to l one, callback to l one method, you can lock in those quote values. So if you want to be on an l two, urine doesn't have to exist there. Ava doesn't have to exist there, compound doesn't have to exist there.
00:44:37.786 - 00:45:52.530, Speaker B: All that you need to be able to do is trade die for Cdi or die for Adai, and Adai to eth if you want to borrow it. So just by virtue of the l two, knowing these, let's call them quoted price values, which are fixed according to the rules, it can facilitate any of those actions without any of those systems actually needing to exist. And that starts making it incredibly powerful. Because a big problem now with side chains, l two, s, you name it, is the migration problem. It's like all of these people need to migrate, yearn, can't move unless ave compound, uniswap, sushi swap, everyone else moves because we need to build on top of them. Ave can't move until dai e, USDC link, et cetera, token moves because they need those assets. By being able to do something like this, get the quote price on l one and then just doing the exchange on l two, you unlock all of the functionality of l one while being able to do it in an l two gas minimum instant finality environment.
00:45:52.530 - 00:45:57.510, Speaker B: Technicals aside, that is incredibly powerful.
00:46:01.370 - 00:46:09.170, Speaker A: Do you want to answer some of the questions and then basically continue and speak your thoughts on this?
00:46:09.340 - 00:46:13.386, Speaker B: Yeah, let's go for it. If you don't mind reading them out for me then yes, definitely.
00:46:13.488 - 00:46:19.450, Speaker A: So hello all. What do you think about cross l composability.
00:46:22.050 - 00:46:39.620, Speaker B: We'Ve been seeing? I'm not recalling the project's name, but arbitrarium I think it is, that's doing the cross l two shops swaps. So it allows you to transfer between optimism and zk roll ups or things like that.
00:46:40.950 - 00:46:47.860, Speaker C: I think it's up exchange you're talking about. Actually I quote them because the commitment I was talking about is inspired by their design.
00:46:48.550 - 00:46:53.074, Speaker B: Okay, that's very cool. I actually don't know on a technological.
00:46:53.122 - 00:46:54.006, Speaker C: Level how they do that.
00:46:54.028 - 00:46:57.402, Speaker B: I don't know if you have any more insight on that as you can maybe give us a quick high level.
00:46:57.536 - 00:47:42.120, Speaker C: Sure. Actually someone quoted also there is connected the state channel between the two, between L2s. That's connect. But what the Ethereum guy did with Opex is what they're doing is they are minimizing by using an efficient cryptographic commitment. They are bundling, compressing all the assets that are moved from one l two to another l two and moving it using those bridges. Like basically you're going out and you are committing and then you can commit it on the other side.
00:47:43.290 - 00:48:34.374, Speaker A: Okay, next question is, I think this is a question for us, estimate on when EVM compatibility will be ready. So I'll answer this one. So not necessarily soon, but what you really, really want is to have the functionality and the expressibility of EVM. Because, let's put it this way, because of the severe gas limits and the severe limitations on computation on l one, the actual logic of many of the smart contracts that you would like to move to l two, that logic is very lean and simple. Okay. Because of these limitations. So realistically, your best chances getting, if you want to build, let's say an amm on our l two, which we highly recommend, your best chance.
00:48:34.374 - 00:48:53.920, Speaker A: And I'm going to repeat something that I said earlier. Your best chance is basically writing it from scratch. And the way to write it from scratch here is it says that I already sent this message, but I do want to send it again. So I don't know why it's not resending my message.
00:48:56.690 - 00:48:57.920, Speaker C: I'm going to do it myself.
00:49:00.530 - 00:49:13.790, Speaker A: So basically I'm trying to post here the links to where you can go and learn how to program your amm.
00:49:13.870 - 00:49:14.866, Speaker C: And this is going to be much.
00:49:14.888 - 00:49:41.600, Speaker A: Much faster than waiting for EVM compatibility. And I think it's also going to become much better. As we said earlier, within a week or so there will be a tutorial there with an amm, a rudimentary amm that you can basically take and sort of complete it into an amm and get your own amm on l two with very low gas cost if you know how to program or to test it in prod, as some people here know.
00:49:43.010 - 00:49:43.614, Speaker B: Next question.
00:49:43.652 - 00:50:09.174, Speaker A: I think this is for you. Will we be able to run dexes and lending protocols at current volume levels by integrating l two? Additionally, will keepers be able, I guess, keep three ers, be able to introduce gasless swaps and txs with l one to l two meta transactions? Do you want to answer this?
00:50:09.372 - 00:50:46.178, Speaker B: Yeah, 100%. Just for context, there's basically two subset products that we have sort of developed. So the one is meta wallet, which basically uses for those that are familiar with like the GSN network, where you can relay a transaction based on a different asset than ETH. So you'll have a relayer that's willing to pay your gas and exchange for that. They'll take some dai or whatever it is that you have available in the transaction. So it sort of subsidizes the costs. So meta wallet is sort of like a gnosis or DS proxy wallet, if you want to think about that.
00:50:46.178 - 00:51:43.170, Speaker B: That's automatically integrated into this relayer network, so it doesn't require sort of signing extra transactions. You use it as a base wallet. And then the relayer network itself is keeper network. Keeper network is just decentralized sort of keeper job board, where people post things to execute at specific times or at specific events, or with specific triggers. And then when those triggers are met, execution happens. And the nice thing about it working with metawallet is that metawallet is designed completely with a permit scheme. So what that means is normally with a transaction, when you execute that transaction, you execute it on chain with a permit scheme, you can sign it off chain and then use that signature that was signed off chain to execute an action.
00:51:43.170 - 00:52:47.622, Speaker B: And because we're combining metawallet and keeper, you can actually collect a batch of these transactions and batch them all into a single execution when a time trigger or whatever is met. So it's kind of like a very overly simplified on chain version of, you know, batch transactions. And to be able to like offset gas costs and that kind of stuff. One of the things we do want to do with that, and we also want projects to incentivize doing that by actually paying in their token to subsidize the gas cost, is to use that infrastructure to allow for near gas free commits into L2s. Because now if you use that infrastructure and you want to transfer your tokens or your eth or whatever into a L2, then that network subsidizes all of those events for you. And because it's batched, it's cheaper because it's combined with a bunch of different signature transactions, et cetera. Sorry, that was the second half of the question.
00:52:47.622 - 00:52:52.698, Speaker B: Can you just read for me again, the first half of the question, let me get.
00:52:52.784 - 00:52:55.002, Speaker C: Question. We closed it, so let me get it.
00:52:55.056 - 00:52:56.060, Speaker B: Sorry about that.
00:52:57.230 - 00:53:04.400, Speaker C: Will we be able to run decks and lending protocol at current volume level by integrating l two? I'm not sure.
00:53:05.490 - 00:53:06.720, Speaker B: Well, I mean.
00:53:08.610 - 00:53:09.406, Speaker C: You'Ll be able to.
00:53:09.428 - 00:53:50.510, Speaker B: Do more l one volumes and transactions and everything else is basically limited by two things. It's how often do blocks occur? And it is how much actions can you fit into a given block given the gas limit. As soon as you start moving these things onto l two, you don't have those limitations. You move away from block limitations. You have things like instant finality. It's how many proofs can you generate in a given time frame. So trading can actually happen exponentially faster.
00:53:50.510 - 00:54:08.930, Speaker B: Lending can happen at a significantly greater scale, although it is obviously limited in terms of the amount of capital you have available to create the borrower volume. But yeah, like l two s don't limit what you can do. In fact, they provide access to increase it quite a few fold.
00:54:10.310 - 00:55:07.234, Speaker C: Awesome. There is, I guess, a question for me. I guess, how much would this operation cost in best case? The point is, are we talking about marginal cost? Are we talking about including the proof, the TLDR? If we just talk about marginal cost, it would just be a single, like the equivalent of depositing into wifi into the yvolt and redepositing the receiving asset to the deposit area of the user. So TLDR here would be like the cost of you depositing into wifi. Okay, so how trustless is star quer l two solution? I'm going to enter this one also, so it depends what you mean by trustless. Starquare solution. Starkx.
00:55:07.234 - 00:55:46.100, Speaker C: Starknet are trustless in the sense they're not custodian now, they're not sensors resistant, and if you want to get censorship resistant, we will have to wait until Starknet and the third phase of Starknet. I hope it answers the question. There is one question for you which is not related to the topic, but I'm sure I will read it anyway. Other chain have different iteration of implement loss protection for liquidity provider. Is this something that can be done on if and if so. Do you know if anyone looking into this at this time?
00:55:47.430 - 00:56:44.542, Speaker B: Definitely lots of people looking into it. Everything from trying to apply something like straddle options to sort of using lending of the other assets. So you sort of have a short position against it into your amm for if it offsets the biggest problem. There is actually more to do with how these amm curves work. If you look at something like the constant function, impermanent loss is basically an exponential change on the assets versus what you would have experienced if you just held the assets. So like when you do a borrow position, you also suffer that exponential loss and that kind of hurts you more. The problem with options, again, is they're not perpetual and they need a lot of micromanagement and just options pricing currently on chain kind of make them prohibitively expensive.
00:56:44.542 - 00:57:07.290, Speaker B: So you need to sort of change that design into a utilization based money market where you're sort of borrowing the option instead of paying it for the whole time and then trying to use fees from the aMm to offset it. But yeah, the simple answer is lots and lots of research happening in that field, but it's progressing slow because it is a very difficult problem to solve.
00:57:08.190 - 00:57:29.700, Speaker C: Thank you very much. So now maybe we're going to be over time, but I would love to hear what you think about. I guess me asking you a question is how do you see the future of Defi? What's the future of DeFi when it comes to LT? How do you imagine in addressing it?
00:57:30.230 - 00:58:25.202, Speaker B: Well, to me it's not really just about roll ups. I think roll ups are definitely a very strong solution. But in a lot of cases, if you consider something like wrapped BTC, right, wrapped BTC is a perfect example, even though it's centralized. So I won't go too much into that argument, but we've seen the need of chains also needing to cross communicate with each other. And I think we're kind of getting closer and closer to sort of having a chain cross communication protocol. So a way I always like to explain it is early days, pre Internet era, we had lands, you had local area networks where people connected to each other. And that was a protocol that all the pcs knew how to talk with each other.
00:58:25.202 - 00:59:00.320, Speaker B: And that's how you communicated, but that didn't go outside of that local network. And then you started getting wans and you started having a little bit more of a wider area that you could communicate maybe in a whole neighborhood or a city or something like that. But finally we got Internet infrastructure, and even that was slow. You started with dial up, moved on to ISDN, ADSL, and sort of moved up that way. But right now we're sort of at that lan stage still. I think l two s move us to kind of the wan stage, if I can call it that.
00:59:02.850 - 00:59:07.330, Speaker C: L two is opt in charting. That was the very good definition given to me by Georgios.
00:59:08.070 - 01:00:08.150, Speaker B: I like that one. I agree with that sentiment. Opt in sharding, because, yeah, you deposit, so you opt into the specific shard you want to communicate on. But my final sort of vision roadmap is some kind of real decentralized cross chain communication protocol. More so than just like wrapping assets, but ideally actually at a level where it's almost like tcp and all of these chains are talking that same language. I think we're very far away from that, probably decades, but sort of that's where it needs to get to, because the reason it needs to get there, and I like that opt in sharding because it's the same for other chains. If you move your assets to Solana now because you want to use serum, you're opting into that serum shard.
01:00:08.150 - 01:01:15.900, Speaker B: But I do think we're going to see, because ETh right now is just obviously super congested, there's just too much happening there. And the analogy there is just like a city. When the first city sort of starts, it very quickly gets incredibly overpopulated. And as that happens, people start moving out and they start establishing other cities around it. And we're starting to see that with asset sort of outflow from ETH onto other L2s or different chain solutions and these kinds of things, and then they'll establish sort of their own little ecosystems and communities and all of those things. I think Ux is probably the biggest probative at this point, and I think it's going to be a probative for a while, but eventually that's also going to be solved. It's going to get to a point where a website can inform something like metamask, what are you connecting to? Why are you connecting to it? What should you be connecting to? And then the user doesn't even have to select which one they're talking to.
01:01:15.900 - 01:02:17.818, Speaker B: The DAP can pre inform their wallet what they are talking to. And once you get to that, you've solved ux, you've solved cross chain asset transferability, and then you're kind of more at, I don't even want to limit this to Defi. Only defi sort of exists as the big product right now because DeFi is financial value and ethereum transaction is expensive. So you're only going to pay for something that expensive if the value you can get is more than what you're paying. And that's sort of why it's a very logical financial instrument area currently. But as we get more crosschain, as we get more roll ups, as we fix the UX thing, it's not going to matter what chain it's on or what the fees are. And you're going to start seeing a lot more other solutions.
01:02:17.818 - 01:03:31.206, Speaker B: You're going to see high privacy social networks, you're going to see communication apps, chat apps. You're going to see encrypted video calls happening. Because blockchain as an infrastructure and sort of as an encryption layer can be used to address a lot of the problems. An explanation I like to use there is sort of blockchain's adoption came from things like 2008 financial crisis and these kinds of things where people realized, oh, shit, if I don't actually control my funds and I leave it somewhere else, it's actually a big problem. That can mean I can lose everything. So they wanted to move to something where they own it. Now, if we fast forward to today and we start talking about censorship and privacy concerns and everything happening in big tech in America and that kind of stuff, or even something like the great China firewall, all of a sudden you're seeing that same sort of tipping point that happened in our financial space, but you're seeing it in terms of privacy and data ownership and these kinds of things.
01:03:31.206 - 01:04:08.610, Speaker B: And when that tipping point happens, the same sort of migration to blockchain is going to happen to me. It's a lot broader scope than just defi. And I think we're eventually going to get to a chain agnostic point. Everything's just going to communicate with everything. You might have a settlement layer, ef is a high security settlement layer. BTC is an even higher security settlement layer. And then everything else sort of talks around it, batches what they do and then settle that on the settlement layer.
01:04:08.610 - 01:04:35.580, Speaker B: Yeah, I think that's definitely sort of my decade worth vision for where this is all going. It's going there a lot slower than I would have liked, but that's the nature of tech, when someone asks you how long is it going to take? You're like, I can probably do that in 5 hours. And then four weeks later, you're still busy debugging stuff. So, yeah, it's maybe a little bit grandiose, but I think that's where we're moving towards.
01:04:35.950 - 01:05:31.214, Speaker C: Very interesting. I have this interesting question, and I guess it's also interesting we will answer it, too, to some extent. Currently on Ethereum derivative IMM are limited to the limitation of EVM. Especially option IMM are not optimal because computation variable like the portfolio delta of the liquidity pool is an unbounding computation. Do you see l two being able to solve this computational issue? So I will start, if you allow me, before I let you, on more of the financial aspect, that's actually a very good question. And Cairo enables you to make arbitrary long Monte Carlo simulation, or not arbitrary long, but to some extent, and prove it succinctly on layer one. So we do imagine people coming with interesting, hard computation that they want to prove on layer one.
01:05:31.214 - 01:05:34.960, Speaker C: And I guess, now that I say that, I'm sure, Andre, you have a lot to say about.
01:05:36.690 - 01:06:47.560, Speaker B: Agree. You know, it's just something like EVM, or, you know, it's, it's bounded in terms of computation. There's only so much you can do in a given gas limit. And then, especially if you start looking at the block size limit. It's the same reason we don't see high frequency trading on chain, because it's just too computationally expensive. But when you start looking at things like proving networks, and you start looking at things like ZK proofs, or even some of these other higher frequency, less decentralized networks, then you start increasing the amount of computation you can do, especially if you start moving it off chain. That's why, for example, something like limit orders right now doesn't work in an EVM based space, because something like a limit order needs a matching engine in the background, and that is a lot of computational power that has to happen to be able to accurately calculate what is my order book depth, how do my iceberg orders look, et cetera, et cetera, and then calculate that actual price.
01:06:47.560 - 01:07:18.400, Speaker B: Now, you can't do that on the EVM, but you can do that on a roll up or on a higher computational chain. There's a lot of sort of restrictions we currently have in terms of what we can do because of, let's call it computational restrictions. But those get alleviated when we start moving from eth as a computational layer, and instead as a settlement layer, of course.
01:07:19.970 - 01:07:34.290, Speaker A: Next question. Andre suggests a chain agnostic future. What about a bank putting 500 billion in bonds on chain? Will that bank see Ethereum's property rights as fungible with, for example, Salana?
01:07:37.130 - 01:08:17.442, Speaker B: So urine comes in the trade off. For something that's faster, you're going to sacrifice something nine out of ten times. That's decentralization. And that normally comes with certain security guarantees as well. This is sort of where the fat protocol thesis came in. For those that are not familiar with it, it's this basic theory that, let's say you have a chain, right? And this chain has, whatever, 100 validators, and it's a proof of stake system, and they're all staking a million dollars. So 100 validators, million dollars each.
01:08:17.442 - 01:09:29.514, Speaker B: So that means the security of the system is $100 million. But now you don't need $100 million because let's say it's BFT, so you need two thirds participation. So let's say you can control $66 million worth. Now, normally that's not worth it because you attack the chain with $66 million, and now what? But now if there was an asset on that chain, let's say Tevor existed on that chain and it was worth a billion dollars, now all of a sudden, spending 66 million to attack a billion starts making financial sense. Maybe Tevor is a bad example, but let's say there's a billion dollars worth of bitcoin, and I can control the chain and then stop all trades while I, like now, Ethereum already kind of disproved that, because Ethereum assets is already worth more than Ethereum. But at the same time, it's not like a single value thing. In that bond example, if a bank decides, let's do $5 billion worth of bonds, they're probably not going to do it even on Ethereum today.
01:09:29.514 - 01:10:36.862, Speaker B: Maybe, but the security guarantees there, it's still semi attackable. But you're definitely not going to do it on a chain whose security measure is like $10 million, because then you're just asking for that to get destroyed. There's a lot of sort of considerations between, what is it I'm trying to do? Like, if you're doing a chat app and you want encryption, then by all means go for a fast chain, go for a salana or a l two implementation or something like that. But if you want maximum maximum financial security, because you want to issue millions or billions of something, whether it be bonds or assets or capital backed securities, it doesn't matter, then you're going to go for the highest security. But at the same time, when you're doing that kind of financial value, you're not that concerned about things like transactional throughput or speed of. Let's. Let's take three chains as an example.
01:10:36.862 - 01:11:21.146, Speaker B: Let's say finance smart chain, let's say Ethereum and bitcoin. Like, if you were to move a trillion dollars and you want to be 100% sort of peace of mind on that, which one are you going to move it on? Personally, I'm going to choose bitcoin, because that's got the most financial value to secure that kind of settlement. Second would be Ethereum. Third would be BSc, because there's validators that can control what's happening there. So it's use case driven. Like any app, you decide what's the best tech stack to facilitate what that thing does. It's the same reason that in traditional technology, we don't just have one database.
01:11:21.146 - 01:11:45.540, Speaker B: There's Mongo, there's Redis, there's mysql, there's postgres. There's so many options because each one has different trade offs and benefits in terms of what you can accomplish with them. So you choose the correct stack for the thing you want to accomplish. I hope that answers the question. I know it was a little bit long winded, but it's important to understand security guarantees, know throughput and usability, and these kinds of.
01:11:46.230 - 01:11:47.038, Speaker C: Obviously.
01:11:47.224 - 01:12:21.840, Speaker A: So let's answer these two more questions, and then I think we'll let you, Andre, wrap it. Okay, so. Okay, let's read this question. How do you feel about having insurance and coverage in the crypto and defi space, with more and more moving parts being added every day? Insurance is one of the biggest aspects of finance right now, it seems. Sorry, I apologize. Right now, it seems DeFi is mostly bank and yield focused, but is the next big thing on chain insurance. Have seen tweets regarding it?
01:12:22.630 - 01:12:59.914, Speaker B: In my personal opinion, yes. So I'm heavily focused on insurance at this point, because we're going to start seeing more and more things go wrong. It's just the nature of bad events. If it can go wrong, it will go wrong, is a fairly accurate, generalized statement, and we're seeing more and more and more things sort of premise up. The problem with insurance, right. Is something bad has to happen for people to think about insurance. If everything's going well and everything is just happening as per plan, then people don't think about it.
01:12:59.914 - 01:13:53.610, Speaker B: You don't think about funeral insurance unless there was a near death experience or a death in the family or something like that. You don't think about car insurance unless you saw an accident or you were in an accident or something like that. A year ago, there weren't a lot of incidents, so insurance wasn't important. But we're seeing more and more incidents, which means insurance becomes more and more important. A big problem with insurance right now is two parts, really. Part one is capital efficiency. Why are you going to put $1,000 of USDC into backing an insurance claim that could be at risk at 8% APY, which is still a fantastic number, but you could be earning 105% on curve USD input.
01:13:53.610 - 01:14:57.758, Speaker B: So which one does the capital efficient person choose or a rather yield efficient person choose? So there's definitely a problem that needs to be solved in terms of sort of payoff versus risk. And then the other one, insurance right now, due to the nature of blockchain, because we don't really have stuff like debit orders that can trickle is, it's all designed to be upfront and upfront. If you had to go to your insurer now and you wanted life insurance for the rest of your life, and you are estimating you're going to live up to 90, and then they tell you, okay, well, this is the lump sum, please pay up front. Most of us aren't going to be able to afford that in a single sum, but on blockchain we do that. So it has to move to sort of money market based utilization ratios so that you can actually just sort of have a trickle against your values. So there's definitely still, let's call them ux problems to solve. These aren't really technical problems as much as they are just aligning it accurately.
01:14:57.758 - 01:15:20.220, Speaker B: But once we've solved those, yeah, I definitely think making it easily accessible and efficiently usable is the next big wave there. But right now it's super clunky. I don't blame people for not using insurance currently, but where on chain at least we're going to see a big boom in that.
01:15:21.150 - 01:16:16.186, Speaker C: Okay, so there is a last question. I'm going to take it because can you build a roll up on top of a roll up? So that's actually an interesting question. It depends on the roll up. So on an optimistic roll up, there is not really much sense to it, because in the sense that optimistic roll up is just about a sequencer gathering the data together and pushing your chain. So I mean, maybe I'm not aware of any interesting consequence of doing a roll up on top of a roll up, but in a ZK roll up, there is actually interesting consequence to it. First of all, using recursion, you can actually make it cheaper for the users of your second roll up to use the first roll up. And the second thing is, and something that no one actually talk about is that any roll up, ZK roll up.
01:16:16.186 - 01:17:22.334, Speaker C: Assume on chain data, and on chain data has an compressible cost of, to put it simple, 1000 gas. So we will see at some point a case where even on the ZK roll up or nifty stick roll up, I mean, this is true for ZK roll up and even more true for optimistic roll up. So I do think that in some near future we actually will have what in the context of roll up we call volition, where in the ZK roll up you can actually choose to have your data on chain or your data off chain. So in that context you could have a volition system running on top of another roll up. And in that context you would hide your data, basically make it cheaper for user to interact. I might have one last question to Andrea just before we summarize. Before he wraps it up, I would love to hear his thoughts about what was presented, more about in term of direction.
01:17:22.334 - 01:17:30.020, Speaker C: And from his perspective, you see other direction when it comes to l two. We'd love to hear a bit about this.
01:17:33.770 - 01:18:22.340, Speaker B: I don't think it's sort of a winner takes all scenario. Just like it wasn't with blockchains. Everyone always acted like it's Highlander. There can only be one. To me, there's a lot of different solutions that solve specific vertices, and we'll be seeing each solution gain its sort of own dapps and its own builders on top of it. I think now we're sort of still in that ideation phase where it's not yet ready to be used in that level. And sort of the people playing with it now are the pioneers, the trendsetters, the groundbreakers, whatever you want to call it.
01:18:22.340 - 01:19:13.486, Speaker B: And maybe this sort of ties into my closing thoughts as well. You know? You know, to me it's a lot about this space moves incredibly fast, like in terms of news, in terms of new ideas, in terms of just market pace, really. People always have this very. It should already be solved, almost expectation. The gas fees are now a problem. Why aren't we already on l two? Is almost sort of the mentality versus tech, and especially good tech takes time. It's a very long, arduous process with normally lots of reinventions and lots of things we have to rethink and replan.
01:19:13.486 - 01:19:45.390, Speaker B: And redo and often rewrite. To me, a lot of the stuff we're talking about is a five year, ten year, maybe optimistically three year timeline. But the expectation is it needs to be ready next week. And I worry a little bit about more about how we sort of align those expectations. But I mean, expectation management has always been a problem in tech. It's not a new problem we're having. I think it's just expedited.
01:19:45.390 - 01:20:46.100, Speaker B: But that being said, the future in terms of l two solutions definitely looks bright. Like from all the teams I'm involved in, it's a daily conversation about where's everyone going and how far is the research and who's being dedicated to those teams to sort of get into these areas. I don't think it's like a year ago the question was if it's going to happen, and I think now it's a question of when it's going to happen. So that's a very positive step. But I think there's still going to be a lot of hardship before we get there. But sort of the comfort I want to give users and builders is all of the people potentially listening is we are getting there. It's not going to happen as fast as most think, but it is going to happen.
01:20:46.100 - 01:21:26.750, Speaker B: People had frustrations on the early days of Internet. For anyone in this chat that remembers the frustration of waiting for a dial up website to load versus now you click on this thing and if it isn't there in 300 milliseconds, you almost rage quit. And that's a massive technological difference that happened over decades of improvements and we're doing the same. And the fact that we're on this call and we're talking about it means we are. And I actually hate using this phrase because it pisses me off when I see it online. But we are so ridiculously early still that there's so much more to come.
01:21:26.900 - 01:22:55.414, Speaker A: Terrific. Okay, we went overtime, but I think there's a lot of still interest. So I just want to sort of wrap up and say the reason we at Starquare are interested in basically doing this particular episode and drawing attention to l two is of course that soon anyone can sort of write your own amm or any other DFI application that you want on this framework that will become and evolve to be Starknet, that anyone can also run their own node l two that will have the ability to run any arbitrary logic with much lower gas cost. If you're asking yourself if I want to be number two on whatever list that was next on Telegram next year and replace Andre by being the DFI architect of l two. So you need to press this button down here, start learning Cairo so that you can build the quickest and fastest scalable start based l two. That will give you the lower gas fees and all the beautiful functionality that you need. Okay, I see.
01:22:55.414 - 01:23:08.320, Speaker A: Andre, you have here a marriage proposal and other things, but I think our time is up. So thank you very much, Louis. Thank you, Andre. And see you all next time.
01:23:08.850 - 01:23:10.300, Speaker B: Thank you. Appreciate it.
