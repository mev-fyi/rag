00:00:01.210 - 00:00:03.920, Speaker A: And that's it. Jane, please take it away.
00:00:05.170 - 00:00:05.678, Speaker B: Awesome.
00:00:05.764 - 00:00:45.020, Speaker C: Thank you so much. Hi everyone, I'm Jane. I'm one of the co founders and co project leads of Zkland, and today I am joined by my two other co founders, Brian, who is the other co project lead, as well as Jonathan. Our are. The purpose of this call for us today is really to be able to share a little bit of the milestones that we've been able to accomplish over the past few weeks, especially leading up to our testnet launch. So without further ado, three of us will be speaking across this presentation today. But let me just start us off with a bit of introductions around our product.
00:00:45.020 - 00:01:30.620, Speaker C: So I spent like 5 seconds on the slide. But for those of you who may not be aware, Zklend is actually a money market protocol built on Starknet. We have two products, Artemis, which is permissionless. So think of it as a permissionless lending protocol. Everyone can borrow and lend so long as they have a wallet. And the other part of our product is actually Apollo, and that is the institutional side of things where we are looking to offer under collateralized loans to institutions. So the story so far, right, we have been active in this space, on the Starknet space since early part of this year when there were still very few projects building.
00:01:30.620 - 00:02:45.166, Speaker C: And I would say we have been very impressed to see that originally on Starknet, there was this notion, page labeling how many projects were building on Starknet. And I think back in January there were maybe 20, and now there's over 200. So we've been very proud to see the evolution of the ecosystem. And we just want to point out a couple of things that we've worked on along the way to help grow the ecosystem and also become part of it. On the one hand, we've done a lot of in person events, which include sponsoring the Starknet Paris hackathon, the Stark Jungle mixer, which was, I think, the first Starknet party at Devconnect up through to the Starknet Hong Kong meetup, as well as the Starknet CC after party shooting starks, which we hosted alongside brick Chanel de Coyne astrally, as well as only dust would say, it's been a really great opportunity getting to meet some of you guys face to face. On the other part of it, which is the offline part, which obviously captures a bigger audience because we can't always meet in person. We've done a lot of educational work around educating our community.
00:02:45.166 - 00:03:44.018, Speaker C: What is Starknet? What is Argentx? What is account abstraction? How do you actually get started. And for us, what we really want to do is we want to bridge the gap between a really vibrant developer ecosystem with a community that's very excited, but may not necessarily know too much about Starknet. Great. So now that I've set the stage talking about Artemis a little bit more, this is basically a quick timeline leading us up to how we got to testnet and the road ahead. I won't drill into it because in the interest of time, but we are at the stage where we've just launched Testnet and looking ahead. We are looking to refine the product over the next one to two months and ultimately reach main net by the end of October, early November, hopefully aligning with the starknet performance optimization timeline. Great.
00:03:44.018 - 00:04:49.900, Speaker C: And so I just want to play one quick video to show you guys how the interface actually looks before passing it to John to talk a little bit more about technical features. Let me know if you guys can see it. Should be okay. So this is basically the dashboard page that shows you basically the types of assets that we support, as well as the process of actually supplying a specific asset, in which case Ethereum here onto the protocol. It's pretty standard. I would say the whole point of MVP is to show that the core smart contracts work and that the functionality around how we determine supply APY and borrow APY is based on the utilization of a certain pool, much like other money market protocols. So I'll let Brian talk a little bit more about how to get involved with testing out Testnet, but just wanted to give everyone a five second glimpse of how the protocol currently looks.
00:04:49.900 - 00:04:57.850, Speaker C: And so with that, let me pass it on to John to talk a little bit more about our technical features.
00:05:09.570 - 00:05:45.980, Speaker D: Yeah, okay, thanks, Jane. So I'm going to give a very high level, brief overview of how our system actually works. So sitting at the core of the Zklan system is obviously a dev smart contract. They are modular and work together to provide the lending and borrowing, all the functionalities that a money market protocol would provide. And at the core of the smart contracts is a contract called market. But the market contract actually implements all the core logic of borrowing and lending and everything. It also maintains the debt data within the system.
00:05:45.980 - 00:07:20.390, Speaker D: It's basically the entry point of the entire system in the sense that if you want to interact with the system, if you are a user, you want to supply and withdraw asset, you want to borrow funds or repay them, you want to liquidate someone's position, you have to interact with the market contract, and sitting on the side, there's also an adapter contract which is basically an oracle adapter that's actually oracle agnostic, meaning that you can actually feed any oracle, any type of upstream oracle and get prices from them and then those prices will be back into the market contract to price the collateral and your loss. Currently we are only using the improved rate network for our oracle data. We'll be adding more as more reliable oracles become available on Stopnet to actually improve the robustness of the entire system. There's also an interest rate model contract that provides basically the interest rates for each asset based on the parameters as well as the utilization ratio for specific asset. And there's also another important contract called z token. It's basically the deposit certificate for your asset supply into the protocol. Here we are taking a design very similar to Ave, as in this deposit certificate actually always exchange like one to one to the underlying asset.
00:07:20.390 - 00:08:21.514, Speaker D: So the balance of your z token sitting in your wallet will actually increase automatically over time simply because it is interest. And unlike the model, if you can buy a protocol compound where you have a fixed amount of certificate, the z token is actually going to be increasing over time. So you always get to see how much underlying token you can get just by looking at your wallet without actually looking at the exchange rates, et cetera. That's pretty much it. About the smart contracts. But then providing a good user experience is way more than just having a set of secure and robust smart contracts. You have to have a clean and good looking UI that shows important data that are meaningful and you have to show user historical data and aggregated data.
00:08:21.514 - 00:09:38.030, Speaker D: Those data are not available directly on chain. And so what we've done here is we've taken existing projects out there for subnet like Pathfinder and some other layer one projects and system like the graph. We make our modifications that make them work with Subnet and either way we want them to. For example, the graph protocol doesn't really support net natively, but then we make some modifications to both Pathfinder, basically the full node of net, and the graph protocol, which basically only supports EVM chains at the moment, and a few others, but not stopnet. We made our modifications to make them actually work so that events emitted from this blockchain contract cannot go through the pathfinder node and emit and stream into the graph. So that we can build an index of graphs that are specific to software. And then when a user interacts with DKlan, he opens up a page in the browser, he would make RPC calls to the node and they would also curate graphql data from the graph.
00:09:38.030 - 00:10:25.330, Speaker D: The difference is if you want to get the latest data, they are immediately available from the smart contract. You can just go to node, but if you want historical data, aggregated data, they are not necessarily immediately available in the on chain. You will have to use some sort of data investing and this is exactly what we are building here. I guess that's pretty much how the system works. We've done a lot of work here to improve, to actually building out the missing puzles for the system to work. And I want to talk about a little bit more about the open sourcing timeline. We are going to be open sourcing our smart contract when we are closer to our main net launch, and that's not going to be long.
00:10:25.330 - 00:11:55.758, Speaker D: We are scheduling our main net launch to be around October or November, depending on the regenerates of the Snotnet itself. But then when we actually get closer, we will certainly be opening up our code base for the smart contract so that everyone can take a look and actually see what's going on inside the system. But then before that, our smart contract code base will go through two audits independently by two auditing firms, one manual traditional audit by ABDk team and another formal verification audit by the Netherland team. And in terms of open sourcing of the other components, because we've been making our contributions to the ecosystem like the start is SDK for ROS, like some other libraries that are really useful for building different applications here, we've been making changes to the pathfinder and the graph portfolio to make them actually work with Startlift for indexing purposes. We've made these changes, but these are kind of like proof of concept internal only at the moment. But we recognize that this could be really useful to the wider developer community of the entire subnet. So we are actually planning to open source this past two in the near future when we actually get to organize the code a little bit more and make them more production ready, and that's probably when we actually be shipping those as well.
00:11:55.758 - 00:12:54.258, Speaker D: And I also want to give some thoughts on integration. So as a money market protocol, we understand that we really want people to actually build on top of our protocol, simply because lending and borrowing is one of the most fundamental infrastructure in any blockchain network. And we understand that a lot of protocols and a lot of useful products can actually be built upon robust lending and borrowing platform like Zklan. So we will be opening up documentations about how to interact with our smart contracts and introduction to each part of smart contracts and the interfaces. Those will be properly documented and it should be really easy to actually just connect your platform onto CA. And with that I want to pass it to Brian to talk about the rest of the stuff.
00:12:54.344 - 00:14:19.390, Speaker E: Thank you. Thank you John. So on top of what John has already discussed in terms of we will be expanding our features on price oracles, getting more validators, getting more sources, as well as streamlining our liquidation process, there are a few features that we are actually going to build a little bit more from current testnet to Mainnet. So one of the key features would be adding a asseteering and also isolated borrowing modes so that we can include different assets and using them for different purposes, for example just for collateral or for ordinary lending and borrowing, so that we can have risk isolation between different assets and being able to bring on starting native protocols tokens as soon as we can. And also some of the other features include orboros distribution, rewards for send tokens, flash loans, and also permissionless liquidation with a flexible close factor in terms of how much we actually liquidate for each time they actually go over the collateralization ratio. So these are all features that we are going to be building in this iteration and expecting it to be completed by the main net version coming out. And the next thing that I want to talk about is in terms of ecosystem partners.
00:14:19.390 - 00:15:55.774, Speaker E: Throughout the past couple of weeks, past couple of months, in fact, we have been in in depth discussion, ongoing discussion with a lot of the other DeFi protocols as well as Gamefi protocols on the ecosystem and some of the key initial ecosystem partners that we are able to just give me one quick second. So some of the key ecosystem partners that we will integrate in terms of the DeFi for DeFi side will be for example, Yagi Finance, CKX curve zero, magneti for U aggregator, derivative buildings, perpetual building, fixed rate swaps as well as asset management protocols. And because Starnet is coming out to become an ecosystem where games on chain games are building. So we also want to support that and build an isolated pools for gamefi and game tokens, NFTs, et cetera. This would likely be a more long term shot for us. It's not going to be in the next iteration, but what we want to do is we want to ultimately support some of the gaming tokens and also some of the gaming NFTs where the economics of the borrowing and lending would be a more profit sharing mechanism for players and owners of the NFTs or owners of the for example, new realms where they may have certain land and then they can invite others to play for it and gain resources and have the profit split and we will be the platform that's enabling it.
00:15:55.892 - 00:16:00.880, Speaker A: Brian, sorry to you people on discord are not able to hear you from what I see.
00:16:01.730 - 00:16:03.680, Speaker E: Okay, just give me 1 second.
00:16:06.290 - 00:16:07.082, Speaker A: Just upload.
00:16:07.146 - 00:16:08.000, Speaker F: This is better.
00:16:12.450 - 00:17:16.790, Speaker E: I hope that. I hope this is better. All right, so just to repeat, so for ecosystem partners we have for example the likes of Yagi Finance, CKX Curve Zero mid 90 and Rgenx full helping us on the front end integrations and bolting on with their capabilities in terms of assets management, yield aggregator, derivative buildings and also fixed rate loans. And for gamesfi side, our angle is to look into it and helping to facilitate the borrowing, lending or the leasing of ongame nfts where players and owners of the nfts would be able to share profits through our platform under the isolated pools. To be able to enjoy the maximum economies in terms of owners and players of the game and for wrapping up the presentation. Just want to highlight the key milestone ahead of us. Currently we are on track.
00:17:16.790 - 00:18:37.306, Speaker E: Our testnet just launched in Q three 2022 with Uiux still improvement. Our next goal is to have the Q is to have the Artemis main net launching in Q four 2022 and have the pre mining and staking rewards and distribution rewards all bolted on at the same time. For Q one 2023 next year and the middle of next year, we will be focusing on the second part of our protocol, which is Apollo for institutional users and that's going to be the permission letting protocol side. And for that one we will be talking with institutional partners to secure launch partners with us and being able to open specific borrowing pools for these institutional partners and having actual use cases on the get go. At this stage I would like to take a pause and see if there are any questions from Leran, from your side or any of the audience. And just to add on to Jane's point earlier, currently we are opening our testnet to committees first, and then also our committee members and then investors. And then later on we will have our integration partners to test out the protocol.
00:18:37.306 - 00:18:59.990, Speaker E: But for all other developers or ecosystem partners that are interested to trying it out, feel free to reach out to us on Twitter, our CK land account and then send us a DM and then we'll be able to grant you access to Testnet and then to share us any feedback or any thoughts you have or any integrations ideas we're happy to discuss anytime.
00:19:05.640 - 00:19:06.052, Speaker B: Great.
00:19:06.106 - 00:19:52.930, Speaker A: Thank you Brian. I actually wanted to double click on this gaming for this gaming vertical for ZK lend this is new to me. It sounds super, super interesting. And perhaps, I'm not sure what people on Discord missed when you were originally discussing this, but perhaps let me ask it from the perspective of a game developer building on Starconnect today. I know this is a long term vision for you. What are the concrete proposals here? So I'm developing a game I have in game assets, stuff like pricing of assets. How is that going to work? Liquidation, et cetera? Can you share more information there?
00:19:53.400 - 00:20:34.240, Speaker E: Sure. Of course. I think for gaming nfts and also gaming tokens to be priced accurately, this one actually, in terms of our pricing protocol, we don't have a readily available solution just yet. But I think what we can bolt on on the backside would be including a much more aggressive collateralization factor so that we are able to protect ourselves and also the borrower in that sense and the way we actually look into it. It's not so much a borrowing lending market, but more so like a leasing market. So what it means, how it's differ. It's for example, the owner of the NFT.
00:20:34.240 - 00:21:59.720, Speaker E: What they do is basically, they might essentially still holding on to the actual ownership of it. So this one, the borrower of it would be able to access the NFT or the gaming assets and be able to utilize it or use it for the given time period. And there might not be actual interest that's being accumulated on the NFT itself or the borrower assets, but there might be a mechanism of, for example, rewards being accumulated for using it during that time period, and that will be shared according to a set percentage between the owner of the assets and the borrower of the assets. So I think for us, there's still quite a bit of moving piece in terms of how we move forward. And one way of doing it, I think, is to move along, elaborate with some of the service provider like brick, in terms of how they manage the 1155 and how they're able to build assets with different unit blocks. And also in terms of the gaming dynamics, how we actually do department sharing. And so this would still be a lot more in depth discussion, but this is kind of the vertical we want to explore and how we envision ourselves doing to be participating in this manner.
00:22:02.510 - 00:22:36.230, Speaker A: Thanks for sharing that, Brian. I think you have an echo in discord. So on discord you can make sure that your output volume is set to zero. That will stop. The more I'm looking on YouTube and discord, and I don't see any questions for the Zklin team. I just want to end with one much more high level question for a developer starting on the starknet ecosystem today. What advice do you have for them in terms of learning Cairo, learning about the infrastructure, learning about the ecosystem, et Cetera?
00:22:41.140 - 00:23:25.996, Speaker D: I guess I would take this. So my sense is for developers starting Cairo and startner in general. I mean, we're still super early. The ecosystem is still very raw. I would say a lot of recent pieces, we actually already mentioned that we are actually building indexing solutions based on the graph protocol and et cetera, et cetera. I think there are actually a ton of building opportunities for the stopnet simply because there are a lot of, I would say, like design decisions that were made to specifically strike for efficiency. That's really what's breaking a lot of compatibility with existing tooling.
00:23:25.996 - 00:24:20.092, Speaker D: And as a result, I guess there's a kind of building opportunity here and there for different parts of the department pipeline. For example, you cannot use hardhead, you can use it with a plugin, but firehead isn't available itself. A lot of other things are still missing. I guess the best way to actually get started is to somehow identify, I mean, after you learn the basis, of course from the official website or the tutorials, I guess the best way to actually level up yourself to a level that you can actually write production level code would be to actually pick something that's missing in the ecosystem and try to build something for it. And that's really just the mentality we have been having at CKN. When we first started, there was no rust SDK. We wanted to use Rust because we like the language and we build the SDK.
00:24:20.092 - 00:25:09.100, Speaker D: We have all indexing solutions that robust and mature. We build the startlet support into the graph. I guess that's the mentality that I guess that really benefit a lot of the newcomers. You just have to pick something that hasn't been built yet, and then you try to actually build that. And in the process you will learn a lot of the inner workings of the network, of the compiler, of the language itself. You get to learn a lot of the low level details that are not going to be available to you if you simply read through the documentation or just from some tutorials and stuff, or even reading someone else's code. So I guess having some experience actually building something useful will be really beneficial for personal growth if you're a developer.
00:25:09.100 - 00:25:37.820, Speaker D: And that's also going to be very beneficial for the ecosystem as well, because others can simply use your work to simplify their workflow and et cetera. I think that's really just a win situation. And I guess that's really a very good way to level up yourself after you've passed that very beginner level by reading some tutorials and stuff that are quite readily available nowadays.
00:25:39.280 - 00:26:09.380, Speaker A: Thanks, Jonathan. I would echo that. I think if you see something lacking in the ecosystem or the infrastructure, go build it yourself. And we really take pride in having such a strong community who does exactly that. Ok, I think at this point we'll move over to Gregory who will be demonstrating his hackathon winning project Burner Wallet. For those listening on the discord, we have a voice only channel, so the only way you can see the demo is via the YouTube link. I post that YouTube link in the community calls channel in the server.
00:26:09.380 - 00:26:13.320, Speaker A: You're welcome to join there and watch.
00:26:13.390 - 00:26:15.656, Speaker F: The screen share over there.
00:26:15.758 - 00:26:18.040, Speaker A: With that, I will turn to Gregory.
00:26:18.780 - 00:26:19.530, Speaker B: Yeah.
00:26:19.900 - 00:26:22.570, Speaker F: Hi, do you hear me? Do you see my screen?
00:26:25.040 - 00:26:26.620, Speaker A: We see your screen, yes.
00:26:26.770 - 00:26:36.168, Speaker F: I don't think you mean discord. I don't have the permission to. On discord.
00:26:36.344 - 00:26:43.200, Speaker A: Really? Let me get you on to the stage on Discord.
00:26:45.540 - 00:26:47.040, Speaker B: There we go, Gregory.
00:26:49.880 - 00:27:47.430, Speaker F: Okay, that should be good. I'm sorry, I've left the headset, so I'll try to do my best. To be clear, I'm sorry for the people in discord, but again, I'll try to describe what I'll be doing. So in a nutshell, I think that was three weeks ago, the Paris Akaton from encode. And when we onboarded the Akaton, we were thinking about doing something that was useful for us first and after for the community. So we thought that because there was the idea that we could do a lot of things with the abstract account. So I won't dig too much into what it is, but obviously I guess everyone knows about it now.
00:27:47.430 - 00:29:00.488, Speaker F: We wanted to have something not only that we could use, but for ourselves, but also for everyone to use. And the reason is not because it's that hard to use, because I guess we've managed to do it so everyone that has some skills with Javascript and other languages can do it, but also because if we want to do it in a proper way, that would be good that everybody share it and that we can have it as part of a common good for everyone to use it. And also because we are playing with the account, I think at some point it would be good for everyone that the product is actually safe and audited. So that was the basic idea, to have a tool where we could interact with the account. That wouldn't be the wallet by itself, but that would complement the wallet and that we could do stuff like that from any wallet that is actually working right now. So that would mean, obviously Bravos and Openziprine and Argentex. So we started with Argentex.
00:29:00.488 - 00:30:01.664, Speaker F: And one of the reasons is because they have already provided everything we needed to do that, especially they provide a way to add a plugin to the account. And we went from there and the flow is not that complex. I'll explain it, but I think it imposed a bunch of different working areas, so we have to have different components. So we won the akathon. Obviously it was the luck. I think the reason we won wasn't probably because we were the best project, because there were awesome projects, a lot of very good people, and it was fun, but probably because at some point it meets some things for the community. I think from that what we think is we should go to the end of it.
00:30:01.664 - 00:31:16.340, Speaker F: So since then, basically we started the project from scratch, a bunch of reasons, but one is that we wanted the project to be very simple, so that everyone that is a web developer that doesn't know about the blockchain for instance, and from Stacknet could use it easily. It's not fully done, but we've put it as an open source. It's available on GitHub, on burner. So if you want to go and start it, and we've published it right now on NPM. So basically what I'll be showing you is first how we use it as a developer, how easy it will be for the people to add such a feature to their app. And what would be the benefit? And also it will enable me to explain how it works, right, because it provides a bunch of features that doesn't come right out of the box from the wallet itself. So from the extension.
00:31:16.340 - 00:32:28.944, Speaker F: But for instance, you could do things like pre sign a bunch of transactions, say, okay, I will play a game, I'm okay for the app to run some transaction on the specific account for a period of time so I can auto run the transactions behind the scene. And also it could be something longer where I could say I send a token to someone to let him maybe take ten boxes from my account every month or something like that, where you can actually have a granular way of looking, I think. And also I think it would be very useful for the people working with Devnet. If you are a developer, you don't want, every time you click on a button, have to go to the wallet and click on it. So this is another use case where the people will use it very easily. So basically what I have right now is an app. It's basically done, but it's not connecting to any wallet right now.
00:32:28.944 - 00:33:23.320, Speaker F: So what I'll show you is how I'll do the connection. So I have the visual studio here and with my app. So it's a react app but it doesn't have to be. The wallet is actually written in vanilla Javascript so we could easily add it to anything. And in the app I have the index page, right? And in the index page for now I'm putting a button that I've called the burner and this button is actually not plugged to anything. I'll try to find the button. It should be in the lib, in the components.
00:33:23.320 - 00:33:57.000, Speaker F: Yeah that's where it is. And for now it's a react button. It has nothing in it. So what I'll do, I'll go to NPM and I'll install the. So first thing first I need to search for the wallet. So you'll find it's, it's even not alpha I'd say because it's not working on some areas, but I'll explain how but don't worry. So I'll go to NPM.
00:34:00.560 - 00:34:01.116, Speaker B: And I'll.
00:34:01.138 - 00:34:44.120, Speaker F: Search for Stacknet burner you find. So that was obvious. That's the project. You have the link to the repository and you also have the command. So you can just copy paste the command in the project. So I'll stop it. I will run NPM, install Stacknet burner, it will do the installation for me.
00:34:44.120 - 00:36:04.908, Speaker F: So I'm done. In the meantime I'll show you how we start it. I restart the app, I'll show you. So currently, like I said, it has nothing in it, but still the way you can interact with a wallet usually is by having the components or importing the component. Like if you want to use a stacknet react then you will import a component and if you want to interact with another wallet then the wallet provide an interface in the window property. So for instance if you do that, if you run Windows tapnet and you have Argentex installed, it will show you that actually the different properties for the account and so on. So you can enable the connection by using that, right.
00:36:04.908 - 00:37:19.412, Speaker F: And right now I don't have the burner set up, so if I run stacknet burner on the, there is nothing showing up or there shouldn't be hopefully. Yeah, so it's not defined, right. So what I'll do now I'll just enable the wallet. So I run the import, right? I'll just import the wallet from the stacknet burner and I put the function that actually discover the wallet. And that's the magic, right? It's just that by importing the wallet and using the function, it will discover a tag inside the app and it will inject a button. And if I look at in there, look at the stocknet burner, then I already have the interface, the same interface that Argentex is providing, so that anyone with Stacknet JS or with Stacknet react can use it and directly access it. And so that's as easy as that.
00:37:19.412 - 00:38:12.500, Speaker F: And hopefully we will make it even easier with different options and we will integrate it with different libraries. Okay, so how it works now. So by doing that wallet, by adding the burner, what I've done is just adding a button. And when I click on the button, I got a session key that is generated and I get a connection to validate the session key. The way we do that is by providing the URL. We could change that later, but I'll provide the URL and we have another app where you basically manage your application. This app we've called drone does a bunch of things.
00:38:12.500 - 00:39:01.864, Speaker F: And the reason why we do that is because we need to actually have some specific things into the account. So right now it's working with Argentex. If I connect to my argent, you see that the account is actually saying that it requires some upgrades. And the reason for that is because I've patched the account so I can upgrade from there. The account, in that case I can downgrade it and I can also add the plugin to it. And so the account right now has to be upgraded at some point. I guess the account providers like Argentech, they will provide it out of the box and we'll just have to add the plugin.
00:39:01.864 - 00:39:36.216, Speaker F: There are currently some discussion about that. So once we've done that, we can just sign the key. And here what I'm doing is giving an authorization that match the request from a hub. So I can add a bunch of things like the timing, the contract that I want to limit the access to and so on. And the goal is to have something standard. So I just sign it. And by signing it, it provides me with the ability to use the app.
00:39:36.216 - 00:39:38.810, Speaker F: So then I just load the.
00:39:42.850 - 00:39:43.306, Speaker B: I'm.
00:39:43.338 - 00:40:23.334, Speaker F: Loading the token, the token. You can access it if you have registered, if you have tried, you can easily access it, but you cannot do anything with that because you don't have my primary, my key. So now I just can run transactions. So I just provide an account, run something, and I can send tokens to anyone, assuming I know the address, and so on. So it's just a demo for now, but that's the basic guy. So I'm done with the demo. Hopefully it's clear for all the people that were looking at it.
00:40:23.334 - 00:41:14.282, Speaker F: But okay, now to maybe conclude, I'll stop sharing my screen and I'll conclude the sharing. Now we are currently finishing to polish the interface so that anyone can use it. And by the end of the month we'll have it. And probably, hopefully we'll have a bunch of hapa using it. And also we'll be able to improve the interactions because right now, for instance, you are using a QR code, which is maybe not that obvious. And also currently it's using argent. Maybe we could do the same with an account that could be owned by someone else.
00:41:14.282 - 00:41:55.026, Speaker F: So that's basically the idea. And then once we've done that, the idea would be to have it audited so that we know it's secured and we can continue on that and leave it to the community. Right. Hopefully what we'd like to have is people being involved. I think there are many ways to improve things, especially with different scenarios. So for instance, right now it's using the station key, but we could use other keys like the secure cloud on the iPhone or on the Android. And also we could use a separate account, that is the account for open zipline.
00:41:55.026 - 00:42:20.020, Speaker F: So it could be not my account, but the account from someone else, so I can get some access to that. And also, like I said, there are bunch of things to work around the experience, how you can make it smooth and make it more secure. So that's basically it, right? Hopefully it will be integrated in your tool soon.
00:42:22.070 - 00:42:25.460, Speaker A: So if people want to contribute, what is the best way to do that?
00:42:26.550 - 00:42:26.914, Speaker B: Yeah.
00:42:26.952 - 00:43:09.200, Speaker F: So for now we are working, the two of us, the technical team, on it, but it's open, right? So I was planning maybe to open a channel on your discord. I don't know if it makes sense, but at least right now you can go to don't panic dow, right? You don't panicburner wallet. Stacknetburner. Sorry, I shouldn't say wallet because it's not really a wallet, it's more like a companion to the wallet. Because you need a wallet to manage your account, right? To install the account and do stuff like that. And we have no plan to work to build a wallet. It's a different story.
00:43:09.200 - 00:43:39.322, Speaker F: It's just some experiment to that. So if you want, you can go there, you'll see the issues. You can definitely look at the code. There is a directory that tries to explain the design of the tool. What we've learned. Also right now we don't have a clear documentation to install it, but it's some sort of things that people can do. If you really want to contribute, I think the best way would be to use it in your app.
00:43:39.322 - 00:44:32.700, Speaker F: So I wouldn't say this week, but maybe starting next week say, okay, I want to do that, then contact us and maybe open an issue if we don't have the channel yet. And then we'll help, we'll use it ourselves. Because primarily it wasn't the goal to develop this project, but that's awesome. And also it's a good project to start because it has to deal with interacting with the protocol. Because we have to rewrite all the protocol, right, the protocol or not rewrite it because we'll use Stacknet GS. But at least, yes, we have to trick things because we have to add some specific instruction inside the payload to make sure that the account is aware that it's interacting not just with the account, but with the plugin of the account. So that's it.
00:44:32.700 - 00:44:49.620, Speaker F: Very happy. Not too many of you, obviously, but yeah, I'll be happy to do that. And I'll say that again, if you really want to contribute. I think a good way to contribute is start by starting the project. And that would be nice.
00:44:54.150 - 00:44:54.898, Speaker B: Thank you.
00:44:54.984 - 00:45:03.700, Speaker A: And maybe just a technical question to end. How does this differ from the burner wallet that Austin Griffith famously developed for?
00:45:05.270 - 00:45:30.622, Speaker F: Yeah, so that's a good question. So first of all, it was largely inspired by Austin. I love the guy. What he has done is awesome for the whole community, for the term community. And I know that a lot of project actually takes the inspiration from what he does. It's a big thing from him. Now it's very different because it's not an account.
00:45:30.622 - 00:46:03.446, Speaker F: So there too is really an account where they have, because that's an external account. Right. In the case of Ethereum. So you have the key in it and you deal everything with that. In that case, it's very different. It's more like you have a credit card and you want to create some sort of a credit card for a specific purpose, for a period of time, do something like that and give it to someone else. So we are not really managing the account, we are just providing a tool to do stuff with the account.
00:46:03.446 - 00:46:48.262, Speaker F: Right. And we don't want to do that. Maybe at some point it would make some sense to deploy an account, but it would be, for instance, on the Devnet, we were thinking about it. So it's very different because it's not a wallet per se. The wallet is more like the Argentex or the Bravo thing where we are, let's call it a burner, something that comes, that collaborate with the account. And by the way, you have right now, at least with the session key, you have to sign the request with your real account extension, the Argentine. Does that make sense? I don't know if that makes sense.
00:46:48.396 - 00:46:49.080, Speaker B: Yeah.
00:46:53.230 - 00:47:03.740, Speaker F: Hopefully. I don't know. It's your choice, but everyone's choice. But I think it has more potential because of the upside account.
00:47:11.250 - 00:47:19.300, Speaker A: And then one question while I was getting ready to transition to Ariel, what do you do besides this project? What are you working on? How do you keep.
00:47:20.390 - 00:47:57.922, Speaker F: So first, the two of us that are technical people working on the project, we are really new to Stucknet, so we are learning, right. I'd say, if I want to be honest with Stacknet. So it's an awesome opportunity to learn. And we wanted to work on, not only wanted, but we've started to work on the social network. I think there are a bunch of things to experiment, but it will be a very different area. And so we are building on that. And there is someone in our team that is working on that right now.
00:47:57.922 - 00:48:43.902, Speaker F: And we are doing stuff that are not directly related with the blockchain because we have to index things and so on. And also I'd say I'm really involved with cartridge too, because I like the company and I like the guys there. So we are doing stuff around that. And hopefully it was like a summer internship for us somehow. Right? Because as you can guess, I don't have the profile from the people in the akathon, but yeah, learned a lot. And hopefully in September I'll continue. Very happy to be in the place.
00:48:43.902 - 00:48:47.134, Speaker F: And like you said in the beginning, I said, awesome community.
00:48:47.252 - 00:48:49.360, Speaker B: So very good.
00:48:50.130 - 00:48:50.446, Speaker F: Great.
00:48:50.468 - 00:49:10.966, Speaker A: I think you've chosen right, community. Yeah, a bit biased. Okay, so Ariel and Tom are joining the Starknet pms. I just want to make sure that they're set up on Discord and YouTube separately. So Ariel and Tom, you need to make sure that on Discord your output is set to zero.
00:49:11.148 - 00:49:14.890, Speaker B: Yeah, I'm deafened and muted on Discord.
00:49:16.910 - 00:49:21.020, Speaker A: So your input needs to be greater than zero so people can hear you.
00:49:22.190 - 00:49:27.120, Speaker B: Okay, so I should unmute, but do what?
00:49:27.730 - 00:49:34.430, Speaker A: If you go to voice settings, click on the voice settings, you see input volume and output volume.
00:49:35.570 - 00:49:36.394, Speaker B: Output volume.
00:49:36.442 - 00:49:40.160, Speaker A: Can go to zero while input volume is a bit slightly greater than zero.
00:49:42.950 - 00:49:51.574, Speaker B: Can you hear me? Yeah, I set the output volume to zero and I can probably be held on. Yeah, great.
00:49:51.612 - 00:49:56.760, Speaker A: Tom, we can't hear you on Discord because I can't see you in the call.
00:49:59.130 - 00:50:02.554, Speaker B: There we go. Can you hear me? Can hear you.
00:50:02.592 - 00:50:03.180, Speaker A: Great.
00:50:03.710 - 00:50:15.690, Speaker B: Ok, good. Hi everyone, how are you? I mean, you can't answer, so I hope everything is see.
00:50:15.840 - 00:50:27.870, Speaker A: Yeah, after you, Tom. We just end the call. I think the community wanted a bit of an update on Starknet roadmap Sierra announcement that happened in Paris et.
00:50:29.970 - 00:51:28.162, Speaker B: Sure. So yeah, I think the closest milestone is the release of the next version, zero point ten, which is planned to be at the end of this month. We are aiming to release it on integration by the 22 August and hopefully a week after to upgrade Garly and if everything goes according to plan, a week after that also update the main net. Right. So this is like the closest milestone and I think the biggest change you can see, Ariel created a very nice document, specifies what are the changes. You can find it in the Starknet versions announcement channel. But basically this is the first step toward the account structure that Starknet will have.
00:51:28.296 - 00:51:38.280, Speaker A: Tom, just the community saying a big echo on Discord from you, just making sure that your output is set to zero.
00:51:40.810 - 00:51:43.526, Speaker B: My output is set to zero and I'm also with headphones.
00:51:43.638 - 00:51:52.460, Speaker A: Okay, great. Everyone's saying it's much better now. Yes, now it's good. Ok, Ariel, you've been removed from the stage because of these issues.
00:51:53.790 - 00:51:54.540, Speaker F: Good.
00:51:56.050 - 00:51:57.440, Speaker A: Okay, Tom, continue.
00:51:59.650 - 00:52:55.326, Speaker B: Yes, so as I've said, we will have basically a new structure to the accounts. We will add nons to the protocol. All of those efforts are basically aimed to allow us to maintain account abstraction while still preventing those attacks on the sequencers which were possible in the way the things are today. So this is putting a bit more structure into the abstraction in a way that hopefully will still allow developers to create great things, but will prevent those attacks to the signature. So this is the first change. We also had fees for messages from L one, which was something that up until today was completely subsidized. So now we have a fee mechanism for that.
00:52:55.326 - 00:53:38.160, Speaker B: And there are also some few small changes. You will be able to see them all in the release notes now going forward. Okay. And also maybe the biggest feature that I didn't mention is that finally we'll have the first version of parallelization. Right? Basically the sequencer will we implemented in the sequencer the first version of optimistic parallelization. Hopefully we'll see nice improvements in the throughput. I don't want to throw estimations, but let's wait two weeks and see.
00:53:38.160 - 00:55:06.010, Speaker B: Yes, and if we look at what will happen from today till the end of the year. So basically our two, three biggest things that are about to happen are probably there are more, but let's say part of the big things that are about to happen are we will spend most of our engineering effort on improving the performance of the sequencer. This means rewriting it in rust, all the stack, and also integrating with the Cairo VM which is implemented in rust, which we expect huge performance improvement due to that. Then the first formal release of Cairo, Cairo 0.1.0 will be released hopefully in the upcoming few months. You can see the great lecture from Shakao from Starknet CC. Maybe we can link to it, but basically it's a proper rewrite of the compiler that will allow us to finally answer many of the requests that developers have for features in the language.
00:55:06.010 - 00:55:57.420, Speaker B: And also it will allow us to have what is called Sierra, which I don't think I have a lot of time to explain. So maybe we should have a dedicated communical to it. But basically it's a way for starknet to ensure that all transactions can be proven and by that have many of the features that we want to have, such as gas metering, forced l one transactions and many more. And the last thing is that we are preparing towards the regenerates which we are aiming to have at the end of the year. So those are like the big milestones in the upcoming month.
00:56:01.240 - 00:56:19.370, Speaker A: Sounds great Tom. So I think I'm not seeing any questions on the communication channels. I think the next step is definitely to have a dedicated call just for the Cairo upgrades and the Regenesis and Sierra and all these things that are happening with due time. We will do that.
00:56:24.670 - 00:56:25.082, Speaker B: Great.
00:56:25.136 - 00:56:34.480, Speaker A: So we'll link to Shah's talk from ECC about that in discord and I think that concludes today's community call.
00:56:35.570 - 00:56:36.734, Speaker B: Thank you very much.
00:56:36.852 - 00:56:44.830, Speaker A: Thank you to everyone for attending. We can take more questions in the discord offline.
00:56:46.570 - 00:56:49.970, Speaker B: Bye, have a great day. Bye.
