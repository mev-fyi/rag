00:00:04.420 - 00:01:04.722, Speaker A: Good morning. Okay, so as Louis mentioned, my name is Lavie and I'm the co founder of Bravos. Bravos is a smart contract based wallet on Starknet. And today the topic of my talk is account abstraction, security pyramid. But before we dive into the technical details, I want to take a wider view and talk about ux, and especially uex in the context of security. Because at Bravos we believe that security should not be solely measured by the resilience to attacks, but also on the ease of user adoption and level of protection against, you know, in crypto we do not do a very good job at that. Current crypto experience is way too complicated.
00:01:04.722 - 00:01:51.670, Speaker A: It puts a lot of burden on the user shoulders. It forces users to understand all sorts of complex technical issues. And that's why people default to centralized solutions like FTX, Celsius, Blockfi, and we all know how that ends. It's not good, but this is on us. This is on us as an industry to provide better solutions, better security solutions and better authentication solutions. And when we are talking about authentications, we have mainly three authentication types. The first type is something you know, it's usually a text password.
00:01:51.670 - 00:02:21.474, Speaker A: The second type is something you have, a physical device could be your mobile phone. And the third type is something you are. Something you are is a biometric id. It could be your fingerprint, your face id, your retina. And a good security is considered to combine at least two of these three above. But unfortunately in crypto we mostly use one. And not only that, we use one, we use the weakest one.
00:02:21.474 - 00:03:04.970, Speaker A: We use only something you know, only a text password. But luckily we have Starknet and we can leverage starknet in order to change that. Now, Starknet has two main key features. One is it has very low gas fees, or at least it will have very low gas fees. And very low gas fees allows us to do things in terms of mass computation which are economically not viable on layer one. That's critical, and you will see that in a second. And the second thing is, we have account abstraction baked into the protocol.
00:03:04.970 - 00:04:07.730, Speaker A: Now, I know that there is a lot of talk about account abstraction, so I don't want to repeat too much. But just for people who are not that familiar about account obstruction or smart contract based wallet, which sometimes used interchangeably, you can think about account obstruction as taking your account and having two parts of your account. The first part is the application part which shows data to the user and mainly signed transaction. And the second part is an account smart contract that receive these transactions and can do whatever it wants. With that it can run any logic it wants. It can run custom verification logic on the signature that it receives from the app. It can run arbitrary execution logic, and then if it wants, it can decide to send it onwards on chain to interact with other smart contract.
00:04:07.730 - 00:05:00.590, Speaker A: And that's very powerful because think of it, it's like a playground. We can do whatever we want, we can program whatever we want into an account, and this allows us to do some very cool things. And then that brings me to what we call at Bravos, the account abstraction security pyramid. So if you see here, we have a security hierarchy, you can think of that as security measures that a user can decide to opt into. And as we go up the pyramid, the security becomes stronger and stronger. So at the most basic level, we have what we call the seed phrase signer. This is a key that is derived from the seed phrase.
00:05:00.590 - 00:05:47.246, Speaker A: It's the notorious twelve worlds, or 24 words that we all know and don't love so much. On top of that, we have something that we call the protected signer. The protected signer uses your mobile device trusted execution environment in order to offer two factor authentication, something I have and something I am. On top of that we add additional signer. So we now have multi signer. And this means that I need two signatures in order to have a transaction to go through to the chain. On top of that we have a hardware signer which uses a stronger security premise on the mobile device.
00:05:47.246 - 00:06:48.530, Speaker A: And at the very top we have the hardware multisigner, which combines the hardware signer and the multisigner for indeed a premium security. And I will dive into each of those in order to explain. But I would like to start with the hardware signer, although it's not at the very bottom or at the very top, because I think that the hardwall signer presents a great combination of security and ux. It gives users the experience that they are used to from classical web. Two solutions without friction and with maximum security. So what is the hardware signer? The idea behind hardware signer is to use the internal hardware security model that we have on advanced mobile devices. This security model is a dedicated isolated subsystem, meaning it's not part of the application processor, it's a totally different module, different silicon, in order to secure our account contract.
00:06:48.530 - 00:07:29.934, Speaker A: And once we will enable that, once we will enable the hardware signer, only the security model. The hardware security model can sign transaction getting authenticated by the user face or by the user fingerprint. And only then they will be able to be sent to the chain. So how does it work? Basically, the wallet application verifies that the user device supports this hardware security chip. As I said, not all device supports that. The user can decide to add the hardware signer either to an existing account or to a new account. Then a key is generated.
00:07:29.934 - 00:08:50.686, Speaker A: A key pair is generated in the hardware security model which is dedicated to this account. Now the key thing here is the private key never leaves the huddle security model. It means that the private key is unknown to anyone, it is unknown to the application, it is unknown to the operating system, it is unknown to the user. Meaning even if the user is naive and want to give his private key to an attacker, they won't be able to do that. And once the wallet sets the halball signer as the main key of the account, only transactions signed by the halball signer will go through to the account contract, and the account smart contract will verify those transactions that they are indeed correct. And it will verify those transactions using something that is called analytic curve, that is called Sec P 256 R one. And this 256 R one curve is actually a key element here because this is what is being supported by the mobile device, by the secure enclaves and the titan chips in mobile devices, and it is incompatible with what most blockchains know to offer.
00:08:50.686 - 00:09:57.486, Speaker A: That means that even if you want to do this thing on Ethereum or on bitcoin, or even on startnet itself without account obstruction, it's not possible. But since we have account obstruction, and as we said, we can run a custom verification logic on the transaction itself, we can implement the SECP 256 R one verification that matches the security that we have in our mobile device chip. So that's the hardware signer. Now the question is, do I still need the seat phrase? So unfortunately for now, the answer is still yes. And the reason I need the seed phrase is because if my device gets lost, gets stolen, or get bricked, I still want to be able to gain control on my account and have access to my funds. So once we have a hardware signer enabled, the only thing that the seed phase can do is to issue a request to remove the hardware signer. This request does not happen immediately.
00:09:57.486 - 00:10:32.826, Speaker A: It has a time delay. Currently the time delay is four days, but in the future it will be configurable. And in this four days the hardware signer still fully controlled the account. This means that if an attacker got a hold of my seed, the only thing that they can do is issue this remove hardware sign request transaction and wait four days. In the meantime, I will automatically get notification. I will see that someone stole my seed trace and I will be able to move, I will have four days to move my funds to a secure wallet. So that's the hardware signer.
00:10:32.826 - 00:11:15.050, Speaker A: Now, we released the hardware signer two, three months ago. It's already available on Mainnet. So if you haven't tried it yet, I encourage you to try. But since then, we did two important things. Actually, the second one stalker did, but we start with the first. So the first one is we've implemented an efficient sec P 256 R one, this elliptic curve verification logic that saves 40% of the Cairo steps. So just to give you some sense, 40% of the Cairo steps is 150,000 steps that have been saved.
00:11:15.050 - 00:12:23.070, Speaker A: But still the verification takes almost 250,000 steps, which is a lot. But thankfully we have the second element here is that we ask from staffware to have a much tighter and a much more accurate Cairo step price for execution. Because as we know, steps and should be significantly lower in terms of price on l two. And that's indeed both of these are coming in Starknet version eleven. So the tighter price will give us five times cost reduction, or at least five times cost reduction. And add to that the 40% reduction in Kyro steps, we get a very low delta for transaction using the harbor signer compared to using the default signature on Starknet. And that makes it for the user a no brainer to use the hardware signer.
00:12:23.070 - 00:12:58.442, Speaker A: So last slide about the hardware signer. The hardware signer is great. It's been supported by iPhone's since ten years ago. It is supported by Android pixel phones since 2018. Latest Android vendors such as Samsung also supports a security model that allows us to enable the hardware signer. And going forward most mobile devices will support that. So in five years time this will be the vast majority of mobile device that will have this security chip built in.
00:12:58.442 - 00:13:47.142, Speaker A: But in the meantime, we have still significant amount of users that have not the latest Android devices and they cannot enable the hardware signer and we still want to cater to them. And for that we introduced the protected signer. So the protected signer has the same idea of the harbor signer. But since we don't have a dedicated security module on the mobile device, we use something that is called ARm trust zone. Trust zone is a trusted execution environment, which means that we take the physical processor and we divide it to two virtual worlds. One world is the normal world and the other world is the secure world. And all our cryptography can be done in the secure world, including the biometric authentication.
00:13:47.142 - 00:14:32.778, Speaker A: So that's not as strong as the hardware signer. That is completely different model. It runs on a secure enclave or a Titan M two chip. This is done on the same application processor, but it still gives a much higher level of security to the user. So just to understand how it works, very similar to the hardware signer, the trusted execution environment generates a key pair. It's protected by bioauthentication, and the user again does not have access to the private key. And once the wallet sets the protected signer as the main key of the account, that's the only key that can sign the account.
00:14:32.778 - 00:15:34.686, Speaker A: And again, similar to the hardware signer, we use a sec p 256 r, one that is supported by the TE in order to verify transaction. So just to summarize quickly, the protected signer versus the hardware signer in terms of user flow, user won't know the difference, so it will be exactly the same. Both have two factor authentication, meaning something you have and something you are. But under the hood, if you have a device that supports a separate dedicated security chip, you should use the hardware signer, and that's what the wallet application will offer you, because it provides a better security. Now the question is it enough? Well, we think it's very good. However, if, to be completely honest, there are still some vector of attacks, though very nontrivial. You have to be really targeted in order to be attacked, but they are still possible.
00:15:34.686 - 00:16:45.506, Speaker A: So in order to protect very large sums of funds, we want to add an additional layer of protection, of protection, and that is the multisigner. So the multisigner could be multisigner that uses either the hardware signer, it could be multisigner that uses the protected signer. But the idea is that we add an additional signer into the mix. So you can think of that as we have on the one hand, our browser extension that is generated by the seed phrase, and on the other hand we have our mobile devices, which is protected by the hardware signer or the protected signer, and we need both signature to reach the account contract and be verified in order to execute a transaction and send it on chain. Now the key thing here is that we don't add another seed phrase, so we keep only one seed phrase. We want to get rid of the seed phrase completely, so we don't want to add an additional seat phrase. So still we have only one seed phrase, but we do have two signers.
00:16:45.506 - 00:17:49.782, Speaker A: And if you think about that, we have now three factor authentication because the browser extension gives us something we know, and the mobile, either the hardware signer or the protected signer, give us something we are and something we have. And that brings us to a very high level of security. So just a bit about the flow. Basically it's very easy to set a multisigner. The user selects the level of protection that they want. If they want a multisigner, let's say that they select that in the extension, they get a QR code to scan, open the mobile, scan the QR code, verify that they understand that they have their seed phrase and they need to back it up and confirm the transaction, sign it and send it on chain. And from that point on we have multisigner enabled, meaning we need two signatures from two different keys in order to execute transactions.
00:17:49.782 - 00:18:35.390, Speaker A: And the flow of execution is also fairly simple or fairly what we know from classic web two solutions. So let's say that we start from the extension, we enter the transaction that we want to do. We sign it, sign one out of two and automatically I get a mobile, go to your mobile device. I get a pop up, sorry, go to your mobile device and add additional signature. So either through notification or I can just open my mobile device and get this notification, sign it. And once I sign it also on the mobile device, the transaction goes through and being executed on chain. And that's the multi signer.
00:18:35.390 - 00:19:44.430, Speaker A: So what we get here is very advanced security with a very simple ux that the user is familiar already with their day to day operations with web two applications. And if you look on the screenshot here, you will see that we offer kind of buffet. So the user will get all the options that their device can support and they can decide, they can decide to stay with a seed phrase, they can decide to add a hardware signer, assuming their device supports it. If their device doesn't support hardware signer, we will offer them to add a protected signer. Or they can say, oh, I want a multi signer because I have a large amount of funds here and I want them to be extra protected. And that's Bravos account obstruction security pyramid. As you saw, we gone through all of the levels in the hierarchy, and as we just said, users can decide where they want to place themselves in this hierarchy.
00:19:44.430 - 00:20:32.510, Speaker A: So what's next? A lot of things next. But in this context, if you think about it, currently the user needs to decide per account if the account is harbor signer, multisigner protected signer, seat signer, and there is no problem to switch between them. But the definition is per account. In many cases it will be much more reasonable to do that not per account, but per transaction or per daily accumulated transaction. So users can define a threshold and can say, oh, up to $100. I'm willing to sign with any signer between one hundred dollars to one thousand dollars. I want the hardware signer above $1,000.
00:20:32.510 - 00:21:02.840, Speaker A: I want the multi signer because this amount is something that I want to feel more secure on. That's next. Basically, as I said, the hardware signer is already available on Mainet. The mumbi signer is currently in closed testnet, should be released to open testnet later on this week. So please download the app and try it. Thank you.
00:21:09.630 - 00:21:21.374, Speaker B: Thank you so much. Moti, we have time for one question, and because it's David, we might even have two. Apparently we just need to have time for one question.
00:21:21.412 - 00:21:22.320, Speaker A: Just to be clear.
00:21:27.130 - 00:21:37.500, Speaker C: When we use the secure enclave of an Apple device, do we give up any sort of control to Apple when we use that part of the iOS phone?
00:21:38.430 - 00:22:21.830, Speaker A: So that's a great question. And the short answer is no. And I will explain. So the private keys that we have in the secure enclave, and by the way, for all of you who want to understand the very technical details, we have a great blog post in our website that understands how keys are generated in the manufacturing process when they're manufacturing the silicon, and how no one has access to that. So that's for diving deep. But in high level, when we generate the keys, they stay always in the secure enclave. So Apple has no access to that, not from its cloud, not from firmware upgrade, nothing.
00:22:21.830 - 00:22:40.110, Speaker A: It stays within the secure enclave. And the only way to access it is to break the secure enclave. And a lot of corporations and big government are trying, not with great success so far. So it's completely under your control. There is no centralization in the mix.
00:22:41.410 - 00:22:43.850, Speaker B: Thank you so much, Moti. Thank you for the question, David.
