00:00:01.140 - 00:00:48.580, Speaker A: You. Now this contract is an interesting way to educate about how to write basic starknet contracts, but it's not a very interesting use case. We can take this contract and expand upon it in many ways. We can add users and signature authentication. We can aggregate information from multiple layer one sources to produce any business logic we want. In this case, let's take a simple example, that which adds users to the system and expand upon this. So while the original contract just kept some singular arbitrary balance on the layer two, we want it to keep a different balance for any given user that we want added to this contract.
00:00:48.580 - 00:01:57.932, Speaker A: So how do we go about adding users to the system? It sounds complicated to keep and maintain a storage variable for each individual user in this system, but in fact in starknet it's really simple. So we take this storage variable balance here and all we need to do is add a user field to it. So one thing I haven't mentioned about storage variables thus far is that they work like maps, mapping from an input, in this case user, or a key to representing value, in this case the balance stored for that specific user on our layer two contract. And of course once I've added this to balance, I have to update accordingly. So now increase balance. The function here doesn't only receive the amount, but also a user to which we increase that amount, and the read and write functions for balance I have to be updated accordingly, getting a user as a key in order to read or write to, and the same changes will be applied to get balance below. And once we save this contract, we can move back to our terminal and compile and deploy it.
00:01:57.932 - 00:02:30.620, Speaker A: So again, using Starknet compile, we'll compile our contract and save it as contract compile two and a new ABI accordingly. This will take a few seconds to compile and once that's done we'll deploy this new contract to the Starknet system. Once our contract is done compiling, we simply take our compiled contract code and deploy it to the starknet system once again, this will take a minute or two until the contract is accepted.
