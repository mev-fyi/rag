00:00:00.880 - 00:00:10.245, Speaker A: Awesome. Okay, great. So I just want to welcome you. I think we should start now. What do you think, Terrence? Maybe wait a bit more for people to join.
00:00:11.945 - 00:00:14.209, Speaker B: I think we got a bunch of people in here.
00:00:14.377 - 00:00:15.009, Speaker A: Okay, amazing.
00:00:15.057 - 00:00:15.617, Speaker B: Kick it off.
00:00:15.681 - 00:00:50.705, Speaker A: Yeah, let's do this. Let's do this. Amazing. Okay, great. So thank you everyone for joining. So today we're going to talk about Cartridge, one of my favorite company in all crypto right now and my beloved and amazing founder, Terence, who's going to be our guest today and talk about what those guys are building, which I can emphasize how exciting. I am excited, I am by their work, by how groundbreaking what those guys are doing.
00:00:50.705 - 00:01:13.335, Speaker A: And so to start very quickly, I would love to get. So I'm just myself very briefly, I'm Louis, I'm the ecosystem at Star Ware and I've been following what Cartridge has been doing since inception and so I would love to welcome Terence and ask him if you can introduce himself, share a bit about Cartridge and how they came to building it and what's the vision behind it.
00:01:14.995 - 00:02:05.787, Speaker B: Sure. I'm happy to thank you for having me. And hello everyone, I'm Terrence, I'm one of the co founders of Cartridge where we're building on chain games, tooling and infrastructure along with that framework. You may have heard about Dojo and we can talk a little bit about both of them today and how they complement each other and what kind of is the long term strategy there. My journey into the on chain gaming space started about two years ago when we started the Dope wars project and as part of that started building a fully on chain game, a recreation of a cult classic called Drug Wars. Very early on in the starknet network's journey, I think it was like Alpha. It was definitely way too early to do something so ambitious.
00:02:05.787 - 00:03:27.025, Speaker B: But I really fell in love with the approach from a technical perspective, the long term approach to scalability that startnet and starkware is taking and recognize that it was the unlock that we needed to create, enable these complex applications and unlock the compute necessary to do it in a way that doesn't have significant trade offs in the security model. So we started very early on we started building a game called roll your own. We quickly recognized that it wasn't practical to ship to production and there were a lot of different gaps, but realized also the potential of this idea of fully on chain games in autonomous worlds. So we started Cartridge about a year and a half now and have been executing towards enabling and realizing this idea of fully unchained games in Autonomous worlds ever since then. And I think today we're quite close. We have a lot of games and applications in production. I think like a lot of the technical limitations have been lifted and now you know, the kind of the technology is in the hand of creative hands of creators and we're starting to build up like a very vibrant ecosystem around that.
00:03:27.025 - 00:03:29.965, Speaker B: So yeah, happy to share more.
00:03:30.125 - 00:03:49.185, Speaker A: I mean that's, that's a fantastic journey. Yordi told and then first of all curious because maybe not everyone here is, is familiar, but what's your case for the ninfauntion game? Why do we need those and what the sort of like vision and what as the game developer to use those?
00:03:50.405 - 00:05:09.779, Speaker B: Yeah, I think it's a great question. I think this idea of fully on chain games is I think like a new genre of kind of interactive experiences that we're building on top of the blockchain. And like the unique thing they can do is they can inherit like the properties of the blockchain. I think like one simple analogy to think of, like to compare it to like traditional game development is like in traditional game development you have like a publisher that operates a bunch of servers and those servers are typically hosted in like AWS or you know, like some cloud infrastructure service and they're completely in control of the publisher and opaque outside of the develop the APIs that the developers like intentionally provide to people building on top of that platform. And the implication of this is like pretty significant. Like for example, in most cases, I mean in almost all cases it's impossible for a third party developer to make some modification to the core logic of a game, like the core game mechanics and to extend and expand it and build like very interesting mods that are deeply integrated with the gaming universe. And there's also like a bunch of inherent platform risks associated with that.
00:05:09.779 - 00:06:07.171, Speaker B: Like the world can shut down or like the game can shut down in a whim. Like you know, as soon as it becomes not profitable for a publisher, not necessarily that no one cares about it anymore. Like there might still be a lot of people that care about this experience and have invested a lot of time, but if there's no like profitable for profitable business business model, then it'll be shut down. So I think like, you know, like the, the interesting affordances that an on chain game or autonomous world can inherit from a blockchain is basically like, you know, persistence is one very interesting one. Like the game universe can exist for as long as someone wants it to, right? Like everyone, like the blockchain is basically like opening up the server that used to be siloed inside of a publisher's like cloud infrastructure to the point that anyone can operate it. Like anyone that has some motivation to perpetuate the world can operate it and keep it alive. And given like the.
00:06:07.171 - 00:06:56.233, Speaker B: And with smart contract platforms like what StarkNet provides, you can have extensibility and composability as a core affordance of these worlds. So you can have ecosystems built around them that can be very deeply integrated into the core logic of a game. Right. And so you can have an ecosystem of participants that can collectively govern and build. And over time you can build up a lot of leverage and compounding effects as people contribute and build on top of it. And by removing basically all the platform risk, I think there's a lot of new emergent experiences that will start to be built and it becomes practical for example to fund a company that's building a game on top of a game kind of thing. Which today is almost impossible.
00:06:56.329 - 00:07:44.975, Speaker A: I mean I love that. I mean when I try to explain these thesis to people and ancient gaming I always make this reference to. Actually I have two reference which I use to explain that which is the first one being the movie Ready Player One I didn't read the book but I read so the movie and there is something that I loved that is weird to me in this movie when you think about is how the. How the hell the other heck the faith of the world is dependent who's owning this game company, if you know what I'm saying. There's something very dystopian about the faith of the whole universe of the whole world. Basically depending on who's going to inherit this company that control this big video game where everyone lives. And then the second one from.
00:07:44.975 - 00:07:46.727, Speaker A: Sorry, yeah, yeah.
00:07:46.751 - 00:07:52.159, Speaker B: I mean I think it is definitely a dystopian kind of universe in that regard. Right?
00:07:52.247 - 00:08:23.409, Speaker A: Yeah. But no one talks about it in the movie. It's kind of interesting. And there is second one which is like a fantastic episode from people weren't familiar with from 99% invisible in 2015 they made a post about the end of life of Sims Online and how heartbreaking the people were still playing the game at the very last day were when they shut down the servers. I mean just give you a bit of perspective from people who are not very familiar with the philosophical aspect. What it means to actually own those games and run them forever. So.
00:08:23.409 - 00:08:24.401, Speaker A: Sorry, go ahead.
00:08:24.593 - 00:08:49.869, Speaker B: Yeah, and I think it becomes like increasingly important as people start to like more and more of like the culture and you know, society moves online to digital experiences and people spend more and more time in these immersive experiences. It becomes like really important to remove these, the like the leverage of platform providers, like things that don't exist in the real world. Right, like, you know. Yeah, that makes sense.
00:08:49.957 - 00:09:03.625, Speaker A: And so my question to you then as Cartridge is what's the goal, the company's goal, what do you guys aim for, what do you want to achieve? And what are the different vertical product line, tool and service that you are creating?
00:09:05.325 - 00:10:34.597, Speaker B: Yeah, so one of the first, when we first started tackling this problem, the Stark ecosystem was still on the Cairo zero and it was quite, quite still quite early. One of the first challenges that we try to address was more on the player side of player onboarding. So like, you know, there was a few different games building in the StarkNet ecosystem. One of them, you know, Roller like Influence and the Realms guys and Topology, those are kind of some of the people that were the OGs building games and we wanted to help like facilitate the process of getting players onboarded and experiencing that and allow them to playtest and stuff like that. So we built out something called the cartridge controller which was basically a wallet that leverages account abstraction, was something that Startnet has natively to allow players to use WebAuthn to create accounts and to sign session tokens and have great experiences playing games where you don't make it very easy to create an account without having seed phrases and stuff like that and then accession tokens to abstract a lot of the transaction signing overhead. That was one of the first products that we developed. It still exists today, but we have less focus on it right now.
00:10:34.597 - 00:11:33.863, Speaker B: And we started putting a lot of our efforts now into building from the developer side up rather than from the player side down. And we'll come back to the controller at some point in the future, I imagine. For the past year we've been focusing on building out the Dojo ecosystem in collaboration with a few other participants. So Dojo is a provable game engine. The development of it coincided with the release of Cairo 1, where it started to make a lot of sense to invest a lot of time and effort into building tooling and frameworks in the StarkNet ecosystem. It provides a high level abstraction on top of Cairo using like the extensible Cairo compilation pipeline to make it easy for developers to define on chain worlds that inherently have these attributes of composability and extensibility. Essentially it uses a pattern that allows any participant to register new state into the world and create new logic in the world.
00:11:33.863 - 00:12:13.765, Speaker B: So enabling this idea of these emergent composable ecosystems. And that's been quite successful for us. Inside of the Dojo community which has grown quite tremendously over the last year. We have a bunch of different teams and studios building games and I think over 50 contributors now to the, to the, to the repository. We have a few different tool chains. Like one of them is Katana which is the sequencer, a gaming specific sequencer that we operate and Tori, which is what's called an automatic indexer. So it's something similar to like the graph or something but you don't have to write any code for it.
00:12:13.765 - 00:13:14.345, Speaker B: It understands a world because worlds have this property of introspection. So it can from the on chain representation understand all the different models and everything inside the world and automatically generate GraphQL and GRPC APIs and then some client stuff. But I just mentioned this because this is part of one of the products that we're providing that I think is maybe a little bit of the topic of this space which is slot and slot is a managed infrastructure as a service platform that providing a cartridge. It's a little bit different of approach from most people that we've seen with like app chains because almost everyone is basically focused right now on like L2 app chains that sell to Ethereum and almost all of them are you know, optimistic roll ups. And we're leveraging like the unique affordances provided by ZK to execute on the fractal scaling roadmap, which is actually a roadmap that like the starkware team laid out I think almost like two years ago now.
00:13:14.765 - 00:13:15.629, Speaker A: Which is.
00:13:15.797 - 00:14:18.069, Speaker B: Yeah, which, which is like uniquely enabled by Zero knowledge technology. Like it's not possible to do this well with optimistic roll ups given like the security model of them. So like it's, it's a little bit less inside of the narrative right now but I think is will continue to grow as, as we kind of demonstrate its capabilities. And so slot is a way, you know, today the focus is on the developers again like continuing to build out the best developer experience for building on chain games. You can very easily deploy Katana instances and Tauri indexers into managed infrastructure in a few seconds from the command line. But the roadmap is essentially to enable the fractal scaling paradigm where you can have games like for example that use what people are starting to refer to as micro rollups which is sit somewhere between a co processor and a persistent roll up. A roll up spun up for a specific purpose that exists for like Just some short duration, like maybe an hour or whatever.
00:14:18.069 - 00:14:30.845, Speaker B: Like the duration for example of a dungeon run inside of a game sequences about the transaction, proves it and then settles it. So yeah, so that's one of the products that we're most focused on in the short term.
00:14:31.005 - 00:14:44.825, Speaker A: What's the name of this? Because I mean I just want to. There is a. What's the name of this? How do you call it now? Because for me was like I used to call them ephemeral chain. But I'm curious what to. What's the name that is coming together at this point?
00:14:45.365 - 00:15:04.993, Speaker B: Yeah, I think I've seen people refer to as a bunch of different things. Again like ephemeral rollups is what we were originally thinking of it as. And then there's like stateful CO processors. It's you know, somewhere in the spectrum. But now people what I've seen people start to refer to them as micro roll ups. I don't know if that's like. I mean it's kind of a bad name but you know.
00:15:05.049 - 00:15:37.895, Speaker A: Yeah, I mean the coprocessor. Yeah, the CO processor is definitely the worst one. But no to go back to slut. And it's something I think is going to come up as like very strongly. I mean slot is to me and I'm not saying this to please you, I literally said that to many, many people is slot is the embodiment of what crypto will look like in 10 years or 2010, five to 10 years. Meaning what I like to call provable servers. They're not L3s, they are provable servers.
00:15:37.895 - 00:16:11.731, Speaker A: They are servers that can natively integrate themselves into the new financial world that crypto is and that can make robust and live on forever. Robust as in if you are scaling too much and you need redundant and decentralization become a requirement for you not to get shut down and mainly forever by as you said, decentralization and making sure that that tech stack, that tool, that word will keep going living on forever if someone is willing to run it.
00:16:11.883 - 00:16:52.555, Speaker B: Yeah, yeah, I mean I fully agree with that and I think it's really the only way to accomplish like the properties that we need especially for fully on chain games where you want very low latency. You want you know, for example servers deployed regionally like close to users to, you know, generally in games you want to use like a regional server to reduce your latency. Like you just have some physical constraints of the speed of light or whatever. If you have a decentralized roll up and you have to communicate around the Whole world, you naturally like inherently have like over 100 milliseconds of latency for IT participants. Right.
00:16:52.895 - 00:16:59.275, Speaker A: And if you want anyone who play counter strike know that lag above 50 milliseconds is how you get. You die all the.
00:16:59.615 - 00:17:40.725, Speaker B: Yeah. And the only way to do this is by using zk. I think like optimistic and fraud proofs are great for CERN applications like for global execution context. But if you want to shard execution to this level where you can have a server spun up in New York City for players in New York to play a game for an hour and then settle it on chain and then spin down the sequencer is impossible to do in an optimistic architecture. So I agree with you. I think like this is like the long term approach to scaling compute, like on chain compute. And you know, we're very close to achieving it.
00:17:40.765 - 00:18:18.405, Speaker A: But yeah, I mean that's, that's to me, I mean. And so the question to you then is like what did you see? Okay, so you know, slot and Tory are obviously tool built by Cartridge and probably the go to market for Cartridge. What interaction with Dojo and how do you think the Dojo community will feel about using hostile infrastructure versus using locally, you know, this local run on their own? What's the trade off and why would someone choose one versus the other?
00:18:19.045 - 00:19:11.945, Speaker B: Yeah, I mean, I think so. Dojo itself is a public good. Right. Like we have been very intentional in collaboration with other people in the Stockinet ecosystem of building Dojo as like a credibly neutral foundation for on chain games or autonomous worlds because we think it's necessary to achieve like the properties that we want. Like you can't have, you know, a proprietary engine. And to that extent, like a lot of the, the products that we're providing with Cartridge to the Dojo ecosystem are auxiliary and not like they're not enshrined inside of the framework itself. I think from why would people use the cartridge versus Cartridge stack versus operating something locally? I mean one thing is that we've seen already is that it's incredibly easy to spin up a shared sequencer if you want to do playtesting and stuff like that.
00:19:11.945 - 00:19:49.373, Speaker B: Or sorry, shared sequencer is the wrong, the wrong word for it. But like a sequencer that other players can access to so you can start to play, test your game. By far the easiest way to do it is to use slot today and to use Tory and we provide it as a service for free because you know, like Katana is a very efficient sequencer and the operating overhead for US is like basically zero. So it's something that we can provide, especially in the context of testing for free. So there's no reason not to use it and we'll continue to push the boundaries. I'm providing the best developer experience. It's the obvious choice to use.
00:19:49.373 - 00:20:56.515, Speaker B: I think the Dojo stack can be fully run locally, especially when you're developing games. And most people do that like I do that I don't develop against a managed slot instance. There's no vendor lock in from that perspective or something. But there's a bunch of stuff that we're working on that I think will become more and more interesting and make slot like an even more compelling solution. Like one of them is an on chain game explorer that we're developing that we haven't officially announced yet, called World Explorer, which basically like if you deploy a game to slot, it automatically is indexed there and you can use it for distribution of your game. And it's kind of like something similar to Etherscan but with an understanding of the semantics of a fully on chain game. So it's a much richer experience and people can start to use it to explore what is inside of an on chain game without having to the game developer having to build this tool himself.
00:20:56.515 - 00:21:58.415, Speaker B: There's also I think a lot of complexity from architectural, like a DevOps perspective that goes into the scaling architecture. That's one of the trade offs versus just running a single monolithic chain or a sequencer. Operationally that's a lot simpler than what we're trying to do with fractal scaling where we're spinning up sequences on demand in different regions in response to player demand that can spin up and down within seconds so players can play them immediately and then handles a lot of the settlements and the cross chain communication and those kind of things. So I think that is a core competency of cartridge, that sense to share with the rest of the ecosystem and be something that would take a lot of time to build in house. And it's fundamentally the thing that allows you to scale on chain games to very large audiences. So those are I think some of the reasons why you would use slot versus trying to do something on your own.
00:21:59.595 - 00:22:40.245, Speaker A: That's super interesting. And so the next question that comes to play is. So there's actually two questions that comes to play here. I'm going to say the first one is you choose Starknet and in Cairo and all the tech stack because I mean you can explain why. But my question is what do you see what makes it different? Let's say than trying to use some other tool in the on chain gaming world like something like Argus or mod. Why do you prefer to develop your own tech stack versus using something that others try to build elsewhere?
00:22:41.505 - 00:24:06.795, Speaker B: Yes, Dojo is the only approach that is like a provable game that you can generate a zero knowledge proof in this regard. There's very different security trade offs between something like Argus I think is probably and I'm not an expert on their model, but I think is much more focused on composability versus inheriting the importances of the blockchain. I think it's debatably a roll up although I don't want to talk shit because I don't know exactly but the MUD team, we have a great relationship with the mod team. I think they've made a lot of great contributions to the ecosystem. I think there's a large space for us to be complementary to the mod solution. I think successful games will probably straddle both optimistic and zero knowledge roll ups and take advantage of both of their capabilities because I think in CERN at dimensions like some can be better than others. Solidity is, you know, a language that was designed for Ethereum with a set of constraints when Ethereum was introduced, which is like very computationally constrained execution environments and it was never really designed for very complex applications.
00:24:06.795 - 00:25:50.635, Speaker B: And we spent a lot of time building on Solidity and almost all the teams building in the Dojo ecosystem today come from Solidity background and we're banging their heads against things like contract size limits and stuff like that before joining the StarkNet ecosystem and starting to take advantages of some of the affordances of Cairo. Cairo is a language, this new language that was developed that took a lot of learnings from Solidity and was designed specifically for building complex on chain applications. And so it's naturally suited for the types of games that we want to build and has been, you know, like I think provides by far the best developer experience and that, you know, there's the component of defining the games that live on chain which you know, Cairo obviously allows you to do. But there's also a whole other space of development that Cairo can support that other approaches can't, which is like things that are executed on the client. So it has this property of like isomorphism, which is like a dimension that we're starting to invest a lot more time in right now in the Dojo ecosystem, which I think is like a very core differentiator of the Dojo approach, which is you can write the same, you can write code in the same language that executes like on the roll up in the shared execution context and is proved as well as like code that is executed on the client and is proved inside of the browser for example or on the user's device. And that opens up a lot of possibilities that are interesting for games like private information, for example where you, you know, hide things you need. A lot of games depend on some level of information asymmetry and you can start to introduce those dynamics very easily from a developer experience perspective.
00:25:50.635 - 00:26:13.455, Speaker B: Like these things are possible with the technology like zero knowledge proofs and stuff but in the other ecosystems you have to basically use a different tech stack to accomplish it. Like you're using like circum or something like that. And I think like from when Cairo has the unique ability to provide this like natively inside of the developer experience, which I think would be significantly better.
00:26:15.555 - 00:27:05.495, Speaker A: I mean I agree there is something just starting crazy right now that we have those tools and languages that are made for each one for a specific purpose. And what I love about of course I'm very biased and because I pushed for it is to have a language that is both fast as proving at executing and also support private input. And I, I'm not familiar with any other language that has the ability to do it in an efficient way or native way. So although it's not there, it should be easy to add and hopefully either you guys or someone else will. So you guys want to be able, I mean to add it. We're working on it, but always happy to have partners to work on it as you know.
00:27:06.205 - 00:27:52.435, Speaker B: Yeah, yeah, I mean I think it's generally across the space in different dimensions. There's obviously a lot of gaps that exist in different solutions and some people are further ahead in some regards and some people are further ahead in other places. So yeah, I think I have. We obviously have a lot of faith and commitment to the starkware team being the team that you know, invented Starks and has been pushing on this technology for the longest time to continue to innovate and bring like the best solutions to market and understand that it can take time. But you know, like I maybe have a little bit more information than a lot of people in the audience but you know, I haven't lost confidence in that being kind of the outcome here.
00:27:53.095 - 00:28:26.175, Speaker A: Makes a lot of sense. And so there is one thing that I find extremely inspiring when it comes to Dojo and your work is your ability to gather an extremely strong community and how you managed to pull that off. So my question to you is Right now is how many project or games are currently being built? Where are people coming from? Why are they looking into those games? And so what's your take on the next evolution? The go forward from there?
00:28:27.355 - 00:29:52.793, Speaker B: Yeah, I mean I think the community that we've been able to build around Dojo is arguably the most impressive thing that we've done. I mean you can always build cool technology, but if no one cares about it then like you know, there's no point. And it's been, you know, from the beginning, you know, a collaborative effort in a large degree pushed on by like Sylve and Loaf and a lot of other participants in the StarkNet ecosystem. And you know like for example having like the Realms organization which is, you know, kind of answers your other question as well, fully bought in on the dojo stack which is probably the most credible approach or most credible like kind of effort to build an autonomous world today from a, like a, from an organic grounds up perspective. It's been a lot of fun and a big journey and I think a lot of the success we've had there is just by having a very open collaborative ecosystem where people can jump in and start to contribute. Early on a lot of those people were coming from the starknet ecosystem but we've put a big focus now on expanding and trying to bring more traditional game developers. And one of those efforts is the Game Jam which we're actually running one starting next week and it's going to be running for two weeks over the holiday.
00:29:52.793 - 00:30:51.019, Speaker B: So we run these what we call game gems where we have prize pools and some set time. We've had two in the past that were 72 hours and we had a lot of new developers on board to the ecosystem as well as build very interesting experiences in that very short amount of time. We're doing a much more ambitious one. So if anyone is interested in getting their feet wet in the dojo ecosystem you should definitely check out the dojo Twitter and sign up for it. And we have actually a Ninja school hosted tomorrow by Loaf which is going to walk participants through the dojo stack and get them ready and we'll have some team formation stuff around that. So with the Game Jams are really trying to bring in a lot of more traditional game developers and we're trying to demonstrate to them that look like blockchain games aren't just about hyper financialization and, and speculation. It's not just about like NFTs and asset ownership.
00:30:51.019 - 00:31:25.215, Speaker B: Like from a developer perspective we can actually create a lot of leverage for game developers where they can bring experiences to life using, you know, like the shared infrastructure much more quickly than you can do in the traditional world. Like similar to what a DEFI developer is able to do in the financial space, but for, you know, the gaming space. And I think there's a very compelling value proposition there. We've started to see a lot more people come in from the traditional gaming ecosystem and I think it's very important for that to be the case in order for us to be successful.
00:31:25.555 - 00:32:03.155, Speaker A: I mean, that's so good to hear. I'm looking very actively obviously on the new Cairo dev and as you know, I tend to try to spot people on your discord at this point to nerd snipe them. And I mean I'm very impressed to see a team that has organic growth and you guys managed to pull that off. And that is honestly one of the hardest thing one can do when it comes to tech adoption. So I just want, I mean this is amazing work as you know, as you know how much I admire what you guys have been doing so far. I just. Now maybe let's move to something like more personal.
00:32:03.155 - 00:32:25.655, Speaker A: You were at DevConnect a couple of weeks ago and you were at a conference last week. I'm curious like what you saw, what was the most interesting topic, the thing that gets you excited both in crypto and your sub ecosystem or the on chain gaming world and what do you see coming out as new narratives, new stories, new things that people will care about?
00:32:28.435 - 00:33:16.937, Speaker B: Yeah, I mean in the on chain gaming autonomous world space we. Yeah, there was the autonomous world assembly that was hosted in Istanbul that a lot of the dojo ecosystem attended. It was hosted by Zero X Park and that was really fun to see. I mean the space has grown so much in the last two years. I think like the, the biggest practical takeaway is like how much progress has been made since the year prior. Like there were like maybe six games that were. You could play test at event itself and a lot of the talks were focused on learnings of, you know, actual experiences rather than like, you know, the kind of thought pieces or you know, just hypothetical like thought experiments.
00:33:16.937 - 00:33:59.241, Speaker B: Which is really great that we're starting to like practically ship games and stuff these experiences into production. Like there's a bunch you can play inside of the dojo ecosystem right now. I mean Loot Survivor, which is actually not a dojo game, but it has been deployed to mainnet. Starknet is one great experience. And then we have like roll your own and Eternum and there's a bunch of other cool games inside of the Dojo ecosystem that you can play around with. If you join the discord, we can kind of direct people in there. So I think the practical reality that these things are possible now and people are starting to build interesting experiences and with very small teams is my biggest takeaway.
00:33:59.241 - 00:35:02.675, Speaker B: I think, you know, like the baseline tooling is there in both the you know, MUD ecosystem and Dojo ecosystem to support this. We're very focused now and generally I'd say the ecosystem is very focused now on productionalizing these applications. So everything right now is running in testnets. I think next year we'll start to see these games like run, you know, on gaming specific infrastructure in production versus today. You know, like you can deploy to StarkNet where you can deploy to like base. But you know, these roll ups are primarily focused on DEFI and not great for on chain gaming experiences. More specifically in the on chain gaming ecosystem I think people are starting to focus now more on introducing hidden information and privacy into games, which is an interesting frontier to push on and aligns well with the the momentum in the rest of the ecosystem in DeFi and MEV and the ZK stuff.
00:35:02.675 - 00:36:04.963, Speaker B: There's also an interesting strand of incorporating machine learning or AI on chain in the starknet ecosystem. There's the Orion project that people you can do pretty interesting experiments with Dojo and start to have to some extent on chain NPCs or probabilistic models to control your games. Those are all very interesting. Like development specifically nonchain gaming ecosystem, like more broadly, you know, we're still operating in a very early niche. There's a bunch of people that are very passionate about it, that are part of the community and continues to grow quite rapidly, but relatively speaking it's still very small. Last week I was at like the Future of Gaming event which was hosted like by Bitcraft and, and Fabric and some others in Helsinki. And like the interesting thing, it wasn't like focused on on chain games, but almost all of the presentations to some extent mentioned on chain games.
00:36:04.963 - 00:36:52.555, Speaker B: So I think there's definitely you know, a shift in the narrative. Like a lot of the people that were previously building games that you know, like just had the minimal integration necessary with the blockchain which is just asset ownership and then the rest of the game fully lives off chain are starting to like explore on chain gaming. And I think naturally the people that wrote the last narrative will be excited to write the new narrative which is starting to emerge as autonomous worlds in my opinion. So that was an interesting insight there and I think obviously represents a lot of opportunity but also potentially a lot of risk to the ethos of the space. So it's something that we're quite conscious about and want to help facilitate in a positive way.
00:36:54.375 - 00:37:30.785, Speaker A: When it comes to facilitate, there is something I want to. I mean I realize that I don't think we went to the bottom of what float in Naples. And one of the things that is very important when it comes to gaming is performance. As you said, network performance, redundance, all of that. How many transaction or like you know, event can happen in Katana right now or like in Sloth to slot to be specific. And what are the next generation? How do you plan to scale that to get to the. What are the right performance requirements and what are.
00:37:30.785 - 00:37:32.925, Speaker A: When are you expecting them to hit them?
00:37:34.585 - 00:38:20.875, Speaker B: Yeah, I think, I mean it's hard to say like what is the right performance requirements? I think like baseline you need very low latency. Right. Like throughput is a number that like depends a lot on the type of game. I mean, you know, generally more throughput is obviously better. But latency I think is one of the most important things from for, for games is like the ability of a user to take some action and for that like the outcome of that action to be reflected very quickly so that you know, they the experience feels interactive. It's not like LPing a position on like Uniswap or something where you can sit and send a transaction and check back 30 minutes later. You want to have a lot of quick interactions potentially in some shared execution context with other players.
00:38:20.875 - 00:39:05.115, Speaker B: So that's one of the things that we're most focused on is what are the modifications that we can make to the Katana sequencer to enable basically almost instantaneous transaction confirmation. And so Katana and Slot we operate centralized sequencers. That is basically the only way to achieve this property. You can deploy them regionally close to people to get like very low latency just like over the network. You can put them on powerful machines and you can optimize like the VM for execution so that Cairo VM is relatively fast itself like given that it's written in rust. But there's new, there's other approaches. Like Cairo Native is like orders of magnitude faster and it's so something that we're interested in exploring.
00:39:05.115 - 00:39:29.975, Speaker B: And then you know, as part of that there is some security trade offs that you make with centralized sequencing mostly around censorship resistance. And another area that we're doing some research is like how to MITIGATE that, you know, kind of one of the approaches is to run katana sequences inside of a secure enclave which allows everything to be fully anti encrypted. So that's something that we're working on.
00:39:30.595 - 00:40:19.815, Speaker A: I mean and for perspective, I know you personally originate, I mean come from traditional game design or gaming, the traditional gaming environment. I think for maybe all listeners have like the perspective of what are performance requirements, let's say to play a game, let's say a collaborative multiplayer Pong or a multiplayer, I don't know what's his name of this RPG or Kunto Strike. What are the requirements for each category of game? So we can imagine. It would help me imagine each generation of game and what the improvement will provide to Jet to get to those games. Basically when we will get to run Counter Strike in slot.
00:40:20.455 - 00:41:10.445, Speaker B: Yeah, I think Counter Strike is quite ambitious. No one is really focused on bringing FPS on chain. The FPSs are by far the most demanding genre of games. You have a lot of throughput necessary for the bullets and everything to be on chain, a lot of computation and it has to be very low latency to provide for competitive players. Most of the games that people are focusing on are kind of like RTS style games, trading card games, like rpg, like mmorpg. I think a lot of those games fit very well into the constraints of the blockchain. MMORPG like World of Warcraft, you can easily play with over 100 millisecond latency and it doesn't massively affect the player experience.
00:41:10.445 - 00:42:48.547, Speaker B: If you look at games that have like more high intensity of like interactions between players, I would say like your rule of thumb of like kind of. I mean I think less than 100 milliseconds is doable but competitive players want like you know, sub 50 sec milliseconds like you know, ideally even below that. So I mean I think these things are accomplishable because I think one common misconception is that the proving overhead of a language is incurred during the runtime, which is not true in a sequencer like Katana for example, with something like Cairo Native. When we have that integrated, you're basically just doing native computation just like a traditional server and the sequencer is just is just deciding the order of transactions and you don't actually have any of the overhead outside of some like low level implementation details of the chiral language that is incurred during like the actual execution and sequencing in real time at runtime. All of the overhead of proving is something that happens asynchronously and can be like massively paralyzed. So I think like, you know, there's a very tractable path to putting a lot of these experiences on chain. The bigger question is like in an FPS, you just have such a massive amount of computation that needs to be proved and will it be, you know, like financially make sense to prove so much computation for the experience? I don't know.
00:42:48.547 - 00:43:06.105, Speaker B: I mean, it's a, it's an open question and obviously there's significant process in driving down proving costs as well. That is hard to predict. But you know, like, if we're two orders of magnitude cheaper next year than we are this year, it unlocks a lot of new use cases as well.
00:43:09.805 - 00:43:49.925, Speaker A: It makes a lot of sense. There is another direction, I'm sure you're aware, but something that Kara supports, but we haven't actually implemented yet in terms of prioritization, which is something called linear typing. And I'm curious if you're familiar with this. Have you thought about it in the context of the game and if so, what are like, how can a dev that listen to us right now can use this type of programming to improve the performance? What do you see? I mean, if you're not familiar, we can skip a question. I'm just curious if you are, is it something that is used in traditional gaming and how do you take advantage of this for a game?
00:43:51.755 - 00:44:58.619, Speaker B: Yeah, I mean, I'm familiar with linear typing and the practical implications of it for people in the audience. Basically what linear typing enables you to do is do parallel transaction execution because you can statically understand the dependencies of a transaction. So you can massively improve your execution throughput by just parallelizing everything. One of the challenges with Ethereum, for example, today, or in basically every roll that's using Geth or Reth or one of these implementations, is that you have to execute everything sequentially because a transaction might modify some piece of state that a subsequent transaction depends on. And if that's the case, then you have some conflict and you have to do re execution. So there's approaches like optimistic RE execution where you just parallelize everything and if stuff that has dependencies, because the only way to find out the dependencies if you don't have linear typing is by actually doing the execution. Then you just rerun them sequentially, which I think starknet had at one point.
00:44:58.619 - 00:45:36.457, Speaker B: And I think people have looked at this. Linear typing is a fundamental property of the language that allows you to, before actually executing something, understand these dependencies so you can parallelize things without these conflicts. I, you know there's obviously unlocking like more performance would be great for games. I think it's an interesting fundamental property. I don't know where we are at being able to leverage it in the START ecosystem. It seems like of all the things like pretty low on the set of priorities right now, but.
00:45:36.481 - 00:45:43.325, Speaker A: Yeah, but the language supports it. The language supported. Yeah, you could implement it at the sequencing level in your end. I think that's what I'm talking.
00:45:44.175 - 00:45:53.315, Speaker B: Yeah, it's a good question. I don't know exactly what it entails to implement at the sequencer. Do we need to modify Cairo VM or. I don't know.
00:45:55.055 - 00:46:33.581, Speaker A: I think it just means probably to run to check if the transaction is only linearly typed or not and then you can run it on multiple thread. I guess you know better than I do. Of course, as you perfectly know. There is one last thing that maybe we want to touch. Unless you have other topics that you want to address, is something that has been talked about a lot lately, very high up in the. There's two actually topics and I want to know which one is the most interesting to you and which one you want to address. First, there is a question of abstraction or what we call smart wallets or smart accounts.
00:46:33.581 - 00:46:54.895, Speaker A: And the second question is the emergence of new data availability layer. And I'm curious how do you guys plan to use them? If so, what is the most interesting to you between this smart account and that availability? And what do you think will steam out from those two major breakthroughs in crypto?
00:46:56.715 - 00:48:08.665, Speaker B: I mean, I think they're both very important in different dimensions. I mean kind of abstraction of smart accounts obviously is massive for onboarding new users to games and being able to like, for example, like one approach that we can do is we can just create a burner wallet in the browser and the user can play a game and then at the end of the game they can actually create their wallet. So instead of. You can move a lot of the overhead to onboarding away from the beginning of the experience and rather to the end of it where the user has more of a value, has a stronger value proposition and is more willing to incur some overhead to unlock loot in a game or something like that. So I think that is really important to like shift that burden for onboarding new users. Argent is obviously doing a really great job in the starting ecosystem in this regard. I don't know, we'll see how many, how much resources it makes sense for us to spend on this given that Arjun is already doing a great job we want to just focus on our core capabilities.
00:48:08.665 - 00:49:42.295, Speaker B: Alternate data availability solutions I think is quite is obviously like powerful and given that 90% plus of the transaction costs in Starknet today is around data availability costs of checkpointing like stake diffs to Ethereum is a big unlock if you can operate like volitions I think it's going to change significantly with 4844 and I don't know exactly what that will end up looking like. Also with the way that we operate sequencers is the goal is to basically be able to compress a massive sequence of events into a single proof and a single state diff right. So the data availability footprint can be very small. It could literally just be a single boolean value. That was like you completed the dungeon and if you completed the dungeon and it's like okay, when you sell that transaction some on chain logic and say like okay this player finished running Molten call give them loot for all the different bosses kind of thing I think probably it'll be more than that. But that's one fundamental difference as well with this approach versus optimistic roll ups where you can't really achieve that. And so I think there's a good path for us putting these types of games into production and fully inheriting the solution the security of Ethereum versus having to make security trade offs and use alternative data availability solutions.
00:49:42.295 - 00:49:56.543, Speaker B: But I think there's still a bunch of use cases where it will make sense to use alternative data availability solutions like Celestia and Polygon Avail and those things as well. So it's definitely something we're interested in supporting as well.
00:49:56.679 - 00:50:15.175, Speaker A: Amazing, amazing. I mean we're running soon out of time so I just want to make sure that you have no more topics you want to address and if not I can move on probably to a couple of questions before closing. Finishing up this hour with you and all the awesome information you gave us.
00:50:16.355 - 00:51:09.785, Speaker B: Yeah, I mean nothing else off the top of my head. I just want to again shout out and reiterate. You know the Dojo ecosystem is a very collaborative open ecosystem and a lot of people building cool stuff. If you have any interest in joining it, check out the Twitter handle at Oheodojo and join the discord. Participate in the Ninja School tomorrow, join the game jam. We're going to have I think at this point it's like over like 50k in prizes as well as a secret surprise that we haven't announced yet I believe but maybe we'll announce shortly a track with with some bounties and we're going to have like the Unity SDK will be ready, for example, at Dojo, which is going to be exciting. So, you know, just encourage everyone to check it out.
00:51:09.785 - 00:51:31.395, Speaker B: And even if you're not a developer and you have ideas for games, like it's a good place to share those ideas or just to play games and give feedback and get involved in the ecosystem, I think it's a very exciting space and I think if you're interested in these kind of things, it's a great way to get involved.
00:51:31.855 - 00:51:53.281, Speaker A: Amazing. So let's take a couple of questions, two questions from the audience. So raise your hand and I will request to speak. And I will let you speak. If no one's trying, I will. One more minute and if there is no question, I would just. Thank you all.
00:51:53.281 - 00:52:02.485, Speaker A: Just waiting. Okay. Seems like not seeing anyone. There's a lot of tweets.
00:52:03.585 - 00:52:19.545, Speaker B: A lot of tweets. Yeah, Just posted. We actually, we just released an article that talks about provable games that you can check out. I replied to the spaces with it. So if you're. If you're interested in learning more, definitely go check that out.
00:52:20.645 - 00:52:48.675, Speaker A: Oh, request. There is a word request which is. Let me add a speaker. King, how are you? Struggling a bit. Yeah, it takes time. Thanks X for working so well. Thanks a lot.
00:52:48.675 - 00:53:04.559, Speaker A: Ah, there is another one. Gink. Okay, I'm gonna try with gink. Ah, okay. Gink can talk now. Can you g. Can you.
00:53:04.559 - 00:53:11.273, Speaker A: Can you speak? No, I can't. Interesting. I can speak. Okay. King, can you. Can you ask a question? Go ahead.
00:53:11.329 - 00:53:47.105, Speaker C: Yeah, probably you guys know me, but yeah, still I'm curious about like when it's going to be actually portable on Chain. Because right now I've registered where I rest through like Terrence Paper just now. And yeah, since I've been Dojo fan, I actually got a hit on like Isaac from Topology and after that they released the Shoshin and I've been playing it for pretty long time, I guess. So right now I understand by. My understanding is like Shoshin is right now a totally provable game, but rather than like on chain. Verifiable game.
00:53:50.805 - 00:55:07.949, Speaker B: Yeah. So yeah, Shoshin takes an interesting approach where basically they implemented almost like their own interpreter on Chain and they have like a language designed for the game and you create like the sequence off chain and then you submit it for verification on chain. To your question of like, when is Katana provable in production? Like on Mainnet? I think it'll probably be like January or February next year with the compatibility with Sharp from my understanding there's a bunch of efforts in parallel to make this happen and we have resources focused specifically on it. It's for settlement to Ethereum. So basically like aggregating katana proofs with all of the other Stark proofs that are generated in the Stark Net like starkx whatever ecosystem and settling that onto Ethereum. And then there's an in parallel effort to settle Katana nodes to Stark Net which I think is in a similar time frame which will I think probably be one of the cheapest venues to settle katana chains. And that'll be I think also towards the end of February.
00:55:07.949 - 00:55:12.181, Speaker B: And then we have another. Sorry, no, no.
00:55:12.213 - 00:55:20.065, Speaker C: I mean it's a straight fire man. Like either. It's either got to be Denver or London. I'll definitely try it out.
00:55:20.405 - 00:56:19.573, Speaker B: Yeah, the goal is for east Denver. Another thing that we're trying to do that people don't I think aren't aware that this is possible. But like because you have this ability to aggregate all the Stark proofs and verify them like basically for free on Ethereum is to make those proofs and the associated facts available on other roll ups like so for like base and Binance or optimism and and stuff and even like Redstone from the MUD team to enable people to take advantage of the affordances of Dojo while still interoperating with some existing on chain infrastructure or applications or smart contracts that they have potentially deployed in the EVM world. So that's another parallel effort that we're working on. I don't have it. We're still figuring out the approach but something that we ideally want in Q1 next year as well. Awesome, thank you.
00:56:19.629 - 00:56:23.345, Speaker C: Thank you so much. It's music to my ears. Thank you.
00:56:23.845 - 00:57:03.459, Speaker A: Awesome. There was one person was supposed to speak but they renounced. So I think we are going to wrap up. Thank you so much Terence for all the amazing comments and insights about what you guys are building, what the on chain gaming world looks like, what Dojo does and all the get the excitement of ginks going also that's basically prove that you're doing something right. And more than this, as I said I keep telling people how exciting I am by what you guys are building. There is one last person. Kube speaking.
00:57:03.459 - 00:57:12.055, Speaker A: I will have to go very soon so maybe if you want to ask a question and we can answer very very briefly because I have a hard stop in one minute.
00:57:15.645 - 00:57:15.997, Speaker C: Okay.
00:57:16.021 - 00:57:18.165, Speaker A: Just see. Okay, yeah. Awesome.
00:57:18.325 - 00:57:18.853, Speaker B: Perfect.
00:57:18.949 - 00:57:26.037, Speaker A: So thank you everyone and thank you Terrence. Have a great day and enjoy beer games. We want them. More of them.
00:57:26.181 - 00:57:28.573, Speaker B: Thanks for having us. Thank you, everyone, for joining.
00:57:28.749 - 00:57:29.037, Speaker A: Bye.
