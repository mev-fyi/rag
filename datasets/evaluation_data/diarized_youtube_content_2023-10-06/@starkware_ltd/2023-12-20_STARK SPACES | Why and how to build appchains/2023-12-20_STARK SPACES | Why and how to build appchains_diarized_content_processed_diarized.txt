00:00:00.490 - 00:00:00.750, Speaker A: Yeah.
00:00:00.820 - 00:00:36.120, Speaker B: Hello, everybody. I'm Timothy. I work at Starquare and I'm in charge of Madara with the exploration team, which is the team led by Abdel that you probably know. And today we are going to talk about app chains and how we can build them on Starnet. What's the future for the system regarding this aspect? And we have different people with us today who maybe want to present themselves. Go ahead, guys.
00:00:40.440 - 00:01:16.050, Speaker A: Okay, I think I can start. So, my name is Apul. I'm currently the founder of Carnot, which is a roller passive service company around Madara. So basically, if you want to build a Madara app chain, there are a lot of moving parts around it. Even though everything is like open source, there are still a lot of parts, such as setting up your validators, full nodes, bridges, and so on. So we help you with all those things when you want to launch an appchain, so you can just focus on your business logic. And apart from that, we are also like contributors in the Madara ecosystem itself, and we're trying to get to production as soon as possible.
00:01:22.520 - 00:01:40.120, Speaker C: Yeah, I can go next. So I'm Vibu, I work in avail in the explorations team with Madara. We've helped build the DA interface and we've been contributing to Madara ecosystem. Excited to see what the future holds.
00:01:42.860 - 00:02:02.380, Speaker D: So, hello, everyone. Hope you can hear me. Well, I'm Matthias. I'm the co founder of Pragma and one of the core maintainers of Madara. So we're basically building an oracle, which is right now live on Starknet, but we're working on the next version, which will be a Madara app chain. So a custom Starknet app chain.
00:02:05.700 - 00:02:48.940, Speaker B: Okay, cool. So thank you to all three of you to be there. I think maybe we should start by explaining a little bit what is madara. I see a lot of known Twitter handle in the public, but maybe not everybody is familiar with Madara, even if we did a lot of buzz. And Adele is really good at Twitter. So you guys probably know. But maybe we can go back on this and take a little time to explain maybe a bit more technically, what's this architecture? Or are we able to provide the ecosystem with appchain, with Madara and not just like it magically?
00:02:55.200 - 00:03:50.032, Speaker A: So, yeah, basically, maybe I can start and then others can add accordingly. So initially, basically, I think back in 2018 2019, Stockware started the entire thing of app chains with Cairo. So we had like DydX, immutable, so rare, and a lot of these other tools that came up and it sort of showed Cairo in the sense like ZK systems made sense, like verifying computation on Ethereum and doing all the actual computation off chain. After that, stockware went ahead and started building Starknet to make a general purpose chain for anyone to use Cairo. But then we still needed an open source framework for people to build app chains. Like there are use cases where you can stay as a smart contract on, let's suppose Starknet, but there are use cases where you might want to spring out and be your own chain so that you get more control over what you're doing. And that's what Madara is.
00:03:50.032 - 00:04:34.972, Speaker A: Madara is like an open source framework for anyone out there who wants to build a chain built on top of Cairo so it's efficiently provable and you can choose if you want to settle on the l one or settle on stocknet. If you want to just be sovereign, it's completely your choice. As of today, Madara is pretty much a clone of the existing stocknet ecosystem. We have most of the parts running, a few of them are still pending and I think it should be completed by early next year. But yeah, as of today it's like a clone of the current stocknet version. But with that being said, it is also very modular. So we have taken the core parts of Starknet and we have integrated them with substrate, which is like a framework for you to build blockchains.
00:04:34.972 - 00:04:56.196, Speaker A: And as a result of that, what happens is that it's very modular. So tomorrow if you want to change the concession system out, you want to change what proverb you're using, you want to change the dlls or anything, you can do that very easily, so you have complete control over it. So yeah, that's pretty much what Madara is by my definition. But maybe someone can add whatever I.
00:04:56.218 - 00:05:24.080, Speaker B: Missed, maybe machas can take the next turn, because if I remember correctly, you were there at the really beginning of the project. So maybe you can give us a bit more backstory on why we choose the madara, not Madara, sorry, why we choose the substrate as a base for our infrastructure rather than maybe another framework or writing.
00:05:25.620 - 00:06:32.992, Speaker D: So actually when we started out, the ideation of everything already started back in January. We were like, okay, we want to build our custom app chain that was necessary for our business use case. But at that time there was only slush, which were exploring basically tendermint, like going from scratch from a tendermint implementation in go and making that work with the caravm and everything, but quickly realized that the whole Starknet ecosystem was being rewritten in rust. So you have a lot of core components that make Starknet work today that are written in rust. And so rewriting everything from go was a bit of. We wanted to leverage the existing work in the work that was being done by a lot of actors, like Lambda class or starquare in the. So we started looking at substrate, and Abda at that time was very convincing about how modular and powerful was substrate, which is the framework used by all the chains, the Polkadot ecosystem.
00:06:32.992 - 00:07:38.780, Speaker D: And when we started using it very fast, we got a PoC working, which was quite amazing to see the flexibility, the power of this framework, which basically enables you to do anything, doesn't make any assumptions about how your blockchain operates, like what hashing function it has or what the block time. Everything is very easily configurable thanks to rust expressivity. So that was this. We started doing the POC to just check if it's going to be actually performant and if there wasn't unexpected blockers. But yeah, quickly we realized, okay, this is going to work. And then we started adding more and more features with the goal to first be fully starknet compatible and also to work on Starknet extensions. That's something very important, is that Madara can be very useful to experiment with new features that are not yet live on Starknet or Starknet app chains.
00:07:38.780 - 00:08:01.724, Speaker D: But yeah, that can be implemented in Madara, can be toggled on and off, you can disable the fees, you can have autonomous contracts or this kind of stuff. And that's very exciting in both an exploration point of view and in a customizability point of view for people that want to build app chains that are not only clones of Starknet.
00:08:01.772 - 00:08:02.370, Speaker C: Right?
00:08:03.720 - 00:09:00.004, Speaker B: That's pretty much it, yeah. I think one thing which is really interesting with using substrate is that the substrate ecosystem started more than five years ago. And five years ago, I think when we look back, everybody was still looking for the Ethereum killer and what will be the next big chain. And what we end up realizing is that there won't be an Ethereum killer, and we will be like, have multiple chains that will scale differently and that will settle on Ethereum. That's a roll up model. And Ethereum really embraced this shift on the last years because by itself, it wasn't able to scale. But this exact design, not exact, but this design was something that has been envisioned by the Polkadot and the substrate ecosystem five years ago.
00:09:00.004 - 00:10:19.928, Speaker B: So they already have developed a lot of tech. And this framework, this wonderful framework substrate which aim in this direction, which is like making different chains and have them work together in being able to easily send message to each other and settle to Polkadot. And so what we did is we replaced this settlement to Polkadot with our Kro proof that we are able to settle to anywhere we want. But the core philosophy, I think the reason it works that well is because the philosophy we are embracing right now at the really big level is the same as the one substrate was designed for. And maybe it's time for our availer representative to tell a few words about all their on chain come in this design. Because we have worked a lot on data availability on Madara. It's something which is not yet ready in Madara, but it's much closer to be ready on Madara than in Starknet, I think.
00:10:19.928 - 00:10:38.180, Speaker B: And it's something we are aiming at since the first iteration of the product offering multiple data availability layers. So can you tell us a few words about this and what's the reason behind data availability other than Ethereum?
00:10:41.000 - 00:11:48.024, Speaker C: Yeah, of course. So to begin with, I just want to appreciate all the efforts that's been put into Madara. You look at Madara and you realize that it's actually a really well built Modera stack that you can use to, at the end of the day, build your app chains with your domain specific requirements. So when we started looking into Madara, we realized that it's also important for people to have options on the data availability layer that they want to use and why. The option is basically when people do build their own app chains, at the end of the day, the requirements sort of vary. The question relates to what is the trade offs you want to have with security versus the cost that you pay to have your data available. What are your requirements, what is the checkpoint frequency that you want to have, et cetera, et cetera, depending upon the requirements of the app change itself.
00:11:48.024 - 00:13:27.160, Speaker C: So it's very important for any builder that is using the modular stack to have that option to choose the DA layer that they want to at the end of the day. So with the DA interface itself that's implemented in Matara, the aim is at most with a config level change, you will be able to use the DA layer that you want to and have the integration done abstracted away from you. So at the end of the day, the most that someone will have to do is work on funding the accounts to be able to submit the data to the respective DA layers and then a config level change to use the DA layer that you want to use. Also coming to the opportunities that do open. Traditionally, starnet is sort of operated with DA on Ethereum, and of course this does bring a few, I would say trade offs for people for whom the requirements are a bit different. Right? So we all know that with star proofs, of course, because the proof sizes itself are a bit big, it's expensive to verify star proofs on chain. So the general solution is you batch much more transactions together, so that when you are verifying much more transactions at the same time, the fees that you pay at the end of the day on Ethereum is much lesser.
00:13:27.160 - 00:14:00.900, Speaker C: And because your da also is on Ethereum itself, you depend on Ethereum for your ordering as well. Ethereum consensus for your ordering. That means that the frequency in which you checkpoint on Ethereum is a bit slower. And this does really work very well for most use cases. But in case you want to have a high frequency app chain which is checkpointing on Ethereum much more frequently. So the bridging is much faster.
00:14:03.320 - 00:14:03.684, Speaker A: Or.
00:14:03.722 - 00:14:48.740, Speaker C: If you want to have, let's say much faster confirmations for the order of your transactions, it's good to have that option. So you can choose the data availability layer of your choice like avail, which gives you the ordering guarantees based on its own consensus. And then you are able to verify the ZK proofs on the client side and get hard objective confirmations that this is the final order, while at a much later stage bridging to Ethereum through the checkpoints. I think these sort of possibilities are now possible because of the modular architecture of Madara itself, which is pretty amazing in my opinion.
00:14:50.360 - 00:15:48.552, Speaker B: Cool. So to sum up a little bit, with Madara we are abstracting the complexity of running like Starknet chain, but really fast. In the process more complexity started to arise. You have to choose what is your settlement layer? Where does your data go? So you have a data availability layer or do you put everything on Ethereum? But do you settle on Ethereum or in the future, we want to be able to provide layer three where people will be able to settle on Starknet and then Starknet will settle on Ethereum. We can even imagine layer four, layer five, if somebody want to play with this. So what's starting to arise? And that's the part of the development we are in right now. So the part of being able to run Kro code, it was done really fast.
00:15:48.552 - 00:16:33.920, Speaker B: It was done in the first month, I think of the development on the project. The next step were to get to implement the RPC, to have more and more compatibility with the actual starnet ecosystem, the starnet libs, the wallet. Thank you, Lana, my co worker for this job, she did a good job on this. It was not easy. It also allow us to discover some bugs, some incorrect in the spec or in the different implementation. So it was really interesting. But right now, the part we are developing is the part which is about proving your execution and then settling your data on some layers.
00:16:33.920 - 00:16:51.790, Speaker B: And as you already heard, we are offering lot of ways to do that. And that's why I think Apur came up with a good startup idea. Maybe he wants to pitch us today.
00:16:55.760 - 00:17:02.400, Speaker A: Yeah, sure. If I understand the question correctly, you want me to talk about Carnot and what we are doing.
00:17:02.550 - 00:17:03.250, Speaker B: Exactly.
00:17:04.500 - 00:17:56.412, Speaker A: Yeah, thank you for asking us that. So basically, Carnot basically started off when I was actually working with Pragma. So I was actually working with Matthews before at Pragma to work on Madara, essentially, and also help pragma wherever possible in getting their app chain set up. And during that time, I realized that this entire effort of creating an app chain is going to be similar across multiple chains, like multiple projects that want to launch their app chain. So that's when we decided that, you know what, maybe we should just build this like a roller passive service platform, because there was nothing at that time that existed for Madara. So, yeah, that's how we decided that we will be launching Carnot. We announced just last month in Istanbul.
00:17:56.412 - 00:18:52.096, Speaker A: And the roadmap for Carnot, essentially, is that very soon that you will be seeing a basic command line tool which would be available for anyone to use to run a Madara instance locally. So right now, the process is like, you need to either clone the Madara repo or you have to probably. We have made a Madara action template as well that you can clone and start from there, but we want to make it even more simpler. So basically, you can imagine like a CLI tool that you just run on your terminal, and we will set up all the libraries that you need. We will download Madara the Explorer, and probably like a faucet and set those things up for you and give you the URLs directly, and you'll have them running locally so that at least you can start playing around with it. And along with that, obviously, we're also working with compatibility. So like Timothy just mentioned, we're trying to get it compatible with wallets and libraries, and we're pretty much there.
00:18:52.096 - 00:19:27.496, Speaker A: I think there are small bugs here and there, which we already have active prs for that on the repo as well. Just before this call, actually Lana was just reviewing the pr, but very soon we'll have these things merged. So basically with this tool, it'll be very easy for anyone who doesn't want to go very deep into the infra of how these things are set up. But he wants to build an app chain. You can just use that CLI tool to locally start your nodes and faucets and explorers and just start building on top of them. That's one. The second thing is we want to take this even one step further.
00:19:27.496 - 00:20:09.370, Speaker A: So a CRM tool for testing is fine, but we want people to be able to deploy testnets and even maintenance eventually, obviously when Madara is ready. So the idea over there is to have a self serve model. So you can come to our app and you can choose essentially the configuration of your chain. Initially you can start with, you can choose what's the fee token that you have, what's the block time that you need, what's the DLA that you want. If you're supporting multiple provers, then you can choose the prover and so on. So you can choose all these things. Obviously the North Star metric over there is that you can probably just give us a docker file of your required setup and we'll deploy everything for you.
00:20:09.370 - 00:20:50.200, Speaker A: But we can start with some basic changes and then we can add when we see demand from people, and the entire thing is obviously very flexible. If there's someone who wants a specific feature, then we can obviously add that for them specifically. But that's what the platform would look like. You just come to our place, you just select a few options, you click on deploy and you'll have your own chain running the extreme. Most cases you can just give us like a docker file and we'll get that running. And when it comes to where the infra would be running that again, eventually it will depend on what the user wants. We'll be starting with something like we would be hosting the infra for you, just to make it really easy and quick to start with.
00:20:50.200 - 00:21:21.296, Speaker A: But eventually, if you want, let's suppose you want more control over the infra that you run. Then you can just use Cardnot as a service where you can provide us the required keys or the required accesses, and we'll deploy and set up everything on your infra itself. That's something that will come later on, but I'm sure there'll be a lot of companies who will be worried about where the infra will be, who own the infra and everything. So we have options for that as well. That will eventually come up. But yeah, that's essentially the idea and roadmap for Cardnown as of today.
00:21:21.478 - 00:21:47.130, Speaker B: One of those things you can configure you mentioned a lot, but just today we had a little chat about kero native, which is a way developed by lambda class to execute kero code in native instruction of your operating system. Can you tell us a little bit about this?
00:21:48.960 - 00:22:47.896, Speaker A: Yeah, sure. So Lambda class took the amazing initiative to develop Cairo native, which basically right now what happens is that currently when you compile down, like first when you compile a code, you get Sierra, and then finally you get. And the chasm is, which is what is executed. But when you're normally executing chasm, you also generate your proof traces, which aren't very necessary. The proof isn't generated, but you're generating those traces which aren't necessary at that point in time. So essentially you're not doing the most optimized execution, because how the current flow works is your sequencer runs the chasm, gives you a soft commitment, and then whatever the sequencer did, including the transaction itself, which we just ran, is rerun again in the stocknet OS. And then the run of the stocknet OS is what essentially that goes to sharp and that gets proven.
00:22:47.896 - 00:23:40.700, Speaker A: So essentially if there is some way in which we can just skip all the proving parts of the chasm and we can make it more lightweight, as if you're just running it normally, like it's any other programming language, it's a very abstracted version of. But yeah, if you could do that, then you could give soft commitments very fast at the sequential level where you get a transaction, you quickly execute it and you give a soft commitment. And eventually when the stacknet OS runs it, that's when you create the actual trace, and that's when it goes to sharp and gets proven. So that's essentially the idea with Cairo native, what kyronative is trying to achieve. I don't want to say something wrong, but you can compile down your sierra, down to your native bytecode, and you can run it very quickly. The issues that we like to. Moti said the issue we were getting with integration is that Chiro native as of today is not no StD compatible.
00:23:40.700 - 00:24:19.550, Speaker A: And there are some possibilities where you can make substrate run in the native mode, but it wasn't that easy like Timothy mentioned. But it might get too much for this call, I guess. But that's a general idea with can just for the soft commitment part of your sequencer, you can just skip the part of generating the spaces and everything, and you can execute very quickly and give the soft commitment to user and proving will happen asynchronously. So that's the general idea. And maybe someone wants to correct me if I said something wrong or add something on top of it.
00:24:22.640 - 00:24:49.728, Speaker D: No, that seems pretty correct to me. Basically it's just TLDR. It's just a way the sequencer doesn't need to prove stuff, just need to sequence stuff. So let's make execute these transactions as fast as possible. And the fastest we can do is of course, executing bashing code directly. So that's the goal of this. But the no STD part makes it very hard to actually put into production.
00:24:49.728 - 00:24:59.050, Speaker D: And there might be some blockers in the future, but that's definitely one of the ways Starknet will go to thousand and more TPS, we hope.
00:25:01.980 - 00:25:55.960, Speaker B: Thanks a lot, guys. So next thing I want to talk, and I think can be interesting, is the way we built this project with the community. So Madara was a project from the exploration team. And as you know, the exploration team is part of Starquare, but it's a kind of peripheral in the sense that it's also really in contact with the community. It acts like a SaaS between the communities, the ecosystem and the internal teams of starware. And we are building projects that we want to see in the ecosystem, but our objective is not to make companies from there, or at least not to do that ourselves. So the first project was obviously Kakarot, which then became a company race fund for Madara.
00:25:55.960 - 00:26:31.460, Speaker B: We don't think it will take like this path. We are imagining something else, kind of a shared governance, where all the people that are actually using Madara, so companies like Pragma, like Carnot, or data availability layers, can have their world in the future of the project. And Matthias was really active on this battlefield for the project. So I would like him to talk a little bit about that. Can you do this, Matthias?
00:26:32.360 - 00:27:13.728, Speaker D: Sure, sure. So the idea was basically that Madeara has grown as a tech stack and as a stack to build app chains. We quickly realized that there were many actors, as you say, that were involved in its development. Like you have all these dlas, have possibly a lot of proving marketplaces. You have roll up as a service. You have customers directly, of course, that want to build app chains, maybe infrastructure providers for rpCs. So you have a ton of people like, let's say we want to add new consensus algorithms to Madeara, or there is a lot of tooling also around Madeira that we didn't talk about.
00:27:13.728 - 00:28:27.968, Speaker D: But that like gave birth to other projects like Gomugomu, which is a load balancing tool, for instance, for starknet sequencers. And yeah, we realized there were many tracks, many possibilities, and there was no way for us to coordinate all of these actors, especially as Madara being part of, being like a Starquare exploration team project, to have a bit more of structure. We decided to involve the core members that contribute to Madara in some kind of committee and to review the different proposals. So if you are a dev shop or have an idea of something that you want to build for Madara could be really anything. As we said, add a new DLA or the new consensus algorithm, or any feature, you can just come to us, make your proposal and this committee will basically review it and give you an answer. So it's just part of the core members, it's not fixed. It's like the people that are actively contributing to Madara are part of it and anyone can become part of it by contributing.
00:28:27.968 - 00:29:41.596, Speaker D: So it's really open and we still have the community calls on the side, of course, to have a public communication about the current tracks and everything. So I would say Tilde is just a bit more structure about how the next steps for Madara will look like and how anyone, any actor can come up and contribute in a formal way. And not just by making prs on the repo, which is great, but it's hard to incentivize in the long run. And we can show that with over stacks like opistack or even I think substrate, the cosmos SDK. All of these stacks, if they have lived through the years, it's mainly because the people that use these tax are contributing back to the stack and have some kind of incentive to do so. At least there is some agreement with some foundation like the IBC foundation or I don't remember the name of the Polkadot foundation. Yeah, so it's just a bit more structure and we believe it's truly a way that it's going to make Madara grow way bigger.
00:29:41.596 - 00:30:02.308, Speaker D: And we can already see that with so many great actors are contributing, here is available, but have a bunch of others like web three, MQ or quadratic labs and many others to come. So yeah, feel free to just let us know if you want to contribute.
00:30:02.404 - 00:30:29.010, Speaker B: Talking about the project to come and this is a question for all of three of you. Maybe not a personal, but it's just your opinion. What do you think should be the ad chains using Madara for which specific use case or any idea of use case you want to see moving forward on.
00:30:39.390 - 00:30:47.580, Speaker A: Matthew, I think it's best because Prague was like the first team to choose to build an app chain on Madara. So I think it's the best you start.
00:30:48.270 - 00:31:43.070, Speaker D: I guess pretty much anyone could really. We see this trend emerging where basically what we might end up with is every Dap becoming an upchain. There are pros and cons, of course, to this future, but the main con being like interoperability. How do you ensure that you can tap into liquidity from other chains? And that's harder, of course, if you're building your own app chain. But I would say the most basic use cases you might have in mind is like perpetual dexes and all these order books. It's very good because these are like apps that are siloed in one place, and you need a lot of efficiency of data to build these on chain order books. And this is one of the perfect use cases for app chains.
00:31:43.070 - 00:32:34.910, Speaker D: But this doesn't require that many modifications on the stack itself, and that's what is being done currently with the op stack or overstacks. But the cool thing with Madara is really you can go way beyond just taking your DAp in solidity and putting it on an app chain. You can actually think way further than that and think about how you can optimize truly your chain for your use case. Taking the example of Pragma, our app chain is not an app chain for customers. Like, there won't be any users that actually interact with the chain. It's just a chain that is used as a high frequency network. Like to have data feeds are updated at a very high frequency and in decentralized way, and act as a programmable layer of computation.
00:32:34.910 - 00:33:32.062, Speaker D: And all of this is possible because we can have features like autonomous contracts in Madar. We can add some slashing on the l one, where data providers are slashed directly on the l one if they behave badly on the app chain. And we can truly optimize our app chain, like changing the storage layout, removing all the unnecessary stuff that are usually used for general purpose app chain. And that's fairly easy to do with matter, surprisingly. And I want the people to generally think about these kind of use cases, not only for just don't think about cloning your dad, putting on the napchain, because you want to have your own block space. And that's great, of course, but you can go way beyond that. We've seen some use cases with people that want to customize the vm, like adding new opcodes or these kind of things.
00:33:32.062 - 00:34:07.660, Speaker D: And it's very hard to do on the EVM, right. If you want to have an app chain with custom opcodes, an op chain with custom opcodes, you're going to have a hard time testing that and putting that into production. Whereas with madarites it's quite easy. You can just add some cisco's in Cairo and it's way easier to do and you can really optimize your chain for that. And yeah, again, I think those are really great example of use cases, but maybe I think you have more in your mind.
00:34:09.230 - 00:34:54.278, Speaker A: Yeah, I was just going to say that basically, just to add on what Matthew has just said, if you're building an app chain, then one of the biggest things, advantages is sovereignty. And sovereignty comes in two parts. One of them is exactly what Matthews was saying right now, that you literally own the stack. And that's what we also see in web two today, right? We don't see web two companies saying that let's both of us have one common server where both of us will use rust. Someone maybe wants to use Golang, someone wants to use rust, someone wants to use something else for their own specific purposes. And even I'm a big, obviously we are very far from this goal and we are just getting there slowly right now. And even I feel like I agree with Matthew that eventually, probably every DAP should be an app chain.
00:34:54.278 - 00:35:42.700, Speaker A: But even if you just look at today's use cases, if you just go to Ethereum and you probably check out the EIP list, you will see that there are so many EIPs which are pending, and everyone knows that these EIPs make sense, whether it is something related to autonomous contracts or it's related to account abstraction, or maybe five other things, everyone knows that these EIPs make sense and they should be in Ethereum. But it's just that Ethereum has become so big today that it's just not possible to add all of them that quickly. And that makes sense. That's going to happen with every general purpose chain eventually, once the chain becomes so big. And we see that in web two as well, right? When your companies become so big and you're securing probably billions of dollars in value, you cannot make mistakes. So that's going to happen over there. And then what happens is that you lose the access to new features and new tech.
00:35:42.700 - 00:36:12.770, Speaker A: But as you who's building a new DAP or a new project, you want that. Maybe that's the most important thing for you. For example, in the case of pragma it's very important for them to have lower block times. It's very important for them to have probably like single thought finality or autonomous contracts. And that's why it just makes that sense for them to own their stack. So in that sense, that's the first part of sovereignty where you're actually owning the tech that you're doing. And the second part is owning the state itself.
00:36:12.770 - 00:37:16.870, Speaker A: So even though Ethereum today is very secure and it's one of the most decentralized chains out there, if tomorrow you deploy something on Ethereum and it gets hacked away, like your protocol had a bug in it and there was a hacker, you took away all the funds, something similar to what we saw with Kyberswa, there's nothing you can do. Ethereum validators are not going to fork away or reorg for your specific app chain. The only thing you can do is probably negotiate with the hacker and get your funds back. Whereas that's not true with app chains. It's a little complicated, but as long as assets are probably minted on your chain itself, or maybe your app chain doesn't have much to do with funds, it's like probably a game or something, right? So your chain decides the state, the native state, and you can always choose to fork away in the case of a hack, so you actually own the state in that case. So these are two very important things, why you should consider building an app chain. And as of today, it might not be true for all the cases.
00:37:16.870 - 00:38:03.106, Speaker A: For example, let's suppose as of today you have a use case where you want to be routing funds between ten other swaps. Then maybe making a smart contract makes much more sense for you. Or maybe there is a use case where you have users who have millions of dollars and they are okay with paying hundreds of dollars in fees and they want the highest level of security, then maybe you can just do a smart contract on Ethereum, right? Like majority of usage of Uniswap today still happens on Ethereum because there are a lot of people who don't mind paying high fees. But let's suppose you have a different use case. Your users care about user experience. They want low fees or no fees at all, and they want like an order book model. So it should be capital efficient and that's your target audience.
00:38:03.106 - 00:38:57.020, Speaker A: Then you probably need to make an app chain like Dydx did, or like Paradex is doing. And just another example, I was giving this one time before, let's FIFA tomorrow. FIFA has this thing, right? Like they have their cards and their players and you can match those players to make your own team. So if they want to put this on chain, just how circle puts USDC on chain. Similar to that, if FIFA wants to put their players on chain and then they want their players to make fancy games around those cards, then they can make their own chain. Because if they do it on ethereum or something and this gets hacked and someone is able to print infinite number of cards, then Ethereum won't fall for FIFA, right? But if FIFA had its own chain, then they have, complete with social consensus, they can choose to move away from hacks and they can also choose to own the stack that they need. So yeah, there's sort of a long answer, but that's my view on if you should build an app chain or not as of today.
00:39:01.150 - 00:39:51.754, Speaker C: Yeah. So I just want to say that the best use cases sort of arise from the flexibility of the sovereignty that Madara offers. Right. I want to present that idea through a small example. So we are so used to thinking about blockchains in a perspective that you pay the gas fee for any transaction because of course it's decentralized and you sort of have to incentivize the nodes to run your computation on behalf of you and whatnot. But maybe when we think about app chains, just maybe you want to have a different construction altogether. Let's think about an order book exchange that Mathias was talking about.
00:39:51.754 - 00:40:20.580, Speaker C: And you probably don't want to have the users paying gas fee for each of the orders that they're placing. And instead you probably want to charge them some sort of a subscription fee that covers the settlement cost that you have either to Starknet or to Ethereum itself. These sort of constructions are possible through Madara, and these sort of unique use cases are what sort of excites me.
00:40:21.670 - 00:40:37.130, Speaker B: And what do you think which use cases could be leverage avail the best? Like what's the best use case where you should definitely use avail for data availability? In your opinion.
00:40:40.910 - 00:42:18.122, Speaker C: I would say any use cases where you want faster confirmations and lower cost of settlement, you're better off using solutions like avail. Because at the end of the day, the cost associated with submitting that data to Ethereum versus submitting to avail is magnitudes cheaper. Also, at the same time, if you want to have sovereign sort of constructions, in that case as well, when you're using something like avail through the Lightline networks that you do have, you can verify the consensus of the base layer itself. So basically, when you want to verify the state of a chain, there are two things that you need to know, right? The first thing is whether the order is correct and the second thing is whether each execution was done faithfully. And you are most secure when operating in a chain when you're verifying both of the things. So for sovereign chains, the best part, according to me is you can basically have client side verification of both of these things when you're using DA layers like avail. So essentially what that construction would look like is you are submitting the data to avail and you're using the ordering of the base layer to determine the order of your roll up and you are arriving at a social consensus on what the latest state or latest state of the state of your roll up looks like.
00:42:18.122 - 00:42:45.860, Speaker C: Right? And at the end of the day, when you have the light clients doing the verification for you, both the ZK verifications and the consensus verification to know the order of the chain itself, you are more secure to know the latest date. So I would say in these cases you would rather use avail.
00:42:47.670 - 00:43:19.100, Speaker B: Okay, thanks a lot. Thanks a lot for all those explanation. Maybe the next step we can take is the Twitter space is about why and o to build appchain on Starknet. Maybe another question we can ask is when to build an appchain on starnet. So what's the roadmap for Madara look like currently? And when do you think we will be able to have our first app chains out in the.
00:43:23.140 - 00:43:23.504, Speaker A: Mean?
00:43:23.542 - 00:43:26.956, Speaker D: That's a good question for you, Tutimoto.
00:43:26.988 - 00:43:32.150, Speaker B: But I'm really happy to be the one asking it and not the one answering it this time.
00:43:33.880 - 00:44:25.664, Speaker D: But I think optimistically we can start to see great things happening in Q one next year. I think right now most of the hardest thing was really to pull out the messaging, testing out the D layers, fixing these kind of things, having the settlement working. And the last step we need to solve is the proving part. So that's really the last step, connecting Madeira with sharp so the Starquares prover. And once that is done, we have pretty much nothing left limiting us. We're already almost perfectly compatible with Starknet. Still a few things and then it's more about fixing the few bugs before going to production.
00:44:25.664 - 00:44:33.800, Speaker D: But Apple, correct me if I'm wrong, but next year, early next year, we should see some the first app chains growing.
00:44:35.340 - 00:45:17.610, Speaker A: Mean like I just want to add on one thing or to what Matthew said is like, yeah, we will be production ready early next year, but a lot of the things are already within. So you have the Kairo VM, you have the stuff that RPC spec available. Most of the tooling works. So if you actually want to start experimenting and playing around with Madara, you can start doing that today. And actually, if you can, that will be really helpful for us as well because we'll get a lot of feedback on what are the things that users want. And maybe if there's something broken, you can let us know that as well. We'll be also launching a campaign very soon where Cardnot will be launching a campaign very soon with a whale fair.
00:45:17.610 - 00:45:43.010, Speaker A: We would want people to try out building app chains with Madara, but in general, I wanted to say that obviously, once the proverb is ready, that's when you will have Madara production ready. But right now as well, you can just start playing around with it. So if you're someone who wants to build an app chain eventually, then this is a good time for you to already start integrating with Madara and seeing if it works the way you want it to work.
00:45:43.380 - 00:46:34.176, Speaker E: Hey guys, just wanted to say hi. Abdem from Starquare. I wanted to say that I'm very proud of the community of builders we have gathered around this project, and you guys are a perfect example of that, like Pragma, carnot veil and so on. As you said, poov, I agree with you. It's really time to play with it now, because the more we can gather user feedback, the more we can improve it. So it's already in a state where you can use it and deploy your app chain as a sovereign roll up without settlement and without the proving, of course. But it's already fine to do some tests on your app chain, to do some kind of customization, like customizing the fields or playing with some consensus mechanism, stuff like that.
00:46:34.176 - 00:47:12.936, Speaker E: So yeah, it's now. And in terms of production readiness, we rely a lot on pragma to be the first Madara app chain in production. But yeah, we still have some important work to do on the Madara sharp integration because we want to connect it to the existing sharp probing infrastructure of tarkra. That is the most battle tested probing infrastructure in the world. To say it simply. So it's very important to us to connect it to sharp. And also we want another possibility for appchain, which will be to use stone proverb directly.
00:47:12.936 - 00:48:16.972, Speaker E: Because as you probably know, stone is open source and sharp is not. So we want a possibility for appchains to have their full sovereignty and being able to use a full open source stack, even if the most optimized infrastructure will still be sharp. Also, because you can benefit from the scale and amortization of costs, because it's a shared infrastructure. It's used by stocknets, but also stockx, and it can be used for individual app chains too. So it's a good way to amortize the costs. But still we want both to be available for appchains, because one of the good benefit of appchains is to have the full sovereignty. And the last thing I wanted to say before jumping is that I strongly believe that once Madara is fully ready, it will be the most complete and customizable roll up framework that exists in the industry, because many people claim that they have modular stack, et cetera.
00:48:16.972 - 00:49:30.410, Speaker E: But if you really look, actually you can just configure a few parameters like block time and so on. While with Madara we have a very deep level of flexibility thanks to using substrate, of course, and it was one of the reasons why we chose it as evolved, explained it earlier. But it will be really flexible and I think it will be a great enabler for the promise of the modularity. And that's why we are also excited about our collaborations with avail, working also with Celestia, Nearda and so on, to enable max flexibility for appchains. So those are the things I wanted to say, and also I want to say to Timote that I'm really proud of how you are now leading the project on the technical front and coordinating the contributions for all those different players, because we are happy to work with such great number of partners, but it also makes the coordination harder. So wanted to also to say that Timote is doing great job on that front and it's only the beginning for Madara. So no one is ready for what it will enable in the next six months or twelve months.
00:49:30.410 - 00:49:34.520, Speaker E: That's it for me guys. Bye bye.
00:49:35.980 - 00:50:16.712, Speaker B: In addition to what he just said, it made me think that. And this one is on us. But we had a testnet at some point which was a one to one copy of Starnet. It was supposed to offer the same features exactly without any of customization enabled, but I think it's still running somewhere. But we made so much change to the code base and added so much feature fixing bug. Then I think we have to launch a new one and it's on our to do list. But it's never at the top, top of the to do list.
00:50:16.712 - 00:50:49.810, Speaker B: But we really have to do this because it will let you guys and girls the ability to play with it, to create transaction, to deploy smart contract. It can be like a starnet, go early testnet. But on Madara so that's something we had to deploy and I don't think we will do it before the end of the year, but at the beginning of next year I think we should do it. What do you think about his matthias? And.
00:51:00.130 - 00:51:41.470, Speaker A: Like that makes sense. I think whenever the paths are ready we'll have a testnet and we'll love Cardnod to host the Testnet as well. And like I mentioned before as well, if you just want to play around, we already have Madara ready and we'll also be launching a CLI tool with Cardnod. If you just want to start a Madara instance locally, so you can still start playing around with it. But if you don't want to go through the double of running it yourself and you want to just use a public, if you want the experience of just using an RPC endpoint, then yes, we will also have a testnet very soon. You can just use an RPC endpoint like you use Darknet and play around with Madara.
00:51:42.610 - 00:52:23.850, Speaker B: Cool. Thank you very much. And I think we are close to the 1 hour, so we will maybe end with this question. All the fingers have been pointed to pragma because it will be like the first app chain on Madara. So can you tell us a little bit about what are you doing? Answer the question. Y and O to build appchain on Starnet, but from the point of view of pragma, what are you doing on a daily basis in order to build your chain on Madara?
00:52:25.650 - 00:52:26.062, Speaker A: Sure.
00:52:26.116 - 00:53:19.274, Speaker D: So the main goal of promo will basically be to be a moderate chain. So imagine like a Starknet clone, really. You take Starknet, you put it on your app chain, but with two main features that I think are very unique. There are few chains that exist out there in the wild that do this, but not as roll ups and are very important to make this work. So first, pragma won't be a user facing chain. So you as a user won't be able to actually use pragma, but it will be an infrastructure chain. So it's a way for us to have an oracle that is running at a very high frequency in a decentralized way and also act as a programmable layer.
00:53:19.274 - 00:54:13.582, Speaker D: So let's say you want to have a new data feed, you want to compute the realized volatility on bitcoin for the last ten days, then you just write your Carol program or probably solidity or overlay languages in the future, you deploy it on our chain, the chain will give you a quote. Okay, hey, you want to have this data feed updated at this frequency. Great. It's going to cost you that much and you start paying and your feed will automatically be updated by the chain. And you don't have to trust the chain at any point because of course all the computation ends up being proven and settled on l one. That's like a very important part there. So for the Dapps that are going to launch with us and consume these data feeds, there are a few possibilities here.
00:54:13.582 - 00:55:40.922, Speaker D: Of course, it could be from over Madara app chains. That's like the easiest path, especially thanks to companies like Herodotus, that provides very powerful interoperability protocols between chains. But we could imagine you could technically use any bridging protocol to actually get the data from our chain. And this is a way, it's very powerful way, when you think about it, to externalize, compute. Right? If you have a very heavy computation to do on your lo one or on your solidity smart contract, why not just externalize it to a chain that already has data that is verified? So that yields to the second very important feature of the chain. So the first one, being autonomous contracts, the second one is spashing. So people that actually provide the data to the chain will stake on l one, some pragma tokens, and then if they behave badly, so if they try to manipulate and push wrong data, the chain will automatically slash them by adding l two l one transactions to the chain, and so on l one, they will be slashed and so they will be penalized for doing this.
00:55:40.922 - 00:56:14.878, Speaker D: And that's also, again, I think, very unique. Like most of the slashing systems we see nowadays are not done in this way. So mostly the naive way would be to just have slashing on our chain. But here there's really like a communication happening between what's happening in our chain and consequences on the l one. And those are the two main features that show how powerful Madara really is. And yeah, I think those are pretty much it.
00:56:14.904 - 00:56:21.400, Speaker B: So it wasn't extremely complicated for you to add this to the already existing Madeara code base?
00:56:22.570 - 00:56:29.260, Speaker D: No, the great thing is that these are like extensions to Madera itself, so they can be toggled on and off.
00:56:31.310 - 00:56:56.660, Speaker B: Okay, well, thank you very much. We reached 1 hour time mark, so I think we are going to wrap things up there, unless you want to add one last thing before we shut down the call. We good?
00:56:58.470 - 00:57:28.320, Speaker D: Thank you very much for hosting this, Timothy, and I hope everyone, some people learned about app chains on Starknet, but yeah, get ready. It's going to be way more exciting the next few months when we launch, when a lot of app chains launch through Carnot and very exciting times ahead next year. Finally the starnet stack getting some life and things on true adoption call.
00:57:29.170 - 00:57:47.060, Speaker A: Yeah thank you. Thank you for organizing it. And yes everyone, I just also wanted to say that if you're playing around or testing with Madara, make sure you join the telegram group and ask us any questions or if you face any bug you can just put it over there and we'll try our best to solve it as soon as possible.
00:57:47.990 - 00:58:12.840, Speaker B: And if you happen to know how to code well, you can contribute to the code base. We are always open to new developers from different level of experience and background and skills. So yeah, please visit our repository, our telegram as approved said and see you soon. Debu one last thing.
00:58:14.930 - 00:58:30.480, Speaker C: Yeah, nothing to add for me but thank you so much for hosting this demoti and thank you for the invite as well. Feel free to dm us with any questions. If you have anything related to the dlas, we are more than happy to help you set it up.
00:58:31.250 - 00:58:33.950, Speaker B: Thank you very much everybody. Goodbye.
00:58:35.730 - 00:58:37.306, Speaker D: Thank you. Bye bye.
00:58:37.498 - 00:58:38.346, Speaker A: Thank you. Bye.
