00:00:04.020 - 00:00:46.416, Speaker A: Okay, I'm now going to start my talk, and I want to convince you that Starknet, Starkx, the Stark technology, is a future proof technology. It is the right thing for blockchain scalability. It's here to stay, and it's good to be building on it. And using it now should be a little bit easy, because if you're here, you're probably at least open to hearing this. But nevertheless, I'll try to say it. So I might be preaching to the choir, but anyways, here it goes. So, I'm Eli Benson.
00:00:46.416 - 00:01:33.280, Speaker A: I'm co founder and president at Starkware. I want to tell you about the end game that Stark is. So, like everything, the talk is going to have three parts. How did we get here? Just a little survey of how we got to building this technology, a little bit about what is our collective dna reflecting on it now that we're five years at it, and also a little bit about where we are going. Of course, you're going to hear a lot more about where we are going throughout the talk, throughout the whole event. So how we got here. Our technology, Stark, is a means to an end, and the end is integrity.
00:01:33.280 - 00:02:08.232, Speaker A: What it's about is about integrity. And integrity was beautifully defined by C. S. Lewis as doing the right thing, even when no one is watching. So we highly value integrity in others, in systems, and we strive for it. And our technology comes from a large class of technologies that often they're called proofs, validity proofs, your knowledge proofs, interactive proofs, and a whole bunch of other things with the word proofs in them. But the proofs are a means to an end, and the end is integrity.
00:02:08.232 - 00:03:35.216, Speaker A: It is knowing that the right thing was done even when no one is watching. And in the context of our technology, it is integrity in computation. So knowing that a computation was done the right way, as if we were executing it, even if we're not watching, and even if the party that is asked to run that computation could be incentivized to steal all of our money or misappropriate funds or all of the other stuff that, as we all know, actually does happen in the world of blockchain and also elsewhere when you just entrust funds or important information with others. So there's this technology that allows you to achieve integrity by using mathematics. And again, my talk was supposed to come after Professor Goldwassil, who was going to tell you about how it all really started in 1985, in this beautiful realization of a new paradigm where there is a prover and a verifier so that was in 1985, the invention of interactive proofs and zero knowledge proofs. But I actually want to quote a paper that really epitomizes all that we're doing. It's a paper from 1992 by four brilliant theoretical computer scientists, Lassi Babai, Lance Fort, now Leonid Levin, and Mario Segadi.
00:03:35.216 - 00:04:28.892, Speaker A: And there is a beautiful quote from it that says, a single reliable pc can. So think of a pc, this is from 92, as a very weak computer. It can monitor the operation of a herd of supercomputers with powerful but unreliable software and untested hardware. So we have a very weak device, but one that is reliable, that, through math can monitor and sort of curtail and assert integrity over a much greater computation, even if it's unreliable. So this was in 1992, and I want to explain a little bit, give you a little glimpse of how it works. And this is how I would try to explain it to my mom if she were sitting here. Well, she actually is sitting here, so.
00:04:28.892 - 00:05:23.416, Speaker A: Hi, mom. I'm going to try and explain it. And here's an example of something that we would like to know was done with integrity, that the right thing was done. So someone claims that starting at a state hash x at a certain state of, let's say, of the accounts, that someone who may be unreliable processed 1 million transactions and she processed it through a program that we all know that it's the right program. It's public, everyone saw it. And the new state of the system is y. So we would like to know that that's really the case, that now if we would have rewound that computer and executed those million transactions, we would have reached the same stage.
00:05:23.416 - 00:06:52.980, Speaker A: So this is a claim that someone is making to us, and maybe someone is running an unreliable hardware or software, or maybe incentivized to seize funds, because maybe it's an exchange that is saying one thing, but actually wants to do something else, which, of course, never happened in the world of blockchain, but some theoretical construct. So the math that was invented in the early 90s shows that you can take any such claim about a computation and convert it into something that is a little bit like a soduco puzzle or a crossword puzzle or something, where there are some entries that are filled in and there's a large blank space that needs to be filled in by whoever is making the claim. And we'll call this entity making the claim the prover, because it is trying to prove to us that the claim is correct. Okay, so there's a mathematical way to take any statement about computation and convert it into one of these crossword puzzles where the constraints, or like the things you need to satisfy each one of them is local. It looks at three or four cells, but there are many, many of them, and they interlace and overlap in all kinds of weird ways. And all of this is predefined by the math once you know what the statement is. So if you change the statement, you're going to get a different puzzle.
00:06:52.980 - 00:07:40.900, Speaker A: Okay, every statement gives you a different puzzle. And another thing is that the larger the computation is, the larger this table is that needs to be filled in. So if it's about one transaction, it's going to be a small table. And the more transactions or the more computation you add, the bigger this table becomes. Okay, so the mathematics behind this technology, and now I'm talking about the early days, it was called PCP, I'm not going to open the acronym, showed that there's a way to use math to convert a statement about computation into one of these big puzzles. Okay, and now what is the protocol? There is a prover. The prover is the party making the claim and trying to convince the world that she operated with integrity.
00:07:40.900 - 00:08:30.600, Speaker A: So she needs to submit a solution to this Suduko puzzle, which is a bunch of numbers in different places. And she submits that and she's done. The next phase is that the verifier, this is the reliable pc that we assume exists. So it's a weak computer, but it's very reliable. It checks one random constraint, just one entry like these three numbers, and asks, is the constraint that is supposed to apply to these three numbers? I don't know. Maybe they need to sum up to ten or be an even sum. She just checks if this thing is correct, and based on this one sample, she decides whether to accept or reject the statement.
00:08:30.600 - 00:09:20.260, Speaker A: Okay, so it's a strange game in which a claim is converted into this big puzzle. The proverb, the party making the claim fills up the entries, and then there's just one single instance of checking a very small constraint. And based on that, deciding whether to accept or reject this claim. That could involve millions or billions of dollars of worth. So the magic, which isn't really magic, it's actually mathematics, says three amazing things, that each one of them is very important. The first of them is that sampling a constraint and checking, reading the entries and deciding whether this constraint is satisfied or not does not require the verifier to write out this whole big table. That is the puzzle.
00:09:20.260 - 00:10:21.496, Speaker A: It is enough to toss a few coins and immediately go to this one little entry and know what you need to read there and what you need to check. And this is a really crucial part. That is what gives us the exponential scale. So the verifier, the party checking this reliable slow pc, needs to do an exponentially small amount of computation in order to reach the decision. The second aspect is that if the claim is correct, there is a very efficient algorithm that will generate a good filling of the Sudoku puzzle such that each and every one of the constraints is satisfied. In which case the verifier, when she checks, she will be appeased and happy with a claim. And the most amazing part, and actually also this is the part that requires the most math and the deepest math in order to establish, is the third property, which is known as soundness.
00:10:21.496 - 00:11:34.992, Speaker A: And it says that if the claim is incorrect, no matter which way these numbers are filled in the statement, at most 1% of the constraints will be satisfied. There is no way to fill this table in a way that will satisfy more than a single, sorry, more than 1% of the constraints. And why is this important? Because if the prover is trying to cheat, then she must commit to some answer, and then with one single sample, there is at most 1% of error. And if you repeat this thing three times, there is a one in a million chance of being fooled. And in our systems which actually implement this technology, we make this querying phase a few times, between 20 and 30 times, roughly, so that the chance of being fooled into accepting something as correct is something like one over a billion times a billion times a billion times a million. It's a very, very small chance. And of course we could sample a few more times and decrease even further the probability.
00:11:34.992 - 00:12:43.220, Speaker A: But it's such a small probability that there are not enough computers in the world to run for 1000 years and find something that would and get away with it. So this is the PCP technology, which was already in the 1990s known stark is almost the same. There are a few twists to it I want to just mention. One important aspect in which it differs is that we repeat this Sudoku generating game a few times. So after the first Sudoku challenge has been generated and filled, now the verifier tosses coins and generates a new auxiliary table, and the prover needs to fill that. And this repeats a few times. And after this is done, the verifier then samples a single constraint from this sort of multidimensional Sudoko challenge, and based on it, decides whether to accept or reject.
00:12:43.220 - 00:13:47.120, Speaker A: So this is one of a few small differences that took roughly 20 years, from 1992 to roughly 2018, to realize. And they make a big difference in efficiency, because in the early theoretical works from the early 1990s, the algorithms were impractical. The size of this Sudoku table was just too large, even for very simple computations. So, practically speaking, you couldn't really implement it on computers. And what we did over roughly 20 years. And when I say we, it's a very large number of authors, including a lot of collaborators that I had the honor of working with, like Madu, Sudan, Alessandro Chiesa, Nicolas Spooner, Idobento of Yinon Khoresh, Michael Riazer and many, many others. These are just a sample, but essentially what we did over these years is removed the IM from the impractical and made it practical.
00:13:47.120 - 00:15:08.872, Speaker A: And that was the starting point for implementing this. So that's just one part of the story. That's the part of the story that makes this technology efficient or practical. But the other part of the story, which is no less important, is where is the concrete, practical setting in which you have a single reliable pc that is trying to monitor a herd of untrusted and possibly unreliable supercomputers? Where should these be found? In the conventional world or outside? So you could say, well, if I'm a customer of a bank, then maybe I want my pc at home to check that the bank's supercomputers are operating with integrity. Well, if you try to go down that route and create a business for that, good luck to you. It's going to take you 20 years, if ever, to convince, for instance, your bank to actually do more computation to prove to you that it is operating with integrity. The bank will obviously say, what do you mean? We've been here for the past 200 years.
00:15:08.872 - 00:15:42.244, Speaker A: Everyone trusts us. Look at our amazing board of directors. We're regulated. There's a whole bunch of humans that you can trust. We're not going to prove anything to you right now. If you're sitting here, you probably know, where do we find a scenario of a single, reliable, weak pc that everyone trusts? And this is now this second line of invention. So we talked about the math that comes from cryptography and complexity theory, but there's this other very important line that started in 2008.
00:15:42.244 - 00:16:18.044, Speaker A: And of course there were works about decentralized peer to peer networks, including for cash, even before that. But of course, everything changed in 2008 with Satoshi's work. And again, if I were to try to explain to my mother what is bitcoin? And since she's here, I'm going to try to explain. I actually did try to explain it a few times. I'll try again. I would say that. So, mom, remember in the old days when people used money, it was always peer to peer.
00:16:18.044 - 00:17:11.504, Speaker A: People were using cash and just paying one to the other. And there wasn't any centralized party in the middle that controlled everything, as we are all used to today. So among the Google pay and Apple Pay, visa and swift and other things, everything is very, very centralized today. And this is an anomaly, right? This has not been the case for the past 10,000 years of human societies. Money was peer to peer. And it's not good that it becomes too centralized, right? We feel it in our gut, okay? Just like we think that the Internet, it's really good, that it's decentralized, and it's not good if it becomes centralized and all the information passes through certain government or corporation entities that basically manage it. That's not good for society, for democracies, the same thing with money.
00:17:11.504 - 00:18:14.288, Speaker A: So what bitcoin has achieved is to bring back the peer to peer nature of money and remove the trusted party that is blessed by God or a government or something like that. And no less important is ethereum, that took this concept and generalized it to arbitrary social functions and to the ability to do anything that is important for economics in society via the ability to write generic programs. So now we have at our hands suddenly a computer that is very reliable. It is something like ethereum. So you can imagine Ethereum as a computer that is very trusted, very reliable, but also very weak in terms of its computational power. So now we have the two lines converging. On the one hand, we have the technology that allows a single weak computer, but one that is very reliable, to enforce integrity on a much greater scale.
00:18:14.288 - 00:18:44.760, Speaker A: And at the other hand, we have the scenario where there is a very reliable single computer that is a blockchain. And the motto of blockchain is verify, don't trust. And in math we trust. These are mottos of blockchain. So it goes very well together with the math that enforces integrity. And this is a realization. So when I mentioned this conference of bitcoin in 2013 that changed my life, it was this realization.
00:18:44.760 - 00:19:28.476, Speaker A: And at first I couldn't rationalize it in my words. I just felt it somewhere very deep inside that there is this connection between the research my peers and I were doing and this new thing that I didn't quite understand. That is blockchain. So I just want to show you a recording of the first minute of a talk that I gave back then. Welcome, everyone. I'm going to tell you about a project that we're very enthusiastic about, and I think it can also help the bitcoin community. It's an enabling technology based on a breakthrough in theoretical computer science that I want to describe to you, especially focusing on the applications to the bitcoin community.
00:19:28.476 - 00:20:31.884, Speaker A: So I'll start with some examples of the things we can do, and let's take some things the way they're done today with bitcoin, and the way we can change it and make it better. So today, when a new bitcoin node fires up what it does, it downloads all of the blockchain from the Genesis block, and it needs to verify all of the transactions there. If our system is used, which implements succinct computational integrity and privacy, you could do it much more efficiently. The new node that fires up just downloads the last hash, and then it downloads a very short signature that some other node verified all of the blockchain. So this was in 2013. This was the moment, again, that I realized, and I think it was the first time, that the research community realized, that general purpose proofs of validity and zero knowledge go very well with blockchain. And shortly after, my peers and I, we wrote an academic paper about using the privacy aspect zero knowledge.
00:20:31.884 - 00:21:32.020, Speaker A: It was called Zero Cash. One of the co authors is Professor Alessandro Chiesa, co founder, also of Starquare, and he's going to talk tomorrow about the math that is behind Stark. So everything that I explained very informally, tomorrow there's going to be a dedicated session by Alessandro Chiesa, Swastikoparti and Dan Carmon, who are going to drill down and explain more mathematically how we get the succinctness and soundness. So I urge those of you who want to hear about the math to join that session. It's going to be tomorrow. And then shortly after, in 2018, well, not shortly after Starquare was founded as the first use of validity proofs for solving the problem of scalability. And when we co founded this company, Uri Kolodni, CEO, co founder Alessandro Chiesa, and Michael Riabsev was, before that, my PhD student at Technon and then chief architect.
00:21:32.020 - 00:22:07.196, Speaker A: No one cared about scalability for blockchains. We saw it first and we started working on it four years, well, five years ago. And I think it turns out that it was a wise decision. So what did we do since then? I just want to mention three things about where we are today. So one of them is Starkx. It's a SaaS business model was the first thing that we did. It's the largest layer, two scale on Ethereum, by any metric that you choose.
00:22:07.196 - 00:22:51.980, Speaker A: It's been in production for almost for two and a half years, in production for two and a half years. And once in a while, I think now probably also again, it's happening. We actually surpass Ethereum's throughput while using roughly one over 1000 of the gas cost that is on Ethereum. So this scale is right now supporting Ethereum. It is the strongest source of scale on top of Ethereum among all things, and it's in production. The amount of money we've settled over this is nearing $1 trillion. We've settled 340,000,000 transactions, minted almost 100 million nfts.
00:22:51.980 - 00:23:38.924, Speaker A: I want to highlight two interesting things just over the past week. So Serre, who is giving a talk here, and I urge you to go listen, just announced they won a deal with the Premier League. Let's hear it for them. And all of the NFTs that they are minting and using in their game are over Starkx. And DydX announced that as of last year they traded almost half a trillion dollars. Also settled over all of it over Starkx. We have by now seven customers that are using it and I think they're quite content with it.
00:23:38.924 - 00:24:22.580, Speaker A: And of course there are more in the pipeline. So this is something that has been running in production for two and a half years and increasing in scale. The next thing, I just want to also mention that it is constantly increasing in its scale. So initially we operated the system by generating a single stark proof and we could fit in about 130,000,000 Cairo steps. We'll get to Cairo in a second. And now we recently implemented recursive starks and there'll be a bunch of talks about recursive starks, both about their math and the way they're used in various settings that I urge you to go to. Talks about fractal scaling and layer three by giddy from startware.
00:24:22.580 - 00:25:10.056, Speaker A: And the result of that on our SaaS business is that now we can do 15 x more Cairo steps at one third of the latency that existed prior to that. And of course I should say this is not the endpoint of this technology. So immense scale already here and more coming. Now let me tell you about Cairo. So Cairo is the first Turing complete verifier used in production over Ethereum, and it's in production for a very long time. And if you remember, we said that any computation can be transformed into a bunch of constraints. And initially the way this was done was basically by hand.
00:25:10.056 - 00:26:03.976, Speaker A: It's a very scary process of taking a computation and converting it into these constraints. It's a little bit akin to taking computation and writing wires between Nand gates and then a bunch of brilliant folks. It started with Leo Goldbl and Shaho Papini, two brilliant, yeah. Came and said well, there's actually maybe a better way of doing things. Let us just craft a small set of constraints cpu and then write programs for it. And I should confess that at first I said, nah, it doesn't sound like a good idea. And of course I was wrong, and I'm very glad that I was convinced not to be stubborn about it, because of course it's an amazing achievement and invention.
00:26:03.976 - 00:26:50.452, Speaker A: And what happened was that it's also extremely efficient. And the main thing about Cairo is that it is extremely efficient. It is the best language for validity proofs. So these proofs are there to give you scale, and that's really all that matters. For instance, a swap before Cairo took about 6 million trace cells. So each one of these little squares, each one of these numbers is a trace cell, and you want to minimize the number of trace cells per computation step. So when Leor and Shahar and others worked very hard to get the most efficient computation, it took about roughly 600,000 trace cells to fit in a single swap.
00:26:50.452 - 00:27:35.240, Speaker A: Well, in Starkx that is written in Cairo today, it is slightly less efficient, but not very inefficient. So it's almost optimal. It's around 1 million trace cells per step. And other things like mints are even four x more efficient. And because of that, if you take the 2.15 billion cells that we have and divide it by these numbers, and I hope I didn't get the math wrong, because usually I do, but these are like ballpark numbers that you can fit inside a single stark x proof. Today you can fit 2 million NFT mints, you can fit in 1 million stark net ERC 20 transfers or 1 million transfers, huge numbers.
00:27:35.240 - 00:28:13.460, Speaker A: And these are things that are working today, humming day in, day out in production, this kind of scale. So inside a single proof that fits well inside a block of ethereum, we are fitting millions of transactions. So this is an amazing achievement. And it's all possible because of the efficiency of Cairo. That is the best language for writing validity proofs. Let's hear it for now. Something that we've been asked about, even though I must confess recently we're asked about it, less and less is that oh, but it must be solidity.
00:28:13.460 - 00:29:00.756, Speaker A: How can a smart contract language not be solidity? And you must do what's called a Zke EVM. And here's a prediction I'm making. I think that when Chira 1.0 is stabilized and finalized, people will actually look at it and say, you know what? This is a better programming language for writing smart contracts. And part of it is because of course it comes later. So as computer programming languages evolve, you get to learn from all kinds of things that weren't optimal in the previous things. And it's also what seems to be the reaction of those who actually are using the code today.
00:29:00.756 - 00:29:29.640, Speaker A: And it is already the fourth most important language in terms of value locked. And this is even before Cairo 1.0 has been stabilized. So there are going to be a lot of talks about Cairo 1.0, its evolution, its safety, both by Shahar and Ori and a few others. I urge you also to go and track them down and talk to them and hear a lot more. But it is going to be the best programming language for writing smart contracts.
00:29:29.640 - 00:30:48.328, Speaker A: And the fact that visa is already using it for account abstraction, and there's going to be a talk by Kai from Visa, who spearheaded this beautiful work, shows that we may be actually right about this. And this is going to be a very good programming language to work in. Starknet is a decentralized network which allows everyone to write their own logic, just like on Ethereum. And another prediction I'm making is that it's the end game for scaling blockchains. Why? First, it uses the future proof technology and validity proofs, one that is post quantum secure, has minimal security assumptions, and has the best scaling, the fastest proving and verification time. It also allows for fractal scaling. And there's going to be a talk by Gidi, head of core engineering at Starcore, about this topic, about how you can use the validity proofs and recursion in order to expand more and more the scale and offer unlimited scale, better privacy and control, all without losing any of the security of Ethereum.
00:30:48.328 - 00:31:31.008, Speaker A: And another thing is, it is also the first to production. So there's a lot of things going out there in Twitter and so on. We are about delivering code and delivering things that works. And in all the noise that is out there, it is. Sometimes people oversee the fact that this thing is working in production and it's first to production. And that's a big thing in terms of network effect. So what's our DNA? We have our head in the sky, but also our boots in the mud, meaning we love the math and we would love to get more and more amazing things out there, ecfffts and the small fields and recursion and whatnot.
00:31:31.008 - 00:32:01.664, Speaker A: But more important than that is we want to reach end customers, have the UX be really great things like account abstraction, Starknet, make it really, really usable. And we care about that. We really need to deliver things. We are also going to stay true, and we have stayed true to the technology. In 2017 people were telling us, oh, you got to do an ICO. Everyone's doing an ICO. And we said, no, we don't understand how the technology, like new technology, doesn't entail new token.
00:32:01.664 - 00:32:42.732, Speaker A: You need to understand what it's about, how are you going to use it. Likewise, a lot of banks and big corporations came over the years and said, why don't you do a PoC and show this or that? And we said, wait, but are you really going to use this? And if you're not going to really use this, we're not going to work with you. We understand our technology, what it can deliver and what it can deliver. For similar reasons, we haven't gone down the privacy route. We understand that the UX right now is a bit too hard for us to achieve. Excellence begets excellence. I think the most amazing thing about starkware and also Starknet is the high level of excellence in the folks that it attracts.
00:32:42.732 - 00:33:02.804, Speaker A: So the meme that Starquare and Starknet are jigger brains, there's something to it and I think it's this. Excellence begets excellence. Excellent. People are not daunted by these challenges. Okay, here it says 2 minutes. Okay. Excellence also begets magnanimity.
00:33:02.804 - 00:33:39.572, Speaker A: Magna Animus is large spirit. So we are very welcoming and open and would like others to join and to go fast, go alone. So we started off going alone, but to go far, especially with Starknet, we're going to go together and you'll hear a lot more about the Starknet foundation and about our approach to things like open source later on. So I'm going to jump here and just end by saying what I'd like you to take away. Starks. Cairo and Starknet are endgame technology because they are future proof. They are here to stay.
00:33:39.572 - 00:34:10.620, Speaker A: They are best in class and they are the first to reach production. We are about delivering code and delivering good code that is usable. We're less about hype. Starcore shines with excellence and it strives really hard for magnanimity, for an open embrace to all those who want to work hard and be excellent. So please use this event to connect again. Folks with starware shirts, just approach them, say what you're working on, ask to talk to people. We'd love to work with you.
00:34:10.620 - 00:34:49.412, Speaker A: So let's talk a little bit about open sourcing Starknet. It's a very brief message, and it's one that I think some of you have anticipated, but still, let's go over it. So let's review what happened recently. A few weeks ago, or maybe it was a couple of months, we announced that we're open sourcing Cairo 1.0, the tool chain. This was followed by announcing a full node, open sourced in Rust Papiris, which was followed by announcing open sourcing of a sequencer. So you may wonder what's missing? And anyone want to say what's missing? Yes.
00:34:49.412 - 00:35:37.050, Speaker A: The what? The prover. Right. So hereby I want to announce that we are going to open source this Starknet prover. And I just want to mention there are dependencies. It's not going to be now. We want to have a decentralized sequencer and prover protocol in place, but it is a decision we have made and it will happen, hopefully as soon as possible. So this is a landmark moment for scaling Ethereum and actually in a wider sense, for cryptography, because it will put stark technology in its rightful place as a public good, which will be used to benefit everyone.
00:35:37.050 - 00:36:08.780, Speaker A: So now that's what I wanted to say. And now I'm going to introduce the next speaker, Sielev Cheve. I hope I have my french pronunciation right, is co founder of the BRIC project, which is deploying over Starknet, and also a member of the governance committee established by the Starknet foundation. And he's going to tell you all there is to know about governance. Let's have it for Silv.
