00:00:02.330 - 00:00:49.894, Speaker A: So maybe what we can do, Tom, if you want, is, if you're okay with that, is I can start with, there are a few points we wanted to discuss in that community call. So maybe what we can do is I'll just list them quickly, then there are some questions that were asked later. Earlier will ask them to. So basically we can cover the things we wanted to discuss. So before we start, we wanted to mention two events that we will have in the coming weeks, months that are of interest. Oh, Brian, you have your mic open? Yes, thank you. Better that way.
00:00:49.894 - 00:01:29.046, Speaker A: So we wanted to mention a few events. So first, tomorrow we'll be presenting at ZKAC, which is a podcast community that does workshops on ZK things. Right. And we animate one workshop tomorrow where we will present Starknet and how to write smart contracts on Starknet. So if it's something that is of interest to you, make sure to attend. It's free and it's going to be very interesting and it's going to be presented by Ariel. I'm not sure if Ariel is here, maybe, but Ariel, yes, Ariel is here.
00:01:29.046 - 00:02:25.546, Speaker A: Ariel is feed the fed on discord and he's able to answer very deep questions. So if you have specific questions, you can ask. So that's the event side. Right now. What we want to discuss today is first, this is our first community call. So the main objective is for us to organize this community. The main question we have is, is it useful to this kind of calls? What kind of content do you expect for this kind of calls? And more broadly for the community, what kind of tools do you think would be beneficial in order to propose Starknet? So actually in the community call before, like the warm up, let's say we had an hour ago, two points were interesting and came up.
00:02:25.546 - 00:03:07.090, Speaker A: The first one is that somebody said, is the discord the only place to post documentation discussion? I'd love something like Ethereum's dev forum. As the way discord is and my tie zone, I do feel I miss out on things. Yada, yada, yada. And so basically what we discuss is that discord is great for live discussion, it's not great for archiving stuff. And a lot of time, half of the question we have is when token. The other half of this one is question that were already asked before. So if we manage to keep these answers somewhere, it will be a much easier way for you to get support and to get your answers.
00:03:07.090 - 00:03:53.398, Speaker A: And to that objective, we're setting up a discourse platform, which is the same software that is used by Ethereum dev community. We're in the process of setting it up and putting more content into it, which is an important step for it to live properly. We aim at having it public. In the next few weeks, we'll have a first period where we will onboard people who are interested in helping producing content before. So if you are, please notify us and we'll add you. Gladly. The second topic that came up is that a lot of person were asking if we were looking for contributions outside of dev.
00:03:53.398 - 00:04:50.570, Speaker A: So like translation to other language, people saying, yeah, we want translation to Russian, documentation, announcements, tutorials into different languages. Other people say it would be great to have different label for people in discord. So right now there's only admin moderator and dev, and they asked if we could add something like developer moderator, early bird contributor, like translation arts, or helping moderate or just member. Another idea was an ambassador program which would help with shilling, community building and stuff like that. Some people offered to contribute with drawing, translation and things like that. So I think there's a point we need to address where people who are not devs and not technical would like to contribute, and some people seem to suggest that gamifying, that would be a fun thing. So food for thought.
00:04:50.570 - 00:05:28.914, Speaker A: It's something. If you guys have any ideas of how this could work, don't I state and post it on the discord? Sorry. Then we'll talk about it. So that's for the community part more broadly, if you have suggestions or ideas in how we can help you make this community more efficient or help you better, that would be great. Yeah. And so that was the first part. The second part we wanted to discuss was that we released this week, last week, actually two documents.
00:05:28.914 - 00:05:58.574, Speaker A: One was the roadmap, written by Tom, and the other one was the glossary, which was written by Tom and Leor. We wanted to know if some of you had taken time to read through it and if you had questions. Because if you had questions, well, you can ask Tom. He's here and ready to answer. So I don't know. If some people have questions, you can write them in the chat. Other than that, I'm just going to assume that the documentation and the glossary are perfect and we don't need to change anything.
00:05:58.574 - 00:06:29.042, Speaker A: But I think that's a bit of a big assumption. So don't hesitate and tell us if something is not clear. Okay. So I'll leave you time to answer questions. We can always come back to there. And in the meanwhile, I've been talking for a while, so now I'm going to let Louis and Tom talk a bit. There were questions about specific projects, so I categorized them in two categories.
00:06:29.042 - 00:07:05.302, Speaker A: So one is concepts and the other one is project. So the first concept people were curious about was dam Damm. And I think, Louis, you're the one who wrote the blog post about it, so if you can talk a bit about it, the question specifically was, is dam a collaboration with loop ring? Is there any plans to collaborate with arbitrum or other l two s? So I think it would be good if you give a general overview of what Dam is and how do you think it could integrate with other l two s. And if that needs buy in from the people operating the l two or not. Sure.
00:07:05.356 - 00:07:06.006, Speaker B: Happy to.
00:07:06.108 - 00:07:30.490, Speaker C: Thanks everyone. Hi, I'm Louis. I'm ecosystem lead and path. I was product manager and blockchain researcher here at Starkware. So about Dam. So Dam was an idea that came out after we wrote Gaspian, that changed into dam afterwards. And the question was how bridge l one l two liquidity for Nim.
00:07:30.490 - 00:08:50.326, Speaker C: And so we went on to go to various entities, including loop ring, to discuss if there was room for collab. And so when we were talking with them, Brett basically offered an awesome suggestion which became the final post showing how you can have two l two s showing the same liquidity pool. And we ended up co writing this design and posting both on the blog post and on if research. So if you want to look at how, for instance, the mechanism to guarantee rebalancing works, you can obviously go on. If research on the refnem well being the CTO blueprint. So at the moment there is no effort to implement this multiple l two imm and there is various people that came to ask about the design. If there was more detail and stuff, let's be clear, it's open to grab if you want to build something like this collaboration with doing an imm between loop ring, I mean loop ring would be a bit hard, but between Starknet and a side chain or starknet with an optimistic roll up with a node vk roll up would be great.
00:08:50.326 - 00:09:18.560, Speaker C: Optimistic roll up in this context are a bit hard to manage because of the time window, like a seven days time window, and you kind of need efficient finality. But if you have enough liquidity for a fast withdrawal, you could also make it happen. Not sure that would be very practical, but it would still be possible. So to summarize it, there is no plan at the moment, but we are looking for teams to build it and happy to discuss it on discord if you are interested.
00:09:21.730 - 00:09:26.866, Speaker A: Thank you, Louis. So sent you the questions over slack. So if you want to take a.
00:09:26.888 - 00:09:30.594, Speaker C: Look before send them on the chat, I think no.
00:09:30.632 - 00:10:13.122, Speaker A: Yeah, sure, I can do that too. So the second question was any ETA roadmap for account extraction? Oh, hey, I heard you mentioned that Arjun was working with you on something. Could you talk about that again? I wasn't able to hear it. So anyway, can you talk a bit about account abstractions? The challenges revolving around mean, I think for most people account abstraction is a fuzzy topic. So if you can talk briefly about what account abstraction is and what we are doing with Arjun in that regard, that would be great. Please. Sure.
00:10:13.176 - 00:11:36.598, Speaker B: So you can see behind me latest discussion on account abstraction, but very briefly, account obstruction means obstructing. So basically in Ethereum you have two types of accounts. One is a regular contract and another one is an externally owned account. And basically externally owned account means that some parts of the management of the account of the user are being handled by the protocol. For example, how do you verify a signature authenticating the transaction? How do you verify nons and how you pay fees? Now on one hand, since it is handled by the protocol, it is very well defined and there are a lot of benefits. But on the other hand, it defines only one way of interacting with the network and only one way for managing your account, and it blocks creativity on many parts. So for Starknet, we decided that we want to introduce account obstruction, meaning account won't be enforced by the protocol, but basically it will be enforced by smart contract.
00:11:36.598 - 00:12:45.554, Speaker B: So any address is just smart contracts, and account contracts can implement account logic as part of this smart contract. So this is very briefly, what is account obstruction? I'm not sure exactly what does the roadmap for account abstraction mean, but currently there are two projects in the Starknet ecosystem that are implementing account contracts. The first one is algent, as you've said, and they've actually done a very nice job of taking their smart wallet from Ethereum and implementing it as account contract on Starknet. Meaning all the functionality that they gave the users on Ethereum can be implemented directly as an account on Starknet. And I can send the link to the repo later in the chat, but they plan to release the first wallet that allow users to interact with Starknet through this account contract. Hopefully very soon. Like very soon.
00:12:45.554 - 00:13:16.602, Speaker B: Okay, so this is argent. The other team that are working on implementing account contracts are open Zeppelin, and I'm sure a lot of you have read Maltin or Marto is very active on the discord and he's really great. And they also implemented like a basic account contract that reimplement all the functionality of accounts on ethereum. I hope that answers the questions.
00:13:16.656 - 00:13:19.900, Speaker A: Do you have anything to mean on my side? It was clear.
00:13:21.090 - 00:14:06.010, Speaker C: I can add one more thing. We also have Taurus, who already implemented key management without wallets yet, and who's going to use the open Zeppelin new version to create a tutorial showing how you can use Taurus lab to make an account on Starknet using Google Connect or Facebook connect or any sort of web, two connect that you're familiar with. So that's pretty exciting. And obviously we are reaching out to a lot of wallets to make sure that they are ready for all the new concepts that involve around starknet.
00:14:10.450 - 00:14:40.870, Speaker A: Perfect. Thank you guys. So the second question was, I heard that you are not afraid of quantum computers. Is it true? Can you give a few words on like. The answer I gave, which is a bit superficial, is that starks make less cryptographic assumptions than other systems. And we use cryptographic perimeters that are supposedly quantum secure. And so we're a bit less afraid of the big bad wolf, but maybe not.
00:14:40.870 - 00:14:47.080, Speaker A: And a more in depth answer, or would be great. Sure. So.
00:14:49.550 - 00:15:00.960, Speaker B: In cryptography, some constructions are made possible from the fact that you have an assumption on the hardness of solving one problem.
00:15:01.650 - 00:15:02.560, Speaker A: For example.
00:15:06.450 - 00:16:05.650, Speaker B: In ECDSA, which is the most common signature algorithm that we are using in blockchain, you have the assumption that it is very hard to find. It is very hard to find the components of a discrete log. And there are many such assumptions in cryptography. And starks indeed do not use a lot of those assumptions. Actually, they use only one, which is the existence of collision resistance hash functions. And quantum computers introduce new ways to tackle those problems. And some of those assumptions are not so hard once you have practical quantum algorithms.
00:16:05.650 - 00:16:27.640, Speaker B: But fortunately, the existence of collision resistance hunch function does not break. I mean, you do have quantum resistance collision resistance hash functions, which basically means that even in the presence of quantum computers, the stalk protocol does not break.
00:16:28.490 - 00:17:52.100, Speaker C: I'm going to rephrase a tiny bit, maybe to try to leave a slightly different perspective. So with quantum computers, you can basically find the decomposition a number into prime numbers, if you're familiar with your twelveth grade algebra, arithmetics. And this assumption of factorization is the assumption that this beyond LSA, and also, in some weird fashion, also the assumption behind your regular classical trading signature like a bitcoin and ethereum. And there is no known algorithm for hash function that get any speed up using quantum computers as opposed to prime numbers. And so this is why actually it was proven recently that starks are quantum secure under this hypothesis. And we even published, I think the first practical post quantum signature called Ziggy Stark, which is you can find on our GitHub, which was made by David Levitt and Elib and Soton as part of a research effort proving how a star can be used for post contube security.
00:17:53.670 - 00:17:54.820, Speaker A: Thank you guys.
00:17:56.650 - 00:18:56.680, Speaker D: Hashes are the most basic assumptions you can make and they are basically built to not have a certain structure that you can utilize just to commit on certain values. While other typographic elements that are sometimes used like for signatures or for snarks, for example elliptic curve, are designed because they have a certain structure that can be utilized to do some cryptography. And sometimes the structure, while too strong for regular computers, can be utilized by quantum computers. But this is not the case for ash functions because we don't need them to have useful properties. We need them to not have any useful properties. And I mean there is I think a square, a square root speed up for quantum computers just for arbitrary research. But this is probably the best that you can do.
00:18:58.350 - 00:19:51.370, Speaker A: Thank you guys, that's really interesting. The following question is less regarding cryptography and more about the construction of the starknet network. And the question is very broad, so we don't have to spend too many times on it, but I'd be curious to have your perspective on it. The question broadly is, how decentralized is Starknet? We trust you guys not to steal our tokens. Can you talk a bit about. And my answer was basically, you don't have to trust us, you don't have to trust game theory, you have to trust mathematics, which is nice, but obviously Starknet is in the process of being deployed and of being developed. I'd be curious if you can talk a bit about this, what you see as challenges on the road to decentralization and what are things you're excited for to that regard? Sure.
00:19:51.520 - 00:19:55.510, Speaker C: So I just want to say one thing. Don't trust verify.
00:19:55.670 - 00:19:58.490, Speaker B: Okay, that's it. That's what I have to say. That's it.
00:19:58.640 - 00:20:00.380, Speaker C: I let the spartan man here.
00:20:01.710 - 00:20:47.590, Speaker B: That's funny. I think it's a good place to discuss a little bit starknet roadmap. I mean, where we started, where we are today and where are we heading? And I think it will answer this question. We started working on Starknet, I think somewhere the beginning of this year. And the roadmap that we presented at that time was that we are starting to build from the bottom up, meaning we first want to focus on the functionality. And this is having the ability in a ZK rollup to have a state of general computation, smart contracts that can interact with each other. And this is indeed what we have today with the alpha.
00:20:47.590 - 00:21:46.350, Speaker B: So this was in our opinion the first thing that we want to achieve, being able improve system, to prove the state transition of those kinds of systems. And this is what we call Alpha. And the next step after this milestone is basically working toward what we call universe, which is the decentralization of the operating system, of the operating system, the operator layers of Starknet, meaning the sequencers and the provers, right? So this is basically the roadmap, the vision of Starknet. And what Starknet will be hopefully sometime next year is a permissionless decentralized l two network that anyone can participate in any one of the layers, meaning Poova sequencers and of course users.
00:21:46.850 - 00:21:47.214, Speaker A: Right?
00:21:47.252 - 00:22:34.958, Speaker B: So this is like the broad roadmap. Right now we are in what we called Alpha three, which is some version of the Alpha. Hopefully next week, and I'm not committing on anything, but next week or the week afterwards we're planning to release the next version of Alpha, which is Alpha four. And this will be the main net candidate for the Alpha. And hopefully by the end of this month we'll be able to deploy this version which will be first deployed in testnet to deploy it on Mainet. But at this point, Starnet Alpha is not decentralized in any sense. It has a single sequencer which run by us.
00:22:34.958 - 00:23:39.650, Speaker B: But this is currently not the purpose of this stage of the network. Currently the purpose of this stage is to understand that the functionality on the smart contract level that we are building is actually working, that you, the developers in the community, can build meaningful stuff on top of that and also give us the feedback on what is missing. And in parallel we are working on developing the protocols for the leader election and for data availability and for everything which is required for the decentralization. And actually Enri mentioned in the beginning that we are opening the discourse. So we are already posting some of our thoughts on what protocols we can use for the leader election on the discourse in order to start this discussion and to hear more thoughts and feedback on those. Yeah, so to make long story short, it is not decentralized, it will be decentralized.
00:23:40.870 - 00:24:12.206, Speaker A: Thank you, Tom. That's interesting. Cool. So we have finished the concept question we've had so far, and now I grouped the remaining questions in the project section, which were more questions about specific projects that are happening on this. One of these was asking about. Tell us about your collaboration with tally. Louis, can you talk a bit about please?
00:24:12.308 - 00:24:12.960, Speaker B: Sure.
00:24:13.330 - 00:24:54.460, Speaker C: So we were in communication and discussion with tally for a couple of months. I presented personally, I believe, three weeks ago, to the tally community, explaining what they could do on starknet in term of features and what they could achieve and bring it to the wallet. The plantation went very well, there were quite some excitement, but there was no follow up from there. So I think the board is on their hands and they know where to reach us if they want to start building. We are ready and super excited to collab whenever they will have the bandwidth to make it happen.
00:24:56.510 - 00:25:00.650, Speaker A: While I'm not super familiar with tally.
00:25:03.470 - 00:25:12.046, Speaker C: Okay, just a bit of context, but tally is a wallet. Trying to go after metamask launch, I.
00:25:12.068 - 00:25:12.800, Speaker A: Would say.
00:25:14.950 - 00:25:38.390, Speaker C: It'S very exciting things. Decentral community, I believe, without like fair launch, I believe, I'm not sure, but quite an interesting effort there. But I believe their roadmap is full, so we are just waiting for them to reach back.
00:25:38.540 - 00:25:39.410, Speaker A: Wonderful.
00:25:39.570 - 00:25:53.642, Speaker C: I will have to drop out now, so I thank you, all of you guys and gals. Yeah, looking forward for the next session. And if you have more questions, feel free to reach out on discord. Bye bye.
00:25:53.706 - 00:26:02.800, Speaker A: Bye. So, Tom, a second question was, can you talk a bit about Vidu? Sure.
00:26:06.710 - 00:27:15.170, Speaker B: Okay. Vidu is, I think it was like a mini project that we did last year. We hoped it will get more traction, but it didn't. But basically it's an implementation based on stark proof of VDF. VDF is a verifiable delay function which basically allows the verified to ensure that I would say the prover or someone who did the work worked for some minimal amount of time. So, for example, I want to make sure that Henry did a computation for at least 10 minutes. Then the construction of VDF allows me very efficiently to verify that this is what happened and video is so, I mean, VDF is desirable in many, many protocols.
00:27:15.170 - 00:28:09.480, Speaker B: For example, it's 2.0. I think part of its roadmap is at some point to introduce VDF into the randomness selection of the validators in the proof of stake protocol and they choose to use some other. Implementation of Nvidia is a different implementation. Currently it's not part of Starknet because it requires at least very basically to add a built in that allows the efficient computation of video, because otherwise it is just very expensive. But it might be added in the. Yeah.
00:28:10.090 - 00:29:01.420, Speaker A: Thank you, Tom. I'll use this opportunity to explain a bit what a built in is. So I don't know if some of you are, I mean, I think probably a bunch of you are smart contract developers, and I've started trying to develop smart contracts on Starknet. Built ins are okay, so please don't shout guys. It's a simplification, but it's basically a module you can import in your smart contract code that will do some operations for you instead of you having to write the functions to do it. And they will do it much more efficiently than if you had to write them yourself. And we're currently in the process of writing a bunch of built ins in order to have some functions that you do in your contracts today manually go faster and to make it easier for integration for you.
00:29:01.420 - 00:30:22.482, Speaker A: Okay. And then there was a question about is the solidity compiler for Cairo already running? So the question was basically regarding warp, which is not a compiler, it's transpilers, which will enable you to have solidity code written in solidity transpiled to kylo that can be executed on Starknet. So the state with warp today is that they are able to transpile some contracts, and they have announced last week that they're able to have two contracts transpile and communicate with each other, which is composability, which is one huge step towards having a general transpiler for solidity on Cairo. I will let Tom add something if he wants to. I just wanted to mention that while the Spyder will be very useful, if you have ready to go solidity code that you don't really care about the optimization and you want to deploy it on Starknet, it will help. But bear in mind that Cairo will bring you a lot more efficiency and you'll be able to write programs that are basically much more efficient. And you probably will be able to do more stuff with Cairo than with vanilla solidity code.
00:30:22.482 - 00:30:46.220, Speaker A: So you're here early, use your time and usually to learn Cairo, because once all is said and done, the most efficient and fastest smart contract will be the one that will be the cheapest and will be the one that will have most usage. So you might as well want to learn Cairo right now. But Tom, if you want to add something about warp and its state today.
00:30:48.910 - 00:30:51.360, Speaker B: I think you stated it very well.
00:30:51.890 - 00:30:52.640, Speaker A: Great.
00:30:54.290 - 00:30:58.110, Speaker B: You can always check the repo, it has the latest version.
00:31:02.290 - 00:31:24.902, Speaker A: Okay, so there were a few more questions in chat. We're going to address those. And then I have something else I wanted to add. So the question was, is there an option to somehow send early followers of discord an NFT or something. So somebody suggested doing a poap for community calls. Why not? Let's see. I'm not sure how easy it is to make.
00:31:24.902 - 00:32:08.098, Speaker A: If one of you want to make it, please do. The following question is, can we add a further project question? I'm interested in definity and direct integration from ECP into ETH. They say that smart contracts on ETH will be able to interact. Has there been any interest from Starknet side on collaborating with definitive. So, Tom, is Starknet working on definity integration or not particularly not at the moment. Question answered. Okay, so we spent 35 minutes here, which is all right, I don't want to spend to take too much of your time.
00:32:08.098 - 00:32:38.720, Speaker A: I was wondering if maybe like in a few minutes you guys can also give a few words about snapshot, the project. We presented with Snapshot. So if you want more details, we actually presented it a few weeks ago in Lisbon at the Taoist platform conference. So you can have more details about exactly what it is we're doing. But if you guys can give a few words about what is interesting in snapshots, that would be great.
00:32:40.850 - 00:32:42.570, Speaker B: What was the question to me?
00:32:42.740 - 00:32:52.420, Speaker A: Oh, I don't know. Or Ariel, maybe. Ariel, are you familiar with the project and can you talk about it or you prefer sending the ball to Tom?
00:32:55.930 - 00:33:32.110, Speaker B: Okay, so first of all, it's still in development. I don't have a concrete date on when will the first version will be deployed and used. But basically, stark vote is the perfect example on compressing computation and verifying only 16th proof on Ethereum today, snapshot votes are not being verified at all on Ethereum because it just cost too much gas.
00:33:32.930 - 00:33:54.840, Speaker A: So a snapshot vote is basically just a signature that is sent off chain, that is compiled off chain and offered as proof. And so humans are able to see the vote and interpret it, and machines obviously are able to compute it. But the Ethereum main chain has no way of checking that the vote are valid or count them or anything like that.
00:33:55.530 - 00:35:10.320, Speaker B: Yeah, so Starfoat is basically having a contract on Starknet that use two building blocks in order to generate those votes. First of all, it will have the ability to verify Ethereum signatures. And second, it will have the ability to verify that a specific user has a specific amount of tokens on l one, which is there are many ways to call it, but basically it's the ability to verify Ethereum state on Starknet. So once you have those two building blocks, basically you can take a snapshot of the Ethereum state and generate a proof to many, many Dow members voting on a specific Dow proposal and have all those votes being proved by a stark proof of stocknet, and then this stark proof can be verified on l one and you have the actual result of the vault being used on the Ethereum state. I hope it was clear.
00:35:12.450 - 00:35:55.194, Speaker D: But it also solves the problem of adding some overhead to every transaction on an ERC 20 to guarantee that a user does not vote twice. Because if we allow votes by the amount of tokens, I can vote, then transfer the tokens to another account controlled by me, revote, and control the result. So what's usually done on l one in this respect is to track whether this set of tokens already voted. So right now we can have voting with standard ERC 20 with no overhead for transfers.
00:35:55.322 - 00:36:41.622, Speaker A: Sure. To summarize, right now you can vote with your ERC 20 on l one, but it is not verified by l one, and it introduces overhead in transfer to make sure that you can vote safely. But starknet sort of solves this because you can import everything and verify everything on Stocknet and then act upon l one with it. All right, I just thought it was an interesting project to mention. All right, I think we've covered most of the questions and the suggestions. I think we can wrap up here. I kind of wish we had more suggestion from you, the audience.
00:36:41.622 - 00:37:20.394, Speaker A: I'm really curious to, I mean, you did give us some feedback on what you wanted. Please let us know in the coming hours or anything or days what you thought of this community call. Let us know what we can do to make the community better. Let us know if that call was useful. I mean, we've been going for 40 minutes and there's still 43 people, so I'm guessing it was sort of useful. But still let us know what was good, what was not, and how we can make it better next time. And also let us know when should be next time.
00:37:20.394 - 00:37:37.054, Speaker A: Should we do this every two weeks, every month, every release, every week? I don't know. Let us know what's the good frequency, according to you, on these kind of exchanges. All right, I think we're done.
00:37:37.252 - 00:38:47.558, Speaker B: No, I just wanted to give you things that we had in mind, which might, I don't know, will be easier to just give feedback if they sound interesting or not. So a few things that we thought we can do in those kind of community calls is one, as Henri said, after we have a release, maybe have some short call that just covers everything which was released. And if it requires some code example, just walk through some code examples to see how things that was released can be used in the code. So this is one thing that we had in mind. Another thing is to give the builders of the infrastructures, for example, Shardlabs, which I think more and more people are using their hard hat plugin, and the Devnet. So we thought maybe they can have some mini workshop or some example or walkthrough on how to use their tools. So this is also something that we thought, or basically, anyone that is building some development tools can have like a short demo on how to use it.
00:38:47.558 - 00:38:52.440, Speaker B: So those are the ideas that we had. And if you have more, we'd love to hear.
00:38:57.370 - 00:39:24.746, Speaker A: Great. Wonderful. Okay, so we already have shard labs lined up for next time presenting. This is great. So we recorded the call. I think what would be good is if we put it on YouTube or somewhere and we edit it so that you can have timestamps per questions. That way, you know how in some videos, you know, there's the question and you get the timestamp.
00:39:24.746 - 00:39:44.838, Speaker A: I think it would be good to have that because it will help people move along. Because we treated actually questions from a fairly high level to a deep technical, cryptographic level, which I think is great. That way people will be able to follow more. All right, that's a wrap. You're mute, Tom. Yeah.
00:39:44.924 - 00:39:45.800, Speaker B: Thanks, everyone.
00:39:46.250 - 00:39:49.634, Speaker A: Thank you, everyone. Have a good day. Bye.
