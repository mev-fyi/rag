00:00:05.560 - 00:00:14.860, Speaker A: We're going to start with everyone in this room. I'd like to invite Avihu Levy, who's head of product for Starkware, to the stage to talk about stark exchange.
00:00:22.080 - 00:01:01.032, Speaker B: Hello, everyone. So I'm going to start with a bold statement on how we are in stockware, building the best crypto exchange in the world. And even a bolder statement, how we build the best exchange in the world, period. So I'll start with the current state in crypto. So when you want to trade crypto today, you can choose between risk your money in a centralized exchange, or have a poor trading experience in a decentralized one. So, as most of us probably know, centralized exchange, they offer scale. They're inexpensive to trade, but they are custodial.
00:01:01.032 - 00:01:33.540, Speaker B: That means that you can't choose the custody service that you are using. You have to handle your coins to the exchange. On decentralized exchange, on the other hand, you get a self custody trading. But the Dexs are not scalable and they are expensive to trade for the user. Therefore, we have stork exchange. And with stock exchange, you can enjoy the best of both worlds. So a stark powered exchange is scalable, inexpensive, and self custodial.
00:01:33.540 - 00:02:27.752, Speaker B: So that means that the user can enjoy all the benefits of a centralized exchange, but without handling the money to the exchange, he can actually choose whatever custodial service he wants to, or even trades from his own wallet. Okay, I'll give a very brief explanation on how the basic flow stark exchange currently works. If you want to get more details on how it works. From the technical side, we have various blog posts and presentations presenting it that are available. So what's the basic flow for stark exchange? So let's start with Alice. And Alice has her own chain wallet on Ethereum, and now she want to join the Stark Exchange micro universe. So she start with on ramp her funds from her on chain wallet to her off chain one.
00:02:27.752 - 00:03:19.796, Speaker B: Once she did that, she can trade with everyone else that already have an off chain wallet. So for example, she can trade with Bob. This trade will be joined to many other trades, and together they form a batch of trades. For every batch, there will be later a proof generated and be submitted on chain to be verified by our on chain verifier. So basically, step number three and four is where the magic happens. And we use proofs to basically make the verification of a trade much cheaper or logarithmically cheaper than what it would be otherwise. Okay, so now, in the current system, as we describe it, Ellis can trade with anyone who has an off chain wallet.
00:03:19.796 - 00:04:05.896, Speaker B: So, for example, if Bob has a wallet, she can do many trades with him and enjoy all the benefits of stark exchange. So she can enjoy a scalable, inexpensive system. She can do high throughput trades, a very good trading experience from her wallet. What's not? But what happened if Alice wants to, for example, interact with Carol, and Carol doesn't have an off chain wallet? Well, the simplest case is if Alice has enough funds, say that she want to pay carol for an ice cream, and that ice cream cost 100 die. It's an expensive ice cream. So then she can simply pay from her on chain wallet. But what happened if Alice doesn't have 100 die in an onchain wallet, just off chain one? Well, in this case, Alice will have to withdraw her funds from her off chain wallet to the onchain one.
00:04:05.896 - 00:04:42.608, Speaker B: And in our system, currently, withdrawal mean that you have to wait a time that we call the proof time. Because since you have to wait for a proof to withdraw, you have to wait a couple of minutes before you see your funds from the off chain wallet on the onchain one. And this is a barrier. This is what we call the proof time barrier. And this is something that we would like to break to create a better experience for the user and the ability to interact from each off chain wallet. Now, as some of you may notice, the tiny figure there in the center. So it's a turtle, which is also a slow turtle.
00:04:42.608 - 00:05:35.136, Speaker B: And here we have a fast turtle. This is the first time that we present on stage fast withdrawals, and we use fast withdrawals in order to break the proof time barrier. So, very simple, basic, short explanation on how fast withdrawal works, without omitting some of the details, say that Alice wants to withdraw those 100 die really fast. So she start with a transaction, a conditional transaction that she sent to the operator. She signed this transaction that gives the operator those 100 die off chain under some condition. When the operator gets that, the first thing that he does, he verifies that Alice actually has those funds on her off chain wallet. And if she does, he transfers those 100 die on chain from his own on chain wallet to hers.
00:05:35.136 - 00:06:20.256, Speaker B: And then because he did that, he can later execute the off chain transaction and get those 100 die back off chain. So basically, now Alice with fast withdrawals, can expect getting money from an off chain wallet to their onchain one within a time. That equal, or almost equal to what we call a blockchain time. A single on chain transaction. And fast withdrawals already make the situation much better. But we can do even better than that. So, for example, if Alice wants to pay Carol for the ice cream, she doesn't necessarily have to go through the process of off chain wallet to her on chain wallet and then pay Carol on chain.
00:06:20.256 - 00:06:58.480, Speaker B: She can actually execute a transaction directly. With a similar method, she can execute any transaction directly from her off chain wallet to Alice on chain one. And now think of Alice, of Carol. Sorry. Not just as an ice cream seller, but actually can be, for example, uniswap or Kyber or any on chain matching engine. So actually, you get a benefit that you can, within a single transaction, interact from an off chain wallet that can trade with everything in stock exchange to an on chain one that can actually interact with on chain contracts. Now, the next thing is a little bit more surprising.
00:06:58.480 - 00:07:44.300, Speaker B: We can actually do one step farther. So say that Dave works in bitcoin coffee in Prague, and he only accepts bitcoin. And Alice comes to the bitcoin coffee, but she has her off chain wallet, right? She has ether there. So within a similar mechanism, we can allow Alice to actually pay from her off chain wallet with whatever currency available to her, from the operator in a trustless way, to dave on the bitcoin blockchain. So the whole user experience now of an off chain wallet becomes much, much better. It basically gives the user a seamless transaction experience from his off chain wallet. And therefore he can execute almost everything that would be possible from the onchain one through his off chain wallet.
00:07:44.300 - 00:08:51.110, Speaker B: Okay, so I'm going to now start with a recap of what we've seen so far. So we started with stark exchange as an engine for exchanges that can provide the scalability, inexpensive trades and self custody for every exchange. Will it be a centralized or decentralized one? Now, we start with trading as the only feature that we provide there. The next thing that we added now is seamless transaction experience. So from now on, you not only enjoy the scale of stock exchange, you also enjoy the fact that your off chain wallet can basically interact almost the same as an on chain one. So you get that, and then we can build more abilities on top of that. So the easiest and simplest one then one would expect that if we have trades, actually to go to payments is not farther down, it's not too far down the road, and we can actually implement that.
00:08:51.110 - 00:09:45.876, Speaker B: And this is something that I won't go into in this presentation. We can not only do payments as in slow payments, we can actually do instant payment at the same speed that, you know, from lighting, for example, and still would be trustless ones so we have payments and we have instant payments, and then we can add on top of that all different kind, whatever you can think of that is financial tools. For example, margin trading today in many exchanges is a hot potato. So we can add that as well. Now, if you stop here and you take a look on what we have so far. So what we have here is, I would say the state of the art of crypto exchange. And actually we get to the point where we are in pair with traditional exchanges, because the same as in traditional exchanges, you can choose your custodial service, you can do it.
00:09:45.876 - 00:10:45.556, Speaker B: Also here you get scale. It's not expensive to trade. The wallet experience is pretty good, and you have different financial tools. But we can actually go one step further, right, because, well, we can do, as some of you may if you happen to be on the application track and you heard some of the talks there. So actually using starks, we can also do front running prevention. Now, I won't go too much into details of how this work, but just to point out that what I've been talking so far comes from proving on stuff on the settlement layer, but we can actually go also into the matching layer and for example, do fair matching. And another important topic that we can definitely implement is regulated privacy, meaning that the traders get to keep their private balance, private trade history even, or orders like whatever is possible by the regulator.
00:10:45.556 - 00:11:33.850, Speaker B: And still the regulator can run over all this information. We can give him access to check whatever functionality he wants without the need to get the data that he doesn't need for that from the trader itself. So those two abilities, front running prevention and regulated privacy, are ones that are very desirable in the traditional exchanges, not just the crypto ones, but they are not currently existing a form that you can actually trust. And here we offer a form to solve them on top of the existing infrastructure. And therefore you make product, because we solve it in a trusted way. You make a product that is actually better than all the existing ones. So with doing that, we not only provide or build the best crypto exchange, but actually the best exchange in the world.
00:11:33.850 - 00:11:35.290, Speaker B: Thank you.
00:11:43.680 - 00:11:57.170, Speaker A: Should we do any questions? I don't know if there are any questions here. Oh, there are. Okay. Why don't you grab the mic over here if there's any others. There's also a microphone over there.
00:12:07.100 - 00:13:02.612, Speaker B: Can you talk more about the front running resistance and the regulated privacy? Yes, I'll give it like in a very high level. So before, some people presented different method how to go with front running, but they're really high level, I'm going to simplify some things. On front running you can think of the way that we think currently to go is that, well, if we let people publish orders, let's say they publish them on chain for the moment, and those orders are such that they have a time lock, so the operators know that at some point in the future he will be able to know what's inside. But when you post them, nobody knows. So their only priority matters might be fee ones, but everybody can just post those time locked puzles. That includes their order on chain. And later on the operator knows.
00:13:02.612 - 00:13:37.030, Speaker B: After some time, let's say after 1 minute, the operator can open all those orders and then execute them. So you get a late execution, but almost without hurting the speed of submitting orders. And this execution will be fair. And one way to use Starks here is to instead of showing every execution on chain, you can just commit to them anywhere that you would like to and just prove that the way that you commit to the orders is also the way that you execute them with Starks. Thank you.
00:13:37.800 - 00:13:40.390, Speaker A: Very cool. Thank you so much for the talk.
00:13:40.920 - 00:13:41.410, Speaker B: Thank you.
