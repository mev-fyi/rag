00:00:01.120 - 00:00:43.020, Speaker A: Hey there, my name is Dark Hynes and welcome to the 6th and final episode of the scalability series. Today we'll look at layer three s and how they hyperscale Ethereum a layer three is an application specific layer built on top of a L2 such as starknet, meant for any application that wants to hyperscale and enjoy the security benefits of Ethereum. Some applications because of their nature, need a specific execution environment and require functionalities that cannot be added to the Starknet protocol directly. NL three allows developers to go beyond the Starknet protocol and implement their own functionalities. So why exactly do we need layer three s? Transactions on the mainnet are way too expensive and slow at this stage. Ethereum as an l one is more suited as a settlement layer. Lets stop for a second and think about the HTTP protocol.
00:00:43.020 - 00:01:14.848, Speaker A: The average person cant really use this super cool technology to address this. The World Wide Web was created on top of HTTP and applications such as search engines and social networks brought the masses to the web. And HTTP is like Ethereum. Its a technological breakthrough that the average human cant really use. So to make it usable, we built L2s that make transactions cheaper and faster. But to build better apps that give their creators more freedom over their functionality, layer three s were invented. They enable app specific and customizable logics with the goal of bringing Ethereum to the masses.
00:01:14.848 - 00:01:52.936, Speaker A: So how does an l three work? Lets first take a step back and think about how Starknet works. In a nutshell, Starknet operates with two core the sequencer and sharp, the prover. The sequencer aggregates transactions into blocks and sends them to sharp who creates a stock proof. This proof tells Ethereum about the correctness of the Starknet state change. To verify the state changes of the layer three, a verifier contract which is written in Cairo, has to live on the L2. The verifier contract on the l one has the same purpose, but because it lives on Ethereum, it is written in solidity. The best part is that the launch of the Cairo verifier on Starknet opens the doors to layer three s and the hyperscalability of Ethereum.
00:01:52.936 - 00:02:34.032, Speaker A: So how are we scaling Ethereum even more? Stark proven transactions on the l three that are verified on the l two receive a compression benefit. We then prove the l three verification and verify the l two proof. On Ethereum. The compression benefit is now multiplicative. We achieve a roughly 1000 x compression within each layer, meaning that an l three transaction will be a million times reduced compared to an l one transaction, and this is achieved while still inheriting the security benefits of Ethereum. So now that we can create our own execution environment that benefits from hyperscalability and Ethereum security, what can we do with it? Practically you can build any app depending on your needs. Maybe you want full control over your execution environment and youd like to pick when and how to introduce protocol upgrades.
00:02:34.032 - 00:03:10.054, Speaker A: Or maybe youre building a privacy oriented protocol and you want to apply zero knowledge to your transactions. And there could also be a unique consensus mechanism that you want to implement into your app. These are just some of the many functionalities that you can implement to customize your layer three and build applications that will bring the next wave of non cryptonative users to Ethereum. And that's it. Layer three is a fully customizable, app specific network built on top of the L2 that benefits from Starknet scalability and the security of Ethereum. I hope you enjoyed this final episode on layer three s and the overall scalability series on how stark technology is scaling Ethereum, and I'll see you in the next one.
