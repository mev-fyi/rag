00:00:00.880 - 00:00:33.537, Speaker A: I think we're live. Yes, we are live. Yeah. I choose the Wall as my background because my name is Eric Wall. So happy to have you guys here. Iran Head of Business Development Correct me if I'm wrong but Eron Heyman is the head of business development. Avihu the head of product and of course Ellie the C CEO of now quite recently the CEO and co founder of starkware and also board member of Stark.
00:00:33.537 - 00:00:35.245, Speaker A: Net. How are you guys doing today?
00:00:36.225 - 00:00:37.705, Speaker B: Thank you for having us.
00:00:37.865 - 00:00:39.845, Speaker C: Pretty good. How are you Eric?
00:00:40.385 - 00:00:47.497, Speaker A: I am in vacation in Costa Rica so I am exceptionally well. I cannot complain. Yeah, would be strange for me to.
00:00:47.521 - 00:00:50.685, Speaker C: Complain are the bricks of tungsten.
00:00:52.395 - 00:01:34.785, Speaker A: One day? Not yet. This is a virtual background so I would like to, unless I got anyone's title wrong, I would like to start with a topic that has been circulating for the last couple of months about Stark Net and I want each of your guys opinion about this. Is starknet unaligned? And you can interpret that question as you wish but do you feel that startnet is somehow unaligned? When I say unaligned I'm talking about Ethereum, the Ethereum ecosystem, the Ethereum technology. So I don't know. Eddie, do you want to go first?
00:01:35.085 - 00:02:34.863, Speaker C: Yeah, I definitely want to go first. So I'm right now in the middle of this amazing biography of Einstein by. I forgot it's like a recent one. The same guy who's now writing the, he wrote the biographies of Steve Jobs and recently of Elon Musk. So he also wrote one on Einstein and well, Einstein was deeply unaligned with you know, physics and everything and so on and I certainly as a researcher was unaligned with a whole bunch of things. And I think unaligned is means, you know, thinking about what it actually, you know, what is actually important and where are you heading and saying this is, you know, where we need to go or this is what makes sense. And to this, to the extent that the world is aligned with you, then you're going to be aligned.
00:02:34.863 - 00:03:05.385, Speaker C: I don't know if this is a good answer. So we are aligned with the long term vision on what integrity Webs are, what starknet is, what integrity means through our technology. And I think to a pretty large degree we are aligned with what Ethereum aspires to be and stands for. But it's far more important to be aligned with the vision and goals than to answer the question of what exactly Ethereum is aligned with and are we aligned with that?
00:03:08.765 - 00:04:03.095, Speaker B: Yeah, I'd say that we are not. We don't love. We don't like to change things, but when we feel it's needed, we are not afraid to change things. So we'll go with everything that is we, we will, we will definitely participate in all the discussions, we will lead all the innovation and development and when we recognize there is an important goal and it requires a change, whether it proving capabilities for scalability, account obstruction, I can name like probably 10 different things, we will go the unaligned way and we will change them. But it doesn't mean really unalignment just means that we are taking the direction of getting 100% of our targets and we do that while improving Ethereum.
00:04:05.035 - 00:04:07.295, Speaker A: Later on. Do you feel like you want to weigh in here?
00:04:07.795 - 00:05:04.911, Speaker D: I'll tell you a funny anecdote. Jeff Bezos says he always has to speak last at meetings. So like, because otherwise people will just like repeat what he said. So if you told me to speak after Ellie and I who I'm a bit scared but I think that there's a misconception in the community that alignment means copying the same stuff that already exists. So something I often say is one of the boldest decisions at Star Query was to develop Cairo and not do use solidity to develop the stock proofs. And that's done precisely because we want to scale Ethereum because of the importance of getting 100x the throughput of Ethereum at 100x, the decreasing the costs, you have to make bold decisions like developing a new smart contract language. And that at first glance looks like unalignment, but it's actually the most aligned thing.
00:05:04.911 - 00:05:28.925, Speaker D: In contrast, some teams are so worried about alignment that they are so committed to EVM and solidity that they then delay stuff like fraud proof implementation, which is, which is a bit, a bit of a shame. So alignment. Yes. Does that mean that doing exactly the same as everybody else? No.
00:05:29.865 - 00:06:44.801, Speaker A: Okay, so what I'm hearing is that your view collectively is that you're aligned with the goals of scaling this massive supercomputer, this massive world computer that is Ethereum and making sure that the world, the billions of users across the world are able to access the system, do their computation, run their transactions. And that is sort of how you definition alignment, like a goal aligned with the long term goal of making this technology like realizing its potential. But I do want to ask some more nitty gritty specific questions there. I completely agree and understand what you said. Liron about alignment should definitely not be measured to like to the extent that you're using solidity or how evm, like how much of the EVM you have copy pasted and how much of it is compatible or equivalent. I think Vitalik himself has even said in conversations that if he could start over from scratch, it's not necessarily that he would use Solidity or the EVM. Again.
00:06:44.801 - 00:07:57.357, Speaker A: Of course there's been lots of learnings and if you have the ability to create an execution environment today, then you would make it different copy pasting the EVM when you're Layer two and you have this amazing possibility to do things like account abstraction and build a virtual machine that is more easy to see your knowledge prove. I think that he has said that he'd even consider strongly using something like Cairo as the native language of Ethereum itself. So being aligned with Ethereum shouldn't mean to inherit the technological debt that Ethereum has from many years back. I don't think that even Ethereum is aligned with Ethereum today from a technology perspective, but they made some choices and they now stick with it. However, there is one thing though that I think also touches on the heart of the alignment question. There are many different layer 2 systems out there on Ethereum and Starknet is one of these layer 2s that nearly all of them have their own token. Some of them use it as a governance token.
00:07:57.357 - 00:08:35.015, Speaker A: But but in starknet the Stark token is also used as the fee token. So when a sequencer sequences a transaction, it requests payment in the form of a Stark token. Is this a problem for alignment or are there some strengths with having your own fee token that you guys want to highlight? What was the sort of core rationale behind this argument of making also the fee token be stark instead of being eth? And whoever wants to start can start.
00:08:36.115 - 00:08:38.615, Speaker C: I suggest a view start.
00:08:42.675 - 00:09:50.777, Speaker B: I have a very nuanced thing to say about it. I mean, I'll leave for Ellie, the larger, the less nuanced the big picture about how an ecosystem should look like and so on. I just want to comment on a very specific point, maybe two things. First, we'll make sure that the user experience in starknet stays very good even with it, and in particular that users will be capable of paying not just with Stark but also with eth and very soon not just with Stark and eth, but generally speaking with every token they'd be interested paying the fees at. What will happen behind the scene is that what sequencer will get, what operators will receive, will be eventually the Stark token. Now one very nuanced thing about that is that we have this program for developers. We call it Devonomics where basically fees, at least for now we are running this some sort of experiment.
00:09:50.777 - 00:10:58.735, Speaker B: Mentioning earlier that we like to test all kind of new things where fees are not going just for payment to the network operators, but also we want to take some part of the fees and give it to developers. Which developers? Developers of the most used applications and developers of the best and most important infrastructure. And when I say we want to, in fact we already did one round. We gave several millions of dollars for DAPP developers on top of starknet. And I think that one small but important thing you get from paying fees in Stark Token, and this is a small thing, but it reflects on everything, is that those developers will now if they receive dollars or if they receive Stark Token, it's a different, there is a different value in this, meaning they can now affect what is happening in the ecosystem much more if what goes to them is eventually the token of the ecosystem.
00:11:02.675 - 00:12:29.041, Speaker A: Right. I have another question. I don't know how techie we want to get, but I do have unrelated to the subject, so I want to, I want to sort of COVID it now before we move on. Is there something about the specific cryptography choices that Start Net makes that makes it more difficult to be aligned with Ethereum? Because I know that there's this big difference between hash based zero knowledge and curve based zero knowledge or just hash paid cryptography and curve based or KZG based cryptography. And it seems like in the Ethereum domain when they're moving to proto dank charting, they're leveraging a lot of this KZG type cryptography which is very different from the Stark and hashbates cryptography. And I believe that it's also the case, and please correct me if I'm wrong here, that it seems like there are more pre compiles that Ethereum favors that are in favor of this KZG commitment. So is there something on the cryptography level where starknet has to fight a little bit? And have you thought about for example doing something like verifying the Stark proofs using some type of KZG verifier? So that question is directed to Ellie.
00:12:29.233 - 00:13:39.859, Speaker C: Yeah, terrific question. And I think it goes back to the previous question of what are we aligned with? Right. So on this thing I would say our first and foremost alignment is with, you know, math integrity and efficiency. And on all of these fronts, as I've said many, many times across many forums and by the way, on Thursday in two days there's going to be a Stark at home with a bunch of kzg experts, you know, Zach Williamson, Mami Ratsin from Tyco and I mean Zach of course of Aztec and Jim of, from Binius and Shah Papini. And I'll be there, you know, speaking about Fry. I've spoken about this many times, but let me say it once again. There is one advantage of pairing based systems in our context and that is that the length, the communication complexity, the length of the argument, the number of bytes is smaller by roughly a factor of, you know, one to two orders of magnitude.
00:13:39.859 - 00:14:24.319, Speaker C: Right? The length in bytes is shorter. But on every other front, when you look at math or engineering or numbers, hash based starks over small fields dominate. Much faster proving, much faster verification, much safer, fewer cryptographic assumptions, much greater scale. Everything is better. So again, what do we want to align with? I want to align with long term future proof techniques. I want the safest math. I want our users to have the safest math.
00:14:24.319 - 00:16:13.677, Speaker C: Having a trusted setup, even if it's vetted by a very worthy set of people, is not as good as having something that requires no trusted setup. Now it is true that I think mostly for historical reasons because snarks in Zcash became popular under graph 16 with, with a curve and I think Ethereum led the way on that front and allowing something that was completely inefficient to verify on the evm, which is a pairing in a snark, adding a pre compiled for that and for historical reasons, you know, that particular curve and setup got a subsidy. I think it would be very unfortunate if this thing is, you know, becomes enshrined and you know, you need to align with this thing because it just leads for systems that are less safe. There's a single point of failure, it's not quantum resistant. It enshrines not just a very particular proof system but even a very particular, you know, setup and stuff like that. So it's not, it's not a good idea and you know, just based on, it's not about alignment, it's just based on, you know, math, security, stuff like that. But I'm very optimistic that you know, Ethereum, led by visionaries like Vitalik and Justin and others, they understand that they want Ethereum to be the place where all proof systems have a level playing field and that you don't have a single point of failure or you know, one, you don't have to fit squares through circles or vice versa.
00:16:13.677 - 00:16:28.665, Speaker C: So I'm very confident that Ethereum will once again lead the way and find a way to allow multiple proof systems to play on a level field and not force them all through one system that is just leads to worse security.
00:16:29.575 - 00:16:31.687, Speaker A: Avi, did you want to lean in?
00:16:31.871 - 00:16:57.515, Speaker B: Yeah. Just to repeat what Ali said at the end. Ethereum want to be roll up aligned and that means that Ethereum wants to be data availability aligned but also proof verification aligned. So that means no to very specific set of parameters and cryptography, yes to enabling all proof systems to be very efficiently verified on Ethereum. And I'm sure we'll get there.
00:16:59.235 - 00:17:40.525, Speaker A: Okay, let's move on. Or actually let's let's take a retrospective look on the year that has been 2023. What were some of the most like significant moments in view in your view about the year that has been? It has been an eventful year. A lot of things has happened but when you look back on that year, are there some significant moments that stick out to you that feel like milestones or surprises or something that maybe you want to remember people of something in particular? And maybe we'll start with Liron this time and we'll work ourselves ourselves down.
00:17:40.565 - 00:19:06.425, Speaker D: And you'll get to speak last should have prepared answers. Maybe not a specific event but something a trend that definitely changed throughout 20 or 2024. 2023 I think 2023 you're referring to is that when I joined Starcore in mid 2021 and back then it wasn't at all clear that like what we call ZK rollups validity roll ups were production ready or going to like overtake optimistic roll ups in terms of adoption and production readiness in the near future. And I think what we saw last year is a flipping of that even like Vitalik made a few comments that he thought that optimistic roll ups would would be further ahead of ZK roll ups and that sort of flipped with with maybe I'm forgetting teams so sorry but like Risk zero Polygon with all the different ZK efforts ZK Sync starknet it just become clear that this the end game is significantly closer than we thought it was. And I mean that's through a bunch of different events with all these milestones that these teams reached in 2023. I with with I don't want to cause a fight by saying this but like you do look at some of the biggest optimistic roll ups not even having fraud proofs in production let alone decentralizing the ability to submit those fraud proofs. And then the you've got multiple different teams running ZK roll ups at scale submitting proofs.
00:19:06.425 - 00:19:11.525, Speaker D: That's a huge achievement of 2023. All of that happening while there's a broader macro bear market.
00:19:16.025 - 00:19:16.965, Speaker A: Avio.
00:19:19.665 - 00:20:25.965, Speaker B: Many things, but I'll just talk about one. I think in terms of scale throughput for L tools and starting in particular, we started the year somewhere with like demand of a friction of a TPS and capability of, let's say one tps. And we ended up the year with days where we went over 10 tps and the ability to do 100 tps, which is roughly two order of magnitudes in terms of both demand and supply. And I sure hope that we see another one or two orders of magnitude demand this year, but we'll definitely going to see improvement of at least. I don't want to commit too much, but I, I'm sure pretty sure that we're likely to see even close to an order of magnitude again in throughput this year. So if we did up to 100 EPS by the end of 2023, I hope that we'll see a few hundreds at the very least. Sometimes this year.
00:20:30.425 - 00:21:38.663, Speaker C: I want to. Okay, so I want to start with the challenges and then go with the things that, you know, I found surprising in the, in a challenging way and the stuff that I found then surprising in a very positive way. So along the challenges first I'd say that there are many competitors now. So when we started six years ago and we said we're going to use Starks and validity proofs to scale Ethereum, no one understood what we're talking about. Now everyone is building their own validity proof systems and they're doing tremendous job in the context of, you know, snarks and Starks and KZGs and whatnot. It should be noted that all of the leading validity roll ups actually use Starks and fry some of them again because of this subsidy given to a very specific Roth 16. Squeeze it at the very end through that.
00:21:38.663 - 00:22:39.701, Speaker C: But all of the scaling is done basically by the technology that we spearheaded and predicted. But on the challenging side, projects like ZK Sync and the Polygon systems, they're very good and they're using EVM and allowing very easy deployment of existing solidity code. And it's, it's surprising. I thought it would be more challenging to do that, but they're doing a very great job there. So on the positively surprising side, I would say two things that are external but are very heartwarming. The first is the realization of many developers that Cairo is just a fucking amazing language to write smart contracts in. So it's not just that it's a good language if you want to Scale your code with validity rollups.
00:22:39.701 - 00:23:37.335, Speaker C: It's actually a next generation programming language for smart contracts. That's very surprising, positively surprising. Related to that is the fact that we are the ecosystem with the largest increase in developers. And it's not something trivial, it's something that actually many folks were saying you're trying with Cairo to boil the ocean and developers are not going to come, it's too hard and the language isn't ready and everything should be EVM based. And I think the developer ecosystem has proven the world wrong. And this is very, very positively surprising. And the last aspect which is related to, you know, what is called unalignment, but I call it being aligned with truth or where we should head things like native account abstraction, multi calls.
00:23:37.335 - 00:24:40.445, Speaker C: The whole notion of Cairo and starknet, they have empowered developers to build amazing UX for end users. So only on Starknet are all wallets basically with an interface that is Web2 like. And this is a fact that is not well enough known by people. But when the masses are going to onboard onto blockchain, one of the questions will be where is it easy and yet safe to onboard onto? And on starknet all of the leading wallets, you know, Bravos Argent have very Web two, you know, using biometrics, things like that. And this is because of being, you know, unaligned or rather being aligned with future proof technology. So again, that's another very positive surprise that is converted into very good ux. Ux.
00:24:41.105 - 00:25:24.511, Speaker A: So I'm hearing the narrative that ZK roll ups would be completely outrun by optimistic roll up that is sort of flipped. I'm hearing that we are seeing orders of magnitude, multiple orders of magnitude increase throughput that the system is capable of handling. And I'm hearing that there's also been this dramatic change in the sort of perspective of Cairo. Cairo used to be this language that was seen as something that was clunky, but it has changed. It was an upgrade. The Cairo language was upgraded. So it's not just that Cairo all of a sudden has become awesome.
00:25:24.511 - 00:25:58.295, Speaker A: It says its technology technologically has changed. So there used to be Cairo zero, then there was Cairo one. Now it's just Cairo I think. And apparently it's one of the fastest growing and one of the largest developer ecosystems. So we have three great things. ZK rollups really gaining a lot of surprising strength and this is surprising even to me, strength against optimistic roll ups. Maybe it's even possible that many of these optimistic roll ups will become ZK roll ups to catch up or something.
00:25:58.295 - 00:27:13.325, Speaker A: Like that and we have throughput and we have a language that developers actually love instead of absolutely hate. That sounds like absolutely incredible year of amazing progress. But what about some of the things that I think starknet has gotten some criticism for during the year? I remember vaguely and I wasn't like hands on during that time myself, so I don't have full perspective on what it was that happened. But there was something around regenesis moment when there was something that I don't know if it didn't work smoothly or if there was some small amount of funds that was locked into a contract. Can you talk a little bit about what was this event? Why were some people angry? Was there just confusion on Twitter or what was the reality of the situation? And is there some lesson from this that you guys feel that you have to do better on in terms of communication? Or is there something just process wise that needs to change? And that question goes to anyone who feels like they want to answer.
00:27:15.465 - 00:27:55.555, Speaker D: I can try and tackle this. When you go to mainnet as cutting edge technology, there are risks involved. It was very clear to the community that is true. Even with something like this, with the specific thing that you're talking about with the ReGenesis and the fact that v0 transactions would no longer be supported by the protocol. Firstly, it's important to understand the technical reason for this. Basically with account abstraction now, every single transaction goes through two processes. One process is validating the transaction, the second process is executing the transaction.
00:27:55.555 - 00:28:38.939, Speaker D: And those V0 was didn't have that breakdown between validate and execute. So you go live, you realize you have to have this structure. Why do you need the structure? This structure basically facilitates account abstraction. Because now with account abstraction you can have absolutely whatever you want in that validate function. It can be face ID from your phone, sign some hardware in your phone, and then the signature from that hardware gets sent to the validate function at the protocol level of the starknet. Not just some off chain verification. So there's this question now as a protocol, you have some wallets that are deployed with V0, but you want looking to the long term as this thing gets out of alpha to be generally available and working at scale with account abstraction.
00:28:38.939 - 00:29:22.351, Speaker D: And you make a calculated decision that there'll be a few months now where people will be able to transact with those wallets. But eventually there will have to be a cut off date and then close monitoring of the exact damage. What the unfortunate thing with Twitter, especially with anonymous accounts, is that the people can make a lot of noise when there's actually not some, like, some like, real causes of sourceful concerns. So here I think you have like a few hundred thousand dollars across roughly the same order of magnitude of accounts. I can pull up the exact numbers after here, but like, let's say it's like $400,000 across 300,000 accounts. So you're looking at like average of $1.30 per account, which is unfortunate.
00:29:22.351 - 00:29:40.775, Speaker D: And I don't want to like, say it's not a lot of money, but there's a decision here. If you want to make this, you have to make this calculated decision of Visa transactions will no longer be supported. There's an over, like, more than enough time for you to move across, and then people have to deal with those consequences.
00:29:46.075 - 00:30:45.255, Speaker C: All right, maybe I'll add one thing to that, which is just that we have focused a lot of attention on building on developers. And as a general theme, we've always done this because we're building infrastructures and then the developers are needed in order for servicing the users. But in the end, it is really about offering something that users will use. And generally speaking, we've become much more attentive to the needs of users. And it's something that definitely, you know, we've adapted to and we've learned and over the past year, and I think users are seeing this and will definitely see it in 2024, this increased attentiveness to what users end users need and want.
00:30:47.995 - 00:31:37.111, Speaker A: All right, so moving our heads from the past and looking into the future. So already you already said that developers are starting to change or have changed their opinions about Cairo, that it's a great language to build on, but what are some of the things that are cooking for Cairo? And I mean both the language and the vm, what's. What's in store basically for the coming. For the year that's ahead of us, that people should learn about or be excited about. What are some of the highlights for the coming year? And anyone who feels like they want to talk first can do so.
00:31:37.303 - 00:32:34.515, Speaker B: Yeah, I can start. So not everything is public yet, but let's set the direction. I think in the first half of the year, we are going to focus on two things. One is continue to push forward the performance. That means in particular we are going to roll out again parallelization in execution of Cairo and later also faster execution by creating a separation in what the sequencer is actually performing and what is later being proven. So you can still use Cairo for proving, but in fact the execution of transaction will become much faster and the second so that's one performance. The second one is cost.
00:32:34.515 - 00:33:09.685, Speaker B: First there is the famous for it for forthcoming which will likely dramatically decrease data availability cost which is the major cost per transaction on stacknet right now. And we have a couple of surprises coming there as well. So I'd expect three months from now to be in a even higher performance and a much lower cost. So that's talking about three to six first months of the year.
00:33:10.665 - 00:33:57.585, Speaker C: Well one thing that I just want to add that one thing that I don't know the answer to but I hope that we'll give some answers to is that we because we realize that some of the early, you know, brave or unaligned choices as to the core of Cairo have paid off very nicely in terms of ux we'll be exploring similar such things and themes. You know what the analog of going full blown account abstraction. So looking at or multi calls or stuff like that we'll be looking for adding more such thing to the core base of Cairo so that again developers can work their magic and have an even more amazing and unseen elsewhere experience for users.
00:34:00.285 - 00:34:52.554, Speaker A: And about improving cost and increasing import performance. I did see some just in the last couple of days I saw some tweets from the StarkNet account about modularity. Embracing modularity. Was I dreaming this or is there actually something happening here about making the StarkNet stack compatible with using Celestia as a data availability layer? Is that a prompt that you guys are exploring? Is that something that you have some information you want to share? Because it seemed like there were just some small tweets, not that much information I could found. Is there anything that you're ready to mention at all? Is starknet going to open up the possibility to use other systems for da?
00:34:55.265 - 00:36:09.765, Speaker B: I can take that. We like to experiment and I think modularity is not just about data availability, it's also very much about the ability to execute and to prove. And I think that if you want great clients that can publish data availability in high throughput layers but at the same time also verify execution very fast you have to rely on proofs and Starknet is the tech for it with Caro inside. So we are definitely exploring integration to many other data availability layers. Like I said earlier, the first one will be 4844 in public Starknet Whenever it comes out. In fact we already tested girly for that. We did announce that we are also experimenting on the side with Starknet and Madara with Celestia's data availability and we'll push more the Innovation on those fronts as well.
00:36:09.765 - 00:36:42.355, Speaker B: So yeah, that's probably another direction worth exploring innovation. And we are definitely looking into all kind of things. I can mention Celestia, but I can also mention that we have been talking and still thinking of a mode that we call Volition that enables different data availability to be available for developers in the same system. So that's in general something that we plan to do in Start as well.
00:36:44.375 - 00:36:46.799, Speaker A: Yes. Liron, do you want to say something?
00:36:46.887 - 00:37:20.337, Speaker D: Yeah. I think the whole concept in like that that you have one unit of measurement for like all computational resources, whether it's execution or storage or bandwidth, doesn't make so much sense. And I think even with 4844, with having like a data gas and a regular gas, the sort of acknowledge that and modularity like one of the benefits that it gives you that one. Also another comment worth saying just for the benefit of the newer listeners. The biggest bottleneck. Bottlenecks a scary word. But like one of the biggest challenges is data availability more than the actual scaling of the proofs.
00:37:20.337 - 00:37:46.351, Speaker D: The proofs we sort of know what to do right now roughly 90% of gas costs go to DA as pre 44 4. It's pre volition. There's a lot of stuff to do that but like a lot of people are surprised by that. They would think that data availability is a minor thing relative to proof verification. But even looking at like Stark X app chains that we were running previously through stuff like Validium. By the way, Validium was a word invented at starcraft. I did not know that.
00:37:46.351 - 00:38:22.885, Speaker D: Or more specifically by Avi. That's like one of the biggest gas reductions comes from beyond just the proof verification comes from using Validium DA rather than putting everything on chain. And there's a lot of other stuff like this whole debate like can ZK rollups just send state diffs onto L1 or send a representative of every single transaction on L1 and Starknet has opted just to do state diffs because it saves gas. So maybe it's a point about. I think modularity helps you optimize each component separately and it's a good thing.
00:38:26.555 - 00:39:00.469, Speaker A: Right? So volitions and EIP 4844. Is it. Is it a high probability that we'll see both of these things affecting Starknet at the same like simultaneously or one after the other, but in total during the year 2024 or are you guys planning to wait and see what happens after EIP 4844? Where's volitions? Sort of happening anyway. Whereas the second one, what's the current.
00:39:00.597 - 00:39:02.853, Speaker B: The second one, the logical one?
00:39:02.989 - 00:39:28.125, Speaker D: Yes. One reason to explain that is just maybe repeating myself. Like DA is one component, but there's a lot of other stuff that Sarkne doesn't have yet, like fee markets and just general performance improvements that you sort of want to have instead of just optimizing only for DA. So 4844 is a big enough lift, Volition is another lift. But they're both probably solving the same thing. You want to solve other stuff in parallel.
00:39:31.345 - 00:40:17.625, Speaker A: Another thing that I've seen talked a lot about and I want to give each of you maybe a chance to talk about this is there seems in starknet that there's a lot of focus on this gaming use case and I want to know to anyone who feels like they can explaining what is the case for gaming being a good use case for blockchains and perhaps why is it good for starknet in particular? Are there many teams that are building something gaming related on starknet and do you think this is something that is going to shape the ecosystem over the year? Or why is there some so much talk about gaming in particular? Like why gaming specifically?
00:40:19.565 - 00:40:21.105, Speaker C: Who wants to go first?
00:40:22.285 - 00:41:03.113, Speaker D: I can start. Okay, gaming. So a few comments. Firstly, Vitalik's whole post about why we need Ethereum, his first one ever, was describing exactly this use case of having self custody of your assets in games and the industry sort of evolved to this situation where you had the assets on chain but the actual game logic was off chain. And it's this good step in the right direction but it's neither here nor there and a lot of the teams acknowledge that it's just a step towards the ultimate goal of unchained proof of actual the game logic. So you basically have two camps in the gaming world meaning equal. But in terms of the philosophies one is like we don't need blockchains at all.
00:41:03.113 - 00:41:48.267, Speaker D: But one is if we do need blockchains we need everything, not just the assets but also the game logic to be running on chain. And I think the only way you can get actual game logic running on chain at scale for the end users is through ZK rollups because of the scalability benefits and account abstraction because otherwise you're just going to have end users losing private keys. You're going to have to the issues like you need session keys in order to be able to transact openly without signing each individual transaction as you make moves in the game. The last comment I'll say is it needs to be proven on chain. It doesn't necessarily need to be run on a blockchain and there's a subtlety to that. So basically you can attest to the validity of the game in batches. It could be a daily batch, it could be a weekly batch.
00:41:48.267 - 00:42:19.015, Speaker D: And you just know that every single player played by the rules and didn't get special treatments and get any special cheat codes, etc. And that doesn't need to be run in real time with these blocks. Blocks can add overhead that is bad for these experience. But having some sort of cadence of sending proofs that attest to validity, that is something that a strong part of the gaming community does want. There are maybe I'll pause then others can add stuff and actually talk about actual stuff going on stock. Now.
00:42:21.635 - 00:42:23.771, Speaker C: You want to go, let's just.
00:42:23.803 - 00:43:06.195, Speaker B: Talk about games on starknet. I mean the bottom line is exactly the summary of what Liron said. You can execute tons of computation. Very, very inexpensive games is a very natural use case where you talk about a lot of computation. It's something that is very hard to run today on, let's call it traditional blockchain. And it's very easy and is getting better every day, every month on Starknet. And we definitely see a future not in like five or 10 years but very soon where tons of computation will still be very inexpensive to run and therefore games.
00:43:09.015 - 00:44:09.005, Speaker C: I'd say that since you wanted all of us to answer, my answer would be that you exactly see that the benefits of being like something that is novel the next generation developers wanting to have on game, sorry on chain experience, right. They understand that you can't do it on Ethereum and you can't do it on the optimistic roll ups and you can't do it on the evm. It won't scale like long term. And if you're going to invest so much time in building a game, right, Building a proper game is like two years of work just on the front end or something like that large studio. So you need something where the engine can, can actually handle it and the most plausible candidate is actually, you know, Cairo and starknet. So a lot of wise developers are saying since we believe on chain gaming is the next thing, not just creating the NFTs and putting all of the logic off chain. And I think they're right.
00:44:09.005 - 00:44:55.299, Speaker C: They're asking okay, where which is the platform where we can deliver this both now and also to scale to global scale. Because I mean here's the thing about like all projects, they start small, right? So you're building something. But your aspiration, your hope is that, you know, everyone uses this, that this is a game that will go ballistic. Now, those of you who've been long enough in blockchain may remember the crypto kitty's craze, which is. Or, you know, then it happened with Axie Infinity. What happens if your system actually succeeds? Well, if you don't have the right technology that can actually scale, it just won't work. And that's what the successful projects have found out.
00:44:55.299 - 00:45:22.745, Speaker C: So all of the Stark X customers that came to us came to us because they succeeded and they were bleeding gas and they, you know, couldn't service their customers. And the ones coming to us now are the ones with the enough of a vision to see that if you want to succeed and you plan to succeed and you go past the, you know, whatever, an airdrop or funding or a grant, you want something that will actually dominate gaming, you need to put it on an engine that can scale. And starknet is it.
00:45:24.205 - 00:45:46.701, Speaker D: One thing we missed is just naming teams. I'm always scared to do this because I always end up forgetting a team. So if anybody's listening, if you're not listening, I apologize. My goal here isn't to pick favorites, just to whatever is on top of my head. There's an influence team that has actually a live alpha. You can go and try Influence IO. I think there is also Cartridge gg.
00:45:46.701 - 00:46:19.147, Speaker D: They're also running on chain games. There's Loot Realms, which sort of evolved from those. What was that called? Eight words that were worth like hundreds of thousands of dollars in the last bull market. They've also done some on chain gaming stuff. Brick the game Briq is like basically Minecraft on chain. They've also formed some of them a community called Dojo Dojo, which is building the tooling for unchained gaming. They've got the sequencer called Katana, which is sort of.
00:46:19.147 - 00:46:51.525, Speaker D: It uses the blockifier sequencer that public stock uses, but it has some wrappers around that that are optimized for gaming and also just has a strong community around that that's again, using on chain games, not just on chain assets. And then whatever topology is another team that's built the Shoshin S H O S H I N G that you can actually like. I encourage people just go to that website and just try and play the game, see what it's like. Again, I might be missing some teams. That's not my intention. Apologize.
00:46:52.335 - 00:48:22.595, Speaker A: All right. One other thing that I wanted to talk to you about is do you think maybe not in the next year, but at some point will there be some level of privacy inside of starknet? I think a lot of people sometimes when they hear ZK rollups, some of them automatically assume that oh, it must also be private because it's zero knowledge. It sounds like the system must have zero knowledge of what kinds of transactions people are doing, but that's actually not really the case. What's there is information revealed about which account has which balance, which account is transacting with which account. The only thing that we have zero knowledge about is how were those transactions being proven to be valid and that is what is aggregated into this zero knowledge proof. But are you aware of any internal work that has been done to look into? Like, okay, so how do we go beyond just using zero knowledge to scale but also make it encompass the privacy characteristics of the system? Is that something that you guys feel passionately about? Is there something that you want to see in the future? Or how do you think about this question of privacy in Start Map?
00:48:23.815 - 00:49:04.469, Speaker D: So I'll take this first, the first thing I want to point out, Ellie will like take this to his grave. That's why he wants to call these things validity proofs and validity roll ups and not ZK roll ups because they're not zero knowledge in the current state. Now the primary benefits of ZK of actual zero knowledge, two things. This is scalability because of this asymmetry between the verification of the proof and the actual size of the transactions, but also the privacy. The main pain point for the wider community right now is scalability. So you want to solve that first before you get to the next stage about privacy. I will, I want to make one comment about not so much privacy but more confidentiality.
00:49:04.469 - 00:50:24.227, Speaker D: So this is an important distinction and I think it finds a sweet spot where it makes more realistic applications for the blockchain whilst not being like, I don't know, like I'm just, I personally just get too worried about like how the regulators and the incumbent bodies like view privacy supporting supported apps without getting to the philosophy arguments about that. So I want to talk about confidentiality for the second. Second, if you run an app chain with Validium data availability or volition, but you the user opts for Validium, the base layer doesn't see the individual transactions and it doesn't even see your individual balances. Those individual balances are stored with the Validium data committee, whoever that might be or however that's that's stored. So you can run, you can Run a starknet app chain with validium data availability mode and going to Etherscan once the proof submitted to Ethereum doesn't expose that Eric now has 100 USDC or that Liron transferred money to Eric. But if you go to the committee running that app chain, da that committee knows the balances of the individual users and presumably has historical transactions to generate those balances. Now that's a good sweet.
00:50:24.227 - 00:51:01.905, Speaker D: Others may disagree and this is my personal opinion, that's a good sweet spot between privacy and full blown transparency of the blockchain where certain permissioned entities have insight and visibility but the rest of the world does not. So when you look about onboarding banks or just running a game, but like I don't need people in that game or trading platform, I don't need random people don't know me to see my balance as my trades, but other people who do know me or who should see those trades do see those trades. It's a good balance there. So maybe I, I took it to the other direction but I think it's an important benefit ability and that's often not really highlighted. This confidentiality.
00:51:09.325 - 00:51:10.345, Speaker C: I agree with.
00:51:11.725 - 00:51:15.465, Speaker B: I have one comment which is.
00:51:17.805 - 00:51:18.093, Speaker D: We.
00:51:18.109 - 00:52:02.255, Speaker B: Want to support also a bunch of cryptography. Maybe it relates to your previous question about what Ethereum supports. So in starknet you have this flexibility inside accounts to verify whatever signatures you want. But also we want to have developers and then users enjoy greater flexibility in terms of like what are the cryptographic primitives they can use and how cheap they are. And we want to add later this year very, very inexpensive pairing verification so that all kind of known privacy schemes and privacy apps will walk out of the box and very inexpensive on startnet. So I guess that will support privacy very much.
00:52:04.595 - 00:53:43.255, Speaker A: Okay, and before we start to wrap things up, Ellie, you tweeted publicly on Twitter that you're looking forward to getting grilled by Eric on a Twitter space. And so I feel like to some extent I have to live up to this world and I'm going to try to ask you a question that sort of tries to cut at the heart of some of the things that maybe, maybe it's difficult for you to answer. So the question that I have, and it's been something that I don't know myself the answer to, sorry, I'm going to stop beating around the bush and get straight to it. So sometimes I see news about stuff like Ulvetana, you mentioned that you were having a workshop. These are the same people behind the Binya system that seemed to be making some advancements towards making the EVM a lot easier to zero knowledge prove or validity prove to use the terminology that you prefer. And maybe so at a surprising level and we've also seen in the past but happening in a more real sense now with the RISC 0 team allowing people to prove native Rust code very easily and provide validity proofs for that. Considering these things happening that we didn't know about many years in the past and we're seeing these advancements on like making the EVM more easy to validity proven, making even rust validity provable.
00:53:43.255 - 00:54:02.435, Speaker A: How do you feel today about this big direction of Cairo? Basically my grilling question to you is how confident are you today that it's still worth it with Cairo given the opportunities that we sometimes see on tweets and threads and some small experiments.
00:54:03.255 - 00:54:36.855, Speaker C: Yeah. So I'll answer honestly. It's along the way we made a large number of bets and whenever you make a bold and courageous technological bet, it takes time to see whether you were right or wrong or somewhere in between. And it's too early. So I mean I could go on some you know, marketing spree and promise and say that I know that we made the right choice. It's too early. But let me just point out the two trade offs.
00:54:36.855 - 00:55:41.739, Speaker C: Well the trade off is once at least I thought of them and then something that I realized only very recently on the positive side of the choice that we made. So the there's no doubt that taking building a VM that is dedicated to the constraints of your technology means you will utilize that technology better. This is true about CUDA and GPUs and it is true about Cairo and Starks. Okay. At the same time it also means that the you have you're gonna it's gonna be harder to get the tooling infrastructure the developers care for. And by the way it's the same thing with the solidity with respect to the Ethereum virtual machine or a blockchain machine, you know, compared to using whatever pre existing programming language was there. Right.
00:55:41.739 - 00:56:29.903, Speaker C: You know Vitalik and Gavin woods and whoever was writing the yellow paper also probably struggle with similar questions. Should we take the Java virtual machine and Java, should we take Python or should we build the virtual machine for this new thing which is harder and I think in that case clear that they made the right choice. Definitely. Even though you know now Solana with Russ maybe challenges that so even there the the sort of the jury is out now. Those are the two sides of the trade off. You will get more proving juice out of a VM that is built with proving in mind than you will get out of using some other vm. But the developer toolkit will take more time to build.
00:56:29.903 - 00:57:26.325, Speaker C: So now, which will win? Too early to say. One advantage that at least I didn't realize early on, but actually is related to this, you know, UX and the developer experience and the UX user experience, by owning on a very deep level the whole stack from the virtual machine and all the tiers above that. As opposed to saying we take something standard, it was built somewhere else. The ability to offer new features, to innovate and to say, okay, this doesn't make sense, we're going to change, it is much greater. So for instance, you know, our peers or competitors across the other L2s that are now embracing ERC 4337 with account abstraction, right? It is not. It is never going to give the same level of experience to the end users who are coming. Why? Because they're coming from Ethereum with the Ethereum standard.
00:57:26.325 - 00:58:16.851, Speaker C: They already have their EOAs and their ledgers and their metamask in a certain way. And now offering them an erc, you know, account abstraction as an additional thing is going to be a very, very problematic thing. And now you have like two standards with starknet, everything is based on smart wallets, account abstraction. Everything is already, you know, biometric key, biometrics, secured social recovery, things like that as a baseline. And so this is, you know, the ability to innovate and offer the developers and then the users an integrated experience that is modern and better is something we didn't realize. It's not related necessari necessarily to the proof systems. So summarizing, we made a bet.
00:58:16.851 - 00:58:44.699, Speaker C: We made a large number of bits. You know, we started by asking about like KZG and Groth 16 versus Stark, you know, there again the question could be asked. We're also being challenged every day on that front as well. You know, there are new innovations on folding and stuff like that. And still we're very confident our technological path will scale best. Same thing applies to Cairo. I believe we made the right choice, but time will tell and we don't.
00:58:44.699 - 00:58:46.535, Speaker C: Honestly, we don't know yet.
00:58:47.155 - 00:59:15.525, Speaker A: Thank you so much for that answer. And I see we're at least in my local time, we're way ahead over the hour. Also, the recording time is one minute away from the hour cutoff. Liron, I think that you have had another meeting that you're probably late to. Unless someone has something that they really urgently want to say before we close out. I want to thank all of you guys for your time, and I'm excited for this next year to come.
00:59:17.225 - 00:59:18.177, Speaker C: Thank you, Eric.
00:59:18.281 - 00:59:19.241, Speaker D: Thank you, Eric.
00:59:19.433 - 00:59:20.945, Speaker A: Thank you very much. Thank you so much.
00:59:21.105 - 00:59:21.713, Speaker D: Bye.
00:59:21.849 - 00:59:22.105, Speaker C: All right.
