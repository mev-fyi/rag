00:00:02.480 - 00:00:03.030, Speaker A: You.
00:00:04.920 - 00:00:05.732, Speaker B: All right?
00:00:05.866 - 00:01:12.084, Speaker A: Okay. Yeah, exactly. So I guess it's a good continuation of the last talk, because I think I want to make the point to experiment with even more radical market design changes. And, and I see basically the potential to make market designs, fully decentralized market designs that don't, for example, require duck pools. Maybe the issue that duck pools are addressing is that you don't want to have your trade front run, so you don't want to publish your trade and then someone else being able to acting so front running. Resistance is a big topic in this talk. And also the idea of a fully permissionless Dex.
00:01:12.084 - 00:02:05.224, Speaker A: So not just a dex where that's noncustodial, but still has an operator, but dexes without an operator altogether. I will hopefully come to the next slide. Okay. It's just taking time. Right. So I will give a short overview of different dexes and a little bit discuss the different designs and kind of make the point between those that require an operator and those who don't and present the batch auction approach as a design that doesn't require an operator. All right.
00:02:05.224 - 00:03:08.590, Speaker A: Okay. So again, those are the designs we have seen on dexes that are existing. And we have, on the one hand, those where orders are basically sent to an operator and the operator does some matching, and eventually the settlement is then done on the chain. And on the other hand, there are also designs where there is no operator whatsoever required, and that typically involves sending the orders directly to the blockchain and also having the matching process part or executed by the blockchain or by smart contracts. And, yeah, those are examples here. Okay. This is just always taking a little bit.
00:03:08.590 - 00:04:15.608, Speaker A: So the advantages, of course, are on the permission side. So on the site with an operator that you can achieve stuff like instant finality and in some cases high less scalability because you can, for example, place orders off chain, but you still have this operator, and facing regulatory requirements is just like one issue. But in general, I basically want to kind of show how a permissionless system could be much superior. So the core point is that fully decentralized system provides liveness guarantees. So it's basically the whole point of Ethereum. So you want to have a system that's always available where anyone can use it, where other protocols can build on top of it. So a lot of DeFi protocols, lending protocols, require some form of exchange.
00:04:15.608 - 00:05:45.904, Speaker A: And ideally they want to build on something where they have the absolute guarantee that this is available forever and that there is no operator that can at some point decide that they don't want to support their specific application. But even the bigger vision is that a decentralized system has the potential to become a global liquidity pool. So imagine you want to place your trade or you want to trade some asset a versus an asset b. And at some point you will have the choice whether you just submit this order to one operator and then kind of just everyone else who is dealing with this operator can trade with you, or you submit it to this open global system where everyone in the world can access or kind of can give you the best rate and give you the best price. So my claim is that if such an open and global system would exist and it would be sufficiently efficient, there would be no point whatsoever to kind of submit your order just to one operator because you want it to be accessible to the whole world. This open system will win. I mean, ironically, as you described it also how it works today.
00:05:45.904 - 00:06:56.920, Speaker A: That is to some extent the case, because there are those regulatory rules that basically require from operators that they give you the best price even if the best price is available at other operators. But that is of course tied to geographical boundaries or jurisdictional boundaries to regulatory boundaries. And I think with decentralized systems, we can build those systems and have those guarantees without regulation enforcing it, but by technology enforcing it or by technology like providing that. So, yeah, I will relatively skip fast over this. At this point, we can just look at where's trading volume happening and. Right, so at this point, okay. At this point, exchanges that are permissioned or IDEX is still the most successful one.
00:06:56.920 - 00:07:56.834, Speaker A: So the open or non permissioned systems are so far smaller, but they already play a significant role. Yeah, this is also just trading volumes changing over time. But I think the only message maybe is that the race is still completely open, which market designs will get a lot of traction. Right. So I give you now an overview of those different market designs. Is this working actually or is someone else clicking if I click? Okay, anyways, try to continue. Okay, perfect.
00:07:56.834 - 00:08:42.670, Speaker A: Thank you. Yeah. Right. So first discussing on chain order books. So the most naive approach would probably, or is probably to post just orders on the blockchain directly and basically replicate one to one, how most centralized, at least crypto exchanges work. So continuous double auction just replicates this one to one. The issues with this is that it's fairly expensive to use because you have to post orders on the chain and everything.
00:08:42.670 - 00:09:39.374, Speaker A: That is. Yeah, you have definitely issues with front running, but I will discuss this later. It tries to mimic the continuous double auction, but you have those racing conditions and gas auctions. So basically, as you see the transaction that is trying to trade against this exchange, as this is already available in the mempool, you will often find that then people doing arbitrage and are trying to outbid those orders with gas auctions. Same problem with the uniswap mechanism. The advantage of this mechanism is that it's fairly cheap to market make. So those that put liquidity into this, they don't have to constantly update their prices.
00:09:39.374 - 00:10:41.224, Speaker A: Basically, just as people trade against them, the prices are updated algorithmically. And Kyber is actually doing somewhat similar with a little bit more flexible price design. So there, those who provide liquidity can do this probably more efficiently, and they also aggregate different sources of liquidity. So then that is the design we first built, and now others are using it as well. Those are the dutch auctions. So here, it's a process that takes a little bit of time. So if someone wants to trade token a two versus token b, they submit this order and basically say, yeah, I want to trade a for b.
00:10:41.224 - 00:12:05.490, Speaker A: And in the beginning they request a very high price. And as time passes by, so here, the x axis time, the price continuously drops on a predefined schedule. That could be linear, or it could be one divided by x function. And while the price drops, those who want to do the opposite trade can do an order, and it always adds a price that is defined by the current time. And as there are enough orders submitted to clear the full auction, then everyone or every trade is cleared at that price. So even those that submitted their bid earlier and were willing to accept, from their perspective, a lower price, they will still then they get the final price, which is the price where all trades are clearing. So the advantages here are that this can run without any operator, is front running resistant, but yeah, takes quite a bit of time, or at least in the design that we build, we choose an auction time of on average, 6 hours.
00:12:05.490 - 00:13:07.984, Speaker A: Right now, it's most actively used by set protocol. They are doing auctions with a volume of a million dollars or more, and they have like 20 minutes auction times. So yeah, different designs are possible. But of course, the shorter the time is, the riskier it is for those who are selling, because the faster the function goes down and they are at risk that not quick enough bidders are coming in. But I want to now go onto the finally design we are proposing. And those are the batch auctions. So a batch auction works quite similar, like a normal order books that you have a bunch of orders with limit prices, but instead of executing them immediately as they come in, you always wait for some period.
00:13:07.984 - 00:13:40.560, Speaker A: So you always wait for a batch and only if the batch, or kind of if that time is over, a batch is closed. And then you calculate an optimal clearing price. And kind of not to confuse with. So I think Eli earlier talked about batched execution. So this is something different. So batch auction, the key factor is the single clearing price. And that's not necessarily the case with batched execution of single orders.
00:13:40.560 - 00:14:42.640, Speaker A: So in this batch auction, you can also introduce something we call ring trades. So such a badge does not have to have orders that just match each other exactly. It just matters that overall kind of all orders clear together. So it just matters that overall for each asset you have the same amount of buyers and sellers. But again, you don't necessarily have to have for someone selling b four c, you don't have to have exactly the counterparty. The advantages here are those ring trades and again, no front running opportunities. I will skip this a little bit and go again, look into the batch auctions.
00:14:42.640 - 00:15:29.372, Speaker A: So key features are front running resistant, no operator whatsoever. Therefore also not possible to be front run by your operator because there is no operator, there is no one with a special permission or special role. We enable those drink trades and roll up compatible, or that dark snark scaling is possible. We'll discuss this also later. So again, the key arguments for why batch auctions. One is that decentralized systems, almost by definition, do not have such a thing as continuous time. So the smallest unit of time in a decentralized system is one block within one block.
00:15:29.372 - 00:16:30.100, Speaker A: The ordering that the miner can assign with one block is totally random and totally up to the miner. So you should not, or any system should not make assumptions that the ordering within a block is actually saying kind of something about the actual time when those transactions were submitted. So the consequence should be that all orders within one block at least should be treated equally. And that is already a strong argument for a batch auction. And in this case, the batch time would just be one block for other reasons. If you would design a blockchain that just does this, then of course it would be possible. As we are using Ethereum, and we are not the only users of Ethereum, we right now cannot do those batches as small as one block because we are not guaranteed to kind of be able to process things every block.
00:16:30.100 - 00:17:25.396, Speaker A: So we will have to start with something a little bit more than a block. Currently we are talking about five minute block times on a high level. This system is trying to replace, or right now how centralized exchanges work is. They are connected, and they are super fast connected. So you have this real time price discovery. And here, because of all the arbitrage happening super fast, you have this price efficiency. And effectively, then among all exchanges, one price, what you here do is it's slower, but you have the right price finding by having this actually np heart optimization problem of how to set the clearing prices.
00:17:25.396 - 00:18:44.140, Speaker A: And we are addressing this by turning this into an open competition. So once the orders are submitted, you have this open competition where solvers can submit their solution that provides the highest trader utility. And there are also arguments for normal, for kind of outside of the world of blockchain, there are strong arguments for batch auctions. Buddhish published a paper where he basically argued that after some point, doing arbitrage does not increase overall efficiency, but is only kind of a tax on those who don't do high frequency trading. Again, we collect those orders, maximize, trying to maximize for trader, what we call trader utility. So that's basically if you request a specific amount of tokens, and if you get more than that, then this increases your utility. So in the case of just one order book, or like just one trading pair, maximizing trader utility is basically equal to maximizing trading volume.
00:18:44.140 - 00:19:27.880, Speaker A: In the multitoken case, it's a little bit more complicated. So here, this is roughly the optimization problem. So we have to respect the limit orders, of course, of every trader, we want to have price coherence. So price of a and b and price of a and c should also define price of b and c. So within the prices, there is no arbitrage whatsoever, arbitrage freeness, and of course preserved value. So yeah, we cannot mint or destroy tokens. And again, we maximize then for trader utility.
00:19:27.880 - 00:20:08.350, Speaker A: So this is roughly how the optimization problem looks like. We have all those possible prices, and actually we will have much more tokens than three. And we can turn this into a linear optimization problem to find the best prices. Yeah. Last remarks on scaling. So we are building a version that's fully on chain. So that means the orders are collected on chain and we can collect an unlimited, or like, there's no limit of how many orders the system can hold.
00:20:08.350 - 00:20:53.864, Speaker A: And adding an order costs roughly 40,000 gas. And then orders can also be valid for many batches. So there could be 100,000 2000 orders in the book. But for each execution, because the execution is fully done on chain, we can actually just execute 20 to 30 orders because the solver has to settle actually all those traits. Earlier we have been exploring. Of course, snark and stark designs where we would just submit. I mean, there will be a talk here on the stark decks where this will be presented much more in detail, but it's a very similar concept.
00:20:53.864 - 00:21:51.868, Speaker A: So on the blockchain, we would just update a hash that represents all trading accounts and then we would submit a proof that basically all those rules here are fulfilled. Right. And maybe like just one last comment, there are of course, also designs, or in our first design, the publication of the orders is. Or you publish the orders openly. But designs are also, of course, possible where the orders are encrypted. And then it's quite similar to the stack pool design. So orders are encrypted and only once the batch is closed, you have a service that then reveals the key.
00:21:51.868 - 00:22:34.876, Speaker A: So I'm definitely not a fan of this commit reveal because it always commit reveal of an individual trader, because it always opens up the possibility for a trader to not reveal. So here, another service would just reveal this key. And this other service could be something like an n out of m service where n parties have to, or at least the threshold has to reveal their key share to construct the full key. Then orders can be decrypted and then you can have again this competition round solvers to find the best clearing price. That's it.
00:22:35.058 - 00:22:49.650, Speaker C: Thank you. So once again, if you guys have questions, there's mics here and here. We have about five minutes, so if you have some thoughts on this proposal that Martin made.
00:22:54.580 - 00:23:13.370, Speaker D: Hi, can you hear me? Great talk. I have a question on you mentioned earlier dutch auctions with Seth protocol. So isn't short time. Dutch auctions suffer from a very severe problem of censorship. Like a miner can literally wait and gets lower price.
00:23:14.220 - 00:24:16.190, Speaker A: Definitely. I think again, set protocol is currently using 20 minutes auctions. So the relevant number is probably the price will start somewhere where no one wants to trade. So actually the period where prices are there, where people want to trade is pretty short and lev can actually maybe give more details about. So probably by just already censoring three, four blocks, which would be like half a minute that could already play a role. And the question is a little bit, if you are the miner and censor a block, you are not necessarily guaranteed to then later get the better price because you might not mind this block, unless of course you have 50, 60, 70% of the hash rate. But then you could completely screw this.
00:24:16.640 - 00:24:17.550, Speaker D: Thank you.
00:24:19.040 - 00:24:39.284, Speaker B: Hi. Thank you. So could you say something about the role of the privacy of the bids in the batch auction? Because it's pretty clear how the dutch auction is quite resistant to front running without any bid privacy. So dutch auctions, usually there's no notion of a sealed bid, but in the batch auction, I'm just wondering if.
00:24:39.322 - 00:25:43.770, Speaker A: Right, yeah. So definitely in the design that is game, theoretically, that has the game theoretic properties that you would actually be willing to reveal your true price. It would be required to have the bits sealed or encrypted. This design is still, I would say, significantly less, or has significantly less problems with front running because of the single price clearing, basically. So in other designs, as a front runner, you can completely risk free make a profit by, well, getting the better price and kind of buying at the good price and then sell at the worst price. And this is not, obviously not possible in the batch auction because everything is cleared at a single clearing price. So within one batch, there's guaranteed no arbitrage possible.
00:25:43.770 - 00:26:36.170, Speaker A: That still leaves the possibility for some games to be played to kind of try to, depending on the state of the order book, set prices at a specific level that will lead to a clearing price. But still for everyone, if you can influence the clearing price, everyone else will also get this clearing price, who's trading on the site. So this effect is, of course, only. I mean, like, if you're the only trader or if there are just two traders in the system, then you fall back to, to being an issue. But as there are more traders and there's more liquidity in the system. Yeah.
00:26:37.500 - 00:26:38.280, Speaker B: Cool. Thanks.
00:26:38.350 - 00:26:41.300, Speaker C: Thanks a lot. Thank you very much, Martin.
