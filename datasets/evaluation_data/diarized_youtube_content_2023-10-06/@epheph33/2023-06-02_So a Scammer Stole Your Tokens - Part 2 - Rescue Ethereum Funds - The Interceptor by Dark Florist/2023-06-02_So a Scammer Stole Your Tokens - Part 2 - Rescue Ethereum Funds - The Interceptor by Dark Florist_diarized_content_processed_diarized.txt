00:00:00.170 - 00:00:00.334, Speaker A: Hello.
00:00:00.372 - 00:00:53.262, Speaker B: My name is Scott Bigelow, and this is part two of what happens when a scammer runs a sweeperbot on your Ethereum account. In this talk, I'd like to discuss recovery options using bundles to defeat Sweeper bots that are locking assets inside of your account by stealing all available gas. If any of these concepts are unclear to you, refer to part one of this video, where we talk conceptually about what happens when a scammer gets access to your private key. In this talk, we will be discussing two new projects from Dark Florist, an organization that I am involved with that focuses on improving user security in the Ethereum space. These two products are the Interceptor, a browser based extension similar to MetaMask, and Bouquet, a web3 DAP for conducting recoveries. If you'll remember from part one, the strategy involves using bundles of transactions that land at the same time to defeat a sweeper that is constantly removing ETH from the account. If we brought these transactions to the chain separately, the Sweeper would take this 0.1
00:00:53.262 - 00:01:03.566, Speaker B: ETH before we were able to use that gas in the move NFT transaction. Setting these transactions to Ethereum as a bundle requires going through a nonstandard Ethereum service.
00:01:03.668 - 00:01:04.766, Speaker A: In this case, we will be using.
00:01:04.788 - 00:01:32.614, Speaker B: The Flashbots relay, which is able to bring multiple transactions to the chain at the exact same time. In the past, this has taken some amount of software development skill to create the bundle and also to send the bundle to the Flashbots relay. With the newly released Interceptor, we have created a browser based system that allows you to graphically create the set of transactions using standard browser based DApps, and Bouquet converts the set of transactions into a bundle and delivers them to the Flashbots relay.
00:01:32.742 - 00:02:23.174, Speaker A: Before jumping into the demo, let's quickly review the steps we're going to be taking to use Interceptor and Bouquet to rescue assets on Ethereum. We will be installing the Dark Florist Interceptor browser add on. We will enable simulation mode inside of that extension. We will then configure the extension with the Ethereum address of the compromised account. And because this compromised account is going to require ETH in order to interact with Ethereum, there is a special Make Me Rich button which gives you ETH in simulation mode. After that, we can simply use Ethereum as normal, using the browser to construct the bundle of transactions that we want, using the DApps that you are already familiar with. Then we will use the Dark Florist Bouquet DAP to convert this bundle from the Interceptor into a bundle that lands on Ethereum using the Flashbots relay.
00:02:23.174 - 00:03:07.218, Speaker A: One question I've received numerous times is whether this is going to work with other chains that are Ethereum like, such as BSc Optimism or Arbitrum, and the answer is that no. This currently only works with Ethereum due to the availability of several important services that are only available on Ethereum. This is, as of May, 2023 when I am recording this video, and I recommend reaching out to the Flashbots White Hat Group if you have assets on other chains that you would like to recover. Flashbots White Hats are a group of hackers that help recover assets, but there are some considerations to make. The rescue amount must be above a certain threshold to be eligible for recovery. And there will be some modest but reasonable fees that will be taken out of the total rescue amount. But this can be a great option to rescue assets that are stuck on non Ethereum chains.
00:03:07.218 - 00:03:36.814, Speaker A: Before reaching out to the Flashbots White Hat Group, it's important to remember the type of assets that are available for recovery. These assets must still be in your account or must be coming into your account at a future date. And the only reason you can't access them is because you cannot pay for gas due to a sweeper. If assets have already been transferred to another account, there is no way to recover them. And anybody who claims otherwise is scamming you and you should stop talking to them immediately. Let's go ahead and proceed with a demo. Here we have the Dark Florist interceptor link.
00:03:36.814 - 00:03:51.858, Speaker A: It is available at Dark florist. That is the website. If we come here, we see there are two download links. One for Firefox, one for Chrome. We're running firefox. We'll go ahead and click that. Okay, now we just have a couple more confirmations.
00:03:51.858 - 00:04:17.790, Speaker A: Continue add. Okay, now we have the Dark Forest Interceptor installed as a button on our toolbar here. So we've done. Step one, we have installed the Interceptor. We need to make sure it is in simulating mode. And then we need to add the Ethereum address that we will be using for this demo. In this case, this is the compromised Ethereum account that has assets inside of it and a Sweeper bot running.
00:04:17.790 - 00:04:43.126, Speaker A: The account we'll be using for this demonstration is this one here. You can remember it as zero XCBC. This is an account that I own that has several assets stuck inside of them. One is an ERC, 21 is an NFT, and it has a Sweeper bot running on it. So we just need to take this address, copied it here, come over to the Interceptor. Click change here. This is where the account is.
00:04:43.126 - 00:05:10.414, Speaker A: You can see that Vitalik is the default account that is used in the Interceptor. So we'll say change, add, new address. This is just a label for future reference. And we'll say Create and switch. So now this compromised address has been added to the Interceptor. You'll notice that we did not use the private key here. Everything we are doing in the Interceptor is read only and does not require the private key to use this account in Ethereum for read only access.
00:05:10.414 - 00:05:33.698, Speaker A: Next on our list is make me Rich. This is an option on the Interceptor. You can see it here, which will give the active account a lot of ETH to play with in this simulation mode. But before we click this button, let's first see what it looks like to try to interact with Ethereum without clicking the button. So we'll come over here to Uniswap. We will launch the app. If you remember from looking at Etherscan, one of the tokens we had was WETH.
00:05:33.698 - 00:05:51.530, Speaker A: Let's say we want to convert that WETH back into ETH. We got to connect, of course. So we'll say browser wallet. This is Uniswap asking for access to read just the address of our account. We'll say yes, uniswap can know the address of the compromised account. We'll say yes. Max.
00:05:51.530 - 00:06:32.630, Speaker A: When we click Unwrap, we're going to get a confirmation dialog here from the interceptor that has an error here about insufficient sender balance. What this means is that there isn't enough ETH even in simulation mode to pay for this transaction. So this cannot execute successfully. So if you see this error, what you need to do is go and say, make me rich. Instead of having zero ETH here, we're actually pretending that this account has 200,000 ETH. This is a feature of the interceptor that allows it to have some amount of ETH that's going to allow us to work in simulation mode on an account that has zero ETH in mainnet. So now we can see the same transaction no longer has errors because there is some gas to pay for this in simulation mode.
00:06:32.630 - 00:07:18.402, Speaker A: In fact, when we click Simulate Swap, we're going to see that we no longer have a wet balance here because this transaction has happened in our fork of Ethereum that is running inside of the interceptor. But if we go over here to Etherscan looking at this exact account address and refresh, nothing's actually happened. This is all happening locally in our interceptor. And what we're doing here is we're beginning to build up a bundle of transactions that do what we want it to do. However, converting WETH into ETH isn't really what we want to be doing in order to rescue our assets. We really want to be moving these assets into a new safe location. Now, we can use any compatible DAP to do this, but Dark Florist has also created several lightweight token moving applications that work very well with the interceptor.
00:07:18.402 - 00:07:32.800, Speaker A: So let's go ahead and wipe out this simulation stack. We can go ahead and say, kill this. We're going to leave. Make me rich. So the only thing happening right now is that this account has 200,000 ethan simulation. Let's go back to the Dark Florist website. Click on products.
00:07:32.800 - 00:07:59.374, Speaker A: The product that I want to use here is called Lunaria. This is a very simple token sending application. And just like Uniswap needs access to the account address, lunaria needs this as well. We're not giving it access to any assets in the account, only to the address itself. Say grant access, connect the asset that we had in question was WETH. Say yes. The amount that we had was 0.6
00:07:59.374 - 00:08:26.254, Speaker A: and this is the address that I would like to recover these assets to. This is different from this CBC address and this one does not have a compromised private key or a sweeper running on it and is a safe location to move these assets to. So I will click send. So the interceptor has popped up the confirmation dialog for this simulation mode and it's overviewing what would happen if we were to simulate this and it's recognizing that 0.6 WETH is moving from this account to this account. This looks good. We got to make sure this address is correct.
00:08:26.254 - 00:08:51.574, Speaker A: We can see that there is a small gas fee for doing this again in simulation. So I'll say simulate. Weft transfer now we see it showing up here. We see that there is another item on the simulation stack in the interceptor. We've been playing around in this simulation mode for quite a while now, but we don't want to rescue our assets in simulation. We want to rescue our assets on mainnet. We want to move them permanently to their new location, to an address that does not have a compromised private key.
00:08:51.574 - 00:09:50.642, Speaker A: To do that we are going to be using the product mentioned earlier in this video, Bouquet. I'm going to open this up in a new tab and Bouquet's job is to take this simulation stack that is living inside of the interceptor and convert it into a bundle to be delivered to Flashbots, to land on chain all at the same time. So we're going to click Connect Wallet, we'll bring up the confirmation dialog to share the address with Bouquet, just like we did with the other DApps we were interacting with. And Bouquet has already read the transactions out of the simulation stack and put them here inside of the DAP, just like the simulation stack here, there are two transactions. The first one is funding this entire bundle, right? This is the representation of that 200,000 ETH that was done here from Make Me Rich. But Bouquet knows how to change that into a much more targeted funding amount that is easier to pay for. And the second transaction here is the actual movement of WETH that we did using Lunaria.
00:09:50.642 - 00:10:15.822, Speaker A: If we click here, decode transactions from Etherscan, this is not a required step. This just helps visualize what the transaction does by printing a user readable name for the function call. So we click on that, we can see here we want to transfer to this address. This is our rescue address, the one that is safe from the private key being compromised. This is the Ethereum representation of 0.6 WETH. If you remember when we set up the account in the interceptor we never gave it the private key.
00:10:15.822 - 00:10:44.294, Speaker A: The interceptor does not sign transactions for us. That needs to be done separately and in this case it is done inside of the DAP. The DAP here requires the private key for the compromised account. It's worth mentioning that this is an extremely dangerous thing that you should not be taken lightly giving private keys away to DApps. You should make sure that you trust the source, trust the person telling you to do this. This is a very unusual thing to do. And the only reason that we're doing this is because this is a last ditch effort to recover these assets.
00:10:44.294 - 00:11:17.474, Speaker A: And normally working with a white hat performing the same style of recovery, you would need to give them the private key in order for them to help you with recovery. So it's very important that you trust who is telling you to give away private keys in this way and only do this for assets that are already lost. Never give away private keys for accounts that are not compromised. In order to provide this private key here for the compromised account, see, it gives us the address here. We'll need to go into MetaMask. This is a completely separate browser profile that has MetaMask loaded in it. And we can see I have this compromised account here.
00:11:17.474 - 00:11:40.700, Speaker A: So I'm just going to export the private key. We go to account details, export private key. Again, it's giving us a very serious warning about what we're doing here. And I don't want you to take this warning lightly. I want to make sure that you trust where you're getting this information from and do not make it a common habit to give away your private keys to anybody who asks for them on YouTube. So here we go. I'm going to type in.
00:11:40.700 - 00:12:12.786, Speaker A: So here I have the private key. I'm copying this coming back over to Bouquet. I'm going to paste it so that checked out. So it's checked that this is the correct private key for this. So now Bouquet is going to be able to create this transaction for us, but we're still going to need to provide ETH in this funding transaction. Bokeh accomplishes this by creating its own account and asking you to pay this account a small amount of funds just for gas. This is not an account controlled by Dark Florist.
00:12:12.786 - 00:12:43.962, Speaker A: This is something that lives exclusively in the browser. And by paying this account on mainnet, you are creating an account that is going to fund this transaction. Getting on chain, so I'm going to grab this. You can see here that I already have a small balance here because I had done this before in a previous demo. So you can reuse these for multiple bundles landing On Chain but you can see that this is actually not quite enough, that it's going to need at least 0.4 and I only have 0.2. So I'm going to come to MetaMask.
00:12:43.962 - 00:13:13.766, Speaker A: I'm going to select a different account that has funds in it. I'm going to say send I'm pasting in the address that Bouquet has asked me to deposit funds into. And this should be a very, very small amount. This is just gas that we are paying for. So it said that it needed five and we have two. You can overpay it a little bit if you'd like, just so you don't have to make another transfer. I'll just give it four, I'll say next confirm.
00:13:13.766 - 00:13:43.998, Speaker A: Okay, so we have publicly paid this account. This is not done in simulation. This is currently broadcast to everyone. This is the recovery account paying this account that Bouquet has asked us to pay in order for Bouquet to send this bundle to Flashbots. Bouquet has recognized that the Wallet balance is now larger than the minimum required balance to send this bundle. We can run simulate, which is just a way to sort of check all the settings, make sure all your transactions are good. You have enough funding to pay for these transactions.
00:13:43.998 - 00:14:16.798, Speaker A: Simulation has succeeded, so we're going to hit submit. The way that submitting to Flashbots works, it can take a little bit longer for these transactions to get included on chain. It needs to try for multiple blocks in a row, but I would expect this to happen within about ten blocks. We'll notice that this has happened because this Wallet balance will drop suddenly. Okay, there we go. We now see an error here for funding. Wallet has an insufficient balance here, and we also see that this number here for the Wallet balance went from zero zero six down to zero zero one.
00:14:16.798 - 00:15:06.126, Speaker A: And if we go look over at this ether scan tab for the compromised account, this is zero x CBC. So we see two transactions landed in the same block. We see the funding account gave zero x CBC the compromised account, a small amount of ETH for gas, which it turned around and used in the same block to interact with WEF. And in this case, it was transferring these assets to the new safe location. We can also see that we now have zero ETH balance again, even though we had a small amount of ETH left over here, and that is because the burner is still running and swiped it. In this case, it ended up taking a few dollars worth of ETH, but we were still able to move this much larger sum of WETH to the new safe location. The process we use for rescuing WETH is the same process used to rescue any ERC 20 token stuck in a compromised account.
00:15:06.126 - 00:15:45.162, Speaker A: The only difference is that when you are in Lunaria, instead of selecting WEF, you'll select whatever token you want. Although you might need to add the token address here in this custom token section. Now let's move on to NFTs. This account has a single NFT that was purchased for the demonstration that we will be moving to a safe location while the burner is running. Moving NFTs requires using a different DAP than you would use for moving ERC 20 tokens Dark Florist has created another DAP that focuses on moving NFTs. We will connect the interceptor to NFT Sender. Now we could go and find the contract address and the exact token ID of the NFT we want to transfer.
00:15:45.162 - 00:16:32.298, Speaker A: But NFT Sender also has a feature where it can parse a URL from OpenSea. So if we copy the address of our compromised account and go to OpenSea, we can paste the address here. Look at all of the tokens that are owned by this compromised account. We'll click on the one that we want to rescue, just copy the address here and come back to the NFT Sender. And when we paste it in, it breaks it apart into the correct contract address and token ID that we want to move. And just as before, we'll need to put in the rescue address, come back to the address that we used here before and copy. This is the safe account, does not have a sweeper running on it and we'll click Send.
00:16:32.298 - 00:17:00.722, Speaker A: Here is our confirmation dialog for the NFT. We can say yes, we are moving NFT 3254 and so we'll say simulate. This gets added to the stack, just like the ERC 20 transfer for WETH was added to the stack. And from here we can go to Bouquet and bring these two transactions to the chain at the same time to defeat the sweeper. So let's go ahead and do that. Running through Bouquet a second time won't be much different from the first, so we'll go fairly quickly. We still have the old transactions here from the first rescue that we did.
00:17:00.722 - 00:17:43.536, Speaker A: Again, if we decode these, we can see that it's doing a transfer. This is that 0.6. So we'll need to reset the transactions that the Bouquet is operating on and re import them from the interceptor. We can already see these look a little bit different, but if we decode these from Etherscan we can see this is using a completely different function and it references the token ID of the NFT that we're trying to rescue. It does not remember the private key between your sessions, so we'll need to re provide it, paste it in. The funding account has not changed, but the amounts have. Gas prices have come down a little bit since the first time we ran this.
00:17:43.536 - 00:18:11.476, Speaker A: And so we only need to deposit a very small amount. So I will go ahead and do that now. Pop over to the non compromised account to send in a small amount to this address here. We only need about 0.3. That should be plenty. Okay, that confirmed. And Bouquet has recognized that the Wallet balance is now greater than the required balance.
00:18:11.476 - 00:18:47.136, Speaker A: To conduct this recovery, we'll go ahead and say simulate this bundle simulation succeeded, meaning it tried these transactions and they all succeed on chain. So we can say submit okay, this is completed. Now we see funding wallet has insufficient balance. We also see that the Wallet balance has gone down significantly. If we come over to our compromised accounts in Etherscan and we look at the transactions here, we see exactly what we wanted. We see the bundle of transactions that conducted our recovery. We see the funding account from Bouquet transferring funds into this compromised account which are used in the exact same block to interact with the NFT token contract.
00:18:47.136 - 00:20:01.960, Speaker A: If we look at the details of this, we see that the token we wanted, this 3254 NFT, was transferred from the compromised account to the Safe account, and we also see the burn that happened immediately after that burned all available ETH left in the account, and we are left with a zero balance on our address. We also see that we no longer have any tokens here, and if we look at the transfers that happened here and go over to the recovery account, we now see that the recovery account has the Weft that we transferred earlier and also has this NFT that was transferred to it. We were able to move assets that were stuck behind a burner by moving them to a new safe location using these bundles for our simulation stack. We used Lunaria and NFT Sender from Dark Florist because they are lightweight, allow us to move tokens between accounts, and are compatible with the Interceptor simulation mode, but these are just standard Ethereum DApps that will work with any Web three browser extension. It is possible to use other Ethereum DApps with the Interceptor simulation mode such as AirDrop or other reward claiming DApps, but these sites must be created following best practices, which not all DApps do. If Makemerich and other transactions in the simulation stack are not being reflected in the DAP, it is likely not a proper decentralized app. As an example, let's check out Sushi.
00:20:01.960 - 00:20:57.624, Speaker A: This is not a properly decentralized app, and we can tell because when we are in Makeme rich mode where we should have 200,000 ETH on our account, Sushi does not recognize that. Sushi thinks we have a zero, and if we try to do anything in simulation mode, we get an insufficient bounce. We can't even proceed to the confirmation dialog because Sushi is not actually asking Ethereum how much ETH we have. It is asking their own servers, and their own servers are not a part of this fork of Ethereum that we are running to create the simulation stack. Similarly, if we go to Uniswap, a site that is more properly decentralized, we can see that there is a balance of 200,000 here, because Uniswap is asking Ethereum what the balance of this account is and not going to a central server. In order to look up these balances. If you have assets to recover on Ethereum from a compromised account, check out Interceptor and Bouquet, a powerful set of tools for recovering compromised assets, and NFT Sender and Lunaria for quickly and easily transferring tokens.
00:20:57.624 - 00:21:33.110, Speaker A: And if you're interested in being part of the community, run into any issues or have any questions, reach out to us on Discord and Twitter, and both links will be in the video description. And most importantly, if you are in need of recovery, be extremely skeptical of anyone commenting on videos or reaching out to you on Discord offering support. It is extremely common for scammers pretending to be part of trustworthy projects or to recommend Instagram or Telegram rooms that are not legitimate and will just re scam you out of more funds if your tokens have been lost due to a private key scam. I'm sorry for your loss and I hope that one of these tools or videos might be able to help you recover what is left behind. Thanks for watching and I'll see you in the next video.
