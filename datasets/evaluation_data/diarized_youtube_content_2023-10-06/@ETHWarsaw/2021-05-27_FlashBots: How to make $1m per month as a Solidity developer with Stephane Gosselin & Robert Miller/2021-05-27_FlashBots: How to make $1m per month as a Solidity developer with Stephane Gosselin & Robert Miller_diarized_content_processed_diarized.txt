00:00:00.170 - 00:00:09.230, Speaker A: We are back. Welcome to Xerox Hack. With me is Stefan and Robert from Fleshbots, and.
00:00:09.300 - 00:00:09.678, Speaker B: Yeah.
00:00:09.764 - 00:00:11.470, Speaker A: Hi, Stefan. Hi, Robert.
00:00:12.530 - 00:00:13.600, Speaker B: Hello. Hello.
00:00:13.970 - 00:00:15.180, Speaker C: Nice to meet you.
00:00:17.250 - 00:00:22.814, Speaker A: Yeah. So I'll give you the stage and let you do your thing. See you later.
00:00:22.852 - 00:00:26.838, Speaker B: Perfect, yeah. Thanks a lot. Cool. I think people are just going to.
00:00:26.844 - 00:01:25.364, Speaker D: Be trickling in for a little while, but I'm excited to have people join. I'm thinking probably the best way to start is give a bit of TLDR on Mev and see if people are interested in learning about that. I'll share my screen. So probably quite a few people have seen this already. It's a dashboard that the flashbots team put together that attempts to track the amount of MeV being extracted on Ethereum today. And we can see there's been sort of a massive uptick in the amount of extraction over the last few months. So actually, I think flashbots launched somewhere around January 1.
00:01:25.364 - 00:02:36.620, Speaker D: That time, there was only about 160,000,000 worth of extracted value, but now it's really gone up over the last five months, five, six months. So, yeah, Mev seems to be on a trend that can't be ignored. I set a bit of a provocative title for this talk. I think I set it to how to make a million dollars per month as a smart contract developer. So maybe one way that we could make this interesting is by talking about the various different opportunities that I see there being with regards to MeV on Ethereum, but as well as on other chains today, how an engineer, just on their own, are able to get involved in building on top of MEV. And if they're interested in money they are interested in, there's sort of an easy way for them to. To quit their job and go full time MeV if they wish.
00:02:36.620 - 00:03:32.476, Speaker D: But I think for many, it's also just a very interesting problem and something that they like to think about. So we'll talk a bit about Mev, talk a bit about flashbots, talk a bit about a project called Alchemist, and some of the stuff that that community is doing. And then I also have Robert Miller joining me from the flashbot team. Maybe you guys have seen some of his threads on Twitter. He does a great Eli five of MeV, and all the cool stuff that's been happening. So I thought maybe he could jump in and provide some color on some of the interesting activity we've been seeing over the last few months. Seeing a couple of things in the chat, asking if this is still happening, maybe question for the viewers, if you can hear me.
00:03:32.476 - 00:04:20.830, Speaker D: Do you want to type in the chat, say a quick hello so I know that I can hear you guys, and then feel free to ask questions as we go. I want this to be fairly q and a driven, so if you have questions while I go through this, it would be great to tackle them. We got a hayo. Okay, sweet. I'll keep talking. So, Meb has collected about $700 million worth of value since beginning of last year. Interestingly, this number is both the amount of value that belt operators have made as well as the amount of value that miners have made.
00:04:20.830 - 00:04:49.124, Speaker D: It sort of tries to represent and split the amount of value that is allocated to each of these different parties, but this is very much so a lower bound. So this dashboard, we published it sometime in January, and it attempts to do a very simple analysis of how the MeV is currently being distributed, but it.
00:04:49.162 - 00:04:50.936, Speaker B: Fails to capture a lot of the.
00:04:50.958 - 00:04:56.008, Speaker D: Activity that's going on on chain. So maybe you want to talk quick.
00:04:56.174 - 00:05:01.210, Speaker C: In the chat about what MeV is. Maybe you want to give a quick Eli five.
00:05:02.080 - 00:05:04.190, Speaker D: Actually, Robert, do you want to do it?
00:05:05.280 - 00:06:00.120, Speaker C: I would be happy to do so. Mev, the canonical definition, is minor extractable value. It is the value that could result from transaction ordering on a blockchain. Typically, when people use MeV, they're talking about Ethereum today, because that's where the most amount of economic activity is going on in crypto today. And if they so wished, miners could reorder some of this activity, they could insert their own transactions into it. They could censor other people's in order to capture some profit from doing so. So, for example, oftentimes the prices between different decentralized exchanges will get out of equilibrium.
00:06:00.120 - 00:07:12.550, Speaker C: You might be able to buy dai for a low price on uniswap and sell it for a high price on sushiswap. And as a result, an arbitrageur could buy dai on Uniswap there for very cheap, and then sell it for a little bit more on sushiswap and capture profit, arbitrage profit, from doing so. Today, there are a bunch of different bots that do this through flashbots or the traditional mempool. But ultimately, miners, as the single party that can order transactions, are the party that decides who is able to capture this arbitrage profit, and they themselves may do so in the future. We've seen some miners extracting MeV. So MeV is like all encompassing of all different forms of value that could be derived from transaction ordering by whoever is producing blocks in crypto economic systems, whether that's miners in Ethereum, or like a L2 sequencer in a L2. Or maybe a validator, an eth two.
00:07:15.560 - 00:08:15.332, Speaker D: Yeah, thanks for the background there. MeV is just the ability to move transactions around, extract some value from it. Interestingly enough, I think people might have heard of front running in traditional financial markets. And that being or like high frequency trading, MEB is very much so, the blockchain equivalent of this. And it tries to solve a lot of the problems that we have seen in the regular financial markets, but in a completely decentralized and permissionless way. So what does MeV allow you to do as a builder on Ethereum? I think this is one of the most interesting and underexplored questions in Ethereum today. Flashbots, the organization itself is very much so focused on tackling the problem of MEV from a ecosystem security perspective.
00:08:15.332 - 00:09:37.548, Speaker D: How do we avoid some of the negative externalities and existential risks that MEV brings to Ethereum, and instead produce a good, positive future for MEV on Ethereum? But it doesn't really think about what are the types of applications that you can build with MeV, or what are the types of strategies that you can run to try to extract MeV for yourself. So it provides infrastructure for others to be able to do that. So I'm thinking maybe a good way to go from here, talk a bit about the various different use cases of MeV that I've seen, but also thought of. And perhaps this will encourage some of the builders here to go out and build some products on top of NuV. So we have a pretty good documentation on flashbots that covers the use cases for MeV. So the first one is bot operators. In the flashbots world, they're called searchers, who essentially have some strategies for how they can use MeV to make a profit.
00:09:37.548 - 00:10:39.700, Speaker D: And they're looking for fast, risk free access to block space, for example, for performing arbitrage and liquidations, like Robert mentioned. So this is what drives a lot of the activity that we've been seeing so far. We're seeing about 3000 unique MeV searchers that are sending a lot of transaction throughput to flashbots and consequently paying miners. So I think this graph is quite interesting to see just the level of activity there is. About 50% of the blocks in Ethereum right now include some sort of flash bots bundle. And I'd say the majority of that is these bot operators are doing either liquidations, arbitrage, or some of the more funky strategies that Robert has been reporting on. Another use case is Ethereum users looking for front running protection on their transactions.
00:10:39.700 - 00:11:50.376, Speaker D: So much of the MEV that we see, and much of the more nefarious MEV happens when someone, for example, uses Uniswap and sends their transaction to the regular transaction pool. Then everyone else sees their transaction, and then we get things like sandwiching or front running. And that is only possible because the users reveal the content of their request to the world before it gets included in a block. But if they use something like flashbots instead, they can route those transactions privately to the miners and get them directly included in the chain, avoiding front running. So there's a whole suite of integrations here that you can have when you start building defi products that are vulnerable to front running, where if you integrate with something like Flashbot, so you avoid the ability for other users in the network to front run you or abuse your transactions. So an example of that is a project called Mistex.
00:11:50.488 - 00:11:53.016, Speaker B: So Mistex is one of the projects.
00:11:53.048 - 00:12:20.568, Speaker D: That comes from the alchemist community, essentially provides a front end for Uniswap that allows for protecting against front running. So your transactions or swaps on Uniswap are no longer sort of vulnerable to being sandwiched. That's quite useful for many users, but we have not seen that many applications integrate this yet, and we expect that.
00:12:20.654 - 00:12:22.170, Speaker B: To increase over time.
00:12:23.100 - 00:12:31.820, Speaker D: One of the other use cases, I think that would be really interesting is a front running resistant, fair launch platform.
00:12:31.970 - 00:12:46.592, Speaker B: We've seen a lot of liquidity sniping, basically, which is when a token lists liquidity on a Dex, and then someone comes in and buys all the liquidity at a very low price to then.
00:12:46.646 - 00:12:51.696, Speaker D: Flip it later on, maybe. Robert, I wonder if you can talk.
00:12:51.718 - 00:12:54.940, Speaker B: A bit about the types of exploits.
00:12:55.020 - 00:12:59.540, Speaker D: Or extractions of mev of that kind that we've been observing.
00:13:00.600 - 00:13:42.288, Speaker C: Yeah, I'm happy to do so. I can find it on my twitter. So if you're interested, I love to go through what happens on flashbots, the kind of things that searchers are doing, and I try to pull out the most interesting strategies and talk about them, because people are playing these really complex games. They're constantly evolving. They're in a very adversarial environment. And so you not only have searchers that are trying to extract mev, but they're trying to extract mev from each other as well. So follow my Twitter if you're interested in that kind of content.
00:13:42.288 - 00:13:50.390, Speaker C: I'm at Bert C. Miller. I am trying to find my liquidity sniping thread right now.
00:13:53.960 - 00:13:55.892, Speaker D: You can turn your screen once you do.
00:13:56.026 - 00:14:50.796, Speaker C: Yeah. In the meantime, maybe I'll just talk about some of the other interesting things that we see on flashbots. So we see all sorts of interesting things. I'll start with one of my favorite strategies, which is an uncle Bandit. Essentially, what happens with an uncle Bandit is the Ethereum network will mine two blocks at roughly the same time. Two different miners mine new blocks with different transactions, different solutions, and only one of these can be added to the chain. And so what the Ethereum network does is one of them gets added to the canonical chain, and the other is, quote unquote uncle or orphaned.
00:14:50.796 - 00:15:44.890, Speaker C: It's sort of like a block that's standing on its own. But in order to incentivize miners to keep on mining on top of the canonical chain, the ethereum network will pay a small amount of money to the miner that mines an uncle. And then the uncle is actually included as part of the canonical chain in some way. But the transactions in them don't get executed on the canonical chain. So there's this interesting thing where uncled blocks are available to basically everyone, and transactions in an uncled block are available to anyone that's looking, but those transactions have not been executed. So they're valid, but they're like transactions in the mempool. They're public, invalid, probably.
00:15:44.890 - 00:16:57.040, Speaker C: And so one searcher on flashbots had this strategy whereby they were sandwiching other transactions by sending bundles through flashbots. And theoretically, these bundles should never become public, but their transaction had landed up inside of an uncle. You can actually see it here. I don't know if this is meaningful, but this is the hash of the uncle that happened, and then this is the hash of a sandwich bot's transaction that landed inside of an uncle. And then since their transaction landed in an uncle, this sandwich bot, and their transaction was public and it was valid, but it was not executed on the canonical chain. And so a different sandwich bot picked up this transaction from the uncle and put a sandwich around it. So you had someone else sandwiching a sandwich bot that landed up inside of an uncle.
00:16:57.040 - 00:17:56.480, Speaker C: And actually, this was done some 40 blocks after the uncle happened. So the sandwich bot that ended up in the uncle had their transaction sitting there for 40 blocks, which is quite a bit of time before it was ended up being pulled onto the canonical chain. And this actually didn't make that much money. Like, the attacker only made 0.4 e. But there's a different one that was pulled off by a miner that was running a searcher for 145 e. So there are these liquidity snipers that Steph was telling you about, whereby they will watch the mempool for new listings on Uniswap, and they will pay a boatload of ETH to be the very first transaction that can buy tokens in these new listings immediately after they happen.
00:17:56.480 - 00:19:13.260, Speaker C: So, on the screen here, you can see a screenshot of a transaction where a bot was buying this token called Sato. They did this immediately after it was listed on Uniswap, and they paid the miner 81 e in order for the privilege to do that, because they could then sell these Sato tokens a couple of blocks later for ten x that we've seen bots make millions of dollars doing this, and this particular liquidity sniper. Somehow their transaction ended up getting sandwiched by ether mine sandwich bot. You can see them on this green line here as the 80 e flashbots transaction between a sandwich buy and sell. And since we had already had an uncle block before, I sort of had this tech in my mind that I knew what to look for. It ended up being the case that our liquidity sniping transaction was actually included in an uncle. And then ethermines bot sniped them out of the uncle and onto the canonical chain.
00:19:13.260 - 00:19:55.400, Speaker C: So this is what that looks like, actually, step by step. The ether mine. They front run the liquidity sniper. They buy Saito tokens with 200 e. Was at the time, a little bit over half a million dollars. They pick up the liquidity token sniper from the uncle, and they insert that into their bundle. So after Ethermind's searcher has raised the price of Saito by buying half a million dollars, the token sniper buys 68 ETH worth, or much less, Sato tokens.
00:19:55.400 - 00:20:39.370, Speaker C: And also, since this was a flashbots transaction, you can notice that the liquidity sniper is also paying 81 ETH to the miner, in addition to getting sandwiched. And then after this liquidity snipers buy has gone through, Ethermine searcher will sell the tokens that they originally bought, this 8.8 million. They sell them back for 244 e. So they started an input 200 ETH on their own, and their output was roughly 245 ETH. So it was 45 eth worth of profit. And that 45 EtH essentially comes from this liquidity sniper right here.
00:20:39.370 - 00:21:22.390, Speaker C: And what's more, since this block was mined by ether mine, they were the party that got the payment that the liquidity sniper thought that they were making to snipe this token listing. So there's 81 ETH that you can see on this third line under contract here. That payment also went to ethermine, in addition to the money that they made from sandwiching. So ethermine made 45 plus 80 eth here. So roughly 125 e. And you can do the math. That's about a third of a million dollars in a single flashpots bundle that was made.
00:21:26.200 - 00:22:39.630, Speaker B: Yeah. These are like mind boggling numbers. Whenever I take the time to sit back and think about this, the thing that fascinates me the most is these are all dynamics that exist in a traditional financial system as well, but they are done in a very permissioned and closed fashion, where only certain people can play these games, and they're super highly regulated, whereas, obviously, in defi, you have completely different dynamics. And a lot of the work that flashbots is doing is like maintaining the ability for anyone to be able to participate in these games in a permissionless way. The reason why we started flashbots was to try to solve for the fact that we saw the ecosystem moving towards a much more centralized direction because of these. And so, in many ways, the mission of flashbots is to continue making it possible for your average builder to engage in these activities. I think maybe it would be good to highlight the.
00:22:39.630 - 00:22:51.330, Speaker B: Was it the baby Mev searcher on my screen? Yeah. Starting from zero? Yeah.
00:22:52.100 - 00:24:23.310, Speaker C: And what you said really resonates me, because this resonates with me, because Mev alpha leak, I think, is the perfect example of someone that started with nothing, with no privileged position in the ecosystem, and literally with zero ETH, and they've worked their way up to making hundreds of thousands of dollars in 25 days. So, on this block here that you can see ends in 61, starts in twelve. MeV Alpha leak deployed a contract, and then used that contract to extract some ETH in the same block and pay for the deployment of their contract. So, just to repeat that, in one block, they deployed this zero x 66 f eight contract, and then in the very next transaction, they used this new contract that they deployed in order to extract value and pay for the contract that they just deployed. So they had no ETH in this contract before, zero ETH in the address that they used to deploy. And it was purely by finding an arbitrage opportunity and using that profit to deploy their contract that they were able to get started. And they've worked up from this position of having literally zero, not even a single way of ETH since then to having half a million dollars in the last 25 days.
00:24:23.310 - 00:24:34.316, Speaker C: Not only that, but they leak all sorts of alpha on Twitter all the time. I've learned a ton about solidity from that. They've created open sourced.
00:24:34.508 - 00:24:35.490, Speaker D: It's crazy.
00:24:36.020 - 00:24:46.132, Speaker C: Yeah, they're open source and they made a better version of flash clones, more gas efficient that anyone can use. It's insane. Yeah.
00:24:46.186 - 00:25:41.320, Speaker B: This is really the prime example of what permissionless approach to finance can sort of yield so much innovation happening in just a single bot operator and trying to find novel ways to use. Robert was highlighting about deploying a contract with zero. Like that is insane when you think about it. There's this whole system called tornado cash, right? Which the whole point is to clean ETH and make it anonymous. But through MeV, you can actually produce immaculate eth that doesn't come from anywhere, it comes from the MeV that you were able to extract, and then you can use that in whatever way you want. Right. But it is not tied to any exchange, it is not tied to anything else.
00:25:41.320 - 00:25:48.890, Speaker B: All you need is a private key and a computer and you can make half a million dollars in 25 days.
00:25:49.500 - 00:25:50.248, Speaker D: It's crazy.
00:25:50.334 - 00:25:51.320, Speaker B: It's insane.
00:25:52.380 - 00:26:27.220, Speaker C: It is. And we've seen this happen with a couple of different bots, too. So one of our longest standing bots, I think it was like 15 or something like that on flash bots, zero x three e 4d, they've literally retired. They started out with 50 eth. You can go to their contract and look, you have 50 Eth in their account balance. And then by arbitraging a bunch of different dexes, they made 250 more in a little bit over a month. And then they just withdrew their money and they're not doing anything anymore.
00:26:27.220 - 00:26:34.040, Speaker C: About a million dollars in a little bit over a month, and they stopped botting altogether.
00:26:36.380 - 00:27:09.590, Speaker B: Yeah. I keep seeing these tweets on Twitter, which are like, from tradfi people, and they're like, oh, wow, I wish I was in finance in the. When it was really easy to find Alpha and run with it. This is exactly what's happening right now on Ethereum. Some relatively simple strategies, if you're willing to put the time into building them, can have very high yield. That being said, the level of sophistication is building extremely quickly because obviously, when there's so much free money on the table, people are going to rush for it.
00:27:11.160 - 00:27:11.572, Speaker C: Cool.
00:27:11.626 - 00:27:15.670, Speaker B: Is there anything else on the bot operator side that we should discuss?
00:27:17.240 - 00:28:08.100, Speaker C: There's like, always more. So the last thing that I would note was even this week, in the last week, there was this fix from a project called Mushrooms Finance, whereby a mev searcher could take yield from uniswap lps. And this is actually a very simple thing that you could do. You could call it an exploit, or you could just call it, it's like the equivalent of sandwiching for this project called Mushroom. And I think this was relatively straightforward. It didn't even require that much money or that much thought in order to make this work. And I think it's another great example of how, if you're thinking about these sort of things and looking for them, which not very many people are, there's a lot of value out there to be captured.
00:28:08.100 - 00:28:12.360, Speaker C: And I will leave it at that and pass it back to you, Steph.
00:28:14.460 - 00:28:41.680, Speaker B: Cool. Yeah. For if there's some people that are just joining, feel free to drop comments. I think that's in the YouTube chat. We can see pretty much everything. And then, yeah, we'll try to do some q a as we go as well. I'm thinking perhaps an interesting thing to talk about are some of the more user focused use cases.
00:28:41.680 - 00:29:01.848, Speaker B: So how can an average defi user think about Mev? And how can someone that's building a defi product think about Mev? Very much so. This is going to be inevitable that everyone's going to have to think about it.
00:29:02.014 - 00:29:04.136, Speaker D: But it's good to start getting some.
00:29:04.158 - 00:29:23.100, Speaker B: Conversations going in these early stages so that people are ready. I'll share my screen again. Could you explain time bandit attacks? Okay, yeah. Robert, while I share my screen, do you want to talk about time bandits?
00:29:24.180 - 00:31:12.850, Speaker C: Sure. So one of the things that we're trying to avoid at flashbots are miners doing things that would destabilize the consensus of Ethereum. And a great example of that would be time bandit attacks. These come from the fact that sometimes mev opportunities are much larger than the payment for mining a next block or the next five blocks or something like that. So if you imagine that there was a billion dollar MeV payout on Ethereum, some transaction that you could make that would net you a billion dollars or hundreds of million, whatever the number is, then a miner may have the incentive to roll back the chain to go to an earlier version of Ethereum, where that billion dollars had not been taken yet, to copy that transaction and execute it themselves, and then mine on top of that block and just continuously mine on top of it and use as many resources as possible in order to get their version of the blockchain to be as long as they can. Because the consensus rules of Ethereum say that the longest chain is the canonical one, a miner with enough resources and sufficiently motivated could go back to a previous block and then mine a longer version of that chain. And try to get that seen as the canonical version of the chain after they've extracted some MEV themselves.
00:31:12.850 - 00:32:05.100, Speaker C: But of course, this would be like a super destabilizing thing, because users are making actions based off of things that they think are final. Centralized exchanges are managing deposits that they think are final. And so having any form of reorg, any form of going back in time and rewriting the state of the chain would be extremely destabilizing and could lead to consensus splits and time benefit acts, again, are just this thing where miners could try to go back in time, build a longer version of the chain where they extract some amount of MEV, and then try to get that seen as the canonical chain. And that's a result of MEV payments being really large and larger than the payment for mining the canonical chain.
00:32:05.680 - 00:33:14.504, Speaker B: And, yeah, that's right. A lot of the justification and rationale for EIP 1559 that some of you might be aware of are around this chain consensus instability that arises from having extremely high fees. I think a lot of my perspective is that the high variance in fees mostly comes from MeV. And so if you find a way to mitigate time banded attacks or consensus instability for MeV, it resolves a lot of the concerns that can be had around both centralization and chain instability. Yeah, cool. So, quick question on how to get started as a solidity developer with MeV. I was just saying earlier in the chat, there's sort of three main use cases for flashbots, or three main use cases for MeV in general.
00:33:14.504 - 00:33:38.450, Speaker B: One of them is bot operators. So if you are just a silly developer, this is the best, permissionless, simplest way that you can get started. We actually have a. Did I lose you guys?
00:33:40.820 - 00:33:42.736, Speaker C: I'm here, steph, I can hear you.
00:33:42.918 - 00:34:35.730, Speaker B: Oh, interesting. GitHub went down, maybe. So we have some example searchers. So if you go to the flashbots docs, there's a simple arbitrage bot that actually provides a good example of how to run a searcher. You can look at the code, the code is open source, the smart contracts are open source, and then you can go from there and sort of learn how various different protocols work, how they build with each other, and where are the opportunities that can be extracted. The other way that you can get involved, if you're a developer and you're building some kind of dapps, is to think about some of the alternative use cases. So if my Internet collaborates with me, one of the.
00:34:45.710 - 00:35:49.360, Speaker C: Rest in peace stuff, I think you cut out. So I have the simple arbitrage bot up here, I will pick up the torch where our fearless leader, Steph, unfortunately had his Internet drop it. At Flashpots, we want to democratize access to MeV, and part of that is creating examples or actual software that people could run themselves to extract MeV. So on the screen here, you're seeing this repo called simple arbitrage. It's a project that we made that is a super simple bot. It looks for arbitrage opportunities between various different uniswap d two forks. And I think this is an excellent way to better understand what it looks like to find, evaluate, and submit arbitrage opportunities and actually capture some MeV yourself.
00:35:49.360 - 00:37:19.242, Speaker C: And that both has this off chain logic that happens in setting up your environment, your keys, as well as, and then actually looking at the markets and arbitraging them and creating a relatively clean system for doing that, printing it, all of these getting data from the chain, all of these things, as well as the contracts that you could use to execute uniswap arbitrages themselves. So this is the contract that simple arbitrage bot uses. It's a little bit complicated if you're new to solidity, but it's relatively short, and it's a really great learning exercise. So if you're just getting started with Mev and you're interested in it, then I highly suggest you look at this simple arbitrage repo. You go ahead and read this from top to bottom, every single line, and try to understand what's going on, in addition to doing the same with these contracts. And what you can do is you can actually deploy this yourself on chain and try to execute on some MUV arbitrage opportunities. These are relatively small and they're well known, and so you're not going to make money doing this, at least not much, but you will learn a lot.
00:37:19.242 - 00:37:57.190, Speaker C: And I think it's a great exercise. And I've made this repo that you could use. You will need it to be get a little bit that adds a flash loan so that you can take advantage of very large mev arbitrage opportunities without needing the ETH to do so. Again, you probably won't make a lot of money doing this because these are well known and very competitive, but you will learn a lot by doing that. You back, steph?
00:38:00.010 - 00:38:22.960, Speaker B: Yes, sir. I believe I am back. Okay, I'll try to share my screen again. I was just going to talk about some of the other use cases. So bot operating, then the other one would be building apps that use MeV. In funky ways. So I already shared the missed X front page here.
00:38:22.960 - 00:38:55.580, Speaker B: So the other thing that it does is it allows for gasless transactions on top of uniswap. So how does this work? Well, basically, the way that you can think of the fees that you pay, right, gas fees on Ethereum, you're just asking the miner to include you or allocate some block space for your transaction and the computation that your transaction takes. I'm getting a message that they can't hear me.
00:38:56.510 - 00:38:57.434, Speaker D: Okay, I'll keep talking.
00:38:57.472 - 00:39:40.914, Speaker B: If I get another message, I'll forget. The miner gets a payment from the users that essentially says, hey, I want this transaction included, and I'm willing to pay this much for it. But there are other ways that you can pay for inclusion, which is you can pay directly through exposing Mev. So we already know that doing a trade on Uniswap exposes MeV through slippage, right? And that causes sandwiching. What if instead, you use the sandwiching.
00:39:41.042 - 00:39:42.140, Speaker D: To be able.
00:39:43.950 - 00:40:53.760, Speaker B: To generate value that the miner can then use to include you in the train? So that would essentially cause you to be able to do trades for free by saying, hey, I have this large trade that I'm willing to make on uniswap. It has this amount of slippage, and then that slippage can be used to compensate for the opportunity cost of including me in the chain for zero gas price. So that's the idea that Mistx is building on. It's using both the ability to prevent front running and the ability to use MeV to pay for inclusion on the chain to provide a novel user experience, which is one of trading on uniswap without paying any fees. So if you guys have used Robinhood to buy dogecoin or GME, now you can use sort of the Dex equivalent with mist. But this is just, I think, the tip of the iceberg. So let's see if I can pull it up here.
00:40:53.760 - 00:42:32.938, Speaker B: Actually, one of the largest proponents of account abstraction is sort of the Ethereum term for this is Vitalik. So one of the posts that he made was talking about how it's possible to use MeV or flashbots as a backdoor to getting account abstraction. What he means by account abstraction is the ability for anyone to pay for the gas of a certain user's transaction. So instead of always requiring that an account has ETH to be able to issue a transaction with account abstraction, all of a sudden you can do things like pay for transactions in stablecoins, or pay for transaction in pretty much any ERC 20 that you want, or even have transactions that don't pay for themselves at all. So one of the use cases that he mentioned are tornado cash, right? So on a tornado cash withdrawal, usually you have to pay like a percentage of your withdrawal fee, send it to a set of relayers that then try to route that request to the chain. But if you use a system like flashbots for doing the withdrawal, you can essentially do a withdrawal completely permissionlessly without relying on a third party to relay your transactions. So there's a lot of interesting use cases to be made around this, and particularly so if you couple the idea of account abstraction plus smart contract wallets.
00:42:32.938 - 00:43:33.460, Speaker B: So smart contract wallets are sort of a very interesting design space because you can encode a lot of the rule set that you would normally only be able to include on the protocol side, but this time you can include it directly into the wallets of the users. So actually, by restricting the ability of the users to take various different action against other smart contracts, it might actually enable novel UX use cases for building new kinds of applications. So a lot of the thinking on smart contract wallet is still very immature and requires more experimentation to really see what's possible. Let's see anything else on the account abstraction front. Robert, you think that's worthwhile to talk about?
00:43:37.190 - 00:43:53.690, Speaker C: Um, I think you covered it pretty well. I can't think of anything else. There's been some shower thoughts in our team about account absurd action and EIP 1559. I don't know that well enough to talk about it, do you, steph?
00:43:54.750 - 00:44:55.806, Speaker B: Yeah, I can talk about it. So actually, Roger, I guess in the chat also had this question, how does EIP 1559 affect zero gas fee transactions? So it does make it a bit more complex. Essentially what EIP 1559 says is a transaction is only considered valid if it is able to pay the base fee. So you can still sort of hack together the ability to have a zero gas fee transaction by depositing money into the account in one transaction, executing the transaction in the second transaction, and then paying the miner in a third transaction. So you can still have a similar UX. It's a little bit less gas efficient and a little bit more risky, but I think this is sort of an intermediary stage that we're going to be in for a little while with EIP 1559 until people figure out a new way to achieve this pattern. We'll see.
00:44:55.806 - 00:46:06.830, Speaker B: So again, this is another thing where a smart contract wallet, if everyone was using that, then EIP 59 would be sort of trivial to work around, but yeah, it will just make things a little bit more complex. Yeah, maybe a good way to take the remainder of the call, since we have ten, maybe 15 minutes, is just taking whatever direction the chat wants to go. So if you have any suggestions or questions that you want us to riff on, feel free to drop it. Robert, if you pick up anything that you think is interesting. Also, let's riff on it using ERC 20 for transaction inclusion via flashbot, something that I can reasonably run on main net today. Yeah, so actually I want to highlight this. There was this project called Zenith, I think Zen met no, maybe here.
00:46:06.830 - 00:47:21.780, Speaker B: So this is a dick that essentially use the concept of account abstraction for l one to l two deposits. The idea being a lot of users who are sort of new to the ethereum ecosystem now might not have ETH in their account, but they might get like an airdrop of some random token, and they want to bring that token over to a L2 where they can actually use it. So this project called Zenith, that was at the latest ETH global hackathon, was exploring the idea of having these zero gas transactions through flashbots that paid for inclusion using die in this case. So this is a really interesting use case for flashbots, which is to completely abstract away the fact that ETH is used from l one to l two. Token transfer instead allow for people to get directly into a L2 without interacting with ETH whatsoever.
00:47:32.370 - 00:47:52.594, Speaker C: Steph, what do you think about where people should start with thinking about running their own searchers? Do you think folks should be looking for uniswap to sushiswap Arbs or the long tail of strategies? What's the best to focus on? If you want to make a million.
00:47:52.632 - 00:48:57.318, Speaker B: Dollars in a month, just follow mev alpha leaks. Honestly, I think that's the best resource there is out there right now. I think the simple arbitrage searcher was really good a few months ago, and just like running it out of the box could make a decent change now it's just been competed away. So maybe step one is just make sure you can run that as the hello world demo of Mev with flashbots and then go follow Mev alpha leaks on Twitter and try to learn. Edgar on our team has been really good at discussing some of the liquidation bots that he's been writing and his thinking. And obviously Robert here, who's on the call as well, has put some really good threads. So yeah, all the alpha is either in the flashbot docs, the flashbots discord channel, or a few Twitter accounts.
00:48:57.318 - 00:48:58.700, Speaker B: I think right now.
00:49:00.990 - 00:50:04.080, Speaker C: I agree. And I think that the stuff that people usually think of when they hear meV, which is arbitrage sandwiches, and to some extent, liquidations, those are very competitive, and it requires a super sophisticated knowledge of the EVM, of transaction execution of how to build these systems in a scalable way in order to compete with the likes of Edgar and Mev Alphalek. But I think knowing about those and being able to run them is the equivalent to the hello world. That was a good saying, and you should do that. But once you have some knowledge of how these systems work, I think I would focus on the longer tail of opportunities of protocols where people aren't watching as much, where there's less competition, because I think there's a lot of mev opportunity that's not being captured today.
00:50:06.130 - 00:50:53.070, Speaker B: What was that thing that happened last week during the big crash? Like Justin sun from Troll had like a billion dollars that was up for grabs in liquidation, but just because no one was running a liquidation bot on that protocol, no one caught it. That's a billion dollars of alpha that no one was aware of or prepared for, and just happened last week. Yeah. So you're right. Looking at these longer tail protocols that have been launching, but still have some level of usage, instead of trying to flip their token, it's like a much safer strategy to try to find ways that you can build bots for them. The risk reward ratio is massive.
00:50:53.890 - 00:51:40.746, Speaker C: Totally agree. And yeah, it's insane that there was just that much money sitting on chain and there were no bots that were sophisticated enough to capture that. Unreal to me. And there's all sorts of other things that are posted on the flashbot searcher channel, too. We have folks from synthetics that come in and they just post anytime that the parameters are updating and we'll create Nad. And those things are, while competitive, like relatively less compared to other arbitrage. I think one way that you could probably make a million dollars a month is just finding a DFI protocol that isn't in the top five, but is in the top five to 15, maybe, and getting really good at understanding it and watching its governance updates.
00:51:40.746 - 00:52:01.602, Speaker C: And anytime that they update a significant economic parameter, making a bot that arbitrages away whatever that update is, or captures med in some way, if I needed to make a million dollars in a month, that's probably how I would do it. Cool.
00:52:01.656 - 00:52:48.930, Speaker B: There's a question in here about ether mine dominating hash rate, so it's been fascinating. One of the biggest learnings I have over the last six months of working on flashbots, and then MeV is the very big misconception that there is about miners in Ethereum. I think they're treated very adversarially, but they don't necessarily deserve it. So they are profit motivated actors. They do run businesses that are highly competitive, and so they are forced to try to squeak out every profit that they can. But they've definitely been extremely collaborative in working with flashbots on determining.
00:52:50.790 - 00:52:51.186, Speaker A: What are.
00:52:51.208 - 00:53:46.278, Speaker B: The best ways for the MEV ecosystem to evolve. So we saw at the beginning, it was only yuyu pool who came online with flashbots at first, and then over the course of the following months, pretty much everyone came online. At some point, their Ethermind launched their own sort of MEV extraction bot, where they would do sandwiching of trades themselves directly. But actually, since then, they've started working with flashbots and are now mining according to the flashbots model. So I'd actually say, so far, from what I've seen Ethermind do, they've been a very advanced and sophisticated actor in.
00:53:46.284 - 00:53:47.000, Speaker C: The space.
00:53:49.210 - 00:54:28.790, Speaker B: But very collaborative as well in making sure that the MEV extraction ecosystem remains healthy. So, yeah, I'd say they're a positive force so far. There's some questions in here about AI powered searching. Actually, this is a topic we haven't delved into, which is like, what is the end game of? And Robert, I'm curious to hear your thoughts on that.
00:54:31.080 - 00:55:32.120, Speaker C: I think that today there is like, a relatively. I think today you would be able to make more money just by going to liquidity and writing a bot that actually works. Right. And that logic is not super sophisticated, so you don't need AI for that. But I think that there are really complex multi protocol, multi transactional kind of mev extraction that instead of even looking at the logic of an individual protocol, you just look at the pure state and bytecode on chain, and feed that into an AI of some sort to identify and execute on these kind of opportunities. And I think eventually we will start to move towards that kind of world. But I think the short term is much more customized bots for particular pieces of logic.
00:55:32.120 - 00:55:34.200, Speaker C: What do you think, steph?
00:55:35.740 - 00:57:25.900, Speaker B: Yeah, I think that's right. I think it'll be mostly heuristics based bots for a little while longer, and then we're starting to see, in my opinion, hints of the future with stuff like generalized front running bots that just look at all the flow of transaction in the mempool and simulate it and try to rewrite them to make a profit. I think this is a hint of what's to come, which is we'll see these very narrow strategies eventually become more and more generalized to try to capture the long tail of opportunities that you can't sit down and write heuristics for all day. This is a concept that Phil talks about called state space search, which is sort of thinking of MEV as equivalent to the security of the smart contracts on the chain. And you can do some type of formal verification or simulation work on top of the state of the chain and the contracts to figure out where the composition of multiple, different protocols can expose opportunities for MEB. I really think that's the direction that things are going to go, where perhaps it's not quite AI, but perhaps there are some aspects of AI, in particular, tuning the optimization and the search algorithms to finding these novel MEV cases, both in historical state deployment, but also on a block by block basis. Right.
00:57:25.900 - 00:59:05.500, Speaker B: So if you sort of have this machine that every 15 seconds, there's a block that's mined and can sort of arbitrarily update the state of that machine, of that program, you'd need an extremely efficient algorithm to be able to calculate out what is the global impact of that state. Update is the maximum amount of value that you can extract from it. So, yeah, I think it requires a lot more sophistication, and we'll see a lot more of the tooling be developed. This, again, ties into the kind of efforts that flashbots are doing, is we think if this ecosystem is just left to run on its own, unchecked, a lot of this will be built in a closed source fashion and be only available to select few people and be like a very big centralizing force. So a lot of our focus is to provide education to the broad community for them to be aware of what's going on in the first place. And then second is to try to push for all these types of toolings that are highly sophisticated to be made available to the public and in the public domain so that we avoid those centralization vectors. Yeah, drew has a comment on this, the crypto lower.
00:59:05.500 - 00:59:57.786, Speaker B: You know, I think there's, like, a mix of responsibility and inevitability. It is a bit of a race against a monster. Right? Which is like, I think there was a comment earlier on in the chat that was something like, how do you compete with Morgan and et cetera, et cetera? Or how do you build defensively against pretty. I wouldn't say the big institutions or the big banks are evil, per se, it's just that they are operating in a competitive environment where they're sort of left without a choice. Right. They're sort of responding to the environment that they're in. And I think bot operators and traders on Ethereum today are doing very much so.
00:59:57.786 - 01:00:46.650, Speaker B: It's the same thing. So if it's left unchecked and the ecosystem sort of continues down the path that it was before flashbots came around, I think the end game would definitely be one of heavy centralization and create, like, a crypto lower class. But, yeah, we're fighting pretty hard to make sure that these systems are designed such that, even such that the incentives for all the parties are compatible with creating the most fair outcome and an outcome that is in line with the ideals of Ethereum. That seems like a decent place to end it. What do you think, Robert?
01:00:48.830 - 01:01:07.150, Speaker C: I agree. I think that was a great ending, and you shared a lot of alpha today, and I am greatly looking forward to the dozens of new searchers, the hundreds, thousands even, that will be born from today's talk. So thank you all for tuning in, and I look forward to seeing you on chain.
01:01:07.650 - 01:01:43.210, Speaker B: Yeah, sounds good. Maybe a couple of things for people to go look. Definitely check out the flashbots discord, come hang out. We'd love to talk about all kinds of mev stuff if you're a builder. Also go check out the Alchemist community. They have great onboarding for people who are just getting started in crypto, and I think a lot of knowledge sharing is happening there and people that are excited about building these kinds of product. So, yeah, looking forward to hanging out some more on Discord and whatnot.
01:01:46.830 - 01:01:59.840, Speaker A: Guys, thank you so much for the presentation. It was quite mind blowing, even for me as a modest community manager. I want to start learning solidity now.
01:02:01.910 - 01:02:02.660, Speaker C: Amazing.
01:02:03.750 - 01:02:47.930, Speaker A: Yeah. And by the way, we have two more presentations about related topics for tomorrow. We have staked out talking about flesh loans and arbitrage, and we have block native talking about Mempool one on one tomorrow. So you can find the schedule on the Zero Xhack website. I put some links to the Alchemist project and flashboards in the video description so everyone can find. Yeah, and you can find a schedule for the talks tomorrow at Zeroxhack Dev. Guys, thank you very much for taking the time to do this presentation.
01:02:47.930 - 01:02:50.900, Speaker A: It was a pleasure to learn from you.
01:02:51.750 - 01:02:56.100, Speaker B: Thanks for having us. Thanks for the great engagement in the chat. Really enjoyed it.
01:02:57.670 - 01:02:59.300, Speaker C: Thank you. Enjoyed it.
01:03:00.070 - 01:03:02.146, Speaker A: Hope to talk to you soon, guys.
01:03:02.248 - 01:03:05.630, Speaker C: See you. Bye.
