00:00:00.650 - 00:00:02.560, Speaker A: No. Okay.
00:00:07.850 - 00:00:25.510, Speaker B: Hey, guys, welcome back. After the break, I'm excited to have Adrian from Ava today with us, and he'll give you an intro on how to build on Ava. So without further ado, Adrian, the stage is yours.
00:00:26.250 - 00:01:13.766, Speaker C: Hey, yeah, my name is Hadrian. I've been working for Aave for six months and I'm working more on the protocol side and lot of on the governance. And so I'll try to have an intro on everything about Ave, especially for devs, for the hackathon. So trying to see what's doable with Ave and with its governance. And then we'll have a hands on workshop where I'll use some credit delegation capability. So it will be really for beginners and we'll code a smart contract, deploy it and see what you can do with credit delegation. We will fund charity with collaterals.
00:01:13.766 - 00:02:07.434, Speaker C: It will be fun, I hope. Ave is a liquidity protocol that creates money market. And so the basic thing is you have people that deposit money, deposit collateral, and they earn interest on it. So you can deposit Dai or ether or Ave, and you earn an interest. And the other side of the protocol is that you have borrowers that can take a loan and so they borrow what others have deposited and so they pay interest to depositors. And so the protocol is really about that. It about lets people borrow from others and we have other stuff and I'll go through.
00:02:07.434 - 00:02:48.778, Speaker C: So we're pretty excited. Currently we have more than 15 billion locks. I think it's more 20 currently. And actually we're almost the number one protocol. So it's exciting. We've seen a great growth and want to keep innovating and bring more value to defi and generally to dapps. So, yeah, as I said, you can earn by depositing, you can borrow, then to borrow, you have to put collaterals and you will borrow against it.
00:02:48.778 - 00:03:33.842, Speaker C: But you can also deposit. And then, so let's say you deposit some ether, you can give your borrowing capability to someone else. So that's credit delegation. You can create flash loans using Ave. So borrow an infinite amount of capital and repay in the same transaction. And we have a nice governance system that I talk about because I think it's one of the interesting one, the V two, we can have flash loans with several tokens at once. You can use it in the protocol.
00:03:33.842 - 00:04:19.910, Speaker C: Before you couldn't really. We have the depths that you have when you borrow are tokenized again, the credit delegation capability and the governance V two, that has especially. You can delegate your voting power and your voting power to others. And generally some good stuff happened with V two. And the V two is currently deployed both on the main market, on main net Ethereum and also on polygon. We've seen a great flux of users come in, so that's great. So yeah, let's get back to the protocol.
00:04:19.910 - 00:05:14.086, Speaker C: So earn simply it's really you deposit and you let others borrow your money and you earn interest on it. I think it's pretty clear, I guess most of you, it's a bit boring, but we have an hour almost, so let's do it like that. And a bit more precisely, what you do is that when you deposit money, and that's great, let's say that you deposit die, you deposit die, and against that you will have Adai. And so Adai corresponds to your position as a depositor. And so then you can use this Adai, this deposited die in Ave that bear interest. You can then use it elsewhere. So I'm sure you all know about that, but the capital efficiency of Defi is pretty interesting.
00:05:14.086 - 00:06:06.486, Speaker C: You could deposit your idi in curve or stuff like that. So this is a very important part and we'll see later how to use it in the workshop. But yeah, you deposit tokens and you get back eight tokens. So how it works concretely in the contract, just for you to better see, have a better mind map here. It's a solidity ish code. So if you want to deposit Dai, so the asset here is Dai. If you want to deposit it into Ave, what you do is the first step is of course you approve Ave to spend your dai and then you will call the lending pool.
00:06:06.486 - 00:06:46.550, Speaker C: That is the central contract of Ave on which you have all the capabilities. Borrow, deposit, repay flash loan. So you call this contract and you say I want to deposit this Asset die. This amount you can deposit on behalf of someone else. So for instance, if you want to give your deposit to someone else, you can do that. And so that's it, then you can withdraw. So again it's the same main contract, that is the lending pool and you withdraw your assets.
00:06:46.550 - 00:07:50.710, Speaker C: So here, if you had deposited die, let's say ten die, I don't know, ten minutes later you can withdraw them and it will be actually a bit more because you will have accrued interest. So yeah, then you can borrow. So this is the other side, you can go to ave to borrow money, I don't know, you need it for your business or you want to create leverage on your positions if you trade or for a lot of stuff you go to ave and you borrow what you need. So of course, currently the positions are collateralized. That means that you can only borrow borrow if you have deposited more than what you will borrow. So it is over collateralized. So basically we said before I deposited some, let's say die, $1,000 worth of die.
00:07:50.710 - 00:08:26.690, Speaker C: Against that, I can borrow some, I don't know, balancer or Ave or actually you cannot ave, but you can all other assets like Unibal Dai, USDC. And so that's how it works. So you can only borrow if you have collaterals. So again, it's the same main contract, that is the lending pool. And you call the function borrow. And then you say you precise which asset you want to buy, which amounts. And we have in ave for some tokens, not all, but we have two modes of borrowing.
00:08:26.690 - 00:09:23.990, Speaker C: You can borrow using the variable mode, meaning that you will pay a variable interest rate depending on the ratio between the deposits, the deposit total amount, and the borrowing total amount. The more the assets is utilized, the higher the interest rate will be. And you have another possibility is to borrow with a stable rate. So this is the interest rate mode, variable. And then against, you can borrow on behalf. And what does it mean to borrow on behalf of somebody? That means that you use their collateral to borrow. And of course, if you want to do that, the person you borrow on behalf of will need to have you approved before, because otherwise it's too easy.
00:09:23.990 - 00:10:33.614, Speaker C: I borrow for you and I never repay. So that's for this function, you can also, for the assets that have the stable rate mode, you can swap between stable and variable rate loan. So now you repay again the same main contract, the lending pool, you can use it to call the function repay, and you stipulate which assets you want to repay. So here we want to repay stable debt of die, and so we repay. First we need to approve the lending pool contract to use your die, and then you repay with your dies. Now, credit delegation, we talked just a bit about that. So the main mechanics of Ave is you deposit collateral, but for two reasons, or you want to borrow, or you want to just earn interest.
00:10:33.614 - 00:11:35.794, Speaker C: And actually, if you just want to earn interest, it could be interesting to give your borrowing capability to someone else because you want to help them or because you want to earn extra yield. I know some exciting projects about that, that are using this capability to earn extra yield. So you just want to deposit USDC because it has a nice currently 10% interest rate, but on top of that, you'll earn extra yield because you say okay, with this collateral, I don't want to take a borrowing position, but I want to give someone else this possibility. Of course, you need to be extra careful and it needs to be done right. Because in this case, what you actually do, that you let the other person borrow without collateral. So in this case, it's an undercover position and this is where you need the reputation or you need some other stuff. But it's great.
00:11:35.794 - 00:12:18.190, Speaker C: Let's say that you make an off chain contract with someone you know, or you make a legal contract and you say, okay, I'll give you access to $1,000 loan with my collateral. And then to make sure that he repays or they repay, it will not be in the blockchain, it will be somewhere else. Because here you give your collateral away a bit. So it's interesting. But yeah, I'm really excited to see reputation system being built and stuff like that. So yeah, again, create deduction. You have eight tokens and you give to someone else the capability.
00:12:18.190 - 00:13:13.840, Speaker C: So concretely, how it works is that, as I said before, the depths are tokenized in Ave. And basically you say, okay, this person can borrow this asset. So die. You will go to the borrow debt token and you say, this person can borrow from my collateral and we will do that in the workshop. So that here concretely you call the depth token and you say, okay, I approve this borrower and for this amount, a bit like we do for ERC 20s with the approve. And then the person will be able to call the borrower, but this time he will be able to borrow on behalf of you. So yeah, he will use your collateral again.
00:13:13.840 - 00:14:24.070, Speaker C: And then the repay function has also the capability. You, you can repay for somebody else. And so that's actually what we are going to use in the more hands on part. Yeah, so you can repay for somebody else and that's what you need to do. Let's say that you delegated credit to somebody because you trust this person and you say, okay, for a shorter amount of time, you can use my collateral, make a loan, use it and then repay for me. So that's something doable. So flash loans, basically it's the fact that in Ave, there are, as we said, $20 billion locked up and they can be used in a flash loan, meaning that somebody can borrow all these reserves and do something in a transaction.
00:14:24.070 - 00:15:18.914, Speaker C: Of course, it's used for arbitrage. Let's say that you see an opportunity somewhere. You borrow a ton amount of capital because your arbitrage is profitable. So you borrow a lot of amount of capital. You make the arbitrage, you make profits and then you repay the loan in the same transaction. So I think that it's pretty now understood. Of course you can use it to, let's say that it's great also, not only for arbitrages, but if you have capital locked somewhere, let's say in Dai, and you need to repay somewhere to then deposit elsewhere and stuff like that, you can just borrow a lot at the beginning and repay first and then repay.
00:15:18.914 - 00:15:56.870, Speaker C: Or this is the thing that you can do. What's great with ave v two, that now you can choose not to repay the flash loan, but to start a new debt. So let's say that you borrow 1000 of die to do something, and then you repay only 500 die. The rest can be just added as your debt. Of course, for that you need to have collaterals. But this is something that is interesting, especially if you think about how to create a leverage position along or something like that. It's pretty useful.
00:15:56.870 - 00:17:00.620, Speaker C: Sorry. Yeah, so here it's collateral swap, and you can do arbitrage, and as I said before, you can do batch flashpoint, so you can borrow from all the assets available on Avi, you can borrow several of them. And so how it works. So you just have to create a contract, you will see here. So you will call, let's say that you have a contract that wants to make a flash loan. What you will do is again you call the same main contract as before and you call the function flash loan. And you say, hey, I want the funds that I request to be sent to this address.
00:17:00.620 - 00:18:09.914, Speaker C: In this case it's the contract itself. And I want these assets. So these assets are, let's say here two and I want these amounts and here the mode is do you want to repay in debt or do you want not to repay, but get a stable debt or variable debt? So do you want to repay the loan or just contract a new debt? Then what you need to do is that, okay, you call the lending pool flash on and the lending pool will send the funds by calling these execute operations. And this is where you have your logic. And at the end you need to of course approve the lending pool to get back what you own. So basically you flash borrow 1000 of die. There is a small premium.
00:18:09.914 - 00:18:56.286, Speaker C: So let's say that you pay back 1001 die at the end of the function that the flashbank calls. So in your contract it will always call this function execute operation. You need to make sure to first approve the lending pool to then pull the funds, because the lending pool will okay he borrowed 1000 of die. Now I want to get back 1001 die. And so for that you need to approve the lending pool, to use your assets that you borrowed. And you need to make sure this is the most important part. You need to make sure that the contract has enough, otherwise it will throw and it's like you will just have spent cash and yeah, that's it.
00:18:56.286 - 00:19:42.994, Speaker C: But I think you must all know about that. So now the governance, I think it's a really interesting part and you can really innovate around that. And this is part of the success of Defi. I think the governance system are actually pretty good. And when you see for instance, the Ave protocol without the Ave. So I'm part of the Avegeni system that propose stuff. But most of the proposals are done by external parties that like curve, that wants their pool to have access to the liquidity mining that we have, or creating a balancer pool with bitu nave.
00:19:42.994 - 00:20:38.746, Speaker C: And in the end, what you see is the governance system that talk to each other. And it's really interesting. So the governance, it's something that belongs to everyone. And when you have Ave token under different forms in our governance. So if you have Ave token or staked Ave token, or even if you have balance of pool, of the pool Ave eth token, you can vote and the votes, this is how the protocol is changed. So what you can do is propose some changes, but no one is able to change the protocol without a vote. And as I said, what's great in the Ave governance is that you have several tokens for governance.
00:20:38.746 - 00:21:19.914, Speaker C: It's not just people that have Ave that can vote, it's people that have Ave take Ave. And this is why I think the framework for projects, especially like hackathon, is really interesting. You can think about a community owned by tense tokens, by social tokens. You can think about a merger and acquisition system based on that, lots of stuff. Then also something interesting is that we have. So if you have Ave, you can vote with this, but you can also propose a proposal. You can make a proposal and these powers are separated and you can delegate them.
00:21:19.914 - 00:22:03.430, Speaker C: So let's say that you think that an actor is great at proposing, but you don't trust them to, you don't want to give their votes to them, but just you want to let them propose. You can delegate just your proposition power and then you vote if you like it or not. But I think that's also something really interesting. So this is how it works basically. And basically, concretely, the governance is where people create proposal and vote. And then you have another contract that is an executor that is registered here. It is the long time lock and the short time lock.
00:22:03.430 - 00:22:48.314, Speaker C: And so in the governance contract you have all the calls to create a proposal, vote and then execute it. And when it's time to execute it. So a proposal, basically it's some words you say I want to do this and then it's a code, an actionable call. So I want to list a new asset. And then you make the call to the protocol itself to say, and this is an EVM call that say okay, register now this contract and with these variables. So anyway, so proposal is code, it's intent and code and people vote on it. And when it's voted you execute it.
00:22:48.314 - 00:23:38.498, Speaker C: And when you execute it, the contract that actually does the execution is the short time lock and the long time lock. So this one has a voting period of three days and need a 2% threshold for proposition. And so it's like something that it changes the laws of Ave. You can list a new asset with this. You can change parameters, risk parameters and the long time lock, this is more like the constitution of Ave is when you want to change about the governance itself or the tokens. So that's how you should do it. And so these two contracts are the owners of all our contracts.
00:23:38.498 - 00:24:31.930, Speaker C: And if you need to change something on, I don't know, a configuration of Ave, you need to go through proposals because the owner of the contract is the short timeline. So anyway, sorry, but I think it's interesting because people sometimes don't really know what's governance, but it's really interesting. So again you need to find consensus. You propose something, this is more on the forum we have at Ave. And then once you have consensus you gather proposition power. So you create a campaign asking for delegation of proposition power and then you make your proposition and then it's voted on and then it's queued and executed. So this is actually some old slides now we are more at the AP 20 and more, but you can see the kind of stuff that we do recently.
00:24:31.930 - 00:25:11.026, Speaker C: Proposition that we had have is the start of liquidity mining, the ad of the balancer pool, adding new assets on Ave. This is the kind of stuff that happened. Okay, so again it's a contract this time. So before we were more talking with the lending pool contract here it's the governance contract. It's again a centralized contract where everything happens. And so you can delegate actually for delegation. It's the token, the power of your token that you delegate.
00:25:11.026 - 00:26:13.658, Speaker C: So here it's not on the governance actually contract, it's okay. My Ave, I want to delegate them to this person, my staked Ave I want to delegate the power, the voting of proposition power to somebody else. And so that's what you do. But when you want to submit your vote, you go to the central governance contract and you say okay, I want to vote on this proposal positively or negatively. Same, this is all the same contract that you create a proposal. And yeah, the staking this is something that is also interesting, I think for teams, not for hackers. It's a great tokenomics how you incentivize people to, on top of the six audits that we have, I think how you incentivize even more secure protocol by incentivizing people to stake your tokens that would be used in case of a fallback event.
00:26:13.658 - 00:27:02.134, Speaker C: So that's what we do. We have two tokens currently that you can stake, you can stake Ave and you can stake the balance of pool, tokens of the pool ether Ave. So again, when you stake, you commit to at least ten days. You can't unstake before a ten day period. And against that you are incentivized. And the maximum amount of the capital that we take from that the protocol takes from the safety mechanism is 30%. So here, yeah, it's not governance, but here you can see again the contract, you call the staked Avi contract.
00:27:02.134 - 00:27:46.440, Speaker C: And you say that you want to stake some Avi and then you can claim rewards and you can start the cooldown period. So the ten days and then you can redeem once the ten days passed. Recently it's also great. We launched a new money market that is really fascinating for me, it's the AMA market. This is a market when you can deposit your bull balancer tokens or your uni liquidity provider tokens. Super interesting to see that. And of course we also have the polygon market that has all the same capabilities as the main market.
00:27:46.440 - 00:28:16.820, Speaker C: So credit delegation, stuff like that. So I think that's it. Now I try to live code and so that we understand a bit. It's really simple. But we will use the borrow the deposit, stuff like that. I don't know if we. Let's go for it.
00:28:16.820 - 00:29:09.090, Speaker C: Okay, so here I have prepared, I hope you see, but tenderly is a great tool, guys. I think it's a great team that does great work. And basically I've created an environment that is forked for Mainnet. So here the market that we have, you see, this is the same that as Mainnet, but I forked that. And so we'll use the real average protocol on Mainnet, but on a forked version. So the setup is the following. I have two accounts, collateral donor and a great donor, we'll see later that are funded.
00:29:09.090 - 00:30:35.390, Speaker C: And what we will try to code is a charity pool to use the credit delegation capability. So the goal is that people deposit inside this pool and that this pool delegates its credit capabilities to a charity. So that's what we will do. And so this is the third account that I have on my metamask, is the charity. So the first charity here, and maybe more interestingly, the first two things that we will use is we take from the Ave, we take two interfaces, and that's how usually you interact with protocols, is that you go to their GitHub and you look for interfaces. And here I want to use the credit delegation capability of the token. So I'll use this interface, I import in remix.
00:30:39.890 - 00:30:54.680, Speaker A: So here's it.
00:30:55.770 - 00:31:38.914, Speaker C: So I import this interface, and you can see this is an interface that allows to approve delegation. That's what we will need. The pool that will have collateral, it will approve the charity to use its borrowing capability. The second interface that we will use is the lending pool interface. As I told you before, this is the main contract of Ave where you can, here I've only let the most simple function, deposit, withdraw, borrow, repay. We won't be using the with permits and flash run.
00:31:39.032 - 00:31:48.370, Speaker A: So let's use this and Facebook.
00:31:55.250 - 00:32:44.480, Speaker C: And we will import it. Let's take the ERC 20 because all tokens are ERC 20, of course, all. And you will see, you can have a lot of fun. Just this is, I think, the way for hackathon to play first maybe not on remakes, but maybe a bit more on using hard art environment, but you import interfaces and you play with stuff.
00:32:51.090 - 00:32:51.742, Speaker A: It.
00:32:51.876 - 00:33:43.982, Speaker C: Okay, so now the charity pool, what we want to do, we have a charity and we want to, let's say it, we want to allow this charity, so this pool will receive collaterals and we want to allow the charity to use these collaterals to, let's say borrow die. Okay, so we'll do that in the constructor, we will say die depth token and we will say approve, what is this again? Approve delegation and we will approve the charity for an infinite amount.
00:33:44.036 - 00:33:50.910, Speaker A: Let's say that's.
00:34:12.160 - 00:34:33.510, Speaker C: So, let's find it. It is a Nick credit delegation token, so we need to import that it, we say. Okay, let's have.
00:34:43.760 - 00:34:44.510, Speaker A: It.
00:34:55.120 - 00:36:11.430, Speaker C: Sorry, I'm looking for so here what I'm doing is, I'm saying die depth token is I credit delegation token. So the depth token with the credition capability and for die. But actually here I chose the die address, but I don't want the die address, I want the variable depth address. So here I pre looked at it, but everything is, you can see that in the Ave documentation. So here I choose the. Oh yes, I choose the correct one, actually. So now I just need to use the say sorry.
00:36:11.430 - 00:36:54.550, Speaker C: So now it's super simple, a contract. And it says, I approve the charity to have die debt for me. That's super simple. And actually, let's start only with this. And I think it's pretty simple and we'll see a bit how to use stuff. And I think that you will give an understanding of what happens. So.
00:36:58.360 - 00:37:07.700, Speaker A: Let'S compile that's.
00:37:09.980 - 00:37:32.850, Speaker C: And we'll deploy it. So here in the inject field, I think it's good, we'll deploy with the donator. And here again, I'm on the forked mainet, so let's deploy this. Just thinking, is it enough? Yeah, anybody can. Yeah, that's good.
00:37:40.770 - 00:37:41.278, Speaker A: It.
00:37:41.364 - 00:38:48.134, Speaker C: Yeah, I think it's good. Maybe we'll change it later, but let's try it with this simple version. So I deploy it. Okay, so now we have a pool at this address that correspond to this. And now I will impersonate this pool to understand. I will go to the Ui of Ave and I will impersonate this pool. It just show it, but then it will be nice.
00:38:48.134 - 00:39:03.226, Speaker C: We will view what happens. So are we connected as the correct one, which is.
00:39:03.248 - 00:39:12.260, Speaker A: It's a bit ugly right now. Yeah.
00:39:22.230 - 00:39:46.300, Speaker C: Sorry it's not fascinating, but this is the honest up. But I think that is really not fun. Let me wait just a bite. Again, I think.
00:39:49.950 - 00:39:50.980, Speaker A: It, it.
00:40:01.970 - 00:40:03.838, Speaker C: I know that, and it's the last time.
00:40:03.924 - 00:40:11.150, Speaker A: Normally it should be goodbye.
00:40:14.150 - 00:40:49.102, Speaker C: Now it's good. So now we can see that we're connected as the pool that we just deployed. And if we look at the dashboard, it has nothing. If we look at metamask, the assets, it has. Okay, this is not the asset because this is not the pool. So, yeah, it has nothing. And if you want to deposit, let's say it has no asset to deposit or it has some direction, but.
00:40:49.102 - 00:41:33.680, Speaker C: Okay, now let's, let's try to with a donner. We will have a donor, the Donner number one, that will deposit. So we connect as him. Let's say that he wants to deposit three ether on Ave. So here we will call the function deposit. So let's add this. Okay, and now what he wants to do is to send.
00:41:33.680 - 00:42:07.126, Speaker C: So now he has deposited three ether and earning an API for that. And again, he has no depth, right. If we go to the dashboard, he just has some deposits. So he has a borrowing capability that he's not using. And what he can do is send to the pool that we see on this Ui. Here we see the pool, we can say, okay, I'll deposit in the pool, this ether. And we haven't coded that, but later I will be able to draw them back.
00:42:07.126 - 00:42:58.530, Speaker C: But let's give it to the pool. So that's what we will do. We'll add the token. A web, I don't have the web. It's going to be a bit. Okay, let's say, okay, I'm sorry, but it's great. We will see how to use the Ave documentation.
00:42:58.530 - 00:43:39.518, Speaker C: That's actually something that is really important, I think. So now let's go to the avidocs and that's a good way for you to know how to use Ave. Let's go to the deploy contracts. And here if you go to main markets, that's the one we are on, you can see that you have a lot of contracts that are deployed. And one great contract is, I think the two interesting contracts is the lending pool address provider. And let's go on it. You go on ether scan and you can go to the read contract section and you can see what's the address of the lending pool? This is here, what's the address of the main contract.
00:43:39.518 - 00:44:04.638, Speaker C: This is what configures the lending pool. And so this is great. But now we want data about wrap ether and we want to see what's the variable depth of it, what's the a width. So this is another great contract that you can use. And I think it's great to use, it's better programmedically, of course, but you can use it. And here I want to get the.
00:44:04.644 - 00:44:08.670, Speaker A: Address of west of wrap ether.
00:44:18.860 - 00:44:42.320, Speaker C: Then thanks to that I have access to. Okay, the a token of wrap ether is that. The stable depth token of wrap ether is that. And the variable depth token of repeater is that. So I'll take the a token. And my goal again is this guy has deposited three ether. So he has three a wrap ether.
00:44:44.520 - 00:44:44.980, Speaker A: Okay.
00:44:45.050 - 00:45:10.124, Speaker C: Token has already been added. Okay. Actually metamask had it. Sorry, I didn't. Understood. So here he has some wrap ether and he will send to the pool. Okay, so it's a gift of collateral, but the pool will not be able to use it, it will just abort to do stuff with it, but.
00:45:10.124 - 00:45:28.610, Speaker C: Okay, so rap ether, let's send it to the pool, to the pool. I want to send the three.
00:45:30.100 - 00:45:38.400, Speaker A: And here I think I have to increase a bite.
00:45:39.060 - 00:46:23.860, Speaker C: Okay, so now if we refresh the pool should have some collateral, yeah. So now we sent the a wrap ether to the pool, to the contract. So here, this contract has now some collateral. And what we did in the constructor, we allowed the charity to borrow on behalf of the pool. Okay, so now that's what we will do here. It's a great tool, remix. Also, I have added the lending pool contract, and you can see all the function, and so I will connect as the charity.
00:46:23.860 - 00:47:36.324, Speaker C: Okay, and so if you see the charity on Ave on the dashboard, it has nothing. If you look into the wallet, it has no die, no adai. But what I will able to do is to borrow some die against this pool. So this is what I will do. I will call the borrow function here, I want to borrow ten dies. I want the interest rate to be two, meaning variable debt, and on behalf of the pool. And actually here is the asset.
00:47:36.324 - 00:47:41.768, Speaker C: And the asset I want to borrow is die. So I will take the die, die.
00:47:41.784 - 00:47:42.588, Speaker A: Is this.
00:47:42.754 - 00:48:27.160, Speaker C: Sorry, both done with b. So let's see what happens, okay, yeah. Now, the first thing that we need to do is that we need to approve the lending pool to use our die, right? So that's what we do first, we will approve the lending pool to use our dai. Actually, no, I'm saying something wrong. Sorry. The lending pool, we want to borrow some assets. We want to borrow die.
00:48:27.160 - 00:48:31.020, Speaker C: We want to borrow on behalf.
00:48:34.640 - 00:48:35.710, Speaker A: Of the.
00:48:38.240 - 00:49:13.816, Speaker C: Of the charity pool. Sorry, guys. Of course, when you love code, it was easy. Anyway, this is the contract of the lending pool here. I didn't send to the lending pool, I don't know what is this address, but this is not what I wanted to do. Okay, so let's do it really quickly, if it's okay to you. I'm sorry for this, but the charity pool is here.
00:49:13.816 - 00:49:39.980, Speaker C: So the first step is here. It's the UI that impersonate. Okay, now we are on the good one, and we will redo the same step as before.
00:49:42.830 - 00:49:43.580, Speaker A: So.
00:49:47.650 - 00:50:34.890, Speaker C: Sorry guys, for this. So here we can see that the pool has nothing. And so we will deposit again three ether, okay, three ether. So now I have three eight tokens and I will send them to the pool. So again here I'm fonting with collateral, the pool. And so now the pool will have some collateral.
00:50:36.690 - 00:50:37.006, Speaker A: Yeah.
00:50:37.028 - 00:51:05.634, Speaker C: So now the pool has collateral, and again, the pool allows the charity to do it. So now we will do it as I tried to do before. We are as the charity, we connect here. We look into. We are not connected at the charity in remax. Yes, we are. So we are connected as the charity and we want to borrow this asset and we want to borrow on behalf of the pool.
00:51:05.634 - 00:51:32.010, Speaker C: And this time we have the right address. And I really hope that we will be able to borrow ten die. And it doesn't the assets die, tap token.
00:51:36.430 - 00:51:38.610, Speaker A: You hide the token.
00:51:47.990 - 00:52:02.180, Speaker C: Pool, and I'm trying to borrow die. Is it really die is.
00:52:07.950 - 00:52:16.720, Speaker A: This is dice mode is two.
00:52:17.890 - 00:52:22.750, Speaker C: I want to borrow that on behalf.
00:52:24.450 - 00:52:25.200, Speaker A: Of.
00:52:28.630 - 00:52:29.246, Speaker B: Adrian.
00:52:29.278 - 00:52:30.434, Speaker C: I just wanted to let you know.
00:52:30.472 - 00:52:31.618, Speaker B: That we can't see your screen at.
00:52:31.624 - 00:52:34.740, Speaker C: The moment for a long time.
00:52:37.110 - 00:52:40.280, Speaker B: For a minute or two, not a long time.
00:52:43.690 - 00:52:44.440, Speaker C: Okay.
00:52:45.690 - 00:52:59.674, Speaker B: Yeah, and we need to wrap it up in a few minutes. So if you have any resources to just give to people watching to complete the task, that would be great. So I'll just let you wrap it up.
00:52:59.712 - 00:54:05.066, Speaker C: Yes. So actually, I'm sorry, you never live code, but I did it in ten minutes just before. So, guys, actually the issue was that I approved the deduction, not for the charity, but for the donor. So the donor will be able to borrow, but just for you to understand what I wanted to do is that, okay, now you have a donor that fund collaterals to the pool, and then a charity that can borrow against it, and then you can have another donor that can repay the debt, and that's another way of donating. And then if you basically pulling collaterals together to fund stuff, you can also think about communities that, let's say 10,000 people, community that know each other off chain in the real life, that all pull together some funds. And against that, you delegate credit for people that really need it. This is some interest cases.
00:54:05.066 - 00:55:02.260, Speaker C: And more interestingly, with this credit deduction capability, you can think about under collateralized loans. So let's say that you assess, and this is where the reputation comes in, you assess who you lend your credit capability to somebody. And anyway, I hope that at least you saw how you should not live code if you prepared just before, but at least you seen a bit the documentation. Usually, whether it's GitHub or the documentation, it's really easy to play with Ave with our interfaces, and I think that you can have a lot of fun during hacks. So, yeah, I hope that you learned some stuff and yeah, have fun, guys.
00:55:06.150 - 00:55:43.110, Speaker B: Yeah, thanks a lot. Adrian and I put a link to our discord in the chat right now. So if you have some time, you can join and maybe the guys watching now might have some questions to you. And yeah, if you want to drop some resources, some links in there, you're more than welcome. Thanks a lot for your time. And, yeah, we're going to take a short break and then we have Mati from ramp do his workshop. Thanks, Adrian.
