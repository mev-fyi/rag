00:00:00.970 - 00:00:05.470, Speaker A: One of the co founders of the one each network. Hi Anton.
00:00:06.130 - 00:00:07.280, Speaker B: Hi everyone.
00:00:08.370 - 00:00:22.160, Speaker A: Good to have you. Anton will give you a talk about Dex protocols. So without further ado, the stage is yours. Enjoy.
00:00:23.170 - 00:01:04.778, Speaker B: Yeah, great. This is a presentation about Dex protocols about a little bit history in which they appeared and about differences from technical point of view. So I hope it will be interesting. This is some agenda for this presentation. We will start from order book based. This approach came from traditional finance. Then we will talk about liquidity based Dexes, also known as automated market makers.
00:01:04.778 - 00:02:03.198, Speaker B: And we'll talk about impermanent loss, which is also appeared when automated market makers started to provide their services for liquidity providers. And we will shortly talk about aggregation. So if we would talk about exchange swaps from scratch, we should define what it is and how it's happening. There are a lot of people who want to buy and sell something and they meet each other at some concrete price. And there are two kinds of actors here. Makers who create limit orders and want to sell something with exact price or buy something with exact price. They create this kind of orders and wait until someone would fill their orders.
00:02:03.198 - 00:02:52.980, Speaker B: Those who fill their orders are usually called takers. They see all the makers orders and they fill them. They execute their market orders with non fixed price, but they have a price slippage. So if they trying to sell, for example, 1 million of some assets, they sell part of them with the best price, some part with not that bad price, and so on. So they takers, they do execute their deal immediately. It's like instant execution, but they have a price slippage. Makers have delayed execution, but they have exact price.
00:02:52.980 - 00:04:02.570, Speaker B: And also I want to define the difference between on chain and off chain data availability. On chain availability means that this data is available within smart contract. And there is no need to provide this data from externally, from real world with arguments, with call data. And off chain availability means that smart contract is not able to get this data on its own. You need to provide some data from outside of blockchain and smart contracts and blockchain will be able to verify that this data is correct. For example, it could check signature, digital signature of this data of limit order provider, something like this. So in historical order, the most important dexs out there were ether delta, Xerox protocol, Airswap protocol and Ozis.
00:04:02.570 - 00:04:52.140, Speaker B: They all are order book based, but they are all different. For example, Zero X protocol had fully off chain orders, like fully off chain order book. And you can pick any orders you like and provide them in arguments with their signatures. And this protocol will allow you to fill them. Airswap works in a different way. You can request for quote and Airswap providers would give you a signed order, but they will not give you a bunch of their orders like order book. There's nothing to inspect or discover in this.
00:04:52.140 - 00:05:54.270, Speaker B: You can just request for quote, get their quote with signature and you can fill their order. And Oasis by Makerdao is example of order book basic decks which have fully on chain orders. This also means that you can execute swaps without providing any additional information outside of blockchain. Any smart contract can just interact with Wise's smart contract and try to sell or buy some tokens and their decks is managing orders list of orders. This means that if you will try to make a market order, it will pick the best price orders for you, then next price and so on. So order book could be represented like this or even like this. Like two heels.
00:05:54.270 - 00:06:46.640, Speaker B: On the left side are liquidity, which is orders who are trying to buy. The more people are trying to buy with this price and on the right side are sellers. The higher price, the more people are trying to sell at higher price and they meet in the middle and the difference between the price is usually called spread. Yeah. So here we come to liquidity based indexes. This is something new which appeared in 2017 2018 in the first time. Previous list of dexes were all dexes who are orderable based.
00:06:46.640 - 00:07:40.798, Speaker B: These dexes are different. They do not need any contract makers who are providing orders, because these dexes, they are providing orders on their own. And they provide like two services, one for liquidity providers, those who want to put their assets into these smart contracts and they will trade using this liquidity. And those second service is people can make market orders with them. People can act as takers here, and smart contracts of these dexes will act as a makers. So first of this kind of Dexes was banker network. It was launched, as far as I remember in 2017.
00:07:40.798 - 00:08:20.490, Speaker B: And their architecture was pretty simple. They had pools with BNT token. It's like star like architecture. And you can swap any token to any by swapping into middle token. Like you can swap mkr to bnt in one pool and bnt to eth in another pool. It had some complex formulas for having almost infinite liquidity of BNT. Most of these pools were lowered to mint print bean teas on demand.
00:08:20.490 - 00:09:07.820, Speaker B: So later, after banker started Unisoft, version one happened. It was in 2018 and it differs from banker by formula. It used because it was like the simplest maybe possible formula in imms. The interesting fact that this formula was originally proposed by Alan Lu from gnosis. In March of 2017, he wrote a medium blog post where he proposed formula for Uniswap and balancer. Now it's like three years before balancer was released. Its formula was written in blog post.
00:09:07.820 - 00:10:20.274, Speaker B: Sounds crazy. And the difference between balancer and Uniswap, you could think of balancer as of multidimensional uniswap with also different proportions. So like Uniswap version one and version two is like one of the cases for balancer where pool have only two tokens and their proportion is one to one. So formula is pretty simple for Uniswap, this pool is not getting price from anywhere outside. It's like pool which forms its price on its own. And the only thing pool is trying to keep is multiplication of balances of two assets. If you bring some other to this pool, it will compute how much MKR it should return to you to keep product of these two balances the same except having some small fee like 0.3
00:10:20.274 - 00:11:12.082, Speaker B: fee in first and second version of Uniswap. Yeah, you could imagine two balances of Uniswap pool. They can move on this kind of chart and this is called invariant. And when some swap happens and balances were a and b, and then they change it to c and d, multiplication of these balances kept the same. So that's the whole magic. This pool do not need any external data. If price changed it externally, it became profitable for arbitrage traders to sell something which price is higher than on other markets or buy.
00:11:12.082 - 00:11:59.102, Speaker B: It's like the same or buy other asset which is cheaper than on other markets. And those arbitrage traders, when they do this trade, they do rebalancing. And for liquidity providers, when they put their liquidity into Uniswap or to balancer, they would get instantly, automatically rebalancing portfolio with several assets, which is rebalancing to some proportions. Uniswap is version 20, version wire rebalancing to one to one proportions. Balancer pools are rebalancing to custom proportions. You can define any. And recently, Uniswap version three was released and launched successfully.
00:11:59.102 - 00:13:28.282, Speaker B: From my point of view, they came up to an idea how they could improve capital efficiency. Because if you would look on how liquidity is provided among all the price range in unison version one and version two, liquidity is uniformly distributed. And if you would restrict this price range to make it smaller, you could increase liquidity in this range. And Uniswap version three provided ability for liquidity providers to provide their liquidity in the desired range price range. And for example, if you would put your liquidity into Azure USDC pool, if you would define this range like from two k to three k right now, priced somewhere in the middle, you should put USDC to the range from two k to current price and you should put other from current price to three k. When price will move on this range. If it will go higher, you will have only USDC on your balance.
00:13:28.282 - 00:14:26.020, Speaker B: If it will move lower, you will have only ever on your balance. Yeah, that's how it works. I have some interesting visualization for balancer. If uniform formula is keeping product of two balances, constant balancer formula is like more general case of it. It's multiplication of all token balances in powers of their weights should be kept constant. So if weights are equal to one and there are only two tokens, this formula is the same as in uniswap XY is equal to constant. One more interesting thing, the project curve finance was launched in 2020 and they created a slightly different curve which looks like this.
00:14:26.020 - 00:15:35.074, Speaker B: This formula could be explained like these pools are providing almost constant fees without slippage until it will be imbalanced. If this pool became as balanced after some threshold, its formula is gradually starting looking like uniswap formula. So it's uniswap formula which is made more flattened for the prices when pool is almost balanced. Yeah. And what also appeared when we came to this liquidity basis, dex installed these amms. We should talk about impermanent loss. So if price change it and your liquidity provider in for example, unisoft version two pool, you have other and USDC, $1,000 of other and $1,000 of USDC.
00:15:35.074 - 00:16:49.562, Speaker B: And then prices change it somehow, how your portfolio would look like comparing to if you would just have these balances on your wallet. The difference between having your assets in this pool and having these assets on your wallet is impermanent loss. This means that it's called impermanent because it will return to zero if relative price of these two assets will return back to the moment when you deposit it. So if you deposit it to this pool with some price like 200 500 USDC per ever, and after like few years, somehow you would withdraw, your liquidity and price will be the same. You will have the same assets as you would have if they would just on your balance on your wallet, plus additional fees earned on all this trading, you will have no loss. But if these two assets, their prices to each other, you will have some impermanent loss. And the more is difference, the higher is the loss.
00:16:49.562 - 00:18:14.090, Speaker B: So this impermanent loss, this is how having your assets in liquidity provision in this kind of pool is compared to having your balances right on your wallet without swapping it, without moving it. And here we came to aggregators area. So with co founder Sergey at Hackathon 2019 in May, it was like yesterday, 19 May, we came up to a vision that all the Dexes, they have two parts, they have website, centralized entity, and they have smart contracts, that centralized and permissionless entity. And we tried to find the best possible rate and initial idea was pretty simple, like compare prices on these Dexes and pick the best one. But right on the hackathon, we also came up to improvement on this idea. The more you swap on each decks, the worse is the rate. This means that if you would distribute your volume among different dexes, you would swap less on each decks and your price will be better.
00:18:14.090 - 00:19:16.270, Speaker B: So we came up to a problem of distributing user volume among different dexes to improve the final price. And this also could be visualized like all the dexes, like different glasses, they are on different haze, this is their current prices, and they have different wides, this is their liquidity. Some Dexes have higher liquidity, some lower. And if we would just pick dexes where price is lower for buying, it's not really the best possible solution. The best possible solution would look like this, that swapping on multiple dexes would change price on all of them to some concrete. And this would prevent also arbitrage traders to earn on this. I mean, those arbitrage traders who earn explicitly on Dexes, and they do arbitrage among different Dexes.
00:19:16.270 - 00:20:08.826, Speaker B: When you swap, even with some huge slippage, like one percentages, two percentages, for example, someone is trying to swap several millions, or maybe it's just few handlers, but not very liquid asset. The aggregator, it will shift all the prices on all the dexes. And there will be like no job for arbitrage traders. But because all these profits for arbitrage traders, they are like losses of users who swap. And initially on the hackathon, we did only distribution among different protocols. It was pretty simple from my point of view. But for now, for more than one year, what we are doing, we are building much more complex roads.
00:20:08.826 - 00:21:04.900, Speaker B: If you would swap your ether to USDT, it makes sense to also swap some part of your liquidity to Dai, some part of your liquidity to USDC. Because all these pairs, they have liquidity, and it's important to use it. Then Dai and UDC could be swapped to UDT using some stable token protocols like curve protocol. So now the problem of aggregation is building really complex roads to finding like a best multipath between some in this graph graph of where tokens assets are nodes and dexes are edges. So it's like a graph problem. Yeah. So that's it.
00:21:04.900 - 00:21:19.380, Speaker B: I hope you have questions where I can read questions.
00:21:24.710 - 00:21:47.198, Speaker A: Hi Anton, thanks a lot for the presentation. I think we don't have questions at the moment. We had to switch the link so probably most of the people we watched the recording. Yeah. And if there are any questions in the comment under the video, I will let you know.
00:21:47.364 - 00:22:09.560, Speaker B: Yeah, okay. I will answer in the comments. And if some question looks like interesting for community, it could be asked in Twitter. You can mention me in Twitter. Here you can see my nickname, it's k six a. Yeah. And most likely I will answer.
00:22:10.570 - 00:22:28.440, Speaker A: Okay, I will drop those details in the video description so people can reach out to you. Yeah. Thanks a lot for the presentation. It was a great look at all the concepts of Dex project.
00:22:30.370 - 00:22:30.782, Speaker B: It.
00:22:30.836 - 00:22:44.430, Speaker A: Yeah. So next up we have mp from the golden project in around 50 minutes, so stay around. And again, Anton, thank you very much for taking the time to do this presentation and share your knowledge.
00:22:45.170 - 00:22:46.880, Speaker B: Thank you for hosting me.
00:22:47.970 - 00:22:48.730, Speaker A: See you, Anton.
