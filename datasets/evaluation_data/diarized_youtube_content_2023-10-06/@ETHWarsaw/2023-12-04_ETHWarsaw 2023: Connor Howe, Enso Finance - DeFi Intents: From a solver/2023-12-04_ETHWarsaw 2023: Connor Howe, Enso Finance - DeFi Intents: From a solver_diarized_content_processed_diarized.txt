00:00:02.570 - 00:00:28.886, Speaker A: Thanks. Cool. So today's topic is defi intents from a solver. For those who don't know, ensuf finance is a solver for cowswap, and we offer one unified API for bundling and interacting with all DeFi primitives. So what are intents? Been a lot of talk about it, a lot of hype really. Intents ultimately are I have x and I want y. I don't care how you get that.
00:00:28.886 - 00:01:08.878, Speaker A: For me, the methods that people can do is on chain routing itself. Maybe arbitrage, maybe sex arbitrage, even using Durham flow. But hopefully today we can break it down into human and simple terms. Why do you need intents? So let's say, for example, you want to do a very basic defi action, taking a token and depositing on a beefy pool. Right now the user flow requires you to go to four different interfaces and do eight different transactions. You probably can see this doesn't really work. If we want more people to use DeFi, we need to simplify the full interaction with intents.
00:01:08.878 - 00:01:51.626, Speaker A: Now you can justify and enter beef, evolve x with y token, and the solver ecosystem will determine the best route for doing this. Also, four three seven bundling is not as great as it is perceived. So let's say, for example, you want the user to use four three seven smart wallets to be able to get to that end destination. They still need to go to all of these different interfaces, and then whenever they queue up the transactions for the next transaction, they do not have the state because it's not been on chain just yet. So you can intercept all RPC providers, inject a fork, so you can have a user submit the second transaction and so forth. But it's just not good. Ux.
00:01:51.626 - 00:02:55.170, Speaker A: So intents ultimately solve these problems. A lot of people only talk about the execution of DeFi, but to get to the execution of DeFi, you need one an interface, how the interface operates. Is it simply stating from token a to token b? Is it a text to action using a language model or whatever it may be saying I have x token and I want to generate the most APY and that needs to have the second part, which is more not really talked about, an interpretation layer. So users defining what they would like and then trying to understand what it means to then actually execute on this. And on the execution side, such as cowswap Uniswap X, one inch fusion, you generally have a solver network, so your request will go there. And whoever can fulfill the order with the best route execution can then execute on behalf of the user. What's the hype? One, it's better ux.
00:02:55.170 - 00:03:23.978, Speaker A: Two, you'll have recommendation engines to create the user experience a lot more simple. So instead of needing to go to all these different interfaces, generally speaking, you can just search. I want to find the best apy for X and Y. So instead of needing to search for that manually yourself, we'll have recommendation engines for providing this. Two is order efficiency. So you'll see all of these different methods that solvers can do. So, for example, many solvers now bring their own flow.
00:03:23.978 - 00:04:03.450, Speaker A: They hedge their positions than just on chain routing. That ensures that they get most of the order flow than paying the gas cost for onchain routing itself. General thoughts for being a solver. So this graph in the top, right, the solvers are basically taking your intention, which is a human thing. I want to go from x to Y and finding the best route to do it. So you'll see that there's many people, these are solvers. I've blurred out the names, they're on top of the line and they're solvers at the bottom underneath.
00:04:03.450 - 00:04:39.510, Speaker A: So see the graph, that's the nicest one on top of the line. That's us. The people below are losing money in every single trade. So these people are deliberately burning cash so they can obtain more volume, so they can raise money. So the solver game is now turning into there is a zero sum game. You will not make money as a solver because you're pushed in the direction to lose money, so you can obtain more volume, so you can push all the competition out. There's also going to be, right now there isn't, but in the future there'll be a lot more solver offensiveness.
00:04:39.510 - 00:05:10.906, Speaker A: One solver infrastructure already got hacked. I think they lost one hundred k, one hundred and fifty k. Not really public. But the game changes now because solvers see the order flow before it even hits the mempool. So we are the new mev in a particular way. And if you can get into that order flow, and you know what the order flow is, you can use it to your advantage by not only just submitting orders, but using other strategies. And if you can take down other solvers and block all of their infrastructure, you can take all of the order flow.
00:05:10.906 - 00:05:50.650, Speaker A: Right. You can also front run other solvers. We've seen this, essentially they estimate that they're going to get x, they're going to get Y from x, and at the point of the trade they're off by 5%. Because you can just push them and then they need to repay this back to the users. So you force them to kind of lose more money over time and just push them out of the competition where the future of solvers go, again, zero sum. So you need to have a network. Just building a solver itself isn't inherently valuable, maybe for the ecosystem, and it gives the best rates for the user, but if you're building a product, yeah, you're not going to make that much money from a solver.
00:05:50.650 - 00:06:38.026, Speaker A: So solvers will turn more into traditional market makers. We already have solvers that are coming, such as flow traders and so forth, that are building solvers inside of this ecosystem, which the game now is previous mev guys versus traditional market makers. And for us, we are now creating a network. We're looking for anybody that's interested in intents, that would like to contribute to some research, and we will be creating a full network around solvers and the intent network. So just to summarize, intents aren't as complicated as what they sound. It's a nice word for describing stuff and confusing people. But simply put, intents are I have an x and I want Y.
00:06:38.026 - 00:07:05.120, Speaker A: That's all it is. And interpreting it tomorrow we're doing a workshop. So we're building a defi telegram bot using our API, which is intent based API, and releasing this within prod within an hour and a half. If you want to use the API, here's a QR code. And if you are building on our infrastructure already, feel free to plug into our dev telegram chat. If you've got any questions, feel free to let me know. Thank you.
