00:00:03.720 - 00:00:34.765, Speaker A: Hi everyone, can you hear me? Well, right? Even with that. Okay, perfect. So, good morning, my name is Alan, I'm the CEO of SSV Labs. We are developing Distributed Validators network for the Ethereum ecosystem. SSV is launched just at the beginning of this year. Just what is it like eight or nine months ago, managing 1.4 million ethnic at stake, with close to a thousand operators offering distributed way of running validators with higher rewards.
00:00:34.765 - 00:01:30.217, Speaker A: And really what picks our interest is not just providing infrastructure, but also the potential of Ethereum validators to do more. This concept of staking Legos the idea that validators can do more and earn more is something that really obviously a lot of people are interested about and want to explore. And I want to introduce you guys to a new concept which is actually taking the validator, the validator keys, not just the capital behind the validator, but the validator keys and making an asset out of it. And in my opinion, the next 12 to 24 months we'll see a significant increase in what validators can do and earn as Rewards. In my opinion, 1-3x what they do today above what the kind of baseline Ethereum staking is. And that's quite significant. It changes the economics of staking.
00:01:30.217 - 00:02:17.227, Speaker A: But in order to kind of understand how this is even possible and where things are headed, I wanted to maybe dive into what is kind of staking in general. So staking in general is a game of trade offs, right? We are trading off the mobility of our tradability of our assets, locking them, and in return getting participation rights in some protocol. If we are participating well, we get rewards. If we are dishonest or even malicious, we get penalties. But all in all, all of those rights, the sum of all of those rights ultimately represented in what is known as a validator. This validator is an entity that participates. Obviously we know this participates in L1 security, but it can do more.
00:02:17.227 - 00:03:15.125, Speaker A: And if we generalize that, or maybe more specifically for Ethereum, Ethereum offers a bunch of different duties every validator needs to do. But there's three duties that actually reward the validator On Ethereum today, when the validator attests two blocks when it proposes blocks and participates in sync committees, those writes are what gives the rewards ultimately to the validator. And if we generalize this idea, it's really kind of the set of opportunities the validator has to participate in some protocol or protocols and the way they decide in which protocols to participate. And it's interesting because a validator as a concept can do more than just secure an L1, it can do actually more because it has really a bunch of assets in it. So we have the capital of the validator. It's something everyone knows about. But it's not only that the validator also has the validation keys.
00:03:15.125 - 00:04:00.899, Speaker A: Those are a type of asset and it has reputation, right? Every validator has a history and the performance on the network is its history and some proxy to reputation. All of those three assets are within this entity called the validator. We usually talk about capital behind the validator, but it's not just the capital. And so we have this validation key and we have the withdrawal credentials on Ethereum. Withdrawal credentials represent the capital, the validation keys represent the validator. That's what participates in the actual protocol. With the capital, we know what's possible to do with capital, right? We can trade it, we can restake it, we can put it into defi protocols.
00:04:00.899 - 00:05:07.177, Speaker A: So the capital side of a validator is pretty well used and continues to be used. That's something we are ever evolving. But the validation keys only do one thing today which is secure L1, and I'm here to say that it can do actually more. The validation keys are assets in of themselves and it's a very interesting assets with a bunch of different interesting properties, not less than the actual capital behind the validator. And so one, those validation keys and them being active on an L1 securing it is something which is very hard to forge. Nobody really can create an L1 validator without having the actual capital being deposited, locked and activated on an L1, which is a really interesting property. It draws security from Ethereum itself, right? Ethereum has some security assumptions, for example, that less than a third of the validator set is malicious, the way validators are distributed between different entities, et cetera, et cetera.
00:05:07.177 - 00:06:08.496, Speaker A: Every single validator key is run in some kind of software, right? So there's technical expertise behind the validation keys. And really, because nobody looks at it as an asset, it doesn't really have any cost. So the capital side of a validator has cost, but the validation keys don't really have a cost because nobody's using them besides to secure the L1. And so it turns out that they are underutilized. And so if we look at this graph again, we have ethereum, Ethereum, you deposit 32, Ethereum, Ethereum gives you participation rights with which you exercise with your validation keys. What I'm saying that those validation keys can do more. Those validation keys can actually secure other, what I call out of protocol services, those out of Protocol services are different services and protocols that are outside of the L1 but give value and services to the L1 users.
00:06:08.496 - 00:06:54.117, Speaker A: So, for example, oracles and bridges and L2s, et cetera, et cetera. If we extend what the validation keys can do and participate to other protocols, that's a very interesting way to provide security and security. If we can provide it also provides extra rewards. Now why is that interesting? Well, it's interesting because the validation keys have a bunch of different properties. More specifically, the way they work or the way we can actually extend them to use and do more is by changing the tech stack that we are currently using. So currently we're using a bitcoin node, an MEV boost client, and a validation client or a validator client. Right? That's the current tech stack we have.
00:06:54.117 - 00:08:16.977, Speaker A: If we change that tech stack with and more specifically the MEV boost to something else, for example, Commit Boost, which is an open source project which extends what a validator can do, or rather standardize what a validator can do, all of a sudden that validator can actually opt in to other modules and participate in them. Right? Those other modules can be anything we want and all works with the same validation keys we already used today. And that's a very interesting change that's already happening. It's already happening for actually different reasons, but nonetheless very applicable to what we're talking about. And so how does a validator key, which is not really capital, it's just a validation key which is not slashable, can actually provide security to other protocols? Well, when we're talking about security, we're really talking about two concepts. We're talking about security budget, which is how much capital is actually securing some kind of a protocol, or rather in different words, how much capital do I need to actually attack a certain service and the cost of attack. So if I actually get that amount of assets and actually attack the network, how much is going to cost me? Right? And so most of the times, almost all of the times, the security budget is the main component of security.
00:08:16.977 - 00:09:17.045, Speaker A: So if you take as a benchmark Ethereum, for example, when you deposit a 32 ETH validator into Ethereum and accidentally get it slashed, the individual validator will only be slashed by one eth. So it's around 3% of the actual validator value. The rest of it, the 31 ETH are actually just security budget. That's what with which you actually secure Ethereum. So those are the differences with in security, the budget is the main component and the slashable capital is really the cost of attack, which is the more minor component of security. Now, if we stack them both together and do the obvious comparison between using validation keys or a validator as an asset to secure some kind of a protocol and use, for example, restaking to secure a protocol. With restaking, every eth or every dollar you put into restaking, that dollar needs to be, first of all, it needs to be capital, it needs to be locked.
00:09:17.045 - 00:10:02.305, Speaker A: And the security budget is exactly equal to the slashing capital you have. So it's one to one ratio. If we use the validation keys or the validators and assets to secure other protocols, all of a sudden, often the validation keys are not capital, they're not slashable, but obviously you'll add some kind of a slashable component to them, but in a much lower rate. So for example, 5 to 10%. So the difference in required capital is quite significant between restaking and using the validation key as an asset to secure other protocols. There's another way to look at it, which is really the cost, right? When we are talking about security, it's mostly about cost. So with restaking, there's quite significant cost in securing other protocols.
00:10:02.305 - 00:10:46.585, Speaker A: The reason why is because we're locking capital. If we are locking capital, and I'm sure some of you are doing that. First of all, the fact that we're locking the capital has some associated cost, right? If we I'm willingly to willingly locking capital, I'm expecting somebody to pay for it. Second is that every locked capital has loss in terms of alternative investment opportunities. And third, when you are locking capital in restaking, there's always a chance you get slashed and there's always a chance that the smart contracts get compromised. And so there's also slashing or losing the capital factor. So the initial cost of locking capital for restaking is quite high.
00:10:46.585 - 00:11:28.741, Speaker A: And as a result you'll get less security with validators and asset. The validator itself is not capital, it's an asset, but it's not capital. It doesn't cost anything. What does cost is maybe slashable capital, but that's again 5 to 10% of the actual value. And so using the validation keys to secure other protocols really has zero cost for the validation keys, because again, not slashable, it's not really capital if we kind of stack them together and try to make the comparison. So staking, for example, has you lock 100% of the assets, right? You need to lock 32 ETH. You have some quite significant missed opportunity cost because you're locking eth instead of doing Something else with it.
00:11:28.741 - 00:12:05.467, Speaker A: Although with LSTs and LRTs you potentially can gain some of that cost back. Slashing cost is actually quite low, as we said before, it's around 3%. It's very much ETH aligned obviously, because it secures Ethereum and the rewards rate are pretty low, right? Restaking, on the other hand, you still lock 100% of the assets. So the missed opportunity costs and slashing costs are pretty high. It's not entirely aligned with Ethereum, again, because it has quite significant impact on Ethereum once slashing happen. But the rewards rate are pretty high. Right? That's what excites everyone about statement.
00:12:05.467 - 00:12:43.145, Speaker A: But if we use the validator keys as capital, or rather sorry for security as an asset, then we don't lock quite as much capital. We're locking maybe 5 to 10% amount of capital. There's no missed opportunity cost because the validation keys are not capital at all. So if I'm using them, it's not like I cannot do any other investments. Slashing cost is really, really low because again, the validation keys in of themselves are not slashable. It's very Ether aligned because we're augmenting what a validator on Ethereum can do and it's not slashable. It doesn't have any real impact on Ethereum, even if things go wrong.
00:12:43.145 - 00:13:36.553, Speaker A: But the rewards rates are still very high because we're still in the realm of actually securing other protocols. And so that comparison is quite interesting. And it's an alternative way to look at how validators on Ethereum and specifically out of protocol services, can draw security from Ethereum itself in a different way, which is much, much less expensive. So what are the different use cases for this? Well, one is shared security, right? This is the restaking part. Shared security requires bootstrapping security for other protocols. That's something most of you probably are aware of and definitely can be used with the validation keys as a way to participate and earn more rewards. But there's another whole category being developed which is extending validator commitments.
00:13:36.553 - 00:14:49.575, Speaker A: So if we go back and look at what the validators do on Ethereum, they attest they propose blocks and they do sync committees as rights that give them rewards. But they actually can do more with stuff like pre confirmations, base sequencing, shared sequencing, et cetera. Those are actually services which are for the L1 using the actual validator because it has participation rights in Ethereum. So for example, and we'll dive into each one of them more specifically and in the future you'll have more categories because validators are very flexible and very dynamic and can do a bunch of different things. And so there's a whole category or whole marketplace of different use cases that need security, that need the participation of an L1 validator. And by using the validator as an asset class in of itself this, it's a different approach which is much cheaper and much more aligned to Ethereum to exercise those types of needs. And so if we'll dive into for example, pre confirmations, Preconfirmations is really a type of service validators can do, which is to pre confirm the inclusion of a transaction before the actual block appears on the network.
00:14:49.575 - 00:15:27.855, Speaker A: Super interesting. Just imagine that you can include a transaction you want in three blocks for whatever reason. Maybe it's arbitrage, exploitation or just you want to make sure that your transaction is included. Whatever the reason is, Preconfirmations is something super new but actively developed and led by the Ethereum Foundation. And the reason why it works is because block proposals on Ethereum are predictable. Block proposals are proposed by validators because they have participation rights in Ethereum. And so all it all goes back to the actual validator keys.
00:15:27.855 - 00:16:08.475, Speaker A: It has nothing to do with the capital of the validator, but rather the validation keys themselves. And so that's for example pre confirmations base sequencing is another example. So we all know what L2 sequencing is. The problem with L2 sequencing is it's very centralized. And so there's another development happening here again led by the Ethereum foundation to actually use the validators for L1. So the actual Ethereum validators to be the sequencers for L2s. The idea there is that you can decentralize and draw security the security properties from Ethereum liveness and security from Ethereum to actually secure L2s, which is quite interesting.
00:16:08.475 - 00:17:05.287, Speaker A: It also creates a lot of rewards back to the L1s, because sequencing rewards are pretty high currently in L2 and it's decentralizing L2 that makes them more aligned with Ethereum, less susceptible for censorship, etc. Etc. And it's actively being developed and I would imagine in the next 6 to 12 months you'll start to see major L2s adopting this type of tech stack for sequencing. And lastly it's something we all know which is shared security, right? Restaking what we is more known for shared security is basically the idea that you can use or rather bootstrap security for other protocols with existing bigger protocols or rather L1 protocols. And so currently without kind of. We touched about it before. Currently restaking really talks about the capital side, right.
00:17:05.287 - 00:18:16.175, Speaker A: It's not even restaking anymore because you can actually do, quote, unquote, restaking with any asset. It doesn't have to really be Ethereum staking anymore. But shared security is a classical kind of example for using your validation keys as an L1 validator, because you can not just provide security, you can provide it at much lower cost. And it can also provide better Security because L1 validators have properties that restaking operators don't really have, because again, they're part of a bigger validator set with different rules and much more robust rules. And so shared security is another type of example for what you can do with validators as an asset class, which is quite exciting. And so all of those things and more in the future really comes back to staking Legos, the idea that you can build more and more those simple building blocks on your validator. And ultimately, and it's my prediction, in the next 12 to 24 months, we'll see significant increase in what validator rewards are specifically for those categories and more specifically by utilizing better the validator themselves.
00:18:16.175 - 00:18:25.505, Speaker A: Thank you. I don't know if we have time for questions, if anyone has any.
00:18:34.325 - 00:18:41.425, Speaker B: Hello. Okay, so isn't the slashable copy to a measure of the security that can be provided?
00:18:41.815 - 00:19:17.635, Speaker A: So not directly so we tend to think that it is. But in fact, if we're talking about security, there's again two categories for, or rather two factors for security. So one is the budget you're securing with. So how much capital basically is participating in a certain protocol? Right. That capital is not necessarily slashable, that's just the capital participate and then there's the cost of attack. So if I do have, let's say I have a protocol which has security worth 100 eth and I want to attack it with a 51% attack, I need to gather somehow 100. Right.
00:19:17.635 - 00:20:06.105, Speaker A: I can attack the protocol, potentially not get slashed if there's no slashing rules. So the cost of attack is 0, the budget is 100. So cost of attack is what do I lose if I do attack the network? Right. So in other words, slashing. So if I take Ethereum as a benchmark, the individual, although Ethereum has, you know, coordinated of increased penalties, if you take the individual validator on Ethereum and commit some kind of a double slash, double signing or whatever and get slashed, you slash about 1 ETH and actually post spectra is going to be lower, much lower. And so if you translate that to the ratio between the budget or the 32 ETH which is the validator and the slashable capital, it's 3%. So 1 ETH out of 32 is around 3 point something percent.
00:20:06.105 - 00:20:27.745, Speaker A: And that's really the cost of attack versus budget. What I'm saying is that the validation keys themselves, because of their properties, can provide the same amount of budget for security, but with much less actual capital locked for slushable events. That's the kind of the difference in thinking.
00:20:29.485 - 00:20:38.227, Speaker B: So theoretically there could be someone who can bribe the validators in order to perform an attack, and validators wouldn't be hurt just slashing too much.
00:20:38.331 - 00:21:07.617, Speaker A: The validators will not get hurt or get slashed because it's not a capital. But each service will determine exactly what are their configurations or preferences. So one service will say I want to have 5% slashable capital for every validator that wants to participate. Another service will say up to a certain amount of eth, I will require 15%. But post that some kind of a sublinear decretion. Right. And so each service just defines what they want.
00:21:07.617 - 00:21:12.857, Speaker A: It's not about just that or just that. It's the combination of the two. The difference is the ratio.
00:21:13.041 - 00:21:14.245, Speaker B: Got it, thank you.
00:21:30.835 - 00:22:04.493, Speaker A: I wanted to ask you about the term restaking. Do you think it's a good term? Does it make sense now? It's not really because. So the original idea was actually risk taking. So you take your stake specific on Ethereum and then apply it again and again and again to other protocols. Now what's happening is that it's really recapitalization of assets because it's detached completely from restake for staking. So both Eigenlayer and others already are open to any type of asset. So it's really about the value of the asset, not what is behind it.
00:22:04.493 - 00:22:26.025, Speaker A: And so I would imagine that restaking should be branded to recapitalization or something along those lines instead of restaking. Yeah, but nonetheless the ultimate goal is the same. So you provide security for or bootstrapping security for other services. Thank you everyone.
