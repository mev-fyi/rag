00:00:00.090 - 00:00:19.422, Speaker A: You. Yeah. It's a real honor to be here today. My name is Mary Poshevsky. I'm one of the co founders of cello. And fun fact, my dad's actually a professor at this university. And so it's an extra treat for me to be here today.
00:00:19.422 - 00:00:47.226, Speaker A: We're going to be talking about the cello l two proposal. I'm just kind of curious how many people here, a show of hands. Heard about the LT proposal earlier in the summer. Okay, a few people, mostly in the front. So, folks in the back, you're in for a treat. We'll talk about something cool today, and you'll see the use of a lot of emojis today. It's a bit of a challenge for myself this year to make slides with emojis, and so if you like the format, come.
00:00:47.226 - 00:01:15.234, Speaker A: Let me know afterwards, either in person or on Twitter. My handle is Merrick underscore. And so maybe just kind of as a show of hands, who here feels like we are, or they, or maybe their close friends are kind of using web3 products on a frequent basis. I'm kind of just curious. Interesting. Okay, well, this is a good crowd. So about 50% of folks raised their hand.
00:01:15.234 - 00:01:57.090, Speaker A: That's actually pretty amazing. It's the first time that's happened. Usually it's closer to 20%, but 50% is not 100%. And that would still make Vitalik sad, shown here in the form of a cat emoji, because there is no emoji for Vitalik yet. And I'd say it's a shame because I think many of us are really working hard building for this kind of future where we want everyone to be rushing into the house of web3. This is kind of a scene from a best buy in the US on Black Friday. Probably pretty terrifying in person if this actually happened.
00:01:57.090 - 00:02:42.126, Speaker A: But as a metaphor, this would be pretty exciting, right? All of your friends, everyone that you know, all the normies, kind of rushing in to use the products that you're building in web3, and we're not there yet. This is kind of the current reality. It's just the people who raise their hands in an empty department store, running around, having all the fun. But we're here to change that. And when people ask me what sello is, one way to think about Cello is kind of an EVM platform that's working really hard to bring about that future that we saw earlier. It's really focused on ease of use, on scalability, and we're just laser focused on making that happen. And so today we'll talk about both.
00:02:42.126 - 00:03:42.610, Speaker A: But before we jump into kind of the L two proposal, I just wanted to give a really quick summary of what Cello is today. So today it is an Alt L1, it's EVM compatible Alt L1 with a really efficient proof of stake consensus protocol that we launched three years ago. It uses some of the same cryptographic mechanisms that secure Ethereum to today, but launched three years ago. So two years before the merge. And then critically, and this comes back to kind of that image I showed earlier, much of Cello is really laser focused on building for ease of use and accessibility. And so that means really great mobile support. So Celo has this thing called social connect that lets you send value to phone numbers even before the recipient signs up.
00:03:42.610 - 00:04:30.478, Speaker A: And it also has a Zksnarc based like client. And then critically, you can also pay for gas with tokens. On Celo, account abstraction is a really big topic as of late, and a lot of people are excited about this future where you can pay for gas with tokens. Turns out on sello, you can actually do that today with eoas, it's supported natively. There's a special transaction type that you can use where you can specify the gas currency that you want to use. And then just as a kind of a cherry on top, Sella launched with full onchain governance. And one of the first proposals that the community brought to governance was to make Celo a carbon negative chain, which basically means that the proposal passed.
00:04:30.478 - 00:04:59.286, Speaker A: And since then, the chain itself has been buying carbon offset credits programmatically using block rewards. And so that's made cello not just carbon neutral, but even carbon negative. Other chains have followed suit, which I think is really exciting. I think it's made the whole space. It's really helped change the narrative about the space. It's no longer something that's contributing to climate change, but something that is actually helping to fight climate change. And so that's really, really exciting.
00:04:59.286 - 00:05:40.310, Speaker A: And because of that, a lot of refi protocols have kind of made celo their home. And so you can think of Celo as having kind of two really big verticals, a lot of mobile defi, a lot of mobile payment products, and then refi products. And all of this has, I think, resulted in a lot of interest in the platform as of late. So even though it's a down market, when you kind of focus on especially mobile payments and kind of mobile defi, people tend to think of these types of projects or products as kind of real world use cases. And even in the down market. We're seeing a lot of adoption of these. We're seeing a lot of growth in active addresses.
00:05:40.310 - 00:06:44.160, Speaker A: Basically, since February, there's kind of been this big jump. And then when you compare us to other chains, Nansen has a really nice table that kind of shows a whole bunch of chains that they're tracking. And frequently, consistently over the last half year, we're kind of ranking number one when it comes to address change growth. So this is fellow, but I promised to talk about the l two proposal, so I wanted to kind of switch gears and talk a little bit about that now. So one of the unique things about cello as an l two is that it's transitioning to become an l two from an l one. Which means that unlike other l two s that are launching today, we have a bunch of constraints that are really guiding kind of our design as we think about what cello as an l two should look like. And I would say that those constraints have resulted in maybe two really important design goals that we've been thinking about.
00:06:44.160 - 00:07:39.914, Speaker A: The first is around the price of transactions. So because cello is very scalable today, gas is quite cheap on celo, and that has attracted a lot. Know I mentioned payment use cases, community currencies, micro lending use cases, universal basic income use cases, types of use cases that wouldn't really make sense on a chain that's charging $20 to transaction. And so one constraint, one design goal for this proposal is to keep gas fees low. And our solution to this is to leverage something called Eigen layer. Maybe just show of hands, how many people here are familiar with Eigen layer? Maybe 20%. So just for the benefit of others, you can think of Eigen layer.
00:07:39.914 - 00:08:44.290, Speaker A: It's an Ethereum protocol on Ethereum DL1. And you can think of it as a marketplace for trust. And the place for trust that Eigen layer went to is Ethereum validators. So who better than to go to the folks who are securing the Ethereum network to build this marketplace of trust? And the way they do that is they allow folks who are staking ETH and running a validator to effectively reuse that ETH, to use it as a bond to secure other services that they may want to run. And of course, because this is Ethereum, there's a lot of trust, there's a lot of e two validators. And with Eigen layer, folks can opt into running a number of additional services. And one that the Eigen layer team itself is building is this thing called Eigenva, which is a middleware that basically is bringing dank sharding to the Ethereum ecosystem.
00:08:44.290 - 00:09:33.246, Speaker A: I would say one to two years ahead of the eventual launch of Dank sharding on e two. And so that's really exciting. Dank sharding is extremely bandwidth efficient. It turns out that data availability isn't actually a problem that is necessarily expensive from a bandwidth or mathematical perspective to do. And dank sharding is really a nice algorithm for bringing it to the broader Ethereum ecosystem, but it is new, and as a result, it will take some time for Ethereum to adopt it. So in the meantime, we have folks like Eigenva who are looking to bring it to us sooner. And so that will help us make gas significantly cheaper.
00:09:33.246 - 00:10:32.920, Speaker A: On Celo, some people have been asking, well, what about protodank sharding? It's coming sooner. Could it be good enough? From everything we see, it looks like protodank sharding is not going to offer the same kinds of costs as eigenva. And so for now, I think we're still heavily in favor of eigenva. The second goal is one around decentralization. So sell of today is an actual active l one with a lot of nodes running it, validators, full nodes, you name it. And it would be a real shame to kind of throw all that away and just move to a single machine and have a centralized sequencer. And so instead, we've been working really hard on a design and an implementation that transitions our current validator set into a decentralized sequencer set.
00:10:32.920 - 00:11:28.582, Speaker A: And this is elegant for a number of reasons. I think, most critically, it gives us better censorship resistance, and better uptime, and more broadly, just creates a more decentralized system. And because we've been running as an ecosystem, an l one for a while, we have a lot of expertise in consensus protocols and how to do this in kind of a production ready kind of manner. And then the third and final goal, and for the folks who are paying attention, you might be wondering, wait a minute, that doesn't look like the number three. And it's true. That's not how I would show the number three with my hands, but it's the only emoji for three I could find. So we're going to have to live long and prosper for now.
00:11:28.582 - 00:12:35.150, Speaker A: But I think for the folks who are even more astute, I said there were two goals that we were kind of targeting. But as is typical with big software engineering projects, you end up realizing that there's actually additional constraints that you might have, and that one ultimately kind of created this third goal, which is one around, you know, with this kind of laser focus on ease of use in the ecosystem, Celo launched with one block finality, which means that there are no reorgs on Celo. There's basically a proof of stake protocol that creates token economic securities that prevent these types of reorgs. And that is really nice for payment use cases for anything involving normies. Trying to explain to a normie why their transaction might roll back is something that we didn't want to do in our ecosystem. And so we worked really hard to offer one block finality. And keeping that as an l two, it turns out, is not that trivial.
00:12:35.150 - 00:13:42.340, Speaker A: All l two s today, as far as I'm aware, do not offer this. And so we work really hard to create a design that actually allows us to offer one block finality as an l two as well. And when you think about the sources of potential reorgs in an l two, I would say there's two sources. There's the l one itself, right? Ethereum can reorg, and then there's also the l two itself, which could potentially reorg. Say, a sequencer shares one thing with one party, but then ends up doing something else, perhaps posting a different transaction bundle to Ethereum. That could cause someone to go, oh, wait a minute, I thought this transaction would be included, but it turns out it wasn't, and therefore, I have to reorg. And so the design that we came up with basically solves both of these problems with two changes.
00:13:42.340 - 00:14:43.670, Speaker A: The first is to add slashing for equivocation. So if our decentralized sequencer ends up signing off on one transaction bundle, broadcasting that out to the l two, but then ends up signing off on another transaction bundle and putting that on Ethereum, then those sequencers would be potentially slashed. And so that's one way to use economic security to prevent kind of the l two reorg. But the other thing that we can do is to prevent the l one from impacting the l two. And to do that, we can add a delay to all forced transactions and all deposits. That basically is over 12 minutes to allow the l one to achieve finality before those transactions make it over to the l two. It looks like we lost the slides.
00:14:43.670 - 00:15:52.778, Speaker A: Looks like the whole projector shut down. So, anyway, I'll talk without the slides while they get it figured out. So what does all of this look like? Well, this part is going to be the most challenging, because I had a nice diagram with our sequencers on the left eigen da nodes in the middle, and then a bunch of full nodes on the right with Ethereum below. And I was going to kind of walk through basically the lifecycle of a block. So it might be important to have the slides for that. So I'll give the folks maybe a few more minutes for that. In the meantime, anybody have any questions or any thoughts or want to share any excitement for ETH Warsaw? Is this your first eth Warsaw, guys? It's everyone's second eth Warsaw.
00:15:52.778 - 00:16:30.308, Speaker A: That's really impressive. Holy shit. Yeah, well, I could perhaps rotate this tv, and then people could kind of look at this one. Maybe that's going to be better. How's it looking back there? I see two people up on a ladder working really hard for you guys. Did anybody go to the party yesterday? Yeah, two people went. Nobody else went? Okay.
00:16:30.308 - 00:17:38.468, Speaker A: A few people went. Okay, who's participating in the hackathon? How about that? Okay, any exciting ideas? You guys targeting defi refi nfts? None of those. Infrastructure, I'm guessing. Okay. Yeah, it's a really great question. So, for those who didn't hear it, the question is, as cello transitions from an l one to an l two, what will people have to do? And the answer is, well, it depends what role you play on the network. If you are a node operator, like running a full node or a validator, then certainly you're going to have to upgrade your node.
00:17:38.468 - 00:18:38.990, Speaker A: But beyond that, it should be seamless for everyone else, because the plan is to hard fork into becoming an l two. And so this will be a really nice, seamless upgrade. And while we're talking about that, people sometimes ask me, well, what's the timeline? Where are you along this kind of journey? And the journey really started at ECC when c labs, which is the company that I work for, and I made a governance proposal to transition Celo to an l two that received a lot of, I would say, great fanfare. Both people in the celebr community and the ethereum ecosystem were generally quite supportive, I would say. And that followed with an actual on chain governance vote, where people actually voted to kind of enshrine kind of this proposal as kind of a roadmap direction for the ecosystem. And so that proposal passed with flying colors. It was 99%.
00:18:38.990 - 00:19:30.316, Speaker A: And since then, the team has been working really hard to execute on the proposal. Obviously, a lot of thought and work went into it before we even proposed it, including kind of this architecture that I'm going through. And we started building. We are waiting for Eigen layer and Eigenva to launch, because that's a pretty pinnacle kind of piece of the proposal. And so that's going to launch in kind of q three, q four, and after that, hopefully we'll be able to kind of do that hard fork. But it is going to be two hard forks, and the first of which is actually happening next month or this month, I guess it's September today, so keep an eye out for that. And then after that, once Eigen da launches, there'll be the second hard fork to kind of make that change.
00:19:30.316 - 00:20:24.060, Speaker A: So it should be seamless, similar to the e two merge. Hopefully, it'll be an exciting moment for the whole ecosystem, but it won't require any work for anybody building on top of cello or anybody using products built on top of cello. Which means that if you're participating in the hackathon this weekend, and you're excited about having an l two, that allows you to create really easy to use experiences for your users. If, for example, you want to create something that allows your users to pay for gas with tokens, maybe they're sending stablecoins around and you want them to be able to pay for gas with that stablecoin. You can do that today. And when seller hard forks into an l two, then you won't have to make any future changes either. And so that's quite elegant.
00:20:24.060 - 00:20:59.620, Speaker A: I'm going to assume that they are not going to get this fixed in time. Yes. Second question. Thank you. I saw a proposal some time ago that cello is moving to opistack from optimism, and today you mentioned Eigen layer, and I wonder if these are two different proposals or both things are in your roadmap. Yeah, it's a great question. So both things are in the roadmap.
00:20:59.620 - 00:22:12.210, Speaker A: And so to provide these kind of three features, decentralized sequencer, cheap transaction fees, one block finality, there's no off the shelf l two protocol that we could leverage. And so we knew that we had to kind of roll up our sleeves and really get to work, but we wanted to start with an existing code base that's kind of been thinking about this for a while, and that has a nice modular architecture, and the op stack has that. And so we've been chatting with the op stack team about bringing some of these as public goods to the stack ecosystem. So, obviously, optimism and others are interested in having decentralized sequencers. I think Alt Vas is something that they've long talked about. One block finality, I think might be a little bit more bespoke and unique to Celo, but certainly we're working hard to make these effectively public goods that anyone can benefit from. Hey, we're back.
00:22:12.210 - 00:22:48.460, Speaker A: Incredible. Yeah. Thanks, guys, for working so hard in the back to make this happen. That looked stressful. Okay, so this is the picture that I tried to describe. I wanted to kind of walk through the lifecycle of one of these kind of blocks that kind of goes through the l two. And as with any l two, everything starts with a transaction bundle.
00:22:48.460 - 00:23:59.140, Speaker A: In this case proposed by one of the sequencers in this decentralized sequencer set. So these decentralized sequencers, they make up a set of folks participating in BFT based consensus. In BFT based consensus, you have the concept of a leader. One of these leaders kind of proposes basically a bundle of transactions that it pulls from its mempool, and then it broadcasts it to all the other sequencers. Through BFT based consensus, those other sequencers will effectively sign off on that transaction bundle. And the way we do this today, and the way that we're going to be doing this in the l two, is we use BLS signature aggregation so that we can actually create a multi sig of all of those signatures. And then we also included bit vector so that you can have attributions, so you can see who signed off on that block.
00:23:59.140 - 00:24:56.470, Speaker A: And then we send that to the Eigenva middleware. And eigenda will effectively guarantee that this data becomes published on its network. And in so doing, it then returns a eigenda certificate that is effectively a proof that that data was published. And now we have this certificate. And so now is the interesting part. So now we post this certificate to Ethereum, and this allows us, in effect, to basically order all transaction bundles that are being proposed by the L two using the L1. And then any full node on the network can actually download the certificate from Ethereum and then begin the kind of block derivation step.
00:24:56.470 - 00:26:09.230, Speaker A: And the first thing it has to do, of course, is to go to eigenda, turn that certificate into a transaction bundle, and into that BLS multisignature and bit vector. And once it has that, it has everything it needs to effectively sync with the L two for that block, it can execute those transactions. But before it does that, it has to first check that this multi signature is valid, that two thirds of the sequencer is in fact signed off on this transaction bundle. And it does that by looking at the bit vector, aggregating all of the public keys for all of these sequencers, and then verifying the signature with this kind of group aggregated public key. And this is important because I think some folks, when they think about decentralized sequencers, they say, well, we can check this on Ethereum, right, in a smart contract. And that's definitely one design that has been floated around. But if we do this at the full node level, then we can do this in a way more gas efficient way.
00:26:09.230 - 00:27:27.344, Speaker A: And so, it's a pretty nice kind of little innovation. And once all of these things check out, and you actually execute the transactions, you end up having kind of this derived block. Now, one thing that op stack does that's really quite nice, is it has a p to p network that allows nodes on the l two to gossip, these things called unsafe blocks. So, these are blocks that have been signed off by the sequencer, but that haven't made it through the l one. We're keeping this as well. But when you do this, you have kind of this interesting potential issue, which is that if those unsafe blocks differ from what you're now seeing coming through the l one, then you have kind of the potential risk of a reorg, right? Like, if you see something different on the p to p network than you see from the l one, you might end up having to reorg. And so that kind of creates an issue for our one block finality.
00:27:27.344 - 00:27:59.840, Speaker A: And the solution here is, of course, what we talked about before. If any full node sees this, then there is evidence that the decentralized sequencer set equivocated. And you can use that evidence to effectively slash them. And this is something that we do today. We have this in the l one, and so we can reuse this to effectively add slashing for equivocating in the l two as well. Cool. So, in summary, this ends up giving you low gas fees.
00:27:59.840 - 00:28:54.368, Speaker A: One of the things that I think few people realize, when you're using most l two s today, and you're using the l one for data availability, you're paying 95% of your gas fee, is going towards just data availability. And as I mentioned before, data availability is effectively an embarrassingly parallel problem. You can actually solve this in a way that requires much less bandwidth, much less trust. And so by using Eigenva, we can in effect, slash a big portion of that cost, up to 95% of it. And one of the really nice things about Ignda, of course, is it's still run by Ethereum validators. And so it offers really nice trust assumptions. We also have great decentralization through this decentralized sequencer set.
00:28:54.368 - 00:30:14.430, Speaker A: And this is just really helpful for uptime and for increased censorship resistance. And then finally, one block finality we really believe that it's quite helpful for users, for developers building, for users who don't want to be confused by things like reorgs. But we also think that this could be interesting for l three s. If you're interested in launching an l three that can offer Ethereum security, but also cheap gas fees and one block finality, then the future state of sellout could be actually a nice place for you to roll up to, because you'll get to inherit all of these kind of benefits that we're working so hard to provide. And then coming back to that question from the gentleman there earlier, all of this will be done through a hard fork, and so it'll be fully seamless for users and people deploying contracts on top of the platform. And that's, of course, really exciting, because if you're again participating in this hackathon, you're excited by what you're kind of learning about, and you want to build on top of Celo, you can get started today. And then when the hard fork happens, all of that, you'll get all the benefits of cello becoming an l two in the future.
00:30:14.430 - 00:31:10.430, Speaker A: And just on that note, if you are interested in building something this weekend, and perhaps you're interested in kind of building for people on mobile devices, there's 7 billion smartphones now in the world. I think 80% of people say they use a smartphone on their toilet, which is an incredible stat because it means that 20% of people lie. There's a lot of eyeballs to be had by building on mobile. And if you are interested in doing so, I would highly, highly recommend checking out Velora. Valora really exemplifies an app that is leveraging all of Sello's features so you can pay for gas with tokens. On sello, you can send a stablecoin to someone, pay for that transaction fee. In that stablecoin, you can sync your contacts with the app and send value to phone numbers.
00:31:10.430 - 00:32:11.660, Speaker A: It's really quite elegant, and it's also a signing wallet, so you can use it with your dapps. And one thing that we keep hearing from Dap builders at Valora is, hey, having a web app is cool. Connecting your wallet to it is nice, but really, I want to be closer to the user. I want to offer functionality in the wallet itself. Can you help me do that? And the answer, as of recently, is yes. Veloura now is offering this thing called shortcuts, which are these kind of one tap actions that you can kind of send via push notification to your users through the wallet to kind of push them through maybe some funnel that you have get them to go to the next step. And so if that's at all interesting to you, definitely check out Valora and the docs for Valora at Docsublora XYZ.
00:32:11.660 - 00:32:36.290, Speaker A: It's really nice for kind of building these really easy experiences for your users. So that's everything. Yeah. Thanks for bearing with me through the technical difficulties. And, yeah, I'm around if you have any questions, you close.
