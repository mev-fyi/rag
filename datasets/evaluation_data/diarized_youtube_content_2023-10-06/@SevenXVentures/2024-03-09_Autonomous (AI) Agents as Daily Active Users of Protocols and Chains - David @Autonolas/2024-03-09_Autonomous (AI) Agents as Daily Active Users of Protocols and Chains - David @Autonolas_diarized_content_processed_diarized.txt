00:00:01.370 - 00:00:40.070, Speaker A: Cheers. Thanks for having me here. I'm basically here to do BD. No, just kidding. But in a sense I am, because what I'll be talking about is autonomous agents, autonomous AI agents, and specifically how they can be synthetic users to your protocol and chain. Now, I'll also talk about the grand division behind this, but I think this will be quite relevant and exciting because I've been listening to quite a few talks. All of them solve very specific things in the decentralized AI stack, all very exciting solutions.
00:00:40.070 - 00:01:26.564, Speaker A: And obviously humans can be users of these solutions, but so can software agents, and that's what I want to spend my time on. So I'm myself, I'm co founder and CEO of Valerie. Valerie is the core developer behind autonomous, or Olas for short. And thanks for giving me this time to present. Let's make this a bit different. I think it's always important to define something, even if all of you might already know what I'm talking about. But when we're talking about an agent, then obviously we could be talking about a human as well.
00:01:26.564 - 00:02:47.888, Speaker A: But in the software sense, equally, it's something that perceives certain information, has internals, which could be its memory, could be other kind of long term memory stored, and then it has some internal mechanisms to deal with this information. They can be super simple, like rules based implementations, right. All the way to things like huge multimodal models, like something like Sora, or we'll talk about some other examples later. And then eventually. And that's the key thing with autonomous agents, is they will act. So I think one misconception we sometimes have a bit is about the sort of differentiation between what might be more considered like an AI agent, which a user maybe uses, like a tool which is more or less short lived, and something which is very long lived, like an autonomous agent, which might actually work in the background all the time and do useful things for you on behalf of if you're the owner, for instance. Now, again, there's like a wild variety, obviously, of implementations out there.
00:02:47.888 - 00:03:53.670, Speaker A: And one thing where it becomes very interesting for all us, and myself as well, is when we have multiple autonomous agents, because that allows us to create entirely different types of applications. And that's what I will be spending a lot of my time on today. One of the key things which you sort of, in an abstract sense, get from multiple agents interacting, is that you effectively have this possibility of emergent outcomes, right? So if I have like a single agent, it might be doing something, but when I have multiple agents coming together, then the product or the outcome we might care about is actually the interactions of all these agents. And we'll be talking about examples there in a second. Before I go into the details, I want to also talk about a way our team thinks about trends more broadly and technology. I think there's kind of three very important trends going on. Obviously, we all know about this, kind of read right, on, like web one, web two, web3.
00:03:53.670 - 00:05:08.608, Speaker A: Now, obviously, they still coexist, right? They don't end in AI, if you want to, shoehornet. But it's indicative of something. It's that you kind of have this evolution from things being rules based. So people wrote like these complex rules to have early chatbots, right? And then we went to learning, where instead of defining all the rules of the algorithm, we basically give the algorithm or some other algorithm data to learn about its rules. And now we're moving into this phase of agendic, right, where effectively, even if you look and follow what OpenAI and other leaders in the field do, it all moves towards application, which are pretty much know, GPTs are just the beginning, but will certainly move very fully in. I mean, when people talk about AGI on Monday, there was a fantastic event where you were presenting as well, and people were talking about sort of decentralized AI and Agi. Implicit was always this assumption that this thing would be a gentex.
00:05:08.608 - 00:05:44.200, Speaker A: And then we have ux. And I think here we can almost like in parallel to the web, observe that. As we went from reading, which was mostly about viewing, we went into interacting, and we're still all pretty much stuck in this parting. And again, those won't end, right. We heard, for instance, the presentation from Ethan earlier, Myshell is a lot about interacting, right? The user kind of wants an outcome relatively quickly. They sit there, might even interact with the application chat. GPT is something like that.
00:05:44.200 - 00:06:25.204, Speaker A: You're there, you're talking to it. And mobile applications, great example, hanging out on Twitter, wasting your time or actually enjoying it. And then I think where we're moving to is that we'll see much more products, which, for lack of a better term, I would describe as outcomes focused. So what do I mean by this? It's a situation where a product creates entire, finished outcomes for me without me being there helping it along the way. So an example is, I have an autonomous agent, which just makes me wealthier. I don't sit there. I don't sit there instructing it every day.
00:06:25.204 - 00:07:09.140, Speaker A: And it's like, oh, why don't you look at this stock? Or. Yeah, that you have done well, and this you have done poorly. No, it's just like a system I acquire or control, and it, 99% of the time, just does its thing and generates desirable outcomes for me. So financial is obviously kind of very relevant in the crypto space. But we can come back to health, as Daniel was just talking about it, where maybe a system sort of continuously monitors me in the background, right? And I'm no longer there, interacting with it all the time. It learns about my preferences and so on. Now I want to quickly go a bit lower.
00:07:09.140 - 00:08:03.700, Speaker A: So I was talking very broad, actually. I sort of missed the point here, actually. So if we combine them, then that points as autonomous agents. Autonomous agents, which actually we can own, and that's a key thing I'll come back to. But before we get there, want to quickly talk about why autonomous agents are requiring crypto or why crypto is relevant to them, which is a valid question, because obviously we see a lot of agents, autonomous agents and other kinds of AI agents being developed outside of crypto. And I would say there's like sort of four big categories. Maybe you can add another one, is that in general, when you go into the crypto domain, you remove this requirement to KYC, you have these kind of permissionless interactions, which allows for services to be composed much more directly, agents talking to each other much more natively.
00:08:03.700 - 00:09:10.536, Speaker A: A second thing is just about ownership. I mean, if my autonomous agent creates all these outcomes for me and becomes increasingly valuable to me, I personally don't want it to be in someone's cloud platform, centralized without control over it. That sounds very undesirable because this entity will be able to extract a lot of rent from me when presumably I'm kind of feeding into the system as well. So having the ability to outright own this thing, maybe by running it locally on my own server farm if I have one, or be able to co own it, where basically as a group of people we can own like entire autonomous agents and later some form of AGI, it's desirable. And I only see web free kind of technology being able to help us in getting there. Platform risks is kind of obvious, right? You might spend a lot of time building on OpenAI's GPT platform, and then they realize that the product market fit isn't quite there, turn it off, and there you are without anything. So this kind of speaks for itself.
00:09:10.536 - 00:09:58.216, Speaker A: And then composability, I think, ultimately is exponentially improved through web free. In theory, in practice, we're not there yet, right? In practice, it's often much simpler to plug into centralized platforms. But I have a hard time imagining a future where we will have all sort of autonomous agents and other kind of AI systems talking via like a centralized hub. So what does Ola do here? It kind of offers, most importantly, this co ownability. So we have a protocol and a stack. Two things. The protocol is on chain, it's on various chains, in fact, eight so far.
00:09:58.216 - 00:10:56.220, Speaker A: And the ambition is to be on every major smart contract chain that allows for that kind of functionality. The off chain stack, you can think of it like a framework to build autonomous agents. And there's a twist to it. You see this hexagon here? The twist is that you can develop an agent and run it locally as a single node system, and then later you can go and you can run it as a decentralized system, whereby what I mean is that you effectively have in this case, six nodes, and they collectively synchronize state between themselves and the agent comes out as an emergent outcome of these nodes interacting. And so you have a sovereign system which is arbitrarily configurable. Like if your use case requires you to just own the agent outright, because that makes sense, then you can do that. But maybe there's another use case where you want to kind of own it as a network between different entities.
00:10:56.220 - 00:12:28.694, Speaker A: I want to go to a use case. So our biggest use case by far, in terms of transaction, has done over 300,000 from this use case alone, mostly on gnosis chain, is actually indicative of what I was talking about in the very beginning of the talk, which is this idea of having these synthetic users which become like users of other protocols. So in the prediction market use case, what you actually ultimately care about is that there's some prediction market which has some economic might behind it, right? I assume everyone knows what a prediction market is, but let's just be clear. Let's say there's a binary outcome event. A prediction market allows anyone to take positions in, let's say, yes, no, of this event occurring. And so someone who consumes that prediction market, maybe another human or an AI system, has the benefit when they consume that over, let's say just a prediction from a model that there is actually economic commitment. People commit to that outcome with their funds, right? And so what we've built is effectively different type of agents, which as an emergent outcome, create these prediction markets.
00:12:28.694 - 00:14:05.530, Speaker A: And people can simply run any of these agents in the OLAS ecosystem. And what's nice about this is that through this use case, we can demonstrate something which I think is important for a lot of crypto companies, which is users often need to first be demonstrated what is capable with these technologies, what you can do with these technologies, and how you can compose them. And autonomous agents almost give you like a tool where, let's say, you're building, as we heard, like some cool ZKML model, and then someone else builds the provable database, and then someone else actually has end users like Myshell, who actually might be using both of these technologies. And in between you have an agent, then the OLA stacks allows you to compose these different things into use cases, which individual users can use or groups of users can own. From a purely OLAS perspective, the benefit is that it sort of creates a flywheel. So if you're a developer, we encourage you to join the ecosystem. But basically what happens is you can build agents and ultimately earn rewards, because as better agents or parts of agents are being built, the different entities who run these agents basically have better outcomes, which leads ultimately to there being more funds flowing back to the developers.
00:14:05.530 - 00:14:38.894, Speaker A: So coming back to what I said earlier, this isn't like some sort of fiction or something. We're actually highly active. Just last week we've hit a significant milestone. So all these OLAs agents have account obstruction under the hood. Specifically, right now, the primary protocol used is safe, and we are now doing 70% of all safe transaction every week on average, like all these agents, and have done 10% of lifetime transactions. Right. And that's from last summer.
00:14:38.894 - 00:15:29.130, Speaker A: So that just gives you a sense of if you get a use case, right, with agents, what potential there is for that use case to really bring your ecosystem forward. And that's what I meant earlier when I was saying I'm going to sell to you. I think as a crypto protocol, you always have this challenge of kind of bootstrapping, and Olas can be one mechanism which by bringing synthetic autonomous agents, can help you with this. So come talk to us. German is also here from the team and can answer questions. So, yeah, where can all us autonomous AI agents become daily active users of your chain or protocol? I leave you with this question and this value generated image. Thanks for your attention.
00:15:29.130 - 00:15:38.040, Speaker A: And if you have questions, now is the right time it please.
00:15:39.370 - 00:16:04.320, Speaker B: Great presentation. I've always loved agents. My first company was actually named after an agent post by one of the core developers back in 2010. And I've always been curious about rentless agents. Right. What do you think about kind of changing the incentive structure where there's no ownership of the agents and those agents just run upon its own.
00:16:04.850 - 00:17:05.570, Speaker A: So I think this is an interesting question, because we actually were discussing it the other day. I think, for all intents and purposes, as long as we haven't transcended from our current human existence, then any economic value outside of human social structures exists in a vacuum. Like you can obviously have an AI economy somewhere on a planet which we don't know about. I'll call it AI economy, like some sort of non human economy. And it's pretty irrelevant as long as there's no connection to any human, because no one will derive any value to it. Now, in that sense, I think it's not very relevant, but from another point of view, obviously I want to come back to the ownership piece. So one very interesting thing is what the stack enables is that the system itself can be owned on chain.
00:17:05.570 - 00:17:33.706, Speaker A: All ownership flows on chain because of how the protocol is structured. But so what this allows is you could have another protocol, or another agent, or a chain thereof owning each other. Now that doesn't, I think, totally remove ultimate ownership. Right. You can always follow the chain, and then there'll be a human somewhere. But that's how I would see it. Not sure I answered your question described many years ago.
00:17:33.808 - 00:17:37.598, Speaker B: You can storage on these nodes, they get paid, and then they use that to pay.
00:17:37.684 - 00:17:39.440, Speaker A: Okay, I see what you mean.
00:17:39.890 - 00:17:54.930, Speaker B: It's able to run autonomously, it's able to have incentives, and it's used to grow, but essentially it has full ownership of itself, uses profit to replicate. But you don't have essentially ownership in that you don't need ownership.
00:17:55.910 - 00:18:42.274, Speaker A: Okay, yeah. So one key thing here is the autonomous agent doesn't live entirely on chain. So if you have an autonomous agent, which is just a smart contract, in my opinion, it's not fully satisfying the requirement for an autonomous agent, because it doesn't have autonomy over its own actions. I mean, it will be called occasionally, maybe because of some economic mechanism or some construction you created as to it to be called back effectively by a transaction. Right. Now, I think the closest we could get to what you're describing today, I think, is by basically taking the OLA stack, build an agent, deploy it on something like a cache, and link that ownership back to itself. Right.
00:18:42.274 - 00:18:55.382, Speaker A: And so as long as a cache runs, or some other kind of decentralized node network, and that agent runs on it, and it's profitable, then we would already be able to achieve that. Does that make sense?
00:18:55.516 - 00:19:02.630, Speaker C: Sean's point about ownership, how do you guys currently facilitate co ownership? Is it through Olaf tokens?
00:19:02.970 - 00:19:33.694, Speaker A: That's a great question. No, not so. The most direct definition of ownership is who owns a given autonomous service, which is this kind of hexagon. And what the OLS protocol does is it kind of coordinates different actors to have more of them. Right. So some of them can be owned by the OLas protocol. As I mentioned, you can have these autonomous off chain systems owned on chain by a smart contract.
00:19:33.694 - 00:19:58.380, Speaker A: And so Ola's DaO itself can be that. And if you're then a token holder, theoretically you're owning a share thereof. But more generally, it's just infrastructure which allows anyone to spin up autonomous services which they can co own. And so not necessarily any autonomous service running on Olas kind of creates a claim for Olas token holders on the service.
00:19:59.230 - 00:20:06.250, Speaker C: Owning an agent allows you to do. What does it allow you to do? Let's say you're a co owner.
00:20:06.590 - 00:20:29.880, Speaker A: Well, that's up to what the service is. The way to think about it is a bit like Cosmos, right? You have like cosmos gives you a way to build sovereign blockchains. Olas gives you a way to build sovereign autonomous services, which are our term for autonomous Asian as a decentralized thing. And whether who owns that is up to the use case at land.
00:20:31.130 - 00:20:32.390, Speaker C: Cool. Thanks.
00:20:32.460 - 00:20:35.060, Speaker A: You're welcome. Thank you. Thanks.
