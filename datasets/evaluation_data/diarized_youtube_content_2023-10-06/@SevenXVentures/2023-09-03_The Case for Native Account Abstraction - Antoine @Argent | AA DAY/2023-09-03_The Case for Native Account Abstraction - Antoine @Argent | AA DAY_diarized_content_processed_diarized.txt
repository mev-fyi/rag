00:00:00.000 - 00:01:02.490, Speaker A: Um so, yeah, indeed. I mean today you will have probably many very interesting talks on account abstract fraction and I'm sure that the speakers and great companies who will speak just after me will go in many details in ERC, four, three, seven and what is account abstraction and ethereum layer one and most EVM compatible chains. But I also want to bring bring maybe another perspective to the table today and really talk about native account abstraction and why at Argent we made a very big bet on native account abstraction. So my name is Antoine Sparenberg, I'm ecosystem lead at Argent. You have my Twitter there for those who want to know. And I'll just first start very quickly about myself for a few minutes so you have a better understanding of who's speaking to you today. I just want to go very quickly through my journey from working in a traditional industry to what I'm doing today at Argent.
00:01:02.490 - 00:02:23.290, Speaker A: I understand there are also students here and I think that's always very interesting to understand. So I did a master in international management. So I don't have a technical background, I have business background at the Luvan School of Management which is located in Belgium. So for those who hadn't noticed, I'm a French speaking basically and then once know graduated, I started first working for a management consulting firm called PMP Strategy, which was working in basically helping European telecom operators finance their new generation networks, which are 5G networks, fiber optic networks. And I like to tell that because I see many similarities between what we do in the blockchain industry and what these people do in the telecom industry. In both instances you have these communication networks. In my opinion, a blockchain is a communication network and you have then more and more use cases coming and building on top of these networks, more and more people coming and using them and at some point you end up with scalability issues, right? And so in the telecommunication industry they had to find new ways, new networks to accommodate for this new scalability they needed.
00:02:23.290 - 00:03:02.054, Speaker A: And well, in blockchain we see that's also something we've been working on for the past years. First with this alternative layer once and now we speak more and more about layer twos of ethereum and even we start talking about layer threes. And then after some time I went working for this company called AB InBev which you probably all know because it's the biggest beer maker in the world. So I have put a few of their products there stellar, TuAB, Advisor, Corona, you probably all know them. And in there I worked in logistics. I stayed only a few months. I really hated it.
00:03:02.054 - 00:03:49.590, Speaker A: That was my first experience with a multinational company. And after some times I really decided I had to get out of there and start working on something that would have a real impact, something that had something at stake and that would have well, yeah, basically impact. And that was missing there. Moving beer from point A to point B is important, but not that important. And so I decided to go full time into Web Three. So first, as a freelance blockchain and web3 consultant, I worked on a few projects, the Smurf Society for example, which is the official NFT collection of the Smurfs. I co organized the Brussels Blockchain Week and about six months ago I became ecosystem lead at Argent.
00:03:49.590 - 00:04:42.306, Speaker A: Now I'd be interested to know here who knows Argent already. Okay, quite a few people and who has used Argent already. Okay, so not bad. So I don't want this presentation to be about Argent, but still I think it's important just to have everybody on the same page and also to understand, because the history of Argent is very related to the history of account attraction. As we have said, account attraction is not that new, actually. It's been there for quite some time and Argent has been there from the beginning as well. So Argent was founded in 2018 and basically the founders back at the time already realized that the UX in web Three was not good, was bad, and that we had to find new ways to improve the UX to reach mass adoption and bring more people to blockchain.
00:04:42.306 - 00:05:30.442, Speaker A: And so they decided to do that with account abstraction. And so they launched Argent. And so Argent was first a mobile app on ethereum layer one. We still have that mobile app on ethereum layer one. But after basically quickly the founders also realized that ethereum layer one was not the best place for mass adoption and that it was not, I mean, the best place in terms of, I would say scalability, but also not in terms of adoption of account abstraction. And so they decided to refocus Argent on layer twos, and more specifically on ZK rollups, with a specific focus on layer twos, which have account abstraction natively embedded. And today you have two layer twos, which have those two properties which are Zksync and StarkNet.
00:05:30.442 - 00:06:26.006, Speaker A: And so Argent today is still this mobile app for Ethereum. We still have it for ZK Sync Lite, ZK Sync Era and very soon for Stocknet, when I say very soon, it's in the coming hours and coming days, you will be able to use Stocknet with your Argent mobile wallet. We also have a few other products, argent X, which is an extension for Stocknet. We are the biggest wallet on Stocknet with 80% market share. And then, yeah, a few more products as well. We also have an NFT marketplace on Stocknet, but that's a bit unrelated for today. So in terms of agenda, I think people here mainly already know what is an EOA, what is a contract account, what is the difference between those, what is account abstraction, what are the use cases of account abstraction? So I won't talk too much about that.
00:06:26.006 - 00:07:11.122, Speaker A: What I want to discuss today is the case for smart accounts. So why do we need smart accounts? It's a bit related to the previous points as well. Of course, the case for native account abstraction, why we made this big bet at Argent to focus on native account abstraction chains and then have a short discussion on how we already unlock account abstraction on Stocknet today. So it's no secret that the UX of Web Three is really hard, right? And there are many reasons to that. But I think we have summarized there like the three main reasons. The first one is that security relies on the user secret, right? So noncustodial wallets require the users to keep a secret. It's a seed phrase.
00:07:11.122 - 00:07:50.066, Speaker A: Twelve or 24 words. And basically this seed phrase, as a newcomer, when you start interacting with the blockchain, that's the first thing you see, right? It's just in front of you. This is pushed by the wallet telling you if you lose that seed phrase, basically you're fucked. You lose all your funds. So from a user perspective, you would tend to have as many copies as possible of that seed phrase. But at the same time, if somebody else gets access to your seed phrase, you also lose your funds, right? So from a user perspective, then you don't want to have any copy of your seed phrase and mainly keep it probably in your brain somewhere. I don't know about you, but I don't trust my brains enough to do that.
00:07:50.066 - 00:08:35.646, Speaker A: So first issue, second issue is that users can't make mistakes, right? So if you make a typo in an address when sending funds, you lose the funds. In some instances, if you send the funds to the right address but on the wrong network, you lose the funds. If you sign a transaction on a malicious website, you lose your money. If you use a computer which has a malware that is targeting crypto on it, you are very likely to use your funds as well. So Web Three does not forgive and then everything is too complex, right? So in Web Three, users will interact with complicated financial primitives. Most of the time they don't even really understand what they do and the UX does not do anything to help them. So every operation requires multiple transactions.
00:08:35.646 - 00:09:13.706, Speaker A: Such as? ERC 20 approval, vault migration, LP, rebalancing. Complexity is just everywhere in web3. And so there I just put a few examples. This is a slide from one year ago. So it's not in July and August this year, but because of the issues I just mentioned, people lose their funds. And the people I have used as example there, they can probably be considered to be power users of Web Three, right? People who know what they're doing, who know what are the risks, who know how to overcome these risks. And even though they are power users, they still manage to use their funds.
00:09:13.706 - 00:10:11.838, Speaker A: And so it seems very complicated that people, mainstream people who are not security professionals or funds storing professionals will be able to use web Three without having the same issues. And so what are users doing today? They are basically turning to centralized solutions. Right? Again, this is a graph that is a bit old from 2022 today you could say in web Three we only have power users anymore. So it basically means that numbers are not that problematic anymore. But I would argue that with the next waves of newcomers, maybe in the next bull market in 2025, I hope, I think these numbers are going to be even worse than we have there now. Right? And so why do these users switch to centralized solutions? Basically because they offer familiar web Two UX. Web two has been there for a long time.
00:10:11.838 - 00:10:47.162, Speaker A: The UX has been refined, it's been polished, people are used to it. We have a pretty good UX in web Two, right? And so decentralized solution. They will offer basically easy onboarding, so there is no app to install login with email and password like you would do everywhere in web two. No transaction fee. You don't need to have ETH in your, I don't know, Coinbase account to trade USDC for die. There is a easy recovery when you lose access. So first of all, you don't have any seed phrase, right? There is this forgot your password flow that everybody knows in web two that is very easy.
00:10:47.162 - 00:11:33.574, Speaker A: You forget your password. Well, there is this flow in backup. It's not a big deal. Sometimes you don't even bother remembering the password because you know that there is this backup, there is risk detection and two FA. So on binance, typically if you send a huge chunk of funds or if you send funds to an address that you haven't interacted with before, you will be asked for two FA and then everything is in one click, right? Everything is easy. You don't need to do any ERC 20 approve if you want to spend your ETH on Coinbase. And so why are well users doing this and turning to centralized solution? I think it's mostly because for now, EOAS, they basically impose this trade off between self custody and user convenience.
00:11:33.574 - 00:12:18.942, Speaker A: And as long as we will have this trade off, self custody will lose. Simply users need convenience. Right? So what do you think is going to happen in the next years when there is going to be mass onboarding in web3 and crypto? Do you think that we will maintain the current self custody system where users need to manage their seed phrase? It's inconvenient, it goes against history. Historically speaking, people would just have gold under their mattress, right? But very quickly they have changed that and now they are using banks. If it's not convenient, not convenient, people don't do it. Or are we going to move towards custodial services like we have seen? There is a trend already where users will delegate their key management. It's much more convenient.
00:12:18.942 - 00:12:53.042, Speaker A: But the problem is that we onboard the mass of people to web3 using decentralized solutions that are very close to what we have already in the banking ecosystem. So can we offer the best of web two UX in web3? Of course, the answer is yes. That's why the question is there and the answer is yes, thanks to account abstraction. Now, account abstraction is not very easy to define. It's not something that's been defined very well. Some people will tell you it's abstracting the signer away from the account. That's right.
00:12:53.042 - 00:13:41.726, Speaker A: But it's a bit complex to understand. Some other people will tell you it's abstracting the complexity away from the user again, that's right, but it's a bit vague actually. Account abstraction is simply using a smart contract as an account. And once you do that, you can build basically any logic into your account and you can add a layer of intelligence to that account and using that layer of intelligence, you can improve UX. So, just to come back on a few of these examples of centralized solutions, easy onboarding. Well, on Stocknet we have what is called Argent web wallets, which is aka the invisible wallet, where you would simply log in with an email and a password. So it's seedless.
00:13:41.726 - 00:14:10.700, Speaker A: You don't have a seed phrase anymore. Fully noncustodial. Still argent does not have access to your funds and then a few other benefits. So that's possible with account abstraction, risk detection and two FA. Still, on Stocknet we have Argent Shield, which is a two FA. In some cases you will be required to FA by email or let's say by phone number. It could be also with your authentication app on your phone.
00:14:10.700 - 00:15:11.434, Speaker A: And what is important, I think, with two FA is to have this built in transaction review system where the wallet will be able to review your transactions and depending on the risk, ask you for two FA or not. So typically, if you interact with a DAP that is on a blacklist, you should be notified and probably used to FA. If you interact with a DAP that is on a whitelist or that is known as a valid DAP, then you should be told as well, no worries, it's probably a legit DAP. If your transaction is a bit shady, typically we see a lot of scams happening at the moment where you will swap some tokens, but the destination address is not the same as the origin address. Right. So then the wallet should be able to tell you there is something shady with your transaction. If you still want to go on, please do a two FA, easy recovery where same so social recovery and guardians.
00:15:11.434 - 00:15:50.140, Speaker A: I love this phrase here which says that basically when you lose your credit card, you just call the bank, you freeze it and you get a new one. Right? And that's exactly the same kind of mental model that we want people to have in Web Three, but without the bank, without the centralized institution. Right? And so you can choose who you want to trust. It can be friends and family, it can be a two FA authentication, a hardware wallet. You could still have a hardware wallet on the side that you only use to help you recover your account when it's lost. And so you don't even need funds on the auto wallet. So, yeah, good solutions with account at fraction and then everything is in one click.
00:15:50.140 - 00:16:38.486, Speaker A: That's of course possible with multiple. Now, I know there is a lot of emphasis that is put on intents this week. To be frank, I didn't really know what intents were before preparing for this talk. And so I did a bit of research and actually I love it. I also understand the definition of intent is not very clear, but that's basically what I would call a user action, right? The user wants to do something, doesn't care about what is happening under the hoods, in the engine, how many transactions you need to do that, that's none of the users business. Well, with multicolored, it's totally doable, right? So with just one signature, you can have many different calls in one transaction. So, yeah, that was for account abstraction.
00:16:38.486 - 00:17:28.790, Speaker A: And I think everybody here agrees maybe not. Sometimes you also have people who don't agree that account abstraction is really needed in the Web Three space. Now, what about native account abstraction? To talk about that, I just want to take maybe a step back and have a look at how a transaction flow works on Ethereum. This is with an EOA. So an EOA transaction, the user will sign a transaction with a ECDSA signature, which is the default signature on Ethereum. Transaction is going to be sent to the main pool, picked up by a validator, and then if valid is going to be added to a block. Right? But then some people, as we said, decided, smart people probably decided, okay, what if we could actually do account abstraction and use smart contracts as account, right? And as you know, a smart contract cannot initiate a transaction.
00:17:28.790 - 00:17:58.594, Speaker A: Only an EOA can do so. Right? And so they came with this workaround. That was before ERC, four three seven. So that was already a long time ago. Argent actually used to work like that, where the user would not sign a transaction, but would actually sign a message. And then with an arbitrary signature that could be used, it's not ECDSA per default, and that message would be sent to a relayer. The relayer would simply be actually an EOA, a centralized EOA.
00:17:58.594 - 00:18:31.902, Speaker A: So able to initiate a transaction, the message is put in a transaction by the relayer. The relayer signs the transaction, sent to the mempool, to the validator, and then the message would be recovered by the smart contract wallet for execution. That was good. But, hey, this relayer is centralized, right? So that's not perfect, it's not that good. And so we had to come up with something better. I guess even smarter people came up with that. And that is called ERC four, three, seven.
00:18:31.902 - 00:19:13.200, Speaker A: Right. We've been talking a lot about that in the past month. What ERC Four Three Seven does is that it introduces this concept of bundler, right? And what happens now is that the user will sign not a message, not a transaction, but a user operation. That user operation is sent to an alternative mempool where you have all user operation and then the bundler will pick up user operations and will bundle them together in a bundled transaction. The bundler is decentralized. So anyway, theoretically, anybody could run a bundler. I think the business models of bundler still have to be refined, but anybody could do it.
00:19:13.200 - 00:19:53.500, Speaker A: Then the bundle transaction is sent to the mempool, it is picked up by the validator and before reaching the user smart contract wallet, it has to go through what is called an entry point smart contract, which will unbundle the transaction and send the user operation to the right smart contract wallet. So that's, of course, much better. It's decentralized still. It's not perfect, it's not at the protocol level. As you see it's outside of the Ethereum protocol. But implementing this at the protocol level would be a lot of work. And so that's so far the best we have found.
00:19:53.500 - 00:20:51.020, Speaker A: And so if we zoom out a bit more, basically, that's what a transaction flow looks like. On Ethereum with ERC Four Three Seven, whether a transaction comes from an EOA or from a smart account, it all goes to a mempool and then it's picked up by a node. That's before, ERC Four Three Seven, sorry, but it had to go through the relayer. Right? And so with ERC, 437, we decentralize a relayer and we kind of introduce a second transaction flow, right? So transactions that are initiated by EOS, they follow the same flow as before. They go to the mempool picked up by a node and then on chain, while transactions coming from smart accounts, well, they do this different journey. And the thing is, they have to go through the entry point contract, otherwise the bundled transactions cannot be unbundled. Right? And that is a problem.
00:20:51.020 - 00:21:53.370, Speaker A: That is a problem because it makes account abstraction adoption only possible if DApps duplicate their UX. And let's take an example here with Paymasters, which is a very good example of account abstraction. So for those who don't know Paymasters, they enable DApps to pay gas fees for the users, or the users to pay gas fees in any currency, any token they would have, and not especially the base token, the Paymaster, they will interact with the entry point contract. So that means that on Ethereum with ERC Four Three Seven, if you have an EOA, you cannot interact with a paymaster, right? It's not the same flow. If you want to do that, you have to interact with a smart account. So DApps, if they want to provide an experience with Paymasters, they will have to detect whether the user is using an EOA or a smart account. If the user is using an EOA, then they can only offer the flow that we all know today, that is not that good and there is no Paymaster.
00:21:53.370 - 00:22:52.914, Speaker A: If the user is using a smart account, then the DApp can adapt basically the user flow, the user experience, the UI to make Paymaster happen. And I mean, that works with multicolored, that works with anything related to account abstraction features. The problem is, we believe at Argent that DApps won't do that before a very long time because DApps basically build for the users and the users for 95% of them are still on EOAS. For users to go to smart accounts and to use smart accounts, the experience that DApps will provide to smart accounts needs to be adapted, needs to be better than the one that is provided to EOS, but they will only do that if there are users on smart accounts. So it's a chicken and egg problem. And so to date, most DApps, they don't build with account attraction in mind. It's been around for months, at least weeks.
00:22:52.914 - 00:23:45.460, Speaker A: But the experiences that are built by DApps are still tailored to EOS and not smart accounts. And so just to give an example of how inertia works and how long that can, take the example of EIP 1271, that is mandatory. If you want your DAP to be compatible with smart accounts, because it has to do with smart contract signatures, you need to be compatible with EIP 1271, right? It's an EIP that has been around for five years, since 2018, but to date, many DApps still don't support EIP 1271. I have put a few of them there. You see big names. If you go to EIP 1271 IO, you will see that the list is longer than that. And these are only the biggest DAPs, but there must be hundreds of DAPs that are still not compatible with EIP 1271.
00:23:45.460 - 00:24:35.194, Speaker A: So that means they cannot even interact with a smart account. Smart account users cannot interact with these DApps. And it's been five years. So at Argent, we really believe it's going to take a lot of time for DApps to first be compatible with smart accounts. That's one thing, it's not done yet. And then to offer users an experience that is tailored to account abstraction. And so the next question is, what if we could take ERC, 4371 step further to unlock the full potential of account abstraction? So it would need to be built on ZK roll ups, so it's scalable, it would need to be integrated at protocol level so there is no compromise, no centralized relayer, no off chain protocol bundler.
00:24:35.194 - 00:25:08.058, Speaker A: And then we would need to have this single mem pool and transaction flow. So smart accounts become first class citizens in the transaction flow. There is one network that did that. It's called Dksync era. And as you can see, the transaction flow on Era is very much inspired by ERC four three seven. Right? So you have basically transactions coming from EOAS and smart accounts, they all end up in the unified Mempool. Then it's picked up by a bundler, which is called an operator on Era.
00:25:08.058 - 00:25:57.402, Speaker A: And then they still have to go through this entry point contract called a bootloader on Era. And while Paymasters will interact with the bootloader, so that means that on Zksync Era, even if you use MetaMask and EOA, you can still benefit from Paymaster experience because your transaction flow still goes through the entry point contract. So that is pretty good. Of course, you don't have all the benefits of smart accounts. You don't have multi call, you cannot do social recovery, et cetera. But from a DApp perspective, if I want to offer Paymaster to my users, I just have now to build one experience, one UX, one UI, and both EOAS and smart accounts users will be able to benefit from it. So it's much easier from a DAP adoption perspective, but we can still go one step further.
00:25:57.402 - 00:26:37.174, Speaker A: Right? And so there is this other blockchain that is called StarkNet. And StarkNet, they did something pretty amazing. So it's a ZK rollup of ethereum for those who don't know. And they decided to basically just start from a blank sheet. So they have a dedicated language that is called Cairo Ends Virtual Machine, which is called the Cairo Virtual Machine, which is optimized for Provable program. So it's optimized for zero knowledge proofs, which is what Stacknet does. It's a ZK rollup, right? I mean, it's a huge bet as well from their side, because it's not EVM compatible.
00:26:37.174 - 00:27:06.158, Speaker A: So it's much more difficult for builders to build stuff on Stacknet. They had to learn a new language, Cairo, from scratch. The documentation at the beginning was not that good. On Solidity, you have tons of documentation, and it's not easy to simply fork an application that is on another EVM compatible chain and bring it to Stacknet. It doesn't work like this. You need to rewrite everything. And the other big bet they did is to go 100% fully native account abstraction.
00:27:06.158 - 00:27:39.470, Speaker A: And so that means that on Stacknet you don't have EOAS anymore, they don't exist. You only have smart accounts, as you see, basically. I mean, the flow is also very much inspired by ERC 4237. But all users benefit from account abstraction, all DApps build with account abstraction in mind. They build their experiences leveraging what you can do with account attraction, because that's all there is, basically. So smart accounts are the only citizens still in town on Stocknet. So that makes account abstract fraction a de facto reality.
00:27:39.470 - 00:28:32.334, Speaker A: And so that's the last slide. I just want to finish off with that in that sentence that says intents are already a reality on stacknet. And so, I mean, this is basically a demo of a swap I did on Avenue which is a dex aggregator on Stacknet. And so from a user perspective, my intent there was simply to swap zero point to ETH and get as much dai as possible in return, right? And so Avenue, the DAP took care of finding the best route, the best rates to get me as much dai as possible and me as a user, it's not on the screenshot but I only had one button to push just the swap. I push the swap and then everything is happening behind the scenes in a multicolored. So that is what appear. You see that I'm going to exchange 0.2
00:28:32.334 - 00:29:19.310, Speaker A: e for some die and then in the actions, two actions behind that button, which are the approval of the ERC 20 token and then the swap in itself. But that means that from a user perspective we could have, I don't know, intents or user actions that would require 1015, maybe 20 different transactions or calls, let's call them calls. From a user perspective it's only one action and that's what is important. And then here, I just wanted to show this as well. So if you extend that Ethereum box there, you see that ERC 20 token. So the east that has been approved is exactly the amount that I wanted to swap. Right? I wanted to swap 0.2.
00:29:19.310 - 00:29:59.770, Speaker A: I will approve 0.2 simply because we can put behind or in a transaction as many codes as we want. Every time the user will want to swap again there is just going to be another ERC 20 approval. The user doesn't care. But from a security perspective it's much better, right? You don't have to infinite approve anymore, you don't have to type in there crazy high numbers because you don't want to be bothered by the approvals. And so as a conclusion, the UX of web3 can be on par with centralized solutions, if not even better. Thanks to account abstraction.
00:29:59.770 - 00:30:42.438, Speaker A: The masses, they care about convenience and account abstraction is how we will bring them convenience and how we will bring them to web3. Adoption of account abstraction requires a strong paradigm shift. I was saying there define new paradigm, that's not easy to define a new paradigm within the blockchain community. And so this shift is going to take long time. But already today on some chains with native account abstraction embedded, well, they are getting ready to onboard the next billion users that everybody's talking about. Yes, and also I just didn't want to stop without sharing maybe a few good reasons on account abstraction. So if you want to know more about the topic, these are very good articles.
00:30:42.438 - 00:31:06.900, Speaker A: What the fuck is account abstraction? Part One, Two and Three by Julian from Argent why we need wider adoption of social recovery wallets. By Vitalik smart Contract wallets Redefining Web three UX by Arna from Hashki Capital. This is a very good article and account of traction past, Present and Future by MetaMask. So yeah, that's it. I'd be very happy to answer questions if I can.
00:31:09.430 - 00:31:23.320, Speaker B: Yeah, I just want to know that since argent is focused majorly on ZK based chain, so how do you standardize the native account abstraction? Would account abstraction of software different from.
00:31:24.890 - 00:31:29.058, Speaker A: Is it different because definitely you don't.
00:31:29.074 - 00:31:30.086, Speaker B: Need bundles and stuff there.
00:31:30.108 - 00:31:30.294, Speaker A: Right.
00:31:30.332 - 00:31:36.860, Speaker B: So like standardization of paymasters on native account abstraction streams. How do you guys see about.
00:31:40.910 - 00:32:09.160, Speaker A: I mean, that's of course, a good mean argent is mainly focused on used to mainly on StarkNet. Yes, we used to work a bit on Zksync. I mean, standardization. Yeah. How does it happen at which level? We are basically bringing all these chains in the same application. That's one way of seeing standardization. Yeah.
00:32:13.000 - 00:32:28.248, Speaker B: So you show the chart about the number of users, centralized services, where you guys are in terms of user adoption and what about AA in general?
00:32:28.334 - 00:32:58.180, Speaker A: So you mean how many users yeah. So just to give you an idea, I mean, users in Blockchain always very difficult to define. Right. General idea. On argent X, which is our extension for Stacknet, we have 1 million downloads no, 1.5 million downloads and 1 million funded accounts because that's not exactly the same. So we could say 1 million users, but probably many users have multiple accounts.
00:32:58.180 - 00:33:01.590, Speaker A: But I think these are very good numbers.
00:33:05.230 - 00:33:38.290, Speaker B: Thanks for your presentation. Really insightful. I'm curious to hear a bit about how you envision the kind of proliferation of DApps on, you know, unique applications, unique use cases, and the role of argent as a wallet in facilitating the best UX. Argent was one of the first really strong AA wallets. How do you guys look at wallet abstraction on StarkNet for DApps? Is that something you're even talking about?
00:33:38.360 - 00:33:40.050, Speaker A: So what do you mean by wallet?
00:33:40.390 - 00:33:59.546, Speaker B: You know, in the ideal world, right, like I wouldn't have to go to a third party when I go onto a DAP and have to click, oh, you know, like argent go and use argent to interact with my DAP. Ideally, I just interact with the DAP and argent is a part of that story. Is that something you're I may have missed it, by the way.
00:33:59.728 - 00:34:26.290, Speaker A: No, it's a very good question indeed. That's something that's going to happen. It's part of the onboarding flow of users. I don't think I have the right feature here, but it's basically this one. So it's our urgent web wallet. When you use the DAP, you will basically have that right. So you can just use your email passwords and you log in into the DAP.
00:34:26.290 - 00:34:55.982, Speaker A: It's persistent across DApps. So this is linked to your browsing session. So if you remain in the same browser, you use another DAP that is also compatible with web wallet, you are automatically logged in and you don't really see the wallet anymore. There is a dedicated page. Each user has a dedicated page. You can go to that page and you will see your funds in there, but otherwise you don't see your funds. The DAP can decide to display the funds if they want.
00:34:55.982 - 00:35:25.222, Speaker A: They can display whatever they would want. But indeed for some DApps, and we are very bullish on Stacknet with gaming as well. With gaming probably you don't really know to know that you have a wallet. To see your wallet, you won't do trading or anything. So you just need to approve maybe transactions. And at some point when your wallet is empty because you have spent all your money, then you need just to top up. That's typically the kind of use case we could have.
00:35:25.276 - 00:35:26.422, Speaker B: So is this live?
00:35:26.556 - 00:35:28.722, Speaker A: Yes, this is live. It's live on StarkNet.
00:35:28.786 - 00:35:30.870, Speaker B: The embeddable wallet functionality?
00:35:31.290 - 00:35:43.180, Speaker A: Yes. I think what, seven DApps? The biggest DApps on StarkNet have it already. StarkNet is still a small ecosystem, but the biggest DApps have it. Yes.
00:35:44.050 - 00:35:58.942, Speaker B: Yeah. Hey, there's a great video from Julian on the invisible wallet. Where does the key live for the signer for their web wallet? I know they username and password login, but that has to resolve to some signing key somewhere.
00:35:59.086 - 00:36:22.054, Speaker A: Yeah. So that's very complex and cryptographic stuff. We just wrote an article that will be published, I believe next week. Yeah. So part of the key is in the browser. Part of it is in Argent backend. It's a bit of an MPC construction, but it's not really an MPC construction.
00:36:22.054 - 00:36:25.100, Speaker A: But I'm not able to tell you exactly where it is.
00:36:27.790 - 00:36:30.522, Speaker B: How much does it cost to set up the vault right now?
00:36:30.656 - 00:36:33.754, Speaker A: The vault? The wallet. You mean this one?
00:36:33.792 - 00:36:42.746, Speaker B: I remember I was like checked about 2020 and it was like at some moment when the guest going to the roof. $200 to open Argent wallet.
00:36:42.858 - 00:37:24.620, Speaker A: Yeah, exactly. So what you're talking about is Argent vault on Ethereum, layer one. And this is also part of the reason we decided to go to ZK Rollups. But indeed having a smart account on Ethereum is very expensive. Transactions on Ethereum are very expensive. When it's a smart account, you have all that logic that is added to your account and that makes it even more expensive to send a transaction. The way we market Argent vault today is that this is a wallet for wealthy individuals, people who will keep quite a lot, I don't know, 50K maybe already worth of value in their wallets that is on Ethereum, layer one.
00:37:24.620 - 00:37:32.282, Speaker A: Because we think, well obviously like most people that we need layer twos to scale and that's where it's going to happen for mass adoption.
00:37:32.346 - 00:37:33.840, Speaker B: How much is layer two?
00:37:35.010 - 00:37:37.950, Speaker A: I don't know, like thirty cents on stocknets.
00:37:38.110 - 00:37:41.874, Speaker B: And how you guys migrated from the Casing to start net?
00:37:41.992 - 00:37:52.422, Speaker A: Yeah. Migration? No, there is no migration. So maybe that's a bit related to the previous question. These are different accounts. You have different accounts in the same.
00:37:52.476 - 00:37:57.720, Speaker B: App basically any reason why just start net not any.
00:38:01.770 - 00:38:29.940, Speaker A: It'S basically it's native and there is no EOA. There is no EOA. So all DApps build with account attraction in mind and we are a smart account wallet so that's what we want. Of course it's much easier. So on stagnet everybody uses accounted fraction already on ethereum layer one and most EVM compatible chains. It's not the case the numbers of smart accounts that are deployed is extremely extremely low.
00:38:30.790 - 00:39:08.250, Speaker C: So my question could follow up with a couple of questions before. So you're saying right now earnings is just go straightforward more prospect right there won't be that much the same effort in taking single others but next step regarding on the ecosystem. So is that saying you guys are going to more attracting maybe totally brand new developer coming to web3 and building up games or something we don't have it now or are you still trying to bring some old folks like Insurre and other chance to there because it seems like a totally two different pathways.
00:39:09.710 - 00:39:21.186, Speaker A: Yeah so it's a bit of both. We are sense that StarkNet is one of the best solutions you have out there so we try to bring people.
00:39:21.368 - 00:39:24.340, Speaker C: Also want to hear more about that part from your point of view.
00:39:25.670 - 00:39:34.240, Speaker A: Okay I think we're running out of time. You can definitely find Anthony in person ask questions about it. Okay. Thank you, Anthony. Thank you.
