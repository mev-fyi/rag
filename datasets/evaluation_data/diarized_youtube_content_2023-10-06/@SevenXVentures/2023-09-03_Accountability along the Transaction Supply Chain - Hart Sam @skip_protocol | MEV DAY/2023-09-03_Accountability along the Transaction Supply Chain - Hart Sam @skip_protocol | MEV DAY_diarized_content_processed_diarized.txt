00:00:01.050 - 00:00:43.740, Speaker A: Thank you all for coming for the invitation. I'm Sam Hart. I work at Skip Protocol, which is mev company that works primarily in the Cosmos ecosystem but kind of in the application specific ecosystem more broadly. I have a really quiet voice, so maybe you all can of can quiet down because I'm not going to be able to compete with you. So just to overview the talk going to say a little bit about Skip. I'm going to talk about how to make off chain actors more accountable. That's kind of the thrust of this talk.
00:00:43.740 - 00:01:36.890, Speaker A: And then I'm going to give an in real life analogy talk about kind of an accountability framework that I've been thinking about and speak about some applications that we've been working on at Skip. So there's a little bit about Skip. Like I said, we primarily work in the Cosmos ecosystem, application specific ecosystem more broadly. We build Mev and UX solutions for application specific blockchains. And we do that kind of all along the transaction supply chain. So we have an order flow solution which today does cross chain routing and dex aggregation. And we have a block space solution which is kind of like a combination of PBS and Pepsi with actually even more features.
00:01:36.890 - 00:02:29.530, Speaker A: It includes things like lanes in protocol Oracle. We actually have a variety of fee markets that different chains can select from. I think we're going to have the first credible Mev auction with multiplicity or like multi proposer consensus and then like I said, Pepsi like commitments. We actually have things that are even more powerful than Pepsi where the entire chain can basically require proposers to commit to certain commitments. And then I'll talk a little bit about this relayer jobs board. The notion of a relay is a little bit different in Cosmos. It's actually kind of an entity that ferries transactions over IBC.
00:02:29.530 - 00:04:20.030, Speaker A: And just generally how I think about this is like we're kind of building connective tissue between users and chains and then we also are thinking about kind of order flow that exists between different chains. And so this is kind of where the IBC network comes in as this standard message and proof protocol. So y'all have heard a lot about intents today, but the kind of working definition I'll use here is basically one where intents are introducing a degree of freedom into the system and asking solvers to leverage that degree of freedom to improve some condition of satisfaction that could be efficiency UX something else. By doing this, we introduce a principal agent problem with the solver and the options that you have on the table to kind of minimize the principal agent problem are to reintroduce constraints, to change the information structure of the relationship between principal and agent, change the payoff structure or to turn it into an Iterated game. And I'm not going to address these explicitly, but the general shape of what I'm describing kind of touches on all four. Okay, so this is just IRL analogy the restaurant industry. This is all of the bagel shops in New York City and I want to just use this as an example of an intent satisfaction framework.
00:04:20.030 - 00:05:20.580, Speaker A: So if you walk into a bagel shop in New York, you're pretty much guaranteed to get a high quality product, fast service. No matter where you go, there's kind of bounds on how bad a bagel you can get in New York City. And so why is this, what's going on here? And we can kind of just track the kind of market structure to understand a little bit more about what's going on. So first of all, customers have repeat interactions with the establishment, with the bagel purveyor. The restaurants themselves rely heavily on reputation to attract new business. So like Yelp reviews and word of mouth and things like this, the restaurants also enter into long term relationships with the service workers. Like their working contract, they have personal relationships coming to work every single day.
00:05:20.580 - 00:06:31.500, Speaker A: And then there's a managerial structure that kind of oversees the quality of service, the quality of the product that they're producing. And then moreover, customers actually have a direct relationship with the service workers. They tip them, they have personal interactions. So there's long term relationships and kind of incentive structures that hold all of these actors together. And what I'm going to kind of pause it here is that maybe not for every single incentive game, every single kind of intent satisfaction system, but for some intent satisfaction systems we could actually have a very kind of diverse, robust set of actors that are involved in satisfying intents. May not track into this HFT top of block auction, but for a lot of other stuff I think that we can make it look a little bit more like a New York City bagel map. So this is kind of like one of the key frameworks that I've been working with here.
00:06:31.500 - 00:07:36.058, Speaker A: Actually outside of work. I do a bunch of writing with this research group called Other Internet and we've been going kind of pretty deep into the kind of institutional theory literature. And so some of this is kind of drawing from that. And basically there's kind of a notion of accountability that exists in institutional theory that has two parts answerability and enforcement. First off, I'll kind of just read this definition of accountability. So A is accountable to B when A is obliged to inform B about a's past or future actions and decisions to justify them and to suffer punishment in the case of eventual misconduct. And there's a lot here but yeah, you can kind of separate it into the notion of answerability and enforcement.
00:07:36.058 - 00:08:27.390, Speaker A: So a lot of the kind of mechanism design that we have were familiar with in crypto really focuses on enforcement. The bread and butter is like you put up a bond, you make it slashable under some conditions. There is also kind of the opposite of this. You can reward good behavior. The answerability portion is really kind of underexplored in my opinion. The kind of way that this is understood in the literature is like a responsibility to explain or justify behavior. So that requires attributability and this kind of means of justification.
00:08:27.390 - 00:09:33.970, Speaker A: And so we're just completely unfamiliar with builders trying to justify why they were doing X, Y or Z. They are completely fungible actors from the perspective of the protocol. And that kind of misalignment in the assumption that the protocol is making is allowing builders to really kind of become dominant entities. So anyway, accountability kind of like brings these two concepts together. So answerability kind of substantiates enforcement if you have the attributability and the kind of justification, you're able to tell whether you should enforce or not. And enforcement obliges answerability like you're saying that I am going to enforce if you don't answer to the accountability structure that I'm putting in place. So this is how every institution in the world exists.
00:09:33.970 - 00:10:56.270, Speaker A: If we want to model this for our off chain actors, then we can think about so going to kind of contrast this with a user interacting directly with a chain, which it's very rare that this happens these days, but it's a helpful kind of benchmark. So if the user wants to interact directly with a chain, there's no delegation whatsoever. And basically the user needs to be accountable to themselves. Protocol needs to be accountable to itself. However, if the user wants to delegate some responsibility to a third party, so the solver here, they're delegating this capability and then in order to kind of overlay the correct accountability structure, they need to delegate the answerability to the solver. So the solver needs to answer to the user or to the protocol and then the user is also delegating the enforcement mechanism to the chain. And this enforcement answerability loop that exists between the chain and the solver is what allows the user to have comfort making this delegation.
00:10:56.270 - 00:12:30.262, Speaker A: Alternatively, typically, I think when a lot of people are talking about intents, they're talking about like, okay, the user is allowing for extra degrees of freedom in the execution of their transaction. However, you can also invert this and say actually what's happening is the protocol is allowing for a wider range of possible execution paths and they are the one that's delegating that responsibility. These are kind of like equivalent statements, and you can formulate a kind of accountability system that works with either of those and it's just a helpful kind of like that inversion, I think is helpful in a lot of the things that we're doing with our protocol design, which is oftentimes giving applications more agency over their own protocol or their own transaction supply chain. Okay, so just like zooming in even further. This accountability loop exists between if we're going to take the chain and the solver, there's always this kind of like countervailing force in the opposite direction. So if a solver is kind of answering for the satisfaction of some intent, they have answerability going in the direction of the chain. The chain is enforcing the correct satisfaction of that intent.
00:12:30.262 - 00:13:22.830, Speaker A: Well, on the other side, what's happening, I mean, there's a contract between these two, the chain and solver, an implicit contract, and the chain is answering to the solver. They're saying, I'm going to compensate you for this. The solver, on the other hand, is enforcing is enforcing their behavior by basically like threatening to exit the system. So I'll leave and I won't build here anymore if you don't satisfy if you don't compensate me properly. Yeah. So this is just a helpful kind of like lens to bring to protocol design. And I've just found it very useful in kind of breaking down and kind of composing a supply chain.
00:13:22.830 - 00:14:42.706, Speaker A: So this is one project that we've been working on. We've been working with dYdX to bring their chain to. So just for context, the Duidx is building their own Cosmos SDK chain. They have a combined mem pool and order book. So all the validators are in addition to basically they're taking in transactions, they're actually doing matching themselves and then they're gossiping off other transactions and they're expected to perform this gossip and matching behavior correctly. And it's all happening off chain. So what we did, working with Dodx, we decided to run a globally distributed set of nodes to collect copies of each of the validators books and basically build out this kind of metric of order book discrepancy where we're measuring expected PNL versus what we're seeing from the validators that are giving us copies of their books.
00:14:42.706 - 00:15:50.970, Speaker A: And this is by no means a perfect solution to solving mev. However, it's a start. And one of the nice things about this is that it gives us information over a long time scale. So we don't know if validators are performing any single match or gossip event correctly. However, over weeks and months, we can tell if there is divergence in the expected behavior versus what we're seeing from validators. And the kind of idea that I want to drive home here is that what this does is it really kind of presses on this notion of answerability. So by giving more kind of surfacing, more information about validator behavior, by making validators answerable to their actions, we're able to start to bootstrap an accountability system for the validators.
00:15:50.970 - 00:16:29.560, Speaker A: There's going to need to be a lot more to really make the whole system kind of come together and be stable long term. But it's a good start. So this is kind of what this looks like over time. This is real data from the testnet, not from mainnet. Of course it isn't live yet, but this green line is. You can see dYdX research. They were running a node that was misbehaving, and you can see over time it diverges and you can kind of clearly see that signal stands out.
00:16:29.560 - 00:17:02.558, Speaker A: There's a lot of gray questions about how you actually set the threshold. And this is going to be kind of an evolving conversation that the community is going to have together. And I can talk more about how that exactly is going to work. If you want. One thing that's really important to know about why this works at all and kind of what the environment looks like in Cosmos is. So in Cosmos, validators are known entities. They're kind of branded entities.
00:17:02.558 - 00:17:58.934, Speaker A: I mean, you could actually see in this last, these all have names and I don't know, friends Validators, they project a very strong brand identity. They do information, you know, provide informational content. They do this because they're trying to attract delegations and the relationship between delegators validators and the protocol there's actually like a through line and like a trust supply chain that we can leverage in Cosmos. So Validators are a great candidate to delegate to because we can leverage the latent reputational network within Cosmos. And I mentioned before, they're branded. They kind of really try to differentiate from one another. And not only that, but they have a long standing relationship.
00:17:58.934 - 00:18:35.842, Speaker A: The validator has a long standing relationship with protocol. The Delegator has a long standing relationship with the validator. So this really helps to make sure that that trust supply chain is upheld over time. One of the other really interesting things about Cosmos is that this reputation is kind of informally transitive across the network. So those validators are branded. They carry over the same brand across different networks. And so if they misbehave on one network, you're going to know it.
00:18:35.842 - 00:20:14.660, Speaker A: I mean, people will call you out on Twitter, basically and talk about on the forums and that degrades their relationship across all the other networks that they're validating on. And this is something that is pretty widely understood in Cosmos. And one of the reasons that this notion of mesh security, which is basically enshrining this transitive relationship into the Staking protocol feels very natural for people working in Cosmos just to drill into this a little bit more. Kepler, which is the kind of most popular wallet in Cosmos, has this feature which is kind of like friends tech for validator delegator relationships in a way. So if you delegate to a particular validator that now opens a chat channel with them and you can talk to them about their preferences and what their setup looks like and how they're voting on things. And so this kind of just further reinforces the kind of trust relationship and this kind of long term yet social relationship between the validator and Delegator actors. So this is something that I'm working on right now.
00:20:14.660 - 00:20:56.394, Speaker A: So IBC is the kind of main bridging and cross chain verification protocol in Cosmos. It's really nice that there's a standard for this. It makes things a lot easier. And it's a very robust generalized framework. However, one thing that's just absolutely wild is that the entire IBC relayer network. Relayers are the entities that move packets from one side to the other. Happens entirely autonomously without incentives.
00:20:56.394 - 00:22:09.286, Speaker A: Right now there are a couple of exceptions. There are a few foundations that have kind of granted a service contract for relaying, but basically Validators do this as a way to solicit delegations. So this just kind of goes to show how powerful the trust and reputational relationship is between Delegators and Validators. That Validators are willing to expend resources and just pay transaction fees to ferry these packets across because it's like doing good for the network. So yeah, kind of an incredible phenomenon. However, this structure doesn't necessarily result in the most robust packet relay system. So basically like the main channels Osmosis to the Cosmos Hub or something like that, you'll get good timing guarantees and you can generally expect your packets to get to the other side and reasonably quick.
00:22:09.286 - 00:23:02.214, Speaker A: However, there's a lot of inconsistency in the network. So we're taking a similar kind of lens to what we did with dYdX and applying it to the relayer network. So the first thing that we're doing is we're creating kind of a shared standard, this like SLA. So a sponsor who might be a chain or a foundation can craft an SLA. They can say, okay, I want relay service that is no greater than 1 minute and I want X number of relayers on this channel. And they can actually basically create an objective function and then relayers can bid to satisfy that objective function. These are going to happen over the course of a month or a quarter or a year.
00:23:02.214 - 00:24:38.280, Speaker A: So they're going to be like long term intense. But we think that the market structure that should exist here looks much more like a utility, like a public utility than it does a high frequency trading system. And yeah, we think that making it so that the relays are really kind of competing along the right, putting them in the right frame of mind so that they're trying to really optimize this SLA can actually make it so that we can leverage their kind of optimizer mentality to focus on network robustness rather than latency games and things like that. So yeah, how do we make this a win win for users and solvers? We want to make this just like a little bit less adversarial for kind of solver ecosystem. A little bit less adversarial. That's kind of the point of application specific blockchains is you can actually segment out certain application behavior and this may not hold for every single if you are dYdX, this is going to be more challenging. But if you're an application specific chain that's just doing, I don't know, like provisioning akash for instance, like provisioning GPU resources, you might get away with a much less adversarial system.
00:24:38.280 - 00:25:39.770, Speaker A: So how can we kind of engender this type of relationship. By the way, this is my favorite bagel shop in New York. So first is we can one thing that's leading to this more kind of competitive environment is that contention along block space is the combination of block space contention and whole block building introduces this monopolistic behavior. I think the last talk addressed this directly. So we are introducing application specific block space. So we have lanes we can actually segment out the top of block from a lane that's specifically for an oracle, a lane that's for rest of block or EIP one five of nine type transactions. So we can actually segment out the market structure.
00:25:39.770 - 00:26:34.682, Speaker A: We're breaking the proposer monopoly with a kind of multiplicity like system. We can make it so right now searchers are kind of motivated by obviously profit, but also just kind of stunts. You see a lot of really crazy composed transaction types and I kind of attribute a lot of that to just trying to make headlines or something. There's no need for a lot of this. And I think a lot I mean, it's cool, but I think one of the reasons that we're seeing this is there's also just like no venues to measure alternative behavior that we actually consider to be healthy. So I think we should try to make metrics and try to praise other forms of behavior. So we obviously want to make longer term games here.
00:26:34.682 - 00:28:23.342, Speaker A: So leveraging the delegator validator relationship like I mentioned and making it so that off chain actors have repeated interactions that that are kind of recorded by the system and they have kind of skin in the game to continue. And then finally we just need to kind of change the narrative a little bit about what we're trying to do. So focusing rather than focusing on kind of value extraction like value production, how can intent solvers actually generate more value for users, for the protocol itself? How can we make it so that they're optimizing for these things? How can we really praise and create dashboards like metrics things that are really inducing them to perform this type of gregarious behavior? Yeah, I would think that's about it. This is my contact information if anybody's interested. One of the things that's interesting about Cosmos is it's very dynamic rich ecosystem, like a lot of differentiation in the application design that you see. One of the things that's maybe interesting for this crowd is that we are well, part of the Pepsi design came out of this paper that I wrote in Cosmos, the Atom 2.0 paper.
00:28:23.342 - 00:29:03.980, Speaker A: So this notion of block space futures was like I came up with. And that has inspired Barnaby and some of the EF folks to think a little bit more about these proposal commitments. And we're actually building a lot of this and so we're going to be able test it in the wild. And we have a really healthy kind of dialogue with the EF about where this could go, which is really nice to have that, I don't know, collegiate interaction with another ecosystem. Yeah, thanks very much.
00:29:07.150 - 00:29:31.202, Speaker B: It might be a mix of the questions I had for the last two with Pepsi. One of the concerns for me is proposer could enter a commitment that's negative for the like, I'm curious, like, what you think. I guess the model might be slightly different with Cosmos, but yeah, how would think about that?
00:29:31.256 - 00:30:26.342, Speaker A: Yeah. So what we're starting with and something that Ethereum will never do, could never do is basically making it so that, okay, there are these proposer commitments, but the protocol, like protocol governance, every chain has, like, top level governance, basically, they vote on whether the validators should make this commitment and then all the validators are committed. That gives a lot of flexibility and gating to what the commitments could be. And then one of the other things that we could do is we could actually make it so that, okay, the protocol governance can vote. These are the commitments that are eligible to be made. So that's an easy way to experiment as well. You could turn them on and off at the top level.
00:30:26.342 - 00:31:33.770, Speaker A: Again, not something Ethereum would ever do, but it provides a really easy way to prototype these things and it makes perfect sense for Cosmos. I have been thinking about some ways that Ethereum might be able to implement this. I'm going to publish an article about this relatively soon so I won't leak too much. But I think that there's some clever ways that what are we trying to do here? We're trying to create some kind of accountability between the protocol and the proposer. And what we're actually trying to do is make it so that the welfare of users is maximized with the commitments that proposers are making here. So we can actually frame it within this same kind of language. And one of the kind of interesting indications here is like, okay, well, maybe users should have a say in what commitments can be made within the protocol.
00:31:33.770 - 00:31:37.660, Speaker A: So that's something I've been kind of, like, toying with.
00:31:42.590 - 00:31:57.620, Speaker C: In the front of the presentation. We use the profile loss of a validator kind of as a metric. I was wondering if you have considered other metrics, because that's I guess just the profit just comes from the revenue from the delegation without.
00:31:59.430 - 00:32:01.650, Speaker A: The revenue from the delegation.
00:32:02.630 - 00:32:04.690, Speaker C: The revenue for the validators.
00:32:05.670 - 00:32:35.200, Speaker A: Yeah, the revenue for the validators. Well, it's the PNL of the book. But to answer your question, yes, we've thought about some other things. This is kind of the well, dYdX came to us and they're like, here's kind of how we're thinking about mev in the system. And it really focused on PNL. So that's why it looks like that. But I think it's a good first order approximation of behavior in the system.
00:32:35.200 - 00:33:18.540, Speaker A: One of the other things that we kind of suggested that's further down the line could be explored is doing kind of signed commitments to objects in the Mem pool. So this would look a lot like Narwhal if people are familiar with that. You can look at the kind of Dag, you can look at the Mempool itself as a Dag and you can actually understand behavior about transaction propagation and withholding and whatnot through that Dag that's very much down the line. I don't know if we'll be doing that really interesting.
00:33:21.810 - 00:33:38.200, Speaker B: I might have missed this, but in terms of the dYdX off chain order book, what's the metric guys are trying to maximize for to kind of say that protocol is honest. How do you exactly do you know that your order is hit the top of the bottom of the book in general? It could be.
00:33:40.490 - 00:34:25.330, Speaker A: Yeah, I think I can go back to a lot of this was kind of informed by Dwaydx, so it's like some of their concerns, but basically it's like so we can run nodes in the network and then we can simulate and we get transactions as if we're another node. We can simulate what books might have looked like and what the PNL might have looked like and then compare that to the observed PNLs that we're getting from validators. So that's the general thrust of the metric.
00:34:27.290 - 00:34:35.942, Speaker B: Does that kind of ignore validators? Like, for instance, could a validator ignore a buy or sell order?
00:34:35.996 - 00:34:48.234, Speaker A: It's actually not based on the on chain commitments. It's based on these ephemeral order books that are being shared among the validators. Thank you.
00:34:48.272 - 00:34:50.106, Speaker B: So here's all the talks today and.
00:34:50.128 - 00:35:01.480, Speaker A: We will have a recording. Can follow us on Twitter. Thank you.
