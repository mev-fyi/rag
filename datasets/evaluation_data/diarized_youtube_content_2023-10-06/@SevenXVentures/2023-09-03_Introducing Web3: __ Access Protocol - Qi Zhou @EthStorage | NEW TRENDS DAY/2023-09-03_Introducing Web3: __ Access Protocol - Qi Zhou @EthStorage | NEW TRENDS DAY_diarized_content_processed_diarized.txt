00:00:00.170 - 00:00:53.070, Speaker A: So first of all, thanks everybody for coming here. So to attend my Webster access protocol talk. So this is the talk that we also gave at ISAC which we have invited speaking session there. So first a quick introduction of myself have been here in the websuite space fulltime since 2018. Before that I was a software engineer at Facebook Google working on autism distributed systems infrastructure and so every time I was attracted by the future of the web3. So I decided to become a full time developer and also focus on the Ethereum ecosystem. For example, I have a couple of the EIPS for a zero four which is today's talk and also a couple of EIPS and also I have a bunch of the writings on Ethereum research and also Ethereum Magician.
00:00:53.070 - 00:02:01.678, Speaker A: Also we received multiple grants from Ethereum Foundation, both mainly focused on the data availability research and also layer two technologies, for example data availability sampling research and also Ether Storage itself which is a research on proof of storage algorithms related to off chain data on top of Ethereum smart contract. So, first of all, what is Rapid assets protocol? It's defined in ERC 4804. So you can take a look at the standard from the Ethereum EIP ripple and the full name is called web3 URL to EVM call message translation. It is also Internet assigned Number Authority register UI which means that we basically own this web3 comma slash prefix and also the target of this URL is able to render web objects that is hosted by a smart contract. So here is a quick skin of web3 URL. It's very similar to Http. So sometimes we call decentralized Http.
00:02:01.678 - 00:03:36.290, Speaker A: It has authority where in the Http is a domain or IP address, but in our case it is a smart contract. So you can use in its ENS name or the contract address zero x and 20 bytes of hex. And you can also specify the chain ID so that it is natively, support MultiChain, and also provide additional information about how to call this contract, regarding which method and what are the parameters and what are the example, what are the data going to be returned, how to rename. So with this one we are able to now using a similar Http cell link but we are able to access the smart contract content and be able to for example to verifiably to check what the content would like to display to the users. So you can check the EIP here and we also have our front page which is right now it has two versions, one version is HTP version definitely and there's also a Web three version which I really should put there. So why we need this access protocol? So you may heard of IPFS, you may heard of a bunch of other protocols, but why we needed this native access protocol to render objects on smart contracts. So one thing that we observe is that more and more NFTs they are now moving to be fully on chain.
00:03:36.290 - 00:04:53.050, Speaker A: For example that here is a couple of the NFTs cyberblocker nuns moonbirds and also like their narrative is like to be truly fully decentralized as an NFT. Not only the smart contract associated with the Token ID should be owned by the users on the Ethereum layer one, but also the corresponding metadata. The asset itself should also be owned by the users. The users, the owner have the right to first forever access this data the same as the smart contract itself. Second has the ownership to for example I may be able want to delete the data or make some changes of this data based on the corresponding logic that is allowed by the NFT smart contract. So they spend I believe tens of thousands or even some hundreds of dollars to upload all these data images using different type of format. For example, this is Bitmap, this is SVG with different multiplayers, other block is using JavaScript to render and this is also on Bitmap.
00:04:53.050 - 00:05:39.862, Speaker A: This is really interesting application especially I believe this is very important to NFT owners because if they really care about the ownership of the data of the images which they pay maybe one user or ten user to buy NFT. And so I take a look closer look of these smart contracts. I was quite surprised that because when I browse this Uri of the Token and tell where basically these images are being accessed by OpenSea or Blur and it just returns a centralized server say hey, all the metadata and the images is now hosted by this perhaps AWS.
00:05:39.926 - 00:05:41.754, Speaker B: Servers google app engine.
00:05:41.872 - 00:07:14.760, Speaker A: Sorry, google App engine, that's kind of engine. Okay, yeah, also this is a 97 using IPFS. This says hey, why we do need to rely on third party trust even though the data is already available on top of Ethereum, why not just build an access protocol to directly access this content without any third party trust and we can fully verify those content directly. And that is the original motivation of FCSS protocol which we want to basically inherit most features HTP so thanks to HTP provides so many rich features combined with HTML so that now we are able to reuse all these main features but at the same time we just replace some small parts. For example, we just placed authority with the decentralized one. It can be a decent contract or address and it tells define a way to how to code a smart contract to for example display the images of the first Token ID or second Token ID or maybe 100. So that's the motivation that we store to define Webster URL and then to experiment all this on chain data.
00:07:14.760 - 00:08:15.322, Speaker A: And then this web3 URL was submitted on February last year and was finalized this year after one year's. All kinds of experiment, discussion, reviews with EIP editors. So another question is now we have this standard still there's a lot of extensions that need to be finalized, but now Israel be able to support a lot of interesting type of applications, how we are able to use this web URL so that we are able to experiment all these features. One way is to use the gateway. So with the gateway, we just replace basically the authority and put in the gateway subdomain. And then the rest of the field will be passed according to the EIP. Four a zero.
00:08:15.322 - 00:09:12.574, Speaker A: Four to the corresponding code data and the gateway will change this message and call the correspondent message to the ethereum and definitely this is rely kind of like we call Wack 2.5 solution at the current stage because we have to go through this transition. And this is also the gateway that support a bunch of the links, a bunch of the chains, and at the same time, our community developers, they just voluntarily come. Oh, this is a really interesting idea. So how we are able to make it to be fully web free. And so there's anomalous developer and he put a lot of effort, say, hey, he come up with an extension so that now you. Are able to type web3 and type the link.
00:09:12.574 - 00:10:24.130, Speaker A: Then it will automatically translate to the EVM esacore messages called JSON RPC server, which is configurable similar to MetaMask. And now it's able to access this content and display on the browser. So this is, I would say, very like future of vision, the future about how the Rest native be able to use existing Copolyte browsers to access this content. And also there's another developer. Oh, this is actually basically how it works. And actually another developer, which is also a community developer, they just come up with its browser, actually its own browser that is able to type this WebCL so that now you can also browse all the content that be available on her blockchain. So there are a bunch of applications that can be enabled by webcss protocol.
00:10:24.130 - 00:11:39.290, Speaker A: The initial application would definitely be NFT images so that we are able to render those images natively. So for example, Cyber Brockers, they upload all the media data that is they call SVG layers and on chain so that they say hey, people never be afraid of losing their data on chain. In order to display those content we deploy a contract which is you can imagine this is kind of a renderer contract, will tell how we are able to render this link with a random block with token ID. Then it will retrieve the corresponding on chain data from the Cyberblocks smart contract, put them together and then be able to display it using a CSS protocol. So this is the very early experiment that we say how we are able to serve those empty projects. It's just very simple, straightforward, a simple contract that follow the standard and be able to do that. Another thing now.
00:11:39.290 - 00:13:07.394, Speaker A: Looks like with us three SS protocol we are now able to transfer EVM to a decentralized Http server. Which means that basically we kind of be able to experiment all the Web Two applications that are building on centralized Http server into Web Three and then say hey, why not we are doing some more fancy or more aggressive applications. So early this year we download all the Vitalik's blog which is I believe about 40 megabytes and then say hey, let's try how we are able to help vitalik to run his block on top of Ethereum rather than his centralized server. So we upload all this thing and upload to the uptronoma because it has its DAC with much lower optimal cost. That's something that I will also highlight some problem that needs to solve. But with this smart contract now we are able to have the vitality to have his blog long life on top of Ethereum layer one, layer two and that is something that we can envision when the web3 has become so popular. And also the scalability problem has been addressed by all kinds of techniques.
00:13:07.394 - 00:14:30.898, Speaker A: For example say K snark and also for example some idea that we are proposing we are able to deploy a lot of new type of applications similar to web two but on top of web3 with combination of a lot of native features that web3 can unique features that web3 can offer. So for example, in the future I would imagine Ethereum.org itself should be also hosted on top of Ethereum. Or maybe another extreme case just like while thinking is like for example tornado cache created concern the censorship attack like for example the tornado cache code GitHub repo is now frozen archived. Because of this, the Department of justice has censored this website even though people can still access it, but it's not able to work on it. And with smart contract and also a lot of technology that we are building, we are able also to build basically GitHub on top of Ethereum. And so now we are able to develop Ethereum on top of Ethereum using all this technology that we are building.
00:14:30.898 - 00:15:43.766, Speaker A: This may take years to be realized, but this is just some crazy ideas that with all these things that's possible now we are able to create a completely new domain to not just do these calculations of these DAX but also a lot of applications that now web two applications are now possible on top of Ethereum. So there are a lot of other applications that we are experiment. For example decentralized blogger, decentralized jobbox, decentralized email, all kinds of these applications. So it's still at early stage but it has demonstrated very vivid, I would say ecosystem to demonstrate a lot of possibilities. So I have described a couple of the advantages motivation of doing web3 il but there are also a lot of blocking issues, challenges that we are facing. One issue is the storage problem on EVM. So we know that EVM will replicate all the data to all the nodes.
00:15:43.766 - 00:17:09.426, Speaker A: We right now have 5000 nodes, which means it will be super, super expensive to store all this data, to replicate the data to all the nodes. A quick calculation is that right now the storage cost of one gigabytes will take about 10 million and that is definitely affordable to be able to have this technology to be massively adopted. Right now we are using a solution that using Nova with its data availability committee which offload some of the storage tasks to their centralized service. But at the same time we are building even advanced solutions that we are able to build a core storage roll up which we will have a side event tonight with Agileayer and Celestial. So that now we are able to reduce this cost to one, to the 1000 and also be able to scale the Ethereum storage capacity to petabytes. And also thanks to Ethereum Foundation, we also receive a grant to support our work, research work on this direction. So for Ether storage, basically we say that Ethereum is moving towards its scalability roadmap.
00:17:09.426 - 00:18:11.302, Speaker A: One big direction is computation. So how to be able to achieve much faster or more transaction per second at the same time. Say hey, those NFT, those front end of this DeFi, all these applications require a large amount of the storage that have almost the same level of the Ethereum security or for example lifenes, censorship, attack, all these things. So the goal is like whether we are able to be able to improve the Ethereum storage capacity in terms of space using similar roll up ideas. And that's the initial idea of ease of storage. So that we are able to build a storage roll up rather than the computational roll up and achieve a bunch of goals into terms of lower speeds and also higher capacity. And everything is using Ether and also for anyone with very minimal storage capacity.
00:18:11.302 - 00:19:07.450, Speaker A: Right now the design is four terabytes. It can be able to decentralizely join the network, download the data, prove the storage over time and then get a corresponding reward. So with combining with its storage and Ethereum virtual machine, we are basically be able to mimic the current web3 infrastructure which we will have application server, we will have storage services, but from a user perspective it just submit a single for example, transaction. I write a tweet, write an article, write a comment to the centralized services and the resting will be handled by all these centralized components. While at the same time on the public Ethereum, we are actually approaching that I would say world computer goal. So here is a quick comparison. I don't want to go through a lot of these details.
00:19:07.450 - 00:20:37.710, Speaker A: The major difference is like for example clone roll ups, becoming a node that hosted the roll up state there's no such incentive to basically running a for example backup sequencer. In general it will be generally the project side will host a couple of the backup sequencers or backup nodes make sure that the liveness of the network. But with Easter storage the goal is to be able to build this using Easter as incentivized payment token and also our proof of storage algorithms. We are able to have a larger number of the replicas or nodes that host the corresponding the data and the hosting can also be proven using our Snark algorithms and then be verified on top of smart contract. So we are expecting the large number of the physical replicas which also solve a lot of existing problem that Roa is facing. For example verified Dynama problem. Also one other question is what is the difference with storage versus existing decentralized storage system? The one major difference is storage is building on top of Ethereum data availability technologies.
00:20:37.710 - 00:21:50.800, Speaker A: So it's a public storage system while Falcon RV they use comparative channels to upload the data. And second is storage is designed for high value dynamic data at the same time Falcon RV, they are designed for static files with very limited semantics. For example RV, the users are not allowed to delete any data that is uploaded to their blockchain and filecoin to update very small pieces of data will be very inefficient in filecoin. So storage we are able to dramatically scale the storage but offer key value store semantics which much much richer semantics. Second is the last thing is storage is highly integrated with Ethereum. So all the users they just only use in the wallet has the Ethereum in their wallets. And also from developer perspective as long as they understand smart contract and understand all the development stack like chuffle Waffle, Solidity, they can easily use the storage to perform all the applications tasks that the user and the developer would like to do.
00:21:50.800 - 00:22:52.322, Speaker A: So we believe with the story roller we want to not only use Ethereum security but at the same time we can also reuse Ethereum ecosystem or the users and this is the key factor we believe for the basically massive adoption. So here is a couple of technologies there to enable all this. So for example, first we have to make sure the data is successfully published to the layer one, layer two network. And so here we are working on data availability technologies. We are helping the Ethereum Foundation to solve some Dank Sharding problems. And so we have a grant received from Ethereum Foundation and for the Easter storage itself. It's basically to build a decentralized layer two storage network and be able to verify the storage on top of layer one.
00:22:52.322 - 00:24:11.550, Speaker A: And on top of our invented proof of storage algorithms. And also we have the grant from EF two support the research. And lastly, Webster access protocol is you can imagine the application layer for ease of storage and also ethereum, so that now we are able to access all this data both in terms of layer one, smart contract and also layer two, ease of storage and display this content on top of the fully decentralized access protocol in browser gateway. So in the future we believe like Ethereum will drive most innovations, we believe that it will become the world supercomputer. Suppose we solve this scalability problem and with all these solutions we are able to allow everybody in anywhere to use Ethereum and enjoy all the benefits that Ethereum offers and at the same time we are able to make the whole network more even more decentralized. So we can basically migrate a lot of web 2.5 projects to fully web3 or a lot of existing web two projects or can be also now be able to support it on top of Ethereum full ecosystem.
00:24:11.550 - 00:25:03.434, Speaker A: Here is our timeline. Our web3 SS protocol is already online so feel free to go to the website and browse all kinds of features, deploy your contract and now also support Ethereum testnet. We also have a testnet to experiment this, so if you need testnet token, feel free to reach out to me. The reason we run our testnet so that we can essentially have infinite token to experiment all these crazy ideas. And at the same time we are now doing a lot of work with integration with EIP four four, that is the Ethereum current version of DA or pre version of DA. So there's a lot of changes. For example, they just finished their testnet on DevNet on seven and eight, and there's a lot of changes on APIs.
00:25:03.434 - 00:26:32.300, Speaker A: And at the same time, we closely follow all these changes and provide and contribute our libraries, for example, to be able to support EIP four ecosystem so that we can experiment all these advanced features in early stage. And also we are building this layer two network with Snark Prover which is also built on top of definitely EIP 44. Net and also for example native browser integration thanks to our Anomalous developers that created such significant work to support web3 AI at Chrome. And also we have a couple of the talks organic talk that to tell what we are doing and how we are able to contribute to the whole web3 ecosystem in the future. Definitely we would like to integrate it with the Dankshotting that is the famous Ethereum DA solution and also bunch of other work that needs to be done. Thanks for attending my today's talk. So I would like to happy to see if anyone has any questions both in terms of application, technical or any other.
00:26:35.230 - 00:27:02.820, Speaker B: Yeah, I do. I wonder what are the implications of this like Ethereum storage comparing to for example IPFS as like ex co founder of the NFD marketplace, I know how unreliable IPFS nodes are, how usually it takes like 10 seconds to retry. For any NFT you usually get like broken images. And I wonder how essentially it's faster and reliable if you remember storage is.
00:27:03.190 - 00:27:11.590, Speaker A: Yeah, so let me repeat a question. So it's regarding some service quality of the file pointer.
00:27:12.090 - 00:27:25.382, Speaker B: I wonder where actually is data stored and how reliable is that and how fast could you actually retire the data? Could you actually compete with like cloudflare CDN and all this stuff in terms of speed?
00:27:25.526 - 00:28:16.458, Speaker A: Yeah, that's a great question. First of all, I think this is more related to retrieval like retrieval market, how we are able to ensure that we are able to fix or deliver this content to the users. Our retrieval market is a complete model. It's a little bit different from Falcon RV. It's more ethereum side perspective. So right now the Ethereum retro market is like ethereum have a bunch of PV nodes about 5000 and then there's no guarantee that everybody can obtain the ethereum fix and balance or any storage slots in fixtum of some kind of latency. But at the same time, when I become a new node in the Ethereum network, all those nodes will voluntarily share their data.
00:28:16.458 - 00:29:05.894, Speaker A: So that for example, for me, I frequently set up the nodes. It took about half days to become an ethereum node. At the same time, there are a couple of services. For example Ethereum, the most famous one, and Alchemy and other list of others. They provide these services of the Ether core to query all this network information kind of a centralized way, but with much much higher quality of service. And lastly, Ethereum is also building called portal network. You can imagine that it's a decentralized Ethereum like JSON RPC network that store this data, but it doesn't guarantee any quality of services for its storage.
00:29:05.894 - 00:30:02.410, Speaker A: It's similar because it is a natural ethereum layer two. So that you can imagine this is a super set of ethereum. Which means that we also have a bunch of nodes, storage nodes that run in the PT network. It does not guarantee any latency of the data can be retrieved. That is the same issue as the basic auto blockchain. And second is that we are projected there's a similar market, it can be maybe inferior something that we are basically working with so that they can offer kind of a centralized but verifiable ritual market. It may provide some rain limiting for free users, but at the same time, for example, suppose IMMR big project like Mirror XYZ completely is a storage providers for any traffic or they can itself can be storage provider to set up their network.
00:30:02.410 - 00:30:55.120, Speaker A: So there are a bunch of weights. The thing is like the replication factor of Isa storage will be much higher than Filecoin because filecoin is kind of like private storage market. So basically when a file coin I want to store data, I find some storage providers and pay the corresponding contract but very small amount of replica at the same time. Which means that it would be harder for example for inferior or some public services to find the storage provider and retrieve data because in general they may not likely to pin the data on top of IPFS. So there are a couple of major difference there and we don't want to reinvent view just adopt the best practice of current Ethereum network has both in terms of P two network and also the retrieval market.
00:30:57.010 - 00:31:03.402, Speaker B: So it's essentially the same as layer two chain but it's exactly designed for storing the data.
00:31:03.476 - 00:31:04.098, Speaker A: Right.
00:31:04.264 - 00:31:07.950, Speaker B: And it obviously supports roll ups with Ethereum.
00:31:08.110 - 00:31:14.690, Speaker A: Yeah, but actually it does not have a chain. It does not have a chain. It is a modular store.
00:31:14.760 - 00:31:18.918, Speaker B: So you fully rely on the existing Ethereum infrastructure to store the data.
00:31:19.004 - 00:32:11.190, Speaker A: Yeah, you use Ethereum ledger to store the data. So the ledger just stored so you can imagine the Ethereum ledger using IPFS it just stored a content hash in our case the Ethereum ledger that's using just L one as an example. It just contained the commitment. But unlike IPFS, nobody can tell that the data can be retrieved or not out of Ethereum. We will tell periodically that hey, for this data cortisol needed commitment there is Oracle immune. Yeah, that's not compressed proof tells that the data that are actually stored by a larger number of nodes and this is a proof and this is really different. I would say much higher in terms of liveness for the data built on top of Ethereum.
00:32:12.970 - 00:32:13.830, Speaker C: Thank you.
00:32:13.980 - 00:32:17.240, Speaker A: Yeah. Next question probably can start.
00:32:18.330 - 00:32:55.150, Speaker C: Thank you. I have two questions actually, but I can start. We are building a layer one CTO mentioned to me about ADH storage before because we are looking for a solution for the storage. But I think that from you speaking I can say mostly you support layer one or their two. But we are an EVM chain but building on top of pandemic. So we just wonder will you support other EVM chain beside?
00:33:07.370 - 00:34:03.450, Speaker A: Yeah, so right now the webcss protocol is support multiple blockchains. Actually it will be very easy to support additional blockchain as long as the blockchain follows Ethereum JSON RPC standard to allow its storage to support another layer one. The one major thing is to solve the proof of publication problem because we want everything to be public. Which means that the data using core data model will be super slow. So you can imagine like the core data basically EIP data availability is a scalability version, scalable version of blockspace and S storage is a scalable version of the world state of Ethereum. But this is a dependency. So otherwise user may save one to 1000 of the storage cost but the upload cost is still the same.
00:34:03.450 - 00:34:15.898, Speaker A: So that the major cost is still be blocked by the upload cost. That's why we are working with a couple of the Das to help to solve this problem besides Ethereum DA, I'm.
00:34:15.914 - 00:34:42.360, Speaker C: Kind of curious because we want to maybe have our midnight launch next year or public night launched at the beginning of next year. So is that because I say you roadmap you plan to launch dive night this year and type night next year two years later. So we wonder if it's still available to use it even to our next year.
00:34:44.010 - 00:36:05.074, Speaker A: So our roadmap is a little bit faster because we do not need to wait until the Dank shot in to be ready to launch the network. It just need to be wait for the EIP 44 so that we are primarily tested on EIP 44 that is the current they call it forward compatible version of Dankshotting. And with this feature, once that is fully tested, then we can definitely because it's modular, then we can easily plug in into any other EMM network as long as there's DA solution or worst case can also using core data. But probably the gas saving will not be so significant. Yeah, sorry, just wang mining. So let me question, is there any mining mechanism of the whole system? So there's a mining but we call it proving. So basically when I'm MMR storage provider, I store a copy of the data and then I can prove I store this data over time.
00:36:05.074 - 00:37:17.720, Speaker A: Then our system is going to reward anyone with the corresponding storage fee which is the one to one over M where M is the total number of a physical replica in the network we call fair distributor fee distributor. But this process, this proving process is actually the same as the mining process. But we do not need an independent blockchain to complete this mining process because all this verification logic can be done in eastern smart contract and a lot of complicated computation can be done using Snark too. So that's why we do not need to set a new chain and do a lot of new things like pre compiles or new features to support this mining process. Yeah, it is some kind of mining. But the main goal is to able to fairly distribute the fee to the storage provider so that everyone is expected to receive one over M storage fee over this time where M is number of replicas. Yeah.
00:37:21.410 - 00:37:25.038, Speaker C: Hi doctor, quick question on the programmable data.
00:37:25.124 - 00:37:25.422, Speaker A: Yes.
00:37:25.476 - 00:37:36.786, Speaker C: Could you give some use case scenarios for programmable data storage on chain? Because I feel like the very obvious difference is that they are not programmable, right?
00:37:36.808 - 00:37:37.586, Speaker A: Yeah, exactly.
00:37:37.688 - 00:37:51.638, Speaker C: That's my first question. The second one is how flexibility? What's the flexibility you think for private preserving private data storage? Because that's just what we are very interested to look at.
00:37:51.804 - 00:38:49.594, Speaker A: Nice. So first thing regarding programmability, I will say there are some two different you can imagine the impacts of programmability. So first of all, the filecoin case let's firecoin case. When I give a link of filecoin, it is always static either I can show images that never changes. Or either I cannot open the file. This is the IPFS case in the programmable storage cases, because a smart contract will have the logic to organize the data, where to put it, how the user opens. So every time when I call the contract with the same link, it's able to dynamically return the content that the application logic and storage logic that they would like to return.
00:38:49.594 - 00:39:24.590, Speaker A: So, for example, each time when I read Elon Musk tweets, the first time I read and tomorrow I read will be different because the application will say oh, Elon Musk has new tweets, has new article or new comments and that will dynamically return the content back to the front end. And that is the problem that we want to solve. And that is the major difference of web 1.0 and web 2.0 because 1.0 is everything static. Probably everybody maintain their website using FTP upload these things.
00:39:24.590 - 00:40:11.662, Speaker A: Now we have web 2.0, everybody just using browser, interact with the servers with some link that can dynamically run in this content. And this is first why this probability dynamic content is very important. Second is you can also control this data ownership. So, for example, I upload some data on top of this. For example, Ethereum and Tekalab is a storage and I would like to, for example, to update this data. For example, I can update these tweets and basically who is able to update these tweets? The logic, the ownership logic is managed by smart contract.
00:40:11.662 - 00:41:27.286, Speaker A: So the smart contract can say oh, I'm the owner now, I can do this kind of task, I can modify or even I can delete other comments or I'm not authorized to do so. So I don't have right to, for example, remove the data from the smart contract. So that is the power of we are able to combine the EVM, that's programmability and also the storage together and that is able to enable all types of applications that web Two can support. Especially, there's a very interesting story that when Google launched Gmail on April, the first people was saying oh, Google is making a joke to offer gigabytes of email system. But later everybody found oh, this is reality, they really did it. And people are surprised how they do that. And actually on their backbone they develop a very large scale QVL store called BigTable with their also very scalable application logic, put them together so that they are able to store a large amount of data using a distributed system horizontal.
00:41:27.286 - 00:41:50.660, Speaker A: You can easily horizontally scale and offer gigabytes of the spaces to the users. And that is the magic that Google Facebook has been done in 20 years ago. But now we want to repeat this magic in the web Three world and that is according to my previous experience and inspire me why we need this kind of infrastructure in web Three.
00:41:52.150 - 00:41:54.330, Speaker C: And the second one privacy preserving.
00:41:54.430 - 00:43:27.810, Speaker A: Sure, privacy preserving, yeah, privacy preserving. That's a good question. So one thing is like we are working dealing with the public storage market so it's similar to the blockchain ledger itself. So for the privacy right now we don't offer any protocol level support on privacy but at the same time we have already have some demo applications you can try. For example there's email so that I can using the destination public key and increase using the public key so that we only allow the sender and sender and also recipient to be able to decode a message that carry using the storage and that's one way to solve this end to end privacy problem. There's also called private drive which is basically I can upload data and it will basically using the user's private key to generate encryption key because for example Metamarks signing logic will generate deterministic signature even though the Ects allows like randomized signature and so with that it's able to using that as the encryption key to include data for anyone as long as a private key also be decrypted data and demonstrates to show oh, this is the summer song legal documents I want to store forever but at the same time I don't want everybody can read it.
00:43:27.960 - 00:43:31.874, Speaker C: So that's like a private vault in this storage, right?
00:43:31.912 - 00:43:45.800, Speaker A: Yeah, there's a demo there even though it's still using on chain data on the testnet but that is how the ace of storage will work together with the EIP for you for upgrade. Got you. Thank you.
00:43:48.350 - 00:44:03.440, Speaker C: Start from an application stand one so because I was expecting you can provide storage for Ethereum definitely but you also mentioned that you can even provide security even users of Ethereum so kind of curious maybe I heard it wrong.
00:44:04.370 - 00:45:09.620, Speaker A: Yeah, I think so. One thing is we want to reuse Ethereum security but at the same time, which I would say more precisely word is to maximize the security with Ethereum. But because the storage provider network is a little bit different with validated network so that the security level will be a little bit different but phase like everything fix some of proof of storage is verified. On top of Ethereum, the data passing through will also go through Ethereum from DA. So that we want to maximize the security from Ethereum but actually Ethereum right now, this state or its storage security is also open question. Because from vitalik saying is that as long as there's one node that store Ethereum full node, then the ethereum state is secure. There is one over one they call 100% security versus like 51% or 66.7%.
00:45:09.620 - 00:45:29.770, Speaker A: But how we are able to define precisely this security is a little bit tricky but phase like it's 1% so that it's compared to other higher security assumptions that it will be much easier to achieve.
00:45:30.110 - 00:45:52.830, Speaker C: Great, thank you. In your corporation you just mentioned there's on chain programmable programmable so what does this mean? Because you mentioned biocon and array don't have to become what does onchain.
00:45:54.790 - 00:46:26.730, Speaker A: So on chain programmability means that we are able to so using the smart contract to manipulate because it's key value store right? So the key can be from application what the key looks like and the value is how the corresponding the value associated with the key how to change this value who is able to change the value is programmed by smart contract.
00:46:28.430 - 00:46:38.030, Speaker C: It'S different than my imagination. I was imagined that users can build smart contract on top of it and then maybe there is a VM on top of et storage.
00:46:40.850 - 00:47:14.922, Speaker A: So from read part there is emulated VM that is able to also read the data and in VM level to mutipate but that is only for read only purposes like demonstrating the website read tweets. So we are able to have one ether code to able to return the whole website where part of the data is from is a storage. Yeah, because we are not able to modify EVM by itself to the transaction. Yeah, thanks.
00:47:14.976 - 00:47:23.500, Speaker C: I don't have any other questions. Okay, so thanks for sharing. Let's move to the next top.
