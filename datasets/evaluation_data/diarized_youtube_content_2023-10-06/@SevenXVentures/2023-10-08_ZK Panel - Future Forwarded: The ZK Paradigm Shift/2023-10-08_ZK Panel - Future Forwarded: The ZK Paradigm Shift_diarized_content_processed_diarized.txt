00:00:00.170 - 00:00:20.174, Speaker A: Have James from Figment Capital as the moderator. And we have Victor from Manta, Sinka from Delphinist Labs, carting from Hyper, oracle, Antonio from Polyhedral and Dongmo from Seller. Let's welcome. And now I'm going to head my mic to James. Like, James is your stage now.
00:00:20.292 - 00:00:22.240, Speaker B: Okay. Thank. Okay.
00:00:23.730 - 00:00:24.702, Speaker C: All right. Hi everybody.
00:00:24.756 - 00:00:38.386, Speaker B: So go. Thank you. Grace. Like Grace just mentioned number one. Thank you seven X for having us here. Very cool venue, great lunch. And then also, my name is Jim.
00:00:38.386 - 00:00:48.326, Speaker B: I'm the managing partner at Figment Capital. We're early stage blockchain fund. But really this is not about what we do. It's about what these guys do up here and the teams and what they're building in ZK.
00:00:48.518 - 00:00:49.546, Speaker C: And so what I'd like to do.
00:00:49.568 - 00:00:56.958, Speaker B: Just first, really quickly, if you guys could introduce yourselves, maybe just like a couple lines about what you're building, what your team name is, and then we.
00:00:56.964 - 00:00:57.886, Speaker C: Could take it away with a couple.
00:00:57.908 - 00:01:03.166, Speaker B: Of questions, a couple of hard hitting questions. Start from take it away, Victor.
00:01:03.198 - 00:01:35.690, Speaker D: Yeah. Okay. Hi everyone. I'm Victor from Manta network. Manta is like right now, it's a layer two built on top of Ethereum and it's using Op stack, and it's the first one used last SDA. And on top of it we have universal Circuit, which is really unique, enables solidity developer, build new use cases. Like without know anything about cryptography, they can just call contract and build some decay applications.
00:01:35.690 - 00:02:02.180, Speaker D: Yeah, I think right now, recently we just launched a minet and it's actually yesterday, and our testnet has been running two months and there's like 200,000 address and like 4 million transactions there from Privacy DeFi and keep working on more use cases on the ZK space and create this platform for all of the ZK application. Thank you.
00:02:03.190 - 00:02:50.770, Speaker A: Awesome. Hi, everyone, I'm Antonio from Polyhedra Network. Polyhedra builds the infrastructure for web3 interoperability using zero knowledge proof techniques. One thing we are building and promoting, which is largely adopted by a lot of our partners and projects, is the ZK Bridge, which offers trustless and efficient cross chain interoperability protocol for all projects, for data transfer, for asset transfer, and for general message parsing. So about me starting around 2018, we were still at school, we were a group of ZKP researchers when we talked about the idea of ZK Bridge and also optimizing the algorithm layer of the ZKP protocols. Then later we founded Polyhedral Network. And here we are.
00:02:50.770 - 00:02:51.620, Speaker A: Thank you.
00:02:53.910 - 00:03:17.180, Speaker E: Hi, everyone. I'm Cartin from hyperoracle. So hyper oracle is a programmable. ZK oracle protocol. So ZK Oracle can enable smart contract for more computation like complex compute, like Statistic compute, and AI compute, and also will enable more data source for your smart contract to bring the smart contract to another level.
00:03:18.990 - 00:03:43.730, Speaker F: Hi. This is Shinka from Daphne's Lab. We are actually building solutions that people can run their WebAssembly bytecode in our virtual machine so that it does not only give you a result, but also gives you a CK proof which actually can help the browser application to leverage the SIKI technique and connect browse applications with web3 applications.
00:03:45.770 - 00:04:15.230, Speaker C: Hi, I'm Mo from Satter. Satter is one of the biggest interoperability protocol for blockchain today and some of you probably used a seabridge before. We processed about $15 billion transaction volume in the last year across 40 different blockchains. And more recently we ventured into the ZK space introducing a new initiative called Previous, which is a ZK coprocessor enabling smart contract to have new kind of capability for heavy and data rich computations.
00:04:17.330 - 00:04:50.306, Speaker B: Awesome. Cool. Great to meet all you guys. So, I guess number one, yeah, maybe talking we'll start with Seller Mo, because when you look on the websites of all the projects that are building here right now, seller is the one that doesn't have a whole lot about ZK just yet. So maybe do you mind talking a little bit about what you're moving into with ZK and how the technology is kind of like enhancing the offerings that Seller is going to provide to applications as well as users?
00:04:50.498 - 00:06:10.798, Speaker C: Yeah, sure. So Seller was a project that was founded by Fuefront starting in 2018 and we started to work on layers of scalability, actually back in the days focusing on state channels. And over years, the entire state channel stack naturally morphed into blockchain interoperability and Setter is continuously evolving over the years. And we were also looking at initially the ZK bridge to enable ZK capability for the interoperability stack of Setter, but very quickly find out that we start to realize that the entire scope of decay co processing is much bigger than just Bridging. And therefore, for example, like today, if you look at the most simple example is if you look at uniswap, if you look at PancakeSwap, what's the difference between these DEXes versus some of the centralized exchanges? One of the biggest difference there is there's no VIP program, VIP trader programs in these stacks. Why is that? Right, because blockchains and smart contracts fundamentally are very bad at data rich computations. For example, if you really want to implement some sort of a VIP trader program in these taxes, you kind of need to do accounting for every single trader while only 5% of the total traders are actually VIP traders.
00:06:10.798 - 00:07:11.718, Speaker C: Or you do on chain direct proof of transaction inclusion using block headers, which is extremely expensive even for a small portion of users. You want to kind of incentivize and do user retention on. So this is where we feel that this kind of a data rich and heavy computational capability is missing in the blockchain space today, and therefore reintroducing and to expand the initial scope of ZK Bridging to a more generalized data analysis capability and data injection and processing capability where for any kind of VIP traders that the VIP trader can easily generate a proof JK proof stating that I have traded maybe $30 million in the last months on Uniswap and then get a VIP status in a very cost efficient way. The application scenario for this is very broad. You can actually do a lot more things for gaming, for social and so on and so forth. So this is how we kind of morphed into kind of this new initiative, basically.
00:07:11.804 - 00:07:48.482, Speaker B: Very cool. So about proving maybe certain activity or that you've done something or perform some sort of activity over a given life or a period and then rewarding those users retroactively kind of for the activity that they've participated in, which is sort of something that we see a lot in web two and in gaming and stuff like that. So it's pretty interesting. And in trading maybe a little bit as well. Okay, cool. So I'm going to kind of jump into a couple of questions we have here. As I'm sure a lot of you all know, I don't know what the ZK expertise is in the audience, but over the last, I would say like twelve months or so, we've seen a real big excitement for ZK technology.
00:07:48.482 - 00:08:44.450, Speaker B: Just more broadly in the crypto space, we heard a little bit about token security on one of the speakers before, but there's also like cryptographic security, right, which is pretty cool. And as a result of that, there's been a lot of investment into ZK teams. A lot of you guys have either raised or announced raises really recently. So congratulations on that. But I guess the one question that I have is sometimes people ask how far along in the future is ZK? Is it moonmath? Is it way in the future or is it coming soon? And so I guess the first question I would ask is when you're building a ZK project, how do you balance the need to bring the product to market quickly, to maybe service some needs that are needed right now with taking the time to ensure the security of your protocols and specifically ZK circuits. But more broadly, how do you balance those two things? Victor, do you want to go first?
00:08:44.520 - 00:09:36.146, Speaker D: Yeah, sure. Yeah, I think this is really interesting question. From my perspective. I think there's really different direction right now on ZK space. One side goes to extremely research focus. It's based on the assumption, like what if the ZK application or Zkevm already have massive adoption, which even more adoption than existing ethereum, and what kind of acceleration you need, what kind of proof aggregation you need, what kind of everything you need. That's kind of the direction I think on the research side it's kind of needed, but I think in the next five years or next ten years can achieve this kind of adoption.
00:09:36.146 - 00:11:27.686, Speaker D: But on the other side, I think some other projects just really try really hard to find really early users to really use DK application or Decay, use cases like Bridge, even Zke EVM or all of these new use cases like maybe existing use cases but it actually includes ZK compared to before. So in this kind of case, this direction is actually need this kind of project work really hard and acquire user really aggressively most of the time talking the concept doesn't work, talking the backer doesn't work. It's just build a real product and you need to have interface same as other web two UX same as Web Two at least existing Web Three product or also the performance like same as the existing product. That's actually really hard because it takes a lot of computation. But I think we try really hard on this area. I think sometime if you try to get adoption, try to do liquoration really fast, there are kind of a balance between decentralized and about to make everything using ZK or like how's the end game endgame and basically the current use case to face the yeah, and I.
00:11:27.708 - 00:11:48.926, Speaker B: Guess, Antonio, I want to ask you as well, because I know we spoke a little bit earlier last year and it sounds like Polyhydra's done, like, has built a bunch of stuff in ZK technology. So what is your thought on how to build responsibly but also securely and also getting products to market that people can play with use and try to find that product market fit?
00:11:49.108 - 00:13:03.174, Speaker A: Yeah, I love a saying that Menta is always saying because Kenny is also always saying there's no other industries focused on infrastructure so much as we do. There are so many infrastructures in the market and sometimes people say there are probably more infrastructures than applications in the market. So it occurs to us to Polyhedra that well, we build infrastructures. We were a group of researchers initially, but it occurs to us that by the end of the day only the infrastructures with massive adoptions would be able to survive because there are too many there. Eventually infrastructures need to be used by applications and we need end users. Well, as Victor was saying, we are not getting users by promoting our technology, we are not getting users by telling them hey, who are backing us? We are getting to the users by actually proving to them that how easily and how good our product is and that's what we are focusing on, for example, because you're saying how long we are on the journey of ZK. Well, I would say we are just getting started, but we started maybe several years ago.
00:13:03.174 - 00:13:44.594, Speaker A: So we do have something. So we are on our way. One thing about Zkbridge is that well, people may think ZK is slow, it might be expensive in terms of onchain cost, but actually when you are indeed using Zkbridge, you will find that ZK bridge is actually super fast. Our finality for making proofs well the making proofs for simple consensus like finance marching could be 0.1 second and even for full consensus of Ethereum, we're able to do that within 8 seconds. So the finality could be like the total finality, including like on chain confirmation could be several, well, maybe 30 seconds. So that's one thing we are doing.
00:13:44.594 - 00:14:01.562, Speaker A: I think we are doing great. We had over 9 million transactions over the past five months, so roughly a million and a half every month. And we are already having over a million and million something active addresses using Zkbridge already.
00:14:01.696 - 00:14:08.566, Speaker B: What do those transactions look like? I'm curious, do you have any sort of double click into the types of transactions?
00:14:08.678 - 00:14:09.146, Speaker A: Yeah, we do.
00:14:09.168 - 00:14:09.882, Speaker D: We actually do.
00:14:09.936 - 00:14:41.266, Speaker A: So we know it's in the bear market. We still have to admit that in the bear market. Well, in the bear market, people tend to hold but not trade. So actually a lot of transactions are coming from NFT sector. That's one sector we're aiming at because, well, if you look through the history, when there's depression, people focus on games, entertainment like NFTs. So we are focusing on the NFT field. We are helping NFTs and games and Metaverse make them across different chains.
00:14:41.266 - 00:15:20.690, Speaker A: Because in the bear market, we have fewer users than in the bull market. So it's especially important for projects to attract users from all different blockchains. And that's what we do. That's one thing we provide for our partners. We help them to create a MultiChain setting where they're able to attract users on all different chains and users are able to easily move their assets, move their information, move their data around. So no matter which chain you started with, you can always use any of the applications powered by Zkbridge on any chains. And that's also the user integration in the NFT field.
00:15:20.690 - 00:15:26.420, Speaker A: So that's the strategy we're taking in the down market and it turns out to work very well.
00:15:27.110 - 00:15:48.362, Speaker B: And you mentioned that we've got a bunch of infrastructure builders up here, so maybe talking a little bit about the infrastructure of some of the teams. So, Carton, you're building Hyper Oracle, you're looking for fast, you're looking for high performance, maybe. Can you talk a little bit about your infrastructure stack and what you're I believe you're moving towards Asics as quickly as possible, right?
00:15:48.496 - 00:15:56.526, Speaker E: Yeah, doing Asics is one of the options, but right now we're thinking more practically it's utilized bunch GPU in the market right now.
00:15:56.548 - 00:15:56.974, Speaker C: Right.
00:15:57.092 - 00:17:08.120, Speaker E: So back to the topic about how to make the ZK DAP that can more accessible for people. I think this problem should separate into two parts. The first part is how to let developer develop Zkdap overnight, right? Because right now normally it takes a PhD two to three months to learn about DSL to program a ZK circuit that's safe. I think the cost for develop a ZK that is still very high at this moment. So in Hyper Oracle, what we do is that we try to simplify the process to develop a ZK DAP by enable using the custom logic, right, by assembly script and then people can just developer can just write the ZK DAP without knowing zero knowledge proof. And then compile the assembly script into the ZK warsum and then generate the proof for the custom compute and also use the circuit we made for the statistician. And that's the first part to make the process to make a ZK DAP is as easy as possible.
00:17:08.120 - 00:17:44.000, Speaker E: And then the second part is like this ZK industry is so big so we need more cooperation to have more function into the system. And in ZK Oracle system we're glad to have polyhedra and have Daphness that Zkwasm to empower some usage that is just really hard for one project to achieve. And so I think it's a really open space. Everybody's the majority of them are open source. And so by combining these two factor, we can make Zkdap become really wild really soon.
00:17:45.170 - 00:17:51.220, Speaker B: Very cool. And for Dell Finish Labs. You guys are building Zkwasm, right?
00:17:51.750 - 00:18:45.810, Speaker F: Yeah. When we actually start building blockchain applications, we find actually fascinating about the idea that code is a law. But to be more precisely it's the code running in the Easter room. It's the law. Right? So when we actually trying to expanding the idea of the definition of code, we would like to have some code running out of the Isram to be the law as well. Right? And we started with doing something called CK like JavaScript, right, where and we somehow failed because dynamic language does have some kind of feature like closure that it's not very easy to compile to CK circuits. And after that we tried the idea about actually run and design CK virtual machine that supports WebAssembly and that actually works out pretty well.
00:18:45.810 - 00:19:20.526, Speaker F: And I would like this virtual machine to serve as like Python style in the CK world because Python is not that quick but it actually glues lots of other components. And this is our approach. We write a virtual machine that actually can be easily extend to connect other CK system and CK proofs so that people can using us as a glue in their CK solutions and bring fast adoption for the programs to leverage CK. Thanks.
00:19:20.708 - 00:19:50.890, Speaker B: Very cool. And so I'm going to change the questions up a little bit. What do you guys think about the recent proposals to augment ZK roll ups security by using Tees trusted execution environments for two factor authentication? Maybe first, if anybody wants to explain what I just said, that would maybe be but or I'm happy to do it. But you guys are the speakers. So does someone want to take a stab?
00:19:53.070 - 00:21:14.210, Speaker C: Yeah, I can give a brief explanation for that. So basically the idea here is that you have Zeke ROAP and you have proverbs that generating proofs. What happens is if approver or circuit has issues and therefore you generate either wrong proofs that can kind of settle into wrong states and therefore still basically users money eventually. And the idea is that, okay, how about we just augment an additional layer of trust execution environment and put all the block production logic into that execution environment and basically we only kind of confirm or finalize the block on chain when two sources matches one is a ZK proof and the other is the Te based execution environment. So that's kind of the premises of this. I think in general this is very valuable first of all and coming back to the question you just mentioned basically about security and adoption and kind of a launching project into public. There are just so many kind of security preparations you can do before launch, right? So Te is one and the other is of course audit, a lot of audits and I know a lot of folks here spend a lot of money on audits, me included.
00:21:14.210 - 00:23:03.746, Speaker C: But what we have been championing in the community and we have been building bridge which is the most targeted space for DeFi hacks to date and we have been targeted in all round like in all angles that you can imagine in the past. So one thing that we have been championing in the community is to build your application or infrastructure stack in a persimistic way that is very important. So it used to be the case that we do audits upfront and we launch the protocol into the wild and just cross our fingers and hope for the best. And that doesn't work actually. Right, so we have seen this time again and again, bugs get discovered like half year into the protocol running on main net and therefore we believe that for any protocols or any infrastructures or any applications we launch in the wild, there should be built in defensive mechanisms like circuit breakers, like kind of a bridge invariant checkers. For example, all the JK row apps should have probably already have invariant checkers. Basically saying that if there are some tokens burned on the VM side, on the layer two side, the matching amount token should get released on the layer one side and continuously monitoring that, right? So this kind of a continuous monitoring and defensive mechanism that is built in into the application from day one is very important to have a smooth launch in the sense that even if there are something that get missed in the auditing process or in the kind of internal review process, the worst case losses are always bonded.
00:23:03.746 - 00:23:12.602, Speaker C: So that's something that I think we are kind of championing in the Bridging space seeing so many kind of different hacks and also kind of generally to the blockchain community.
00:23:12.736 - 00:23:16.220, Speaker B: Awesome. I feel like victor, I feel like you have something to say about this.
00:23:16.990 - 00:24:25.566, Speaker D: Yeah, I just feel this is really interesting question because in the beginning mean at first I totally agree what I think this is only square doing this right and basically I totally agree this is to find a more practical approach to get adoption and launch as soon as possible. But I think at the same time, in long term we need to understand all of the Te is like a black box and with it get more and more decentralized. It's actually not secure, so there's some risk on top of it. And also scroll is a zke EVM. So it finally should goes to ZK. But in the beginning, the multi program I think work. I can't hear to judge because we are actually using op, like not using fancy Zkvm.
00:24:25.566 - 00:24:54.618, Speaker D: But we do research on multi proverb at the time and I do think this is work, but I think for us, ZK prover is actually like a backup plan because most of the ZK prover haven't fully audited and haven't been running for a while yet. But definitely I think multiprover is kind of a good solution right now.
00:24:54.784 - 00:25:12.686, Speaker B: It's essentially a multi prover, right? Because you're essentially verifying that the circuit ran it the same as the EVM would have otherwise. Sorry, right. You're running it as if the EVM would have run it. You would have come up with the same solution. Running the question two different ways, the.
00:25:12.708 - 00:25:17.362, Speaker D: Issue two different I mean, I can't disclose too much, but it seems under.
00:25:17.416 - 00:26:04.770, Speaker B: Research okay, still under research you said like multipruvers. We've heard a lot about ZK technology and that it kind of like mathematically is secure. And so we're in a crypto conference. Crypto conferences are all about decentralization. We're decentralizing the validators, we're decentralizing the node operators. There's been some discussion about whether or not you need to always have decentralization when it comes to ZK technology. So from an infrastructure point of view, where does decentralization make sense in your guys ZK protocols and what does it help to actually guarantee?
00:26:05.910 - 00:26:44.890, Speaker A: So guys, I'll start with a question. So for us, we were talking about multi prover. So that's actually one very good start point for decentralization, especially in the ZK prover system. Well, it used to be very hard for ZKS to be decentralized or even to be paralleled. One thing why we came up with Zkbridge, why that paper was got selected by the committee, was that we invented an algorithm that first time in history ever we're able to parallel compute ZK algorithms. Well, it's actually more than parallel. We call it distribute.
00:26:44.890 - 00:27:28.790, Speaker A: But the difference between distributed and parallel is that for parallel computing, you have multiple machines at the same place, so they communicate with each other. You can have that in one environment with a large memory, like several hundred gigabytes of memory. Basically they can pass information with each other quite often. So that's parallel computing. But based on that, we are actually able to do distributed computing for ZK proofs, we are able to have the machines distributed even in different corners of the world where they are able to communicate. Laconically, I think that's a Latin word or Italian word, laconic. It means silence.
00:27:28.790 - 00:28:04.950, Speaker A: So there's minimum communication required between all these nodes so that we can actually make a decentralized proof system where we're able to make the proof generation process scattered into all different machines around the world. And thus we're able to even accelerate the proof generation speed. Because imagine in the past can only do one core CPU, now we can do like 64 core CPU generating proof at the same time as well as decentralized distributed generating the proof at the same time. So that's the breakthrough ZK bridges bring and that's why we are able to make such an efficient algorithm.
00:28:07.370 - 00:28:24.662, Speaker E: Actually like a really interesting idea here because you talk about how to have a ZK and te as a sequencer. How about have an op inside too? So we got like triple authentication. It's just a kind of joke.
00:28:24.726 - 00:28:25.340, Speaker C: Okay.
00:28:26.030 - 00:29:03.690, Speaker E: Decentralization is I think it's the core value for crypto industry. The reason why we use Bitcoin is just because it's decentralized. Actually with building a ZK Oracle, I care about decentralization the most actually compared with efficiency. So that's why we proposed a new idea. It's called the proof of Oracle work. It's kind of like POW but instead of generating consensus for the network, we generate the liveness for this intent compute network. So we have the agent that perform the zoom knowledge proof, op fraud proof or whatever proof to the smart contract.
00:29:03.690 - 00:29:37.618, Speaker E: But how we ensure this network is alive when the smart contract need that. So how about we have an incentive wide mechanism there, we put down some token reward in the ethereum because ethereum is really decentralized, right? And then whoever can submit the proof first, who will get that. So by this way you can have a new kind of mechanism here that generate a liveness for the Oracle and do not break a decentralization and make the whole thing fully decentralized.
00:29:37.794 - 00:29:48.754, Speaker B: Can I push back on or can I ask you a follow up question to that one you carton, is that a proof race? Like a proof race?
00:29:48.882 - 00:30:05.790, Speaker E: Yeah, kind of like that. Whoever do it first who will just take the reward, right? Yeah. But we don't need to worry about the winner take all because even the strong prover they can only run one task at one block, right? They cannot just run all the tasks and still be the first one.
00:30:05.860 - 00:30:31.640, Speaker B: There you go. Okay, actually you front ran my question which was like in a proof race, which is like that we all start at the same spot and we all run to create the race, the proof at the same time, doesn't it ultimately lead to a winner take all? Because if I'm the best at proving then ultimately I will win every single time that I compete, every time that I go for a run. I guess in your case what you're imagining is that there's so many proofs that are running all at the same time.
00:30:33.370 - 00:31:01.630, Speaker E: In the future, right? One ethereum block might have millions of the CK proof got submitting to. So I don't worry about the miner. The approver have nothing to do because they have a really bad machine, because there's always some task for them, just some simple the one is simpler and what they need to do is find out the position, amount, the whole system, what's the ranking for computation resources.
00:31:06.230 - 00:31:09.890, Speaker B: Victor, how important is it in your protocol?
00:31:13.270 - 00:32:16.840, Speaker D: I was maybe want to add something more, but from our side we just do really practical way, we just think start from beginning, we try to do on the application level decentralized and then the infrastructure goes better and better and we don't have to reinvent the wheel. Start from beginning, do it again. But from my perspective, I will expect some games, some credentials to actually release and actually from user perspective, they use all of these things without centralized server running on the back end. It's actually really hard for applications without server, without even Oracle. Even centralized Oracle, but not ZK Oracle, but that's actually really hard.
00:32:19.310 - 00:32:20.380, Speaker B: How about yourself?
00:32:21.390 - 00:32:27.500, Speaker F: Since we are actually doing tooling about a virtual machine, we do not have a plan for decentralization at the moment.
00:32:30.370 - 00:32:34.030, Speaker E: It's open source, it's like decentralized automatically.
00:32:36.610 - 00:33:29.146, Speaker C: Yeah. So for decentralization traditionally in blockchain really brings two value. One security, the other is censorship resistance. I think in the decade context things are a little bit slightly different in the sense that in most of the decade protocols like ZK roabs decade coprocessor like us, the security side of things are actually guaranteed by the cryptographic theory of zero knowledge proofs. There is 00:16 proofs. But still in many cases the reason that people are talking about decentralization in ZK, for example, shared provers for ZK row apps are because they still want to maintain the trust freeness. Sorry the censorship resistance side of this, but for many other ZK protocols, one additional benefit that brought by decentralization is actually efficiency.
00:33:29.146 - 00:34:07.562, Speaker C: So for ZK coprocessors like us, we often deal with repeated structured computation across large range of blocks, across large sum of transactions or large set of signatures. So in these kind of scenarios, decentralization is essentially kind of morphed into distributed computing naturally and parallel computing in general. So this is where we are also kind of putting a lot of effort on to make the entire decade coprocessor stack more efficient. So this is something that I guess added value for decentralization in the ZK space.
00:34:07.696 - 00:34:12.160, Speaker B: Awesome. Thank you guys so much. So we are running out of time, I think we're probably out of time.
00:34:12.610 - 00:34:25.194, Speaker E: I want to throw out a really interesting question. I just remind you actually have four kind of way to do it. Fhe plus ZK plus Te plus Op authentication that will be the ultimate rollout.
00:34:25.242 - 00:34:37.160, Speaker B: Right, ultimate roll up. So we have zero time left. So I guess the one thing I was just going to ask. Really quickly. Is is there a paper or something that you've read in the last month that you highly recommend to the group.
00:34:38.490 - 00:34:46.840, Speaker D: That they check out from my yeah, like, I actually didn't do any paper research these days.
00:34:49.070 - 00:35:11.550, Speaker A: Please read the PNS paper we just published last month. It was selected by IEEE Security committee. It's published on Twitter and also our website. It's called plunk via unlimited distribution. Basically, we're able to make a distributed version of Plunk which can be used for decentralized proof market. Decentralized proof generation. Distributed proof generation.
00:35:12.290 - 00:35:32.040, Speaker E: Yeah, I want to say that one, but you already mentioned it, and so I just promote another paper. It's really interesting. That's called interactive zoonotic proof. That built by Pedal Lab. And it's like, really interesting idea because normally we want non interatid, but they made an interattic one and actually it's like different purpose. It's not for Zika Rob, but it's for cool thing.
00:35:33.530 - 00:35:51.326, Speaker F: I probably recommend an old paper that published by Polyhydra co founders, and it's the Devurgo Proving scheme, right? It's a pretty good one. And was actually understanding and analyzing the tricks that they have been used. Thanks.
00:35:51.508 - 00:35:52.480, Speaker A: Thank you.
00:35:53.250 - 00:36:08.990, Speaker C: Well, there are a bunch of interesting research that is coming out recently. Like Lasso is something that we're looking at, and also, like many of the research papers that you guys mentioned, we're also looking at it. But yeah, decay is a very fast moving space. So definitely kind of keep a tab on that.
00:36:09.060 - 00:36:13.740, Speaker B: Okay, awesome. And with that, we're done. Thank you, everybody, for being so attentive. And thank you. Seven x.
