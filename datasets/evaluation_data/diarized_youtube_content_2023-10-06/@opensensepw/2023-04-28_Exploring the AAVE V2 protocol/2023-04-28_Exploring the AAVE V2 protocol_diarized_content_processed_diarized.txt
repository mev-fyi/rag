00:00:00.120 - 00:00:12.354, Speaker A: So let's do this. So if I need to start doing this kind of research, I'm going to be really basic and I'm just going to go straight into Google. Let me just even close other tabs. You know, I'm just going to make this a little bit bigger and I'm going to say Ave.
00:00:14.814 - 00:00:15.554, Speaker B: Now.
00:00:17.254 - 00:00:17.782, Speaker C: Let'S take.
00:00:17.798 - 00:00:28.014, Speaker A: A good look at the website. So what they give us as information here, here is that.
00:00:30.514 - 00:00:32.242, Speaker B: Well, the liquidity.
00:00:32.298 - 00:00:46.730, Speaker A: Protocol where you can earn interest, borrow assets and build applications. And then I think now we're up to 700 billion, 7 billion EVL.
00:00:46.882 - 00:00:47.574, Speaker B: And.
00:00:49.274 - 00:00:56.164, Speaker A: Also these other markets things was first deployed on Ethereum. I guess we're just talking about different.
00:00:56.984 - 00:00:58.416, Speaker B: Blockchain options you have.
00:00:58.480 - 00:01:02.484, Speaker A: Okay. And also have grants. Interesting.
00:01:03.984 - 00:01:05.496, Speaker B: So we can see here a bunch.
00:01:05.520 - 00:01:13.084, Speaker A: Of big names over the auditing. So back shield, trade off bits, sigma prime.
00:01:14.664 - 00:01:15.112, Speaker C: Awesome.
00:01:15.168 - 00:01:29.924, Speaker A: And we can see the treasure. They have a dial, one of the useful ones. Now let's go and head over the back first, then I'll go for the docs.
00:01:30.004 - 00:01:33.492, Speaker B: Okay. Okay.
00:01:33.548 - 00:01:34.984, Speaker A: I'm gonna make myself.
00:01:36.764 - 00:01:37.300, Speaker C: A little bit.
00:01:37.332 - 00:01:39.464, Speaker A: Bigger because I know it's hard for you guys.
00:01:44.164 - 00:01:44.620, Speaker C: Okay.
00:01:44.652 - 00:01:46.356, Speaker B: This is the back.
00:01:46.500 - 00:02:09.874, Speaker A: Hey, what is Aave? Aave is a decentralized, non custodial liquidity market protocol where users can participate, suppliers or borrowers. Suppliers provide liquidity to the market to earn passive income, while borrowers are able to borrow in the over collateralized perpetually or under collateralized one block liquidity faction.
00:02:10.614 - 00:02:12.670, Speaker B: So I guess here we're talking about.
00:02:12.822 - 00:02:23.670, Speaker A: Me having to stake the money in there and leave it in there. And here we're talking about flash loans. Did they point out they have resisted there?
00:02:23.742 - 00:02:27.206, Speaker B: Yes, they point out they have a.
00:02:27.230 - 00:02:34.314, Speaker A: Discord server and why to use Aave? Aave has been audit and secured. So I don't want to know the shield part.
00:02:38.334 - 00:02:40.038, Speaker B: How do I interact with AAve?
00:02:40.126 - 00:03:05.218, Speaker A: In order to interact with AAVE, you simply supply your preferred asset and amount. After supplying, you will earn passive income based on the market borrowing demand. Additionally, supplying assets allow you to borrow by using your supplied assets as collateral. Any interest you earn by supplying funds helps offset the interest rate you accumulate by borrowing.
00:03:05.386 - 00:03:12.426, Speaker B: So the idea here so far that everybody puts money in the pool and.
00:03:12.450 - 00:03:22.684, Speaker A: You make your money available to the market. So you're gonna be making fees over other people borrowing, doing flash loss. Quite interesting, to be honest.
00:03:24.744 - 00:03:27.264, Speaker B: What is the cost of interacting with AAVE?
00:03:27.424 - 00:03:30.224, Speaker A: Interacting with the protocol requires transactions and.
00:03:30.264 - 00:03:33.644, Speaker B: Transaction fees for the Ethereum blockchain usage.
00:03:34.224 - 00:03:50.722, Speaker A: Which depend on the network stereo status and transaction complexity. Where are my supplied phone stores? Your supply phones are located in a smart contract. The code of the smart contract is public, open source, formally verified, and audited.
00:03:50.818 - 00:03:52.482, Speaker B: By 30 part solution.
00:03:52.658 - 00:04:14.744, Speaker A: You can withdraw your functions from the pool on demand or export a tokenized, a tokens version of your lender position. Eight tokens can be moved and trade as any other. So there's a little bit of important bit of information here, which is.
00:04:16.644 - 00:04:16.908, Speaker C: You.
00:04:16.916 - 00:04:23.988, Speaker A: Can withdraw your funds from the pool on demand. First thing you can, you can take your money as you want, or you.
00:04:23.996 - 00:04:34.700, Speaker B: Can get a token as equal to your position. So here, now we're talking about leveraging yourself to the tits and, you know, quite classical.
00:04:34.852 - 00:04:36.944, Speaker A: We've crypto. Thanks.
00:04:41.724 - 00:04:44.384, Speaker B: So, address screening.
00:04:44.924 - 00:05:05.160, Speaker A: Here comes something new. Why is my wallet blocked? We receive a blockchain intelligence provided by TRM Labs. TRM combines on chain data and real world investigation to identify financial crimes and other prohibited activities. These data show wallets from ape.
00:05:05.312 - 00:05:14.244, Speaker B: These data blocks wallets from ape. They are associated with certain physically KYC wallets.
00:05:16.264 - 00:05:18.484, Speaker A: List of what looks like in here.
00:05:18.944 - 00:05:24.392, Speaker B: Not KyC, maybe, but yeah, if some.
00:05:24.448 - 00:05:27.104, Speaker A: Hacker can really like block her account.
00:05:27.224 - 00:05:39.804, Speaker B: Just because, you know, by sending you tokens. Is there any risk? No platform can be considered entirely risk free.
00:05:40.104 - 00:05:45.272, Speaker A: Risks related to other platform are the smart contract risk of bug within the.
00:05:45.288 - 00:05:48.200, Speaker B: Protocol code and the liquidation risk risk.
00:05:48.232 - 00:05:55.200, Speaker A: On the collateral liquidation process. Every possible step has been taken to minimize the risk as much as possible.
00:05:55.232 - 00:05:59.240, Speaker B: Possible protocol code is public open source NSP auditing.
00:05:59.392 - 00:06:03.208, Speaker A: Additionally, there's ongoing bug bounty live and.
00:06:03.256 - 00:06:06.280, Speaker B: Running entrant is explaining a little bit.
00:06:06.312 - 00:06:10.604, Speaker A: About how the eight tokens relation to the pool works.
00:06:11.464 - 00:06:18.880, Speaker B: Okay, Ave token Aave is using the.
00:06:18.912 - 00:06:28.728, Speaker A: Center of gravity of AAVE protocol governance. Ave is used to vote and decide the outcome. Yeah, it sure is a really bold.
00:06:28.776 - 00:06:29.944, Speaker B: One to say no risk and.
00:06:29.984 - 00:06:31.288, Speaker A: But I know that they are really.
00:06:31.336 - 00:06:39.152, Speaker B: Meticulous with, with the protocol development in there. Ave is pretty much, I guess, I.
00:06:39.168 - 00:06:42.848, Speaker A: Guess, like if you're gonna work on places that are respected in crypto, like.
00:06:42.976 - 00:06:45.656, Speaker B: Let'S say big companies, I guess is.
00:06:45.680 - 00:07:07.694, Speaker A: Always good to work through one. So it's nice if you like the, there's layer ones, that is nice if you work there, I guess Ethereum, if you work on the Ethereum foundation doing, doing client development, that's fucking cool. If you work on Polkadot, that's cool too. But I guess working at Aave is even cooler than maybe working at these companies.
00:07:09.434 - 00:07:11.094, Speaker B: Because they are really like.
00:07:13.434 - 00:07:13.746, Speaker C: I.
00:07:13.770 - 00:07:15.636, Speaker B: Think maybe number one, I don't know.
00:07:15.810 - 00:07:29.200, Speaker A: So pretty much AVi token is governance and it can be staked within the protocol safety module to provide security insurance to the protocol suppliers, stakers can earn rewards and freeze.
00:07:29.232 - 00:07:33.216, Speaker B: Okay, so mobile app, there's a white.
00:07:33.280 - 00:07:51.274, Speaker A: Paper and let's see the risk framework. I never saw such thing in my life. And developers have a technical documentation for a technical so we now kind of know that's really good to fix that and become an avid contributor.
00:07:54.054 - 00:07:55.342, Speaker B: Let's take a look at the white.
00:07:55.398 - 00:08:09.314, Speaker A: Paper and see if there's any complicated math or is this one of the good. Have you guys ever seen a formal audit before or an audit from Sertora?
00:08:10.574 - 00:08:17.076, Speaker B: We can kind of see here how this work. I really wanted to see the white.
00:08:17.140 - 00:08:17.824, Speaker C: Paper.
00:08:22.284 - 00:08:35.544, Speaker B: Maybe while that's happening. Let's see if you can see guys. We have the white paper.
00:08:38.594 - 00:08:41.454, Speaker A: We have the architecture. Let's try to understand.
00:08:47.034 - 00:08:49.066, Speaker B: Nice bro, I'm gonna send you the.
00:08:49.090 - 00:08:50.414, Speaker A: Link so you can.
00:08:50.994 - 00:08:52.014, Speaker C: 1 second.
00:09:02.274 - 00:09:08.504, Speaker B: If we look here to the white paper and we take a look on.
00:09:08.544 - 00:09:11.256, Speaker A: The explanation of the architecture of the.
00:09:11.280 - 00:09:45.644, Speaker B: Protocol, this is the really like nice part to get into for us as developers. Take a look and try to understand what's happening. Okay, let me just see something. Okay, so everything starts with the user.
00:09:48.224 - 00:09:50.288, Speaker A: The user can do such things.
00:09:50.416 - 00:09:59.068, Speaker B: He can do flash loans, deposits, he can borrow, repay, repay.
00:09:59.116 - 00:10:03.580, Speaker A: So repays probably when you did the, when you borrowed money and then you.
00:10:03.732 - 00:10:20.904, Speaker B: You can retain, probably staked things, swap. Okay, now let's go over the least complicated path. So let's say that the user wants to swap is going to the lending pool.
00:10:21.324 - 00:10:24.624, Speaker A: The lending pool is going to the lending pool car.
00:10:25.164 - 00:10:33.324, Speaker B: And they do have reserve, reserve tools in here.
00:10:33.364 - 00:10:47.184, Speaker A: I think maybe could be a little bit in the same style of uniswap. Okay, so we know the process for swapping pretty much they're using the landing pool and the landing pool is using the landing pool car.
00:10:48.004 - 00:10:49.236, Speaker B: Probably this guy.
00:10:49.300 - 00:10:52.332, Speaker A: Now what I want to do is, and guys tell me if this is.
00:10:52.468 - 00:10:57.756, Speaker B: Too much, but what I want to do is take a look at this.
00:10:57.820 - 00:10:58.424, Speaker C: Contract.
00:11:03.244 - 00:11:17.934, Speaker A: Landing pool for landing pool. Landing pool core deployment slash low and MISC protocol.
00:11:18.014 - 00:11:18.794, Speaker C: Probably.
00:11:22.614 - 00:11:23.474, Speaker B: Pool.
00:11:24.414 - 00:11:27.446, Speaker A: No, I'm not going to look at the collateral manager.
00:11:27.470 - 00:11:36.310, Speaker B: I'm not seeing the or probably maybe two contracts inside the lending pool just.
00:11:36.342 - 00:11:48.030, Speaker A: From, from the start. We can already see the encoder with you. We have modern Abi's, all the stuff is happening here and I'm looking for.
00:11:48.062 - 00:11:56.994, Speaker B: The car thing, probably not in this folder. Let's go back to architecture.
00:11:59.694 - 00:12:03.114, Speaker A: Landing oracle car library.
00:12:04.614 - 00:12:06.474, Speaker B: Landing pool configurator.
00:12:07.134 - 00:12:12.054, Speaker A: The landing pool configurator is the one accessing the port. But let's take a look at the.
00:12:12.094 - 00:12:19.964, Speaker B: Swap function of these contracts so we can try to see what's going on.
00:12:23.824 - 00:12:27.564, Speaker A: I have this swap, borrow swap, borrow.
00:12:33.104 - 00:12:33.504, Speaker C: Swap.
00:12:33.544 - 00:12:34.804, Speaker B: Borrow rates.
00:12:36.424 - 00:12:37.024, Speaker A: How long?
00:12:37.064 - 00:12:40.276, Speaker B: How big is this overall?
00:12:40.300 - 00:12:42.864, Speaker A: They really put out a thousand line contract.
00:12:43.724 - 00:12:47.460, Speaker B: These guys had paused.
00:12:47.532 - 00:12:50.052, Speaker A: They have a pause at a configuration set.
00:12:50.148 - 00:12:53.756, Speaker B: The reserve interest rate is bigger, right?
00:12:53.780 - 00:13:03.184, Speaker A: You guys not being able to set the reserve interest rate strategy address. So they have these contracts doing different strategies.
00:13:03.804 - 00:13:08.306, Speaker B: Initialize reserves, the tokens, the debit variable.
00:13:08.370 - 00:13:12.294, Speaker A: Debit interest rate strategy.
00:13:13.074 - 00:13:14.154, Speaker B: Let's look at.
00:13:14.314 - 00:13:15.174, Speaker A: Swap.
00:13:18.714 - 00:13:28.506, Speaker B: Validates and finalizes a token transfer. Get user account data.
00:13:28.610 - 00:13:29.778, Speaker A: So we are doing that.
00:13:29.826 - 00:13:35.582, Speaker B: We're getting this information from, like, this generic logic, really.
00:13:35.638 - 00:13:37.114, Speaker A: This is the name of the thing.
00:13:37.774 - 00:13:49.542, Speaker B: Calculate user account data. Probably some hashing. No, I don't think so. Here we have a flash loan function.
00:13:49.598 - 00:13:52.678, Speaker A: Very interesting function. Basically, a flash flow is just, you.
00:13:52.686 - 00:13:55.278, Speaker B: Know, a function that will give you.
00:13:55.286 - 00:14:00.330, Speaker A: The money during the scope of execution. Usually in the end, you're gonna have.
00:14:00.362 - 00:14:06.014, Speaker B: A check for, you know, you actually paid.
00:14:07.194 - 00:14:11.094, Speaker A: Obviously, we could have implemented that in a much more elaborated way.
00:14:13.074 - 00:14:14.250, Speaker B: I'm not looking at that.
00:14:14.282 - 00:14:25.406, Speaker A: I want to kind of see liquidation call. So we do a low level call.
00:14:25.450 - 00:14:29.354, Speaker B: Call to the collateral manager.
00:14:32.654 - 00:14:40.634, Speaker A: And the interesting thing in here is, I wonder if this function is public for everyone.
00:14:41.014 - 00:14:45.534, Speaker B: It's just this, because liquidation call could be public, right?
00:14:45.614 - 00:14:48.074, Speaker A: I could be the one trying to liquidate an account.
00:14:48.374 - 00:14:49.918, Speaker B: And that really makes sense. Hey, Kristin.
00:14:49.966 - 00:14:50.914, Speaker A: Welcome, bro.
00:14:52.674 - 00:14:53.058, Speaker C: Right?
00:14:53.106 - 00:15:05.414, Speaker A: Talk to me. Talk to me in the chat, please. Set user reserve as collateral. So I guess this isn't the user wants to borrow against what he deposit.
00:15:07.394 - 00:15:08.146, Speaker B: He balance.
00:15:08.210 - 00:15:10.914, Speaker A: Stable borrow rates. What that means.
00:15:10.994 - 00:15:12.450, Speaker B: But look at this rock.
00:15:12.482 - 00:15:13.074, Speaker A: Borrow rate.
00:15:13.114 - 00:15:18.474, Speaker B: So we're trying to find this path. Um.
00:15:22.374 - 00:15:27.554, Speaker A: So we pass in the address of the asset in the rate mode, which.
00:15:28.174 - 00:15:30.834, Speaker B: Which I wonder, what is the rate mode?
00:15:36.614 - 00:15:40.234, Speaker A: If interest rate mode is equal, stable.
00:15:41.894 - 00:15:59.946, Speaker B: What we're going to do is we gonna burn an amount of stable debit and mint the evariable amount based on that. Okay.
00:16:00.130 - 00:16:00.874, Speaker C: Okay.
00:16:00.994 - 00:16:09.054, Speaker A: Awesome. And here we have another function for repaying. Awesome. I guess this gives us a little bit of a vision.
00:16:11.374 - 00:16:13.430, Speaker B: Let's try to look at the redeem.
00:16:13.502 - 00:16:17.230, Speaker A: Function everybody is always going to. So we can really see that this.
00:16:17.262 - 00:16:21.630, Speaker B: Landing projects as a, you know, these.
00:16:21.702 - 00:16:34.806, Speaker A: Adapter contract with the other protocol functions. Let's go back to the landing pool, and I want to talk about redeeming and, or let's maybe do something that is more intuitive for us. Let's, let's see.
00:16:34.830 - 00:16:42.450, Speaker B: Deposit, um, deposit, deposit.
00:16:42.522 - 00:16:43.414, Speaker C: Here we go.
00:16:44.274 - 00:16:48.882, Speaker A: So we take an asset, we take the amount on behalf of, meaning that.
00:16:48.898 - 00:16:53.094, Speaker B: The owner here is not method sender.
00:16:54.954 - 00:17:00.922, Speaker A: Actually, actually, actually it is message sender. But Massasender can make a deposit on.
00:17:00.938 - 00:17:06.028, Speaker B: The behalf of someone that's on behalf of some. There's a referral code.
00:17:06.076 - 00:17:10.980, Speaker A: Let's try to understand what the functions doing. First thing we're reading, we have this.
00:17:11.012 - 00:17:15.924, Speaker B: Data type and we're reading probably, maybe.
00:17:16.084 - 00:17:21.532, Speaker A: How much reserves we have. And then probably revalidating if this deposit.
00:17:21.588 - 00:17:25.556, Speaker B: Is too big or too small, probably.
00:17:25.620 - 00:17:38.324, Speaker A: Something that's like that. Then we load based on the reserve for this asset, we load the a token. So the avid token, the equivalent aave token.
00:17:40.424 - 00:17:42.004, Speaker B: We update the state.
00:17:42.344 - 00:17:43.764, Speaker A: Very interesting.
00:17:44.264 - 00:17:45.976, Speaker B: And we do a update in the.
00:17:46.000 - 00:17:49.720, Speaker A: Interest that interest rates because we just got a new deposit and we just.
00:17:49.792 - 00:18:01.698, Speaker B: Issued probably aven tokens to represent that. Then we finally do the transfer from the sender, a token amount, meaning that.
00:18:01.746 - 00:18:03.574, Speaker A: This is coming to.
00:18:07.394 - 00:18:10.314, Speaker B: ERc asset. Erc asset.
00:18:10.434 - 00:18:34.534, Speaker A: Okay, so we are pretty much sending the asset to the sender, to the aven token smart contract. And then we check if this is the first deposit based on this ait token. So we take a look at the auto eto IV token, the equivalent of a token for this asset.
00:18:35.114 - 00:18:37.082, Speaker B: Only one is a cute mint function.
00:18:37.138 - 00:18:39.774, Speaker A: Probably this function returns a boolean and.
00:18:40.594 - 00:18:42.010, Speaker B: There'S a check in there to see.
00:18:42.042 - 00:18:48.074, Speaker A: Like okay, I already did that and then it's just returning. But if he's the first deposit, then.
00:18:48.114 - 00:18:56.274, Speaker B: We'Re gonna be setting that as collateral for you to use for your borrows.
00:18:57.614 - 00:19:09.994, Speaker A: And we even imitate an event so we can track everybody, you know, setting the collateral really clean, really easy to understand deposit function, really intuitive to grow through.
00:19:12.774 - 00:19:13.838, Speaker B: Let's look at the borrow.
00:19:13.886 - 00:19:15.126, Speaker A: Since we look at the deposit now.
00:19:15.150 - 00:19:17.344, Speaker B: Let'S look at the borrower. Is this good?
00:19:17.384 - 00:19:19.004, Speaker A: Guys, guys, they're liking this.
00:19:21.504 - 00:19:23.884, Speaker B: Take time quitting.
00:19:24.944 - 00:19:28.824, Speaker C: Okay, cool, let's go.
00:19:28.864 - 00:19:30.324, Speaker A: We're going now for.
00:19:33.264 - 00:19:56.684, Speaker B: The borrowed. No problem, no problem bro, you can lurk.
00:19:56.724 - 00:20:09.620, Speaker A: No problem. Let's take a look at the borrow function. We pretty much taking the asset the.
00:20:09.652 - 00:20:16.960, Speaker B: Amount we pass in the mode for our code and on behalf of when.
00:20:16.992 - 00:20:21.084, Speaker A: Not pause it and override our things should be seen here in this function.
00:20:21.584 - 00:20:25.944, Speaker B: And pretty much loading the results and calling this function.
00:20:25.984 - 00:20:42.034, Speaker A: I wonder if I can actually not really calling the execute borrow function with the structure executed borrow param. So let's go over the goodworld function.
00:20:42.534 - 00:20:44.834, Speaker B: And see how that part works.
00:20:45.574 - 00:20:49.422, Speaker A: Thank you so much for reading, bro. It's all worth it because you guys are around.
00:20:49.478 - 00:20:51.914, Speaker B: Okay. It's really nice for me too.
00:20:54.854 - 00:20:55.238, Speaker C: Bro.
00:20:55.286 - 00:21:03.510, Speaker A: Let's take a look here. Execute borrow functions. We pass in the params the structure of param because another thing for you guys to see here, this is the.
00:21:03.542 - 00:21:08.230, Speaker B: Memory here, the use of memory here. I think that with the new versions.
00:21:08.262 - 00:21:10.434, Speaker A: Of solidity we don't need to do that anymore.
00:21:13.654 - 00:21:19.254, Speaker B: And then we do what we load the reserves and we load a configuration.
00:21:19.334 - 00:21:21.114, Speaker A: Map for the user.
00:21:23.094 - 00:21:27.094, Speaker B: I wonder, okay, so this is actually.
00:21:27.174 - 00:21:35.744, Speaker A: The means for me to load the wallet and other information of the behalf user. Just go over the storage and just read it.
00:21:36.564 - 00:21:37.676, Speaker B: Oracle, boom.
00:21:37.740 - 00:21:48.224, Speaker A: First thing here we get the oracle price. I wonder what oracle is being used here, I suspect is not chain link. If I'm not mistaken, Ave has his own oracle thing.
00:21:49.924 - 00:21:53.664, Speaker B: But I could be massively wrong in saying that.
00:21:55.404 - 00:22:01.174, Speaker A: So we get the oracle and then we get the amounting in. So pretty much we do a calculation.
00:22:02.194 - 00:22:13.218, Speaker B: Of the price of the asset multiplied by the amount and divided by the decimals which will give us the price.
00:22:13.266 - 00:22:30.520, Speaker A: Of the asset in if. And then we do this validation logic validation borrow. So we have this contract that will make sure everything here is, you know, valid. And then we're going to update the.
00:22:30.552 - 00:22:33.376, Speaker B: State, we're going to set the current.
00:22:33.440 - 00:22:35.112, Speaker A: Stable rate to zero.
00:22:35.208 - 00:22:37.848, Speaker B: And let me, because I'm just borrowing.
00:22:37.896 - 00:22:39.844, Speaker A: That guys to be set to zero.
00:22:40.664 - 00:22:41.312, Speaker B: Interesting.
00:22:41.368 - 00:22:43.488, Speaker A: In the first ball, the first borrowing.
00:22:43.536 - 00:22:53.340, Speaker B: Also got such false, okay, so let's.
00:22:53.412 - 00:23:05.876, Speaker A: Go over data types, interest rate mode vars interest rate mode equals data types interest rate mode stable. So if the interest mode is stable.
00:23:05.940 - 00:23:07.868, Speaker B: What we're going to do is we're.
00:23:07.876 - 00:23:22.828, Speaker A: Going to create a dab based on this stable that token. And if it's a variable, variable depth, not stable. So based on some other token we're going to be based with going to be minting the other token, Aia Aven.
00:23:22.876 - 00:23:27.224, Speaker B: Tokens based on token zero.
00:23:30.244 - 00:23:37.464, Speaker A: Then we updated the interest rates because you know, people start borrowing and then we do a.
00:23:39.444 - 00:23:42.404, Speaker B: Release underlying, so we.
00:23:42.444 - 00:23:45.004, Speaker A: Transfer the underlying token and then we.
00:23:45.044 - 00:23:50.914, Speaker B: Meet the borrow reclink to release it.
00:23:53.094 - 00:23:54.594, Speaker A: Let's go to.
00:23:57.094 - 00:23:58.166, Speaker B: Now what I want.
00:23:58.190 - 00:24:05.354, Speaker A: To see is the flesh loan.
00:24:07.934 - 00:24:08.246, Speaker C: And.
00:24:08.270 - 00:24:23.084, Speaker A: I want to see how the flesh connects with the data provider to create the repaying mechanism. I don't know if you need to repay the flash loan using the repay function.
00:24:24.744 - 00:24:29.608, Speaker B: Yeah, yeah, that's. Yeah, yeah, no, that comes from the.
00:24:29.656 - 00:24:38.688, Speaker A: Solari version for sure. I wonder if I pay the flashlights, like with the repay function.
00:24:38.736 - 00:24:40.944, Speaker B: You know, let's take a look at.
00:24:40.984 - 00:24:43.004, Speaker A: The repay function.
00:24:54.544 - 00:24:55.664, Speaker B: Or if the repay.
00:24:55.784 - 00:25:00.528, Speaker A: Was for like any kind of debt. And just by looking at the code, looks like it, because I'm talking about.
00:25:00.576 - 00:25:04.524, Speaker B: You know, stable debt and variable debt depth.
00:25:04.564 - 00:25:12.424, Speaker A: So I don't think, I think you're supposed to play the flesh law in the same function.
00:25:13.924 - 00:25:15.164, Speaker B: I mean, not in the same function.
00:25:15.204 - 00:25:16.500, Speaker A: But the same execution.
00:25:16.532 - 00:25:20.596, Speaker B: So let's take a look at the flashlaw.
00:25:20.740 - 00:25:35.316, Speaker A: And I want to see a little bit deeper now. Let's see how this works. So first thing, the flash loans, I guess to say, say gas, you can do it like with several assets for.
00:25:35.340 - 00:25:38.276, Speaker B: Several amounts in different modes, which shows.
00:25:38.300 - 00:25:46.184, Speaker A: You know, a little bit of flexibility here. Super nice. Then we create the fixed size positions for the arrays we need.
00:25:48.284 - 00:25:49.636, Speaker B: Then we go over each one of.
00:25:49.660 - 00:26:20.592, Speaker A: The assets and transfer the underline. So here we are already doing the flashlaw. Now, this is probably the function you need to implement in your smart contract to execute the flash loan. So when the money hits your smart contract, this execute operation probably will be.
00:26:20.608 - 00:26:37.302, Speaker B: The one making sure you return it through, you know, and, yeah, I believe that could be the case. And then after that, what we have.
00:26:37.358 - 00:26:40.394, Speaker A: Is we go for each one of them.
00:26:42.134 - 00:26:53.370, Speaker B: Yeah, let me see. Not working for me, bro. You know, but, but, yeah, but I'll.
00:26:53.402 - 00:27:08.094, Speaker A: Take a look at that. After that, we go over there, the arrays are created.
00:27:10.234 - 00:27:12.362, Speaker B: And we're gonna calculate.
00:27:12.418 - 00:27:16.602, Speaker A: The amount of premium. So how much you need to pay.
00:27:16.698 - 00:27:32.782, Speaker B: Over what you, your flash loan. And then we're going to have to some cumulative liquidity math here to get the new amounts for the assets and.
00:27:32.798 - 00:27:34.874, Speaker A: Then update the interest rates.
00:27:36.414 - 00:27:37.846, Speaker B: And in the end, we do a.
00:27:37.870 - 00:27:39.234, Speaker A: Safe transfer from.
00:27:41.054 - 00:27:44.602, Speaker B: From the receiver to.
00:27:44.698 - 00:27:49.254, Speaker A: The address of the token with the premium.
00:27:51.394 - 00:27:59.130, Speaker B: So probably you're gonna be, your contract will need to give the approval to.
00:27:59.162 - 00:28:04.014, Speaker A: Have it to execute the flash loan and then be able to move the money back.
00:28:04.714 - 00:28:14.734, Speaker B: And this is the case for, this is the case for the. But there's no.
00:28:16.634 - 00:28:18.054, Speaker C: Particular. Look.
00:28:23.314 - 00:28:30.986, Speaker A: Maybe I need to click on the editing thing. Right. And then you let me navigate. And this is for when you don't.
00:28:31.050 - 00:28:32.534, Speaker B: Have a.
00:28:36.014 - 00:28:37.670, Speaker A: Interest mod rate set.
00:28:37.742 - 00:28:38.174, Speaker B: Okay.
00:28:38.214 - 00:28:43.514, Speaker A: So if you do have one, we're going to be executing a borrow.
00:28:49.734 - 00:28:50.190, Speaker C: Because.
00:28:50.262 - 00:28:52.582, Speaker B: You can do a flash loans, you.
00:28:52.598 - 00:28:55.514, Speaker A: Can do a flash loan, not return the funds.
00:28:57.374 - 00:28:58.462, Speaker B: But then that will be.
00:28:58.518 - 00:29:01.234, Speaker A: That will be subtracted from your collateral.
00:29:02.314 - 00:29:03.174, Speaker B: Okay.
00:29:03.794 - 00:29:14.454, Speaker A: And if you do that, it's pretty much going to be like a borrow. So it's going to counting as a borrow. If the user choose not to return funds, the system checks. There's enough collateral whenever the opposite position.
00:29:15.994 - 00:29:18.658, Speaker B: Yeah, really, really interesting.
00:29:18.706 - 00:29:43.344, Speaker A: Wow. It's not so hard to understand. So we know that the repay function is not really for that. Okay, now I want to see the flash flow happening over the chain and I want to find out what is the name of the function that I got that I must have in my contract to receive that money.
00:29:43.644 - 00:29:45.452, Speaker B: And to do that I will try.
00:29:45.508 - 00:29:52.624, Speaker A: What reentrant is saying with try to edit this file and see if I got some code navigation from it.
00:30:00.744 - 00:30:02.764, Speaker B: Then I'm gonna go for flag.
00:30:09.744 - 00:30:13.284, Speaker A: No, I'm not, I'm not getting the cold completion.
00:30:20.204 - 00:30:21.484, Speaker B: Yeah, maybe, maybe.
00:30:21.524 - 00:30:24.424, Speaker A: Yeah, maybe we should do a little bit of a dive into docs.
00:30:26.404 - 00:30:30.104, Speaker B: Configuration libraries landing pool and.
00:30:32.204 - 00:30:36.932, Speaker A: Landing pool data provided what is a data provider is how we set up the oracles.
00:30:36.988 - 00:30:56.624, Speaker B: Let's take a look at that. Libraries netting pool landing pool collateral manager.
00:30:56.664 - 00:30:58.484, Speaker A: Configuration storage.
00:31:06.064 - 00:31:10.284, Speaker B: Is a probably interfaces base.
00:31:20.164 - 00:31:21.984, Speaker A: All the flash loans.
00:31:25.324 - 00:31:34.124, Speaker B: Need to inherit from this contract so they can already have default safe math ERC 20 plus.
00:31:34.164 - 00:31:37.064, Speaker A: You pass in the address of the provider.
00:31:39.234 - 00:31:53.454, Speaker B: Let's take a look at these libraries and I want to see lending pool configurator how many lines of code? 400 lines of code. Let's take a look at these.
00:32:04.054 - 00:32:27.034, Speaker A: Initialize batch niche reserves update token update stable debit. It's funny because they didn't use to like they do have, they do change the implementation but they didn't go went with proxies.
00:32:36.594 - 00:32:37.410, Speaker B: Guys.
00:32:37.602 - 00:32:38.374, Speaker A: Yeah.
00:32:40.714 - 00:32:42.454, Speaker B: And in full storage.
00:32:47.874 - 00:32:48.894, Speaker A: Interesting.
00:32:49.234 - 00:32:51.774, Speaker B: Yeah, smart contract just to handle that.
00:32:53.634 - 00:33:08.536, Speaker A: Lending pool collateral manager this one is really important. Liquidation call. And this brings me back to the question we made before, which is the question of is this function public? And it is, you know, you can.
00:33:08.560 - 00:33:11.456, Speaker B: See that anyone can call it and.
00:33:11.520 - 00:33:16.844, Speaker A: I guess that's when we talk about the liquidation bots. We're talking about people using these mechanisms to.
00:33:19.504 - 00:33:20.328, Speaker B: Liquidate people.
00:33:20.376 - 00:33:29.304, Speaker A: I have no idea how this works, but I really want to find out. Whoa, it's a piece of code.
00:33:30.884 - 00:33:40.732, Speaker B: Let's take a look. Let's take a rig. So we do the collateral reserve, we.
00:33:40.748 - 00:33:43.864, Speaker A: Do the debt reserve. So as soon as you have debt.
00:33:44.604 - 00:33:59.568, Speaker B: Someone can come and liquidate you. I see liquidation call local bar. So we create these structure and then.
00:33:59.616 - 00:34:06.584, Speaker A: We do this generic logic thing. I wonder what that is. Logic here you want feel free to open your mic.
00:34:06.624 - 00:34:08.016, Speaker B: Send.
00:34:08.040 - 00:34:08.764, Speaker C: Okay.
00:34:09.104 - 00:34:16.288, Speaker B: Calculate user account data. We'll probably, I'm going to bring everything ready to use.
00:34:16.336 - 00:34:17.632, Speaker A: I'm going to send out this information.
00:34:17.728 - 00:34:31.324, Speaker B: And receive back factor. Is these account ring or red or yellow? At this point we load.
00:34:31.704 - 00:34:45.032, Speaker A: Hey, hey, anom, welcome back. We're going over the ave mark contracts. So at this point we're going over the user stable depth and the variable depth.
00:34:45.128 - 00:34:51.224, Speaker B: And we get, we get both informations from the helper. Okay.
00:34:51.344 - 00:35:07.764, Speaker A: We pass in the user and the information we have as depth reserved. Then we do a validation over the liquidation call. And it's interesting that other really protects their code that really have this validation pattern all around.
00:35:12.004 - 00:35:15.196, Speaker B: If there's no warehouse, we're going to.
00:35:15.220 - 00:35:32.424, Speaker A: Do is we're going to loading the equivalent of a token. We're going to loading the user collateral balance. And I wonder if user here is the sender or the user being liquidated. Probably the user being liquidated.
00:35:35.044 - 00:35:38.976, Speaker B: Yes. Then I load and calculate what is.
00:35:39.000 - 00:35:45.304, Speaker A: The maximum liquidable debt. I just use what's been done here.
00:35:45.344 - 00:35:47.960, Speaker B: Is we look at the, we add.
00:35:47.992 - 00:36:02.044, Speaker A: The variable debt, the debt over another tokens, and then we do a percent multiplication based on the liquidation cost factor. And these could be tied to leverage.
00:36:04.054 - 00:36:09.206, Speaker B: So I guess if you're leveraged, this is why you're gonna get a, you.
00:36:09.230 - 00:36:15.326, Speaker A: Know, a little bit of, could have problems and become less healthy, you know.
00:36:15.470 - 00:36:17.630, Speaker B: If you have more, more leverage going on.
00:36:17.782 - 00:36:24.594, Speaker A: And then we getting over the actual debt to liquidate. So we have debt to cover.
00:36:28.594 - 00:36:29.938, Speaker B: So debt took over.
00:36:29.986 - 00:36:32.242, Speaker A: If debt took over is bigger than.
00:36:32.378 - 00:36:35.378, Speaker B: Max liquidable debt means that we're going.
00:36:35.386 - 00:36:38.538, Speaker A: To be using the max liquidable debt.
00:36:38.666 - 00:36:43.658, Speaker B: So, because, because, yeah, because you're going.
00:36:43.666 - 00:36:46.974, Speaker A: To, we're going to liquidate as much as we have, you know.
00:36:49.154 - 00:36:49.906, Speaker B: And then.
00:36:50.010 - 00:36:54.214, Speaker A: Otherwise, if it's not, we're just going to use the debt to cover, to cover for everything.
00:36:56.564 - 00:37:00.316, Speaker B: From that we, okay.
00:37:00.340 - 00:37:02.824, Speaker A: So we do this if here.
00:37:04.644 - 00:37:04.956, Speaker C: And.
00:37:04.980 - 00:37:11.756, Speaker A: Then we do this operation to load the max collateral to liquidate and the debt amount needed, we pass in the.
00:37:11.780 - 00:37:27.080, Speaker B: Reserves, the assets, and the user collateral balance. If the actual debt to liquidate is bigger, the debt amount needed, I'm just.
00:37:27.112 - 00:37:56.144, Speaker A: Going to take what you sent at this point and use it to liquidate. So we're just going to rewrite, overwrite the actual debt with whatever value you sent. If the liquidator reclaims the underlying asset, we make sure there's enough available liquidity in the collateral reserves. How do we do that? Okay, so if there's no received token.
00:37:57.604 - 00:38:13.388, Speaker B: Meaning that the liquidator reclaimed the underlying asset. We're going to calculate the available collateral based ourselves on the collateral asset and the balance of the token.
00:38:13.476 - 00:38:20.754, Speaker A: The aven token. Smart contract. Okay, so we're gonna see how many.
00:38:20.794 - 00:38:26.386, Speaker B: Tokens we have in there. If the maximum collateral do I need.
00:38:26.450 - 00:38:28.786, Speaker A: That I need to liquidate is bigger.
00:38:28.970 - 00:38:34.778, Speaker B: Than whatever I have right now in this, my contract, then we're gonna have.
00:38:34.866 - 00:38:38.974, Speaker A: An error saying that, hey, there's not enough liquidity, I cannot repay that.
00:38:42.294 - 00:38:45.870, Speaker B: And just so we can remember, we're.
00:38:45.902 - 00:38:55.514, Speaker A: Talking about liquidation cost, okay? Now after we do this operation, we go and update the state.
00:38:58.454 - 00:38:59.478, Speaker B: And then.
00:38:59.646 - 00:39:07.702, Speaker A: We have another if here that says that if the user variable depth, meaning that his debt in tokens is bigger.
00:39:07.758 - 00:39:23.774, Speaker B: Or equals this actual debt to liquidate, I'm simply gonna burn the debt token. So the user is calling the liquidation. So I'm gonna burn all the debit from the user.
00:39:25.434 - 00:39:28.130, Speaker A: There's a variable borrow index here, no.
00:39:28.162 - 00:39:30.134, Speaker B: Idea what that does, but.
00:39:32.194 - 00:39:33.854, Speaker A: Otherwise, if.
00:39:36.914 - 00:39:39.162, Speaker B: The variable depth of the user, the.
00:39:39.178 - 00:39:43.654, Speaker A: Variable depth of the user is not bigger than what he has to liquidate.
00:39:44.354 - 00:39:45.850, Speaker B: We'Re going to go over the else.
00:39:45.922 - 00:39:47.494, Speaker A: Here and we're going to say, hey.
00:39:48.514 - 00:39:58.610, Speaker B: But it's bigger than zero. Yes, earn whatever the user has at this point, both in variable variable depth.
00:39:58.642 - 00:40:12.654, Speaker A: Token and also in stable token. Why would I, why, why would the total collateral. Sigh ah, I got it.
00:40:12.994 - 00:40:14.698, Speaker B: So what we're doing in here is.
00:40:14.746 - 00:40:27.774, Speaker A: Okay, so I only want to use your tokens that you only want to liquidate whatever you have with tokens. But if what you have with tokens is not enough, I'm also going to liquidate you by your stable coins.
00:40:28.134 - 00:40:31.670, Speaker B: So we're going over both situations in.
00:40:31.702 - 00:40:35.166, Speaker A: Here and because what we're saying is, okay, so there's no token.
00:40:35.190 - 00:40:37.230, Speaker B: So I'm not doing this, I'm going.
00:40:37.302 - 00:40:43.114, Speaker A: Straight to your stables and bye bye. In worst case scenario, you have both, you lose both.
00:40:45.054 - 00:40:46.662, Speaker B: And once again, it's just a subtract.
00:40:46.718 - 00:40:50.614, Speaker A: It'S just a burning and amount, so you still have the depth the rest that in there.
00:40:50.654 - 00:40:55.016, Speaker B: So it's not really, yeah, awesome, awesome, we got it.
00:40:55.120 - 00:40:57.008, Speaker A: And then we do in update interest.
00:40:57.096 - 00:41:01.296, Speaker B: Rates, we pass in the debt asset.
00:41:01.400 - 00:41:03.888, Speaker A: Token address and the actual amount liquidity.
00:41:03.936 - 00:41:06.656, Speaker B: I guess here we are persisting all.
00:41:06.680 - 00:41:08.404, Speaker A: The changes made in here.
00:41:09.664 - 00:41:14.464, Speaker B: Now, now going back to a situation.
00:41:14.544 - 00:41:19.456, Speaker A: That we saw here. If the user returns the underlying asset.
00:41:19.600 - 00:41:22.432, Speaker B: What we're going to do is we're.
00:41:22.448 - 00:41:25.560, Speaker A: Going to get the liquid data token previous balance.
00:41:25.752 - 00:41:31.928, Speaker B: This is happening before we transfer back the underlying assets.
00:41:32.016 - 00:41:38.960, Speaker A: And then we do a transfer only liquidation, which I imagine is doing a.
00:41:38.992 - 00:41:44.760, Speaker B: Transfer from the user of to the.
00:41:44.792 - 00:41:48.486, Speaker A: Liquidator of Aven tokens.
00:41:48.640 - 00:41:55.250, Speaker B: Okay. Now if delicate data didn't have any.
00:41:55.282 - 00:42:00.338, Speaker A: Tokens before, what we're going to do is we're going to create a new.
00:42:00.466 - 00:42:06.994, Speaker B: Storage variable for this configuration, and then.
00:42:07.074 - 00:42:29.840, Speaker A: We'Re going to set using as collateral liquidation configuration. So we're going to set the liquidator configuration q, where these collateral reserves are coming from, probably we setting that, you know, so we're using the underlying, the current underlying asset as collateral.
00:42:29.912 - 00:42:33.400, Speaker B: In my liquidator configuration, we're just setting.
00:42:33.432 - 00:42:42.972, Speaker A: That, okay, this user is using this asset, okay. And then we pump out an event preserved, used as collateral enabled.
00:42:42.988 - 00:42:47.064, Speaker B: So I guess the user liquidated someone.
00:42:47.764 - 00:42:54.180, Speaker A: Gave the tokens back to AAvE, and automatically took Aave, put that as reserves. And in the case that that will.
00:42:54.212 - 00:42:57.612, Speaker B: Never happen before, we're going to also.
00:42:57.748 - 00:43:02.144, Speaker A: Besides transferring the tokens, we also creating the configuration part.
00:43:03.084 - 00:43:07.484, Speaker B: The only question that I have here is, can a liquidator have more than.
00:43:07.524 - 00:43:13.044, Speaker A: One type or what makes sense for me, it's having more than one liquidator, you know?
00:43:16.304 - 00:43:17.968, Speaker B: Okay, so if that's not the case.
00:43:18.016 - 00:43:19.232, Speaker A: If the user is not giving back.
00:43:19.248 - 00:43:21.016, Speaker B: The tokens, we're going to update the.
00:43:21.040 - 00:43:27.444, Speaker A: State, we're going to update the interest rates, because there's not enough to, there's not as many tokens as before anymore.
00:43:28.184 - 00:43:32.320, Speaker B: And then we're going to burn the.
00:43:32.352 - 00:43:49.832, Speaker A: Equivalent of Aven tokens because these tokens never came back to Aave. We need to burn whatever was in the smart contract so there's no imbalance in the reserves. And here what we do is we look to see if the max collateral.
00:43:50.008 - 00:43:53.432, Speaker B: Max collateral should be liquidated is equal.
00:43:53.528 - 00:43:58.604, Speaker A: The user collateral balance. That's the case we're going to use.
00:43:59.224 - 00:44:04.248, Speaker B: Is we're going to use this asset.
00:44:04.376 - 00:44:16.684, Speaker A: As his collateral on the configuration. So the user configuration will be set to this asset. Actually, no, we're selling these two false, meaning that, okay.
00:44:18.464 - 00:44:25.200, Speaker B: Okay, the user is now paying if you have any debt before, he's now paying.
00:44:25.272 - 00:44:26.864, Speaker A: So I can set the configuration to.
00:44:26.904 - 00:44:30.644, Speaker B: False because he could be liquidating something else after.
00:44:31.804 - 00:44:33.732, Speaker A: And then there's a transfer from, that.
00:44:33.788 - 00:44:45.584, Speaker B: Happens from the liquidator to token, address the token reserves of the actual debt to liquidate.
00:44:46.084 - 00:44:50.828, Speaker A: And in the end we setting a liquidation called beautiful function.
00:44:50.956 - 00:44:54.624, Speaker B: Quite an adventure to go over it, isn't it?
00:44:57.324 - 00:45:02.084, Speaker A: I'm gonna stop this session because we have already one and a half an hour, but we can keep on.
