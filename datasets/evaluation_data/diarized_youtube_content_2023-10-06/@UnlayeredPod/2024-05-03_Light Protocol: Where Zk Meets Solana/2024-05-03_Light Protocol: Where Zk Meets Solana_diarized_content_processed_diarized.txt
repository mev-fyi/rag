00:00:14.160 - 00:00:29.022, Speaker A: Welcome to episode seven of Unlayered. Today the topic is centered on privacy, and our interview will be with Swen from light protocol. But on that topic, Dave, what are your thoughts on privacy in Crypto? Generally?
00:00:29.158 - 00:01:09.074, Speaker B: It still doesn't feel that the market is very advanced on Vitalik. He just did a blog post, I don't know if you saw it, where he's talking about the Ethereum ecosystem, and he says that the three things they need are l two scaling, smart contract wallets and privacy. And I was thinking myself personally, I've never even used a privacy tool in crypto before. I think for a number of reasons, some of them are on their own chains, Monero and things like that, or they're just expensive. I never use tornado cash because it was expensive. And then maybe you're worried about if that's a black mark against the eth that you get out. So, yeah, what are your thoughts out? Have you had any interactions and what are your views on the market?
00:01:09.234 - 00:01:38.544, Speaker A: Yeah, I think I have a lot of views. So my first altcoin I ever bought was Monero back in 2016. And incidentally, when I was working at Shapeshift, we had one of the co creators of Monero come to the office and give a speech, basically on privacy and his thoughts on it and the future of crypto. And what was astonishing from that conversation was how bearish he was. Privacy. It almost sounded like he was defeated and he almost gave up. He was just like, yeah, no one cares.
00:01:38.544 - 00:02:35.018, Speaker A: And certainly Monero never really set the world on fire the way they probably thought it would. And so it's this weird dynamic where, yes, critical crypto, specifically chains like Ethereum, Solana, basically any of these base layer l one s that have account states, they are a privacy nightmare. And it's super easy to dox people and find out all the contracts and addresses they're interacting with because blockchains are public. So I think people recognize once they understand what's happening here, that that's not a good thing. But the issue is the user experience of privacy solutions for a number of reasons, whether it's just lack of an ecosystem or liquidity, or just literally, the execution takes forever. It's not good on privacy chains, and users tend to just always favor the easiest thing to use. Now we're in a state where basically everything is super public and no one's using privacy solutions yet.
00:02:35.018 - 00:02:44.474, Speaker A: It's clear that for crypto to become mainstream, these privacy solutions need to be embedded into the fabric of future crypto products.
00:02:45.254 - 00:03:38.968, Speaker B: Yeah, because if you think about the massive whales in tradfi, they don't want you knowing what they're trading in and out of at any one time. So just that alone, I feel like trading at some level has to be private. And another element of that is, I think the direction of MeV in general is that it's all going to need to sort of be partly hidden, basically, the transactions, because if you can partly hide the transactions, there's still enough for the validators to organize them in a sensible order. But you're not giving away all the information to sandwich bots and things like that. So I just think it has to move in this direction. And perhaps the reason we haven't seen it so much to date is the dominance of the industry, really, and just how high the transactions were. So tornado cache, it hit some level of product market fit, but I believe it was very expensive to use.
00:03:38.968 - 00:03:59.772, Speaker B: And I think that's why light protocol, which we're talking about today, is so interesting because it's built on Solana. It leverages all of those unique characteristics of just being super cheap and very fast block times. And so maybe that's what was needed to start bringing privacy more mainstream.
00:03:59.908 - 00:05:13.196, Speaker A: Yeah, it's funny you mentioned tornado cash, because the OFAC stuff really kind of turned it into almost a political issue where a lot of potential nefarious actors overseas were using it to effectively launder money. And then you had on the east side, like OFAC compliant block building, where flashbots basically only allowed for OFAC compliant protocols interacting with Ethereum to be processed by them. And so, effectively, if you're using tornado cash, you were waiting much longer for your block to get included. It'll be interesting to watch because I think the governments and legacy institutions might not like this idea of privacy native at the transaction level, because it would basically be like tornado cash all the time, where you could always just effectively have privacy anonymity when you're transacting on crypto rails. So that that'll be a trend to watch. I think in the past there's been kind of wars against cryptography, broadly, and that battle might play out again as. As these privacy protocols, like load protocol and the various other ones we see on the Ethereum side, start to gain traction.
00:05:13.196 - 00:05:50.094, Speaker A: So with that, we will move into our interview with Swen, co founder of Light Protocol, and you can find him at Swen SJN on Twitter. What's exciting about this interview is Light protocol is leading the charge of building ZK solutions on Solana. I think a lot of the conversation and focus on ZK. Tech and privacy has been pretty much exclusive to Ethereum, as far as I could tell. But light protocol is going to allow that design space to expand over to what's possible on Solana. And quick refresher, lightprotocol.com is the website.
00:05:50.094 - 00:06:21.230, Speaker A: It is an open source ZK layer enabling private program execution purpose built for Solana. And super insightful interview about, again, this design space of what's possible with privacy, specifically on the Solana side. Swen, thanks for joining us today. How's it going?
00:06:21.342 - 00:06:24.198, Speaker C: Yeah, thanks for having me on. Going well. How about you?
00:06:24.286 - 00:06:44.048, Speaker A: Going well, going well. It's funny, actually, here in the city, we just had the ZK summit. I believe it's what it's called, a conference. I didn't actually go, but know a lot of friends who went there. And I think ZK is one of those terms in crypto. You know, we hear all the time where, oh, yeah, we're this startup building on ZK. Everything's going to happen on ZK.
00:06:44.048 - 00:06:57.712, Speaker A: That's where all the investors seem to be coalescing around. But let's start with this. What does ZK mean to you? Like, how would you define it for the layman? Because I think it touches a lot of things, even outside of cryptocurrencies.
00:06:57.808 - 00:07:41.104, Speaker C: Yeah. Like magic, I think hits it quite well. So I define it to the layman. I mean, in essence, I think it's computation where the verifier doesn't need to know what's going on. It's the basis of, like, even with crypto, right? Like, if you have a wallet, most simple example of ZK is when you sign a transaction, right? So basically what you do with your wallet is you prove to the blockchain, in that case, that you own these funds, you're the owner of a specific public key, and no one needs to know your private key, just, you know, that private key. So, you know, I think that's the most simple examples. They're like, it's super powerful technology.
00:07:41.104 - 00:08:15.100, Speaker C: You know, the way that I got started, I didn't do maths in college. I just slipped into it. I think, like a lot of people feel right now about CK. That's how I felt about it in, you know, a year ago, one and a half years ago, when my co founder now, so he's a good friend from childhood. His name is Joe, and he introduced me to this whole thing. He was working on this as part of his master's thesis in university. And he was like, oh, let's try to build something that introduces privacy in the blockchain space.
00:08:15.100 - 00:08:38.856, Speaker C: So that was in summer 2021, which is a while back, the peak of the latest bull run. And we met up in Berlin. That's where we both are based at, during that time. And he was like, yeah, I'm building this thing. Just got a grant from these american investors. And it's basically something like, do you guys know Zcash?
00:08:38.960 - 00:08:39.480, Speaker A: Yes.
00:08:39.592 - 00:09:26.196, Speaker C: Perfect. So it's basically the idea of Zcash, where you could have private token transactions and putting these on Solana. The idea was that on Ethereum, it just was way too expensive to do cool stuff with this Ck with private state transitions. And then Solana big in summer, before it really started pumping, was like this unproven but very interesting tech. And the idea really was to try build it on Solana, try to verify a ZK proof on the Solana runtime, which the runtime is very constrained in the transaction sizes that you can send and the compute units that you can have to compute your stuff on chain. And that was the whole experiment. And I was like, sure, I didn't know anything about ZK.
00:09:26.196 - 00:09:47.492, Speaker C: I didn't even know rust. So it was like, literally, he was like, help me build this thing. You know, my background was just software engineering, trying to build projects, build startups in college. And I was like, this is an interesting project. And I'm working with my friend, whom I know for a long time. This is super cool. Let's just do it.
00:09:47.492 - 00:09:50.944, Speaker C: Let's roll with it. And, you know, just sort of went from there.
00:09:51.284 - 00:10:06.820, Speaker A: Awesome. That's an awesome story. I mean, kind of digging into it a bit. So. So ZK is magic. And I've used examples of ZK and the Ethereum side. I think I played around with, like, ZK money last year, and I think it's been deprecated since then.
00:10:06.820 - 00:10:29.758, Speaker A: But I think one of the things that hit me was, this is really cool. But it also took me like seven minutes to shield $5 worth of Ethereum. So it's not very usable. What is? I guess the key difference, if there is any, between your experiences and, like, let's call it the EVM side of ZK versus doing things on Solana. Are there any new things that are enabled by building on the Solana side?
00:10:29.886 - 00:11:11.684, Speaker C: Yeah. So, well, first of all, the people building with ZK on Ethereum, like, those are sort of the OG. A lot of the tech that we use, we owe to these people. So, like, super smart folks building super cool technology with Ethereum ZK is also used for scaling, and that's, I think, where most of the hype has been coming from the last couple of months. ZK vms. I think there's three or four different players who, you know, a couple of months ago announced their respective ZK vms. Because essentially what you can do with ZK is you can compute stuff off chain, and then on chain you just prove that the computation was all right.
00:11:11.684 - 00:11:23.420, Speaker C: So you can do that to get privacy, but you can also do that to scale, because you can process many more transactions off chain than just proof that the whole computation was okay on chain.
00:11:23.532 - 00:11:30.492, Speaker B: Am I right that you're not inheriting the privacy elements on a lot of those scaling solutions on Ethereum?
00:11:30.588 - 00:11:32.256, Speaker A: Oh, yeah, that's actually a good question.
00:11:32.380 - 00:12:16.714, Speaker C: That's an interesting one. In essence, it should be quite easy to enable privacy for most of these CK vms. So most vms focus on scalability first, because that's a very obvious thing that's very problematic about Ethereum layer one right now, and has been for a couple of years. In essence, it's definitely doable to turn on privacy. I know that a couple of them are sort of keeping it in the back of their head, and then there's some, like, I don't know if you guys know aztec network, right? They just recently raised enormous sums of money to launch their own, so to speak. ZKVM is not really ZKVM. They call it something else.
00:12:17.334 - 00:12:18.470, Speaker A: So hard to keep track.
00:12:18.582 - 00:12:56.880, Speaker C: Yeah, but they have built in privacy from the get go. You know, ZK money was sort of like one of the first iterations of that. So actually, Ethereum has some really interesting uses for ZK that Solana doesn't really have. And that's also why ultimately, we are on Solana, and why we love it is Solana has this built in scalability. Solana technically solves this whole dilemma that people have in Ethereum, where you have scalability, security, decentralization. Solana is really good at solving these things. And the way it's looking, you know, I'm very confident that it's just continuing to be better.
00:12:56.880 - 00:13:37.944, Speaker C: So we sort of inherit the scalability from Solana, which is just amazing for us, because now we have super fast verification times and we have super cheap transactions. So now we can just take the private computation part and do amazing things with it. Like, it's not about the moving tokens around anymore, it's about actual, like, arbitrary state transitions. So, like, if you're building on chain games before on public layer ones, you can't really have private state. In multiplayer games, for instance, you can't have fog of war. So there's just this limitation of use cases. That's what I'm super excited about with light v three is that we enable that.
00:13:42.804 - 00:13:56.386, Speaker A: Maybe it would be helpful to lay out a framework for how this all works. So obviously you have Solana base layer, but what are the other pieces or stakeholders that enable this private execution?
00:13:56.530 - 00:14:25.846, Speaker C: Well, first of all, why does Solana not have built in privacy? There's basically two points to this. One is that the way that Solana has consensus is it's based on transparency. So like, every validator can see in clear text what's happening. When I send you USDC on chain, everybody can verify that that's actually legit. That transaction. One of the major inventions of bitcoin core to blockchain, in essence. So state needs to be transparent, needs to be out there.
00:14:25.846 - 00:15:05.884, Speaker C: The second thing is that Solana uses an account model for its state. Everything is an account similar to how ETH works as well. Just state is also stored in accounts. When Solana processes a transaction, you have these slots of data as accounts that can be updated and read from in parallel. The problem is that that leaks data, because now you have these specific slots that get updated with state. So, for instance, if you and I both have USDC, we both have token accounts. And when I send you USDC, what happens is that the runtime just changes my account balance and yours in public.
00:15:05.884 - 00:16:04.124, Speaker C: So our new balances are reflected in just, you know, variable change in state in that account, which obviously leaks a lot of data. So the question for how light works is really like, how do we solve these two things? And it's quite complex, but in essence, what we do is that light protocol takes the computation step off chain. What I said in the beginning with, we do a computation in the client, this client could be a browser, could be a wallet on a mobile phone. We take that computation and we just generate a ZK proof zero knowledge proof on chain, the Solana program just verifies that the computation was okay. We don't batch transactions, but we just in real time, we just create these proofs, compute a transaction, and on chain, it's just verified that this transaction is okay. That's the first element. We take this computation off chain.
00:16:04.124 - 00:16:42.522, Speaker C: It's hard to grasp when there's no example. Taking you through the lifecycle of this transaction. Step Zero is the user escrows his funds into lite protocol or her funds. I'll just start with the example of just tokens, just Sol, because that's the easiest to understand. In exchange for escrowing her funds, she gets an ownership node representing her funds. So that ownership note, we call it Utxo, it's based on how blockchains like bitcoin work, unspent transaction outputs. It's just a chunk of data, chunk.
00:16:42.538 - 00:16:49.282, Speaker B: Of bytes, an iOu, to say that you've deposited your soul into the Lite protocol, is that fair?
00:16:49.458 - 00:17:16.102, Speaker C: The way that it's represented on chain is that each of these ownership nodes has so called commitment. Like, you cannot see from the Utxo itself that this commitment belongs to Utixo. So this commitment is just stored as a leaf in a Merkle tree on chain. Basically, as soon as that leaf is part of the Merkle tree, we can now prove that we have ownership over whatever the UtXO says because it's part.
00:17:16.118 - 00:17:20.142, Speaker B: Of the mercury and we being light protocol. In this example.
00:17:20.278 - 00:17:59.928, Speaker C: Yeah, that's just a client, right? So it's all about the client owns these Utxos. There's a second part to it. And I'll get into that later with nullifying. How do we actually compute transactions? But basically what we have now is in the client, we have these ownership nodes. Now we can just compute the ZK proof over whatever we want to do with those nodes. Let's say I escrow five sol, and now I want to send two soul of that on chain privately to another person, maybe to you, Dave, in private, in this realm of the light protocol ZK layer. So off chain, I compute the proof, and on chain, it just verifies.
00:17:59.928 - 00:18:31.144, Speaker C: Like there's a program that just verifies that proof. And the cool thing is that a program doesn't know what happens. All it knows is that the computation that I did off chain, where I say I start with five sol, I get three sol, you get two solid, and I encrypt it to your key. Basically, the program just knows that this computation was all right. It doesn't actually know what's going on. Just I know that. And then, obviously, when you receive your funds, you know that someone sent you tokens.
00:18:31.144 - 00:18:34.692, Speaker C: You don't even necessarily know that I sent you tokens.
00:18:34.828 - 00:19:09.738, Speaker B: Just so I'm clear. So if you're using this, you would need to send the five cell into the light protocol client. All of this magic wizardry happens in the background. That five soul could then be split up, three and two soul between two other people. The proofs that these have happened will be confirmed on chain. But the details of what's happened to that five soul won't happen on chain. So I'm just trying to understand, because surely the chain will know that five sol has gone somewhere, and then it will presumably record that two and three sol have gone somewhere.
00:19:09.738 - 00:19:14.058, Speaker B: Is it not clear that that had anything to do with light protocol?
00:19:14.146 - 00:19:47.270, Speaker C: You see on chain that initially I moved five sol into the Lite protocol program, mask row. That's an actual transfer that's happening on chain. At that point, everything that happens inside the shielded pool, that is lite protocol. All of these state transitions, nothing actually moves. The program just verifies proofs. And all that changes is the ownership of the funds that are escrowed into the pool. It happens in a way where it cannot be linked to single entities.
00:19:47.270 - 00:20:03.782, Speaker C: When someone eventually leaves the light protocol pool, then as well, you know that someone, you don't know who, but someone sent x amount of soul, or whatever it is, could be an NFT to a normal Solana address. And then obviously you have that receiving end be in public as well.
00:20:03.878 - 00:20:38.190, Speaker A: So say, for instance, I want to send Dave $100, and I don't want this to be traceable on chain. It seems to me like I could use light protocol and it'll get submitted to this escrow. And then we could do whatever we want to do shielded. But at some point, the money's just going to be for him. Maybe the balance now shows up in his shielded address, but there's no ecosystem where he could actually pay someone else. Unless the world is now all in this protocol, at some point it seems like he might need to withdraw. So I guess maybe let's connect those dots.
00:20:38.190 - 00:20:50.454, Speaker A: How does this eventually, is the world eventually just going to all need to move over to these shielded protocols? Or is there any way for this to actually help people do things on the public chain too, while preserving their privacy?
00:20:50.614 - 00:21:44.224, Speaker C: Essentially, what this creates is a second liquidity pool. In that sense, this is liquidity silo, where when you want to go back to public Solana addresses, you have that unshielding moment where the recipient that is in public is known. Again, it will always be that case, that when you use public addresses for public transfers, that's always going to be known. What happens is once you use that lite protocol, once is you break that on chain link between where the money comes from and where it ends up. And the cool thing really is that it's not really necessarily about just funneling funds from one public address to another. With breaking the on chain link it's really about the things that you can do in this pool. So essentially what you now can do is you could have a private NFT marketplace.
00:21:44.224 - 00:22:45.464, Speaker C: So basically you shield your nfts and now you have these ownership nodes and it can have a specific type of ownership node that can define could be NFT listings, counteroffers, multisig transactions, all these sort of things. So you have this second ecosystem, so to speak, that you can build up with different programs that are all interoperable with each other. And none of this is public necessarily. Obviously, if you're a developer, you can encode auditability and these sort of things, but by default you have the choice to show what's public and what's private. The core principle is that essentially this creates this second ecosystem where things are private just because chains like Solana or Ethereum, they're not natively privacy compatible. You need this new abstraction which goes from account model to utixo model.
00:22:52.544 - 00:23:30.448, Speaker B: Just coming back to that NFT example because, yeah, it's really interesting. So the idea would be that you'd have this sort of private off chain NFT marketplace because presumably you could have private auctions. And like much as you get in the real world, you know, often deals are made not in the public sphere. And yeah, you can definitely see that there would be a marketplace for that for these very high value transactions. People maybe don't want to know how much they're selling for and who's necessarily, I suppose you'll know who's bought them because you'll be able to track that on chain. But it's very interesting with regards to.
00:23:30.456 - 00:24:01.478, Speaker A: This NFT example, if I'm trying to sell really valuable nfts or just create a marketplace for them. Are there any risks, though, with this approach where we're not using the base layer, where we're kind of using these escrow contracts and I have, you know, a board ape or something worth 200k. Like, I guess, like how do you convince people that this is the right thing to do? You know, this is like all of these protocols are still like kind of being researched and developed. Like, what does that transition look like to eventually get tons of economic value on these ecosystems?
00:24:01.646 - 00:24:57.818, Speaker C: We'll see, right? Like we'll, we'll find good use cases for people to actually be like, oh, I want privacy for this. And especially in the realm of maybe NFT trading, maybe it's treasury management and multisigs, maybe it's on chain games with fog of war. We don't know what we're building is this infrastructure? And now we're super curious to see what people come up with. Hopefully new things that we can't even fathom right now. I think that would be the most amazing thing for us to see strategically. It's just that we want to look for the most high value use cases the way we're building this infrastructure. But we're really also trying to figure out what are these? Where are the power users? So far we've spoken to a bunch of NFT whales that seem very excited about just the idea of this very specific use case of NFT trading.
00:24:57.818 - 00:25:34.198, Speaker C: We'll try to bootstrap it from there. There's also for specific use cases, this interoperability with the public sphere. It's just that because it's natively on Solana, every Solana address can generate a shielded address. And you can have that movement of funds to the shielded escrow to the shielded sphere within one transaction. It's a little bit closer to Solana than rollups or L2s on other blockchains, which I think helps the case for people to be like, oh, this is another contract. To your question. I think the second biggest thing is like trust.
00:25:34.198 - 00:26:18.474, Speaker C: Obviously we all say that in blockchain, like, it should be trustless, but in the end you have humans trusting developers to not introduce bugs to the software. So basically there's a couple of things you can do. The way that we think of our system is that we have this merkle tree that is like the single entry and exit point for funds. Merkle Tree, where you have UTXO commitments inserted and then also the funds are stored in there. Actually, like you can see that on chain. One of the next steps, hopefully near to midterm, is to make that immutable. So the way we see it is like when you use Solana, you have smart contract disk as well.
00:26:18.474 - 00:27:17.584, Speaker C: There's native built in programs like the system program, and these are high security programs. You don't want to mess up when you do changes, when you make changes in these core programs. But yeah, that's how we think about our own system programs, so to speak, one of them being the Mercury program. And then we have like a set of built in programs that just verify, basically that when a new developer builds their own permissionless program, they also do a cross program invocation into our system verifier programs. And these just verify as well that actually the inputs of whatever the developer build are okay and that the Utxo in and outputs are okay. And it then just makes changes in a merkle tree where it actually moves funds around, technically. So, you know, it's the same sort of architecture or the same sort of security assumptions that you would have with something like Solana as well.
00:27:17.964 - 00:27:57.354, Speaker B: I'd love to touch upon a few more examples of things that you've imagined could be built. So obviously you've got this idea of these private NFT trading areas. I think you've also mentioned gaming. So the idea there, I'm assuming, being that if you've got a fully on chain game, part of the issue there is that the logic of the game is on chain and therefore the fog of war, as you keep saying, is hard to create suspense and an intrigue in a game if it's all laid out bare in front of you. So is the idea that you would keep the logic, potentially, or the engine, if you like, of the game off chain in this private realm?
00:27:57.474 - 00:29:03.074, Speaker C: The most basic example would be, let's say you have these trading card games where you have a set of decks and each character is an NFT, right? So now you have two players who want to select a deck. Maybe they have some certain attributes or weapons or whatever that they want to attached to their character to change the stats of that character. And then they want to play this next round and the other player should not really know what set of nfts or sfts I have committed to. Basically what would happen is that we'd have our nfts in the Shiller pool and we'd have these ownership notes. So then basically we can have this logic off chain where we commit to our set of nfts and then it's most likely going to be a mix of public on chain data and private data. You have that with NFT trading as well. For instance, when you do a listing, when you create a listing, you don't encrypt your UtxO.
00:29:03.074 - 00:29:44.576, Speaker C: So basically what you do is you emit this Utxo on chain that says, oh, I'm listing an NFT XYZ and optionally I could also say for what price I'm willing to sell and you don't encrypt that. So basically now the set of users can see that there's a listing and in this case they would either execute that Utxo without anyone knowing. So you have fully private trade execution, or the other users can create counteroffers and encrypt these to the person that listed the UtxO. So you have that mix of private and public based on whatever logic you want to introduce.
00:29:44.720 - 00:30:20.814, Speaker B: I'm just trying to think how other games are going to deal with those sorts of issues if they haven't got this sort of inbuilt privacy. So it does seem like a massive unlock. I'm just also wondering on the trading side of things how you see that going. Because I'm wondering about MeV being able to hide your transactions from Sandwich bots. Not that thats really an issue on Solana to be fair. And also theres dark pools in tradfi of OTC over the counter trading between whales where they like all the information to be hidden basically. So just wondering if you had a think around use cases around trading.
00:30:20.934 - 00:31:05.924, Speaker C: I mean it was essentially this idea would be to take the idea of a dark pool OTC trading and put that on chain verifiably. I dont know of any like huge dark pool protocol in either chain or ecosystem. The truth is we'll have to see what adoption looks like there. All we have is we have hunches, we have initial feedback from NFT whales on Solana. That's the truth. We'll have to see how it works. I think the idea of just building cool new stuff that is now possible for us, it's really building the infrastructure that enables these cool things.
00:31:05.924 - 00:31:21.164, Speaker C: I think that's just very exciting. And then hopefully there's other developers who are willing to take these primitives, work with them, and then work with end users and build things that achieve traction.
00:31:26.724 - 00:32:22.854, Speaker A: Anatoly's kind of tweeted about this topic at a broader level a few times, and I want to just bring up a couple of his tweets here where he says at one point, snark optimized programs are fully composable, no need for rollups, one state machine to rule them all. And I think he's also at one point said l two s could be ideal for things like privacy on Solana. But I guess my question is, how did you guys architecturally decide to implement it such that you're basically deploying on the l one instead? Were there some usability gains from that? It seems like there are. Obviously it's not an L two, it's a developer will use either something like ZKJs or the core protocol and give their users the ability to essentially shield their transactions. But it seems like Anatoly was almost suggesting he might see a world where an l two, like what you're seeing on Ethereum, where an l two will be this privacy chain. Almost. What we're trying to understand is like, is there something unique about Solana that made this possible.
00:32:22.854 - 00:32:30.254, Speaker A: And, like, you don't even need the l two at that point. Like, how did this, architecturally, how did you guys arrive at this design?
00:32:30.674 - 00:32:39.522, Speaker C: When people think about the brand l two? Because essentially it's like, it's a brand, right? Like you could argue that l two s are essentially layer ones.
00:32:39.618 - 00:32:40.614, Speaker A: They are, yeah.
00:32:41.154 - 00:33:27.560, Speaker C: Altoos are usually thought of as scalability tools. For Ethereum, they are one, and that's the whole branding that goes with it. That's just because Ethereum transactions are much slower and much more costly than anything that you would want if you want to build user facing applications. I think that's the most distinctive factor here, is that with Solana, it's actually feasible to verify small ZK snark proofs. These are the sort of the smallest proofs you can get, really, in terms of byte size, and just compute them in a single transaction. 400 milliseconds verification time, essentially, when you send it for RPC nodes, is like one to 2 seconds. Right now, with Solana, that's usually what RPCs can do.
00:33:27.560 - 00:33:53.154, Speaker C: I mean, the block time is about 500 milliseconds, and you can do that and it's actually feasible, right? So I think that's the most distinctive factor in terms of like liquidity silos that you have of L2. It's actually quite similar to that with lite protocol, just because you need this change in how the whole model works. It goes from account model to Utxos.
00:33:53.454 - 00:34:06.514, Speaker A: I think that makes sense. Maybe that's what I was trying to drive at is why is it that it's so quick to verify a proof on Solana? And why does it take so long to shield money and some Ethereum based protocol?
00:34:06.894 - 00:34:31.518, Speaker C: Funnily enough, so far Ethereum has been much more friendly to CK snark proof verification, specifically the growth 16 proofs that we are utilizing as well. As far as I know, it's also just like within one block, with one transaction that you send off, you can compute a ZK snark. The core thing is really that Ethereum is just much slower than Solana.
00:34:31.606 - 00:34:32.992, Speaker A: Sure. Longer block times.
00:34:33.048 - 00:35:06.164, Speaker C: Yeah, longer block times. And then you have free markets that are global because every transaction basically competes for global block space. Solana could technically also get to a point where there's global competition for block space, but that's very unlikely. I mean, when I asked Natalie, it was literally like, yeah, we'll just double validate our requirements, and then here we go. It's just like, we'll just increase block space. And that's actually quite feasible because of the way that Solana works. Right? So scales with, with hotware.
00:35:06.284 - 00:35:47.414, Speaker A: And, like, I think it's important to bring up just because usability wise, separately. And this is all obvious stuff, but it's just so cheap because it requires a lot of signatures to actually do the shielding. And Solana, so cheap, like, conceivably you could, like, have a dollar and, like, you know, do all of, like, the signs, the signings, and, and have it shielded, whereas on eth, you might spend, like, you know, tens if not more dollars just to play around with it, which I think is important for people to, like, get comfortable with this stuff, that the only way you'll actually learn it is by using it, not by, like, you know, getting on the whiteboard and trying to understand it all. And I think Solana has a bit of a leg up where people can just play with it a lot, much, much easier, much faster, and much cheaper.
00:35:47.954 - 00:36:13.800, Speaker C: When I first got started, I was looking at Solana because, you know, my co founder introduced me to it. I just, like, ran a transaction on, just on command line with the CLI. I was like, wow. Like, this was my local test validator, so it's not even that special. But it was just so quick. I was like, wow, I can actually send money. And technically it's verifiable as soon as it runs on a public network.
00:36:13.800 - 00:36:55.464, Speaker C: I mean, I was used to. So in 2017, right? Like, ethereum ecosystem already discussed, like, scaling and proof of stake. That's how I got in, actually. My co founder introduced me to blockchain and cryptocurrencies in 2017, and I sent an Ethereum transaction, and it took 1016 minutes to settle. And I was like, okay, that's the state of things, right? I don't see anything usable coming out of this. Subsequently, I also got very disillusioned when bull market of 2017 was over. But going from that to processing a Solana transaction and was like, this mind blowing moment, now we can actually do stuff.
00:36:55.464 - 00:37:42.126, Speaker C: Now. What's changed is that now Solana has, in the runtime, it's merged, it's not activated on mainnet yet, but what it has now is it has a syscall for that specific ZK Snark computation. Our version one was like, we had to actually split up the verification and process it. Just shoot 216 transactions on chain in parallel and just hope to verify them because CK Snarks ZK proof verification is heavy computation wise. And so we had to do this split up and workaround which took 40 seconds. And in total it cost, I think five cents, ten cents if you account for also the nullify and the commitment accounts that we would emit. So it's fine.
00:37:42.126 - 00:38:05.092, Speaker C: And that's what you see when you go to shield dot lite protocol.com comma when you use the interface, the sort of user experience you get. Our team has built the sort of assist call for it, just like Ethereum has. And now ZK Snark verification is about 200,000 compute units, which fits in one Solana transaction. Now is this like whole new design space that opens up.
00:38:05.228 - 00:38:11.988, Speaker B: So, yeah, so basically it's going to cost the same as a couple of Solana transactions, is that right?
00:38:12.116 - 00:38:56.484, Speaker C: For a basic transfer is actually just like the cost of one transaction. The way that there are a couple of other elements you need to solve, not just the verification itself. For instance, basically what we have of these Utco models is that we need to emit nullifiers for every Utxo that we spend. And we need to create new utxos, we need to emit commitments for the new Utxo. So basically what that is on a high level is that a commitment is just a random string. It's like hash of data, a couple of bytes, and we need to insert that into the merkle tree that is on chain. The way that we do it is that classically you would just create a PDA and you would store that data on chain.
00:38:56.484 - 00:39:49.118, Speaker C: Creating a PDA with each transaction is quite expensive. There's this thing called compressed accounts, and you obviously have heard about them. It was used for nfts, like compressed nfts. You can do the same thing for any sort of account. So we've implemented compressed accounts in a way where now these commitments, these leaves of the merkle tree would be stored on the ledger, so they would still be processed on chain. And I don't know if you're sort of aware of how compressed accounts works, but essentially on a high level is you process a transaction, you send the data that you want to store through a Solana transaction. So you still bounce to about 1 transaction bite size, but it doesn't get stored in an on chain account, it just gets stored on the ledger of the validator and then you can still read from it.
00:39:49.118 - 00:40:35.728, Speaker C: You just need to create the right indexer to read from that. It's super simple, but amazing. Just idea to actually save a lot of money when you create nfts, but also accounts. So that's the other thing you need to figure out to make it the cost of a Solana transaction. But yeah, normal private Solana transactions are just like normal Solana transactions in terms of cost and speed. And then by extension, if you have more complex private Solana programs, that's what we call them is like, let's say you have like an NFT marketplace. The way that our CLI currently creates the template for those private Solana programs is it has three computations, three steps that get executed for the whole process.
00:40:35.728 - 00:40:55.044, Speaker C: And that's not because of the computation, that's because of the transaction size limit. Because if you have more public inputs, which you need, if you have more complex circuits, more complex zero knowledge proofs, you need more bytes. And that's why you're sort of splitting it up into multiple transactions. That's the scope of performance there.
00:40:55.344 - 00:40:58.774, Speaker A: Is that going to be merged soon, did you say to Mainnet?
00:40:58.854 - 00:41:31.084, Speaker C: It has been merged since November. We had this little bummer with the last Solana outage. Obviously that sort of like stalled the whole feature activation of. I think now there's a list of like 20 to 30 features that are not activated yet. It's just not, it's not turned down and it's not part of the current mainnet release or even testnet release. So actually what we had to do to launch it on Testnet, it's our custom testnet. So we have this local test validator running on Kubernetes and exposing a public endpoint.
00:41:31.084 - 00:41:38.724, Speaker C: That's the workaround we're trying hard to. I mean, I would love to see it activated by end of the summer or before.
00:41:39.064 - 00:42:09.672, Speaker B: It'd be interesting to get your views on the regulatory side of things because architecturally it sounds similar to Tornado cash on Ethereum, which obviously is now has ofAC restrictions against it. And I think they arrested the founder. And then there's all this talk about north korean money flowing through there. So just wondering how you view that aspect of privacy protocols as unfortunate a reality as it is.
00:42:09.848 - 00:43:01.976, Speaker C: Our stance with light protocol is that we're always going to be compliant in a sense that we want to have this neutral base layer that we're creating and give the developers on top of it all the tools that they need to create whatever is compliant in their country or jurisdiction where they want to launch their product. That's the core principle, is really enable compliance, whatever that will look like in the future. I'm pretty confident that mainstream adoption for blockchains is only going to be achieved if we have decent regulation and compliant protocols. I mean, there's a couple of measures that we do with sort of rv one. So basically the relay are scans, addresses that want to shield into live protocol if they're part of OFAC or any other high risk lists. Blocks. Yeah.
00:43:01.976 - 00:44:05.112, Speaker C: And then there's a sort of deposit limit on what you can do for shielding, which should make it quite hard for people to move funds that are elicited at large, large amounts. Like with Solana as well. It's like you have bad shit happening on Solana, like with any other blockchain and occupy. The same thing happens with normal payment processes as well, is there's banks are subject to money laundering and these sort of things. The important thing, I think, is really also narrative wise, there's all these good things that happen on Solana and all these good things and useful things that happen with other payment rails. That's what I think is with light. And also when you compare it to tools like Zcash or tornado, is the beautiful thing really, is that you can have on chain games and you can have all these colorful applications that have nothing to do with the risks of some percentage of amount of funds being illicit.
00:44:05.112 - 00:44:25.674, Speaker C: Turning the idea of privacy, which is part of the, I think even american constitution. I'm not american, but privacy is just like this basic human right, takes this idea and just rolls of it and sort of creates this new design space for new applications. And the idea is to get away from any connotations of illicit use.
00:44:25.794 - 00:44:54.494, Speaker A: No, that makes sense. I think kind of to summarize and close out here, because I think that's a really good point. Point is kind of zooming out a bit. I heard of Zcash back in 2016, 2017, actually. My first on chain crypto transaction was with Monero, because I really did believe in that. The mission of everything's got to be private, all of our things in databases that can be just looked at by anybody. Fundamentally, I agree with that so much.
00:44:54.494 - 00:45:21.370, Speaker A: But here we are, five years later, six years later, and both of those protocols aren't really used that much, and the design space has moved past it almost. And so with all that in mind, like, paint us a picture of how you see the ZK landscape playing out in the next, I don't know, five years, is it going to be like a mix of people doing things on public blockchains and also doing some stuff on ZK? How do you see this playing out.
00:45:21.562 - 00:46:04.536, Speaker C: In terms of privacy? I mean, there's a couple of assumptions here. And the first assumption is that in five years, Solana will be one of the, if not the leading ecosystem for application developers that want to use blockchain. There's definitely like this super high conviction bet on Solana for us as well because we're building stuff that's custom on Solana. We want to be as close to Solana as possible just because it makes sense. And then obviously there's great use cases where you don't need privacy at all. There's other use cases where privacy would be interesting, but it's also super hard to implement. As soon as you have something like lending, you need to have quite a bit of public data.
00:46:04.536 - 00:46:55.294, Speaker C: So there's definitely going to be this mix. But I think that there's just this realm of use cases especially, I think in the on chain gaming and especially in payments and a couple of others as well. Treasury management businesses who actually want to move on chain, they obviously demand privacy. And there's this range of use cases that I can see where privacy is extremely useful and also being utilized a couple of years from now. And also in terms of five years, we're thinking in terms of you can start building private Solana programs now. Usually it takes quite some time until developers get really creative and take this primitive and build new use cases and new applications. But yeah, I think that's also going to be part of it in the next couple of years.
00:46:55.294 - 00:47:02.290, Speaker C: Things that I couldn't name you right now, being built based on that primitive.
00:47:02.482 - 00:47:23.216, Speaker A: Awesome. Awesome. Now, definitely a lot to look forward to there. And I'm excited also to see what developers come up with with this idea of private Solana programs and privacy as a primitive, which seemingly is pretty easy to use. And so super exciting stuff. So thanks so much for sharing your time with us, and it was a blast.
00:47:23.320 - 00:47:25.224, Speaker C: Yeah. Thanks, guys. Thanks, Al. Thanks, Dave. Thanks.
