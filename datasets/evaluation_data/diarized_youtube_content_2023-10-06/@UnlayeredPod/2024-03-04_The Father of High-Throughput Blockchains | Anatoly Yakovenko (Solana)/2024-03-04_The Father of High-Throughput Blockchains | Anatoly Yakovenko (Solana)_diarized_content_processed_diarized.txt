00:00:12.970 - 00:00:28.600, Speaker A: Welcome to on Layer, the show, where we explore next generation blockchains. Today is a very special episode. We have the one and only tolle creator, Solana, CEO of Solana Labs. I think wartime OS operator or something like that was your Twitter bio for a.
00:00:30.330 - 00:00:32.530, Speaker B: Open source software maintainer.
00:00:32.690 - 00:00:33.062, Speaker A: Yes.
00:00:33.116 - 00:00:33.574, Speaker B: Yes.
00:00:33.692 - 00:01:06.714, Speaker A: We love it. Thank you so much for taking the know. It's funny, it's about a year ago when we were, Dave and I were kind of in the early stages of creating this show, and it feels like an eternity ago just in terms of what's changed in markets. Sentiment around Solana, sentiment around know. Now we have ETS for bitcoin and all this exciting stuff. So really looking forward to kind of getting into it throughout this interview and lots of topics we can get into, I think one that is interesting. A few questions just on your background.
00:01:06.714 - 00:01:40.880, Speaker A: So, for context, I wrote a long form report on Salana back in May 2022. I did a bit of a deeper dive into kind of like the origins of Salana. What got you interested in making it? L. One, but even kind of zooming one step before that, would love to learn a bit more about kind of your upbringing, childhood. From what I hear, that's been a major influence on you. From what I understand, your parents fled Russia, and perhaps that has kind of colored your perception on kind of the issues with the global financial system. So maybe let's start there.
00:01:41.570 - 00:02:29.980, Speaker B: Sure, man. I mean, my family left the Soviet Union right when it fell apart, and you were only allowed to take, like, $50 per person. So there were seven of us landed in Chicago in 1992 with $350 between all seven people. There is this, like, as a kid, I wasn't privy to these problems that my parents had, but was aware enough to know that the soviet currency was bad. You kind of get a sense of like, oh, our currency is bad? And what does that mean to you as a kid? Is kind of hard to comprehend. But I knew that the dollar was strong.
00:02:30.850 - 00:02:31.600, Speaker A: Yeah.
00:02:33.650 - 00:03:21.946, Speaker B: I remember I got $1 from a relative that visited us from the states, and I was like, some point, this is going to be worth a million rubles. I had this idea that the ruble is becoming worse, the dollar is getting stronger. And it made sense in my brain. I think that actually did come to pass, which is funny. Yeah, unfortunately, yeah. And it's like, I couldn't imagine, man now as a father with kids, trying to feed and protect your family, pay for your home and stuff, to go through that and know that the currency that you have is evaporating. Right.
00:03:21.946 - 00:04:04.890, Speaker B: It's frightening. So I thought bitcoin was interesting and even had friends that were mining it and I tried mining it and I was like, oh man, I'm going to build like a GPU miner. But then the market was just moving way faster than my hobbyist aspirations. I remember there was a firm that offered ASIC and this was the first drug that I experienced in crypto. Like you prepaid for the ASIC and then they got it and then they mined with it for six months to get the advantage.
00:04:05.630 - 00:04:12.090, Speaker A: What year was this, by the way? Was this 2012? 13. Oh, wow, you're very early.
00:04:12.240 - 00:04:55.290, Speaker B: Yeah, I mean, once the financial crisis happened, I was very much aware of bitcoin, like with Greece and Greece or Cyprus that froze a bunch of banks. Everyone was like, oh man, this idea of decentralized money really popped, I think, to the forefront. I would say if you were an engineer in California, you were very much aware of bitcoin. It just didn't seem plausible or possible for it to get to where it is. Like, it seemed like very kind of like not even like Napster, like Nutella, I don't know if you remember.
00:04:55.360 - 00:04:56.700, Speaker A: I don't even know what that is.
00:05:00.110 - 00:06:29.890, Speaker B: Wow. Yeah, it seemed like a cool little protocol that was like, okay, people are messing around with this and the idea is cool, but just never thought it would catch on. Similarly with Ethereum, the idea of a virtual machine, I personally dismissed it as like, oh, they're adding JavaScript to bitcoin. And it wasn't until, I think 2017 is when DFI and protocols and Ethereum started getting not real traction, but at least like funding traction is when it clicked in my head, oh, this is a new environment for software, and it's very different than writing server software that you run on cloud or AWS. It actually has constraints that are very similar to what I'm used to. Qualcomm, which is you have a very resource constrained system, very small amount of compute and memory, and you're trying to maximize what it can do and build applications that use this one very important piece, which is that it's trust minimized to leverage something new and interesting. And that's when I really, I think, kind of my brain flips because most of my career, Qualcomm, I was an operating systems nerd and I worked on optimizations, but I really just worked on platforms.
00:06:29.890 - 00:07:22.138, Speaker B: It was always like my customer was a developer, I would optimize a stack or something, and I'm like, here's a new SDK, here's a way to use the DSP to the augmented reality or whatever. And that was my day to day. The user who I was building for, for 15 years at Qualcomm, was the developer. So as soon as I saw this, like, oh, man, this is like a system that's worse to program than the DSBs that we had. I knew that I have something that I could offer to the space. And it took me a while to kind of have that Eureka moment, but it was literally like a legit eureka moment. A buddy of mine, Steve Ackridge, who's like the CTO of Anzano, we were building a side project.
00:07:22.138 - 00:07:43.680, Speaker B: We called it tensorcloud. We're building GPU boxes in hurricane electric and building a stack for deep learning. This was before llms. This was just when people figured out how to do some cool image dreaming. You couldn't even tell it was the dream. It would just generate bizarre images. Nice.
00:07:43.680 - 00:08:12.854, Speaker B: And we were mining crypto in the background. This is when kind of the ball started rolling for me. And it was also 2017. And the reason why the prices were kept going up, that meant we could buy more GPUs. And it was like, oh, man, this thing is real, right? It is actually impacting something in the real world. For me, it wasn't a game anymore. So we had tea, coffees, and a beer at cafe Soleil.
00:08:12.854 - 00:08:27.386, Speaker B: And we're talking about single threaded mining. Why do we need many GPUs? To secure bitcoin or Monero, whatever. We were using some miner that was switching networks for optimal gains.
00:08:27.498 - 00:08:30.320, Speaker A: Oh, wow. Amazing.
00:08:31.010 - 00:09:00.022, Speaker B: And because of the coffee and the beer didn't set well with me. I was, like, up till four in the morning, like, kind of rolling around. I actually didn't sleep in my bed. I slept in the couch, because I kept waking up. My wife and I had this eureka moment. Oh, there's a way to just use the same shot to 56 because it's pre image resistant and run it recursively output as the next input. And there's a way to mix in data.
00:09:00.022 - 00:09:38.678, Speaker B: Like, you can add data to it. And that was kind of like the eureka moment that I had. There's a way to create a historical log that has proof that events had some amount of time passed between them. You can put bounds on that. So because I spent most of my career at Qualcomm, even though I wasn't a protocol guy, time is like a core component. So if you remember your physics, when you have two radio waves that transmit over the same frequency at the same time, they interfere kind of makes sense intuitively. So you have two towers transmitting at the same time.
00:09:38.678 - 00:10:25.950, Speaker B: They start interfering. So the first cellular protocols, they were called time division multiple accesses. They give each tower a very synchronized clock, and they alternate by time. And the lower the air rate between clocks, the faster they can alternate. The faster they can alternate, the less the user perceives any drops of packets when they're talking to any single tower. And more towers can basically do this round robin thing and communicate per second. And I had this idea that, oh, man, this is a source of time that doesn't have a dependency on the like, which literally will send goons out to go shut down your tower if you're transmitting incorrectly.
00:10:26.110 - 00:10:26.820, Speaker A: Wow.
00:10:30.170 - 00:11:17.000, Speaker B: I thought that that was really important, and I couldn't google for it. And these things are called verifiable delay functions. And probably if I found that Dan Bonet and a bunch of super smart people at Stanford have been many steps ahead on building PDFs and stuff, I would have been like, oh, man, I got nothing to offer here. There's experts way ahead of me. This is not like the right path, right? But for whatever reason, there was nothing to find on the Internet besides, like, RSA time locks. And I didn't see anyone apply it to use as the source of time idea. And that really kind of what dislodged me to kind of start thinking, okay, maybe I can build a smart contract platform and stuff like that.
00:11:17.000 - 00:12:30.140, Speaker B: The main attack, or the reason that I thought proof of history would be important was this idea of a long range attack that bitcoin is really good at defending, is that when I present to you the bitcoin ledger, you evaluate it from start to finish, and you can see how much energy went into it, and you can then pick the heaviest one and the network settles. And I thought, oh, man, this is stronger than proof of stake, because now it takes physical amount of time to build a Solana ledger. But that attack is basically irrelevant in practical sense because of how strong network connections are and how hard it is to break them. On a global distributed system with triple redundancy across thousands of participants, the amount of effort it would take to create a partition that could create these two long chains is so large that that attacker can basically do much worse harm. It's much faster. It's like basically NATO deciding, okay, we're going to shut down Solana. Like, yeah, okay, whatever.
00:12:30.140 - 00:13:31.962, Speaker B: You don't need to partition the Internet for kind of, that attack is basically impossible. And I don't even know if professor would be good at that. But what it ended up being really good at is actually the TDMA portion, because it's a pain in the ass to deal with the delay between sending out the data across the network and that data arriving, and the next leader deciding whether it arrived in time or not and building a block on top of it or not. And all those decisions, the faster your blocks are, the more jitter you have in propagation, the more forks you have, and the network becomes more and more unstable. And we eliminated one of the ways that the network can fork. And this is why you can see Salana single quorum. That means all the nodes are like, we have more than 2000 nodes, all sending and being block producers at the same time, and very limited forking.
00:13:31.962 - 00:14:14.910, Speaker B: So that was like, what's funny is we just had our off site Anza and fire dancer and a bunch of other teams. My favorite discussion was like, can we rip out proof of history? It seems like if that was the founding thing, that would be the thing that I would least want to rip out, but I don't care. These are all implementation details. The goal is to build an awesome developer platform that's as fast as physics allow. And it turns out that it would be difficult to build a clock that worked in the way that proof, history and VDFs are good. So who knows, it might actually end up being a useful innovation.
00:14:15.570 - 00:14:54.842, Speaker A: That's super interesting. So one of the things you mentioned multiple times in that response is how you're optimizing for the developer. And I think that's a really natural skill set for building a blockchain ecosystem. That's kind of the job of a blockchain ecosystem. One of the things I noticed when I was researching Salana back in 2022 is you also had this kind of experience trying to trade programmatically, and you realized retail is just getting really bad fills. And is it possible to build a system where we can all be on a level playing field. So my question to you is, have we achieved that at all today with Solana as it is right now?
00:14:54.896 - 00:16:07.362, Speaker B: Where are we at? Yeah, I think honestly, crypto has achieved it, that it's gotten better. I think because a single honest participant can change the equilibrium in the market. And this is like, crypto doesn't have to have 90% of market share to change. The market can actually have 5% of market share. And because it offers a particular level of service, everyone else has to kind of be equal at it to compete, at least, otherwise crypto would take over. So I think in a lot of ways, even centralized exchanges have gotten a lot more transparent. The APIs are cheaper and easier, but when things go wrong there, you just don't know, am I being screwed? Is it me? Is it the malicious cabal that's inside there that's doing it? Or is it really just some poor DevOps engineer trying to get systems back up? And before this, though, there was a real issue and I think us had to change some of the rules around this stuff.
00:16:07.362 - 00:16:59.570, Speaker B: But man, I remember interactive brokers and OANDA and forex.com. You would think you have an opportunity and you submit your trade and it would take forever to land and would effectively, the price would move or the data would get stalled and then arrive a little later and you're like, but by the time it arrives, it's useless. And I'm talking about like seconds delay, and it would just happen right in those moments. Not necessarily. Maybe it's not malicious, maybe it is effectively kind of like congestion because everyone sees the same opportunity and everyone's submitting, but because the system is so opaque, you really can't tell. And because it's not based on fair pricing, like Ethereum or Solana or any layer one is where I can just increase my in that transaction, I can pay more to get ahead. I have no clue how to fix those problems.
00:16:59.570 - 00:18:09.034, Speaker B: And with a system like Nasdaq, you literally, I don't like, give up your firstborn. There's some server somewhere in Manhattan with cables that are all exactly the same length that go to these boxes and they effectively implement censorship resistance in that one room for the selecte participants that have the privilege to be there. And when I kind of really got into the design of the network, I realized that theoretically, it's possible for a very optimized all to all kind of what Solana strives to be, to actually provide similar level of service. And it's going to be different, but it can be as good as price discovery. Know Nasdaq is. And the reason for this is a little subtle. We still live in a giant world, right? And it takes roughly like, I don't know, 100 milliseconds to travel around the world, and that information propagates through fiber optic cables or goes through satellites or whatever, but it still takes time to go from A to B.
00:18:09.034 - 00:18:59.398, Speaker B: So if some newsworthy event happens in Singapore, I don't know, bushels of grain, like a tanker sinks with a bunch of grain or something, that news wire has to go speed of light through fiber at best, right? Like, right as it happens, still has to propagate all the way to a trader's desk and that box in Nasdaq before it takes action on that news event. In a network like Solana, it's possible that a transaction is actually sent at the same time as that newswire. So by the time that newswire hits an exchange in Nasdaq, that trader is going to see the price reflected for that news and a market on Solana at the same time as they see that news wire. So they can't arbitrage between Solana and Nasdaq. Actually, in theory, they would be arbitraging the other way.
00:18:59.484 - 00:19:00.360, Speaker A: Yeah, exactly.
00:19:01.130 - 00:20:00.730, Speaker B: In the most optimal sense. And that is when there's a block producer right next to that event and stuff like that, and it's never going to be perfect. But the idea is that we can start approach that limit to where information around the world is moving as fast as transactions, and there's no latency between what is the state and Solana, this kind of giant chunk of memory that is representing all the useful financial information and the rest of the world, there's very little error between those two. And I thought that was a cool idea, idea that felt like if I imagine finance, like, 100 years from now, this chunk of memory that's synchronized around the world should exist, right? It kind of feels like science fiction. It's cool. And the technology is here that we can build it today. So I thought this might be a problem worth solving.
00:20:00.730 - 00:21:07.330, Speaker B: And I never thought of Solana as like, oh, we're competing with Ethereum as a smart contract platform or as settlement layer with bitcoin as money. I was like, I really, really want to solve this entropy problem. How do we minimize the error between all the useful stuff in the world that people care about and this representation of it in one kind of giant atomic view? And that led us down the design path, which is quite different, which means, no sharding, try to get as many blocks per second and as many block producers per second as we can, as much parallelism as we can, and build the system. And it doesn't matter how expensive the hardware is to run it, because it is the cheapest possible way to run this one cool thing. We're solving a different problem, hopefully useful to the world. And that was really kind of the goal and still is. And it's been cool to find folks like fire dancer that get it because they actually do trade, and they experience the failures that I saw at a much bigger scale.
00:21:07.330 - 00:21:23.750, Speaker B: And to them, they're like, yeah, this would be great if there was an open, permissionless way for price discovery, because even if the system gets 5% market share, it could actually dramatically change how everyone else operates.
00:21:28.730 - 00:22:06.920, Speaker C: I love this image that you have, and it makes complete sense to me, but I think I get a bit confused when trying to imagine what DFI is going to look like on, for example, Ethereum versus slana, because it makes complete sense. And yet I would say that there's almost a narrative that maybe Slana, at least this cycle, is more for retail and institutions are looking at Ethereum. You've got Coinbase, have got their own l two. Maybe there's going to be a load of other institutions who are going to build their l two s. I mean, how do you see this all divvying up? Do you think that DFI is simply not possible with the l two infrastructure? Do you think it's going to be more CFI there and DfI on Salama? Yeah, I'd just be interested.
00:22:08.810 - 00:22:56.450, Speaker B: I think we can stop using the CFI and DFI terms. Yeah. Once Coinbase launched in L two, it's just finance. That's a good one. I think the difference is that when you have all these little pods, they're kind of like their little own little Nasdaqs, and l two s, at their final kind of best, implementation, offer really good settlement guarantees for users, and that they can always get their funds back to the L1. You can even accomplish that through a bridge that effectively functions as an L two. But me and colluding node and turgle are arguing whether l two s are defined by bridge, contract or social consensus.
00:22:56.450 - 00:22:58.402, Speaker B: That's like a whole other topic.
00:22:58.546 - 00:22:59.782, Speaker A: Yeah, it is.
00:22:59.836 - 00:23:59.666, Speaker B: But anyways, at its best, l two s guarantee that users can get their funds out. It's settlement guarantees, and those are great. And it doesn't matter if there's. I think, honestly, in the world where there is 10,000 of l two s, is a world where a single system for price discovery that is as fast as physics allow is probably even more important because you just have many different asynchronous financial environments that are all slightly out of state. They're all talking in local state, dealing with local congestion, and a single giant state machine that has atomic guarantees for trading and execution as fast as physics will allow, will be a really good hedge and kind of source of truth for the state of the world. L two s. To me, Salana competing with L two s is no different than Salana competing with Coinbase or finance or Nasdaq.
00:23:59.666 - 00:24:58.938, Speaker B: These are pods of trading with markets that are local to that environment, with their own local users. Those are going to exist. There's no way they're not, right? There's no way the world is going to stop trading them and building them and creating them. And that's totally fine. I think what's cool is that Solana being run by in this open source, right, open hardware, open source software that everyone has, full transparency will force a particular quality that I think would be at least the floor quality that all of these systems have to provide. It would be an awesome world, right? If everyone, every trading environment had to be as cheap as salana, as fast at least, and as transparent. If Salana was the worst one, it's a win for the world, right? So that, to me is kind of like, it's fine.
00:24:58.938 - 00:25:09.440, Speaker B: I think l two s are good solutions for that particular problem set, but they don't actually quite build this one single unified price discovery engine.
00:25:11.090 - 00:25:56.160, Speaker A: Let's talk a bit about this phenomenon. I'm starting to see where a lot of people in crypto, whether from an investing standpoint or just an interest standpoint, are barbelling around bitcoin and Solana kind of just like not even touching ETH and even just the historical context of the interplay between ETH people and Solana people and kind of stubbing their nose or whatever. Solana's approach, for the longest time, I've seen it. I know you've seen it on Twitter versus today where you have now. There's members of Solana team at here at East Denver, which is where I'm at this week. You have projects like eclipse, Solang, neon. How do you see this interplay between these ecosystems kind of over.
00:25:58.210 - 00:27:00.126, Speaker B: Mean? What's really cool is that the devs have always been on good terms. Justin Drake was one of the first no sharding guests on Salaf when we jammed about like Duncrad has been an awesome colleague and peer in the space that I ask him random questions about KZG commitments and will respond within a few hours if he's up. We're all actually. Microsoft versus Linux was happening at a level between executives, but the engineers would all get beers together, which I think is kind of funny. Ethereum is Pareto efficient. There's like a spot for a settlement layer with a bunch of L two s. I think the design of Salana is also Pareto efficient.
00:27:00.126 - 00:27:28.380, Speaker B: There's trade offs you start making when you kind of give up on one giant synchronous state machine. So both will exist. Who knows which one will win or dominate, and it'll probably ebb and flow, right? To me, that's kind of like people are fighting over their bags, whatever those are memes that'll never. Right. Like, that's going to go on forever, right.
00:27:29.070 - 00:27:59.510, Speaker C: And just while we're on, sort of ethan soul. I think often it's categorized as modular versus monolithic, or integrated. But I saw Austin did a really interesting tweet yesterday where he talked about integrated blockchains like Solana. They basically allow you to introduce loads of different programming languages that can all settle down to the same virtual machine. And then also you can have abstracted virtual machines sitting on top of it like neon. So is that how you see it? How would you describe in the modularity of Solana?
00:28:00.090 - 00:28:42.882, Speaker B: It's like, look, a modular operating system can run all the exact same software as a monolithic one. Linux is famously a monolithic kernel. It's a pain in the ass to develop, but it's the most dominant one. And you had like a bajillion monolithic kernels that failed in the server desktop space, but worked pretty well on mobile, like Q and X and stuff like that. And it really just kind of like, doesn't matter. All the optimizations and performance improvements from one can apply to the other. It's more of, what are developers? What do they want to focus on today? Because you can do anything.
00:28:42.882 - 00:29:42.534, Speaker B: And the only difference is that the order of the things you're going to do, there's no reason why you can have a monolithic Salana also support L, two s and a whole bunch of other stuff. It's just that it's not a priority because we have this goal of how do we maximize parallelism lower block times? Do all these other optimizations to accelerate that one vision of that one slab of memory that's synchronized at the speed of light. Right. We can take steps that are in any direction, but that one goal is really what's driving that decision making, is how do we accelerate that one thing. So I think there are designs that are fairly pretty close to proto efficient, like Celestia and the thing sharding roadmap. And the folks working on them are not dumb. They're building their thing, and that's fine.
00:29:42.534 - 00:31:06.738, Speaker B: It just doesn't matter. Whether they get traction in PMF is almost like, I don't see anything in those designs that would be prohibitive for Solana to adopt or build and vice versa, except that engineers can only focus on so many things at once. You just can't do everything, it's just really tough. And that's probably the biggest difference. And when we run hackathons, when we build do events and hacker houses, all the devs are building in one virtual kind of environment, one address space, all the code and all these other things, all this shared state is all in one spot, it's all synchronous. And you see emerging applications like Jupyter, which take advantage of that, which be really hard to build. When you have a bajillion different l two s to route with, with different timing and fees and all this other stuff, it becomes a much, much harder problem, and there's people trying to solve that, but it's not going to be exactly the same or have as good of a solution, because implementations are hard, right? It takes a lot to build even a V zero version of that and iterate and optimize it while we're already like 15 steps ahead.
00:31:06.738 - 00:31:25.640, Speaker B: So I would say that's basically the way you have to think about it, is that you can do anything in software. Really what matters is what are you doing now and what are you doing like six months from now, and what's your goal? And the modular track is doing its own thing, we're doing our own thing.
00:31:27.930 - 00:31:52.240, Speaker A: Let's touch on a few topics in terms of, I guess, the future of Solana, whether it's from a technical standpoint, an economic standpoint. One topic I want to start with is just the idea of fees. Does the base fee need to change? How are we handling priority fees? Why was it set so low originally? Was that your intention when you created Solana? What lessons have you learned along the way? Let's start with the foundational idea here.
00:31:52.870 - 00:32:56.354, Speaker B: Yeah, fees are kind of a really annoying problem, and this is probably fundamentally the hardest problem, and kind of will require very vastly different solutions in the modular land versus the single atomic, kind of monolithic land. And if you even accept that the idea of a single computer that's this giant atomic salana is possible, that can run multiple applications, it has to be able to handle multiple concurrent NFT, mints, and deFi and liquidations all happening at the same time. Otherwise the system falls apart. Right. You would need to run each one in their own different execution environments, so the fees can be isolated, because it's a really bad experience if you have a deFi liquidation that everyone really wants, and the cost to access the block goes up simply because of the Watt event. Right. When I'm buying a coffee, I don't care about DeFi, I just want to buy my coffee.
00:32:56.354 - 00:33:46.594, Speaker B: Why would I pay extra fees? Because somebody else is using the chain. So you need to get isolation to work. If it doesn't work in any design, that design, whatever design you're building, if it cannot isolate use cases, it's kind of dead on arrival, or at least you haven't solved any problem that's worth solving. I think l two s that are general purpose are going to run into this and are going to see contention between use cases and some of the solution. Maybe each use case goes into a separate l three, that's fine, but some of the other ones are going to be more like Salana. And we don't want to build layers or separate things in asynchronous execution. We have to keep everything atomically in one spot so that we only have one path.
00:33:46.594 - 00:34:46.102, Speaker B: Right. We have to solve this problem. So luckily, because we were so focused on parallelism early on, we kind of laid the groundwork to a pretty good solution. And this is a very different thing between the Solana virtual machine and Ethereum, is that if you're familiar with Ethereum but not Solana, a transaction in Solana has to specify an access list of all the state that's going to read and write, and you know which parts are read, which parts are written to, and it has to be complete. You can't access any extra state than that, which allows us at the schedule level to figure out which parts of the state have the most right contention. So when you have a lot of rights to a single part of the state, that becomes sequential. There's no way to parallelize it, because somebody has to go first, somebody has to go second.
00:34:46.102 - 00:35:47.066, Speaker B: There's no way to do them at the same time. Even if you can pick any order you want, you still got to do them all in sequence. So that creates the limiting factor for how much stuff you can do in a block is actually not the overall global block space. It's the number of sequential events in any different piece of state. And this is what we can use to then create like buckets of hotspots. You have your NFT mints and you got your liquidations and you got something else, and you take the highest priority fees and you put them in each bucket, and then you take the highest earning buckets and you put them in the block, and then you have different concurrent hotspots that you're executing at the same time. And if you have space left over in the block because you've saturated all these hotspots, you can actually take transactions without any priority, whichever arrive first, which could be like a random payment or some other applications or oracle update or something else.
00:35:47.066 - 00:36:53.166, Speaker B: And this allows the network to kind of isolate fee spikes for a liquidation versus an ordinals mint versus something else to be local to that one app. So that was basically kind of like a bit of luck on us having the foresight to be parallelism maximalists, even as everywhere around the stack that we had access to that information to be able to have the solution. And it works really well. You can see go to Salana compass and you can look at fees, and you can look at median versus average fee, and the average fees are sometimes ten times higher than the median. So that's showing that there's some hotspot that people are probably like sniping mav arbitrage opportunities between all these markets. They're willing to pay a very high priority fee to be first, but that does not increase the price of access to everyone else. And that's pretty cool, but it's not perfect.
00:36:53.166 - 00:37:13.270, Speaker B: Ton of optimization still left to do. There's a whole simd on adding like 1559 style effects to each hotspot. And there's a lot of argument whether it's necessary or whether we just need to optimize the software to be faster. But it's good. There's smart people all pointing in the right direction.
00:37:15.690 - 00:37:19.402, Speaker A: Do you think base fee needs to go up though? That's something I've seen you tweet about before.
00:37:19.536 - 00:37:52.846, Speaker B: Yeah. The annoying part is like, what should the floor of the base fee be? Ideally, it is actually like one lamport. It's the smallest possible. It's the plank. Amount of value should be the floor, and then it should be based on market demand, right? If you have a lot of demand, it goes up. If you don't have any demand, it drops. It's just within human reasonable constraints.
00:37:52.846 - 00:38:38.894, Speaker B: You got to pick a top, I mean a bottom floor. That's probably not one lamport because that's too low and it'll take too much to warm up. So that's like, to me, it's like an implementation detail. I don't think the base fees on Solana need to go up for any engineering reason. The system needs to be, I would say the system that takes transactions and verifies them, checks that they're valid and gets them to the scheduler. That pipeline needs to be faster and higher throughput and be able to do its job much, much better. And then it doesn't matter what the base fee is, the faster you make that pipeline.
00:38:38.894 - 00:39:30.260, Speaker B: And the bigger that pipe is and lower latency it is, the less latency there is from a user that's observing the state of the network. So they are estimating the price for access to the state that they want, and that latency creates an error between their estimation and what actually happens. So the lower that latency is, the lower the error is, and the less kind of extra they need to pay, right? The better their estimator works. So these are cool, because these are engineering physics problems, they're not economics problems. The faster we grind, right? We look at Grafana, we look at data, and we optimize, and it should get better and better. And the price of the kind of standard base feed should be really irrelevant. Of course, implementations never going to be perfect.
00:39:30.260 - 00:39:39.720, Speaker B: There might be a change to where base fee is dynamic based on block usage and stuff like that, but we'll see.
00:39:44.570 - 00:40:06.590, Speaker C: You mentioned that the average fees have gone up a lot, even though the medium is still super low, but the average. So at the high end it's all super expensive, and that's probably because of MeV. Do you think that MEV is when we're going to have more volume? Hopefully over this bull market, do you think MeV is going to start becoming a bigger issue? Do you see there are certain areas where maybe Slano will need to improve?
00:40:08.770 - 00:41:27.270, Speaker B: I don't think there is a solution to MEV, because it's impossible to run. Just like when I described, you're estimating the state, and you're pricing your transaction, you're submitting it, and there's latency, and you mispriced it. This is really like part of the MEV problem is you're trying to estimate the value you can capture and how fast you can actually capture it, and the fee you should pay to pay for it. And you also have intermediaries that have an information advantage, because they're receiving multiple bids and they can reorder them and insert their own. And the only way that I think we can reduce Mav is by making the system faster and creating more block producers per second that can run in parallel and do this job in parallel around the world. So you as a user, you can at least look at like historically, this particular block producer does not sandwich, and I can submit to them and not to the other one, and have this guarantee that my transaction lands in some more fifo way or something like that. And the only way you accomplish that is if you have more competition and faster competition, and this kind of like auction for block space runs faster and faster.
00:41:27.270 - 00:42:36.970, Speaker B: I think that's a very kind of long term solution, but there's a limit to it. There's always going to be some MeV and some kind of fight between users and that. And my hope is that at some point, you have things like jeto can offer rebates to users. This is the amount of Med the system captures. Like, on an average, if you submit it to a Jeta block producer, you get a rebate, like, on average, right? Like, stuff like this should be happening to where it kind of equalizes the opportunity costs for everyone. But I don't think there's anyone that claims there's a solution to MEV is just moving it to another part of the system, and maybe that part is centralized or is at least not very competitive right now, but eventually it won't be. I think looking at jeto and stuff, from what I can tell on their numbers, the priority fees on the network were still higher than the MEV searcher tips on an average.
00:42:36.970 - 00:43:30.398, Speaker B: So I don't think we're at a point where we see this very dramatic searcher wars that you see on Ethereum. And this is something that I'm very curious about. Is this a function of faster blocks? Because in theory, this makes sense to me at a gut level. You have state that synchronize every 400 milliseconds, and the opportunity for my estimation. Right, like what? I think the price of any asset is going to be within that 400 milliseconds, and that's a much smaller window for the price to move on finance and everyone else versus the 12 seconds that you see in Ethereum. So I should be much more accurate about what I'm willing to pay. My slippage should be much, much lower.
00:43:30.398 - 00:43:46.370, Speaker B: Right. And that should actually squeeze the amount of MeV anyone can extract to a much smaller number. The question is how much. How effective is, like, I don't know yet, but it does seem like it's dramatically better than Ethereum for the same volume.
00:43:47.190 - 00:44:24.320, Speaker A: I agree with that. I think just the way Solana is designed, there's just not as much opportunity for MEV extraction compared to ETH, the mempool as well. So one question I want to touch on, actually, is on the technical side here. Obviously, we're all excited about fire dancer. Outside of fire dancer, what is kind of the most important agenda item or technical piece of the roadmap that we need to focus in on and kind of like, on the same lines, is Solana today ready for mass usage? Like hundreds of millions or even a billion people? Or are we still away from that?
00:44:29.670 - 00:44:58.620, Speaker B: If that many people came in, the engineers have enough motivation to fix those fires and get it to work within like months. I would say we're like three months away from whatever problems arise. We don't know what the order is. Like a dependencies, right? Like what are the billion users doing if it's all payments? That's a trivial fix. Versus like, they're all slamming the exact same market.
00:45:00.910 - 00:45:01.974, Speaker A: They're all minting.
00:45:02.102 - 00:45:49.462, Speaker B: Yeah, they're all minting NFTs, right? Depending on what those users are, we can't fix all the problems right now, just simply not enough time. But if we knew exactly what those billion people were going to do, it's probably within three months of heads down, people not taking weekends, but fixing whatever those problems arise. I think it's simply because the hardware is here. SSDs right now. Like commercial SSDs. We're not even talking like crazy expensive server grade SSDs, but Samsung like 990 or whatever, does 2 million I o outs. It's insane, like how fast these systems have gotten.
00:45:49.462 - 00:46:28.754, Speaker B: So the hardware is here. There's like a terabit of PCI bandwidth that you can get in a box. It's an absurd amount of bandwidth between your chip and all the peripherals. So there's enough hardware to where we can kind of shove it in and get it to work and then optimize and stuff like that. The question is, if there's demand, you can do it. But if there's no demand, people would rather not create technical debt and take the time and build the right solution and kind of get there a little longer, but with a little less work, little less weekends and. 04:00 a.m.
00:46:28.892 - 00:46:30.362, Speaker A: Enjoying life a little bit.
00:46:30.416 - 00:46:30.682, Speaker B: Right.
00:46:30.736 - 00:46:36.540, Speaker A: And what about on the fire dancer front? What happens after that? What are we kind of focusing on.
00:46:38.270 - 00:46:54.862, Speaker B: Like design wise? I think the biggest change that I feel like the network could implement is asynchronous execution. And this is basically separating consensus from execution of all the transactions. This sounds very modular.
00:46:55.006 - 00:46:58.420, Speaker A: It does, yeah. What do you mean?
00:47:01.110 - 00:47:42.330, Speaker B: Yep, everyone had the same ideas for the last five years. It's just, again, order dependencies. You build this, you ship that, like get users and stuff like that. But it's an obvious improvement because when you run a system that's synchronous like Solana, you have to provision it for the worst case at any given moment. But if you can make some stuff asynchronous like only once in epoch, everyone needs to generate a snapshot, you can actually batch execute a bunch of blocks that have already been finalized. You're not dealing with picking forks and doing all this in real time. You just have a big pile of transactions that you need to process to get to the snapshot hash.
00:47:42.330 - 00:48:37.422, Speaker B: And you do that behind the scenes, and that's much, much cheaper. And you can provision that system to be much, much closer to your average load, which is cool. And it's a dramatic ten X improvement, I would say, in utilization at the same time, stuff like RPCs and stuff that need real time access of all the data. Those can be big boxes, but they're not putting that requirement in everyone. So that, to me, is like the biggest change we can make. There's a couple of economic changes too, like the state rent, like making it dynamic and having a compression sweep, things like that, and fixing the base fee, making that dynamic. To some extent, those are like, I would say again, if it was a fire, everyone knows the design and the solution.
00:48:37.422 - 00:48:52.120, Speaker B: It would get done ASAP, because there's not a fire right now. People are like, okay, well maybe we ship fire dancer first and do it after and stuff. Those are decisions that people are making because we have the luxury right now to do that.
00:48:53.690 - 00:49:17.146, Speaker C: I saw another one of your tweets where you are maybe looking further ahead into the future of potential labs projects. You had a couple generalized compression for programs aggregating all the ecosystem projects into an SDK. And then another one was quite interesting, which was civil human liveness check. So, infrastructure to launch your own UBI, any of those which you're considering seriously?
00:49:17.338 - 00:49:22.160, Speaker B: Yeah, probably the last one for mobile. Like, the mobile team really liked that one.
00:49:22.610 - 00:49:23.678, Speaker A: Oh, that makes sense.
00:49:23.764 - 00:49:41.720, Speaker B: Qualcomm actually worked on a whole iris scanner stack and stuff like that, and doing the civil checks back when I was still there. The tech is there. We'll see if we can stuff it in the phone. The phone is probably taking up a lot of my time.
00:49:42.650 - 00:49:43.560, Speaker A: Oh, wow.
00:49:47.610 - 00:51:13.858, Speaker B: It's a really cool opportunity to my dream. I don't know what we'll be able to accomplish, but my dream is to enable as many deep in these use cases for developers that they can kind of leverage. Maybe it's a Sybil check. Maybe it'd be awesome, right? If hive map all of a sudden had a hundred thousand available units that they can map with, right? If helium, if we could help them with creating mobile, I don't know, like Loren hotspots or stuff like that, or wireless checkers and metrics and things like that. Or iris checkers or whatever. There's a bunch of different opportunities for a handheld kind of crowdsourced, either sensor array for things like helium tower service, or data for maps or eyeballs or whatever you can imagine. Again, a lot of the engineering work we're doing is a bit like putting the cart before the horse, because you need to build this hardware platform, right in a phone form factor, build the SDK, and then see what devs build.
00:51:13.858 - 00:51:29.580, Speaker B: And then out of the ten bets that you make with your hardware, maybe one of them pans out, and we have no clue which one that's going to be. But it is a huge opportunity to get this effectively kind of crowdsourced sensor array out to as many people in the world as we can.
00:51:32.030 - 00:52:04.274, Speaker A: One other area I'm actually very curious to get your thoughts on. So I guess the hottest narrative in crypto right now is just anything to do with AI, whether it's data collection, storage, decentralized GPU access. And it feels to me like the top tokens of the next cycle will all probably kind of be along those themes. What's your view on fact versus fiction and how crypto improves AI versus what's probably just more of a narrative thing and maybe won't pan out into anything? How do you think about this?
00:52:04.472 - 00:52:42.110, Speaker B: I mean, Hivemapper is probably the most real AI project in crypto. They have a massive crypto based labeling system that's crowdsourced. So they're generating a lot of data. They're labeling it, and AI is actually consuming it. So that one, I think, is already like, AI really needs to solve where AI intersects crypto. I think in places like imapper, we can create data sets that are hard to get. Otherwise, I don't see a huge advantage.
00:52:42.110 - 00:53:20.570, Speaker B: The other opportunity is like something like ionet or render, right? Where you're providing a compute farm. That one's more obvious because bitcoin proof of work. You ship a bunch of asics. This is proof of useful work. People have been trying that for years, so those are probably going to stick and succeed, at least for some use cases. It's hard to build a deep learning data center that can compete with OpenAI in a decentralized way because of the capital investment that goes into the data center itself is like astronomical. It's not crowdsourceable.
00:53:20.570 - 00:54:24.958, Speaker B: It would be effectively like everyone chips in to build a data center, which is like, you don't need crypto for that. Or I was going to say rocket shipped, right? But I think as these models actually start solving real world problems, they're actually going to get smaller and more efficient. And then where crypto works is like basically deploying them at the edge, which is hard for a centralized company to get. Whatever that model may be, have it be globally replicated and working closer to the user at a lower latency and maybe with hardware provided by some other user. Right. So stuff like that, I think is where crypto shines is in this kind of crowdsourced hardware and connectivity. I think using LLMs as oracles for prediction markets and things like that could also be interesting.
00:54:24.958 - 00:54:38.178, Speaker B: But these are like, I don't know, I don't know how much these may be popular, right? I don't know, but I don't know how useful they're going to be to end user versus. It's kind of a gimmick.
00:54:38.354 - 00:54:56.826, Speaker A: I don't know when you referred to these models being run at the edge, I mean, I think it makes complete sense with respect to data collection. And I think there was a tweet out there showing that Hivemap or newer road was closed when Google Maps even didn't know. Are you referring to also just like running the models, the edge too? Like crypto can help there or maybe elaborate a bit.
00:54:57.008 - 00:55:04.480, Speaker B: Yeah. Again, AI is pre product market fit outside of kind of competing with search.
00:55:05.330 - 00:55:05.790, Speaker A: Sure.
00:55:05.860 - 00:55:06.474, Speaker B: The LMs.
00:55:06.522 - 00:55:06.926, Speaker A: Yeah.
00:55:07.028 - 00:55:58.110, Speaker B: Right. So this is a whole bunch of speculation, but if you do need real time data analysis that's all over the world, it's really hard to deploy that hardware. So you're kind of doing, do I need to take this data, ship it all the way to my data center, run inference there, and then ship the result back to the user versus there is some piece of hardware really close to the user that does it, and you save on bandwidth and latency and stuff like that. So if the models can be shrunk to the level of they can run on laptops and hardware, then crypto is a really good place to be. Like, okay, there's a bajillion desktops and kind of lower end hardware that can run these things. Now let's tokenize them and then let people deploy on them and earn some tokens and stuff like that.
00:55:58.260 - 00:56:04.930, Speaker A: I see. And there's also, I guess some privacy benefits too to doing things at the edge. Okay, super interesting.
00:56:05.080 - 00:56:54.820, Speaker B: But again, there's like costs, pain of setting that up and deployment and the fact that these are crowdsourced, you're going to have different level of quality. These are not like guaranteed, right. There's no guarantees in life for these kinds of business cases, but I could see one of these working if there is very good inference. PMF somewhere we're still again, AI is really exciting. I just want to taper people's expectations. We may not see a use case that you would use outside of asking chat GPT random questions for the next five years in AI. That might be it.
00:56:54.820 - 00:57:01.170, Speaker B: It's actually really hard to find PMF with these systems.
00:57:02.150 - 00:57:02.850, Speaker A: Interesting.
00:57:03.000 - 00:57:11.110, Speaker C: What about text to video, which they'll be releasing shortly with Sora? Do you not expect that to be maybe another sort of creative side thing.
00:57:11.260 - 00:57:50.660, Speaker B: Outside of like I saw the Sora tweets, the sora stuff on Twitter, but I didn't use it because I don't mean sure I can go in there and type in some random thing and see the video, but I'm not going to spend my day entertaining myself that way because I got better shit to do. It's a thing that maybe is useful if the output can be really good for content creators and it simplifies and streamlines their thing. That's a B two B product. It's not a consumer product, right?
00:57:51.350 - 00:58:06.360, Speaker A: Yeah. And even like the best use of LLMs, for me at least co generation and I guess copilot coding, that is still not really a consumer. That's more. Maybe not B two B, but it's for builders creatives. That's a small market. Interesting point.
00:58:08.170 - 00:58:12.298, Speaker B: They're small markets, but probably definitely the revenue there.
00:58:12.384 - 00:58:49.800, Speaker A: Yeah, it moves the needle in a big way. Yeah, it's a good point. One thing I wanted to touch on actually, is just this emergence. Obviously, Solana is probably, I guess, the first successful high throughput blockchain. Right. There was EOs back in the day, but Solana kind of made it happen and inspired, I think, a lot of other ecosystems, whether it's the move, blockchains, or even things like Monad, just parallelizing on EVM. What's been your kind of reaction to mean? Have you guys learned anything new about some other approaches that are being taken? Or do you guys feel like Solana is solidly ahead of the pack on that front?
00:58:52.090 - 00:59:16.394, Speaker B: I mean, it's good to see kind of the idea of indicated, right. So that's pretty of. I kind of expected it to happen earlier. I'm surprised that it took so long, which just made it easier for us. Right. It gave us more of a head start. I think it's also good for the industry to take a bunch of approaches.
00:59:16.394 - 01:00:18.820, Speaker B: Like we took one approach for parallelism. There's an infinite number of ways you can build these systems, and it's hard for an engineer to predict which one's the best. So if there's something that's clearly better than, like, we should adopt those ideas into Solana, and it's good to see that kind of iteration happening all over the industry, I don't know which one's better. If there's a standout thing that I learned yet, I'm pretty curious about how well those systems are going to work under load with multiple concurrent use cases happening. I don't know if you saw, I made this again, random tweet TPS is not going to matter. The number of concurrent hotspots is going to be the most important thing. So we're yet to see these other systems handle a bunch of concurrent events at the same time.
01:00:18.820 - 01:00:42.060, Speaker B: I'm pretty confident that Solana can handle multiple concurrent events and do pretty decent isolation. And basically all the work that we're doing is like finding where isolation falls apart at what throughput and fixing that and scaling it. And that's a never ending job. I don't know if it's easier to do that in their environment versus ours. And time will tell, right?
01:00:46.990 - 01:00:55.840, Speaker C: Because I suppose you had a related hot take on Twitter with this where you said, basically, you don't think there'll be another order of magnitude improvement upon salon's design.
01:00:56.850 - 01:01:46.142, Speaker B: Yeah, I think that you're not going to get like, the fees are. So there's multiple ways you can interpret that. The fees are so low now that even a ten x improvement in fees on Salana is not going to enable a new use case. And also because the fees are priced in isolation due to hotspots, they're not priced based on the physical constraints or the software algorithmic constraints of the system. There's no way to really improve that. If you had the exact same hotspot happening in an L, two, or inside move or whatever, the price would probably be about the same to access it. That's kind of like you're not going to get an order of magnitude better.
01:01:46.142 - 01:02:05.410, Speaker B: And this is what I meant. And if we're there, right, if we actually got there, and maybe somebody else gets 20, 30% better, sure, they put in the grind and blood, sweat and tears to figure out those optimizations, but it's not as big of a magnitude improvement as going from Ethereum to Solana.
01:02:07.190 - 01:02:28.858, Speaker A: What about Solana kind of embracing and moving towards a multi client chain? I think there's a lot of benefits to that increased robustness of the network on the other hand, I think it'll take longer for upgrades to be kind of taken up by the network, which is, you mentioned 2000 nodes at this point. Are there any lessons from ETH or how are you guys thinking about this transition now?
01:02:29.024 - 01:03:30.878, Speaker B: I think we are far more ready to embrace safety over liveness. I think basically everyone in the ecosystem is like, yeah, as soon as fire dancer is stable, where it stays up for a couple of months, we should get more than 33% of the network running in a mode where if one disagrees, they both halt. So we will take a liveness failure and fix the bug in labs or fire dancer client over the possibility of letting that bug be finalized. I think that is again, social consensus. Ethereum could do this too. I think there's never going to be a liveness leak on Solana because of that. Because I think there's actually like, if you really, which is kind of weird, I don't know why we're so focused on execution and they're focused on settlement that they would pick that they would rather run.
01:03:30.878 - 01:04:33.618, Speaker B: Like, in my mind, if we have four clients that are all effectively enshrined as correct, that all four are socially agreed upon to be an implementation of the exact same protocol, if one of them disagrees, the network should hope not continue. Right. And that is a stronger safety assumption, that if three of them are still in agreement, the network should finalize blocks. In my mind, that's like you're actually giving up an opportunity to potentially catch a catastrophic, very unlikely but catastrophic bug. Right. So what is the right setup is like, what's weird is that I think the Ethereum folks are more inclined to be, well, if three of four are running, we should continue running the chain versus, I think in my mind you probably should halt it. If you have really socially agreed upon that these are true implementations of the protocol, then that's like a scary event.
01:04:33.618 - 01:04:52.230, Speaker B: Like, why is this thing disagreeing with everyone else? That could be the only one that's correct. This is probably, I don't know. Yeah, in my mind, if you really, really care about securing a lot of value, you need to favor safety over liveness.
01:04:52.910 - 01:04:59.366, Speaker A: Is there a way to actually make that, I guess, default response once this does happen in like a four client.
01:04:59.398 - 01:06:10.050, Speaker B: World, for instance, I mean, it's up to each individual operator, but the operators, that stake is always going to have power law distribution, you're always going to have aggregation of stake. So the number of nodes to get to 33% or 51% is going to be much smaller than the bottom half. And those that are in the top half should run multiple nodes and run them in this both high availability setup, but both also in high safety setup, where if one disagrees in their fleet, the fleet shuts down or the fleet stops confirmations, right. Not shuts down, but basically in that environment, something that is undefined happened and you got to page your duty. Right. Whoever wrote the client and make sure it's fixed and stuff. I think that in the very least, if one disagrees, operators that are dealing with user balances, like exchanges, circles and stuff, should stop deposits and withdrawals until that client is resolved.
01:06:10.050 - 01:06:14.580, Speaker B: That is like the bare minimum that I would recommend.
01:06:16.230 - 01:06:39.020, Speaker A: It actually reminds me of Vitalik's tweet recently where he was talking about this trade off between simplifying the L1, even at the expense of more complicated L two s. Basically, it's worth reducing the code burden of L two s to allow them to be simple. Was any of this kind of inspired by that? Or is he just kind of like, everyone's coming to the same conclusion, too?
01:06:39.950 - 01:07:01.060, Speaker B: I think even if we're building kind of these different pareto efficient spots, there's just so much overlap in ideas and stuff. I think you're going to see more and more of that, like asynchronous execution. Salana is an enshrined l two. Optimistic l two.
01:07:07.030 - 01:07:07.442, Speaker A: And.
01:07:07.496 - 01:07:14.118, Speaker C: Yeah. What do you think about the possibility of Salana being a shared sequencer for ethereum? L two s, because I think there's a project.
01:07:14.284 - 01:07:30.040, Speaker B: Yeah, Rome. Yeah, that's great. I think there's some really weird constructs you could build where you have part of the Salana state is also in the same sequencer, so you could kind of bridge in and out.
01:07:30.370 - 01:07:31.120, Speaker A: It.
01:07:33.330 - 01:08:10.970, Speaker B: Is a weird construct and kind of, like, rubs that definition. What is an L two? Is it the bridge contract or is it the social consensus that really kind of intersects? I don't know if that's an important argument. Like if we'll ever actually. Actually see if it'll ever be tested, where the sequencer and the bridge contract and the l one disagree at the social layer. I don't think that'll ever be tested, but it is an interesting thought experiment.
01:08:12.830 - 01:08:23.054, Speaker C: And another thing which always grinds my gears is, I don't know. Everyone quotes you as saying, basically, Solana can never possibly be money. And because Anatoly has said it, therefore it can't be.
01:08:23.092 - 01:08:23.680, Speaker A: So.
01:08:24.530 - 01:08:38.718, Speaker C: It frustrates me, because basically it's the same setup as, you know, you've got money coming into ETH holders and various reasons why you'd want to hold it and store value and all these sorts of things. And everything that applies to Ethereum applies to slime risk.
01:08:38.814 - 01:09:18.814, Speaker B: I feel like saying that something is money is just kind of malicious marketing to people that don't understand that argument. It's like you're trying to. It feels dishonest to me. It is misleading. I just don't want to participate in it. Everything that is program that can be transferred with a self custody signature is exactly the same with respect to money. It is competing in the same to.
01:09:18.814 - 01:10:11.520, Speaker B: That's maybe fair to say, like, yeah, Solana is competing as a product, but I don't want to say Sola's money because that is misleading to people that don't understand that statement, because they will interpret it as it's as good as a dollar or something like that. And that is massively misleading to everyone that says it and to everyone that repeats it. I feel like is doing a disservice. Any cryptographic system that has means to permissionlessly transfer from a product like kind of requirements perspective is competing as money. Whether it's used as money or not, I don't know. I don't think it matters, honestly. Solana would be.
01:10:11.520 - 01:10:32.520, Speaker B: I think I said this on bankless. If Solana was doing a bunch, know all the volume on Solana was against the ETH pair, and it was the most dominant place to trade ETH. I would be happy. Everyone would be happy. It's got product market fit. It's doing stuff. Look at it go.
01:10:32.520 - 01:10:35.270, Speaker B: No one would complain.
01:10:36.890 - 01:11:01.760, Speaker A: That's fair. One other, I guess, criticism that I've heard about Solana basically since I got into it, is highly centralized. You mentioned there's about a few thousand nodes, pretty power law distributed maybe tens or 100 or so is enough to kind of halt the chain. How do you see that playing out over time? When do we get to a point where it's decentralized enough and how do we get there?
01:11:02.950 - 01:12:04.942, Speaker B: So, from a physical perspective, you don't actually need a lot to be decentralized, because the real strength of these systems is any single one full node is enough to prove correctness. This is kind of like what makes proof of stake really strong is that it's very hard to partition the physical Internet. So we have connectivity between all honest operators. And even if the majority of the quorum doesn't matter how much stake it has, there's no economic security. It doesn't matter if it's Chihuahua chain or ethereum. If I have my full node, and the rest of the quorum has a fault. I can actually prove that my full node is correct because of a copy of the data of all the cryptographic signatures, and I can show it to the rest of the world, and they will believe me, versus this massively staked network, because that one will fail a cryptographic check or a hash or something.
01:12:04.942 - 01:13:03.442, Speaker B: It'll have an invalid state transition. That's all you need is that proof? So the strength of these systems with respect to decentralization comes from that they're permissionless, that anyone can participate and get the data. And it takes one honest operator to prove to the world that they're correct. The actual kind of decentralization comes from enough people doing it that it becomes very unlikely that they're all, like, asleep and don't give a shit. And that is more of a squishy social consensus kind of BD thing. And that's achieved through product market fit. You have enough builders, you have enough NFT projects like Magic Eaton's node, and their copy is as good as circles or a meme bonk or whatever that launches a validator.
01:13:03.442 - 01:14:09.418, Speaker B: Their validator is as important as coinbases, right? Like, at the end of the day, because they have a full copy of the ledger, they have all the signatures. They can totally prove that this is, that's, that's really what's important in these systems. And I think Solana is already there. I think we're well past a point where, I don't know, some malicious entity could update the state and nobody would catch it, and people would be like, whatever, who cares? Even if it happened? So I think that's basically there. I think, um, what I really like seeing on the, like, the real effective decentralization front is that, like, during the core dev off site, there were five different companies. They all had different ideas. People were arguing about, like, they all agreed in a vision, like, hey, this really fast single state machine is really important.
01:14:09.418 - 01:14:49.126, Speaker B: They're arguing about which order of events to build, and that creates, like, a really awesome kind of bus factor to where you see knowledge transfer from the original core engineers to these new ones. They all have really good ideas. They're all smart, and they're all kind of pushing it in the right direction. That's the final hurdle for decentralization. And probably, like, this core dev meetup, I felt like, holy shit, where it's like, out of my control, out of my hands. It's like, moving on its own. It was a pretty cool feeling, no doubt.
01:14:49.158 - 01:14:55.500, Speaker A: I mean, by the way, what other takeaways or interesting things can you share from that core dev meetup? It sounds like a lot happened.
01:14:56.910 - 01:15:15.330, Speaker B: Yeah, basically, everyone has the right ideas. We all want to do the right thing. It's a question of when and is it worth to do this now and delay fire dancer versus not. And we're trying to find those optimizations that will speed up the fire dancer timeline.
01:15:21.270 - 01:15:32.440, Speaker C: So just wondering about institutions and do you think that this might be the bull market where we finally start seeing them in? Especially the fact it's starting with ETF and Larry Fink shilling it on the news?
01:15:33.370 - 01:16:24.230, Speaker B: It's over my head, honestly, I don't know. I think if you saw the last cycle as the transition from the cipher funks to the hoodies, the Mohawks to the hoodies, we're seeing the transition from the hoodies to the suits. And it's like, I hope it's not this cycle, but when it happens, it'll be sad. We're all going to look back and remember a time where things are simpler and easier and more fun. That's honestly how I feel. It's more fun to work in, I think, an up and coming environment versus one that is fully mature.
01:16:24.730 - 01:17:02.980, Speaker A: Yeah. What excites so maybe to kind of tee this up here. I think Solana is known for being the home of deep in projects. I think it's known for being probably the best way to do payments in terms of speed and cost. And obviously, there's now an emergent defi ecosystem. It's been probably number two in NFTs for the longest time, maybe number three, depending on how you look at ordinals, and that changes all the time. But I guess my question to you is, what's exciting to you in Solana? What projects or areas do you think are maybe underappreciated, but are going to do really amazing things in the near future?
01:17:06.250 - 01:18:12.778, Speaker B: Deepen is like, I'm really excited about because of just how painful it is to deploy tons of hardware to solve a problem. It's just such a huge coordination problem. And having watching crypto solve it successfully over and over is really promising. So hive Mapper, iona, renderer, helium, those guys are really excited about. And those projects take a long time to build and get PMF, but it's all happening, I think Jupiter and really demonstrating that there is a very different defi that's starting to form on Solana versus Ethereum, I think to me was really cool because you can see a vast difference between it can't work in a place with expensive fees because as you start composing more markets, your fees go up astronomically. That doesn't happen with Jupiter. And it can't work across a bunch of different l two s for the same reason.
01:18:12.778 - 01:18:53.538, Speaker B: Both asynchronous execution and the time and fees start to kind of blow up. So it's cool to see that there's a very unique aspect to salana Defi. And seeing that emerge was really exciting. When we did our mobile sale, we had our Shopify plugin support, both credit card and USDC payments. Same price, no incentives to the user. And over 50% of users picked USDC. And you can clearly tell like, holy shit, this is 600K that we have to pay to Visa Shopify.
01:18:53.538 - 01:19:27.940, Speaker B: And this credit card rails because of the banks and all these. This giant intermediate stack gets paid by those fees. It's not Visa's fault or Shopify's fault or anyone else. It's just there's like a whole bunch of dependencies versus directly USDC, like minimum fees, like basically transaction fees. And you can see that this dramatically simplifies payments because of the number of intermediaries. Goes from n to one to just circle. And that's awesome.
01:19:27.940 - 01:19:47.110, Speaker B: And that was unprompted. And a global sale that was substantial. And it feels to me that if we are able to do this, then there's probably thousands of companies that can probably get 50% of their revenue through USDC and Salana.
01:19:47.470 - 01:19:56.300, Speaker C: Final question for me. But it's a bull market. Desperately unhealthy. 18 months ahead of us. How are you planning on touching grass and getting outside?
01:19:58.270 - 01:20:24.050, Speaker B: See those surfboard? I mean snowboards? Yeah, I like board sports. We are getting into the summer, so I'll see if I can go start surfing. But yeah, that's basically like I work out, I lift. I used to be an Iron man before startup with kids. Now surfing and snowboarding. Probably my main two things. And lifting weights.
01:20:24.470 - 01:20:28.070, Speaker A: You just did a tweet recently about board sports, right?
01:20:28.140 - 01:20:36.070, Speaker B: I think I saw that, yeah, moonwalk or whatever. Built like a little step to earn thing or whatever.
01:20:36.140 - 01:20:36.726, Speaker C: It's awesome.
01:20:36.828 - 01:20:37.480, Speaker A: Yeah.
01:20:39.850 - 01:20:44.330, Speaker B: Well, I don't know if you still board. You probably have used slopes.
01:20:45.870 - 01:20:47.194, Speaker A: I never heard of that.
01:20:47.392 - 01:20:54.670, Speaker B: It's an app which tracks your runs and stuff and you can share with friends. I just want to earn tokens.
01:20:57.650 - 01:21:20.614, Speaker A: That makes sense. Fail resorts if you're know we got an opportunity for you here. They already have the. That's awesome. And I guess final question for, you know, we're in this know, as Dave kind of alluded to, it's bull run. I don't know if you want to call it early innings, but we're kind of in it now. Bitcoin broke 60K, Salana is above 120 or whatever.
01:21:20.614 - 01:21:29.900, Speaker A: And do you have any words of wisdom for whether it's vets of crypto people just getting into it for the first time? Just closing thoughts here.
01:21:31.310 - 01:21:52.830, Speaker B: There's definitely no guarantees that it's another bull run, so just because there were been multiple cycles around the happening doesn't mean there'll be another one. Honestly, I think history doesn't repeat itself. It rhymes, so every time it's slightly different, so don't fall into the same patterns.
01:21:54.370 - 01:22:06.630, Speaker A: Very wise words. Totally. Thank you so much for taking time out of your extremely busy schedule and looking forward to everything that the Solana ecosystem comes up with in the next few years here.
01:22:06.700 - 01:22:20.900, Speaker B: Awesome. Thank you for having me close.
