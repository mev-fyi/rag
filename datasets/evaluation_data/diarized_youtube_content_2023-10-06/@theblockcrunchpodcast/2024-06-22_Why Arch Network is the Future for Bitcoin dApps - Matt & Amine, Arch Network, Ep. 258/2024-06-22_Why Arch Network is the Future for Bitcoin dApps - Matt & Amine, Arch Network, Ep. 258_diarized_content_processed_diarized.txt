00:00:00.120 - 00:00:35.900, Speaker A: You've already seen this play out on Ethereum before. We see the users who try to speculate and collect these digital artifacts. And really what it represented in bitcoin is the concept of permanent and premium. There's a certain premium that is associated with bitcoin assets, and having the ability to collect those digital artifacts and art pieces on the most premium chain was something that made a lot of sense. Web three offers a brand new petri dish. Our jobs buy great tech at great prices. AI is also libertarian right enable use.
00:00:35.932 - 00:00:37.636, Speaker B: Case that people haven't been able to do today.
00:00:37.700 - 00:00:39.260, Speaker A: The next hundreds of millions of players.
00:00:39.372 - 00:01:22.348, Speaker B: They will come to the market through mobile. My personal reason why I could be bullish in the next twelve months is hey everybody. Welcome back to another episode of the Blockcrunch podcast. I'm your host Jason Choi. I'm the co founder of the Evergreen Angel Fund Tangent. As a disclaimer, nothing we discuss on this show is financial advice and not representative of our official company policy and stance on different assets we discussed now, two years ago today, the bitcoin ecosystem had about 50 to 60 million in deposits across just a handful of applications. Now, if you look at one year ago today, that number ballooned above $100 million, and today it sits at $1.15
00:01:22.348 - 00:02:14.074, Speaker B: billion. So, to a skeptic to the thesis that Dapps will happen on bitcoin, I was actually caught quite off guard by this, despite participating in some of the speculation on bitcoin's version of nfts, the so called ordinals and runes, earlier this year. Now, however, over the past few months, hundreds of millions of venture funding has also flown into the bitcoin ecosystem as well, mostly to l two s. But I've basically remained a skeptic of most of these. Now, the one bet that kind of made me change my mind on bitcoin development, and the one bet that I've made on the venture side is a project called Arch Network, which you might have seen recently announced that they raised $7 million from multicoin Capital OKX and even the founder of Stacks himself, Munip. So I'm really, really excited to have founders of Arch network Matt and Amin on the show because they have a unique view of how bitcoin Dapps should play out. That made sense to me, more so than the dozens of l two s out there.
00:02:14.074 - 00:02:24.466, Speaker B: So I wanted to invite them onto blockcrunch to talk about the history of bitcoin programmability. L two s why they are not building an l two and much, much more. So, man and Amin, welcome to the show, guys.
00:02:24.610 - 00:02:26.594, Speaker A: Thanks for having us. Jason, been looking forward to this.
00:02:26.674 - 00:02:28.414, Speaker C: Jason, thank you for having us.
00:02:28.914 - 00:02:57.224, Speaker B: Absolutely. So I think there's a lot of ground to cover, so I'd like to kind of zoom out a little bit. A lot of our listeners are kind of ethereum guys or defi guys. They're not really plucked into the bitcoin history as much just because it was a previous generation. But bitcoin has pretty much been around for a long time, and the idea of kind of the bitcoin programmability has been around for a long time. However, even today, it's pretty clear from the usage perspective that most of the applications are not happening on bitcoin. They're happening on Ethereum and Solana.
00:02:57.224 - 00:03:25.276, Speaker B: So first of all, why should people even care about building on bitcoin? This episode is brought to you by Ygg I'm excited to partner with Yield guild games to bring you today's episode. You may know YGG as the leading guild in web3 that helped drive the success of games like Axie, Infinity and pixels, but they actually have much bigger ambitions than just that. Ive also learned a lot about gaming from the founder Gabby design throughout the years. So here is Gabby to tell us more about why so many guilds seem to be launching their own L2s, but YGG chose not to.
00:03:25.340 - 00:04:04.408, Speaker D: Right now, theres no plans for YGG to launch an L two. And the reason for that is that if you have your l two, that locks in as a vertical platform, meaning that you want to attract your own content to build on top of your own platform and fill up the block space. Right? Ygg is unique in that we consider ourselves to scale horizontally, meaning that we can pick and choose to support a game on any chain, on any platform, and support it in different ways with assets, with our community, with our questing and reputation programs, so that we can choose from the best games across web3, no matter what chain they're on, and make sure that we help them become more successful.
00:04:04.456 - 00:04:05.840, Speaker B: And now back to the episode.
00:04:05.912 - 00:05:19.210, Speaker A: You know, from a high level, there's a very good reason why you would want to build on bitcoin first. Namely being that it's the most OG chain with the best brand and the best security. This is the general consensus among all the crypto ecosystem six, seven years ago, when Bitcoin was just seen as a digital gold or store of value. Other chains like Ethereum and Solana certainly prioritized the programmability component to prioritize programmability and performance over security, which was what? The intentional design choice that bitcoin made several years ago. And for anybody that now is looking at bitcoin as well, why is this now possible and why should we do it? The answer is pretty clear. There's a tremendous amount of more liquidity that's sitting idle on bitcoin today, as opposed to other chains like Solana and Ethereum. And from a developer's perspective, there's a significant amounts or less amounts of competition, right? Like on ethereum, you have these large applications that overshadow all other applications and protocols in the Defi landscape.
00:05:19.210 - 00:05:43.244, Speaker A: On Ethereum, like Uniswap, curve, Aave, etcetera. And it's very difficult for a new application to come in and compete. Whereas on bitcoin you have a lot of blue ocean, that it just allows for new innovations and new types of applications that have never been seen before to be built on bitcoin and tap into that idle liquidity that's been sitting there for several years.
00:05:44.504 - 00:06:18.694, Speaker B: Yeah, absolutely. And I think just to dive into the history of apps on bitcoin as well, I think even in the namecoin and colored coin days, people have wanted to build apps on bitcoin. And then we had things like rootstock, stacks and lightning to allow that programmability on bitcoin. Just because the bitcoin language is not Turing complete, it doesn't have the concept of gas and state. So a lot of the applications on bitcoin still hasn't even cracked the scale of, let's say, the top ten applications on Ethereum. So I'm curious why that was. Was it just awareness or was it something else?
00:06:19.194 - 00:07:00.254, Speaker C: So, developer experience on bitcoin is really, really hard. It's hard to make apps on bitcoin due to how it's made and Utxo model. And that translates into a bad user experience. Unfortunately for users, rootstock and stacks were a little bit ahead of their time. They were built at a time where there wasn't a way to make a secure bridge to bridge the assets to the l two. And with the culture that trained bitcoin at that time, they saw very little adoption compared to what ETH apps had during that time. Lightning, though it is secure, but it's very hard to use.
00:07:00.254 - 00:07:36.626, Speaker C: Opening and closing channels is very complicated, also costly. You could probably, like, if you don't know what, how to open or close lightning channels, you probably have a hard time like figuring it out. And sometimes also it costs more more money to close a channel than the bitcoin that's in that channel. And to the point of, like, culture shift. Right now, we're noticing the culture shifts. People are more inclined right now to use their bitcoins than they were before. They want to buy jpegs and use it inside defi protocols.
00:07:36.810 - 00:08:06.474, Speaker B: Yeah. And I think a big moment for bitcoin, obviously, was the rise of ordonnos that really skyrocketed people's attention to development of bitcoin. And that was really the thing that kicked off all this fundraising activity in the bitcoin development ecosystem. So I'm curious, like, what are you guys thoughts are generally for ordinals? Why do you think it took off? Did you catch you guys by surprise as well? And what was different about it versus all these other past attempts that really caught people's attention?
00:08:07.334 - 00:08:44.634, Speaker C: Yeah, it did catch me by surprise. The protocol design was really simple, which is something that we have never seen on this coin. It's usually very complicated, literally just an op fault followed by an op if statement. And you can store as much data as you want as long as you can fit them inside a transaction directly on bitcoin, and it stays there forever. So that simplicity is definitely a virtue when it comes to making protocols. It makes the developer experience very friendly, and that translates to a good user experience as well.
00:08:44.824 - 00:08:48.514, Speaker B: Anything to add there, Matt? Were you surprised by this whole ordinals taking off?
00:08:49.254 - 00:09:29.314, Speaker A: You know, I don't think I was. I was ultra surprised. I think that it was, you know, early part of 2023, there was, there was certainly a lot of novelty going on. You had a lot of folks who are inscribing jpegs and audio files for the very first time. And I think that that what created a lot of excitement also, like, from, from one standpoint, I think that we learned in, you know, the 2020 cycle of nfts that people absolutely like to collect in and own digital artifacts and digital art. So I think that for the most part, you know, this wasn't anything that was new. We've already seen this play out on ethereum before.
00:09:29.314 - 00:10:20.902, Speaker A: We see the users who try to speculate and collect these digital artifacts. And really what it represented in bitcoin is the concept of permanent and premium. Right? There's a certain premium that is associated with bitcoin assets. And having the ability to collect those digital artifacts and art pieces on the most premium chain was something that made a lot of sense. And for us at arch, when we saw everyone inscribing these jpegs and audio files, we really took it as the opportunity to utilize inscriptions to store state directly on bitcoin and use it as a data availability layer within the modular stack context. And that could ultimately support a wider range of applications and protocols that could ultimately serve a new DeFi ecosystem on bitcoin.
00:10:20.958 - 00:10:49.988, Speaker B: Yeah, we're going to come back to that in a bit because I think people drew different conclusions when they saw ordinance take off. Right? I think that the most common conclusion was, wow, people want to do stuff on bitcoin. So Ethereum seems to have found some success with this L2 vision. So let's start like 64 new l two s and raise a bazillion dollars for them. You guys had a fundamentally different vision on that. But let's talk about the l two s first, because over the past six months a lot of these guys have been raising money. I personally saw so many Dex, at least a dozen.
00:10:49.988 - 00:11:03.108, Speaker B: So what is it about these l two s that attracted the attention of VC's and capital allocators? And are there any specific examples so far that you guys have been quite impressed by in terms of how much traction they got?
00:11:03.196 - 00:12:18.034, Speaker A: I think, like I said before, I think it made a lot of sense to a lot of people on what the possibilities ultimately could be now that this programmability unlock was now all of a sudden possible. And everyone seeing what happened on Ethereum naturally assumed that this had to happen via an l two strategy. And that, in our opinion didn't make a lot of sense because there wasn't yet any type of programmability. There's limited forms of pseudo programmable protocols on bitcoin like dlcs for example, which allow peer to peer type of smart contract functionality. But for the most part, everyone just naturally assumed that it had to happen on a L2 environment where execution can happen in a scalable way. And I think that going back to Amin's earlier point, the developer friction that exists today, whether it's through bitcoin script or various forms of other l two s with novel designs like stacks, we've seen the chains with the least amount of developer frictions win in the short term. So I think that, you know, something that's worth calling out are some of these EVM compatible L2s, like Bob for example, which makes the developer onboarding experience quite elegant.
00:12:18.034 - 00:12:59.984, Speaker A: Because at the end of the day you can just port over a solidity smart contract and utilize the same wallet infrastructure that ethereum applications use. But at the end of the day, we feel that the majority of the activity needs to stay on bitcoin so that it can continue to scale the security budget of bitcoin. These EVM l two s certainly can onboard liquidity and onboard new developers quite easily. But as time goes on and the friction starts to get under control from a developer perspective, I think that you'll start to see more innovations happening natively on bitcoin, as opposed to leveraging the EVM for this sort of short term problem worth tackling.
00:13:00.144 - 00:13:46.464, Speaker B: Yeah, and that really is what kind of interested me about you guys thesis, which is so first principles driven versus a lot of the other projects are saying, hey, this happened on ethereum, so we got to do the same approach to scaling and programmability on bitcoin, but without factoring in the specifics about bitcoin, which is, like I said, the lack of Turing completeness, the lack of statefulness, the lack of gas. So it seems like there are some more fundamental issues that need to be solved first, which you guys are tackling. But before I move away from the l two s, I know a big criticism for the current l two s is that there are what's called multisigfi, right? So can you guys explain this concept? Like, what is this multisigfy thing? And, you know, how do these l two s differ in security assumptions than say, like something like optimism or arbitrams of the ethereum l two s.
00:13:48.764 - 00:15:05.274, Speaker C: The big differentiating point between ethereum l two s and bitcoin l two s, is that for it you can directly validate or process these like proofs, validity or fraud proofs on ethereum without any additional cost assumptions. And according to Ethereum foundation, the definition of an l two is that you must be able to unilaterally exit the chain and pick your assets out, even if the chain goes down. And many of these proposed bitcoin l two s are just like thinly veiled multi segs, and they don't have any key dynamic to actually do this unilateral peg. So Btvm came out and tried to solve this problem, but people are starting to realize now that BTM has also some issues, economical issues. And most of these EVM copy pastes are not native to bitcoin. They just won't work. The path to decentralization is not there if you can't do this unilateral exit.
00:15:07.094 - 00:15:41.394, Speaker B: Yeah, and I think I want to double click on the BitVM point because you mentioned that a lot of the l two s currently have very weak security assumptions on bitcoin, right? And they're literally probably just controlled by like three guys in an office as a multiseg instead of a real l two s with validators. But then one of the projects out there that shares you guys vision, which is, hey, we need something that is native on bitcoin l one, we need to build a vm on bitcoin. L1 is obviously bitvM. I'm curious like what you guys thoughts are about their approach. Are there any trade offs they're making? Any kind of shortcomings or strengths?
00:15:41.514 - 00:16:20.264, Speaker C: So BitVM operates on a one off assumptions. You basically need one person to execute the fraud proof for you to trust it. But the problem with this with BTVM is that the bridge operator needs to basically front all the liquidity that's set in on the l two, which is really not economically nor reasonable nor scalable. So this is why a lot of devs are actually pushing now for Opcat to be soft for so they can do this unilateral exit using Kesvm proposed by Zeppelin reserves.
00:16:21.524 - 00:16:53.418, Speaker B: I think this is a good segue to close out the l two segment, because right now, at least from the outside looking in, most of the approaches to allowing programmability and scalability in bitcoin are l two s. And it looks a little bit like the Ethereum ecosystem, where you have one base chain and a bunch of l two s out there. Do you think the endgame for the bitcoin application ecosystem is the same for Ethereum and bitcoin? Is it going to be, you know, a bunch of l two s and then maybe one or two vms? Or is it something fundamentally different, I.
00:16:53.426 - 00:18:45.788, Speaker A: Think from like a high level? I think the roadmap or playbook, as you will, is somewhat comparable to what you've seen happen over the last six to seven years in Ethereum, where you have a lot of different DeFi protocols that are the pillars of DeFi, we'll call them, and you'll probably see something similar play out on bitcoin, where you have various primitives of DeFi, like stablecoins, Dexs and borrowing and lending applications start to emerge. And much like we've seen this play out on Ethereum in recent history, the majority of that liquidity is going to remain on the layer one, where users have the most principled security and sovereignty over their keys. And then maybe 10% in aggregate will start to traverse and bridge itself to these L2 scaling solutions so that they can perform in a different type of Defi, which is lower fee, high throughput, whereas they're not necessarily encumbered by the same limitations that you get with native bitcoin. To reiterate, I guess on Ethereum you have 90% of its total liquidity sitting on the layer one, and 10% spread amongst hundreds of different l two s, the majority of which are concentrating in the top three to five. I think you'll see that play out on bitcoin where you have the majority of the liquidity staying on layer one focused on higher volume transactions, luxury jpegs, and more principled yield opportunities. And then you'll have some percentage of that liquidity starting to bridge to L2s where they'll get a new type of DeFi applications like perp, Dexs and, and things that require much lower latency.
00:18:45.916 - 00:19:12.576, Speaker B: Yeah, this is, I think, a good segue to start actually tackling what you guys are building with arch. So I think just to frame the problem a little bit. So with bitcoin, it's not like Ethereum. I think we've mentioned a few times in this episode that it's not turing complete, so it's very hard to write applications. There's no statefulness. So Dapps is finding it very difficult to store state, unlike you can do on most other chains. There's no gas model to handle very complex smart contracts as well.
00:19:12.576 - 00:19:33.464, Speaker B: So if you want to do some sort of, you know, perp Dex on bitcoin l one, it's incredibly hard right now, but. So with Arch, you guys want to bring all of these elements that already exist on other chains that are built for applications to bitcoin. So can you frame for us? What is the main challenge there? You know, have people tried to do this before? Why haven't they done this?
00:19:33.584 - 00:20:12.984, Speaker C: There are actually a lot of meta protocols that are trying to extend the BRC two any functionality with like smart contract capabilities and make the BRC 20 protocol more general in a sense, instead of just doing tokens. But all of these attempts, what they fail to realize that you can't only operate on state transitions, you create this massive liquidity fragmentation problem. And this is why Arch is different in that way, since it can work with all other existing meta protocols instead of creating its own assets and creating its own island.
00:20:13.284 - 00:20:29.990, Speaker B: Yeah, so it sounds like Arch has really learned from these past approaches. You mentioned that liquidity fragmentation is a big thing you guys are solving. So now I guess coming back to the main question, which is what is arch? How do you guys differ from all these l two s, all these other approaches that have come before?
00:20:30.092 - 00:22:07.328, Speaker A: So arch is the only bitcoin native application platform where we really focus on extending the capabilities of bitcoin within that exact context of supporting a diverse range of applications and protocols that can be both simple and complex. It can be multi party contracts, liquidity pools v two, dex infrastructure for atomic swaps, and it can be as exotic as prediction markets and other games and things of that nature that require both state changes and asset transfers. So at the end of the day, what arch ultimately enables is defi on bitcoin layer one without the need to bridge. And that's important, it's an important distinction, because the very first step in virtually all other l two s and programmable infrastructures is that you have to bridge your asset first to that programmable side chain and mint this new asset, which essentially means that you lose control over your assets and you're now trusting somebody else, a bridge operator. Another sidechain, which you mentioned before, could just be three men in an office with control over that multisig. So what we at arch really set to do is try to reduce and minimize as much of the trust assumptions that users will ultimately place in whichever infrastructure that they want to engage in DeFi on. And this was the architecture that we came up with, and we're pretty confident that this is at least for the layer one programmable problem to solve.
00:22:07.328 - 00:22:10.324, Speaker A: This is the most elegant solution that we could come up with.
00:22:11.104 - 00:22:20.794, Speaker B: Can you guys give us an example of maybe something you can do on arch that you can't do on bitcoin l two s? Or is that even the right way to kind of frame the differentiation you guys have?
00:22:21.254 - 00:23:31.024, Speaker A: I wouldn't say that it's what we're doing is enabling something that you can't do on an l two. I think most l two s can ultimately serve a wide variety of applications that need programmable execution just like we do. The main differentiator is that you don't need to engage in further trust assumptions in a lot of our use cases. Take a Dex, for example, which is really where the arch technology shines, is we can support trustless atomic swapping without putting your faith in a verifier network of nodes, without having to trust a bridge operator, without needing to trust an l two in order to do those swaps. That's a really interesting dynamic, because the majority of Dex volume comes from the taker. That's the person in this equation that makes zero trust assumptions. Of course, there's some limited trust assumptions that the maker of that liquidity is going to place on the verifier network who's all putting up stake in order to secure our vm and the execution environment.
00:23:31.024 - 00:24:29.170, Speaker A: But the taker in this situation makes zero trust assumptions. They just atomically swap their asset using PSVts so that they can engage in Dex on layer one without the need to bridge first, which is incredibly different. So I would say that that is something that's very interesting, that a lot of different dexs are coming to arch for another really solid use case. As I mentioned before, in primitive DeFi on bitcoin is borrowing and lending. We've already seen applications like liquidium start to emerge where users are now able to get leverage against their ordinal assets. And conversely, you have lenders who have some amount of bitcoin that are looking for good returns and yield opportunities. We've seen liquidium grow at a phenomenal pace, and I think this is a testament to the expectation and user behavior that is bitcoin.
00:24:29.170 - 00:24:44.664, Speaker A: They don't want to bridge their assets to these L2s, where there are lower fees and faster transactions, necessarily, which is why liquidium is growing at a faster pace than the majority of DeFi applications in any l two ecosystem at the moment.
00:24:47.044 - 00:25:24.946, Speaker B: I think that's such an insightful observation of what the pain point in bitcoin is, which is people don't want to bridge. And I was initially quite skeptical of this. I bridge all the time as an on chain native DJ and bridging when I'm on holiday, I remember just bridging to base on my phone, just like aping different stuff. So I'm bridging all the time, and it's not a big hurdle for me. But it seems like in bitcoin, maybe it's people's security assumptions, maybe they don't trust the l two s, maybe it's more nascent, so they don't know how to bridge. But something there you guys seems to have identified correctly is that people really don't like to bridge. So I'm curious, like, why that is.
00:25:24.946 - 00:25:31.124, Speaker B: Have you spoken to certain users who might have told you, hey, we don't want to bridge because of this and this and this, and what are the reasons there?
00:25:32.704 - 00:26:39.478, Speaker A: I think it's mainly because if you look at all various products within the crypto landscape, the bridge, cross chain bridge is probably the most vulnerable technology that exists out there. And we've seen horror stories in the past, like the wormhole hack, and over $300 million was lost to an exploit. And even as recent as not even two weeks ago, you had two separate hacks one of them was a bridge to stacks. And I think that, in a nutshell, is the main fear factor when it comes to asking a user to bridge first and then engage in programmability. If users wanted to bridge to achieve a more performance type execution environment, these native bitcoin users probably would have bridged to Ethereum or Solana a long time ago. But they chose not to because that's just a non starter for them. They don't want to bridge their assets, even if it means that they can get more liquidity or more liquidity, faster transactions or cheaper transactions.
00:26:39.478 - 00:27:21.372, Speaker A: They've just prioritized their security and sovereignty over those dynamics to date. And we think that this is going to continue to be the case. Then once we maximize and max out the performance, the capabilities of the layer one ecosystem, only then will it make more sense to bridge their assets to something that's a little more scalable. And then maybe when Opcat comes out and you have these consensus mechanisms built into bitcoin, you'll have maybe a little more comfortability knowing that your assets are a little more safe than trusting an oracle or some type of bridge operator, which is inherently not connected, which is where the vulnerabilities really lie.
00:27:21.428 - 00:27:28.850, Speaker B: And obviously Opcat is pretty big. But for our listeners who are not familiar with this, can you guys kind of give a explain, like I'm five type of explanation there?
00:27:28.922 - 00:28:09.174, Speaker C: So OpcAt is just like an opcat that concatenates data. It does unlock a lot of programs that you can do in bridges. It's mainly used for mercury tree verification. You could like concatenate the mercury branches until you get the roots, which is how you verify it. It does. It does also unlock a subset of bitcoin applications that could be made, but there is more data manipulation that could be done on bitcoin that's outside of just concatenation.
00:28:09.294 - 00:28:22.754, Speaker B: So this is a development on bitcoin that basically allows for more programmability. Do you guys see that as a potential unlock for like, new types of apps that you can build on bitcoin, or does it just allow for the existing type of apps to be built more easily?
00:28:24.134 - 00:28:56.600, Speaker C: Yeah, both, actually. It definitely, like, makes our lives as us a lot more easier from a protocol standpoint. And it's also like, unlocks. Unlocks, like a subset of apps that could be built. But we still do think that a lot of apps will not. A lot of useful apps, for example, like Texas pools, will not be able to be done using Opcat. And that's where arch comes in so.
00:28:56.632 - 00:29:43.304, Speaker B: More complex type of applications and smart contracts. Yes. And I think it's really interesting, especially just going back to a point that Matt brought up, which is if people in the past, they wanted to have bitcoin exposure and do stuff with that, they can just use a grab bitcoin, which is obviously run by a centralized company. And there were decentralized attempts like TBTC with keep network as well. I find it really interesting that that was the kind of consensus way to bring programmability to bitcoin, which is actually to not bring it to bitcoin, but to bring bitcoin to other programmable chains. So I'm curious, like what led to this change or this shift in mindset where now builders are thinking actually, instead of bridging bitcoin out, let's just try to build stuff on bitcoin directly. Was it ordinance that kind of kickstarted this?
00:29:43.924 - 00:30:27.964, Speaker C: Yes, for sure. Developer just found it hard, really hard before like the chaparrals upgrade and ordinals happened. So most developers just like gave up on bitcoin. But after, after ordinals, it's made it really clear that you can build apps on bitcoin. And that upgrade made bitcoin a lot more expressive. This is why we saw this boom. After all, the most of people making marketplaces, shaming jpegs, subscribing things on the blockchain and making a bunch of apps, it definitely like changed the culture and made this new hope that bitcoin could be programmable.
00:30:29.024 - 00:31:04.280, Speaker B: Yeah, it was definitely one of the bigger moments of, I think, 2023 to see development start on bitcoin. And I remember catching up with Muneeb from stacks and he would joke that people would call him the last man building on bitcoin. For years it was just him. There's no other projects building on bitcoin. It was just him. And then now you have a wide ecosystem with different approaches and different philosophies to how to bring programmability to bitcoin, which I think is fascinating, I guess on that note, just zooming out a little bit. If you look at the arc of user experience over time, for any application inside or outside of crypto, it's always faster and cheaper.
00:31:04.280 - 00:31:30.922, Speaker B: People want to do things faster and pay less for it. Now, bitcoin specifically is not really something that's built for faster and cheaper compared to some of the chains that market themselves as like speed first, like Solana say, if they're ML two s. So I'm curious, like, what does latency look like for applications built using arch network or built on bitcoin. And would that be a potential impediment to onboarding mainstream? If bitcoin is a bit slower, I.
00:31:30.938 - 00:32:43.994, Speaker C: Feel like that's, while things are a lot slower, there are a lot of use case where people don't want to trade the safety and security of bitcoin for the first transaction and cheap fees. An example for this high volume defi transactions. If you want to take a loan against a big amount of bitcoin and you don't want to to deal with the security issues of other chains, you'd use bitcoin l one, and you're fine with like waiting ten minutes for, for the loan to go to. Of course, there will always be like some use cases like perp Dex is not gonna be built on top of bitcoin l one. It's probably gonna go to an l two. But most of defi right now is just like applications that people don't mind really waiting ten minutes for. And this is, and this is why we're seeing right now that ordinals are going straight up, because people are fine with this, with this like issue of weights in a little bit of time if you're gonna, if you're not gonna like mess with their keys.
00:32:45.614 - 00:33:36.356, Speaker B: Yeah, I think the, when I try to think about, okay, what is the kind of long term plan for the bitcoin application ecosystem? Or what is that breakout hockey stick moment? I think we might be seeing it already. But if you look at other l one s, I always think that, okay, for an l one to take off, you kind of need unique native assets that you can only trade on that l one. So I don't think Ethereum would have taken off, for instance, if there weren't a bunch of defi applications that people were building. And then with each of those applications, you have your own token uniswap aave have a bunch of tokens, and then nfts came along. So you have a lot of unique kind of units of account or unique assets that people can trade only in Ethereum that seeded the ecosystem of liquidity. So when at first I was looking at bitcoin, I was thinking, okay, we probably need this as well. We need as many ordinals runes as possible.
00:33:36.356 - 00:34:21.484, Speaker B: But then a thought occurred to me that actually we don't, because the most valuable and liquid asset is already on bitcoin, which is bitcoin itself. And I think one thing that Matt told me when we first chatted is the fact that bitcoin is half the market cap of the entire crypto industry. And the next one is Ethereum, which is just like under 20%. So it does seem to me like the people, the path to adoption for bitcoin applications will be very, very different from Ethereum or Solana or any of these l one s. And I'm sure you guys kind of discussed a lot what that hockey stick trend for bitcoin would look like. But when you guys think about mainstream adoption, what are some things that you think would probably will have to happen on bitcoin for our parents to start using bitcoin applications?
00:34:22.944 - 00:36:13.472, Speaker A: I think a lot of these very safe and principled yield opportunities is that next thing, it's the next opportunity for whether you're just a passive user holding bitcoin, like, let's say my dad, for example, who's not really interested in connecting to to liquidium and loaning against ordinals, because maybe he doesn't know about it quite yet, but he certainly knows about t bills, he knows about Tradfi, he knows about various concepts within that of a greater landscape. And we can once again go back to Ethereum and pinpoint some opportunities for innovation, like Ondo finance, for example, which tokenized real world assets, which grew the usefulness of Ethereum from that standpoint, where now you have the ability to get global in 24/7 exposure to some of these more tradfi assets, which is the market cap of those assets are tens of trillions of dollars. So if you go back to 2017 2018, when Ethereum first came to be and started to support some of these more native applications and protocols, the price of Ethereum was like dollar 20. The market cap was 20 x lower than what it is today. Now it's worth over 300 billion, getting closer to 400 billion in market cap. And you can pretty much draw the conclusion that this is a direct relationship or result from programmable applications and protocols that used the underlying chain asset, which was Ethereum, you had nfts, which certainly were denominated in Ethereum and sucks them some liquidity into that. And then of course, you had DeFi summer of 2020, which really started to be this liquidity sync within the overall landscape of Ethereum.
00:36:13.472 - 00:37:13.524, Speaker A: So I think that you can expect a similar type of moment to happen here in bitcoin, where you have the ETF, which is certainly absorbing a lot of liquidity out of the market. You have the happening that just basically cut block rewards in half for miners. And now everyone is trying to hold on to their precious bitcoin. So what happens when the next curve and the next aave and the next uniswap come to bitcoin and start to allow for this draw of liquidity? And with those already existing dynamics that I mentioned between the ETF and the happening, it's kind of a perfect storm of dynamics to allow for just this really big run up moment in bitcoin, because now, all of a sudden, for the first time, you have things to do with your bitcoin. And people are not going to want to just simply send or sell. They're going to want to actually leverage them in a variety of new ways, which, as we've seen this play out on ethereum, is a net positive. Also to that point, even though Ethereum is proof of stake, bitcoin is still proof of work.
00:37:13.524 - 00:38:07.878, Speaker A: You can draw a direct correlation in the past about how many fees are being distributed amongst the miners and the price appreciation of bitcoin. I think in order for the price to continue to scale in bitcoin, we need to keep scaling the security budget, and the only way to do that is to continue to innovate and drive fees back to the miners through this activity. So I think we're in a very, very bullish situation for bitcoin and crypto as a whole. But the major catalyst is going to be when Defi ultimately comes to the base layer. And we're already starting to see applications like liquidium, like Bitflow, like Franklin Finance, who's tokenizing t bill similar to Ondo. These are the types of things that we want to see. Starting to come to bitcoin's base chain, where I think that we're making a good case for holding your bitcoin and making sure that this is going to continue to scale in the right direction.
00:38:08.006 - 00:38:38.640, Speaker B: Yeah, and this is how I know you guys have been very busy in building, too busy to trade. Because, Matt, when you mentioned that Ethereum is 300 billion, pushing 400 million billion in terms of market cap, that was the price last week. So that was before the massive move that we had last week. So now it's about 460 billion now. So I think that's a good segue, actually, to talk about what you guys are busy with, which is building. So what is this current stage for orge right now? Like, what are you guys working on? What can people do on arch? And what are the biggest things in the next, call it three to six months.
00:38:38.712 - 00:39:53.206, Speaker A: It's really exciting time for us right now because we're getting ready to ship to mainnet finally. We've been putting the final touches on our backend build with the custom built ZKVM that we managed to build on top, and then as well as our verifier network of nodes, which is securing that execution environment. So we have finished our builds. We have had a private Devnet for the past month and a half with some quality teams and builders, about 20 different builders on our infra that have been building in this private Devnet or beta for the last month and a half. And now we're finally at that exciting moment where we'll be able to, to roll out these validator nodes that we've been onboarding and that'll be the last kind of moment that we need to finalize in order to then go to mainnet and start the next phase of growth, which is supporting the applications who are building on top of us, attracting new waves of developers who want to continue to deploy inside of our environment and then continue to scale the ecosystem. I think that that's, you know, the most exciting thing for us. We've been kind of waiting for this moment for a few months now and it's quickly approaching.
00:39:53.206 - 00:40:07.206, Speaker A: I would say that timeline wise we're looking at probably mid June as far as being able to actually deploy and support these applications that are basically in the final stages of their build.
00:40:07.390 - 00:40:51.680, Speaker C: We've also been focused on making the developer experience as good as they can be. Something that's like comparable to Ethereum's dev experience also learns. So we've been like iterating with a couple of projects on the developer experience, trying to make things easier for them and so that they can have a smooth user developer experience when making apps. And we've been also like focusing on like DeFi parameters that, that are basically the groundwork for creating a successful and thriving DeFi ecosystem on top of boot camp.
00:40:51.792 - 00:40:59.360, Speaker B: Absolutely. And I guess on that note, for people who do want to reach out and maybe try to build stuff on the Devnet, what are the best ways for them to reach out to you guys?
00:40:59.512 - 00:41:52.012, Speaker A: We have a form on our website. If you go to arch.net work, there's a link at the top titled build, I think, and just click on that. It'll pop up a builder form where you can share information about either yourself or, or the project that you've been building. And then we'll get in touch with you, whether by email or telegram, to discuss next steps of integration. Of course, as we start to bootstrap and scale our verifier network, we're eventually going to be making it much more permissionless so that anybody can come in without needing to apply and they can get access to the dev server in a public type of way and come in and deploy. We've also built some, you know, some, some useful smart contracts that, that can be utilized or forked, you know, by builders if they want to, you know, start from somewhere a little further on than square one.
00:41:52.012 - 00:42:33.294, Speaker A: They're like, you know, custodying assets, staking your assets. The Dex, you know, liquidity, I mean, Dex functionality. We already have a lot of these, these smart contracts already built out. So that's just another resource for builders who want to come in and iterate or build their own flavor of an application, leveraging the work that we've already done. So just something that we're doing to kind of accelerate in the ecosystem and we'll continue to build various public tooling so that it can ultimately be leveraged by the developer community. I think Amin can share something about this, like custom Devnet or Testnet that we've built as well. That is an even better user experience.
00:42:33.294 - 00:42:54.288, Speaker A: And bitcoin, and bitcoin, Testnet and Cygnet, which is just a testament to how much we're thinking about providing as much tooling and infrastructure for the greater landscape and bitcoin building ecosystem to take advantage of so that they can iterate faster and bring their creations to life.
00:42:54.376 - 00:43:06.640, Speaker B: Yeah, absolutely. And so we include those links in the show notes below. So make sure you guys click on the build button and learn all about what arch guys are doing. Thank you so much for coming on the show, man. And I mean, this has been really interesting for us.
00:43:06.752 - 00:43:08.752, Speaker A: Of course. Thanks for having us. Thank you.
00:43:08.768 - 00:43:09.296, Speaker C: Jason.
00:43:09.440 - 00:43:33.872, Speaker E: Hey, thanks for supporting another episode of the Blockcrunch podcast. If you've enjoyed this episode, please give us a five star rating on Spotify and Apple Podcasts or whatever platform you're listening to this on. It really helps us a lot. Or if you prefer YouTube, you can subscribe to our channel on YouTube as well to not miss an episode. I'd love to hear from you guys as well. And I personally make sure to read every single comment on YouTube or tweets that are directed at me. So feel free to leave a comment there.
00:43:33.872 - 00:43:47.064, Speaker E: Let us know what project you want us to bring on or what trends you want us to talk about or tweet at Mer, Jason Choi or Heblockcrunch on the platform previously known as Twitter, currently known as X. And thank you so much for supporting, and I'll see you in the next episode.
