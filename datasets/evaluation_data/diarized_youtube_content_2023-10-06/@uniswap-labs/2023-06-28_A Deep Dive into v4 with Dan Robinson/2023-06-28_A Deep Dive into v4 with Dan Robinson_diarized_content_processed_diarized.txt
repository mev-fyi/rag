00:00:00.170 - 00:00:15.040, Speaker A: Will join. But yeah. Thank you for coming on. It's always fun to chat. Hopefully, we can give the people what they want, which is some actually good content about some deep content about V four instead of some other stuff. Sure.
00:00:16.050 - 00:00:39.942, Speaker B: Okay. I'll just kick it off, then. Hi, everyone. Welcome to the fourth D Five research hour series hosted by Uniswap Labs. I'm Shin, researcher at Uniswap Labs and co host of today's conversation. With me here is Austin, my colleague at Labs and co host for the space as well. Uniswap is the largest marketplace for on chain digital assets.
00:00:39.942 - 00:01:23.698, Speaker B: The tools we create are built on the Uniswap protocol, governed by an independent and decentralized community of Uni token holders. And Today is the largest decentralized trading protocol to date. The protocol has serviced over $1.5 trillion of transactions across multiple blockchains and never been hacked, making Uniswap one of the most trusted names in DFI. Uniswap Labs is focused on building technology that enables users to swap tokens, buy NFTs, provide liquidity, and self custody their assets with confidence. The opinions expressed during today's conversation will be ours personally and not that of the labs. Our guest today is Dan Robinson.
00:01:23.698 - 00:01:35.740, Speaker B: Dan is head of research at Paradigm and co author on the white papers of Uniswap V two, V three, and V four. Paradigm is a venture capital firm and investor in Uniswap Labs. Dan, welcome.
00:01:37.710 - 00:01:39.210, Speaker C: Thanks for having me, Dan.
00:01:41.010 - 00:01:45.200, Speaker B: All right, first question when V five, and what's it going to be?
00:01:46.850 - 00:01:50.960, Speaker D: Well, I think I tend to be.
00:01:52.310 - 00:02:35.920, Speaker C: Not very involved in the last stages of building each of these protocols because I think my solidity chops are relatively weak compared to the engineering chads over at Uniswap Labs and the foundation. So I'm generally distracted by thinking about what kind of thing can come next. So I have some possible ideas, and I don't want to speak specifically to whether there'll be V five or v seven or V some other thing, but I hopefully we'll have a talk later this summer, talking about some of the directions I think Dex research should go.
00:02:36.610 - 00:02:44.062, Speaker A: Dan, you're underselling yourself a little bit here. I saw your GitHub commits in the core GitHub repo.
00:02:44.206 - 00:03:01.990, Speaker C: Yeah. My commit profile is the resource shore, where if you look at the Uniswap repo, it's like a huge spike at the early stage of V two, then a huge spike. Right. Like the early stages of V three, and then nothing for months and months for a year.
00:03:02.060 - 00:03:32.080, Speaker A: Yeah, I just saw you I saw you had more commits than me, and I was like, Dang, Dan, I was doing that a long time ago, so I respect that. Yeah. So I think we'll jump to the next one, which is Uniswap V Four has launched this sort of idea about hooks, which are expandable add ons to Uniswap V four and the AMM marketplace. What type of hooks are you most excited about and what types are you least excited about?
00:03:33.010 - 00:04:17.040, Speaker C: Yeah. You don't pick favorites among hooks. I think all hooks are exciting, and I think part of the point of releasing it is to get a lot of innovation going on, on top of it. And I think partly that's because if there was a hook that was just an obvious every pool should use it, then I think it would make sense to build that in. Right? So always I think there's going to be trade offs for them and they're going to make sense for different assets. But I think one of the areas I'm most excited about, certainly with hooks, is trying to reduce the loss versus rebalancing the losses to arbitrage. And I think hooks provide a lot of ways to build features that might be able to mitigate that.
00:04:19.330 - 00:04:40.440, Speaker A: Yeah, it's fair. I think one of the ideas that people have been chatting a lot about is this Mcamm, which is like sort of one idea of a loss versus rebalancing reducing AMM. Do you have any thoughts on that? I've seen some early research by other researchers. How do you sort of feel about that and your thoughts on how that's been?
00:04:42.490 - 00:05:41.862, Speaker C: I think I think that's a really interesting one. And yes, maybe we can start there, because I think it's something that you couldn't have done in previous versions of the protocol. So the Mcamm family of designs, and I think Alex Herman might have from Gnosis might have been the first one to post about it, but I think there's been a few different proposals in this family. The idea is so backing up with lever or loss versus rebalancing. The concept of lever is that at the beginning of every block there is this latency arbitrage. There's a possibility that somebody can come in and trade with the AMM and arbitrage it against an external price, like the price on binance or something. And when they do that effectively, liquidity providers, they realize a loss because it's sort of an opportunity cost.
00:05:41.862 - 00:06:57.758, Speaker C: They could have rebalanced at a better price if they were, for example, just trading directly on binance. Another way to think about it is that the arbitrary is making just a risk free profit there by doing or almost risk free profit by making that trade. And their profit must be the liquidity provider's loss in some real sense. And so loss versus rebalancing is just the sum of for every block, there's this loss from if you had done the trade at the new market price, or if you hadn't done the trade at all, this trade at the top of the block, what's the loss as a liquidity provider versus if you had just held it? And one way to think about it actually is if you imagine just impermanent loss, which is how we often used to think about this, but is a confusing metric in a lot of ways. If you think about impermanent loss for just the space of a single block that's basically the same as a loss versus rebalancing for that block. And then you just add the impermanent loss block wise, the impermanent loss for each block added together over a period is the loss versus rebalancing because the losses you could have had instead of being a liquidity provider by providing in that block and providing this ability to be arbed. So yet another way to think about this loss for rebalancing is that effectively liquidity providers are providing a free option to block builders or to the arbitraries who trade at the top of the block.
00:06:57.758 - 00:07:09.218, Speaker C: And so the idea of the Mcamm, and I think it's fairly simple when you think about it, is to charge for that option, it's to say actually to charge for the option you charge ahead of time. You say you have to pay some premium, you have to pay some rent.
00:07:09.314 - 00:07:10.438, Speaker D: In order to have the right to.
00:07:10.444 - 00:08:01.400, Speaker C: Be the person who trades on this pool. So the idea is there's many forms of this, but I think a relatively simple one would be just have somebody rent the right to be the first trader on a pool and if they don't trade on that pool, then nobody can in a given block. And so the idea is on a particular pool, somebody bids to pay like 0.1 e per block or whatever. And then if they get to be the person, the first person to trade on the pool now other people could trade on it after them, but they're the ones who get to collect that loss versus rebalancing that arbitrage right? And so they're effectively paying this rent every block for that option to do that. And that rent goes to the liquidity providers. So it's a really interesting idea.
00:08:01.400 - 00:08:29.920, Speaker C: I think there's some implementation difficulties, but in general you can see how hooks actually enable it, right? Because the before swap hook can just say see who is the owner of this particular right as of this particular block and only allow this pool to be traded on if in this block that owner or manager has already traded on it the owner of that particular right at that time.
00:08:32.870 - 00:09:46.840, Speaker B: So one follow up to that design question is how much do you think hook designs should be kind of chain specific or agnostic? Because I feel like in a lot of sense the optimal design of a hook maybe especially related to this idea of auctioning off a right to interact with the pool. Kind of the more frequently you do it, the higher the gas overhead there is and then the more kind of inefficiency that you introduce into the pool that's ultimately maybe transferred onto the swappers who's paying or maybe the LPs. And then across different chains there's obviously different gas fees, so there's different costs of running these on chain auctions. Do you think it's just a simple do reparameterization across chains or does it actually lead to completely different optimal design, if there is any.
00:09:47.210 - 00:10:42.630, Speaker C: Well, so I think you can get past at least the first order, like gas what seems like the expensive gas cost of doing an auction every block, or do an auction in block N for the right to trade first in block N plus one by having people effectively auction off the right to rent a pool. So the idea to pay some rent and then just they're continuously paying this ETH block to block until something else happens and they are continuously the person with the entity with the right to trade first on that pool. So the idea here is you would bid, and whoever the current high bidder is in rent terms, you bid some amount of ETH. Not amount just to buy the next block, but just per block. And you're going to pay that every single block going forward until you run out of money or someone else bids higher than you. So if someone bids Alice bids like 0.1 ETH per block, then Alice maybe has this right to be the arbitrary.
00:10:42.630 - 00:11:31.420, Speaker C: If Bob bids 0.2 ETH, then Bob now takes that right effectively from her for blocks going forward. I do think there are a lot of meaty questions around how quickly you should allow transfers of ownership of this right, how granular the bids should be, and I think you can get into a lot of details on that. And again, part of the goal of putting this out there is to see if people can iterate on these ideas. But I think functionally that lets you basically do an auction as a continuous thing. And if we talk about I could talk about some other protocols that use this sort of concept, but I'm generally a fan of this. You can get a lot of gas efficiency out of just assuming things are going to go the same in the next block unless someone does something.
00:11:32.270 - 00:12:12.200, Speaker A: Yeah, it's sort of one of those design spaces where in theory it's very easy, but in practice there's like a million things that can go wrong and you got to account for all of them. So definitely be interesting to see what users and integrators and the ecosystem does over time to answer these problems. Another problem that was pretty apparent in Uniswap V three was the Oracle design had a lot of protections that were built in from proof of work and now there's proof of stake sort of took those protections away. What do you sort of see? You did write the Blend Protocol, which is sort of an anti Oracle piece, but how do you sort of feel about on chain Oracles in the long term, especially with V Four?
00:12:13.850 - 00:13:28.810, Speaker C: Yeah, no, I'm not anti Oracle at all. I think was pushed early on for Uniswap to include an Oracle in V Two, in part because I think it's nice to have this as a source of data and the alternative was people actually were trying to use Uniswap as a spot. This is the spot price on Uniswap as an Oracle, which was a big mistake at the time, and it was very manipulable. I think it's sort of an open question because there's a trade off with Oracles, right, where swappers and functionally, in some sense, LPs have to pay, bear the burden of the gas cost for updating an Oracle, and then Oracle users are free riding on that price on that effort. And I think we decided at least early on, when there weren't a lot of on chain Oracles available, decentralized Oracles available, and we wanted to experiment with it, that it made sense to basically impose it. And when you had to pick something, it's like V Two had to have an Oracle or not have an Oracle and all right, it's worth sort of experimenting with this here. Now, we've had three years of having on chain Oracles.
00:13:28.810 - 00:13:52.386, Speaker C: I think we found some use cases that they make a lot of sense for and that people use them for. But I think it's about time to say, okay, we don't necessarily need to as a top down design. Decision for the entire space and the entire Unisoft. Protocol. Say, like, you have to subsidize this oracle and make sure people get to use it. And so I think people are working. I know Euler has been working on ways to try to create a more robust Oracle built into a decks.
00:13:52.386 - 00:14:20.080, Speaker C: And I think, again, if you want to have an Oracle in some sense, maybe you should pay for it. Maybe you should be subsidizing liquidity on that pool. Maybe you should be paying the gas costs, ways to use hooks to actually have the Oracle users pay in order to refund swappers for the gas that they're spending in order to update the Oracle for them. Right. So I think there's a lot that hooks will allow you to do to do that. And you don't necessarily have to make this one choice of we're going to force everybody to do this.
00:14:21.170 - 00:15:00.090, Speaker A: Yeah, sorry, I didn't mean to imply that you were an anti Oracle. I just mean that I think one of the coolest use cases of the Oracle is designed was the Blend Protocol, which we'll get into a little bit later. Yeah, I think it's interesting to see interesting to see what users just do and how they integrate with V Four, sort of on that line. One of the innovations of V Four that I think is really impactful will be dynamic fees, which we sort of talked about this a little earlier with the Mcamm, but do you sort of see dynamic fees any other way that they can be made? And do you think that they have a space for being impactful?
00:15:00.430 - 00:16:01.626, Speaker C: Yeah. So people have been looking for formulas to figure out what should the ideal fee be, say, as a function of volatility for a while, and I'm not sure there's any magic number for it. I think it depends what the right fee is. Depends on a lot of factors, including just the demand that users have for trading and how they respond to fees, which nobody really knows and doesn't fit into a formula. But I think in practice we do see that when professional market makers, market make on order books, they tend to quote wider spreads, effectively have larger, higher fees for more volatile pairs. I think there's a lot of theoretical reasons why they do that, but I think it does make sense. Often we've seen with unisoft V three, for example, typically for less volatile pairs, people there's more liquidity provided in the lower fee, like stablecoin pairs.
00:16:01.626 - 00:17:12.646, Speaker C: In the lower fee pools, there's more volume to those, whereas in more volatile pairs, sometimes people will use like the 1% pools. I think there's a lot of room for figuring out how that could be dynamically responsive to volatility in the asset, or how you could do it in a way where it doesn't require liquidity providers to be making that decision or changing it. I think one of the most interesting ways to me and this is related to the Mcamm and this is I've talked about with Austin a lot is to auction off the right, not just to be the first trade. In a block, but to auction off the right not just to be the first trade in the block, but to set the fee and to receive, effectively, the fees. And what that does is it makes someone else effectively in charge of maximizing fee revenue. And they're in line with some off chain, brilliant market making agent that has access to all kinds of other information, gives them effectively, the right incentives to figure out, all right, let me pick the fee that maximizes my revenue, because I'll earn all the fees, or some percentage of the fees, and then they're paying rent to liquidity providers instead. And there's a lot of uncertainties and imperfections in that design too.
00:17:12.646 - 00:17:18.920, Speaker C: And I don't want to get too deep into any of those. But I think it's a very interesting extension of the Mcamm for that.
00:17:20.010 - 00:17:45.840, Speaker A: Yeah, that'll be a conversation we have for many months how to fix all of those little trade off spaces. I think sort of a last hook that we think is really interesting is based off a paper that you wrote with Dave White and with Hayden about the time weighted Average Market Maker, or TWAM. Do you sort of see that being used a lot and how do you think it sort of benefits users in the long?
00:17:47.250 - 00:18:45.954, Speaker C: So so the way TWAM works is it allows users to place these TWAP orders that execute at the uniswap pool's actual TWAP price over a particular period. And there's some nice things about TWAP orders. They're a lot harder to sandwich and you lose a lot of that sort of off chain, so they're good for the user often and that it's easier. Obviously TWAP manipulation is still possible, but especially if they do it over a long period, it's easier for them to potentially get a fair price. But I think another interesting about it is that it seems really beneficial to me for the liquidity provider, because this is TWAP liquidity is liquidity that's executing on a TWAP order. I'm sorry, TWAP volume, this volume that's executing as part of TWAP orders, it isn't aggregatable, in some sense can only be executed against by passive liquidity. And I think that's very cool.
00:18:45.954 - 00:19:21.200, Speaker C: And it's sort of a unique advantage that passive gives passive liquidity providers, because I think passive liquidity providers right now are competing with all kinds of off chain market makers and RFQ providers and people who are other DEXes, and there's potentially a race to the bottom in profits from that. But if somebody's doing a TWAP order on your pool, then actually only a passive liquidity provider can actually fill that order exactly according to the TWAP prices guaranteed on chain. And I think that's just like, vaguely pretty cool.
00:19:23.590 - 00:19:40.662, Speaker A: I agree as well. I think probably the follow up to that is about what does V four not have, essentially, what do you think V Four is missing and what do you think are like ways maybe just like, what is V four missing? I think that's probably a big enough.
00:19:40.716 - 00:19:44.246, Speaker D: Question how it is, yeah, well, so.
00:19:44.268 - 00:20:37.398, Speaker C: I think one category of answers to that question is anything that that could could be built on a hook, but isn't. And I think that's missing by design in V four, and anything like Oracles, for example, where in general you can build these things. And the intention is to build these with hooks. And so we try to try to pull out as much as you can from V four so that it can be added in as hooks. I am especially curious to hear from people what V Four is missing in terms of hooks, because I think, you know, it's not you can't do it's very flexible, the current hook system as designed, but it's not possible to do everything you might want to do. There aren't hooks, for example, every time a tick is crossed. And I think there are gas implementation reasons why that isn't the case.
00:20:37.398 - 00:21:40.506, Speaker C: But I would be very curious to hear from people before V four is set in stone. I'd be curious to hear from people if there are ideas for hooks that it might be missing. I've seen some suggestions about how hooks might be changed because, yeah, I think there's some things you could do in theory with hooks, but not with the hooks that V four provides. And I'm curious if there are use cases for those. And then I think there's whole categories of problem that V four maybe partially solves, but the sort of problem that may not be easily solved by hooks. And I think one of the biggest V four has a lot of gas optimizations, but obviously it's still expensive to do trades on ethereum main net. And so figuring out ways, I think figuring out ways to reduce the gas cost, the cost that goes to EIP 1559 is, I think, an important research area that isn't other than the significant gas optimizations, isn't really revolutionized in V four.
00:21:40.506 - 00:21:42.246, Speaker C: And I think it's hard to do with hooks.
00:21:42.438 - 00:21:54.500, Speaker A: Yeah, sort of a benefit of building in public, right, is that you can hopefully, if there's any glaring mistakes that we made, hopefully someone else will point them out and we can go on. Yeah, I'll let Shin take sort of the next question.
00:21:56.070 - 00:22:03.090, Speaker B: What do you think we should do about the malicious hooks? As there will be many, I would predict.
00:22:08.170 - 00:23:08.280, Speaker C: One thing I think is interesting about hooks is there are some hooks that you can provide liquidity on it. So malicious hooks, the idea here is you could provide to a pool that has some custom behavior that means that they could rug liquidity providers, for example. And I think liquidity providers should be very careful when providing to a pool with hooks that can one interesting thing is there are certain types of hooks that can't actually rug liquidity providers. And like the before swap hook, for example, which is my guess is it may be the most often used, hooked in general, doesn't actually allow you to prevent liquidity providers from withdrawing their liquidity. There's a lower bound on effectively how much liquidity providers can lose from providing to this pool. And I think that's interesting. I think you can sort of fearlessly provide to a pool that only uses this.
00:23:08.280 - 00:24:07.670, Speaker C: Interestingly, the permissions of what a hook is allowed to do, including which hooks is allowed to hook into, is baked into the address of the hook contract. So you can just look at the contract address and you can tell, okay, this hook can't rug me if I provide liquidity to a pool that uses it, which I think is pretty cool for hooks. Obviously, there's hooks before and after minting or burning liquidity or some of the hooks that could allow liquidity providers so it could allow the hook contract to rug you. I think you just have to be very careful about the code. And the same kind of thing you would do before trusting your code to any smart contract is check if it's audited, read the code yourself, see the extent to which you trust the author, all the factors that would normally determine whether you'd be willing to trust your money there. But it's an area where I think you have to be a lot more careful than you do with hooks that don't have those abilities. As a liquidity provider and as a swapper.
00:24:07.670 - 00:24:29.410, Speaker C: I think in general, ideally, the router contract should actually be protecting you from failed swaps. In general, you can actually guarantee that your transaction does not complete if it doesn't get the amount out that you expected. And so as a swapper, there are a lot of ways to protect yourself just by using a router contract.
00:24:31.910 - 00:24:58.540, Speaker A: Yes, malicious hooks will be a very interesting way, and to see how people sort of deal with them will be very interesting to see how the ecosystem sort of grows on that. There's been sort of a conversation on the internet and on Twitter about uniswap V Four being sort of a rehash of a lot of old designs. Do you sort of think that Uniswap V Four is innovative? Or is it just like everyone's idea is all sort of thrown into one?
00:25:01.250 - 00:26:31.482, Speaker C: I think the point of the hook construction is explicitly inspired by everything that everybody is doing to the Mcamm design that Alex had or TWAM or these other designs. The entire point of it is to these are not built into V Four. The point of having hooks is to say you can build all these things that other people are building and that we think are really cool on top of Uniswap, as far as whether the architecture itself is similar to others. Yeah, I candidly admit I thought singletons were interesting from, I think, Balancer v Two had one, and then I think actually Sushi had Trident, which was sort of a different kind of singleton contract, which never actually ended up launching. But I think the actual implementation of singletons that we did wasn't from me, it was from Rudy, and goes back pretty far, I guess. Yeah. From my perspective, I think there's a lot of ambient formerly Crocswap, I think was very early to the singleton construct as well.
00:26:31.482 - 00:26:38.620, Speaker C: And I think it's the right design. And so I think it's correct that everybody ended up landing on this.
00:26:38.990 - 00:26:59.940, Speaker A: Yeah, sort of the thought that I have that people are like, well, these are already things that exist in other protocols. And I was like, it's not the fact that they exist in other protocols, it's the fact that you can make them and sort of do anything that you want. It's not enshrined in the protocol. But yeah, that's sort of just my thoughts. But I'm a little biased, so I'll let Shan sort of get to the next question.
00:27:02.390 - 00:27:59.750, Speaker B: Yeah. So I guess somewhat a spicy one here, but there's a lot of discussion about whether the license is the right choice and whether it incentivizes the right mentality to contribute. Mainly people who contribute to the hooks library are obligated to, I think, inherit GPL. Of course, they can do their own private one, but we do have a template for them to contribute to the core repo. And then I think because we had sorry, into the periphery, and then because we have GPL there, then other people need to have GPL as well. Do you think that's even a contentious point, or is that something to be considered?
00:28:00.330 - 00:28:04.518, Speaker C: My understanding is I think hooks can.
00:28:04.524 - 00:28:05.126, Speaker D: Have am I right?
00:28:05.148 - 00:28:56.246, Speaker C: That cooks can have any licenses they want and there's nothing that stops you from using a hook that yeah, right. And building a hook that has whatever license you want and having a unisop V Four hook into it. I think we've seen the most discussion about is the use of the business source license in V Four as it was in V Three. And my perspective, I think I understand why. I think some people, as a result, wouldn't want to, say, contribute to the core uniswap code. And I think that's fine. It's a loss not to have people who would otherwise contribute, because it isn't, I think in my view, it's roughly it's a decision about how you want people to use your code and how you want people to interact with it.
00:28:56.246 - 00:30:00.542, Speaker C: And I think again, I can only speak for myself personally here, I don't think this is more widely shared at Unison. But certainly speaking for me, I think some of the psychic damage from having seen some of your designs and code that people that you helped with forked and aggressively and angrily used against you. While I think had something of a profound effect on my theory that people really just want to contribute to your code, I think it honestly is not, in my view, that hard to implement a lot of these ideas independently. And it's almost like a bare minimum. Basically, I think that you should have to do if you want to build a deck that aggressively competes with someone. And I personally sort of didn't enjoy.
00:30:00.596 - 00:30:04.030, Speaker D: It, the Sushi swap vampire attack.
00:30:04.180 - 00:30:09.390, Speaker C: And I would say like so I'd say that's why I like the idea of the VSL.
00:30:10.930 - 00:30:47.610, Speaker A: Yes. Always good to remember the old days and the impacts of previous events. Right. I guess on a completely different note, I think we'll sort of go a little bit away from V Four. So you alluded earlier to Blend, which is sort of, I think, like the last protocol you worked on before V Four and released it. So I think Blend was pretty interesting because it was sort of like Oracle as lending innovation. So how do you sort of feel about Blend? The innovations and sort of like any other thoughts that came out of it on its successes?
00:30:48.030 - 00:31:34.060, Speaker C: Yeah, so Blend is, I think, a pretty simple design for borrowing against arbitrary collateral. And the key idea of it comes from roughly the kind of peer to peer just lending that was pioneered by projects like Nftfi and backed, which is instead of having this pooled lending compound and Anave pioneered, we're going to run it all back and we're going to go actually to just peer to peer. Every loan, every piece of collateral has one particular lender against it. And the idea there is.
00:31:37.310 - 00:31:37.942, Speaker D: The lender.
00:31:38.006 - 00:32:20.966, Speaker C: Could be any sophisticated. Party off chain. You're making the same kind of assumption that you do in V three with Unisoft V three, that there are going to be these sophisticated actors off chain that can basically do a lot of optimizations that you might not normally. And I think it's impossible to just build them directly into the protocol. The protocol doesn't have the right signals, it doesn't have the efficiency of computation, you're not smart enough to do it. So you just say, okay, we're going to assume someone else is going to do it, they're going to value these NFTs at some price and they're going to lend against them and then we figure out, okay, how do we actually mitigate some of the downsides that come with that. And I think in previous versions generally these had been, so these were Oracleist protocols, but generally these had been expiring protocols.
00:32:20.966 - 00:32:38.570, Speaker C: And so the idea here is there's just a couple of clever ways in blend to roll these loans automatically and to allow liquidations to happen through a kind of refinancing auction. And the net effect is basically you get liquidated if, and only if nobody.
00:32:38.650 - 00:32:40.126, Speaker D: In the world would be willing to.
00:32:40.148 - 00:33:17.366, Speaker C: Lend to you at any interest rate against your collateral, the amount that you owe. And I think that's a pretty fair reason to liquidate someone. It's basically like the fairest reason to liquidate somebody for a floating rate. Anything would be that literally nobody in the world wants to take this position against you. And so I think it's a fairly simple protocol. I think it's interesting in part because it works for NFTs, but actually it could work for anything. And so it's a way potentially to do long tail lending in general, but I think it has some drawbacks.
00:33:17.366 - 00:34:13.758, Speaker C: I think you end up with a lot of different interest rates for example, and interest rates don't automatically adjust, you have to trigger a liquidation or some kind of refinancing in order to change the interest rate. So I think there are some downsides to the construction, but generally I think it's just very cool to use crypto economic Oracles. I think it is cool, just the concept that if someone's willing to pay for this then that might as well be its price, or if nobody's willing to pay this for it, then we have a lower bound on the price or an upper bound on the price. I think these are useful things that people maybe have forgotten trying to build uniswap V Two and V three. The Oracles are designed to be like, we're just going to give you one number and that's supposed to be the price and we're to going try to make it as manipulation resistant as possible. What's that really mean? We're in a market that doesn't have zero spread, it doesn't have a perfect price at any given time. And so actually what you're looking for often are these lower bounds or these upper bounds and that's what Blend kind.
00:34:13.764 - 00:34:40.310, Speaker B: Of plays with back to V Four. Let's say V Four really took off and we end up with about a million pools and 100,000 type of hooks, half of which are malicious one way or the other. What's the solution to route through them? How do you know what's the best way to go through so you end up with the most outcome?
00:34:40.890 - 00:35:34.040, Speaker C: Yeah, I think it's a really challenging problem. You're talking about just writing through hooks. I think it's related to the problem of routing across dex liquidity in general. And it's this sort of like nasty, non convex optimization problem and it depends on the gas costs and if there are any risks of of these particular of these particular pools. I have not thought deeply about it. My guess is you're going to find that really brute force, empirical methods may work surprisingly well. I think they just sort of have tended to and so just try a bunch of different routes and tweak them a little bit and see what happens and do like bisection searches and other kind of nasty stuff.
00:35:34.040 - 00:35:43.900, Speaker C: My guess is that that could be effective on it. But I think I'm probably behind the state of the art on route optimization in general.
00:35:46.430 - 00:36:04.346, Speaker B: Without specific hooks and with transient storage. Is new pool still non convex in V four? I think it might be convex if you assume there is no fixed cost of routing through an additional pool.
00:36:04.458 - 00:36:10.510, Speaker C: There is a fixed cost of routing through additional pool. Right. Because there's a gas cost of just interacting with the pool.
00:36:10.590 - 00:36:13.262, Speaker A: You got some cost just much smaller.
00:36:13.326 - 00:36:15.746, Speaker B: Right, but it's almost zero in.
00:36:15.848 - 00:36:18.806, Speaker A: I don't think it's almost zero, just much more.
00:36:18.828 - 00:36:21.990, Speaker B: Right, but it's much smaller than V three.
00:36:22.060 - 00:36:22.680, Speaker A: Okay.
00:36:23.290 - 00:36:32.540, Speaker C: It's meaningfully smaller than V three. You guys give me the data on it or whatever, but I don't think it's nowhere close to zero cost effectively. So you're going to have something similar?
00:36:33.470 - 00:36:59.906, Speaker A: No. Yeah, definitely not zero cost, just significantly cheaper. And how that trade off goes between routing to multiple pools and that cost coming down. But do you want to route to more pools? And price improvements are going to be a very tricky question, though, but something that people have solved before with on L Two S where it's functionally the same cost of routing to other DEXes. You got to go sort of figure.
00:36:59.928 - 00:37:22.460, Speaker B: That, I guess, related to that question. Would you say that Singleton and all the hype about flash accounting is maybe slightly overrated then? Because on the one hand, it doesn't reduce it to zero. On the other hand, most trades, if I remember correctly, are only just one hop in one pool. So is it really a big deal?
00:37:23.950 - 00:37:24.700, Speaker D: Yeah.
00:37:25.230 - 00:37:30.666, Speaker C: And part of it is what do you save? You save basically the accounting of the.
00:37:30.688 - 00:37:45.066, Speaker D: ERC, 20s for the internal transfers between them because you don't have to track any kind of internal pool to pool transfer and you save some calls and there's probably like a little other overhead.
00:37:45.098 - 00:37:46.074, Speaker C: I'm not sure that you save.
00:37:46.132 - 00:38:17.818, Speaker D: But again yeah, you guys tell me exactly on that. I'd be curious for the actual metering numbers on it. But the broader question the cost of deploying a new pool is extremely expensive in V Three and I think that's part of it is part of the gestalt of Uniswap. V Four is about like we want to let 1000 pools bloom and you don't really have that if it costs like hundreds of dollars to deploy every new pool. Right.
00:38:17.984 - 00:38:25.098, Speaker C: And so I think the idea here is reducing the cost of experimentation and of trying a bunch of different ones.
00:38:25.264 - 00:38:28.590, Speaker D: I think the routing cost is part of that, but the deployment cost is a big part as well.
00:38:28.740 - 00:39:18.960, Speaker A: Yeah, what I learned, I was talking to Noah and Poe yesterday, it's really hard to get exact numbers because the solidity compiler doesn't exist yet. So it's like the numbers they had from like a year ago were really hard to get because they had to essentially make the compiler themselves, which is not a trivial task because it's not optimized either. So I think they sort of have an idea but we don't know if it's exactly correct and so it'd be interesting to see when routing comes, what will those numbers be and how will they shake out. I think sort of a more fun question is you've really been with Uniswap since the beginning of V One and sort of also not been with Uniswap but been close to Uniswap since V One. So do you have any sort of fun stories you could share about maybe the good old days?
00:39:21.170 - 00:39:25.300, Speaker D: Fun stories about uniswap. Yeah, let me see.
00:39:27.590 - 00:39:28.580, Speaker C: I think.
00:39:32.150 - 00:40:43.738, Speaker D: Let'S see. Well, I have some memories of distinctly so uniswap was pretty scrappy almost up to the V Three launch. Effectively was a very small team and was in this tiny attic in Brooklyn. And I remember some case where there was a fire in the office that someone had to put out, but I don't remember the details. I don't want to describe it too much, but in general, yeah, I think the See fun uniswap stories I honestly do think when I talk about I talked earlier about the psychic damage from the Sushi swap vampire attack. So this was maybe about six months into COVID and everyone had been apart and hadn't really seen each other. But I think this is DeFi summer, it was an interesting summer and then this was kind of like just the.
00:40:43.744 - 00:40:45.786, Speaker C: Capstone to that was this really sort.
00:40:45.808 - 00:41:09.026, Speaker D: Of at the time extraordinary extraordinarily scary experience. But also when you look at it sort of extremely based and it's very cool that you actually can do a thing like a vampire attack. And was this larger than life moment where you basically have this weird sort.
00:41:09.048 - 00:41:12.050, Speaker C: Of rogue herovillain Nomi.
00:41:14.390 - 00:41:54.678, Speaker D: Versus Hayden Sparring on Twitter and competing for Liquidity and Nomi rugging, and then all this sort of dramatic stuff. And I sort of largely remember those times very fondly and I think remember the closest of the Uniswap team during those few months as being really and I know you've talked to others on the team about it and the way that they get very nostalgic about it, but despite basically everyone being physically apart, felt very much felt like the team was very close together at the time. I think that was fairly cool and spurred by this very sort of interesting, extraordinary circumstance.
00:41:54.874 - 00:42:23.180, Speaker A: I don't know if you're in the photo, but we've seen the photos of those days where the sort of vampire attack was happening, and the whole team just on a little Google meet call, which is quite funny. I think you may be on them. I'm not 100% sure. I just remember Noah and Teo. But yeah, it's interesting. That such a fun thing. Not a fun thing, but an interesting thing happened out of what was seen as a dismal moment for the team.
00:42:23.180 - 00:42:44.994, Speaker A: I think one of the other questions that we have is about L Two. So I'm somewhat of an L Two maxi myself, and I think that do you think that L Two S will pass L One volume in the next sort of maybe like five years, ten years, some time period that is far enough away that we don't think about.
00:42:45.032 - 00:42:58.630, Speaker D: It in the next five years? It seems very likely to me. It would be very strange if it didn't, in some sense, like Dex volume.
00:43:00.410 - 00:43:02.038, Speaker C: I think that's especially true if you.
00:43:02.044 - 00:43:47.106, Speaker D: Consider that, you know, like, right now, what we have on these L two S are these very kind of monolithic. Like L one, like L Two S where you have to sort of. I move from Ethereum main net to Optimism main net, and then I pop around and interact with it like it's its own chain. I'm in my own universe. I think that makes sense, and we'll have a lot of that. But I think one interesting thing we're starting to see is actually if you have much more efficient modes of interacting with an L Two and moving back and forth to an L Two, you could just interact with an L Two almost like you're interacting with an individual application. You say, like, I'm just going to really easily move my money over to L Two, do some stuff on it, and then instantly move back, say, or instantly move to another L Two.
00:43:47.106 - 00:44:11.318, Speaker D: And if Interoperability gets a lot better, A, you'll have a lot more usage on individual twos. B, I think we might start to rethink what an L Two is, and we start to see things that are more like applications that actually work as a roll up. Functionally, they're roll ups, but people users don't experience them as their own platform. They experience them as like, oh, I'm using Ave or whatever, but actually it's.
00:44:11.334 - 00:44:12.142, Speaker C: Ave chain or something.
00:44:12.196 - 00:44:18.734, Speaker D: And it's an Op Stack roll up, something like that. And I think that model for L.
00:44:18.772 - 00:44:22.638, Speaker C: Two S is really interesting because an application doesn't have to like, oh, I'm.
00:44:22.644 - 00:44:33.860, Speaker D: Going to go deploy on an L Two. It's like, I am an L Two, and I'm just going to be way guests, way cheaper than I would otherwise be. And users, we can just abstract away from the user where they're doing this.
00:44:34.550 - 00:45:03.050, Speaker A: Yeah, it'll be interesting to see, especially when as the Op stack and other L Two S get more sophisticated, what innovations we'll see and the ease of use that will sort of probably occur from them. So there is a big story within the Uniswap team that you are a karaoke maxi. So we want to know what is in fact, your favorite karaoke song. If I threw you in front of a stage right now, and I was like, do it, Dan, what do you think you're.
00:45:05.950 - 00:45:11.054, Speaker C: To be? It used to be Baby One More.
00:45:11.092 - 00:45:15.874, Speaker D: Time by Britney Spears, which I've done maybe 75 times in my life.
00:45:15.912 - 00:45:17.170, Speaker A: Very iconic karaoke.
00:45:17.670 - 00:45:45.414, Speaker D: And yeah, it's great song. And I think during COVID I think my vocal range, I sort of hit puberty, I guess, and my vocal range, my timbre sort of mellowed such that it's harder to hit the high notes and really evoke Brittany the way that I think she deserves to be. So more often now, I'll still do.
00:45:45.452 - 00:45:46.918, Speaker C: Brittany as my opener, but more I've.
00:45:46.934 - 00:45:49.766, Speaker D: Been leaning into My Way by Frank.
00:45:49.798 - 00:45:52.286, Speaker C: Sinatra because I think that's where my.
00:45:52.308 - 00:46:05.394, Speaker D: Voice is going a little lower and gravelier, maybe. I don't know if it's COVID or something, but pre COVID, I would do karaoke a lot and do Brittany all the time. And now now I find myself doing Sinatra more.
00:46:05.512 - 00:46:13.700, Speaker A: That may be the most impressive breadth of catalog I've ever heard Brittany to, turns out.
00:46:14.230 - 00:46:16.850, Speaker D: Yeah, I don't know, they would listen to it. It's weirdly similar.
00:46:16.920 - 00:46:37.580, Speaker A: That's why I've been thinking about mine. The team's like, you're going to do karaoke? And I've been like, I got to come up with a karaoke song. So I don't know about Brittany, but we'll definitely be spending my time today trying to figure that out. Maybe I'll let Shin sort of ask the actual, real questions instead of questions about karaoke for a little bit.
00:46:41.230 - 00:46:54.398, Speaker B: Okay, some really quick best effort prediction questions. First one, V three, V Four volume ratio, 90 days after launch.
00:46:54.574 - 00:46:56.180, Speaker C: That's a really tough one.
00:47:02.710 - 00:47:09.240, Speaker D: My guess is 90 days after launch, v Four is flipped V three, but I won't make much more of a prediction than that.
00:47:10.970 - 00:47:13.190, Speaker B: Somewhere around 50%?
00:47:13.340 - 00:47:14.742, Speaker D: Somewhere around 50%, maybe.
00:47:14.796 - 00:47:15.400, Speaker A: Yeah.
00:47:16.730 - 00:47:21.130, Speaker B: Okay. Number two, volume weighted fee rate among V Four pools.
00:47:21.470 - 00:47:23.594, Speaker D: Volume weighted fee rate.
00:47:23.712 - 00:47:26.154, Speaker A: I don't even know what the volume weighted fee rate is.
00:47:26.192 - 00:47:38.510, Speaker D: What's the volume, like V three, V Two and V three or whatever. But I'm going to give you terrible, terrible guesses. No one should trust my predictions if I don't even know some of these.
00:47:38.660 - 00:47:39.870, Speaker A: We know minor.
00:47:40.290 - 00:47:44.686, Speaker B: I think for V three, it's about seven, last time I checked.
00:47:44.718 - 00:47:47.620, Speaker D: Seven. That would be my guess for V Four as well, then.
00:47:53.190 - 00:48:01.622, Speaker B: Same here. If I were to guess, the third one is percentage of volume running through hooked versus not hooked pools in V.
00:48:01.676 - 00:48:03.494, Speaker C: Pools that have zero hooks at all.
00:48:03.532 - 00:48:04.360, Speaker D: In them.
00:48:15.870 - 00:48:17.066, Speaker C: I think a majority of.
00:48:17.088 - 00:48:35.360, Speaker D: Volume will go through non hooked pools, which would be a bowl. Kind of a bold guess, but I'm getting that from I think, like, you look at volume on V three and it's driven by the USDC Reef five bit pool, and that is a pool that is not going to have any hooks in its dominant incarnation in V four.
00:48:35.970 - 00:48:38.980, Speaker A: That's a very hot take. I respect that take.
00:48:39.590 - 00:48:41.054, Speaker D: What hook would you put on that pool?
00:48:41.102 - 00:48:41.426, Speaker C: I don't know.
00:48:41.448 - 00:48:44.098, Speaker A: I think a lever reducing one might be interesting, but yeah, I think the.
00:48:44.104 - 00:48:52.390, Speaker D: Question I don't think we've got a good enough to be clear. All the lever stuff I think very interesting, still fairly theoretical.
00:48:54.490 - 00:48:55.446, Speaker C: And I think it's going to be.
00:48:55.468 - 00:49:02.858, Speaker D: Hard, just gas wise on ethereum L One to beat the non hooked pool for that exact use case.
00:49:02.944 - 00:49:04.074, Speaker C: But I think you'll have this very.
00:49:04.112 - 00:49:15.742, Speaker D: Long tail of tons of different hooks. And again, for non weak USDC beers, I think hooks also get more interesting. I think you'll have a major weath USDC one with an ORAC with some Oracle or other on.
00:49:15.876 - 00:49:34.580, Speaker A: Yeah, also, this is like 30 days out. Right. So I think as the ecosystem gets more as we saw with V three, the ecosystem got more and more sophisticated as time goes on. So maybe like two years out, I changed my answer. I sort of agree with you. Maybe like two years out, it'll be a hook, but maybe at like 30, 90 days out, I probably do agree.
00:49:36.730 - 00:49:39.046, Speaker B: And then number of hooks in the.
00:49:39.068 - 00:49:59.100, Speaker D: First 30 days, number of different hooks deployed, assuming launched in the fall, actually, I'm going to guess like ten. I think there's going to be something of a slow ramp up.
00:50:01.810 - 00:50:03.680, Speaker B: I will take the offer there.
00:50:04.370 - 00:50:09.070, Speaker A: That tails would be pretty sick, I think. But yeah, it's unclear.
00:50:10.050 - 00:50:42.758, Speaker D: Yeah, if you count hooks that someone tries out and barely uses, no, then more. But I think if you count ones that have meaningful volume on them, yeah, I'd say like five to ten. I think a lot of this stuff takes a while. I mean, we put in Oracles in V Two and it took almost a year. It was basically until V Three came out that anyone started really making decent use of them. And then V three, totally obsoleted, that old model, but it at least got people starting to work on it. I think it takes integrations take a while, which is one of the reasons I know why units I wanted to open source this earlier on because it.
00:50:42.764 - 00:50:43.706, Speaker C: Would have taken a very long time.
00:50:43.728 - 00:50:49.194, Speaker D: I think to get hooks up and running. If you launch like on day one and announce what they are yeah.
00:50:49.232 - 00:50:51.342, Speaker A: People would be a little I saw.
00:50:51.396 - 00:50:52.000, Speaker C: Interesting.
00:50:54.210 - 00:51:05.220, Speaker B: Question coming from the comments and related to this list, which is what's the split between ETH and Weath liquidity in V four?
00:51:07.910 - 00:51:28.460, Speaker D: I think it's not yet decided exactly how V four should treat Ethan weave. And I'm sort of in the camp that it would be cool to have them be fungible in one way or another where you special case weed. In that case it's like 100% in one. Otherwise I don't know man.
00:51:32.750 - 00:51:33.626, Speaker C: I don't know.
00:51:33.728 - 00:51:34.858, Speaker D: It's a really good question.
00:51:34.944 - 00:51:38.826, Speaker B: So you're not worried about weed depagging from Wheat at all?
00:51:39.008 - 00:52:04.718, Speaker D: I am not worried about sorry. For me, there are two smart contracts that I would like put my life savings in. Like bet my life on and it's uniswap V two and Weath and any other I'm sorry, even Uniswap V three and V four, I would not trust my life. There's no bugs in that contract. Because I read the source code to unisoft v two. It's like, all right, this is solid.
00:52:04.814 - 00:52:16.520, Speaker A: Yeah, it's been battle tested many times on many different chains. I guess I'm an ETH, Maxi. I think that it'll be all ETH mostly just because of the cost of.
00:52:17.210 - 00:52:26.618, Speaker D: Other DEXes use weave though. And you're going to have to unwrap it to do atomic. I think you're probably right. More ETH and we yeah, I think.
00:52:26.624 - 00:52:46.900, Speaker A: It'Ll be the main ETH USDC pool will be ETH and not Weath. Also, I think wrapping after the swap might be less expensive still, but yeah, I think making them interoperable would be very cool. I think that's probably the way to do it.
00:52:49.030 - 00:52:55.118, Speaker D: We're just going to have people providing ETH We liquidity, which was the strangest thing in Uniswap.
00:52:55.294 - 00:53:36.080, Speaker A: I did say that I wanted to figure out the gas cost trade off that where it was optimal to route through my Ethweath pool and then provide liquidity for that. But I think I'm going to get rugged of my money making adventures. Not financial maybe. So I guess I'll go to the last one and we'll wrap it up. You've obviously been a pioneer in the research, sort of like the D Five research space and sort of the crypto research space in general. How do you sort of think of these new ideas that you sort of come up with?
00:53:38.070 - 00:54:07.690, Speaker D: I think most of our new ideas we get from working with the portfolio and with the community. I'm lucky to be in this incredibly privileged space at Paradigm where we get to work with a lot of really cool companies, including Uniswap, including Blur and many others and see basically the deep research problems that they're working on that are actually important to them. And that, I think, keeps us fairly.
00:54:08.030 - 00:54:10.026, Speaker C: There'S a temptation as a researcher to.
00:54:10.048 - 00:54:26.594, Speaker D: Kind of spin off into theory land and the very hands on applied context that we get from working with projects like Uniswap and just seeing like, okay, oh, this is what's actually important to you, not so and so. Other thing is I think just really.
00:54:26.632 - 00:55:09.694, Speaker C: Useful for keeping our research interesting. And I think it just is a constant source of interesting problems to work on. And right now, I think there's no shortage of those. The other places is just from my coworkers, and often I have a great team at Paradigm. I think they basically get some of the same inputs from the portfolio and from others, but also just like, all sorts of amazing stuff that they're bringing to the table individually. And I think, yeah, just bouncing ideas off of them. I think all the researchers in the portfolio as well, including you guys, you basically can only do good research.
00:55:09.694 - 00:55:23.810, Speaker C: I think collectively, it's a collective verb. And I think it's great that we have this DeFi research scene where I think just a lot of stuff has really interesting stuff, questions have come up and interesting answers.
00:55:24.630 - 00:55:48.566, Speaker A: I agree. It's always fun sort of working with people and chatting with them. Yeah, I think we'll sort of probably end it here. So we want to thank Dan again. If you don't follow Dan on Twitter, I'd be surprised if you were here and didn't follow Dan on Twitter, but if you don't, go, follow him. And then we will be back in two weeks with the research podcast. So let us know if you have any guests that you're interested in.
00:55:48.566 - 00:55:57.150, Speaker A: We'll probably announce it before and who we're coming out with. So thanks, Dan, for coming on. And that was Shin and I on this episode of the research podcast.
00:55:58.130 - 00:55:59.486, Speaker C: Thanks so much for having me.
00:55:59.588 - 00:56:00.650, Speaker B: All right, thanks. Bye.
