00:00:01.240 - 00:00:45.723, Speaker A: Okay, welcome back. So, in the last video we proved this positive result for the dynamically available setting, which suffices to separate the dynamically available and fully permissionless settings. What I want to do in this video is to just briefly sketch a negative result for the dynamically available setting, and then later this will give us one way of separating the dynamic available and quasi permissionless settings. Okay, so here's the statement of the result. So basically what this is saying is that protocols in the dynamically available setting can't solve consensus. Okay? Dynamically available protocols can't solve consensus impartial synchrony. So more precisely then, the statement of the theorems as follows.
00:00:45.723 - 00:01:40.335, Speaker A: So there is no zero resilient protocol solving probabilistic Byzantine agreement in a dynamically available, authenticated and partially synchronous setting. Okay? So the fact that the theorem stated for zero resilient protocols means that the result holds even when the adversary can't hold any resources. We haven't actually formally defined what we mean by probabilistic Byzantine agreement as a formal definition in the paper, but basically that just says what you'd expect it to. It means that for any security parameter epsilon greater than zero, the protocol has to solve BA by z agreement, the probability greater than one minus epsilon. Okay, when we say we're in the authenticated setting here, that just means we have a signature scheme available. Okay? So that makes the impossibility result stronger. And to remind you, the fact that we're in the partially synchronous setting means that message delivery is eventually always reliable.
00:01:40.335 - 00:02:14.935, Speaker A: Okay? So we're allowed periods of asynchrony where message deliveries is not reliable. But there is this unknown point called gst, after which message delivery is always reliable. Okay, so that's the statement of the theorem. It's obviously negative result. As I say, this will later on be useful in separating the dynamically available and quasi permissionless settings. And what I want to do now is just sort of sketch the result at a high level, okay, that's going to give us a cartoon version of the proof. For the details again, I refer you to the paper.
00:02:14.935 - 00:02:51.845, Speaker A: Okay, so how are we going to prove this? Well, towards a contradiction, let's fix a zero resilient protocol that solves probabilistic Byzantine agreement in a dynamically available and partially synchronous setting. Okay? Then consider a finite set of players, P, all of whom are honest. Okay? So there's no need for Byzantine action here. Partition P into two non empty sets, P0 and P1. We'll suppose the players of PI receive protocol input I. Okay, so players in P0 receive input 0. Players in P1 receive input 1.
00:02:51.845 - 00:04:09.615, Speaker A: Okay, we'll also suppose all players, if you want to consider external resources, all players have non zero external resources. If you want to consider stake, then let's just suppose everyone starts off with one unit of stake. Okay? The details there aren't too important. Okay, and then what we do is consider a network partition during which messages disseminated by players in each PI are received by other players in PI, but not by players in P11si. Okay, so if you're in P0, any message you disseminate for the duration of this network partition, any message you disseminate is received by players in P0 right at the next time slot, let's say, but not by players in P1 until after network partition is over. And similarly, if you're in P1, every message you disseminate is received by the players in P1 at the next time slot slate, but not by players in P0 until the network partition is over. Okay, well, what happens then? Well, because the protocol is assumed to solve probabilistic byzantine agreement in the dynamic available setting, if the network partition is sufficiently long, then the validity and termination conditions force players in P0 to be significant probability terminate and output 0 before the network partition is over.
00:04:09.615 - 00:05:04.511, Speaker A: And why is that? Well, that's because from their standpoint, the protocol execution is indistinguishable from a synchronous protocol execution in which the active player set is a P0. And if we're in a dynamically available setting, that means that we then have to terminate an output zero. Okay, so that's for the players in P0, they ultimately have to terminate in output zero even before the network partition is over. Similarly, by a symmetric argument, players in P1 have to, again, with significant probability, terminate and output1. Okay? And that immediately leads to a violation of the agreement condition. Okay, so it's a very simple proof sketch. Obviously, if you want to write down the details, and it's a little bit more fiddly, the details are in the paper.
00:05:04.511 - 00:05:25.897, Speaker A: Okay. But the basic conclusion is that dynamically available protocols can't control consensus in partial synchrony. Okay, so at this point, let's summarize where we got so far. Just solidify everything we've got so far. Okay. So far we defined the fully permissionless setting, first of all, without resource restrictions. Okay.
00:05:25.897 - 00:05:45.365, Speaker A: And then we showed that consensus is not possible in that setting. That motivated the introduction of resources. Right. So then what we did next is consider how to model resources. For us, resources are either external or on chain. Once we defined several framework for talking about resources. Then we defined the fully permissionless setting with resource restrictions.
00:05:45.365 - 00:06:22.605, Speaker A: And we saw a negative result that showed that protocols solving byzantine agreement in a fully permissionless setting cannot be deterministic. Okay, Obviously we know that there are populistic protocols solving byzantine agreement in a fully permissionless setting. The probabilistic protocols can function there, but they can't be deterministic. Let me define the dynamically available setting. Okay. Then we separated the dynamic from fully permissionless settings by showing that dynamically available protocols for bisexual agreement can be deterministic. Okay, we know that's not true for fully permissionless protocols.
00:06:22.605 - 00:06:49.885, Speaker A: Okay. Then just now in this video we saw that dynamically available peridot for bisexual agreement can operate in partial synchrony. So that's where we are so far. And the rest of the videos, this is roughly what we'll do. So we'll go on to consider forms of on chain resource other than stakeholders. Then we'll define the quasi permissionless setting. Then we'll see multiple results separating the quasi permissionless and dynamically available settings.
00:06:49.885 - 00:07:13.555, Speaker A: The last thing you want to do is to find a nice way of separating the quasi permissionless and permission settings. To do that, what we'll do first of all is to revisit what it means for the adversary to row bounded with respect to on chain resources. Once we've done that, then we'll use that analysis to produce a separation between the quasi permissionless and permission settings things. Okay, great. So I will see you in the next video.
