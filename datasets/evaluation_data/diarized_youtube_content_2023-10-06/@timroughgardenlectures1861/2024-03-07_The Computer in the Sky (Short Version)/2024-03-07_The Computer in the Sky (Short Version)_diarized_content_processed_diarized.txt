00:00:00.490 - 00:00:40.826, Speaker A: So today I want to talk about a hard computer science problem. I want to talk about a vision of a technology that I think would be really cool to have. And then I want to explore some of the scientific and engineering challenges that come up when you try to actually realize this technology. For an analogy, you know, you could imagine 60 years ago having a vision of a technology that enabled any two people on the globe to communicate digitally, pretty much instantaneously. And then you could view today phase Internet as some kind of approximate realization of that technology. And if we think of the Internet as kind of like a neutral infrastructure for digital communication, neutral here, meaning that there's no one person who owns or operates it. I kind of want the computational analog of that.
00:00:40.826 - 00:01:26.546, Speaker A: I want neutral infrastructure for general purpose computation. That's what I'm going to mean by this computer in the sky. So, in a little more detail, while still admittedly quite vague, I'm after a general purpose computer. It's going to be a computer that has its own operating system capable of running arbitrary programs, a computer that, in effect, is going to have its own processor, its own state, and so on. But unlike a typical computer that's owned by an individual or a company, a computer in which somebody has root access. I want a computer that does not have those properties. A computer that, in effect, has no owner, has no operator, literally just like runs on its own by itself in the sky, if you will, where we can all watch its computations.
00:01:26.546 - 00:02:03.518, Speaker A: I want this computer to be extremely robust. We should have extremely high confidence this computer will carry out its computations correctly and for a very, very long period of time. I want it so that nobody can tamper with its computation or shut it down. Finally, I want this computer to be open access. Anybody can use it. And by use here, I mean you can install programs that are going to be run in this computer's operating system, or you can interact with software that's already been installed by previous users of this computer. My primary interest in this talk is to think about how you might build a system that approximates this functionality.
00:02:03.518 - 00:02:58.896, Speaker A: Of course, there's another very natural question to ask, which is like, suppose you could build such a system. What would you do with it? For the most part, I will not be talking about this question, except on this slide and the next. So there's a number of compelling answers to this question. I'm just going to give you one answer, and I'm choosing it because it's one that I think is underappreciated and sort of mainstream discourse around this technology. And in particular, if nothing else, I want to make it clear that this technology is not fundamentally about things like currencies, prices, finance, et cetera. This technology is actually about something much more profound, which is stronger notions of ownership than we've historically had for things we've created or bought in the digital realm. So to explain, let me actually first start with a gift given to us now, almost 50 years ago by public key cryptography, namely secure digital signature schemes.
00:02:58.896 - 00:03:41.108, Speaker A: Because I would argue that digital signatures, in effect, allow an individual to own, in a meaningful sense, a bit string, like, say, 512 bits representing a public key. And by here, by the owner of a public key, I mean somebody who knows the corresponding private key. And if you look at the guarantees given to you by a secure digital signature scheme, it's kind of a loose analogy between them and some of the property rights that we're sort of accustomed to in the physical realm. Think, for example, about real estate. Like, suppose you just bought a house. So in the United States and many other countries, buying a house affords you a list of property rights. One of those would be the right to use if you want to live in your house, no one can stop you.
00:03:41.108 - 00:04:20.112, Speaker A: You're allowed to do that. And that's somewhat analogous to if you own a public key, meaning you know the corresponding private key, no one can stop you from generating valid signatures. Another one on the list of the property rights of owning a house would be the right to exclude, which is no one else is allowed to live in your house without your permission. And that's a little bit like how no one else can produce valid signatures with respect to your public key unless you give them permission, unless you give them access to your private key. And notice, crucially, public key is sort of out there in the world. Anyone can copy paste those 512 bits. Anyone can copy paste your public key.
00:04:20.112 - 00:05:16.356, Speaker A: Nobody can copy paste the ownership of that public key, because, again, that's granted by the private key secretly known to the owner. Suppose now we actually had our computer in the sky capable of doing general purpose computations, and so certainly capable of verifying digital signatures. Well, then we can extend this notion of ownership from just public keys to arbitrary data that's stored on that computer in the sky. The idea, conceptually super simple, just allow programs running on this computer, maybe the computer's operating system, maybe user installed programs running within the operating system. They can create pairs consisting of data X and a corresponding public key. We know what it means to own a public key, and then the owner of X is just defined as the owner of the public key. In other words, the owner of the data X on that computer is someone who knows the private key corresponding to the associated public key.
00:05:16.356 - 00:06:12.292, Speaker A: Pk so this computer in the sky is of course, perfectly positioned to verify and attest to ownership of data that resides on it, simply by verifying a suitable digital signature. Now, a question you might have at this point is like, okay, I guess I kind of see that there's a sense in which I could own data stored on this computer in the sky, but so what? What utility could I possibly be getting from that? And the answer to that question is going to depend on several factors. It's going to be application dependent. So first of all, it depends on the program that created this data X with which your public key is associated, and what that program lets you do with X. Like the program may or may not enforce a third property right, a right to transfer. It may or may not allow you to, after supplying a suitable digital signature, change the public key with which this data is associated. Change the owner, therefore, of this data X, and your utility for X may matter on whether you have that right to transfer or not.
00:06:12.292 - 00:06:46.780, Speaker A: And utility for X could depend on things that have nothing to do with the computer in the sky at all, could depend on interactions with the outside world. Maybe a good example here would be X could be an NFT, maybe one of a limited edition that was minted by some famous musician. Maybe there's some sort of special gated discord server where the musician interacts directly with just a small group of its superfans. And maybe you get entrance, you get access to the special discord server if and only if you own one of those limited edition nfts. Own in the sense that ownership is attested to by this computer in the sky.
