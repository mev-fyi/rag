00:00:00.170 - 00:01:00.590, Speaker A: Hi, everyone, and welcome to lecture Eleven in this lecture series on the foundations of blockchains. So this lecture is the second in a sequence of four. So lectures ten through 13 that are about different economic issues that naturally come up once you take into account the fact that the blockchain protocols we're thinking about tend to have a native currency, tend to support a cryptocurrency. Now, at the beginning of last lecture of lecture Ten, I sort of outlined five reasons why one should if you're thinking about blockchains, you should care about cryptocurrencies. Number one is obviously this is just super interesting in its own right. And so one might guess that Nakamoto's primary goal of inventing Bitcoin in the first place was really to have sort of a notion of digital gold, to have digital payments that don't require any kind of trusted authority. But in fact, even if you don't care about cryptocurrencies per se, even if you just want to see blockchain protocols have sort of very rich functionality, well, then also having a native currency is convenient for a number of different reasons.
00:01:00.590 - 00:02:03.374, Speaker A: So, for example, and this will be the focus of this lecture of Lecture Eleven, a native currency allows you to easily charge for usage by charging transaction fees denominated in the native currency. To briefly review the other points that I mentioned at the beginning of last lecture. So a native currency also makes it really easy or convenient to reward the contributors to your protocol. So, for example, nodes that are running the protocol, whoever's producing the blocks, et cetera, very convenient if you can just reward them directly with a currency that lives on chain. Also, if you think about it, the fact that you have native currency means you can use it not only as a carrot to incentivize people to do things you want them to do, but also as a stick to disincentivize nodes from doing things that you don't want them to do. And that naturally leads to the final use of cryptocurrencies that I want to mention here, which is proof of stake, which is an alternative approach to civil resistance, a very important one that uses far less energy consumption than proof of work. We'll talk about that next lecture.
00:02:03.374 - 00:02:32.614, Speaker A: Lecture Twelve will be all about proof of stake, which is definitely a major topic in its own right. But the point is, proof of stake wouldn't even make sense if you didn't have a native currency. Proof of work, in principle does make sense even without a native currency. It's not clear how you'd incentivize people to do the work, but it is at least well defined in the absence of a native currency. Proof of stake obviously wouldn't even make sense. It wouldn't even be well defined in the absence of some kind of native currency that the blockchain is aware of. So that wraps up the brief recap reasons to care about cryptocurrencies.
00:02:32.614 - 00:03:21.594, Speaker A: Again, reasons even if all you care about are blockchains with rich functionality. Having a native currency will make your life easier in achieving that goal in multiple different ways. But as I said for this lecture, I really want to drill down on using a native currency to charge for usage. Which brings us to the topic of transaction fees. So why would you even want to charge for usage? Like, why not just make the use of a blockchain free? Well, even if your blockchain had infinite processing power, even then you could imagine wanting to set a sort of very small transaction fee the transactions have to pay to be executed just to discourage kind of spam and other kind of very frivolous uses of the blockchain. So maybe like, I don't know, a penny per transaction you could imagine wanting to charge. But that's not the real reason for transaction fees in a blockchain.
00:03:21.594 - 00:03:58.802, Speaker A: The real reason is that the processing power of any blockchain is not infinite. It's a scarce resource. So while the parameters will be different for different blockchains, right, the rate of block production varies with the blockchain. Sort of the number of transactions that fit in a block varies with the blockchain. Fundamentally, blockchains are only adding blocks every so frequently, and each of those blocks is only so big. All of the major block chains have some kind of cap on how large each block can be. So, for example, in the bitcoin protocol, blocks are only produced every ten minutes on average.
00:03:58.802 - 00:04:48.246, Speaker A: And for a long time, blocks were capped at a size of 1 MB. In fact, if you've ever heard of the sort of fork of bitcoin known as bitcoin cash, that fork arose many years ago because of an argument over whether the block size should be bigger than 1 MB or not. Now, more recently, there was this change to the main bitcoin protocol known as SegWit, which stands for segregated witness that sort of changed the way that block size gets measured. I don't want to get into the details, but maybe bitcoin you can think of as having blocks that are now two megabytes in size, say, in any case, definitely a finite cap, ethereum. Meanwhile, blocks are produced every 13 seconds or so, and again, each one has a finite capacity. Now, size is measured differently in ethereum than in bitcoin because bitcoin is really very focused on payments sort of moving bitcoins from one address to another. Whereas ethereum is a general smart contracts platform.
00:04:48.246 - 00:05:26.958, Speaker A: And so a single transaction could be very, very complicated. It could trigger a bunch of function calls to lots of different smart contracts. So you don't want to treat all transactions the same or just look at the description length. You really want to ask the question, how much work is this transaction going to make the ethereum blockchain do? And so in ethereum, you use a measure known as gas, which is a proxy for the computational and sort of storage costs of dealing with that transaction. And each block has a cap of a hard limit of how much gas there is. So currently that's 15 million gas per block. Now, the number of transactions can actually vary a lot block to block in both of those blockchains.
00:05:26.958 - 00:05:57.182, Speaker A: But if you want to keep sort of concrete numbers in mind, think of an Ethereum block as having 100 transactions, maybe 200 transactions. Those are being produced every 13 seconds. Think of a Bitcoin block as containing maybe 1000 transactions, maybe 2000 transactions. And remember, those are being produced every ten minutes or so. In any case, all of this boils down to say that blockchains like Bitcoin, Ethereum, they really can't process that many transactions per unit time. So Bitcoin, for example, it's definitely less than ten transactions per second. Ethereum definitely less than 20 transactions per second.
00:05:57.182 - 00:06:48.282, Speaker A: Both those numbers are orders of magnitude shy of what you'd get in a traditional finance payment network, something like Visa. So this sort of low throughput, right? This is clearly a potential impediment to widespread adoption, like really mainstream adoption of blockchains like Bitcoin and Ethereum. And everybody knows this. Everybody's known this for years. And so that's why there's been for a long time intense efforts of how do you scale up these blockchains so that they, at least in effect, support many, many more transactions per second, ideally orders and orders of magnitude more than they do right now. So that's going to be the topic of sort of layer two scaling solutions. So basically, how do you have sort of a very small amount, a very small on chain footprint, actually representing a ton of transactions that are getting done off chain? We'll see ways of doing that for Bitcoin, specifically the Lightning network.
00:06:48.282 - 00:07:37.306, Speaker A: We'll see ways of doing that for Ethereum, specifically roll ups. But we're getting ahead of ourselves. That's a number of lectures in the future. So for now, I just want to focus on this fact that the throughput is very limited. Bitcoin and Ethereum can only do a very small number of transactions per second on account of the limited rate of block production and the limited block size. Now, you may ask, why do this? Why keep the block sizes so small? Why not just change the Bitcoin protocol so that every block has size 200 megabytes as opposed to size two megabytes, and then we get an instant 100 x increase in a number of transactions per second? The issue with this idea is it's really kind of incompatible with the sort of grand vision of permissionless consensus. So remember a couple of things about sort of blockchain protocols like Bitcoin and Ethereum.
00:07:37.306 - 00:08:44.610, Speaker A: So first of all, all of the transactions that get executed by the blockchain are sort of redundantly done by all of the nodes, right? Every node running the protocol is actually keeping track of everything that ever happened. So every node is responsible for processing everything. Secondly, in permissionless consensus, at least traditionally, the goal was to keep the barriers to entry as low as possible. So you or I should just be able to sort of go home, download some software onto, ideally our laptop, if not that, maybe our desktop, and be able to run the blockchain protocol with no issues. And so if you want the barriers to entry to be that low, then of course you can't assume that much about the computational power or storage available of the nodes running your protocol, nor can you really assume that they have super fast internet connections. So, given that all of the nodes running the protocol are executing all of the transactions, and given that we'd rather not assume that the nodes are all that powerful, obviously that places a limit on how many transactions are going to be processed. Because everybody, all of the nodes running the protocol need to keep up with the transaction processing.
00:08:44.610 - 00:09:38.946, Speaker A: In fact, if you think about it, the situation is even a little bit worse than that, right? So let's take Ethereum as an example. Blocks every 13 seconds. So certainly it seems crucial that a typical node should be able to process a block in less than 13 seconds, right? Because in 13 seconds another block is going to be coming along. But also, actually remember, it's not like all of the nodes running the protocol were there for the Genesis block, right? Again, you or I today should be able to can go and download the protocol software and start running the protocol. And at the beginning, when you first sort of set up your node, there's a bootstrapping process that your machine has to go through to basically catch up to everything that's ever happened in the blockchain. So there's going to be like 1213 years worth of transactions in Bitcoin, maybe six years worth of transactions in Ethereum. And so that means you really should be able to process blocks kind of, well less than the average amount of time between two consecutive blocks.
00:09:38.946 - 00:10:35.910, Speaker A: It's maybe okay if it takes a day or two to bootstrap a node for the first time, but you definitely don't want it to take weeks. So that's why it's not possible to just sheerly through increasing the rate of block production and or the size of the block. That's why you can't there's going to be fundamental limits on how many transactions per second you can process if you want to stay true to the original concept of permissionless consensus where pretty much anybody can run a node. So what that means is that for any kind of well utilized blockchain, like certainly including Bitcoin and Ethereum as two examples, the demand for execution by the blockchain is going to far outstrip the supply. In other words, we're transactions free. Many more than five transactions per second would be interested in being executed by the Bitcoin protocol. Many more than 15 transactions per second would be interested in being executed by the Ethereum protocol.
00:10:35.910 - 00:11:53.230, Speaker A: So, given that there's not enough room for everybody, every node, when they put together a block, even if they're a sort of completely honest and altruistic node, they really have no choice but to include some, but not all of the pending transactions. So whether they like it or not, the creators of these transactions are competing with each other for the scarce block space. All right, so which transactions would we like to see included? Do we care? Well, if we're interested in economic efficiency and efficient usage of this scarce resource that is the blockchain, yeah, we care. Right? The ones that should be excluded are the things that are like spam or frivolous uses, and the transactions which are actually generating a lot of value for the creator. Those are the ones that we want to include. The question, of course, is like, how is anyone supposed to know which transactions are the valuable ones? Right? You could ask the creators of the transactions if they think their transactions are valuable, but of course, everybody would say, yes, talk is cheap. So the natural way to actually screen for the high value transactions is to charge a nontrivial price, a nontrivial transaction fee, because then the only transactions that are going to be willing to pay it are those that actually are generating significant value for their creators.
00:11:53.230 - 00:12:38.094, Speaker A: So one question you, of course, then immediately have is, okay, but where does this price come from? How do we know what to charge? And there's two main approaches, and both are quite interesting. We'll talk about both over the course of this lecture. One approach is to have the users themselves suggest transaction fees that they'd be willing to pay. The second approach is to have this price computed in protocol so by the protocol itself. So in the next video, we'll talk about first price auctions. And that's going to be the most common way that blockchain protocols allow users to sort of set their own transaction fees to suggest what they'd be willing to pay. And then later in this lecture, we'll talk about Ethereum's new transaction fee mechanism, which was developed in this proposal known as EIP 1559.
00:12:38.094 - 00:13:06.530, Speaker A: And there, as we'll see, a significant aspect of the transaction fees is in fact computed by the protocol itself, rather than sort of kicking the can down to the users to figure out what the right transaction fees should be. So now let's move on and talk about first price auctions, which is how transaction fees have always been set in Bitcoin, all the way back to the Genesis block. It's also how they were set in Ethereum until August 2021. So that's coming up next. I'll see you there for first price auctions. Bye.
