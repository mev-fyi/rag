00:00:00.490 - 00:00:40.874, Speaker A: So today I want to talk about a hard computer science problem. I want to talk about a vision of a technology that I think would be really cool to have. And then I want to explore some of the scientific and engineering challenges that come up when you try to actually realize this technology. Cron analogy. You could imagine 60 years ago having a vision of a technology that enabled any two people on the globe to communicate digitally, pretty much instantaneously. And then you could view today days Internet as some kind of approximate realization of that technology. And if we think of the Internet as kind of like a neutral infrastructure for digital communication, neutral here, meaning that there's no one person who owns or operates it, I kind of want the computational analog of that.
00:00:40.874 - 00:01:26.546, Speaker A: I want neutral infrastructure for general purpose computation. That's what I'm going to mean by this computer in the sky. So, in a little more detail, while still admittedly quite vague, I'm after a general purpose computer. It's going to be a computer that has its own operating system capable of running arbitrary programs, a computer that, in effect, is going to have its own processor, its own state, and so on. But unlike a typical computer that's owned by an individual or a company, a computer in which somebody has root access. I want a computer that does not have those properties. A computer that, in effect, has no owner, has no operator, literally just like runs on its own by itself in the sky, if you will, where we can all watch its computations.
00:01:26.546 - 00:02:03.566, Speaker A: I want this computer to be extremely robust. We should have extremely high confidence this computer will carry out its computations correctly and for a very, very long period of time. I want it so that nobody can tamper with its computation or shut it down. Finally, I want this computer to be open access. Anybody can use it. And by use here, I mean you can install programs that are going to be run in this computer's operating system, or you can interact with software that's already been installed by previous users of this computer. My primary interest in this talk is to think about how you might build a system that approximates this functionality.
00:02:03.566 - 00:02:58.928, Speaker A: Of course, there's another very natural question to ask, which is like, suppose you could build such a system. What would you do with it? For the most part, I will not be talking about this question, except on this slide and the next. So there's a number of compelling answers to this question. I'm just going to give you one answer, and I'm choosing it because it's one that I think is underappreciated in sort of mainstream discourse around this technology. And in particular, if nothing else, I want to make it clear that this technology is not fundamentally about things like currencies, prices, finance, et cetera. This technology is actually about something much more profound, which is stronger notions of ownership than we've historically had for things we've created or bought in the digital realm. So to explain, let me actually first start with a gift given to us now, almost 50 years ago by public key cryptography, namely secure digital signature schemes.
00:02:58.928 - 00:03:41.108, Speaker A: Because I would argue that digital signatures, in effect, allow an individual to own, in a meaningful sense, a bit string, like, say, 512 bits representing a public key. And by here, by the owner of a public key, I mean somebody who knows the corresponding private key. And if you look at the guarantees given to you by a secure digital signature scheme, it's kind of a loose analogy between them and some of the property rights that we're sort of accustomed to in the physical realm. Think, for example, about real estate. Like, suppose you just bought a house. So in the United States and many other countries, buying a house affords you a list of property rights. One of those would be the right to use if you want to live in your house, no one can stop you.
00:03:41.108 - 00:04:20.112, Speaker A: You're allowed to do that. And that's somewhat analogous to if you own a public key, meaning you know the corresponding private key, no one can stop you from generating valid signatures. Another one on the list of the property rights of owning a house would be the right to exclude, which is no one else is allowed to live in your house without your permission. And that's a little bit like how no one else can produce valid signatures with respect to your public key unless you give them permission, unless you give them access to your private key. And notice, crucially, public key is sort of out there in the world. Anyone can copy paste those 512 bits. Anyone can copy paste your public key.
00:04:20.112 - 00:05:16.356, Speaker A: Nobody can copy paste the ownership of that public key, because, again, that's granted by the private key secretly known to the owner. Suppose now we actually had our computer in the sky capable of doing general purpose computations and so certainly capable of verifying digital signatures. Well, then we can extend this notion of ownership from just public keys to arbitrary data that's stored on that computer in the sky. The idea, conceptually super simple, just allow programs running on this computer, maybe the computer's operating system, maybe user installed programs running within the operating system. They can create pairs consisting of data, x, and a corresponding public key. We know what it means to own a public key, and then the owner of X is just defined as the owner of the public key. In other words, the owner of the data x on that computer is someone who knows the private key corresponding to the associated public key.
00:05:16.356 - 00:06:12.292, Speaker A: PK so this computer in the sky is, of course, perfectly positioned to verify and attest to ownership of data that resides on it, simply by verifying a suitable digital signature. Now, a question you might have at this point is like, okay, I guess I kind of see that there's a sense in which I could own data stored on this computer in the sky, but so what? What utility could I possibly be getting from that? And the answer to that question is going to depend on several factors. It's going to be application dependent. So, first of all, it depends on the program that created this data X with which your public key is associated, and what that program lets you do with X. Like the program may or may not enforce a third property right, a right to transfer. It may or may not allow you to, after supplying a suitable digital signature, change the public key with which this data is associated. Change the owner, therefore, of this data X, and your utility for X may matter on whether you have that right to transfer or not.
00:06:12.292 - 00:07:09.510, Speaker A: And utility for X could depend on things that have nothing to do with the computer in the sky at all, could depend on interactions with the outside world. Maybe a good example here would be X. Could be an NFT, maybe one of a limited edition that was minted by some famous musician. Maybe there's some sort of special gated discord server where the musician interacts directly with just a small group of its superfans. And maybe you get entrants, you get access to this special discord server if and only if you own one of those limited edition nfts, own in the sense that ownership is attested to by this computer in the sky. So this functionality, this notion of user owned data with the data stored on sort of credibly neutral infrastructure, this computer in the sky, this is functionality that historically has not been available to us. And so accordingly, you can imagine that there are platforms or products out there that would have been designed differently had this functionality been available at that time.
00:07:09.510 - 00:07:42.304, Speaker A: To make that idea more concrete, let's use a social media example. Let me remind you of something that sort of happened very quickly around July 4 of last year, 2023. So the context was, at that time, it had been about nine months since Elon Musk had taken over Twitter. A bunch of people were annoyed at Elon Musk for various reasons. A bunch of people were annoyed at Twitter for various reasons. And so meta thought they saw an opening, and so they launched a competing project, not that different than like a copy paste of Twitter, which they branded, obviously. You know, it's a new social media product.
00:07:42.304 - 00:08:34.460, Speaker A: They had to get users as quickly as possible. And what was interesting to notice was the dramatic asymmetry between existing Twitter users and existing Instagram users about how easy it was to get started on threads. Twitter users had to start from scratch, right? If you had a million followers on Twitter, obviously you could tweet and say, hey, everybody, I'm on threads now, follow me over there. But those million followers would all have to literally manually follow you in the threads app. Whereas if you had poured all of your energies into building up an Instagram following, if you had a million followers there, well, just so happens Instagram, of course, also owned by meta, just like threads. So naturally, meta gave you the option, like with a click of a button just to export those million users from Instagram over to threads. So no surprise, the early adopters of threads were largely people that had a big Instagram presence.
00:08:34.460 - 00:09:32.944, Speaker A: And what I like about this story is it takes something that, on the one hand, I think we all know, but it makes it so in your face about who it is, who owns your social network data. And the answer is not you. Okay? It's Twitter, it's threads, it's Instagram, it's whatever, but it's definitely not you. So this fact that social network data is confined to and owned by the platform in which that data happened to be generated, I find this a very unsatisfying state of affairs. And I'm even, like, leaving aside things like privacy, ethics, et cetera, not that they're not important, they are important, of course. But even if I just sort of look at this from the perspective of sort of building a system, I think about social networking data and I ask, where should it be stored to? What should it be associated? It's not the platform. Why not? Because what's being expressed in this social network data transcends the specific platform in which it was generated.
00:09:32.944 - 00:10:10.364, Speaker A: Typically, when someone follows someone else on Twitter, the intent is not to just say, like, I want to see this person's tweets. The intent is to say, like, I think this person is interesting. I want to hear what they have to say, and I want to know about their content. Generally, they'd be interested in that, whether it's generated on Twitter or any other social media platform. So given that the information being recorded is not specific to the platform, why should that data be confined to and proprietary to that platform. Now, historically, the obvious question would be like, well, okay, I mean, this data got generated within our social media platform. We got to put it somewhere.
00:10:10.364 - 00:10:51.128, Speaker A: We could put it on our servers, and if we don't put it there, I don't know, like, where are we going to put it? And the point is, with this new technological functionality, with this computer in the sky that supports a notion of user owned data, there is another option. Now, some of you, I'm sure, are immediately thinking, why would these companies ever give up this data? Probably it's part of their business model to make a profit off of proprietary data that's generated on their platform. And I hear that. But let me say two things. So first of all, for this whole talk, I really want to approach things from my perspective. I'm fundamentally a computer scientist, so I don't really want to talk frankly about business models. I want to talk what is technologically possible versus impossible.
00:10:51.128 - 00:11:52.384, Speaker A: And my point is that right now, these platforms are the way that they are, in part because it wasn't clear what other options there were. Now, with a computer in the sky, with these stronger notions of user owned data, the design space is richer, and I want to know, what else could we build? Second, I don't know that I buy the argument that you couldn't possibly have profitable platforms, that rather than sort of owning a bunch of proprietary data, rather just sort of curate the user experience, interacting with some, in effect, public data. Like think about search engines, for example. They're all working with the same stuff, the same raw material, which is the open web. So they have to compete on other dimensions, like the quality of their ranking algorithm, sort of the other products that they offer, the effectiveness of their online advertising system and so on. And last time I checked, there were some search engines that were, to put it mildly, quite profitable. So, look, I don't know what the next generation of successful social media platforms is going to look like.
00:11:52.384 - 00:12:40.972, Speaker A: Maybe they'll look just like the old ones, maybe they'll look totally different. But at least we now have a number of new designs that can participate in the competition. So it's easy to think of other examples of data that in practice is typically generated through interacting with a specific platform. But at the same time, it's data that conceptually, the meaning and relevance of it far transcends the platform in which it was generated. Like reputational information is a great example. I was on a trip recently and I took an Uber from the airport to my hotel, and unfortunately, it was not a very good experience actually left that driver a three star review, which for me is very, very unusual to. So Uber happened to be the matchmaking algorithm that I used to connect to that particular driver.
00:12:40.972 - 00:13:16.924, Speaker A: But really, once that driver was assigned to me, Uber was completely irrelevant for the rest of the experience. I had a three star experience. It would have been a three star experience if Lyft had happened to be the matchmaking algorithm that connected me to that driver. My intent with the three star review was to signal information about the quality of the driver independent of the platform. But because at the very beginning, Uber happened to be the platform that connected us, they're the only ones that have that data. They're the only ones that know about that three star review. The final example is about something that's very near and dear to my heart, which is going to see music concerts or music shows.
00:13:16.924 - 00:13:48.980, Speaker A: I've probably seen something like 1500 of these over my lifetime. I started early. I started as a kid, and I'm old enough that when I first started going to concerts, this would be like in the late eighty s and the early ninety s. You know how I'd get tickets to go to the concert? I would wake up possibly like five in the morning. I would go to a physical store, in my case, generally a tower records. I would wait in line outside the store for four or 5 hours until the Ticketmaster booth inside the store opened at 10:00 a.m. And then I would buy my tickets.
00:13:48.980 - 00:14:26.256, Speaker A: And I know all of you who are under 30 are looking at me now and saying like, wow, I really pity this stone age in which you sort of had your entire childhood. Don't even get me started about what photography was like back in those days. But for all these things, I don't miss standing in line for 5 hours outside of the physical store. There was one thing that was really, really nice, which was after I handed over my hard earned cash, I got back physical tickets to the concert, at which point the tower records could burn down. Ticketmaster could go out of business. It didn't matter. If I showed up at the venue with those physical tickets, I would get in.
00:14:26.256 - 00:14:40.208, Speaker A: I handed over my cash, I had the tickets. The tickets were mine. They no longer belonged to Ticketmaster. I still go to shows all the time. Sometimes I still use Ticketmaster, and that is not how it works. It's very nice. I can just sort of do it on my phone.
00:14:40.208 - 00:15:10.012, Speaker A: But at the same time, there's no analog of me having those physical tickets in my hand until I'm actually literally in the venue. I am getting into that event at the whim of Ticketmaster. They can take those tickets away from me at any time up until that process. And does this work in practice? Usually, yeah. I usually get into the show. There's usually not a problem with ticket mastery, even though they're sort of custodying my tickets the entire time. But again, even just like, from a computer science perspective, this just feels deeply unsatisfying.
00:15:10.012 - 00:15:20.640, Speaker A: Right. I handed over my same hard earned cash that I was in the, but I'm not getting the same thing back. I am not getting tickets that are actually mine.
