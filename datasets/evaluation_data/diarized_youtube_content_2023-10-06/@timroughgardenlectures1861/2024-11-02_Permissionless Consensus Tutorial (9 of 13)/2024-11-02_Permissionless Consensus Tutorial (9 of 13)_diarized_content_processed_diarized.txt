00:00:02.360 - 00:00:47.515, Speaker A: Okay, welcome back. So in the video so far, what we've done is to define the fully permissionless and the dynamic available settings. And we've seen various results for those settings. And what we want to do next is to go on to define the quality permissionless setting. Okay, so first of all, let's just briefly remind ourselves of the dynamically available setting. In the dynamically available setting, we suppose that if TR is the set of transactions confirmed for some honest place player P at time t, then at least one honest player allocated non zero stake by that set of transactions is active at that time slot. Okay? So basically if you look at the set of confirmed transactions, look at whose owner stake according to that set of confirmed transactions, then at least some honest one of those players who's honest must be active and carrying out the protocol.
00:00:47.515 - 00:01:25.005, Speaker A: Okay, so that's the dynamic available setting. Yeah, we now want to move on to consider the quasi permissionless setting. What we're going to do first of all though is to define the quasi permissionless setting just for stake. Okay? Because if it's just for stake, it's very simple. So here's the version just for stake and then, yeah, we'll generalize to arbitrary on chain resources in a little bit. Okay, so let's state the version just for stake then. So in the quasi permissionless setting, we suppose that if TR is a set of transactions confirmed for some honest player p at time T, then all honest players allocated non zero stake by that set of transactions are active that time slot T.
00:01:25.005 - 00:02:13.005, Speaker A: Okay? So previously in the dynamic variable setting, we know that at least one honest player from that set is active, and now we can assume that they all are. Okay? So the basic fundamental difference here is that this is what allows us to carry out the classical BFT quorums type protocols. If you're doing a classical BFT type protocol, we generally use quorums or quorum certificates that require signatures from 2/3 of the stake or something like that. And generally that's not going to be possible. You're not going to get call rooms of that type unless the honest players are actually active and participating in the protocol. If only a tenth of the players or a tenth of the stake is actually turning up and participating, you will never get this call room. So it's the quality permissionless settings allows us to carry out some classical BFT style protocols.
00:02:13.005 - 00:02:40.985, Speaker A: I hope you agree that's very simple. That's the version just for stake. Now let's think about how to generalize that a little bit. Yeah, so as I've mentioned several times in the previous videos, a stake is the canonical on chain resource. But there are other types of on chain resources. So I'll show you some examples of that next. Yeah, so there were various proof of work protocols, Hybrid Solidar and Bizcoin.
00:02:40.985 - 00:03:20.849, Speaker A: They're all slightly different from each other obviously, but a high level they operate all operate in a fairly similar sort of way which I want to summarized now. So basically the idea is as follows. A proof of work is used to select a rolling sequence of committees. Okay, Once a committee is selected, okay, they then just carry a classical BFT style permission protocol to implement the next consensus decision. Okay, we just got a fixed set of participants there. The committee, right, they can then just carry out a classical permission protocol amongst themselves. They do that in order to implement the next consensus decision.
00:03:20.849 - 00:04:25.755, Speaker A: And what does that mean? Well, that next consensus decision includes the next sequence of transactions to be committed to the blockchain as well as determining which players have provided sufficient proof of work in the meantime for inclusion in the next committee. Okay, so this particular committee determines like the next sequence of transactions between them in the blockchain and also who's the next committee then obviously once you've got the next committee, you can just iterate this process. Right? So that nets committee then carries out the BFT style permission protocol to determine the next sequence of transactions and the next committee and so on. Okay, so hopefully the basic idea is clear. So in that context, the on chain record that P is a member of the present committee, that should be seen as an on chain resource. That resource allows P to participate in the consensus protocol to potentially earn rewards and be transferable. Also these protocols operate in some version then of the quasi permission setting that we define mistake.
00:04:25.755 - 00:05:05.141, Speaker A: Basically all honest players with on chain resources are required to be active, otherwise the protocol will stall. Once you've got a committee, once you're registered having this on chain resource, we require all the honest members of that committee to be active in carrying out the protocol. Otherwise you might not have liveness. Typical BFT style protocol would stall otherwise. Okay, so we wanted to find a more general version of the quality permissionless setting that allows us to talk about more forms of on chain resource other than the stake. So let's go ahead and do that. So first of all, yeah, let's, let's just generalize the definition of an unchained resource.
00:05:05.141 - 00:05:43.795, Speaker A: Okay, so we'll do that first of all by talking about protocol defined resources. Okay, so a protocol defined resource is just a very simple thing Just a function S. Let's say it takes a set of messages and allocates each identifier some resource balance. Okay, so for any given set of messages and any identifier, this is just some. Some gives you some natural number output. Okay, so it's just like a very general version of a stake allocation function, if you like. Okay, so that's protocol defined resources then by the on chain resource, meaning resources either stake or protocol defined.
00:05:43.795 - 00:06:15.655, Speaker A: Okay, so so far so simple. So for now I'm just writing down this very simple definition as we'll talk about in a little bit. There are some sort of nuances that come up and so we'll come back to this. Okay, first of all though, so here's just the general definition of the quasi permissionless setting. So the quasi permissionless setting protocols are allowed to specify a set of on chain resources. S1 start to SK. Okay, so each of those could be protocol defined or could be stake.
00:06:15.655 - 00:06:59.075, Speaker A: Then by definition and execution of the protocol is consistent with the quasi permission and setting. ES players are active whenever they own on chain resources. Okay, so it's just a simple generalization of the version for stake. Okay, so there are some nuances here though. That means we kind of do want to refine the definition in certain ways that we'll come to. Okay, so what do I mean by that? Well, because the definition of protocol defined resources is so generalizing that the simplified quality permissionless setting and just for state to arbitrary such resources can lead to the consideration of essentially permissioned protocols. Okay, so let's see what I mean by that.
00:06:59.075 - 00:07:41.101, Speaker A: Okay, so for example, previously we considered this generic proof of work BFT style protocol where we had these rolling sequences of committees. Okay, so we set up these protocols like hybrid solida solida bizcoin, okay, where you have proof of work is used to select a committee. That committee then carries out a BFT style protocol in order to execute the next consensus decision. That consensus decision determines the next sequence of transactions to be included in the blockchain as well as the next committee and so on. Okay, so in that case it didn't seem that permission. Right, because we had this rolling sequence of committees. According to the definitions we've laid down so far though, there's nothing about the quasi permissionless setting that forces the change in committees.
00:07:41.101 - 00:08:01.165, Speaker A: Right. For general on chain resources other than stake. For stake, it's not true because liveness forces us to finalize transactions issued by the environment. The transfer stake. So stake will necessarily be transferable. Right? Okay, but if we're talking about general on chain resources. That's not yet the case.
00:08:01.165 - 00:08:34.985, Speaker A: So a different version of this generic proof of work BFT cell protocol might refuse to transfer on chain resources and just have a single committee carry out state machine replication. There's nothing stopping it doing that. So far, according to the definitions we've laid down so far, the question is, can you call such a protocol permissionless or quasi permissionless with a straight face? And basically, I think the answer is no. Okay, so that leads us then, to the notion of reactive resources. And we'll cover those in the next video. Okay, so I'll see you there.
