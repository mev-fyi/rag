00:00:00.250 - 00:00:17.550, Speaker A: You. Good morning, everyone. Very happy to be here at Lionhack. Thanks very much for the invitation. It's an honor to participate. The interactions I've had with the students at the blockchain club here at Columbia have all been amazing. So very happy to participate.
00:00:17.550 - 00:01:05.140, Speaker A: This morning I want to talk about web three. Actually, I want to talk about talking about web three if, because I've never seen a more misunderstood set of technologies in my entire career, misunderstood by everyone, including many computer science academics. On the other hand, can you really blame anyone for being confused? I mean, what's this technology even called? Distributed ledgers? Blockchains? Web three. Crypto. Wait a minute, is crypto short for cryptocurrencies or for cryptography? I forgot. Well, for this talk, let's just stick with web three. And by that, I sort of want to refer broadly to the tech stack, including both blockchain protocols and the application ecosystem that is built on top of them.
00:01:05.140 - 00:02:26.874, Speaker A: As you can imagine, and like many of you these days, I field lots of confused questions from friends, colleagues, family members who want to talk to me about web three. In fact, it's worth enumerating all the totally orthogonal dimensions along which many smart people seem to be simultaneously confused. Like, a typical sequence of questions I might get might go, first of all, what's the difference between proof of work and proof of stake? Then why would anyone pay anything for a JPEG? And then, so before you go, what should I buy, bitcoin or ethereum? And what's crazy is generally the person asking me these questions. I don't even think that they realize that these are three kind of like radically different types of questions. Like, for an analogy, imagine we were instead talking about the Internet, and someone asked in quick succession, how does the BGP protocol decide which routes data package should travel along? Why are teenagers so obsessed with TikTok? Which tech stocks should buy here? I think most people would recognize this as a sort of schizophrenic conversation, as these questions are kind of careening wildly between basically unrelated topics. The first question is about how the technology actually works, like BGP routing. And that's something you'd ask an engineer or computer scientist like myself.
00:02:26.874 - 00:02:57.154, Speaker A: The second question, about TikTok. That's about how people use technology and their choices and behavior, probably best addressed by someone in the social sciences, like in economics or psychology, et cetera. And then the final question about, like, buying bitcoin or eth. That's obviously about investing, a question you'd pose to your financial advisor. So my goal in this talk, then, is to suggest a mental model for at the highest level, I. E. In the least level of detail, organizing discussion around web three.
00:02:57.154 - 00:04:00.902, Speaker A: And a lot of what I say may be obvious or trivial to many of you, but in my experience, it's usually worth taking the time to say the obvious parts out loud. The first point is to always be clear in your mind whether you're talking about how web three technology works, I. E. Stuff which is below the user facing application layer versus how it might be used, meaning the user facing application layer and stuff built on top. So, for example, if you're talking about proof of work versus proof of stake, that all concerns the implementation of the technology. Whereas an NFT marketplace, something like OpenSea, that's an example of how it might be used. So computer science prides itself on abstractions, models of computing functionality that, to paraphrase Einstein, are as simple as possible, but no simpler and central to the high level mental model and sitting between the two sides, implementation on the one hand, applications on the other.
00:04:00.902 - 00:05:27.006, Speaker A: Central to the high level mental model I want to talk about is such an abstraction, an idealized model of the computing functionality offered by web three. So the three parts of the diagram I have in my head correspond to the questions. First of all, what is the core computing functionality that web three offers? Second, is it possible to actually realize that functionality with current technology, and if so, how? Three, were that functionality to actually be implemented? What could we do with it? So the abstraction, the first part that sits in the middle, the point is that it usefully decouples thinking about implementation from thinking about applications, you can discuss hard engineering challenges in isolation with the goal of implementing the desired computing functionality rather than any application per se. And you can discuss potential applications of the technology before the technology even exists, hypothesized on the eventual implementation of the functionality spelled out in the abstraction. For example, in quantum computing, theoretical computer scientists first came up with the appropriate abstractions of quantum computers back in the early 1990s. So that sort of answered question one the right abstraction. And then they quickly came up with interesting applications of quantum computers.
00:05:27.006 - 00:06:23.830, Speaker A: Should they ever be built like Shore's factoring algorithm? Right? So that sort of answers the third question, why would this functionality be interesting? Again, predicated on eventually realizing an implementation? And of course, these days many research groups are working hard to actually realize quantum computers, I. E. Answer the second question, how are these things implemented? The idea is that these quantum computers would support the functionality promised by the abstraction that we started with back in the early 1990s. So this may all seem a little abstract, so to speak. So let's go through these three questions, sort of the what, the how, and the why in a familiar and relatively well understood example, the Internet. So let's start with the first question. What is the core computing functionality offered by the Internet? Yeah, different people might give you different answers, but let me suggest that it's the permissionless and near instant transmission of data between any two points on the Globe, like the post office.
00:06:23.830 - 00:07:22.842, Speaker A: The way faster, which is good news and digital only, which is sort of both good and bad news these days. I think almost anyone would recognize that this statement, or something like it, is a reasonable description of what fundamentally the Internet does. Now, as far as the second question, namely, is it possible to realize that functionality, and if so, how? So? That question would involve explaining how, for example, for the Internet, that would involve explaining how the IP protocol works, maybe DNS and so on. And you would learn all of this in a standard engineering course on computer networking. 99% of Internet users, of course, have no idea how the Internet works. And let me emphasize that, in fact, is a great thing, right? So given that so few people in the world are hardcore techies and nerds, a logical consequence of the widespread adoption of any technology is that almost none of its users know how it works. And this is what we want to aspire to in web three.
00:07:22.842 - 00:08:19.962, Speaker A: To be clear now, how about the third question? What would you actually use the functionality for, again, for the Internet? Speaking here in 2022, there are a zillion obvious answers to that question that anybody could tell you. YouTube, TikTok, social networks, online dating, search engines, Wikipedia, et cetera. But let me tell you, as someone who was using the Internet 25 years ago, in 1997, none of those applications existed. So all you could do back then was send email, transfer files, and sort of, as of very recently, you could read static web pages. And 1997 was like 27 years after the Internet debuted in the form of the ARPANET. And it's really only been 13 years since Satoshi Nakamoto first dropped the bitcoin protocol. So let's go back and think through that sort of discussion of the Internet and sort of look for patterns, right? So first of all, pretty much anyone can answer the third question, the why question.
00:08:19.962 - 00:09:02.874, Speaker A: What would you do with the functionality? That's pretty much the definition of mainstream adoption. But one thing I think is interesting is that I think most people actually have a decent sense of the answer to the first question of the Internet's fundamental functionality. Or at least they could recognize an answer if it were presented to them. So it's the second question that how is the functionality implemented? That's the esoteric one that almost no one knows the answer to. But who cares? As long as there's a small group of nerds that figured out how to pull it off, we should be good to go. So if web three is ever to go truly mainstream, we should be looking to see the exact same pattern. Everyone will be able to answer the third question, why the technology is interesting.
00:09:02.874 - 00:10:00.410, Speaker A: Many people will have a decent sense of the answer to the first question, namely, what's the essential functionality the technology offers and understanding the second question, namely the implementation, will be a niche, valuable, of course, but still niche skill possessed by only a select few. So mainstream adoption means everyone talking about the why, decent understanding of the what, and blissful ignorance about the how. That's what we're aspiring to. What does the discourse look like right now in web three? Well, this is how, you know, it's sort of very early. Everything is like completely the opposite. So the majority of discussions you hear honestly, even in mainstream and nontechnical media, are kind of about the how, as opposed to the target of maybe like at most 1% of the conversation, the max probably less being about the how, right? Even. Just think about the word blockchain.
00:10:00.410 - 00:11:06.866, Speaker A: Even that word is about the how, right? It's about a data structure like what's a block? What's a chain? Why should an end user care about what the blocks are or what the chain is? So blockchain doesn't really indicate the answers to the what or the why questions, which are about the abstraction and the applications, not the sort of implementation details. Now I know that sort of web three kind of sounds a bit gimmicky to an academic's ears, but at least it emphasizes the full technology stack as opposed to just the plumbing, like the way the word blockchain does. Now look, I sympathize for those of you in the audience that find yourself always having just these technical conversations sort of about the implementation as opposed to the other questions, because there are many, many really cool things to say about the how about how this technology is realized. My Columbia courses are almost entirely about the how, for example. But remember that ultimately there should be no one other than engineers and computer scientists worrying or caring about any of the implementation details. My courses, they're specifically for computer science students. That's sort of my excuse for focusing so much on the how.
00:11:06.866 - 00:12:06.590, Speaker A: Eventually I do plan to roll out courses aimed at a wider audience and accordingly focus more on the more on the why, more on the applications, and less on the how, less on the implementation. In addition, we probably don't yet know the eventual answer to the why question. I suspect that we will, in hindsight, be viewed what will, in hindsight, be viewed as Web three's killer apps haven't been invented yet, just as the killer apps for the Internet hadn't yet been invented by 1997. And I suspect that the right people to invent them are exactly the people here in this room, young, brilliant, and hungry for a new generation of the Internet and the web. Now, we do at this point have proofs of concept that the computing functionality offered by web three enables fundamentally new applications. Parts of decentralized finance, or DFI, and the NFT space demonstrate this, for example. So while I think it's reasonable for someone to express skepticism about whether web three will ever have any truly game changing killer apps, personally I'm not concerned.
00:12:06.590 - 00:13:02.310, Speaker A: History shows that whenever we implement a fundamentally new type of computing functionality, people figure out amazing things to do with it. And I just see no reason why that pattern wouldn't continue to hold for web three. But as an academic computer scientist, what really bothers me about the status quo is the lack of informed discussion of the what. So what fundamentally is the functionality offered by the web three stack? And only by answering this question can we speak clearly about the goal of all of the engineering work that's going on, and about how this functionality might usher in a new generation of applications. So let me give you my answer as to the what of web three. So I believe that the right mental model for the idealized functionality offered by the web three stack is. And again, I want to emphasize, I'm not saying that what I'm about to say is not literally true.
00:13:02.310 - 00:13:41.426, Speaker A: I just offer it as a good way to think about the technology. So the right mental model is, first of all, it's a general purpose computer, right? Like your laptop, or rather kind of a virtual simulation of your laptop. But wait, you say we already have computers. Today's web three computer is about as powerful as the vacuum tube computers of the early 1950s. Well, it's a very unusual computer in that it has no owner or operator. So this is more or less what people mean by being quote unquote decentralized. So, in effect, it's a computer that's running on its own in the sky as a public good, obviously very different from computers as we usually think of them, e.
00:13:41.426 - 00:14:15.066, Speaker A: G. For example, turning off the web three computer is basically as hard as turning off the Internet. It's a computer that anyone can use, perhaps subject to a usage fee if bumping up against capacity constraints. But there's no access list and no permission or credentials necessary to use it. And by use it, I mean either you can deploy new applications in the form of smart contracts or take advantage of existing ones. And finally, it's a computer that supports user owned data, right? So think, for example, digital property rights. You can prove without question that you own something and no one else can fake such a proof.
00:14:15.066 - 00:14:52.810, Speaker A: That's kind of the magic of cryptography. Transfer of ownership is possible, but only with the permission of the current owner. And the computer in the skies general purpose computer is tracking the current owner of each piece of data. So it's crazy, right? There's actually no owner of the computer, but there can be owners of specific pieces of data stored on that computer. What Satoshi Nakamoto basically figured out was how to get these seemingly contradictory properties. At the same time, Satoshi focused on tracking ownership of bitcoin specifically. But the solution applies more generally to arbitrary digital data, including things like, say, nfts, not just digital coins.
00:14:52.810 - 00:15:28.482, Speaker A: So obviously there's other nice properties of the web three stack as well, like transparency. This computer is effectively always emitting a ticker tape with every instruction it has ever carried out. But I would suggest focusing on the above three. The idea is a general purpose computer with no owner or operator. It's open access, meaning anyone can use it, and it supports user owned data. So each of these points, I think, is very important. If your only takeaway from this talk is that the functionality exported by web three is like that of a computer, I personally will consider this talk a victory.
00:15:28.482 - 00:16:27.750, Speaker A: In particular, please never refer to blockchains of the web three stack as a database. So I have no idea why the blockchain as database meme has persisted for so long. But the point of a database is to store data and support efficient queries over that data. Not fundamentally, it's not to execute arbitrary computations. Modern smart contract platforms like Ethereum are Turing complete, meaning that they do support arbitrary computations, or at least those of at most a certain length, and are analogous to computers, not databases. Even bitcoin, I think, would be more accurately compared to a restricted meaning, non turing complete computer, than to a database. I should say that what I'm talking about here, this sort of mental model for a general purpose computer, I mean, this is not a new observation, right? I mean, even back in 2015, when Ethereum launched, the founding team referred to Ethereum as the quote unquote world computer that hasn't caught on as much as it should.
00:16:27.750 - 00:17:26.458, Speaker A: Web three, meanwhile, goes all the way back to 2014 and is only now getting traction, though. So maybe world computer will get its chance in the limelight as well. And the other points are crucial, because if we were ever to have a satisfying answer to the why question, meaning applications that have truly mainstream adoption, it will be because this combination of properties, this combination of properties not possessed by traditional computers, they will enable valuable and fundamentally new applications. Okay, so again, this is the main point of the talk in your mind. Think of the web three stack as a computer that lives in the sky, executing on its own, usable by anyone, and enforcing property rights for user owned digital data. I said earlier that asking about web three killer apps in 2022 is like asking about Internet killer apps back in 1997. It's easy to imagine that the answer to that question is going to get much more obvious and compelling in ten years than it is now.
00:17:26.458 - 00:18:29.680, Speaker A: But given that all of us are going to get asked about killer apps at our next Thanksgiving dinner, how should we answer that question right now? Well, there are a number of reasonable answers. For example, you can certainly blow away finance nerds by telling them about how flash loans exploit the atomicity of ethereum transactions. But let me just single out one that's been working well for me lately. It's less about a specific application than it is about the inevitable collision between two undeniable forces. So I want to give my conversation partner a feeling of inevitability, rather than, say, point them to any one URL, though if you want. Feel free to think about board apes if you want a concrete example as I discuss this so the first undeniable force, which is a timeless one, is that humans often define their identity in part through what they own. Why do people pay so much for a Rolex, a Ferrari, or Chanel handbag? Are those products really so superior to the next best option? No.
00:18:29.680 - 00:19:05.226, Speaker A: Maybe it's self expression. Maybe it's peer pressure. Maybe it's simply conspicuous consumption. But whatever the reason, some people apparently care a lot about the nonphysical properties of these goods, like the brand name. The second undeniable force, which is sort of more of a generational one, is that people's identities increasingly exist in the digital world, for example, in one's Instagram or Twitter feed. In the current web two world individuals digital identities are largely controlled by big tech companies, not by the individuals themselves. So, e.
00:19:05.226 - 00:20:26.470, Speaker A: G. For example, if Twitter wanted, it could delete my account and all my content would be lost forever. So if you accept these two forces as undeniable, then it sure seems like things will be there will be serious demand for digital goods that express identity, among other things, with traditional property rights, for example, verifiable ownership, permission to transfer, prohibition of seizure, and looking at the web three abstraction, a computer with no owner or operator that supports user owned data. It sure seems perfect for satisfying that demand, that demand for digital goods with traditional looking property rights. And we're already starting to see it happen, perhaps most obviously with sort of profile picture nfts that live on a blockchain such as ethereum. I've spent this talk harping on one of the main reasons so many people seem confused about web three, little and misguided discourse. As to the what of web three, the fundamental computing abstraction offered, and relatedly, the lack of separation and discourse between the how meaning, the how it works and the why meaning, what is the technology good for? But there's another extremely powerful force sowing confusion, and that is the conflation of web three with cryptocurrencies.
00:20:26.470 - 00:21:41.680, Speaker A: So in my opinion, from a modern standpoint, meaning since the advent and adoption of ethereum, cryptocurrencies are best viewed as the means, not the ends. The goal is to achieve the functionality of a programmable computer that lives in the spot in the sky. Imbuing the implementation of that functionality with a native currency just so happens to be a very useful tool, for example, to charge for usage, to reward actors that contribute to that functionality for proof of stake, civil resistance and so on. So you may have seen over the years talks or writings by sort of smart and serious people, often backed by compelling points, evidence and analogies about why blockchains are doomed to fail. And in many cases, what is actually being argued is that the cryptocurrencies hosted by blockchains are doomed to fail, specifically as serious alternatives to traditional fiat currencies like the US dollar, for example. Due to the volatility that you see in many know, maybe those smart and serious people are right, maybe they're not, I'm not sure. But at some level I also just kind of like don't really care.
00:21:41.680 - 00:23:03.046, Speaker A: Even if cryptocurrencies never seriously compete with traditional currencies, they can and will, I think, succeed as an implementation detail under the hood, potentially never even seen by end users of game changing applications enabled by web three functionality. That is, at the very least, I expect cryptocurrencies to succeed as the means, if not as the ends web three's seemingly unbreakable association with cryptocurrencies is sort of a testament to the power of first impressions. Satoshi Nakamoto was quite clear that the primary goal of the bitcoin protocol was in fact to create and manage a digital currency that was beyond the control of nation states. That is, for Nakamoto, cryptocurrency really was the ends, not the means, to any other type of functionality. The overwhelming majority of discourse around web three technology prior to 2017 was about bitcoin, resulting in widespread and hardened beliefs, in many cases persisting to this day, that blockchains and cryptocurrencies are really the same thing. But now that we're in an era of general purpose, smart contract platforms like Ethereum and many other examples, such beliefs are badly out of date and urgently need to be updated. Now, to be clear, I'm not dismissing bitcoin at all.
00:23:03.046 - 00:23:58.920, Speaker A: In my opinion, which is also now kind of the mainstream opinion, bitcoin has become startlingly successful as a store of value. For example, not many people will tell you that it's obviously better to park some money in gold than in bitcoin. So while bitcoin may never be the payment of choice for a cup of coffee, it nevertheless has managed to create an entirely new asset class, effectively out of thin air. And that, we shouldn't forget that is an unbelievable feat, one that I don't really necessarily expect to see again, at least at this scale in my lifetime. So, wrapping up, what should you remember from this talk? First of all, think about the web three stack as implementing the functionality of a general purpose computer. Please, please don't ever call it a database. What's special about this computer is that it has no owner, and yet it enforces property rights for user owned digital data that lives on that computer.
00:23:58.920 - 00:24:47.574, Speaker A: The details of how this functionality is implemented look, it's super interesting computer science, and I care about it a lot. But don't forget that for mainstream adoption, it's crucial that 99% of web three users have absolutely no idea how the technology works. As far as the applications, the killer apps of this functionality are definitely going to become clearer in the coming years. But the inevitable collision of identity driven ownership and digital identity point to a huge demand for digital goods with traditional property rights. And finally, I'll say it again, web three is not the same as cryptocurrencies, and it can take over the world even if no cryptocurrency ever becomes a viable alternative to existing fiat currencies. So I think I'm out of time. Let me wrap up there.
00:24:47.574 - 00:24:49.650, Speaker A: Thanks very much. Bye.
