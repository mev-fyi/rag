00:00:02.040 - 00:00:42.705, Speaker A: Okay, welcome back, everyone. So, in the last video, we were talking about how we can model resources both external and on chain. And in this video, we're going to talk about how we can use those definitions in order to finally define the fully permissionless setting with resource restrictions now. Okay, so we're going to define the fully permissionless setting with resource restrictions. And from now on, by the fully permissionless setting, I'll mean always the fully permissionless setting with resource restrictions. Once we define the setting, we'll see some results for the setting, and then we'll also move on to define the dynamically available setting as well, which is the next setting down on our hierarchy. Okay, so let's define the fully permissionless setting with resource restrictions now.
00:00:42.705 - 00:01:24.641, Speaker A: So here's the definition. So the fully permissionless setting with resource restrictions is the same as the fully permissionless setting without resources restrictions that we defined earlier with the following changes. So, first of all, protocols may now make use of a finite set of external resources and may run relative to an environment that sends transactions. Okay, and then we'll also allow that one may assume that the adversary is row bounded for some row and 0, 1. Okay, so you are now allowed to make resource restrictions. Okay, so that's the definition. So let's see what's true in that setting.
00:01:24.641 - 00:02:00.935, Speaker A: It's worth observing, first of all, that of course, positive results are now possible in that setting, as we saw earlier on this result. That said, consensus is not possible without resource restrictions. Bitcoin is an example of a protocol that shows that consensus becomes possible once you allow resource restrictions. Okay, so Bitcoin, of course, is a probabilistic protocol, though. And the next result we're going to see is a negative result that says that deterministic protocols can't console consensus in this setting. Okay, so Bitcoin is probabilistic. And this next theorem says that that's necessarily the case.
00:02:00.935 - 00:02:36.105, Speaker A: Okay, so here's the theorem. So consider the fully permissionless authenticated and synchronous setting. So authenticated here just means that there is a signature scheme available, okay, but no peak AI. So consider the fully permissionless, authenticated and asynchronous setting. And suppose that for some row greater than zero, the adversary is row bounded. Consider quite a weak adversary. Suppose that dishonest players can only deviate from honest behavior by crashing or delaying message dissemination by an arbitrary number of timeslots.
00:02:36.105 - 00:03:15.699, Speaker A: Okay, well, then every deterministic protocol for the Byzantine agreement problem has an infinite execution in which honest players never terminate. Okay, so the proof of this theorem is a little bit fiddly. In the paper we wanted to make everything self contained, so we've written out a full proof rather than using, you know, building on proofs in other papers. Yeah, so the Proust fiddly, it's of a standard form there. So if you're used to bivalency arguments, then you won't find the argument that surprising. Basically, bivalency argument similar to that for the FLP theorem. And it's probably also true that you could produce a proof via reduction to existing results.
00:03:15.699 - 00:03:45.829, Speaker A: For the permission setting. Okay, we conjecture at the moment that's true, but it's interesting to see whether we can do that. So, yeah, so I'm not going to go through the proof in the tutorial. As I said, it's a little bit fiddly. I encourage you to, if you're interested in the details, to check out the proof in the paper. As I said earlier on though, okay, so we've introduced these three new complexities in moving from the permission setting to the permissionless setting. So we're now the three complexities.
00:03:45.829 - 00:04:19.715, Speaker A: You have an unknown player set now of a known size. Players may be active and inactive at various time slots. And we also now have to consider symbol attacks. And so, as I said earlier on, with each impossibility result, it's going to be interesting to consider now which of these new challenges is really driving the impossibility result. Okay, so with that in mind, then it's worth observing here. So the proof doesn't require sybils in the sense that it holds even when each player just owns a single identifier. Okay, there's a result of Katj and Donning and Wattenhofer that shows that the theorem no longer holds when the player set is finite.
00:04:19.715 - 00:05:06.965, Speaker A: Identifiers are unknown by the players and unique. So each player has a single identifier. And if all players are always active and this positive result does not require initial state distribution. Okay, so that's our first impossibility result. So now then, let's move on to consider the dynamically available setting next. Okay, so what differentiates the setting in which proof of state protocols are required to operate from the setting in which proof of work protocols are generally applied to operate? Well, the basic difference is that we make stronger assumptions about which player should be active. Just remind ourselves, in a fully permissionless setting, we assume no knowledge about which players are active at any given time slot.
00:05:06.965 - 00:06:17.785, Speaker A: In a dynamically available setting, that's not true. So in the dynamically available DA setting, We suppose that if TR is a set of transactions confirmed for some honest player at a given time slot t, at least one honest player allocated non0state by that set of transactions is active. Okay, so we have this known set of identifiers given by the set of confirmed transactions, the people who own non0 stake. And we're allowing ourselves to assume at least one player from this known set is going to be active. Active and honest. Again, if we assume that the adversaries row bounded, then we also have the limited row fraction weighted by stake point of active players at byzantine. Okay, so we saw this impossibility result for the fully permissionless setting and what we want to do next is separate what's possible in the dynamically available and fully permissionless settings with a possibility result for the dynamically available setting.
00:06:17.785 - 00:07:00.585, Speaker A: Okay, so here's the result that suffices to separate the two settings. And this is basically due to Lower Gaffney. Okay, so they have a proof from which you can easily extract a proof that we're going to go through in a little bit. Okay, so consider the dynamically available, unauthenticated and asynchronous setting and suppose that for some row less than a half, the adversary is row bounded. Well, then there is a deterministic protocol that solves the byzantine agreement problem, provided dishonest players can deviate from honest behavior only by crashing or delaying message dissemination of an arbitrary number of timeslots. Ok, so we have the negative result for the fully permissionless setting. Now we have a corresponding positive result for the DA setting.
00:07:00.585 - 00:07:07.785, Speaker A: It suffice to separate the two settings and what we'll do in the next video is to sketch this proof. So I'll see you then.
