00:00:01.520 - 00:00:39.545, Speaker A: Okay, so welcome back everyone. So in the last video we were talking about the dynamically available setting and we stated this result which suffices to separate the dynamically available and the fully permissionless settings. So the result is as follows. So consider the dynamically available, unauthenticated and synchronous setting, and suppose that for some row less than a half, the adversity is rebounded and there is a deterministic protocol that solves the byzantine agreement problem, provided dishonest players can deviate from honest behavior only by crashing or delaying message dissemination by an arbitrary number of time slots. Okay, so that's. That suffices to separate the DA and the FB settings. So what we're going to do next is to go through a proof of this result.
00:00:39.545 - 00:01:05.975, Speaker A: It's probably worth saying. So the proof is not particularly complicated, but it's maybe a little bit fiddly. It's probably the most fiddly thing we'll go through in these videos. So if you can get through this, then that's good. If not, then feel free to go on to the later material. Okay, so before we go through the precise details of the proof, let's just talk a little bit about the philosophy behind it. The basic idea is as follows.
00:01:05.975 - 00:01:59.325, Speaker A: The additional assumptions of the dynamically available setting circumvent the previous impossibility result. The impossibility result that we got for the FP setting saying that consensus is not possible for deterministic protocols there. It does that by allowing the protocol to ignore, without suffering an immediate loss of liveness, all identifiers with no initial stake. So the point is that in the, in the FP setting, in the fully permissionless setting, okay, you start off maybe with an initial state distribution if you talk about a proof of stake protocol, but in that setting it's no use to you because the fact that, you know, these players have some mistake doesn't mean they're going to be active and carrying the protocol. So there's nothing really you can do with that and be sure that protocol is going to have liveness. But now things are different. So now we can restrict attention initially to identify as a non zero initial stake.
00:01:59.325 - 00:02:38.955, Speaker A: And doing that has the effect of bounding the maximum number of identifiers that could be controlled by faulty players. And that then opens the door to this dole strong type approach. Once we have a bound of that sort, then hopefully anyway we'll see that it works. We can employ some dolph strong type approach. Okay, so hopefully that basic philosophy makes it seem Plausible, at least that we're going to be able to define a protocol that works. Okay, so let's talk a little bit about the basic setup first. Okay, so the initial stake distribution assigns a positive and integer number of coins to each of a finite set of identifiers.
00:02:38.955 - 00:03:09.653, Speaker A: And we're going to uppercase N to note the total number of coins. We assume these coins are numbered in an arbitrary way. And by assumption, because we have a row band anniversary, at most a row less than half fraction of these coins are assigned to identify as belonging to 40 players. Okay. According to the initial state distribution. Okay. Players are instructed according to the protocol we're about to define.
00:03:09.653 - 00:03:35.985, Speaker A: Players will be instructed to disseminate messages only at timeslots that are multiples of delta. Okay, so we're in the synchronous setting here. Okay, so we have this known bound delta message delay. Okay, so for non negative integer R we'll refer to times dot R delta as round R. Okay. Basically the instructions are going to be divided into rounds, much like in the Doula Strong protocol. And we leave a gap of delta between rounds in order for messages to arrive.
00:03:35.985 - 00:04:08.469, Speaker A: Okay. They're going to be a total of N, which is the upper intra part of N over 2 +1 rounds. And again, if you know the Dalestrom protocol, that sort of thing, this shouldn't be surprising. Basically we're choosing some number that's just larger than the largest possible number of faulty coins or coins that are owned by faulty players here. Okay. And I should say. Okay, so in what follows, I'm basically going to be assuming that you have some familiarity with the Daily Strong protocol.
00:04:08.469 - 00:04:34.551, Speaker A: So if you don't, then I suggest you go away and read up on that. Read up on that. Now, it's probably going to be a little bit difficult to follow what goes on without knowing the Daily Strong protocol. Okay, so everything we're doing here is going to be based on the Daily Strong protocol. The way that Daily Strong protocol functions, though, it very much relies on the fact that all players are always active. Okay. Now we have to deal with the fact that players may be inactive at certain timeslots.
00:04:34.551 - 00:05:09.885, Speaker A: So how we going to do that? What we do is to define instructions. So the following is true. So if a player P is active at around R less than or equal to N less than the final round, which they send messages, then that player is instructed to disseminate around R activity message. Okay, this form here. So CR active for each of the coins C assigned to its identifiers. So if you're active in round R, then you just send some message. For each of the coins you own, you send a message that indicates that the owner of that coin was active in round R.
00:05:09.885 - 00:05:49.701, Speaker A: Okay, so that's one difference with the original DonorStrong protocol. Of course, this sort of thing wasn't necessary there because blackwall players are always active. Then the rest of the instructions prize a point in which we decide how to output. They're going to be essentially the same as Dolef strong. Okay, so let's go through those. So if active in round one, the player P is instructed to disseminate over each of the coin C assigned to one of its identifiers, what we call a length one attestation to its protocol input. Okay, so this is Triple C1XP.
00:05:49.701 - 00:06:54.995, Speaker A: Okay, so XP here is his input C is that the coin that it owns or one of the coins that it owns. And one says indicates this is a length one attestation. Okay, so far, so simple and in general. So if a player P is active at around R +1, and if P has received a length R at a station M, say to some value B in the process here of defining what we mean by length R attestation. Okay, so if P has received a length R attestation M to some value B in 01 involving R different coins, and three, if P has not already disseminated any attestations to B, then P is instructed to disseminate for each coin C assigned to one of its identifiers, a length R +1 attestation C R +1M to B. Okay, so this is what we mean by length r +1 attestation. If m is length r attestation, then length r +1 attestation is of this form.
00:06:54.995 - 00:07:40.415, Speaker A: Okay? So if you know the Dola Strong protocol, then you'll agree this is essentially the same. It's just the same as the Dolph Strong protocol so far, except that we're already sending. We're sending these extra activity messages. Okay? The difference really comes when it comes to how we should output. Okay, so how do we output? So each player P is instructed to output in the first time slot greater OR equal to N1 Delta, at which it's active. Okay, we need a few basic definitions first. Okay, so let M denote the set of all messages that's received by this time.
00:07:40.415 - 00:08:38.105, Speaker A: Let arm, right? For each round R, note the coins associated with round R activity messages in them. Okay, so these are just the coins that have said they've sent out activity messages saying that they're active around R and the let V R, B, M. Note the coin C associated with length less than or equal to R, attestations to B. Okay, with C, the coin most recently added to the attestation. Okay, so these are just all the coins that according to messages in M, have sent out length of less than or equal to R, attestations to B. Okay, so those were just some sort of simple definitions. Now we're just going to define how we output.
00:08:38.105 - 00:09:38.705, Speaker A: So if there's a round R from 1 up to N such that a strict majority of the coins in arm, those coins who've said they're acting around R, okay, so a strict majority of the coins in arm belong also to vrbm. Okay, They've also sent less than attestations of length less or equal to R to B. Then P will be convinced of B by M. And then if P is convinced of exactly one value B by M, then it outputs B. Otherwise it outputs some default value zero. Okay, so again, if you know the daily strong protocol, this is pretty similar, right? The difference really is in this fourth, but here we modify the definition of what it means to be convinced of a value. Okay, so that's the definition of the protocol itself.
00:09:38.705 - 00:09:43.925, Speaker A: In the next video, we'll come back and we'll prove that the protocol does what it's supposed to. Okay, so we'll see that.
