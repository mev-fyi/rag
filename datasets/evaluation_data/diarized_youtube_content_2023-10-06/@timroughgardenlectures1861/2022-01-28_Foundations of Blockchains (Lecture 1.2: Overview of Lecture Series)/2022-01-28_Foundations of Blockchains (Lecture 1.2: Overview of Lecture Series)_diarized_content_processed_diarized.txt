00:00:00.410 - 00:00:40.680, Speaker A: In this video I'll give you an overview of the lecture series. I'll let you know exactly which topics we're going to be covering and how they're going to be sequenced. To discuss the material in this lecture series it's useful to talk about them in terms of a blockchain stack. And when I say stack here I mean sort of a bunch of layers, each building on top of the previous one. So for example, if you've ever studied the Internet or computer networking you learn that the Internet really kind of can be thought of as a stack of layers. Now in computer networking, if you ask ten networking experts what exactly are the layers and how many are there, you're going to get eleven different answers. And the situation is probably even worse in the blockchain world right now.
00:00:40.680 - 00:01:23.990, Speaker A: So don't take this too seriously, these layers I'm about to write down. But it's still going to be just helpful to talk about, to sort of give a taxonomy of the material in the rest of this lecture series. So let's go from the bottom of the stack to the top, from the sort of lowest level to the highest level. So for us the lowest level, which we're going to call layer zero, basically for us that's just going to be the internet. So what do I mean by that? What do I mean that we've got the Internet? What I mean is we've got point to point communication. So two untrusted parties can send arbitrary data back and forth to each other as long as they know each other's IP addresses, the Internet exports, the functionality of that point to point communication. Now, we're not going to be assuming the Internet's perfect.
00:01:23.990 - 00:02:11.090, Speaker A: We're going to be taking into account the fact that the internet has delays, it has outages. There can be malicious attacks like denial of service attacks, all of that will have to take into account. But we're still thinking that we're building on top of this layer that offers at least semirelible point to point communication between untrusted parties. Now the next layer, layer one is really, really important. This we're going to be calling the consensus layer. So here by consensus I mean keeping a bunch of different machines that are possibly scattered all around the globe, keeping them in sync and keeping them in sync despite all of the obstacles getting in your way of doing so, like network outages, like denial of service attacks and so on. For example, the Bitcoin protocol fundamentally is a layer one protocol.
00:02:11.090 - 00:02:43.962, Speaker A: Same thing with Ethereum and several others that you might have heard of. Now in my layer one definition here I'm completing together two things that are somewhat conceptually distinct and that people do separate out sometimes. Namely, there's a consensus layer. And you can also think of there being a sort of compute layer if you like. So this distinction is particularly meaningful when you're talking about a general smart contracts platform like Ethereum being a canonical example. Because, for example, if you're running the Ethereum protocol, you're running a full node and participating in the protocol. It is true you're going to be participating in a consensus protocol.
00:02:43.962 - 00:03:28.094, Speaker A: So you will be kind of working hard and talking to other full nodes so that you all stay in sync. But what it is you're staying in sync on in a platform like that is a sequence of instructions. So updates to the state it could be something as simple as sort of transferring money from one account to another account. But in general, it could also be much more complicated functionality as well. So the consensus part is you come to agreement on the sequence of instructions that need to be carried out, but then there's still the task of actually carrying out that computation. And again, if you're running a full node in Ethereum, you're also responsible for the computation that you've come to consensus on. So that's a sort of two conceptually distinct responsibilities and so sometimes it's worth sort of formally differentiating between them.
00:03:28.094 - 00:04:22.814, Speaker A: So next up is layer two, which I'm going to call the scaling layer. Now, it's conceivable that future generations of layer one protocols will actually make sort of the notion of layer two here obsolete, will sort of obviate the need for a layer two. And maybe it'll just sort of go away, but at least right now, at least in 2021, layer two, the scaling layer, it's a big deal and there's a lot of action happening at layer two right now. Now, the way, I want you to think about layer two is that really it's exporting exactly the same functionality as layer one, just a lot more of it. So layer two is really necessary when you're not happy with the sort of amount of processing power you have at your layer one. And indeed bitcoin and Ethereum both process not that many transactions a second it's maybe 5 /second for bitcoin it's maybe 15 /second for Ethereum. But we'd really like to have blockchains that process thousands at least of transactions per second.
00:04:22.814 - 00:05:06.890, Speaker A: So that's a pretty big gap that's a couple of orders of magnitude. And so layer two is tasked with closing that gap. Okay, so building on top of layer one functionality that processes a relatively small number of transactions per second and doing a bunch of extra work on top of it to boost that by at least a couple of orders of magnitude. So finally, just like sort of the top layer of the internet stack is the application layer. So too will the top layer of the blockchain stack be the application layer. So stuff that is built on top of the functionality exported by the basic consensus protocol. So if you've ever interacted with, say, a decentralized exchange, something like uniswap, that's an example of what I mean by being at the application layer.
00:05:06.890 - 00:05:57.118, Speaker A: Same thing if you've ever used an NFT marketplace like OpenSea. That would be another example of something at the application layer. When I say application layer here I am conflating together two things that sometimes people like to keep separate. One being kind of just the logic of the smart contract implementing the logic and functionality of the application versus the user facing aspect of it typically a web interface. So for example, we talk about uniswap as if it's one thing, but there's really actually a couple things. So first of all there's uniswap's smart contracts which basically just live up there in the sky on the ethereum blockchain. And then the second thing is there's the web interface controlled by uniswap, which is the usual method by which you would interact with those smart contracts, but they are not the same thing.
00:05:57.118 - 00:06:38.490, Speaker A: So for example, one typically interacts with the uniswap smart contracts through the web interface, but you do not have to do that. You can also interact with those contracts directly, not through some web interface. So they are distinct things, but we're going to sort of lump them together and just think of the stuff which is built on top of the basic functionality provided by layer one and layer two. Now, as I said earlier, don't take this particular definition of these layers all that seriously. The blockchain stack is definitely in flux. Not everyone agrees that this is how it should be defined right now and it may look quite different as the years go by. But again, this is a good way to think about how the rest of these lectures are going to unfold.
00:06:38.490 - 00:07:17.390, Speaker A: For example, for many people layer two means something more specific than what I've used it for here. It doesn't mean an arbitrary scaling solution, but rather one with some additional security properties. We'll talk about that distinction later on. As another example, you know, I've drawn this stack as if you have these sort of very clean interfaces between them, as if we've achieved this kind of really nice abstraction to hopefully implement a solution in one of the layers. You don't need to worry about the details of how the previous ones were implemented. That's probably what this picture suggests. But that is not actually reality.
00:07:17.390 - 00:08:01.870, Speaker A: Our separations between these layers are not as clean as one would like. So for example, if you're designing something at the application layer, if you're designing like a new decentralized exchange, it really is beneficial to you if you know the details of how the layer one consensus protocol works. So that's not necessarily sort of ideal, but that is where we're at right now in late 2021. So with this cartoon blockchain stack as our reference, it's now easy to talk about how the rest of the lectures in the series are going to break down. So first of all, we're basically going to skip layer zero completely. We're just going to assume the Internet, for all of its flaws, exists and is available to us. It's not to say there isn't really interesting research and engineering problems at layer zero.
00:08:01.870 - 00:08:50.926, Speaker A: There are. So, for example, you can think about, okay, how can we design like a peer to peer gossip protocol so that the machines can talk to each other? How do we design that protocol in a way that's relatively resilient to attacks like denial of service attacks? All of that is interesting and there's cool work we could talk about, but that's going to be outside our scope. So for us, layer zero is just going to be a given. We're going to talk about stuff built on top of that. Now, layer one, we're going to have a lot to say about, and indeed, probably ballpark 60% of the lectures will be about different aspects of layer one. So if I had to guess right now, I'd guess roughly maybe 14 lectures or so. And for most of these lectures, maybe the first ten or so lectures, we'll talk about blockchain consensus protocols in general terms rather than in terms of any specific protocol that you might have heard about.
00:08:50.926 - 00:09:57.650, Speaker A: So we're going to start by covering classic stuff from the 1980s on so called permissioned consensus protocols. Then we'll move on to Nakamoto, or longest chain consensus protocols, which is one of the key innovations introduced by the Bitcoin protocol. We'll talk about going from permissioned protocols where there's sort of access control over who participates. How can you then turn them into permissionless protocols where there is no access control, where anyone can join and participate in the protocol? So we'll talk about civil resistance strategies, including proof of work and proof of stake. And talking about proof of work, we'll need to talk about difficulty adjustment algorithms, and that'll also give us an excuse to talk about some interesting attacks on difficulty adjustment algorithms, something known as selfish mining. And then after we've spent all this time really sort of understanding deeply the key principles behind designing permissionless consensus protocols, we'll do a deep dive on the two sort of biggest and most well known blockchain protocols, namely bitcoin and Ethereum. So like I said in the previous video, at no point in this lecture series will we talk about super nitty gritty engineering details.
00:09:57.650 - 00:10:33.106, Speaker A: We're never going to go like line by line through some smart contract code. But in these four lectures on Bitcoin and Ethereum, we will talk a fair amount about the details of exactly how they operate. So we'll talk about what the blocks look like. We'll talk about UTXOs in Bitcoin. We'll talk about merkel trees, et cetera. In particular, I want to tell you enough about how these protocols work so that we can sort of sensibly discuss what's happening at layer two, because the layer two solutions sort of necessarily depend on some of the details of how the layer one consensus protocols operate. So speaking of layer two, that's where we're going to go next.
00:10:33.106 - 00:11:29.700, Speaker A: And that'll be maybe 20% or so of the lectures, maybe five or so lectures. I expect to be on layer two solutions, scaling solutions. Like I said earlier, layer two solutions are sort of seem necessarily dependent on the layer one consensus protocol they're trying to scale up. So we'll treat bitcoin and ethereum separately. For bitcoin, we'll talk about the lightning network and payment channels, which is the primary attempt thus far to scale up bitcoin. And then for Ethereum, we'll talk about scaling solutions known as roll ups, which come in two flavors optimistic rollups, which are sort of simpler but offer only game theoretic guarantees, and also ZK rollups, which are more complicated but offer stronger cryptographic guarantees. And then maybe somewhere in here, we'll also sneak in a lecture about newer generations of layer one consensus protocols that claim to be so much faster than bitcoin and ethereum that they may not need a layer two protocol at all.
00:11:29.700 - 00:12:09.918, Speaker A: And for the last 20% or so, the last five lectures or so, that's when we'll talk about the application layer. So at the application layer, we'll focus mostly on DeFi, which stands for decentralized finance. That's where a lot of the action has been so far, and especially over the past year, year and a half. So we'll talk a little bit about some of the key primitives in DeFi, specifically the design of pricing, Oracles and Stablecoins. And we'll also discuss some of the sort of major platforms that have been built on top of that. For example, borrowing, lending and trading via automated market makers. Two topics which we'll get to if there's time, I'm not quite sure yet.
00:12:09.918 - 00:13:08.260, Speaker A: First one would be Mev, which stands for Minor Extractable Value, which is a super interesting case study of what I was saying earlier, that we really don't have clean interfaces between, say, the consensus layer and the application layer. Really, applications can be sort of manipulated because of details of how the consensus layer is implemented. So that's a real challenge, right? We'd like to sort of minimize the dependencies between the two layers, and Mev shows that that's hard to do with permissionless blockchain protocols. Second topic, which we may or may not have time for, would be talking about Dows. So decentralized autonomous organizations, and in particular different methods one can take to on chain governance, which is also a very tricky design problem. So, for example, if you want to have a bunch of people vote in a decentralized way on whether or not to take some decision, what's the best way to implement that kind of on chain voting? Super interesting problem. Not super well understood at this point.
00:13:08.260 - 00:14:05.256, Speaker A: So I hope this fairly detailed outline gives you a sense of where we're heading, what it is we're going to be covering in this lecture series. Hopefully you now feel like you can figure out whether it's a good use of your time or not to dig deep in this video playlist. And then if you do, hopefully this gives you some sort of guidance about exactly where you might want to spend the most amount of your time. So before we wrap up and sort of move on to start covering the primitives, we're going to need to discuss consensus protocols. Let me make three comments sort of reflecting on sort of the course material and the way it's organized because I've really designed this lecture series so that it's quite different than most of the other introductions to blockchain that you're ever going to come across. So let me sort of explain what I'm trying to accomplish. So number one, for us, blockchains are not going to be about digital payments per se, not at all.
00:14:05.256 - 00:14:56.776, Speaker A: What they're going to be about is really an entirely new computing paradigm. It's about implementing the functionality of a big programmable computer that lives up there in the sky that is not owned by anybody, or rather it's sort of owned by thousands or tens of thousands of people all over the globe. And you can be one of those part owners if you so choose. Moreover, that computer is open access. Maybe you have to pay a usage fee to use the computation provided, but you don't need anybody's permission. So it's sort of this global computation platform, not owned by any one person and accessible to all. And honestly, when you think of blockchain technologies in this way, you've got to ask yourself, how could they not unlock an entirely new generation of applications? I mean, don't forget, I mean, the Internet was around for a long time before people figured out what to do with it.
00:14:56.776 - 00:15:48.020, Speaker A: The Internet launched around 1970 or so and for quite a while there you could send mail transfer files and that was not a lot else. So it was really kind of a sped up version of the Post Office is what it was initially. Which sounds very prosaic, but of course now fast forward 50 years later, we know people figured out some pretty interesting things to do on top of the Internet. And I predict we're going to have exactly the same type of story unfold in the coming decades with blockchain technologies. So comment number two is we're not going to be very focused on the concept of digital money. Whereas in most of the introductions to blockchains that you're going to come across, they start out by asking, what is money really? Right? And so you learn things like the store of value, unit of account, medium of exchange. You talk about scarcity and sort of durability.
00:15:48.020 - 00:16:45.272, Speaker A: You talk about the island of Yap and rhinestones and this is all cool stuff. I definitely encourage you to go learn about this if you haven't already, but it's really not going to be our focus here. Rather, for us, cryptocurrency is going to be a means, not the ends. So we will not take as our overarching goal the invention of some type of digital money. That's going to happen as a side effect, as a byproduct, our overarching goal will be implementing the functionality we just discussed a big programmable computer that lives up there in the sky with no centralized owner having a native currency in a blockchain protocol. Having a cryptocurrency then emerges as a convenient mechanism to solve two of the issues that come up when you're implementing that functionality. Issue number one is that if demand for this big programmable computer exceeds its capacity, you may want to charge for usage.
00:16:45.272 - 00:17:39.992, Speaker A: And having a native currency is a very convenient way to implement usage charges. Issue number two is you need to incentivize a number of actors to actually run your protocol to keep this big programmable computer up there in the sky to keep it humming along. And again, a native currency is a particularly convenient way to reward those actors for running the protocol. Final comment. And this really sort of reflects my aesthetic as primarily a theoretician, a theoretical computer science is the focus will be on fundamental principles, not on specific protocols. Notice we are not beginning this lecture series by talking specifically about how Bitcoin works or specifically about Ethereum. Rather, we're starting with a bunch of fundamental principles that we use to describe, design, and assess various consensus protocols.
00:17:39.992 - 00:18:29.652, Speaker A: Notions like liveness consistency, different assumptions that might make sense to make about the underlying communication network, different assumptions that might make sense to assume on the bounds on an adversary's power. We will, after we've mastered these basic concepts, speak about a couple specific blockchain protocols, including Bitcoin and Ethereum. But we will understand those specific protocols through the lens of the fundamental principles that we've learned. That wraps up everything I wanted to say about the content and organization of the lecture series. I hope you feel properly oriented and like you know where the series is heading and whether or not it's a good use of your time to go forward. In the next video, I want to start doing some of the setup. We need to start talking rigorously about consensus protocols, including the existence of digital signature schemes.
00:18:29.652 - 00:18:30.470, Speaker A: So I'll see you there.
