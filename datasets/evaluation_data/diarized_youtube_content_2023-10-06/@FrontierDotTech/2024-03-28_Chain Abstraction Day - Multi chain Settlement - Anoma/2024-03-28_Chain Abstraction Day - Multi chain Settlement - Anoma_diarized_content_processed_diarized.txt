00:00:08.240 - 00:00:33.622, Speaker A: All right, great, this actually works. Let me get a time. Ongoing as well. Perfect. Thank you very much. Today I'm going to talk a little bit about multi chain settlement, not necessarily with or no more, but rather to sort of specific consensus systems that we can deploy in order to achieve multi chain settlement. So with that, let's get started.
00:00:33.622 - 00:01:22.514, Speaker A: So this is mostly talk on Typhoon and camara chains. And one simple way to think of typhoon and camara chains is that they generalize shared sequences. A shared sequence is generally something that can settle across multiple systems that tend to have the same trust assumptions. But typhoon, on the other hand, is designed for heterogeneous trust assumptions, which is really the model that all chains are currently operating in outside of sort of things built on top of ethereum. When you think of this Lana ethereum, cosmos, these are all heterogeneous, just assumptions. And I mean, I sort of spoke a bit about this earlier on the panel. I think heterogeneous trust assumptions is really what most people want, because not everyone is going to want the same security model.
00:01:22.514 - 00:02:18.244, Speaker A: Most consensus implementations currently aren't aware of cross chain opportunities, so like the consensus implementation has no idea what the state machine does with regards to cross chain messaging. Typhoon, on the other hand here is actually aware of cross chain opportunities and can take advantage of it. And this enables cross chain atomic bundles with outer rounds of synchronous messages between transactions on different systems. And I'll go through a specific example in a little bit to make this a little bit clearer. I think one thing we're definitely looking for collaboration on, which I think lot of people are starting to think about, is what does the API service, both from user perspective, solver perspective as well as the developer perspective, actually look like for cross chain, both applications of both intensive. So if you work in this kind of area. Yeah, please find me afterwards.
00:02:18.244 - 00:03:08.912, Speaker A: And maybe one other thing is, the important thing is the trust assumptions are not baked into the consensus protocol, into entitlements. This can range from proof of authority, to proof of work, to proof of stake to local government chain whatever you want. This is completely trust assumption agnostic. So why does cross chain, why do cross chain automatic transactions actually matter? Well, for one, I think the future is going to be very much multi chain as well as multitrust. It seems unlikely that we'll stand out on exactly the same chain with exactly the same trust assumption. For 7 billion people across the world, this just seems like an unlikely outcome. So I will start with this very basic example of we have a trade chain in and hotel chain in blue.
00:03:08.912 - 00:03:54.884, Speaker A: And the thing that I want to achieve is I want to be able to book a train if and only if I also get a hotel at the same time. So there are a couple of requirements here. One, we must check in both transactions on both chains, right? This is sort of similar to the shared sequencer concept the spurs system has been talking a bunch about. But this is actually not enough. We don't just need that both chains include both transactions. We also must have them succeed on both systems at the same time. You can't have the green transaction fail, the blue transaction succeed, right? So we also need something that umbrella research has been working on called shared delivery sequencing.
00:03:54.884 - 00:04:51.444, Speaker A: However. So both shared sequencing as well as shared building sequencing, it really works in the model of uniform trust assumptions between the systems being connected here. So with Chimera change and Chimera petitions, we can actually allow for atomic commits based on specific trust overlaps. So imagine that you have a trust overlap between blue and green and blue and red, but not red and green. In this case we can formatomic commits between the two things that have trust overlaps, but not between the things that don't have trust overlaps unless we elect something else to provide uniform trust to both systems. One of the nice things is every one of these chains can form effectively state petitions. And you have two types of state petitions within each chain.
00:04:51.444 - 00:05:42.648, Speaker A: Each chain typhoon has a base chain which really defines the forum that allows updates to the chain to happen. Think of this as the blockchain that defines block stake as well as validator sets and rules on how to transition the blockchain forward block by block. Right? And then we have chimera petitions, which are where chains can move states that we want to get an atomic settlement with respect to other chains. So for example here the red chain can form a, can have a chimera state partition that forms effectively another chain in the middle here between red and blue that is atomic to both systems. And we'll go over this, what this means a little bit. So this is just the way the base chain looks. Again, this is a model standard blockchain.
00:05:42.648 - 00:06:08.964, Speaker A: Nothing really new here. This is effective earning PB of today or any other consensus that you collect. Okay, now we've come to these current petitions. So this is one chain, this is one blockchain. You have the base petition, have some state petitions or chimera petitions. And these chimera petitions may contain outer states. For example, they can contain things like a specific hotel room that is bookable.
00:06:08.964 - 00:06:59.100, Speaker A: The nice thing is it is relatively cheap to move state between the different state petitions on a single blockchain. And every state petition can read from every other state petitioner in the same chain a number of blocks back. So you can read recent data, which means you can actually do very quick unlocks where if, for example, this state petition gives up control over a specific hotel room, the other state petition that may be trying to form a primeri chain with a different blockchain can very quickly figure out, oh, the hotel room is now unlocked on this state petition. It is now available over here. And they can detect retake block there. Yes, this is how the starts look. And I'm realizing the diagrams are very small for the screen with multiple chains.
00:06:59.100 - 00:08:05.344, Speaker A: So we again train, hotel, plane, and this here on the hotel one is effectively the Chimera partition that wants to have an atomic commitment together with the train petitioner. And yeah, so you can only move state, like, you cannot move the same hotel room to both the partitions, you can only move to one of them. Thereby you have no conflict between these and this and this. And really one of the simplest mental models you can form is that typhoon with chimera petitions enables on demand blockchains. So this is sort of what we historically call a blockchain. These are three different blockchains. And whenever you want to do an atomic settlement between the two of them, between any number of them, you form this Chimera chain, which is really you can view as a virtual blockchain that just gets spun up on demand in order to execute a specific cross chain settlement that you like.
00:08:05.344 - 00:08:50.043, Speaker A: Yeah. And so now we get to atomic bundles. How do these atomic bundles actually look? Well, anomalous, all but intense. And I think everyone is sort of slowly starting to realize that really everything in the future will be intense because they're by far the best abstraction for what users actually want to do with these systems. So in this case, users would issue intents that say, I want to book a train as well as a motel, and I want to do so atomically. Users will have to pay for this, right? Like, this is not free, but users can decide how much they want to pay. And if this is above the actual cost of executing this, then these chains can form defection, primary chains, and then solvers can form these tight bundles.
00:08:50.043 - 00:09:22.174, Speaker A: So this is a nice thing. A user doesn't have to figure out how to interact with all these systems. A user just has to in their intent to find the settlement condition. And the atomicity guarantees that they care about. So then the solver sort of picks this up, figures out how you want to combine these things. And now you get to an atomic bundle, which is being executed on this on demand chimera chain. If you have perfect overlap between the security models of each chain, this looks very much like shared sequencing.
00:09:22.174 - 00:09:54.590, Speaker A: However, you even get the atomicity guarantees as long as you have sound. So this effectively generalizes shared sequencing to work in the model of complete trust. Overlap to no trust. And it rather allows users and ecosystem to figure out exactly what kind of overlaps you want. And I'll go a little bit up. One important thing is I'm always using the example of two chains for my camera chain because it's visually easy. You can have n number of chains forming Camaro chains.
00:09:54.590 - 00:10:37.514, Speaker A: You can have like three or 15 different chains forming one unit chimera chain onto which we can atomically settle things. Yeah. And overall, this allows for us atomic cross chain communication without any extra trust assumptions outside of what you have in terms of the underlying security models of each involved chain. And one of the really important things which I. Yeah, I think most people should be looking to database systems and database engineering, because effectively we just partitioning this database of each blockchain according to where it wants to be. Atomic. Atomic settlement.
00:10:37.514 - 00:11:05.340, Speaker A: Yes. One of the really big benefits of this is that you can have that. This is not a message based protocol. This is not, I'm sending a message over the wire. I'm waiting for a bunch of consensus rounds to happen. This is rather, this chimera chain is executed by both validators, and the validators have access to the entire state. They're just running these transactions.
00:11:05.340 - 00:11:56.814, Speaker A: They're just running transactions against primary chain logs, which means we can have synchronous message passing between these two blocks. So I can have a book me a training transaction over here that within the protocol actually checks whether the hotel room is available. If it's available, this returns true, then it only executes. So you can have these very atomic synchronous message passing with each other, which means that you don't have to rely on relay as solvers to actually do this kind of work for you. Rather, you can have like a model that is very similar to how you can program existing synchronous systems, like medium. Yeah. And this is then how the start is looking if you have multiple amounts of these at the same time.
00:11:56.814 - 00:12:57.274, Speaker A: And really the really nice component is that you can always read through state from the other petitions, not just the base state petition, but also from the Camaro state petitions. Yeah. So on to atomicity guarantees. And so some of the benefits here of typhoon, the higher the overlap between the quorums of each involved chain, the stronger the guarantees. Really, if you have 100% overlap, your missing guarantees talking no forking rules on the involved systems. So for example, in the case of BFT, this is generally two thirds possible. These optimistic guarantees make typhoon behave a little bit like a bridge, except that we don't have to have an external bridge provider or operator that provides this consensus finality, but rather this atomicity comes from the consensus of each system jointly.
00:12:57.274 - 00:13:38.796, Speaker A: And even if we lose the guarantees because some people are misbehaving or some people are not well connected to the system, we don't lose safety. This is the worst thing that can happen, is that the different chains water the transactions differently. So on one chain the hotel room was booked, on the other it wasn't. But it's not that we can double book a hotel room or that we can lose funds here. So this is really important, is never lost nor frozen, nor corrupted. Yeah, this is what actually ends up looking like if you lost the chimera chain just diverged. We didn't violate any of the rules of either base chain or either chain.
00:13:38.796 - 00:14:17.042, Speaker A: We just happened to have a different view of ordering of these resources. This is not great, but this is not like a critical failure effectively. And the other big benefit is that in order to get these automaticity guarantees, we don't have to do these multi phase commits or sort of go through multiple consensus runs. Right. Like when you think of IBC, in IBC, you always have to remove assets first, lock them on some system and then do actions on them. Here you don't, you don't have to move the assets. You also don't have to move an asset, lock it, trace it for a while, and until you have all the assets frozen in place, and then you act on this.
00:14:17.042 - 00:14:50.430, Speaker A: So you never lock assets unnecessary. Yeah. So some future areas of research and collaborations that we're quite interested in. So exploring the continuum between lifeless and safety. For example, you can not just take the overlap of both chains. For example, if you think about it, you don't just take the overlap between them. You could also take the union so that this impacts your life a little bit, because now if more people go offline, you lose life earlier.
00:14:50.430 - 00:15:36.768, Speaker A: However, it also increases the safety guarantees to some extent and not lose atomicity. One interesting area is also you can use a totally different quorum to connect two disjoint systems. So, for example, when you think of how you want to connect for example near and Solana, if they have no overlapping validator set, you could choose to use Ethereum as the common thing to run the chimera chain in order to get atomicity guarantees across both atomic settlement across between Nia and Solana without them having to agree on a specific on running the same security model. Yeah. The other areas, intent, layouts and formats, things like encoding forms, front ends. I think as an industry we just benefit from standardization here. One thing to keep in mind, they should be circuit friendly.
00:15:36.768 - 00:16:14.920, Speaker A: The other thing is APIs for solvers. How do solvers actually interact? All these systems and then application APIs. I mean, one of the sort of complex things here is what is the syscall interface that allows chain a to call transaction chain a to call for a transaction on chain b in the Chimera chain and that how to express different set of actions. Yeah, there are some resources and content contacts. I would have you and all of these also check out Germany, the anormal blog@locker.net if you want to learn more. Also, we're on Twitter.
00:16:14.920 - 00:16:20.504, Speaker A: I'm on Twitter telegram. Come find me there if you want or talk to me afterwards. Thank you very much.
