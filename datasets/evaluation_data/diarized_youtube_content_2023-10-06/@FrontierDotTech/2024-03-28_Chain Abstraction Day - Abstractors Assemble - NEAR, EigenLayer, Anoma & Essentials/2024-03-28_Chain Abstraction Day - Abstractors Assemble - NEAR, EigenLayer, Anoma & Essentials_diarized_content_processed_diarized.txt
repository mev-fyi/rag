00:00:09.040 - 00:00:09.700, Speaker A: Okay.
00:00:11.014 - 00:00:11.486, Speaker B: Yeah.
00:00:11.550 - 00:00:14.478, Speaker A: So you want to do rounded instructions.
00:00:14.606 - 00:00:17.934, Speaker B: For people, especially the lintermals from cool.
00:00:17.974 - 00:00:26.594, Speaker C: Yeah. I major in one of the co founders of OMA, and we do intents and abstractions beyond the wildest dream sky.
00:00:29.814 - 00:00:38.834, Speaker D: Hi, Amelia. Co founder of Deer and aggregating abstracting. And we're going to try to deliver the best user experience you can have.
00:00:42.174 - 00:00:53.834, Speaker E: Hey, everyone, my name is Liesel. I'm one of the co founders of Essential, and we're building team based infrastructure, including basically a universal DSL for instruction.
00:00:57.574 - 00:01:15.074, Speaker B: Hi, everybody, I'm Sriram, founder of Eigendair is a mechanism which allows anybody to stay Keith. And other tokens to secure all kinds of services we call actively validated services. Is that a good thing? All right.
00:01:15.454 - 00:01:30.514, Speaker A: I mean, we've had a couple of different possible directions to take this document, but maybe we could say, we could talk a little bit from, like, where you see where the project that you work on fit in this world of chain abstraction.
00:01:32.294 - 00:01:32.934, Speaker E: Yeah.
00:01:33.054 - 00:01:33.534, Speaker C: Oh, wow.
00:01:33.574 - 00:01:34.354, Speaker D: That's not.
00:01:35.774 - 00:02:17.030, Speaker C: I think my take is that the world is going to be full of heterogeneous trust models. I think we're not going to live in this world where there's one global security model. So we must figure out abstractions that allow users to specify the security models or trust zones that they care about. If we're here in Denver and we pay things in Denver, it makes no sense to have global consensus over these things. But it'd still be nice if my sort of interface kind of roams in the same way that mobile phones can take a phone from Europe to in the US, and it still works against the same online protocols and in blockchains. It's like, no, buy a new fucking phone and start from scratch. Set it all up again.
00:02:17.030 - 00:02:36.222, Speaker C: This is like clear, non technical model long term. So I think. So what you mentioned earlier, a lot of this will evolve into applications abstracting this sort of complexity of chainsaws, just defining in code to some extent what kind of settlement models, what kind of.
00:02:36.238 - 00:02:38.350, Speaker D: Settlement guarantees people they care about.
00:02:38.462 - 00:02:38.686, Speaker E: So.
00:02:38.710 - 00:02:59.434, Speaker C: Right, like, I may be happen to like transfer money here to like pay for coffee, but I want to trade, I don't know, some bitcoin. I may want to do this on the global decentralized system. When I want to trade stocks in New York, I'm willing to do like the official New York stock Exchange chain. But hopefully as a user, I don't have to install new apps for all these things.
00:03:01.494 - 00:03:36.006, Speaker D: Yeah, makes a lot of sense. I mean, on our side, we kind of think from a lot from the product side and from how do we enable developers to have these experiences where their users don't need to think about this? And so the core piece that we releasing in months and it's up for people to build now is this idea that you should have one account that you can interact with every chain, with every application, and a smart contract around there and then around that. Like what is the whole infrastructure?
00:03:36.150 - 00:03:37.462, Speaker C: You know, what are all the pieces.
00:03:37.518 - 00:04:40.594, Speaker D: That need to tie them together from selling guarantees to experience to gas to all, all these pieces? And how do we make it easy for developers to build that, to maintain that as some of the underlying things keep changing? Because this is kind of keep the protocols keep changing as well. So I think for us it's kind of the core kind of mindset shift. I would say it's like, hey, instead of right now people launching applications and choosing a chain, and they either choosing because VC stole them or because they hope they can attract the users of that chain, changing that mindset, actually you can attract all users, you can have access to everyone and you can have liquidity and all the coordination happening using software protocols like online, others. And the experience is the same. The experience is single account, single model. So that's kind of what we push for.
00:04:42.404 - 00:05:16.074, Speaker E: Yeah, at essential. I think one of the core things we're thinking about is if you think about it, users have always in a way interactive with blockchain spider intents in the sense that the user says, all right, this is what I want to be done. And then some other third party says, right, this is how we can do it. And there's an additional argument that says, okay, now I'm actually going to be the one to do this. And the disconnect there happens when the user is not able to explain like fully, this is what I want, or the party that's saying, this is how we're going to do it. It's actually like self interested or only.
00:05:16.194 - 00:05:17.986, Speaker B: Sort of drawing the user's liquidity to.
00:05:18.010 - 00:06:17.904, Speaker E: One like specific back end where, you know, most benefits whoever has created that, that transaction for the user. So what we're doing is kind of figuring out, all right, how do you extract away even further within that flow so that the user can still just say, this is what I want done. But this third party that's saying this is how we're going to do it doesn't just have the power to dictate like this is the best way to do it, but the power to actually execute on that on behalf of the user. And in the case where you're looking at that purely from a transaction perspective, this is Delta, between what this third party says I can do for you and then what actually ends up happening on chain. So what we're tackling at ESSENTial is figuring out how do you remove that Delta, and how do you make sure that know the solution that's proposed to a user is actually what they end up getting without that additional execution risk that happens up between the point of transaction, the point of settlement. So yeah, that's sort of the high level overview. Awesome.
00:06:19.324 - 00:07:17.184, Speaker B: From our viewpoint, when you think about chain abstraction, you can only abstract things that are easily parameterized. So imagine there are like hundreds of chains. Each of them have like their own arbitrary trust models. Then what is the right abstraction? You can read this to the user. It's actually pretty complicated because each user has to say, like, I this chain, I prefer a B, C, D chain, but not EFGh, I JK chain, all these kinds of very non fungible expressions. So our view is, or our role in this whole ecosystem is to abstract security, abstract trust models. So if you're building, let's say, a bunch of different chains on eye layer, each of the chains can have a measurable amount of economic security attached to it.
00:07:17.184 - 00:08:37.018, Speaker B: And, you know, this measurable model economic security, you know, imagine there's a common $10 billion pool in Illinois, and you have like 100 services. Each service or chain can ask for a certain amount of economic security from ideal and has the rights to uniquely slash and redistribute funds in case the service or chain breaks fidelity. And so what this means is fundamentally to the users of that chain, as long as the net transaction volume that was happening in the chain within some challenge figure is less than the amount state, they are actually operating under unconditional economic security, which means basically either their transactions go through and they get what they were promised, or if their promise is broken, they'll be able to slash and redistribute and acquire the same amount of insurance relative to the cost of the transactions that they are actually undergoing. So this, we think, is a fundamental unlock to now abstractions that can now be undo because security is now abstracted and fungible. I have a measurement mechanism for what is enough security. Is it 30 nodes, is it 15 nodes? And so on. But instead, here we convert everything into pure economic security.
00:08:37.018 - 00:09:11.640, Speaker B: And you can actually allocate economic security as a unit. And then you're operating the through like one of these interfaces, which are universal aggregators across all the chains. You may be saying, hey, I'm doing this transaction across these three chains, and the transactions value is $10,000. Make sure that whatever security mechanism underlies these things actually has cover at greater than $10,000. And now I'm unconditionally covered related to all the actions that happen under it. So that's our role. Our role is to abstract security itself as a commodity.
00:09:11.640 - 00:09:25.324, Speaker B: So then you can actually have change that consume security as a, as a commodity, and then that propagates upstream to users who can then express very specific preferences relative to these actions.
00:09:28.464 - 00:09:42.052, Speaker A: So maybe a little bit of a spicer question, which is, how will what you're building interoperate with what other people are really good on this panel? And just in general, what do you.
00:09:42.058 - 00:09:43.644, Speaker B: Mean will not interoperate.
00:09:46.344 - 00:09:47.648, Speaker A: Or not interoperate?
00:09:47.696 - 00:09:48.544, Speaker B: Exactly.
00:09:48.704 - 00:09:56.164, Speaker A: How are you a self connected universe unto yourself that no one, nothing else we don't have? So.
00:10:01.104 - 00:10:03.570, Speaker B: How can you build a system.
00:10:03.672 - 00:10:13.594, Speaker A: Like, what are the parts of the solicit system that you feel like you need to plug into that are probably most important for like six cents?
00:10:15.854 - 00:10:56.672, Speaker C: I think, from our side, I know most of protocol, right? Like this is mostly. It's designed as a way for developers and users to have sort of a standardized API that solves, can plug into where you say, well, I have an intent that wants to go from a to b. And I don't care how this gets settled, I just care that, like, I get from a to b under some assumptions, a normal makes very little assumptions on where it's actually deployed. You can apply anoma to a two theorem, you can apply to one two near, you can deploy it on as an idea chain anomaly really doesn't care that much about analytics security model. And this is more for the user to choose.
00:10:56.758 - 00:10:59.224, Speaker B: But this is confusing because aren't you a blockchain?
00:11:00.004 - 00:11:08.868, Speaker C: There also happens to be a blockchain, but you don't have to use that specific blockchain if you don't really want that specific security model.
00:11:08.996 - 00:11:11.356, Speaker D: Everybody needs a blockchain. Exactly. You know that.
00:11:11.500 - 00:11:26.572, Speaker C: Yes. In the end, I think, like, this really comes down to individual users will pick security models. And I think it's. I'm not yet certain that we really know what the security model landscape is looking like.
00:11:26.708 - 00:11:28.212, Speaker D: I can see a world in ten.
00:11:28.268 - 00:11:52.738, Speaker C: Years where my parents won't give a shit about, like, economic security. They, like, they'll want the chain run by their local government. Right? Like, because most people are like, very happy with physical security. And this is sort of the closest analogy that I think the real world has to security models. So I think the jury is still out on what sort of security models people will actually want in five to ten years.
00:11:52.826 - 00:11:56.214, Speaker D: You're saying instead of economic security, you want security with guns?
00:11:56.554 - 00:11:59.090, Speaker B: Yeah, I think it's the highest level.
00:11:59.122 - 00:12:03.694, Speaker D: Of slashing I can there support that.
00:12:04.794 - 00:12:18.864, Speaker C: I think it's a very reasonable security there. I live in Switzerland. I like Switzerland. I mostly trust Switzerland. Like, I. To a large extent, I trust Switzerland. Swiss security and adherents rules more than I trust, like, 99%.
00:12:18.864 - 00:12:27.036, Speaker C: Chains like this is a pedestrian. I'd be very happy. The swiss government runs me a blockchain. Yeah.
00:12:27.060 - 00:13:28.140, Speaker D: So, on our side, I mean, we see kind of lots of different, like, you know, layers of the cake that. That pretty much all together compose into different experiences. And so that's why we're working with eigenplayer on fast fidelity. We have working with polygonal aggregation roots, offering databases and roll ups. We open up the intense undercover as we actually executing. So the idea is, in every layer of stack, first of all, there should be options, and then you should be able to compose with everything else around that. And we have, for example, the centralized charnet that right now already runs, and some other chains, and offer decentralized experience to access all the applications without actually touching near when you actually interact with them.
00:13:28.140 - 00:14:00.484, Speaker D: So that is, like, at every layer, you have kind of optionality, and you have tooling that is decentralized and opens up kind of new use cases. And so, like, for us, the broader vision is, like, how do we bring everything into self sovereignty? How do we really enable this kind of experience that everybody can leverage? How do we unify and aggregate security? How do we unify and aggregate accounts? How do we unify and aggregate user experiences at every level, offer that tooling to developers to build better applications?
00:14:02.004 - 00:14:14.220, Speaker E: Yeah, I mean, I guess I also want to shout out the good people at the frontier and everyone else involved in the cave standardization working group to answer this exact question.
00:14:14.332 - 00:14:15.588, Speaker B: A lot of us are building really.
00:14:15.636 - 00:15:40.914, Speaker E: Exciting, but quite different things and being able to figure out how we stop fragmentation from reaching the abstraction layer. It's going to be, like, one of the most important questions, I think, of this week and maybe this year. But on the level of the central, specifically, one of the most important things we're doing on the high level is making sure that regardless of what system the user wants to interact with or knows that they're interacting with, and they're able to do that through the same interfaces via an intent based constraint. Based programming language that's extracted away from the user via various front ends or wallets. But they're ultimately, there's interoperability throughout the space in the sense that whatever user wants to be able to express can be translated into a language that is understandable across the stack and across the framework. So whether that is then an intent or a constraint that is being fulfilled on our central protocol or on any other protocol, that these will be able to specify that and have full access to the entire cross chain space. And I suppose there's like an additional level of abstracting, like underneath different chains, with some of the stuff that we're doing with basically like building an executionless vm that allows for like direct settlement of intense fire constraints.
00:15:40.914 - 00:15:45.914, Speaker E: But that's a much deeper conversation. So the amount of time that we built. So I thought.
00:15:50.154 - 00:16:19.014, Speaker B: I think there is just a security zone. So you. And it's built on Ethereum and built on Ethereum. Why is this important? It's important because when you have multiple trust zones which are moving follow along. If you don't have a common trust zone, you're going to be limited in the amount of economic value you can unconditionally, correctly sell. So imagine there are 210 chains, and each of these ten chains have some of stake associated with them. They're all on disparate, separate zones.
00:16:19.014 - 00:17:13.634, Speaker B: Then when you interoperate across these chains, you can never move value which is greater than the amount of stake across these chains. Because if you try to move value which is greater than the amount of stake, then you will be, you know, you may not be secure if you just take this purely unconditional, secure model. Whereas if you have something like a common settlement zone like Ethereum, and where all these different chains settle, and, you know, if something goes wrong, people can raise fraud proofs. And if nobody raises a fraud proof for a certain period, you can assume that whatever was stated was actually correct. Now you can start moving value which is much higher than the amount of stake available. I think this is a very, very, very important property. Imagine you want to put like, you know, one of the goals of our whole space here is in bringing, you know, all, let's say, things like real world assets into blockchains.
00:17:13.634 - 00:17:53.502, Speaker B: I want to bring a $1 trillion bond into a blockchain, and I have whatever, $10 million. Security is simply insufficient. When you have common settlement zones which can actually perceive and verify the accuracy of these claims, if you're willing to wait, you can actually transport an infinite amount of value, unconditional and that's why we think like aggregation around a common trust zone is important. And we look around and what that zone is, it's pretty clear that it's ethereum. So we do. So that's one place we don't interrogate is Ethereum zone that we narrowed it down to. And you know, we've written papers, for example, on multi chain trust aggregation.
00:17:53.502 - 00:18:33.948, Speaker B: Can you get stake from then chains and to gather from a stronger, you know, basis? There are lots of problems. These, these zones can decay. It's like one of the zones can fork and then now you're left with like a security model which is broken. When you want to write a settlement across ten zones, you have to make sure that, you know, you are writing, you know, these fraud proofs and validity proofs and CPA proofs across end zones makes it very difficult already. You know, we don't have proper working systems on long chain, so it's a much, much harder push to get it working consistently correctly across all these chains. So all of these drive us to. That's one fact, which is Ethereum is the settlement zone.
00:18:33.948 - 00:18:51.924, Speaker B: On top of which we can now build this substrate of further economic security to move value around at a much faster pace than can be supported by the data set. So that's the boundary of. So on top of this state even start building opportunities and things. And so that's, that's what we think about.
00:18:53.184 - 00:19:00.284, Speaker A: Okay, so we brought up the topic of settlement. I guess we've got five minutes left and we're supposed to talk about settlement players, so.
00:19:00.944 - 00:19:04.648, Speaker B: But I'll ask two questions. What is a settlement zone?
00:19:04.776 - 00:19:10.924, Speaker A: Or like, what is settlement? Is it a blockchain and is it ethereum or is it circle?
00:19:13.464 - 00:19:14.244, Speaker E: Yes.
00:19:20.004 - 00:20:14.230, Speaker C: What a settlement. I mean, settlement is all about state, right? Like, where do you trust your state to be securely stored and securely transitioned from state a to state b? And I think this, like, where you want settlement to happen, this is very fundamentally local choice. Like, I think some people very, I mean, you can probably tell by now I'm very, like, local first. Like, I think some people are very happy for their security zone to be their village because they've known these people for the last like 50 years. This is the fundamental security zone that they trust. So I think this is where they will want to be settled because this is so the social consensus that they trust. If you live in and in Argentina, you may not trust the government's economic policies as much and you're much more worried about censorship and things like this.
00:20:14.230 - 00:20:28.594, Speaker C: So in that case you may want to go for like a globally decentralized thing, right? So I think settlement really are like, what is the settlement chain is in the eye of the beholder and everyone will have a very different answer to what they care about. And I think it's kind of.
00:20:31.354 - 00:20:32.130, Speaker D: Unworthy.
00:20:32.162 - 00:20:54.854, Speaker C: To assume that we can define a global settlement system that everyone in the world will agree to. This is sort of akin to the discussion like, we don't have a one world government for roughly the same reasons because different people will have different requirements from the system that they trust with their state. And it's probably going to be circle, but that's sort of a different discussion, sadly.
00:20:56.954 - 00:21:54.780, Speaker D: I mean, I think the way Isaac of Salomon is that some specific set of guarantees that this transition will not be bone. And so, and because of this, you can now go and do something in the real world. You can deliver goods, you can have a party. And so to kind of indeed like settlement is an isometric and so like, but you know, the eyes of the holder kind of way easier to judge something like for example, bitcoin, even though it can fork and somebody potentially, potentially is mining 51% fork for past four years and going to like present it right now and roll back everything that happened. Right. That is in the realm of possibility, but we still kind of trust the current thing. And so that's why it is important to understand that I have a beholder in the settlement state.
00:21:54.780 - 00:23:09.312, Speaker D: But at the same time you have set up guarantees around like, well, to roll this back, somebody needed to spend this much money, this much energy, this much time, this much resources. And so that guarantee is also allowing you to probably the payment I did for my coffee, probably nobody will go forward this chain. And so I think where ZK is interesting adds to this. And like for me that was, you know, as I saw ZK kind of actually becoming production is that you can now have something that I can prove to you that this has happened. And you don't need to have, you know, billions of dollars of like financial security for the proof that it's happened. Now you still need like data ability, you still need like a bunch of pieces and kind of data information propagation, all kinds of like stuff. But that itself enables really interesting new things where even if certain want to roll something back, you know, if we do have ZK proofs, for example, it is like now becoming a very kind of contested type of thing where especially if this ZK pros, those are like cross reference.
00:23:09.312 - 00:23:41.900, Speaker D: Imagine like ether proof is posted on here, proof posted on, you know, cosmos and Noma and Corec and everywhere. And so now like to roll back, you kind of need to roll back the whole entry. And I think that that would be really interesting to see as this kind of security aggregation happening that you can't have indeed local settlement. Like hey, I transaction, here's the CK proof. I shared it with my village. Everybody's like cool. And then you also throw it posted in one of the global blockchains and then they all interlinked.
00:23:41.900 - 00:23:55.344, Speaker D: And so in 1 hour, you know, of propagation or hopefully 1 second of propagation, you like, rolling this back will require, you know, all of the market cap of every chain plus lots of engineering to actually happen.
00:23:56.164 - 00:23:58.376, Speaker C: Actually, the engineering is very bigger cost.
00:23:58.540 - 00:23:59.444, Speaker D: Exactly.
00:24:01.504 - 00:24:56.658, Speaker E: Settlement. Yeah, I guess like the way I conceptualize it is by breaking it down into sort of two components, one being like fulfillment and the other finality that you're saying on the one hand, you know, making sure like, all right, this isn't getting me rolled back. It's the finality component. But the other component is fulfillment, which like, if you bring it back into the real world, it's like, you know, has my package been delivered to my house? Like, yes, this has been fulfilled. And from a user perspective, like, the fulfillment is really the most important thing, obviously, like finality is important, but what the user is looking for is like, has this outcome that I have asked for actually being achieved? And the way we're focusing on doing that is by actually sort of removing like the gap between, like fulfilling it from the solar level. Like, okay, this is solution, an actual fulfillment as an on chain inclusion. So the solution has actually been executed.
00:24:56.658 - 00:25:13.134, Speaker E: And the delta between the proposed outcome and the actual on chain outcome is where I see like the sort of most interesting conversations about simulant in the chain abstraction context. I think stemming from is something that we all need to be discussing it all. But I see the cops around.
00:25:16.614 - 00:25:50.194, Speaker B: Say something quick. A settlement zone is what you are referencing for. If there's a canonical ledger of record for an asset, how do you derive it? If it's relative to some zone, that's what we call the settlement zone. There's a canonical ledger of record for the asset. That's the settlement zone. And as much as I appreciate the bottom up, you know, community computer ethos, that cosmos pump, I don't see community computers. I see functionality computers.
00:25:50.194 - 00:26:41.274, Speaker B: Right now, if I look around in cosmos, I don't see anybody trusting their local government or anything like that. I see people using different chains for different functionalities. The problem that happens when you have chains that are functionalities and you're taking trust assumptions on each of these functionalities, when you compose across these different chains, you get the worst of the trust assumption across all these different functionalities. That's what happens when you interoperate the community computer ethos with the composable computation ethos that crypto is building. So my sovereignty is capriciousness from third party point of view. I can do whatever I roll back, I'll do this, I do that. Then you should not compose it with other things without giving rigid guarantees on what you're actually agreeing to.
00:26:41.274 - 00:26:59.582, Speaker B: All we're saying when we're agreeing to a settlement layer is what is the set of common things that you're agreeing to when you're interoperating? If you don't want to interoperate, you should be sovereign. That's the right answer. If you want to interoperate to the extent that you want to interoperate with people who don't want to take a counterparty trust assumption on you, which is.
00:26:59.598 - 00:27:00.594, Speaker C: What the whole world.
00:27:02.468 - 00:27:32.364, Speaker B: Then you need to understand is what architecture is that will actually empower you to do that. So that's why we think there is to build global systems of coordination, to build systems to redeem some of the problems that we're seeing in the world today, where we don't have a global view of what is the right composition layer for global finance, for global coordination. That's what we think Ethereum and Eigen layer is aspirations of. I didn't answer the question of what cycle, doctor? Me?
00:27:33.624 - 00:27:35.672, Speaker A: Well, we're out of time.
00:27:35.768 - 00:27:37.584, Speaker D: Thank you very much, guys. Thank you.
