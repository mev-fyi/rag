00:00:00.490 - 00:00:35.506, Speaker A: Okay, so I'm super excited about this panel. PBS is a topic that's close to my heart. Having sort of spent about a year and a half of my life looking at it and trying to make it become a reality. It's sort of blown into something that was much bigger than I could have expected. And now I'm lucky enough that we have some of the people that are working on sort of carrying it forward and bring it to this next stage. I will do a similar thing than we did in the previous panel. I do want to have a lot of participation.
00:00:35.506 - 00:01:40.038, Speaker A: I think this is going to be sort of a forward looking chat. I've made sure that on this panel we have sort of representation not just from the ethereum ecosystem, but also alternative approaches to how to handle mev at the protocol layer, as well as in other ecosystems, where the trade offs that people are making in the designing of these systems is slightly different. So I think a lot of the conversation will be focused on trade offs and focused on what are the properties that we're trying to guarantee in the systems that we design, and how do we make sure that those properties are good for the users that we're designing them for. So, unlike the previous panel, I think it would be quite interesting to hear a TLDR on sort of your current role in the ecosystem, the part of protocol level mev development that you're focused on, and then how it contrasts maybe in terms of the priorities that you have when you think about designing these systems. Mike, do you want to get us started?
00:01:40.144 - 00:02:35.950, Speaker B: Sure. Hello. Yeah, I'm Mike. If I haven't met you guys working on thinking about EPBs in terms of how we can bring it into the ethereum consensus layer. So I guess some of the main properties we're paying attention to are giving guarantees to proposers that the block they commit to if they haven't seen it in time is valid and they'll get paid for the right to produce that block, even if they aren't in control of the block contents necessarily. We're thinking a lot about how we can give guarantees to the builder. I think the low carb crusader kind of whole saga showed us how important builder privacy is in some contexts, and making sure that they're not incentivized to go outside of the protocol to do something that gives them better guarantees.
00:02:35.950 - 00:02:50.850, Speaker B: Yeah, I think that's what I'll say. And also caring a lot about censorship, resistance, thinking a lot about how we can get strong guarantees about transactions getting included, even if the validators themselves aren't the ones building the blocks.
00:02:52.230 - 00:03:40.734, Speaker C: Hey, everyone. I'm Alex Stokes with the EF. And basically I'm just trying to make sure that all of you don't destroy ethereum. The short term incentives are to just extract as much as you can from the system. But if we all do that at the same time, then it looks like we just have the one super node that we're all battling, and now it's just like a TradFi stock exchange and we lose all the nice properties that Mike was just talking about that make ethereum really special. And obviously, by extension, like these other ecosystems that we have represented, yeah, I mean, it's very tricky. Probably what you'll take away from this is just seeing all these different perspectives and the fact that there's no perfect or ideal solution here, especially throwing back to steph's talk a minute ago, there's just such a vast network and again, a lot of people in this room are working towards adding to that picture.
00:03:40.734 - 00:03:52.840, Speaker C: And so you have this very rich diversity, which is really exciting. Ton of innovation, stuff like that. But then, yeah, we just have to make sure that we can keep playing the game rather than just play a few more rounds of it.
00:03:55.050 - 00:04:50.422, Speaker D: Hi, I'm Sam Hart. I work at Skip, although prior to working at Skip, I worked at the Interchain Foundation, which is kind of Cosmos focused, and I did kind of product development for the whole Cosmos stack. So Tenermint, Cosmos, SDK, IBC, et cetera, et cetera, et cetera. At Skip we develop mev solutions and kind of more and more we're developing kind of UX solutions for users. And I still am working on quite a bit of infrastructure throughout the stack, so I think I'm on this panel to kind of represent the I mean, it's going to be very interesting talking with everybody else here, but Cosmos just comes from a very different place and has different assumptions and is trying to optimize for different things.
00:04:50.476 - 00:05:01.280, Speaker A: So you end up described those things. So maybe in contrast to how things are done on Ethereum, what are sort of the trade offs that you guys lean more towards on the solutions that you build?
00:05:01.890 - 00:06:19.720, Speaker D: Well, I guess to your point in your previous talk, the place that Cosmos starts from is that these systems are going to be inherently political and they're going to be kind of divided into very different application functions, user preferences, that kind of natural sharding is going to occur and that's a good thing. We should kind of embrace that. So that means that the application is going to be able to express preferences over the application design all the way through the mev supply chain. And really the thing that we should be, unlike the Ethereum Foundation, we are less concerned with a single chain going down. There are kind of replaceable parts in the system and we're designing for kind of like aggregate robustness rather than any single chain. So, yeah, that communication standard is super important and actually just kind of listening to user preferences, application preferences, to understand what their needs are.
00:06:20.650 - 00:06:21.400, Speaker B: Cool.
00:06:23.450 - 00:07:05.234, Speaker E: Hello, I'm Terrence. I am from Option Labs. So I mostly work on layer one. So I am a core dev so I'm a core implementer. So like Mike and Alex said, so I turn their wonderful research idea into So, which typically means that if something goes wrong, people will knock on our door first and then we're the one that gets yelled at. Right? So in terms of EPBs, I'm mostly looking at what Mike and Alex are looking at, basically. And we deal with a lot of users, a lot of stakers about like I think 35% of the stake is running through Prism right now.
00:07:05.234 - 00:07:29.420, Speaker E: That's the client that we write. And so about 35% of the block is proposed through Prism. So from our end we look at, for example, at Reorg, right? We want to make sure there's not enough reorg. We want to make sure that every block is successful. That's why EPBs is very important to me because I think that's basically the next step to better chain security.
00:07:30.830 - 00:07:38.170, Speaker D: Curious, do you have a lens on the Arbitrum block space preference?
00:07:38.930 - 00:07:58.920, Speaker E: Yeah. So I'm kind of in this weird position that I work on layer one, but I also know a little bit of layer two because option labs pay for my salary as well. So I don't depends let me know what hat I should be wearing. But from my end I'm mostly commenting on layer one, but I'm happy to answer layer two questions.
00:08:01.450 - 00:08:51.298, Speaker F: My name is Alex and I am with Fastlane labs. We are a mev protocol that focuses on polygon. We do things very differently though. Our focus is primarily on building smart contracts that are aware of the infrastructure and infrastructure that is aware of the smart contracts. And by combining those two and having them interact in an interesting way, we've been able to pull off a few things that we're very proud of. On Polygon, we've built a mev system that is users just don't get sandwiched. We've been able to really build a system that's robust, that helps users and that at this point, right now, if you're looking at the layer ones like polygon of the EVM ones, is going to give you the best execution because it's going to be the one where you're least likely to get sandwiched.
00:08:51.298 - 00:09:38.178, Speaker F: And we're very proud of that. We also have the unique distinction, if I may brag a little bit, I believe, and I could be wrong and I think Skip, you guys are like this too, we could turn off our relay and our protocol would continue to still work. And I think we're also very proud of that. We've designed a system where through the smart contracts, we've been able to make it so that there's not a reliance we get benefit out of some centralized infrastructure like a lot of the other systems because it does help things speed up a little bit, but we could still function even if we turn it off. And so we're very proud about that. But there are some trade offs to your point, like yeah, it's decentralized in the sandwiches, no reliance on infrastructure. But there's a massive trade off that we make and that's based on something that's unique to Polygon, which is the amazing social there.
00:09:38.178 - 00:10:17.954, Speaker F: What we've found is that Validators on Polygon will not run sandwich bots. There's not a single one of them running a sandwich bot. And because of that we're able to build a system that assumes and that trusts that Validators won't run sandwich bots. Now if one of them ever turns one on, that might change things for us because then we would have to start worrying about the fact that that Validator might be accumulating stake faster than the others and that might, over time, trend towards centralization, which is a serious problem. How long that would take, I'm not sure. I think the EF guys would probably be more suited to answer that question than I. But what we found is that Polygon is a proof of stake network and it's been proof of stake for a long time.
00:10:17.954 - 00:10:59.214, Speaker F: The Validators have been going out raising stake predominantly from institutional investors for a long time. And because of that there is a strong sense of social responsibility. If a Validator starts running their own sandwich. Like you can look up all of the major Validator operations on LinkedIn, you can find their CEO's email address, you can email your senator about like, hey, there's this guy who's stealing money from us. It's this validator right here? There's a sense of accountability that is really a result of the way that the Polygon Validator set was set up. That is not necessarily the case for Ethereum. That's actually definitely not the case for Ethereum where there is a permissionless Validator set.
00:10:59.214 - 00:11:07.698, Speaker F: But that being said, we're very happy of what we've been able to accomplish in the environment where our trade off prioritization is different.
00:11:07.864 - 00:11:49.486, Speaker A: So maybe one question here is on the one hand you say, okay, you can just message all the Validators on LinkedIn. You're like, wow, this is like the most centralized thing in the world, right? I can just get everyone into a room and make decisions about protocol changes whenever I want. There's sort of this assumption that Ethereum works differently, that Ethereum doesn't have sort of this set of operators that control a vast majority of the network. But my understanding is there are still very few staking operators and node operators on Ethereum today. And the proportion of solo stakers is well below 10%, if not below 5%. Is that the correct understanding of how the distribution works?
00:11:49.588 - 00:12:11.986, Speaker F: What I would say is that on Polygon the stake is, to use another term, it's relatively sticky. Like once you stake with a Validator, you tend to stay with them. So if one Validator starts having slightly higher yield than another, the sense that an institutional investor would do an entire set of due diligence, bring in their legal team and go through that process again, it's an extremely high friction.
00:12:12.018 - 00:12:25.100, Speaker A: That's the case on every chain. Right. Validators are retailers of trust and that trust is negotiated through sort of contracts and long term agreements. And so whether you're on Polygon or on Ethereum, that looks very similar.
00:12:26.350 - 00:12:58.426, Speaker F: I want to agree with you, but I feel like I might aggro a lot of the Ethereum people. But yeah, I'm not entirely convinced that Ethereum Validators would necessarily sandwich. I mean, we've found that on polygon they don't. And it would be amazing if Ethereum is the same way. I think that would be great because right now, if I'm being honest, ethereum is the worst chain for users. It is the most predatory chain. It's the only chain where Validators are strongly incentivized and perhaps even will be forced to be maximally extractive for users.
00:12:58.426 - 00:13:29.726, Speaker F: A lot of the other chains have focused on avoiding that. And I think one of the one downsides of PBS is that while, yes, it does really help decentralization, it also enshrines this terrible user experience. And the only way around that terrible user experience at present is to rely on centralized third party off chain infrastructure to have privacy through your transactions. And if you're correct about what you're saying about Ethereum Validators, I think that would be amazing because I think that would solve a lot of issues.
00:13:29.908 - 00:14:00.258, Speaker A: So I don't necessarily know that the answer is just to ask all the validators, not the sandwich. But I think there are some intermediary solutions that are going to help provide sort of better guarantees. I'm sort of curious, from the guys working at the EF, what do you sort of see coming around the curve in the next six months to a year in terms of protocol changes at the Mevboost sort of PBS level? What are the main areas that need to be improved upon?
00:14:00.434 - 00:14:39.320, Speaker C: A big thing people talk about is citizenship resistance. So that became quite a hot topic around the merge with various sanctions and whatnot, and I think everyone agrees is a sort of soft spot the protocol today. So to the extent that we can improve that over the next six or twelve months, like you said, that would be great. It's kind of this thing where it's like we were even talking about this last night. Memboost works just barely. It's good and it works enough for now and then if anything, it kind of buys us time to focus on EPBs solutions that might resolve a lot of the downsides that we see with Webboost today.
00:14:40.250 - 00:14:41.000, Speaker B: Yeah.
00:14:45.530 - 00:14:53.242, Speaker A: Works just enough. This is really the bar that I try to hit whenever I design anything. Just good enough to be passable and allow people to focus on other things.
00:14:53.296 - 00:15:05.390, Speaker C: Well, it's a trade off, right? Because you could imagine we put a bunch of resources into making Webboost and the off chain PBS really good and we could, but we could almost get to a point where it's so good we don't even need EPBs.
00:15:06.610 - 00:15:46.586, Speaker A: This is a funny story. Before the merge I spent a couple of months trying to convince the EF that they should delay the merge and go straight to Try and PBS and that doing Mefboost was just a terrible idea. No one wanted to do it and so everyone was like, no, we want the merge, it's going to be the next upgrade, we're not delaying this. And so Mevbooth was designed exactly for that. It's like an intermediate solution that is sort of good enough to keep us going. I think the insane thing about it is without that one decision having been made, you wouldn't have all the block builders are in the room today. I think we'll have in the next panel block builders, well, they would be.
00:15:46.608 - 00:16:09.140, Speaker C: Here, we wouldn't have as much transparency into the system. Right. So that's the thing where it's good to have like it gives us again insight into what's happening some and to the extent that exists, it doesn't form a lot of experiments around or like the ways we think about EPBs, just having all this data from relays and things. So it's good and yeah, it's good enough right now.
00:16:10.710 - 00:16:46.800, Speaker E: Yeah. So I was going to add personally, as much as I don't like mu boost, I thought it was a very required step in the middle because without it we wouldn't understand all these different type of attacks that has happened in a few months. If we just go straight into Enshrine PBS, I think that would have been a bigger problem that we probably have to do some crazy hard work in the middle. So yeah, personally I'm very grateful of Medboos and because it basically allow us to learn so much.
00:16:47.570 - 00:18:01.350, Speaker B: Yeah. I also wanted to add you asked about what's coming down the pipeline in the next few months. One thing that I've been working a lot on and thinking a lot about is kind of as we do this blue sky research around Enshrined PBS and kind of think about the top down approach of really fixing this at the protocol layer. We also have the advantage of having the relays already running and we have kind of this whole ecosystem in place. So we've been working on this thing called optimistic relaying where we can kind of mold the behavior of the relays to look to kind of both derisk some of the EPBs design aspects but also to make the relays perhaps more sustainable and just better at servicing the builders and the validators. So I guess the overall theme of the optimistic relay roadmap is to remove some of the roles from the relay and replace those roles with a collateral that kind of enforces the builder behavior at the relay level. So I think in the short term that's like the easiest path to both making relays more sustainable and derisking some of the EPBs stuff.
00:18:01.350 - 00:18:06.630, Speaker B: But longer term I still hope that we go the EPBs route, but I'm biased.
00:18:07.470 - 00:18:31.840, Speaker A: So there's a few other approaches to designing systems aside from PBS. Right. Like, there's the PEPC that's sort of discussed quite a bit. And then there's also slot auctions that are sort of another sort of design category. I'd love to hear a bit of a discussion or debate around these different approaches and which ones are the ones that are worth exploring more than others.
00:18:33.590 - 00:18:36.114, Speaker B: Yeah, I feel like we almost need Barnabay up here.
00:18:36.232 - 00:18:37.890, Speaker A: Barnabay, you want to participate?
00:18:41.350 - 00:19:15.440, Speaker B: Okay, well, one thing I would say about the slot versus block auctions, most of the EPBs designs we've been kind of toying around with would probably work with both. Right. So this payload timeliness committee thing, which we published recently, we don't necessarily need to bind the builder to a specific block. We could bind them to a specific slot and kind of have that design space open up. So I guess I don't see it so much as, like, an either or. I see it as they have some synergies, but I'll have Barnaby talk about PEPC a little bit.
00:19:23.280 - 00:19:27.250, Speaker D: Well, in the meantime, maybe I can say something. Try again.
00:19:28.420 - 00:19:28.928, Speaker B: Okay.
00:19:29.014 - 00:19:29.920, Speaker G: Yeah, it's working.
00:19:29.990 - 00:19:30.770, Speaker D: Go ahead.
00:19:31.300 - 00:20:04.664, Speaker G: Yeah. So I've been probably doing the most work budding PBS at the EF because I've had some concerns, notably around the questions that are discussed now, like this idea of enshrining the market structure, of having proposals and builders. That, to me, was pretty scary. I thought the whole block auction was too coarse. And we have results from Quintus, from the special mechanisms groups, guys who tell us that it might be the case. And so while I was thinking about it, actually, funny story. I read this at Home 2.0
00:20:04.664 - 00:20:41.076, Speaker G: paper that Sam was the lead author on, and it kind of blew open my mind that there was a lot of things, like a much bigger design space than I thought to design this mechanism. And yeah, coming from this discussion, there was this idea of PEPC which is enshrining this idea that validators can enter into commitments, but not enshrining the specific shape of this commitment. So not enshrining that it has to be the whole block. It has to be the way that the Ethereum protocol dictates. It like you can enter into any kind of contract that you want. I don't know that it's workable. There's a lot of trade offs with it.
00:20:41.076 - 00:21:07.920, Speaker G: It's a much more opinionated version of the market, let's say. But I feel Cosmos is heading towards and with this idea of it's more adaptable, like, you can really have these activist solutions of designing yourself what your chain looks like. I don't know that it's fitting for Ethereum, but it really came from this place of saying, yeah, maybe the shape of EPC is just too coarse and we need something that's a little more flexible.
00:21:12.180 - 00:22:09.510, Speaker D: There is a latent structure to ethereum block space that's starting to form. The kind of cr effort is in some ways a kind of modification or retraction of part of PBS and then the whole kind of roll up repricing is another kind of acknowledgement that okay, we have this class of transactions and we want them to behave in a certain way. So if you were to go down a PEPC route, you might just kind of say that block space is going to be reserved or kind of delineated in a specific way instead of doing everything by market pricing. And I'm not an ethereum person, so I have no opinion about whether that's good or bad, but just kind of hypothetically, that's what might happen.
00:22:13.800 - 00:22:24.410, Speaker F: If I'm being honest, when I hear PEPC, I just think of the drink just for the people who might not be like on ethereum all the time. What does PEPC stand for?
00:22:25.980 - 00:22:28.260, Speaker B: Protocol enforced Proposal commitments.
00:22:28.420 - 00:22:28.936, Speaker F: Got it.
00:22:28.958 - 00:22:29.690, Speaker E: Thank you.
00:22:32.780 - 00:22:44.188, Speaker D: It is what it says it is, but it's basically a way to kind of resegment block space. And that's done on the validator level.
00:22:44.354 - 00:23:11.670, Speaker E: I guess from my end, I'm mostly looking at implementation. So for me, I want something that's implementable shippable within the next few months. Just because I'm personally looking at the main net and I see very slow block, I get really worried and it's going to get worse with more validators in the queue. So I'm mostly looking at short term. And for short term it's definitely EPBs. I have a question.
00:23:12.120 - 00:23:25.800, Speaker D: Maybe we don't know the design mechanism, but do you guys have sort of an outlook on whether Stefan's more complex picture becomes simpler with EPBs or becomes even more interconnected with more actors?
00:23:29.520 - 00:24:12.360, Speaker C: Just like abstractly, like a good EPBs will probably not touch most of those things. It will just actually have the one abstraction and I would kind of consider it to be worse PBS, I suppose if it touches more stuff, if that makes sense. Yeah, but in sort of the same breath, it's like EPBs, whatever that looks like should take this reality into account. The picture we saw is happening and it will only get more elaborate. And so that's the reality. And anything that we put in the protocol and this is part of why we are so careful with shipping something that's actually enshrined. It could be the case that we just copy paste my boost and then six months from now, everyone's trying to sell gas futures and no one wants what we have.
00:24:12.360 - 00:24:17.050, Speaker C: Right. So it's like something you have to do very carefully. Yeah.
00:24:18.060 - 00:24:32.050, Speaker D: In general, when you enshrine something, people can depend on it and build businesses on it, build additional layers. So I would presume it could catalyze some increase in complexity there.
00:24:32.820 - 00:25:28.352, Speaker B: I would also say, if anything, I feel like Steph's picture kind of implies PEPC solution might be better because proposers could commit to much more flexible things than necessarily just a full block or even a full slot. I kind of like to think of PEPC as sort of an enshrined eigen layer. So they could commit to only including a price if an oracle has some value less than $100 or something like that. And that sounds kind of like more like the intent structure than the actual full transaction structure. So I think if we need that level of flexibility at the protocol level, then PEPC might be the right way. That being said, I also like thinking of EPBs as kind of trying to firewall off most of the complexity from the protocol. Like we mostly care about stability, like liveness safety of the L one.
00:25:28.352 - 00:25:48.650, Speaker B: And to the extent that we can kind of firewall off the complexity of solvers builders searchers and all their interactions and just have kind of the simplest way to get all of that on chain like a dumb pipe, essentially, I also see the value in that too. So I think that's part of the trade off.
00:25:50.700 - 00:26:04.364, Speaker D: Is it still the plan to have validators be able to add like a couple transactions at the end of the block? That was my understanding of the kind of like censorship resistance solution, which kind of is a form of PEPC in a way.
00:26:04.562 - 00:26:43.930, Speaker B: Yeah. So I guess the design space isn't either EPBs or PEPC, right? The kind of inclusion list idea is a specific case of the constraining of the builder's actions in some way so you can specify something about your block or about the next proposer's block that the builder who builds that block has to conform to. In the inclusion list world, that's enforced at a testing committee versus PEPC. It would be kind of enforced at the validation, like the block validation level. But that feels more like an implementation detail. So yeah, I agree with you there.
00:26:44.860 - 00:27:08.348, Speaker A: I want to put terrorists on the spot and I know you tried to duck your representation of Arbitrum in your introduction, but yeah, I mean, one of the things that have been discussed is, okay, what are layer twos going to do with sequencing? Is PBS model some way that layer twos can achieve some level of sequence or decentralization? What do you think the future holds there? Both maybe from the arbitrary perspective or more from roll ups generally.
00:27:08.444 - 00:27:33.604, Speaker E: Sure. I think I will start maybe this is a spicy take. Right? I think decentralized sequencer is I know that has been a lot of talks that's a lot of people talk about, but as a layer two sorry, this is not layer two panel, but I'm getting there. But decentralized fraud approval is a lot more important in a decentralized sequencer. So we have to understand what can the sequencer do, what can the sequencer not do? Right. Sequencer can order your transaction. It cannot censor your transaction.
00:27:33.604 - 00:28:02.772, Speaker E: Just you can still submit it through a layer one inbox. So the only thing you can do is really just to reorder transaction to do some mev stuff, right, versus validator. Can actually submit an invalid transaction and steal something and then basically withdraw to layer one. Right? And unfortunately, in the current state of layer two, we either have permission, validator or centralized keys and then a lot of the contracts, their upgradability is such.
00:28:02.826 - 00:28:03.188, Speaker B: Right.
00:28:03.274 - 00:28:45.564, Speaker E: So with that being said, I think decentralized for upgrading is a lot more important for layer two landscape. So let's jump into decentralized sequencing. Right? I think a lot of layer two these days all have Dows, right? So at the end of the day, it's basically the Dao proposal. Like, what does the Dao wants to do? Do you want auction or do you not want auction? If you want auction, what type of auction you want? So I look at decentralized sequencing as basically just like a bunch of nodes that come into agreements of the order policy. Right. I think from the Arbitrum standpoint, I don't want to speak for arbitram, of course, or offline labs. And we have seen that we don't want to see mev.
00:28:45.564 - 00:29:33.712, Speaker E: So this has been kind of the day one standpoint that we don't want mev, we don't want front running. Right? But then now, since I think early February, we released a proposal on time boost, meaning that we are willing to auction off back running, essentially having spam you essentially bid, so therefore you have some sort of backgrounding ability. Right. So there's definitely a lot of excitement coming out there. I think there's two versions of time boost. I think that should be likely in the work in the next few months. And then in terms of decentralization, it just comes down to, okay, how do they come to consensus on what the ordering bid is? Right? You can have a BFP style, you can have a Threshold Committee style, you can just have a Dao elect a bunch of sequencers and then they take turns and stuff like that.
00:29:33.712 - 00:29:35.730, Speaker E: So, yeah, that's the gear stuff with.
00:29:36.900 - 00:29:39.730, Speaker A: Okay, maybe one more question from the audience if there's any.
00:29:45.700 - 00:29:46.450, Speaker E: Hi.
00:29:46.820 - 00:30:07.580, Speaker A: This question's more directed to Alex and Mike, but anyone's, welcome to Chime In. So I was wondering about what your thoughts are on multiple concurrent block proposals and if that will be practical in Ethereum going forward or if it's like a consensus overload.
00:30:08.720 - 00:30:37.540, Speaker C: Yeah, I kind of lean more towards the latter. Like I'd need to see a concrete proposal or design. But one thing, if you just imagine rather than one person's sort of racing to make a block now, like five people are, then that just has this additional load on the network that we don't really want. You could try to get around that. You could have maybe just gossip headers or something. But yeah, why do we really want this? It's I guess for censorship, resistance. Okay.
00:30:37.540 - 00:31:10.160, Speaker C: So I feel like there's other ways to do this and still retain this sort of sequential proposer ordering and it's kind. Of an equivalent design. Assuming inclusion lists are shipped TBD, there are still some open questions there, so it's not like a silver bullet, but yeah, it's definitely an interesting research avenue for sure. And yeah, definitely. If anyone in this room is interested to look at it from a research perspective, please join the conversation.
00:31:11.460 - 00:32:22.740, Speaker B: Yeah, I think my intuition here is like EPBs feels like it's kind of adding complexity to an already quite complex thing. And I think people have voiced that concern just as far as the way the protocol works. Now is there's kind of the fork choice rule and then there's this Casper thing that finalizes behind adding EPBs and mevburn inclusions lists. Like all of these things kind of start piling up and so kind of from an aesthetic argument perspective, I also think it's worth considering. And Francesco, he's not here, but he talks a lot about kind of maybe prioritizing single slot finality and kind of almost not starting from scratch, but rethinking the consensus layer at a more like a bigger change to the consensus rather than doing these Iterative things. I guess the trade off always is development effort and how feasible these changes are. So I think multiple concurrent proposals would be a huge paradigm shift that would take a long time and as the protocol starts to ossify, would only become more hard as time evolves.
00:32:23.240 - 00:32:31.816, Speaker A: Just leave it to eigen layer to implement all the soft forks and we can just have all of them running in parallel. That sounds fine to me. I don't see an issue there.
00:32:31.998 - 00:32:33.144, Speaker B: What could go wrong?
00:32:33.262 - 00:32:36.250, Speaker A: Yeah, let the market solve it.
00:32:37.900 - 00:32:55.410, Speaker H: Do you have any kind of sense on if EPBs would change the burn model of ethereum? So instead of it being burn on user fees, would you kind of take some of the money which currently goes in the proposer's pocket and kind of distribute that more fairly across the network? Or would it change anything in the burn model?
00:32:56.420 - 00:32:57.730, Speaker A: Could you repeat that?
00:32:58.180 - 00:33:09.636, Speaker H: So would EPBs change, I guess, the burn model of ethereum? So instead of all that money coming from a builder and going to the current proposer, would you kind of oh.
00:33:09.658 - 00:33:14.680, Speaker A: Right, it was like mevburn or something. Yeah, hot takes on mevburn.
00:33:16.620 - 00:33:59.620, Speaker B: I can give a quick hot take. I think mevburn, I've gone back and forth on it. I would say Justin and Domothy are the two real experts in mevburn. So if you want the real juicy details, I would talk to them. But my initial problem with mevburn is that it sort of takes away some of the agency of the validator. The reason for that is in order to I guess quick overview of mevburn is instead of the block that pays the validator the most winning the auction, it's the block that burns the most mev that wins the auction. And the idea here is, as Joe mentioned, it redistributes the kind of economic reward the economic mev over the entire protocol rather than just giving it to the single slot proposer.
00:33:59.620 - 00:34:41.010, Speaker B: My initial issue with it was, yeah, it takes away the validator agency because now there's a minimum price for each block that actually becomes part of the consensus layer. And so anyone who builds a block at home, if their local block doesn't meet that minimum value, then they have to either pay to subsidize that block, or they have to miss their slot or actually outsource the block to someone who can build a more valuable block. So, that was my initial problem. But Justin's response, and I think pretty valid response, is that if we can have inclusion lists and other kind of ways to constrain what the builder does, then maybe the full validator agency isn't actually something we need. So, I've gone back and forth. I think mevburn is cool. Now I'm team.
00:34:43.940 - 00:36:01.900, Speaker A: I have a hot take on mevburn, which is if you actually reduce the amount of contention rather than try to burn it, you might actually end up at the same result, but without as much work. And so a very simple way to do this is like, okay, well over maybe like 30% of mev revenues of validators just comes from uniswap LPs. And so uniswap is now shipping new protocols that are promising to expose less of that mev. And so, is that the right layer at which to solve it, or there's this promise of a lot of the activity moving to layer twos. And the more that, as an ecosystem, we leverage external computation to be able to do this market making this solving, the more the idea of liquidity sitting on a single chain becomes sort of irrelevant, and the liquidity is sort of amorphous or ambient, as some people would like to say it. In those scenarios, there's a lot less contention on the layer one settlement because you're not competing for specific state access. And in that case, do you really need to be working on mevburn? Or is that sort of superfluous as a complexity for the protocol?
00:36:02.480 - 00:36:58.670, Speaker D: Yeah, I think at the end of the day, it kind of comes down to what is ethereum's block space for? And it's supposed to be for everything, but some things seem to be more important than others. And Medburn seems like a good solution to me only because it's kind of a non solution. You just give it to everybody. And if you're actually differentiating block space further through layer twos or whatever, then you can do all kinds of crazy things with mev. We have a ton of experiments in Cosmos where mev goes back to LPs, or Mev goes to a treasury, a Dow treasury that votes on where it goes or whatever goes to subsidize validators in the tail end of the validator set.
00:37:00.800 - 00:37:04.760, Speaker A: All right, I'll call it there for this panel. Big round of applause for our panelists.
