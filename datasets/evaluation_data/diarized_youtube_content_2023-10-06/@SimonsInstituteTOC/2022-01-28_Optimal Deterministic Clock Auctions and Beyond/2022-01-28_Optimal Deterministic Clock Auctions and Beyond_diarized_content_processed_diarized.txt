00:00:02.240 - 00:01:00.984, Speaker A: Hi, I'm Dan Scheflin, and I'm going to be talking about our paper, optimal deterministic clock auctions and beyond. This is joint work with Jurgos Christodoulou and Vasilis Godzillas. I'll begin with a brief introduction to clock auctions, and even if you aren't interested in auctions directly, I'll explain how to think about this class of auctions as a class of algorithms, then move on to discuss known lower bounds for deterministic versions of these algorithms and the matching upper bound that we propose in this paper. And then I'll talk about how we leverage randomization in this work to break through this deterministic lower bound. And finally, I'll end the talk with a really interesting question about discovering the full power of randomization in clock auctions. But to motivate the study of this class of algorithms, I'll first introduce some basic auction notions. So imagine that you're working for an airline and need to allocate the final seats on a flight.
00:01:00.984 - 00:01:49.966, Speaker A: You have a set of families, each of different sizes, each with a number of seats that they require if they're going to board the flight. For example, the Green family has four people, so they need four seats and can't be served by fewer, whereas the blue family has two people and needs two seats and can't be served by fewer. Each of these families has a value for being served, and the total social welfare from serving a set of families is equal to the sum of the values of the families in the set. So, for example, if you were to serve the green and blue families, the social welfare would be 1050. And since social welfare is this additive function over the values, you'd ideally like to serve everyone if you could. But there's a feasibility constraint restricting which ones you can serve. In this example, let's say there are six seats remaining on the flight.
00:01:49.966 - 00:02:27.922, Speaker A: Then the maximal feasible sets are the gray, yellow and blue families, the green and blue families, and the green and gray families. Notably, as I mentioned, these feasible sets are just the maximal feasible sets, and the feasibility constraint is downward closed. So you could also serve any subset of these maximal sets. And then naturally we just want to maximize the social welfare of these of the families we serve, subject to this feasibility or capacity constraint. And this is the well known knapsack problem, which is np hard and in its own right. This is already an interesting non trivial problem, but this isn't the problem we study. In this work.
00:02:27.922 - 00:03:31.454, Speaker A: We examine a strictly more challenging problem where the values are unknown and instead the private information of the customers. So what if we still want to maximize the social welfare despite this lack of information? Well, the standard approach suggested in the field of algorithmic mechanism design for this problem is to run an auction. An auction is simply an algorithm which decides who should be served and at what prices. And the most standard kind of approach is the so called sealed bid format, wherein the participating customers each submit a report or a bid to the auctioneer, and the auctioneer uses these bids to ultimately make the service and price decisions. Then the standard objective is to design well performing strategy proof auctions, which means that bidders have no incentive to misreport their true values when they submit their bids. And there are indeed many strategy proof sealed bid auctions proposed in the literature on mechanism design. But is strategy proofness enough for an auction to be practical? Very often it isn't.
00:03:31.454 - 00:04:24.848, Speaker A: First of all, there are incentive issues. Understanding that an auction is strategy proof may require parsing a complicated proof, which is often unreasonable in many scenarios. Secondly, there are issues related to trust, even if you understood the proof of strategy proofness seal bid auctions require the bidders to trust that the auctioneer is following the auction protocol that she claims to be and that the auctioneer has done all her computations correctly. And finally, there are privacy concerns. Bidders must report their true values to the auctioneer, which could reveal possible sensitive information. And all of these doubts and questions make the sealed bid format less practically appealing in many scenarios. So can we change the auction format to address this? An alternative auction format often used in practice is called a clock auction.
00:04:24.848 - 00:05:33.174, Speaker A: In contrast to the sealed bid auction format where customers report their costs, their values, directly to the auctioneer, in a clock auction, the customers face clock prices that weekly increase over time, and they can drop out whenever these prices get too high. To see an example using our plane ticket scenario, let's say the auctioneer starts with a price of $100 for all customers. The prices could raise uniformly but need not, because since the prices are not per ticket, they're rather the cost of being served. Since the green family is the most restrictive, since they need four seats, it probably makes sense to raise their clock faster than the other families. And as I mentioned, at some point in the auction the price offered to some customer will become too high, in other words, more than their private value. In this example, this has happened for the yellow family, but then, since the prices are weakly increasing, they can easily verify that they're never going to want to pay the price ever again, so they can permanently reject the offer and exit the auction. And this auction will continue, causing more customers to exit, as Gray does now, until we're left with a feasible set.
00:05:33.174 - 00:06:27.744, Speaker A: In this case, since blue and green can be served simultaneously, the auction terminates and they're charged their most recently accepted clock offer, 350 for blue and 550 for green. Clock auctions are desirable to use in practice because they address the issues with sealed bid auctions we mentioned before, we have better incentive properties, since clock auctions are not just strategy proof, but are obviously strategy proof. You simply compare the asking price to your value, and you exit when the price gets too high. Clock auctions are also group strategy proof, meaning that they're robust to coalitions of strategic bidders, all working together. Clock auctions also don't require any trust in the auctioneer. They're totally transparent and credible. And finally, clock auctions offer privacy, since the winning customers never have to reveal their true values to the auctioneer.
00:06:27.744 - 00:07:29.414, Speaker A: And while I don't have time to present them fully, all of these notions here have formal theoretical definitions, and one can prove that if you want all of these properties, you need to design a clock auction, as this combination of properties is unique to them. And finally, from an algorithmic design perspective, clock auctions are more restrictive, but they do offer a clear path to designing practical auctions, simply design the price trajectories. But this itself is an interesting algorithmic question. In each round, how do you choose which prices to increase? And that brings us to our central question. If we look at clock auctions as approximation algorithms, what are the worst case guarantees we can achieve? So let's try to answer this question by turning towards the design of deterministic clock options. I'll first talk about the known lower boundaries, and then I'll talk about our auction in this work, which matches this bound. But first, let me take a few moments to formally define the setting.
00:07:29.414 - 00:08:46.736, Speaker A: We have a set n of n bidders, and each bidder has a value vi greater than or equal to zero for being served. Then we say that the social welfare of sumset, as we said before, is just the sum of the values of the bidders in that set. But of course, as we saw in our flight example, there's a feasibility constraint dictating this collection of sets that can be served simultaneously. And this feasibility constraint, f, is downward closed, which means that if s is in f, then t is an f for all t that's a subset of s. And this downward closed feasibility constraint actually captures many different natural scenarios. Right? This knapsack constraint, like in our flight example before, where we have a capacity constraint and bidders have a size that they need for being served, or the well known combinatorial single minded, single minded bidders in a combinatorial auction where there are m heterogeneous items and bidders each want some bundle of items and two bidders conflict if they overlap on some items. And since f is downward closed, f is uniquely defined by its maximal sets.
00:08:46.736 - 00:09:51.284, Speaker A: So we'll say that there are k of these maximal sets. Regardless, we'll say that the optimal set o is just the set of highest social welfare, and we'll say that it has size, little o, and we'll denote this optimal social welfare opt. Then we can say that an option achieves an alpha approximation if it serves some set whose social welfare is within an alpha factor of opt. And while we focus on value and social welfare here, also important in auctions is the payments that the bidders have the prices that they have to pay, which is PI for bidder I. And then we say that the revenue of a set s is just the sum of the prices. So initial results, which studied the performance of deterministic clock auctions were quite pessimistic. Simple examples showed a lower logarithmic lower bound in terms of the number of bidders n on the performance of clock auctions, and we'll see how simple this is shortly.
00:09:51.284 - 00:11:21.930, Speaker A: But since it was so simple for all we knew, complex instances could show even worse in approximability. But our main result is that the simple lower bound is in fact type. We design a deterministic clock auction, which we call the water filling clock auction, which achieves a log o approximation to the social welfare for any instance with a downward closed feasibility constraint. And since the size of the optimal set o is weakly less than the number of bidders n, we obtain a tight guarantee. But then also looking beyond this, we take first steps toward understanding the use of randomization in clock auctions, and design a randomized clock auction that breaks through the logarithmic lower bound for a wide family of instances which generalize the one that give this deterministic and approximability result. So before we see our auction, let's take a high level look at the deterministic lower bound to get a sense of what can go wrong in a clock auction, and what we'll have to deal with in the design of deterministic clock options. This initial result is due to duding its Allison rough garden in an EC 2014 paper, and they provided a really simple scenario where there are n one individual bidders who each want one seat on our plane and 1 gy family of bidders, 1 gy family consisting of n minus one people who need n one seats on the plane and we just have n one seats remaining.
00:11:21.930 - 00:12:00.660, Speaker A: In other words, we can serve at any combination of the individual bidders we like. But if we want to serve the gray family, we can only serve the gray family. And I want to point out just again how simple this is. There are only two maximal sets. The decision is almost trivial. You serve the entirety of the individuals or the gray family. And even though it's so simple, duding, Gonzales and Roughgarden showed that clock auctions can't even really perform well on this instance, because if the gray family has a relatively high value, we can't push their clock any further before we have to push the clock prices of the individual bidders.
00:12:00.660 - 00:12:51.954, Speaker A: And if these individual bidders have value that forms this harmonic shape. For example, as we raise the clocks of these individuals to try to learn the social welfare, they'll drop out one at a time and we'll never realize their high total social welfare. And this lower bound shows the central challenge in designing clock auctions. We can't gauge the total value of a set without necessarily losing bidders along the way. Indeed, the deterministic auction we propose achieves a logarithmic approximation on this instance, and it essentially follows the natural scheme where we increase clocks of low priced bidders not contained in a current best looking set. However, beyond this instance, it again provides a logarithmic approximation for any downward closed feasibility constraint. So let's take a look at it.
00:12:51.954 - 00:13:48.312, Speaker A: A high level our water filling clock auction, which is inspired by the doubling auction of babaya fatal in each round computes the set of the highest revenue given the current cloth prices, and increases the clock prices of all of the lowest priced bidders outside this current max rev best set. It then continues this process until all remaining bidders are feasible. Let's simulate this on the following instance with eleven bidders, and where each colored box corresponds to a maximal feasible set of bidders. In other words, the feasibility constraint is such that if a group of bidders are all contained in some box together, you can accept them simultaneously. So if we knew these values, we could obtain the optimal value of 15 obtained by serving the blue boxed set. But of course, we don't see these values in a clock auction. So let's say we start with all the bidders at some low price, let's say one in each round.
00:13:48.312 - 00:14:38.384, Speaker A: We'll keep track of the set producing the best current revenue Max rev, which is just the set with the highest sum of current clock prices of active bidders. In other words, since unlike an assailed bid auction, we don't see the true values and all we see are the recently accepted prices, we'll use some black box algorithm to maximize the revenue in each round. And since the bidder's most recently accepted price is a lower bound on her value, the revenue is a lower bound on the welfare. We obtain. In this case, Maxwell is four and it's produced by the blue set. So we increment the prices of all the bidders outside of blue with the current minimum price. In this way, we're slowly raising a water level price that all active bidders outside the current winning set must weakly exceed.
00:14:38.384 - 00:15:18.224, Speaker A: Bidders will drop out if their price offer exceeds their value and then will proceed to the next round. In this case, the revenue is six, produced by the orange set, and we increment the prices of all minimum priced bidders outside of the orange set. Note that these bidders in this case are all contained only in the blue box, since they were the only bidders below the previous water level of two. And I want to highlight that in each round this max rev is non decreasing. And this is really important to our analysis and it's quite easy to see. The key is that we only update prices outside the current winning set. So in each round we're securing the current revenue from the winning set.
00:15:18.224 - 00:16:05.798, Speaker A: Since we always have the option to keep this winning set the same between two consecutive rounds, we always have this revenue monotonicity within our auction. That is, the revenue earned by the water filling clock. Auction is always this weekly increasing auction, and in this case it's eight and it's produced by blue. And now I'm going to fast forward a bit through a few rounds until we get to the next interesting round. But you can notice that this revenue is always monotone increasing. So, just going a little bit further, I want to pause here and call attention to the fact that the bidder in the intersection of the two remaining sets will never have her price increased again, since she's always going to be contained in one of the two winning sets, either the green or the blue. And this follows our natural intuition, right, this is how an auction should look.
00:16:05.798 - 00:16:56.334, Speaker A: At this point. We'll know that we're always able to accept this bidder in the intersection, regardless of whether or not we choose blue or green. And since she's in both sets, raising her price doesn't actually help us distinguish which of these two sets is better. All it does is risk that she's going to depart the auction, which will just cause us to lose revenue. So I'm going to fast forward again a little bit further until we hit the end of the auction, where all remaining bidders are in a single feasible set. In this case, we'll serve these bidders at their most recently accepted prices of six and three, respectively. And the bulk of our paper shows that the water filling clock auction obtains a four log o approximation to the optimal social welfare for any downward closed feasibility constraint, where again, remember that o is the size of the optimal feasible set.
00:16:56.334 - 00:18:29.744, Speaker A: And moreover, if computing the optimal revenue in each round is hard, our auction also works even only given access to an alpha approximate algorithm for computing the revenue, where it instead will achieve a four alpha logo approximation. And at a high level, we prove these two things by leveraging the well known fact that the best revenue obtainable by offering all of the bidders in sumset the same price would yield revenue that's within a logarithmic factor of the welfare in that set through a carefully chosen invariant. We then demonstrate that because the water filling clock auction always holds aside the set with the best current revenue, and then approximately sweeps through all of these uniform prices by only increasing the lowest priced bidders outside this winning set, the welfare that the water filling clock auction obtains is close to or exceeds the uniform price revenue for all sets. And this is what gives us this sort of approximation guarantee. So let's now think moving beyond determinism, because we have an optimal deterministic clock option at this point. But what about randomness? And I want to pause on a question that is interesting and fundamental. How should one even use randomization in deciding what prices to raise in this class of algorithms? How do we use randomness? It's not obvious how to leverage the feasibility constraint and the price history to choose the right approach.
00:18:29.744 - 00:19:50.504, Speaker A: We suggest a simple and natural way in this paper to use randomization and provide an option that we call the hedging option, which gives improved guarantees in terms of the number of maximal feasible sets k. The hedging option obtains the better of a log o and a square root log k approximation to the optimal social welfare for any downward closed feasibility constraint f. And since the family of since the lower bound family comprises disjoint maximal sets, we have that this parameter k is less than n. So we obtain a square root log n bound for this family, breaking the logarithmic barrier for it on the other hand, we view this result as only the first step towards understanding randomization in clock auctions, because the best known lower bounds against randomized clock options are just small constants. So how do we obtain this first improved result? Well, one natural way to use randomization that has had applications elsewhere in mechanism design literature is to just randomly sample half of the bidders. So suppose in our instance before where we saw the water filling clock auction, we flip a coin independently for each bidder and for the bidders which we get aheads which we've marked in green. Here, these bidders are discarded, but we learn their value.
00:19:50.504 - 00:20:49.938, Speaker A: If this sample is representative of the social welfare in each set, then choosing to serve the remaining bidders in that set with the highest sample welfare should work slightly more precisely. If each set has roughly half of its welfare sampled and half of its welfare unsampled, then picking the set with the highest sample welfare should give us near optimal social welfare from the remaining unsampled pitt. So in this case, remember, the optimal social welfare was 15 and we would obtain seven. And I'll note that we can do this sampling procedure by using a randomized clock option, by raising the clock prices of the bidders that we choose to sample until they reject their most recent offer. So we've seen that. Or we've discussed that if the value is sort of distributed in each set between the sample and unsample roughly evenly, the sampling auction can work well. But it's not too hard to construct instances where this is just never going to be the case.
00:20:49.938 - 00:21:55.842, Speaker A: So what if instead of these values, the bidders instead had these values? We definitely want to serve the gray set here, right? It's huge compared to everything else, but if we sample the bottom left bidder, we're going to lose her value. On the other hand, if we don't sample the bottom left bidder, the gray set isn't going to look like it has very high welfare at all and we won't choose it. So the sampling auction can perform very poorly, essentially giving no approximation guarantee if the welfare in some set is highly concentrated on a few bidders. So we then propose a different option, which we call the hedging auction. And it's based on the idea that the water filling auction and the sampling auctions are complementary. We mentioned that the sampling auction can perform poorly when the bidders in some or with a value in some set are concentrated on a small number of bidders. But when does the WFCA water filling clock auction perform poorly? It fails essentially in the opposite cases when welfare isn't concentrated on a small number of bidders.
00:21:55.842 - 00:23:28.644, Speaker A: Right, we have this harmonic instance from the lower boundaries. But then the sampling auction should do reasonably well on this kind of instance. And indeed, the hedging auction, which runs either the water filling clock auction with probability one half or the sampling auction with probability one half, gives improved approximation guarantees, giving a sub logarithmic approximation for generalizations of the deterministic lower bound instances where, since the maximal sets are again disjointed, k is no more than n. Also, in recent work with Michal Feldman and Nick Gravin, we show that a tighter analysis of this hedging option actually gives a log log k approximation, which implies that an exponential improvement on this family of deterministic lower bound instances so in the last few moments, I just want to wrap up with a brief reminder of our main results and a question that we just think is totally fascinating. We first give a deterministic clock auction that is asymptotically optimal with respect to the size of the optimal set for any downward closed feasibility constraints, and we take a first step towards understanding the use of randomization in the design of clock options by proposing a really natural way to leverage randomization that ends up giving better approximation guarantees for a wide class of instances. But this does leave a natural open question. What approximations can be achieved with randomized clock options, even for general downward close settings? The best lower bounds we have are small constants.
00:23:28.644 - 00:23:42.144, Speaker A: So for all we know, a randomized clock option may indeed give a constant approximation for any downward closed setting. This would just be an amazing result. If true, and that's all I have. Thanks for listening.
