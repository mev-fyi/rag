00:00:02.320 - 00:00:50.872, Speaker A: Hi, my name is Nina Jagadisan, and I'm going to be talking about individual fairness and advertising auctions through inverse proportionality. And this is joint work with Chuchi Chawa. So there's been lots of evidence of SKU delivery in online advertising. So similarly, qualified people from different gender and racial groups can end up seeing differing amounts of ads in sensitive categories like housing and employment. So the first and most obvious source of unfairness is that the advertiser targeting is itself unfair. So what in particular? Maybe the advertiser targeting parameters are set to be unenclusive, or the individual advertisers bids look otherwise unfair in some way. So this source of unfairness can be directly audited by looking at each advertiser's behavior in isolation.
00:00:50.872 - 00:01:44.314, Speaker A: So the second source of unfairness, which is more subtle, is that the platform's allocation algorithm can create unfairness even when the bids are fair. So, to see this, consider the employment category. It's been demonstrated that there can be skewed delivery and employment ads, even when each advertiser targeting is gender neutral. Similarly, there can be skewed delivery and housing ads even when each advertiser's targeting parameters are inclusive. So the takeaway from these empirical studies is that unfairness can arise solely from the platform's allocation algorithm. So the goal of our work is to provide a fairness framework that eliminates the second source of unfairness. So we focus on eliminating the unfairness that's introduced by the platform's allocation algorithm.
00:01:44.314 - 00:02:43.584, Speaker A: So, to get some intuition for why the platform's allocation algorithm can introduce unfairness, let's consider the following example. So suppose that there are two users, Alice and Bob, and two advertisers, both in the category of employment. So let's say one of the advertisers is a big tech company and the other advertiser is a startup. So let's say that both the big tech company and the startup bid very similarly on Alice and Bob. But the big tech company slightly prefers Alice to Bob, and the startup slightly prefers Bob to Alice. So if the platform runs, allocates each Alice's ad slot to the advertiser that bid highest on Alice, and allocates Bob's ad slot to the advertiser that bid highest on Bob, then we would see that Alice would see the big tech company ad and Bob would see the startup ad. So in this sense, the highest bid wins auction can exaggerate small fluctuations in bids.
00:02:43.584 - 00:03:38.580, Speaker A: So we show that this exaggeration is not just theoretical, but can actually be seen on real world data. So in particular, we looked at the Yahoo ads dataset and demonstrated that the highest bid wins auction is unfair even when each advertiser bids fairly. So we're going to provide a formal definition of unfairness in a couple of minutes. So for now, the x axis basically parameterizes the level of unfairness in the bids, with one being corresponding to the bids being totally fair and higher levels corresponding to some unfairness in the bids. And the y axis corresponds to the level of unfairness in the allocation. So what we see from this figure is that even when the bids are very, very close to perfectly fair, there can still be substantial unfairness in the allocation. So this sort of demonstrates issues with the highest bid wins.
00:03:38.580 - 00:04:25.804, Speaker A: These standard auction formats like the highest bid wins auction, and demonstrates ways in which standard auctions can introduce unfairness into the allocations. Okay, so let's look at the model that we study in this paper. So we study ad auctions in the online setting. So there's a universe of users that arrive sequentially, and each of k advertisers has evaluation for every user. So every user corresponds or is associated with this vector of k values corresponding to how much each advertiser values that user. So the auction allocates a single slot per user. So we can think of a user as being assigned a distribution over the k advertisers.
00:04:25.804 - 00:05:35.884, Speaker A: We assume that the allocation rule satisfies weak monotonicity so that it can be implemented in an incentive compatible fashion. And we kind of measure the performance of an allocation rule using social welfare. So this is the sum, or the expected value of over the distribution of the auctions allocation of how much the advertiser values the user to slot that we're considering. And then we sum this over all users. So the benchmark for social welfare is the unfair optimal, which corresponds to the max value of an advertiser who bids on a given user. So this would correspond to what would happen if the maximum possible social welfare of any allocation role. So our goal in this work is to design ad auctions that don't introduce unfairness and investigate trade offs between fairness and social welfare in this online ad auction setting.
00:05:35.884 - 00:06:32.916, Speaker A: Okay, so there's been a lot of related work about fairness and ad options, fairness in other settings, and also some work on trade offs between fairness and social welfare in the context of classification. So let's kind of define the fairness constraint that we study more formally. So we consider a fairness constraint that expressed as a stability condition. Our starting point is individual fairness, which stipulates that similar users obtain similar allocations. So we think of this as a stability requirement. If two users have similar values from all advertisers, then they should receive similar allocations. The motivation for this is, recall that we're focused on the unfairness introduced by the ad auction platform, and we assume that we've audited away audited advertiser bids to ensure that they're fair.
00:06:32.916 - 00:07:41.940, Speaker A: So now the point is, if we have two similarly qualified users, then we, after this auditing process, the advertisers will have been forced to bid similarly on these two users. And now the stability requirement is guaranteeing that the platform ad auction is actually producing similar allocations for these users. So, notice that this stability requirement doesn't require explicit specification of the fairness metric, and infers everything it needs to know, kind of from the advertiser values. So we view this as one sort of advantage of this formulating fairness as a stability requirement. Okay, so to define this formally, an allocation is value stable if, with respect to a function that maps one to infinity to zero to one if the following condition holds for every pair of users. So what we require is if the two value vectors for the users are multiplicatively close, then the allocation vectors need to be additively close. So in particular, let's say that each advertiser bids within a factor of lambda on the two users.
00:07:41.940 - 00:09:03.920, Speaker A: Then we require that the allocation that each advertiser receives on the two users is the difference between these two allocations probabilities is at most f of lambda. So this function f is parameterizing sort of the strength of the value stability condition. So we think of this as it takes as input some multiplicative difference, and specifies the maximum allowable additive difference in the allocations. So the reason that we specify closeness in values multiplicatively is that it's scale invariant. And the reason that we specify closeness in allocations additively is this sort of aligns with the spirit of individual fairness and also captures the probability that a user would actually, that the two users actually end up seeing different ads. Okay? So essentially, if the platform uses an value stable allocation rule, we view this as sort of guaranteeing that the auction itself does not introduce any further unfairness other than what might be present already in the advertisers bits. Okay, so let's kind of get a sense of what types of families of value constraints are informative and reasonable to consider.
00:09:03.920 - 00:10:20.314, Speaker A: So in particular, consider this family of value stability constraints parameterized by lift, um, f of, where given by f of l of lambda is one minus lambda to the negative two l. So here we see that when l gets really close to zero, this is a very strong value stability constraint. It's essentially saying that even when the, when the values are pretty far multiplicatively, the constraint on the allocation differences is pretty strong. On the other hand, as l goes to infinity, this curve becomes much, the value stability constraint becomes much less strong. So even when the allocation value or the value vectors are close multiplicatively, the stipulation on the allocation vectors is not very strong. So in this family here, al parametrizes the strength of the value stability constraint. And in general, you should think of the reasonable value stability constraints as any sort of function that's increasing and interpolates between zero and one in this way.
00:10:20.314 - 00:11:31.264, Speaker A: Okay, so now that we've defined the model and the framework, let me give an overview of our algorithmic results. So we examine the trade off between value stability and social welfare. And our main contribution is a family of value stable auctions that achieve a constant fraction of the social welfare compared to the unfair optimal. So in particular, this sort of induces a pretty low cost of fairness, and this guarantee holds this constant fraction of the social welfare is obtained regardless of the number of advertisers in the system. In particular, we also show that our auctions actually achieve near optimal trade offs between value stability and social welfare under fairly mild assumptions. We also extend our results to stronger notions of fairness on subsets of users. And also when there are multiple categories of ads, when the fairness definitions should look a little different, then we also, in addition to these theoretical results, provide experiments on the Yahoo data set and show that illustrate the performance of our family of ad auctions.
00:11:31.264 - 00:12:31.964, Speaker A: Okay, so for the remainder of the talk, I'm going to be focusing on these value stable options that we design and the properties that they have. Okay, so let's just kind of recall what the value stability condition says. So essentially recall that it requires that if two value vectors are multiplicatively close, then the allocation vectors need to be additively close. In particular, their difference needs to be bounded by f of lambda. And this is kind of an l infinity condition on the allocation vectors. We require this for every advertiser, and we measure the performance of our allocation algorithms by measuring the social welfare in comparison to the unfair optimal. So this is basically we sum over all users, look at the social welfare obtained on each user, and then divide by this benchmark, which is kind of the sum over users of the maximum value that any advertiser places on that user.
00:12:31.964 - 00:13:13.006, Speaker A: So the goal here is to design value stable allocation algorithms that achieve a near optimal approximation ratio. Okay? So essentially what value stability is requiring is some kind of a smoothness condition. So recall that the highest bid wins auction. Kind of exaggerated these small differences in the bids. Value stability is essentially requiring that, um, these, uh, sharp forms of exaggeration. Um, and disallowing these sharp forms of exaggeration. Okay, so a first attempt at defining, um, value stability or value stable ad options would be proportional allocation.
00:13:13.006 - 00:14:11.204, Speaker A: So the idea here is just set the allocation proportional to the values. So, um, the allocation here, um, for a given advertiser is how much that advertiser values the user divided by the sum of how much all of the, each of the advertisers values that user. So it's not difficult to show that value stability does hold for proportional allocation. With respect to this function, f of lambda equals one minus lambda to the negative one, which was in that family of value stability constraints that I mentioned before. However, the main problem with proportional allocation is the approximation ratio. So the problem here is that the approximation ratio actually goes to zero as the number of advertisers goes to infinity. So, to see that, consider a value vector with one high bid and then a bunch or one high value and then a bunch of small values.
00:14:11.204 - 00:15:23.094, Speaker A: So we see here that essentially as k goes to infinity, the allocation that the proportional allocation places on the value one is going to zero. So as a result, this approximation ratio is going to zero. So this problem actually persists for any allocation rule that allocates proportionally to a function of the values. So this is even if we sort of consider a more general class of allocation algorithms, where we take a function of values and then allocate proportionally to the function of the values, we, we would still have this problem as k goes to infinity. So this sort of demonstrates that to get a good approximation ratio when the number of advertisers is large, we need to move outside of the family of proportional allocation algorithms. So our main contribution from an algorithmic perspective is this family of inverse proportional allocation algorithms that sort of addresses this problem. So the core idea here is to, rather than allocating proportionally to the values, deduct proportionally to the inverse of the values.
00:15:23.094 - 00:16:33.334, Speaker A: So start by allocating the ad slot to every user, and then deduct proportionally to the inverse of the values, and keep kind of deducting until the sum of the allocations across all advertisers is one. Here, at some point, if advertiser places a particularly low value on the user, they might hit zero. So we keep deducting, remove advertisers as soon as their allocation hits zero and then continue deducting. We can write this as setting t so that the sum of max zero and one minus t over the value is equal to one. So although it's not clear from the way I described the algorithm here, we show in the paper that t can actually be computed efficiently, and so we can have a more an efficient implementation of this algorithm. So let me give an overview of the performance of inverse proportional allocation. So the first property is that it achieves an approximation ratio of three.
00:16:33.334 - 00:17:12.584, Speaker A: So this is regardless of the number of advertisers in the system. The idea here is deducting proportionally to the values. Is this by doing so, we're sort of able to eliminate these really low advertisers that place really low values on the user. So this is able to provide much stronger approximation ratio guarantees than proportional allocation. And then we also show it it achieves value stability. For this function, f of lambda equals one minus lambda to the negative two. So this is, in particular within our family of allocation algorithms.
00:17:12.584 - 00:18:19.736, Speaker A: So the takeaway here is that inverse proportional allocation achieves value stability and a high social welfare, even as k goes to infinity. So from this perspective, it's achieved significantly better trade offs between value stability and social welfare than proportional allocation. Okay, so, um, we, I've kind of described inverse proportional allocation for, uh, that is tailored to a particular value stability constraint. But we have a more, uh, general formulation of inverse proportional allocation that allows us to interpolate across, um, a family of value stability constraints. And in particular, and actually, um, it is near optimal for any value stability constraint in some sense. Okay, so the general formulation of inverse proportional allocation is to deduct proportionally to a function of values, rather than just deducting proportionally to the inverse of the values. So the idea here is that we set t so that the sum from I equals one to k of the max of zero, and one minus t times g of the advertiser's value is equal to one.
00:18:19.736 - 00:19:27.044, Speaker A: So we can think of this in the picture as sort of, uh, replacing the arrows where we had t divided by v with t divided by g of v. So, um, we show that if we set g of x to be one minus x to the power l, then this, um, inverse proportional allocation algorithm is actually value stable with respect to f of lambda equals one minus lambda to the negative two l. So, uh, if we kind of remember that family of value stability constraints that we considered at the beginning, this sort of associates an inverse proportional allocation algorithm with every single function in that family. We also show that inverse proportional allocation with one over x to the power l achieves an approximation ratio that depends on l. So as l gets larger, this approximation ratio gets larger, and we see that this does not depend on the number. This bound on the approximation ratio does not depend on the number of advertisers. So it holds even as the number of advertisers goes to infinity.
00:19:27.044 - 00:20:41.842, Speaker A: So let's kind of, to get some intuition for this result, consider the limiting behavior. So as l goes to zero, inverse proportional allocation with g of x equals one over x to the l. The algorithm actually approaches equally allocating across all advertisers. And in this case, the approximation ratio guarantee goes to zero, and the value stability constraint becomes maximally strong as l goes to infinity, inverse proportional allocation with one over x to l sort of approaches allocating to the advertiser who values the user most. So now the value stability constraints become weaker and weaker, and the approximation ratio approaches one. And that point when we did inverse proportional allocation with one over x, we got a good value stability constraint and also a constant fraction of the social welfare corresponding to three fourths approximation ratio. Okay? So within the family of value stability constraints described here, we actually show the inverse proportional allocation with the appropriate function g achieves the optimal approximation ratio as k goes to infinity.
00:20:41.842 - 00:21:59.504, Speaker A: So in this sense, inverse proportional allocation is optimal for this family of value stability constraints. We also showed that it's near optimal for general value stability constraints. So if we take a value stability constraint satisfying a very mild condition, there exists an inverse proportional allocation algorithm that's value stable with respect to that function and achieves a near optimal worst approximation ratio in comparison to, um, any algorithm that's value stable for that function. So, in particular, if we take lambda of x to be the optimal approximation ratio, um, for allocation rules that are value stable with respect to f, IPA achieves, um, a worst case approximation ratio of lambda f divided by one plus log, uh, one over lambda, one over lambda f. So in this sense, um, inverse proportional allocation is kind of achieves near optimal trade offs between value stability and social welfare. So let me give a proof sketch of the approximation ratio theorem, and then I will give a proof sketch of the value stability theorem and the proofs of these theorems, and also the proofs of the optimality. Results are in the paper.
00:21:59.504 - 00:23:24.190, Speaker A: Okay, so let's first kind of investigate the approximation ratio of inverse proportional allocation. So consider, um, values that are, let's just assume without loss of generality that the um, the values are um, in decreasing order. And assume without loss of generality that the first advertiser values, um, this user one. So now um, the optimal social welfare is one. So now if we, the approximation ratio is just kind of the sum for I equals one to k of the value the advertiser I places on the user times the allocation that the algorithm places on advertiser I. So we can kind of lower bound this by the allocation that the algorithm places on the first advertiser plus however much, however much allocation that the algorithm places on advertiser m, where Microsoft is the last advertiser who achieves a non zero allocation times one minus the allocation that the algorithm placed on advertiser one. So just to repeat this, suppose that the algorithm places nonzero allocations on the set of advertisers one to m.
00:23:24.190 - 00:24:20.954, Speaker A: And it's not difficult to see, based on the properties of the algorithm, that the set of advertisers receiving non zero allocations is of this form. So the idea here is um, that we can truncate at uh, m since advertisers below m don't contribute to the social welfare. And then um, we uh, can get this kind of lower bound on the social welfare. So now we can kind of use the stopping condition of the algorithm and the fact that it uh, assigns non zero allocations to advertisers in one to m to explicitly write down what the allocation to advertiser one looks like. Um, um, and we can relate that to um, the value that advertiser m. So the, the lowest valued or the, the advertiser was the lowest value on the user, but still receives a non zero allocation. And when we kind of rearrange this, we can um, obtain the desired result.
00:24:20.954 - 00:25:41.024, Speaker A: Okay, so um, to give a sense for why the uh, inverse proportional allocation satisfies value stability, the idea is we need to analyze how the allocation rule changes when the value vector changes by some factor lambda. The high level approach here is for a given value vector, find a value vector that's multiplicatively close to this value vector and changes the allocation by the maximal amount. So once we've identified this value vector, we want to bound the corresponding change the allocation. So why is this hard? The challenge is that the set of advertisers that get nonzero allocations changes with the value vector, and it's difficult to pin down exactly what the set of advertisers is in a clean way. So the idea in our analysis is to construct modified allocations where these sets kind of align better. So the idea is these modified allocations are no closer than the true allocation. So bounding the difference between these modified allocations gives us a bound on the difference between the true allocations.
00:25:41.024 - 00:26:57.474, Speaker A: And we prove that the modified allocations are within f of lambda of each other. So the property that these modified allocations have is that we can compare the set of advertisers that get nonzero allocations much more easily, and we kind of truncate the algorithm, get it to stop earlier, so that these sets are more comparable across the two value vectors. So the details of this proof are in the paper. So that kind of gives some intuition for why inverse proportional allocation gets a good approximation ratio and why it satisfies value stability. So to conclude, I'm going to briefly mention some of our experimental results on the Yahoo ads data set at a high level. So first, what we showed is on this data set, inverse proportional allocation is indeed value stable across the full spectrum of parameters l. So we looked at inverse proportional allocation with g of x equals one over x to l, and plotted some form of these value stability constraints, and kind of showed that as l gets larger, the auctions get less value stable, but they still satisfy some non trivial value stability guarantees.
00:26:57.474 - 00:28:08.436, Speaker A: The second thing that we showed on the Yahoo ads data set is that inverse proportional allocation actually outperforms proportional allocation whenever there are three or more advertisers. So in our theory result, we focused on this limiting case where the number of advertisers went to infinity, showed that proportional allocation had a zero approximation ratio, but inverse proportional allocation had a constant approximation ratio. What we are able to show on this data set is this is actually kicking in even when there are just three or more advertisers bidding on the user. So we provide the full experimental setup and more experimental results in the paper. So to conclude, we considered fairness in ad options, and our goal was to design ad options that don't create unfairness in the allocation. So to do so, we proposed value stability, which kind of was formulating fairness as a stability requirement, and guaranteed that if the values are multiplicatively close, then the allocations are additively close. And this sort of allowed us to hone in on the unfairness created by the platform.
00:28:08.436 - 00:28:54.744, Speaker A: And using this formulation of value stability, we designed the family of inverse proportional allocation algorithms that achieved a constant fraction of the social welfare compared to the unfair, optimal and near optimal trade offs between fairness and social welfare. And our results also extend to subset fairness, which is kind of a stronger fairness notion, as well as fairness, um, in more complicated systems that have multiple categories of advertisers. So at a high level, um, our work kind of disentangled the task of ensuring fair inputs from guaranteeing that fair inputs, um, lead to fair outputs. And we hope that this, uh, two step procedure can be, uh, adapted in more generality. Thank you.
