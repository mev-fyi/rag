00:00:00.400 - 00:00:49.364, Speaker A: Speaking. Next is Ryke Dressler. Thank you James, and thanks to all the organizers for giving me the chance to speak today. So my talk is about optimization over the hypercube via sums of non negative circuit polynomials. And this is joint work with Adam Kurpich and Timo Devolve. And since the audience is really diverse, I thought I also spent the first couple of slides by just setting some really, really basic background and context. And then I will introduce sums of non negative circuit polynomials, and I will give you an overview of constraint polynomial optimization with these polynomials.
00:00:49.364 - 00:01:53.914, Speaker A: And after that we will tackle optimization over the hypercube. Okay, so the underlying problem of my talk is a constrained polynomial optimization problem. That is, we have real multivariate polynomials f and a bunch of g, one to g's, and we minimize the polynomial f subject to the set k, in which every polynomial Gi is non negative. So k is the basic closed semi algebraic set defined by the polynomials gi. And the optimal value of this problem will be denoted with FK star. And clearly this optimization problem is equivalent to finding the largest real number lambda such that f minus lambda is non negative for all x and k. So the non convex optimization problem can be reduced to the question of deciding non negativity of a polynomial over a certain set.
00:01:53.914 - 00:03:17.324, Speaker A: And this is a key challenge in real algebraic geometry with a wide range of applications like in robotics, control theory, economics, theoretical computer science, and so on. And although this problem is decidable, it is well known that it is in general np hard. And therefore one is interested in finding sufficient conditions to certify non negativity, which are easier to check, so called certificates of non negativity. And you all know the standard example for such certificates, namely sums of squares, because obviously if you can write a polynomial as a sum of squared polynomials, then this polynomial is non active. But it is even better than that, because I can also test if a polynomial is a sum of squares and even find decomposition as well as decompositions via semi definite programming. And semidefinite programming is a convex optimization problem which we just saw that can be seen as a generalization of linear programming and how an so's can be cast as a semi definite optimization problem. We also already saw yesterday, I think it's James talk.
00:03:17.324 - 00:04:20.522, Speaker A: So let's get back to constraint polynomial optimization problems. How do we solve these problems? And the good news here are that there exist various positive stanza and relaxations to tackle these kind of problems in many cases. And these methods were studied intensively by means of aspects like exactness and quality of the relaxations, the speed of the computations and general geometric aspects of the underlying structures. And a very famous approach for solving CPOPS is lacers relaxation. So what is that? I will give you the dual formulation with polynomials. So we relax the non negativity condition to an SO's condition. And this so's formulation is given by Puttina's positive Stensatz.
00:04:20.522 - 00:05:57.094, Speaker A: So we have here that the polynomial can be written as a sum of products of So's polynomials and the constraints gi and bounding the degree of the involved polynomials gives us the parameter f so sd, which converges when we let go d to infinity to the optimal value fk and finding a degree d so's certificate can be done by solving an SDP of size and to the odd. And for solving sdps there exist various software. So I listed here a few Sudumi allmep, SDP t, three mosec and many more. But from the practical point of view, it is also known that solving semi definite programs is very time consuming. So the corresponding semi definite programs quickly get very large in size, which often is an issue for problems with high degree or many variables. And also it is an open problem still, if an SDP of size n to the ot really can be solved in time n to the od. And to tackle these issues, current research focuses mainly on creating better solvers and exploiting additional structures like symmetry and sparsity.
00:05:57.094 - 00:06:47.592, Speaker A: And in contrast, our idea is to use other non negativity certificates independent from these classical so's certificates. And before I get more into depth, let me fix some notations. So we are working here over r x sub n 2d. This is the vector space of real polynomials and n variables of degree at most 2d. In this space we have the cone of non negative polynomials, denoted by p n. In this cone there lives the cone of sums of squares sigma n 2d. Okay, now let's talk about sinc polynomials.
00:06:47.592 - 00:08:20.444, Speaker A: The main actor for these polynomials is a circuit polynomial. A circuit polynomial is supported on a finite set a and has this specific form and meets some special conditions on the support, which I want to explain line by means of this picture where you can see the support plotted as these red dots and the blue square. So first, the Newton polytope of this polynomial is a simplex with even vertices alpha j. So these red dots here belonging to these exponents alpha j and these are even vertices, means that all alpha j are even. And as you can see, this Newton polytope of this polynomial coincides with this convex hull of the support of this polynomial and we have one additional interior point, this beta lying strictly in the interior of this simplex. That means we can write beta uniquely as a convex combination of the vertices and these lambda j, which are the barycentric coordinates relative to the vertices. And the third condition is a necessary condition for f to be non negative, namely that the coefficients here corresponding to the vertices of this simplex have to be strictly positive.
00:08:20.444 - 00:09:07.234, Speaker A: So in short, a circuit polynomial is a polynomial who supports forms an even simplex with one additional interior point. And the term circuit is chosen since the support set forms a circuit which is a minimally affine dependent set. And an example of such a polynomial is the famous motzkin polynomial, which is the first polynomial found to be non negative but not So's. So let's take a look at the support here. And in fact this little picture shows the support of the Motzkin polynomial. So we see, yeah, it meets all these three conditions. So it is indeed a circuit polynomial.
00:09:07.234 - 00:10:19.128, Speaker A: And for every such circuit polynomial we can define the so called circuit number as this product, where in the numerator are the coefficients corresponding to the vertices of the simplex, and in the denominator and the exponents there are the relative barycentric coordinates. So this number can be derived by the initial circuit polynomial immediately. So if you give me a circuit polynomial, you can easily compute this number. And the key fact now is that testing non negativity of circuit polynomials can be done easily via this number, namely with this condition here. And by easily I mean we only have to solve a system of linear equations. Okay, then writing a polynomial as a sum of non negative circuit polynomials, abbreviated as song, gives us a certificate of non negativity. And let's define the set of song polynomials more formally.
00:10:19.128 - 00:11:50.934, Speaker A: So we will denote it with cn to d, and it consists really of all polynomials and n variables of degree at most to d, which can be written as a sum of non negative circuit polynomial. And we can say even more. Namely this set is indeed a convex cone clearly living inside the non negativity cone. And if we compare the so's cone with this new song cone, we see that these two cones intersect but not contain each other. And in more detail, the song cone only lies in the so's cone in these cases, so in the univariate case, in the quadratic case, and four binary quartics, which are exactly the Hilbert cases where the so's cone coincides with the non negativity cone. And on the other hand, the song cone doesn't contain the so's cone in these cases, so for all grades larger or equal than four, and for variables with more than two terms. And an important result about song polynomials and the song cone is that it is fallen dimensional in the non negativity cone, because this is a necessary condition to establish song polynomials as a certificate, which is really useful in practice.
00:11:50.934 - 00:13:57.424, Speaker A: And now I want to mention two properties which are in strong contrast to so's to the so's cone, namely, on the one hand, the song cone is not closed under multiplication and also not closed undertaking a fine transformation of variables. And from an optimization perspective, the second condition says that a problem formulation obtained by an affine transformation of variables may lead to a problem of different tractability with the sonc methods, which means, on the one hand, that a representation of the problem has to made very carefully. So this makes the process of algorithm design more demanding. But on the other hand, even a small change in representation can lead to a song certificate or simplify an existing one. Note maybe in this context, that every affine transformation of variables applied to, for example, the Motzkin polynomial never leads to an So's certificate, since the so's cone is closed under affine transformation of variables. Okay, so in sum, we have here a really as well as independent new cone which lives inside the cone of non negative polynomials. And now the question is, how can one check efficiently whether a polynomial has such a strong decomposition? And this brings us back to constraint polynomial optimization.
00:13:57.424 - 00:15:04.804, Speaker A: So we already saw the so's SDP approach for this problem, and now we would like to have an approximation for Fk with song polynomials. So we would like to relax this non negativity condition somehow to a song condition. And the, I would say the key strength of la sers relaxation is that it deals a converging hierarchy, hierarchy converging to our optimal value. And to guarantee such an So's certificate, it uses putinas positive stanzas. So one could hope to translate maybe the proof of Putina's positive stanzas into the song world. But unfortunately this is not possible, since the song cone is not closed under multiplication. So we cannot form something like a quadratic module for song polynomials, which we would have to have for proving such a positive stanzas by Puttina.
00:15:04.804 - 00:15:59.964, Speaker A: But there also are good news. Namely, we can use abstract positive stenzas from real algebraic geometry, namely Krivin's positive stanza, to obtain, I would say, schmidgen like positive stanza for song polynomials. And what is that? This gives us a representation of our polynomial as the sum. So here we have a product of sinq polynomials and products of the constraints. So putina would be linear, would be linearly in the constraints. But here we have to use really products of the constraints. And for those who are a little bit more familiar with this topic, an analog positive stanzas was given by Chandrasekaran and Shaw for zygnomials via the so called sums of arithmetic geometric exponentials.
00:15:59.964 - 00:17:16.060, Speaker A: Okay, so now we can also define a parameter f as the largest number gamma, such that f minus gamma has this representation as given by the positive standards. And in addition we bound the degree and obviously this parameter gives us a lower bound for Fk based on the maximal allowed degree in the representing polynomials, and it grows monotonically in d. So it really yields a converging hierarchy which is degree dependent to the optimal value of our problem Fk. So the provided hierarchy is really complete. Okay, and now last step, we want to compute this parameter with a suitable optimization program. And there are more good news, because we can do this via relative entropy programming. So remember, so's can be done via semi definite programming.
00:17:16.060 - 00:18:36.084, Speaker A: And here we have a relative entropy program. And what is that? So we have three variables, two of them are non negative, and we minimize a linear functional subject to linear constraints and such a conic constraint. And this conic constraint defines the relative entropy cone. And what is good about that is a relative entropy program is a convex optimization program due to the joint convexity of this function defining the relative entropy cone. And moreover we can solve them efficiently with interior point methods due to the existence of a computational tractable barrier function for the function defining the relative entropy cone. So, computing a degree d song certificate can be done by an explicit relative entropy program. And note this relative entropy program is of size and to the OD.
00:18:36.084 - 00:20:08.374, Speaker A: And now with this in mind, we want to tackle optimization over the hypercube. So we want to prove some complexity bounds, song complexity bounds over the hypercube. So let's consider a constraint hypercube optimization problem, which is a special case of a constraint polynomial optimization, where the feasible set is restricted to some of the vertices of the Boolean hypercube. And again, we are minimizing an n variate polynomial f regarding to some equality constraints, which are given by these quadratic polynomials with two distinct real roots, aj and bj. So these equality constraints give us the really general hypercube aj bj to the n. And why do we tag here this really general hypercube? Remember, the song cone is not closed under affine transformations of variables, so we really have to prove things here in a very, very general setting. Okay, so we have these equality constraints, and then we additionally constrain the hypercube with some inequalities PI.
00:20:08.374 - 00:21:47.374, Speaker A: The feasible set will be denoted with curly hp. So the n dimensional hypercube h constrained by a bunch of polynomial inequalities given by curly p, which is the set of these PI. And this class of optimization problems really lies at the core of theoretical computer science, because we can, for example, cast Maxcut or sparset cut problem, or the maximum constraint satisfactional problem as this kind of constraint hyper cube optimization problems. And the main idea here in this world is to find certificates with good complexity in the number of variables n and the maximal total degree d. And what is known about so's complexity for the Boolean hypercube. So here we know that every feasible n variate constraint hypercube optimization problem with constraints of degree at most d, there exists a degree two n plus 2d so's certificate. And we already saw, or I think I already mentioned, that finding a degree d so's certificate for non negativity of a polynomial f on the constraint hypercube can be performed by solving an SDP of size n to the OD.
00:21:47.374 - 00:23:42.154, Speaker A: And this is why the corresponding gramion matrix is of this size. And since every real symmetric matrix which admits or which is positive semi definite admits a Cholesky decomposition, this yields also an explicit so's decomposition with at most n to the od squared polynomials. So these are results known results about the So's certificates. And now we prove that analogous results also hold for song certificates, namely for every polynomial non negative over the constraint hypercube with inequalities of degree at most d, there exists a degree of n plus d song certificate. And for an n variate polynomial which is non negative over the constraint hypercube, we have the result that if there exists a degree d song certificate, then there also exists a short degree d song certificate involving at most n to the OD many non negative circuit polynomials. So we can reduce ourselves in such a degree d song certificate really to end to the OD, many non negative circulars. And we show these results under the assumption that the constraints PI, so the cardinality of the set p is polynomial in n, which is, I would say, usual the case, because otherwise the polynomial, the problem gets less tractable from the optimization point of view.
00:23:42.154 - 00:24:56.124, Speaker A: And the proof idea for the second statement is to really analyze such a song certificate for a polynomial, and then to note that one can bound the number of involving song polynomials and these product of the constraints in a certain way. So, which yields that we also have a bound for the whole number of terms, namely n to the OD. And I actually want to outline the proof of the first statement here. So we have the assumption that we have a polynomial f invariate, and this is non negative over the constraint hypercube of degree at most d. And then let's take a look at the proof. So, first step we develop a Kronecker delta function for songs on the hypercube. So that is, we define a function for every vertex of the hypercube as this product.
00:24:56.124 - 00:26:18.524, Speaker A: So this is a function of degree. Nice. And then we have to note two things. Namely, the term Kronecker delta function is really justified because this function takes zero for every vertex except v, and for v it takes the value one. And as the function is a product, or is a product of the constraints, it is also very obvious that we can write this Koneca delta function in this Schmidgen type, namely as a sum of products of non negative reals and products of the constraints Gmi. Then second step, we show that a polynomial invariant of degree 2d plus two, which vanishes on our hypercube, can be represented in this way. So as a sum of song polynomials times the constraints and the sum of song polynomials and the negative constraints.
00:26:18.524 - 00:27:24.994, Speaker A: And why is that so? First, it is known that a polynomial which vanishes over the hypercube admits such a representation, namely as a sum of products of some polynomials and the polynomials representing the hypercube. And then we really show that these pj jj are of this form here. And how do we do that? We look at these polynomials p and decompose them as a sum of monomials. And then we tackle really each monomial individually. And here we can see that if this monomial is a monomial square means that if a is positive and m has a exponent, an even exponent, then we are fine, because then this monomial is actually already a non negative circuit polynomial. So it is song. So we're done.
00:27:24.994 - 00:28:22.170, Speaker A: And otherwise we can add a non negative circuit polynomial having this non monomial square as an interior point. And then we can subtract the redundant monomial squares so the edges. So I add a circuit polynomial which has the right interior term. But then I have to get rid of the vertices of the simplex coming from the circuit polynomial. And the little trick is here that I can then push this minus sign from subtracting into the dj's, because I can take these minus gjs here in the representation. And then I only have to make sure that the involved degrees don't exceed. But there's also fine by construction.
00:28:22.170 - 00:29:53.494, Speaker A: So we know that a polynomial which vanishes over the hypercube can be written like this. And then third step, when restricted to the hypercube, I can write my polynomial in terms of the Kronecker Dalta function like this. So here I separate the vertices by if they lie in the constraint hypercube and the remaining one which only comes from the hypercube. And remember, we assume that our polynomial is non negative over the constraint hypercube, which means that this polynomial f evaluated at a point of the constraint hypercube, is non negative because we assume this. But there might exist an edge vertex here in the remaining vertices such that f takes a negative value at this vertex. And if that happens, then we let pv be a polynomial under the constraints such that although evaluated at this vertex, this polynomial takes a negative term and otherwise one. So we can prove that this polynomial can be really represented as the sum where here really every term is non negative.
00:29:53.494 - 00:31:15.824, Speaker A: Okay? And then you have to note that the right hand side is a polynomial of degree at most n plus d. So this might happen here because so the Kronecker delta function is of degree n and we assume that our constraints are of degree at most d. So the right hand side is really a polynomial of degree at most n plus d, and this is a representation over the hypercube. So f minus the right hand side vanishes over the hypercube. And then I can use the result from step two to represent my polynomial in this way, so really as the sum here, which is a degree at most n plus d polynomial. And this finishes the proof. Okay, and now I want to mention some findings about the about positive stanza.
00:31:15.824 - 00:33:29.254, Speaker A: Namely, after we presented our positive stenzatz, which is more like Schmutgen type, we asked if there also exists representation which is linear in the constraints. So putinar like positive stensatz. And we can answer this now in a negative way, because when working on this hypercube we found a function, namely this function here parameterized by a natural number a. This function admits this function is first positive, strictly positive, over the hypercube plus minus one, but unfortunately admits no putina like song representation, if the parameter exceeds this term here, and this function can be seen a little bit like a generalized Kronecker delta function, because at the all ones vector it takes the value one a and at all other vertices zero. So it's kind of geometrically obvious that if a then exceeds a certain number that this function does not have such a putinal representation because we the products okay, so and because this there are polynomials which don't have such a putina like song representation over the hypercube. We can also say that in general there exists no equivalent of putinas positive stenzatz for song polynomials, which does not say that maybe for special cases there might exist such a representation, but general not. I think it's time to wrap up.
00:33:29.254 - 00:35:49.954, Speaker A: So song polynomials provide a valid certificate for optimization over the n variate hypercube hp. Namely, we showed here that for a polynomial f, which is non negative on the constraint hypercube with degree at most d, there exists a degree n plus dsong certificate. And if f admits a degree dsong certificate over this constraint hypercube, then there exists also a short degree d song certificate for this polynomial involving at most n to the OD many non negative circle and let me conclude with some open problems. So we saw that solving or finding a degree Dsong certificate can be done by solving a relative entropy program of size and to the odd and now the question is if we also can do this in time and to the OD, namely if a small or if a short small degree certificate exists is not necessarily given that the polynomials in this representation also have small coefficients. And the difficulty is here that one really has to restrict the search space of Nvariot degree d song certificates to a subset of nt the OD to really be able to formulate a relative entropy program in time and to the OD. And the proof of the statement of the short song certificate only guarantees us that such a short certificate exists. But this means our priorities are now not clear how to find such a song certificate efficiently.
00:35:49.954 - 00:37:31.970, Speaker A: And then coming from the fact that the song cone is not closed under affine transformation, it would be very interesting to study its affine closure, because I mean, the affine closure strictly contains the song cone and still yields non negativity certificate. So it would be interesting to study this objective and also then to ask how can we compute such extended song certificates efficiently? So how to test membership then in this affine closure? Okay with that. Thank you. Does a fine closure contain so's polynomials of something? That's a good question. I don't think so, but one had to look into it. I think if your if the habakube is replaced by general finite variety, we have similar conclusions. So if hypercube is replaced by a finite variety, yeah.
00:37:31.970 - 00:38:04.304, Speaker A: Do we have similar conclusion working here on the finite. So I don't take the cube, I only take the verdices. Take any finite variety instead of the hypocuby. Yeah, yeah. Ah, sorry. Yeah, that would be also an open problem. So I think we have such things, but how exactly they look like in terms of the variable and the degree.
00:38:04.304 - 00:38:28.144, Speaker A: D. I would have to study this. Yeah, I guess we have a long break now. Let's think again.
