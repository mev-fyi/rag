00:00:00.280 - 00:00:08.354, Speaker A: The entertainment is about ready to begin. First talk of the final session of the day is by Johanina Ochremia.
00:00:10.894 - 00:00:43.308, Speaker B: Thank you. So, before I begin, I would like to thank the organizers. So first of all, I would like to thank the organizers of the program, logical structures in computation. So I was given the opportunity to spend the whole semester here, and it's absolutely great. And of course I would like to also thank the organizers of this workshop. I'm very happy to give a talk here today. So I will be talking about definable constraint satisfaction problems.
00:00:43.308 - 00:01:24.830, Speaker B: So, well, you all know what constraint satisfaction problems are. We already heard quite a lot about them today. There is also the notion of definability in the title of my talk, and this is definability in the sense that was defined by Mikoy during his talk on Monday. So, briefly, what my talk will be about is constraint satisfaction problems in the framework of definable sets with atoms. And the results that I will present today are joint work with Bardek, Klin, Eric Kopchinski, swaveklasota and Siemontoronczyk. Ok, so let me begin with reminding you the notion of atoms. So, in Micaway's talk, we had a choice.
00:01:24.830 - 00:01:59.644, Speaker B: We could actually decide for atoms to be any structure. So in my talk I decided to take the simplest possible option. So I will just assume that atoms are elements of some countably infinite set. So I just assume that atoms have no other structure than equality. So this is, well, natural numbers with equality. Well, from biko ice talk. Okay, so once we know what atoms are, let me give you an example of an instance of the kind of problems that we want to consider.
00:01:59.644 - 00:02:44.592, Speaker B: So let's think about an infinite undirected graph g. So this graph g has infinitely many vertices, the vertices are pairs of distinct atoms. So, well, whoops, ab, ad, et cetera, infinitely many vertices of this form. And we put an edge between two different vertices, a, b and bc, whenever we see a pattern like this. So for every three distinct atoms a, b and c, we put an edge between the vertices a, b and b c. So here you have a picture of some finite sub graph of the infinite graph g. And the question we are interested in, well, in this case is whether this graph is tricolorable.
00:02:44.592 - 00:03:29.024, Speaker B: So you can think about this as an instance of three colorability. The only difference, comparing to what we heard before, is that the instance is infinite. So, well, the first thing is that it's even not sure if we can actually decide such problem for infinite instances. But actually, well, the answer for this particular question is no, because this subgraph of the infinite graph g is not three colorable. Okay, so, well, let me briefly remind you notion of, well, the definition of the constraint satisfaction problem. So I mainly do it because I want to. So, well, as Libert told you, there are.
00:03:29.024 - 00:04:05.794, Speaker B: Well, and as you know, there are many possible you can formalize constraint satisfaction problems in many different ways. So I will in my I assume that this is the problem for, given a finite structure on input, decide whether there is a homomorphism from the finite structure I to the finite structure t. So this is the classical version of the constraint satisfaction problem. We have a fixed finite template. So a fixed finite relational structure. We are given a finite structure on an input, and we want to decide whether there is a homomorphism. And, well, we've already seen quite a few examples of this problem.
00:04:05.794 - 00:04:56.146, Speaker B: So, well, if the structure t is this structure, then this, then we can formalize trickolarability if the structure t is the structure with two elements, and, well, it's actually enough to have those two relations, then we can formalize solving linear equations over z two. Well, but as I told you, I will like in my talk, I will be interested in definable structures. So I will consider a variant of a constraint satisfaction problems where structures, instead of being finite, can be definable. So, well, you know the definition. Well, those of you who attended Mikowai's talk on Monday already know the definition of a definable set. So define. A definable structure is just a structure whose domain and all relations are definable sets with atoms.
00:04:56.146 - 00:05:59.854, Speaker B: But to make it a bit easier during this talk, I will assume that the domain of a definable structure is just a set of tuples of atoms, and relations are defined by first order formulae over, well that use only a quality. So, for example, the graph that we considered at the very beginning is a definable structure because its domain is just, well, sets of pairs of distinct atoms. Well, you see them, well, three of them here. And the edge relation is defined using this first order, well, this very easy first order formula. Well, equivalently, we can consider, we can talk about structures that are etho interpretable in natural numbers with equality. So I guess most of you are familiar with the notion of fo interpretability from model theory. So we've already seen one example of this.
00:05:59.854 - 00:06:48.286, Speaker B: So what do we modify in the definition of the constraint satisfaction problem? So the first modification that I want to consider is, instead of considering finite structures, we consider definable structures as an input. So the template, the fixed structure is still a finite structure. The only difference that I make is that instead of considering finite structures as an input, I take definable structures. Okay, so another, yes, okay, so, yeah, so we've already seen one example of this kind of problem. So three colorability of definable graph graphs. Here is another example. So, definable system solving definable systems of linear equations.
00:06:48.286 - 00:07:35.534, Speaker B: So I don't formalize this as a relational structure, but I guess you can all see that we can do it. So the template is this finite relational structures, and, well, an example of an instance is this infinite system of linear equations. So the variables are ordered pairs of distinct atoms. So once more, we have infinitely many variables, and we have two types of equations. For every pair of distinct atoms, a and b, we have an equation, ab plus ba equals one. And for every triple of distinct atoms, a, b and c, we have an equation of the type ab plus bc plus ca equals zero. So infinitely many equations of this form, and infinitely many equations of this form.
00:07:35.534 - 00:07:58.174, Speaker B: Well, and the question is whether this system have a solution. So this is a definable instance over this template. And actually, once more, this system does not have a solution because this finite subsystem of the whole infinite system already does not have a solution. Oh, actually, I don't know.
00:07:58.334 - 00:08:00.954, Speaker C: The smallest we know, yes.
00:08:02.934 - 00:09:11.924, Speaker B: Okay, so, yeah, so as I mentioned at the very beginning, it's not actually, it's not clear whether such problems are decidable, but, well, the first theorem that I want to talk about today is a theorem that says that actually, well, for every finite template t, the definable constraint satisfaction problem of the over this template is a def is a decidable problem. And actually, well, this theorem is in a sense even stronger because we can be given on the input a definable structure I and the finite structure t, and we can decide whether there exists a homomorphism from I to t. So, well, how do we do it? Well, obvious answer. We have to look for symmetric homomorphisms. So the lemma, which actually solves the problem says that for a definable structure I and the final structure t, the following conditions are equivalent. We have a homomorphism if and only if we have a homomorphism which is constant on orbits under the monotone permutations of atoms. So let me explain to you what it means on an example.
00:09:11.924 - 00:09:49.994, Speaker B: Well, our running example. So the graph that we, so this is just the finite subgraph of the graph that they defined at the very beginning. So how can we decide whether this graph is tricolorable using the lemma. So what we do is we fix some linear order on atoms, an order that is isomorphic to the order of rationals. Well, on the atoms that are mentioned on this picture, this can be, well, for example, a smaller than b, smaller than c smaller than d smaller than e. This is just like to make it easy. Well, it can be anything else.
00:09:49.994 - 00:10:25.244, Speaker B: So what happens if we fix this order? Well, before we have the order, the vertices are kind of the same. So? Well, formally there is just one orbit of the vertices under the action of or permutations of atoms. But once we fix the order, we get two kinds of vertices. So we have the vertices that are marked in black. So those are the vertices where the first coordinate is smaller than the second one. And we have those vertices that are marked in gray. So those are those vertices where the first coordinate is bigger than the second one.
00:10:25.244 - 00:11:26.506, Speaker B: So formally this means that we have two orbits under the monotone permutations of atoms. And actually for every definable instance, it's easy to see that you get finitely many orbits under the monotone permutations of atoms. And now our lemma says that if this graph is three colorable, then there exists a three color ability that assigns the same color to all vertices marked in black and the same color to all vertices marked in gray. And well, even from this finite subgraph, we already see that this is impossible. Okay, so, well, so once you see this, you can ask yourself, okay, but why do you bother to introduce the order? You already have an action of a group, you already have finitely many orbits. Like you can just consider all permutations. So why do you need to introduce the order? So it's easy to see that considering the action of the all of all permutations of atoms is not enough.
00:11:26.506 - 00:12:14.446, Speaker B: So let's consider this very well, kind of trivial infinite systems system of linear equations. So we have just so once more, we have infinitely many variables, pairs of distinct atoms, and we have just one type of equations, ab plus ba equals one. So this system is obviously solvable. We just pick one of those and assign one to this one and zero to this one, and we do the same for every pair of atoms. But if we think about all permutations of atoms, then we have just one orbit of variables. So of course there does not exist a solution which is constant on this single orbit. Once we introduce the order, we get two orbits.
00:12:14.446 - 00:13:18.300, Speaker B: And of course, well, if we assign just one to this orbit and zero to the other orbit, then we get a solution. So, well, it's not enough to consider orbits under all permutations of atoms. And actually the deeper reason is that we obtained this result using, well, either Ramsay theorem or some results from topological dynamics, which talk about, well, Ramsay structures. And this structure is not Ramsay. Okay, so once we got the decidability, we were interested in complexity. And actually already from the construction that from this lemma and from the, from how the decidability result goes, we can see that the complexity of this problem is at most exponentially bigger. So, the complexity of the definable constraint satisfaction problem over a finite template is at most exponentially bigger than the complexity of the corresponding constraint satisfaction problem for the finite template.
00:13:18.300 - 00:13:55.604, Speaker B: It turns out that actually this connection can be made tight. So if the constraint, if we have some template t and the constraint, so then the constraint satisfaction and the constraint satisfaction problem, the classical one over this template is c complete for some complexity class c, then the definable constraint satisfaction problem over the same template is x c complete, where. Well, I don't want to define formally what is the x, what is the class x, but. Well, this table gives you an intuition what it is. And for example, yes.
00:14:00.584 - 00:14:01.764, Speaker C: Should be the same.
00:14:04.224 - 00:14:08.364, Speaker A: So what all types of classes c could you consider?
00:14:11.504 - 00:15:02.864, Speaker B: So the reduction here are logarithmic, so you cannot get below and, well, and of course you don't need to get above NP. So, okay, so, and an example, well, we know that three colorability of finite graph is NP complete, which means that the three colorability of definable graph is next complete. Okay, so let me give back, get back to the definition of our problem. So this is the problem that we considered. So, finite template definable structure. Well, we understood this problem so, well, what is the next step? Well, we got interested in the question what happens if the template itself is a definable structure?
00:15:03.724 - 00:15:19.154, Speaker C: Before we do this, the attraction of CSP, classical CSP's that so many problems can model CSP's. When you go to the define of the CSP with a fixed template, what are some natural computational problems that could model?
00:15:20.174 - 00:16:05.494, Speaker B: So I would say that there is like, there is no natural computational problems. I think that on one hand, the motivation is that it seems to be, from the purely theoretical point of view, it seems to be a natural, like natural question to ask. And on the other hand, if you, if you want to. So this kind of infinite symmetric instances were considered before. And the motivation, I'm sorry, I don't remember the names. And the motivation was that sometimes you might have an instance which is, well, big enough so that like on one hand very big and on the other hand very symmetric. And then it's reasonable to assume that it's actually an infinite symmetric instance.
00:16:05.494 - 00:17:24.484, Speaker B: But you're right, it does not have such, well, such, well, motivations, practical motivations. Okay, so, okay, so now our question is, what happens if both the template and the instance are definable structures? And it turns out that this problem is also decidable. And well, as before, it's even decidable given two definable structures, I and t, whether there exists a homomorphism from I to t. And this result we obtain by reducing it to the previous case. So it turns out that for any definable structure t, the problem, the definable constraint satisfaction problem over the template t is polynomial time reducible to a constraint, satisfact to a definable constraint satisfaction problem over some finite structure t t prime, which is computable from t. So, well, this solved this problem. And actually this construction is a generalization of a result of bodierski and Antoine, I don't know where he is, well, actually from the same paper that he was talking about, one of the papers he was talking about today.
00:17:24.484 - 00:18:30.794, Speaker B: So this reduction, it's also not very difficult to see that this reduction also gives us some results concerning complexity. So, well, one of the things that is not difficult to observe is that from dyslemma it follows that the complexity of the problem, the definable constraint satisfaction problem over definable structures is at most next time, well, you can actually have like, well, you can say more about complexity. So we don't have such a nice result as we have for finite templates, but, well, it's like from this it follows, like you can say more about complexity. Okay, so, well, let's go back to this, to this definition. So, well, we changed finite to definable here. We changed finite to definable here. So, well, what else can we make definable? So, well, so it's, so the only thing that remains finite on this picture is the number of relations.
00:18:30.794 - 00:19:26.302, Speaker B: So it's, well, if you already have definable templates, then maybe you want to have also a definable signature. This can allow you, for example, to have a predicate for every atomic, which could correspond to adding constants in the classical CSP. So, well, we also understood quite well this case, but unfortunately, it turns out that, okay, so this is our definable signature now. So unfortunately, it turns out that this variant of constraint satisfaction problem is not as well behaved. So there exists a definable structure t, of course, over a definable signature such that the problem becomes undecidable. But on the other hand, there are many cases where this problem is still decidable. In particular, if every relation.
00:19:26.302 - 00:20:18.448, Speaker B: So we can have infinitely many relation. But if every relation itself contains only finitely many tuples, then the problem is still decidable. And this can be solved very similarly to the case when the template is a finite structure. Okay, so I'm very close to a conclusion, so let me finish with a few remarks. So, first of all, I showed you some results for structures that are definable over atoms, which are, well, let's say, natural numbers with equality. So, well, those results holds in much more, much bigger generality. So, well, we didn't actually think about the complexity, but the decidability results.
00:20:18.448 - 00:20:53.380, Speaker B: Well, you have to make some model theoretic assumptions about the structure of atoms. Well, many of those model theoretical notions we already heard today, but I don't want to go into details, but, well, the decidability holds also for atoms that are ordered, which. Well, from the result that you have, from the proof that you have seen, it's pretty obvious, but also for atoms that are definable over a random graph and other structures. Okay, so does it matter what kind.
00:20:53.412 - 00:20:56.212, Speaker A: Of order it is? I mean, you use the order lambda.
00:20:56.268 - 00:21:39.196, Speaker B: Yes. It has to be the order, like the structure has to be isomorphic to the rational number with order. Okay, so the second point that I want to make at the end is that, well, I considered basically all possible variants of taking finite and putting instead definable, except for this one. So we keep the input to be a finite structure and consider a definable template. So this is actually. So this problem has actually been studied for a much longer time. And, well, Antoine told us quite a lot about this today.
00:21:39.196 - 00:22:37.614, Speaker B: So it was mostly studied for structures that are redux. Well, here in this, if we, if we consider a fixed definable template, this basically means that we consider structures that are fo, interpretable with, for example, natural numbers of equality. So, well, studying this class of problems in general seems to. Well, there will probably be some problems, but there are. Well, there are some results. There are already some results about, well, structures, for example, definable over natural numbers with equality and. Well, yeah, so bodieski and his co authors are working on this so well, and of course, and understanding those problems for arbitrary definable templates over some reasonable structure seems to be, I guess, for me, most interesting problem in this class of problems.
00:22:37.614 - 00:23:18.812, Speaker B: Okay. And finally, well, I think that this day is kind of a homomorphism isomorphism day. So let me mention a last thing, which is an open problem. So, well, I talked a lot about homomorphisms, different versions and most of them decidable. But there is a natural problem, well, isomorphism problem given two definable structures, a and b, say, over natural numbers of equality. So, well, in the model theoretic language is just two structures that are fo interpretable over natural numbers with equality. Can we decide whether those structures are isomorphic? So this is an open problem.
00:23:18.812 - 00:23:34.224, Speaker B: I really have no idea how to solve it. So it seems that all the techniques that we use to deal with homomorphisms do not work here. So. Well, if you have any ideas or if you like, no, let me know. Thank you.
00:23:40.164 - 00:23:42.704, Speaker A: We definitely have time for questions.
00:23:46.684 - 00:23:51.504, Speaker D: So I guess I just missed it. This is decidable.
00:23:52.324 - 00:23:56.144, Speaker B: Yes, maybe I didn't say it.
00:23:57.444 - 00:24:47.924, Speaker D: I mean, one way to use it, perhaps to give a bit answer to motivation, is that, I mean, many of your results show that if you pass from finite to orbit, finite or definable or whatever, you ask the question are things well behaved? And for CSP you show in many cases are indeed well behaved in the sense that it at least remains decidable. And of course, CSP can just be understood as an interesting fragment of NP or of existential second order logic, where many things work that do not work in the general setting. And so when I ask this question in general, for what parts of existential second order logic remain things reasonably well behaved when you go from finite to orbit finite or to definable? And do you know, other, say, studies in that direction?
00:24:50.664 - 00:24:52.984, Speaker B: Well, so, well, seismorphism probably can also.
00:24:53.024 - 00:25:01.694, Speaker D: Be seen in that context, right? I mean, obviously it's an NP problem where we don't know whether it's NP, you lift it to the definable setting.
00:25:02.434 - 00:25:09.734, Speaker B: Well, but we don't know if it's well behaved. Yeah, I don't know.
00:25:10.674 - 00:25:22.730, Speaker C: There is this other result by Federer and Barty that any way you increase the MMSMP within a quarterly due monotonicity, you hit all of NP. So what, that should give everything.
00:25:22.802 - 00:25:27.440, Speaker D: Then there question was, this remains true if I said this is not obvious.
00:25:27.632 - 00:25:50.980, Speaker B: Well, but like we obviously we, well, we already get out of NP in many cases. So, well, the notion of being well behaved has to be like, well, it becomes so, yeah, so the question is, I think that the question, the first question would be what would we want? What would we mean by well behaves here?
00:25:51.012 - 00:25:57.704, Speaker D: So the anagon for NP would be existential second order logic. P would probably be decided.
00:25:59.524 - 00:26:22.994, Speaker E: Like a comment on Eric's comment to interpret second order logic, probably best approach is to interpret the second order variables as also ranging only over orbit finite sets. Even so, an orbit finite set can have infinite many orbit finite subsets in it, so you still have enough stuff there to really worry about.
00:26:29.414 - 00:26:31.790, Speaker A: Are there any more questions then?
00:26:31.862 - 00:26:32.174, Speaker D: Thank you.
