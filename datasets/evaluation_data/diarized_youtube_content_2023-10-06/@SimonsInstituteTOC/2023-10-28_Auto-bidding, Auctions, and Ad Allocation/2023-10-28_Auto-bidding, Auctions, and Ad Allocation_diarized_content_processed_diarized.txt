00:00:00.280 - 00:00:55.674, Speaker A: When a user goes to a search engine and searches for something commercial, like a good or a service, then besides the regular organic results, the user also sees advertisements. You can think of it as the search engine connecting people who want to buy a good or service with sellers who want to sell it. So it's a matching in that sense. And I'm sure most of you are aware of this, but just a kind of brief background. How do advertisers bid on Google to get their ads shown at the correct, relevant places? And I'm going to call this the traditional bidding and auction setup, because I'm going to next talk about auto bidding. So imagine you are a math tutor in Berkeley. You come to the search engine and say, well, here are the keywords I'm interested in, and here are my bids for those keywords.
00:00:55.674 - 00:02:07.228, Speaker A: So if a user is searching for math tutor within the Berkeley region, then please show my ad. And I'm willing to pay up to $5 if the user clicks through, and so on. So the advertisers submits a whole table of keywords and bids, and then during online, when users actually come to the search engine and search for I need help with math, then various advertisers will bid on such relevant keywords get kind of triggered at this point, and a few of them are shown to this user. And we do this with an auction. So that auction has to consider the quality of the match over there of this particular advertiser and this user, as well as the bids that kind of reflect how much this advertiser thinks it's valuable to be shown. And for now, we'll just think of this auction as a kind of second price auction, which factors in the bids, but also some kind of quality scores. And we won't go much into auction design.
00:02:07.228 - 00:03:17.864, Speaker A: In the beginning, there's a whole area on ad auction design you must have heard of things like GSP and VCG and so on. And I'll add one more caveat, that there's a lot of other considerations which go into building the system. It's not just kind of the bid or the revenue. We have to worry a lot about the user experience and the kind of match quality, because that's finally where the value is being created, as well as the ROI that go to our advertising partners how much value they get out of the money. Listen, so it's not simply kind of a revenue maximization. Why run an auction? No need to tell this audience, it's a welfare and price discovery mechanism in this kind of highly dynamic, decentralized setting with a very large set of heterogeneous goods, from the math tutor to law firm, and the demand and supply change over time. And so now, with this kind of background, you can imagine that the auctions are mostly stateless in the sense that when a query comes in, we can do all this process and show an ad, and you can do all this in parallel across all these queries.
00:03:17.864 - 00:03:54.928, Speaker A: But what I'm going to talk about now is how all of these auctions tie into each other through some higher level bidder constraints. So what are these? So here's an example of a very kind of traditional bidder constraint. Here's this. Math Tutor, who puts in the targeting with the bid table, puts in certain bids. Let's say the targeting is for math tutor, and there are kind of 500 potential clicks for the month, and puts in a bid saying, I'm willing to pay up to a dollar per click. But then they also put in a budget for various reasons. And the budget could be a month.
00:03:54.928 - 00:04:54.636, Speaker A: And if you do the math then 500 times, something like $1 is much greater than 100. So this is kind of mismatched. And so that's a higher level bidding constraint that we have to somehow incorporate. And we can do it in various ways. We can think of the targeting as being too broad and the platform can kind of figure out what are the better places for this ad to show, or the bidding is too high. And in a lot of earlier work, which is reflected in this chapter with Nikhil Devanur, which is in this, a wonderful book, we formulated this question as an online budgeted allocation question, simply online matching question, together with the original paper, together with Amin Saberi and Vijay Vazirani and Umesh. And there the question was, you have all these kind of think of these bit tables and the budget constraints, and these queries are arriving online.
00:04:54.636 - 00:05:46.684, Speaker A: What is the best way to kind of do this bipartite allocation, so that no one goes above budget, but you still get a high enough value overall because you can't simply run the auction based on the original. And there's a lot of interesting follow up models and algorithms from a whole kind of, whole bunch of people here. So in this talk, I'm going to talk about something different, but this is the kind of background. So in this talk, we'll talk about decentralized allocation algorithms. So this work over here was kind of centralized, as the platform decides at this point, given the budget constraints and amount of spend, who should be matched. Now we're just going to talk about a completely decentralized allocation algorithm via this notion of automating. And please stop me for any questions.
00:05:46.684 - 00:06:45.574, Speaker A: So that's kind of the background of the talk. And let's talk about what is auto bidding. So I just explained the kind of traditional form of bidding, which is that the advertiser sends to the platform, very fine grained bidding tables. So it's basically a table of which keyword I'm interested in and what's the bid for that keyword, and possibly a budget and some other kind of constraints. In auto bidding, the advertiser sends to kind of the sends to. And so there's an auto bidding layer in between the advertiser and the auction platform, and the advertiser sends to the autobidder some very high level goals and constraints instead of this very detailed mid table. It's the autobidder's job to convert those goals and constraints into the per auction bid kind of at auction time.
00:06:45.574 - 00:07:52.000, Speaker A: And the job of the autobidder is to kind of bid optimally for this particular advertiser. The kind of entire picture is that there are lots of advertisers, and each one has an auto bidding agent which bids into the auctions. What do these goals and constraints look like? So one of them we already saw so product called budget optimizers, in that the advertiser says, well, I just want to maximize my number of clicks I get in this month, and my constraint is this budget, and you figure it out how to bid another one, which is a bit more interesting. And this is what we look at for the rest of the talk, is this auto bidding product called Target CPA. CPA stands for cost per acquisition. Acquisition is another name for a sale. So in that product, the advertiser comes and says, maximize the number of conversions I get from my campaign, which is the conversion is a sale.
00:07:52.000 - 00:08:34.790, Speaker A: Finally, and subject to this constraint that the average cost per conversion is no more than my target. So basically, the math tutor comes and says, like, you know, maximize the number of leads I get for students, but my average cost per student should be no more than $20. And what's kind of important here is it's an average cost and not a marginal cost. And then there are more kind of more fancier products as well. We won't go into that. So we talk about target CPA, and I'll kind of, again, reemphasize it's this kind of simple program. Maximize my number of conversions.
00:08:34.790 - 00:10:01.424, Speaker A: Okay, so conversion is also is another term for acquisition or sales. So maximize my number of conversions subject to my spend is no more than target times the number of conversions. Simply, my average spend is no more times this target. And so t is the number that the advertiser gives the automator. And this is kind of a very nice system because the advertiser can focus on their performance and take higher level decisions and kind of leave these very detailed bidding to the autobidding agent. And in this talk, we're going to talk about two kind of high level questions. Number one is, how would you design such an auto bidding agent? So how to bid as an auto bidding agent for a single advertiser, once you're given these goals and constraints? And then the second question is the matching question, which is that when all these auto bidders are competing against each other through the auctions, what will be the global welfare? And does that in equilibrium, basically? And does that welfare depend on the underlying auction design? So here's the first question, which is basically an optimization question.
00:10:01.424 - 00:10:59.978, Speaker A: So in the TCPA world, an advertiser comes to you and says, maximize my conversion, subject to my average cost is no more than target. In this paper, with Gaga, Nagarwal and Ashwin, we gave a more general framework which kind of captures all these products. And so here's this integer program. So which captures this auto bidding question. So what are these different, different terms? So I indexes all the different ad opportunities that this bidder could buy excise, should you buy the ith click or I th item? And Vi is the value for the ith click? And then there are a bunch of constraints. You could have multiple constraints, like a target constraint, a budget constraint, and so on each of these constraints, the left hand side is the expected spend. So whether you bought the item I or not.
00:10:59.978 - 00:12:03.674, Speaker A: And then what is the cost per click of the item? I add that all together, that's the expected spend. And then the right hand side of all these constraints is this kind of is the constraint where there's a budget kind of constraint, and then there's a constraint which is also linear in the xi. So essentially, overall, all of these constraints say that it's a constraint on the spend where the cap is itself a function of the bundle that you get. So let's see why this kind of makes sense. So, if you take the budget optimizer setting where you want to maximize clicks, so the Vi is just one, and you just have a budget constraint. So you said this, you have one constraint, you set the b equal to the budget, and then you don't have any of this kind of this weird term over here, simply saying my spend is at most the budget. But if you take this more complicated constraint like target CPA, remember, you want to maximize the number of conversions so you can set Vi to be the probability of getting a conversion.
00:12:03.674 - 00:12:42.686, Speaker A: If you chose this item, I, we call that the conversion rate. And then you have this average cost constraint. So you don't need the b. There's one constraint, you don't need the b part of it, but the average cost constraint should be something like my total cost divided my, divided by my total conversions is at most this target. So if you read through it, then basically I can just set each wi to be kind of the target times the conversion rate. So you don't have to kind of. This is just a way of saying that this general LP captures budget constraints, captures target constraints and a whole lot of other constraints.
00:12:42.686 - 00:13:21.534, Speaker A: Why don't you put it. Two separate constraints, one command. These are separate constraints. Sorry. Okay, this is a more general thing where maybe you come up with a constraint, come up with a product which has a budget and something else, no other particular reason, but these two examples show that you either need to be or. Okay, so now given this. So now what's your job is like, there are all these ad opportunities, and you want to pick a bundle for this advertiser.
00:13:21.534 - 00:14:27.434, Speaker A: Suppose you had this integer program in relaxer to a linear program, and you had all the data, including the costs for every item, which kind of is not really known. Then you could just solve it and say, well, I optimized it, and I want this bundle of items. And our question is, well, you can't do that. In this online system, can a simple bidding formula lead to the same outcome? So what's the difficulty? Well, you can't, you don't get to pick, you don't get to see all the items and pick a subset. You can only win an item through the auction by bidding into the auction. And furthermore, you don't get to see those CPC's which are part of this integer program because you have no idea what the competition is. So it's kind of like, if you put it that way, then it's a difficult task that, how do you solve that LP through the bidding in an auction? But indeed you can do this.
00:14:27.434 - 00:16:07.514, Speaker A: And like a moment's thought kind of shows that you can. So here's the primal LP again, and then you can kind of use Lagrangian or, you know, write the dual variable, the dual LP, and, you know, I won't go into this linear program, but basically, the dual constraint and the kind of the complementary slackness conditions tell you that you want to take items where this constraint is tight, which essentially, if you rewrite, turns out to be this, that you want to take all the items and only those items where the cost is at most this formula, this formula contains the vi, which is known to you, the value, it contains this constraint, constraint w, and then it contains these dual variables. So you want to pick all the items whose cost is at most this. And now if the underlying auction was, let's say a second price auction, then all you need to do is bid this amount, and then you'll win the item if the cost is less than that amount, and you won't win the other items which cost you more than this amount. So the fact that the optimality constraint turns out to be of this form tells you that you can actually implement it in a second price auction very simply by just bidding this form. And you can generalize this to kind of all truthful auctions, not simply second price, where if you want something less than a cost, you just bid that value. But I won't go.
00:16:07.514 - 00:17:02.144, Speaker A: So here's kind of the theorem from the paper is that this bidding formula, I'll call it the uniform bidding formula, is optimal if and only if the auction is truthful. And of course, that bidding formula depends on the dual parameters. This is going to become important later, those alphas in the formula, because those dual parameters depend on what competition is out there and what are the other people bidding. In a practical system, you can learn this from past data. You can have online kind of algorithms to do that. But it's interesting that you can now connect the truthfulness, the incentive compatibility of the underlying auction with the ease of bidding optimally. So, for example, if the underlying auction was a first price auction, then you don't have such a nice formula because then you want to kind of very detailed bidding.
00:17:02.144 - 00:18:08.580, Speaker A: Okay? And so the end of this section, like you can kind of forget how we arrived at this uniform bidding formula. But just remember this for the rest of the talk that you're going to focus on this TCPA product. And in that case, the bidding formula is a simple, we'll call it a uniform bid scaling, where given the value for an item, which is just a conversion rate for that item, your bid is a multiplier times a value, and that multiplier is a number that you come up. That's basically the dual variable. So you want to be kind of proportional to your value, which is very natural. Course, so far you've seen how to bid on behalf of one advertiser. And now the question is the matching question, where you have basically multiple agents bidding on behalf of one advertiser each, their bids depend on each other because they're multipliers.
00:18:08.580 - 00:19:14.204, Speaker A: These multipliers here depend on what other bidders are bidding. And so we have to now think about the allocation equilibrium. So at this point, it's important to step back and see kind of where like how does this connect to advertiser utilities? And if you, one way to think about it is that this, these kinds of constraint based auto bidding products model the advertisers utilities slightly differently from the classic setting. Classic setting is quasi linear. You want to maximize profit, value minus cost. While these things, including just simply budget constraint, we can call them value maximizing objectives, where you want to maximize my value, subject to this kind of average cost constraint, or a budget constraint. And we are going to like for the rest of the talk, take that utility function or that objective, at least as literally what we want to achieve after this.
00:19:14.204 - 00:20:02.894, Speaker A: If you assume these are the true objectives, how does this change the way you would design an auction? For example, in a classic quasi linear setting, we know that a second price auction, VCG, would maximize welfare. Does that kind of still hold here? Or. Yeah, that's the question they would look at. And that kind of whole allocation question is tricky because as I said, the bid formulas all depend on each other. So it's like, it's a kind of a dynamic equilibrium system. In this talk, we will look at what happens in the bidding equilibrium. So given the advertiser inputs, basically the targets as fixed, we're just going to think about what will be the outcome in the bidding equilibrium.
00:20:02.894 - 00:21:08.074, Speaker A: There is a larger question here, which we won't really address in this talk, which is what's the entire mechanism design over here? Even under these kinds of utility functions, where the targets can be strategically provided, or the utility function is really quasi linear, but they are bidding through these targets. There's some preliminary work, very interesting work, but we will, I'll just touch upon it at the end. It's really a lot of future work to be done here. Okay, so now, so with that kind of caveat, right, we want to think about the equilibrium matching and how to measure its value or welfare. And so remember, this is the TCPA problem for each advertiser, maximize my conversion, subject to my average cost per conversion, is at most my target. And now you can think about what's the global measure of welfare over here? Each one wants to maximize conversion. So you might think just like add up all the objective functions, add up all the conversions, and that's your welfare.
00:21:08.074 - 00:22:13.494, Speaker A: But they do have these different targets. And so turns out, like, different ways to think about it, that this is a good measure of welfare efficiency, which is the total number of conversions, but target weighted. So each advertiser's number of conversions gets weighted by its stated target. And as I said, it's a very kind of natural, intuitive definition, that is the target weighted number of conversions. But you can come through it from kind of a more formal way, which is the notion of liquid welfare. One of the authors is in the room here, which was defined for the budgeted setting. And the idea there was that, well, if you give, if a bidder states a very high value for bunch of items, but is capped by a very small budget, you should really cap the welfare by that kind of budget value, because the kind of the value items are constrained by the willingness to pay.
00:22:13.494 - 00:23:21.966, Speaker A: And again, over here, if you think of the value as the cap on the spend that a particular bundle gives you and keep that as the cap, that's called the liquid welfare. And it turns out to be, again, precisely just the target weighted number of conversions. So this is the, our measure of efficiency, target weighted number of conversions. And now we want to ask, what is a good matching and what kind of matchings do we achieve? So what's the optimal allocation here? Remember, we want to maximize the target weighted number of conversions. Then you should just give each item to that bidder who maximizes the contribution to the sum. We just simply give the item to the bidder which maximizes its target times its conversion rate for this item. Is that clear? So let me say this a bit more carefully.
00:23:21.966 - 00:24:26.714, Speaker A: So if you want to maximize this notion of efficiency in a matching, then you want to give each item to the advertiser who maximizes this form. This form is simply my target times my number of conversions. So that's the optimal allocation if you could ignore the auction and just simply give items to bidders as you want. In the equilibrium, each bidder is bidding according to this formula, right, which is the bid proportional to your value. And so you may not achieve this optimal allocation because you're not necessarily giving the item to the highest value bidder, you're giving it to the highest bid bidder. And the bids kind of depend on each other through this very complicated dynamics. And so this is the way we kind of distinguish across different auctions, which is how much value do you lose in the bidding equilibrium.
00:24:26.714 - 00:25:09.054, Speaker A: And we use this notion, which is called price of anarchy, but simply the suboptimality in equilibrium versus the optimal. And in the worst case. So we take the worst case instance and see the optimal efficiency versus the equilibrium efficiency. And this number is greater than or equal to one. If it's one, then you got a perfectly optimal solution, and then the larger it is, the worst that solution. And in the paper I mentioned, we proved the following result. That if the underlying auction is a second price auction, or VCG, in more general settings, then the price of anarchy is two, which means that you could be.
00:25:09.054 - 00:25:47.064, Speaker A: Yeah, your value could be half as bad as the optimal matching. And just to kind of reemphasize that's happening, because you cannot allocate in a centralized manner, which you would like to just give each item to the one with the highest target times conversion rate. Instead, you have to allocate through the auction and through this whole bidding. And I won't give a proof, but here is kind of the core of what's happening here. And here's, in fact, an example why you get factor two. Okay, so there are two bidders here, a and b, and just two queries, p and q. And a has a value of one for p.
00:25:47.064 - 00:26:16.064, Speaker A: B has a value of almost one for q. And then there is this cross edge where a has a little bit of value for q. Okay, if you give it to me, I'll get a value of epsilon. Well, b doesn't care about p at all. So, like, for folks who work on online matching, this is the classic kind of z graph. And what we would like to do is give p to a and q to b, because that's the highest value bidder for that item, unless they both the targets are one. So they are kind of equally weighted.
00:26:16.064 - 00:27:01.840, Speaker A: Right? And so your optimal efficiency would be two minus epsilon. But instead, in this bidding under second price auction, a has an a's optimal bid is to put a very high multiplier on its value, so that you bid one for p and you bid one above. Sorry. You bid, like, very high number for p, one over epsilon, and you bid, basically epsilon times one over epsilon. So you bid one for q, while b just bids its value because it only has this one item to bid. So a, in some sense, is bidding proportional to its value for the entire bundle. And now, under a second price auction, p is basically free for a because there's no competition there.
00:27:01.840 - 00:27:51.294, Speaker A: So bidding a high number doesn't matter, and then it's getting a value of one for a cost of zero over here, and therefore it can afford to spend one to grab this item q from b and still be within its target constraint, because the value would be. Value would be about one and the cost would be about one. So it gets a little bit more through this bidding system, and both the items go to a, and so the value actually is just one plus epsilon. And that's how you get this price of anarchy of two. Yeah, this is what I said. A gets p for basically free, which enables a high bid for Q. And that's essentially what's happening when then you can prove the factor of two.
00:27:51.294 - 00:28:51.634, Speaker A: Okay, so now the kind of the rest of the questions we ask is, can we improve over VCG? I mean, it's already kind of surprising, maybe in some sense, that VCG is not the most efficient auction, but that's simply an artifact of the objective functions here. It's not quite linear. So, can another prior free auction lead to better welfare in equilibrium, or is half the best you can hope for? So that's the question we address next. And prior free basically means the auction only works on the bids without any kind of extra information, like a bayesian prior, like a second price or first price. So now for the rest of the talk, I'll talk about improving the equilibrium welfare through different auction designs. And so, in. Oh, I.
00:28:51.634 - 00:29:41.794, Speaker A: So in another paper in www, it proved that there is a truthful auction is randomized. We'll call it rand, with two parameters, alpha and p, which achieves a better price of anarchy for the case of two bidders, better by a little bit, 1.89. But it's interesting that it can beat bound of two. And then you also prove that no truthful auction can achieve better than two. If the number of bidders grows to infinity. If the competition is very intense, then you cannot beat two. But with low competition, you can actually beat two and do better than second price.
00:29:41.794 - 00:29:57.924, Speaker A: And here's the randomized auction. It's kind of pretty natural. So we'll call it rand. And I said there's another parameter, p. But for this, I'll just fix that to be one third. So you have two bidders. There's a higher bidder and lower bidder in this auction.
00:29:57.924 - 00:30:55.290, Speaker A: If the higher bidder beats the lower bidder's bid by a factor of alpha, so with a margin, then it wins. And otherwise, if the bids are within a margin, then we'll do a lottery, but with the bias towards the higher bidder. Okay, so if you beat by a margin, then you get with probability one. If you're within a margin, then you get with probability two thirds, and with probability one third, the lower bidder wins. And then the pricing will be whatever natural, truthful pricing falls out of. This illustrates this auction for two bidders, where the second price auction, this is the other bidders bid, and this x axis is your bid. The second price auction, you don't win if you're lower, and then you win the entire item if you are higher.
00:30:55.290 - 00:31:57.764, Speaker A: And this is kind of a smoother allocation function if you start winning when you're within a margin, and then you win higher probability, and then you win for sure. What's the intuition here? Like, you can think of it as it's a fair allocation, and loosely used term that, well, if the bids were equal, then you ideally want to randomize 50 50. And this is like a smooth extrapolation of that. And you can think of other such randomized schemes, like, for example, comparing with a coarse lens. So if the two bits are within a margin, I'm going to think of it as 50 50. Otherwise there's a winner, and such a thing will give similar results. Okay, so again, I won't go into the proof of that like theorem, but coming back to this example, like, this is the example that kind of failed, or the worst example for second price, where bidder a was getting p for free, getting a lot of value there, so it could afford to bid high for q and kind of get that little bit of value from q.
00:31:57.764 - 00:32:48.004, Speaker A: Okay, so now with the same bids, let's see what happens at q. So, bidder a does get p for free still. But what happens at q is that since the bids are more or less equal, a can only win with certain probability, like, uh, probability, for example. And with one third probability, you do, you make, you make the right allocation. Q goes to B. A could try and raise its bid to get q because, you know, I, I have got this for free, so can I actually get more of q? But now if you try and get more of q, then it has to pay more, and therefore that violates its TCPA constraint. So in some sense, the kind of this subsidization that's going on across the bundle is reduced through this.
00:32:48.004 - 00:33:16.024, Speaker A: Through this. And so you could prove this theorem where, okay, so there's certain choice of parameters. You get 1.89 as the, as the price of anarchy. But this also gives a tight example where you reduce this value to 0.9. And then that's a tight example for this, this auction. So this auction doesn't do better than 1.89
00:33:16.024 - 00:34:09.584, Speaker A: either. And the second part of that paper says that as the number of bidders grows, then you really are back to this factor of two. And that kind of bad example looks something like follows. This thing in the red box is just the old example with the Z graph, but it's just straightened out. And then you just take multiple copies of that and kind of connect across. It's a little bit hard to follow, but basically just a amplified version of the Z graph shows you that if you have many bidders, all the A's and all the B's, then kind of the intense competition will make it hard to achieve better than a factor. So now I should have, maybe this is the more natural question.
00:34:09.584 - 00:34:53.064, Speaker A: If second price is factor two, then what about first price auction? Looks like over here, all this subsidization is hurting you. So why not do first price auction, but first price auction? A little tricky because it's not truthful. And so that bidding formula, optimality, doesn't hold anymore. So you have to think through the optimal bidding in this scenario. And we could prove in this separate result that the price of anarchy for first price auction is back to a factor of two. So first price auction doesn't give you an added benefit over second price, even though that randomized truthful auction did. And it's the same kind of example where it's the same example, but now you're not bidding proportionally.
00:34:53.064 - 00:35:46.544, Speaker A: So what a can do is bid zero for P and get it for zero, and then bid a value of one for Q and get it for one. And that's good enough for it because its cost is one and the values. So you're back to two through this optimal. And now one can ask like an additional question, which is we saw that a randomized auction in the truthful setting with smooth auction, got you a benefit less than two. I mean, benefit over two. So could you come and simply non truthfulness, like a first price auction doesn't. Can you combine these two on truthfulness and randomization and maybe do better? And so that's the question we asked in this paper over here.
00:35:46.544 - 00:36:17.442, Speaker A: And the answer is that for deterministic auctions, you cannot just like we saw that. Yeah, so we just saw that for deterministic auctions, non truthfulness doesn't help. Like first price auction. But there is a way to have a non truthful and randomized auction, which we can call randomized first price, maybe where you can even beat this 1.89 and get a little bit lower 1.8. And that's an interesting question. I mean, this is an interesting result.
00:36:17.442 - 00:36:58.494, Speaker A: Again, this is for two bidders competing against each other. And there's another result where as the number of bidders grows to infinity, then neither non truthfulness nor randomization helps. So the similar kind of complicated instance that I had earlier shows that result as well. In this whole kind of work about matching under is auto bidding, there are some further future questions that I'll highlight. To conclude I focused on prior free auctions. So they just look like, take in the bid and then, you know, do something with the bids. You could have priors.
00:36:58.494 - 00:37:46.356, Speaker A: That's the natural model. And if you have priors on the values, can you do better? This result by my colleagues at Google shows that if you, if you had an estimate of all these values on these edges, basically the values, you could then improve much further over two. For example, if you had a gamma estimate of the value, then you could set kind of a per bidder reserve based on that estimate. And then you could achieve a factor which is of this form, one plus gamma divided by two. So if gamma is zero, that means your estimate is very bad. Then you're back to a half. If gamma is one, that means you got very accurate estimates.
00:37:46.356 - 00:38:27.620, Speaker A: Then you got the optimal allocation. Here's another open question, which is back to the prior free auctions world. What is an optimal auction with this definition of optimality under TCPA bidders? And look at the price of anarchy in equilibrium. And we believe it's better than this kind of 1.8 that we, we show probably needs both kind of the non truthfulness and randomization aspects. There are other interesting questions. For example, we didn't actually talk about how do you get these multipliers, the bidding multipliers.
00:38:27.620 - 00:39:37.064, Speaker A: And that's the whole question about online learning algorithms, where you learn this multiplier over time through various convex optimization techniques. In a very nice papers on that coming out recently, and I mentioned this a little bit earlier, which is, again, I'll emphasize that we are talking about the quality of the equilibrium, assuming that the targets which are entered are fixed. We didn't talk about the mechanism design in this talk. That's a kind of very interesting question. How do you design mechanisms under such an auto bidding setting? And again, there could be like two versions of it. One is where you take this kind of objective literally, saying that you want to maximize conversion subject to this average constraint. Or you can talk about classic profit maximizing quasi linear advertisers using target interfaces and there's some nice results recently from these papers.
00:39:37.064 - 00:41:33.448, Speaker A: Another question that we asked with Andres Pelroth is why would quasi linear bidders or advertisers choose target type knobs? Why would I talk about average cost if I have marginalized? And that turns out to be an interesting question related to the notions of commitment and credibility in auctions. Did you take any questions or it seems that at least when displayed options, industry moves more, but do we know how to do it? Yeah, so that's great question. If the auctions are not truthful, how do you bid? It's a much larger question. There's a lot of work on that in this particular formulation. Just sticking to this theoretical question, you can look at properties of those optimal bidding and then kind of generate the price of an AC math based on those properties. That is why this kind of between 1.8 and one kind of, maybe the optimal is close to 1.5.
00:41:33.448 - 00:42:12.654, Speaker A: That gap is over there in kind of strictly classifying what the optimal bidding. So that is assuming that it's multiplier. No, no. If it's a multiplier, and none so multiplier is not an optimal strategy for non truthful auctions. And in fact, maybe I should have mentioned it. If you have a multiplier strategy for first price, then you essentially end up with the optimal solution globally, although it's locally not optimal. All right, let's go for lunch and convenient one team.
